# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.5.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-04 09:46+0200\n"
"PO-Revision-Date: 2014-02-14 15:26+0500\n"
"Last-Translator: Vitaliy Dorokhin <seryimysh@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.6.4\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"Language: ru_RU\n"

# 20f5f3ce396d461caad5069b50f480a7
#: ../../internals/committers.txt:3
msgid "Django committers"
msgstr ""

# 391033f28bd84c1f86283e048134000c
#: ../../internals/committers.txt:6
msgid "The original team"
msgstr ""

# 6ce8e84e7ca1473fbb7590f43481408f
#: ../../internals/committers.txt:8
msgid ""
"Django originally started at World Online, the Web department of the "
"`Lawrence Journal-World`_ of Lawrence, Kansas, USA."
msgstr ""

# 5562daa0084248aa99f8eb2e1c17307e
#: ../../internals/committers.txt:21
msgid "`Adrian Holovaty`_"
msgstr ""

# 3bd260dd62304a32af959a55090dbaf0
#: ../../internals/committers.txt:12
msgid ""
"Adrian is a Web developer with a background in journalism. He's known in "
"journalism circles as one of the pioneers of \"journalism via computer "
"programming\", and in technical circles as \"the guy who invented Django.\""
msgstr ""

# bba6a1dfdbc64b1d90fa3ef83815db3a
#: ../../internals/committers.txt:16
msgid ""
"He was lead developer at World Online for 2.5 years, during which time "
"Django was developed and implemented on World Online's sites. He was the "
"leader and founder of EveryBlock_, a \"news feed for your block.\" He now "
"develops for Soundslice_."
msgstr ""

# 1f5b3b9fb36e477ab98a9412aa640251
#: ../../internals/committers.txt:21
msgid "Adrian lives in Chicago, USA."
msgstr ""

# 5ed28c032fc34cc8aebfc9e5dc199d6b
#: ../../internals/committers.txt:30
msgid "`Simon Willison`_"
msgstr ""

# 0f508445a9e1475f9ac666086e9d5628
#: ../../internals/committers.txt:24
msgid ""
"Simon is a well-respected Web developer from England. He had a one-year "
"internship at World Online, during which time he and Adrian developed Django "
"from scratch. The most enthusiastic Brit you'll ever meet, he's passionate "
"about best practices in Web development and maintains a well-read `web-"
"development blog`_."
msgstr ""

# 70cbbd12409a40d892f3a95d68aa0cbd
#: ../../internals/committers.txt:30
msgid "Simon lives in Brighton, England."
msgstr ""

# bb0ca867329b49e4828d1f512ddb6b85
#: ../../internals/committers.txt:39
msgid "`Jacob Kaplan-Moss`_"
msgstr ""

# 4cefc5ce87394071b590f9e5983860c3
#: ../../internals/committers.txt:33
msgid ""
"Jacob is a partner at `Revolution Systems`_ which provides support services "
"around Django and related open source technologies. A good deal of Jacob's "
"work time is devoted to working on Django. Jacob previously worked at World "
"Online, where Django was invented, where he was the lead developer of "
"Ellington, a commercial Web publishing platform for media companies."
msgstr ""

# 921b466acefc4b1d9ded555c92974105
#: ../../internals/committers.txt:39
msgid "Jacob lives in Lawrence, Kansas, USA."
msgstr ""

# 4f49bbd807fb490d80b9c47d2b49f1cf
#: ../../internals/committers.txt:47
msgid "`Wilson Miner`_"
msgstr ""

# 0b8cc448409c4499ac2f905e258554f2
#: ../../internals/committers.txt:42
msgid ""
"Wilson's design-fu is what makes Django look so nice. He designed the Web "
"site you're looking at right now, as well as Django's acclaimed admin "
"interface. Wilson was the designer for EveryBlock and Rdio_. He now designs "
"for Facebook."
msgstr ""

# c1ad7bf63f2e4b3abcfa377153b7006f
#: ../../internals/committers.txt:47
msgid "Wilson lives in San Francisco, USA."
msgstr ""

# 7f34c349a0de4170b0d7859390c5b949
#: ../../internals/committers.txt:60
msgid "Current developers"
msgstr ""

# d4a9d2974e654ae0b327cfc4503de0b6
#: ../../internals/committers.txt:62
msgid "Currently, Django is led by a team of volunteers from around the globe."
msgstr ""

# 52d116f8182a4479a217e099d98e55b5
#: ../../internals/committers.txt:67
msgid "BDFLs"
msgstr ""

# 47ae87b9579248fd9b89d99f16fcd386
#: ../../internals/committers.txt:69
msgid ""
"Adrian and Jacob are the Co-`Benevolent Dictators for Life`_ of Django. When "
"\"rough consensus and working code\" fails, they're the ones who make the "
"tough decisions."
msgstr ""

# 8acc878eb40d4b68b96fd5b305856a98
#: ../../internals/committers.txt:76
msgid "Core developers"
msgstr ""

# 8fd78906bf454226ae4c09d546bd247d
#: ../../internals/committers.txt:78
msgid ""
"These are the folks who have a long history of contributions, a solid track "
"record of being helpful on the mailing lists, and a proven desire to "
"dedicate serious time to Django. In return, they've been granted the coveted "
"commit bit, and have free rein to hack on all parts of Django."
msgstr ""

# d27a9971fd564d56b3f1ce0054b4a5d6
#: ../../internals/committers.txt:89
msgid "Malcolm Tredinnick"
msgstr ""

# 12b9a6be208b41b0a3b73fb4b48835fe
#: ../../internals/committers.txt:84
msgid ""
"Malcolm originally wanted to be a mathematician, somehow ended up a software "
"developer. He's contributed to many Open Source projects, has served on the "
"board of the GNOME foundation, and will kick your ass at chess."
msgstr ""

# a6b8b364d41549ffa77d571338b5f987
#: ../../internals/committers.txt:88
msgid ""
"When he's not busy being an International Man of Mystery, Malcolm lives in "
"Sydney, Australia."
msgstr ""

# f7d02e70944848daba671cf8b2936d3c
#: ../../internals/committers.txt:101
msgid "`Russell Keith-Magee`_"
msgstr ""

# 33558ce0aec2459f8e3b27f459e4d0c4
#: ../../internals/committers.txt:92
msgid ""
"Russell studied physics as an undergraduate, and studied neural networks for "
"his PhD. His first job was with a startup in the defense industry developing "
"simulation frameworks. Over time, mostly through work with Django, he's "
"become more involved in Web development."
msgstr ""

# 121faca9cae7459ea902863d5cc9c955
#: ../../internals/committers.txt:97
msgid ""
"Russell has helped with several major aspects of Django, including a couple "
"major internal refactorings, creation of the test system, and more."
msgstr ""

# 5b5d498402a649ea801e442d2410ec17
#: ../../internals/committers.txt:100
msgid ""
"Russell lives in the most isolated capital city in the world â€” Perth, "
"Australia."
msgstr ""

# 445c75faba4f4a339942c474c227ac54
#: ../../internals/committers.txt:117
msgid "Joseph Kocherhans"
msgstr ""

# 59c616fa81574a1393a2f74d3a7b2c0d
#: ../../internals/committers.txt:106
msgid ""
"Joseph was the director of lead development at EveryBlock and previously "
"developed at the Lawrence Journal-World. He is treasurer of the `Django "
"Software Foundation`_. He often disappears for several days into the woods, "
"attempts to teach himself computational linguistics, and annoys his "
"neighbors with his Charango_ playing."
msgstr ""

# 3d571d4ab7914158bcd32cd162220bb6
#: ../../internals/committers.txt:112
msgid ""
"Joseph's first contribution to Django was a series of improvements to the "
"authorization system leading up to support for pluggable authorization. "
"Since then, he's worked on the new forms system, its use in the admin, and "
"many other smaller improvements."
msgstr ""

# e51b3b6c65f444a2b8197daeda00e275
#: ../../internals/committers.txt:117
msgid "Joseph lives in Chicago, USA."
msgstr ""

# ab419ffb05d3471289958c3d6ad7b1c7
#: ../../internals/committers.txt:134
msgid "`Luke Plant`_"
msgstr ""

# 06904921f90a4a659f8f52ea0fae84c0
#: ../../internals/committers.txt:123
msgid ""
"At University Luke studied physics and Materials Science and also met "
"`Michael Meeks`_ who introduced him to Linux and Open Source, re-igniting an "
"interest in programming.  Since then he has contributed to a number of Open "
"Source projects and worked professionally as a developer."
msgstr ""

# 2b630d3c6e51472db4b2c802af31c1ea
#: ../../internals/committers.txt:129
msgid ""
"Luke has contributed many excellent improvements to Django, including "
"database-level improvements, the CSRF middleware and many unit tests."
msgstr ""

# 947c1da404424bfc9c40f9491198459b
#: ../../internals/committers.txt:133
msgid ""
"Luke currently works for a church in Bradford, UK, and part-time as a "
"freelance developer."
msgstr ""

# ae8f28dd80524d6a9fa8592d2d52fe08
#: ../../internals/committers.txt:149
msgid "`Brian Rosner`_"
msgstr ""

# c2977d83107a4865a77f926444fe107b
#: ../../internals/committers.txt:140
msgid ""
"Brian is currently the tech lead at Eldarion_ managing and developing "
"Django / Pinax_ based Web sites. He enjoys learning more about programming "
"languages and system architectures and contributing to open source projects. "
"Brian is the host of the `Django Dose`_ podcasts."
msgstr ""

# 03426b7270384520aff5592415479f6d
#: ../../internals/committers.txt:145
msgid ""
"Brian helped immensely in getting Django's \"newforms-admin\" branch "
"finished in time for Django 1.0; he's now a full committer, continuing to "
"improve on the admin and forms system."
msgstr ""

# 8c5367a9500448fca2c0e542e2af2926
#: ../../internals/committers.txt:149
msgid "Brian lives in Denver, Colorado, USA."
msgstr ""

# c012c6e09a6f41978dff74548c0f0d9a
#: ../../internals/committers.txt:166
msgid "`Gary Wilson`_"
msgstr ""

# 9d07e130642f47cdb8f74fae2c466066
#: ../../internals/committers.txt:157
msgid ""
"Gary starting contributing patches to Django in 2006 while developing Web "
"applications for `The University of Texas`_ (UT).  Since, he has made "
"contributions to the email and forms systems, as well as many other "
"improvements and code cleanups throughout the code base."
msgstr ""

# bc87ab315f494b8893d13a0cf3000e5c
#: ../../internals/committers.txt:162
msgid ""
"Gary is currently a developer and software engineering graduate student at "
"UT, where his dedication to spreading the ways of Python and Django never "
"ceases."
msgstr ""

# b9e34d2f71cc4dd69d4b32a75cff85db
#: ../../internals/committers.txt:166
msgid "Gary lives in Austin, Texas, USA."
msgstr ""

# d846529ebdf9489b85b66afe594a0974
#: ../../internals/committers.txt:180
msgid "Justin Bronn"
msgstr ""

# 68f5ea1568f744c79378ef69da98bb8c
#: ../../internals/committers.txt:172
msgid ""
"Justin Bronn is a computer scientist and attorney specializing in legal "
"topics related to intellectual property and spatial law."
msgstr ""

# a4975338ee494c1b887aa823875726e4
#: ../../internals/committers.txt:175
msgid ""
"In 2007, Justin began developing ``django.contrib.gis`` in a branch, a.k.a. "
"GeoDjango_, which was merged in time for Django 1.0.  While implementing "
"GeoDjango, Justin obtained a deep knowledge of Django's internals including "
"the ORM, the admin, and Oracle support."
msgstr ""

# a2cfd20b84f5417ab04a720f04659b54
#: ../../internals/committers.txt:180
msgid "Justin lives in San Francisco, CA."
msgstr ""

# 0f3d806704414ed985b0e8cb2c4d3db8
#: ../../internals/committers.txt:192
msgid "Karen Tracey"
msgstr ""

# cdb4a7061da94215bffdc50d65ae2f79
#: ../../internals/committers.txt:185
msgid ""
"Karen has a background in distributed operating systems (graduate school), "
"communications software (industry) and crossword puzzle construction "
"(freelance).  The last of these brought her to Django, in late 2006, when "
"she set out to put a Web front-end on her crossword puzzle database. That "
"done, she stuck around in the community answering questions, debugging "
"problems, etc. -- because coding puzzles are as much fun as word puzzles."
msgstr ""

# 5335bf5dd1e54101a94dd5dc6915239a
#: ../../internals/committers.txt:192
msgid "Karen lives in Apex, NC, USA."
msgstr ""

# 5747172fb2814a818c899f71b4df5ae0
#: ../../internals/committers.txt:203
msgid "`Jannis Leidel`_"
msgstr ""

# 8cc205a7b7c74b009583eff8384171de
#: ../../internals/committers.txt:195
msgid ""
"Jannis graduated in media design from `Bauhaus-University Weimar`_, is the "
"author of a number of pluggable Django apps and likes to contribute to Open "
"Source projects like virtualenv_ and pip_."
msgstr ""

# 80b292f6967c41729d4b1eddca0d792a
#: ../../internals/committers.txt:199
msgid ""
"He has worked on Django's auth, admin and staticfiles apps as well as the "
"form, core, internationalization and test systems. He currently works as the "
"lead engineer at Gidsy_."
msgstr ""

# b786f09db0f44d098885c2fc9a1800cb
#: ../../internals/committers.txt:203
msgid "Jannis lives in Berlin, Germany."
msgstr ""

# 332d37d0e2d141bfb1ef0b2171a7d377
#: ../../internals/committers.txt:220
msgid "`James Tauber`_"
msgstr ""

# 2be44b6c49474f82a6e20af83e67f51b
#: ../../internals/committers.txt:212
msgid ""
"James is the lead developer of Pinax_ and the CEO and founder of Eldarion_. "
"He has been doing open source software since 1993, Python since 1998 and "
"Django since 2006. He serves on the board of the Python Software Foundation "
"and is currently on a leave of absence from a PhD in linguistics."
msgstr ""

# 8f9e3e0b74f3409086bd4edbf97dc741
#: ../../internals/committers.txt:218
msgid ""
"James currently lives in Boston, MA, USA but originally hails from Perth, "
"Western Australia where he attended the same high school as Russell Keith-"
"Magee."
msgstr ""

# beb57813c173443d985423277b87e327
#: ../../internals/committers.txt:230
msgid "`Alex Gaynor`_"
msgstr ""

# 973b30eea2af4faa8bf0978b9653816c
#: ../../internals/committers.txt:225
msgid ""
"Alex is a software engineer working at Rdio_. He found Django in 2007 and "
"has been addicted ever since he found out you don't need to write out your "
"forms by hand. He has a small obsession with compilers.  He's contributed to "
"the ORM, forms, admin, and other components of Django."
msgstr ""

# b698028dc6de4d0e9fb6ce05b2b4e291
#: ../../internals/committers.txt:230
msgid "Alex lives in San Francisco, CA, USA."
msgstr ""

# 74a014dc211840efb852e48b7505d4cf
#: ../../internals/committers.txt:242
msgid "`Andrew Godwin`_"
msgstr ""

# 476d1edd025f4f999e7f5bb47637b71d
#: ../../internals/committers.txt:236
msgid ""
"Andrew is a freelance Python developer and tinkerer, and has been developing "
"against Django since 2007. He graduated from Oxford University with a degree "
"in Computer Science, and has become most well known in the Django community "
"for his work on South, the schema migrations library."
msgstr ""

# 6eb8130a3b6a48d9a58fbcb6c98b2e5e
#: ../../internals/committers.txt:242
msgid "Andrew lives in London, UK."
msgstr ""

# a6f0ddcefe3045498e8b33b3c5eefc3c
#: ../../internals/committers.txt:252
msgid "`Carl Meyer`_"
msgstr ""

# f936653a6fb9425a925891df111ce046
#: ../../internals/committers.txt:247
msgid ""
"Carl has been working with Django since 2007 (long enough to remember "
"queryset-refactor, but not magic-removal), and works as a freelance "
"developer with OddBird_.  He became a Django contributor by accident, "
"because fixing bugs is more interesting than working around them."
msgstr ""

# 90581f451ee5410eba48548c72caf0ee
#: ../../internals/committers.txt:252
msgid "Carl lives in Rapid City, SD, USA."
msgstr ""

# def76afd11b94896a65a17797cf594d1
#: ../../internals/committers.txt:266
msgid "Ramiro Morales"
msgstr ""

# 87f08e4467f341408567663792d4cf0b
#: ../../internals/committers.txt:258
msgid ""
"Ramiro has been reading Django source code and submitting patches since "
"mid-2006 after researching for a Python Web tool with matching awesomeness "
"and being pointed to it by an old ninja."
msgstr ""

# f70c98e364b848e69cfadc9cbc951236
#: ../../internals/committers.txt:262
msgid ""
"A software developer in the electronic transactions industry, he is a living "
"proof of the fact that anyone with enough enthusiasm can contribute to "
"Django, learning a lot and having fun in the process."
msgstr ""

# 73210b9e2d634b929604f8f1614f15ab
#: ../../internals/committers.txt:266
msgid "Ramiro lives in CÃ³rdoba, Argentina."
msgstr ""

# 544e1dadd589430e87ffb7949e461b68
#: ../../internals/committers.txt:275
msgid "`Chris Beaven`_"
msgstr ""

# 0b6f8d2883774e8d87ad46d9ad049fc7
#: ../../internals/committers.txt:269
msgid ""
"Chris has been submitting patches and suggesting crazy ideas for Django "
"since early 2006. An advocate for community involvement and a long-term "
"triager, he is still often found answering questions in the #django IRC "
"channel."
msgstr ""

# 5cb505776d594c8b92c48665278d5f0f
#: ../../internals/committers.txt:274
msgid ""
"Chris lives in Napier, New Zealand (adding to the pool of Oceanic core "
"developers). He works remotely as a developer for `Lincoln Loop`_."
msgstr ""

# c8c5c1f06ee1426c916fa1a12898a833
#: ../../internals/committers.txt:289
msgid "Honza KrÃ¡l"
msgstr ""

# 9217c126c76542a88f0a59be536fce80
#: ../../internals/committers.txt:281
msgid ""
"Honza first discovered Django in 2006 and started using it right away, first "
"for school and personal projects and later in his full time job. He "
"contributed various patches and fixes mostly to the newforms library, "
"newforms admin and, through participation in the Google Summer of Code "
"project, assisted in creating the :ref:`model validation <validating-"
"objects>` functionality."
msgstr ""

# 1df559be1ae84f128c9da5a31705dd60
#: ../../internals/committers.txt:288
msgid ""
"He is currently working for `Whiskey Media`_ in San Francisco developing "
"awesome sites running on pure Django."
msgstr ""

# 0fdfee6963ea41d8bfd6704b6546701d
#: ../../internals/committers.txt:303
msgid "`Idan Gazit`_"
msgstr ""

# d8b6839db1af446ea4b98fef3706edf2
#: ../../internals/committers.txt:294
msgid ""
"As a self-professed design geek, Idan was initially attracted to Django "
"sometime between magic-removal and queryset-refactor. Formally trained as a "
"software engineer, Idan straddles the worlds of design and code, jack of two "
"trades and master of none. He is passionate about usability and finding "
"novel ways to extract meaning from data, and is a longtime photographer_."
msgstr ""

# 3ffb487a64054302982827bb020dc91a
#: ../../internals/committers.txt:301
msgid ""
"Idan previously accepted freelance work under the Pixane_ imprint, but now "
"splits his days between his startup, Skills_, and beautifying all things "
"Django and Python."
msgstr ""

# c709a555d3444c3cafbd30583a44fa93
#: ../../internals/committers.txt:319
msgid "`Paul McMillan`_"
msgstr ""

# 17a306aefb504f78affb3a4117d8fea9
#: ../../internals/committers.txt:311
msgid ""
"Paul found Django in 2008 while looking for a more structured approach to "
"web programming. He stuck around after figuring out that the developers of "
"Django had already invented many of the wheels he needed. His passion for "
"breaking (and then fixing) things led to his current role working to "
"maintain and improve the security of Django."
msgstr ""

# 4a2c7a3993a24fd2b0b7b40c7f8c4869
#: ../../internals/committers.txt:318
msgid ""
"Paul works in Berkeley, California as a `web developer`_ and `security "
"consultant`_."
msgstr ""

# c20c31e6536342848ac1b5b1af72974f
#: ../../internals/committers.txt:332
msgid "`Julien Phalip`_"
msgstr ""

# 34bb5254c19848b0b63fc0f22de2e290
#: ../../internals/committers.txt:326
msgid ""
"Julien has a background in software engineering and human-computer "
"interaction. As a Web developer, he enjoys tinkering with the backend as "
"much as designing and coding user interfaces. Julien discovered Django in "
"2007 while doing his PhD in Computing Sciences. Since then he has "
"contributed patches to various components of the framework, in particular "
"the admin. Julien was a co-founder of the `Interaction Consortium`_. He now "
"works at Odopod_, a digital agency based in San Francisco, CA, USA."
msgstr ""

# c62b0633d44b42f1909ee43c43be1222
#: ../../internals/committers.txt:348
msgid "`Aymeric Augustin`_"
msgstr ""

# b476039b68314893b416fe4bc2e107ac
#: ../../internals/committers.txt:339
msgid ""
"Aymeric is an engineer with a background in mathematics and computer "
"science. He chose Django because he believes that software should be simple, "
"explicit and tested. His perfectionist tendencies quickly led him to triage "
"tickets and contribute patches."
msgstr ""

# 323a117c30ab458e8f4d6ab09fca19d4
#: ../../internals/committers.txt:344
msgid ""
"Aymeric has a pragmatic approach to software engineering, can't live without "
"a continuous integration server, and likes proving that Django is a good "
"choice for enterprise software."
msgstr ""

# a500051a57634de5bd68b0dffb2949bc
#: ../../internals/committers.txt:348
msgid "He works in a `management consulting company`_ in Paris, France."
msgstr ""

# a83caecd31dd48a8aa5811351bf329c8
#: ../../internals/committers.txt:361
msgid "`Claude Paroz`_"
msgstr ""

# cdfe09c3714644bb84d95514c1b54f6b
#: ../../internals/committers.txt:354
msgid ""
"Claude is a former teacher who fell in love with free software at the "
"beginning of the 21st century. He's now working as freelancer in Web "
"development in his native Switzerland. He has found in Django a perfect "
"match for his needs of a stable, clean, documented and well-maintained Web "
"framework."
msgstr ""

# 4e9e203a30a842868bfb1c99944b1e1e
#: ../../internals/committers.txt:360
msgid ""
"He's also helping the GNOME Translation Project as maintainer of the Django-"
"based `l10n.gnome.org`_."
msgstr ""

# e2e7230bde5242dab522b5b74f1d5dbd
#: ../../internals/committers.txt:374
msgid "Anssi KÃ¤Ã¤riÃ¤inen"
msgstr ""

# 4a80736be8a943768091fdae5780595f
#: ../../internals/committers.txt:367
msgid ""
"Anssi works as a developer at Finnish National Institute for Health and "
"Welfare. He is also a computer science student at Aalto University. In his "
"work he uses Django for developing internal business applications and sees "
"Django as a great match for that use case."
msgstr ""

# d3b522ede7a247778f899b23e79611c8
#: ../../internals/committers.txt:372
msgid ""
"Anssi is interested in developing the object relational mapper (ORM) and all "
"related features. He's also a fan of benckmarking and he tries keep Django "
"as fast as possible."
msgstr ""

# 04afc2b3d0b44f44b7aa82852b7037e1
#: ../../internals/committers.txt:381
msgid "Florian Apolloner"
msgstr ""

# 1fe9ebbaf2e6440ca3f2109fa4a9c09e
#: ../../internals/committers.txt:377
msgid ""
"Florian is currently studying Physics at the `Graz University of "
"Technology`_. Soon after he started using Django he joined the `Ubuntuusers "
"webteam`_ to work on *Inyoka*, the software powering the whole Ubuntusers "
"site."
msgstr ""

# 356e1902d0b142228e11d096814ae5e9
#: ../../internals/committers.txt:381
msgid "For the time beeing he lives in Graz, Austria (not Australia ;))."
msgstr ""

# a6c2322a04b946e7a20832f8623c5420
#: ../../internals/committers.txt:398
msgid "Jeremy Dunck"
msgstr ""

# ae6435ca26904252b6f0a209bd3d7a14
#: ../../internals/committers.txt:387
msgid ""
"Jeremy was rescued from corporate IT drudgery by Free Software and, in part, "
"Django.  Many of Jeremy's interests center around access to information."
msgstr ""

# f9e0cc6d213d4486a68cfbb0c9517d2c
#: ../../internals/committers.txt:390
msgid ""
"Jeremy was the lead developer of Pegasus News, one of the first uses of "
"Django outside World Online, and has since joined Votizen, a startup intent "
"on reducing the influence of money in politics."
msgstr ""

# 02c7681356b74dafbaa515919e612c88
#: ../../internals/committers.txt:394
msgid ""
"He serves as DSF Secretary, organizes and helps organize sprints, cares "
"about the health and equity of the Django community.  He has gone an "
"embarrassingly long time without a working blog."
msgstr ""

# 7413053e2ef5435d80363921468f71a5
#: ../../internals/committers.txt:398
msgid "Jeremy lives in Mountain View, CA, USA."
msgstr ""

# a58659c8d32f4cb08391c1f547bcfddc
#: ../../internals/committers.txt:408
msgid "`Bryan Veloso`_"
msgstr ""

# 156d893ef74d4fea8393cff06f6ef64c
#: ../../internals/committers.txt:401
msgid ""
"Bryan found Django 0.96 through a fellow designer who was evangelizing its "
"use. It was his first foray outside of the land that was PHP-based "
"templating. Although he has only ever used Django for personal projects, it "
"is the very reason he considers himself a designer/developer hybrid and is "
"working to further design within the Django community."
msgstr ""

# 8852ec13c45c43f19cd3dd9e90798577
#: ../../internals/committers.txt:407
msgid ""
"Bryan works as a designer at GitHub by day, and masquerades as a `vlogger`_ "
"and `shoutcaster`_ in the after-hours. Bryan lives in Los Angeles, CA, USA."
msgstr ""

# 5f0cf848d47044649ed73680553392d2
#: ../../internals/committers.txt:422
msgid "`Preston Holmes`_"
msgstr ""

# 3c0e5a10becb49c28e91fa806f96c5f7
#: ../../internals/committers.txt:415
msgid ""
"Preston is a recovering neuroscientist who originally discovered Django as "
"part of a sweeping move to Python from a grab bag of half a dozen languages. "
"He was drawn to Django's balance of practical batteries included philosophy, "
"care and thought in code design, and strong open source community. In "
"addition to his current job in private progressive education, Preston "
"contributes some developer time to local non-profits."
msgstr ""

# 47206f68f1b1487bacb4e9ebe1760ea9
#: ../../internals/committers.txt:422
msgid ""
"Preston lives with his family and animal menagerie in Santa Barbara, CA, USA."
msgstr ""

# 0845388dda224672a17c06a21b5cc692
#: ../../internals/committers.txt:427
msgid "Specialists"
msgstr ""

# 21b029c37eed4518b9790d7289cea1a2
#: ../../internals/committers.txt:439
msgid "`James Bennett`_"
msgstr ""

# bf5e6879bb98401a9e1118756c3ba9e5
#: ../../internals/committers.txt:430
msgid ""
"James is Django's release manager, and also contributes to the documentation "
"and provide the occasional bugfix."
msgstr ""

# 661e88aef2b8462ca35db23425ea937e
#: ../../internals/committers.txt:433
msgid ""
"James came to Web development from philosophy when he discovered that "
"programmers get to argue just as much while collecting much better pay. He "
"lives in Lawrence, Kansas and previously worked at World Online; currently, "
"he's part of the Web development team at Mozilla."
msgstr ""

# b4f273afe1594532a4e1e7f8c3e60257
#: ../../internals/committers.txt:439
msgid "He `keeps a blog`_, and enjoys fine port and talking to his car."
msgstr ""

# ee5d4aa714484b2e86eacd428ae9c5a7
#: ../../internals/committers.txt:445
msgid "Ian Kelly"
msgstr ""

# cab66f0b41ea4aef8ecba204b95ae1fb
#: ../../internals/committers.txt:445
msgid "Ian is responsible for Django's support for Oracle."
msgstr ""

# d2fd3d790ebb492faff86982630b3593
#: ../../internals/committers.txt:448
msgid "Matt Boersma"
msgstr ""

# 886659139a414d5380ff309bbad59212
#: ../../internals/committers.txt:448
msgid "Matt is also responsible for Django's Oracle support."
msgstr ""

# 24aaaf793db84b10a05f0cb6017a81a8
#: ../../internals/committers.txt:456
msgid "`Simon Meers`_"
msgstr ""

# d0aebe35c61f4fb7bc8f4b4ac8a1b3ed
#: ../../internals/committers.txt:451
msgid ""
"Simon discovered Django 0.96 during his Computer Science PhD research and "
"has been developing with it full-time ever since. His core code "
"contributions are mostly in Django's admin application. He is also helping "
"to improve Django's documentation."
msgstr ""

# 52ce5d5301d546bd90a7bb62770c4fd1
#: ../../internals/committers.txt:456
msgid "Simon works as a freelance developer based in Wollongong, Australia."
msgstr ""

# 527b53f77b08425f90f21fb5ab83bd99
#: ../../internals/committers.txt:468
msgid "`Gabriel Hurley`_"
msgstr ""

# def1705e68b646d9ad320a222d426540
#: ../../internals/committers.txt:461
msgid ""
"Gabriel has been working with Django since 2008, shortly after the 1.0 "
"release. Convinced by his business partner that Python and Django were the "
"right direction for the company, he couldn't have been more happy with the "
"decision. His contributions range across many areas in Django, but years of "
"copy-editing and an eye for detail lead him to be particularly at home while "
"working on Django's documentation."
msgstr ""

# a134ebd2619f49f4bf0c2fbb6c70b075
#: ../../internals/committers.txt:468
msgid "Gabriel works as a web developer in Berkeley, CA, USA."
msgstr ""

# c244697ce15e4e1797e532c180256278
#: ../../internals/committers.txt:477
msgid "Tim Graham"
msgstr ""

# 8547ef4379864b9cbaa130bfccc47c2c
#: ../../internals/committers.txt:473
msgid ""
"When exploring Web frameworks for an independent study project in the fall "
"of 2008, Tim discovered Django and was lured to it by the documentation. He "
"enjoys contributing to the docs because they're awesome."
msgstr ""

# 9cb639824e554fbf8e40f08eb4bad4c8
#: ../../internals/committers.txt:477
msgid "Tim works as a software engineer and lives in Philadelphia, PA, USA."
msgstr ""

# 437ff2a841b54afcbe59838ad518aeab
#: ../../internals/committers.txt:480
msgid "Developers Emeritus"
msgstr ""

# a2ed87d8a88f4a028ff1bec3330551d2
#: ../../internals/committers.txt:485
msgid "Georg \"Hugo\" Bauer"
msgstr ""

# fe29df77031a47c8a02e5f10eee50a2e
#: ../../internals/committers.txt:483
msgid ""
"Georg created Django's internationalization system, managed i18n "
"contributions and made a ton of excellent tweaks, feature additions and bug "
"fixes."
msgstr ""

# 49cfa17085ea4364b21e70f71001982b
#: ../../internals/committers.txt:489
msgid "Robert Wittams"
msgstr ""

# 70dd4d1bb051434fa9990367bccec890
#: ../../internals/committers.txt:488
msgid ""
"Robert was responsible for the *first* refactoring of Django's admin "
"application to allow for easier reuse and has made a ton of excellent "
"tweaks, feature additions and bug fixes."
msgstr ""

# d48f85072b974d5e84c1152e4aceeef0
#: ../../internals/contributing/bugs-and-features.txt:3
msgid "Reporting bugs and requesting features"
msgstr ""

# 764ab9457dca42c09ef0774455133a00
#: ../../internals/contributing/bugs-and-features.txt:7
msgid ""
"Please report security issues **only** to security@djangoproject.com.  This "
"is a private list only open to long-time, highly trusted Django developers, "
"and its archives are not public. For further details, please see :doc:`our "
"security policies </internals/security>`."
msgstr ""

# 98f9d9d2260343b19d60688c090f6cf2
#: ../../internals/contributing/bugs-and-features.txt:14
msgid ""
"Otherwise, before reporting a bug or requesting a new feature, please "
"consider these general points:"
msgstr ""

# 3dfcec7def98460d8fab14030633b246
#: ../../internals/contributing/bugs-and-features.txt:17
msgid ""
"Check that someone hasn't already filed the bug or feature request by "
"`searching`_ or running `custom queries`_ in the ticket tracker."
msgstr ""

# 520237b0e1d1438486c567a606250e53
#: ../../internals/contributing/bugs-and-features.txt:20
msgid ""
"Don't use the ticket system to ask support questions. Use the `django-"
"users`_ list or the `#django`_ IRC channel for that."
msgstr ""

# 8cd8da972d2a4409a71052207ad8e429
#: ../../internals/contributing/bugs-and-features.txt:23
msgid ""
"Don't reopen issues that have been marked \"wontfix\" by a core developer. "
"This mark means that the decision has been made that we can't or won't fix "
"this particular issue. If you're not sure why, please ask on `django-"
"developers`_."
msgstr ""

# 548573f90f83432e84ce7b59ae39abe1
#: ../../internals/contributing/bugs-and-features.txt:28
msgid ""
"Don't use the ticket tracker for lengthy discussions, because they're likely "
"to get lost. If a particular ticket is controversial, please move the "
"discussion to `django-developers`_."
msgstr ""

# dfad9863f1a3432fac1ae0aee24d13d4
#: ../../internals/contributing/bugs-and-features.txt:35
msgid "Reporting bugs"
msgstr ""

# 11c6aac6c2d043efb6bcb267f544ab66
#: ../../internals/contributing/bugs-and-features.txt:37
msgid ""
"Well-written bug reports are *incredibly* helpful. However, there's a "
"certain amount of overhead involved in working with any bug tracking system "
"so your help in keeping our ticket tracker as useful as possible is "
"appreciated. In particular:"
msgstr ""

# a81a72a3ac564d68bd61e5c4e8157352
#: ../../internals/contributing/bugs-and-features.txt:42
msgid ""
"**Do** read the :doc:`FAQ </faq/index>` to see if your issue might be a well-"
"known question."
msgstr ""

# 499f1112d62642ebb467d1f7e16a00d7
#: ../../internals/contributing/bugs-and-features.txt:45
msgid ""
"**Do** ask on `django-users`_ or `#django`_ *first* if you're not sure if "
"what you're seeing is a bug."
msgstr ""

# 02477efec6034858813b578b4eb694ab
#: ../../internals/contributing/bugs-and-features.txt:48
msgid ""
"**Do** write complete, reproducible, specific bug reports. You must include "
"a clear, concise description of the problem, and a set of instructions for "
"replicating it. Add as much debug information as you can: code snippets, "
"test cases, exception backtraces, screenshots, etc. A nice small test case "
"is the best way to report a bug, as it gives us an easy way to confirm the "
"bug quickly."
msgstr ""

# 1501dcfd96bf4628bb9d390dada4326e
#: ../../internals/contributing/bugs-and-features.txt:55
msgid ""
"**Don't** post to `django-developers`_ just to announce that you have filed "
"a bug report. All the tickets are mailed to another list, `django-updates`_, "
"which is tracked by developers and interested community members; we see them "
"as they are filed."
msgstr ""

# a721590bdbd14647a7ba4ffa9670d888
#: ../../internals/contributing/bugs-and-features.txt:60
msgid ""
"To understand the lifecycle of your ticket once you have created it, refer "
"to :doc:`triaging-tickets`."
msgstr ""

# 811403acf808446c9b660c389234a3e3
#: ../../internals/contributing/bugs-and-features.txt:66
msgid "Reporting user interface bugs and features"
msgstr ""

# 787890c310ca4f35a0a3f0d378db9ac7
#: ../../internals/contributing/bugs-and-features.txt:68
msgid ""
"If your bug or feature request touches on anything visual in nature, there "
"are a few additional guidelines to follow:"
msgstr ""

# d2471491634342a6ad3a96f8faffc923
#: ../../internals/contributing/bugs-and-features.txt:71
msgid ""
"Include screenshots in your ticket which are the visual equivalent of a "
"minimal testcase. Show off the issue, not the crazy customizations you've "
"made to your browser."
msgstr ""

# 87eca99dccea445295353d0aa1bbcef6
#: ../../internals/contributing/bugs-and-features.txt:75
msgid ""
"If the issue is difficult to show off using a still image, consider "
"capturing a *brief* screencast. If your software permits it, capture only "
"the relevant area of the screen."
msgstr ""

# a9532769581b4d5bb3264d7be175c65a
#: ../../internals/contributing/bugs-and-features.txt:79
msgid ""
"If you're offering a patch which changes the look or behavior of Django's "
"UI, you **must** attach before *and* after screenshots/screencasts. Tickets "
"lacking these are difficult for triagers and core developers to assess "
"quickly."
msgstr ""

# 306afdba90fc4a998f2c2526285ac21b
#: ../../internals/contributing/bugs-and-features.txt:84
msgid ""
"Screenshots don't absolve you of other good reporting practices. Make sure "
"to include URLs, code snippets, and step-by-step instructions on how to "
"reproduce the behavior visible in the screenshots."
msgstr ""

# 5615af2765fb43c085435e59e5b5dcc5
#: ../../internals/contributing/bugs-and-features.txt:88
msgid ""
"Make sure to set the UI/UX flag on the ticket so interested parties can find "
"your ticket."
msgstr ""

# dc25c4c3dd224e4e8436b2bd5f97efef
#: ../../internals/contributing/bugs-and-features.txt:92
msgid "Requesting features"
msgstr ""

# 21c9bf4d8c504f88bb84b8bceb590cf6
#: ../../internals/contributing/bugs-and-features.txt:94
msgid ""
"We're always trying to make Django better, and your feature requests are a "
"key part of that. Here are some tips on how to make a request most "
"effectively:"
msgstr ""

# a27ac47f84474b259ba3fa86baa07c13
#: ../../internals/contributing/bugs-and-features.txt:97
msgid ""
"Make sure the feature actually requires changes in Django's core. If your "
"idea can be developed as an independent application or module â€” for "
"instance, you want to support another database engine â€” we'll probably "
"suggest that you to develop it independently. Then, if your project gathers "
"sufficient community support, we may consider it for inclusion in Django."
msgstr ""

# 4f1942e09c0d4086ae82d4a69b4ef5ef
#: ../../internals/contributing/bugs-and-features.txt:104
msgid ""
"First request the feature on the `django-developers`_ list, not in the "
"ticket tracker. It'll get read more closely if it's on the mailing list. "
"This is even more important for large-scale feature requests. We like to "
"discuss any big changes to Django's core on the mailing list before actually "
"working on them."
msgstr ""

# 28a5353bc11b44f29a4b8f9ffa1e98b1
#: ../../internals/contributing/bugs-and-features.txt:110
msgid ""
"Describe clearly and concisely what the missing feature is and how you'd "
"like to see it implemented. Include example code (non-functional is OK) if "
"possible."
msgstr ""

# ee7189a72af247a29081d1641e40aae8
#: ../../internals/contributing/bugs-and-features.txt:114
msgid ""
"Explain *why* you'd like the feature. In some cases this is obvious, but "
"since Django is designed to help real developers get real work done, you'll "
"need to explain it, if it isn't obvious why the feature would be useful."
msgstr ""

# b4ceb8fe58d347ec88cd3cb5c6a3f763
#: ../../internals/contributing/bugs-and-features.txt:119
msgid ""
"If core developers agree on the feature, then it's appropriate to create a "
"ticket. Include a link the discussion on `django-developers`_ in the ticket "
"description."
msgstr ""

# 4b144587d6424157ba1b9c3035962221
#: ../../internals/contributing/bugs-and-features.txt:123
msgid ""
"As with most open-source projects, code talks. If you are willing to write "
"the code for the feature yourself or, even better, if you've already written "
"it, it's much more likely to be accepted. Just fork Django on GitHub, create "
"a feature branch, and show us your work!"
msgstr ""

# dcffc9064e6e42b692467cdd6c023258
#: ../../internals/contributing/bugs-and-features.txt:128
msgid "See also: :ref:`documenting-new-features`."
msgstr ""

# d6ab766ab8744964886c104101b504f7
#: ../../internals/contributing/bugs-and-features.txt:133
msgid "How we make decisions"
msgstr ""

# 48ee0d3cf4e84eb4bbaf1e3fc65e819e
#: ../../internals/contributing/bugs-and-features.txt:135
msgid ""
"Whenever possible, we strive for a rough consensus. To that end, we'll often "
"have informal votes on `django-developers`_ about a feature. In these votes "
"we follow the voting style invented by Apache and used on Python itself, "
"where votes are given as +1, +0, -0, or -1. Roughly translated, these votes "
"mean:"
msgstr ""

# b638ff2905db4a0399c8bf0cd8da2dea
#: ../../internals/contributing/bugs-and-features.txt:140
msgid "+1: \"I love the idea and I'm strongly committed to it.\""
msgstr ""

# 1d2582d8945d4cbfa86d63cc05c8a66e
#: ../../internals/contributing/bugs-and-features.txt:142
msgid "+0: \"Sounds OK to me.\""
msgstr ""

# 15fa415e887a4f099a74c0323a15d8be
#: ../../internals/contributing/bugs-and-features.txt:144
msgid "-0: \"I'm not thrilled, but I won't stand in the way.\""
msgstr ""

# c015540ef82f4e83afea4ef8ecf46d64
#: ../../internals/contributing/bugs-and-features.txt:146
msgid ""
"-1: \"I strongly disagree and would be very unhappy to see the idea turn "
"into reality.\""
msgstr ""

# 25d095d835a44d09ab6ef79e08998e92
#: ../../internals/contributing/bugs-and-features.txt:149
msgid ""
"Although these votes on `django-developers`_ are informal, they'll be taken "
"very seriously. After a suitable voting period, if an obvious consensus "
"arises we'll follow the votes."
msgstr ""

# 226dd31f0d5e4764960a25aaac23c27b
#: ../../internals/contributing/bugs-and-features.txt:153
msgid ""
"However, consensus is not always possible. If consensus cannot be reached, "
"or if the discussion towards a consensus fizzles out without a concrete "
"decision, we use a more formal process."
msgstr ""

# 3c1fce52f1aa4126bfd2ffa6c517f28d
#: ../../internals/contributing/bugs-and-features.txt:157
msgid ""
"Any :doc:`core committer</internals/committers>` may call for a formal vote "
"using the same voting mechanism above. A proposition will be considered "
"carried by the core team if:"
msgstr ""

# cd67ec07713741e3b8f5a16e0a7df02b
#: ../../internals/contributing/bugs-and-features.txt:161
msgid "There are three \"+1\" votes from members of the core team."
msgstr ""

# 159b91f3ad124e79a921ae97f1690784
#: ../../internals/contributing/bugs-and-features.txt:163
msgid "There is no \"-1\" vote from any member of the core team."
msgstr ""

# b312f79227f44e1cb6da34f635308a58
#: ../../internals/contributing/bugs-and-features.txt:165
msgid ""
"The :ref:`BDFLs<django-bdfls>` haven't stepped in and executed their "
"positive or negative veto."
msgstr ""

# b8b668dff6f24cfbaa9276431492d088
#: ../../internals/contributing/bugs-and-features.txt:168
msgid ""
"When calling for a vote, the caller should specify a deadline by which votes "
"must be received. One week is generally suggested as the minimum amount of "
"time."
msgstr ""

# 922757b3d86a493d842e5025148900ab
#: ../../internals/contributing/bugs-and-features.txt:172
msgid ""
"Since this process allows any core committer to veto a proposal, any \"-1\" "
"votes (or BDFL vetos) should be accompanied by an explanation that explains "
"what it would take to convert that \"-1\" into at least a \"+0\"."
msgstr ""

# 213f6becd41f48ebb1757e158b5065a5
#: ../../internals/contributing/bugs-and-features.txt:176
msgid ""
"Whenever possible, these formal votes should be announced and held in public "
"on the `django-developers`_ mailing list. However, overly sensitive or "
"contentious issues -- including, most notably, votes on new core committers "
"-- may be held in private."
msgstr ""

# a7cf6d7d84df46e4b24eede459f99581
#: ../../internals/contributing/committing-code.txt:3
msgid "Committing code"
msgstr ""

# 499b052d5d1840b4a203ed98ed322a27
#: ../../internals/contributing/committing-code.txt:5
msgid ""
"This section is addressed to the :doc:`/internals/committers` and to anyone "
"interested in knowing how code gets committed into Django core. If you're a "
"community member who wants to contribute code to Django, have a look at :doc:"
"`writing-code/working-with-git` instead."
msgstr ""

# 7b7d17bf8c2643d6b667061543add948
#: ../../internals/contributing/committing-code.txt:11
msgid "Commit access"
msgstr ""

# 7302883bdf7c4bddb931c0b481cf359d
#: ../../internals/contributing/committing-code.txt:13
msgid "Django has two types of committers:"
msgstr ""

# 9a18af9566bf49f194766bdd39086d2b
#: ../../internals/contributing/committing-code.txt:19
msgid "Core committers"
msgstr ""

# d81d1f0398a1430fb015f6aa15f25101
#: ../../internals/contributing/committing-code.txt:16
msgid ""
"These are people who have a long history of contributions to Django's "
"codebase, a solid track record of being polite and helpful on the mailing "
"lists, and a proven desire to dedicate serious time to Django's development. "
"The bar is high for full commit access."
msgstr ""

# 4a21df8782bf46cd8d60ce557b069840
#: ../../internals/contributing/committing-code.txt:30
msgid "Partial committers"
msgstr ""

# d433b8f69aec4b93a4cd7ea34e5cbf9e
#: ../../internals/contributing/committing-code.txt:22
msgid ""
"These are people who are \"domain experts.\" They have direct check-in "
"access to the subsystems that fall under their jurisdiction, and they're "
"given a formal vote in questions that involve their subsystems. This type of "
"access is likely to be given to someone who contributes a large sub-"
"framework to Django and wants to continue to maintain it."
msgstr ""

# 5fc914b6ce7b4b8ab6f69125ef911ddd
#: ../../internals/contributing/committing-code.txt:28
msgid ""
"Partial commit access is granted by the same process as full committers. "
"However, the bar is set lower; proven expertise in the area in question is "
"likely to be sufficient."
msgstr ""

# 200fd0ac0d9f45efab8bdcf2deda67b1
#: ../../internals/contributing/committing-code.txt:32
msgid ""
"Decisions on new committers will follow the process explained in :ref:`how-"
"we-make-decisions`. To request commit access, please contact an existing "
"committer privately. Public requests for commit access are potential flame-"
"war starters, and will simply be ignored."
msgstr ""

# 61f540e17d1a4ffea3008a5c33cc4fb6
#: ../../internals/contributing/committing-code.txt:38
msgid "Handling pull requests"
msgstr ""

# aaeceb1daeb24895b8ad7ca1e0f271c3
#: ../../internals/contributing/committing-code.txt:40
msgid ""
"Since Django is now hosted at GitHub, many patches are provided in the form "
"of pull requests."
msgstr ""

# 193d145b1934437d8c7ee3ac270a5ae9
#: ../../internals/contributing/committing-code.txt:43
msgid ""
"When committing a pull request, make sure each individual commit matches the "
"commit guidelines described below. Contributors are expected to provide the "
"best pull requests possible. In practice however, committers - who will "
"likely be more familiar with the commit guidelines - may decide to bring a "
"commit up to standard themselves."
msgstr ""

# 957b5f61224d40a58a2edc95e9170b76
#: ../../internals/contributing/committing-code.txt:49
msgid "Here is one way to commit a pull request::"
msgstr ""

# f5ab3073942d49e2b51493655f650cb1
#: ../../internals/contributing/committing-code.txt:58
msgid ""
"At this point, you can work on the code. Use ``git rebase -i`` and ``git "
"commit --amend`` to make sure the commits have the expected level of "
"quality. Once you're ready::"
msgstr ""

# 41e686a04e134478b821aac971bd8f73
#: ../../internals/contributing/committing-code.txt:75
msgid ""
"An alternative is to add the contributor's repository as a new remote, "
"checkout the branch and work from there::"
msgstr ""

# 526a2f1ecb1243348c2e6f033785de8d
#: ../../internals/contributing/committing-code.txt:81
msgid ""
"Yet another alternative is to fetch the branch without adding the "
"contributor's repository as a remote::"
msgstr ""

# 548a4df9c9fb4026b8e55e128193503f
#: ../../internals/contributing/committing-code.txt:87
msgid "At this point, you can work on the code and continue as above."
msgstr ""

# 394f74d563f346b7a54576e321d639e3
#: ../../internals/contributing/committing-code.txt:89
msgid ""
"GitHub provides a one-click merge functionality for pull requests. This "
"should only be used if the pull request is 100% ready, and you have checked "
"it for errors (or trust the request maker enough to skip checks). Currently, "
"it isn't possible to check that the tests pass and that the docs build "
"without downloading the changes to your development environment."
msgstr ""

# 139e6f08ad76410c8dfce38ac140fd52
#: ../../internals/contributing/committing-code.txt:95
msgid ""
"When rewriting the commit history of a pull request, the goal is to make "
"Django's commit history as usable as possible:"
msgstr ""

# e0643923c3664385a692b92136b7fe8f
#: ../../internals/contributing/committing-code.txt:98
msgid ""
"If a patch contains back-and-forth commits, then rewrite those into one. "
"Typically, a commit can add some code, and a second commit can fix stylistic "
"issues introduced in the first commit."
msgstr ""

# e8b364940df84670b2fab536f7a5b3ab
#: ../../internals/contributing/committing-code.txt:102
msgid ""
"Separate changes to different commits by logical grouping: if you do a "
"stylistic cleanup at the same time as you do other changes to a file, "
"separating the changes into two different commits will make reviewing "
"history easier."
msgstr ""

# 2ed00958bf9a4c12a169c93d547ef0c2
#: ../../internals/contributing/committing-code.txt:107
msgid "Beware of merges of upstream branches in the pull requests."
msgstr ""

# b456f0a59ad94dd387e16120351254d6
#: ../../internals/contributing/committing-code.txt:109
msgid ""
"Tests should pass and docs should build after each commit. Neither the tests "
"nor the docs should emit warnings."
msgstr ""

# 9ae3cd28acc54f5391ae764ef9aa51df
#: ../../internals/contributing/committing-code.txt:112
msgid ""
"Trivial and small patches usually are best done in one commit. Medium to "
"large work should be split into multiple commits if possible."
msgstr ""

# f823dca42f8b44ca876c3f6827865c7a
#: ../../internals/contributing/committing-code.txt:115
msgid ""
"Practicality beats purity, so it is up to each committer to decide how much "
"history mangling to do for a pull request. The main points are engaging the "
"community, getting work done, and having a usable commit history."
msgstr ""

# 17035d8721b7421b842ab4d79889b6ae
#: ../../internals/contributing/committing-code.txt:122
msgid "Committing guidelines"
msgstr ""

# b15cd707b10f4a6cbe509d0bcbf03676
#: ../../internals/contributing/committing-code.txt:124
msgid ""
"In addition, please follow the following guidelines when committing code to "
"Django's Git repository:"
msgstr ""

# 03c6715f47164ea49a09137ea8493cee
#: ../../internals/contributing/committing-code.txt:127
msgid ""
"Never change the published history of django/django branches! **Never force- "
"push your changes to django/django.** If you absolutely must (for security "
"reasons for example) first discuss the situation with the core team."
msgstr ""

# a9aaca6dd8834a97ae88ba24514290e6
#: ../../internals/contributing/committing-code.txt:131
msgid ""
"For any medium-to-big changes, where \"medium-to-big\" is according to your "
"judgment, please bring things up on the `django-developers`_ mailing list "
"before making the change."
msgstr ""

# f810cbcafb4940df9d8e10722c4d466d
#: ../../internals/contributing/committing-code.txt:135
msgid ""
"If you bring something up on `django-developers`_ and nobody responds, "
"please don't take that to mean your idea is great and should be implemented "
"immediately because nobody contested it. Django's lead developers don't have "
"a lot of time to read mailing-list discussions immediately, so you may have "
"to wait a couple of days before getting a response."
msgstr ""

# 9dc4d3d776f9442582f3ba00c71e1a32
#: ../../internals/contributing/committing-code.txt:142
msgid "Write detailed commit messages in the past tense, not present tense."
msgstr ""

# 0c7fa7fda7f3462b9cd1f951ac181dea
#: ../../internals/contributing/committing-code.txt:144
msgid "Good: \"Fixed Unicode bug in RSS API.\""
msgstr ""

# aafcc119168148ab864270053b13d11d
#: ../../internals/contributing/committing-code.txt:145
msgid "Bad: \"Fixes Unicode bug in RSS API.\""
msgstr ""

# c7f9b1fe010a4a478644f6d00c5931d3
#: ../../internals/contributing/committing-code.txt:146
msgid "Bad: \"Fixing Unicode bug in RSS API.\""
msgstr ""

# 22b04aae15da45e5abe1c01f1132a305
#: ../../internals/contributing/committing-code.txt:148
msgid ""
"The commit message should be in lines of 72 chars maximum. There should be a "
"subject line, separated by a blank line and then paragraphs of 72 char "
"lines. The limits are soft. For the subject line, shorter is better. In the "
"body of the commit message more detail is better than less::"
msgstr ""

# 3b1cc247f2304a66aea7a56dd640da29
#: ../../internals/contributing/committing-code.txt:159
msgid ""
"If the patch wasn't a pull request, you should credit the contributors in "
"the commit message: \"Thanks A for report, B for the patch and C for the "
"review.\""
msgstr ""

# f31a75e765464507a3cb64acba41c198
#: ../../internals/contributing/committing-code.txt:163
msgid ""
"For commits to a branch, prefix the commit message with the branch name. For "
"example: \"[1.4.x] Fixed #xxxxx -- Added support for mind reading.\""
msgstr ""

# 8d6f485d19604a8d96b118c8dffad77f
#: ../../internals/contributing/committing-code.txt:166
msgid ""
"Limit commits to the most granular change that makes sense. This means, use "
"frequent small commits rather than infrequent large commits. For example, if "
"implementing feature X requires a small change to library Y, first commit "
"the change to library Y, then commit feature X in a separate commit. This "
"goes a *long way* in helping all core Django developers follow your changes."
msgstr ""

# ccf31e8666ce48d980d758aff1c3f48a
#: ../../internals/contributing/committing-code.txt:173
msgid ""
"Separate bug fixes from feature changes. Bugfixes may need to be backported "
"to the stable branch, according to the :ref:`backwards-compatibility policy "
"<backwards-compatibility-policy>`."
msgstr ""

# 88f48c8fd56c42ce8a54ca5e908dbb93
#: ../../internals/contributing/committing-code.txt:177
msgid ""
"If your commit closes a ticket in the Django `ticket tracker`_, begin your "
"commit message with the text \"Fixed #xxxxx\", where \"xxxxx\" is the number "
"of the ticket your commit fixes. Example: \"Fixed #123 -- Added whizbang "
"feature.\". We've rigged Trac so that any commit message in that format will "
"automatically close the referenced ticket and post a comment to it with the "
"full commit message."
msgstr ""

# cd2e81d8cdf14adfbc04c03da22c4fa8
#: ../../internals/contributing/committing-code.txt:184
msgid ""
"If your commit closes a ticket and is in a branch, use the branch name "
"first, then the \"Fixed #xxxxx.\" For example: \"[1.4.x] Fixed #123 -- Added "
"whizbang feature.\""
msgstr ""

# 34a84d9c4a364de8856468643911fa81
#: ../../internals/contributing/committing-code.txt:188
msgid "For the curious, we're using a `Trac plugin`_ for this."
msgstr ""

# ae97bb7162194c8990e0e4bc073322b0
#: ../../internals/contributing/committing-code.txt:192
msgid ""
"Note that the Trac integration doesn't know anything about pull requests. So "
"if you try to close a pull request with the phrase \"closes #400\" in your "
"commit message, GitHub will close the pull request, but the Trac plugin will "
"also close the same numbered ticket in Trac."
msgstr ""

# 395580df08c947e99474acfc4bdf4f3f
#: ../../internals/contributing/committing-code.txt:200
msgid ""
"If your commit references a ticket in the Django `ticket tracker`_ but does "
"*not* close the ticket, include the phrase \"Refs #xxxxx\", where \"xxxxx\" "
"is the number of the ticket your commit references. This will automatically "
"post a comment to the appropriate ticket."
msgstr ""

# 76959e01aeb245da865c2748282a2408
#: ../../internals/contributing/committing-code.txt:205
msgid "Write commit messages for backports using this pattern::"
msgstr ""

# c5b5f2d1c1684644bd85cfedc70b9ec7
#: ../../internals/contributing/committing-code.txt:211
msgid "For example::"
msgstr ""

# 24b288eb8d2b4f9e92f62e10c6df1585
#: ../../internals/contributing/committing-code.txt:218
msgid "Reverting commits"
msgstr ""

# 9c0bd4f6cc6b466494aa88bfb5c4c17d
#: ../../internals/contributing/committing-code.txt:220
msgid "Nobody's perfect; mistakes will be committed."
msgstr ""

# 1cc08fc2a41d45d3b5f82404e28128e8
#: ../../internals/contributing/committing-code.txt:222
msgid ""
"But try very hard to ensure that mistakes don't happen. Just because we have "
"a reversion policy doesn't relax your responsibility to aim for the highest "
"quality possible. Really: double-check your work, or have it checked by "
"another committer, **before** you commit it in the first place!"
msgstr ""

# 0a1f2085e4c149a184534ca75ef82898
#: ../../internals/contributing/committing-code.txt:227
msgid "When a mistaken commit is discovered, please follow these guidelines:"
msgstr ""

# c37bc1cf957446dbbe15eb5bba72e975
#: ../../internals/contributing/committing-code.txt:229
msgid "If possible, have the original author revert his/her own commit."
msgstr ""

# 07ce54de746940fa907f2bba27a4bd2a
#: ../../internals/contributing/committing-code.txt:231
msgid ""
"Don't revert another author's changes without permission from the original "
"author."
msgstr ""

# 56c6a79402d5451dbe252d9e0fd1468c
#: ../../internals/contributing/committing-code.txt:234
msgid ""
"Use git revert -- this will make a reverse commit, but the original commit "
"will still be part of the commit history."
msgstr ""

# 5eb11f10389240c39357bdc8bdff40c3
#: ../../internals/contributing/committing-code.txt:237
msgid ""
"If the original author can't be reached (within a reasonable amount of time "
"-- a day or so) and the problem is severe -- crashing bug, major test "
"failures, etc -- then ask for objections on the `django-developers`_ mailing "
"list then revert if there are none."
msgstr ""

# 2091a6db3a4c43408f839703dc7855c2
#: ../../internals/contributing/committing-code.txt:242
msgid ""
"If the problem is small (a feature commit after feature freeze, say), wait "
"it out."
msgstr ""

# 854a0e2c4a0940b092f3e116a8321715
#: ../../internals/contributing/committing-code.txt:245
msgid ""
"If there's a disagreement between the committer and the reverter-to-be then "
"try to work it out on the `django-developers`_ mailing list. If an agreement "
"can't be reached then it should be put to a vote."
msgstr ""

# 7ec41a227360423bbb57050d0368d155
#: ../../internals/contributing/committing-code.txt:250
msgid ""
"If the commit introduced a confirmed, disclosed security vulnerability then "
"the commit may be reverted immediately without permission from anyone."
msgstr ""

# 23c32355acc944669e2d82226dcfb748
#: ../../internals/contributing/committing-code.txt:254
msgid ""
"The release branch maintainer may back out commits to the release branch "
"without permission if the commit breaks the release branch."
msgstr ""

# 00b4377344da42babc458f10a2984f3c
#: ../../internals/contributing/committing-code.txt:257
msgid ""
"If you mistakenly push a topic branch to django/django, just delete it. For "
"instance, if you did: ``git push upstream feature_antigravity``, just do a "
"reverse push: ``git push upstream :feature_antigravity``."
msgstr ""

# b7cb4d63b0cc4bff8bb7f4d67b7f2903
#: ../../internals/contributing/index.txt:3
msgid "Contributing to Django"
msgstr ""

# 202df965d67b4bba8140c8db12f69506
#: ../../internals/contributing/index.txt:5
msgid ""
"Django is a community that lives on its volunteers. As it keeps growing, we "
"always need more people to help others. As soon as you learn Django, you can "
"contribute in many ways:"
msgstr ""

# b7129095ebfc4f2fb8cddf9488ab5110
#: ../../internals/contributing/index.txt:9
msgid ""
"Join the `django-users`_ mailing list and answer questions. This mailing "
"list has a huge audience, and we really want to maintain a friendly and "
"helpful atmosphere. If you're new to the Django community, you should read "
"the `posting guidelines`_."
msgstr ""

# f7f7b34be76e40749c7dc60abb2339c9
#: ../../internals/contributing/index.txt:14
msgid ""
"Join the `#django IRC channel`_ on Freenode and answer questions. By "
"explaining Django to other users, you're going to learn a lot about the "
"framework yourself."
msgstr ""

# 29e543dec4ed472b9f293193a2b5439d
#: ../../internals/contributing/index.txt:18
msgid ""
"Blog about Django. We syndicate all the Django blogs we know about on the "
"`community page`_; if you'd like to see your blog on that page you can "
"`register it here`_."
msgstr ""

# dab7ec40d57047129aa50e2fbeda604e
#: ../../internals/contributing/index.txt:22
msgid ""
"Contribute to open-source Django projects, write some documentation, or "
"release your own code as an open-source pluggable application. The ecosystem "
"of pluggable applications is a big strength of Django, help us build it!"
msgstr ""

# 5dcb5297993d42fd82ca86a8d057ed3f
#: ../../internals/contributing/index.txt:27
msgid ""
"If you think working *with* Django is fun, wait until you start working *on* "
"it. We're passionate about helping Django users make the jump to "
"contributing members of the community, so there are several ways you can "
"help Django's development:"
msgstr ""

# 0dff4866a6c94d098a015983579ef9b2
#: ../../internals/contributing/index.txt:32
msgid ":doc:`Report bugs <bugs-and-features>` in our `ticket tracker`_."
msgstr ""

# 064e98f766ff46c989652180d3674cc6
#: ../../internals/contributing/index.txt:34
msgid ""
"Join the `django-developers`_ mailing list and share your ideas for how to "
"improve Django. We're always open to suggestions."
msgstr ""

# 9d5faf8ff10640928e78f4d77405f46d
#: ../../internals/contributing/index.txt:37
msgid ""
":doc:`Submit patches <writing-code/submitting-patches>` for new and/or fixed "
"behavior. If you're looking for an easy way to start contributing to Django "
"have a look at the `easy pickings`_ tickets."
msgstr ""

# 508b82d6a5ef4964936d97ddcb8c527f
#: ../../internals/contributing/index.txt:41
msgid ""
":doc:`Improve the documentation <writing-documentation>` or :doc:`write unit "
"tests <writing-code/unit-tests>`."
msgstr ""

# 0fd34afdc32f4aadaadf26c6e33ad5e5
#: ../../internals/contributing/index.txt:44
msgid ""
":doc:`Triage tickets and review patches <triaging-tickets>` created by other "
"users."
msgstr ""

# 778a5223b9524631a33c8cc5d75b6cf7
#: ../../internals/contributing/index.txt:47
msgid ""
"Really, **ANYONE** can do something to help make Django better and greater!"
msgstr ""

# c650b0e1f7b149fcb6487c53d824073c
#: ../../internals/contributing/index.txt:49
msgid "Browse the following sections to find out how:"
msgstr ""

# f914bde015e44d2c8fb47ca0ea529614
#: ../../internals/contributing/localizing.txt:3
msgid "Localizing Django"
msgstr ""

# 7190cff1225244918a826d2036a59360
#: ../../internals/contributing/localizing.txt:5
msgid ""
"Various parts of Django, such as the admin site and validation error "
"messages, are internationalized. This means they display differently "
"depending on each user's language or country. For this, Django uses the same "
"internationalization and localization infrastructure available to Django "
"applications, described in the :doc:`i18n documentation </topics/i18n/"
"index>`."
msgstr ""

# 0f9e2b5eeae74438a97963ee5176a5fd
#: ../../internals/contributing/localizing.txt:12
msgid "Translations"
msgstr ""

# b6bbb14da2ab444aa9a7ee11915f9ef9
#: ../../internals/contributing/localizing.txt:14
msgid ""
"Translations are contributed by Django users worldwide. The translation work "
"is coordinated at `Transifex`_."
msgstr ""

# df3afd320313460486cc5f697e36b4ef
#: ../../internals/contributing/localizing.txt:17
msgid ""
"If you find an incorrect translation or want to discuss specific "
"translations, go to the `Django project page`_. If you would like to help "
"out with translating or add a language that isn't yet translated, here's "
"what to do:"
msgstr ""

# ed958bbebfba4ee5b787fa0c15509506
#: ../../internals/contributing/localizing.txt:21
msgid "Join the `Django i18n mailing list`_ and introduce yourself."
msgstr ""

# 0928802427154e728c188196312ebc05
#: ../../internals/contributing/localizing.txt:23
msgid "Make sure you read the notes about :ref:`specialties-of-django-i18n`."
msgstr ""

# 82d59ed6957042b2b799f92accf85afb
#: ../../internals/contributing/localizing.txt:25
msgid "Signup at `Transifex`_ and visit the `Django project page`_."
msgstr ""

# eb068a79f861405a912f4c095dbd7990
#: ../../internals/contributing/localizing.txt:27
msgid ""
"On the `Django project page`_, choose the language you want to work on, "
"**or** -- in case the language doesn't exist yet -- request a new language "
"team by clicking on the \"Request language\" link and selecting the "
"appropriate language."
msgstr ""

# 5925411502aa47fca398909c65b413c7
#: ../../internals/contributing/localizing.txt:32
msgid ""
"Then, click the \"Join this Team\" button to become a member of this team. "
"Every team has at least one coordinator who is responsible to review your "
"membership request. You can of course also contact the team coordinator to "
"clarify procedural problems and handle the actual translation process."
msgstr ""

# ffa2cd4dd9c44261b55a2454f02aa48e
#: ../../internals/contributing/localizing.txt:38
msgid ""
"Once you are a member of a team choose the translation resource you want to "
"update on the team page. For example the \"core\" resource refers to the "
"translation catalogue that contains all non-contrib translations. Each of "
"the contrib apps also have a resource (prefixed with \"contrib\")."
msgstr ""

# 9a2e12591d4c407abb04f5f85cf13c0a
#: ../../internals/contributing/localizing.txt:44
msgid ""
"For more information about how to use Transifex, read the `Transifex User "
"Guide`_."
msgstr ""

# 55466159963947bcb72e77a41276e436
#: ../../internals/contributing/localizing.txt:48
msgid "Formats"
msgstr ""

# 2be8fdf1b61149659f8ac7972f3d6a9d
#: ../../internals/contributing/localizing.txt:50
msgid ""
"You can also review ``conf/locale/<locale>/formats.py``. This file describes "
"the date, time and numbers formatting particularities of your locale. See :"
"ref:`format-localization` for details."
msgstr ""

# ca13dbf3bc7e49618006cb3c4593a0c2
#: ../../internals/contributing/localizing.txt:54
msgid ""
"The format files aren't managed by the use of Transifex. To change them, you "
"must :doc:`create a patch<writing-code/submitting-patches>` against the "
"Django source tree, as for any code change:"
msgstr ""

# 9faa38cc669b4e0eb4d5bd54192a1633
#: ../../internals/contributing/localizing.txt:58
msgid "Create a diff against the current Git master branch."
msgstr ""

# acbd43fefbbd4e93b2ab2fd27cc02fb5
#: ../../internals/contributing/localizing.txt:60
msgid ""
"Open a ticket in Django's ticket system, set its ``Component`` field to "
"``Translations``, and attach the patch to it."
msgstr ""

# 1dd533eda73743df91cb9b0c24dfac05
#: ../../internals/contributing/new-contributors.txt:3
msgid "Advice for new contributors"
msgstr ""

# 0707b17e045c44878e2a68d6d3c15a23
#: ../../internals/contributing/new-contributors.txt:5
msgid ""
"New contributor and not sure what to do? Want to help but just don't know "
"how to get started? This is the section for you."
msgstr ""

# 59b96ff393324c3f908c7c9ef5b696ef
#: ../../internals/contributing/new-contributors.txt:9
msgid "First steps"
msgstr ""

# cc2e94a5c5a74c738ecc999fa1b8696e
#: ../../internals/contributing/new-contributors.txt:11
msgid "Start with these easy tasks to discover Django's development process."
msgstr ""

# fb694ecd075c4583b8e615a854ee13b8
#: ../../internals/contributing/new-contributors.txt:13
msgid "**Sign the Contributor License Agreement**"
msgstr ""

# 5261b379046445b8bc5464a966a395e5
#: ../../internals/contributing/new-contributors.txt:15
msgid ""
"The code that you write belongs to you or your employer. If your "
"contribution is more than one or two lines of code, you need to sign the "
"`CLA`_. See the `Contributor License Agreement FAQ`_ for a more thorough "
"explanation."
msgstr ""

# 28ab9eca60c74e8983599752101f7a7d
#: ../../internals/contributing/new-contributors.txt:20
msgid "**Triage tickets**"
msgstr ""

# ec3f674687dc4b748f29319f159aec5f
#: ../../internals/contributing/new-contributors.txt:22
msgid ""
"If an `unreviewed ticket`_ reports a bug, try and reproduce it. If you can "
"reproduce it and it seems valid, make a note that you confirmed the bug and "
"accept the ticket. Make sure the ticket is filed under the correct component "
"area. Consider writing a patch that adds a test for the bug's behavior, even "
"if you don't fix the bug itself. See more at :ref:`how-can-i-help-with-"
"triaging`"
msgstr ""

# 70ac4142747f42b8aaf28e700ff0678d
#: ../../internals/contributing/new-contributors.txt:29
msgid ""
"**Look for tickets that are accepted and review patches to build familiarity "
"with the codebase and the process**"
msgstr ""

# 061784e942c84db7ab9c6eb521bdc11e
#: ../../internals/contributing/new-contributors.txt:25
msgid ""
"Mark the appropriate flags if a patch needs docs or tests. Look through the "
"changes a patch makes, and keep an eye out for syntax that is incompatible "
"with older but still supported versions of Python. Run the tests and make "
"sure they pass on your system.  Where possible and relevant, try them out on "
"a database other than SQLite. Leave comments and feedback!"
msgstr ""

# 7d3e20259cbb4da8b0822fc96260697c
#: ../../internals/contributing/new-contributors.txt:31
msgid "**Keep old patches up to date**"
msgstr ""

# 8795162953204e4d97f9e118f98e51ce
#: ../../internals/contributing/new-contributors.txt:33
msgid ""
"Oftentimes the codebase will change between a patch being submitted and the "
"time it gets reviewed. Make sure it still applies cleanly and functions as "
"expected. Simply updating a patch is both useful and important! See more on :"
"doc:`writing-code/submitting-patches`."
msgstr ""

# 505ec5f0b00d4931b776f0cedb339d3c
#: ../../internals/contributing/new-contributors.txt:38
msgid "**Write some documentation**"
msgstr ""

# 073feb269243403cae85fcfd47038603
#: ../../internals/contributing/new-contributors.txt:40
msgid ""
"Django's documentation is great but it can always be improved. Did you find "
"a typo? Do you think that something should be clarified? Go ahead and "
"suggest a documentation patch! See also the guide on :doc:`writing-"
"documentation`, in particular the tips for :ref:`improving-the-"
"documentation`."
msgstr ""

# 4239bc3669104fd0be48a66558650c25
#: ../../internals/contributing/new-contributors.txt:48
msgid ""
"The `reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

# e37b3488a5824bb1b9405d73c5682934
#: ../../internals/contributing/new-contributors.txt:58
msgid "Guidelines"
msgstr ""

# 94bd1984eed64722825f6c164341b910
#: ../../internals/contributing/new-contributors.txt:60
msgid ""
"As a newcomer on a large project, it's easy to experience frustration. "
"Here's some advice to make your work on Django more useful and rewarding."
msgstr ""

# 422ee73374c949c0b1eb42a3d845afa3
#: ../../internals/contributing/new-contributors.txt:63
msgid ""
"**Pick a subject area that you care about, that you are familiar with, or "
"that you want to learn about**"
msgstr ""

# 99dd110ed47e499eb5a69ba4acef9f6d
#: ../../internals/contributing/new-contributors.txt:66
msgid ""
"You don't already have to be an expert on the area you want to work on; you "
"become an expert through your ongoing contributions to the code."
msgstr ""

# ead9d6a56e8248ee800b4abb6b81c669
#: ../../internals/contributing/new-contributors.txt:69
msgid "**Analyze tickets' context and history**"
msgstr ""

# bbc1b55abb6541869a404804a36386b2
#: ../../internals/contributing/new-contributors.txt:71
msgid ""
"Trac isn't an absolute; the context is just as important as the words. When "
"reading Trac, you need to take into account who says things, and when they "
"were said. Support for an idea two years ago doesn't necessarily mean that "
"the idea will still have support. You also need to pay attention to who "
"*hasn't* spoken -- for example, if a core team member hasn't been recently "
"involved in a discussion, then a ticket may not have the support required to "
"get into trunk."
msgstr ""

# a5d387a8258643258330c68cf0a6992e
#: ../../internals/contributing/new-contributors.txt:79
msgid "**Start small**"
msgstr ""

# f3094f9f83e94d51971129f17d4c6c98
#: ../../internals/contributing/new-contributors.txt:81
msgid ""
"It's easier to get feedback on a little issue than on a big one. See the "
"`easy pickings`_."
msgstr ""

# cf983be398294ba89958b149d0d5a2fa
#: ../../internals/contributing/new-contributors.txt:84
msgid ""
"**If you're going to engage in a big task, make sure that your idea has "
"support first**"
msgstr ""

# dcef3a3538e44dd2ab139356108f8c0a
#: ../../internals/contributing/new-contributors.txt:87
msgid ""
"This means getting someone else to confirm that a bug is real before you fix "
"the issue, and ensuring that the core team supports a proposed feature "
"before you go implementing it."
msgstr ""

# 4352a423cadd4d1da215cc5b4f8976f1
#: ../../internals/contributing/new-contributors.txt:91
msgid "**Be bold! Leave feedback!**"
msgstr ""

# d19410c859c142758a6dc5c9bfc72c10
#: ../../internals/contributing/new-contributors.txt:93
msgid ""
"Sometimes it can be scary to put your opinion out to the world and say "
"\"this ticket is correct\" or \"this patch needs work\", but it's the only "
"way the project moves forward. The contributions of the broad Django "
"community ultimately have a much greater impact than that of the core "
"developers. We can't do it without YOU!"
msgstr ""

# d7ab722c0bb34386bd8a790c89c241ba
#: ../../internals/contributing/new-contributors.txt:99
msgid "**Err on the side of caution when marking things Ready For Check-in**"
msgstr ""

# 38caed42e3c04e62a3e771726af350d7
#: ../../internals/contributing/new-contributors.txt:101
msgid ""
"If you're really not certain if a ticket is ready, don't mark it as such. "
"Leave a comment instead, letting others know your thoughts.  If you're "
"mostly certain, but not completely certain, you might also try asking on IRC "
"to see if someone else can confirm your suspicions."
msgstr ""

# 59dcdd3ed6724f45b4188148054c52b9
#: ../../internals/contributing/new-contributors.txt:106
msgid "**Wait for feedback, and respond to feedback that you receive**"
msgstr ""

# a99332c770b440f28dc8934b88ba90f0
#: ../../internals/contributing/new-contributors.txt:108
msgid ""
"Focus on one or two tickets, see them through from start to finish, and "
"repeat. The shotgun approach of taking on lots of tickets and letting some "
"fall by the wayside ends up doing more harm than good."
msgstr ""

# 960640520e1a460a8ebebf216e5fa98a
#: ../../internals/contributing/new-contributors.txt:112
msgid "**Be rigorous**"
msgstr ""

# e0fbc2059e1e42f29cad56671cc36669
#: ../../internals/contributing/new-contributors.txt:114
msgid ""
"When we say \":pep:`8`, and must have docs and tests\", we mean it. If a "
"patch doesn't have docs and tests, there had better be a good reason. "
"Arguments like \"I couldn't find any existing tests of this feature\" don't "
"carry much weight--while it may be true, that means you have the extra-"
"important job of writing the very first tests for that feature, not that you "
"get a pass from writing tests altogether."
msgstr ""

# b0f4eb0b9c9c4be99c0d85a46775d0ee
#: ../../internals/contributing/new-contributors.txt:126
msgid "FAQ"
msgstr ""

# f0303283271b4996aef3cdca627e2b10
#: ../../internals/contributing/new-contributors.txt:128
msgid ""
"**This ticket I care about has been ignored for days/weeks/months! What can "
"I do to get it committed?**"
msgstr ""

# 474e9ccc156a4973b6580e569ce1d26c
#: ../../internals/contributing/new-contributors.txt:131
msgid ""
"First off, it's not personal. Django is entirely developed by volunteers "
"(even the core developers), and sometimes folks just don't have time. The "
"best thing to do is to send a gentle reminder to the django-developers "
"mailing list asking for review on the ticket, or to bring it up in the "
"#django-dev IRC channel."
msgstr ""

# d9783ca0743d4676a037ff32b99e34ca
#: ../../internals/contributing/new-contributors.txt:137
msgid ""
"**I'm sure my ticket is absolutely 100% perfect, can I mark it as RFC myself?"
"**"
msgstr ""

# f833a405103d4fe98c81e71ff5167c07
#: ../../internals/contributing/new-contributors.txt:140
msgid ""
"Short answer: No. It's always better to get another set of eyes on a ticket. "
"If you're having trouble getting that second set of eyes, see question 1, "
"above."
msgstr ""

# 8c02c4423a604a76b9b09814eed60188
#: ../../internals/contributing/new-contributors.txt:144
msgid "**My ticket has been in DDN forever! What should I do?**"
msgstr ""

# b671071b77d24d1490d59be05639dc87
#: ../../internals/contributing/new-contributors.txt:146
msgid ""
"Design Decision Needed requires consensus about the right solution.  At the "
"very least it needs consensus among the core developers, and ideally it has "
"consensus from the community as well. The best way to accomplish this is to "
"start a thread on the django-developers mailing list, and for very complex "
"issues to start a wiki page summarizing the problem and the possible "
"solutions."
msgstr ""

# 59fe0586ae614dfa9f0386a951094897
#: ../../internals/contributing/triaging-tickets.txt:3
msgid "Triaging tickets"
msgstr ""

# b54549d4aee6452bb836591091ab2f6a
#: ../../internals/contributing/triaging-tickets.txt:5
msgid ""
"Django uses Trac_ for managing the work on the code base. Trac is a "
"community-tended garden of the bugs people have found and the features "
"people would like to see added. As in any garden, sometimes there are weeds "
"to be pulled and sometimes there are flowers and vegetables that need "
"picking. We need your help to sort out one from the other, and in the end we "
"all benefit together."
msgstr ""

# 4259b747628c43cc9fffe5ab6ee197f3
#: ../../internals/contributing/triaging-tickets.txt:12
msgid ""
"Like all gardens, we can aspire to perfection but in reality there's no such "
"thing. Even in the most pristine garden there are still snails and insects. "
"In a community garden there are also helpful people who -- with the best of "
"intentions -- fertilize the weeds and poison the roses. It's the job of the "
"community as a whole to self-manage, keep the problems to a minimum, and "
"educate those coming into the community so that they can become valuable "
"contributing members."
msgstr ""

# 40c0dc03d1cb4cd8b026ba8aec17203a
#: ../../internals/contributing/triaging-tickets.txt:20
msgid ""
"Similarly, while we aim for Trac to be a perfect representation of the state "
"of Django's progress, we acknowledge that this simply will not happen. By "
"distributing the load of Trac maintenance to the community, we accept that "
"there will be mistakes. Trac is \"mostly accurate\", and we give allowances "
"for the fact that sometimes it will be wrong. That's okay. We're "
"perfectionists with deadlines."
msgstr ""

# e1f29001d45d498ba6a9ae79f152055d
#: ../../internals/contributing/triaging-tickets.txt:27
msgid ""
"We rely on the community to keep participating, keep tickets as accurate as "
"possible, and raise issues for discussion on our mailing lists when there is "
"confusion or disagreement."
msgstr ""

# 838d25a9028949d897d1def5b4de5f99
#: ../../internals/contributing/triaging-tickets.txt:31
msgid ""
"Django is a community project, and every contribution helps. We can't do "
"this without YOU!"
msgstr ""

# 5b55b4570bcc4e9ead2f9eaa3ee5f155
#: ../../internals/contributing/triaging-tickets.txt:35
msgid "Triage workflow"
msgstr ""

# 147f02cfa86f49e3bf37c9d749041963
#: ../../internals/contributing/triaging-tickets.txt:37
msgid ""
"Unfortunately, not all bug reports and feature requests in the ticket "
"tracker provide all the :doc:`required details<bugs-and-features>`. A number "
"of tickets have patches, but those patches don't meet all the requirements "
"of a :ref:`good patch<patch-style>`."
msgstr ""

# f8d3d0192111492383e12e9eb8a5936b
#: ../../internals/contributing/triaging-tickets.txt:42
msgid ""
"One way to help out is to *triage* tickets that have been created by other "
"users. The core team and several community members work on this regularly, "
"but more help is always appreciated."
msgstr ""

# 4491d4b7198c4c738f0d9f4e98386961
#: ../../internals/contributing/triaging-tickets.txt:46
msgid ""
"Most of the workflow is based around the concept of a ticket's :ref:`triage "
"stages <triage-stages>`. Each stage describes where in its lifetime a given "
"ticket is at any time. Along with a handful of flags, this attribute easily "
"tells us what and who each ticket is waiting on."
msgstr ""

# 16dc46b909494533b372273f917b7a47
#: ../../internals/contributing/triaging-tickets.txt:51
msgid "Since a picture is worth a thousand words, let's start there:"
msgstr ""

# 16c768eb981941dea7a1c8ae65d3054e
#: ../../internals/contributing/triaging-tickets.txt:58
msgid "We've got two roles in this diagram:"
msgstr ""

# 2c22bbae1a50414b919ea730f42c5a85
#: ../../internals/contributing/triaging-tickets.txt:60
msgid ""
":doc:`Committers</internals/committers>` (also called core developers): "
"people with commit access who are responsible for making the big decisions, "
"writing large portions of the code and integrating the contributions of the "
"community."
msgstr ""

# 71934a1a6c3e430899adce4c3447d03d
#: ../../internals/contributing/triaging-tickets.txt:65
msgid ""
"Ticket triagers: anyone in the Django community who chooses to become "
"involved in Django's development process. Our Trac installation is "
"intentionally left open to the public, and anyone can triage tickets. Django "
"is a community project, and we encourage :ref:`triage by the community<how-"
"can-i-help-with-triaging>`."
msgstr ""

# 488d12fd24ae416bb56f50a2327e4f80
#: ../../internals/contributing/triaging-tickets.txt:71
msgid "By way of example, here we see the lifecycle of an average ticket:"
msgstr ""

# 09f4f5afa96645ffbe0ca25381e074b6
#: ../../internals/contributing/triaging-tickets.txt:73
msgid ""
"Alice creates a ticket, and uploads an incomplete patch (no tests, incorrect "
"implementation)."
msgstr ""

# 52e4efc7d1b74d02aeaedbbfb7b95253
#: ../../internals/contributing/triaging-tickets.txt:76
msgid ""
"Bob reviews the patch, marks it \"Accepted\", \"needs tests\", and \"patch "
"needs improvement\", and leaves a comment telling Alice how the patch could "
"be improved."
msgstr ""

# ecdd4cb546264184a4e013469f3db601
#: ../../internals/contributing/triaging-tickets.txt:80
msgid ""
"Alice updates the patch, adding tests (but not changing the implementation). "
"She removes the two flags."
msgstr ""

# 201a6690d6fd4c2090e74459b6635730
#: ../../internals/contributing/triaging-tickets.txt:83
msgid ""
"Charlie reviews the patch and resets the \"patch needs improvement\" flag "
"with another comment about improving the implementation."
msgstr ""

# e0258c76b12a4877836180a412d1674a
#: ../../internals/contributing/triaging-tickets.txt:86
msgid ""
"Alice updates the patch, fixing the implementation. She removes the \"patch "
"needs improvement\" flag."
msgstr ""

# 83e56b793ef1407cba679ade025304de
#: ../../internals/contributing/triaging-tickets.txt:89
msgid "Daisy reviews the patch, and marks it RFC."
msgstr ""

# 7c2a51bef31d4d549b1f3df33dc736dd
#: ../../internals/contributing/triaging-tickets.txt:91
msgid ""
"Jacob, a core developer, reviews the RFC patch, applies it to his checkout, "
"and commits it."
msgstr ""

# 0b786a9349ec40539523b17afa2cad74
#: ../../internals/contributing/triaging-tickets.txt:94
msgid ""
"Some tickets require much less feedback than this, but then again some "
"tickets require much much more."
msgstr ""

# 483807b9dc334abbb13d72a754a31dc8
#: ../../internals/contributing/triaging-tickets.txt:100
msgid "Triage stages"
msgstr ""

# d12f2881eff84c69848851af56d2ded7
#: ../../internals/contributing/triaging-tickets.txt:102
msgid ""
"Below we describe in more detail the various stages that a ticket may flow "
"through during its lifetime."
msgstr ""

# 20b749bed17c4411bc713ec17cc7a240
#: ../../internals/contributing/triaging-tickets.txt:106
msgid "Unreviewed"
msgstr ""

# 067c509299e34ba387d9667cb8fe8025
#: ../../internals/contributing/triaging-tickets.txt:108
msgid ""
"The ticket has not been reviewed by anyone who felt qualified to make a "
"judgment about whether the ticket contained a valid issue, a viable feature, "
"or ought to be closed for any of the various reasons."
msgstr ""

# f904af480b474f0d9018a06a5ae6eb43
#: ../../internals/contributing/triaging-tickets.txt:113
msgid "Accepted"
msgstr ""

# 84e1503959ab47688946db9dc64e9757
#: ../../internals/contributing/triaging-tickets.txt:115
msgid ""
"The big grey area! The absolute meaning of \"accepted\" is that the issue "
"described in the ticket is valid and is in some stage of being worked on. "
"Beyond that there are several considerations:"
msgstr ""

# 4f75e286d2fa4f389f509c538241171b
#: ../../internals/contributing/triaging-tickets.txt:119
msgid "**Accepted + No Flags**"
msgstr ""

# f818103237564cbb82addbc5505f9f08
#: ../../internals/contributing/triaging-tickets.txt:121
msgid ""
"The ticket is valid, but no one has submitted a patch for it yet. Often this "
"means you could safely start writing a patch for it."
msgstr ""

# bc8f863c9175491ab8ad29900ad3f13a
#: ../../internals/contributing/triaging-tickets.txt:124
msgid "**Accepted + Has Patch**"
msgstr ""

# 255bf33b0afb4ce0bfc02d6070a4b3e4
#: ../../internals/contributing/triaging-tickets.txt:126
msgid ""
"The ticket is waiting for people to review the supplied patch. This means "
"downloading the patch and trying it out, verifying that it contains tests "
"and docs, running the test suite with the included patch, and leaving "
"feedback on the ticket."
msgstr ""

# f7cd6d8e0e2a4abd9a19dc99d2143226
#: ../../internals/contributing/triaging-tickets.txt:131
msgid "**Accepted + Has Patch + (any other flag)**"
msgstr ""

# 6d156fa42093444b9f2455f5a6687f45
#: ../../internals/contributing/triaging-tickets.txt:133
msgid ""
"This means the ticket has been reviewed, and has been found to need further "
"work. \"Needs tests\" and \"Needs documentation\" are self-explanatory. "
"\"Patch needs improvement\" will generally be accompanied by a comment on "
"the ticket explaining what is needed to improve the code."
msgstr ""

# d5969717fb064d37a50596098dcac6b5
#: ../../internals/contributing/triaging-tickets.txt:139
msgid "Design Decision Needed"
msgstr ""

# d62f3c6650e44583b6a950c3b1e7e4e2
#: ../../internals/contributing/triaging-tickets.txt:141
msgid ""
"This stage is for issues which may be contentious, may be backwards "
"incompatible, or otherwise involve high-level design decisions. These issues "
"should be discussed either in the ticket comments or on `django-developers`_."
msgstr ""

# e570f4cb98cf44bfa0b7d83aa28c806f
#: ../../internals/contributing/triaging-tickets.txt:145
msgid ""
"If a ticket has been marked as \"DDN\", decisions are generally eventually "
"made by the core committers, however that is not a requirement. See the :ref:"
"`New contributors' FAQ<new-contributors-faq>` for \"My ticket has been in "
"DDN forever! What should I do?\""
msgstr ""

# 923fb70b8ef4464784c24dbfba590c58
#: ../../internals/contributing/triaging-tickets.txt:150
msgid ""
"This stage will often be used for feature requests. It can also be used for "
"issues that *might* be bugs, depending on opinion or interpretation. Obvious "
"bugs (such as crashes, incorrect query results, or non-compliance with a "
"standard) skip this stage and move straight to \"Accepted\"."
msgstr ""

# 4489c23188bc44a9ad23e4f3bcc9707c
#: ../../internals/contributing/triaging-tickets.txt:156
msgid "Ready For Checkin"
msgstr ""

# ab99d787fef64a09a41132fa9396be8a
#: ../../internals/contributing/triaging-tickets.txt:158
msgid ""
"The ticket was reviewed by any member of the community other than the person "
"who supplied the patch and found to meet all the requirements for a commit-"
"ready patch. A core committer now needs to give the patch a final review "
"prior to being committed. See the :ref:`New contributors' FAQ<new-"
"contributors-faq>` for \"My ticket has been in RFC forever! What should I do?"
"\""
msgstr ""

# 788cd5abc9b246b3a0a58e4172c61efb
#: ../../internals/contributing/triaging-tickets.txt:166
msgid "Someday/Maybe"
msgstr ""

# afae48900878425eb4d0cf0aacab005a
#: ../../internals/contributing/triaging-tickets.txt:168
msgid ""
"Generally only used for vague/high-level features or design ideas. These "
"tickets are uncommon and overall less useful since they don't describe "
"concrete actionable issues. They are enhancement requests that we might "
"consider adding someday to the framework if an excellent patch is submitted. "
"These tickets are not a high priority."
msgstr ""

# e0697c46d64842c9b4eaa4b1dd642aaf
#: ../../internals/contributing/triaging-tickets.txt:175
msgid "Other triage attributes"
msgstr ""

# f0b1e64e9036410abf8fc165ac4cea04
#: ../../internals/contributing/triaging-tickets.txt:177
msgid ""
"A number of flags, appearing as checkboxes in Trac, can be set on a ticket:"
msgstr ""

# eb32916e0d304057807481c7697b0156
#: ../../internals/contributing/triaging-tickets.txt:182
msgid "Has patch"
msgstr ""

# 0376146f308d43d4bf59c64888f0ac93
#: ../../internals/contributing/triaging-tickets.txt:180
msgid ""
"This means the ticket has an associated :doc:`patch<writing-code/submitting-"
"patches>`. These will be reviewed to see if the patch is \"good\"."
msgstr ""

# 142867a901754548b662103bed01f79b
#: ../../internals/contributing/triaging-tickets.txt:187
msgid "Needs documentation:"
msgstr ""

# 1a3c17b1c36542b1bf88da548add5c2d
#: ../../internals/contributing/triaging-tickets.txt:185
msgid ""
"This flag is used for tickets with patches that need associated "
"documentation. Complete documentation of features is a prerequisite before "
"we can check them into the codebase."
msgstr ""

# a2752cde5bd743fc906906a3aeb38d1b
#: ../../internals/contributing/triaging-tickets.txt:191
msgid "Needs tests"
msgstr ""

# 24ff8ce74a994d8aa6516a6fb48930bd
#: ../../internals/contributing/triaging-tickets.txt:190
msgid ""
"This flags the patch as needing associated unit tests. Again, this is a "
"required part of a valid patch."
msgstr ""

# 16ec5a5051a8431383cf644be41ded54
#: ../../internals/contributing/triaging-tickets.txt:197
msgid "Patch needs improvement"
msgstr ""

# 75c9818070fc410f84e7d413044d32d0
#: ../../internals/contributing/triaging-tickets.txt:194
msgid ""
"This flag means that although the ticket *has* a patch, it's not quite ready "
"for checkin. This could mean the patch no longer applies cleanly, there is a "
"flaw in the implementation, or that the code doesn't meet our standards."
msgstr ""

# 905c92ac2fe241f29da1ee25670c39e6
#: ../../internals/contributing/triaging-tickets.txt:200
msgid "Easy pickings"
msgstr ""

# 81f86057cfaf4df48d35e5e175364ff5
#: ../../internals/contributing/triaging-tickets.txt:200
msgid "Tickets that would require small, easy, patches."
msgstr ""

# 135264fae8344e2ea67610ab5bf7b156
#: ../../internals/contributing/triaging-tickets.txt:202
msgid "Tickets should be categorized by *type* between:"
msgstr ""

# fa7aaa500c774b7e909ba3c436e06743
#: ../../internals/contributing/triaging-tickets.txt:205
msgid "New Feature"
msgstr ""

# b2764c31c9da454f8a15992eea76bd1a
#: ../../internals/contributing/triaging-tickets.txt:205
msgid "For adding something new."
msgstr ""

# 9775982a829e4468b4bcbcdc246eeacf
#: ../../internals/contributing/triaging-tickets.txt:208
msgid "Bug"
msgstr ""

# 68b66388edd84449bfb671f804190ff5
#: ../../internals/contributing/triaging-tickets.txt:208
msgid "For when an existing thing is broken or not behaving as expected."
msgstr ""

# f09228a47c1548f784032fbe51f2efc2
#: ../../internals/contributing/triaging-tickets.txt:212
msgid "Cleanup/optimization"
msgstr ""

# b2551b80253043ab857238805b420eba
#: ../../internals/contributing/triaging-tickets.txt:211
msgid ""
"For when nothing is broken but something could be made cleaner, better, "
"faster, stronger."
msgstr ""

# 2840b88a644d459faad41dfbcd1299fc
#: ../../internals/contributing/triaging-tickets.txt:214
msgid ""
"Tickets should also be classified into *components* indicating which area of "
"the Django codebase they belong to. This makes tickets better organized and "
"easier to find."
msgstr ""

# bb043df44bdd4c48bb5f8bb3661cdd70
#: ../../internals/contributing/triaging-tickets.txt:218
msgid ""
"The *severity* attribute is used to identify blockers, that is, issues which "
"should get fixed before releasing the next version of Django. Typically "
"those issues are bugs causing regressions from earlier versions or "
"potentially causing severe data losses. This attribute is quite rarely used "
"and the vast majority of tickets have a severity of \"Normal\"."
msgstr ""

# c29e7f4ef3e64cd5b160435c6e522f97
#: ../../internals/contributing/triaging-tickets.txt:224
msgid ""
"Finally, it is possible to use the *version* attribute to indicate in which "
"version the reported bug was identified."
msgstr ""

# a25fd2d618c64d88aaafa8e00f6c17fd
#: ../../internals/contributing/triaging-tickets.txt:230
msgid "Closing Tickets"
msgstr ""

# 971795933d734fa6a89b151b48219cdb
#: ../../internals/contributing/triaging-tickets.txt:232
msgid ""
"When a ticket has completed its useful lifecycle, it's time for it to be "
"closed. Closing a ticket is a big responsibility, though. You have to be "
"sure that the issue is really resolved, and you need to keep in mind that "
"the reporter of the ticket may not be happy to have their ticket closed "
"(unless it's fixed, of course). If you're not certain about closing a "
"ticket, just leave a comment with your thoughts instead."
msgstr ""

# 732698f13f5940acbd8f2f6c3c453dc5
#: ../../internals/contributing/triaging-tickets.txt:239
msgid "If you do close a ticket, you should always make sure of the following:"
msgstr ""

# 62d05925dd1e4c7cb6bc84a7e5140ee3
#: ../../internals/contributing/triaging-tickets.txt:241
msgid "Be certain that the issue is resolved."
msgstr ""

# 11b5364101bc492ba09196ded5537107
#: ../../internals/contributing/triaging-tickets.txt:243
msgid "Leave a comment explaining the decision to close the ticket."
msgstr ""

# 49aa50a05fea4209901e810c60b54d52
#: ../../internals/contributing/triaging-tickets.txt:245
msgid ""
"If there is a way they can improve the ticket to reopen it, let them know."
msgstr ""

# 7b8f0255e435469fa47aae37293d2c77
#: ../../internals/contributing/triaging-tickets.txt:247
msgid ""
"If the ticket is a duplicate, reference the original ticket. Also cross-"
"reference the closed ticket by leaving a comment in the original one -- this "
"allows to access more related information about the reported bug or "
"requested feature."
msgstr ""

# 8ad525aef4af4afa8fb3511e96672198
#: ../../internals/contributing/triaging-tickets.txt:252
msgid ""
"**Be polite.** No one likes having their ticket closed. It can be "
"frustrating or even discouraging. The best way to avoid turning people off "
"from contributing to Django is to be polite and friendly and to offer "
"suggestions for how they could improve this ticket and other tickets in the "
"future."
msgstr ""

# a340b2c23b84451f8c5f00cce95d71da
#: ../../internals/contributing/triaging-tickets.txt:258
msgid "A ticket can be resolved in a number of ways:"
msgstr ""

# a699e16dd2eb46e2b179e0dd415a2788
#: ../../internals/contributing/triaging-tickets.txt:262
msgid "fixed"
msgstr ""

# 0b2a4d3488ba40029d3d56bf54667aed
#: ../../internals/contributing/triaging-tickets.txt:261
msgid ""
"Used by the core developers once a patch has been rolled into Django and the "
"issue is fixed."
msgstr ""

# 9a05a79c067d42a39e5a7c43290bb7ba
#: ../../internals/contributing/triaging-tickets.txt:269
msgid "invalid"
msgstr ""

# 674181706ecd4c12a28e381090cce7cb
#: ../../internals/contributing/triaging-tickets.txt:265
msgid ""
"Used if the ticket is found to be incorrect. This means that the issue in "
"the ticket is actually the result of a user error, or describes a problem "
"with something other than Django, or isn't a bug report or feature request "
"at all (for example, some new users submit support queries as tickets)."
msgstr ""

# 4820e0842f7144aa95b39b742cc83a13
#: ../../internals/contributing/triaging-tickets.txt:277
msgid "wontfix"
msgstr ""

# a3fa5552b6d946b08f76fb2578fc5ff7
#: ../../internals/contributing/triaging-tickets.txt:272
msgid ""
"Used when a core developer decides that this request is not appropriate for "
"consideration in Django. This is usually chosen after discussion in the "
"`django-developers`_ mailing list. Feel free to start or join in discussions "
"of \"wontfix\" tickets on the django-developers_ mailing list, but please do "
"not reopen tickets closed as \"wontfix\" by a :doc:`core developer</"
"internals/committers>`."
msgstr ""

# c2520d35b8c14ab3b2639928b82a9901
#: ../../internals/contributing/triaging-tickets.txt:282
msgid "duplicate"
msgstr ""

# 2b222126edd34d11968b4bdde1b44d17
#: ../../internals/contributing/triaging-tickets.txt:280
msgid ""
"Used when another ticket covers the same issue. By closing duplicate "
"tickets, we keep all the discussion in one place, which helps everyone."
msgstr ""

# 6faf89a520e04df29496526d3838af9b
#: ../../internals/contributing/triaging-tickets.txt:286
msgid "worksforme"
msgstr ""

# 69c6f84756c64317951e5b636bd17537
#: ../../internals/contributing/triaging-tickets.txt:285
msgid ""
"Used when the ticket doesn't contain enough detail to replicate the original "
"bug."
msgstr ""

# d43c56ec8bba4df5b92cb6e10573c8a7
#: ../../internals/contributing/triaging-tickets.txt:291
msgid "needsinfo"
msgstr ""

# f180452f9d9b47dd9c86475b12f17e74
#: ../../internals/contributing/triaging-tickets.txt:289
msgid ""
"Used when the ticket does not contain enough information to replicate the "
"reported issue but is potentially still valid. The ticket should be reopened "
"when more information is supplied."
msgstr ""

# e8e6044afc63471bb4f13016a26425d0
#: ../../internals/contributing/triaging-tickets.txt:293
msgid ""
"If you believe that the ticket was closed in error -- because you're still "
"having the issue, or it's popped up somewhere else, or the triagers have "
"made a mistake -- please reopen the ticket and provide further information. "
"Again, please do not reopen tickets that have been marked as \"wontfix\" by "
"core developers and bring the issue to django-developers_ instead."
msgstr ""

# 183acdf6bf99486ea75207fc515cdde3
#: ../../internals/contributing/triaging-tickets.txt:302
msgid "How can I help with triaging?"
msgstr ""

# 49af574c8c5c4327813a39b9f752365b
#: ../../internals/contributing/triaging-tickets.txt:304
msgid ""
"Although the core developers make the big decisions in the ticket triage "
"process, there's a lot that general community members can do to help the "
"triage process. Really, **ANYONE** can help."
msgstr ""

# d8ce02c0efbc4455acd30a4d634e9cbd
#: ../../internals/contributing/triaging-tickets.txt:308
msgid ""
"Start by `creating an account on Trac`_. If you have an account but have "
"forgotten your password, you can reset it using the `password reset page`_."
msgstr ""

# 62ed862512a64dd7ad13081277e3c773
#: ../../internals/contributing/triaging-tickets.txt:311
msgid "Then, you can help out by:"
msgstr ""

# 8a02d1a7337a4cb2bf2bc414cc10fac7
#: ../../internals/contributing/triaging-tickets.txt:313
msgid ""
"Closing \"Unreviewed\" tickets as \"invalid\", \"worksforme\" or \"duplicate."
"\""
msgstr ""

# 7b67310fd77b4b25a5eaa00eb2692cb7
#: ../../internals/contributing/triaging-tickets.txt:315
msgid ""
"Promoting \"Unreviewed\" tickets to \"Design decision needed\" if a design "
"decision needs to be made, or \"Accepted\" in case of obvious bugs or "
"sensible, clearly defined, feature requests."
msgstr ""

# 62072b9e6a924bc283e61e5430f3b085
#: ../../internals/contributing/triaging-tickets.txt:319
msgid ""
"Correcting the \"Needs tests\", \"Needs documentation\", or \"Has patch\" "
"flags for tickets where they are incorrectly set."
msgstr ""

# e32722c0ccda4a4eb191eefbf200159c
#: ../../internals/contributing/triaging-tickets.txt:322
msgid ""
"Setting the \"`Easy pickings`_\" flag for tickets that are small and "
"relatively straightforward."
msgstr ""

# de54c5ba40d745df9ea4ef4a6bba6062
#: ../../internals/contributing/triaging-tickets.txt:325
msgid ""
"Checking that old tickets are still valid. If a ticket hasn't seen any "
"activity in a long time, it's possible that the problem has been fixed but "
"the ticket hasn't yet been closed."
msgstr ""

# 01de839e2c044d6fb9d91aa0449f362b
#: ../../internals/contributing/triaging-tickets.txt:329
msgid ""
"Contacting the owners of tickets that have been claimed but have not seen "
"any recent activity. If the owner doesn't respond after a week or so, remove "
"the owner's claim on the ticket."
msgstr ""

# b3fc863b2bc34f2bae147e16e79e0e44
#: ../../internals/contributing/triaging-tickets.txt:333
msgid ""
"Identifying trends and themes in the tickets. If there a lot of bug reports "
"about a particular part of Django, it may indicate we should consider "
"refactoring that part of the code. If a trend is emerging, you should raise "
"it for discussion (referencing the relevant tickets) on `django-developers`_."
msgstr ""

# 4f0b62232df7435883baabd93c3149c2
#: ../../internals/contributing/triaging-tickets.txt:339
msgid "Set the *type* of tickets that are still uncategorized."
msgstr ""

# c3ea6fa6137b45aba50f60394ff1e38b
#: ../../internals/contributing/triaging-tickets.txt:341
msgid ""
"Verify if patches submitted by other users are correct. If they do and also "
"contain appropriate documentation and tests then move them to the \"Ready "
"for Checkin\" stage. If they don't then leave a comment to explain why and "
"set the corresponding flags (\"Patch needs improvement\", \"Needs tests\" "
"etc.)."
msgstr ""

# 1c3b2f83c496456b9dc7726de238037d
#: ../../internals/contributing/triaging-tickets.txt:349
msgid ""
"The `Reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

# 68f7a75dec4d4854aed28c43e537970d
#: ../../internals/contributing/triaging-tickets.txt:353
msgid "You can also find more :doc:`new-contributors`."
msgstr ""

# a6457bf13443439cbb78895e66ef8d96
#: ../../internals/contributing/triaging-tickets.txt:357
msgid ""
"However, we do ask the following of all general community members working in "
"the ticket database:"
msgstr ""

# 3a97c789beca453cabae820c28d9e2d9
#: ../../internals/contributing/triaging-tickets.txt:360
msgid ""
"Please **don't** close tickets as \"wontfix.\" The core developers will make "
"the final determination of the fate of a ticket, usually after consultation "
"with the community."
msgstr ""

# aabbaf240cd94bd7a5c2d8173acdbd97
#: ../../internals/contributing/triaging-tickets.txt:364
msgid ""
"Please **don't** promote your own tickets to \"Ready for checkin\". You may "
"mark other people's tickets which you've reviewed as \"Ready for checkin\", "
"but you should get at minimum one other community member to review a patch "
"that you submit."
msgstr ""

# 216295d2457247328e09b3b0b0050a82
#: ../../internals/contributing/triaging-tickets.txt:369
msgid ""
"Please **don't** reverse a decision that has been made by a :doc:`core "
"developer</internals/committers>`. If you disagree with a decision that has "
"been made, please post a message to `django-developers`_."
msgstr ""

# c8e3b09c799d4ce88d3632ff27c1f58b
#: ../../internals/contributing/triaging-tickets.txt:373
msgid ""
"If you're unsure if you should be making a change, don't make the change but "
"instead leave a comment with your concerns on the ticket, or post a message "
"to `django-developers`_. It's okay to be unsure, but your input is still "
"valuable."
msgstr ""

# 3652093d47e444b49991c046f2361873
#: ../../internals/contributing/writing-code/coding-style.txt:3
msgid "Coding style"
msgstr ""

# b207e6cc4da649d78f9e8d66c54de5e8
#: ../../internals/contributing/writing-code/coding-style.txt:5
msgid ""
"Please follow these coding standards when writing code for inclusion in "
"Django."
msgstr ""

# e5e4128a6ae1459aba5a7d74fcbe3aea
#: ../../internals/contributing/writing-code/coding-style.txt:8
msgid "Python style"
msgstr ""

# 3e5314c83c764dbb9155fbb3f4ec2d36
#: ../../internals/contributing/writing-code/coding-style.txt:10
msgid "Unless otherwise specified, follow :pep:`8`."
msgstr ""

# 7ba2ede236dc49098f7d55f03197fb2d
#: ../../internals/contributing/writing-code/coding-style.txt:12
msgid ""
"You could use a tool like `pep8`_ to check for some problems in this area, "
"but remember that :pep:`8` is only a guide, so respect the style of the "
"surrounding code as a primary goal."
msgstr ""

# adccdee666a946b6a7cd058868fc4b00
#: ../../internals/contributing/writing-code/coding-style.txt:16
msgid ""
"One big exception to :pep:`8` is our preference of longer line lengths. "
"We're well into the 21st Century, and we have high-resolution computer "
"screens that can fit way more than 79 characters on a screen. Don't limit "
"lines of code to 79 characters if it means the code looks significantly "
"uglier or is harder to read."
msgstr ""

# 1b44e3e2494045dfab9e3e885398ea80
#: ../../internals/contributing/writing-code/coding-style.txt:22
msgid "Use four spaces for indentation."
msgstr ""

# 665238a6dcff41849d3c6bf11886a1da
#: ../../internals/contributing/writing-code/coding-style.txt:24
msgid ""
"Use underscores, not camelCase, for variable, function and method names (i."
"e. ``poll.get_unique_voters()``, not ``poll.getUniqueVoters``)."
msgstr ""

# eaa658cdde4543d49d860bf004e9da5b
#: ../../internals/contributing/writing-code/coding-style.txt:27
msgid ""
"Use ``InitialCaps`` for class names (or for factory functions that return "
"classes)."
msgstr ""

# b12cad1ab2264af684fffab2b2ab3593
#: ../../internals/contributing/writing-code/coding-style.txt:30
msgid "In docstrings, use \"action words\" such as::"
msgstr ""

# 1ea77d758fab45fcbaba4388ef4f5530
#: ../../internals/contributing/writing-code/coding-style.txt:38
msgid "Here's an example of what not to do::"
msgstr ""

# 2f13afae7d9e4a3783133af2d93d9e7b
#: ../../internals/contributing/writing-code/coding-style.txt:47
msgid "Template style"
msgstr ""

# adf3be706dfe43c7a2390bad4277d03e
#: ../../internals/contributing/writing-code/coding-style.txt:49
msgid ""
"In Django template code, put one (and only one) space between the curly "
"brackets and the tag contents."
msgstr ""

# b84112be614d4c118ab66f28773b934c
#: ../../internals/contributing/writing-code/coding-style.txt:52
msgid "Do this:"
msgstr ""

# 3ee384568c46419bb27759a22cb8041b
#: ../../internals/contributing/writing-code/coding-style.txt:58
msgid "Don't do this:"
msgstr ""

# 7d80e419be2a4c9aa90934da6ebeda6c
#: ../../internals/contributing/writing-code/coding-style.txt:65
msgid "View style"
msgstr ""

# b97525b28b3d44de8b1e09c8ce11e5eb
#: ../../internals/contributing/writing-code/coding-style.txt:67
msgid ""
"In Django views, the first parameter in a view function should be called "
"``request``."
msgstr ""

# de18be66f4d74cb7ac7845e955ca809b
# 3c3f835cc57f48668de9f58868be4882
# efadc990092b4ce1a5abe22443e2a615
#: ../../internals/contributing/writing-code/coding-style.txt:70
#: ../../internals/contributing/writing-code/coding-style.txt:86
#: ../../internals/contributing/writing-code/coding-style.txt:101
msgid "Do this::"
msgstr ""

# 6694b4f01e6a48c5822d728bb61a89f1
# abecc7718c214a84a18f4523dafc3d2a
# bd9c912784f2458bb1a93f648145b6c7
#: ../../internals/contributing/writing-code/coding-style.txt:75
#: ../../internals/contributing/writing-code/coding-style.txt:92
#: ../../internals/contributing/writing-code/coding-style.txt:110
msgid "Don't do this::"
msgstr ""

# 9638d121ad174b95a560cb3e5304c9af
#: ../../internals/contributing/writing-code/coding-style.txt:81
msgid "Model style"
msgstr ""

# 60cf450edea4458782c5e9cef15747b6
#: ../../internals/contributing/writing-code/coding-style.txt:83
msgid ""
"Field names should be all lowercase, using underscores instead of camelCase."
msgstr ""

# c6b127341070475993e679a8a3c1399d
#: ../../internals/contributing/writing-code/coding-style.txt:98
msgid ""
"The ``class Meta`` should appear *after* the fields are defined, with a "
"single blank line separating the fields and the class definition."
msgstr ""

# cd58ddece78b4e0f8098725cf4229ff0
#: ../../internals/contributing/writing-code/coding-style.txt:118
msgid "Don't do this, either::"
msgstr ""

# 2343350a53904590b79eebbfbee002a0
#: ../../internals/contributing/writing-code/coding-style.txt:127
msgid ""
"The order of model inner classes and standard methods should be as follows "
"(noting that these are not all required):"
msgstr ""

# d533ed71aec243c282adaf6b1ef87056
#: ../../internals/contributing/writing-code/coding-style.txt:130
msgid "All database fields"
msgstr ""

# 07cbf2e1652f4f189415c5c68e8e0a8f
#: ../../internals/contributing/writing-code/coding-style.txt:131
msgid "Custom manager attributes"
msgstr ""

# 78ec013769644727b246496eb4a74fe5
#: ../../internals/contributing/writing-code/coding-style.txt:132
msgid "``class Meta``"
msgstr ""

# 5cf729ed9bac47208306b03a17765e0b
#: ../../internals/contributing/writing-code/coding-style.txt:133
msgid "``def __unicode__()``"
msgstr ""

# 9bba2e9c99cd4baf9b63fbb7068de046
#: ../../internals/contributing/writing-code/coding-style.txt:134
msgid "``def __str__()``"
msgstr ""

# 321aca4e86c74bec888d45317edc446f
#: ../../internals/contributing/writing-code/coding-style.txt:135
msgid "``def save()``"
msgstr ""

# d0561015c3d646a5bd0c85a92fb28a09
#: ../../internals/contributing/writing-code/coding-style.txt:136
msgid "``def get_absolute_url()``"
msgstr ""

# ec43150f091148d1902f19b02b3528c0
#: ../../internals/contributing/writing-code/coding-style.txt:137
msgid "Any custom methods"
msgstr ""

# e5172f9e159f46d88ab6a4ffc1fabfbf
#: ../../internals/contributing/writing-code/coding-style.txt:139
msgid ""
"If ``choices`` is defined for a given model field, define each choice as a "
"tuple of tuples, with an all-uppercase name as a class attribute on the "
"model. Example::"
msgstr ""

# b5f8fab82b1d4d05bff881c3150f7dd7
#: ../../internals/contributing/writing-code/coding-style.txt:152
msgid "Use of ``django.conf.settings``"
msgstr ""

# fa533fdbdfad4f65a63d89971d228e28
#: ../../internals/contributing/writing-code/coding-style.txt:154
msgid ""
"Modules should not in general use settings stored in ``django.conf."
"settings`` at the top level (i.e. evaluated when the module is imported). "
"The explanation for this is as follows:"
msgstr ""

# ae1c8e7701064bcbba80fdcaadcbd424
#: ../../internals/contributing/writing-code/coding-style.txt:158
msgid ""
"Manual configuration of settings (i.e. not relying on the "
"``DJANGO_SETTINGS_MODULE`` environment variable) is allowed and possible as "
"follows::"
msgstr ""

# 37c266429fbf4269bf566a632b8e2d2c
#: ../../internals/contributing/writing-code/coding-style.txt:166
msgid ""
"However, if any setting is accessed before the ``settings.configure`` line, "
"this will not work. (Internally, ``settings`` is a ``LazyObject`` which "
"configures itself automatically when the settings are accessed if it has not "
"already been configured)."
msgstr ""

# ab248662324e4016858150486e8b10a2
#: ../../internals/contributing/writing-code/coding-style.txt:171
msgid "So, if there is a module containing some code as follows::"
msgstr ""

# 5d3048af16864682aad38aec95efbd7f
#: ../../internals/contributing/writing-code/coding-style.txt:178
msgid ""
"...then importing this module will cause the settings object to be "
"configured. That means that the ability for third parties to import the "
"module at the top level is incompatible with the ability to configure the "
"settings object manually, or makes it very difficult in some circumstances."
msgstr ""

# 0c8cd2b4537d45e7a8a38245fb1e5cf3
#: ../../internals/contributing/writing-code/coding-style.txt:183
msgid ""
"Instead of the above code, a level of laziness or indirection must be used, "
"such as ``django.utils.functional.LazyObject``, ``django.utils.functional."
"lazy()`` or ``lambda``."
msgstr ""

# 0de5918fea2845f6a35dcc7533852df1
#: ../../internals/contributing/writing-code/coding-style.txt:188
msgid "Miscellaneous"
msgstr ""

# 727180238a2c437db124a327f2bb1323
#: ../../internals/contributing/writing-code/coding-style.txt:190
msgid ""
"Mark all strings for internationalization; see the :doc:`i18n documentation "
"</topics/i18n/index>` for details."
msgstr ""

# 5716d80cc12e461ba5778ddfd6b322fa
#: ../../internals/contributing/writing-code/coding-style.txt:193
msgid ""
"Remove ``import`` statements that are no longer used when you change code. "
"The most common tools for this task are `pyflakes`_ and `pylint`_."
msgstr ""

# 345774bb3e0f4627840783a845750bae
#: ../../internals/contributing/writing-code/coding-style.txt:196
msgid ""
"Systematically remove all trailing whitespaces from your code as those add "
"unnecessary bytes, add visual clutter to the patches and can also "
"occasionally cause unnecessary merge conflicts. Some IDE's can be configured "
"to automatically remove them and most VCS tools can be set to highlight them "
"in diff outputs. Note, however, that patches which only remove whitespace "
"(or only make changes for nominal :pep:`8` conformance) are likely to be "
"rejected, since they only introduce noise rather than code improvement. Tidy "
"up when you're next changing code in the area."
msgstr ""

# d2e8ac7a8f7949f1a78ff49e71ad1d04
#: ../../internals/contributing/writing-code/coding-style.txt:205
msgid ""
"Please don't put your name in the code you contribute. Our policy is to keep "
"contributors' names in the ``AUTHORS`` file distributed with Django -- not "
"scattered throughout the codebase itself. Feel free to include a change to "
"the ``AUTHORS`` file in your patch if you make more than a single trivial "
"change."
msgstr ""

# c46a6fc284a5450ab8d5d8f0ff02b309
#: ../../internals/contributing/writing-code/index.txt:3
msgid "Writing code"
msgstr ""

# 5e97ffad856f4d4cb02dd1762f926efc
#: ../../internals/contributing/writing-code/index.txt:5
msgid ""
"So you'd like to write some code to improve Django. Awesome! Browse the "
"following sections to find out how to give your code patches the best "
"chances to be included in Django core:"
msgstr ""

# 6ef361115dba4d5d8af9168d917621b9
#: ../../internals/contributing/writing-code/submitting-patches.txt:3
msgid "Submitting patches"
msgstr ""

# a7bc98da7f894a18b1f91211b4094063
#: ../../internals/contributing/writing-code/submitting-patches.txt:5
msgid ""
"We're always grateful for patches to Django's code. Indeed, bug reports with "
"associated patches will get fixed *far* more quickly than those without "
"patches."
msgstr ""

# c7242b3461c2464d9917fa6887149b3b
#: ../../internals/contributing/writing-code/submitting-patches.txt:10
msgid "Typo fixes and trivial documentation changes"
msgstr ""

# d0aa5963cb9f4f21984c965b29509872
#: ../../internals/contributing/writing-code/submitting-patches.txt:12
msgid ""
"If you are fixing a really trivial issue, for example changing a word in the "
"documentation, the preferred way to provide the patch is using GitHub pull "
"requests without a Trac ticket. Trac tickets are still acceptable."
msgstr ""

# 4a51edd387ba4b76983e82b111db1d71
#: ../../internals/contributing/writing-code/submitting-patches.txt:16
msgid ""
"See the :doc:`working-with-git` for more details on how to use pull requests."
msgstr ""

# 397f6f58b3654aa1a096f5fa21f0248b
#: ../../internals/contributing/writing-code/submitting-patches.txt:19
msgid "\"Claiming\" tickets"
msgstr ""

# 31ebb28f171342e4adb62c1f028528d4
#: ../../internals/contributing/writing-code/submitting-patches.txt:21
msgid ""
"In an open-source project with hundreds of contributors around the world, "
"it's important to manage communication efficiently so that work doesn't get "
"duplicated and contributors can be as effective as possible."
msgstr ""

# 42c07ad7ea17453aa8b5ee499f0c064c
#: ../../internals/contributing/writing-code/submitting-patches.txt:25
msgid ""
"Hence, our policy is for contributors to \"claim\" tickets in order to let "
"other developers know that a particular bug or feature is being worked on."
msgstr ""

# 1f35f9a8ac27479aa336efa12d995824
#: ../../internals/contributing/writing-code/submitting-patches.txt:28
msgid ""
"If you have identified a contribution you want to make and you're capable of "
"fixing it (as measured by your coding ability, knowledge of Django internals "
"and time availability), claim it by following these steps:"
msgstr ""

# 4fe125659be54a919c795003c6d9ce33
#: ../../internals/contributing/writing-code/submitting-patches.txt:32
msgid ""
"`Create an account`_ to use in our ticket system. If you have an account but "
"have forgotten your password, you can reset it using the `password reset "
"page`_."
msgstr ""

# af6e239ded3b4062a74e0e003c323d7b
#: ../../internals/contributing/writing-code/submitting-patches.txt:36
msgid ""
"If a ticket for this issue doesn't exist yet, create one in our `ticket "
"tracker`_."
msgstr ""

# 4d01ec75b1f148c39ddbef8724070488
#: ../../internals/contributing/writing-code/submitting-patches.txt:39
msgid ""
"If a ticket for this issue already exists, make sure nobody else has claimed "
"it. To do this, look at the \"Assigned to\" section of the ticket. If it's "
"assigned to \"nobody,\" then it's available to be claimed. Otherwise, "
"somebody else is working on this ticket, and you either find another bug/"
"feature to work on, or contact the developer working on the ticket to offer "
"your help."
msgstr ""

# 5fbaaf365a844fa4b3c47ec555813e23
#: ../../internals/contributing/writing-code/submitting-patches.txt:46
msgid ""
"Log into your account, if you haven't already, by clicking \"Login\" in the "
"upper right of the ticket page."
msgstr ""

# 17b70f21bf384681b8388e90fda5b044
#: ../../internals/contributing/writing-code/submitting-patches.txt:49
msgid "Claim the ticket:"
msgstr ""

# 4bd177dc2d2245d4b4a7e16c20c33cda
#: ../../internals/contributing/writing-code/submitting-patches.txt:51
msgid ""
"click the \"accept\" radio button under \"Action\" near the bottom of the "
"page,"
msgstr ""

# fa122281e9e54c368a12c6d6d230d1d7
#: ../../internals/contributing/writing-code/submitting-patches.txt:53
msgid "then click \"Submit changes.\""
msgstr ""

# c3ff532d855348b7a0a5f58779381ca5
#: ../../internals/contributing/writing-code/submitting-patches.txt:56
msgid ""
"The Django software foundation requests that anyone contributing more than a "
"trivial patch to Django sign and submit a `Contributor License Agreement`_, "
"this ensures that the Django Software Foundation has clear license to all "
"contributions allowing for a clear license for all users."
msgstr ""

# 5ec80b01866e40688ce17051ae95229e
#: ../../internals/contributing/writing-code/submitting-patches.txt:66
msgid "Ticket claimers' responsibility"
msgstr ""

# 020d658ae22e4576b2b576a0715b9401
#: ../../internals/contributing/writing-code/submitting-patches.txt:68
msgid ""
"Once you've claimed a ticket, you have a responsibility to work on that "
"ticket in a reasonably timely fashion. If you don't have time to work on it, "
"either unclaim it or don't claim it in the first place!"
msgstr ""

# c530da682a1e47a49be10bb325930d40
#: ../../internals/contributing/writing-code/submitting-patches.txt:72
msgid ""
"If there's no sign of progress on a particular claimed ticket for a week or "
"two, another developer may ask you to relinquish the ticket claim so that "
"it's no longer monopolized and somebody else can claim it."
msgstr ""

# 1ffada8903e24d27b204a1fd14b3d20d
#: ../../internals/contributing/writing-code/submitting-patches.txt:76
msgid ""
"If you've claimed a ticket and it's taking a long time (days or weeks) to "
"code, keep everybody updated by posting comments on the ticket. If you don't "
"provide regular updates, and you don't respond to a request for a progress "
"report, your claim on the ticket may be revoked."
msgstr ""

# cefda7b47d2645f1ab3ce439a587c4ae
#: ../../internals/contributing/writing-code/submitting-patches.txt:81
msgid "As always, more communication is better than less communication!"
msgstr ""

# 8c77a849304942ac992d5d7529660a56
#: ../../internals/contributing/writing-code/submitting-patches.txt:84
msgid "Which tickets should be claimed?"
msgstr ""

# b87a78db60c041be8a039399f378909b
#: ../../internals/contributing/writing-code/submitting-patches.txt:86
msgid ""
"Of course, going through the steps of claiming tickets is overkill in some "
"cases."
msgstr ""

# b34925cfbad342068fc5e3b1ab78a588
#: ../../internals/contributing/writing-code/submitting-patches.txt:89
msgid ""
"In the case of small changes, such as typos in the documentation or small "
"bugs that will only take a few minutes to fix, you don't need to jump "
"through the hoops of claiming tickets. Just submit your patch and be done "
"with it."
msgstr ""

# 6aa8f75b52e3459ca0561101bb86da63
#: ../../internals/contributing/writing-code/submitting-patches.txt:94
msgid ""
"Of course, it is *always* acceptable, regardless whether someone has claimed "
"it or not, to submit patches to a ticket if you happen to have a patch ready."
msgstr ""

# 7e7d4e3e0b91451fa9cd9d0eadecf426
#: ../../internals/contributing/writing-code/submitting-patches.txt:100
msgid "Patch style"
msgstr ""

# 70efcff394e4482e864dde418b7730c1
#: ../../internals/contributing/writing-code/submitting-patches.txt:102
msgid ""
"Make sure that any contribution you do fulfills at least the following "
"requirements:"
msgstr ""

# 66973e7225fe4bb0b276dc439ccf08d7
#: ../../internals/contributing/writing-code/submitting-patches.txt:105
msgid ""
"The code required to fix a problem or add a feature is an essential part of "
"a patch, but it is not the only part. A good patch should also include a :"
"doc:`regression test <unit-tests>` to validate the behavior that has been "
"fixed and to prevent the problem from arising again. Also, if some tickets "
"are relevant to the code that you've written, mention the ticket numbers in "
"some comments in the test so that one can easily trace back the relevant "
"discussions after your patch gets committed, and the tickets get closed."
msgstr ""

# 9e87e4dddaee478b9396bb329025254f
#: ../../internals/contributing/writing-code/submitting-patches.txt:113
msgid ""
"If the code associated with a patch adds a new feature, or modifies behavior "
"of an existing feature, the patch should also contain documentation."
msgstr ""

# 2a703236e8714192acd68957c787fd6d
#: ../../internals/contributing/writing-code/submitting-patches.txt:117
msgid ""
"You can use either GitHub branches and pull requests or direct patches to "
"publish your work. If you use the Git workflow, then you should announce "
"your branch in the ticket by including a link to your branch. When you think "
"your work is ready to be merged in create a pull request."
msgstr ""

# 66643a523c284da39b956b06893f7520
#: ../../internals/contributing/writing-code/submitting-patches.txt:122
msgid "See the :doc:`working-with-git` documentation for mode details."
msgstr ""

# c30dae53b2194219b40ea0c00638cd03
#: ../../internals/contributing/writing-code/submitting-patches.txt:124
msgid ""
"You can also use patches in Trac. When using this style, follow these "
"guidelines."
msgstr ""

# 9e2fef9e74324af5af17019f728d0be3
#: ../../internals/contributing/writing-code/submitting-patches.txt:127
msgid ""
"Submit patches in the format returned by the ``git diff`` command. An "
"exception is for code changes that are described more clearly in plain "
"English than in code. Indentation is the most common example; it's hard to "
"read patches when the only difference in code is that it's indented."
msgstr ""

# c45a6c0a872749dda980cd74b79b578f
#: ../../internals/contributing/writing-code/submitting-patches.txt:133
msgid ""
"Attach patches to a ticket in the `ticket tracker`_, using the \"attach file"
"\" button. Please *don't* put the patch in the ticket description or comment "
"unless it's a single line patch."
msgstr ""

# 33fe855585c9495bb10b6c7aef2c0260
#: ../../internals/contributing/writing-code/submitting-patches.txt:137
msgid ""
"Name the patch file with a ``.diff`` extension; this will let the ticket "
"tracker apply correct syntax highlighting, which is quite helpful."
msgstr ""

# 5b27d68ce897465aa2564ba6373bec46
#: ../../internals/contributing/writing-code/submitting-patches.txt:140
msgid "Regardless of the way you submit your work, follow these steps."
msgstr ""

# a564eb909ecb4f98830510e3d808cee8
#: ../../internals/contributing/writing-code/submitting-patches.txt:142
msgid "Make sure your code matches our :doc:`coding-style`."
msgstr ""

# f8a0e0eda75b4f12b50e0850852dacd1
#: ../../internals/contributing/writing-code/submitting-patches.txt:144
msgid ""
"Check the \"Has patch\" box on the ticket details. This will make it obvious "
"that the ticket includes a patch, and it will add the ticket to the `list of "
"tickets with patches`_."
msgstr ""

# cfc5dde601d74eecbf81b7633eddc250
#: ../../internals/contributing/writing-code/submitting-patches.txt:150
msgid "Non-trivial patches"
msgstr ""

# 4caf06d0ef664983a1039b94fcef2ac5
#: ../../internals/contributing/writing-code/submitting-patches.txt:152
msgid ""
"A \"non-trivial\" patch is one that is more than a simple bug fix. It's a "
"patch that introduces Django functionality and makes some sort of design "
"decision."
msgstr ""

# e5f3ba7e74dd46908a6a6eab67668eb3
#: ../../internals/contributing/writing-code/submitting-patches.txt:155
msgid ""
"If you provide a non-trivial patch, include evidence that alternatives have "
"been discussed on `django-developers`_."
msgstr ""

# 9ca0d5f41ab34bc6915f887afce3438e
#: ../../internals/contributing/writing-code/submitting-patches.txt:158
msgid ""
"If you're not sure whether your patch should be considered non-trivial, just "
"ask."
msgstr ""

# b96ef333b71549dd8386ed05b90b53a8
#: ../../internals/contributing/writing-code/submitting-patches.txt:162
msgid "Javascript patches"
msgstr ""

# 147052cec5c14050a8fd60194b858508
#: ../../internals/contributing/writing-code/submitting-patches.txt:164
msgid ""
"Django's admin system leverages the jQuery framework to increase the "
"capabilities of the admin interface. In conjunction, there is an emphasis on "
"admin javascript performance and minimizing overall admin media file size. "
"Serving compressed or \"minified\" versions of javascript files is "
"considered best practice in this regard."
msgstr ""

# 2c35d400dbcf4add91f8cb7322f694b5
#: ../../internals/contributing/writing-code/submitting-patches.txt:170
msgid ""
"To that end, patches for javascript files should include both the original "
"code for future development (e.g. ``foo.js``), and a compressed version for "
"production use (e.g. ``foo.min.js``). Any links to the file in the codebase "
"should point to the compressed version."
msgstr ""

# 104d595fffb84149a2165226f556e4e1
#: ../../internals/contributing/writing-code/submitting-patches.txt:176
msgid "Compressing JavaScript"
msgstr ""

# 7494e8d9baa54edaa8eb9ac54a7b8a1c
#: ../../internals/contributing/writing-code/submitting-patches.txt:178
msgid ""
"To simplify the process of providing optimized javascript code, Django "
"includes a handy python script which should be used to create a \"minified\" "
"version. To run it::"
msgstr ""

# 9caf65e325434ae4ba0ec9bf80d222ff
#: ../../internals/contributing/writing-code/submitting-patches.txt:184
msgid ""
"Behind the scenes, ``compress.py`` is a front-end for Google's `Closure "
"Compiler`_ which is written in Java. However, the Closure Compiler library "
"is not bundled with Django directly, so those wishing to contribute complete "
"javascript patches will need to download and install the library "
"independently."
msgstr ""

# 66142ab42ddc43a78fa83b96262437bb
#: ../../internals/contributing/writing-code/submitting-patches.txt:190
msgid ""
"The Closure Compiler library requires Java version 6 or higher (Java 1.6 or "
"higher on Mac OS X. Note that Mac OS X 10.5 and earlier did not ship with "
"Java 1.6 by default, so it may be necessary to upgrade your Java "
"installation before the tool will be functional. Also note that even after "
"upgrading Java, the default ``/usr/bin/java`` command may remain linked to "
"the previous Java binary, so relinking that command may be necessary as "
"well.)"
msgstr ""

# 65fcb19fcf344f50b903890225211e60
#: ../../internals/contributing/writing-code/submitting-patches.txt:197
msgid ""
"Please don't forget to run ``compress.py`` and include the ``diff`` of the "
"minified scripts when submitting patches for Django's javascript."
msgstr ""

# 5b01996b952f4ef2a2ec29f9d9e6dc27
#: ../../internals/contributing/writing-code/unit-tests.txt:3
msgid "Unit tests"
msgstr ""

# 9f5109bb9ae441b4adfd4fe629705a35
#: ../../internals/contributing/writing-code/unit-tests.txt:5
msgid ""
"Django comes with a test suite of its own, in the ``tests`` directory of the "
"code base. It's our policy to make sure all tests pass at all times."
msgstr ""

# e17092eb3a3e498babbb4d4690a0ece0
#: ../../internals/contributing/writing-code/unit-tests.txt:8
msgid "The tests cover:"
msgstr ""

# 01122bba538e47b7951581dd04a89f60
#: ../../internals/contributing/writing-code/unit-tests.txt:10
msgid "Models and the database API (``tests/modeltests``),"
msgstr ""

# aced10eff2504caa97bce349522b554b
#: ../../internals/contributing/writing-code/unit-tests.txt:11
msgid "Everything else in core Django code (``tests/regressiontests``),"
msgstr ""

# 8afa86dbcdf046e0b3e05480df40196a
#: ../../internals/contributing/writing-code/unit-tests.txt:12
msgid ""
":ref:`contrib-apps` (``django/contrib/<app>/tests`` or ``tests/"
"regressiontests/<app>_...``)."
msgstr ""

# 4dc63498a32a4d1aa696a35e5457fc56
#: ../../internals/contributing/writing-code/unit-tests.txt:15
msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

# 76b29f9b94944689a2e6beeaa65e061a
#: ../../internals/contributing/writing-code/unit-tests.txt:17
msgid ""
"The Django tests all use the testing infrastructure that ships with Django "
"for testing applications. See :doc:`Testing Django applications </topics/"
"testing/overview>` for an explanation of how to write new tests."
msgstr ""

# e2452f7cf4ba4290b77a9dc323bcfaeb
#: ../../internals/contributing/writing-code/unit-tests.txt:24
msgid "Running the unit tests"
msgstr ""

# 7fd0b6d1d51e4b138a7a0a6cce22ba3b
#: ../../internals/contributing/writing-code/unit-tests.txt:27
msgid "Quickstart"
msgstr ""

# 83e8f5e874594ab3a124211883428d77
#: ../../internals/contributing/writing-code/unit-tests.txt:29
msgid ""
"Running the tests requires a Django settings module that defines the "
"databases to use. To make it easy to get started, Django provides a sample "
"settings module that uses the SQLite database. To run the tests with this "
"sample ``settings`` module:"
msgstr ""

# 4d6d3d14e99c46a1baa8946eb9b4c3f4
#: ../../internals/contributing/writing-code/unit-tests.txt:43
msgid "Using another ``settings`` module"
msgstr ""

# e3a33d9bc6114ec1ada0cf0557b5c4ae
#: ../../internals/contributing/writing-code/unit-tests.txt:45
msgid ""
"The included settings module allows you to run the test suite using SQLite. "
"If you want to test behavior using a different database (and if you're "
"proposing patches for Django, it's a good idea to test across databases), "
"you may need to define your own settings file."
msgstr ""

# 26779805febf4bba98fbad15679481f7
#: ../../internals/contributing/writing-code/unit-tests.txt:50
msgid ""
"To run the tests with different settings, ensure that the module is on your "
"``PYTHONPATH`` and pass the module with ``--settings``."
msgstr ""

# 5a98b5e39b3646ca9030fdb0260402c3
#: ../../internals/contributing/writing-code/unit-tests.txt:53
msgid ""
"The :setting:`DATABASES` setting in any test settings module needs to define "
"two databases:"
msgstr ""

# 0e77f4cf54be43a181900daa3c2ffceb
#: ../../internals/contributing/writing-code/unit-tests.txt:56
msgid ""
"A ``default`` database. This database should use the backend that you want "
"to use for primary testing"
msgstr ""

# 685692ebe8f7464f9566221a335d3f8b
#: ../../internals/contributing/writing-code/unit-tests.txt:59
msgid ""
"A database with the alias ``other``. The ``other`` database is used to "
"establish that queries can be directed to different databases. As a result, "
"this database can use any backend you want. It doesn't need to use the same "
"backend as the ``default`` database (although it can use the same backend if "
"you want to)."
msgstr ""

# 210d0c7a237443c39eedb0d6f389259d
#: ../../internals/contributing/writing-code/unit-tests.txt:65
msgid ""
"If you're using a backend that isn't SQLite, you will need to provide other "
"details for each database:"
msgstr ""

# 5d35dd5b45ae41abb66058db7fe0db14
#: ../../internals/contributing/writing-code/unit-tests.txt:68
msgid ""
"The :setting:`USER` option needs to specify an existing user account for the "
"database."
msgstr ""

# d6215df67f9740c6b0245469fabd3e7e
#: ../../internals/contributing/writing-code/unit-tests.txt:71
msgid ""
"The :setting:`PASSWORD` option needs to provide the password for the :"
"setting:`USER` that has been specified."
msgstr ""

# c98de75ab85c4ead8bdcd5cfe882a858
#: ../../internals/contributing/writing-code/unit-tests.txt:74
msgid ""
"The :setting:`NAME` option must be the name of an existing database to which "
"the given user has permission to connect. The unit tests will not touch this "
"database; the test runner creates a new database whose name is :setting:"
"`NAME` prefixed with ``test_``, and this test database is deleted when the "
"tests are finished. This means your user account needs permission to execute "
"``CREATE DATABASE``."
msgstr ""

# 59c97cd4a16e45bc9c3eab0e13459429
#: ../../internals/contributing/writing-code/unit-tests.txt:81
msgid ""
"You will also need to ensure that your database uses UTF-8 as the default "
"character set. If your database server doesn't use UTF-8 as a default "
"charset, you will need to include a value for :setting:`TEST_CHARSET` in the "
"settings dictionary for the applicable database."
msgstr ""

# fe0cff0a6c2549dab364759708bb5b0c
#: ../../internals/contributing/writing-code/unit-tests.txt:87
msgid "Running only some of the tests"
msgstr ""

# 26947c6abeb847ca81bfa4625b6a1446
#: ../../internals/contributing/writing-code/unit-tests.txt:89
msgid ""
"Django's entire test suite takes a while to run, and running every single "
"test could be redundant if, say, you just added a test to Django that you "
"want to run quickly without running everything else. You can run a subset of "
"the unit tests by appending the names of the test modules to ``runtests.py`` "
"on the command line."
msgstr ""

# b2f7c2c8c9ad45748aa9efab6daf148c
#: ../../internals/contributing/writing-code/unit-tests.txt:95
msgid ""
"For example, if you'd like to run tests only for generic relations and "
"internationalization, type:"
msgstr ""

# 9017b126f9d44fe1afbc19b4756129c8
#: ../../internals/contributing/writing-code/unit-tests.txt:102
msgid ""
"How do you find out the names of individual tests? Look in ``tests/"
"modeltests`` and ``tests/regressiontests`` â€” each directory name there is "
"the name of a test. Contrib app names are also valid test names."
msgstr ""

# 126d9c5277454003bc3031af6325737f
#: ../../internals/contributing/writing-code/unit-tests.txt:106
msgid ""
"If you just want to run a particular class of tests, you can specify a list "
"of paths to individual test classes. For example, to run the "
"``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

# 30ff4d965d6341ba8de139d53f705cdf
#: ../../internals/contributing/writing-code/unit-tests.txt:114
msgid "Going beyond that, you can specify an individual test method like this:"
msgstr ""

# 20d5518bc98e463ebed9e12174ee9bdd
#: ../../internals/contributing/writing-code/unit-tests.txt:121
msgid "Running the Selenium tests"
msgstr ""

# 5bf714b0a84343acb35e255a7105c3b9
#: ../../internals/contributing/writing-code/unit-tests.txt:123
msgid ""
"Some admin tests require Selenium 2, Firefox and Python >= 2.6 to work via a "
"real Web browser. To allow those tests to run and not be skipped, you must "
"install the selenium_ package (version > 2.13) into your Python path."
msgstr ""

# 753a1ef98fdd49afa8e946de7d9aa7ec
#: ../../internals/contributing/writing-code/unit-tests.txt:127
msgid "Then, run the tests normally, for example:"
msgstr ""

# a867707418814b96ab47c8ecf453ecd0
#: ../../internals/contributing/writing-code/unit-tests.txt:136
msgid "Running all the tests"
msgstr ""

# c0fcda993e4141da8372fe39113d5476
#: ../../internals/contributing/writing-code/unit-tests.txt:138
msgid ""
"If you want to run the full suite of tests, you'll need to install a number "
"of dependencies:"
msgstr ""

# 801f2474c67c4b57b0283007d39076a3
#: ../../internals/contributing/writing-code/unit-tests.txt:141
msgid "PIL_"
msgstr ""

# b9d98b8958574a8196b33f05f4db827c
#: ../../internals/contributing/writing-code/unit-tests.txt:142
msgid "py-bcrypt_"
msgstr ""

# bb5251d871e64b2e99741bfcf78310a4
#: ../../internals/contributing/writing-code/unit-tests.txt:143
msgid "PyYAML_"
msgstr ""

# e6f76c9eed3e43c2ab9ca3197371a7ec
#: ../../internals/contributing/writing-code/unit-tests.txt:144
msgid "Markdown_"
msgstr ""

# dfbe30be83a84a17b4ef581dd1cd0c86
#: ../../internals/contributing/writing-code/unit-tests.txt:145
msgid "Textile_"
msgstr ""

# 2a2308d14f344b7a87e89cb8f29d13ff
#: ../../internals/contributing/writing-code/unit-tests.txt:146
msgid "Docutils_"
msgstr ""

# 43d73d4a715f4acbb1bba7ef182285ec
#: ../../internals/contributing/writing-code/unit-tests.txt:147
msgid "pytz_"
msgstr ""

# 0377a498dede414f98c9670b821428b8
#: ../../internals/contributing/writing-code/unit-tests.txt:148
msgid "setuptools_"
msgstr ""

# 2cbe2f47e1654921b63917a664e2b620
#: ../../internals/contributing/writing-code/unit-tests.txt:149
msgid "memcached_, plus a :ref:`supported Python binding <memcached>`"
msgstr ""

# 7fa74e510fdf4c43a72999ecff43b037
#: ../../internals/contributing/writing-code/unit-tests.txt:150
msgid "gettext_ (:ref:`gettext_on_windows`)"
msgstr ""

# 640cfebf3f15404baa10354eb3a5f9fe
#: ../../internals/contributing/writing-code/unit-tests.txt:151
msgid "selenium_"
msgstr ""

# 67064aa7479e4e519eb2d2bb23c7a213
#: ../../internals/contributing/writing-code/unit-tests.txt:153
msgid ""
"You can find these dependencies in `pip requirements files`_ inside the "
"``tests/requirements`` directory of the Django source tree and install them "
"like so::"
msgstr ""

# fd16dbfaba534136b156bbc8e9be84d6
#: ../../internals/contributing/writing-code/unit-tests.txt:159
msgid ""
"You can also install the database adapter(s) of your choice using ``oracle."
"txt``, ``mysql.txt``, or ``postgres.txt``."
msgstr ""

# bd89270dbba24ffaacb71f544da08d68
#: ../../internals/contributing/writing-code/unit-tests.txt:162
msgid ""
"If you want to test the memcached cache backend, you'll also need to define "
"a :setting:`CACHES` setting that points at your memcached instance."
msgstr ""

# 402e6230d03b4e38a1fe2bb83326c242
#: ../../internals/contributing/writing-code/unit-tests.txt:165
msgid ""
"To run the GeoDjango tests, you will need to :doc:`setup a spatial database "
"and install the Geospatial libraries</ref/contrib/gis/install/index>`."
msgstr ""

# 0c13f72650874fbdb8307f41287efc43
#: ../../internals/contributing/writing-code/unit-tests.txt:168
msgid ""
"Each of these dependencies is optional. If you're missing any of them, the "
"associated tests will be skipped."
msgstr ""

# 9326cca89ab74d3bb42b88fd50c87580
#: ../../internals/contributing/writing-code/unit-tests.txt:166
msgid "Code coverage"
msgstr ""

# 171429c606064d6b90443fe66c00bf37
#: ../../internals/contributing/writing-code/unit-tests.txt:168
msgid ""
"Contributors are encouraged to run coverage on the test suite to identify "
"areas that need additional tests. The coverage tool installation and use is "
"described in :ref:`testing code coverage<topics-testing-code-coverage>`."
msgstr ""

# d01bd650f09c4ca0abdfc51f8433374d
#: ../../internals/contributing/writing-code/unit-tests.txt:172
msgid ""
"To run coverage on the Django test suite using the standard test settings::"
msgstr ""

# c5f6057addc44bd69773afb472ed4f37
#: ../../internals/contributing/writing-code/unit-tests.txt:176
msgid "After running coverage, generate the html report by running::"
msgstr ""

# a7b4f7fd9c574b30becb657c1f969238
#: ../../internals/contributing/writing-code/unit-tests.txt:180
msgid ""
"When running coverage for the Django tests, the included ``.coveragerc`` "
"settings file  defines ``coverage_html`` as the output directory for the "
"report and also excludes several directories not relevant to the results "
"(test code or external code included in Django)."
msgstr ""

# bca2adf28a1f4fffbd1a689448edaa88
#: ../../internals/contributing/writing-code/unit-tests.txt:188
msgid "Contrib apps"
msgstr ""

# 6eed93f81c1343e58172d07c6cc2fdd7
#: ../../internals/contributing/writing-code/unit-tests.txt:190
msgid ""
"Tests for contrib apps go in their respective directories under ``django/"
"contrib``, in a ``tests.py`` file. You can split the tests over multiple "
"modules by using a ``tests`` directory in the normal Python way."
msgstr ""

# 8aa2d8360718488a81d21a605433be46
#: ../../internals/contributing/writing-code/unit-tests.txt:194
msgid ""
"For the tests to be found, a ``models.py`` file must exist, even if it's "
"empty. If you have URLs that need to be mapped, put them in ``tests/urls."
"py``."
msgstr ""

# 9c986e0fcca845088483aa6cc891fecf
#: ../../internals/contributing/writing-code/unit-tests.txt:197
msgid ""
"To run tests for just one contrib app (e.g. ``markup``), use the same method "
"as above::"
msgstr ""

# b4c4a87c693b4baa8abbe16d957a5f9b
#: ../../internals/contributing/writing-code/working-with-git.txt:2
msgid "Working with Git and GitHub"
msgstr ""

# 28eb2c2d34f345ce8f5211a20f8b78f7
#: ../../internals/contributing/writing-code/working-with-git.txt:4
msgid ""
"This section explains how the community can contribute code to Django via "
"pull requests. If you're interested in how core developers handle them, see :"
"doc:`../committing-code`."
msgstr ""

# 5e1c016eb5b94631be00cdf54d5c0cc9
#: ../../internals/contributing/writing-code/working-with-git.txt:8
msgid ""
"Below, we are going to show how to create a GitHub pull request containing "
"the changes for Trac ticket #xxxxx. By creating a fully-ready pull request "
"you will make the committers' job easier, meaning that your work is more "
"likely to be merged into Django."
msgstr ""

# f07a8a71058443f8823d63233214335a
#: ../../internals/contributing/writing-code/working-with-git.txt:13
msgid ""
"You could also upload a traditional patch to Trac, but it's less practical "
"for reviews."
msgstr ""

# 31711db8e69648ada86fac05a3cc6a9e
#: ../../internals/contributing/writing-code/working-with-git.txt:17
msgid "Installing Git"
msgstr ""

# 12fc2a6f1aff4691a1572032d8dd606f
#: ../../internals/contributing/writing-code/working-with-git.txt:19
msgid ""
"Django uses `Git`_ for its source control. You can `download <http://git-scm."
"com/download>`_ Git, but it's often easier to install with your operating "
"system's package manager."
msgstr ""

# e83083d23c4b4890b68a28cfee500593
#: ../../internals/contributing/writing-code/working-with-git.txt:23
msgid ""
"Django's `Git repository`_ is hosted on `GitHub`_, and it is recommended "
"that you also work using GitHub."
msgstr ""

# c44b8617c3c04975bcb750781496ac2e
#: ../../internals/contributing/writing-code/working-with-git.txt:26
msgid ""
"After installing Git the first thing you should do is setup your name and "
"email::"
msgstr ""

# 1bffdddf7c594a64ae8e2ba3a230a54f
#: ../../internals/contributing/writing-code/working-with-git.txt:32
msgid ""
"Note that ``user.name`` should be your real name, not your GitHub nick. "
"GitHub should know the email you use in the ``user.email`` field, as this "
"will be used to associate your commits with your GitHub account."
msgstr ""

# 67b2f473ff1a4bdf93e4209f9ba21bcb
#: ../../internals/contributing/writing-code/working-with-git.txt:41
msgid "Setting up local repository"
msgstr ""

# 6176a12b64ea493ba63a138c0544ee61
#: ../../internals/contributing/writing-code/working-with-git.txt:43
msgid ""
"When you have created your GitHub account, with the nick \"github_nick\", "
"and forked Django's repository, create a local copy of your fork::"
msgstr ""

# afdf6f1d99624e5f9788dde27278ebf2
#: ../../internals/contributing/writing-code/working-with-git.txt:48
msgid ""
"This will create a new directory \"django\", containing a clone of your "
"GitHub repository."
msgstr ""

# aaf4dd6ed1814e5e85acbb47b3f237f2
#: ../../internals/contributing/writing-code/working-with-git.txt:51
msgid "Your GitHub repository will be called \"origin\" in Git."
msgstr ""

# d933625447324c3c88584e85cf524fdf
#: ../../internals/contributing/writing-code/working-with-git.txt:53
msgid ""
"You should also setup django/django as an \"upstream\" remote (that is, tell "
"git that the reference Django repository was the source of your fork of it)::"
msgstr ""

# 7977532f07a247c4845a4f840d8e2d6e
#: ../../internals/contributing/writing-code/working-with-git.txt:59
msgid "You can add other remotes similarly, for example::"
msgstr ""

# fe1f163b438143d387223da319cfed2b
#: ../../internals/contributing/writing-code/working-with-git.txt:64
msgid "Working on a ticket"
msgstr ""

# b38ee87cf24d49c1ab4e5dd46188616f
#: ../../internals/contributing/writing-code/working-with-git.txt:66
msgid ""
"When working on a ticket create a new branch for the work, and base that "
"work on upstream/master::"
msgstr ""

# 5a9450b84829466b85689f0ad47451fe
#: ../../internals/contributing/writing-code/working-with-git.txt:71
msgid ""
"The -b flag creates a new branch for you locally. Don't hesitate to create "
"new branches even for the smallest things - that's what they are there for."
msgstr ""

# 7b8e9af61426476389fa76d964772a0e
#: ../../internals/contributing/writing-code/working-with-git.txt:74
msgid "If instead you were working for a fix on the 1.4 branch, you would do::"
msgstr ""

# 2dde1c3107024a5fa526e0805cf73290
#: ../../internals/contributing/writing-code/working-with-git.txt:78
msgid ""
"Assume the work is carried on ticket_xxxxx branch. Make some changes and "
"commit them::"
msgstr ""

# bfc51b6a99224172948ab1b07d4d464d
#: ../../internals/contributing/writing-code/working-with-git.txt:83
msgid ""
"When writing the commit message, follow the :ref:`commit message guidelines "
"<committing-guidelines>` to ease the work of the committer. If you're "
"uncomfortable with English, try at least to describe precisely what the "
"commit does."
msgstr ""

# 64c47a74476b48b79ae07b9ce35425b5
#: ../../internals/contributing/writing-code/working-with-git.txt:88
msgid ""
"If you need to do additional work on your branch, commit as often as "
"necessary::"
msgstr ""

# 00a4b4dbb08348e1b53cd62375ece4ee
#: ../../internals/contributing/writing-code/working-with-git.txt:94
msgid "Publishing work"
msgstr ""

# 3236a6f93a48419ca97bf878d72fbb0c
#: ../../internals/contributing/writing-code/working-with-git.txt:96
msgid "You can publish your work on GitHub just by doing::"
msgstr ""

# 39583dea5d69496e8035cfc20e877114
#: ../../internals/contributing/writing-code/working-with-git.txt:100
msgid ""
"When you go to your GitHub page you will notice a new branch has been "
"created."
msgstr ""

# f54a01591d754f529811c87aeaeb299e
#: ../../internals/contributing/writing-code/working-with-git.txt:102
msgid ""
"If you are working on a Trac ticket, you should mention in the ticket that "
"your work is available from branch ticket_xxxxx of your github repo. Include "
"a link to your branch."
msgstr ""

# c7016b154b27438991bffaae6c0053b5
#: ../../internals/contributing/writing-code/working-with-git.txt:106
msgid ""
"Note that the above branch is called a \"topic branch\" in Git parlance. You "
"are free to rewrite the history of this branch, by using ``git rebase`` for "
"example. Other people shouldn't base their work on such a branch, because "
"their clone would become corrupt when you edit commits."
msgstr ""

# 659f8628022845f5ac1d612ffa6ff0ea
#: ../../internals/contributing/writing-code/working-with-git.txt:111
msgid ""
"There are also \"public branches\". These are branches other people are "
"supposed to fork, so the history of these branches should never change. Good "
"examples of public branches are the ``master`` and ``stable/A.B.x`` branches "
"in the django/django repository."
msgstr ""

# cd602613ef524e18a26d92e9f61b494a
#: ../../internals/contributing/writing-code/working-with-git.txt:116
msgid ""
"When you think your work is ready to be pulled into Django, you should "
"create a pull request at GitHub. A good pull request means:"
msgstr ""

# 827de034d03a4179b71725f913ea78be
#: ../../internals/contributing/writing-code/working-with-git.txt:119
msgid ""
"commits with one logical change in each, following the :doc:`coding style "
"<coding-style>`,"
msgstr ""

# 699a627de6e1455bb266456aa10ae29a
#: ../../internals/contributing/writing-code/working-with-git.txt:122
msgid ""
"well-formed messages for each commit: a summary line and then paragraphs "
"wrapped at 72 characters thereafter -- see the :ref:`committing guidelines "
"<committing-guidelines>` for more details,"
msgstr ""

# 23da58372e0e4924aa6902fb03adb9f0
#: ../../internals/contributing/writing-code/working-with-git.txt:126
msgid ""
"documentation and tests, if needed -- actually tests are always needed, "
"except for documentation changes."
msgstr ""

# cc367655bd5e45ab85d6fb9e6ba847e1
#: ../../internals/contributing/writing-code/working-with-git.txt:129
msgid ""
"The test suite must pass and the documentation must build without warnings."
msgstr ""

# 2938f4e7bb8147fc9e918c3e7b8b8e36
#: ../../internals/contributing/writing-code/working-with-git.txt:131
msgid ""
"Once you have created your pull request, you should add a comment in the "
"related Trac ticket explaining what you've done. In particular you should "
"note the environment in which you ran the tests, for instance: \"all tests "
"pass under SQLite and MySQL\"."
msgstr ""

# ba48ab73bd84401fb33bafb41d3580e2
#: ../../internals/contributing/writing-code/working-with-git.txt:136
msgid ""
"Pull requests at GitHub have only two states: open and closed. The committer "
"who will deal with your pull request has only two options: merge it or close "
"it. For this reason, it isn't useful to make a pull request until the code "
"is ready for merging -- or sufficiently close that a committer will finish "
"it himself."
msgstr ""

# b22385c173644f72b9d340566cc3b2db
#: ../../internals/contributing/writing-code/working-with-git.txt:143
msgid "Rebasing branches"
msgstr ""

# 4d091e4b54354a2887592c593c7e5440
#: ../../internals/contributing/writing-code/working-with-git.txt:145
msgid ""
"In the example above you created two commits, the \"Fixed ticket_xxxxx\" "
"commit and \"Added two more tests\" commit."
msgstr ""

# 7c14b8e5cb544517b62a4b72daa64a30
#: ../../internals/contributing/writing-code/working-with-git.txt:148
msgid ""
"We do not want to have the entire history of your working process in your "
"repository. Your commit \"Added two more tests\" would be unhelpful noise. "
"Instead, we would rather only have one commit containing all your work."
msgstr ""

# 9a36c5ddcf364c058120a10e101643e1
#: ../../internals/contributing/writing-code/working-with-git.txt:152
msgid ""
"To rework the history of your branch you can squash the commits into one by "
"using interactive rebase::"
msgstr ""

# 9f747620534746ae8b0f445e3e742ca5
#: ../../internals/contributing/writing-code/working-with-git.txt:157
msgid ""
"The HEAD~2 above is shorthand for two latest commits. The above command will "
"open an editor showing the two commits, prefixed with the word \"pick\"."
msgstr ""

# baa8065024e14e32b28feb623de9cffc
#: ../../internals/contributing/writing-code/working-with-git.txt:160
msgid ""
"Change the second line to \"squash\" instead. This will keep the first "
"commit, and squash the second commit into the first one. Save and quit the "
"editor. A second editor window should open, so you can reword the commit "
"message for the commit now that it includes both your steps."
msgstr ""

# b6f3ff2dd79b4c02a119eb72c2d2deb9
#: ../../internals/contributing/writing-code/working-with-git.txt:165
msgid ""
"You can also use the \"edit\" option in rebase. This way you can change a "
"single commit, for example to fix a typo in a docstring::"
msgstr ""

# 59ad95c5c0e34640ba6edb1eb3f6fcb0
#: ../../internals/contributing/writing-code/working-with-git.txt:177
msgid ""
"If your topic branch is already published at GitHub, for example if you're "
"making minor changes to take into account a review, you will need to force- "
"push the changes::"
msgstr ""

# a686d549e3db49299c2b03c0f04b9228
#: ../../internals/contributing/writing-code/working-with-git.txt:183
msgid ""
"Note that this will rewrite history of ticket_xxxxx - if you check the "
"commit hashes before and after the operation at GitHub you will notice that "
"the commit hashes do not match any more. This is acceptable, as the branch "
"is merely a topic branch, and nobody should be basing their work on it."
msgstr ""

# 2ac74ceda44141f9896c7dfb23755eb8
#: ../../internals/contributing/writing-code/working-with-git.txt:189
msgid "After upstream has changed"
msgstr ""

# 0ab68fedc06147f7b9eaaa4f8165de0e
#: ../../internals/contributing/writing-code/working-with-git.txt:191
msgid ""
"When upstream (django/django) has changed, you should rebase your work. To "
"do this, use::"
msgstr ""

# 8c8759a4d1fb45879b41e05a804da60f
#: ../../internals/contributing/writing-code/working-with-git.txt:197
msgid ""
"The work is automatically rebased using the branch you forked on, in the "
"example case using upstream/master."
msgstr ""

# 195504834e664a06abe6aa127c5c9760
#: ../../internals/contributing/writing-code/working-with-git.txt:200
msgid ""
"The rebase command removes all your local commits temporarily, applies the "
"upstream commits, and then applies your local commits again on the work."
msgstr ""

# 907e3a9a9d0249ca9891810ce36ee907
#: ../../internals/contributing/writing-code/working-with-git.txt:203
msgid ""
"If there are merge conflicts you will need to resolve them and then use "
"``git rebase --continue``. At any point you can use ``git rebase --abort`` "
"to return to the original state."
msgstr ""

# 5b3890bed0f9458ba72ba88915328583
#: ../../internals/contributing/writing-code/working-with-git.txt:207
msgid "Note that you want to *rebase* on upstream, not *merge* the upstream."
msgstr ""

# 7b0c92c1d43945bda06c8d133c0557e7
#: ../../internals/contributing/writing-code/working-with-git.txt:209
msgid ""
"The reason for this is that by rebasing, your commits will always be *on top "
"of* the upstream's work, not *mixed in with* the changes in the upstream. "
"This way your branch will contain only commits related to its topic, which "
"makes squashing easier."
msgstr ""

# 9e86a5f1411f49db80d9a13cc83b5836
#: ../../internals/contributing/writing-code/working-with-git.txt:215
msgid "After review"
msgstr ""

# 740d302b3fa346a3ad79ba58f836f654
#: ../../internals/contributing/writing-code/working-with-git.txt:217
msgid ""
"It is unusual to get any non-trivial amount of code into core without "
"changes requested by reviewers. In this case, it is often a good idea to add "
"the changes as one incremental commit to your work. This allows the reviewer "
"to easily check what changes you have done."
msgstr ""

# e8da076d6fb7433cb06c10d816ed026b
#: ../../internals/contributing/writing-code/working-with-git.txt:222
msgid ""
"In this case, do the changes required by the reviewer. Commit as often as "
"necessary. Before publishing the changes, rebase your work. If you added two "
"commits, you would run::"
msgstr ""

# d313c9d57de643939ddc9ef0ef3f8ffc
#: ../../internals/contributing/writing-code/working-with-git.txt:228
msgid ""
"Squash the second commit into the first. Write a commit message along the "
"lines of::"
msgstr ""

# 05fc6d2c87474937a674ad5240971bc7
#: ../../internals/contributing/writing-code/working-with-git.txt:235
msgid ""
"Finally push your work back to your GitHub repository. Since you didn't "
"touch the public commits during the rebase, you should not need to force-"
"push::"
msgstr ""

# a54ad212458741a8826b34ebb6bd8976
#: ../../internals/contributing/writing-code/working-with-git.txt:240
msgid "Your pull request should now contain the new commit too."
msgstr ""

# 8820003c7d4b4decba863b2667767a1d
#: ../../internals/contributing/writing-code/working-with-git.txt:242
msgid ""
"Note that the committer is likely to squash the review commit into the "
"previous commit when committing the code."
msgstr ""

# de1e22aca3cf4138a28adad990639ee1
#: ../../internals/contributing/writing-code/working-with-git.txt:247
msgid "Working on a patch"
msgstr ""

# e16e5a60d1e849bfbd624fc224451db3
#: ../../internals/contributing/writing-code/working-with-git.txt:249
msgid ""
"One of the ways that developers can contribute to Django is by reviewing "
"patches. Those patches will typically exist as pull requests on GitHub and "
"can be easily integrated into your local repository::"
msgstr ""

# ffe27243537842c49e3ada2155251507
#: ../../internals/contributing/writing-code/working-with-git.txt:256
msgid ""
"This will create a new branch and then apply the changes from the pull "
"request to it. At this point you can run the tests or do anything else you "
"need to do to investigate the quality of the patch."
msgstr ""

# 794061072a754588bb134d50dca35fe8
#: ../../internals/contributing/writing-code/working-with-git.txt:260
msgid ""
"For more detail on working with pull requests see the :ref:`guidelines for "
"committers <handling-pull-requests>`."
msgstr ""

# d51f88bc31934cd1bacddc62e2af7c7d
#: ../../internals/contributing/writing-code/working-with-git.txt:264
msgid "Summary"
msgstr ""

# 93c246e007724cf18dc611cfd5e75c11
#: ../../internals/contributing/writing-code/working-with-git.txt:248
msgid "Work on GitHub if you can."
msgstr ""

# 8242a0ede0f543db955f61adb52bb959
#: ../../internals/contributing/writing-code/working-with-git.txt:249
msgid "Announce your work on the Trac ticket by linking to your GitHub branch."
msgstr ""

# 60c6def853734355883a56013054dc2b
#: ../../internals/contributing/writing-code/working-with-git.txt:250
msgid "When you have something ready, make a pull request."
msgstr ""

# d009e0961e0f4b6c958c179d1637ca5a
#: ../../internals/contributing/writing-code/working-with-git.txt:251
msgid "Make your pull requests as good as you can."
msgstr ""

# e0605aa52eb74d2e982768d9a1f56914
#: ../../internals/contributing/writing-code/working-with-git.txt:252
msgid ""
"When doing fixes to your work, use ``git rebase -i`` to squash the commits."
msgstr ""

# 1c5a0cae03f74181904f1c67561e3578
#: ../../internals/contributing/writing-code/working-with-git.txt:253
msgid "When upstream has changed, do ``git fetch upstream; git rebase``."
msgstr ""

# 1e76ecf038c44306be93306873feb884
#: ../../internals/contributing/writing-documentation.txt:3
msgid "Writing documentation"
msgstr ""

# 1caedfce22c6427e9433e2b1d5d389cf
#: ../../internals/contributing/writing-documentation.txt:5
msgid ""
"We place a high importance on consistency and readability of documentation. "
"After all, Django was created in a journalism environment! So we treat our "
"documentation like we treat our code: we aim to improve it as often as "
"possible."
msgstr ""

# 419c9ff5ab11420590c87d6c3af88994
#: ../../internals/contributing/writing-documentation.txt:10
msgid "Documentation changes generally come in two forms:"
msgstr ""

# b082330c5b5b4c2d8ededed8dd054d74
#: ../../internals/contributing/writing-documentation.txt:12
msgid ""
"General improvements: typo corrections, error fixes and better explanations "
"through clearer writing and more examples."
msgstr ""

# 84458feca3554ef98c91694a322b268e
#: ../../internals/contributing/writing-documentation.txt:15
msgid ""
"New features: documentation of features that have been added to the "
"framework since the last release."
msgstr ""

# 81679d5515c348cc9759f0ef44bf6bee
#: ../../internals/contributing/writing-documentation.txt:18
msgid ""
"This section explains how writers can craft their documentation changes in "
"the most useful and least error-prone ways."
msgstr ""

# a368a768a5db406097fd136754a41e96
#: ../../internals/contributing/writing-documentation.txt:22
msgid "Getting the raw documentation"
msgstr ""

# c958f6299ad448c192cbd017d745bcef
#: ../../internals/contributing/writing-documentation.txt:24
msgid ""
"Though Django's documentation is intended to be read as HTML at https://docs."
"djangoproject.com/, we edit it as a collection of text files for maximum "
"flexibility. These files live in the top-level ``docs/`` directory of a "
"Django release."
msgstr ""

# f9b61a72b49a40cf97c827b4a59b417f
#: ../../internals/contributing/writing-documentation.txt:29
msgid ""
"If you'd like to start contributing to our docs, get the development version "
"of Django from the source code repository (see :ref:`installing-development-"
"version`). The development version has the latest-and-greatest "
"documentation, just as it has latest-and-greatest code. We also backport "
"documentation fixes and improvements, at the discretion of the committer, to "
"the last release branch. That's because it's highly advantageous to have the "
"docs for the last release be up-to-date and correct (see :ref:`differences-"
"between-doc-versions`)."
msgstr ""

# d100e84ae2bc437797e24e1b68382edb
#: ../../internals/contributing/writing-documentation.txt:39
msgid "Getting started with Sphinx"
msgstr ""

# a3b84095de714041af1858c9169fba9e
#: ../../internals/contributing/writing-documentation.txt:41
msgid ""
"Django's documentation uses the Sphinx__ documentation system, which in turn "
"is based on docutils__. The basic idea is that lightly-formatted plain-text "
"documentation is transformed into HTML, PDF, and any other output format."
msgstr ""

# 629d7d73f26b4d7c9451456f9631afd8
#: ../../internals/contributing/writing-documentation.txt:48
msgid ""
"To actually build the documentation locally, you'll currently need to "
"install Sphinx -- ``sudo pip install Sphinx`` should do the trick."
msgstr ""

# 27ee7503ec774f6ba6fa551e60c358d3
#: ../../internals/contributing/writing-documentation.txt:53
msgid ""
"Building the Django documentation requires Sphinx 1.0.2 or newer. Sphinx "
"also requires the Pygments__ library for syntax highlighting; building the "
"Django documentation requires Pygments 1.1 or newer (a new-enough version "
"should automatically be installed along with Sphinx)."
msgstr ""

# becdce9c065c44eaa9b4db706a04c884
#: ../../internals/contributing/writing-documentation.txt:60
msgid ""
"Then, building the HTML is easy; just ``make html`` (or ``make.bat html`` on "
"Windows) from the ``docs`` directory."
msgstr ""

# cd3a99a8804f49389b4bd51562d87901
#: ../../internals/contributing/writing-documentation.txt:63
msgid ""
"To get started contributing, you'll want to read the :ref:`reStructuredText "
"Primer <sphinx:rst-primer>`. After that, you'll want to read about the :ref:"
"`Sphinx-specific markup <sphinx:sphinxmarkup>` that's used to manage "
"metadata, indexing, and cross-references."
msgstr ""

# ca555b77df77424c9889eab5273d6d96
#: ../../internals/contributing/writing-documentation.txt:69
msgid "Commonly used terms"
msgstr ""

# 432b1b879e604c9292311c19902aa36c
#: ../../internals/contributing/writing-documentation.txt:71
msgid ""
"Here are some style guidelines on commonly used terms throughout the "
"documentation:"
msgstr ""

# 22dfb7a6ec9a4c12871ebaf8f37f6301
#: ../../internals/contributing/writing-documentation.txt:74
msgid ""
"**Django** -- when referring to the framework, capitalize Django. It is "
"lowercase only in Python code and in the djangoproject.com logo."
msgstr ""

# c28e827da47c4542807172db02b60d6e
#: ../../internals/contributing/writing-documentation.txt:77
msgid "**email** -- no hyphen."
msgstr ""

# f743466b072a40948d53f9eb4ce4b58b
#: ../../internals/contributing/writing-documentation.txt:79
msgid "**MySQL**, **PostgreSQL**, **SQLite**"
msgstr ""

# fde9f74c0ecd4ed79371fa90c2a52e4b
#: ../../internals/contributing/writing-documentation.txt:81
msgid "**Python** -- when referring to the language, capitalize Python."
msgstr ""

# b1c596ec3fab4675b395805fee45abb9
#: ../../internals/contributing/writing-documentation.txt:83
msgid ""
"**realize**, **customize**, **initialize**, etc. -- use the American \"ize\" "
"suffix, not \"ise.\""
msgstr ""

# 9e316f25efe24d2f9572a2737190a58d
#: ../../internals/contributing/writing-documentation.txt:86
msgid ""
"**subclass** -- it's a single word without a hyphen, both as a verb "
"(\"subclass that model\") and as a noun (\"create a subclass\")."
msgstr ""

# 2a6a8d0fc7594492b7f465c43f9969c8
#: ../../internals/contributing/writing-documentation.txt:89
msgid ""
"**Web**, **World Wide Web**, **the Web** -- note Web is always capitalized "
"when referring to the World Wide Web."
msgstr ""

# f4f3d82d0c5c439d82cfa4b1a3f1c4f3
#: ../../internals/contributing/writing-documentation.txt:92
msgid "**Web site** -- use two words, with Web capitalized."
msgstr ""

# c2d27ff161ff4621b0ae60e7345ca4a4
#: ../../internals/contributing/writing-documentation.txt:95
msgid "Django-specific terminology"
msgstr ""

# 50bee62da9674f0f859156bfc016f23d
#: ../../internals/contributing/writing-documentation.txt:97
msgid "**model** -- it's not capitalized."
msgstr ""

# 27d42cf80e55404e8848489220fbee66
#: ../../internals/contributing/writing-documentation.txt:99
msgid "**template** -- it's not capitalized."
msgstr ""

# 528e2e37014a4e1a95d7fd6eda10f727
#: ../../internals/contributing/writing-documentation.txt:101
msgid ""
"**URLconf** -- use three capitalized letters, with no space before \"conf.\""
msgstr ""

# 0c20bce6605e4d59a9825eaacadac7d6
#: ../../internals/contributing/writing-documentation.txt:104
msgid "**view** -- it's not capitalized."
msgstr ""

# 80660ddf37944d6694fb46b541037f91
#: ../../internals/contributing/writing-documentation.txt:107
msgid "Guidelines for reStructuredText files"
msgstr ""

# 89559b83c29041c1ad968e06935c290c
#: ../../internals/contributing/writing-documentation.txt:109
msgid ""
"These guidelines regulate the format of our reST (reStructuredText) "
"documentation:"
msgstr ""

# 27dd414cf1a845cbbaf443ff9ff2e3d9
#: ../../internals/contributing/writing-documentation.txt:112
msgid "In section titles, capitalize only initial words and proper nouns."
msgstr ""

# c392694eb575466b8486970a47b03928
#: ../../internals/contributing/writing-documentation.txt:114
msgid ""
"Wrap the documentation at 80 characters wide, unless a code example is "
"significantly less readable when split over two lines, or for another good "
"reason."
msgstr ""

# b0b8f19be86e439780d6a182549a7bed
#: ../../internals/contributing/writing-documentation.txt:118
msgid ""
"The main thing to keep in mind as you write and edit docs is that the more "
"semantic markup you can add the better. So::"
msgstr ""

# 197b2f828af24debb1a8a0cb79ff7539
#: ../../internals/contributing/writing-documentation.txt:123
msgid "Isn't nearly as helpful as::"
msgstr ""

# 79b8c40b573a480cb072700a37c4ca4b
#: ../../internals/contributing/writing-documentation.txt:127
msgid ""
"This is because Sphinx will generate proper links for the latter, which "
"greatly helps readers. There's basically no limit to the amount of useful "
"markup you can add."
msgstr ""

# f2e40d448e4d4560af11c765b12b8368
#: ../../internals/contributing/writing-documentation.txt:131
msgid ""
"Use :mod:`~sphinx.ext.intersphinx` to reference Python's and Sphinx' "
"documentation."
msgstr ""

# 2f1cd262d9fc407c8115328ec281e1e6
#: ../../internals/contributing/writing-documentation.txt:135
msgid "Django-specific markup"
msgstr ""

# 1127f71c13a046e586419d149d7ad4ba
#: ../../internals/contributing/writing-documentation.txt:137
msgid ""
"Besides the `Sphinx built-in markup`__, Django's docs defines some extra "
"description units:"
msgstr ""

# 7e7ddd0436de4284a1131cd32e01743a
#: ../../internals/contributing/writing-documentation.txt:142
msgid "Settings::"
msgstr ""

# 039cdf4481c941e7831202072d26853a
#: ../../internals/contributing/writing-documentation.txt:146
msgid "To link to a setting, use ``:setting:`INSTALLED_APPS```."
msgstr ""

# 698a251bc90848fcb99e98571c1e0431
#: ../../internals/contributing/writing-documentation.txt:148
msgid "Template tags::"
msgstr ""

# 883fa5ed694344ca96e6109b45aafc9a
#: ../../internals/contributing/writing-documentation.txt:152
msgid "To link, use ``:ttag:`regroup```."
msgstr ""

# 178637cb336a41959c5715590d2bd65c
#: ../../internals/contributing/writing-documentation.txt:154
msgid "Template filters::"
msgstr ""

# 424e43348f614787b1476bac0837bbca
#: ../../internals/contributing/writing-documentation.txt:158
msgid "To link, use ``:tfilter:`linebreaksbr```."
msgstr ""

# 355db8c9e7944a0793851e87b98a6508
#: ../../internals/contributing/writing-documentation.txt:160
msgid "Field lookups (i.e. ``Foo.objects.filter(bar__exact=whatever)``)::"
msgstr ""

# 805f5299d5c7413da659ed873d54d4c6
#: ../../internals/contributing/writing-documentation.txt:164
msgid "To link, use ``:lookup:`exact```."
msgstr ""

# 781a6a4b95b6482a8e0a70e943c1b642
#: ../../internals/contributing/writing-documentation.txt:166
msgid "``django-admin`` commands::"
msgstr ""

# 99ea5be376594113affee55eb92cc1ca
#: ../../internals/contributing/writing-documentation.txt:170
msgid "To link, use ``:djadmin:`syncdb```."
msgstr ""

# 38dca03e922d4b53bd4751b364013cc2
#: ../../internals/contributing/writing-documentation.txt:172
msgid "``django-admin`` command-line options::"
msgstr ""

# 466857a173a7440fa23d6e0e012717ff
#: ../../internals/contributing/writing-documentation.txt:176
msgid "To link, use ``:djadminopt:`--traceback```."
msgstr ""

# c97764c18cc94b16980c2789d3d47e4e
#: ../../internals/contributing/writing-documentation.txt:181
msgid "Documenting new features"
msgstr ""

# afa37cf272084c5b9e0e512bd34a176f
#: ../../internals/contributing/writing-documentation.txt:183
msgid "Our policy for new features is:"
msgstr ""

# 1f8deb57932b40eb9ca97bc5026f44af
#: ../../internals/contributing/writing-documentation.txt:185
msgid ""
"All documentation of new features should be written in a way that clearly "
"designates the features are only available in the Django development "
"version. Assume documentation readers are using the latest release, not the "
"development version."
msgstr ""

# 50ae70a7c4b245d392b0fa77d76c48cd
#: ../../internals/contributing/writing-documentation.txt:190
msgid ""
"Our preferred way for marking new features is by prefacing the features' "
"documentation with: \"``.. versionadded:: X.Y``\", followed by an optional "
"one line comment and a mandatory blank line."
msgstr ""

# ea64dc18bb1941ef829d2cae1aec425e
#: ../../internals/contributing/writing-documentation.txt:194
msgid ""
"General improvements, or other changes to the APIs that should be emphasized "
"should use the \"``.. versionchanged:: X.Y``\" directive (with the same "
"format as the ``versionadded`` mentioned above."
msgstr ""

# 142130afa976456180227d75f9deea67
#: ../../internals/contributing/writing-documentation.txt:199
msgid "An example"
msgstr ""

# e61a1233d24a45bb913ae8074eaf9a2f
#: ../../internals/contributing/writing-documentation.txt:201
msgid ""
"For a quick example of how it all fits together, consider this hypothetical "
"example:"
msgstr ""

# 78b4d35e0f6d4812b2fbc52bf3821e52
#: ../../internals/contributing/writing-documentation.txt:204
msgid ""
"First, the ``ref/settings.txt`` document could have an overall layout like "
"this:"
msgstr ""

# 9c03a4edccc140a89e198e164652fd38
#: ../../internals/contributing/writing-documentation.txt:229
msgid ""
"Next, the ``topics/settings.txt`` document could contain something like this:"
msgstr ""

# 9b83a3fa9c164dc7b96e337236c5c87e
#: ../../internals/contributing/writing-documentation.txt:241
msgid ""
"We use the Sphinx :rst:role:`doc` cross reference element when we want to "
"link to another document as a whole and the :rst:role:`ref` element when we "
"want to link to an arbitrary location in a document."
msgstr ""

# 04349f2716a046289baa22cafb60f265
#: ../../internals/contributing/writing-documentation.txt:245
msgid "Next, notice how the settings are annotated:"
msgstr ""

# 8827179907114162b11dfe86a02ea146
#: ../../internals/contributing/writing-documentation.txt:263
msgid ""
"This marks up the following header as the \"canonical\" target for the "
"setting ``ADMIN_FOR`` This means any time I talk about ``ADMIN_FOR``, I can "
"reference it using ``:setting:`ADMIN_FOR```."
msgstr ""

# 3fb16ccfaada4ade97952650b3f16ca8
#: ../../internals/contributing/writing-documentation.txt:267
msgid "That's basically how everything fits together."
msgstr ""

# 8883b86412d446ae8273218cf33e237f
#: ../../internals/contributing/writing-documentation.txt:272
msgid "Improving the documentation"
msgstr ""

# 1bf2747516b14af8a6a27d22e7b3202d
#: ../../internals/contributing/writing-documentation.txt:274
msgid ""
"A few small improvements can be made to make the documentation read and look "
"better:"
msgstr ""

# fff998f116014b0786a8de48937c063a
#: ../../internals/contributing/writing-documentation.txt:277
msgid ""
"Most of the various ``index.txt`` documents have *very* short or even non-"
"existent intro text. Each of those documents needs a good short intro the "
"content below that point."
msgstr ""

# 1a4dca4bcc5941238dda395952a50957
#: ../../internals/contributing/writing-documentation.txt:281
msgid "The glossary is very perfunctory. It needs to be filled out."
msgstr ""

# 2dd33fa8d5fc4376b264c1224e5d2533
#: ../../internals/contributing/writing-documentation.txt:283
msgid "Add more metadata targets. Lots of places look like::"
msgstr ""

# 03926b90e8784d41862ffa68424b6ae7
#: ../../internals/contributing/writing-documentation.txt:288
msgid "\\... these should be::"
msgstr ""

# 297a139e98ff41dbadd57228f9d01a46
#: ../../internals/contributing/writing-documentation.txt:292
msgid "That is, use metadata instead of titles."
msgstr ""

# 32b8f5cad03b4cddab91eb3f39008676
#: ../../internals/contributing/writing-documentation.txt:294
msgid ""
"Add more links -- nearly everything that's an inline code literal right now "
"can probably be turned into a xref."
msgstr ""

# 9e74da2b7dfc4bf387e3a719a975994c
#: ../../internals/contributing/writing-documentation.txt:297
msgid ""
"See the ``literals_to_xrefs.py`` file in ``_ext`` -- it's a shell script to "
"help do this work."
msgstr ""

# da6a072fa6e347df91f5de5393294f8e
#: ../../internals/contributing/writing-documentation.txt:300
msgid "This will probably be a continuing, never-ending project."
msgstr ""

# 170a4bf7bdd04c3e92a0de4e2ebdfa4a
#: ../../internals/contributing/writing-documentation.txt:302
msgid "Add `info field lists`__ where appropriate."
msgstr ""

# b4260660673a493ca55ded89feb526e1
#: ../../internals/contributing/writing-documentation.txt:306
msgid ""
"Whenever possible, use links. So, use ``:setting:`ADMIN_FOR``` instead of "
"````ADMIN_FOR````."
msgstr ""

# 88229b0f983f4ddabafe27e3e43fa93b
#: ../../internals/contributing/writing-documentation.txt:309
msgid ""
"Use directives where appropriate. Some directives (e.g. ``.. setting::``) "
"are prefix-style directives; they go *before* the unit they're describing. "
"These are known as \"crossref\" directives. Others (e.g. ``.. class::``) "
"generate their own markup; these should go inside the section they're "
"describing. These are called \"description units\"."
msgstr ""

# c1b9765b70c6413cb2ea3d868362cfbc
#: ../../internals/contributing/writing-documentation.txt:316
msgid ""
"You can tell which are which by looking at in :file:`_ext/djangodocs.py`; it "
"registers roles as one of the other."
msgstr ""

# e31fe10ae8a943b29943118a445bba08
#: ../../internals/contributing/writing-documentation.txt:319
msgid ""
"Add ``.. code-block:: <lang>`` to literal blocks so that they get "
"highlighted."
msgstr ""

# 431ec388f46a464a855f5a1e2c450a88
#: ../../internals/contributing/writing-documentation.txt:322
msgid ""
"When referring to classes/functions/modules, etc., you'll want to use the "
"fully-qualified name of the target (``:class:`django.contrib.contenttypes."
"models.ContentType```)."
msgstr ""

# 4db31faec1e34b628cf13454489562f6
#: ../../internals/contributing/writing-documentation.txt:326
msgid ""
"Since this doesn't look all that awesome in the output -- it shows the "
"entire path to the object -- you can prefix the target with a ``~`` (that's "
"a tilde) to get just the \"last bit\" of that path. So ``:class:`~django."
"contrib.contenttypes.models.ContentType``` will just display a link with the "
"title \"ContentType\"."
msgstr ""

# 2204ce06d06c4d9f9f844439f7ec5f50
#: ../../internals/deprecation.txt:3
msgid "Django Deprecation Timeline"
msgstr ""

# 06db511f48b847e19d6b722c57631313
#: ../../internals/deprecation.txt:5
msgid ""
"This document outlines when various pieces of Django will be removed or "
"altered in a backward incompatible way, following their deprecation, as per "
"the :ref:`deprecation policy <internal-release-deprecation-policy>`. More "
"details about each item can often be found in the release notes of two "
"versions prior."
msgstr ""

# de76241ec80b48878e81218074c53ffc
#: ../../internals/deprecation.txt:11
msgid "1.4"
msgstr ""

# 1944ac19ee4b432786d5e86322979c3a
#: ../../internals/deprecation.txt:13
msgid ""
"See the :doc:`Django 1.2 release notes</releases/1.2>` for more details on "
"these changes."
msgstr ""

# a6b77f475d074a7eba9993239ad62852
#: ../../internals/deprecation.txt:16
msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` will be removed.  Use the "
"``{% csrf_token %}`` template tag inside forms to enable CSRF protection. "
"``CsrfViewMiddleware`` remains and is enabled by default."
msgstr ""

# fa26c2227eed4dd5b96a7be9d56fd09d
#: ../../internals/deprecation.txt:20
msgid ""
"The old imports for CSRF functionality (``django.contrib.csrf.*``), which "
"moved to core in 1.2, will be removed."
msgstr ""

# f87b1f91bed548d4930537fb8a935570
#: ../../internals/deprecation.txt:23
msgid ""
"The ``django.contrib.gis.db.backend`` module will be removed in favor of the "
"specific backends."
msgstr ""

# fbb81a63964148dea9874773af0e965a
#: ../../internals/deprecation.txt:26
msgid ""
"``SMTPConnection`` will be removed in favor of a generic Email backend API."
msgstr ""

# ac2fe72611244e2f92f2b1879c8b965e
#: ../../internals/deprecation.txt:28
msgid ""
"The many to many SQL generation functions on the database backends will be "
"removed."
msgstr ""

# fd31e13b5d36403fada0d816684d8af9
#: ../../internals/deprecation.txt:31
msgid ""
"The ability to use the ``DATABASE_*`` family of top-level settings to define "
"database connections will be removed."
msgstr ""

# 32190c5184b040a6ba38032b06b698ed
#: ../../internals/deprecation.txt:34
msgid ""
"The ability to use shorthand notation to specify a database backend (i.e., "
"``sqlite3`` instead of ``django.db.backends.sqlite3``) will be removed."
msgstr ""

# 13b56e991d7a44449ebf95148b630fed
#: ../../internals/deprecation.txt:38
msgid ""
"The ``get_db_prep_save``, ``get_db_prep_value`` and ``get_db_prep_lookup`` "
"methods will have to support multiple databases."
msgstr ""

# 8bf27b5424ab475d93e7680d29ab1ec2
#: ../../internals/deprecation.txt:41
msgid ""
"The ``Message`` model (in ``django.contrib.auth``), its related manager in "
"the ``User`` model (``user.message_set``), and the associated methods "
"(``user.message_set.create()`` and ``user.get_and_delete_messages()``), will "
"be removed.  The :doc:`messages framework </ref/contrib/messages>` should be "
"used instead. The related ``messages`` variable returned by the auth context "
"processor will also be removed. Note that this means that the admin "
"application will depend on the messages context processor."
msgstr ""

# 887c3ec6898e4c98a5944cb22e96e33e
#: ../../internals/deprecation.txt:51
msgid ""
"Authentication backends will need to support the ``obj`` parameter for "
"permission checking. The ``supports_object_permissions`` attribute will no "
"longer be checked and can be removed from custom backends."
msgstr ""

# 0408c5b2e4294c259a9878a70deb06da
#: ../../internals/deprecation.txt:55
msgid ""
"Authentication backends will need to support the ``AnonymousUser`` class "
"being passed to all methods dealing with permissions.  The "
"``supports_anonymous_user`` variable will no longer be checked and can be "
"removed from custom backends."
msgstr ""

# a131ce84b3dd4c13affd5b997863efeb
#: ../../internals/deprecation.txt:60
msgid ""
"The ability to specify a callable template loader rather than a ``Loader`` "
"class will be removed, as will the ``load_template_source`` functions that "
"are included with the built in template loaders for backwards compatibility."
msgstr ""

# 2526eee1237a4e70905ad71bc2fcbc21
#: ../../internals/deprecation.txt:65
msgid ""
"``django.utils.translation.get_date_formats()`` and ``django.utils."
"translation.get_partial_date_formats()``. These functions will be removed; "
"use the locale-aware ``django.utils.formats.get_format()`` to get the "
"appropriate formats."
msgstr ""

# 7896e54d6f3a4f059aafd99fa0303517
#: ../../internals/deprecation.txt:70
msgid ""
"In ``django.forms.fields``, the constants: ``DEFAULT_DATE_INPUT_FORMATS``, "
"``DEFAULT_TIME_INPUT_FORMATS`` and ``DEFAULT_DATETIME_INPUT_FORMATS`` will "
"be removed. Use ``django.utils.formats.get_format()`` to get the appropriate "
"formats."
msgstr ""

# 1c089e10f9a94e16a28cfc125520b4fb
#: ../../internals/deprecation.txt:76
msgid ""
"The ability to use a function-based test runners will be removed, along with "
"the ``django.test.simple.run_tests()`` test runner."
msgstr ""

# 1ddf4fff5db34aa8babe67554e4fe459
#: ../../internals/deprecation.txt:79
msgid ""
"The ``views.feed()`` view and ``feeds.Feed`` class in ``django.contrib."
"syndication`` will be removed. The class-based view ``views.Feed`` should be "
"used instead."
msgstr ""

# dd65bd71196444eea6fef1aa3f98485d
#: ../../internals/deprecation.txt:83
msgid ""
"``django.core.context_processors.auth``.  This release will remove the old "
"method in favor of the new method in ``django.contrib.auth."
"context_processors.auth``."
msgstr ""

# 78c4e827002e4a24b64dd7b574d0e4ab
#: ../../internals/deprecation.txt:87
msgid ""
"The ``postgresql`` database backend will be removed, use the "
"``postgresql_psycopg2`` backend instead."
msgstr ""

# ea9c221bb4694bbbba068146e2d40635
#: ../../internals/deprecation.txt:90
msgid ""
"The ``no`` language code will be removed and has been replaced by the ``nb`` "
"language code."
msgstr ""

# cbd4ab3fd6b14343ae7d99dc8264359e
#: ../../internals/deprecation.txt:93
msgid ""
"Authentication backends will need to define the boolean attribute "
"``supports_inactive_user`` until version 1.5 when it will be assumed that "
"all backends will handle inactive users."
msgstr ""

# d1dc52d012f347128a7035feca617d4e
#: ../../internals/deprecation.txt:97
msgid ""
"``django.db.models.fields.XMLField`` will be removed. This was deprecated as "
"part of the 1.3 release. An accelerated deprecation schedule has been used "
"because the field hasn't performed any role beyond that of a simple "
"``TextField`` since the removal of oldforms. All uses of ``XMLField`` can be "
"replaced with ``TextField``."
msgstr ""

# d7d1ad9eeeb24d99aa59c51046d42e32
#: ../../internals/deprecation.txt:103
msgid ""
"The undocumented ``mixin`` parameter to the ``open()`` method of ``django."
"core.files.storage.Storage`` (and subclasses) will be removed."
msgstr ""

# 2777170c929847579dbf14a85813111f
#: ../../internals/deprecation.txt:108
msgid "1.5"
msgstr ""

# 0ac76228eae0449d8cae8d5706854c52
#: ../../internals/deprecation.txt:110
msgid ""
"See the :doc:`Django 1.3 release notes</releases/1.3>` for more details on "
"these changes."
msgstr ""

# ee3555a2400145899a7d646573aaefe9
#: ../../internals/deprecation.txt:113
msgid ""
"Starting Django without a :setting:`SECRET_KEY` will result in an exception "
"rather than a ``DeprecationWarning``. (This is accelerated from the usual "
"deprecation path; see the :doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

# 3287b662679b402cb55046627ef4b5cd
#: ../../internals/deprecation.txt:117
msgid ""
"The ``mod_python`` request handler will be removed. The ``mod_wsgi`` handler "
"should be used instead."
msgstr ""

# 72ef1ce5f8554e8798752f62b5dcbc69
#: ../../internals/deprecation.txt:120
msgid ""
"The ``template`` attribute on :class:`~django.test.client.Response` objects "
"returned by the :ref:`test client <test-client>` will be removed. The :attr:"
"`~django.test.client.Response.templates` attribute should be used instead."
msgstr ""

# 87dc17244526446fbdb9a6cb9f2e3702
#: ../../internals/deprecation.txt:125
msgid ""
"The ``django.test.simple.DjangoTestRunner`` will be removed. Instead use a "
"unittest-native class.  The features of the ``django.test.simple."
"DjangoTestRunner`` (including fail-fast and Ctrl-C test termination) can "
"currently be provided by the unittest-native :class:`~unittest."
"TextTestRunner`."
msgstr ""

# 9a1f3303f8314a8e907c3487d52925e0
#: ../../internals/deprecation.txt:131
msgid ""
"The undocumented function ``django.contrib.formtools.utils.security_hash`` "
"will be removed, instead use ``django.contrib.formtools.utils.form_hmac``"
msgstr ""

# 306aeea657a44c36b183f9c8b88e3ea8
#: ../../internals/deprecation.txt:135
msgid ""
"The function-based generic view modules will be removed in favor of their "
"class-based equivalents, outlined :doc:`here </topics/class-based-views/"
"index>`."
msgstr ""

# 8e0cd711914b44519f860898803a7e35
#: ../../internals/deprecation.txt:139
msgid ""
"The ``django.core.servers.basehttp.AdminMediaHandler`` will be removed.  In "
"its place use ``django.contrib.staticfiles.handlers.StaticFilesHandler``."
msgstr ""

# 3986bbae9df449a5b7a2c3d36b784ebb
#: ../../internals/deprecation.txt:143
msgid ""
"The template tags library ``adminmedia`` and the template tag ``{% "
"admin_media_prefix %}`` will be removed in favor of the generic static files "
"handling. (This is faster than the usual deprecation path; see the :doc:"
"`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

# 4d399567d5364f71896a1d372287bfb2
#: ../../internals/deprecation.txt:148
msgid ""
"The :ttag:`url` and :ttag:`ssi` template tags will be modified so that the "
"first argument to each tag is a template variable, not an implied string. In "
"1.4, this behavior is provided by a version of the tag in the ``future`` "
"template tag library."
msgstr ""

# 4970c2a4fed04098ba79b1e45406e710
#: ../../internals/deprecation.txt:153
msgid "The ``reset`` and ``sqlreset`` management commands will be removed."
msgstr ""

# 8944ae9bf5d84fb2b1f9b05b690930a1
#: ../../internals/deprecation.txt:155
msgid ""
"Authentication backends will need to support an inactive user being passed "
"to all methods dealing with permissions. The ``supports_inactive_user`` "
"attribute will no longer be checked and can be removed from custom backends."
msgstr ""

# b55ba71a4d3f4d5593280b7ad9665fb9
#: ../../internals/deprecation.txt:160
msgid ""
":meth:`~django.contrib.gis.geos.GEOSGeometry.transform` will raise a :class:"
"`~django.contrib.gis.geos.GEOSException` when called on a geometry with no "
"SRID value."
msgstr ""

# 1aa2363a3a6f49ffac8059e7e0ca2d52
#: ../../internals/deprecation.txt:164
msgid ""
"``django.http.CompatCookie`` will be removed in favor of ``django.http."
"SimpleCookie``."
msgstr ""

# 1ae7ca4fd4de422a925cb1872813c9e0
#: ../../internals/deprecation.txt:167
msgid ""
"``django.core.context_processors.PermWrapper`` and ``django.core."
"context_processors.PermLookupDict`` will be removed in favor of the "
"corresponding ``django.contrib.auth.context_processors.PermWrapper`` and "
"``django.contrib.auth.context_processors.PermLookupDict``, respectively."
msgstr ""

# 16595c71cfc04c3eb6726cf5b1512e26
#: ../../internals/deprecation.txt:173
msgid ""
"The :setting:`MEDIA_URL` or :setting:`STATIC_URL` settings will be required "
"to end with a trailing slash to ensure there is a consistent way to combine "
"paths in templates."
msgstr ""

# df0dd62aceea4fd8901f7b904324cf5f
#: ../../internals/deprecation.txt:177
msgid ""
"``django.db.models.fields.URLField.verify_exists`` will be removed. The "
"feature was deprecated in 1.3.1 due to intractable security and performance "
"issues and will follow a slightly accelerated deprecation timeframe."
msgstr ""

# 68ff406eb8aa4be799fc97561f949b5a
#: ../../internals/deprecation.txt:182
msgid ""
"Translations located under the so-called *project path* will be ignored "
"during the translation building process performed at runtime. The :setting:"
"`LOCALE_PATHS` setting can be used for the same task by including the "
"filesystem path to a ``locale`` directory containing non-app-specific "
"translations in its value."
msgstr ""

# 8bc860ed13734f95a416f1333ef7a45a
#: ../../internals/deprecation.txt:188
msgid ""
"The Markup contrib app will no longer support versions of Python-Markdown "
"library earlier than 2.1. An accelerated timeline was used as this was a "
"security related deprecation."
msgstr ""

# 3f400d41735447c487d4347be6f472dc
#: ../../internals/deprecation.txt:192
msgid ""
"The ``CACHE_BACKEND`` setting will be removed. The cache backend(s) should "
"be specified in the :setting:`CACHES` setting."
msgstr ""

# ae78b48afcc342deb9ef923b42c0a6f6
#: ../../internals/deprecation.txt:196
msgid "1.6"
msgstr ""

# 923b8e0007f84c75a52109b47dabcf27
#: ../../internals/deprecation.txt:198
msgid ""
"See the :doc:`Django 1.4 release notes</releases/1.4>` for more details on "
"these changes."
msgstr ""

# d16aaeb537b34bd0961bcb68c03bc3b9
#: ../../internals/deprecation.txt:201
msgid "``django.contrib.databrowse`` will be removed."
msgstr ""

# 47970699c1234a2e868c085e17f28387
#: ../../internals/deprecation.txt:203
msgid ""
"``django.contrib.localflavor`` will be removed following an accelerated "
"deprecation."
msgstr ""

# 54220bdabfa8413191e969a2c2edd7e0
#: ../../internals/deprecation.txt:206
msgid ""
"``django.contrib.markup`` will be removed following an accelerated "
"deprecation."
msgstr ""

# 7b72bdd36e3a4277b4a274c3b5ad9cb3
#: ../../internals/deprecation.txt:209
msgid ""
"The compatibility modules ``django.utils.copycompat`` and ``django.utils."
"hashcompat`` as well as the functions ``django.utils.itercompat.all`` and "
"``django.utils.itercompat.any`` will be removed. The Python builtin versions "
"should be used instead."
msgstr ""

# 5465cd3f7a054b489ef1c13e587bea24
#: ../../internals/deprecation.txt:214
msgid ""
"The ``csrf_response_exempt`` and ``csrf_view_exempt`` decorators will be "
"removed. Since 1.4 ``csrf_response_exempt`` has been a no-op (it returns the "
"same function), and ``csrf_view_exempt`` has been a synonym for ``django."
"views.decorators.csrf.csrf_exempt``, which should be used to replace it."
msgstr ""

# f433a0d403f44cc3a01b884bc12b2081
#: ../../internals/deprecation.txt:220
msgid ""
"The ``django.core.cache.backends.memcached.CacheClass`` backend was split "
"into two in Django 1.3 in order to introduce support for PyLibMC. The "
"historical ``CacheClass`` will be removed in favor of ``django.core.cache."
"backends.memcached.MemcachedCache``."
msgstr ""

# b0827d6204644f059f7697bbe1f98c85
#: ../../internals/deprecation.txt:225
msgid ""
"The UK-prefixed objects of ``django.contrib.localflavor.uk`` will only be "
"accessible through their GB-prefixed names (GB is the correct ISO 3166 code "
"for United Kingdom)."
msgstr ""

# fd7606d1197c4178a744cd2c96d301d3
#: ../../internals/deprecation.txt:229
msgid ""
"The :setting:`IGNORABLE_404_STARTS` and :setting:`IGNORABLE_404_ENDS` "
"settings have been superseded by :setting:`IGNORABLE_404_URLS` in the 1.4 "
"release. They will be removed."
msgstr ""

# a243f084ab104b84b8d97b05d98468b9
#: ../../internals/deprecation.txt:233
msgid ""
"The :doc:`form wizard </ref/contrib/formtools/form-wizard>` has been "
"refactored to use class-based views with pluggable backends in 1.4. The "
"previous implementation will be removed."
msgstr ""

# fd12f260af72478b91f71ecf3ae10aac
#: ../../internals/deprecation.txt:237
msgid ""
"Legacy ways of calling :func:`~django.views.decorators.cache.cache_page` "
"will be removed."
msgstr ""

# 755f171f27c848ad9b478dc0dc952d51
#: ../../internals/deprecation.txt:240
msgid ""
"The backward-compatibility shim to automatically add a debug-false filter to "
"the ``'mail_admins'`` logging handler will be removed. The :setting:"
"`LOGGING` setting should include this filter explicitly if it is desired."
msgstr ""

# 4b60818b6deb4d39a1501f86e05c95cd
#: ../../internals/deprecation.txt:245
msgid ""
"The builtin truncation functions ``django.utils.text.truncate_words()`` and "
"``django.utils.text.truncate_html_words()`` will be removed in favor of the "
"``django.utils.text.Truncator`` class."
msgstr ""

# c1d16bb305ef40e4b5efd9f094bd0779
#: ../../internals/deprecation.txt:249
msgid ""
"The :class:`~django.contrib.gis.geoip.GeoIP` class was moved to :mod:`django."
"contrib.gis.geoip` in 1.4 -- the shortcut in :mod:`django.contrib.gis.utils` "
"will be removed."
msgstr ""

# 22925205ce0a431383b47a720985c74f
#: ../../internals/deprecation.txt:253
msgid ""
"``django.conf.urls.defaults`` will be removed. The functions :func:`~django."
"conf.urls.include`, :func:`~django.conf.urls.patterns` and :func:`~django."
"conf.urls.url` plus :data:`~django.conf.urls.handler404`, :data:`~django."
"conf.urls.handler500`, are now available through :mod:`django.conf.urls` ."
msgstr ""

# 34eb50c60be5403082ebf4c508493e00
#: ../../internals/deprecation.txt:259
msgid ""
"The functions ``setup_environ()`` and ``execute_manager()`` will be removed "
"from :mod:`django.core.management`. This also means that the old (pre-1.4) "
"style of :file:`manage.py` file will no longer work."
msgstr ""

# 9918040ee6cb41d1a04bc4cdd2da7d9b
#: ../../internals/deprecation.txt:263
msgid ""
"Setting the ``is_safe`` and ``needs_autoescape`` flags as attributes of "
"template filter functions will no longer be supported."
msgstr ""

# 6d5b2fa7cb1742e1a85703d0b8046ac3
#: ../../internals/deprecation.txt:266
msgid ""
"The attribute ``HttpRequest.raw_post_data`` was renamed to ``HttpRequest."
"body`` in 1.4. The backward compatibility will be removed -- ``HttpRequest."
"raw_post_data`` will no longer work."
msgstr ""

# b20aa7651ca449f5894c99dc1deaa812
#: ../../internals/deprecation.txt:271
msgid ""
"The value for the ``post_url_continue`` parameter in ``ModelAdmin."
"response_add()`` will have to be either ``None`` (to redirect to the newly "
"created object's edit page) or a pre-formatted url. String formats, such as "
"the previous default ``'../%s/'``, will not be accepted any more."
msgstr ""

# 86c3885243354515a2298326f61e4759
#: ../../internals/deprecation.txt:278
msgid "1.7"
msgstr ""

# a6a6fe35d6f840bb8ef01d04faf26d9f
#: ../../internals/deprecation.txt:280
msgid ""
"See the :doc:`Django 1.5 release notes</releases/1.5>` for more details on "
"these changes."
msgstr ""

# 7ca81e80d10449f18941fe3ffdc0858d
#: ../../internals/deprecation.txt:283
msgid ""
"The module ``django.utils.simplejson`` will be removed. The standard library "
"provides :mod:`json` which should be used instead."
msgstr ""

# 212259600c5140ec8388e43b52b96c86
#: ../../internals/deprecation.txt:286
msgid ""
"The function ``django.utils.itercompat.product`` will be removed. The Python "
"builtin version should be used instead."
msgstr ""

# 6152235aee1744e3a77943259273bfb2
#: ../../internals/deprecation.txt:289
msgid ""
"Auto-correction of INSTALLED_APPS and TEMPLATE_DIRS settings when they are "
"specified as a plain string instead of a tuple will be removed and raise an "
"exception."
msgstr ""

# 7990f2831abd44adb4d0bd196697f5a0
#: ../../internals/deprecation.txt:293
msgid ""
"The ``mimetype`` argument to the ``__init__`` methods of :class:`~django."
"http.HttpResponse`, :class:`~django.template.response."
"SimpleTemplateResponse`, and :class:`~django.template.response."
"TemplateResponse`, will be removed. ``content_type`` should be used instead. "
"This also applies to the :func:`~django.shortcuts.render_to_response` "
"shortcut and the sitemamp views, :func:`~django.contrib.sitemaps.views."
"index` and :func:`~django.contrib.sitemaps.views.sitemap`."
msgstr ""

# 3e8e627700344ea592b4f726dcbdd826
#: ../../internals/deprecation.txt:302
msgid ""
"When :class:`~django.http.HttpResponse` is instantiated with an iterator, or "
"when :attr:`~django.http.HttpResponse.content` is set to an iterator, that "
"iterator will be immediately consumed."
msgstr ""

# 2b01fb2d6c23495b9ca6592a4ec4d07c
#: ../../internals/deprecation.txt:306
msgid ""
"The ``AUTH_PROFILE_MODULE`` setting, and the ``get_profile()`` method on the "
"User model, will be removed."
msgstr ""

# 3ba2523034c5402697051c1bdbabacb7
#: ../../internals/deprecation.txt:309
msgid ""
"The ``cleanup`` management command will be removed. It's replaced by "
"``clearsessions``."
msgstr ""

# 48eebfd3b0ad4202b29418ac7b09cabf
#: ../../internals/deprecation.txt:312
msgid "The ``daily_cleanup.py`` script will be removed."
msgstr ""

# a4517ea8f50e49a191c77ae34e8413b3
#: ../../internals/deprecation.txt:314
msgid ""
"The ``depth`` keyword argument will be removed from :meth:`~django.db.models."
"query.QuerySet.select_related`."
msgstr ""

# 95029bff58a64e4cac43372339f3ea6b
#: ../../internals/deprecation.txt:318
msgid "2.0"
msgstr ""

# dc7cd81e881849ea9300bd3316555f65
#: ../../internals/deprecation.txt:320
msgid ""
"``django.views.defaults.shortcut()``. This function has been moved to "
"``django.contrib.contenttypes.views.shortcut()`` as part of the goal of "
"removing all ``django.contrib`` references from the core Django codebase. "
"The old shortcut will be removed in the 2.0 release."
msgstr ""

# c501cce2f4fc4818bf478843f15fe1a3
#: ../../internals/deprecation.txt:326
msgid ""
"``ssi`` and ``url`` template tags will be removed from the ``future`` "
"template tag library (used during the 1.3/1.4 deprecation period)."
msgstr ""

# 6f195296b5ca48bba98bf1d600661ed5
#: ../../internals/git.txt:3
msgid "The Django source code repository"
msgstr ""

# 224e041130ab4a09a08e5345784e6b7c
#: ../../internals/git.txt:5
msgid ""
"When deploying a Django application into a real production environment, you "
"will almost always want to use `an official packaged release of Django`_."
msgstr ""

# dc330ca1402d485eb3a7ecc210fdb853
#: ../../internals/git.txt:8
msgid ""
"However, if you'd like to try out in-development code from an upcoming "
"release or contribute to the development of Django, you'll need to obtain a "
"clone of Django's source code repository."
msgstr ""

# a8c152432a954ca09ba8c703950a468e
#: ../../internals/git.txt:12
msgid ""
"This document covers the way the code repository is laid out and how to work "
"with and find things in it."
msgstr ""

# f2a09c0817774ecb9af4030dc0a2e1a9
#: ../../internals/git.txt:18
msgid "High-level overview"
msgstr ""

# 80c6372f8426423b934832beeb55459b
#: ../../internals/git.txt:20
msgid ""
"The Django source code repository uses `Git`_ to track changes to the code "
"over time, so you'll need a copy of the Git client (a program called "
"``git``) on your computer, and you'll want to familiarize yourself with the "
"basics of how Git works."
msgstr ""

# b78ce88d30724ebea306cdf489508bc2
#: ../../internals/git.txt:25
msgid ""
"Git's web site offers downloads for various operating systems. The site also "
"contains vast amounts of `documentation`_."
msgstr ""

# 8c2c46caae2f415e8bd5fc34441de884
#: ../../internals/git.txt:28
msgid ""
"The Django Git repository is located online at `github.com/django/django "
"<https://github.com/django/django>`_. It contains the full source code for "
"all Django releases, which you can browse online."
msgstr ""

# 6c7bbf94072d4ec398c7ed1af0b4e746
#: ../../internals/git.txt:32
msgid "The Git repository includes several `branches`_:"
msgstr ""

# 821ce737139a49739c1f607e8486c5ac
#: ../../internals/git.txt:34
msgid ""
"``master`` contains the main in-development code which will become the next "
"packaged release of Django. This is where most development activity is "
"focused."
msgstr ""

# e5967ef6d49149298397a3538931ef67
#: ../../internals/git.txt:38
msgid ""
"``stable/A.B.x`` are the maintenance branches. They are used to support "
"older versions of Django."
msgstr ""

# 57814ecdfbc34272914a8e6c3d0e2ff3
#: ../../internals/git.txt:41
msgid ""
"``soc20XX/<project>`` branches were used by students who worked on Django "
"during the 2009 and 2010 Google Summer of Code programs."
msgstr ""

# 0c66df6fceb54175a1d65082ca8c24aa
#: ../../internals/git.txt:44
msgid ""
"``attic/<project>`` branches were used to develop major or experimental new "
"features without affecting the rest of Django's code."
msgstr ""

# bbc5d3b1a6bb44598f9b5855bd1c42e0
#: ../../internals/git.txt:47
msgid ""
"The Git repository also contains `tags`_. These are the exact revisions from "
"which packaged Django releases were produced, since version 1.0."
msgstr ""

# 0194e9e1c16c4f719b6d185231c39297
#: ../../internals/git.txt:50
msgid ""
"The source code for the `Djangoproject.com <https://www.djangoproject.com/"
">`_ web site can be found at `github.com/django/djangoproject.com <https://"
"github.com/django/djangoproject.com>`_."
msgstr ""

# 968cd30db56f4a2f832aa9229e740836
#: ../../internals/git.txt:60
msgid "The master branch"
msgstr ""

# 489e36cf27e0453cbf8bc68a892b8af2
#: ../../internals/git.txt:62
msgid ""
"If you'd like to try out the in-development code for the next release of "
"Django, or if you'd like to contribute to Django by fixing bugs or "
"developing new features, you'll want to get the code from the master branch."
msgstr ""

# 7f4a382c0271487a8f4c4a31d14780ce
#: ../../internals/git.txt:66
msgid ""
"Note that this will get *all* of Django: in addition to the top-level "
"``django`` module containing Python code, you'll also get a copy of Django's "
"documentation, test suite, packaging scripts and other miscellaneous bits. "
"Django's code will be present in your clone as a directory named ``django``."
msgstr ""

# 5fcb27d354c64a3ea6a94a3f03c48918
#: ../../internals/git.txt:72
msgid ""
"To try out the in-development code with your own applications, simply place "
"the directory containing your clone on your Python import path. Then "
"``import`` statements which look for Django will find the ``django`` module "
"within your clone."
msgstr ""

# d9b122775ae148979df9671537329077
#: ../../internals/git.txt:77
msgid ""
"If you're going to be working on Django's code (say, to fix a bug or develop "
"a new feature), you can probably stop reading here and move over to :doc:"
"`the documentation for contributing to Django </internals/contributing/"
"index>`, which covers things like the preferred coding style and how to "
"generate and submit a patch."
msgstr ""

# 985706b35e3146af95a95fbbd2703b9b
#: ../../internals/git.txt:84
msgid "Other branches"
msgstr ""

# 6358680bc5ca4743b387ef2a300e8209
#: ../../internals/git.txt:86
msgid "Django uses branches for two main purposes:"
msgstr ""

# 5471d4795674440c8def3afd67f6ffe6
#: ../../internals/git.txt:88
msgid ""
"Development of major or experimental features, to keep them from affecting "
"progress on other work in master."
msgstr ""

# 341e020c45c84290aff1a06440bb267d
#: ../../internals/git.txt:91
msgid ""
"Security and bugfix support for older releases of Django, during their "
"support lifetimes."
msgstr ""

# 2a757d1e643047969594c367c7539fdf
#: ../../internals/git.txt:95
msgid "Feature-development branches"
msgstr ""

# 45a67cf26d4b437ca409f0455e8ae865
#: ../../internals/git.txt:97
msgid "Historical information"
msgstr ""

# 2d18a413b3524a1aa276da5501fb32ed
#: ../../internals/git.txt:99
msgid ""
"Since Django moved to Git in 2012, anyone can clone the repository and "
"create his own branches, alleviating the need for official branches in the "
"source code repository."
msgstr ""

# ead447514fb44fac9ecb135f72dbe8e6
#: ../../internals/git.txt:103
msgid ""
"The following section is mostly useful if you're exploring the repository's "
"history, for example if you're trying to understand how some features were "
"designed."
msgstr ""

# 25eee49fdce04f7dbe9d28f1ea703d12
#: ../../internals/git.txt:107
msgid ""
"Feature-development branches tend by their nature to be temporary. Some "
"produce successful features which are merged back into Django's master to "
"become part of an official release, but others do not; in either case there "
"comes a time when the branch is no longer being actively worked on by any "
"developer. At this point the branch is considered closed."
msgstr ""

# d82593467fe9464eb167ecb29b7eb1f9
#: ../../internals/git.txt:113
msgid ""
"Unfortunately, Django used to be maintained with the Subversion revision "
"control system, that has no standard way of indicating this. As a "
"workaround, branches of Django which are closed and no longer maintained "
"were moved into ``attic``."
msgstr ""

# da1f77130095464389e74c50b6f9cad5
#: ../../internals/git.txt:118
msgid ""
"For reference, the following are branches whose code eventually became part "
"of Django itself, and so are no longer separately maintained:"
msgstr ""

# 9fae03934f0d4e9c99440b5997805dff
#: ../../internals/git.txt:121
msgid ""
"``boulder-oracle-sprint``: Added support for Oracle databases to Django's "
"object-relational mapper. This has been part of Django since the 1.0 release."
msgstr ""

# c1921f818c8947adbdd21f3e739ee277
#: ../../internals/git.txt:125
msgid ""
"``gis``: Added support for geographic/spatial queries to Django's object-"
"relational mapper. This has been part of Django since the 1.0 release, as "
"the bundled application ``django.contrib.gis``."
msgstr ""

# 37a0fe45423f4c57bbeb0c9e8260368d
#: ../../internals/git.txt:129
msgid ""
"``i18n``: Added :doc:`internationalization support </topics/i18n/index>` to "
"Django. This has been part of Django since the 0.90 release."
msgstr ""

# f67c4b79f00c455bba3b82aa5b450027
#: ../../internals/git.txt:132
msgid ""
"``magic-removal``: A major refactoring of both the internals and public APIs "
"of Django's object-relational mapper. This has been part of Django since the "
"0.95 release."
msgstr ""

# e7e2280ef58f4945a17cb4a8877a7a4f
#: ../../internals/git.txt:136
msgid ""
"``multi-auth``: A refactoring of :doc:`Django's bundled authentication "
"framework </topics/auth/index>` which added support for :ref:`authentication "
"backends <authentication-backends>`. This has been part of Django since the "
"0.95 release."
msgstr ""

# 3a6c9370c1ef46ed81d49b53197362f1
#: ../../internals/git.txt:141
msgid ""
"``new-admin``: A refactoring of :doc:`Django's bundled administrative "
"application </ref/contrib/admin/index>`. This became part of Django as of "
"the 0.91 release, but was superseded by another refactoring (see next "
"listing) prior to the Django 1.0 release."
msgstr ""

# cecb51c73dac4401928e661fd0360c64
#: ../../internals/git.txt:146
msgid ""
"``newforms-admin``: The second refactoring of Django's bundled "
"administrative application. This became part of Django as of the 1.0 "
"release, and is the basis of the current incarnation of ``django.contrib."
"admin``."
msgstr ""

# 71eeba82f1c44e6dafa10ec4c8b061fb
#: ../../internals/git.txt:151
msgid ""
"``queryset-refactor``: A refactoring of the internals of Django's object-"
"relational mapper. This became part of Django as of the 1.0 release."
msgstr ""

# 44091f98bed84e7bb79f1f1822e0ad60
#: ../../internals/git.txt:155
msgid ""
"``unicode``: A refactoring of Django's internals to consistently use Unicode-"
"based strings in most places within Django and Django applications. This "
"became part of Django as of the 1.0 release."
msgstr ""

# 0d21c2363a5c457bbc6e4991ef8b7968
#: ../../internals/git.txt:159
msgid ""
"When Django moved from SVN to Git, the information about branch merges "
"wasn't preserved in the source code repository. This means that the "
"``master`` branch of Django doesn't contain merge commits for the above "
"branches."
msgstr ""

# 218fe2c4e86945cd9b7a3068b35f6ba3
#: ../../internals/git.txt:163
msgid ""
"However, this information is `available as a grafts file`_. You can restore "
"it by putting the following lines in ``.git/info/grafts`` in your local "
"clone::"
msgstr ""

# 9246eb8c2d62460285637f6d8a36c31a
#: ../../internals/git.txt:181
msgid ""
"Additionally, the following branches are closed, but their code was never "
"merged into Django and the features they aimed to implement were never "
"finished:"
msgstr ""

# 05a79048e11046678251a4ee39c53154
#: ../../internals/git.txt:185
msgid "``full-history``"
msgstr ""

# 0ad1c448620a4ce9a9300cea34186380
#: ../../internals/git.txt:187
msgid "``generic-auth``"
msgstr ""

# 83a668cfbed648f5b0ffebc5228e1555
#: ../../internals/git.txt:189
msgid "``multiple-db-support``"
msgstr ""

# f7c2c52c35f743698502a647d419f1c5
#: ../../internals/git.txt:191
msgid "``per-object-permissions``"
msgstr ""

# 44958084e28f43d5b3b040f54764173c
#: ../../internals/git.txt:193
msgid "``schema-evolution``"
msgstr ""

# 308095b7c2924ea0808fc699b2f9376e
#: ../../internals/git.txt:195
msgid "``schema-evolution-ng``"
msgstr ""

# fc19851f6f2041e296363c7ac434ce2f
#: ../../internals/git.txt:197
msgid "``search-api``"
msgstr ""

# d3239db17cee4f4b980d1b8634c12099
#: ../../internals/git.txt:199
msgid "``sqlalchemy``"
msgstr ""

# 287e2aaad0644d4eb65d1231633e8a31
#: ../../internals/git.txt:201
msgid "All of the above-mentioned branches now reside in ``attic``."
msgstr ""

# 8a6da52010c94c2484d447a08a11e8b2
#: ../../internals/git.txt:203
msgid ""
"Finally, the repository contains ``soc2009/xxx`` and ``soc2010/xxx`` feature "
"branches, used for Google Summer of Code projects."
msgstr ""

# 0a8b81a93be7491aaad96f405206937b
#: ../../internals/git.txt:207
msgid "Support and bugfix branches"
msgstr ""

# e4f528ef06584edbac14febb04a9409b
#: ../../internals/git.txt:209
msgid ""
"In addition to fixing bugs in current master, the Django project provides "
"official bugfix support for the most recent released version of Django, and "
"security support for the two most recently-released versions of Django."
msgstr ""

# 479d8d299215422d9ecf70c6b4960004
#: ../../internals/git.txt:213
msgid ""
"This support is provided via branches in which the necessary bug or security "
"fixes are applied; the branches are then used as the basis for issuing "
"bugfix or security releases."
msgstr ""

# 5222d62c5e20402b922ed5c97d35e47f
#: ../../internals/git.txt:217
msgid ""
"These branches can be found in the repository as ``stable/A.B.x`` branches, "
"and new branches will be created there after each new Django release."
msgstr ""

# 00d83c49ccba440488a8fe0c7df88ef3
#: ../../internals/git.txt:221
msgid ""
"For example, shortly after the release of Django 1.0, the branch "
"``stable/1.0.x`` was created to receive bug fixes, and shortly after the "
"release of Django 1.1 the branch ``stable/1.1.x`` was created."
msgstr ""

# 0c3a9bbc9e4c46438c239f1cf6ac8683
#: ../../internals/git.txt:225
msgid ""
"Official support for the above mentioned releases has expired, and so they "
"no longer receive direct maintenance from the Django project. However, the "
"branches continue to exist and interested community members have "
"occasionally used them to provide unofficial support for old Django releases."
msgstr ""

# 81329b135a20401f85e8ad332bdbf374
#: ../../internals/git.txt:231
msgid "Tags"
msgstr ""

# 082a1a63069d437da6b6384e6e8e876f
#: ../../internals/git.txt:233
msgid "Each Django release is tagged and signed by Django's release manager."
msgstr ""

# e368e202402244fa93575033c1a89be6
#: ../../internals/git.txt:235
msgid "The tags can be found on GitHub's `tags`_ page."
msgstr ""

# c44c7338fe6848ac8cbdef61009c1102
#: ../../internals/index.txt:2
msgid "Django internals"
msgstr ""

# 9c9f0f8a4b394ab78c40af125eb86c7a
#: ../../internals/index.txt:4
msgid ""
"Documentation for people hacking on Django itself. This is the place to go "
"if you'd like to help improve Django, learn or learn about how Django works "
"\"under the hood\"."
msgstr ""

# 54058ce5f53d4e8389816358a5fdbec3
#: ../../internals/index.txt:10
msgid ""
"Elsewhere in the Django documentation, coverage of a feature is a sort of a "
"contract: once an API is in the official documentation, we consider it "
"\"stable\" and don't change it without a good reason. APIs covered here, "
"however, are considered \"internal-only\": we reserve the right to change "
"these internals if we must."
msgstr ""

# a5a91895f2124512be99ed62c438ac4d
#: ../../internals/release-process.txt:3
msgid "Django's release process"
msgstr ""

# 6c7380aa016c4c5ca5bcc1b19d338753
#: ../../internals/release-process.txt:8
msgid "Official releases"
msgstr ""

# a149cd2f343b46e9bd93367bcb9b1965
#: ../../internals/release-process.txt:10
msgid "Since version 1.0, Django's release numbering works as follows:"
msgstr ""

# 2088d0b9b0d04b949afcfe2cf1c1ed2e
#: ../../internals/release-process.txt:12
msgid "Versions are numbered in the form ``A.B`` or ``A.B.C``."
msgstr ""

# a6cd94d255964e2d881e0e8f3f483118
#: ../../internals/release-process.txt:14
msgid ""
"``A`` is the *major version* number, which is only incremented for major "
"changes to Django, and these changes are not necessarily backwards-"
"compatible. That is, code you wrote for Django 1.2 may break when we release "
"Django 2.0."
msgstr ""

# ff543ddb5db347aead9345fd7a82d710
#: ../../internals/release-process.txt:19
msgid ""
"``B`` is the *minor version* number, which is incremented for large yet "
"backwards compatible changes.  Code written for Django 1.2 will continue to "
"work under Django 1.3. Exceptions to this rule will be listed in the release "
"notes."
msgstr ""

# 4f8b065b52344a4ba11ebd2c79a14d9b
#: ../../internals/release-process.txt:24
msgid ""
"``C`` is the *micro version* number, which is incremented for bug and "
"security fixes. A new micro-release will be 100% backwards-compatible with "
"the previous micro-release. The only exception is when a security issue "
"can't be fixed without breaking backwards-compatibility. If this happens, "
"the release notes will provide detailed upgrade instructions."
msgstr ""

# e357bd2b47534320a30b5904073c6cd5
#: ../../internals/release-process.txt:30
msgid ""
"In some cases, we'll make alpha, beta, or release candidate releases. These "
"are of the form ``A.B alpha/beta/rc N``, which means the ``Nth`` alpha/beta/"
"release candidate of version ``A.B``."
msgstr ""

# 0135ef187e1a4af985b604caa4b4df8f
#: ../../internals/release-process.txt:34
msgid ""
"In git, each Django release will have a tag indicating its version number, "
"signed with the Django release key. Additionally, each release series (X.Y) "
"has its own branch, and bugfix/security releases will be issued from those "
"branches."
msgstr ""

# 6f31652a17574f25bbca14f4419e2ed8
#: ../../internals/release-process.txt:39
msgid ""
"For more information about how the Django project issues new releases for "
"security purposes, please see :doc:`our security policies <security>`."
msgstr ""

# d43a748d989641f4b67bcaa1066aa4c0
#: ../../internals/release-process.txt:44
msgid "Major releases"
msgstr ""

# e05d4ab7ef6d4dc9a9ce6d406acdd03e
#: ../../internals/release-process.txt:46
msgid ""
"Major releases (1.0, 2.0, etc.) will happen very infrequently (think \"years"
"\", not \"months\"), and will probably represent major, sweeping changes to "
"Django."
msgstr ""

# c2d4f84a931d4732803a8528242c92e6
#: ../../internals/release-process.txt:50
msgid "Minor releases"
msgstr ""

# 4160ddff68064d30b609901b31c08ed4
#: ../../internals/release-process.txt:52
msgid ""
"Minor release (1.1, 1.2, etc.) will happen roughly every nine months -- see "
"`release process`_, below for details."
msgstr ""

# 83f6c21c054848298ca97921a05c1279
#: ../../internals/release-process.txt:57
msgid ""
"These releases will contain new features, improvements to existing features, "
"and such. A minor release may deprecate certain features from previous "
"releases. If a feature in version ``A.B`` is deprecated, it will continue to "
"work in version ``A.B+1``. In version ``A.B+2``, use of the feature will "
"raise a ``DeprecationWarning`` but will continue to work. Version ``A.B+3`` "
"will remove the feature entirely."
msgstr ""

# 24c3753ad8cb4ff9a676648059a628d3
#: ../../internals/release-process.txt:64
msgid ""
"So, for example, if we decided to remove a function that existed in Django "
"1.0:"
msgstr ""

# dcb4ffd1143b44e6be99293a51acab14
#: ../../internals/release-process.txt:66
msgid ""
"Django 1.1 will contain a backwards-compatible replica of the function which "
"will raise a ``PendingDeprecationWarning``. This warning is silent by "
"default; you need to explicitly turn on display of these warnings."
msgstr ""

# a4b9e0c210324a009cb398fae18e48cc
#: ../../internals/release-process.txt:70
msgid ""
"Django 1.2 will contain the backwards-compatible replica, but the warning "
"will be promoted to a full-fledged ``DeprecationWarning``. This warning is "
"*loud* by default, and will likely be quite annoying."
msgstr ""

# 1cf69a53ec6a4a20b37f5547e48c3b06
#: ../../internals/release-process.txt:74
msgid "Django 1.3 will remove the feature outright."
msgstr ""

# fcbeb8553b064d9e842e8456ab881ddd
#: ../../internals/release-process.txt:77
msgid "Micro releases"
msgstr ""

# 700a6ed6abf34a3d849fea86964c93f3
#: ../../internals/release-process.txt:79
msgid ""
"Micro releases (1.0.1, 1.0.2, 1.1.1, etc.) will be issued at least once half-"
"way between minor releases, and probably more often as needed."
msgstr ""

# 0cae6859f019483b8618414cc582f663
#: ../../internals/release-process.txt:82
msgid ""
"These releases will be 100% compatible with the associated minor release, "
"unless this is impossible for security reasons. So the answer to \"should I "
"upgrade to the latest micro release?\" will always be \"yes.\""
msgstr ""

# 54c24d6c6e4d4902b2e56bb84fa79c86
#: ../../internals/release-process.txt:86
msgid ""
"Each minor release of Django will have a \"release maintainer\" appointed. "
"This person will be responsible for making sure that bug fixes are applied "
"to both trunk and the maintained micro-release branch. This person will also "
"work with the release manager to decide when to release the micro releases."
msgstr ""

# 4e990fa140ee45c8af3c8803e1a54352
# e148b984428c43f5ab97689e6a1f2bd7
#: ../../internals/release-process.txt:94 ../../internals/security.txt:45
msgid "Supported versions"
msgstr ""

# 260c17130ad74bbc9467a6ad87ba7dd3
#: ../../internals/release-process.txt:96
msgid ""
"At any moment in time, Django's developer team will support a set of "
"releases to varying levels:"
msgstr ""

# 700d03e7175e44a5a81f30e546756349
#: ../../internals/release-process.txt:99
msgid ""
"The current development trunk will get new features and bug fixes requiring "
"major refactoring."
msgstr ""

# ab994d2caa134abeb257644327a393da
#: ../../internals/release-process.txt:102
msgid ""
"Patches applied to the trunk will also be applied to the last minor release, "
"to be released as the next micro release, when they fix critical problems:"
msgstr ""

# 17ccd0d41a654e6f8340d265d7b7cce7
#: ../../internals/release-process.txt:106
msgid "Security issues."
msgstr ""

# 91e85465605549aead50d64848d7fe26
#: ../../internals/release-process.txt:108
msgid "Data-loss bugs."
msgstr ""

# f7cbd2fab5d649fdabe38ee491ac434a
#: ../../internals/release-process.txt:110
msgid "Crashing bugs."
msgstr ""

# 392020f0612a4760854988e3d3bad232
#: ../../internals/release-process.txt:112
msgid "Major functionality bugs in newly-introduced features."
msgstr ""

# 016e58d23ec54d9384e23aa8066ee374
#: ../../internals/release-process.txt:114
msgid ""
"The rule of thumb is that fixes will be backported to the last minor release "
"for bugs that would have prevented a release in the first place."
msgstr ""

# ea127c1944524ceeb222b0fd8e22db95
#: ../../internals/release-process.txt:117
msgid ""
"Security fixes will be applied to the current trunk and the previous two "
"minor releases."
msgstr ""

# 1a1b39bff0be4962bae189a4e3fc3e44
#: ../../internals/release-process.txt:120
msgid ""
"Documentation fixes generally will be more freely backported to the last "
"release branch, at the discretion of the committer, and they don't need to "
"meet the \"critical fixes only\" bar. That's because it's highly "
"advantageous to have the docs for the last release be up-to-date and "
"correct, and the downside of backporting (risk of introducing regressions) "
"is much less of a concern."
msgstr ""

# afbe2506f4f7452f8aefc096eb86dd08
#: ../../internals/release-process.txt:127
msgid ""
"As a concrete example, consider a moment in time halfway between the release "
"of Django 1.3 and 1.4. At this point in time:"
msgstr ""

# 68037b511a3d44dbb4be111b8f19d42a
#: ../../internals/release-process.txt:130
msgid ""
"Features will be added to development trunk, to be released as Django 1.4."
msgstr ""

# df61ae97f954499a8d44e55e50ee43d2
#: ../../internals/release-process.txt:132
msgid ""
"Critical bug fixes will be applied to a ``1.3.X`` branch, and released as "
"1.3.1, 1.3.2, etc."
msgstr ""

# 4bb90e9c745f49c78b37b5294d73519d
#: ../../internals/release-process.txt:135
msgid ""
"Security fixes will be applied to trunk, a ``1.3.X`` branch and a ``1.2.X`` "
"branch. They will trigger the release of ``1.3.1``, ``1.2.1``, etc."
msgstr ""

# 6192c327457c444a98bd5c52ed261a54
#: ../../internals/release-process.txt:139
msgid ""
"Documentation fixes will be applied to trunk, and, if easily backported, to "
"the ``1.3.X`` branch."
msgstr ""

# df63a11e89c4499ab3bcc34a0e348e78
#: ../../internals/release-process.txt:145
msgid "Release process"
msgstr ""

# bf92060afdc6496f96621cf118484590
#: ../../internals/release-process.txt:147
msgid ""
"Django uses a time-based release schedule, with minor (i.e. 1.1, 1.2, etc.) "
"releases every nine months, or more, depending on features."
msgstr ""

# b7d894c3ae7b46efb6b6ff054d31c040
#: ../../internals/release-process.txt:150
msgid ""
"After each release, and after a suitable cooling-off period of a few weeks, "
"the core development team will examine the landscape and announce a timeline "
"for the next release. Most releases will be scheduled in the 6-9 month "
"range, but if we have bigger features to development we might schedule a "
"longer period to allow for more ambitious work."
msgstr ""

# 40ef8d4131da4c0aa7f1473b10a682d9
#: ../../internals/release-process.txt:157
msgid "Release cycle"
msgstr ""

# 49b5d1b50b314353ba6d646e4302ee84
#: ../../internals/release-process.txt:159
msgid ""
"Each release cycle will be split into three periods, each lasting roughly "
"one-third of the cycle:"
msgstr ""

# dac4ce823b0d47989d4ac7d400e693ef
#: ../../internals/release-process.txt:163
msgid "Phase one: feature proposal"
msgstr ""

# 0138bcd87e1046098aa65cd33502ffe8
#: ../../internals/release-process.txt:165
msgid ""
"The first phase of the release process will be devoted to figuring out what "
"features to include in the next version. This should include a good deal of "
"preliminary work on those features -- working code trumps grand design."
msgstr ""

# d752f5d924904907903575897d7a33ac
#: ../../internals/release-process.txt:169
msgid ""
"At the end of part one, the core developers will propose a feature list for "
"the upcoming release. This will be broken into:"
msgstr ""

# 3d55086158d440409ce5708d95a31929
#: ../../internals/release-process.txt:172
msgid ""
"\"Must-have\": critical features that will delay the release if not finished"
msgstr ""

# 5408149cf7ab4c8aa86ace7e5b644bc0
#: ../../internals/release-process.txt:173
msgid ""
"\"Maybe\" features: that will be pushed to the next release if not finished"
msgstr ""

# da8386819b8542edbf46c0e4aedc5efd
#: ../../internals/release-process.txt:174
msgid ""
"\"Not going to happen\": features explicitly deferred to a later release."
msgstr ""

# bb4ffd319de64deeacde57ad8af8f46a
#: ../../internals/release-process.txt:176
msgid ""
"Anything that hasn't got at least some work done by the end of the first "
"third isn't eligible for the next release; a design alone isn't sufficient."
msgstr ""

# 1ec105d685ad4129b32c4546c2df2fbd
#: ../../internals/release-process.txt:180
msgid "Phase two: development"
msgstr ""

# eecfa50743f44531acda04e4d216032f
#: ../../internals/release-process.txt:182
msgid ""
"The second third of the release schedule is the \"heads-down\" working "
"period. Using the roadmap produced at the end of phase one, we'll all work "
"very hard to get everything on it done."
msgstr ""

# 071c57cd7e474084bb9b9d160209f2e3
#: ../../internals/release-process.txt:186
msgid ""
"Longer release schedules will likely spend more than a third of the time in "
"this phase."
msgstr ""

# e1ce8eda7d9f40a1bf0af3aa982247f8
#: ../../internals/release-process.txt:189
msgid ""
"At the end of phase two, any unfinished \"maybe\" features will be postponed "
"until the next release. Though it shouldn't happen, any \"must-have\" "
"features will extend phase two, and thus postpone the final release."
msgstr ""

# d6a089a7cf274bd7957093161d09ce74
#: ../../internals/release-process.txt:193
msgid "Phase two will culminate with an alpha release."
msgstr ""

# 160cbdeb583946cb80236804023cbd0c
#: ../../internals/release-process.txt:196
msgid "Phase three: bugfixes"
msgstr ""

# 7101e70d3be844bd8b169f6dda9df2b4
#: ../../internals/release-process.txt:198
msgid ""
"The last third of a release is spent fixing bugs -- no new features will be "
"accepted during this time. We'll release a beta release about halfway "
"through, and an rc complete with string freeze two weeks before the end of "
"the schedule."
msgstr ""

# 64993608da9c4cb49ee65773edba3341
#: ../../internals/release-process.txt:203
msgid "Bug-fix releases"
msgstr ""

# 7c56a4abdebb4c4f9c370e12123a9fef
#: ../../internals/release-process.txt:205
msgid ""
"After a minor release (e.g. 1.1), the previous release will go into bugfix "
"mode."
msgstr ""

# 4c738783b092477daa787a98967d574d
#: ../../internals/release-process.txt:208
msgid ""
"A branch will be created of the form ``branches/releases/1.0.X`` to track "
"bugfixes to the previous release. Critical bugs fixed on trunk must *also* "
"be fixed on the bugfix branch; this means that commits need to cleanly "
"separate bug fixes from feature additions. The developer who commits a fix "
"to trunk will be responsible for also applying the fix to the current bugfix "
"branch.  Each bugfix branch will have a maintainer who will work with the "
"committers to keep them honest on backporting bug fixes."
msgstr ""

# 2057d038b2be44f9bd5f82ed4c42fbac
#: ../../internals/release-process.txt:217
msgid "How this all fits together"
msgstr ""

# a79b668b39db4315a1c95f52057a37d3
#: ../../internals/release-process.txt:219
msgid ""
"Let's look at a hypothetical example for how this all first together. "
"Imagine, if you will, a point about halfway between 1.1 and 1.2. At this "
"point, development will be happening in a bunch of places:"
msgstr ""

# 29949821a2ed4d59ab49a3fa4d4f2ce1
#: ../../internals/release-process.txt:223
msgid ""
"On trunk, development towards 1.2 proceeds with small additions, bugs fixes, "
"etc. being checked in daily."
msgstr ""

# a3a542419b56411c8dc1771d7b805754
#: ../../internals/release-process.txt:226
msgid ""
"On the branch \"branches/releases/1.1.X\", fixes for critical bugs found in "
"the 1.1 release are checked in as needed. At some point, this branch will be "
"released as \"1.1.1\", \"1.1.2\", etc."
msgstr ""

# 5f9920452f8b4eb3a262ff5faebacce0
#: ../../internals/release-process.txt:230
msgid ""
"On the branch \"branches/releases/1.0.X\", security fixes are made if needed "
"and released as \"1.0.2\", \"1.0.3\", etc."
msgstr ""

# 494fc2e24e3e481ebb749cf42eddb231
#: ../../internals/release-process.txt:233
msgid ""
"On feature branches, development of major features is done. These branches "
"will be merged into trunk before the end of phase two."
msgstr ""

# 4ce6572842234b35a0a5153e6cbcd0ff
#: ../../internals/security.txt:3
msgid "Django's security policies"
msgstr ""

# 17af0f15571244c1a3bd623332877b86
#: ../../internals/security.txt:5
msgid ""
"Django's development team is strongly committed to responsible reporting and "
"disclosure of security-related issues. As such, we've adopted and follow a "
"set of policies which conform to that ideal and are geared toward allowing "
"us to deliver timely security updates to the official distribution of "
"Django, as well as to third-party distributions."
msgstr ""

# 590fba86ecbe4a40974a97ae4f7f5990
#: ../../internals/security.txt:15
msgid "Reporting security issues"
msgstr ""

# b431c2910d16418cb45992f31568fef4
#: ../../internals/security.txt:17
msgid ""
"**Short version: please report security issues by emailing "
"security@djangoproject.com**."
msgstr ""

# 40d14c58314547b59d7a0fad544a5abd
#: ../../internals/security.txt:20
msgid ""
"Most normal bugs in Django are reported to `our public Trac instance`_, but "
"due to the sensitive nature of security issues, we ask that they *not* be "
"publicly reported in this fashion."
msgstr ""

# 2296e38a091a4e4393d44fd63ba740ea
#: ../../internals/security.txt:24
msgid ""
"Instead, if you believe you've found something in Django which has security "
"implications, please send a description of the issue via email to "
"``security@djangoproject.com``. Mail sent to that address reaches a subset "
"of the core development team, who can forward security issues into the "
"private committers' mailing list for broader discussion if needed."
msgstr ""

# 5c306b4e5df049f6935239e794ba4636
#: ../../internals/security.txt:31
msgid ""
"You can send encrypted email to this address; the public key ID for "
"``security@djangoproject.com`` is ``0xfcb84b8d1d17f80b``, and this public "
"key is available from most commonly-used keyservers."
msgstr ""

# e3eacc1f37f54e81991c1f6717c791e2
#: ../../internals/security.txt:35
msgid ""
"Once you've submitted an issue via email, you should receive an "
"acknowledgment from a member of the Django development team within 48 hours, "
"and depending on the action to be taken, you may receive further followup "
"emails."
msgstr ""

# 7600ff687cf84c18905094d28dd003f3
#: ../../internals/security.txt:47
msgid ""
"At any given time, the Django team provides official security support for "
"several versions of Django:"
msgstr ""

# 6f9f4b9f851e43ed976c7eea3178c1be
#: ../../internals/security.txt:50
msgid ""
"The `master development branch`_, hosted on GitHub, which will become the "
"next release of Django, receives security support."
msgstr ""

# 5dc9eb6b73154737849ac84d6530e4f4
#: ../../internals/security.txt:53
msgid ""
"The two most recent Django release series receive security support. For "
"example, during the development cycle leading to the release of Django 1.5, "
"support will be provided for Django 1.4 and Django 1.3. Upon the release of "
"Django 1.5, Django 1.3's security support will end."
msgstr ""

# 3aeda014076e4f78b868f44dc6aa3261
#: ../../internals/security.txt:59
msgid ""
"When new releases are issued for security reasons, the accompanying notice "
"will include a list of affected versions. This list is comprised solely of "
"*supported* versions of Django: older versions may also be affected, but we "
"do not investigate to determine that, and will not issue patches or new "
"releases for those versions."
msgstr ""

# cc138121b7dd420484a36e4b4ecfc69a
#: ../../internals/security.txt:70
msgid "How Django discloses security issues"
msgstr ""

# 3d7cf7434597461697fbdd584ff78ea1
#: ../../internals/security.txt:72
msgid ""
"Our process for taking a security issue from private discussion to public "
"disclosure involves multiple steps."
msgstr ""

# ff7524b50ac94174a1114dc989b4a902
#: ../../internals/security.txt:75
msgid ""
"Approximately one week before full public disclosure, we will send advance "
"notification of the issue to a list of people and organizations, primarily "
"composed of operating-system vendors and other distributors of Django. This "
"notification will consist of an email message, signed with the Django "
"release key, containing:"
msgstr ""

# 4ea466d842be49cda75efcf8e5ccd253
#: ../../internals/security.txt:81
msgid "A full description of the issue and the affected versions of Django."
msgstr ""

# edc84547a81b4556a092323bbc5571f7
#: ../../internals/security.txt:83
msgid "The steps we will be taking to remedy the issue."
msgstr ""

# 7ec30050b77c4d5abf73b6e619626fcf
#: ../../internals/security.txt:85
msgid "The patch(es), if any, that will be applied to Django."
msgstr ""

# be179f4470124114a005daf623ab88ca
#: ../../internals/security.txt:87
msgid ""
"The date on which the Django team will apply these patches, issue new "
"releases and publicy disclose the issue."
msgstr ""

# 002a0278434b4584ae01ff591a3581a5
#: ../../internals/security.txt:90
msgid ""
"Simultaneously, the reporter of the issue will receive notification of the "
"date on which we plan to take the issue public."
msgstr ""

# 930ccff1ebd54db9ab24581004112833
#: ../../internals/security.txt:93
msgid "On the day of disclosure, we will take the following steps:"
msgstr ""

# f7986e4f588d4be0aaddd746524a8d18
#: ../../internals/security.txt:95
msgid ""
"Apply the relevant patch(es) to Django's codebase. The commit messages for "
"these patches will indicate that they are for security issues, but will not "
"describe the issue in any detail; instead, they will warn of upcoming "
"disclosure."
msgstr ""

# 1277bc6e93a643299184c32d173bed29
#: ../../internals/security.txt:100
msgid ""
"Issue the relevant release(s), by placing new packages on `the Python "
"Package Index`_ and on the Django website, and tagging the new release(s) in "
"Django's git repository."
msgstr ""

# a2f7b7e676d84e43b757c9aa71ab9ecf
#: ../../internals/security.txt:104
msgid ""
"Post a public entry on `the official Django development blog`_, describing "
"the issue and its resolution in detail, pointing to the relevant patches and "
"new releases, and crediting the reporter of the issue (if the reporter "
"wishes to be publicly identified)."
msgstr ""

# b383f35634a34e829c1c35cd5d20ffae
#: ../../internals/security.txt:109
msgid ""
"Post a notice to the `django-announce`_ mailing list that links to the blog "
"post."
msgstr ""

# 29fbc8dcced34c47b97331e1ad29c08e
#: ../../internals/security.txt:116
msgid ""
"If a reported issue is believed to be particularly time-sensitive -- due to "
"a known exploit in the wild, for example -- the time between advance "
"notification and public disclosure may be shortened considerably."
msgstr ""

# 535b14969d6346a49d2b20022a4ed3c0
#: ../../internals/security.txt:117
msgid ""
"Additionally, if we have reason to believe that an issue reported to us "
"affects other frameworks or tools in the Python/web ecosystem, we may "
"privately contact and discuss those issues with the appropriate maintainers, "
"and coordinate our own disclosure and resolution with theirs."
msgstr ""

# e2207f5451bb4bd69ff3276940cb3609
#: ../../internals/security.txt:129
msgid ""
"The Django team also maintains an :doc:`archive of security issues disclosed "
"in Django</releases/security>`."
msgstr ""

# be8a57b92a5a4492be4d0ca1e5b401e3
#: ../../internals/security.txt:136
msgid "Who receives advance notification"
msgstr ""

# f5a5153286b749c5978cbcd54a4b200c
#: ../../internals/security.txt:128
msgid ""
"The full list of people and organizations who receive advance notification "
"of security issues is not and will not be made public."
msgstr ""

# 16f12848e5aa4cb0a23fe41cbace2763
#: ../../internals/security.txt:131
msgid ""
"We also aim to keep this list as small as effectively possible, in order to "
"better manage the flow of confidential information prior to disclosure. As "
"such, our notification list is *not* simply a list of users of Django, and "
"merely being a user of Django is not sufficient reason to be placed on the "
"notification list."
msgstr ""

# 63eb2733850a477ba7d25e18c3c06a1a
#: ../../internals/security.txt:137
msgid ""
"In broad terms, recipients of security notifications fall into three groups:"
msgstr ""

# aedee5e5057440098796452bfb4ff7b3
#: ../../internals/security.txt:140
msgid ""
"Operating-system vendors and other distributors of Django who provide a "
"suitably-generic (i.e., *not* an individual's personal email address) "
"contact address for reporting issues with their Django package, or for "
"general security reporting. In either case, such addresses **must not** "
"forward to public mailing lists or bug trackers. Addresses which forward to "
"the private email of an individual maintainer or security-response contact "
"are acceptable, although private security trackers or security-response "
"groups are strongly preferred."
msgstr ""

# d612d8abf7c14c1caa7a2dbf648bbc5d
#: ../../internals/security.txt:150
msgid ""
"On a case-by-case basis, individual package maintainers who have "
"demonstrated a commitment to responding to and responsibly acting on these "
"notifications."
msgstr ""

# bf867c508554450ebd626286650d2682
#: ../../internals/security.txt:154
msgid ""
"On a case-by-case basis, other entities who, in the judgment of the Django "
"development team, need to be made aware of a pending security issue. "
"Typically, membership in this group will consist of some of the largest and/"
"or most likely to be severely impacted known users or distributors of "
"Django, and will require a demonstrated ability to responsibly receive, keep "
"confidential and act on these notifications."
msgstr ""

# f005baf6523248a38218614e9042261c
#: ../../internals/security.txt:162
msgid ""
"Additionally, a maximum of six days prior to disclosure, notification will "
"be sent to the ``distros@vs.openwall.org`` mailing list, whose membership "
"includes representatives of most major open-source operating system vendors."
msgstr ""

# b11210c962dc49d2a6f44d23026fbafa
#: ../../internals/security.txt:168
msgid "Requesting notifications"
msgstr ""

# 89bd902d582a47d9b13f417ba384fb7f
#: ../../internals/security.txt:170
msgid ""
"If you believe that you, or an organization you are authorized to represent, "
"fall into one of the groups listed above, you can ask to be added to "
"Django's notification list by emailing ``security@djangoproject.com``. "
"Please use the subject line \"Security notification request\"."
msgstr ""

# 6a9b4dbe9cc9425cbb28364c74e9c30f
#: ../../internals/security.txt:176
msgid "Your request **must** include the following information:"
msgstr ""

# 58fa8faad2fd47989c7cb7564e12abee
#: ../../internals/security.txt:178
msgid ""
"Your full, real name and the name of the organization you represent, if "
"applicable, as well as your role within that organization."
msgstr ""

# 0cc91bbd720a46eb8b29627ac5952b64
#: ../../internals/security.txt:181
msgid ""
"A detailed explanation of how you or your organization fit at least one set "
"of criteria listed above."
msgstr ""

# ee4d6ace0f0142499861de918d0646e6
#: ../../internals/security.txt:184
msgid ""
"A detailed explanation of why you are requesting security notifications. "
"Again, please keep in mind that this is *not* simply a list for users of "
"Django, and the overwhelming majority of users of Django should not request "
"notifications and will not be added to our notification list if they do."
msgstr ""

# 75eb23177c6a431e993e030d2666ebeb
#: ../../internals/security.txt:190
msgid ""
"The email address you would like to have added to our notification list."
msgstr ""

# 914f81e2814f48a6994be56ded32a2ac
#: ../../internals/security.txt:193
msgid ""
"An explanation of who will be receiving/reviewing mail sent to that address, "
"as well as information regarding any automated actions that will be taken (i."
"e., filing of a confidential issue in a bug tracker)."
msgstr ""

# d85219c6483f4028b1421a9cb91bd3f1
#: ../../internals/security.txt:198
msgid ""
"For individuals, the ID of a public key associated with your address which "
"can be used to verify email received from you and encrypt email sent to you, "
"as needed."
msgstr ""

# d4211a4317a54ad0948c5345998bc748
#: ../../internals/security.txt:202
msgid ""
"Once submitted, your request will be considered by the Django development "
"team; you will receive a reply notifying you of the result of your request "
"within 30 days."
msgstr ""

# 29cc36a4ea864b229f361f5a6d3da5e8
#: ../../internals/security.txt:206
msgid ""
"Please also bear in mind that for any individual or organization, receiving "
"security notifications is a privilege granted at the sole discretion of the "
"Django development team, and that this privilege can be revoked at any time, "
"with or without explanation."
msgstr ""

# 337c4119612946c3bac039844d3544e8
#: ../../internals/security.txt:211
msgid ""
"If you are added to the notification list, security-related emails will be "
"sent to you by Django's release manager, and all notification emails will be "
"signed with the same key used to sign Django releases; that key has the ID "
"``0x3684C0C08C8B2AE1``, and is available from most commonly-used keyservers."
msgstr ""
