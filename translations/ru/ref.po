# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.5.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-04 09:46+0200\n"
"PO-Revision-Date: 2014-02-14 15:31+0500\n"
"Last-Translator: Vitaliy Dorokhin <seryimysh@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.6.4\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"Language: ru_RU\n"

# 6ac72cf41e54438ea6b403859e0d60b3
#: ../../ref/class-based-views/base.txt:3
msgid "Base views"
msgstr ""

# 437847fb58f140149619ccdf95babef7
#: ../../ref/class-based-views/base.txt:5
msgid ""
"The following three classes provide much of the functionality needed to "
"create Django views. You may think of them as *parent* views, which can be "
"used by themselves or inherited from. They may not provide all the "
"capabilities required for projects, in which case there are Mixins and "
"Generic class-based views."
msgstr ""

# 6763ea6f5ec54fe79cb036361cf2be76
#: ../../ref/class-based-views/base.txt:11
msgid ""
"Many of Django's built-in class-based views inherit from other class-based "
"views or various mixins. Because this inheritance chain is very important, "
"the ancestor classes are  documented under the section title of **Ancestors "
"(MRO)**. MRO is an acronym for Method Resolution Order."
msgstr ""

# 6e95025d017448fc9e46815c1b10649f
# 994c31c62fe74117af36b3d7ac106138
#: ../../ref/class-based-views/base.txt:17
#: ../../ref/class-based-views/flattened-index.txt:15
msgid "View"
msgstr ""

# 1b5409bd384a40179ab8a1af741169c6
#: ../../ref/class-based-views/base.txt:21
msgid ""
"The master class-based base view. All other class-based views inherit from "
"this base class."
msgstr ""

# bdd9dc4c1b554df0b5acc066d7e5d4ad
# 0bfdf4d591f74eeab5f7dbd407c767dd
# a9d4f5dc30b84822a7a4dda4440d3f77
# be669c0d358345248e9fd1932331669b
# e33e12f6d6dd4f2c83bd294739a6311e
#: ../../ref/class-based-views/base.txt:24
#: ../../ref/class-based-views/base.txt:119
#: ../../ref/class-based-views/base.txt:177
#: ../../ref/class-based-views/generic-display.txt:26
#: ../../ref/class-based-views/generic-display.txt:86
msgid "**Method Flowchart**"
msgstr ""

# b5cfecd8282147d8878bd6bb2d0e7d66
#: ../../ref/class-based-views/base.txt:26
msgid ":meth:`dispatch()`"
msgstr ""

# 973822d3632a4c9aa2f1e4287ac42c14
#: ../../ref/class-based-views/base.txt:27
msgid ":meth:`http_method_not_allowed()`"
msgstr ""

# b77302ebb0a94b849ffb35859504fc10
#: ../../ref/class-based-views/base.txt:28
msgid ":meth:`options()`"
msgstr ""

# 24000b1a5c85472da0187c94bead5cd7
# 7bde75ab4d57480b9541e1c070c88f76
# f5269aa2b59d403fa6b2e9c76f636f0e
# 838c999698bc44e580d5252dd51240e5
# 6a8fde0195ad424584d4b0d6d2f4363f
# 191465a86c0e4c758c0505fa27acc03f
# feb7b7d3df9949c58deaf07e9e8ce7c8
# 2f45448af4844cc3afc1d9db5a167b69
# 8b76abdba2004f918a790be14adeba72
# 17316e6b710a4624817bc2cd95ff1c01
# 506da7d1e8984361a825b5a5c4d48864
# 4da8c665b86e48888b10ef1d02c94edf
# 3d479f4c57c94e209ebbd421e3a44e4f
# beb3895b6ac64609aabec4d09afab1d1
# dda5b1fc504d4eeea57b1866fba938a7
#: ../../ref/class-based-views/base.txt:30
#: ../../ref/class-based-views/base.txt:125
#: ../../ref/class-based-views/base.txt:183
#: ../../ref/class-based-views/generic-date-based.txt:66
#: ../../ref/class-based-views/generic-date-based.txt:163
#: ../../ref/class-based-views/generic-date-based.txt:258
#: ../../ref/class-based-views/generic-date-based.txt:351
#: ../../ref/class-based-views/generic-date-based.txt:466
#: ../../ref/class-based-views/generic-date-based.txt:540
#: ../../ref/class-based-views/generic-display.txt:39
#: ../../ref/class-based-views/generic-display.txt:98
#: ../../ref/class-based-views/generic-editing.txt:57
#: ../../ref/class-based-views/generic-editing.txt:104
#: ../../ref/class-based-views/generic-editing.txt:145
#: ../../ref/class-based-views/generic-editing.txt:186
msgid "**Example views.py**::"
msgstr ""

# 4dc156eb2abf41aeb9b44f417dc02469
# 8c76f6c2c1634e3d8fe58849ce97960e
# 6ea0afa096a44960a9384c17540dc56c
# 781c3ac012304f93b4d20a162d636ed3
# dd4c1587ff2a422688c954dc1bc9ca4a
# 14e5055e9fe544e4b922851026eb7d03
# 3dad3f0fa8f64572bf4f1c20308adcbb
# a2a1506d88b04e119a86247e448ce450
# bdcb590f8d6b4b44a72d970fdf69e7e1
# 9c7a17aab6b84b29b7ba3cc09a60d6bf
# dcc011afcc0d45ba80d439bc6a6f28db
#: ../../ref/class-based-views/base.txt:40
#: ../../ref/class-based-views/base.txt:140
#: ../../ref/class-based-views/base.txt:200
#: ../../ref/class-based-views/generic-date-based.txt:175
#: ../../ref/class-based-views/generic-date-based.txt:270
#: ../../ref/class-based-views/generic-date-based.txt:364
#: ../../ref/class-based-views/generic-date-based.txt:478
#: ../../ref/class-based-views/generic-date-based.txt:552
#: ../../ref/class-based-views/generic-date-based.txt:602
#: ../../ref/class-based-views/generic-display.txt:55
#: ../../ref/class-based-views/generic-display.txt:114
msgid "**Example urls.py**::"
msgstr ""

# fff154509daa426284c2a02e6428cb44
# 9a00725b748a40d2a90051a56f14a2ba
# 6c6f6f9e6922477db1ea7c44a4806dcb
# 7537b5fe28884c1a8d6d09a1a103578b
# 314da33908304b49813d46c9aa606d88
# c8aa6bd01d724f2285c3b5e3ea3410d5
#: ../../ref/class-based-views/base.txt:50
#: ../../ref/class-based-views/base.txt:213
#: ../../ref/class-based-views/generic-editing.txt:94
#: ../../ref/class-based-views/generic-editing.txt:135
#: ../../ref/class-based-views/generic-editing.txt:175
#: ../../ref/class-based-views/mixins-simple.txt:46
msgid "**Attributes**"
msgstr ""

# 2cc5976ab3864ab19225b08699d9b4fb
#: ../../ref/class-based-views/base.txt:54
msgid "The list of HTTP method names that this view will accept."
msgstr ""

# b3da23f4dcfb4084ba9013eed75304fb
# 4f8032e27ade415a86917f73cb576764
# 4f18bd8087214648955fa847bedb83dc
# 9ef3891880cf4d039f87abed6ddb2198
# 984b7b315ec14f2396e2ed93b4b83c35
# 02eb25d68d684e038cf3673998d7d3b2
# 0ecc8a1558664ce68f26f1e590031b01
# 7a5c0c55fa67448496cd652515ea3cfe
# 298f7e18aa854718a872538703eae1e3
# d10a04bb4377492e88e311228891aea7
# 562b923760d84aa0ad251949a3f81b6d
# d5c0feefd9da4f9e95347fdb1fb140ee
# 8e34cc7661154754a2bc4b79e9a2bc00
#: ../../ref/class-based-views/base.txt:56 ../../ref/contrib/messages.txt:359
#: ../../ref/contrib/staticfiles.txt:98 ../../ref/settings.txt:163
#: ../../ref/settings.txt:707 ../../ref/settings.txt:748
#: ../../ref/settings.txt:1039 ../../ref/settings.txt:1440
#: ../../ref/settings.txt:1456 ../../ref/settings.txt:1515
#: ../../ref/settings.txt:1955 ../../ref/settings.txt:2009
#: ../../ref/settings.txt:2076
msgid "Default::"
msgstr ""

# d0ad958b790541ab8c369f2289d08443
# 5bec273dbb0d499c98af42f43486ecbb
# 6afd09fc045841cca0fd73d1eb0b343a
# 42996faa078f4a87992383e225b388ef
# 7e2188a97ef042588ed6bc73165e57ab
# 0075a36c69eb48609bde76647d6dc2d9
# 3dd1fc09da334351a1e43151d6a0e5f3
# e1d958be19ea4a7ead3ffba106d7caac
# ac0c210e8b144bacbbb9a7a2357991c6
# 19c79945ad1f415fb6726128968ca8b6
# dc666269906e4a6aae3372ce5ad05696
# 90774a59cbe1430f9f04995bf945d88f
# 6ff98bb3cc4d4f9fa8ee93fe0c3934c9
# 04429131a5c84b4e978f34bfdafbc851
# b3a1a03db1ff4dbbb2ddd32f0960499f
# fd99592f6b124681b203a2936c70e0f5
# b74c34fd03f5495f920a07c109b2aa50
# c42c6b0b855748a4aae67acba88d42c5
# c57cc92d795f4be693b45d01168b9c2e
# 9eec8ff1b828497a9506d131b4f76c32
# 3042c620ab0c47a4b1622f82372cf26b
#: ../../ref/class-based-views/base.txt:60
#: ../../ref/class-based-views/base.txt:234
#: ../../ref/class-based-views/flattened-index.txt:22
#: ../../ref/class-based-views/flattened-index.txt:40
#: ../../ref/class-based-views/flattened-index.txt:61
#: ../../ref/class-based-views/flattened-index.txt:96
#: ../../ref/class-based-views/flattened-index.txt:128
#: ../../ref/class-based-views/flattened-index.txt:157
#: ../../ref/class-based-views/flattened-index.txt:193
#: ../../ref/class-based-views/flattened-index.txt:232
#: ../../ref/class-based-views/flattened-index.txt:269
#: ../../ref/class-based-views/flattened-index.txt:305
#: ../../ref/class-based-views/flattened-index.txt:343
#: ../../ref/class-based-views/flattened-index.txt:382
#: ../../ref/class-based-views/flattened-index.txt:423
#: ../../ref/class-based-views/flattened-index.txt:464
#: ../../ref/class-based-views/flattened-index.txt:509
#: ../../ref/class-based-views/flattened-index.txt:555
#: ../../ref/class-based-views/generic-display.txt:138
#: ../../ref/class-based-views/mixins-simple.txt:12
#: ../../ref/class-based-views/mixins-simple.txt:76
msgid "**Methods**"
msgstr ""

# b2dbacd843e849d4b7ecc698e026758a
#: ../../ref/class-based-views/base.txt:64
msgid "Returns a callable view that takes a request and returns a response::"
msgstr ""

# cd74153b93aa4cd6ad56785a44677b70
#: ../../ref/class-based-views/base.txt:70
msgid ""
"The ``view`` part of the view -- the method that accepts a ``request`` "
"argument plus arguments, and returns a HTTP response."
msgstr ""

# 90033d3d8a5448859745372b89dcc57a
#: ../../ref/class-based-views/base.txt:73
msgid ""
"The default implementation will inspect the HTTP method and attempt to "
"delegate to a method that matches the HTTP method; a ``GET`` will be "
"delegated to ``get()``, a ``POST`` to ``post()``, and so on."
msgstr ""

# d41bad6aca3640b99a3bdc953b153383
#: ../../ref/class-based-views/base.txt:77
msgid ""
"By default, a ``HEAD`` request will be delegated to ``get()``. If you need "
"to handle ``HEAD`` requests in a different way than ``GET``, you can "
"override the ``head()`` method. See :ref:`supporting-other-http-methods` for "
"an example."
msgstr ""

# 08f53772e1644d63bab5d7e4b623e799
#: ../../ref/class-based-views/base.txt:84
msgid ""
"If the view was called with a HTTP method it doesn't support, this method is "
"called instead."
msgstr ""

# 2b1e538a93bf451792450078920e7d99
#: ../../ref/class-based-views/base.txt:91
msgid ""
"The default implementation returns ``HttpResponseNotAllowed`` with a list of "
"allowed methods in plain text."
msgstr ""

# 096ed1805642437ba1fc3b6d4369c62d
#: ../../ref/class-based-views/base.txt:96
msgid ""
"Handles responding to requests for the OPTIONS HTTP verb.  Returns a list of "
"the allowed HTTP method names for the view."
msgstr ""

# c0577a4edf9543c2b1803056fb01be23
# afed096610c742ac8e1971fe38e38136
#: ../../ref/class-based-views/base.txt:100
#: ../../ref/class-based-views/flattened-index.txt:30
msgid "TemplateView"
msgstr ""

# 0ce55f3cf8bb4eaf97f4092e1ea915e4
#: ../../ref/class-based-views/base.txt:104
msgid ""
"Renders a given template, with the context containing parameters captured in "
"the URL."
msgstr ""

# 08d2d709683b481499170420ce106db0
# 605359d967674bed95b7d9e34ab8f3fd
# 7419a62becfe4bd6b356924837171988
# 544d1a0f92bc42f7814b6c0aef91324d
# 780a9d004e1148f989a8332dd29f6335
# 930666791eaa440c825cc39f7e06029d
# c4868834ad80436780c3f31bdc2a9fd7
# 44b0ab769bd147ef90bcfdbdcf4643a6
# cdc9294ecfb14bc282c32439f316940d
# 56d7b313299c401fad5ebf2f5e07198b
# 769d4d0d6ea942a7994d04d70bdfb030
# 68559fa80fe7499cbefedb9d2fa00b1b
# 4143fb11899841f5bec10043ffb46da5
# d0aa5f3beae046c9bb8035c6e7288831
# cb7b9c1980494267880a560df54dd96e
# 5f3febcb097247d6a362495db0c4ca9c
#: ../../ref/class-based-views/base.txt:112
#: ../../ref/class-based-views/base.txt:171
#: ../../ref/class-based-views/generic-date-based.txt:34
#: ../../ref/class-based-views/generic-date-based.txt:100
#: ../../ref/class-based-views/generic-date-based.txt:215
#: ../../ref/class-based-views/generic-date-based.txt:315
#: ../../ref/class-based-views/generic-date-based.txt:419
#: ../../ref/class-based-views/generic-date-based.txt:522
#: ../../ref/class-based-views/generic-date-based.txt:580
#: ../../ref/class-based-views/generic-display.txt:16
#: ../../ref/class-based-views/generic-display.txt:76
#: ../../ref/class-based-views/generic-display.txt:131
#: ../../ref/class-based-views/generic-editing.txt:35
#: ../../ref/class-based-views/generic-editing.txt:81
#: ../../ref/class-based-views/generic-editing.txt:122
#: ../../ref/class-based-views/generic-editing.txt:163
msgid "**Ancestors (MRO)**"
msgstr ""

# 91e9cf298eb6462ca4c1680cabd144fa
# 95fce9368ef344bb95d04211dd47841e
# b899fddb45f5400c8d47c343ed9ebe1b
# 92d58d4a6bf34f0997a2b7a7ee533f9c
# 2454aa8bf9f44305ab149555f4f4aec6
# 38eca930c9b44ab7a4876430718a6226
# ae77340c494041bbbd8bcc87b75735eb
# ef6bedec8ff841e2b588800448f5cfe0
#: ../../ref/class-based-views/base.txt:114
#: ../../ref/class-based-views/generic-display.txt:18
#: ../../ref/class-based-views/generic-display.txt:78
#: ../../ref/class-based-views/generic-display.txt:133
#: ../../ref/class-based-views/generic-editing.txt:37
#: ../../ref/class-based-views/generic-editing.txt:83
#: ../../ref/class-based-views/generic-editing.txt:124
#: ../../ref/class-based-views/generic-editing.txt:165
msgid "This view inherits methods and attributes from the following views:"
msgstr ""

# df72ec46166c40d08ceaaae5c1e16b4a
# 9c656ba9073b4312be51567bceb35a58
# b0b92fd1aa544c988c497437fb94e0cb
# 9740c6d3384a45a3aa2e05b24de6810b
# 071f8c314f13401fa14a32792ce61241
# b7ea81db2f8a4e87b41b7362a7050f8f
# 97c1e378e93a411fbb4fc6d60c3499da
# 67937855612446c08c9ba735f6fc5cdf
# 9bcf049c8afc42dc9c9bf28502ec1eb8
# a807875c5c0246f78159b468756ee641
# 7a003f9b8632472a83d57bd74b59e0e9
# 31cef65e9bd44126a1285428e1e65f76
# 8165475b1c09413dbeea1c33264b9ecd
# c44bcbeffc144d3aa67c0caf4b80b0ae
#: ../../ref/class-based-views/base.txt:116
#: ../../ref/class-based-views/generic-date-based.txt:37
#: ../../ref/class-based-views/generic-date-based.txt:103
#: ../../ref/class-based-views/generic-date-based.txt:218
#: ../../ref/class-based-views/generic-date-based.txt:318
#: ../../ref/class-based-views/generic-date-based.txt:422
#: ../../ref/class-based-views/generic-date-based.txt:525
#: ../../ref/class-based-views/generic-date-based.txt:583
#: ../../ref/class-based-views/generic-display.txt:21
#: ../../ref/class-based-views/generic-display.txt:81
#: ../../ref/class-based-views/generic-editing.txt:39
#: ../../ref/class-based-views/generic-editing.txt:86
#: ../../ref/class-based-views/generic-editing.txt:127
#: ../../ref/class-based-views/generic-editing.txt:168
msgid ":class:`django.views.generic.base.TemplateResponseMixin`"
msgstr ""

# 02a93599abac42e6b41dd5f6d3bf0578
# 88782c9a950744138c46af301bc36460
# da138365c79c4b139b212ff08063f71d
# ccfb997fbfe243ff84e7ae6b45caf632
# 5757ee5cf11644a8947c7b550a5188ba
# 5e0bd61f1591476591c29cb205c649de
# 99de4b4912154c94b225e54b95916efb
# 60cf1ec80f9741b6a898d726e8f49e19
# deb433dd6bc04aedaae49191ee8b0436
# d1b4caac165440c28cdab72b3417caef
# fea2174b04f645238a396e2ac9d6320f
# ab52836fdc1a49739e002da8fdd8a295
# 416574b86cc44881bb8eea73d4abb44a
# 0291bbace11e4a10b2ebb17fea05695e
# 46102733d2ff4ac6a6cd334430a11f18
# 82f10c15f4d14129aefaf52b9a5567c3
# 6dd338a6f4c3438abecd0a3c412b37c9
#: ../../ref/class-based-views/base.txt:117
#: ../../ref/class-based-views/base.txt:175
#: ../../ref/class-based-views/generic-date-based.txt:42
#: ../../ref/class-based-views/generic-date-based.txt:109
#: ../../ref/class-based-views/generic-date-based.txt:225
#: ../../ref/class-based-views/generic-date-based.txt:325
#: ../../ref/class-based-views/generic-date-based.txt:430
#: ../../ref/class-based-views/generic-date-based.txt:534
#: ../../ref/class-based-views/generic-date-based.txt:591
#: ../../ref/class-based-views/generic-display.txt:24
#: ../../ref/class-based-views/generic-display.txt:84
#: ../../ref/class-based-views/generic-display.txt:136
#: ../../ref/class-based-views/generic-editing.txt:43
#: ../../ref/class-based-views/generic-editing.txt:92
#: ../../ref/class-based-views/generic-editing.txt:133
#: ../../ref/class-based-views/generic-editing.txt:173
#: ../../ref/class-based-views/mixins-editing.txt:182
msgid ":class:`django.views.generic.base.View`"
msgstr ""

# daa0eec03bfa497f9960c41e60b53507
# f9e09df1ffc34a759abe8ebf5b4a68b4
# caf3b5324c5748a9b5e1b4cb83bdc8f5
# 5ec143be919a4f1da507a5a4266ab0e1
#: ../../ref/class-based-views/base.txt:121
#: ../../ref/class-based-views/base.txt:179
#: ../../ref/class-based-views/generic-display.txt:28
#: ../../ref/class-based-views/generic-display.txt:88
msgid ":meth:`~django.views.generic.base.View.dispatch()`"
msgstr ""

# 3caa91d9f6c14228a4f3e0b553b5376f
# 0213785390e749d39e890fb7e60e7728
# 67d4827ec46b4bcfb9d63952bcef8374
# d6cc49915720490987a91d6ab129c020
#: ../../ref/class-based-views/base.txt:122
#: ../../ref/class-based-views/base.txt:180
#: ../../ref/class-based-views/generic-display.txt:29
#: ../../ref/class-based-views/generic-display.txt:89
msgid ":meth:`~django.views.generic.base.View.http_method_not_allowed()`"
msgstr ""

# ab28e314a96c42e8beb6dd2fc1923e32
#: ../../ref/class-based-views/base.txt:123
msgid ":meth:`~django.views.generic.base.ContextMixin.get_context_data()`"
msgstr ""

# 001146feea254171876dad569f5229b4
# 8d24c4a6f09a41f1b1612bc75a32d30a
# eeb4a45d5e57420b8c82b5669c487a44
# 1977160accd942b2a832615fbd6b8ed0
# 266da36a1d8c496e947d0c8a67cabba0
# 5498ff6c976749ef8610489980e5704e
# 251e35bf60d043ea9c3d0936bdb3e0b1
# cbbbf28c49744ec88299fc888b1db24f
# 044333da24d14210be3925510876c0ff
# c1d6e9b04c614dad9a0b309d2591ed2b
#: ../../ref/class-based-views/base.txt:150
#: ../../ref/class-based-views/generic-date-based.txt:44
#: ../../ref/class-based-views/generic-date-based.txt:124
#: ../../ref/class-based-views/generic-date-based.txt:227
#: ../../ref/class-based-views/generic-date-based.txt:327
#: ../../ref/class-based-views/generic-date-based.txt:432
#: ../../ref/class-based-views/generic-date-based.txt:593
#: ../../ref/class-based-views/mixins-editing.txt:85
#: ../../ref/class-based-views/mixins-multiple-object.txt:143
#: ../../ref/class-based-views/mixins-single-object.txt:85
msgid "**Context**"
msgstr ""

# 780534bf504f4e43b1d8cad0910ac736
#: ../../ref/class-based-views/base.txt:152
msgid ""
"``params``: The dictionary of keyword arguments captured from the URL "
"pattern that served the view."
msgstr ""

# 1017dbb7c3cb4911a68aed30a48fdc6d
# 1c00f823c11e40478e40c97e89d4aedc
#: ../../ref/class-based-views/base.txt:156
#: ../../ref/class-based-views/flattened-index.txt:51
msgid "RedirectView"
msgstr ""

# 29d218ec331c4be29589d9372a2da9ab
#: ../../ref/class-based-views/base.txt:160
msgid "Redirects to a given URL."
msgstr ""

# 1e03c13944014b3fa5cc1337ec0f9551
#: ../../ref/class-based-views/base.txt:162
msgid ""
"The given URL may contain dictionary-style string formatting, which will be "
"interpolated against the parameters captured in the URL. Because keyword "
"interpolation is *always* done (even if no arguments are passed in), any ``"
"\"%\"`` characters in the URL must be written as ``\"%%\"`` so that Python "
"will convert them to a single percent sign on output."
msgstr ""

# e74a3a1ba2a546c38a456d4130dacc04
#: ../../ref/class-based-views/base.txt:168
msgid ""
"If the given URL is ``None``, Django will return an ``HttpResponseGone`` "
"(410)."
msgstr ""

# f1efca007a144d1fa4da6ff63cf80eaa
#: ../../ref/class-based-views/base.txt:173
msgid "This view inherits methods and attributes from the following view:"
msgstr ""

# 79c660a26c4246e881b916fa40b92421
#: ../../ref/class-based-views/base.txt:181
msgid ":meth:`get_redirect_url()`"
msgstr ""

# 7b9c7f195bee4a85b7b6bafaac4f1a4e
#: ../../ref/class-based-views/base.txt:217
msgid ""
"The URL to redirect to, as a string. Or ``None`` to raise a 410 (Gone) HTTP "
"error."
msgstr ""

# 874c91c544154ba38953b212d182e97e
#: ../../ref/class-based-views/base.txt:222
msgid ""
"Whether the redirect should be permanent. The only difference here is the "
"HTTP status code returned. If ``True``, then the redirect will use status "
"code 301. If ``False``, then the redirect will use status code 302. By "
"default, ``permanent`` is ``True``."
msgstr ""

# a27bdec93e0a4f82baec848c932f5aaf
#: ../../ref/class-based-views/base.txt:229
msgid ""
"Whether to pass along the GET query string to the new location. If ``True``, "
"then the query string is appended to the URL. If ``False``, then the query "
"string is discarded. By default, ``query_string`` is ``False``."
msgstr ""

# 3873e5a57a484c47a17d2909fdd5b764
#: ../../ref/class-based-views/base.txt:238
msgid "Constructs the target URL for redirection."
msgstr ""

# a9509b0818dd445fa357462858ff65d7
#: ../../ref/class-based-views/base.txt:240
msgid ""
"The default implementation uses :attr:`url` as a starting string, performs "
"expansion of ``%`` parameters in that string, as well as the appending of "
"query string if requested by :attr:`query_string`. Subclasses may implement "
"any behavior they wish, as long as the method returns a redirect-ready URL "
"string."
msgstr ""

# b7309f7fd3684c1abb9d5a4fcc8f04f2
#: ../../ref/class-based-views/flattened-index.txt:3
msgid "Class-based generic views - flattened index"
msgstr ""

# 925b9a348cb24fed8396c109d1bea917
#: ../../ref/class-based-views/flattened-index.txt:5
msgid ""
"This index provides an alternate organization of the reference documentation "
"for class-based views. For each view, the effective attributes and methods "
"from the class tree are represented under that view. For the reference "
"documentation organized by the class which defines the behavior, see :doc:"
"`Class-based views</ref/class-based-views/index>`"
msgstr ""

# 51a99defe76046728b83bf3de4e456db
#: ../../ref/class-based-views/flattened-index.txt:12
msgid "Simple generic views"
msgstr ""

# 3f2820da16a0494ca60ed47c8acadf6d
# 56f89c3f833e4bf39dc497e665514e1c
# 02c2e2743739479e98a9496a140af2e9
# 39e242f7a0d344f0b9193c83747ccde6
# 4ba84db965804d3cb37c357fb937ce96
# a62a17ac22ff44f6b9fa1487332fca73
# 225dc8f99826481c9ea64bf1094969a1
# 09603787da0b4ae4a4f2aa404e597e18
# 22f043cfa7804889a5b4defc1a727bec
# be6ca310142a45f79e952cc3638768e8
# 25a8648ee5554fdca3be5942f92af8d2
# adf05692360245cdb8fc9094a7d27b71
# d316789a09764513b7c04df23beb3d48
# 0896510692804e7fb7eef300da086d88
# 692dd56725434f0eba88e2090b84b2b0
# 983f89f6c8ce45b99dee5a974e5054b4
#: ../../ref/class-based-views/flattened-index.txt:18
#: ../../ref/class-based-views/flattened-index.txt:33
#: ../../ref/class-based-views/flattened-index.txt:54
#: ../../ref/class-based-views/flattened-index.txt:81
#: ../../ref/class-based-views/flattened-index.txt:114
#: ../../ref/class-based-views/flattened-index.txt:147
#: ../../ref/class-based-views/flattened-index.txt:175
#: ../../ref/class-based-views/flattened-index.txt:214
#: ../../ref/class-based-views/flattened-index.txt:253
#: ../../ref/class-based-views/flattened-index.txt:289
#: ../../ref/class-based-views/flattened-index.txt:324
#: ../../ref/class-based-views/flattened-index.txt:362
#: ../../ref/class-based-views/flattened-index.txt:403
#: ../../ref/class-based-views/flattened-index.txt:442
#: ../../ref/class-based-views/flattened-index.txt:487
#: ../../ref/class-based-views/flattened-index.txt:532
msgid "**Attributes** (with optional accessor):"
msgstr ""

# 780715799c5649aaa90792301a0310c5
# 83de44d1eaf54a60aa512e522a5a5e63
# 695d6715b54040f98ec4bfd1a4e7cd68
# ac8c7e72b6cd478fb35f20828d1c941f
# 66fe70fb34a4413ab487ec60b670b38d
# 940c8e1ef9ed4475b4e039cac377fa17
# cd89c6b4bab648f9a79bf3f958a43f45
# 76f804cc3d0844a090a65a128a0b6ac1
# b1c1e406071e4240950ad3ab1a01d542
# 36e956bea73f45f4a670ae72d29fc054
# c4e0b2e9db4e4112a81177deca6e6757
# a6e51214ec6445f694a743a56d1afc9f
# d665f3f3f52349f7acf832c23a9a8619
# 6d9205d68b9945b7b6e46e319e6fa8b1
# a9ad4e4720e842408b25bc4ba862de0e
# e05eaffb402c413facf4614d8dc4bf2f
#: ../../ref/class-based-views/flattened-index.txt:20
#: ../../ref/class-based-views/flattened-index.txt:36
#: ../../ref/class-based-views/flattened-index.txt:56
#: ../../ref/class-based-views/flattened-index.txt:85
#: ../../ref/class-based-views/flattened-index.txt:119
#: ../../ref/class-based-views/flattened-index.txt:151
#: ../../ref/class-based-views/flattened-index.txt:180
#: ../../ref/class-based-views/flattened-index.txt:219
#: ../../ref/class-based-views/flattened-index.txt:257
#: ../../ref/class-based-views/flattened-index.txt:296
#: ../../ref/class-based-views/flattened-index.txt:331
#: ../../ref/class-based-views/flattened-index.txt:369
#: ../../ref/class-based-views/flattened-index.txt:410
#: ../../ref/class-based-views/flattened-index.txt:451
#: ../../ref/class-based-views/flattened-index.txt:496
#: ../../ref/class-based-views/flattened-index.txt:540
msgid ":attr:`~django.views.generic.base.View.http_method_names`"
msgstr ""

# 827594e5d8bf4f6e83b0c3da90291263
# 15ff11003a85460483d3f3bb69159e62
# 6a3585e9121d4930889ec9f4c4cbf260
# 1bcd63279945458fa7a63558e2c29939
# 81f88d7eac8645bda6648e338cbb175f
# 9a63d4a31a834d639f802052a3239ab2
# 4ca1aec8769c4b74b59e9a6d2322cea9
# bc4194f6a2d44c598506daa8d91db4e2
# 072028e55694449c958fba705f3a53f9
# 379b86c8e00f409ebe7f92f3174a4e31
# f8c0d384688c4915aa6f6af3433b59cb
# 9a5c9f5b78074de0a0ac16ade36be687
# 55595fbe861440f89277b59fc4a92730
# 8ca06fee251142b5a0e0859709f7e511
# bf05531d3ba543fe80515cb533f63a83
# 8fd662fe7b3747c69fd28e1cd1f187b8
#: ../../ref/class-based-views/flattened-index.txt:24
#: ../../ref/class-based-views/flattened-index.txt:42
#: ../../ref/class-based-views/flattened-index.txt:63
#: ../../ref/class-based-views/flattened-index.txt:98
#: ../../ref/class-based-views/flattened-index.txt:130
#: ../../ref/class-based-views/flattened-index.txt:159
#: ../../ref/class-based-views/flattened-index.txt:195
#: ../../ref/class-based-views/flattened-index.txt:234
#: ../../ref/class-based-views/flattened-index.txt:271
#: ../../ref/class-based-views/flattened-index.txt:307
#: ../../ref/class-based-views/flattened-index.txt:345
#: ../../ref/class-based-views/flattened-index.txt:384
#: ../../ref/class-based-views/flattened-index.txt:425
#: ../../ref/class-based-views/flattened-index.txt:466
#: ../../ref/class-based-views/flattened-index.txt:511
#: ../../ref/class-based-views/flattened-index.txt:557
msgid ":meth:`~django.views.generic.base.View.as_view`"
msgstr ""

# e419b233a4fb4e96af0e069808cb5835
# b50701e368c24564a4f130b2fb787ac3
# 49d069eaf2184fd588d8f8db9570d943
# 535e66e4d2454ebc8c041da1331c66fb
# 8ef5329e686c49a6a22e7fd7e0afc583
# 8e119d65ad1546b1aa7e8b170b7faa2d
# 7537f32054314454b2470bec182639ed
# e7086208ef4c422ca51870d24657cbd7
# d9f3f8902dc94b178094db6a4593440c
# d7babf14979b445ab0e93b8c4b6a8a1d
# f9a1ddd6e35645ed9c5894ea8ca649bb
# c29a53d8046f4f5f94892a164de3a046
# 63921b408e9b4ef3bfe77e4a43972534
# f99ad4bd4faf4a1194f4ff2e4811a038
# 2fa039c2081e4a76828cb7f98cabe9be
# f5da2203a814450584bcea87ea3b8c24
#: ../../ref/class-based-views/flattened-index.txt:25
#: ../../ref/class-based-views/flattened-index.txt:43
#: ../../ref/class-based-views/flattened-index.txt:65
#: ../../ref/class-based-views/flattened-index.txt:99
#: ../../ref/class-based-views/flattened-index.txt:131
#: ../../ref/class-based-views/flattened-index.txt:160
#: ../../ref/class-based-views/flattened-index.txt:196
#: ../../ref/class-based-views/flattened-index.txt:235
#: ../../ref/class-based-views/flattened-index.txt:273
#: ../../ref/class-based-views/flattened-index.txt:308
#: ../../ref/class-based-views/flattened-index.txt:346
#: ../../ref/class-based-views/flattened-index.txt:385
#: ../../ref/class-based-views/flattened-index.txt:426
#: ../../ref/class-based-views/flattened-index.txt:467
#: ../../ref/class-based-views/flattened-index.txt:512
#: ../../ref/class-based-views/flattened-index.txt:558
msgid ":meth:`~django.views.generic.base.View.dispatch`"
msgstr ""

# c98f8bc036be4d369c84ea4d2ec557c3
# 661f029c9a7f4997aab4e5b3fa172a4b
# a1a8cf8e8250454e94426291cf6fc66d
# f815841699264e0195555eb544dece2f
# efcde9a3de9b48a19d66ca2fd2c45fc7
# fc2f76112cd44bd89941319436cc6ea6
# e807f8b15a184400981b9d811e0d4c5f
# 58d7ac920b6346ce903e272c6f997dd6
# 4fd54574a9ee401eaaa4a63b5b460113
# 066fb5e78d614e0aa0ff4e052666d4f0
# 8fa51383ff6f433bbac6b85c653df0cf
# c0ee0b4b6f3c448ab20329c42afa94ea
# fc3ea55f5fb744ae984e7dfdbebbd4ad
# 36750bfc4b4042708680e4d5c7837748
# 878f7219a9204d749cd06d4e3666a216
#: ../../ref/class-based-views/flattened-index.txt:26
#: ../../ref/class-based-views/flattened-index.txt:46
#: ../../ref/class-based-views/flattened-index.txt:68
#: ../../ref/class-based-views/flattened-index.txt:103
#: ../../ref/class-based-views/flattened-index.txt:135
#: ../../ref/class-based-views/flattened-index.txt:204
#: ../../ref/class-based-views/flattened-index.txt:243
#: ../../ref/class-based-views/flattened-index.txt:277
#: ../../ref/class-based-views/flattened-index.txt:315
#: ../../ref/class-based-views/flattened-index.txt:353
#: ../../ref/class-based-views/flattened-index.txt:394
#: ../../ref/class-based-views/flattened-index.txt:433
#: ../../ref/class-based-views/flattened-index.txt:478
#: ../../ref/class-based-views/flattened-index.txt:523
#: ../../ref/class-based-views/flattened-index.txt:566
msgid "``head()``"
msgstr ""

# ce07a42b5257446a82214daa8c876053
# e9c960cc9958410b8845ca58b0b1e6de
# b4309d36607c457f9db28dcafaf2a5ba
# 9fc15e6a918f4cf9be63edb26915bad7
# 0da2f4e5f6904592bfff67c0ad72a2f2
# fc246bb3841d47258285d00d64fcd90a
# b42cf5beeadb4b2eb439766def29fa34
# 76da1a64109f463cb56811386607f2e5
# 704694d9d87e4a0089dd5b1fede3fe21
# 5351eee39a5a4a5cb2daee5600045f33
# 86aa377abfc141039088459d34d71b8f
# fcb6d3d6dac04ce194dd78e0daa50ab8
# e2f2426126c54ea982d3a2ff358d60ff
# 8c6c26b8574e47a89df504725c6de3e8
# b9ea27012bd84c238601ac89b422e496
# 9d40d02d2b434e1387b105de5f9787a2
#: ../../ref/class-based-views/flattened-index.txt:27
#: ../../ref/class-based-views/flattened-index.txt:47
#: ../../ref/class-based-views/flattened-index.txt:69
#: ../../ref/class-based-views/flattened-index.txt:104
#: ../../ref/class-based-views/flattened-index.txt:136
#: ../../ref/class-based-views/flattened-index.txt:167
#: ../../ref/class-based-views/flattened-index.txt:205
#: ../../ref/class-based-views/flattened-index.txt:244
#: ../../ref/class-based-views/flattened-index.txt:278
#: ../../ref/class-based-views/flattened-index.txt:316
#: ../../ref/class-based-views/flattened-index.txt:354
#: ../../ref/class-based-views/flattened-index.txt:395
#: ../../ref/class-based-views/flattened-index.txt:434
#: ../../ref/class-based-views/flattened-index.txt:479
#: ../../ref/class-based-views/flattened-index.txt:524
#: ../../ref/class-based-views/flattened-index.txt:567
msgid ":meth:`~django.views.generic.base.View.http_method_not_allowed`"
msgstr ""

# 98e84812029c4763a10bddc09ad1fb62
# 52270738940d4ca2bbddec005d299a86
# 46d812be196545d29ffd4720813fb215
# 3b23db6855be481b8e2fdf2edb7dba0f
# 422b666fd82c4449b050a86807cadf0c
# 6e1f051690cd496c90ac196fdca1b209
# 85d2f665b0f64721920dc23f1a92deca
# dd8e3e218e404d44b29cf1fa31cd0d25
# f7de530e9b4c435a8bad8d4d8a54dcd6
# 8af1d8e3192e4fda90b8ac5cb1d785e4
# a3b04d75ab6942ee93fb24ab8c30d97f
# ff8bb98d77044ca3bbf73307107eb77c
# 1e3c7231a374465dac17dd80a5d57a72
# a2fff70c671144259cf9b5170fd71440
#: ../../ref/class-based-views/flattened-index.txt:35
#: ../../ref/class-based-views/flattened-index.txt:83
#: ../../ref/class-based-views/flattened-index.txt:117
#: ../../ref/class-based-views/flattened-index.txt:149
#: ../../ref/class-based-views/flattened-index.txt:177
#: ../../ref/class-based-views/flattened-index.txt:216
#: ../../ref/class-based-views/flattened-index.txt:255
#: ../../ref/class-based-views/flattened-index.txt:293
#: ../../ref/class-based-views/flattened-index.txt:328
#: ../../ref/class-based-views/flattened-index.txt:366
#: ../../ref/class-based-views/flattened-index.txt:407
#: ../../ref/class-based-views/flattened-index.txt:446
#: ../../ref/class-based-views/flattened-index.txt:491
#: ../../ref/class-based-views/flattened-index.txt:535
msgid ":attr:`~django.views.generic.base.TemplateResponseMixin.content_type`"
msgstr ""

# 95b0a86351b74c4498c08ca83f314d9f
# 30ea86d128944817b8c0b6c5594c63fc
# f796e8ad62794ccea4748436b8a67e95
# 1eab0a3f37854b068ac19cf67674fc2a
# a99e96dd4807428abc02e85fb5efda8c
# 4475f455dbd74690809769ae63bc49a4
# d6a1798f64b04ce986df5235299e3278
# f61498c8b5324c739e77b8d3836c1998
# c02d09d7a3624e8fa8cd972bc95935f4
# c520489b0672495d99a100ac72e01d06
# e473cf96a6ac430f9d8477ac458a4a83
# fdced5ab9ff8421abc6bb9cec10c5118
# 454c1ea78c2c482daedaf3e217ff391d
# 287313e7e87d4afcabc5efb7f0b6d33f
#: ../../ref/class-based-views/flattened-index.txt:37
#: ../../ref/class-based-views/flattened-index.txt:89
#: ../../ref/class-based-views/flattened-index.txt:124
#: ../../ref/class-based-views/flattened-index.txt:153
#: ../../ref/class-based-views/flattened-index.txt:185
#: ../../ref/class-based-views/flattened-index.txt:224
#: ../../ref/class-based-views/flattened-index.txt:261
#: ../../ref/class-based-views/flattened-index.txt:301
#: ../../ref/class-based-views/flattened-index.txt:337
#: ../../ref/class-based-views/flattened-index.txt:376
#: ../../ref/class-based-views/flattened-index.txt:415
#: ../../ref/class-based-views/flattened-index.txt:458
#: ../../ref/class-based-views/flattened-index.txt:503
#: ../../ref/class-based-views/flattened-index.txt:546
msgid ""
":attr:`~django.views.generic.base.TemplateResponseMixin.response_class` [:"
"meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`]"
msgstr ""

# 3cb38af61c414b65a7fcfb0a6cc1a105
# 153e752c28fb4e6fa206beff4b68cb73
# adfad6861f014002963fe5d061e7039f
# aac34dcae9da4111a9279c039538ed9b
# 1c302aa904f74da8a275f99c69ebb609
# 1a3c169bf81d45139a0f2d1cca2abe18
# 9e5a71151f3a42f083d74421057f0b03
# bc182afaff864927b53131756eb80914
# 1d09c935eed84ad6bd76cef9fff8c00f
# 6124baee722e41eea742b9965c5a05ed
# 0b1a236d5d2347cdbdb1f3744a49508a
# 665e7ef80257446b84dc3ca3682d4a58
# 678331f7bbf845a59ac004012a4a344b
# 78c4bdd3368542ce94f968241e13af0d
#: ../../ref/class-based-views/flattened-index.txt:38
#: ../../ref/class-based-views/flattened-index.txt:92
#: ../../ref/class-based-views/flattened-index.txt:125
#: ../../ref/class-based-views/flattened-index.txt:155
#: ../../ref/class-based-views/flattened-index.txt:189
#: ../../ref/class-based-views/flattened-index.txt:228
#: ../../ref/class-based-views/flattened-index.txt:265
#: ../../ref/class-based-views/flattened-index.txt:302
#: ../../ref/class-based-views/flattened-index.txt:338
#: ../../ref/class-based-views/flattened-index.txt:377
#: ../../ref/class-based-views/flattened-index.txt:416
#: ../../ref/class-based-views/flattened-index.txt:459
#: ../../ref/class-based-views/flattened-index.txt:504
#: ../../ref/class-based-views/flattened-index.txt:549
msgid ""
":attr:`~django.views.generic.base.TemplateResponseMixin.template_name` [:"
"meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names`]"
msgstr ""

# b40ffcc1c600474e92fcf0b9eae40e7a
# e9c916b001304bc19cd655874eee163b
# 595c5592a228489f87616e045af5dc70
# 010ddd68ffb141e7b774fc744a579902
# 29f6e507bc5b43e393b320791e5aca33
# ea755e3b45bb46d88213aca101815ffd
# 121b1a899c414ff6bbffe6c2be644499
# 8a4f04b053c14da7a0876ae893d00f2a
# c1524fa486c84354adfa7190d8a2600f
# 3df9618c38ad40f1bdecc4d0c0fdf100
# a1fbde01e65c4140a7e13819beb6074e
# 2d8a93ba9f354b85922bedad7faf9270
# 0f7230a6eb074d918d642d02db01c5cb
#: ../../ref/class-based-views/flattened-index.txt:44
#: ../../ref/class-based-views/flattened-index.txt:66
#: ../../ref/class-based-views/flattened-index.txt:100
#: ../../ref/class-based-views/flattened-index.txt:274
#: ../../ref/class-based-views/flattened-index.txt:309
#: ../../ref/class-based-views/flattened-index.txt:347
#: ../../ref/class-based-views/flattened-index.txt:386
#: ../../ref/class-based-views/flattened-index.txt:427
#: ../../ref/class-based-views/flattened-index.txt:468
#: ../../ref/class-based-views/flattened-index.txt:513
#: ../../ref/class-based-views/flattened-index.txt:559
#: ../../ref/class-based-views/generic-display.txt:36
#: ../../ref/class-based-views/generic-display.txt:94
msgid "``get()``"
msgstr ""

# 6ab3da0965ad406b9d534ce333a0b161
#: ../../ref/class-based-views/flattened-index.txt:45
msgid ":meth:`~django.views.generic.base.ContextMixin.get_context_data`"
msgstr ""

# ecbdc7022b8549abbfa04b203dac4466
# d946e0318baa45a9af0d074eafeac296
# f54499a3d7cb42f4a5c4db28d6f48004
# f79d9995e4494347b656d9854f77cfb9
# 871730773fe3460299195a5b53c94e64
# 343ecf2f1b5148218cbc900fc78ab724
# 53694ed71bb4421cb7533345e095c927
# c1399b3925e549e393152215307eed48
# aacf68cc5d4e495d8857cc4d5ba3427e
# 1147ef8d0cb642a1a9c51035715af759
# 2a689e8d04ec457aa2ca03a105fe9006
# a139a6d10bb64437a435c9566fade845
# 2ad2d5de688f41299fe15b5197273fc8
#: ../../ref/class-based-views/flattened-index.txt:48
#: ../../ref/class-based-views/flattened-index.txt:105
#: ../../ref/class-based-views/flattened-index.txt:138
#: ../../ref/class-based-views/flattened-index.txt:208
#: ../../ref/class-based-views/flattened-index.txt:247
#: ../../ref/class-based-views/flattened-index.txt:280
#: ../../ref/class-based-views/flattened-index.txt:318
#: ../../ref/class-based-views/flattened-index.txt:356
#: ../../ref/class-based-views/flattened-index.txt:397
#: ../../ref/class-based-views/flattened-index.txt:436
#: ../../ref/class-based-views/flattened-index.txt:481
#: ../../ref/class-based-views/flattened-index.txt:526
#: ../../ref/class-based-views/flattened-index.txt:568
msgid ""
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response`"
msgstr ""

# d43efb5fdf4445b3b2a14ec1177944dc
#: ../../ref/class-based-views/flattened-index.txt:57
msgid ":attr:`~django.views.generic.base.RedirectView.permanent`"
msgstr ""

# 3cf821305ee2458cadf6bbea5c359bf5
#: ../../ref/class-based-views/flattened-index.txt:58
msgid ":attr:`~django.views.generic.base.RedirectView.query_string`"
msgstr ""

# 02a3679e91e145d2827ae2f98b8f8310
#: ../../ref/class-based-views/flattened-index.txt:59
msgid ":attr:`~django.views.generic.base.RedirectView.url`"
msgstr ""

# f608c9b461ef44d98f360ff24d1ffa58
# 9638c27ead9b4fa19ef8ba3b67c17285
#: ../../ref/class-based-views/flattened-index.txt:64
#: ../../ref/class-based-views/flattened-index.txt:272
msgid "``delete()``"
msgstr ""

# 3257e8d24bb343dc9c26d68f75830d32
#: ../../ref/class-based-views/flattened-index.txt:67
msgid ":meth:`~django.views.generic.base.RedirectView.get_redirect_url`"
msgstr ""

# 5cfdbc1fb5f34239956574fc14382c1c
#: ../../ref/class-based-views/flattened-index.txt:70
msgid "``options()``"
msgstr ""

# 6c1d62a5fcc34f0bbdb6cc01d2e67b0e
# 8101d929a9544e489316198cbd16aea0
#: ../../ref/class-based-views/flattened-index.txt:71
#: ../../ref/class-based-views/flattened-index.txt:279
msgid "``post()``"
msgstr ""

# 88b1f43acabb4880a8372fcf0c9bc673
# 2acc2d1fa5f649099f994571dfe72a38
# 4fa8eb7cb7a844208b686b73122e25d5
#: ../../ref/class-based-views/flattened-index.txt:72
#: ../../ref/class-based-views/flattened-index.txt:207
#: ../../ref/class-based-views/flattened-index.txt:246
msgid "``put()``"
msgstr ""

# a041aa6ae31f42f6b3f669dd958c15a2
#: ../../ref/class-based-views/flattened-index.txt:75
msgid "Detail Views"
msgstr ""

# c35ecc2da20e44a18454a0abb566f23d
# f999b91b4bbb42a4a01c9b8785e5e1a2
#: ../../ref/class-based-views/flattened-index.txt:78
#: ../../ref/class-based-views/generic-display.txt:9
msgid "DetailView"
msgstr ""

# 9cf77afd59ae40ef801eec3cd1ad3b80
# 26d1062f0ea544b197f0c23fbdcab7b7
# d56654d0f3994830a9b170f045bac4cc
# 24d57906b47848308d9742b9092efa1a
# 05133e5796a14b4faff5e8880b61451d
#: ../../ref/class-based-views/flattened-index.txt:84
#: ../../ref/class-based-views/flattened-index.txt:178
#: ../../ref/class-based-views/flattened-index.txt:217
#: ../../ref/class-based-views/flattened-index.txt:256
#: ../../ref/class-based-views/flattened-index.txt:536
msgid ""
":attr:`~django.views.generic.detail.SingleObjectMixin.context_object_name` [:"
"meth:`~django.views.generic.detail.SingleObjectMixin."
"get_context_object_name`]"
msgstr ""

# 50bcfea17a224a27ae7b981703e70ba6
# 9fe3c8a3bb0b4c78be7d5bd9e93f7fd3
# f7910f4a4631433e9dd84a7a62bb35e7
# 59e9c12cdc204517aa3d8e78658a80e8
# 279e93a1e48c458883f9f1fed64fcdac
#: ../../ref/class-based-views/flattened-index.txt:86
#: ../../ref/class-based-views/flattened-index.txt:182
#: ../../ref/class-based-views/flattened-index.txt:221
#: ../../ref/class-based-views/flattened-index.txt:258
#: ../../ref/class-based-views/flattened-index.txt:541
msgid ":attr:`~django.views.generic.detail.SingleObjectMixin.model`"
msgstr ""

# 7f078688d1ca4e6f89b096045f3f346b
# a2faed9c27cf4f3ab4afa321fb22c1ab
# f0c2a2e6ee274dacb453421c11944f19
# b3215bb5f7de4f5782479a40969cad2b
# 80d9f105bff8433fb753276693707878
#: ../../ref/class-based-views/flattened-index.txt:87
#: ../../ref/class-based-views/flattened-index.txt:183
#: ../../ref/class-based-views/flattened-index.txt:222
#: ../../ref/class-based-views/flattened-index.txt:259
#: ../../ref/class-based-views/flattened-index.txt:544
msgid ":attr:`~django.views.generic.detail.SingleObjectMixin.pk_url_kwarg`"
msgstr ""

# b2e8708089c24e00b3dd9527884dacc4
# 1326c00a5a4143cf81950b62b756312a
# f0afd3c6ff4742b9a24b8be15ca19579
# 8091e1ac28d54725af7c66386f305f58
# 34ef5deff1944255a5dca8f41bcc916a
#: ../../ref/class-based-views/flattened-index.txt:88
#: ../../ref/class-based-views/flattened-index.txt:184
#: ../../ref/class-based-views/flattened-index.txt:223
#: ../../ref/class-based-views/flattened-index.txt:260
#: ../../ref/class-based-views/flattened-index.txt:545
msgid ""
":attr:`~django.views.generic.detail.SingleObjectMixin.queryset` [:meth:"
"`~django.views.generic.detail.SingleObjectMixin.get_queryset`]"
msgstr ""

# de5a6e503e2d473ea889f5e1270187a0
# 689f969838be4d7c92c0546ee149f9d3
# f07737eeef124b5c8bdc74d45bc4082c
# d3601b06c22b40fd98bfbc4c2984d1fa
# 3e69843942f9474a93ce8ff573cf73f8
#: ../../ref/class-based-views/flattened-index.txt:90
#: ../../ref/class-based-views/flattened-index.txt:186
#: ../../ref/class-based-views/flattened-index.txt:225
#: ../../ref/class-based-views/flattened-index.txt:262
#: ../../ref/class-based-views/flattened-index.txt:547
msgid ""
":attr:`~django.views.generic.detail.SingleObjectMixin.slug_field` [:meth:"
"`~django.views.generic.detail.SingleObjectMixin.get_slug_field`]"
msgstr ""

# a8fb87ba23f5471e8166d2f56b0825f9
# 1ff5b63fe1f84e2487c2406e29267325
# c8c88c2ffe66436ea8df1ffc651f5bbc
# 93fe11b083934cb5affc198a8193c18e
# 14202b940f57465db349425055ce532d
#: ../../ref/class-based-views/flattened-index.txt:91
#: ../../ref/class-based-views/flattened-index.txt:187
#: ../../ref/class-based-views/flattened-index.txt:226
#: ../../ref/class-based-views/flattened-index.txt:263
#: ../../ref/class-based-views/flattened-index.txt:548
msgid ":attr:`~django.views.generic.detail.SingleObjectMixin.slug_url_kwarg`"
msgstr ""

# d29a2be606d540a8b762f29d30588eed
# a46ada4b425343349e610f3353413714
# f70dd253431f4331958d6fcefb45a298
# 187112bfe31b47a4ad763ccc504ac87b
# c1819497d1174cb68dde0527479c7eff
#: ../../ref/class-based-views/flattened-index.txt:93
#: ../../ref/class-based-views/flattened-index.txt:190
#: ../../ref/class-based-views/flattened-index.txt:229
#: ../../ref/class-based-views/flattened-index.txt:266
#: ../../ref/class-based-views/flattened-index.txt:550
msgid ""
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin."
"template_name_field`"
msgstr ""

# 668fe287d5b54fa4939bf1a390eda9cb
# 6c1569c790154eada7198ffbebf519fe
# 5447bf19ef2747e19576a09f68e7f7f5
# 825de80f23c74c6f9a3b4b32814be952
# 021512efb4744012a8e581028d39a61e
#: ../../ref/class-based-views/flattened-index.txt:94
#: ../../ref/class-based-views/flattened-index.txt:191
#: ../../ref/class-based-views/flattened-index.txt:230
#: ../../ref/class-based-views/flattened-index.txt:267
#: ../../ref/class-based-views/flattened-index.txt:551
msgid ""
":attr:`~django.views.generic.detail.SingleObjectTemplateResponseMixin."
"template_name_suffix`"
msgstr ""

# a5d64adf6e794956b6d747de82b572cc
# 905db8d9e8284eb1af84d6b45f43fa78
# 87c5ef9709364ca396cfc17a3e0e1474
#: ../../ref/class-based-views/flattened-index.txt:101
#: ../../ref/class-based-views/flattened-index.txt:275
#: ../../ref/class-based-views/flattened-index.txt:560
msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_context_data`"
msgstr ""

# e66ef3415bb04924ba3991a38801d609
# 60fd7b9cbe6343c19e9f1152dccbf4ce
# 6d63701cd8674baab7c4ef72f53a2fe1
# 66faf1aac56d47a78f83525761025b77
# 658275f0e83c4e30baaf009ffc13ec6d
#: ../../ref/class-based-views/flattened-index.txt:102
#: ../../ref/class-based-views/flattened-index.txt:203
#: ../../ref/class-based-views/flattened-index.txt:242
#: ../../ref/class-based-views/flattened-index.txt:276
#: ../../ref/class-based-views/flattened-index.txt:563
msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_object`"
msgstr ""

# 262a1dc0faea497490c4d902ab288db8
#: ../../ref/class-based-views/flattened-index.txt:108
msgid "List Views"
msgstr ""

# d5ac0060966645679a6668a431e7654f
# a6f735a31a7545338bf5f8d8191c4558
#: ../../ref/class-based-views/flattened-index.txt:111
#: ../../ref/class-based-views/generic-display.txt:66
msgid "ListView"
msgstr ""

# 6c2f56c1c4aa4aa8bb701273cb2feb7a
# 9e3af2bd2f464924b5faf214df2b01ab
# fb27df0d15164e9f99d3d5e764133237
# 22d6b3844cd846bc856d342aefdc5d60
# 1da389bf47c14747999ff7487370006d
# 97ec8ea30564493885db01fc346b4a39
# 9bd357d1e8bd44e788cfaff8d5f885a6
#: ../../ref/class-based-views/flattened-index.txt:116
#: ../../ref/class-based-views/flattened-index.txt:291
#: ../../ref/class-based-views/flattened-index.txt:326
#: ../../ref/class-based-views/flattened-index.txt:364
#: ../../ref/class-based-views/flattened-index.txt:405
#: ../../ref/class-based-views/flattened-index.txt:444
#: ../../ref/class-based-views/flattened-index.txt:489
msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.allow_empty` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_allow_empty`]"
msgstr ""

# fb78c04ed67146b7b40c6b37a4cf4a5b
# 865cdc8416534df6a8cf76d56f56e236
# 2308c1406142411591f1ea32aff60a0e
# 40e7f32398ce4ae49b436f98c323ddef
# 281a5b39594d4ff8b54ce120bf73494b
# 9153f6b04acd4a0397dc2b4394682c43
# c136296033e84b1c84c14aafd47ba86a
#: ../../ref/class-based-views/flattened-index.txt:118
#: ../../ref/class-based-views/flattened-index.txt:294
#: ../../ref/class-based-views/flattened-index.txt:329
#: ../../ref/class-based-views/flattened-index.txt:367
#: ../../ref/class-based-views/flattened-index.txt:408
#: ../../ref/class-based-views/flattened-index.txt:447
#: ../../ref/class-based-views/flattened-index.txt:492
msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.context_object_name` [:"
"meth:`~django.views.generic.list.MultipleObjectMixin."
"get_context_object_name`]"
msgstr ""

# d53bfd3aaa4a4907828b87a261992adb
# 37dbd28cc8804ddeb3c810ed3b5cc2fc
# ef495e8f6a2e4e7d81d4f93c2393f689
# dea170610cc24be581ee8f8a0f89f578
# cb13a11f6c524342bc16ac097ced2a09
# 4db08765fa4a4c81b1307102a22c4489
# 627f8bd80d504bcca46b233dc0d24067
#: ../../ref/class-based-views/flattened-index.txt:120
#: ../../ref/class-based-views/flattened-index.txt:297
#: ../../ref/class-based-views/flattened-index.txt:333
#: ../../ref/class-based-views/flattened-index.txt:370
#: ../../ref/class-based-views/flattened-index.txt:411
#: ../../ref/class-based-views/flattened-index.txt:452
#: ../../ref/class-based-views/flattened-index.txt:497
msgid ":attr:`~django.views.generic.list.MultipleObjectMixin.model`"
msgstr ""

# e38ed80999ac41f2921b4bf03d9acea2
# 0352e17ec7624cd293cefdf4fe1ca798
# 3e0a25d16998491297d813c69c0b362c
# 46c5b29b00dc4ff5af032f45e99aa5bf
# 4437f504126e442d888bccc72b183698
# e9d41c02f0f44c4a9c5873029afa9c6b
# f75dc4c019f949aebd74aa6ab9d8a463
#: ../../ref/class-based-views/flattened-index.txt:121
#: ../../ref/class-based-views/flattened-index.txt:298
#: ../../ref/class-based-views/flattened-index.txt:334
#: ../../ref/class-based-views/flattened-index.txt:373
#: ../../ref/class-based-views/flattened-index.txt:412
#: ../../ref/class-based-views/flattened-index.txt:455
#: ../../ref/class-based-views/flattened-index.txt:500
msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.paginate_by` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_paginate_by`]"
msgstr ""

# 6c81ead38de04a4f8dd69be97c33272e
# 1df633a925fd441d87e1eda18726bed9
# 3577c5195d2642859084be7abb2551f6
# 99ffdd7e743e430f927b08ef636bfdb0
# 8249322603db4ffe9a2c6f588e828fad
# 961e9a274bbd4bb9916b6acd7901f7c5
# 1178b788e715460ba2ecb7c13ebddb75
#: ../../ref/class-based-views/flattened-index.txt:122
#: ../../ref/class-based-views/flattened-index.txt:299
#: ../../ref/class-based-views/flattened-index.txt:335
#: ../../ref/class-based-views/flattened-index.txt:374
#: ../../ref/class-based-views/flattened-index.txt:413
#: ../../ref/class-based-views/flattened-index.txt:456
#: ../../ref/class-based-views/flattened-index.txt:501
msgid ":attr:`~django.views.generic.list.MultipleObjectMixin.paginator_class`"
msgstr ""

# b2ab2d81a11e47a2800fc90f22db7f25
# 56009917d44c4165bfe969e5c6bef5d9
# 9953d3223a534548a43a1e58d52b3076
# 0e23c60b0b8d41c48922d31fe4612979
# c3af37e70c644591bf5b13cef8540486
# f95c2629e53e49fe9bac313a02647e7f
# 29b9834462974958bc3b575090901ef7
#: ../../ref/class-based-views/flattened-index.txt:123
#: ../../ref/class-based-views/flattened-index.txt:300
#: ../../ref/class-based-views/flattened-index.txt:336
#: ../../ref/class-based-views/flattened-index.txt:375
#: ../../ref/class-based-views/flattened-index.txt:414
#: ../../ref/class-based-views/flattened-index.txt:457
#: ../../ref/class-based-views/flattened-index.txt:502
msgid ""
":attr:`~django.views.generic.list.MultipleObjectMixin.queryset` [:meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_queryset`]"
msgstr ""

# 647f79d342214e51a55a2deaea2a066a
# 035ed7b5eaa848b5a4fe442c897ba62e
# 7030411890ce402a9c1baa3156957bd2
# 34353bd22b2645b69427efc82514baff
# fe5beaf64ef64b198ed0aa3eccb90545
# ccc4d90dc911424c94c329408ac45023
# 83bc485947314cc0816384811481dff9
#: ../../ref/class-based-views/flattened-index.txt:126
#: ../../ref/class-based-views/flattened-index.txt:303
#: ../../ref/class-based-views/flattened-index.txt:339
#: ../../ref/class-based-views/flattened-index.txt:378
#: ../../ref/class-based-views/flattened-index.txt:417
#: ../../ref/class-based-views/flattened-index.txt:460
#: ../../ref/class-based-views/flattened-index.txt:505
msgid ""
":attr:`~django.views.generic.list.MultipleObjectTemplateResponseMixin."
"template_name_suffix`"
msgstr ""

# e9d06c54dde44294803aa4865d16e419
#: ../../ref/class-based-views/flattened-index.txt:132
msgid ":meth:`~django.views.generic.list.BaseListView.get`"
msgstr ""

# 59ab22aa43384ea0bd29c9d420647bac
# 61fa8a67e7d741dcbaa9343cf70fde96
# 66f091fa1ac34370b9436692e71baf41
# 195cfc7f5d8549cdafee239c2bc8a4c6
# 69519ce1bb834e8b81a37e05884f5323
# 921fa8584b0b411aa1b9f1a33bd9ae00
# 11f337756672461aa78661fd601b656d
#: ../../ref/class-based-views/flattened-index.txt:133
#: ../../ref/class-based-views/flattened-index.txt:310
#: ../../ref/class-based-views/flattened-index.txt:348
#: ../../ref/class-based-views/flattened-index.txt:387
#: ../../ref/class-based-views/flattened-index.txt:428
#: ../../ref/class-based-views/flattened-index.txt:469
#: ../../ref/class-based-views/flattened-index.txt:514
msgid ":meth:`~django.views.generic.list.MultipleObjectMixin.get_context_data`"
msgstr ""

# b1fb0bd2c7f44c138337b6cb43bf7074
# f3a199eb4d5c42a6988f2f5222e754b5
# 3b4956a0223542c1ae063477c8676568
# 9b1f5bfad6194f54bf35c187336e398c
# 890358277e8c4bb9971cc3ebaea2cdf9
# cad3fa62c974429ebdeb786898f05e6b
# 3bb72516d67e4009beb8913d16672dd1
#: ../../ref/class-based-views/flattened-index.txt:134
#: ../../ref/class-based-views/flattened-index.txt:314
#: ../../ref/class-based-views/flattened-index.txt:352
#: ../../ref/class-based-views/flattened-index.txt:392
#: ../../ref/class-based-views/flattened-index.txt:432
#: ../../ref/class-based-views/flattened-index.txt:475
#: ../../ref/class-based-views/flattened-index.txt:520
msgid ":meth:`~django.views.generic.list.MultipleObjectMixin.get_paginator`"
msgstr ""

# 5e709e203f194fb08b233aee34796b68
# 3c6ec6abd681433395bf4c26d4ef4cc0
# 913a3c702666427cb7f1096345429511
# 1e26632018ad4a4db124f82467483709
# d1375d92f9f1490c936a9226039b4ae2
# b635e9c62c524e7fb821a7e8470f7115
# 81c6c1cb3df1481296016a24a879f700
#: ../../ref/class-based-views/flattened-index.txt:137
#: ../../ref/class-based-views/flattened-index.txt:317
#: ../../ref/class-based-views/flattened-index.txt:355
#: ../../ref/class-based-views/flattened-index.txt:396
#: ../../ref/class-based-views/flattened-index.txt:435
#: ../../ref/class-based-views/flattened-index.txt:480
#: ../../ref/class-based-views/flattened-index.txt:525
msgid ""
":meth:`~django.views.generic.list.MultipleObjectMixin.paginate_queryset`"
msgstr ""

# ec8f6260ea3d4535871cb7762981e398
#: ../../ref/class-based-views/flattened-index.txt:141
msgid "Editing views"
msgstr ""

# 0c6985979fe6437aa8e2c351c68587d9
# c0d2c6b86a574a9da29cc94d8594ffc4
#: ../../ref/class-based-views/flattened-index.txt:144
#: ../../ref/class-based-views/generic-editing.txt:28
msgid "FormView"
msgstr ""

# 79a5b07ddaf84e37818049c46a939db7
# 49ab056405e4421f8bd35372ea61dd66
# 8b22220c5ff14ec7b9d16e486e74054b
#: ../../ref/class-based-views/flattened-index.txt:150
#: ../../ref/class-based-views/flattened-index.txt:179
#: ../../ref/class-based-views/flattened-index.txt:218
msgid ""
":attr:`~django.views.generic.edit.FormMixin.form_class` [:meth:`~django."
"views.generic.edit.FormMixin.get_form_class`]"
msgstr ""

# 4a9075e8d7774f5a9c0bc19fb9597875
# 2c303ff44b28464a9d7c56fda10429d7
# 247fba987cba4d739808ec04736effbd
#: ../../ref/class-based-views/flattened-index.txt:152
#: ../../ref/class-based-views/flattened-index.txt:181
#: ../../ref/class-based-views/flattened-index.txt:220
msgid ""
":attr:`~django.views.generic.edit.FormMixin.initial` [:meth:`~django.views."
"generic.edit.FormMixin.get_initial`]"
msgstr ""

# 1153d906fadd4e3c890b154a590ad1f7
# 96ad5adc5c8a420284efece189946611
# 6a9d91caea3c46aa8a81e4564155b872
#: ../../ref/class-based-views/flattened-index.txt:154
#: ../../ref/class-based-views/flattened-index.txt:188
#: ../../ref/class-based-views/flattened-index.txt:227
msgid ""
":attr:`~django.views.generic.edit.FormMixin.success_url` [:meth:`~django."
"views.generic.edit.FormMixin.get_success_url`]"
msgstr ""

# eb9e9e80e84845e5849ad1bcca47dfda
# 18ac953da18f41f18c10427cdcfb78fe
# 803e9ce798fe4706b4a2f8e9cbe3f2fa
#: ../../ref/class-based-views/flattened-index.txt:161
#: ../../ref/class-based-views/flattened-index.txt:197
#: ../../ref/class-based-views/flattened-index.txt:236
msgid ":meth:`~django.views.generic.edit.FormMixin.form_invalid`"
msgstr ""

# cd42852625ae49f3bb596239fc92a3a2
# 535920a9ef4f41ba87a77ce91370c354
# 2ee76fb947e949fe9a53c80f736ce3e1
#: ../../ref/class-based-views/flattened-index.txt:162
#: ../../ref/class-based-views/flattened-index.txt:198
#: ../../ref/class-based-views/flattened-index.txt:237
msgid ":meth:`~django.views.generic.edit.FormMixin.form_valid`"
msgstr ""

# 285869aebe644e2b95321dc6c83f585a
# 15334bea57734390a78948058565c345
# 80e48857c54a4a66aa2e3bac630ed066
#: ../../ref/class-based-views/flattened-index.txt:163
#: ../../ref/class-based-views/flattened-index.txt:199
#: ../../ref/class-based-views/flattened-index.txt:238
msgid ":meth:`~django.views.generic.edit.ProcessFormView.get`"
msgstr ""

# 2010c01c38b0418f937a19f4079cf2e2
# 39e44d57499f413eaeb799e1b08886fd
# f4b35663b18446e1afb84954f8adc889
#: ../../ref/class-based-views/flattened-index.txt:164
#: ../../ref/class-based-views/flattened-index.txt:200
#: ../../ref/class-based-views/flattened-index.txt:239
msgid ":meth:`~django.views.generic.edit.FormMixin.get_context_data`"
msgstr ""

# 929f0d3107c741f8bcc5dc004418e52b
# 961f2e10d81b42ceb5ed278404a4ba4d
# cecb22c0e18a449fbf096dca460a150f
#: ../../ref/class-based-views/flattened-index.txt:165
#: ../../ref/class-based-views/flattened-index.txt:201
#: ../../ref/class-based-views/flattened-index.txt:240
msgid ":meth:`~django.views.generic.edit.FormMixin.get_form`"
msgstr ""

# 2beff9c69ff64fc7ab22ede5cc5dba77
# 2a32ea8be9e94d4f9e2e063067b68552
# 8d5dc084e34143f08bb6215f598532cc
#: ../../ref/class-based-views/flattened-index.txt:166
#: ../../ref/class-based-views/flattened-index.txt:202
#: ../../ref/class-based-views/flattened-index.txt:241
msgid ":meth:`~django.views.generic.edit.FormMixin.get_form_kwargs`"
msgstr ""

# 2c6d061a7ae94e35ba98fe50f0932ab3
# 8ad7a663b4f04a2c8d9e451f1fd6ac4b
# cb1c6b4aff42447aa5b6e2c6fdae088f
#: ../../ref/class-based-views/flattened-index.txt:168
#: ../../ref/class-based-views/flattened-index.txt:206
#: ../../ref/class-based-views/flattened-index.txt:245
msgid ":meth:`~django.views.generic.edit.ProcessFormView.post`"
msgstr ""

# 7bfd1037192c4ff3ba191a8b7b3bb59b
#: ../../ref/class-based-views/flattened-index.txt:169
msgid ":meth:`~django.views.generic.edit.ProcessFormView.put`"
msgstr ""

# 37891d4ce3294e91a829422922771deb
# 2a342bb89d894c209a79cbd47f6eb24c
#: ../../ref/class-based-views/flattened-index.txt:172
#: ../../ref/class-based-views/generic-editing.txt:74
msgid "CreateView"
msgstr ""

# aa28d307fc044e31b9ef03fee5ace1a8
# fac6d11a93fa415ba30900353fe103e1
#: ../../ref/class-based-views/flattened-index.txt:211
#: ../../ref/class-based-views/generic-editing.txt:113
msgid "UpdateView"
msgstr ""

# 4148b0f64a75468c84a739026320caf4
# 62a37891f9dc4f1eb9f4c546ca36025c
#: ../../ref/class-based-views/flattened-index.txt:250
#: ../../ref/class-based-views/generic-editing.txt:154
msgid "DeleteView"
msgstr ""

# dfe7c499ae7a47caa180d97da8f60004
#: ../../ref/class-based-views/flattened-index.txt:264
msgid ""
":attr:`~django.views.generic.edit.DeletionMixin.success_url` [:meth:`~django."
"views.generic.edit.DeletionMixin.get_success_url`]"
msgstr ""

# 6f6f7efd42684a03ae8937d38c79a94a
#: ../../ref/class-based-views/flattened-index.txt:283
msgid "Date-based views"
msgstr ""

# 7a51b2a7b2544102bbfcb68f3dee53bf
# e8ec20430d5e4a0e9ef88285c95a3143
#: ../../ref/class-based-views/flattened-index.txt:286
#: ../../ref/class-based-views/generic-date-based.txt:26
msgid "ArchiveIndexView"
msgstr ""

# 2b4ac7f99a3e48aaa2a61df75d78eca1
# 2ad04630c9374ca09269ea152a8571f1
# 380e0a5718f046aca0f4fc28b99fb484
# 6e93f07c95fd4960a39353f73c4615c0
# 64ffc12d7bcc4b1a99d47b9aeda7f69a
# 0f0c5d703f694197900f5890ef008cd5
# b4acf6df1458428b84d701e377e3ae36
#: ../../ref/class-based-views/flattened-index.txt:292
#: ../../ref/class-based-views/flattened-index.txt:327
#: ../../ref/class-based-views/flattened-index.txt:365
#: ../../ref/class-based-views/flattened-index.txt:406
#: ../../ref/class-based-views/flattened-index.txt:445
#: ../../ref/class-based-views/flattened-index.txt:490
#: ../../ref/class-based-views/flattened-index.txt:534
msgid ""
":attr:`~django.views.generic.dates.DateMixin.allow_future` [:meth:`~django."
"views.generic.dates.DateMixin.get_allow_future`]"
msgstr ""

# ab2095a59d24483a9bda239e7d74afb0
# 596fdb7264834b3eaf06113ff7ea9de0
# c3f6a1b059034095b8ea6421d46bdc28
# bd96e4cd2364488cac9407dba7fa4727
# 56eacf3f117d4d69977f9f7798887eac
# 25dd642bd53542308dfd9511130fba93
# 41fc06dd8b5c4155ba66f65fd2d0ba09
#: ../../ref/class-based-views/flattened-index.txt:295
#: ../../ref/class-based-views/flattened-index.txt:330
#: ../../ref/class-based-views/flattened-index.txt:368
#: ../../ref/class-based-views/flattened-index.txt:409
#: ../../ref/class-based-views/flattened-index.txt:448
#: ../../ref/class-based-views/flattened-index.txt:493
#: ../../ref/class-based-views/flattened-index.txt:537
msgid ""
":attr:`~django.views.generic.dates.DateMixin.date_field` [:meth:`~django."
"views.generic.dates.DateMixin.get_date_field`]"
msgstr ""

# 918b2709d2a34db2b570dd3dc802faf5
# aaf39c9a8d7546cf98d3b3f89eac127d
# ed922f63cdc24be0afd280ad5f9fa0b6
# 0dcc94d2a4b5431696f7be5f1e7cf6d5
# 770f3f85acb44f87babe377046080ee4
# d6de16c5de874be7ba767eef2c871e01
#: ../../ref/class-based-views/flattened-index.txt:311
#: ../../ref/class-based-views/flattened-index.txt:349
#: ../../ref/class-based-views/flattened-index.txt:388
#: ../../ref/class-based-views/flattened-index.txt:429
#: ../../ref/class-based-views/flattened-index.txt:470
#: ../../ref/class-based-views/flattened-index.txt:515
msgid ":meth:`~django.views.generic.dates.BaseDateListView.get_date_list`"
msgstr ""

# 0502011f13804f009f533916967f3d31
# 4eb83487694d44499f6244342828cb9f
# cd75c005c5254ae796fa975478e75e6d
# f58c8996378f401884253804dc9189da
# 08c1cc3b95ce4ad3a5bea13569aabb8c
# 6c44e6da522543709aa670a6242f7b1f
#: ../../ref/class-based-views/flattened-index.txt:312
#: ../../ref/class-based-views/flattened-index.txt:350
#: ../../ref/class-based-views/flattened-index.txt:389
#: ../../ref/class-based-views/flattened-index.txt:430
#: ../../ref/class-based-views/flattened-index.txt:471
#: ../../ref/class-based-views/flattened-index.txt:516
msgid ":meth:`~django.views.generic.dates.BaseDateListView.get_dated_items`"
msgstr ""

# 925a301f837c4d11b499d3342409f8f9
# c10dfdd297a941888211f08e67427064
# 9524994c4ad94370a40fc3d5cefa2b81
# 854b67acac4c4ca3bff72ec633e41e96
# d1528f2e67d446148834e58eb55d43c3
# 1f77feb7c9b64e68b0cd4e4fd5ee077a
#: ../../ref/class-based-views/flattened-index.txt:313
#: ../../ref/class-based-views/flattened-index.txt:351
#: ../../ref/class-based-views/flattened-index.txt:390
#: ../../ref/class-based-views/flattened-index.txt:431
#: ../../ref/class-based-views/flattened-index.txt:472
#: ../../ref/class-based-views/flattened-index.txt:517
msgid ":meth:`~django.views.generic.dates.BaseDateListView.get_dated_queryset`"
msgstr ""

# 568ef41a48544fd7ae08fafcd29cef35
# 43c0422e5b7645cb8bced0f38e86c7f8
#: ../../ref/class-based-views/flattened-index.txt:321
#: ../../ref/class-based-views/generic-date-based.txt:92
msgid "YearArchiveView"
msgstr ""

# 2674a9e4d47a43bd8b46160f81a55ff2
#: ../../ref/class-based-views/flattened-index.txt:332
msgid ""
":attr:`~django.views.generic.dates.YearArchiveView.make_object_list` [:meth:"
"`~django.views.generic.dates.YearArchiveView.get_make_object_list`]"
msgstr ""

# e8dc6487d2fa4a5fa676708a63855a3a
# 0247abcabaa845ae8f3532875e88ea8d
# f4e5bfa88f4d4c5fa9388333b20188d1
# a52b4197bc6d48ddb0cf64cea8284b66
# a3cf88afcf554751817d933ff8b8f33c
# d2c231a1940c4622b918c529a1047dc7
#: ../../ref/class-based-views/flattened-index.txt:340
#: ../../ref/class-based-views/flattened-index.txt:379
#: ../../ref/class-based-views/flattened-index.txt:420
#: ../../ref/class-based-views/flattened-index.txt:461
#: ../../ref/class-based-views/flattened-index.txt:506
#: ../../ref/class-based-views/flattened-index.txt:552
msgid ""
":attr:`~django.views.generic.dates.YearMixin.year` [:meth:`~django.views."
"generic.dates.YearMixin.get_year`]"
msgstr ""

# d07551f9fd604602a16a1ffa3cad9ad0
# 5e56177014294f5ea03afadb5d0092b1
# e0b3ba7d1eae47b18d00d1525a41d927
# a33ec4640b2744548d4b79af671a6c9f
# d655bee74e4748c4a4f2a70fd2915d8a
# 0ac2089e6d2d4c108350ea5be1370c86
#: ../../ref/class-based-views/flattened-index.txt:341
#: ../../ref/class-based-views/flattened-index.txt:380
#: ../../ref/class-based-views/flattened-index.txt:421
#: ../../ref/class-based-views/flattened-index.txt:462
#: ../../ref/class-based-views/flattened-index.txt:507
#: ../../ref/class-based-views/flattened-index.txt:553
msgid ""
":attr:`~django.views.generic.dates.YearMixin.year_format` [:meth:`~django."
"views.generic.dates.YearMixin.get_year_format`]"
msgstr ""

# e8dce6ba4bf04134a97557a2d6ae19c5
# 305e464a264e47c4875767814b5a6038
#: ../../ref/class-based-views/flattened-index.txt:359
#: ../../ref/class-based-views/generic-date-based.txt:207
msgid "MonthArchiveView"
msgstr ""

# 94dba454a13a4a41ba474dd205121b0c
# 4de8b5958d554ac89c9b6c812251d6df
# 19af5455fa094eac97102f863ed9a1fc
# 8157a05844a744d29100c4d6ea2004e8
#: ../../ref/class-based-views/flattened-index.txt:371
#: ../../ref/class-based-views/flattened-index.txt:453
#: ../../ref/class-based-views/flattened-index.txt:498
#: ../../ref/class-based-views/flattened-index.txt:542
msgid ""
":attr:`~django.views.generic.dates.MonthMixin.month` [:meth:`~django.views."
"generic.dates.MonthMixin.get_month`]"
msgstr ""

# 67dde9cc72bd454d902eaa987c1dd3bf
# b262ad4280be4f2685fdfaff968925ac
# a81ea72bf87441d6b7bb9d3b436ff0fe
# 5c26e547b88947a6a56166ebf5051085
#: ../../ref/class-based-views/flattened-index.txt:372
#: ../../ref/class-based-views/flattened-index.txt:454
#: ../../ref/class-based-views/flattened-index.txt:499
#: ../../ref/class-based-views/flattened-index.txt:543
msgid ""
":attr:`~django.views.generic.dates.MonthMixin.month_format` [:meth:`~django."
"views.generic.dates.MonthMixin.get_month_format`]"
msgstr ""

# b7ed2579955e44f1811c963b2a011b94
# 50d4c39971974d7c8e9bbb7a3452fc9b
# 4b0339beeeac4a4e9dfd225c0e8d507e
# acf3c88d9f844d0a9d55eccd2ff623cc
#: ../../ref/class-based-views/flattened-index.txt:391
#: ../../ref/class-based-views/flattened-index.txt:474
#: ../../ref/class-based-views/flattened-index.txt:519
#: ../../ref/class-based-views/flattened-index.txt:562
msgid ":meth:`~django.views.generic.dates.MonthMixin.get_next_month`"
msgstr ""

# 3cb95e81e1a94eceba2207318face278
# b6d4471024db4b0fb3d6a385da53695f
# 9a958b39ea834f7586a25bbd36d7ff3f
# 3da06d6bd9c0435d9bbfda7e5cd1a068
#: ../../ref/class-based-views/flattened-index.txt:393
#: ../../ref/class-based-views/flattened-index.txt:477
#: ../../ref/class-based-views/flattened-index.txt:522
#: ../../ref/class-based-views/flattened-index.txt:565
msgid ":meth:`~django.views.generic.dates.MonthMixin.get_previous_month`"
msgstr ""

# 0cd7141b7b9a4e438c53602d15391777
# 184287a56b7c475bb61ac0536dc7ae9e
#: ../../ref/class-based-views/flattened-index.txt:400
#: ../../ref/class-based-views/generic-date-based.txt:307
msgid "WeekArchiveView"
msgstr ""

# 346de2d5e67d48a89a4a9a31929a7214
#: ../../ref/class-based-views/flattened-index.txt:418
msgid ""
":attr:`~django.views.generic.dates.WeekMixin.week` [:meth:`~django.views."
"generic.dates.WeekMixin.get_week`]"
msgstr ""

# 2e1e667fa6a841ceb943c7ddfaaf3ca5
#: ../../ref/class-based-views/flattened-index.txt:419
msgid ""
":attr:`~django.views.generic.dates.WeekMixin.week_format` [:meth:`~django."
"views.generic.dates.WeekMixin.get_week_format`]"
msgstr ""

# fdce4b0138ac425887a710a2ce764df8
# 3dcd9a552b1b4c839690282bbbb61e28
#: ../../ref/class-based-views/flattened-index.txt:439
#: ../../ref/class-based-views/generic-date-based.txt:411
msgid "DayArchiveView"
msgstr ""

# a4a158b589a34c8aae5a306aa71a1a62
# 4104a25cef9044b48009ac3ceffcd577
# 163e2684c07642efafbd62b92b395b79
#: ../../ref/class-based-views/flattened-index.txt:449
#: ../../ref/class-based-views/flattened-index.txt:494
#: ../../ref/class-based-views/flattened-index.txt:538
msgid ""
":attr:`~django.views.generic.dates.DayMixin.day` [:meth:`~django.views."
"generic.dates.DayMixin.get_day`]"
msgstr ""

# 80e18a65f3774771bc2e4676d52c38f8
# 316cde31b4a8475699232c3d4341fb87
# 90b1ec819540428b82d58a93f197bfb1
#: ../../ref/class-based-views/flattened-index.txt:450
#: ../../ref/class-based-views/flattened-index.txt:495
#: ../../ref/class-based-views/flattened-index.txt:539
msgid ""
":attr:`~django.views.generic.dates.DayMixin.day_format` [:meth:`~django."
"views.generic.dates.DayMixin.get_day_format`]"
msgstr ""

# de5e613c8f13452b900d00e5ffc42749
# 61814792f68b474ca5f1383b95116cb2
# fb1bab0e7bff420db9b0e4da1fe45695
#: ../../ref/class-based-views/flattened-index.txt:473
#: ../../ref/class-based-views/flattened-index.txt:518
#: ../../ref/class-based-views/flattened-index.txt:561
msgid ":meth:`~django.views.generic.dates.DayMixin.get_next_day`"
msgstr ""

# e96439cb461245e28e5b91d62ace42f3
# 21f6ec7244c745368e3a07c2305e3f40
# 38716d047df84aaabfa8b94d4a1231e6
#: ../../ref/class-based-views/flattened-index.txt:476
#: ../../ref/class-based-views/flattened-index.txt:521
#: ../../ref/class-based-views/flattened-index.txt:564
msgid ":meth:`~django.views.generic.dates.DayMixin.get_previous_day`"
msgstr ""

# e4c4bfb6330d4c64aaeeee5756681a5b
# 31c111ecb112439fb410b63f1c142ab2
#: ../../ref/class-based-views/flattened-index.txt:484
#: ../../ref/class-based-views/generic-date-based.txt:514
msgid "TodayArchiveView"
msgstr ""

# 7ef6858c44464fd9883f949b44eb8b92
# 9433f2182b62422e8836243b1cd45aae
#: ../../ref/class-based-views/flattened-index.txt:529
#: ../../ref/class-based-views/generic-date-based.txt:572
msgid "DateDetailView"
msgstr ""

# b0dc1f693567444e8fb88c08b741e9a1
#: ../../ref/class-based-views/generic-date-based.txt:3
msgid "Generic date views"
msgstr ""

# 813b910a891148a2a24be2f437670b33
#: ../../ref/class-based-views/generic-date-based.txt:7
msgid ""
"Date-based generic views, provided in :mod:`django.views.generic.dates`, are "
"views for displaying drilldown pages for date-based data."
msgstr ""

# 609038e7d72a49a29f7ba5263867db2e
#: ../../ref/class-based-views/generic-date-based.txt:12
msgid ""
"Some of the examples on this page assume that an ``Article`` model has been "
"defined as follows in ``myapp/models.py``::"
msgstr ""

# 0ade2be7818d4759ab470ebf833c0e1e
#: ../../ref/class-based-views/generic-date-based.txt:30
msgid ""
"A top-level index page showing the \"latest\" objects, by date. Objects with "
"a date in the *future* are not included unless you set ``allow_future`` to "
"``True``."
msgstr ""

# d929607b68fe48db99f792d163e8ec7c
# 8927f0eb710a47a8bda7d4db9cbd3ff9
# 245c74ff83214b958b7e6f505dce0b4a
# d6f1199d40f84e99bbbb310e9ef9a304
# 823bcfb35e8e43409195478e076bb034
# 48c7f3192d5e4e938b4a399aa18c476e
# 628290ebe1e9423aa1c7b64fa7f2742b
#: ../../ref/class-based-views/generic-date-based.txt:36
#: ../../ref/class-based-views/generic-date-based.txt:102
#: ../../ref/class-based-views/generic-date-based.txt:217
#: ../../ref/class-based-views/generic-date-based.txt:317
#: ../../ref/class-based-views/generic-date-based.txt:421
#: ../../ref/class-based-views/generic-date-based.txt:524
#: ../../ref/class-based-views/generic-display.txt:80
msgid ":class:`django.views.generic.list.MultipleObjectTemplateResponseMixin`"
msgstr ""

# 9fcde35f9b3447df97df5d2b53c7757e
#: ../../ref/class-based-views/generic-date-based.txt:38
msgid ":class:`django.views.generic.dates.BaseArchiveIndexView`"
msgstr ""

# db2a2b7e4f194fe38a30a59eb7885d3a
# a9c8af517cf749ebb7991148ba2971a7
# 7b2fd51d06934b6ca0116a1d1d4675fe
# 74bf3af9daee4906bdf64ae057bb86d5
# b2aabb33f4a04950afaab4b2dab2ef33
# 51edba392e93462093062f1268ca0188
#: ../../ref/class-based-views/generic-date-based.txt:39
#: ../../ref/class-based-views/generic-date-based.txt:106
#: ../../ref/class-based-views/generic-date-based.txt:222
#: ../../ref/class-based-views/generic-date-based.txt:322
#: ../../ref/class-based-views/generic-date-based.txt:427
#: ../../ref/class-based-views/generic-date-based.txt:531
msgid ":class:`django.views.generic.dates.BaseDateListView`"
msgstr ""

# f95392435b2f4ce69f536784bca02b40
# 2c04483f69734f24ab7b5ee391fb5996
# a5da4702e442451895c30cea3933ea85
# 7ab2446183754b3ab965af9e9e3589a0
# 11486a7ac85340afa3b3baba3c84f834
# 1fd463789e1541449ea1b1450bf87acd
# 79a0cce343f94318b992fbd3df270706
# eca77a39f88046d1859cd0cd93ec98cb
#: ../../ref/class-based-views/generic-date-based.txt:40
#: ../../ref/class-based-views/generic-date-based.txt:107
#: ../../ref/class-based-views/generic-date-based.txt:223
#: ../../ref/class-based-views/generic-date-based.txt:323
#: ../../ref/class-based-views/generic-date-based.txt:428
#: ../../ref/class-based-views/generic-date-based.txt:532
#: ../../ref/class-based-views/generic-display.txt:83
#: ../../ref/class-based-views/generic-display.txt:135
msgid ":class:`django.views.generic.list.MultipleObjectMixin`"
msgstr ""

# 597e8af4c3b4476ebd32320d6265882e
# a1a28a6f14f447aba26f9cb4ac348c8b
# 0d7daae965ef4a43b248a35588b5e7e3
# 4274dd6eae6042eaa0b8bf6b42dae0c8
# 2688d1a839bb499fa23a2d360fdd10d4
# 6862665b1b964ff9ad8b22f3cae4547a
# 9271fce03f1449b491ea7466bc70bb60
#: ../../ref/class-based-views/generic-date-based.txt:41
#: ../../ref/class-based-views/generic-date-based.txt:108
#: ../../ref/class-based-views/generic-date-based.txt:224
#: ../../ref/class-based-views/generic-date-based.txt:324
#: ../../ref/class-based-views/generic-date-based.txt:429
#: ../../ref/class-based-views/generic-date-based.txt:533
#: ../../ref/class-based-views/generic-date-based.txt:588
msgid ":class:`django.views.generic.dates.DateMixin`"
msgstr ""

# 2a932d20cc1546dc9cb5358033c76ed6
# 6294300b201c4a538a2d7ef5d1c03171
#: ../../ref/class-based-views/generic-date-based.txt:46
#: ../../ref/class-based-views/generic-date-based.txt:126
msgid ""
"In addition to the context provided by :class:`django.views.generic.list."
"MultipleObjectMixin` (via :class:`django.views.generic.dates."
"BaseDateListView`), the template's context will be:"
msgstr ""

# 6e8ed1ffe0ad42638a2d2eeff95b5076
#: ../../ref/class-based-views/generic-date-based.txt:51
msgid ""
"``date_list``: A :meth:`DateQuerySet<django.db.models.query.QuerySet.dates>` "
"object containing all years that have objects available according to "
"``queryset``, represented as :class:`datetime.datetime<python:datetime."
"datetime>` objects, in descending order."
msgstr ""

# cb3778b0989a4e238430fe7cfdadb046
# 697ba5ea05764906bd0f8abc46034a51
# 22225095a1bf4c47a3fb3cd11e25bc73
# c2a06daa4a704995ba9c958b0f7aca61
# 8d7f5d7f4b1148b699b3f68987dfa43f
# a2814f22ba63438fbffe2df6dcfd9b33
# 2b915da8317640c1b808596882caf21f
#: ../../ref/class-based-views/generic-date-based.txt:58
#: ../../ref/class-based-views/generic-date-based.txt:159
#: ../../ref/class-based-views/generic-date-based.txt:254
#: ../../ref/class-based-views/generic-date-based.txt:347
#: ../../ref/class-based-views/generic-date-based.txt:462
#: ../../ref/class-based-views/generic-date-based.txt:536
#: ../../ref/class-based-views/generic-date-based.txt:598
msgid "**Notes**"
msgstr ""

# 2c4fc8edaba14f29962ca731c0788520
#: ../../ref/class-based-views/generic-date-based.txt:60
msgid "Uses a default ``context_object_name`` of ``latest``."
msgstr ""

# e9b8fa1c8b214c10aa7039d32d6782d6
#: ../../ref/class-based-views/generic-date-based.txt:61
msgid "Uses a default ``template_name_suffix`` of ``_archive``."
msgstr ""

# b4063cf24a1147b1a8ec43890ded9195
#: ../../ref/class-based-views/generic-date-based.txt:62
msgid ""
"Defaults to providing ``date_list`` by year, but this can be altered to "
"month or day using the attribute ``date_list_period``. This also applies to "
"all subclass views."
msgstr ""

# 97879e9575f84e4f9c91b14ee060b271
#: ../../ref/class-based-views/generic-date-based.txt:79
msgid "**Example myapp/article_archive.html**:"
msgstr ""

# 6d0c122f2bc94611a4dcd17fa016646f
#: ../../ref/class-based-views/generic-date-based.txt:89
msgid "This will output all articles."
msgstr ""

# 1e0d3ed76c894e92856cdc01baad251f
#: ../../ref/class-based-views/generic-date-based.txt:96
msgid ""
"A yearly archive page showing all available months in a given year. Objects "
"with a date in the *future* are not displayed unless you set "
"``allow_future`` to ``True``."
msgstr ""

# 38cbbd58fda74f42b3f5d24e2e0fc956
#: ../../ref/class-based-views/generic-date-based.txt:104
msgid ":class:`django.views.generic.dates.BaseYearArchiveView`"
msgstr ""

# 45f72a63ba834203be210dcd38e7eee3
# ab2e76aa31af4363baaf980543ab5540
# 2ab20a51b83d481d86a10cf8509d89c2
# d32661e84e2a47139818298c889f90d3
# a597b686f90b4439bacc418353a7bc72
# 450fa5c21fa24580aa896999b449166c
#: ../../ref/class-based-views/generic-date-based.txt:105
#: ../../ref/class-based-views/generic-date-based.txt:220
#: ../../ref/class-based-views/generic-date-based.txt:320
#: ../../ref/class-based-views/generic-date-based.txt:424
#: ../../ref/class-based-views/generic-date-based.txt:528
#: ../../ref/class-based-views/generic-date-based.txt:585
msgid ":class:`django.views.generic.dates.YearMixin`"
msgstr ""

# 0115e283ceec4aa0bf492f0d4c921861
#: ../../ref/class-based-views/generic-date-based.txt:113
msgid ""
"A boolean specifying whether to retrieve the full list of objects for this "
"year and pass those to the template. If ``True``, the list of objects will "
"be made available to the context. If ``False``, the ``None`` queryset will "
"be used as the object list. By default, this is ``False``."
msgstr ""

# 7f2be6fa989b4c218d7e0bc50db06343
#: ../../ref/class-based-views/generic-date-based.txt:121
msgid ""
"Determine if an object list will be returned as part of the context. "
"Returns :attr:`~YearArchiveView.make_object_list` by default."
msgstr ""

# a0989b65c6d0431c8c2e36e11acdac0e
#: ../../ref/class-based-views/generic-date-based.txt:131
msgid ""
"``date_list``: A :meth:`DateQuerySet<django.db.models.query.QuerySet.dates>` "
"object containing all months that have objects available according to "
"``queryset``, represented as :class:`datetime.datetime<python:datetime."
"datetime>` objects, in ascending order."
msgstr ""

# 2293d523968a459e86c10ec8b4997510
#: ../../ref/class-based-views/generic-date-based.txt:138
msgid "``year``: A :class:`~datetime.date` object representing the given year."
msgstr ""

# e1b160101dce43ebb2a4425229ff102f
#: ../../ref/class-based-views/generic-date-based.txt:143
msgid "Previously, this returned a string."
msgstr ""

# fb34e65ac9164b4fa45fc925068cc6b2
#: ../../ref/class-based-views/generic-date-based.txt:145
msgid ""
"``next_year``: A :class:`~datetime.date` object representing the first day "
"of the next year, according to :attr:`~BaseDateListView.allow_empty` and :"
"attr:`~DateMixin.allow_future`."
msgstr ""

# 94635829b5144500a26a87dd4922edc3
#: ../../ref/class-based-views/generic-date-based.txt:152
msgid ""
"``previous_year``: A :class:`~datetime.date` object representing the first "
"day of the previous year, according to :attr:`~BaseDateListView.allow_empty` "
"and :attr:`~DateMixin.allow_future`."
msgstr ""

# 8b1c239387c94048967e93226c23fc1f
#: ../../ref/class-based-views/generic-date-based.txt:161
msgid "Uses a default ``template_name_suffix`` of ``_archive_year``."
msgstr ""

# 743727b190b246ce813e5070b4795ea4
#: ../../ref/class-based-views/generic-date-based.txt:187
msgid "**Example myapp/article_archive_year.html**:"
msgstr ""

# e80fa4e02a604d4186aa7dc0872654e4
#: ../../ref/class-based-views/generic-date-based.txt:211
msgid ""
"A monthly archive page showing all objects in a given month. Objects with a "
"date in the *future* are not displayed unless you set ``allow_future`` to "
"``True``."
msgstr ""

# 4bdef00e682a46e1963f097a4591c044
#: ../../ref/class-based-views/generic-date-based.txt:219
msgid ":class:`django.views.generic.dates.BaseMonthArchiveView`"
msgstr ""

# 9925baf60d2643d789b13a45a2a795f2
# 34620edf3c9d431999ddff3497361c49
# 51645bccb8d347f8a82d04023a8b3ab4
# c72449961a784516aefcdc485cbc13a2
#: ../../ref/class-based-views/generic-date-based.txt:221
#: ../../ref/class-based-views/generic-date-based.txt:425
#: ../../ref/class-based-views/generic-date-based.txt:529
#: ../../ref/class-based-views/generic-date-based.txt:586
msgid ":class:`django.views.generic.dates.MonthMixin`"
msgstr ""

# ac2e6b78f29049e9b831fca73d222da7
# 729397637be640d686469c89f72e5def
# 75f481cd981b40ce97e3821b1b951a19
#: ../../ref/class-based-views/generic-date-based.txt:229
#: ../../ref/class-based-views/generic-date-based.txt:329
#: ../../ref/class-based-views/generic-date-based.txt:434
msgid ""
"In addition to the context provided by :class:`~django.views.generic.list."
"MultipleObjectMixin` (via :class:`~django.views.generic.dates."
"BaseDateListView`), the template's context will be:"
msgstr ""

# c60404efa7c04023980d2281006825ed
#: ../../ref/class-based-views/generic-date-based.txt:234
msgid ""
"``date_list``: A :meth:`DateQuerySet<django.db.models.query.QuerySet.dates>` "
"object containing all days that have objects available in the given month, "
"according to ``queryset``, represented as :class:`datetime.datetime<python:"
"datetime.datetime>` objects, in ascending order."
msgstr ""

# 3c35c7eb05bc465d8ab1a0b834d8a2ca
#: ../../ref/class-based-views/generic-date-based.txt:241
msgid ""
"``month``: A :class:`~datetime.date` object representing the given month."
msgstr ""

# 232940387c074dac97b5e616285abf60
# 5629233be5354341a8f61d15332af99d
#: ../../ref/class-based-views/generic-date-based.txt:244
#: ../../ref/class-based-views/generic-date-based.txt:452
msgid ""
"``next_month``: A :class:`~datetime.date` object representing the first day "
"of the next month, according to :attr:`~BaseDateListView.allow_empty` and :"
"attr:`~DateMixin.allow_future`."
msgstr ""

# 4bb960ee17d74b1ebbfb53bb4845e295
# 099d27b5486e4e0d84751e29e8899493
#: ../../ref/class-based-views/generic-date-based.txt:249
#: ../../ref/class-based-views/generic-date-based.txt:457
msgid ""
"``previous_month``: A :class:`~datetime.date` object representing the first "
"day of the previous month, according to :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 7d113ff9b03f4394bb47b6f62c07dd93
#: ../../ref/class-based-views/generic-date-based.txt:256
msgid "Uses a default ``template_name_suffix`` of ``_archive_month``."
msgstr ""

# b304898ae66b4eaaa7e016d77da7fbe1
#: ../../ref/class-based-views/generic-date-based.txt:287
msgid "**Example myapp/article_archive_month.html**:"
msgstr ""

# f9a9200435cd42f088fc2eeb43f53930
#: ../../ref/class-based-views/generic-date-based.txt:311
msgid ""
"A weekly archive page showing all objects in a given week. Objects with a "
"date in the *future* are not displayed unless you set ``allow_future`` to "
"``True``."
msgstr ""

# 4676bfc3ef1841bf92658c848d504e6b
#: ../../ref/class-based-views/generic-date-based.txt:319
msgid ":class:`django.views.generic.dates.BaseWeekArchiveView`"
msgstr ""

# 2b9f3b99ce9b40e29ab13977b93ac961
#: ../../ref/class-based-views/generic-date-based.txt:321
msgid ":class:`django.views.generic.dates.WeekMixin`"
msgstr ""

# 9345c6d4b8534d55b47568545c15ea3e
#: ../../ref/class-based-views/generic-date-based.txt:334
msgid ""
"``week``: A :class:`~datetime.date` object representing the first day of the "
"given week."
msgstr ""

# cf1aaf1352c349a4a1ff95f564aeb0b8
#: ../../ref/class-based-views/generic-date-based.txt:337
msgid ""
"``next_week``: A :class:`~datetime.date` object representing the first day "
"of the next week, according to :attr:`~BaseDateListView.allow_empty` and :"
"attr:`~DateMixin.allow_future`."
msgstr ""

# 62cd3f82f2fc41c8a53c06fb77d31e5f
#: ../../ref/class-based-views/generic-date-based.txt:342
msgid ""
"``previous_week``: A :class:`~datetime.date` object representing the first "
"day of the previous week, according to :attr:`~BaseDateListView.allow_empty` "
"and :attr:`~DateMixin.allow_future`."
msgstr ""

# 21ab2d522a8f4800b6d5d97433e94e23
#: ../../ref/class-based-views/generic-date-based.txt:349
msgid "Uses a default ``template_name_suffix`` of ``_archive_week``."
msgstr ""

# 0fd3d18a32fa4b4faffe563419654243
#: ../../ref/class-based-views/generic-date-based.txt:377
msgid "**Example myapp/article_archive_week.html**:"
msgstr ""

# 653168bc61d34ec7a541187dec04a032
#: ../../ref/class-based-views/generic-date-based.txt:399
msgid ""
"In this example, you are outputting the week number. The default "
"``week_format`` in the ``WeekArchiveView`` uses  week format ``'%U'`` which "
"is based on the United States week system where the week begins on a Sunday. "
"The ``'%W'`` format uses the ISO week format and its week begins on a "
"Monday.  The ``'%W'`` format is the same in both the :func:`~time.strftime` "
"and the :tfilter:`date`."
msgstr ""

# 1768d4642576438588b818842cdd1b75
#: ../../ref/class-based-views/generic-date-based.txt:406
msgid ""
"However, the :tfilter:`date` template filter does not have an equivalent "
"output format that supports the US based week system. The :tfilter:`date` "
"filter ``'%U'`` outputs the number of seconds since the Unix epoch."
msgstr ""

# de52f4d988e54d8fb23b4e73d19983c9
#: ../../ref/class-based-views/generic-date-based.txt:415
msgid ""
"A day archive page showing all objects in a given day. Days in the future "
"throw a 404 error, regardless of whether any objects exist for future days, "
"unless you set ``allow_future`` to ``True``."
msgstr ""

# 778d29361c5c44618db67ddf17a655d9
# d60117bf128145678fa396d745e6f7b9
#: ../../ref/class-based-views/generic-date-based.txt:423
#: ../../ref/class-based-views/generic-date-based.txt:527
msgid ":class:`django.views.generic.dates.BaseDayArchiveView`"
msgstr ""

# 59db359a7c7b4977a18f6c36242c30a6
# 0cd723a701ad4b3e873df257dba85fab
# 65e5ca33073f4c779d57fc10c191e236
#: ../../ref/class-based-views/generic-date-based.txt:426
#: ../../ref/class-based-views/generic-date-based.txt:530
#: ../../ref/class-based-views/generic-date-based.txt:587
msgid ":class:`django.views.generic.dates.DayMixin`"
msgstr ""

# f49cd042d85e415fabc61a6c862b142f
#: ../../ref/class-based-views/generic-date-based.txt:439
msgid "``day``: A :class:`~datetime.date` object representing the given day."
msgstr ""

# 03b39d94f26143e7bb617aad5779c055
#: ../../ref/class-based-views/generic-date-based.txt:442
msgid ""
"``next_day``: A :class:`~datetime.date` object representing the next day, "
"according to :attr:`~BaseDateListView.allow_empty` and :attr:`~DateMixin."
"allow_future`."
msgstr ""

# 5f5034b73eb64221bfc985b0899e3657
#: ../../ref/class-based-views/generic-date-based.txt:447
msgid ""
"``previous_day``: A :class:`~datetime.date` object representing the previous "
"day, according to :attr:`~BaseDateListView.allow_empty` and :attr:"
"`~DateMixin.allow_future`."
msgstr ""

# 6faef6c491ff418db73be36e0365ccf0
#: ../../ref/class-based-views/generic-date-based.txt:464
msgid "Uses a default ``template_name_suffix`` of ``_archive_day``."
msgstr ""

# f165ae44093440868358fd73ae65f475
#: ../../ref/class-based-views/generic-date-based.txt:491
msgid "**Example myapp/article_archive_day.html**:"
msgstr ""

# 0bbf85b2d81540619c65288a11eeb59b
#: ../../ref/class-based-views/generic-date-based.txt:518
msgid ""
"A day archive page showing all objects for *today*. This is exactly the same "
"as :class:`django.views.generic.dates.DayArchiveView`, except today's date "
"is used instead of the ``year``/``month``/``day`` arguments."
msgstr ""

# 8975cf406b20406b949fcb306a066aa5
#: ../../ref/class-based-views/generic-date-based.txt:526
msgid ":class:`django.views.generic.dates.BaseTodayArchiveView`"
msgstr ""

# 78b79e85170f4c09b6be4febed8afc61
#: ../../ref/class-based-views/generic-date-based.txt:538
msgid "Uses a default ``template_name_suffix`` of ``_archive_today``."
msgstr ""

# 65e817410d924f59adb985ccdc17cc94
#: ../../ref/class-based-views/generic-date-based.txt:564
msgid "Where is the example template for ``TodayArchiveView``?"
msgstr ""

# 76189799f1124aba92c8bb95bca11a66
#: ../../ref/class-based-views/generic-date-based.txt:566
msgid ""
"This view uses by default the same template as the :class:`~DayArchiveView`, "
"which is in the previous example. If you need a different template, set the "
"``template_name`` attribute to be the name of the new template."
msgstr ""

# 2db6347aba954aae87934e92bb3ee324
#: ../../ref/class-based-views/generic-date-based.txt:576
msgid ""
"A page representing an individual object. If the object has a date value in "
"the future, the view will throw a 404 error by default, unless you set "
"``allow_future`` to ``True``."
msgstr ""

# 0cb0ffba9e2343c4908d296416ae5ee3
# 6caf7f4fe382470b9b1c0a67cf95c666
# 8180e735df944a3ab6337bb0288cf240
# a97ac5113bc14adc8243f9d9ae922f35
# 6522d055b7d74097abeb4f15c9a57e55
#: ../../ref/class-based-views/generic-date-based.txt:582
#: ../../ref/class-based-views/generic-display.txt:20
#: ../../ref/class-based-views/generic-editing.txt:85
#: ../../ref/class-based-views/generic-editing.txt:126
#: ../../ref/class-based-views/generic-editing.txt:167
msgid ":class:`django.views.generic.detail.SingleObjectTemplateResponseMixin`"
msgstr ""

# f36b1d56c61d4429a98a8cd88f78864b
#: ../../ref/class-based-views/generic-date-based.txt:584
msgid ":class:`django.views.generic.dates.BaseDateDetailView`"
msgstr ""

# a328c4b3c2d542098593fe1db50d5970
# 11ad1c43ce8940768c1984f35a02dc8c
# a478ee4fc3c74d9d8a0ce232412409f4
#: ../../ref/class-based-views/generic-date-based.txt:589
#: ../../ref/class-based-views/generic-display.txt:22
#: ../../ref/class-based-views/generic-editing.txt:171
msgid "``django.views.generic.detail.BaseDetailView``"
msgstr ""

# a7df318b8ff54cd487eeb344ecb7dd01
# 2bd4eb9db2aa42dc9c3da0a79285f570
# 4b4f035f7cce405786a33ad188f8178e
# a5df49b1dfa3408ebd4c563562ac7144
# 65a4948303af4b42a8fe229c93fd4f1c
# 62422856e8e64f7ba62b9eaeaddc28b3
#: ../../ref/class-based-views/generic-date-based.txt:590
#: ../../ref/class-based-views/generic-display.txt:23
#: ../../ref/class-based-views/generic-editing.txt:90
#: ../../ref/class-based-views/generic-editing.txt:131
#: ../../ref/class-based-views/generic-editing.txt:172
#: ../../ref/class-based-views/mixins-editing.txt:114
msgid ":class:`django.views.generic.detail.SingleObjectMixin`"
msgstr ""

# f1270a9df1724761955f5c0291901d06
#: ../../ref/class-based-views/generic-date-based.txt:595
msgid ""
"Includes the single object associated with the ``model`` specified in the "
"``DateDetailView``."
msgstr ""

# fd96c689a4bb48ec9f40d72d636ad6b8
#: ../../ref/class-based-views/generic-date-based.txt:600
msgid "Uses a default ``template_name_suffix`` of ``_detail``."
msgstr ""

# 86e87d1f48b240ec9f96e4883db32838
#: ../../ref/class-based-views/generic-date-based.txt:613
msgid "**Example myapp/article_detail.html**:"
msgstr ""

# c78d48b545384ea5be20f73eec960a91
#: ../../ref/class-based-views/generic-date-based.txt:621
msgid ""
"All of the generic views listed above have matching ``Base`` views that only "
"differ in that the they do not include the :class:`~django.views.generic."
"detail.SingleObjectTemplateResponseMixin`:"
msgstr ""

# 319e841006a74849bd9a7988d5eb8970
#: ../../ref/class-based-views/generic-display.txt:3
msgid "Generic display views"
msgstr ""

# 3718ce2a8dff4b2d9629b6d25fd02724
#: ../../ref/class-based-views/generic-display.txt:5
msgid ""
"The two following generic class-based views are designed to display data. On "
"many projects they are typically the most commonly used views."
msgstr ""

# eaa601ac9775439a9ae5b116af2986b4
#: ../../ref/class-based-views/generic-display.txt:13
msgid ""
"While this view is executing, ``self.object`` will contain the object that "
"the view is operating upon."
msgstr ""

# 1805c31a4ead4456be5bb1a1025c2294
# 0f34f76108a04267ae7a625b26f20aed
#: ../../ref/class-based-views/generic-display.txt:30
#: ../../ref/class-based-views/generic-display.txt:90
msgid ""
":meth:`~django.views.generic.base.TemplateResponseMixin.get_template_names()`"
msgstr ""

# 9bc92aaa78444a49b2051162e9348564
#: ../../ref/class-based-views/generic-display.txt:31
msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_slug_field()`"
msgstr ""

# 064646e9d4684305b7676c556802d5e7
#: ../../ref/class-based-views/generic-display.txt:32
msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_queryset()`"
msgstr ""

# 8575f9a64e97413b85a96b1ef67a0f8e
#: ../../ref/class-based-views/generic-display.txt:33
msgid ":meth:`~django.views.generic.detail.SingleObjectMixin.get_object()`"
msgstr ""

# 4844664a4b7847658765d4f4edb3727d
#: ../../ref/class-based-views/generic-display.txt:34
msgid ""
":meth:`~django.views.generic.detail.SingleObjectMixin."
"get_context_object_name()`"
msgstr ""

# 84ca4ad9d4334b5b8e31ae920e183a11
#: ../../ref/class-based-views/generic-display.txt:35
msgid ""
":meth:`~django.views.generic.detail.SingleObjectMixin.get_context_data()`"
msgstr ""

# aed3af2d2c164260837121c5edf60d61
# 7ac32afcec45488f84ceec798aeb14ab
#: ../../ref/class-based-views/generic-display.txt:37
#: ../../ref/class-based-views/generic-display.txt:95
msgid ""
":meth:`~django.views.generic.base.TemplateResponseMixin.render_to_response()`"
msgstr ""

# 679597fa183c432dacf3fe2427476c56
#: ../../ref/class-based-views/generic-display.txt:70
msgid "A page representing a list of objects."
msgstr ""

# e8a0753cc063490aadb09bb0409667e5
#: ../../ref/class-based-views/generic-display.txt:72
msgid ""
"While this view is executing, ``self.object_list`` will contain the list of "
"objects (usually, but not necessarily a queryset) that the view is operating "
"upon."
msgstr ""

# 6735ae1869a24f1e81ddbb9e851e7e05
#: ../../ref/class-based-views/generic-display.txt:82
msgid ":class:`django.views.generic.list.BaseListView`"
msgstr ""

# 558b3bb2e91748438e4a9818b7053d1d
#: ../../ref/class-based-views/generic-display.txt:91
msgid ":meth:`~django.views.generic.list.MultipleObjectMixin.get_queryset()`"
msgstr ""

# d298b2d6fbf443a6a5ec9e11c83fbedd
#: ../../ref/class-based-views/generic-display.txt:92
msgid ""
":meth:`~django.views.generic.list.MultipleObjectMixin."
"get_context_object_name()`"
msgstr ""

# 5f9a9e6700b144d2a806bffa468b1af3
#: ../../ref/class-based-views/generic-display.txt:93
msgid ""
":meth:`~django.views.generic.list.MultipleObjectMixin.get_context_data()`"
msgstr ""

# 7ac0abfa0f0646baa93669b45cc7deff
#: ../../ref/class-based-views/generic-display.txt:126
msgid ""
"A base view for displaying a list of objects. It is not intended to be used "
"directly, but rather as a parent class of the :class:`django.views.generic."
"list.ListView` or other views representing lists of objects."
msgstr ""

# b0f2e93077f34d25898732b4f9d75479
#: ../../ref/class-based-views/generic-display.txt:142
msgid ""
"Adds ``object_list`` to the context. If :attr:`~django.views.generic.list."
"MultipleObjectMixin.allow_empty` is True then display an empty list. If :"
"attr:`~django.views.generic.list.MultipleObjectMixin.allow_empty` is False "
"then raise a 404 error."
msgstr ""

# d1fb546878244ddc8ce1d2915a6162dd
#: ../../ref/class-based-views/generic-editing.txt:3
msgid "Generic editing views"
msgstr ""

# e86995db670a4917be3ecc9a81134985
#: ../../ref/class-based-views/generic-editing.txt:5
msgid ""
"The following views are described on this page and provide a foundation for "
"editing content:"
msgstr ""

# 1e80c985eb30417fabcb9f729d20c04e
#: ../../ref/class-based-views/generic-editing.txt:8
msgid ":class:`django.views.generic.edit.FormView`"
msgstr ""

# d25f7c2ebc0d4f6b906a0879ae0c839d
#: ../../ref/class-based-views/generic-editing.txt:9
msgid ":class:`django.views.generic.edit.CreateView`"
msgstr ""

# db512f6cd162412fafeae7054276c0d8
#: ../../ref/class-based-views/generic-editing.txt:10
msgid ":class:`django.views.generic.edit.UpdateView`"
msgstr ""

# 2541ebe6e4dd4dd29ac74f5ab4d08a36
#: ../../ref/class-based-views/generic-editing.txt:11
msgid ":class:`django.views.generic.edit.DeleteView`"
msgstr ""

# de3d7fde83144a62becae62259b33553
#: ../../ref/class-based-views/generic-editing.txt:15
msgid ""
"Some of the examples on this page assume that an ``Author`` model has been "
"defined as follows in ``myapp/models.py``::"
msgstr ""

# 34232c3c0c5a42eaa717d0ff1d19ec7f
#: ../../ref/class-based-views/generic-editing.txt:32
msgid ""
"A view that displays a form. On error, redisplays the form with validation "
"errors; on success, redirects to a new URL."
msgstr ""

# 2f99336e656c411c905a891df72d7dfb
#: ../../ref/class-based-views/generic-editing.txt:40
msgid "``django.views.generic.edit.BaseFormView``"
msgstr ""

# 30cf2cdcc08d40f5901e098efcc47e0a
# 0506bfa00afe4867ad893d173482f6b8
# 27efb56de7084d2bafac94491a009e48
# 4b9cc3babdc54520b9a216d8a9e48549
# 0fad83289ac043ea852a42c519486d2a
#: ../../ref/class-based-views/generic-editing.txt:41
#: ../../ref/class-based-views/generic-editing.txt:89
#: ../../ref/class-based-views/generic-editing.txt:130
#: ../../ref/class-based-views/mixins-editing.txt:7
#: ../../ref/class-based-views/mixins-editing.txt:113
msgid ":class:`django.views.generic.edit.FormMixin`"
msgstr ""

# 7b9b3e9bdae144cd880b24f362755d20
# 7198263f55c54df5a6e5de3d49b743e2
# 1ad864a4ef394139b736ede00623b713
# 2533d60a2d3f44739958b910e8b980a5
#: ../../ref/class-based-views/generic-editing.txt:42
#: ../../ref/class-based-views/generic-editing.txt:91
#: ../../ref/class-based-views/generic-editing.txt:132
#: ../../ref/class-based-views/mixins-editing.txt:9
msgid ":class:`django.views.generic.edit.ProcessFormView`"
msgstr ""

# 1a2d4be612b44a2882ba7f4f76eb023b
#: ../../ref/class-based-views/generic-editing.txt:45
msgid "**Example forms.py**::"
msgstr ""

# 9f0b7941ac2d42f19b80bbcb28a46f4d
#: ../../ref/class-based-views/generic-editing.txt:78
msgid ""
"A view that displays a form for creating an object, redisplaying the form "
"with validation errors (if there are any) and saving the object."
msgstr ""

# 43a72f65d7b9402c85401a5c2d96f610
#: ../../ref/class-based-views/generic-editing.txt:87
msgid "``django.views.generic.edit.BaseCreateView``"
msgstr ""

# a9a283e76816413b9efde116a3ecb4b3
# 32681a65b95c4947914b609505e7fa76
# 7b631ce8810e4bc0adc470d3930567e2
#: ../../ref/class-based-views/generic-editing.txt:88
#: ../../ref/class-based-views/generic-editing.txt:129
#: ../../ref/class-based-views/mixins-editing.txt:8
msgid ":class:`django.views.generic.edit.ModelFormMixin`"
msgstr ""

# 16cdc6d6679d4e78932af33b5a840379
#: ../../ref/class-based-views/generic-editing.txt:98
msgid ""
"The ``CreateView`` page displayed to a ``GET`` request uses a "
"``template_name_suffix`` of ``'_form'``. For example, changing this "
"attribute to ``'_create_form'`` for a view creating objects for the example "
"``Author`` model would cause the default ``template_name`` to be ``'myapp/"
"author_create_form.html'``."
msgstr ""

# 4d2ba4dd4b424a11a1cbf91449d84ec5
#: ../../ref/class-based-views/generic-editing.txt:117
msgid ""
"A view that displays a form for editing an existing object, redisplaying the "
"form with validation errors (if there are any) and saving changes to the "
"object. This uses a form automatically generated from the object's model "
"class (unless a form class is manually specified)."
msgstr ""

# e5d67b4668314de7b6ae5b38afa0f193
#: ../../ref/class-based-views/generic-editing.txt:128
msgid "``django.views.generic.edit.BaseUpdateView``"
msgstr ""

# 2a30f850640745298b0ec8069310cfa1
#: ../../ref/class-based-views/generic-editing.txt:139
msgid ""
"The ``UpdateView`` page displayed to a ``GET`` request uses a "
"``template_name_suffix`` of ``'_form'``. For example, changing this "
"attribute to ``'_update_form'`` for a view updating objects for the example "
"``Author`` model would cause the default ``template_name`` to be ``'myapp/"
"author_update_form.html'``."
msgstr ""

# 6a4581b9a705427082dc654c4997058d
#: ../../ref/class-based-views/generic-editing.txt:158
msgid ""
"A view that displays a confirmation page and deletes an existing object. The "
"given object will only be deleted if the request method is ``POST``. If this "
"view is fetched via ``GET``, it will display a confirmation page that should "
"contain a form that POSTs to the same URL."
msgstr ""

# 45b132d7856e4c6fadc5cf7578df4b8b
#: ../../ref/class-based-views/generic-editing.txt:169
msgid "``django.views.generic.edit.BaseDeleteView``"
msgstr ""

# 505e8ce122e8453da84ca8504b3f5e73
# 34cfe895ce3f4aa3b7bb83766a51bf76
#: ../../ref/class-based-views/generic-editing.txt:170
#: ../../ref/class-based-views/mixins-editing.txt:10
msgid ":class:`django.views.generic.edit.DeletionMixin`"
msgstr ""

# 3789c7a680d64b049ca4d38591850320
#: ../../ref/class-based-views/generic-editing.txt:179
msgid ""
"The ``DeleteView`` page displayed to a ``GET`` request uses a "
"``template_name_suffix`` of ``'_confirm_delete'``. For example, changing "
"this attribute to ``'_check_delete'`` for a view deleting objects for the "
"example ``Author`` model would cause the default ``template_name`` to be "
"``'myapp/author_check_delete.html'``."
msgstr ""

# c2dbce0f917249f6981925f6cd851e74
#: ../../ref/class-based-views/index.txt:3
msgid "Class-based views"
msgstr ""

# a9c10de1672248198a5bccd7e5b33620
#: ../../ref/class-based-views/index.txt:5
msgid ""
"Class-based views API reference. For introductory material, see :doc:`/"
"topics/class-based-views/index`."
msgstr ""

# 939bab9a897943f8bc3f5b74d3678d07
#: ../../ref/class-based-views/index.txt:19
msgid "Specification"
msgstr ""

# fe835a065bda42cc8a054297967b0030
#: ../../ref/class-based-views/index.txt:21
msgid ""
"Each request served by a class-based view has an independent state; "
"therefore, it is safe to store state variables on the instance (i.e., ``self."
"foo = 3`` is a thread-safe operation)."
msgstr ""

# 62549b93942a4407b2cc7fea9efb28ba
#: ../../ref/class-based-views/index.txt:25
msgid ""
"A class-based view is deployed into a URL pattern using the :meth:`~django."
"views.generic.base.View.as_view()` classmethod::"
msgstr ""

# 20257d8e85bc460b8c23e6b8301a56ef
#: ../../ref/class-based-views/index.txt:32
msgid "Thread safety with view arguments"
msgstr ""

# 28119601a48541d6aa8fb81045d442fe
#: ../../ref/class-based-views/index.txt:34
msgid ""
"Arguments passed to a view are shared between every instance of a view. This "
"means that you shouldn't use a list, dictionary, or any other mutable object "
"as an argument to a view. If you do and the shared object is modified, the "
"actions of one user visiting your view could have an effect on subsequent "
"users visiting the same view."
msgstr ""

# a354dd30d1d04997bd949e1f68ae9939
#: ../../ref/class-based-views/index.txt:40
msgid ""
"Arguments passed into :meth:`~django.views.generic.base.View.as_view()` will "
"be assigned onto the instance that is used to service a request. Using the "
"previous example, this means that every request on ``MyView`` is able to use "
"``self.size``. Arguments must correspond to attributes that already exist on "
"the class (return ``True`` on a ``hasattr`` check)."
msgstr ""

# 4a003f65fbff414baf5a8e8a168b182f
#: ../../ref/class-based-views/index.txt:47
msgid "Base vs Generic views"
msgstr ""

# 1e8221535f7d4eb78dc5aea915fed2f2
#: ../../ref/class-based-views/index.txt:49
msgid ""
"Base class-based views can be thought of as *parent* views, which can be "
"used by themselves or inherited from. They may not provide all the "
"capabilities required for projects, in which case there are Mixins which "
"extend what base views can do."
msgstr ""

# 81fe1979520c46a59d63576b33f19f99
#: ../../ref/class-based-views/index.txt:54
msgid ""
"Django’s generic views are built off of those base views, and were developed "
"as a shortcut for common usage patterns such as displaying the details of an "
"object. They take certain common idioms and patterns found in view "
"development and abstract them so that you can quickly write common views of "
"data without having to repeat yourself."
msgstr ""

# 6062a1a1d4e84725b9e3932af5320cfd
#: ../../ref/class-based-views/index.txt:60
msgid ""
"Most generic views require the ``queryset`` key, which is a ``QuerySet`` "
"instance; see :doc:`/topics/db/queries` for more information about "
"``QuerySet`` objects."
msgstr ""

# 1b9ec460c0a6426890c269608e373fc6
#: ../../ref/class-based-views/mixins.txt:3
msgid "Class-based views mixins"
msgstr ""

# 162b7018119e4a1f87aa9a2c8be56a92
#: ../../ref/class-based-views/mixins.txt:5
msgid ""
"Class-based views API reference. For introductory material, see :doc:`/"
"topics/class-based-views/mixins`."
msgstr ""

# bfd97e7e908e4ba391eaea9e4efd6513
#: ../../ref/class-based-views/mixins-date-based.txt:3
msgid "Date-based mixins"
msgstr ""

# 723704a1f59b4bc5b7b90545125a1677
#: ../../ref/class-based-views/mixins-date-based.txt:8
msgid ""
"All the date formatting attributes in these mixins use :func:`~time."
"strftime` format characters. Do not try to use the format characters from "
"the :ttag:`now` template tag as they are not compatible."
msgstr ""

# b38d6160b31d4530b62fe4f9efce42d8
#: ../../ref/class-based-views/mixins-date-based.txt:13
msgid "YearMixin"
msgstr ""

# 1e69ca913fcc435c9968a80d9b08b0d7
#: ../../ref/class-based-views/mixins-date-based.txt:12
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"year component of a date."
msgstr ""

# a79f33b16c964c989d1e9e38252edd99
# 9440a04b1ee94e819184023b133576e0
# 4abfc82e214f47c9bc8711e016446fa4
# 0c9e86d3ab524a4bb9180517cd552aa9
# 8982fafe24584d61b0eba865b01676e2
# e8aa4a12427549bcad55c1ab5eb9f999
# 8a3e6ccdccd548cdab1308d3aea29858
# 850073967b654c20ae0c34a85242dc93
# cc62a50b512f470599f1e1dbb0941f01
# 5aeac02b7d924c76a17471cf8fa0d7e6
# e8af6f02eb22445ba587a7f144fa45ee
# a187e3fcdae34214b4d99f3d70c08458
# 193f52d6bc304164a42eaebf8554493d
# 946bbaaebdc74d0b8e8abc188d8a4394
#: ../../ref/class-based-views/mixins-date-based.txt:15
#: ../../ref/class-based-views/mixins-date-based.txt:67
#: ../../ref/class-based-views/mixins-date-based.txt:119
#: ../../ref/class-based-views/mixins-date-based.txt:171
#: ../../ref/class-based-views/mixins-date-based.txt:223
#: ../../ref/class-based-views/mixins-date-based.txt:282
#: ../../ref/class-based-views/mixins-editing.txt:24
#: ../../ref/class-based-views/mixins-editing.txt:116
#: ../../ref/class-based-views/mixins-editing.txt:184
#: ../../ref/class-based-views/mixins-editing.txt:205
#: ../../ref/class-based-views/mixins-multiple-object.txt:46
#: ../../ref/class-based-views/mixins-multiple-object.txt:178
#: ../../ref/class-based-views/mixins-single-object.txt:13
#: ../../ref/class-based-views/mixins-single-object.txt:107
msgid "**Methods and Attributes**"
msgstr ""

# 2e96d91021af46ca9fa920554938cdb6
#: ../../ref/class-based-views/mixins-date-based.txt:19
msgid ""
"The :func:`~time.strftime` format to use when parsing the year. By default, "
"this is ``'%Y'``."
msgstr ""

# 609b30e2591f4e0ca6bc6f592c44a0fc
#: ../../ref/class-based-views/mixins-date-based.txt:24
msgid ""
"**Optional** The value for the year, as a string. By default, set to "
"``None``, which means the year will be determined using other means."
msgstr ""

# 2b181e2e589441f4a92399245eb99476
#: ../../ref/class-based-views/mixins-date-based.txt:29
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the year. "
"Returns :attr:`~YearMixin.year_format` by default."
msgstr ""

# 2520257c23da4f1496fc31e0b23cc23f
#: ../../ref/class-based-views/mixins-date-based.txt:34
msgid ""
"Returns the year for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# 2363eaddb4e94caca2d76c9bc394a82e
#: ../../ref/class-based-views/mixins-date-based.txt:37
msgid "The value of the :attr:`YearMixin.year` attribute."
msgstr ""

# d563667d7f8946bc8582ba3d199e5a98
#: ../../ref/class-based-views/mixins-date-based.txt:38
msgid "The value of the ``year`` argument captured in the URL pattern."
msgstr ""

# 59a8f30b90d7427193a0ec378ff65050
#: ../../ref/class-based-views/mixins-date-based.txt:39
msgid "The value of the ``year`` ``GET`` query argument."
msgstr ""

# 59ba3129f0784b97896adb3f8bb1cf03
#: ../../ref/class-based-views/mixins-date-based.txt:41
msgid "Raises a 404 if no valid year specification can be found."
msgstr ""

# 39236654d34d46f2a62b686d4d1cec37
#: ../../ref/class-based-views/mixins-date-based.txt:45
msgid ""
"Returns a date object containing the first day of the year after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 80d98c36901445928cfaf5cb4da7e5a2
#: ../../ref/class-based-views/mixins-date-based.txt:53
msgid ""
"Returns a date object containing the first day of the year before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 4ddd1ac9222a43ea976d8ebf96660a20
#: ../../ref/class-based-views/mixins-date-based.txt:60
msgid "MonthMixin"
msgstr ""

# 6174197dd22b4f45ad65628098d710dc
#: ../../ref/class-based-views/mixins-date-based.txt:64
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"month component of a date."
msgstr ""

# 863a3f65b64848edaef6f31bbda51e8e
#: ../../ref/class-based-views/mixins-date-based.txt:71
msgid ""
"The :func:`~time.strftime` format to use when parsing the month. By default, "
"this is ``'%b'``."
msgstr ""

# 659361d259ab46ccbdb69697c888f8d8
#: ../../ref/class-based-views/mixins-date-based.txt:76
msgid ""
"**Optional** The value for the month, as a string. By default, set to "
"``None``, which means the month will be determined using other means."
msgstr ""

# ec34be1c346a4beeb97178b2769eab1d
#: ../../ref/class-based-views/mixins-date-based.txt:81
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the month. "
"Returns :attr:`~MonthMixin.month_format` by default."
msgstr ""

# fe3fd281227749fa893ba856e360b6d3
#: ../../ref/class-based-views/mixins-date-based.txt:86
msgid ""
"Returns the month for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# cadbac0b9abb46f0a5b6d191cf6d7140
#: ../../ref/class-based-views/mixins-date-based.txt:89
msgid "The value of the :attr:`MonthMixin.month` attribute."
msgstr ""

# ccd80e81073e4891b8f82e1c96bf7c4a
#: ../../ref/class-based-views/mixins-date-based.txt:90
msgid "The value of the ``month`` argument captured in the URL pattern."
msgstr ""

# 038c4a576c6342e5b59cea041c224af6
#: ../../ref/class-based-views/mixins-date-based.txt:91
msgid "The value of the ``month`` ``GET`` query argument."
msgstr ""

# b0db1fcecfd74da0a9b92cc658776dac
#: ../../ref/class-based-views/mixins-date-based.txt:93
msgid "Raises a 404 if no valid month specification can be found."
msgstr ""

# 97a8db7462de41ffbca04bcc64c3bef0
#: ../../ref/class-based-views/mixins-date-based.txt:97
msgid ""
"Returns a date object containing the first day of the month after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 652e34f9ac4d49a98265cbb24276b81f
#: ../../ref/class-based-views/mixins-date-based.txt:105
msgid ""
"Returns a date object containing the first day of the month before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# e77d603c58814cd18cf82576b17ad75a
#: ../../ref/class-based-views/mixins-date-based.txt:112
msgid "DayMixin"
msgstr ""

# 08b634d6812942a29e6882ab0902890b
#: ../../ref/class-based-views/mixins-date-based.txt:116
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"day component of a date."
msgstr ""

# ce7111213349420e88a6064fb7a95cc1
#: ../../ref/class-based-views/mixins-date-based.txt:123
msgid ""
"The :func:`~time.strftime` format to use when parsing the day. By default, "
"this is ``'%d'``."
msgstr ""

# 7edb32eac93f4141b7979f0cd1a38abf
#: ../../ref/class-based-views/mixins-date-based.txt:128
msgid ""
"**Optional** The value for the day, as a string. By default, set to "
"``None``, which means the day will be determined using other means."
msgstr ""

# d7381c7beb0149d7aa2cea8159eadb0e
#: ../../ref/class-based-views/mixins-date-based.txt:133
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the day. "
"Returns :attr:`~DayMixin.day_format` by default."
msgstr ""

# a342955f8f554642ab3597dfabe58049
#: ../../ref/class-based-views/mixins-date-based.txt:138
msgid ""
"Returns the day for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# 91d86acd583c46e693afb2e71ef03193
#: ../../ref/class-based-views/mixins-date-based.txt:141
msgid "The value of the :attr:`DayMixin.day` attribute."
msgstr ""

# cc6de756d9c848df9e22c10bd3892d38
#: ../../ref/class-based-views/mixins-date-based.txt:142
msgid "The value of the ``day`` argument captured in the URL pattern."
msgstr ""

# e29b9f2fd3d642e2b3321ec31f8a32f8
#: ../../ref/class-based-views/mixins-date-based.txt:143
msgid "The value of the ``day`` ``GET`` query argument."
msgstr ""

# 8510d78c01e34cf094cf0a23aea45a24
#: ../../ref/class-based-views/mixins-date-based.txt:145
msgid "Raises a 404 if no valid day specification can be found."
msgstr ""

# 37112b5252384fab92737fd50dc24bdd
#: ../../ref/class-based-views/mixins-date-based.txt:149
msgid ""
"Returns a date object containing the next valid day after the date provided. "
"This function can also return ``None`` or raise an :class:`~django.http."
"Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# b46c45870b91450b9d09deee29b5c8ac
#: ../../ref/class-based-views/mixins-date-based.txt:157
msgid ""
"Returns a date object containing the previous valid day. This function can "
"also return ``None`` or raise an :class:`~django.http.Http404` exception, "
"depending on the values of :attr:`~BaseDateListView.allow_empty` and :attr:"
"`~DateMixin.allow_future`."
msgstr ""

# f5714f384e7742c7963fd26bd125bfcd
#: ../../ref/class-based-views/mixins-date-based.txt:164
msgid "WeekMixin"
msgstr ""

# 82174938be5c4d21ab68b9af6d82e2e8
#: ../../ref/class-based-views/mixins-date-based.txt:168
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"week component of a date."
msgstr ""

# e76c18a9d472422ba0bc4538fe7522b8
#: ../../ref/class-based-views/mixins-date-based.txt:175
msgid ""
"The :func:`~time.strftime` format to use when parsing the week. By default, "
"this is ``'%U'``, which means the week starts on Sunday. Set it to ``'%W'`` "
"if your week starts on Monday."
msgstr ""

# f7c1500c5b5a435e8a925fee2092ffc5
#: ../../ref/class-based-views/mixins-date-based.txt:181
msgid ""
"**Optional** The value for the week, as a string. By default, set to "
"``None``, which means the week will be determined using other means."
msgstr ""

# 41512d7845b4485cb636fe1afcea5c48
#: ../../ref/class-based-views/mixins-date-based.txt:186
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the week. "
"Returns :attr:`~WeekMixin.week_format` by default."
msgstr ""

# b867d111f9ff48b1b60392c3d974a2a5
#: ../../ref/class-based-views/mixins-date-based.txt:191
msgid ""
"Returns the week for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# ba08eded802e44e9b9c3b06192aaf342
#: ../../ref/class-based-views/mixins-date-based.txt:194
msgid "The value of the :attr:`WeekMixin.week` attribute."
msgstr ""

# c22bb4c9ae0e48038bb4ebcff315e6ac
#: ../../ref/class-based-views/mixins-date-based.txt:195
msgid "The value of the ``week`` argument captured in the URL pattern"
msgstr ""

# d3cd94d22a504c8eb1d8454dfa7cf39e
#: ../../ref/class-based-views/mixins-date-based.txt:196
msgid "The value of the ``week`` ``GET`` query argument."
msgstr ""

# ae5c53a21116493cb61476e0d135ed9c
#: ../../ref/class-based-views/mixins-date-based.txt:198
msgid "Raises a 404 if no valid week specification can be found."
msgstr ""

# 11247920250a4cfe8751b6be3a840ff4
#: ../../ref/class-based-views/mixins-date-based.txt:202
msgid ""
"Returns a date object containing the first day of the week after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 48e13f395072415f852a59178295d6e7
#: ../../ref/class-based-views/mixins-date-based.txt:210
msgid ""
"Returns a date object containing the first day of the week before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# bcc0fa1d5f034fa6b73735758dbe5d73
#: ../../ref/class-based-views/mixins-date-based.txt:217
msgid "DateMixin"
msgstr ""

# 426d5fcba7ba411a819baae422b0cc16
#: ../../ref/class-based-views/mixins-date-based.txt:221
msgid "A mixin class providing common behavior for all date-based views."
msgstr ""

# 25f8020c47c141c58e0144eceef4c2a3
#: ../../ref/class-based-views/mixins-date-based.txt:227
msgid ""
"The name of the ``DateField`` or ``DateTimeField`` in the ``QuerySet``'s "
"model that the date-based archive should use to determine the list of "
"objects to display on the page."
msgstr ""

# dff0c8e498ee4073875c894d6ffaa71b
#: ../../ref/class-based-views/mixins-date-based.txt:231
msgid ""
"When :doc:`time zone support </topics/i18n/timezones>` is enabled and "
"``date_field`` is a ``DateTimeField``, dates are assumed to be in the "
"current time zone. Otherwise, the queryset could include objects from the "
"previous or the next day in the end user's time zone."
msgstr ""

# f77508f654964ae5bc61961af8dc92a0
#: ../../ref/class-based-views/mixins-date-based.txt:238
msgid ""
"In this situation, if you have implemented per-user time zone selection, the "
"same URL may show a different set of objects, depending on the end user's "
"time zone. To avoid this, you should use a ``DateField`` as the "
"``date_field`` attribute."
msgstr ""

# ad26b9464f834d1293be1e5b4fc1f6d5
#: ../../ref/class-based-views/mixins-date-based.txt:245
msgid ""
"A boolean specifying whether to include \"future\" objects on this page, "
"where \"future\" means objects in which the field specified in "
"``date_field`` is greater than the current date/time. By default, this is "
"``False``."
msgstr ""

# ceee3d7404aa4cb1a72675c1719c396f
#: ../../ref/class-based-views/mixins-date-based.txt:252
msgid ""
"Returns the name of the field that contains the date data that this view "
"will operate on. Returns :attr:`~DateMixin.date_field` by default."
msgstr ""

# 9ada294bbf234536ab4a54f1cc797235
#: ../../ref/class-based-views/mixins-date-based.txt:257
msgid ""
"Determine whether to include \"future\" objects on this page, where \"future"
"\" means objects in which the field specified in ``date_field`` is greater "
"than the current date/time. Returns :attr:`~DateMixin.allow_future` by "
"default."
msgstr ""

# b9071913923d43efa0a93f8ff648d52b
#: ../../ref/class-based-views/mixins-date-based.txt:263
msgid "BaseDateListView"
msgstr ""

# 69c54aaf6e7040de9464bcb3ca1d266f
#: ../../ref/class-based-views/mixins-date-based.txt:267
msgid ""
"A base class that provides common behavior for all date-based views. There "
"won't normally be a reason to instantiate :class:`~django.views.generic."
"dates.BaseDateListView`; instantiate one of the subclasses instead."
msgstr ""

# 702a432987cf448ab24d8fd49a432383
#: ../../ref/class-based-views/mixins-date-based.txt:272
msgid ""
"While this view (and its subclasses) are executing, ``self.object_list`` "
"will contain the list of objects that the view is operating upon, and ``self."
"date_list`` will contain the list of dates for which data is available."
msgstr ""

# 9860ee04caa5425f97cccabb7ef272ca
# 5473e97a3c7e42e29db3080175af2692
#: ../../ref/class-based-views/mixins-date-based.txt:277
#: ../../ref/class-based-views/mixins-editing.txt:111
msgid "**Mixins**"
msgstr ""

# 7bb6d851942f41b09847666ccbc1f972
#: ../../ref/class-based-views/mixins-date-based.txt:279
msgid ":class:`~django.views.generic.dates.DateMixin`"
msgstr ""

# 02cb695c86874061924616c2c33cbf47
#: ../../ref/class-based-views/mixins-date-based.txt:280
msgid ":class:`~django.views.generic.list.MultipleObjectMixin`"
msgstr ""

# a70124a6fb574656b35c8bdd11e0a628
#: ../../ref/class-based-views/mixins-date-based.txt:286
msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``True`` and no objects are available, the view will "
"display an empty page instead of raising a 404."
msgstr ""

# 0492dd72af0b4f9bb2eb427cd8dbec9b
#: ../../ref/class-based-views/mixins-date-based.txt:290
msgid ""
"This is identical to :attr:`django.views.generic.list.MultipleObjectMixin."
"allow_empty`, except for the default value, which is ``False``."
msgstr ""

# a3f0edb007d84fb8869297f04c6dd267
#: ../../ref/class-based-views/mixins-date-based.txt:296
msgid ""
"**Optional** A string defining the aggregation period for ``date_list``. It "
"must be one of ``'year'`` (default), ``'month'``, or ``'day'``."
msgstr ""

# 6a7b304b4314440596d07b04aaca994f
#: ../../ref/class-based-views/mixins-date-based.txt:302
msgid ""
"Returns a 3-tuple containing (``date_list``, ``object_list``, "
"``extra_context``)."
msgstr ""

# 1cc8923cb97448c4a4554096c7b2bb17
#: ../../ref/class-based-views/mixins-date-based.txt:305
msgid ""
"``date_list`` is the list of dates for which data is available. "
"``object_list`` is the list of objects. ``extra_context`` is a dictionary of "
"context data that will be added to any context data provided by the :class:"
"`~django.views.generic.list.MultipleObjectMixin`."
msgstr ""

# 04254519be4e4f019ab95dde3a2b6afc
#: ../../ref/class-based-views/mixins-date-based.txt:313
msgid ""
"Returns a queryset, filtered using the query arguments defined by "
"``lookup``. Enforces any restrictions on the queryset, such as "
"``allow_empty`` and ``allow_future``."
msgstr ""

# bdbd0ca571bb49099fa5b888a935b0d3
#: ../../ref/class-based-views/mixins-date-based.txt:319
msgid ""
"Returns the aggregation period for ``date_list``. Returns :attr:"
"`~BaseDateListView.date_list_period` by default."
msgstr ""

# a5cacb66bc1743688324109d50803c09
#: ../../ref/class-based-views/mixins-date-based.txt:324
msgid ""
"Returns the list of dates of type ``date_type`` for which ``queryset`` "
"contains entries. For example, ``get_date_list(qs, 'year')`` will return the "
"list of years for which ``qs`` has entries. If ``date_type`` isn't provided, "
"the result of :meth:`~BaseDateListView.get_date_list_period` is used. "
"``date_type`` and ``ordering`` are simply passed to :meth:`QuerySet."
"dates()<django.db.models.query.QuerySet.dates>`."
msgstr ""

# 97ac117b791a466d987aa19a1486fe75
#: ../../ref/class-based-views/mixins-editing.txt:3
msgid "Editing mixins"
msgstr ""

# 75a97866193945d585719dc7f34f5f4d
#: ../../ref/class-based-views/mixins-editing.txt:5
msgid "The following mixins are used to construct Django's editing views:"
msgstr ""

# dfdcef2c078a4037af4eeb1da3d198e2
#: ../../ref/class-based-views/mixins-editing.txt:14
msgid ""
"Examples of how these are combined into editing views can be found at the "
"documentation on ``Generic editing views``."
msgstr ""

# a305ddfadc334b1fa84e7e82412551f6
#: ../../ref/class-based-views/mixins-editing.txt:18
msgid "FormMixin"
msgstr ""

# dd7ade9a7bed48ddba3194de0e29f3d6
#: ../../ref/class-based-views/mixins-editing.txt:22
msgid ""
"A mixin class that provides facilities for creating and displaying forms."
msgstr ""

# 51c232f613174e9b91c4ecab64d9d4eb
#: ../../ref/class-based-views/mixins-editing.txt:28
msgid "A dictionary containing initial data for the form."
msgstr ""

# 6b7ebc1d35c340cd8a4a8ba270cbee2f
#: ../../ref/class-based-views/mixins-editing.txt:32
msgid "The form class to instantiate."
msgstr ""

# 35512478f3ac4b91a23ee78a9e9e92d6
# 4959026f1ecb479ea42bfa89b1798e01
#: ../../ref/class-based-views/mixins-editing.txt:36
#: ../../ref/class-based-views/mixins-editing.txt:126
msgid "The URL to redirect to when the form is successfully processed."
msgstr ""

# 9d55b89c5a96437cb63e0ee91a18b3ca
#: ../../ref/class-based-views/mixins-editing.txt:40
msgid ""
"Retrieve initial data for the form. By default, returns a copy of :attr:"
"`~django.views.generic.edit.FormMixin.initial`."
msgstr ""

# d545b99fc3c04746a71a8b5972c51d5c
#: ../../ref/class-based-views/mixins-editing.txt:50
msgid "Retrieve the form class to instantiate. By default :attr:`.form_class`."
msgstr ""

# fbcb01a7ff2a4a3dae511a298fe7999e
#: ../../ref/class-based-views/mixins-editing.txt:55
msgid ""
"Instantiate an instance of ``form_class`` using :meth:`~django.views.generic."
"edit.FormMixin.get_form_kwargs`."
msgstr ""

# 50220837f8264d49951f735dc5f99941
#: ../../ref/class-based-views/mixins-editing.txt:60
msgid "Build the keyword arguments required to instantiate the form."
msgstr ""

# 4e7f99bc326746f9a03cd8a28f4e38d0
#: ../../ref/class-based-views/mixins-editing.txt:62
msgid ""
"The ``initial`` argument is set to :meth:`.get_initial`. If the request is a "
"``POST`` or ``PUT``, the request data (``request.POST`` and ``request."
"FILES``) will also be provided."
msgstr ""

# 19ac55367d684391aca53d5a938dd60a
#: ../../ref/class-based-views/mixins-editing.txt:68
msgid ""
"Determine the URL to redirect to when the form is successfully validated. "
"Returns :attr:`~django.views.generic.edit.FormMixin.success_url` by default."
msgstr ""

# 159266e1a5d6448e8a92661d82a9d626
#: ../../ref/class-based-views/mixins-editing.txt:74
msgid ""
"Redirects to :meth:`~django.views.generic.edit.FormMixin.get_success_url`."
msgstr ""

# adb406164f0e42aa8ded851ace19439e
# 6974e5a7070b4b44856663240d0e39fb
#: ../../ref/class-based-views/mixins-editing.txt:79
#: ../../ref/class-based-views/mixins-editing.txt:164
msgid "Renders a response, providing the invalid form as context."
msgstr ""

# c676fe971ed14e91bb2d2ff23641e98c
#: ../../ref/class-based-views/mixins-editing.txt:83
msgid "Populates a context containing the contents of ``kwargs``."
msgstr ""

# 923e45b2048a4ef6b6bb03a704ef6572
#: ../../ref/class-based-views/mixins-editing.txt:87
msgid "``form``: The form instance that was generated for the view."
msgstr ""

# 62bc2277798f439bbd08fcce54f07b42
#: ../../ref/class-based-views/mixins-editing.txt:91
msgid ""
"Views mixing ``FormMixin`` must provide an implementation of :meth:"
"`form_valid` and :meth:`form_invalid`."
msgstr ""

# 7f212b36f51a43008078cdff214d7a09
#: ../../ref/class-based-views/mixins-editing.txt:96
msgid "ModelFormMixin"
msgstr ""

# 8d47decd384b4934a9d08f64377da2aa
#: ../../ref/class-based-views/mixins-editing.txt:100
msgid ""
"A form mixin that works on ``ModelForms``, rather than a standalone form."
msgstr ""

# 1dc530ef23364e3ab23df90d98eb4d22
#: ../../ref/class-based-views/mixins-editing.txt:102
msgid ""
"Since this is a subclass of :class:`~django.views.generic.detail."
"SingleObjectMixin`, instances of this mixin have access to the :attr:"
"`~django.views.generic.detail.SingleObjectMixin.model` and :attr:`~django."
"views.generic.detail.SingleObjectMixin.queryset` attributes, describing the "
"type of object that the ``ModelForm`` is manipulating. The view also "
"provides ``self.object``, the instance being manipulated. If the instance is "
"being created, ``self.object`` will be ``None``."
msgstr ""

# 3f71ff5db01c49babfc57d2f1e737e01
#: ../../ref/class-based-views/mixins-editing.txt:120
msgid ""
"A model class. Can be explicitly provided, otherwise will be determined by "
"examining ``self.object`` or :attr:`~django.views.generic.detail."
"SingleObjectMixin.queryset`."
msgstr ""

# 6889ba645f4a40c09607454e86f9fdb7
#: ../../ref/class-based-views/mixins-editing.txt:128
msgid ""
"``success_url`` may contain dictionary string formatting, which will be "
"interpolated against the object's field attributes. For example, you could "
"use ``success_url=\"/polls/%(slug)s/\"`` to redirect to a URL composed out "
"of the ``slug`` field on a model."
msgstr ""

# bb20a989adc6405287676ebd8d88e227
#: ../../ref/class-based-views/mixins-editing.txt:135
msgid ""
"Retrieve the form class to instantiate. If :attr:`~django.views.generic.edit."
"FormMixin.form_class` is provided, that class will be used. Otherwise, a "
"``ModelForm`` will be instantiated using the model associated with the :attr:"
"`~django.views.generic.detail.SingleObjectMixin.queryset`, or with the :attr:"
"`~django.views.generic.detail.SingleObjectMixin.model`, depending on which "
"attribute is provided."
msgstr ""

# fb97acde4eae45808ba6c9236172f8ee
#: ../../ref/class-based-views/mixins-editing.txt:145
msgid ""
"Add the current instance (``self.object``) to the standard :meth:`~django."
"views.generic.edit.FormMixin.get_form_kwargs`."
msgstr ""

# 56ee7c3d301b46379e693c70485cac7a
#: ../../ref/class-based-views/mixins-editing.txt:150
msgid ""
"Determine the URL to redirect to when the form is successfully validated. "
"Returns :attr:`django.views.generic.edit.ModelFormMixin.success_url` if it "
"is provided; otherwise, attempts to use the ``get_absolute_url()`` of the "
"object."
msgstr ""

# 30f3c1685c1c48d9a1fe433542f19f2d
#: ../../ref/class-based-views/mixins-editing.txt:158
msgid ""
"Saves the form instance, sets the current object for the view, and redirects "
"to :meth:`~django.views.generic.edit.FormMixin.get_success_url`."
msgstr ""

# dca928554d1441868371bcdd07b36fb4
#: ../../ref/class-based-views/mixins-editing.txt:168
msgid "ProcessFormView"
msgstr ""

# bfe4c10005a94e0e96deaaa5426c18bf
#: ../../ref/class-based-views/mixins-editing.txt:172
msgid "A mixin that provides basic HTTP GET and POST workflow."
msgstr ""

# 634ea63ed559454d89960ba1b1ca054c
#: ../../ref/class-based-views/mixins-editing.txt:176
msgid ""
"This is named 'ProcessFormView' and inherits directly from :class:`django."
"views.generic.base.View`, but breaks if used independently, so it is more of "
"a mixin."
msgstr ""

# 327d8441efd643d8b9b0e65188fc67b4
# 832f771fec094847a8080db1f85e880a
# 4e183c5b8f814fcbbe871d4b5a54f79e
# 3da6027c50434de18124a2249f5bca6f
#: ../../ref/class-based-views/mixins-editing.txt:180
#: ../../ref/class-based-views/mixins-multiple-object.txt:42
#: ../../ref/class-based-views/mixins-multiple-object.txt:174
#: ../../ref/class-based-views/mixins-single-object.txt:103
msgid "**Extends**"
msgstr ""

# bc02520a296f47d8ada34c637c4eaed0
#: ../../ref/class-based-views/mixins-editing.txt:188
msgid ""
"Constructs a form, then renders a response using a context that contains "
"that form."
msgstr ""

# e3cf25000efb4f509a22a8e1d7ce9422
#: ../../ref/class-based-views/mixins-editing.txt:193
msgid ""
"Constructs a form, checks the form for validity, and handles it accordingly."
msgstr ""

# 3e1d3746898f437a9af8ebaf358ff7f3
#: ../../ref/class-based-views/mixins-editing.txt:198
msgid ""
"The ``PUT`` action is also handled and just passes all parameters through "
"to :meth:`post`."
msgstr ""

# 2fd6fb807ff14498ab5ed61ec3425cfc
#: ../../ref/class-based-views/mixins-editing.txt:203
msgid "Enables handling of the ``DELETE`` http action."
msgstr ""

# 81319d1f45bb4ae0b1e33026cf46ecc6
#: ../../ref/class-based-views/mixins-editing.txt:209
msgid ""
"The url to redirect to when the nominated object has been successfully "
"deleted."
msgstr ""

# 86ec6c8de86f488ca3b10e75a765503c
#: ../../ref/class-based-views/mixins-editing.txt:214
msgid ""
"Returns the url to redirect to when the nominated object has been "
"successfully deleted. Returns :attr:`~django.views.generic.edit."
"DeletionMixin.success_url` by default."
msgstr ""

# 1ec13078833545af8e4c0fee0ee5d67f
#: ../../ref/class-based-views/mixins-multiple-object.txt:3
msgid "Multiple object mixins"
msgstr ""

# 85476d6ca09e459daddce82133550f1c
#: ../../ref/class-based-views/mixins-multiple-object.txt:6
msgid "MultipleObjectMixin"
msgstr ""

# 0f4848ad669448d5853addb5cf9a4fc8
#: ../../ref/class-based-views/mixins-multiple-object.txt:10
msgid "A mixin that can be used to display a list of objects."
msgstr ""

# 3c43dfb5f6a446e59e1a5536ec69f96b
#: ../../ref/class-based-views/mixins-multiple-object.txt:12
msgid ""
"If ``paginate_by`` is specified, Django will paginate the results returned "
"by this. You can specify the page number in the URL in one of two ways:"
msgstr ""

# 71d1d646300f4c81847960cb2a3f8d53
#: ../../ref/class-based-views/mixins-multiple-object.txt:15
msgid ""
"Use the ``page`` parameter in the URLconf. For example, this is what your "
"URLconf might look like::"
msgstr ""

# 6c38eb15644f46c4ba48d11597ca86da
#: ../../ref/class-based-views/mixins-multiple-object.txt:20
msgid ""
"Pass the page number via the ``page`` query-string parameter. For example, a "
"URL would look like this::"
msgstr ""

# 2941632b36a24099bdf4e62100cd6d7d
#: ../../ref/class-based-views/mixins-multiple-object.txt:25
msgid ""
"These values and lists are 1-based, not 0-based, so the first page would be "
"represented as page ``1``."
msgstr ""

# 72e67bdc6cd84bd28a67d791abedb5d8
#: ../../ref/class-based-views/mixins-multiple-object.txt:28
msgid ""
"For more on pagination, read the :doc:`pagination documentation </topics/"
"pagination>`."
msgstr ""

# 0ba447c7605e4ad18fd32e3d3ac65f0e
#: ../../ref/class-based-views/mixins-multiple-object.txt:31
msgid ""
"As a special case, you are also permitted to use ``last`` as a value for "
"``page``::"
msgstr ""

# 0a5caa101ba341bd81dd133514d13139
#: ../../ref/class-based-views/mixins-multiple-object.txt:36
msgid ""
"This allows you to access the final page of results without first having to "
"determine how many pages there are."
msgstr ""

# 9b029c285e9f441590ae742e470d0568
#: ../../ref/class-based-views/mixins-multiple-object.txt:39
msgid ""
"Note that ``page`` *must* be either a valid page number or the value "
"``last``; any other value for ``page`` will result in a 404 error."
msgstr ""

# 35b2a2bb093c479c9e47159f1ecfcdc6
#: ../../ref/class-based-views/mixins-multiple-object.txt:44
msgid ":class:`django.views.generic.base.ContextMixin`"
msgstr ""

# 5f64870159614f668e70e30c30d45083
#: ../../ref/class-based-views/mixins-multiple-object.txt:50
msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``False`` and no objects are available, the view will "
"raise a 404 instead of displaying an empty page. By default, this is "
"``True``."
msgstr ""

# 3567127bad234156888c931216e1b69a
# 2eb0e5290ade40d2b9374475e7dd04a4
#: ../../ref/class-based-views/mixins-multiple-object.txt:57
#: ../../ref/class-based-views/mixins-single-object.txt:17
msgid ""
"The model that this view will display data for. Specifying ``model = Foo`` "
"is effectively the same as specifying ``queryset = Foo.objects.all()``."
msgstr ""

# 1226ce41f81e4cb680ae0fc231c1481a
# 1b493fb253bb48178c2e308ee62758bd
#: ../../ref/class-based-views/mixins-multiple-object.txt:63
#: ../../ref/class-based-views/mixins-single-object.txt:23
msgid ""
"A ``QuerySet`` that represents the objects. If provided, the value of "
"``queryset`` supersedes the value provided for :attr:`model`."
msgstr ""

# 541917ea18f14bba9f792c2bf7bf06a7
#: ../../ref/class-based-views/mixins-multiple-object.txt:68
msgid ""
"An integer specifying how many objects should be displayed per page. If this "
"is given, the view will paginate objects with ``paginate_by`` objects per "
"page. The view will expect either a ``page`` query string parameter (via "
"``request.GET``) or a ``page`` variable specified in the URLconf."
msgstr ""

# 9ff2cd80f78243bf875f636c565b8e35
#: ../../ref/class-based-views/mixins-multiple-object.txt:78
msgid ""
"A string specifying the name to use for the page parameter. The view will "
"expect this prameter to be available either as a query string parameter (via "
"``request.GET``) or as a kwarg variable specified in the URLconf. Defaults "
"to ``page``."
msgstr ""

# 21eb48e0a5e144e2b6dda429f91248b3
#: ../../ref/class-based-views/mixins-multiple-object.txt:85
msgid ""
"The paginator class to be used for pagination. By default, :class:`django."
"core.paginator.Paginator` is used. If the custom paginator class doesn't "
"have the same constructor interface as :class:`django.core.paginator."
"Paginator`, you will also need to provide an implementation for :meth:"
"`get_paginator`."
msgstr ""

# 61ed3bef696d4776b5fa1d39e3d59433
# b012259972c040f1b5bdbd239fd7590f
#: ../../ref/class-based-views/mixins-multiple-object.txt:93
#: ../../ref/class-based-views/mixins-single-object.txt:47
msgid "Designates the name of the variable to use in the context."
msgstr ""

# 8ca704a50201499e8806e97c5a5c67e7
#: ../../ref/class-based-views/mixins-multiple-object.txt:97
msgid ""
"Get the list of items for this view. This must be an iterable and may be a "
"queryset (in which queryset-specific behavior will be enabled)."
msgstr ""

# d684b9c20fe543b190eb8234f182b7cc
#: ../../ref/class-based-views/mixins-multiple-object.txt:102
msgid ""
"Returns a 4-tuple containing (``paginator``, ``page``, ``object_list``, "
"``is_paginated``)."
msgstr ""

# cbb82fa0e35f4fd691b8b108a2d205e3
#: ../../ref/class-based-views/mixins-multiple-object.txt:105
msgid ""
"Constructed by paginating ``queryset`` into pages of size ``page_size``. If "
"the request contains a ``page`` argument, either as a captured URL argument "
"or as a GET argument, ``object_list`` will correspond to the objects from "
"that page."
msgstr ""

# fa8cb7b2565a4e6fa968deb474635330
#: ../../ref/class-based-views/mixins-multiple-object.txt:112
msgid ""
"Returns the number of items to paginate by, or ``None`` for no pagination. "
"By default this simply returns the value of :attr:`paginate_by`."
msgstr ""

# 083c1a362a3e4312a7b9bf7d194964be
#: ../../ref/class-based-views/mixins-multiple-object.txt:118
msgid ""
"Returns an instance of the paginator to use for this view. By default, "
"instantiates an instance of :attr:`paginator_class`."
msgstr ""

# c67a66790fd64142ad1cdec0240a88cf
#: ../../ref/class-based-views/mixins-multiple-object.txt:123
msgid ""
"Return a boolean specifying whether to display the page if no objects are "
"available. If this method returns ``False`` and no objects are available, "
"the view will raise a 404 instead of displaying an empty page. By default, "
"this is ``True``."
msgstr ""

# d6435eb9494e4db89b2f578fa9d9b2df
#: ../../ref/class-based-views/mixins-multiple-object.txt:130
msgid ""
"Return the context variable name that will be used to contain the list of "
"data that this view is manipulating. If ``object_list`` is a queryset of "
"Django objects and :attr:`context_object_name` is not set, the context name "
"will be the ``object_name`` of the model that the queryset is composed from, "
"with postfix ``'_list'`` appended. For example, the model ``Article`` would "
"have a context object named ``article_list``."
msgstr ""

# 545ac6a8977348c4ba3eccecbee110b7
# ffe6ea94c63a462ba4593487c3db04f8
#: ../../ref/class-based-views/mixins-multiple-object.txt:141
#: ../../ref/class-based-views/mixins-single-object.txt:78
msgid "Returns context data for displaying the list of objects."
msgstr ""

# b4996dd0a0594054a99207be56c3ba3c
#: ../../ref/class-based-views/mixins-multiple-object.txt:145
msgid ""
"``object_list``: The list of objects that this view is displaying. If "
"``context_object_name`` is specified, that variable will also be set in the "
"context, with the same value as ``object_list``."
msgstr ""

# 7f3b77d224244e5db920222029b87655
#: ../../ref/class-based-views/mixins-multiple-object.txt:149
msgid ""
"``is_paginated``: A boolean representing whether the results are paginated. "
"Specifically, this is set to ``False`` if no page size has been specified, "
"or if the available objects do not span multiple pages."
msgstr ""

# cb8a27f733294184b35f2b6998b26fe8
#: ../../ref/class-based-views/mixins-multiple-object.txt:154
msgid ""
"``paginator``: An instance of :class:`django.core.paginator.Paginator`. If "
"the page is not paginated, this context variable will be ``None``."
msgstr ""

# 3cbf8ab6d7ae41c5be5a3412fe8aa3c0
#: ../../ref/class-based-views/mixins-multiple-object.txt:158
msgid ""
"``page_obj``: An instance of :class:`django.core.paginator.Page`. If the "
"page is not paginated, this context variable will be ``None``."
msgstr ""

# 41662ae7b4a04311b1c207ab4f30bf69
#: ../../ref/class-based-views/mixins-multiple-object.txt:164
msgid "MultipleObjectTemplateResponseMixin"
msgstr ""

# 93959abd1c8142fc9868e38fe9641ab6
#: ../../ref/class-based-views/mixins-multiple-object.txt:168
msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a list of object instances. Requires that the view it is mixed "
"with provides ``self.object_list``, the list of object instances that the "
"view is operating on. ``self.object_list`` may be, but is not required to "
"be, a :class:`~django.db.models.query.QuerySet`."
msgstr ""

# b02ff3b080414027ba4334bdaf298683
# d3c83ba57d694fa89959a0e3bc029a39
#: ../../ref/class-based-views/mixins-multiple-object.txt:176
#: ../../ref/class-based-views/mixins-single-object.txt:105
msgid ":class:`~django.views.generic.base.TemplateResponseMixin`"
msgstr ""

# 8eadef3b900c4f25a2d7c2085fc9b2fc
#: ../../ref/class-based-views/mixins-multiple-object.txt:182
msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_list``."
msgstr ""

# 41998d2ab5424220905bc1581325b124
# 304cbf85eac14d75bae87a9841c4fb5f
#: ../../ref/class-based-views/mixins-multiple-object.txt:187
#: ../../ref/class-based-views/mixins-single-object.txt:124
msgid "Returns a list of candidate template names. Returns the following list:"
msgstr ""

# aeabcf77179340c39121f36ae6c4d561
# ad74905269b2456cb99d02ff1f6972f4
#: ../../ref/class-based-views/mixins-multiple-object.txt:189
#: ../../ref/class-based-views/mixins-single-object.txt:126
msgid "the value of ``template_name`` on the view (if provided)"
msgstr ""

# 892e0069b22d428baf358eb38fe32808
# 956824e9897e40f7810e985228c8958e
#: ../../ref/class-based-views/mixins-multiple-object.txt:190
#: ../../ref/class-based-views/mixins-single-object.txt:129
msgid "``<app_label>/<object_name><template_name_suffix>.html``"
msgstr ""

# b2d6418738324836ab554ae2180ef476
#: ../../ref/class-based-views/mixins-simple.txt:3
msgid "Simple mixins"
msgstr ""

# c26e950341c048b98a0bb46a460e80b9
#: ../../ref/class-based-views/mixins-simple.txt:6
msgid "ContextMixin"
msgstr ""

# d0d6f1606c9541b8bcc9e3f5176ec7a7
#: ../../ref/class-based-views/mixins-simple.txt:16
msgid ""
"Returns a dictionary representing the template context. The keyword "
"arguments provided will make up the returned context. Example usage::"
msgstr ""

# c1a2149e2080477fa1562e934dea77b6
#: ../../ref/class-based-views/mixins-simple.txt:24
msgid ""
"The template context of all class-based generic views include a ``view`` "
"variable that points to the ``View`` instance."
msgstr ""

# 89d27b3896bf4f01943c25d1ea01a1b4
#: ../../ref/class-based-views/mixins-simple.txt:27
msgid "Use ``alters_data`` where appropriate"
msgstr ""

# 45a3af88ae2d40c5975d591ae91d0f7d
#: ../../ref/class-based-views/mixins-simple.txt:29
msgid ""
"Note that having the view instance in the template context may expose "
"potentially hazardous methods to template authors.  To prevent methods like "
"this from being called in the template, set ``alters_data=True`` on those "
"methods.  For more information, read the documentation on :ref:`rendering a "
"template context <alters-data-description>`."
msgstr ""

# 6e6fbe502137494a9f861589e2173a59
#: ../../ref/class-based-views/mixins-simple.txt:37
msgid "TemplateResponseMixin"
msgstr ""

# 21968f89b86f42399df4913683bec60f
#: ../../ref/class-based-views/mixins-simple.txt:41
msgid ""
"Provides a mechanism to construct a :class:`~django.template.response."
"TemplateResponse`, given suitable context. The template to use is "
"configurable and can be further customized by subclasses."
msgstr ""

# 8af04b3a5caf41e6a296739cf86170e0
#: ../../ref/class-based-views/mixins-simple.txt:50
msgid ""
"The full name of a template to use as defined by a string. Not defining a "
"``template_name`` will raise a :class:`django.core.exceptions."
"ImproperlyConfigured` exception."
msgstr ""

# b25a79fc2f3f4441b382d1d191c4db60
#: ../../ref/class-based-views/mixins-simple.txt:56
msgid ""
"The response class to be returned by ``render_to_response`` method. Default "
"is :class:`TemplateResponse <django.template.response.TemplateResponse>`. "
"The template and context of ``TemplateResponse`` instances can be altered "
"later (e.g. in :ref:`template response middleware <template-response-"
"middleware>`)."
msgstr ""

# c0ae462628ee41b7869dc76d80e0cedd
#: ../../ref/class-based-views/mixins-simple.txt:63
msgid ""
"If you need custom template loading or custom context object instantiation, "
"create a ``TemplateResponse`` subclass and assign it to ``response_class``."
msgstr ""

# 0416cac722bf4d0583f1ea1795c9bae9
#: ../../ref/class-based-views/mixins-simple.txt:72
msgid ""
"The content type to use for the response. ``content_type`` is passed as a "
"keyword argument to ``response_class``. Default is ``None`` -- meaning that "
"Django uses :setting:`DEFAULT_CONTENT_TYPE`."
msgstr ""

# a5355bd6d9ff46bfa2d4f50fa247fc97
#: ../../ref/class-based-views/mixins-simple.txt:80
msgid "Returns a ``self.response_class`` instance."
msgstr ""

# aa6dc96df1c542339461a98808b3f653
#: ../../ref/class-based-views/mixins-simple.txt:82
msgid ""
"If any keyword arguments are provided, they will be passed to the "
"constructor of the response class."
msgstr ""

# dc49ca0b08c8491b880e5d7c4e99bfd4
#: ../../ref/class-based-views/mixins-simple.txt:85
msgid ""
"Calls :meth:`get_template_names()` to obtain the list of template names that "
"will be searched looking for an existent template."
msgstr ""

# ebac56e08ab541aeb62aa453ba30fe6e
#: ../../ref/class-based-views/mixins-simple.txt:90
msgid ""
"Returns a list of template names to search for when rendering the template."
msgstr ""

# ceca1913a92545c99f56efeb5b9058ff
#: ../../ref/class-based-views/mixins-simple.txt:93
msgid ""
"If :attr:`template_name` is specified, the default implementation will "
"return a list containing :attr:`template_name` (if it is specified)."
msgstr ""

# 82362d0c162942dba01312919fb2afc8
#: ../../ref/class-based-views/mixins-single-object.txt:3
msgid "Single object mixins"
msgstr ""

# 4a0e4b33e41549f283b4f6ce73138923
#: ../../ref/class-based-views/mixins-single-object.txt:6
msgid "SingleObjectMixin"
msgstr ""

# e2493e4b05da4322984973362d25a357
#: ../../ref/class-based-views/mixins-single-object.txt:10
msgid ""
"Provides a mechanism for looking up an object associated with the current "
"HTTP request."
msgstr ""

# a370337d12e94d1bb8fab58b18c6ee11
#: ../../ref/class-based-views/mixins-single-object.txt:28
msgid ""
"The name of the field on the model that contains the slug. By default, "
"``slug_field`` is ``'slug'``."
msgstr ""

# e21ffa296a544d96be640d1c41b82c96
#: ../../ref/class-based-views/mixins-single-object.txt:35
msgid ""
"The name of the URLConf keyword argument that contains the slug. By default, "
"``slug_url_kwarg`` is ``'slug'``."
msgstr ""

# bd65b64f3ce54a68a560c27dc0e11680
#: ../../ref/class-based-views/mixins-single-object.txt:42
msgid ""
"The name of the URLConf keyword argument that contains the primary key. By "
"default, ``pk_url_kwarg`` is ``'pk'``."
msgstr ""

# ead54fd45589488aa7f9c40f16a85628
#: ../../ref/class-based-views/mixins-single-object.txt:51
msgid ""
"Returns the single object that this view will display. If ``queryset`` is "
"provided, that queryset will be used as the source of objects; otherwise, :"
"meth:`get_queryset` will be used. ``get_object()`` looks for a :attr:"
"`pk_url_kwarg` argument in the arguments to the view; if this argument is "
"found, this method performs a primary-key based lookup using that value. If "
"this argument is not found, it looks for a :attr:`slug_url_kwarg` argument, "
"and performs a slug lookup using the :attr:`slug_field`."
msgstr ""

# 7dc99b78fd494288883e0bf84d6b9961
#: ../../ref/class-based-views/mixins-single-object.txt:62
msgid ""
"Returns the queryset that will be used to retrieve the object that this view "
"will display. By default, :meth:`get_queryset` returns the value of the :"
"attr:`queryset` attribute if it is set, otherwise it constructs a :class:"
"`~django.db.models.query.QuerySet` by calling the ``all()`` method on the :"
"attr:`model` attribute's default manager."
msgstr ""

# 2aa8379dab0c468c802db1a9b1753d89
#: ../../ref/class-based-views/mixins-single-object.txt:70
msgid ""
"Return the context variable name that will be used to contain the data that "
"this view is manipulating. If :attr:`context_object_name` is not set, the "
"context name will be constructed from the ``object_name`` of the model that "
"the queryset is composed from. For example, the model ``Article`` would have "
"context object named ``'article'``."
msgstr ""

# 85215a8c2c0148ac91c192eec0a6e15a
#: ../../ref/class-based-views/mixins-single-object.txt:82
msgid ""
"Returns the name of a slug field to be used to look up by slug. By default "
"this simply returns the value of :attr:`slug_field`."
msgstr ""

# ec9bee30c02c4965ab29ecf8f6129969
#: ../../ref/class-based-views/mixins-single-object.txt:87
msgid ""
"``object``: The object that this view is displaying. If "
"``context_object_name`` is specified, that variable will also be set in the "
"context, with the same value as ``object``."
msgstr ""

# e0096732151d4a67ae4eb43c224ea735
#: ../../ref/class-based-views/mixins-single-object.txt:92
msgid "SingleObjectTemplateResponseMixin"
msgstr ""

# c04f6dc79e2a433e850b07c01f506af0
#: ../../ref/class-based-views/mixins-single-object.txt:96
msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a single object instance. Requires that the view it is mixed "
"with provides ``self.object``, the object instance that the view is "
"operating on. ``self.object`` will usually be, but is not required to be, an "
"instance of a Django model. It may be ``None`` if the view is in the process "
"of constructing a new instance."
msgstr ""

# e58c99b19e0c40509bce553f0f7216f7
#: ../../ref/class-based-views/mixins-single-object.txt:111
msgid ""
"The field on the current object instance that can be used to determine the "
"name of a candidate template. If either ``template_name_field`` itself or "
"the value of the ``template_name_field`` on the current object instance is "
"``None``, the object will not be used for a candidate template name."
msgstr ""

# 596d1df2dd99436bb539010719af96a5
#: ../../ref/class-based-views/mixins-single-object.txt:119
msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_detail``."
msgstr ""

# f5255df053d24a6988725a6ac959c659
#: ../../ref/class-based-views/mixins-single-object.txt:127
msgid ""
"the contents of the ``template_name_field`` field on the object instance "
"that the view is operating upon (if available)"
msgstr ""

# f3bed00fbaa840adbc3b44beb7b04f54
#: ../../ref/clickjacking.txt:3
msgid "Clickjacking Protection"
msgstr ""

# cf072c78bb0b4f0abec8276437f400f0
#: ../../ref/clickjacking.txt:8
msgid ""
"The clickjacking middleware and decorators provide easy-to-use protection "
"against `clickjacking`_.  This type of attack occurs when a malicious site "
"tricks a user into clicking on a concealed element of another site which "
"they have loaded in a hidden frame or iframe."
msgstr ""

# 64595ae3d6a3484f846e1840245a5778
#: ../../ref/clickjacking.txt:19
msgid "An example of clickjacking"
msgstr ""

# 305f57366a1e4a588902f0ec41891926
#: ../../ref/clickjacking.txt:21
msgid ""
"Suppose an online store has a page where a logged in user can click \"Buy Now"
"\" to purchase an item. A user has chosen to stay logged into the store all "
"the time for convenience. An attacker site might create an \"I Like Ponies\" "
"button on one of their own pages, and load the store's page in a transparent "
"iframe such that the \"Buy Now\" button is invisibly overlaid on the \"I "
"Like Ponies\" button. If the user visits the attacker site and clicks \"I "
"Like Ponies\" he will inadvertently click on the online store's \"Buy Now\" "
"button and unknowingly purchase the item."
msgstr ""

# ec3587270f6c4404be4479b20fdcef41
#: ../../ref/clickjacking.txt:32
msgid "Preventing clickjacking"
msgstr ""

# 09c1df90bacb436caa3b70adb48af59f
#: ../../ref/clickjacking.txt:34
msgid ""
"Modern browsers honor the `X-Frame-Options`_ HTTP header that indicates "
"whether or not a resource is allowed to load within a frame or iframe. If "
"the response contains the header with a value of ``SAMEORIGIN`` then the "
"browser will only load the resource in a frame if the request originated "
"from the same site. If the header is set to ``DENY`` then the browser will "
"block the resource from loading in a frame no matter which site made the "
"request."
msgstr ""

# 51c722815340432c8cfc3d61a217beb4
#: ../../ref/clickjacking.txt:43
msgid ""
"Django provides a few simple ways to include this header in responses from "
"your site:"
msgstr ""

# 556d91ebcf7f46be89d26508d78547d4
#: ../../ref/clickjacking.txt:46
msgid "A simple middleware that sets the header in all responses."
msgstr ""

# e8ead764126d4d48a95ff45e083a2718
#: ../../ref/clickjacking.txt:48
msgid ""
"A set of view decorators that can be used to override the middleware or to "
"only set the header for certain views."
msgstr ""

# c28e84ea73514850bd1089f72395f7c9
# eae3d5abf6724f8fa4cc52a87bb0637a
#: ../../ref/clickjacking.txt:52 ../../ref/contrib/csrf.txt:27
msgid "How to use it"
msgstr ""

# 3c13d05c9ca24fb99d70ea940353f46f
#: ../../ref/clickjacking.txt:55
msgid "Setting X-Frame-Options for all responses"
msgstr ""

# af9e8d7af9aa480f99f80a9406b63da1
#: ../../ref/clickjacking.txt:57
msgid ""
"To set the same X-Frame-Options value for all responses in your site, add "
"``'django.middleware.clickjacking.XFrameOptionsMiddleware'`` to :setting:"
"`MIDDLEWARE_CLASSES`::"
msgstr ""

# 59d6b3c4c7d641418c83409c374fc76f
#: ../../ref/clickjacking.txt:68
msgid ""
"By default, the middleware will set the ``X-Frame-Options`` header to "
"``SAMEORIGIN`` for every outgoing ``HttpResponse``. If you want ``DENY`` "
"instead, set the :setting:`X_FRAME_OPTIONS` setting::"
msgstr ""

# 5b10fe9f95434b7595e894b4fb14ed26
#: ../../ref/clickjacking.txt:74
msgid ""
"When using the middleware there may be some views where you do **not** want "
"the ``X-Frame-Options`` header set. For those cases, you can use a view "
"decorator that tells the middleware not to set the header::"
msgstr ""

# e11a50aa3ff1405f85d03aa9cf3ce336
#: ../../ref/clickjacking.txt:87
msgid "Setting X-Frame-Options per view"
msgstr ""

# d26ac1497850416da1decf918a778b9f
#: ../../ref/clickjacking.txt:89
msgid ""
"To set the ``X-Frame-Options`` header on a per view basis, Django provides "
"these decorators::"
msgstr ""

# 71dafd5f19804d3682718a8ec1fe132d
#: ../../ref/clickjacking.txt:104
msgid ""
"Note that you can use the decorators in conjunction with the middleware. Use "
"of a decorator overrides the middleware."
msgstr ""

# 41d4321ae650456e9fecbfb706e89ac0
# b01caf197fc044babae1283f7c059b94
#: ../../ref/clickjacking.txt:108 ../../ref/contrib/csrf.txt:360
msgid "Limitations"
msgstr ""

# d399e9217d9f4bbfad7fb37f141637fb
#: ../../ref/clickjacking.txt:110
msgid ""
"The ``X-Frame-Options`` header will only protect against clickjacking in a "
"modern browser. Older browsers will quietly ignore the header and need "
"`other clickjacking prevention techniques`_."
msgstr ""

# b79fb618e95a488983e62c7129633f9e
#: ../../ref/clickjacking.txt:115
msgid "Browsers that support X-Frame-Options"
msgstr ""

# 41728d683534491fbd42c5f7e8726382
#: ../../ref/clickjacking.txt:117
msgid "Internet Explorer 8+"
msgstr ""

# 39ec0e938d354e0c81f431027fd26f6e
#: ../../ref/clickjacking.txt:118
msgid "Firefox 3.6.9+"
msgstr ""

# 34c93818e0944168ba3dc1c1511c1f0d
#: ../../ref/clickjacking.txt:119
msgid "Opera 10.5+"
msgstr ""

# f662d585b0344b22a6ce2039956cb6d6
#: ../../ref/clickjacking.txt:120
msgid "Safari 4+"
msgstr ""

# e8ab7fe4b1ce4ab5a3cbb20fb1ab240a
#: ../../ref/clickjacking.txt:121
msgid "Chrome 4.1+"
msgstr ""

# 8824681d639b4869a13a4a80265215b6
#: ../../ref/clickjacking.txt:124
msgid "See also"
msgstr ""

# c918b6f6191c4c57bdd2cfa5bf1bdd8d
#: ../../ref/clickjacking.txt:126
msgid "A `complete list`_ of browsers supporting ``X-Frame-Options``."
msgstr ""

# c3bf85f775f24d95a94c2fefb211940e
#: ../../ref/contrib/admin/actions.txt:3
msgid "Admin actions"
msgstr ""

# be1412ab7d1b426997cee297cd81b219
#: ../../ref/contrib/admin/actions.txt:7
msgid ""
"The basic workflow of Django's admin is, in a nutshell, \"select an object, "
"then change it.\" This works well for a majority of use cases. However, if "
"you need to make the same change to many objects at once, this workflow can "
"be quite tedious."
msgstr ""

# 7bd9d9b0cbae447a9367d5149d860ad0
#: ../../ref/contrib/admin/actions.txt:12
msgid ""
"In these cases, Django's admin lets you write and register \"actions\" -- "
"simple functions that get called with a list of objects selected on the "
"change list page."
msgstr ""

# 801d98be1c8741bdba26015e7485fd31
#: ../../ref/contrib/admin/actions.txt:16
msgid ""
"If you look at any change list in the admin, you'll see this feature in "
"action; Django ships with a \"delete selected objects\" action available to "
"all models. For example, here's the user module from Django's built-in :mod:"
"`django.contrib.auth` app:"
msgstr ""

# e6e6afa60ca24860a932f17308030cf7
#: ../../ref/contrib/admin/actions.txt:25
msgid ""
"The \"delete selected objects\" action uses :meth:`QuerySet.delete() <django."
"db.models.query.QuerySet.delete>` for efficiency reasons, which has an "
"important caveat: your model's ``delete()`` method will not be called."
msgstr ""

# ef79f8869ce541bea4bbee44ed105ae0
#: ../../ref/contrib/admin/actions.txt:30
msgid ""
"If you wish to override this behavior, simply write a custom action which "
"accomplishes deletion in your preferred manner -- for example, by calling "
"``Model.delete()`` for each of the selected items."
msgstr ""

# 0edff6e7573747ab8a742e092b93d733
#: ../../ref/contrib/admin/actions.txt:34
msgid ""
"For more background on bulk deletion, see the documentation on :ref:`object "
"deletion <topics-db-queries-delete>`."
msgstr ""

# 024aeeabd4f44584b8e1e40e10d2dd9b
#: ../../ref/contrib/admin/actions.txt:37
msgid "Read on to find out how to add your own actions to this list."
msgstr ""

# 06b4693d5f28414dbcf921f7a2fc51f0
#: ../../ref/contrib/admin/actions.txt:40
msgid "Writing actions"
msgstr ""

# 17f808869eb54084abbc1d13a1b9cda0
#: ../../ref/contrib/admin/actions.txt:42
msgid "The easiest way to explain actions is by example, so let's dive in."
msgstr ""

# 97eb6ccaddda4f2c925d9515a06c1cbd
#: ../../ref/contrib/admin/actions.txt:44
msgid ""
"A common use case for admin actions is the bulk updating of a model. Imagine "
"a simple news application with an ``Article`` model::"
msgstr ""

# 6749e42117134571b3808ecdf37edc75
#: ../../ref/contrib/admin/actions.txt:63
msgid ""
"A common task we might perform with a model like this is to update an "
"article's status from \"draft\" to \"published\". We could easily do this in "
"the admin one article at a time, but if we wanted to bulk-publish a group of "
"articles, it'd be tedious. So, let's write an action that lets us change an "
"article's status to \"published.\""
msgstr ""

# 73b257e94481485aa95a774bbf29e4f1
#: ../../ref/contrib/admin/actions.txt:70
msgid "Writing action functions"
msgstr ""

# 98712b8f326a45a7957155dfe507afd9
#: ../../ref/contrib/admin/actions.txt:72
msgid ""
"First, we'll need to write a function that gets called when the action is "
"trigged from the admin. Action functions are just regular functions that "
"take three arguments:"
msgstr ""

# cf1b247caa5449d6885513753ee7e099
#: ../../ref/contrib/admin/actions.txt:76
msgid "The current :class:`ModelAdmin`"
msgstr ""

# 5adcbfc7862c4929a0dfd464c7b83eb7
#: ../../ref/contrib/admin/actions.txt:77
msgid "An :class:`~django.http.HttpRequest` representing the current request,"
msgstr ""

# 47968379be614c3c98e66c48e1a9e90c
#: ../../ref/contrib/admin/actions.txt:78
msgid ""
"A :class:`~django.db.models.query.QuerySet` containing the set of objects "
"selected by the user."
msgstr ""

# 154ec39545eb45e3a85f7bc73bf5f0e3
#: ../../ref/contrib/admin/actions.txt:81
msgid ""
"Our publish-these-articles function won't need the :class:`ModelAdmin` or "
"the request object, but we will use the queryset::"
msgstr ""

# 83dc1283149f4f37b8d93abea9ceb419
#: ../../ref/contrib/admin/actions.txt:89
msgid ""
"For the best performance, we're using the queryset's :ref:`update method "
"<topics-db-queries-update>`. Other types of actions might need to deal with "
"each object individually; in these cases we'd just iterate over the "
"queryset::"
msgstr ""

# a15f9a37760b4f2c8b69f294e185bd3a
#: ../../ref/contrib/admin/actions.txt:97
msgid ""
"That's actually all there is to writing an action! However, we'll take one "
"more optional-but-useful step and give the action a \"nice\" title in the "
"admin. By default, this action would appear in the action list as \"Make "
"published\" -- the function name, with underscores replaced by spaces. "
"That's fine, but we can provide a better, more human-friendly name by giving "
"the ``make_published`` function a ``short_description`` attribute::"
msgstr ""

# 66078d3ae6924767a2f6e2f3deeac830
#: ../../ref/contrib/admin/actions.txt:110
msgid ""
"This might look familiar; the admin's ``list_display`` option uses the same "
"technique to provide human-readable descriptions for callback functions "
"registered there, too."
msgstr ""

# 2b880864e60248a08d93725c92c89f24
#: ../../ref/contrib/admin/actions.txt:115
msgid "Adding actions to the :class:`ModelAdmin`"
msgstr ""

# 384b6289a3d640a5843486ae590bd921
#: ../../ref/contrib/admin/actions.txt:117
msgid ""
"Next, we'll need to inform our :class:`ModelAdmin` of the action. This works "
"just like any other configuration option. So, the complete ``admin.py`` with "
"the action and its registration would look like::"
msgstr ""

# cf1a41403be24b84a3c38dd260c00546
#: ../../ref/contrib/admin/actions.txt:135
msgid ""
"That code will give us an admin change list that looks something like this:"
msgstr ""

# 4d2fbad9c20e462a9d838117fca00d2f
#: ../../ref/contrib/admin/actions.txt:139
msgid ""
"That's really all there is to it! If you're itching to write your own "
"actions, you now know enough to get started. The rest of this document just "
"covers more advanced techniques."
msgstr ""

# 7108bfdd3362412190c540e793c22042
#: ../../ref/contrib/admin/actions.txt:144
msgid "Handling errors in actions"
msgstr ""

# 090a6f01d61047189a8373d53d4336da
#: ../../ref/contrib/admin/actions.txt:146
msgid ""
"If there are foreseeable error conditions that may occur while running your "
"action, you should gracefully inform the user of the problem. This means "
"handling exceptions and and using :meth:`django.contrib.admin.ModelAdmin."
"message_user` to display a user friendly description of the problem in the "
"response."
msgstr ""

# ec519472c5454985b76f0bb87ab22aeb
#: ../../ref/contrib/admin/actions.txt:153
msgid "Advanced action techniques"
msgstr ""

# 8616d4975f6346b7b70b2d84b6d04ec0
#: ../../ref/contrib/admin/actions.txt:155
msgid ""
"There's a couple of extra options and possibilities you can exploit for more "
"advanced options."
msgstr ""

# 897db95c6f304dbd9310c2680c9f7880
#: ../../ref/contrib/admin/actions.txt:159
msgid "Actions as :class:`ModelAdmin` methods"
msgstr ""

# b809a8b08b5d473dad5d3bed5e952252
#: ../../ref/contrib/admin/actions.txt:161
msgid ""
"The example above shows the ``make_published`` action defined as a simple "
"function. That's perfectly fine, but it's not perfect from a code design "
"point of view: since the action is tightly coupled to the ``Article`` "
"object, it makes sense to hook the action to the ``ArticleAdmin`` object "
"itself."
msgstr ""

# f23187ac9ac144fe8943f9b30becde7f
#: ../../ref/contrib/admin/actions.txt:166
msgid "That's easy enough to do::"
msgstr ""

# dade97e25d224310a82073a31bffb898
#: ../../ref/contrib/admin/actions.txt:177
msgid ""
"Notice first that we've moved ``make_published`` into a method and renamed "
"the ``modeladmin`` parameter to ``self``, and second that we've now put the "
"string ``'make_published'`` in ``actions`` instead of a direct function "
"reference. This tells the :class:`ModelAdmin` to look up the action as a "
"method."
msgstr ""

# 130bdd051d964078a6d531d520468ec4
#: ../../ref/contrib/admin/actions.txt:182
msgid ""
"Defining actions as methods gives the action more straightforward, idiomatic "
"access to the :class:`ModelAdmin` itself, allowing the action to call any of "
"the methods provided by the admin."
msgstr ""

# 8b976f2dab0c40ae881f6ca404b8c395
#: ../../ref/contrib/admin/actions.txt:188
msgid ""
"For example, we can use ``self`` to flash a message to the user informing "
"her that the action was successful::"
msgstr ""

# 3d00595f7dc14a5dab8ad55db3fcbcae
#: ../../ref/contrib/admin/actions.txt:202
msgid ""
"This make the action match what the admin itself does after successfully "
"performing an action:"
msgstr ""

# ad7b3392f04f4590962921346cdbcbb2
#: ../../ref/contrib/admin/actions.txt:208
msgid "Actions that provide intermediate pages"
msgstr ""

# aa8a6ffa50c14c1eba6c27a12f5713c5
#: ../../ref/contrib/admin/actions.txt:210
msgid ""
"By default, after an action is performed the user is simply redirected back "
"to the original change list page. However, some actions, especially more "
"complex ones, will need to return intermediate pages. For example, the built-"
"in delete action asks for confirmation before deleting the selected objects."
msgstr ""

# ff600a135cc4408db728998a891d9643
#: ../../ref/contrib/admin/actions.txt:216
msgid ""
"To provide an intermediary page, simply return an :class:`~django.http."
"HttpResponse` (or subclass) from your action. For example, you might write a "
"simple export function that uses Django's :doc:`serialization functions </"
"topics/serialization>` to dump some selected objects as JSON::"
msgstr ""

# d7f4c0fd0ea84e7cb1a0a1ef011a06c3
#: ../../ref/contrib/admin/actions.txt:230
msgid ""
"Generally, something like the above isn't considered a great idea. Most of "
"the time, the best practice will be to return an :class:`~django.http."
"HttpResponseRedirect` and redirect the user to a view you've written, "
"passing the list of selected objects in the GET query string. This allows "
"you to provide complex interaction logic on the intermediary pages. For "
"example, if you wanted to provide a more complete export function, you'd "
"want to let the user choose a format, and possibly a list of fields to "
"include in the export. The best thing to do would be to write a small action "
"that simply redirects to your custom export view::"
msgstr ""

# 0bfdd551973e4b01b27e5eadb8d6bc72
#: ../../ref/contrib/admin/actions.txt:249
msgid ""
"As you can see, the action is the simple part; all the complex logic would "
"belong in your export view. This would need to deal with objects of any "
"type, hence the business with the ``ContentType``."
msgstr ""

# 8875c6256af64ac5aaeea5ccd6e57e85
#: ../../ref/contrib/admin/actions.txt:253
msgid "Writing this view is left as an exercise to the reader."
msgstr ""

# 851f666a3c1e4bf1b314a44db515e91c
#: ../../ref/contrib/admin/actions.txt:258
msgid "Making actions available site-wide"
msgstr ""

# b70913ef1654486f8f5da5e9d31f2f7a
#: ../../ref/contrib/admin/actions.txt:262
msgid ""
"Some actions are best if they're made available to *any* object in the admin "
"site -- the export action defined above would be a good candidate. You can "
"make an action globally available using :meth:`AdminSite.add_action()`. For "
"example::"
msgstr ""

# 2528e88c05de4376a493f2533f3cba18
#: ../../ref/contrib/admin/actions.txt:271
msgid ""
"This makes the `export_selected_objects` action globally available as an "
"action named `\"export_selected_objects\"`. You can explicitly give the "
"action a name -- good if you later want to programatically :ref:`remove the "
"action <disabling-admin-actions>` -- by passing a second argument to :meth:"
"`AdminSite.add_action()`::"
msgstr ""

# ebe4a3672fcd497685d72473ce5a2376
#: ../../ref/contrib/admin/actions.txt:282
msgid "Disabling actions"
msgstr ""

# 3770044677c34ab8b6ef38e5bafc6b01
#: ../../ref/contrib/admin/actions.txt:284
msgid ""
"Sometimes you need to disable certain actions -- especially those :ref:"
"`registered site-wide <adminsite-actions>` -- for particular objects. "
"There's a few ways you can disable actions:"
msgstr ""

# 9e6c1d8fd6a7493e9c75530ca9ed10f7
#: ../../ref/contrib/admin/actions.txt:289
msgid "Disabling a site-wide action"
msgstr ""

# b81fde47a01e474f9d81cfbbcbf6a4e8
#: ../../ref/contrib/admin/actions.txt:293
msgid ""
"If you need to disable a :ref:`site-wide action <adminsite-actions>` you can "
"call :meth:`AdminSite.disable_action()`."
msgstr ""

# a14837da5bf2496e98fd836dfabd26c7
#: ../../ref/contrib/admin/actions.txt:296
msgid ""
"For example, you can use this method to remove the built-in \"delete "
"selected objects\" action::"
msgstr ""

# a70adf84f49547ec92e9581f8392669e
#: ../../ref/contrib/admin/actions.txt:301
msgid ""
"Once you've done the above, that action will no longer be available site-"
"wide."
msgstr ""

# af6942a0741c4d329cbb1fcc33ddf7db
#: ../../ref/contrib/admin/actions.txt:304
msgid ""
"If, however, you need to re-enable a globally-disabled action for one "
"particular model, simply list it explicitly in your ``ModelAdmin.actions`` "
"list::"
msgstr ""

# bc16d340faf04f7ab8bc95c4a4c37c78
#: ../../ref/contrib/admin/actions.txt:323
msgid "Disabling all actions for a particular :class:`ModelAdmin`"
msgstr ""

# a27eade2be12455b9ee0f977e8c8fb35
#: ../../ref/contrib/admin/actions.txt:325
msgid ""
"If you want *no* bulk actions available for a given :class:`ModelAdmin`, "
"simply set :attr:`ModelAdmin.actions` to ``None``::"
msgstr ""

# 7baa7ff85853439b9fb5ea7d1fce7eaf
#: ../../ref/contrib/admin/actions.txt:331
msgid ""
"This tells the :class:`ModelAdmin` to not display or allow any actions, "
"including any :ref:`site-wide actions <adminsite-actions>`."
msgstr ""

# ec1f7758099848c980122bff7edf4567
#: ../../ref/contrib/admin/actions.txt:335
msgid "Conditionally enabling or disabling actions"
msgstr ""

# 4c5d740996c84fac8cfdfd44bf28e08f
#: ../../ref/contrib/admin/actions.txt:339
msgid ""
"Finally, you can conditionally enable or disable actions on a per-request "
"(and hence per-user basis) by overriding :meth:`ModelAdmin.get_actions`."
msgstr ""

# e7a3f3f854bd4fd49d926ed035022ea2
#: ../../ref/contrib/admin/actions.txt:342
msgid ""
"This returns a dictionary of actions allowed. The keys are action names, and "
"the values are ``(function, name, short_description)`` tuples."
msgstr ""

# 203f20d7cb8f47c8940757fda722b771
#: ../../ref/contrib/admin/actions.txt:345
msgid ""
"Most of the time you'll use this method to conditionally remove actions from "
"the list gathered by the superclass. For example, if I only wanted users "
"whose names begin with 'J' to be able to delete objects in bulk, I could do "
"the following::"
msgstr ""

# 67581ccc5d8c430692f9c5860f8de31c
#: ../../ref/contrib/admin/admindocs.txt:3
msgid "The Django admin documentation generator"
msgstr ""

# 15a95bb517d6404688b0ae021530a6e6
#: ../../ref/contrib/admin/admindocs.txt:10
msgid ""
"Django's :mod:`~django.contrib.admindocs` app pulls documentation from the "
"docstrings of models, views, template tags, and template filters for any app "
"in :setting:`INSTALLED_APPS` and makes that documentation available from "
"the :mod:`Django admin <django.contrib.admin>`."
msgstr ""

# e0e75ae3424c499da5c33ccef30e2c6a
#: ../../ref/contrib/admin/admindocs.txt:15
msgid ""
"In addition to providing offline documentation for all template tags and "
"template filters that ship with Django, you may utilize admindocs to quickly "
"document your own code."
msgstr ""

# e430619482b94cab84737a3e548832c0
# 493186c784e34ce6a0911fa0058fe02d
# ac243a62516a482e8785f50c58cefc56
# be5fe424f058446faeb47efac100abbd
# 1699aaab471c4f9faa6e20e97ce66294
# 44cfd1089a904bd19de925cfcbf55a12
# 5de4263368d3433895fb48cf6697bfd9
# 116812cad5944fb69d52f1117e11193a
# 0ed46870b4fd408f82431717cf40dea3
#: ../../ref/contrib/admin/admindocs.txt:20
#: ../../ref/contrib/admin/index.txt:15
#: ../../ref/contrib/comments/moderation.txt:19
#: ../../ref/contrib/contenttypes.txt:13
#: ../../ref/contrib/formtools/form-preview.txt:18
#: ../../ref/contrib/gis/gdal.txt:30
#: ../../ref/contrib/gis/install/index.txt:10
#: ../../ref/contrib/sitemaps.txt:14 ../../ref/contrib/syndication.txt:26
msgid "Overview"
msgstr ""

# 91afceab759d42f2baec0cd85bb613ce
#: ../../ref/contrib/admin/admindocs.txt:22
msgid ""
"To activate the :mod:`~django.contrib.admindocs`, you will need to do the "
"following:"
msgstr ""

# 8ad5475124b34a8cac9c955fdba51c63
#: ../../ref/contrib/admin/admindocs.txt:25
msgid "Add :mod:`django.contrib.admindocs` to your :setting:`INSTALLED_APPS`."
msgstr ""

# 871dd7957dee4af3bcbde5b9ee42881f
#: ../../ref/contrib/admin/admindocs.txt:26
msgid ""
"Add ``(r'^admin/doc/', include('django.contrib.admindocs.urls'))`` to your "
"``urlpatterns``. Make sure it's included *before* the ``r'^admin/'`` entry, "
"so that requests to ``/admin/doc/`` don't get handled by the latter entry."
msgstr ""

# 55556d66bc7c47daa45b3cc17163e07d
#: ../../ref/contrib/admin/admindocs.txt:30
msgid "Install the docutils Python module (http://docutils.sf.net/)."
msgstr ""

# 85c38d2870854a67b8e5524c814a5596
#: ../../ref/contrib/admin/admindocs.txt:31
msgid ""
"**Optional:** Linking to templates requires the :setting:`ADMIN_FOR` setting "
"to be configured."
msgstr ""

# 28583d1d51f048a188333d94445da9da
#: ../../ref/contrib/admin/admindocs.txt:33
msgid ""
"**Optional:** Using the admindocs bookmarklets requires the :mod:"
"`XViewMiddleware<django.middleware.doc>` to be installed."
msgstr ""

# a0fff7c599de4720ae20fed3d33e76e6
#: ../../ref/contrib/admin/admindocs.txt:36
msgid ""
"Once those steps are complete, you can start browsing the documentation by "
"going to your admin interface and clicking the \"Documentation\" link in the "
"upper right of the page."
msgstr ""

# b852f841cc8a4179a0c321b6176d940e
#: ../../ref/contrib/admin/admindocs.txt:41
msgid "Documentation helpers"
msgstr ""

# 7c1bb357dc8d4ecab6892fcc80eacc21
#: ../../ref/contrib/admin/admindocs.txt:43
msgid ""
"The following special markup can be used in your docstrings to easily create "
"hyperlinks to other components:"
msgstr ""

# 1bf9c973b3804a8b85e806acac170e8f
#: ../../ref/contrib/admin/admindocs.txt:47
msgid "Django Component"
msgstr ""

# ebc5284b01234d289ec7dd3b973b2ed1
#: ../../ref/contrib/admin/admindocs.txt:47
msgid "reStructuredText roles"
msgstr ""

# 090a4bab5da544a8896a17307bdf3274
# 6a84b854d00943bbb6e8e2da96090460
# 621787795db44a3587e2e4d6e046ad26
#: ../../ref/contrib/admin/admindocs.txt:49 ../../ref/models/index.txt:3
#: ../../ref/unicode.txt:230
msgid "Models"
msgstr ""

# c527500a1c424be9a0be36f01902464a
#: ../../ref/contrib/admin/admindocs.txt:49
msgid "``:model:`appname.ModelName```"
msgstr ""

# 02089bbb0f804680b91ffcfd0f7bf43a
#: ../../ref/contrib/admin/admindocs.txt:50
msgid "Views"
msgstr ""

# 83a897c593544a2f95f7e3f0b50260dc
#: ../../ref/contrib/admin/admindocs.txt:50
msgid "``:view:`appname.view_name```"
msgstr ""

# b15a644584c24d1884c1ce2b22627d80
# 0c140b16c068487f86b5bcf042b52d30
# f779a52b67e346e98a92d7417efafa11
#: ../../ref/contrib/admin/admindocs.txt:51
#: ../../ref/contrib/staticfiles.txt:367 ../../ref/contrib/webdesign.txt:19
msgid "Template tags"
msgstr ""

# df4afcca86064605bb46d9454c12d60e
#: ../../ref/contrib/admin/admindocs.txt:51
msgid "``:tag:`tagname```"
msgstr ""

# 3d4efaf8b2c44d17b287094d2139220b
#: ../../ref/contrib/admin/admindocs.txt:52
msgid "Template filters"
msgstr ""

# 85f320e2086e4e7f9d6ac7a1acbc2c8a
#: ../../ref/contrib/admin/admindocs.txt:52
msgid "``:filter:`filtername```"
msgstr ""

# 388085cdfbc24fb0b2ba607020fe89e8
# fc0c56ebf0a9460ca41dbf87729e12b5
# 2982b3bd69b448a5adcce641ba96f1fe
#: ../../ref/contrib/admin/admindocs.txt:53 ../../ref/templates/index.txt:3
#: ../../ref/unicode.txt:300
msgid "Templates"
msgstr ""

# ba1155d3475a46ee88963c108272200c
#: ../../ref/contrib/admin/admindocs.txt:53
msgid "``:template:`path/to/template.html```"
msgstr ""

# cbb1e7c3c0ad46469a5fb9b3f9655044
#: ../../ref/contrib/admin/admindocs.txt:57
msgid "Model reference"
msgstr ""

# 77b7fca60e8e43d2be03cf8fa6c0c8a7
#: ../../ref/contrib/admin/admindocs.txt:59
msgid ""
"The **models** section of the ``admindocs`` page describes each model in the "
"system along with all the fields and methods (without any arguments) "
"available on it. While model properties don't have any arguments, they are "
"not listed. Relationships to other models appear as hyperlinks. Descriptions "
"are pulled from ``help_text`` attributes on fields or from docstrings on "
"model methods."
msgstr ""

# 0ce8f8dff24b47e499e23092c20783f1
#: ../../ref/contrib/admin/admindocs.txt:65
msgid "A model with useful documentation might look like this::"
msgstr ""

# 8336f9aade5b4143b7b9d5a3189e91b5
#: ../../ref/contrib/admin/admindocs.txt:83
msgid "View reference"
msgstr ""

# 2ef142f5ebc442cf85fd309419f74ee7
#: ../../ref/contrib/admin/admindocs.txt:85
msgid ""
"Each URL in your site has a separate entry in the ``admindocs`` page, and "
"clicking on a given URL will show you the corresponding view. Helpful things "
"you can document in your view function docstrings include:"
msgstr ""

# 0d5cb31de3ae4f34bdce20287996bdc0
#: ../../ref/contrib/admin/admindocs.txt:89
msgid "A short description of what the view does."
msgstr ""

# 96f08ef4076041d58247afbc474eed47
#: ../../ref/contrib/admin/admindocs.txt:90
msgid ""
"The **context**, or a list of variables available in the view's template."
msgstr ""

# ccd0e9c3947e46cd94da09e9d322e1c2
#: ../../ref/contrib/admin/admindocs.txt:91
msgid "The name of the template or templates that are used for that view."
msgstr ""

# 94a7447bf73740a6b6eec7a8f59e9f74
# e908d9ee985d48c68eb74a559f02342f
# aa91140b7c984bf99e8b983f0501d8cc
# 488b8cee61e247339a2f75e9fc451935
# e3ab5a86fbb3467b8c95e99ba5b1865f
# a09b638827934456b5c2882900196823
# 85b1da0acfcc454bb098739b39d0d260
# 85d8a44c3bcb4ee6b517a069e514b02e
# 19a5357189bc4774900c2205b04a84af
# 479044c22dc04b958643aa4b927cd15a
# 2c47f00368da4723a2153035ed6dcae4
# 31dad20d3c4d49f5b0744390401d488e
# add34239631c4a2aa70df8e1bd59b560
# bafe557da9c145f3bbdbd2c52f33e345
# 3b1f595779b7477e8be00d2a025c2387
# 4e12322e2e3446619ff21c4f2fa4da59
# 701e163e62414e7fb69e222e7ba37d6a
# ea62a820998340d8b05b75ab034780e2
# 349aea0731484a88954fb80046e16d0a
# 680b36b167e94cb6ac20cae600d0a888
# 0e5556dd722843bf9015e9633c4e1a00
# ea5831b2398a41178b9c2817bbdc4d72
# 3caaff08481c4ca88f17e40b213e3335
# 249ac3adb6674d56bee1c7f7e3e62e52
# c37b569309664d21961c53eced95a913
# 0354d877c7cf47629f4f7f8084727211
# 14f387e4b4ca4f2ebffbdadbff7162db
# 96ea68c26ba647b1899bdda6f2e3f4f5
# 86d2ad6ca6d04742b9b78b3dd0c7f968
# d35a6ffb073744bca6fa3cfbb7937f46
# 422feed7750246ac874785265756f234
# e41aaee9d7104c53ac22c0d8cf823168
# eab7dd0aae054903ade17a31aaaebca3
# 0710164357da4a768c9ff406770cb016
# 9575b0707a4d42869457f6caa0d985c7
# ff0b66d2512e474c900459f34d35524b
# 5f93960eea604b86840a85704fdb5306
# 78241441f08c4d389e1a1b5b394bc0f4
# 57ada44fc6814c429edc1b9c00c40954
# 4ab8e7c4dad04c0e8381be1c0a879964
# 8d9900c9e9d74cada4197a3674306f1f
# f3f5bc0188ff4a7fa96e746c3f671c6f
# 81320ba235dc485d84220783c89b179e
# 53f12e4407a74e6c9c9fa342b72112c5
# 286bcd41c7a9479e90d4f2c4b3a204af
# 089e4303e81d43fba92122272cdad067
# 8c2fcdb2ab034b4386b88195d8d851bd
# ec98c2fab73842e39664e93ba1ffe994
# ec37056f2c1c4bca971c769033486dea
# 2cc12a2b68874f83bf465ef70918fbef
# a45e974244124796a8143bff69cfee1f
# 88e6fed4aa994477b96be14d19989f52
# 8b0b989a1d99484e8968806a8285fca5
# c0a542f2b5eb4302a2944f759c8c7df9
# 138561200f5f4aafa64fde3f667f5136
# e4f1513cb2dd4bbfa390746cb0156206
# 3ec9a640d91e47b29853b92d76bb8976
# 073dc851ccc448dca2222d0f0865441e
# 505796d8a8d34b4f9e4b70ee5b355684
# f30b45d1dffe4ddcbc4661542c5e71a0
# 157c4a8dc4094d29a32a6d501423a5a7
# 92b732124e9e408a9ba08ecd371bd9ac
# 3ac8f40863b8471e83878e39122133cc
# 5803a978da1b4e799609598d20ba5f7e
# 7a9279943cf14897ba8445d4952e479d
# e12f09ea3e9246f5948473b458fabb39
# b1cd7715bd544d969a8fa5e70e85cbb3
# 9b870ac8e728429e94f004f5131728bc
# 0173f40c185044f59d69f7ee8879b0d5
# 2dddcbebdb0e4df59368464548cab517
# 2cc506f3cb5d45719511cfce8c98245f
# 90a1df72cbc84a8ba809dfb9c1af66b1
#: ../../ref/contrib/admin/admindocs.txt:93
#: ../../ref/contrib/admin/index.txt:520
#: ../../ref/contrib/comments/index.txt:95
#: ../../ref/contrib/comments/index.txt:111
#: ../../ref/contrib/comments/index.txt:143
#: ../../ref/contrib/comments/index.txt:171
#: ../../ref/contrib/comments/index.txt:194
#: ../../ref/contrib/gis/db-api.txt:106 ../../ref/contrib/gis/geos.txt:759
#: ../../ref/contrib/staticfiles.txt:213 ../../ref/django-admin.txt:913
#: ../../ref/django-admin.txt:989 ../../ref/models/instances.txt:433
#: ../../ref/models/instances.txt:479 ../../ref/models/instances.txt:488
#: ../../ref/models/instances.txt:632 ../../ref/models/querysets.txt:470
#: ../../ref/models/querysets.txt:1004 ../../ref/models/querysets.txt:1181
#: ../../ref/models/querysets.txt:1199 ../../ref/request-response.txt:283
#: ../../ref/templates/builtins.txt:1070 ../../ref/templates/builtins.txt:1087
#: ../../ref/templates/builtins.txt:1117 ../../ref/templates/builtins.txt:1147
#: ../../ref/templates/builtins.txt:1161 ../../ref/templates/builtins.txt:1174
#: ../../ref/templates/builtins.txt:1187 ../../ref/templates/builtins.txt:1287
#: ../../ref/templates/builtins.txt:1324 ../../ref/templates/builtins.txt:1341
#: ../../ref/templates/builtins.txt:1355 ../../ref/templates/builtins.txt:1395
#: ../../ref/templates/builtins.txt:1433 ../../ref/templates/builtins.txt:1448
#: ../../ref/templates/builtins.txt:1469 ../../ref/templates/builtins.txt:1487
#: ../../ref/templates/builtins.txt:1575 ../../ref/templates/builtins.txt:1593
#: ../../ref/templates/builtins.txt:1606 ../../ref/templates/builtins.txt:1620
#: ../../ref/templates/builtins.txt:1634 ../../ref/templates/builtins.txt:1647
#: ../../ref/templates/builtins.txt:1662 ../../ref/templates/builtins.txt:1677
#: ../../ref/templates/builtins.txt:1691 ../../ref/templates/builtins.txt:1716
#: ../../ref/templates/builtins.txt:1729 ../../ref/templates/builtins.txt:1745
#: ../../ref/templates/builtins.txt:1764 ../../ref/templates/builtins.txt:1815
#: ../../ref/templates/builtins.txt:1828 ../../ref/templates/builtins.txt:1849
#: ../../ref/templates/builtins.txt:1914 ../../ref/templates/builtins.txt:1932
#: ../../ref/templates/builtins.txt:1945 ../../ref/templates/builtins.txt:1967
#: ../../ref/templates/builtins.txt:2035 ../../ref/templates/builtins.txt:2053
#: ../../ref/templates/builtins.txt:2068 ../../ref/templates/builtins.txt:2088
#: ../../ref/templates/builtins.txt:2131 ../../ref/templates/builtins.txt:2144
#: ../../ref/templates/builtins.txt:2188 ../../ref/templates/builtins.txt:2217
#: ../../ref/templates/builtins.txt:2234 ../../ref/templates/builtins.txt:2249
#: ../../ref/templates/builtins.txt:2268 ../../ref/utils.txt:469
#: ../../ref/utils.txt:564 ../../ref/utils.txt:575 ../../ref/utils.txt:711
msgid "For example::"
msgstr ""

# a6c4ec9036904e199155af4b774f6797
#: ../../ref/contrib/admin/admindocs.txt:119
msgid "Template tags and filters reference"
msgstr ""

# 1d119607a02a483bae2896d26893b052
#: ../../ref/contrib/admin/admindocs.txt:121
msgid ""
"The **tags** and **filters** ``admindocs`` sections describe all the tags "
"and filters that come with Django (in fact, the :ref:`built-in tag reference "
"<ref-templates-builtins-tags>` and :ref:`built-in filter reference <ref-"
"templates-builtins-filters>` documentation come directly from those pages). "
"Any tags or filters that you create or are added by a third-party app will "
"show up in these sections as well."
msgstr ""

# 40c6a2f373d14b4f9739517f97c25b3d
#: ../../ref/contrib/admin/admindocs.txt:130
msgid "Template reference"
msgstr ""

# 592c27b5e6c842c9ab29f24e515e0dc8
#: ../../ref/contrib/admin/admindocs.txt:132
msgid ""
"While ``admindocs`` does not include a place to document templates by "
"themselves, if you use the ``:template:`path/to/template.html``` syntax in a "
"docstring the resulting page will verify the path of that template with "
"Django's :ref:`template loaders <template-loaders>`. This can be a handy way "
"to check if the specified template exists and to show where on the "
"filesystem that template is stored."
msgstr ""

# 8d132b507d244907b5ca81def809ff43
#: ../../ref/contrib/admin/admindocs.txt:141
msgid "Included Bookmarklets"
msgstr ""

# f87e30b2bd924ea2a44c50463d4fc6b9
#: ../../ref/contrib/admin/admindocs.txt:143
msgid "Several useful bookmarklets are available from the ``admindocs`` page:"
msgstr ""

# 6dd47b9229164f939fefa42889bc345d
#: ../../ref/contrib/admin/admindocs.txt:147
msgid "Documentation for this page"
msgstr ""

# 46bd815cf5cd4571bad0a174270e4494
#: ../../ref/contrib/admin/admindocs.txt:146
msgid ""
"Jumps you from any page to the documentation for the view that generates "
"that page."
msgstr ""

# 3163aea198a34fd586e0e6af01a8ce23
#: ../../ref/contrib/admin/admindocs.txt:151
msgid "Show object ID"
msgstr ""

# a54a587b49c04d0eadb25aeaf73b9bd2
#: ../../ref/contrib/admin/admindocs.txt:150
msgid ""
"Shows the content-type and unique ID for pages that represent a single "
"object."
msgstr ""

# 1a67951aecc64b1fb5f3d23502b1a1c6
#: ../../ref/contrib/admin/admindocs.txt:154
msgid "Edit this object"
msgstr ""

# 8cc3e2de31ea49e69c0e378de23e7fa0
#: ../../ref/contrib/admin/admindocs.txt:154
msgid "Jumps to the admin page for pages that represent a single object."
msgstr ""

# ce788fb9649d49348650cb4edec07c06
#: ../../ref/contrib/admin/admindocs.txt:156
msgid ""
"Using these bookmarklets requires that you are either logged into the :mod:"
"`Django admin <django.contrib.admin>` as a :class:`~django.contrib.auth."
"models.User` with :attr:`~django.contrib.auth.models.User.is_staff` set to "
"`True`, or that the :mod:`django.middleware.doc` middleware and :mod:"
"`XViewMiddleware <django.middleware.doc>` are installed and you are "
"accessing the site from an IP address listed in :setting:`INTERNAL_IPS`."
msgstr ""

# 75c113a5ac934676bbcbbb970ee80806
#: ../../ref/contrib/admin/index.txt:3
msgid "The Django admin site"
msgstr ""

# 442b46cc270f449b803609665612c073
#: ../../ref/contrib/admin/index.txt:8
msgid ""
"One of the most powerful parts of Django is the automatic admin interface. "
"It reads metadata in your model to provide a powerful and production-ready "
"interface that content producers can immediately use to start adding content "
"to the site. In this document, we discuss how to activate, use and customize "
"Django's admin interface."
msgstr ""

# f4fb18d51ad1407ebe25ee5e551212aa
#: ../../ref/contrib/admin/index.txt:17
msgid "There are seven steps in activating the Django admin site:"
msgstr ""

# 4a2c1b515e234c8f89187df139d8f38a
#: ../../ref/contrib/admin/index.txt:19
msgid ""
"Add ``'django.contrib.admin'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# 71ef24ff16a34e2d889c4e136a0e01e4
#: ../../ref/contrib/admin/index.txt:22
msgid ""
"The admin has four dependencies - :mod:`django.contrib.auth`, :mod:`django."
"contrib.contenttypes`, :mod:`django.contrib.messages` and :mod:`django."
"contrib.sessions`.  If these applications are not in your :setting:"
"`INSTALLED_APPS` list, add them."
msgstr ""

# d88aa17985f84d9fa151fdb28727cce7
#: ../../ref/contrib/admin/index.txt:28
msgid ""
"Add ``django.contrib.messages.context_processors.messages`` to :setting:"
"`TEMPLATE_CONTEXT_PROCESSORS` as well as :class:`django.contrib.auth."
"middleware.AuthenticationMiddleware` and :class:`django.contrib.messages."
"middleware.MessageMiddleware` to :setting:`MIDDLEWARE_CLASSES`. (These are "
"all active by default, so you only need to do this if you've manually "
"tweaked the settings.)"
msgstr ""

# 435171b7b53942d8aabdfd836c3361bb
#: ../../ref/contrib/admin/index.txt:35
msgid ""
"Determine which of your application's models should be editable in the admin "
"interface."
msgstr ""

# 3a3e0d9a96064267bb29402fe3d2a21c
#: ../../ref/contrib/admin/index.txt:38
msgid ""
"For each of those models, optionally create a ``ModelAdmin`` class that "
"encapsulates the customized admin functionality and options for that "
"particular model."
msgstr ""

# 64fd47903e4842f8a26e408aad64015f
#: ../../ref/contrib/admin/index.txt:42
msgid ""
"Instantiate an ``AdminSite`` and tell it about each of your models and "
"``ModelAdmin`` classes."
msgstr ""

# 53f78e91d82d49b88b6358c96e3591f3
#: ../../ref/contrib/admin/index.txt:45
msgid "Hook the ``AdminSite`` instance into your URLconf."
msgstr ""

# 36db3da6e39947b18befb67b5a567194
#: ../../ref/contrib/admin/index.txt:47
msgid ""
"After you've taken these steps, you'll be able to use your Django admin site "
"by visiting the URL you hooked it into (``/admin/``, by default)."
msgstr ""

# 5e9f09b5a411418e80c01bb4588778e8
#: ../../ref/contrib/admin/index.txt:51
msgid "Other topics"
msgstr ""

# b3a176f3bbfa476ebe6385732159f45d
#: ../../ref/contrib/admin/index.txt:61
msgid ""
"For information about serving the static files (images, JavaScript, and CSS) "
"associated with the admin in production, see :ref:`serving-files`."
msgstr ""

# 439e4630fa0e4ca584e1c6b0b522d726
#: ../../ref/contrib/admin/index.txt:64
msgid "Having problems?  Try :doc:`/faq/admin`."
msgstr ""

# 04ef3a9ac0884e82a5ab7c2492494911
#: ../../ref/contrib/admin/index.txt:67
msgid "``ModelAdmin`` objects"
msgstr ""

# ddb8ececc654470c8f2e668fc2afc9e7
#: ../../ref/contrib/admin/index.txt:71
msgid ""
"The ``ModelAdmin`` class is the representation of a model in the admin "
"interface. These are stored in a file named ``admin.py`` in your "
"application. Let's take a look at a very simple example of the "
"``ModelAdmin``::"
msgstr ""

# f27fe01b7ce74185896d97aa0f00f560
#: ../../ref/contrib/admin/index.txt:83
msgid "Do you need a ``ModelAdmin`` object at all?"
msgstr ""

# 0f25fce9e8b54e2784e1339955d027c2
#: ../../ref/contrib/admin/index.txt:85
msgid ""
"In the preceding example, the ``ModelAdmin`` class doesn't define any custom "
"values (yet). As a result, the default admin interface will be provided. If "
"you are happy with the default admin interface, you don't need to define a "
"``ModelAdmin`` object at all -- you can register the model class without "
"providing a ``ModelAdmin`` description. The preceding example could be "
"simplified to::"
msgstr ""

# 5837da53fc394b3bb0ecf37e647a13e0
#: ../../ref/contrib/admin/index.txt:98
msgid "``ModelAdmin`` options"
msgstr ""

# 52b26ecadb9d468e8ee44521017d8630
#: ../../ref/contrib/admin/index.txt:100
msgid ""
"The ``ModelAdmin`` is very flexible. It has several options for dealing with "
"customizing the interface. All options are defined on the ``ModelAdmin`` "
"subclass::"
msgstr ""

# 48de105e83b849b4be61d99c59ff58d6
#: ../../ref/contrib/admin/index.txt:109
msgid ""
"A list of actions to make available on the change list page. See :doc:`/ref/"
"contrib/admin/actions` for details."
msgstr ""

# dee541245b3c4214b6bf70f2689d15d0
#: ../../ref/contrib/admin/index.txt:115
msgid ""
"Controls where on the page the actions bar appears. By default, the admin "
"changelist displays actions at the top of the page (``actions_on_top = True; "
"actions_on_bottom = False``)."
msgstr ""

# 8f4913a86e594bc5b2ba41d51b9f0698
#: ../../ref/contrib/admin/index.txt:121
msgid ""
"Controls whether a selection counter is displayed next to the action "
"dropdown. By default, the admin changelist will display it "
"(``actions_selection_counter = True``)."
msgstr ""

# ca53dabe671340aa95f2afb05bf7243e
#: ../../ref/contrib/admin/index.txt:127
msgid ""
"Set ``date_hierarchy`` to the name of a ``DateField`` or ``DateTimeField`` "
"in your model, and the change list page will include a date-based drilldown "
"navigation by that field."
msgstr ""

# d729379f55d14381b55b5e2024535dfa
# 82a04082ea47402a9fa2c42d2f301460
# a56657fa24a245d38bd484b88f478c28
# 402844e135d440e7ae9325d592eade13
# 634189c2636b4e3b8f7f51b2f2b56bfe
# b9637d7d48dc4020ad07b4a2da529bd3
# 5fa7707c3a8345c48df01a809980dfd4
# 2ca1d3a9915241ff86c54f6ac36d114a
# 6d513fc39ab84e6098d3c3c85edbb8bb
# a17c1487fd4f452782eeda187a0f4b76
# cdce80de89a84ff2a38fd49f8ab4876f
# 8eafe189da91402fad44017c2b08e43b
# a7a6c7430c974c0abf649928cc152d1d
# 668b2547a2174b1a95539ca678109b22
# ae916fb53870421791b570ad5a82df0d
# bc4faf2178d647a9a127c073ba520b08
# 92d5ff51c659468ab1de51de992e5e06
# a785d63fc31a47cfbf1407ac94dece98
# e7a214303ea84544b6178015cc011eed
# e0245c3b0263462fb2c5c1ff24c6b57b
# 61308846c82542b8a54f23ee1b6d0e99
# eadc6570f6134e60bb81693a3268ec09
# ad855e397da9426a9ca75f2aac54f371
# 1d712ca5a4d241499faf03a5613b3bc6
# 2960ebd14c7545b287687538225bb1a8
# dedfd2ab431442e095b935f595bc8423
# 91ab6a5a2e6449f1b955a9fc6157bd14
# bed07064ad1446a4aa30b0e5f10a0cbf
# b95769f06bdc48e6802d58df724e012d
# 58f05f5156c740679f51055bb0ab5a7f
# e9074f7ac88941548add211b77851d6c
# 897a7013ff12478ab13b884f11d36955
# bf60e1dce766456795263497887338ca
# 1f61bb7e95414c21b3011e4c41d33ce3
# 04b3dea9e3c2449db61f29eb28f8373a
# 0c54a48944ff46b09cbbfbe35c2202be
# ce73e0769b4e4d03b7afe611e52425c5
# 843e299346364b5ba84644a1a70eae9f
# 844de2f9677143cc946042c07592f320
# 4336a31d6b544994884465dc3eddb56a
# 2afa9e38866e4bffbfa37c42c90b836c
# f28f72e578374e5592795b1c4b92a1c4
# 65a06c7202c84289a985585062c6f070
# 7b6a74462e6b48be971b31576df00179
# f47b3ec6748341b2838146fb2a82277e
# 5718c1b6be88446396621bf3e0f604f5
# bb88363de2a140508b6df9e59503efc9
# 486d5ee6e5ac432c91533b77446b039a
# 616d3afada7246f79ff8b2c653948863
# e2db91b9cbbf485ebe4f9a17b17a016d
# 42767409304d4572b5ab4a41497c648e
# 703795e098c147059bd4c2e2010f3024
# 14d694791d32430893d4fab22369cd2f
# 55c9ca33b1b94aa5b73fe132937c0be8
# 0a9886a466ae43b4a7976495984a7477
# 05d3afb3dae542488d495458149b43c2
# f07dfe5a61164277a6c2bb8b8cd99856
# 41719f2aac714505ae2603dcbcd47cea
# 77e48887080e463aae381baf6c0d2168
# 40ed628d424f4f7f98d49ae41d0735ed
# a4731bdc59cb4ac29a0366d3e93a4b5f
# 921e902475514497868c78a20a103e55
# 0ac632df1ef548fca20ab63935b9c6be
# dfc93e2477d14a6d907d5312ec6f1678
# 080ee4fee79f48f3afbe901480bed82c
# f9bf76106d3144f791cf754432d75361
# 4b3ff3934e5f43b8adde1cfdc0f32c7d
# 733e09dc617446279613f28925b97274
# 7e9695cf500e42b1aadb16c7b933b8c2
# 6ed861eeeacd4e7da8378244260c47a0
# 1f18496ae4a347eebca1cdb8ec9e13bb
# bf2175044c6c4f02b173fbe0d23370f2
# f08ab1c45397491987b9c2bee592610d
# a54efb0f852c4a60ab1daf16f5b48b71
# bc319644304b4dd495aa2b7cc087b464
# e6ecf4a528d646af93a0925da17af19e
# fe0ad66b1cdd481898d766ed7caf9587
# 714de53c26a045f5ac0c89893cc2f64b
# 0aff67123abb4421af338b08c3a091b5
# 4a98eb6235fe4561bf1c8af5630c705f
# d44e7ad8fa2d4d9cb7573a3282f51ce2
#: ../../ref/contrib/admin/index.txt:131 ../../ref/contrib/admin/index.txt:251
#: ../../ref/contrib/admin/index.txt:276 ../../ref/contrib/admin/index.txt:396
#: ../../ref/contrib/csrf.txt:400 ../../ref/contrib/gis/gdal.txt:894
#: ../../ref/contrib/gis/geoquerysets.txt:37
#: ../../ref/contrib/gis/geoquerysets.txt:59
#: ../../ref/contrib/gis/geoquerysets.txt:81
#: ../../ref/contrib/gis/geoquerysets.txt:102
#: ../../ref/contrib/gis/geoquerysets.txt:129
#: ../../ref/contrib/gis/geoquerysets.txt:149
#: ../../ref/contrib/gis/geoquerysets.txt:170
#: ../../ref/contrib/gis/geoquerysets.txt:190
#: ../../ref/contrib/gis/geoquerysets.txt:210
#: ../../ref/contrib/gis/geoquerysets.txt:245
#: ../../ref/contrib/gis/geoquerysets.txt:285
#: ../../ref/contrib/gis/geoquerysets.txt:309
#: ../../ref/contrib/gis/geoquerysets.txt:326
#: ../../ref/contrib/gis/geoquerysets.txt:348
#: ../../ref/contrib/gis/geoquerysets.txt:371
#: ../../ref/contrib/gis/geoquerysets.txt:389
#: ../../ref/contrib/gis/geoquerysets.txt:407
#: ../../ref/contrib/gis/geoquerysets.txt:426
#: ../../ref/contrib/gis/geoquerysets.txt:444
#: ../../ref/contrib/gis/geoquerysets.txt:462
#: ../../ref/contrib/gis/geoquerysets.txt:480
#: ../../ref/contrib/gis/geoquerysets.txt:498
#: ../../ref/contrib/gis/geoquerysets.txt:539
#: ../../ref/contrib/gis/geoquerysets.txt:559
#: ../../ref/contrib/gis/geoquerysets.txt:579
#: ../../ref/contrib/gis/geoquerysets.txt:599
#: ../../ref/contrib/gis/geoquerysets.txt:619
#: ../../ref/contrib/gis/geoquerysets.txt:867
#: ../../ref/contrib/gis/geoquerysets.txt:985
#: ../../ref/contrib/gis/geoquerysets.txt:1018
#: ../../ref/contrib/gis/geoquerysets.txt:1123
#: ../../ref/contrib/gis/geoquerysets.txt:1139
#: ../../ref/contrib/gis/geoquerysets.txt:1155
#: ../../ref/contrib/gis/geoquerysets.txt:1177
#: ../../ref/contrib/gis/geoquerysets.txt:1196
#: ../../ref/contrib/gis/geos.txt:792 ../../ref/contrib/gis/geos.txt:805
#: ../../ref/contrib/gis/geos.txt:821 ../../ref/contrib/gis/geos.txt:830
#: ../../ref/contrib/gis/geos.txt:885 ../../ref/contrib/gis/geos.txt:908
#: ../../ref/models/options.txt:91 ../../ref/models/querysets.txt:264
#: ../../ref/models/querysets.txt:452 ../../ref/models/querysets.txt:896
#: ../../ref/models/querysets.txt:965 ../../ref/models/querysets.txt:1023
#: ../../ref/models/querysets.txt:1406 ../../ref/models/querysets.txt:1432
#: ../../ref/models/querysets.txt:1746 ../../ref/models/querysets.txt:1771
#: ../../ref/models/querysets.txt:1796 ../../ref/models/querysets.txt:1817
#: ../../ref/models/querysets.txt:1874 ../../ref/models/querysets.txt:1910
#: ../../ref/models/querysets.txt:1928 ../../ref/models/querysets.txt:1949
#: ../../ref/models/querysets.txt:1970 ../../ref/models/querysets.txt:1991
#: ../../ref/models/querysets.txt:2022 ../../ref/models/querysets.txt:2040
#: ../../ref/models/querysets.txt:2057 ../../ref/models/querysets.txt:2080
#: ../../ref/models/querysets.txt:2106 ../../ref/models/querysets.txt:2122
#: ../../ref/models/querysets.txt:2149 ../../ref/models/querysets.txt:2173
#: ../../ref/models/relations.txt:41 ../../ref/settings.txt:1295
#: ../../ref/templates/builtins.txt:612 ../../ref/templates/builtins.txt:726
#: ../../ref/templates/builtins.txt:1778 ../../ref/templates/builtins.txt:1788
#: ../../ref/templates/builtins.txt:1795 ../../ref/templates/builtins.txt:1899
msgid "Example::"
msgstr ""

# c0466031f40a452a8f9db9b577a34493
#: ../../ref/contrib/admin/index.txt:135
msgid ""
"This will intelligently populate itself based on available data, e.g. if all "
"the dates are in one month, it'll show the day-level drill-down only."
msgstr ""

# 19b391c128614fa4a0657ff2cb7cf1c0
#: ../../ref/contrib/admin/index.txt:141
msgid ""
"This attribute, if given, should be a list of field names to exclude from "
"the form."
msgstr ""

# fa1413a5c1474ff2b8621074ca17541b
#: ../../ref/contrib/admin/index.txt:144
msgid "For example, let's consider the following model::"
msgstr ""

# 50e8c1e5fd33490c913b2c6e3670e089
#: ../../ref/contrib/admin/index.txt:151
msgid ""
"If you want a form for the ``Author`` model that includes only the ``name`` "
"and ``title`` fields, you would specify ``fields`` or ``exclude`` like this::"
msgstr ""

# fd6acb87914d46979e11580f56dea39a
#: ../../ref/contrib/admin/index.txt:161
msgid ""
"Since the Author model only has three fields, ``name``, ``title``, and "
"``birth_date``, the forms resulting from the above declarations will contain "
"exactly the same fields."
msgstr ""

# d3c137f0f14d4b6e838bd8581200ddbd
#: ../../ref/contrib/admin/index.txt:167
msgid ""
"If you need to achieve simple changes in the layout of fields in the forms "
"of the \"add\" and \"change\" pages like only showing a subset of the "
"available fields, modifying their order or grouping them in rows you can use "
"the ``fields`` option (for more complex layout needs see the :attr:"
"`~ModelAdmin.fieldsets` option described in the next section). For example, "
"you could define a simpler version of the admin form for the :class:`django."
"contrib.flatpages.models.FlatPage` model as follows::"
msgstr ""

# 1088ceb60f0c43948c893f3a31eeb564
#: ../../ref/contrib/admin/index.txt:178
msgid ""
"In the above example, only the fields ``url``, ``title`` and ``content`` "
"will be displayed, sequentially, in the form. ``fields`` can contain values "
"defined in :attr:`ModelAdmin.readonly_fields` to be displayed as read-only."
msgstr ""

# 25dde90768314fe282cebfafe7754d8f
#: ../../ref/contrib/admin/index.txt:183
msgid ""
"The ``fields`` option, unlike :attr:`~ModelAdmin.list_display`, may only "
"contain names of fields on the model or the form specified by :attr:"
"`~ModelAdmin.form`. It may contain callables only if they are listed in :"
"attr:`~ModelAdmin.readonly_fields`."
msgstr ""

# 7a9f1ea9da7446c4bb6415784cfddd28
#: ../../ref/contrib/admin/index.txt:190
msgid ""
"To display multiple fields on the same line, wrap those fields in their own "
"tuple. In this example, the ``url`` and ``title`` fields will display on the "
"same line and the ``content`` field will be displayed below them in its own "
"line::"
msgstr ""

# e505043ed2794219a96bf363264e41d7
# 4b8007eee2ca400faec1d2483bc65325
# 08c00612d57646859c76a34a988a1dff
#: ../../ref/contrib/admin/index.txt:198 ../../ref/contrib/admin/index.txt:326
#: ../../ref/contrib/index.txt:13
msgid "Note"
msgstr ""

# 28cc7780e698498db7f1fc9a3b5dc737
#: ../../ref/contrib/admin/index.txt:200
msgid ""
"This ``fields`` option should not be confused with the ``fields`` dictionary "
"key that is within the :attr:`~ModelAdmin.fieldsets` option, as described in "
"the next section."
msgstr ""

# ac70aeb4ddb6473e8931c2e6c61ae49d
#: ../../ref/contrib/admin/index.txt:204
msgid ""
"If neither ``fields`` nor :attr:`~ModelAdmin.fieldsets` options are present, "
"Django will default to displaying each field that isn't an ``AutoField`` and "
"has ``editable=True``, in a single fieldset, in the same order as the fields "
"are defined in the model."
msgstr ""

# 061c7391570041bbbd5a8db8f9f26811
#: ../../ref/contrib/admin/index.txt:211
msgid ""
"Set ``fieldsets`` to control the layout of admin \"add\" and \"change\" "
"pages."
msgstr ""

# 76971ca3a7774c559eec3fd8c68aed7e
#: ../../ref/contrib/admin/index.txt:213
msgid ""
"``fieldsets`` is a list of two-tuples, in which each two-tuple represents a "
"``<fieldset>`` on the admin form page. (A ``<fieldset>`` is a \"section\" of "
"the form.)"
msgstr ""

# 08391efe11824f5c8c6f84fda8c1060b
#: ../../ref/contrib/admin/index.txt:217
msgid ""
"The two-tuples are in the format ``(name, field_options)``, where ``name`` "
"is a string representing the title of the fieldset and ``field_options`` is "
"a dictionary of information about the fieldset, including a list of fields "
"to be displayed in it."
msgstr ""

# 973f6d8d07bb40f7ba1e12834f9e6a84
#: ../../ref/contrib/admin/index.txt:222
msgid ""
"A full example, taken from the :class:`django.contrib.flatpages.models."
"FlatPage` model::"
msgstr ""

# b26536b301db4f9998f4b2d569595c79
#: ../../ref/contrib/admin/index.txt:236
msgid "This results in an admin page that looks like:"
msgstr ""

# dd5a0aa5cbe94ba08c328d6c3f55b1d9
#: ../../ref/contrib/admin/index.txt:240
msgid ""
"If neither ``fieldsets`` nor :attr:`~ModelAdmin.fields` options are present, "
"Django will default to displaying each field that isn't an ``AutoField`` and "
"has ``editable=True``, in a single fieldset, in the same order as the fields "
"are defined in the model."
msgstr ""

# 4b9a1e3af4774c16aeab396f878bc7f5
#: ../../ref/contrib/admin/index.txt:245
msgid "The ``field_options`` dictionary can have the following keys:"
msgstr ""

# 2f50404cce5b493997e1151fde062ab6
#: ../../ref/contrib/admin/index.txt:271
msgid "``fields``"
msgstr ""

# 01ada7a8ca054fa6976142daa7aeb5bf
#: ../../ref/contrib/admin/index.txt:248
msgid ""
"A tuple of field names to display in this fieldset. This key is required."
msgstr ""

# fcaeeae37a5d4ed1946a302bc985be27
#: ../../ref/contrib/admin/index.txt:257
msgid ""
"As with the :attr:`~ModelAdmin.fields` option, to display multiple fields on "
"the same line, wrap those fields in their own tuple. In this example, the "
"``first_name`` and ``last_name`` fields will display on the same line::"
msgstr ""

# c73f1374c5214e59a6ec9e0efb91c340
#: ../../ref/contrib/admin/index.txt:266
msgid ""
"``fields`` can contain values defined in :attr:`~ModelAdmin.readonly_fields` "
"to be displayed as read-only."
msgstr ""

# be88e5ff96f84941aa4c50774adb445c
#: ../../ref/contrib/admin/index.txt:269
msgid ""
"If you add the name of a callable to ``fields``, the same rule applies as "
"with the :attr:`~ModelAdmin.fields` option: the callable must be listed in :"
"attr:`~ModelAdmin.readonly_fields`."
msgstr ""

# ffe9ad87b6c845f285b7cb5e94508158
#: ../../ref/contrib/admin/index.txt:286
msgid "``classes``"
msgstr ""

# cf62db51de6947eea902bab95e414e7a
#: ../../ref/contrib/admin/index.txt:274
msgid "A list containing extra CSS classes to apply to the fieldset."
msgstr ""

# a3f4bf67985148cebb97c47b4d1225f5
#: ../../ref/contrib/admin/index.txt:282
msgid ""
"Two useful classes defined by the default admin site stylesheet are "
"``collapse`` and ``wide``. Fieldsets with the ``collapse`` style will be "
"initially collapsed in the admin and replaced with a small \"click to expand"
"\" link. Fieldsets with the ``wide`` style will be given extra horizontal "
"space."
msgstr ""

# 4d8ce29f4d0a41568a488b2ee84c46c6
# 321c6b0f1e004a28b174404fd5084b87
# bc04def9d981452887d352a26490fb1f
#: ../../ref/contrib/admin/index.txt:295 ../../ref/contrib/syndication.txt:819
#: ../../ref/contrib/syndication.txt:847
msgid "``description``"
msgstr ""

# 5602f8e2d9e84e5582daa07ca4d9ff3a
#: ../../ref/contrib/admin/index.txt:289
msgid ""
"A string of optional extra text to be displayed at the top of each fieldset, "
"under the heading of the fieldset."
msgstr ""

# 7542bdc6fd3b474eb95067ebe9966626
#: ../../ref/contrib/admin/index.txt:292
msgid ""
"Note that this value is *not* HTML-escaped when it's displayed in the admin "
"interface. This lets you include HTML if you so desire. Alternatively you "
"can use plain text and ``django.utils.html.escape()`` to escape any HTML "
"special characters."
msgstr ""

# b42c6a46c7824e548ea58c992bf90652
#: ../../ref/contrib/admin/index.txt:300
msgid ""
"By default, a :class:`~django.db.models.ManyToManyField` is displayed in the "
"admin site with a ``<select multiple>``. However, multiple-select boxes can "
"be difficult to use when selecting many items. Adding a :class:`~django.db."
"models.ManyToManyField` to this list will instead use a nifty unobtrusive "
"JavaScript \"filter\" interface that allows searching within the options. "
"The unselected and selected options appear in two boxes side by side. See :"
"attr:`~ModelAdmin.filter_vertical` to use a vertical interface."
msgstr ""

# 87f4a33c460d49599a63a4e302dd3ed1
#: ../../ref/contrib/admin/index.txt:311
msgid ""
"Same as :attr:`~ModelAdmin.filter_horizontal`, but uses a vertical display "
"of the filter interface with the box of unselected options appearing above "
"the box of selected options."
msgstr ""

# 8e3c835d361146a5aa88fb429f557df7
#: ../../ref/contrib/admin/index.txt:317
msgid ""
"By default a ``ModelForm`` is dynamically created for your model. It is used "
"to create the form presented on both the add/change pages. You can easily "
"provide your own ``ModelForm`` to override any default form behavior on the "
"add/change pages. Alternatively, you can customize the default form rather "
"than specifying an entirely new one by using the :meth:`ModelAdmin.get_form` "
"method."
msgstr ""

# cae4af20fc4441d08c1dcb2b02389d2e
#: ../../ref/contrib/admin/index.txt:324
msgid ""
"For an example see the section `Adding custom validation to the admin`_."
msgstr ""

# 0a051094a8c545c881d4a63c183c7c0e
#: ../../ref/contrib/admin/index.txt:328
msgid ""
"If your ``ModelForm`` and ``ModelAdmin`` both define an ``exclude`` option "
"then ``ModelAdmin`` takes precedence::"
msgstr ""

# 3ee7cc5be0ae4139a6a9cef6285e8522
#: ../../ref/contrib/admin/index.txt:341
msgid ""
"In the above example, the \"age\" field will be excluded but the \"name\" "
"field will be included in the generated form."
msgstr ""

# b7ea6b465f1e4a5ca63390bbde7ed6e2
#: ../../ref/contrib/admin/index.txt:346
msgid ""
"This provides a quick-and-dirty way to override some of the :class:`~django."
"forms.Field` options for use in the admin. ``formfield_overrides`` is a "
"dictionary mapping a field class to a dict of arguments to pass to the field "
"at construction time."
msgstr ""

# 565ac82922e1437c8646970bac0d5ab2
#: ../../ref/contrib/admin/index.txt:351
msgid ""
"Since that's a bit abstract, let's look at a concrete example. The most "
"common use of ``formfield_overrides`` is to add a custom widget for a "
"certain type of field. So, imagine we've written a ``RichTextEditorWidget`` "
"that we'd like to use for large text fields instead of the default "
"``<textarea>``. Here's how we'd do that::"
msgstr ""

# 019a4de41fc74d41a4b2523ba6a6052a
#: ../../ref/contrib/admin/index.txt:369
msgid ""
"Note that the key in the dictionary is the actual field class, *not* a "
"string. The value is another dictionary; these arguments will be passed to "
"the form field's ``__init__()`` method. See :doc:`/ref/forms/api` for "
"details."
msgstr ""

# 0bbd7457b8544eb6b4952fc1061f00b3
#: ../../ref/contrib/admin/index.txt:376
msgid ""
"If you want to use a custom widget with a relation field (i.e. :class:"
"`~django.db.models.ForeignKey` or :class:`~django.db.models."
"ManyToManyField`), make sure you haven't included that field's name in "
"``raw_id_fields`` or ``radio_fields``."
msgstr ""

# ede9d5cbf74948cfa7993ad5c661719a
#: ../../ref/contrib/admin/index.txt:381
msgid ""
"``formfield_overrides`` won't let you change the widget on relation fields "
"that have ``raw_id_fields`` or ``radio_fields`` set. That's because "
"``raw_id_fields`` and ``radio_fields`` imply custom widgets of their own."
msgstr ""

# 1ba10126354d4e67b46227663059f091
#: ../../ref/contrib/admin/index.txt:388
msgid ""
"See :class:`InlineModelAdmin` objects below as well as :meth:`ModelAdmin."
"get_formsets`."
msgstr ""

# 185a6220c65f42fba185cdaa1cf82c72
#: ../../ref/contrib/admin/index.txt:393
msgid ""
"Set ``list_display`` to control which fields are displayed on the change "
"list page of the admin."
msgstr ""

# d2f26e7d4e9d4c78ac9c7ca087adaa62
#: ../../ref/contrib/admin/index.txt:400
msgid ""
"If you don't set ``list_display``, the admin site will display a single "
"column that displays the ``__unicode__()`` representation of each object."
msgstr ""

# 141d909084a54e83b4a136687be932f0
#: ../../ref/contrib/admin/index.txt:403
msgid "You have four possible values that can be used in ``list_display``:"
msgstr ""

# 22ea3c74186f43d58a12f481d6bba2ab
#: ../../ref/contrib/admin/index.txt:405
msgid "A field of the model. For example::"
msgstr ""

# 1701b63b875d4ac28845d0ed0c008157
#: ../../ref/contrib/admin/index.txt:410
msgid ""
"A callable that accepts one parameter for the model instance. For example::"
msgstr ""

# fa9635509fa745ffb12b5d6d91d21f8a
#: ../../ref/contrib/admin/index.txt:420
msgid ""
"A string representing an attribute on the ``ModelAdmin``. This behaves same "
"as the callable. For example::"
msgstr ""

# ca91b427b88a4ba89d301f16cde6d098
#: ../../ref/contrib/admin/index.txt:430
msgid ""
"A string representing an attribute on the model. This behaves almost the "
"same as the callable, but ``self`` in this context is the model instance. "
"Here's a full model example::"
msgstr ""

# c9c5684a0fea4e9090758e2cd996eb6e
#: ../../ref/contrib/admin/index.txt:445
msgid "A few special cases to note about ``list_display``:"
msgstr ""

# ddd3ccb1ac6643f0a2839d280bd33f68
#: ../../ref/contrib/admin/index.txt:447
msgid ""
"If the field is a ``ForeignKey``, Django will display the ``__unicode__()`` "
"of the related object."
msgstr ""

# 6c966ff60e4143a6821c8d7f7a42b07c
#: ../../ref/contrib/admin/index.txt:450
msgid ""
"``ManyToManyField`` fields aren't supported, because that would entail "
"executing a separate SQL statement for each row in the table. If you want to "
"do this nonetheless, give your model a custom method, and add that method's "
"name to ``list_display``. (See below for more on custom methods in "
"``list_display``.)"
msgstr ""

# ebb4311ca91e4296bf43c506b164ab99
#: ../../ref/contrib/admin/index.txt:456
msgid ""
"If the field is a ``BooleanField`` or ``NullBooleanField``, Django will "
"display a pretty \"on\" or \"off\" icon instead of ``True`` or ``False``."
msgstr ""

# c91fea32057845f1aff0f5200f08879e
#: ../../ref/contrib/admin/index.txt:460
msgid ""
"If the string given is a method of the model, ``ModelAdmin`` or a callable, "
"Django will HTML-escape the output by default. If you'd rather not escape "
"the output of the method, give the method an ``allow_tags`` attribute whose "
"value is ``True``. However, to avoid an XSS vulnerability, you should use :"
"func:`~django.utils.html.format_html` to escape user-provided inputs."
msgstr ""

# 37fe5f393f3049d08f7f761374e0f5b8
# a257261f37d640bb9296e83aba3e77b0
#: ../../ref/contrib/admin/index.txt:467 ../../ref/contrib/admin/index.txt:492
msgid "Here's a full example model::"
msgstr ""

# 12a0d119df794bb187f6cff4f215149c
#: ../../ref/contrib/admin/index.txt:487
msgid ""
"If the string given is a method of the model, ``ModelAdmin`` or a callable "
"that returns True or False Django will display a pretty \"on\" or \"off\" "
"icon if you give the method a ``boolean`` attribute whose value is ``True``."
msgstr ""

# cd50635edd954969922b5c34ced06dde
#: ../../ref/contrib/admin/index.txt:506
msgid ""
"The ``__str__()`` and ``__unicode__()`` methods are just as valid in "
"``list_display`` as any other model method, so it's perfectly OK to do this::"
msgstr ""

# be44546a3fe04994a0ce1e0a7261f57f
#: ../../ref/contrib/admin/index.txt:512
msgid ""
"Usually, elements of ``list_display`` that aren't actual database fields "
"can't be used in sorting (because Django does all the sorting at the "
"database level)."
msgstr ""

# ae5c3550b3ed4f82ad4063bd127e898b
#: ../../ref/contrib/admin/index.txt:516
msgid ""
"However, if an element of ``list_display`` represents a certain database "
"field, you can indicate this fact by setting the ``admin_order_field`` "
"attribute of the item."
msgstr ""

# 9327d20d16ed4a319ebe0dadb4682e68
#: ../../ref/contrib/admin/index.txt:539
msgid ""
"The above will tell Django to order by the ``first_name`` field when trying "
"to sort by ``colored_first_name`` in the admin."
msgstr ""

# e2f88c57365c4198938b9e6f6a2b5d58
#: ../../ref/contrib/admin/index.txt:544
msgid ""
"Set ``list_display_links`` to control which fields in ``list_display`` "
"should be linked to the \"change\" page for an object."
msgstr ""

# e2a6cb6b85cf4f84a5cc5ba6c11b73a4
#: ../../ref/contrib/admin/index.txt:547
msgid ""
"By default, the change list page will link the first column -- the first "
"field specified in ``list_display`` -- to the change page for each item. But "
"``list_display_links`` lets you change which columns are linked. Set "
"``list_display_links`` to a list or tuple of fields (in the same format as "
"``list_display``) to link."
msgstr ""

# c957332ed5a240a99ba2391791f8fe76
#: ../../ref/contrib/admin/index.txt:553
msgid ""
"``list_display_links`` can specify one or many fields. As long as the fields "
"appear in ``list_display``, Django doesn't care how many (or how few) fields "
"are linked. The only requirement is: If you want to use "
"``list_display_links``, you must define ``list_display``."
msgstr ""

# d51c782c991845d19a33914ded25e1f8
#: ../../ref/contrib/admin/index.txt:558
msgid ""
"In this example, the ``first_name`` and ``last_name`` fields will be linked "
"on the change list page::"
msgstr ""

# 835ce75cec06487da84f887f730aeaa2
#: ../../ref/contrib/admin/index.txt:569
msgid ""
"Set ``list_editable`` to a list of field names on the model which will allow "
"editing on the change list page. That is, fields listed in ``list_editable`` "
"will be displayed as form widgets on the change list page, allowing users to "
"edit and save multiple rows at once."
msgstr ""

# 20f09f25a1e040228efd0d2c50cf95f3
#: ../../ref/contrib/admin/index.txt:576
msgid ""
"``list_editable`` interacts with a couple of other options in particular "
"ways; you should note the following rules:"
msgstr ""

# 797e36885d7347ad9311bf29149832b0
#: ../../ref/contrib/admin/index.txt:579
msgid ""
"Any field in ``list_editable`` must also be in ``list_display``. You can't "
"edit a field that's not displayed!"
msgstr ""

# 7a0c55e231334c0b8d516e14da70a217
#: ../../ref/contrib/admin/index.txt:582
msgid ""
"The same field can't be listed in both ``list_editable`` and "
"``list_display_links`` -- a field can't be both a form and a link."
msgstr ""

# 6c3e0e7a66de4e77a1493c6eb3734ebf
#: ../../ref/contrib/admin/index.txt:586
msgid "You'll get a validation error if either of these rules are broken."
msgstr ""

# dbce18f439134f5fba28c44aa3cf818d
#: ../../ref/contrib/admin/index.txt:590
msgid ""
"Set ``list_filter`` to activate filters in the right sidebar of the change "
"list page of the admin, as illustrated in the following screenshot:"
msgstr ""

# c752151553a34ab897edc6003d3c6b9f
#: ../../ref/contrib/admin/index.txt:595
msgid ""
"``list_filter`` should be a list or tuple of elements, where each element "
"should be of one of the following types:"
msgstr ""

# 420810cae1d94a0cb7f86f69d92b9077
#: ../../ref/contrib/admin/index.txt:598
msgid ""
"a field name, where the specified field should be either a ``BooleanField``, "
"``CharField``, ``DateField``, ``DateTimeField``, ``IntegerField``, "
"``ForeignKey`` or ``ManyToManyField``, for example::"
msgstr ""

# e3283cbec0094d778a853f4fad1fd7de
#: ../../ref/contrib/admin/index.txt:605
msgid ""
"Field names in ``list_filter`` can also span relations using the ``__`` "
"lookup, for example::"
msgstr ""

# acb4fe475f684f50b322e76107e0bd7f
#: ../../ref/contrib/admin/index.txt:613
msgid ""
"a class inheriting from ``django.contrib.admin.SimpleListFilter``, which you "
"need to provide the ``title`` and ``parameter_name`` attributes to and "
"override the ``lookups`` and ``queryset`` methods, e.g.::"
msgstr ""

# ca5181bb5c034a2b9bea8662879ce030
#: ../../ref/contrib/admin/index.txt:664
msgid ""
"As a convenience, the ``HttpRequest`` object is passed to the ``lookups`` "
"and ``queryset`` methods, for example::"
msgstr ""

# 4b0211dee0ac4e3da9a3a3ac70bd80e7
#: ../../ref/contrib/admin/index.txt:679
msgid ""
"Also as a convenience, the ``ModelAdmin`` object is passed to the "
"``lookups`` method, for example if you want to base the lookups on the "
"available data::"
msgstr ""

# d0c291055f654dcf803eb5e63b7a6803
#: ../../ref/contrib/admin/index.txt:700
msgid ""
"a tuple, where the first element is a field name and the second element is a "
"class inheriting from ``django.contrib.admin.FieldListFilter``, for example::"
msgstr ""

# a1f3bccf487644e78dce967cc1dd2c0c
#: ../../ref/contrib/admin/index.txt:713
msgid ""
"The ``FieldListFilter`` API is considered internal and might be changed."
msgstr ""

# 0967aab68c624b98995ee76867559ff7
#: ../../ref/contrib/admin/index.txt:718
msgid ""
"It is possible to specify a custom template for rendering a list filter::"
msgstr ""

# a333909c4ad840ddb910c36fb545487d
#: ../../ref/contrib/admin/index.txt:723
msgid ""
"See the default template provided by django (``admin/filter.html``) for a "
"concrete example."
msgstr ""

# 09a79c37a72840beb29c5c2a43a42593
#: ../../ref/contrib/admin/index.txt:730
msgid ""
"Set ``list_max_show_all`` to control how many items can appear on a \"Show "
"all\" admin change list page. The admin will display a \"Show all\" link on "
"the change list only if the total result count is less than or equal to this "
"setting. By default, this is set to ``200``."
msgstr ""

# 49b0020a67c84d4197dc1c1dee22c82b
#: ../../ref/contrib/admin/index.txt:737
msgid ""
"Set ``list_per_page`` to control how many items appear on each paginated "
"admin change list page. By default, this is set to ``100``."
msgstr ""

# c7257d9103e64f7f8894df49631b2e33
#: ../../ref/contrib/admin/index.txt:742
msgid ""
"Set ``list_select_related`` to tell Django to use :meth:`~django.db.models."
"query.QuerySet.select_related` in retrieving the list of objects on the "
"admin change list page. This can save you a bunch of database queries."
msgstr ""

# 7aba51ce262f4a7688c8bcb2264690eb
#: ../../ref/contrib/admin/index.txt:747
msgid "The value should be either ``True`` or ``False``. Default is ``False``."
msgstr ""

# 58ddf5a9b1a445488945141f5ada6181
#: ../../ref/contrib/admin/index.txt:749
msgid ""
"Note that Django will use :meth:`~django.db.models.query.QuerySet."
"select_related`, regardless of this setting if one of the ``list_display`` "
"fields is a ``ForeignKey``."
msgstr ""

# 7995489befab445bb6489e566dbffd62
#: ../../ref/contrib/admin/index.txt:756
msgid ""
"Set ``ordering`` to specify how lists of objects should be ordered in the "
"Django admin views. This should be a list or tuple in the same format as a "
"model's :attr:`~django.db.models.Options.ordering` parameter."
msgstr ""

# a4c3014cb46343ad9f16130ab7c8ac46
#: ../../ref/contrib/admin/index.txt:760
msgid ""
"If this isn't provided, the Django admin will use the model's default "
"ordering."
msgstr ""

# efaea5b365de48f0bc759813f0cfaff6
#: ../../ref/contrib/admin/index.txt:765
msgid ""
"If you need to specify a dynamic order (for example depending on user or "
"language) you can implement a :meth:`~ModelAdmin.get_ordering` method."
msgstr ""

# bf7a5dfbb1d148e38f1e3459bbf8ad60
#: ../../ref/contrib/admin/index.txt:770
msgid ""
"Django honors all elements in the list/tuple; before 1.4, only the first was "
"respected."
msgstr ""

# 9aa902238ac348708563373ef8dff333
#: ../../ref/contrib/admin/index.txt:775
msgid ""
"The paginator class to be used for pagination. By default, :class:`django."
"core.paginator.Paginator` is used. If the custom paginator class doesn't "
"have the same constructor interface as :class:`django.core.paginator."
"Paginator`, you will also need to provide an implementation for :meth:"
"`ModelAdmin.get_paginator`."
msgstr ""

# eaa51f43eaf241babd96668c9463a3c5
#: ../../ref/contrib/admin/index.txt:783
msgid ""
"Set ``prepopulated_fields`` to a dictionary mapping field names to the "
"fields it should prepopulate from::"
msgstr ""

# 2394aaad34034d3cb8d7f91a078a243d
#: ../../ref/contrib/admin/index.txt:789
msgid ""
"When set, the given fields will use a bit of JavaScript to populate from the "
"fields assigned. The main use for this functionality is to automatically "
"generate the value for ``SlugField`` fields from one or more other fields. "
"The generated value is produced by concatenating the values of the source "
"fields, and then by transforming that result into a valid slug (e.g. "
"substituting dashes for spaces)."
msgstr ""

# f3801845e24b427eb552d8b26920397b
#: ../../ref/contrib/admin/index.txt:796
msgid ""
"``prepopulated_fields`` doesn't accept ``DateTimeField``, ``ForeignKey``, "
"nor ``ManyToManyField`` fields."
msgstr ""

# f2cd13551b4940bab19a873b88dc16bd
#: ../../ref/contrib/admin/index.txt:801
msgid ""
"By default, Django's admin uses a select-box interface (<select>) for fields "
"that are ``ForeignKey`` or have ``choices`` set. If a field is present in "
"``radio_fields``, Django will use a radio-button interface instead. Assuming "
"``group`` is a ``ForeignKey`` on the ``Person`` model::"
msgstr ""

# 52f0866ba23c4a06aeb787909dbd86e5
#: ../../ref/contrib/admin/index.txt:809
msgid ""
"You have the choice of using ``HORIZONTAL`` or ``VERTICAL`` from the "
"``django.contrib.admin`` module."
msgstr ""

# 467f5fcccf1846c6bc5fc23b93f7053d
#: ../../ref/contrib/admin/index.txt:812
msgid ""
"Don't include a field in ``radio_fields`` unless it's a ``ForeignKey`` or "
"has ``choices`` set."
msgstr ""

# de1b4dbb7e9a4d5c8820142b150cde3e
# a6ac447372114841b21ecca4cd9069df
#: ../../ref/contrib/admin/index.txt:817
#: ../../ref/contrib/admin/index.txt:1622
msgid ""
"By default, Django's admin uses a select-box interface (<select>) for fields "
"that are ``ForeignKey``. Sometimes you don't want to incur the overhead of "
"having to select all the related instances to display in the drop-down."
msgstr ""

# 838e871c92da4cc4bd5d26530b75f0bb
#: ../../ref/contrib/admin/index.txt:822
msgid ""
"``raw_id_fields`` is a list of fields you would like to change into an "
"``Input`` widget for either a ``ForeignKey`` or ``ManyToManyField``::"
msgstr ""

# 73fac5ffc97b4a438528ef5810dea478
#: ../../ref/contrib/admin/index.txt:829
msgid ""
"The ``raw_id_fields`` ``Input`` widget should contain a primary key if the "
"field is a ``ForeignKey`` or a comma separated list of values if the field "
"is a ``ManyToManyField``.  The ``raw_id_fields`` widget shows a magnifying "
"glass button next to the field which allows users to search for and select a "
"value:"
msgstr ""

# d7039b9def3a4293ac323ad8095fe5aa
#: ../../ref/contrib/admin/index.txt:839
msgid ""
"By default the admin shows all fields as editable. Any fields in this option "
"(which should be a ``list`` or ``tuple``) will display its data as-is and "
"non-editable; they are also excluded from the :class:`~django.forms."
"ModelForm` used for creating and editing. Note that when specifying :attr:"
"`ModelAdmin.fields` or :attr:`ModelAdmin.fieldsets` the read-only fields "
"must be present to be shown (they are ignored otherwise)."
msgstr ""

# 3251546fee4a432b943623ecc217d519
#: ../../ref/contrib/admin/index.txt:847
msgid ""
"If ``readonly_fields`` is used without defining explicit ordering through :"
"attr:`ModelAdmin.fields` or :attr:`ModelAdmin.fieldsets` they will be added "
"last after all editable fields."
msgstr ""

# f8d556351dcc493f993a0365f3eeb229
#: ../../ref/contrib/admin/index.txt:851
msgid ""
"A read-only field can not only display data from a model's field, it can "
"also display the output of a model's method or a method of the "
"``ModelAdmin`` class itself. This is very similar to the way :attr:"
"`ModelAdmin.list_display` behaves. This provides an easy way to use the "
"admin interface to provide feedback on the status of the objects being "
"edited, for example::"
msgstr ""

# a57fb26110b047b1877aea31922dc69b
#: ../../ref/contrib/admin/index.txt:881
msgid "Set ``save_as`` to enable a \"save as\" feature on admin change forms."
msgstr ""

# 42d15dbd86b3404f8cd0d2f625545855
#: ../../ref/contrib/admin/index.txt:883
msgid ""
"Normally, objects have three save options: \"Save\", \"Save and continue "
"editing\" and \"Save and add another\". If ``save_as`` is ``True``, \"Save "
"and add another\" will be replaced by a \"Save as\" button."
msgstr ""

# cb09c174bd5f419599bbf00224dc6084
#: ../../ref/contrib/admin/index.txt:887
msgid ""
"\"Save as\" means the object will be saved as a new object (with a new ID), "
"rather than the old object."
msgstr ""

# 425b6ebb6203403984385c438618f732
#: ../../ref/contrib/admin/index.txt:890
msgid "By default, ``save_as`` is set to ``False``."
msgstr ""

# bddb37785ca9474caaaa286259fc88c6
#: ../../ref/contrib/admin/index.txt:894
msgid ""
"Set ``save_on_top`` to add save buttons across the top of your admin change "
"forms."
msgstr ""

# ee4b6016b73f4f66b1bd6ef30d7eff90
#: ../../ref/contrib/admin/index.txt:897
msgid ""
"Normally, the save buttons appear only at the bottom of the forms. If you "
"set ``save_on_top``, the buttons will appear both on the top and the bottom."
msgstr ""

# 7e146a308c204feabb81f76d0565033a
#: ../../ref/contrib/admin/index.txt:901
msgid "By default, ``save_on_top`` is set to ``False``."
msgstr ""

# 3dfded7ae32a4a07b70c3195ad9aa0c0
#: ../../ref/contrib/admin/index.txt:905
msgid ""
"Set ``search_fields`` to enable a search box on the admin change list page. "
"This should be set to a list of field names that will be searched whenever "
"somebody submits a search query in that text box."
msgstr ""

# decf65fe950d4405b8ae87bab2f4af01
#: ../../ref/contrib/admin/index.txt:909
msgid ""
"These fields should be some kind of text field, such as ``CharField`` or "
"``TextField``. You can also perform a related lookup on a ``ForeignKey`` or "
"``ManyToManyField`` with the lookup API \"follow\" notation::"
msgstr ""

# 77a0a9166aa7436286d747a4dde77782
#: ../../ref/contrib/admin/index.txt:915
msgid ""
"For example, if you have a blog entry with an author, the following "
"definition would enable search blog entries by the email address of the "
"author::"
msgstr ""

# 2dd2f39518c84779aa5ecd3cf3ce8541
#: ../../ref/contrib/admin/index.txt:921
msgid ""
"When somebody does a search in the admin search box, Django splits the "
"search query into words and returns all objects that contain each of the "
"words, case insensitive, where each word must be in at least one of "
"``search_fields``. For example, if ``search_fields`` is set to "
"``['first_name', 'last_name']`` and a user searches for ``john lennon``, "
"Django will do the equivalent of this SQL ``WHERE`` clause::"
msgstr ""

# c8e662d9bc224b299ac1296c3e72118a
#: ../../ref/contrib/admin/index.txt:931
msgid ""
"For faster and/or more restrictive searches, prefix the field name with an "
"operator:"
msgstr ""

# 91bb0d052d084f138b0042a2cc2897f8
#: ../../ref/contrib/admin/index.txt:947
msgid "``^``"
msgstr ""

# da04c8a688124f399a48c011a47b6bc7
#: ../../ref/contrib/admin/index.txt:935
msgid ""
"Matches the beginning of the field. For example, if ``search_fields`` is set "
"to ``['^first_name', '^last_name']`` and a user searches for ``john "
"lennon``, Django will do the equivalent of this SQL ``WHERE`` clause::"
msgstr ""

# 44bd3ef9641a47d38c0837a942c1c0be
#: ../../ref/contrib/admin/index.txt:943
msgid ""
"This query is more efficient than the normal ``'%john%'`` query, because the "
"database only needs to check the beginning of a column's data, rather than "
"seeking through the entire column's data. Plus, if the column has an index "
"on it, some databases may be able to use the index for this query, even "
"though it's a ``LIKE`` query."
msgstr ""

# 7ee63ac78f5046308d1c10b1936e3b34
#: ../../ref/contrib/admin/index.txt:960
msgid "``=``"
msgstr ""

# 2fd5394f357c46d193a4ce70c227401c
#: ../../ref/contrib/admin/index.txt:950
msgid ""
"Matches exactly, case-insensitive. For example, if ``search_fields`` is set "
"to ``['=first_name', '=last_name']`` and a user searches for ``john "
"lennon``, Django will do the equivalent of this SQL ``WHERE`` clause::"
msgstr ""

# abaa88df736f489dbb4a2af6ce34fe86
#: ../../ref/contrib/admin/index.txt:958
msgid ""
"Note that the query input is split by spaces, so, following this example, "
"it's currently not possible to search for all records in which "
"``first_name`` is exactly ``'john winston'`` (containing a space)."
msgstr ""

# e14422844228457097f1a053438dfecc
#: ../../ref/contrib/admin/index.txt:963
msgid "``@``"
msgstr ""

# 04c66f50438246f1b9da770b7c0bcdaa
#: ../../ref/contrib/admin/index.txt:963
msgid ""
"Performs a full-text match. This is like the default search method but uses "
"an index. Currently this is only available for MySQL."
msgstr ""

# dd34e9b13f814e578e48ba21f6ce2315
#: ../../ref/contrib/admin/index.txt:967
msgid "Custom template options"
msgstr ""

# 6d6aeaeb50a649c2b0d5d2aefc549574
#: ../../ref/contrib/admin/index.txt:969
msgid ""
"The `Overriding Admin Templates`_ section describes how to override or "
"extend the default admin templates.  Use the following options to override "
"the default templates used by the :class:`ModelAdmin` views:"
msgstr ""

# 3f06d7fcdad54024a9e21dcf83f408c7
#: ../../ref/contrib/admin/index.txt:975
msgid "Path to a custom template, used by :meth:`add_view`."
msgstr ""

# f71a4d381abd4c11917adf6f19a15613
#: ../../ref/contrib/admin/index.txt:979
msgid "Path to a custom template, used by :meth:`change_view`."
msgstr ""

# 0ae1b4c870dd4a4db9117810f4bb6d52
#: ../../ref/contrib/admin/index.txt:983
msgid "Path to a custom template, used by :meth:`changelist_view`."
msgstr ""

# 6ff87004fa66401a9f3773b4619877aa
#: ../../ref/contrib/admin/index.txt:987
msgid ""
"Path to a custom template, used by :meth:`delete_view` for displaying a "
"confirmation page when deleting one or more objects."
msgstr ""

# c415fc097ba9448f966aef1a9064653b
#: ../../ref/contrib/admin/index.txt:992
msgid ""
"Path to a custom template, used by the ``delete_selected`` action method for "
"displaying a confirmation page when deleting one or more objects. See the :"
"doc:`actions documentation</ref/contrib/admin/actions>`."
msgstr ""

# b3137b7f5eaa45cabed30537cb77b43e
#: ../../ref/contrib/admin/index.txt:998
msgid "Path to a custom template, used by :meth:`history_view`."
msgstr ""

# f9db017708bf46cc9f30f801dbe47859
#: ../../ref/contrib/admin/index.txt:1004
msgid "``ModelAdmin`` methods"
msgstr ""

# b345249be7a94b74965f960cad6613b9
#: ../../ref/contrib/admin/index.txt:1008
msgid ""
":meth:`ModelAdmin.save_model` and :meth:`ModelAdmin.delete_model` must save/"
"delete the object, they are not for veto purposes, rather they allow you to "
"perform extra operations."
msgstr ""

# 261a210309ef44a5a7d32a252d1f5a1a
#: ../../ref/contrib/admin/index.txt:1014
msgid ""
"The ``save_model`` method is given the ``HttpRequest``, a model instance, a "
"``ModelForm`` instance and a boolean value based on whether it is adding or "
"changing the object. Here you can do any pre- or post-save operations."
msgstr ""

# 194b249506a34d4191dd18d62498525e
#: ../../ref/contrib/admin/index.txt:1018
msgid "For example to attach ``request.user`` to the object prior to saving::"
msgstr ""

# 3c45ec84d4ab4ff391f1b62b09118dba
#: ../../ref/contrib/admin/index.txt:1027
msgid ""
"The ``delete_model`` method is given the ``HttpRequest`` and a model "
"instance. Use this method to do pre- or post-delete operations."
msgstr ""

# 2c04e577fabb491181b450d1844b75ed
#: ../../ref/contrib/admin/index.txt:1032
msgid ""
"The ``save_formset`` method is given the ``HttpRequest``, the parent "
"``ModelForm`` instance and a boolean value based on whether it is adding or "
"changing the parent object."
msgstr ""

# 3300c05759704d47b32d92dff571e856
#: ../../ref/contrib/admin/index.txt:1036
msgid ""
"For example to attach ``request.user`` to each changed formset model "
"instance::"
msgstr ""

# 6dbcc28a5d4347d58ec390403febc664
#: ../../ref/contrib/admin/index.txt:1051
msgid ""
"The ``get_ordering`` method takes a``request`` as parameter and is expected "
"to return a ``list`` or ``tuple`` for ordering similar to the :attr:"
"`ordering` attribute. For example::"
msgstr ""

# 5a49648ac13d4d4bb5e2efee37f901ad
#: ../../ref/contrib/admin/index.txt:1067
msgid ""
"The ``save_related`` method is given the ``HttpRequest``, the parent "
"``ModelForm`` instance, the list of inline formsets and a boolean value "
"based on whether the parent is being added or changed. Here you can do any "
"pre- or post-save operations for objects related to the parent. Note that at "
"this point the parent object and its form have already been saved."
msgstr ""

# daaf594e4cc34b4499b431a11dea14d0
#: ../../ref/contrib/admin/index.txt:1075
msgid ""
"The ``get_readonly_fields`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``list`` or ``tuple`` of field names that will be displayed as read-only, "
"as described above in the :attr:`ModelAdmin.readonly_fields` section."
msgstr ""

# c90c3d7fecbf4dca8be3ebdb0ae6c37e
#: ../../ref/contrib/admin/index.txt:1084
msgid ""
"The ``get_prepopulated_fields`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``dictionary``, as described above in the :attr:`ModelAdmin."
"prepopulated_fields` section."
msgstr ""

# 93a6372bb0d442b688a2512f9d496d75
#: ../../ref/contrib/admin/index.txt:1093
msgid ""
"The ``get_list_display`` method is given the ``HttpRequest`` and is expected "
"to return a ``list`` or ``tuple`` of field names that will be displayed on "
"the changelist view as described above in the :attr:`ModelAdmin."
"list_display` section."
msgstr ""

# 367219dbc90f43b7b87781f823d2a1e2
#: ../../ref/contrib/admin/index.txt:1102
msgid ""
"The ``get_list_display_links`` method is given the ``HttpRequest`` and the "
"``list`` or ``tuple`` returned by :meth:`ModelAdmin.get_list_display`. It is "
"expected to return a ``list`` or ``tuple`` of field names on the changelist "
"that will be linked to the change view, as described in the :attr:"
"`ModelAdmin.list_display_links` section."
msgstr ""

# fae29da899214d13bdccbf99d30e8ed2
#: ../../ref/contrib/admin/index.txt:1110
msgid ""
"The ``get_fieldsets`` method is given the ``HttpRequest`` and the ``obj`` "
"being edited (or ``None`` on an add form) and is expected to return a list "
"of two-tuples, in which each two-tuple represents a ``<fieldset>`` on the "
"admin form page, as described above in the :attr:`ModelAdmin.fieldsets` "
"section."
msgstr ""

# 119680d1c1984b65b031c0f40dcb0cb3
#: ../../ref/contrib/admin/index.txt:1119
msgid ""
"The ``get_list_filter`` method is given the ``HttpRequest`` and is expected "
"to return the same kind of sequence type as for the :attr:`~ModelAdmin."
"list_filter` attribute."
msgstr ""

# cfb78f63b0a4463189c20fa19ebf8808
#: ../../ref/contrib/admin/index.txt:1127
msgid ""
"The ``get_inline_instances`` method is given the ``HttpRequest`` and the "
"``obj`` being edited (or ``None`` on an add form) and is expected to return "
"a ``list`` or ``tuple`` of :class:`~django.contrib.admin.InlineModelAdmin` "
"objects, as described below in the :class:`~django.contrib.admin."
"InlineModelAdmin` section."
msgstr ""

# d594622180b64ed1add3675ea1fb913b
#: ../../ref/contrib/admin/index.txt:1135
msgid ""
"The ``get_urls`` method on a ``ModelAdmin`` returns the URLs to be used for "
"that ModelAdmin in the same way as a URLconf.  Therefore you can extend them "
"as documented in :doc:`/topics/http/urls`::"
msgstr ""

# e1f68c24483a4b69a54e561ecf791e54
#: ../../ref/contrib/admin/index.txt:1153
msgid ""
"Notice that the custom patterns are included *before* the regular admin "
"URLs: the admin URL patterns are very permissive and will match nearly "
"anything, so you'll usually want to prepend your custom URLs to the built-in "
"ones."
msgstr ""

# 789d1c6a8b3f4d0388b92f3242538de6
#: ../../ref/contrib/admin/index.txt:1158
msgid ""
"In this example, ``my_view`` will be accessed at ``/admin/myapp/mymodel/"
"my_view/`` (assuming the admin URLs are included at ``/admin/``.)"
msgstr ""

# f4edcaca272346ce822075ec5352a300
#: ../../ref/contrib/admin/index.txt:1162
msgid ""
"However, the ``self.my_view`` function registered above suffers from two "
"problems:"
msgstr ""

# 65c99df19ec2473aa5c2069a7305b0d3
#: ../../ref/contrib/admin/index.txt:1165
msgid ""
"It will *not* perform any permission checks, so it will be accessible to the "
"general public."
msgstr ""

# 11f5fd5c78254b73aa62fe14bff48383
#: ../../ref/contrib/admin/index.txt:1167
msgid ""
"It will *not* provide any header details to prevent caching. This means if "
"the page retrieves data from the database, and caching middleware is active, "
"the page could show outdated information."
msgstr ""

# 872cfa7f152e4568bc4290d141a2aeb1
#: ../../ref/contrib/admin/index.txt:1171
msgid ""
"Since this is usually not what you want, Django provides a convenience "
"wrapper to check permissions and mark the view as non-cacheable. This "
"wrapper is ``AdminSite.admin_view()`` (i.e. ``self.admin_site.admin_view`` "
"inside a ``ModelAdmin`` instance); use it like so::"
msgstr ""

# b5e935a0cafd42b0adbd4ae532128dd9
#: ../../ref/contrib/admin/index.txt:1184
msgid "Notice the wrapped view in the fifth line above::"
msgstr ""

# eb885208c2f04f2a9da511dab4da9ed8
#: ../../ref/contrib/admin/index.txt:1188
msgid ""
"This wrapping will protect ``self.my_view`` from unauthorized access and "
"will apply the ``django.views.decorators.cache.never_cache`` decorator to "
"make sure it is not cached if the cache middleware is active."
msgstr ""

# db579a56196d413d8256e009c3bf043e
#: ../../ref/contrib/admin/index.txt:1192
msgid ""
"If the page is cacheable, but you still want the permission check to be "
"performed, you can pass a ``cacheable=True`` argument to ``AdminSite."
"admin_view()``::"
msgstr ""

# a402722ad8df448f859f69b5e69a7b38
#: ../../ref/contrib/admin/index.txt:1200
msgid ""
"Returns a :class:`~django.forms.ModelForm` class for use in the admin add "
"and change views, see :meth:`add_view` and :meth:`change_view`."
msgstr ""

# 1f4d9b7c5dd34119b84dd7a52d1956cd
#: ../../ref/contrib/admin/index.txt:1203
msgid ""
"If you wanted to hide a field from non-superusers, for example, you could "
"override ``get_form`` as follows::"
msgstr ""

# 36ef9aa612744a52afc6b76222d7cc49
#: ../../ref/contrib/admin/index.txt:1215
msgid ""
"Yields :class:`InlineModelAdmin`\\s for use in admin add and change views."
msgstr ""

# afb84cbbba1246e3a5de5f3f5cc30004
#: ../../ref/contrib/admin/index.txt:1217
msgid ""
"For example if you wanted to display a particular inline only in the change "
"view, you could override ``get_formsets`` as follows::"
msgstr ""

# fdfbbcf994a0469bb3fad4b3cb2d1c10
#: ../../ref/contrib/admin/index.txt:1232
msgid ""
"The ``formfield_for_foreignkey`` method on a ``ModelAdmin`` allows you to "
"override the default formfield for a foreign keys field. For example, to "
"return a subset of objects for this foreign key field based on the user::"
msgstr ""

# 756ae37a69e344298d962790017de105
#: ../../ref/contrib/admin/index.txt:1242
msgid ""
"This uses the ``HttpRequest`` instance to filter the ``Car`` foreign key "
"field to only display the cars owned by the ``User`` instance."
msgstr ""

# 78337ee417954d149a9b16861b7e8311
#: ../../ref/contrib/admin/index.txt:1247
msgid ""
"Like the ``formfield_for_foreignkey`` method, the "
"``formfield_for_manytomany`` method can be overridden to change the default "
"formfield for a many to many field. For example, if an owner can own "
"multiple cars and cars can belong to multiple owners -- a many to many "
"relationship -- you could filter the ``Car`` foreign key field to only "
"display the cars owned by the ``User``::"
msgstr ""

# 9b32e39e53fa4c689fcb25474e5b7ba2
#: ../../ref/contrib/admin/index.txt:1262
msgid ""
"Like the ``formfield_for_foreignkey`` and ``formfield_for_manytomany`` "
"methods, the ``formfield_for_choice_field`` method can be overridden to "
"change the default formfield for a field that has declared choices. For "
"example, if the choices available to a superuser should be different than "
"those available to regular staff, you could proceed as follows::"
msgstr ""

# b1d482e1a81542b9963ab6a8c369fe48
#: ../../ref/contrib/admin/index.txt:1281
msgid ""
"Returns the ``Changelist`` class to be used for listing. By default, "
"``django.contrib.admin.views.main.ChangeList`` is used. By inheriting this "
"class you can change the behavior of the listing."
msgstr ""

# 6a9a607fb1ac4d678984671b55abb050
#: ../../ref/contrib/admin/index.txt:1287
msgid ""
"Returns a :class:`~django.forms.ModelForm` class for use in the ``Formset`` "
"on the changelist page. To use a custom form, for example::"
msgstr ""

# 4cb394ae64a542eb9e642a2756a0ac01
#: ../../ref/contrib/admin/index.txt:1300
msgid ""
"Returns a :ref:`ModelFormSet <model-formsets>` class for use on the "
"changelist page if :attr:`~ModelAdmin.list_editable` is used. To use a "
"custom formset, for example::"
msgstr ""

# 4124b579eff342f3a82c107747a2f4b7
#: ../../ref/contrib/admin/index.txt:1316
msgid ""
"Should return ``True`` if adding an object is permitted, ``False`` otherwise."
msgstr ""

# 3733fc7b3117451c9dc8de2b85c3efa4
#: ../../ref/contrib/admin/index.txt:1321
msgid ""
"Should return ``True`` if editing obj is permitted, ``False`` otherwise. If "
"obj is ``None``, should return ``True`` or ``False`` to indicate whether "
"editing of objects of this type is permitted in general (e.g., ``False`` "
"will be interpreted as meaning that the current user is not permitted to "
"edit any object of this type)."
msgstr ""

# 89113c7d6bbb4d3191795af5624cf070
#: ../../ref/contrib/admin/index.txt:1329
msgid ""
"Should return ``True`` if deleting obj is permitted, ``False`` otherwise. If "
"obj is ``None``, should return ``True`` or ``False`` to indicate whether "
"deleting objects of this type is permitted in general (e.g., ``False`` will "
"be interpreted as meaning that the current user is not permitted to delete "
"any object of this type)."
msgstr ""

# 02152d0f40034ac6b56ff6dd879de3d4
#: ../../ref/contrib/admin/index.txt:1337
msgid ""
"The ``queryset`` method on a ``ModelAdmin`` returns a :class:`~django.db."
"models.query.QuerySet` of all model instances that can be edited by the "
"admin site. One use case for overriding this method is to show objects owned "
"by the logged-in user::"
msgstr ""

# 4e29eb30a0054d0b90e16350ff528e3c
#: ../../ref/contrib/admin/index.txt:1351
msgid ""
"Sends a message to the user using the :mod:`django.contrib.messages` "
"backend.  See the :ref:`custom ModelAdmin example <custom-admin-action>`."
msgstr ""

# 6282ad919a5e432cbb1fa092b03a0752
#: ../../ref/contrib/admin/index.txt:1356
msgid ""
"Keyword arguments allow you to change the message level, add extra CSS tags, "
"or fail silently if the ``contrib.messages`` framework is not installed. "
"These keyword arguments match those for :func:`django.contrib.messages."
"add_message`, see that function's documentation for more details. One "
"difference is that the level may be passed as a string label in addition to "
"integer/constant."
msgstr ""

# 2e45b7c408ce4403a1fafb04407a8c9f
#: ../../ref/contrib/admin/index.txt:1365
msgid ""
"Returns an instance of the paginator to use for this view. By default, "
"instantiates an instance of :attr:`paginator`."
msgstr ""

# ebd3b55a88d04788b1b2dcf2b431b5ee
#: ../../ref/contrib/admin/index.txt:1369
msgid "Other methods"
msgstr ""

# 897eb99326c14a2e9040c35a24903d9d
#: ../../ref/contrib/admin/index.txt:1373
msgid "Django view for the model instance addition page. See note below."
msgstr ""

# f64fa463694a405d84b0966e5a010055
#: ../../ref/contrib/admin/index.txt:1377
msgid "Django view for the model instance edition page. See note below."
msgstr ""

# 393c1fec1715490782d39fa27c6e439d
#: ../../ref/contrib/admin/index.txt:1381
msgid "The ``form_url`` parameter was added."
msgstr ""

# d957a7094ae34ae2b2c77c7327f43e7a
#: ../../ref/contrib/admin/index.txt:1385
msgid ""
"Django view for the model instances change list/actions page. See note below."
msgstr ""

# 92fb408d59054f509e1d2f22597a2ab1
#: ../../ref/contrib/admin/index.txt:1390
msgid ""
"Django view for the model instance(s) deletion confirmation page. See note "
"below."
msgstr ""

# 6802f811925245f081c43608e16d237f
#: ../../ref/contrib/admin/index.txt:1395
msgid ""
"Django view for the page that shows the modification history for a given "
"model instance."
msgstr ""

# 708c4f629cab483e95463826afe8fea9
#: ../../ref/contrib/admin/index.txt:1398
msgid ""
"Unlike the hook-type ``ModelAdmin`` methods detailed in the previous "
"section, these five methods are in reality designed to be invoked as Django "
"views from the admin application URL dispatching handler to render the pages "
"that deal with model instances CRUD operations. As a result, completely "
"overriding these methods will significantly change the behavior of the admin "
"application."
msgstr ""

# 67af370aae8a448ebf238d2540004bf1
#: ../../ref/contrib/admin/index.txt:1404
msgid ""
"One common reason for overriding these methods is to augment the context "
"data that is provided to the template that renders the view. In the "
"following example, the change view is overridden so that the rendered "
"template is provided some extra mapping data that would not otherwise be "
"available::"
msgstr ""

# aca5d3ea538044a4b4683adbe2fa39ba
#: ../../ref/contrib/admin/index.txt:1426
msgid ""
"These views now return :class:`~django.template.response.TemplateResponse` "
"instances which allow you to easily customize the response data before "
"rendering. For more details, see the :doc:`TemplateResponse documentation </"
"ref/template-response>`."
msgstr ""

# 467ccafc62514275bfdc681ca33eb922
#: ../../ref/contrib/admin/index.txt:1434
msgid "``ModelAdmin`` media definitions"
msgstr ""

# e04d2a69c2924d3e91871fad952c8b7a
#: ../../ref/contrib/admin/index.txt:1436
msgid ""
"There are times where you would like add a bit of CSS and/or JavaScript to "
"the add/change views. This can be accomplished by using a Media inner class "
"on your ``ModelAdmin``::"
msgstr ""

# 6a69b457ad9548839b155e6b59fdfd86
#: ../../ref/contrib/admin/index.txt:1447
msgid ""
"The :doc:`staticfiles app </ref/contrib/staticfiles>` prepends :setting:"
"`STATIC_URL` (or :setting:`MEDIA_URL` if :setting:`STATIC_URL` is ``None``) "
"to any media paths. The same rules apply as :ref:`regular media definitions "
"on forms <form-media-paths>`."
msgstr ""

# 2be6744ea9ed41a59a78f01e798d6a7d
#: ../../ref/contrib/admin/index.txt:1453
msgid "jQuery"
msgstr ""

# 68a2148b73614c21bd6076a8925e17a5
#: ../../ref/contrib/admin/index.txt:1455
msgid "Django admin Javascript makes use of the `jQuery`_ library."
msgstr ""

# 640c6156742d445f89dc21b85bce61c4
#: ../../ref/contrib/admin/index.txt:1457
msgid ""
"To avoid conflicts with user-supplied scripts or libraries, Django's jQuery "
"(version 1.4.2) is namespaced as ``django.jQuery``. If you want to use "
"jQuery in your own admin JavaScript without including a second copy, you can "
"use the ``django.jQuery`` object on changelist and add/edit views."
msgstr ""

# e571ba9af0cd439d99becce8b6c4751a
#: ../../ref/contrib/admin/index.txt:1462
msgid ""
"The :class:`ModelAdmin` class requires jQuery by default, so there is no "
"need to add jQuery to your ``ModelAdmin``'s list of media resources unless "
"you have a specifc need. For example, if you require the jQuery library to "
"be in the global namespace (for example when using third-party jQuery "
"plugins) or if you need a newer version of jQuery, you will have to include "
"your own copy."
msgstr ""

# a02a4fec33b248dba86a7fec6ce31da6
#: ../../ref/contrib/admin/index.txt:1468
msgid ""
"Django provides both uncompressed and 'minified' versions of jQuery, as "
"``jquery.js`` and ``jquery.min.js`` respectively."
msgstr ""

# ef2c23903d9745bc9b8be7854329ca97
#: ../../ref/contrib/admin/index.txt:1471
msgid ""
":class:`ModelAdmin` and :class:`InlineModelAdmin` have a ``media`` property "
"that returns a list of ``Media`` objects which store paths to the JavaScript "
"files for the forms and/or formsets. If :setting:`DEBUG` is ``True`` it will "
"return the uncompressed versions of the various JavaScript files, including "
"``jquery.js``; if not, it will return the 'minified' versions."
msgstr ""

# 2fe5c06ad1304615907f69d08e96294a
#: ../../ref/contrib/admin/index.txt:1480
msgid "Adding custom validation to the admin"
msgstr ""

# 30e2803eab0c4b189058cb8f61b4cb00
#: ../../ref/contrib/admin/index.txt:1482
msgid ""
"Adding custom validation of data in the admin is quite easy. The automatic "
"admin interface reuses :mod:`django.forms`, and the ``ModelAdmin`` class "
"gives you the ability define your own form::"
msgstr ""

# 237a0b72aded421baee0d200483c4f98
#: ../../ref/contrib/admin/index.txt:1489
msgid ""
"``MyArticleAdminForm`` can be defined anywhere as long as you import where "
"needed. Now within your form you can add your own custom validation for any "
"field::"
msgstr ""

# a0141bc4aa4c44298b9c598d72192366
#: ../../ref/contrib/admin/index.txt:1501
msgid ""
"It is important you use a ``ModelForm`` here otherwise things can break. See "
"the :doc:`forms </ref/forms/index>` documentation on :doc:`custom validation "
"</ref/forms/validation>` and, more specifically, the :ref:`model form "
"validation notes <overriding-modelform-clean-method>` for more information."
msgstr ""

# f8223134dc5b44448455f2daede4847d
#: ../../ref/contrib/admin/index.txt:1510
msgid "``InlineModelAdmin`` objects"
msgstr ""

# ded92c89a2684498ad1743fbf06afdef
#: ../../ref/contrib/admin/index.txt:1516
msgid ""
"The admin interface has the ability to edit models on the same page as a "
"parent model. These are called inlines. Suppose you have these two models::"
msgstr ""

# 60d19f04e45b440cb5f6286a0687c29e
#: ../../ref/contrib/admin/index.txt:1526
msgid ""
"You can edit the books authored by an author on the author page. You add "
"inlines to a model by specifying them in a ``ModelAdmin.inlines``::"
msgstr ""

# 53e86a10c60d4d73919c4282752ead51
#: ../../ref/contrib/admin/index.txt:1537
msgid "Django provides two subclasses of ``InlineModelAdmin`` and they are:"
msgstr ""

# fae6828a013a4781901fd0f88b44ee95
#: ../../ref/contrib/admin/index.txt:1539
msgid ":class:`~django.contrib.admin.TabularInline`"
msgstr ""

# 4da3576cef094b70be0c2a7adbfe2260
#: ../../ref/contrib/admin/index.txt:1540
msgid ":class:`~django.contrib.admin.StackedInline`"
msgstr ""

# 81ed4a914973488597a0844b327ead0f
#: ../../ref/contrib/admin/index.txt:1542
msgid ""
"The difference between these two is merely the template used to render them."
msgstr ""

# d450161218764324a9eec028aa8f4463
#: ../../ref/contrib/admin/index.txt:1546
msgid "``InlineModelAdmin`` options"
msgstr ""

# 7ced68ed7fc44456bffac5d006591781
#: ../../ref/contrib/admin/index.txt:1548
msgid ""
"``InlineModelAdmin`` shares many of the same features as ``ModelAdmin``, and "
"adds some of its own (the shared features are actually defined in the "
"``BaseModelAdmin`` superclass). The shared features are:"
msgstr ""

# f260197d31774f4893cebc2ec54cc292
#: ../../ref/contrib/admin/index.txt:1552
msgid ":attr:`~InlineModelAdmin.form`"
msgstr ""

# d642d21a849d49d5b4fe4756a0529b66
#: ../../ref/contrib/admin/index.txt:1553
msgid ":attr:`~ModelAdmin.fieldsets`"
msgstr ""

# b5421d3f3a1e44aab9f3577ae6f47448
#: ../../ref/contrib/admin/index.txt:1554
msgid ":attr:`~ModelAdmin.fields`"
msgstr ""

# 8120f064dd1249ed9d538491e7d7c940
#: ../../ref/contrib/admin/index.txt:1555
msgid ":attr:`~ModelAdmin.formfield_overrides`"
msgstr ""

# e5339ca03ea646bb813ddfc370bd5281
#: ../../ref/contrib/admin/index.txt:1556
msgid ":attr:`~ModelAdmin.exclude`"
msgstr ""

# 93766926072f4db88383857a6eb1c9a9
#: ../../ref/contrib/admin/index.txt:1557
msgid ":attr:`~ModelAdmin.filter_horizontal`"
msgstr ""

# 9c74997b98804de7880f5e83e7a6e9f9
#: ../../ref/contrib/admin/index.txt:1558
msgid ":attr:`~ModelAdmin.filter_vertical`"
msgstr ""

# a0546c44747543feb85f28d5063224c3
#: ../../ref/contrib/admin/index.txt:1559
msgid ":attr:`~ModelAdmin.ordering`"
msgstr ""

# ea8bb22fe4ee49f6a65e57eff0f36572
#: ../../ref/contrib/admin/index.txt:1560
msgid ":attr:`~ModelAdmin.prepopulated_fields`"
msgstr ""

# 0566a89a04df4f5e877f7ce540adae7c
#: ../../ref/contrib/admin/index.txt:1561
msgid ":meth:`~ModelAdmin.queryset`"
msgstr ""

# e5e405ce34264a33a0f16f671c7cdc19
#: ../../ref/contrib/admin/index.txt:1562
msgid ":attr:`~ModelAdmin.radio_fields`"
msgstr ""

# 4fc4149a448a4a5692e941a5656701ab
#: ../../ref/contrib/admin/index.txt:1563
msgid ":attr:`~ModelAdmin.readonly_fields`"
msgstr ""

# 4f49c430e33f45fb9ee3e53f80807789
#: ../../ref/contrib/admin/index.txt:1564
msgid ":attr:`~InlineModelAdmin.raw_id_fields`"
msgstr ""

# f4664b780c584222a4bb3b0c86e29fff
#: ../../ref/contrib/admin/index.txt:1565
msgid ":meth:`~ModelAdmin.formfield_for_foreignkey`"
msgstr ""

# bafdbe45b9b2424f8be796df4bc36bc6
#: ../../ref/contrib/admin/index.txt:1566
msgid ":meth:`~ModelAdmin.formfield_for_manytomany`"
msgstr ""

# 075b8f8f08094299aed2fe50c5840c96
#: ../../ref/contrib/admin/index.txt:1570
msgid ":meth:`~ModelAdmin.has_add_permission`"
msgstr ""

# c1138064456840eeb498c8d14e36fe04
#: ../../ref/contrib/admin/index.txt:1571
msgid ":meth:`~ModelAdmin.has_change_permission`"
msgstr ""

# 54daddf1d03e4797a2f62f10e966a7c6
#: ../../ref/contrib/admin/index.txt:1572
msgid ":meth:`~ModelAdmin.has_delete_permission`"
msgstr ""

# 1732f044b128482ba8b123092435fca6
#: ../../ref/contrib/admin/index.txt:1574
msgid "The ``InlineModelAdmin`` class adds:"
msgstr ""

# d44c63d8d674426c8f41332f8928b82b
#: ../../ref/contrib/admin/index.txt:1578
msgid "The model which the inline is using. This is required."
msgstr ""

# 65b8e0ca3da34972a9b493ddba7ba6f6
#: ../../ref/contrib/admin/index.txt:1582
msgid ""
"The name of the foreign key on the model. In most cases this will be dealt "
"with automatically, but ``fk_name`` must be specified explicitly if there "
"are more than one foreign key to the same parent model."
msgstr ""

# 39fa2d5d766d426e930ed2f773e9c819
#: ../../ref/contrib/admin/index.txt:1588
msgid ""
"This defaults to :class:`~django.forms.models.BaseInlineFormSet`. Using your "
"own formset can give you many possibilities of customization. Inlines are "
"built around :ref:`model formsets <model-formsets>`."
msgstr ""

# 18522b1a44eb4390a3083316f8480a9b
#: ../../ref/contrib/admin/index.txt:1594
msgid ""
"The value for ``form`` defaults to ``ModelForm``. This is what is passed "
"through to :func:`~django.forms.models.inlineformset_factory` when creating "
"the formset for this inline."
msgstr ""

# 691e82986a5e4074bfb9ec836aa1fd38
#: ../../ref/contrib/admin/index.txt:1600
msgid ""
"This controls the number of extra forms the formset will display in addition "
"to the initial forms. See the :doc:`formsets documentation </topics/forms/"
"formsets>` for more information."
msgstr ""

# 956c9b140af04bb1bc9d1856a05ab0ba
#: ../../ref/contrib/admin/index.txt:1605
msgid ""
"For users with JavaScript-enabled browsers, an \"Add another\" link is "
"provided to enable any number of additional inlines to be added in addition "
"to those provided as a result of the ``extra`` argument."
msgstr ""

# 7e00347c449f4bd585fb01509e67fe77
#: ../../ref/contrib/admin/index.txt:1609
msgid ""
"The dynamic link will not appear if the number of currently displayed forms "
"exceeds ``max_num``, or if the user does not have JavaScript enabled."
msgstr ""

# 2c54616cd7844497b33424fdcbdc13e3
#: ../../ref/contrib/admin/index.txt:1616
msgid ""
"This controls the maximum number of forms to show in the inline. This "
"doesn't directly correlate to the number of objects, but can if the value is "
"small enough. See :ref:`model-formsets-max-num` for more information."
msgstr ""

# de200e505e264ba590af8a436d602af6
#: ../../ref/contrib/admin/index.txt:1627
msgid ""
"``raw_id_fields`` is a list of fields you would like to change into a "
"``Input`` widget for either a ``ForeignKey`` or ``ManyToManyField``::"
msgstr ""

# 5f45cabfc3a046f7ab8947b023150bd0
#: ../../ref/contrib/admin/index.txt:1637
msgid "The template used to render the inline on the page."
msgstr ""

# 06af9545503b45218284528ceba1e3a9
#: ../../ref/contrib/admin/index.txt:1641
msgid ""
"An override to the ``verbose_name`` found in the model's inner ``Meta`` "
"class."
msgstr ""

# 7e4b9a99efdb43b1bbc8ec3a9524ab7e
#: ../../ref/contrib/admin/index.txt:1646
msgid ""
"An override to the ``verbose_name_plural`` found in the model's inner "
"``Meta`` class."
msgstr ""

# 2595464f851046a88999be104d1d93b0
#: ../../ref/contrib/admin/index.txt:1651
msgid ""
"Specifies whether or not inline objects can be deleted in the inline. "
"Defaults to ``True``."
msgstr ""

# 909cae79a6a64bee80187d8fdc0bdc1d
#: ../../ref/contrib/admin/index.txt:1656
msgid ""
"Returns a :class:`~django.forms.models.BaseInlineFormSet` class for use in "
"admin add/change views. See the example for :class:`ModelAdmin.get_formsets`."
msgstr ""

# 82115f02587140eb877f9e09f233d5e7
#: ../../ref/contrib/admin/index.txt:1660
msgid ""
"Working with a model with two or more foreign keys to the same parent model"
msgstr ""

# c6adfd21a3b6416c956b436efbb611b4
#: ../../ref/contrib/admin/index.txt:1662
msgid ""
"It is sometimes possible to have more than one foreign key to the same "
"model. Take this model for instance::"
msgstr ""

# f2b146d7b1b349f3989e5b0eefb3ddc1
#: ../../ref/contrib/admin/index.txt:1669
msgid ""
"If you wanted to display an inline on the ``Person`` admin add/change pages "
"you need to explicitly define the foreign key since it is unable to do so "
"automatically::"
msgstr ""

# bfa39ea41c8a4ca3a2f70d84eeece05e
#: ../../ref/contrib/admin/index.txt:1683
msgid "Working with many-to-many models"
msgstr ""

# d8eab5d121a34789909304a1c065e797
#: ../../ref/contrib/admin/index.txt:1685
msgid ""
"By default, admin widgets for many-to-many relations will be displayed on "
"whichever model contains the actual reference to the :class:`~django.db."
"models.ManyToManyField`. Depending on your ``ModelAdmin`` definition, each "
"many-to-many field in your model will be represented by a standard HTML "
"``<select multiple>``, a horizontal or vertical filter, or a "
"``raw_id_admin`` widget. However, it is also possible to replace these "
"widgets with inlines."
msgstr ""

# bf96fa880c434e848b5a90733b6f8d6c
#: ../../ref/contrib/admin/index.txt:1693
msgid "Suppose we have the following models::"
msgstr ""

# 9552f52f3a0c42569d2691954c5dcabc
#: ../../ref/contrib/admin/index.txt:1702
msgid ""
"If you want to display many-to-many relations using an inline, you can do so "
"by defining an ``InlineModelAdmin`` object for the relationship::"
msgstr ""

# 3f7703a798644dfdb6e2288aa615e7b1
#: ../../ref/contrib/admin/index.txt:1719
msgid "There are two features worth noting in this example."
msgstr ""

# 20eb5c3571e148af9d2f7b1f8a72cae0
#: ../../ref/contrib/admin/index.txt:1721
msgid ""
"Firstly - the ``MembershipInline`` class references ``Group.members."
"through``. The ``through`` attribute is a reference to the model that "
"manages the many-to-many relation. This model is automatically created by "
"Django when you define a many-to-many field."
msgstr ""

# e9a6c05c45824e4e910c9bdad1db827c
#: ../../ref/contrib/admin/index.txt:1726
msgid ""
"Secondly, the ``GroupAdmin`` must manually exclude the ``members`` field. "
"Django displays an admin widget for a many-to-many field on the model that "
"defines the relation (in this case, ``Group``). If you want to use an inline "
"model to represent the many-to-many relationship, you must tell Django's "
"admin to *not* display this widget - otherwise you will end up with two "
"widgets on your admin page for managing the relation."
msgstr ""

# 166087d75c0c424188eec034b1b419d7
#: ../../ref/contrib/admin/index.txt:1733
msgid ""
"In all other respects, the ``InlineModelAdmin`` is exactly the same as any "
"other. You can customize the appearance using any of the normal "
"``ModelAdmin`` properties."
msgstr ""

# 988f1feaa6514ab8890a4b36871a52b6
#: ../../ref/contrib/admin/index.txt:1738
msgid "Working with many-to-many intermediary models"
msgstr ""

# 167ab52909c14c9ea1d21fd3f9613785
#: ../../ref/contrib/admin/index.txt:1740
msgid ""
"When you specify an intermediary model using the ``through`` argument to a :"
"class:`~django.db.models.ManyToManyField`, the admin will not display a "
"widget by default. This is because each instance of that intermediary model "
"requires more information than could be displayed in a single widget, and "
"the layout required for multiple widgets will vary depending on the "
"intermediate model."
msgstr ""

# 338533b6388741418ae2b840e25432c2
#: ../../ref/contrib/admin/index.txt:1747
msgid ""
"However, we still want to be able to edit that information inline. "
"Fortunately, this is easy to do with inline admin models. Suppose we have "
"the following models::"
msgstr ""

# 7c05ec1ec475492ca7b5918f540f052a
#: ../../ref/contrib/admin/index.txt:1764
msgid ""
"The first step in displaying this intermediate model in the admin is to "
"define an inline class for the ``Membership`` model::"
msgstr ""

# 8c971058759d4afd9916d4446fe20f91
#: ../../ref/contrib/admin/index.txt:1771
msgid ""
"This simple example uses the default ``InlineModelAdmin`` values for the "
"``Membership`` model, and limits the extra add forms to one. This could be "
"customized using any of the options available to ``InlineModelAdmin`` "
"classes."
msgstr ""

# 9120d66020f74d7bb9bf1f04f66f2a05
#: ../../ref/contrib/admin/index.txt:1775
msgid "Now create admin views for the ``Person`` and ``Group`` models::"
msgstr ""

# 2db11bea465843a8a495c2fe984e1e7b
#: ../../ref/contrib/admin/index.txt:1783
msgid ""
"Finally, register your ``Person`` and ``Group`` models with the admin site::"
msgstr ""

# c1b00f009d404dde9d4c31e3971bdafe
#: ../../ref/contrib/admin/index.txt:1788
msgid ""
"Now your admin site is set up to edit ``Membership`` objects inline from "
"either the ``Person`` or the ``Group`` detail pages."
msgstr ""

# 8890a69b93704dfdae6b40f37fe8bf85
#: ../../ref/contrib/admin/index.txt:1794
msgid "Using generic relations as an inline"
msgstr ""

# eaef5bba4de24bf1acd7d9cab05e4969
#: ../../ref/contrib/admin/index.txt:1796
msgid ""
"It is possible to use an inline with generically related objects. Let's say "
"you have the following models::"
msgstr ""

# 88240fa441574505ac34b51dab0fffc6
#: ../../ref/contrib/admin/index.txt:1808
msgid ""
"If you want to allow editing and creating ``Image`` instance on the "
"``Product`` add/change views you can use ``GenericTabularInline`` or "
"``GenericStackedInline`` (both subclasses of ``GenericInlineModelAdmin``) "
"provided by ``django.contrib.contenttypes.generic``, they implement tabular "
"and stacked visual layouts for the forms representing the inline objects "
"respectively just like their non-generic counterparts and behave just like "
"any other inline. In your ``admin.py`` for this example app::"
msgstr ""

# 4aec63c39b8f4b1099d6b18e9f5f0602
#: ../../ref/contrib/admin/index.txt:1831
msgid ""
"See the :doc:`contenttypes documentation </ref/contrib/contenttypes>` for "
"more specific information."
msgstr ""

# b1a42bbbd9c24645b11659746e55a12f
#: ../../ref/contrib/admin/index.txt:1835
msgid "Overriding admin templates"
msgstr ""

# 4fce3f8e8a9548c1ac35a26597a0be31
#: ../../ref/contrib/admin/index.txt:1837
msgid ""
"It is relatively easy to override many of the templates which the admin "
"module uses to generate the various pages of an admin site. You can even "
"override a few of these templates for a specific app, or a specific model."
msgstr ""

# 25e427fdc1f941c2b0bc1fdaf34a44c5
#: ../../ref/contrib/admin/index.txt:1842
msgid "Set up your projects admin template directories"
msgstr ""

# 9098da308e0a4936a927a792a497a46e
#: ../../ref/contrib/admin/index.txt:1844
msgid ""
"The admin template files are located in the ``contrib/admin/templates/"
"admin`` directory."
msgstr ""

# bac04090fc12487abc5463ac7211a26c
#: ../../ref/contrib/admin/index.txt:1847
msgid ""
"In order to override one or more of them, first create an ``admin`` "
"directory in your project's ``templates`` directory. This can be any of the "
"directories you specified in :setting:`TEMPLATE_DIRS`."
msgstr ""

# 19cfda676e11426aa47b38a729f61040
#: ../../ref/contrib/admin/index.txt:1851
msgid ""
"Within this ``admin`` directory, create sub-directories named after your "
"app. Within these app subdirectories create sub-directories named after your "
"models. Note, that the admin app will lowercase the model name when looking "
"for the directory, so make sure you name the directory in all lowercase if "
"you are going to run your app on a case-sensitive filesystem."
msgstr ""

# b039498d7d1d4778a1b489c0fa30e983
#: ../../ref/contrib/admin/index.txt:1857
msgid ""
"To override an admin template for a specific app, copy and edit the template "
"from the ``django/contrib/admin/templates/admin`` directory, and save it to "
"one of the directories you just created."
msgstr ""

# 49a25463d22f45c9a5d08cd483160de8
#: ../../ref/contrib/admin/index.txt:1861
msgid ""
"For example, if we wanted to add a tool to the change list view for all the "
"models in an app named ``my_app``, we would copy ``contrib/admin/templates/"
"admin/change_list.html`` to the ``templates/admin/my_app/`` directory of our "
"project, and make any necessary changes."
msgstr ""

# a5c5c3bbb5c7495895058048be2f3e85
#: ../../ref/contrib/admin/index.txt:1867
msgid ""
"If we wanted to add a tool to the change list view for only a specific model "
"named 'Page', we would copy that same file to the ``templates/admin/my_app/"
"page`` directory of our project."
msgstr ""

# 7faf350cddfc4a15836c6e03a381f73e
#: ../../ref/contrib/admin/index.txt:1872
msgid "Overriding vs. replacing an admin template"
msgstr ""

# 31f0f599421b4561b3ac139b9a4b0aad
#: ../../ref/contrib/admin/index.txt:1874
msgid ""
"Because of the modular design of the admin templates, it is usually neither "
"necessary nor advisable to replace an entire template. It is almost always "
"better to override only the section of the template which you need to change."
msgstr ""

# 106b9609ee9d43fab73d8d7dab4d2b94
#: ../../ref/contrib/admin/index.txt:1878
msgid ""
"To continue the example above, we want to add a new link next to the "
"``History`` tool for the ``Page`` model. After looking at ``change_form."
"html`` we determine that we only need to override the ``object-tools-items`` "
"block. Therefore here is our new ``change_form.html`` :"
msgstr ""

# 3f99e46e857a422994e6d61ac9e4130a
#: ../../ref/contrib/admin/index.txt:1901
msgid ""
"And that's it! If we placed this file in the ``templates/admin/my_app`` "
"directory, our link would appear on the change form for all models within "
"my_app."
msgstr ""

# 2e6662bac1e4416f96abf4af31c79bf4
#: ../../ref/contrib/admin/index.txt:1906
msgid "Templates which may be overridden per app or model"
msgstr ""

# dea22cfc4cf6491b8065ad7c89439198
#: ../../ref/contrib/admin/index.txt:1908
msgid ""
"Not every template in ``contrib/admin/templates/admin`` may be overridden "
"per app or per model. The following can:"
msgstr ""

# 4c2ec0d4ccfd4dd8aa9575776e591321
#: ../../ref/contrib/admin/index.txt:1911
msgid "``app_index.html``"
msgstr ""

# 459104fc8cbc4306ac2b1c32ef311089
#: ../../ref/contrib/admin/index.txt:1912
msgid "``change_form.html``"
msgstr ""

# ce3e9ac4b5b6494f9ab45119621c26a7
#: ../../ref/contrib/admin/index.txt:1913
msgid "``change_list.html``"
msgstr ""

# c0aa3c9a90624986a6eac01eca11498c
#: ../../ref/contrib/admin/index.txt:1914
msgid "``delete_confirmation.html``"
msgstr ""

# 0291534ae811489c9b4b6d9e3c82b7d1
#: ../../ref/contrib/admin/index.txt:1915
msgid "``object_history.html``"
msgstr ""

# 3cd1f1bb3f534d4dbfb58f607a0cf98f
#: ../../ref/contrib/admin/index.txt:1917
msgid ""
"For those templates that cannot be overridden in this way, you may still "
"override them for your entire project. Just place the new version in your "
"``templates/admin`` directory. This is particularly useful to create custom "
"404 and 500 pages."
msgstr ""

# 3044247bd8e948198e0d94fbc4fb1196
#: ../../ref/contrib/admin/index.txt:1924
msgid ""
"Some of the admin templates, such as ``change_list_results.html`` are used "
"to render custom inclusion tags. These may be overridden, but in such cases "
"you are probably better off creating your own version of the tag in question "
"and giving it a different name. That way you can use it selectively."
msgstr ""

# 917d137b412e4cd1ae6f65835f4dc6fc
#: ../../ref/contrib/admin/index.txt:1931
msgid "Root and login templates"
msgstr ""

# d567b7810b454d0c94c0293355109878
#: ../../ref/contrib/admin/index.txt:1933
msgid ""
"If you wish to change the index, login or logout templates, you are better "
"off creating your own ``AdminSite`` instance (see below), and changing the :"
"attr:`AdminSite.index_template` , :attr:`AdminSite.login_template` or :attr:"
"`AdminSite.logout_template` properties."
msgstr ""

# 7e4e193b25494181bcb92fb1befc7482
#: ../../ref/contrib/admin/index.txt:1939
msgid "``AdminSite`` objects"
msgstr ""

# 05ecb9f9ed9c4b1794933c2fb689e440
#: ../../ref/contrib/admin/index.txt:1943
msgid ""
"A Django administrative site is represented by an instance of ``django."
"contrib.admin.sites.AdminSite``; by default, an instance of this class is "
"created as ``django.contrib.admin.site`` and you can register your models "
"and ``ModelAdmin`` instances with it."
msgstr ""

# ba95f6fee6bf4f59b265f9e41e05dfc9
#: ../../ref/contrib/admin/index.txt:1948
msgid ""
"If you'd like to set up your own administrative site with custom behavior, "
"however, you're free to subclass ``AdminSite`` and override or add anything "
"you like. Then, simply create an instance of your ``AdminSite`` subclass "
"(the same way you'd instantiate any other Python class), and register your "
"models and ``ModelAdmin`` subclasses with it instead of using the default."
msgstr ""

# 9e44ae25294f4dbdada77f48c39ad261
#: ../../ref/contrib/admin/index.txt:1955
msgid ""
"When constructing an instance of an ``AdminSite``, you are able to provide a "
"unique instance name using the ``name`` argument to the constructor. This "
"instance name is used to identify the instance, especially when :ref:"
"`reversing admin URLs <admin-reverse-urls>`. If no instance name is "
"provided, a default instance name of ``admin`` will be used."
msgstr ""

# 871a4e96a5b7413fb087e99bea5d504f
#: ../../ref/contrib/admin/index.txt:1962
msgid "``AdminSite`` attributes"
msgstr ""

# a871967e51ce47b29a8efc360444f623
#: ../../ref/contrib/admin/index.txt:1964
msgid ""
"Templates can override or extend base admin templates as described in "
"`Overriding Admin Templates`_."
msgstr ""

# 7249329a1cc541e5ab434541495ac174
#: ../../ref/contrib/admin/index.txt:1969
msgid ""
"Path to a custom template that will be used by the admin site main index "
"view."
msgstr ""

# 1fec892fe45844619d850ecc333a3a32
#: ../../ref/contrib/admin/index.txt:1975
msgid ""
"Path to a custom template that will be used by the admin site app index view."
msgstr ""

# abfa6a155d9c4c40b81f0ef0cc3bf733
#: ../../ref/contrib/admin/index.txt:1979
msgid ""
"Path to a custom template that will be used by the admin site login view."
msgstr ""

# 116fddbe2f2a4c71b67c54c08a9440b8
#: ../../ref/contrib/admin/index.txt:1978
msgid ""
"Subclass of :class:`~django.contrib.auth.forms.AuthenticationForm` that will "
"be used by the admin site login view."
msgstr ""

# 54cc426d2e7c41db8bfd529246c6cec7
#: ../../ref/contrib/admin/index.txt:1983
msgid ""
"Path to a custom template that will be used by the admin site logout view."
msgstr ""

# 79813c3793544c4eacff04949b8b0b7d
#: ../../ref/contrib/admin/index.txt:1987
msgid ""
"Path to a custom template that will be used by the admin site password "
"change view."
msgstr ""

# c2b80bb00ca144b0a8dc97da72204933
#: ../../ref/contrib/admin/index.txt:1992
msgid ""
"Path to a custom template that will be used by the admin site password "
"change done view."
msgstr ""

# bbb8037a1a354f3c88bbdff7be3e4eec
#: ../../ref/contrib/admin/index.txt:1996
msgid "Hooking ``AdminSite`` instances into your URLconf"
msgstr ""

# d4f3f54e196b434291c5a9f551cee299
#: ../../ref/contrib/admin/index.txt:1998
msgid ""
"The last step in setting up the Django admin is to hook your ``AdminSite`` "
"instance into your URLconf. Do this by pointing a given URL at the "
"``AdminSite.urls`` method."
msgstr ""

# b39ad7afff5a4bccbf3d8f93ebf4bd13
#: ../../ref/contrib/admin/index.txt:2002
msgid ""
"In this example, we register the default ``AdminSite`` instance ``django."
"contrib.admin.site`` at the URL ``/admin/`` ::"
msgstr ""

# e807236b46e24eb29399d265a553092d
#: ../../ref/contrib/admin/index.txt:2015
msgid ""
"Above we used ``admin.autodiscover()`` to automatically load the :setting:"
"`INSTALLED_APPS` admin.py modules."
msgstr ""

# 672b3965906945eb8839ae88a5f9d194
#: ../../ref/contrib/admin/index.txt:2018
msgid ""
"In this example, we register the ``AdminSite`` instance ``myproject.admin."
"admin_site`` at the URL ``/myadmin/`` ::"
msgstr ""

# 1af1bb9dc68446f4bea8861bc9eff910
#: ../../ref/contrib/admin/index.txt:2029
msgid ""
"There is really no need to use autodiscover when using your own "
"``AdminSite`` instance since you will likely be importing all the per-app "
"admin.py modules in your ``myproject.admin`` module."
msgstr ""

# 3e48cf7c0414439bbd62764808377c7a
#: ../../ref/contrib/admin/index.txt:2034
msgid "Multiple admin sites in the same URLconf"
msgstr ""

# 56aceeb8064849229657b31484ae4af7
#: ../../ref/contrib/admin/index.txt:2036
msgid ""
"It's easy to create multiple instances of the admin site on the same Django-"
"powered Web site. Just create multiple instances of ``AdminSite`` and root "
"each one at a different URL."
msgstr ""

# b42ea51f65f74e2cac57b32b292a50c3
#: ../../ref/contrib/admin/index.txt:2040
msgid ""
"In this example, the URLs ``/basic-admin/`` and ``/advanced-admin/`` feature "
"separate versions of the admin site -- using the ``AdminSite`` instances "
"``myproject.admin.basic_site`` and ``myproject.admin.advanced_site``, "
"respectively::"
msgstr ""

# e4e45dd79b7341fea88469b1f499e53c
#: ../../ref/contrib/admin/index.txt:2054
msgid ""
"``AdminSite`` instances take a single argument to their constructor, their "
"name, which can be anything you like. This argument becomes the prefix to "
"the URL names for the purposes of :ref:`reversing them<admin-reverse-urls>`. "
"This is only necessary if you are using more than one ``AdminSite``."
msgstr ""

# 4ba9df8a750440c0ab9201eb5e960445
#: ../../ref/contrib/admin/index.txt:2060
msgid "Adding views to admin sites"
msgstr ""

# c9553fed68904535ba4f7fff33165c88
#: ../../ref/contrib/admin/index.txt:2062
msgid ""
"Just like :class:`ModelAdmin`, :class:`AdminSite` provides a :meth:`~django."
"contrib.admin.ModelAdmin.get_urls()` method that can be overridden to define "
"additional views for the site. To add a new view to your admin site, extend "
"the base :meth:`~django.contrib.admin.ModelAdmin.get_urls()` method to "
"include a pattern for your new view."
msgstr ""

# c17f5178ea854ab898b693426268529e
#: ../../ref/contrib/admin/index.txt:2071
msgid ""
"Any view you render that uses the admin templates, or extends the base admin "
"template, should provide the ``current_app`` argument to :class:`~django."
"template.RequestContext` or :class:`~django.template.Context` when rendering "
"the template.  It should be set to either ``self.name`` if your view is on "
"an ``AdminSite`` or ``self.admin_site.name`` if your view is on a "
"``ModelAdmin``."
msgstr ""

# e506682f40084ed0a2feda7cb0063d93
#: ../../ref/contrib/admin/index.txt:2081
msgid "Adding a password-reset feature"
msgstr ""

# a4d2418954aa46cc82a9d181350eeba5
#: ../../ref/contrib/admin/index.txt:2083
msgid ""
"You can add a password-reset feature to the admin site by adding a few lines "
"to your URLconf. Specifically, add these four patterns:"
msgstr ""

# 2566f05ab4c0401ab13fbb095bda9d20
#: ../../ref/contrib/admin/index.txt:2093
msgid ""
"(This assumes you've added the admin at ``admin/`` and requires that you put "
"the URLs starting with ``^admin/`` before the line that includes the admin "
"app itself)."
msgstr ""

# 3052c343c9744232b7d132e14b89d1bd
#: ../../ref/contrib/admin/index.txt:2099
msgid ""
"The presence of the ``admin_password_reset`` named URL will cause a "
"\"forgotten your password?\" link to appear on the default admin log-in page "
"under the password box."
msgstr ""

# 750cca7572024d8ba87357b1320a7f45
#: ../../ref/contrib/admin/index.txt:2106
msgid "Reversing admin URLs"
msgstr ""

# 790350dd5237413795511225cfa0bd06
#: ../../ref/contrib/admin/index.txt:2108
msgid ""
"When an :class:`AdminSite` is deployed, the views provided by that site are "
"accessible using Django's :ref:`URL reversing system <naming-url-patterns>`."
msgstr ""

# 1e3601aecb39435b93f50ba945f8d467
#: ../../ref/contrib/admin/index.txt:2111
msgid "The :class:`AdminSite` provides the following named URL patterns:"
msgstr ""

# 0ab5308c7c20410a9f02f3dde03df3c2
# d7206afef263439d835c96b6a2ff0b8d
#: ../../ref/contrib/admin/index.txt:2114
#: ../../ref/contrib/admin/index.txt:2128
msgid "Page"
msgstr ""

# 2bac6cbac4e84e1f8a56bd777fc3bf03
# 26c0d74cc4904a97b7ce894ed163978d
#: ../../ref/contrib/admin/index.txt:2114
#: ../../ref/contrib/admin/index.txt:2128
msgid "URL name"
msgstr ""

# 5558131274b5453484aaacba019bdb04
# 3b4d4ca5197f44459383079be430e6c8
#: ../../ref/contrib/admin/index.txt:2114
#: ../../ref/contrib/admin/index.txt:2128
msgid "Parameters"
msgstr ""

# dcf9ab50afde422ba5d71d8eb8fbfea8
# 6ca2d7dba705447398be6e9dc908dec0
#: ../../ref/contrib/admin/index.txt:2116 ../../ref/contrib/sitemaps.txt:369
msgid "Index"
msgstr ""

# ed5327142d9a4f4eb772892aef9388f7
#: ../../ref/contrib/admin/index.txt:2116
msgid "``index``"
msgstr ""

# 181a48670c9f46739d5d800b299a19b4
#: ../../ref/contrib/admin/index.txt:2117
msgid "Logout"
msgstr ""

# 6882c04b43244e0e8271bac74ece6c9f
#: ../../ref/contrib/admin/index.txt:2117
msgid "``logout``"
msgstr ""

# 37fea185885f4382ae50d9c7e1503190
#: ../../ref/contrib/admin/index.txt:2118
msgid "Password change"
msgstr ""

# 663b75faa81d4c459f99daae49ef69d1
#: ../../ref/contrib/admin/index.txt:2118
msgid "``password_change``"
msgstr ""

# b8906d7a130b4bf89bcdda00df3b1d40
#: ../../ref/contrib/admin/index.txt:2119
msgid "Password change done"
msgstr ""

# 211eff89fbcc476cbc40e0e349adfcc3
#: ../../ref/contrib/admin/index.txt:2119
msgid "``password_change_done``"
msgstr ""

# 4c3147d88e57479da750320996858ccf
#: ../../ref/contrib/admin/index.txt:2120
msgid "i18n javascript"
msgstr ""

# 7663fc4193fe4bd3924605f0483c9f78
#: ../../ref/contrib/admin/index.txt:2120
msgid "``jsi18n``"
msgstr ""

# 0697fabaf70c459a8bdfab00cfc75fd8
#: ../../ref/contrib/admin/index.txt:2121
msgid "Application index page"
msgstr ""

# 1244aa81911340f496ba63b072d74358
#: ../../ref/contrib/admin/index.txt:2121
msgid "``app_list``"
msgstr ""

# fa149384127145ca83bd7c7312f1db80
# ad9dbec690674b8c8c3a94e4ed3bd226
#: ../../ref/contrib/admin/index.txt:2121 ../../ref/models/options.txt:23
msgid "``app_label``"
msgstr ""

# c3a549e28cd1431590b1c21d3da164f3
#: ../../ref/contrib/admin/index.txt:2122
msgid "Redirect to object's page"
msgstr ""

# 7056a29fca7946d0bd01edb10ad291fc
#: ../../ref/contrib/admin/index.txt:2122
msgid "``view_on_site``"
msgstr ""

# 78b57caaf1384376b4b519155a0095a7
#: ../../ref/contrib/admin/index.txt:2122
msgid "``content_type_id``, ``object_id``"
msgstr ""

# 2ccafc5f18ce404b9c043d5d0aa9bd5b
#: ../../ref/contrib/admin/index.txt:2125
msgid ""
"Each :class:`ModelAdmin` instance provides an additional set of named URLs:"
msgstr ""

# f6d5c918c4c244368b6d6f8be1ea742b
#: ../../ref/contrib/admin/index.txt:2130
msgid "Changelist"
msgstr ""

# 8e450fb3fdb64e46abcde8f52215adee
#: ../../ref/contrib/admin/index.txt:2130
msgid "``{{ app_label }}_{{ model_name }}_changelist``"
msgstr ""

# a8b3d3eefd8a465fab641f121ac74c33
#: ../../ref/contrib/admin/index.txt:2131
msgid "Add"
msgstr ""

# 10730193cece457181aabf4442389608
#: ../../ref/contrib/admin/index.txt:2131
msgid "``{{ app_label }}_{{ model_name }}_add``"
msgstr ""

# 307c5d4ef2544a429d6a6df92f18198d
#: ../../ref/contrib/admin/index.txt:2132
msgid "History"
msgstr ""

# 0d06e813aedb45eaaf7c5f55c4242b83
#: ../../ref/contrib/admin/index.txt:2132
msgid "``{{ app_label }}_{{ model_name }}_history``"
msgstr ""

# cdcd04384022474281b09a9d28ff64f3
# b1cd6e5938c94db8bd2c6cd1ed2c05bb
# f216a3b5ed7f45e89e1dcc8b50db83bb
#: ../../ref/contrib/admin/index.txt:2132
#: ../../ref/contrib/admin/index.txt:2133
#: ../../ref/contrib/admin/index.txt:2134
msgid "``object_id``"
msgstr ""

# 0e50e2acf93c4ca0b62d7299b06ccda4
#: ../../ref/contrib/admin/index.txt:2133
msgid "Delete"
msgstr ""

# 5443d1f8b78e4ad5a7fbbbc411af9528
#: ../../ref/contrib/admin/index.txt:2133
msgid "``{{ app_label }}_{{ model_name }}_delete``"
msgstr ""

# 9e2ffd023c4d4613babd23190b009b95
#: ../../ref/contrib/admin/index.txt:2134
msgid "Change"
msgstr ""

# db43ba524ce14f4dbcfd5d5dc4dcb67c
#: ../../ref/contrib/admin/index.txt:2134
msgid "``{{ app_label }}_{{ model_name }}_change``"
msgstr ""

# 2b5c8cdfaf104acfbcf65025535178ee
#: ../../ref/contrib/admin/index.txt:2137
msgid ""
"These named URLs are registered with the application namespace ``admin``, "
"and with an instance namespace corresponding to the name of the Site "
"instance."
msgstr ""

# 9b15f03f9657429ebb65212680e732f2
#: ../../ref/contrib/admin/index.txt:2140
msgid ""
"So - if you wanted to get a reference to the Change view for a particular "
"``Choice`` object (from the polls application) in the default admin, you "
"would call::"
msgstr ""

# 03484d3d8ed14eb2a97a1a450958f87f
#: ../../ref/contrib/admin/index.txt:2148
msgid ""
"This will find the first registered instance of the admin application "
"(whatever the instance name), and resolve to the view for changing ``poll."
"Choice`` instances in that instance."
msgstr ""

# 2141f8ebf5b048118e4790a460ec2db0
#: ../../ref/contrib/admin/index.txt:2152
msgid ""
"If you want to find a URL in a specific admin instance, provide the name of "
"that instance as a ``current_app`` hint to the reverse call. For example, if "
"you specifically wanted the admin view from the admin instance named "
"``custom``, you would need to call::"
msgstr ""

# 87a7ef793ba54f5ea98e89bc690cddb4
#: ../../ref/contrib/admin/index.txt:2159
msgid ""
"For more details, see the documentation on :ref:`reversing namespaced URLs "
"<topics-http-reversing-url-namespaces>`."
msgstr ""

# e67b4210907d412dbefe30cf573185f6
#: ../../ref/contrib/admin/index.txt:2164
msgid ""
"To allow easier reversing of the admin urls in templates, Django provides an "
"``admin_urlname`` filter which takes an action as argument:"
msgstr ""

# bf7fea64502f43b490121d003bb15d93
#: ../../ref/contrib/admin/index.txt:2173
msgid ""
"The action in the examples above match the last part of the URL names for :"
"class:`ModelAdmin` instances described above. The ``opts`` variable can be "
"any object which has an ``app_label`` and ``module_name`` and is usually "
"supplied by the admin views for the current model."
msgstr ""

# 22d067a35c7c48eca7428e0119b91406
# 4e1768fac73b4b2691ed98a0bb5ee782
#: ../../ref/contrib/auth.txt:2 ../../ref/django-admin.txt:1184
msgid "``django.contrib.auth``"
msgstr ""

# 67af21c1650e4242981adce66a1cc5a6
#: ../../ref/contrib/auth.txt:4
msgid ""
"This document provides API reference material for the components of Django's "
"authentication system. For more details on the usage of these components or "
"how to customize authentication and authorization see the :doc:"
"`authentication topic guide </topics/auth/index>`."
msgstr ""

# 37d87ddb98284eb38b539f134a7ff90a
#: ../../ref/contrib/auth.txt:12
msgid "User"
msgstr ""

# df8819550bba4772afdf7448eb3bad95
# 4a7f5d67d8e8418580d7bcfb2c7ce406
# bea0ac7f52104c0c98aea45005c39183
#: ../../ref/contrib/auth.txt:15 ../../ref/contrib/auth.txt:298
#: ../../ref/contrib/auth.txt:328
msgid "Fields"
msgstr ""

# 1696f00ebf974c13b637ee5ad01d6ad3
#: ../../ref/contrib/auth.txt:19
msgid ""
":class:`~django.contrib.auth.models.User` objects have the following fields:"
msgstr ""

# 760aaf3409104b0ca8a6b1980844c542
#: ../../ref/contrib/auth.txt:24
msgid ""
"Required. 30 characters or fewer. Usernames may contain alphanumeric, ``_``, "
"``@``, ``+``, ``.`` and ``-`` characters."
msgstr ""

# 9426252101b14672a124d107947ca120
# 5ad4ecbe175d4320a47e4eecca21d291
#: ../../ref/contrib/auth.txt:29 ../../ref/contrib/auth.txt:33
msgid "Optional. 30 characters or fewer."
msgstr ""

# d2b2a387897b4056be7da0ef63dd8816
#: ../../ref/contrib/auth.txt:37
msgid "Optional. Email address."
msgstr ""

# 78c15738295f43e29d5c85f0b76c1493
#: ../../ref/contrib/auth.txt:41
msgid ""
"Required. A hash of, and metadata about, the password. (Django doesn't store "
"the raw password.) Raw passwords can be arbitrarily long and can contain any "
"character. See the :doc:`password documentation </topics/auth/passwords>`."
msgstr ""

# 72ab605bd5b6430ca97d04251301d490
#: ../../ref/contrib/auth.txt:48
msgid "Many-to-many relationship to :class:`~django.contrib.auth.models.Group`"
msgstr ""

# 17caeffcc58645b89bd27968b19cf771
#: ../../ref/contrib/auth.txt:52
msgid ""
"Many-to-many relationship to :class:`~django.contrib.auth.models.Permission`"
msgstr ""

# 7965a58c9dfd4f80b5a66febce4e1ca6
#: ../../ref/contrib/auth.txt:56
msgid "Boolean. Designates whether this user can access the admin site."
msgstr ""

# 37d631ca8d094e50b9d8a00f40b1d7d1
#: ../../ref/contrib/auth.txt:60
msgid ""
"Boolean. Designates whether this user account should be considered active. "
"We recommend that you set this flag to ``False`` instead of deleting "
"accounts; that way, if your applications have any foreign keys to users, the "
"foreign keys won't break."
msgstr ""

# 8d7d429b2fa94b2d86551d34d243ed4d
#: ../../ref/contrib/auth.txt:65
msgid ""
"This doesn't necessarily control whether or not the user can log in. "
"Authentication backends aren't required to check for the ``is_active`` flag, "
"and the default backends do not. If you want to reject a login based on "
"``is_active`` being ``False``, it's up to you to check that in your own "
"login view or a custom authentication backend. However, the :class:`~django."
"contrib.auth.forms.AuthenticationForm` used by the :func:`~django.contrib."
"auth.views.login` view (which is the default) *does* perform this check, as "
"do the permission-checking methods such as :meth:`~django.contrib.auth."
"models.User.has_perm` and the authentication in the Django admin. All of "
"those functions/methods will return ``False`` for inactive users."
msgstr ""

# f2983d7dcbbb4be8bfd18ae7dc71d181
#: ../../ref/contrib/auth.txt:79
msgid ""
"Boolean. Designates that this user has all permissions without explicitly "
"assigning them."
msgstr ""

# ac01b009b4aa4a1bae11079241b63896
#: ../../ref/contrib/auth.txt:84
msgid ""
"A datetime of the user's last login. Is set to the current date/time by "
"default."
msgstr ""

# e91ccb92953243d58f4f2ac024c85f81
#: ../../ref/contrib/auth.txt:89
msgid ""
"A datetime designating when the account was created. Is set to the current "
"date/time by default when the account is created."
msgstr ""

# e1725d92189b494798ef5f00678d8055
# 2870c61b11a94e498169ab9d91ddc232
# 5695a35f51e54ab9a2d110188fea7e67
# 2a1172a41e714d7fb159e380a12ce79b
# 03ae077072b44d468d8b8b340f4e6576
# 46e60123d7c14f27aee7cdf367a86d02
# cebe55668b0d4c65b54d954d546b661d
# d1a4b6f25bf9444f92b32809ca97bfb9
#: ../../ref/contrib/auth.txt:93 ../../ref/contrib/auth.txt:317
#: ../../ref/request-response.txt:212 ../../ref/request-response.txt:356
#: ../../ref/request-response.txt:384 ../../ref/request-response.txt:640
#: ../../ref/template-response.txt:57 ../../ref/template-response.txt:148
msgid "Methods"
msgstr ""

# ed3e958607374a08b0736617c8f6e859
#: ../../ref/contrib/auth.txt:99
msgid ""
"Returns the username for the user. Since the User model can be swapped out, "
"you should use  this method instead of referencing the username attribute "
"directly."
msgstr ""

# 3c7cd6a614ef4f60a302a1cdda7be032
#: ../../ref/contrib/auth.txt:105
msgid ""
"Always returns ``False``. This is a way of differentiating :class:`~django."
"contrib.auth.models.User` and :class:`~django.contrib.auth.models."
"AnonymousUser` objects. Generally, you should prefer using :meth:`~django."
"contrib.auth.models.User.is_authenticated()` to this method."
msgstr ""

# 82709495b1ca4f95b5be74aaba50d346
#: ../../ref/contrib/auth.txt:114
msgid ""
"Always returns ``True`` (as opposed to ``AnonymousUser.is_authenticated()`` "
"which always returns ``False``). This is a way to tell if the user has been "
"authenticated. This does not imply any permissions, and doesn't check if the "
"user is active or has a valid session. Even though normally you will call "
"this method on ``request.user`` to find out whether it has been populated by "
"the :class:`~django.contrib.auth.middleware.AuthenticationMiddleware` "
"(representing the currently logged-in user), you should know this method "
"returns ``True`` for any :class:`~django.contrib.auth.models.User` instance."
msgstr ""

# cedaae58213e40739f189156b0a3a58a
#: ../../ref/contrib/auth.txt:125
msgid ""
"Returns the :attr:`~django.contrib.auth.models.User.first_name` plus the :"
"attr:`~django.contrib.auth.models.User.last_name`, with a space in between."
msgstr ""

# 2bd1fe0963934f2b9c5c87a0e2c51c0b
#: ../../ref/contrib/auth.txt:131
msgid ""
"Sets the user's password to the given raw string, taking care of the "
"password hashing. Doesn't save the :class:`~django.contrib.auth.models.User` "
"object."
msgstr ""

# c3ea0cbfc1e84e75a72bb3dd056e36a3
#: ../../ref/contrib/auth.txt:137
msgid ""
"Returns ``True`` if the given raw string is the correct password for the "
"user. (This takes care of the password hashing in making the comparison.)"
msgstr ""

# 5eb1518ecaee4d58bbe200bf4134fc0b
#: ../../ref/contrib/auth.txt:143
msgid ""
"Marks the user as having no password set.  This isn't the same as having a "
"blank string for a password. :meth:`~django.contrib.auth.models.User."
"check_password()` for this user will never return ``True``. Doesn't save "
"the :class:`~django.contrib.auth.models.User` object."
msgstr ""

# 4f53853c09714d439faf10f65aa1ea34
#: ../../ref/contrib/auth.txt:149
msgid ""
"You may need this if authentication for your application takes place against "
"an existing external source such as an LDAP directory."
msgstr ""

# 8c44d74f8f6b46b2a777f4b0ef45714e
#: ../../ref/contrib/auth.txt:154
msgid ""
"Returns ``False`` if :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` has been called for this user."
msgstr ""

# b6ad255e82954da8bc46fab085568e89
#: ../../ref/contrib/auth.txt:160
msgid ""
"Returns a set of permission strings that the user has, through his/her "
"groups."
msgstr ""

# 755a602aa61c459c9d8efe02f9b8ef15
#: ../../ref/contrib/auth.txt:163
msgid ""
"If ``obj`` is passed in, only returns the group permissions for this "
"specific object."
msgstr ""

# e844d67780114f26bb5898ef35250fa6
#: ../../ref/contrib/auth.txt:168
msgid ""
"Returns a set of permission strings that the user has, both through group "
"and user permissions."
msgstr ""

# 96bf9dce13c14a8fb1a771ad06ea1d8d
#: ../../ref/contrib/auth.txt:171
msgid ""
"If ``obj`` is passed in, only returns the permissions for this specific "
"object."
msgstr ""

# bf6a614ccf9448e59f714a60a60d7e03
#: ../../ref/contrib/auth.txt:176
msgid ""
"Returns ``True`` if the user has the specified permission, where perm is in "
"the format ``\"<app label>.<permission codename>\"``. (see documentation on :"
"ref:`permissions <topic-authorization>`). If the user is inactive, this "
"method will always return ``False``."
msgstr ""

# 49fce19747cc468f8c67670f44a64f80
#: ../../ref/contrib/auth.txt:181
msgid ""
"If ``obj`` is passed in, this method won't check for a permission for the "
"model, but for this specific object."
msgstr ""

# af4fb102cd884e1f909b72867ff40804
#: ../../ref/contrib/auth.txt:186
msgid ""
"Returns ``True`` if the user has each of the specified permissions, where "
"each perm is in the format ``\"<app label>.<permission codename>\"``. If the "
"user is inactive, this method will always return ``False``."
msgstr ""

# b68a64435c30424bbadb1f5115d6fa36
#: ../../ref/contrib/auth.txt:191
msgid ""
"If ``obj`` is passed in, this method won't check for permissions for the "
"model, but for the specific object."
msgstr ""

# 9c4d207aed94478d841d4a6f7c08c2e7
#: ../../ref/contrib/auth.txt:196
msgid ""
"Returns ``True`` if the user has any permissions in the given package (the "
"Django app label). If the user is inactive, this method will always return "
"``False``."
msgstr ""

# c277d7cdcf30420c89e780e46681e366
#: ../../ref/contrib/auth.txt:202
msgid ""
"Sends an email to the user. If ``from_email`` is ``None``, Django uses the :"
"setting:`DEFAULT_FROM_EMAIL`."
msgstr ""

# 6df6ec74864f4321a8970961b43479a0
# da2febdf05c5477a91d497774c38652d
#: ../../ref/contrib/auth.txt:207 ../../ref/settings.txt:2306
msgid ""
"With the introduction of :ref:`custom User models <auth-custom-user>`, the "
"use of :setting:`AUTH_PROFILE_MODULE` to define a single profile model is no "
"longer supported. See the :doc:`Django 1.5 release notes</releases/1.5>` for "
"more information."
msgstr ""

# 32d7cf040792486c977bb38ec62d532d
#: ../../ref/contrib/auth.txt:213
msgid ""
"Returns a site-specific profile for this user. Raises ``django.contrib.auth."
"models.SiteProfileNotAvailable`` if the current site doesn't allow profiles, "
"or :exc:`django.core.exceptions.ObjectDoesNotExist` if the user does not "
"have a profile."
msgstr ""

# 53412f56a9eb4822a798c03a29ae2334
#: ../../ref/contrib/auth.txt:220
msgid "Manager methods"
msgstr ""

# 71d845e3c80b41d0a1be4e5874fb1918
#: ../../ref/contrib/auth.txt:224
msgid ""
"The :class:`~django.contrib.auth.models.User` model has a custom manager "
"that has the following helper methods (in addition to the methods provided "
"by :class:`~django.contrib.auth.models.BaseUserManager`):"
msgstr ""

# 47734b7065bd4542b3d88d3040c6c986
#: ../../ref/contrib/auth.txt:235
msgid "Creates, saves and returns a :class:`~django.contrib.auth.models.User`."
msgstr ""

# b1f96e126acf4793b4bb81a526f8b25c
#: ../../ref/contrib/auth.txt:237
msgid ""
"The :attr:`~django.contrib.auth.models.User.username` and :attr:`~django."
"contrib.auth.models.User.password` are set as given. The domain portion of :"
"attr:`~django.contrib.auth.models.User.email` is automatically converted to "
"lowercase, and the returned :class:`~django.contrib.auth.models.User` object "
"will have :attr:`~django.contrib.auth.models.User.is_active` set to ``True``."
msgstr ""

# 61d6692c71284bddbfa96490f2c07d44
#: ../../ref/contrib/auth.txt:244
msgid ""
"If no password is provided, :meth:`~django.contrib.auth.models.User."
"set_unusable_password()` will be called."
msgstr ""

# 9d08aa8f7bb84526a53a11e3fb6d84ec
#: ../../ref/contrib/auth.txt:248
msgid ""
"The ``extra_fields`` keyword arguments are passed through to the :class:"
"`~django.contrib.auth.models.User`'s ``__init__`` method to allow setting "
"arbitrary fields on a :ref:`custom User model <auth-custom-user>`."
msgstr ""

# 1e071a7b3a12440a9f32235f27dc5dd0
#: ../../ref/contrib/auth.txt:253
msgid ""
"See :ref:`Creating users <topics-auth-creating-users>` for example usage."
msgstr ""

# ff709bafdd074c288ec63b5995d25ca4
#: ../../ref/contrib/auth.txt:257
msgid ""
"Same as :meth:`create_user`, but sets :attr:`~models.User.is_staff` and :"
"attr:`~models.User.is_superuser` to ``True``."
msgstr ""

# 80ffddec3c094163915990f7b71dff1d
#: ../../ref/contrib/auth.txt:262
msgid "Anonymous users"
msgstr ""

# 120996598a404439911f21d34efb4fc2
#: ../../ref/contrib/auth.txt:266
msgid ""
":class:`django.contrib.auth.models.AnonymousUser` is a class that implements "
"the :class:`django.contrib.auth.models.User` interface, with these "
"differences:"
msgstr ""

# 9b11d0ccea16469da3ee5a7bf6c684cd
#: ../../ref/contrib/auth.txt:270
msgid ":ref:`id <automatic-primary-key-fields>` is always ``None``."
msgstr ""

# 4f7f04539eca444598410dab1204b768
#: ../../ref/contrib/auth.txt:271
msgid ""
":attr:`~django.contrib.auth.models.User.is_staff` and :attr:`~django.contrib."
"auth.models.User.is_superuser` are always ``False``."
msgstr ""

# 73a573fb18b44477a735a751ed160a95
#: ../../ref/contrib/auth.txt:274
msgid ":attr:`~django.contrib.auth.models.User.is_active` is always ``False``."
msgstr ""

# 0d4c67421fc64e149b6cddb4716ac0f4
#: ../../ref/contrib/auth.txt:275
msgid ""
":attr:`~django.contrib.auth.models.User.groups` and :attr:`~django.contrib."
"auth.models.User.user_permissions` are always empty."
msgstr ""

# ec1ead8c1167447895f3028949e1b3bd
#: ../../ref/contrib/auth.txt:278
msgid ""
":meth:`~django.contrib.auth.models.User.is_anonymous()` returns ``True`` "
"instead of ``False``."
msgstr ""

# ae47ea19c13642a2b4f89b95931edc1e
#: ../../ref/contrib/auth.txt:280
msgid ""
":meth:`~django.contrib.auth.models.User.is_authenticated()` returns "
"``False`` instead of ``True``."
msgstr ""

# 99ee6f9003604391961cb28a2b2e951f
#: ../../ref/contrib/auth.txt:282
msgid ""
":meth:`~django.contrib.auth.models.User.set_password()`, :meth:`~django."
"contrib.auth.models.User.check_password()`, :meth:`~django.db.models.Model."
"save` and :meth:`~django.db.models.Model.delete()` raise :exc:`~exceptions."
"NotImplementedError`."
msgstr ""

# 0f1e8e47d1df453fbd2dc55ec365b72b
#: ../../ref/contrib/auth.txt:288
msgid ""
"In practice, you probably won't need to use :class:`~django.contrib.auth."
"models.AnonymousUser` objects on your own, but they're used by Web requests, "
"as explained in the next section."
msgstr ""

# 1cc0b0dc384f46cd96c661ea39a816b0
#: ../../ref/contrib/auth.txt:293
msgid "Permission"
msgstr ""

# 5c0eb6f125154e2d9da9e4f6a421d353
#: ../../ref/contrib/auth.txt:300
msgid ""
":class:`~django.contrib.auth.models.Permission` objects have the following "
"fields:"
msgstr ""

# 28079fd2b54345c5bd175523fd384dd7
#: ../../ref/contrib/auth.txt:305
msgid "Required. 50 characters or fewer. Example: ``'Can vote'``."
msgstr ""

# e6bb3f6320e64cedbedb20784196cd9d
#: ../../ref/contrib/auth.txt:309
msgid ""
"Required. A reference to the ``django_content_type`` database table, which "
"contains a record for each installed Django model."
msgstr ""

# 9d6e27422fe54260b5979d931fc7ed62
#: ../../ref/contrib/auth.txt:314
msgid "Required. 100 characters or fewer. Example: ``'can_vote'``."
msgstr ""

# 67466618c0d649cdaa5010069aef4be8
#: ../../ref/contrib/auth.txt:319
msgid ""
":class:`~django.contrib.auth.models.Permission` objects have the standard "
"data-access methods like any other :doc:`Django model </ref/models/"
"instances>`."
msgstr ""

# 307490f6e3ab4e638753df6554ecfd24
#: ../../ref/contrib/auth.txt:323
msgid "Group"
msgstr ""

# 3a0a6f0ebcea417396010072759975f9
#: ../../ref/contrib/auth.txt:330
msgid ""
":class:`~django.contrib.auth.models.Group` objects have the following fields:"
msgstr ""

# d6e6724c40f646769e4f39f82d0c0b22
#: ../../ref/contrib/auth.txt:334
msgid ""
"Required. 80 characters or fewer. Any characters are permitted. Example: "
"``'Awesome Users'``."
msgstr ""

# e438c8cf3b7341eeb46685bf92d42a0c
#: ../../ref/contrib/auth.txt:339
msgid "Many-to-many field to :class:`~django.contrib.auth.models.Permission`::"
msgstr ""

# baa0c0cb752840c981a37305a8bcfb90
#: ../../ref/contrib/auth.txt:349
msgid "Login and logout signals"
msgstr ""

# 63f288dbb0d6449c98aaefb651bcaa72
#: ../../ref/contrib/auth.txt:353
msgid ""
"The auth framework uses the following :doc:`signals </topics/signals>` that "
"can be used for notification when a user logs in or out."
msgstr ""

# 6ecc455901f34d5095c19dc3a530f1e6
#: ../../ref/contrib/auth.txt:358
msgid "Sent when a user logs in successfully."
msgstr ""

# 898a81485e9e426a86617743a0118e79
# 2f3e8790de024541b5cf2413d80f8eb0
# 2fd9902723294e5a8978a22a5053d22d
# 6036e992025d4248aa4e91298249fe16
# d69c06f7de3443d1b48e5a40abda3188
# ccf2d63beda84cd2a5e918c9587b1de2
# 97f38cfeb83d4f25abab0717de77b251
# aecc384ffcd24ac2bc2b90c63afe95f5
# 8092981d91664c9491763d22cfc06887
# e5965d37c7e44d61aa77be66995caf29
# 288acb7eea614beabf699746ed3bafd5
# d063c6219cd0414b91c7253b25376eb0
# d38c9aa859a54e63aa9db68974f30a2e
# 6d79ed49ac8240c2bb0a6122a9d237bc
# 84584b6b817f4075b4cb48759feaa027
# 099dd54eb63e4277986cd2ec4f789bfd
# 773609c35c0b4011a3cd95ac32b24498
# 2f38c453c76c442b9a3ec5f1095ffa1b
#: ../../ref/contrib/auth.txt:360 ../../ref/contrib/comments/signals.txt:29
#: ../../ref/contrib/comments/signals.txt:50
#: ../../ref/contrib/comments/signals.txt:73 ../../ref/signals.txt:51
#: ../../ref/signals.txt:87 ../../ref/signals.txt:104
#: ../../ref/signals.txt:136 ../../ref/signals.txt:171
#: ../../ref/signals.txt:192 ../../ref/signals.txt:218
#: ../../ref/signals.txt:380 ../../ref/signals.txt:436
#: ../../ref/signals.txt:462 ../../ref/signals.txt:475
#: ../../ref/signals.txt:506 ../../ref/signals.txt:527
#: ../../ref/signals.txt:558
msgid "Arguments sent with this signal:"
msgstr ""

# eaed5c987c124103a72e54e4d4e41409
# 68f80aad1361462390456c43b560ea79
# 414398f7cb0642748d2e13f9995b9c35
# a8b6841c12e949b4a52542b13b6ab5f6
# 54438daffa584d59beb97bc4ecc41336
# 75ec6f655feb4ff2b52f80729574d4e9
# 9d3d4abe62e7452688984b720112c7f4
# 92c9697900224e80bd3120b73d92e262
# 9d4b334f71f14fc2a57a621d0793ee56
# da7e31382b0f405caeb1fd593f403d76
# 8e5a25e4d45b46c3bf3944082f5da32a
# 5d428a5b39cc499fb4562fc236957b3d
# 50a228cc3df343f281a2fb50cb6cb0a6
# d1ec05a3e870435fbaba0d40b23b92d5
# 5f3fc30c3cc34b62b9ffcbece26c9002
# 19e296abbbea4b63bc183abb3d7aae86
# aac45f61b9684e62aba0b5dd25ef93a1
# 5cf0fa40575c488788af92034fd9e872
# 02ca3201274045da8f9252a9494e0fec
# 1d37c147fe51499f8efeb2aafbe53e11
# 489620ddbe304293b18ffcf988a7b3a5
# c6a1d48df5914f06b2e81c6a5a37074e
# 288588961363477c9001d9ec0d7765f4
# a948f9d1e63340f6ac82163b8cd20b54
#: ../../ref/contrib/auth.txt:363 ../../ref/contrib/auth.txt:377
#: ../../ref/contrib/auth.txt:393 ../../ref/contrib/comments/signals.txt:32
#: ../../ref/contrib/comments/signals.txt:53
#: ../../ref/contrib/comments/signals.txt:76 ../../ref/signals.txt:54
#: ../../ref/signals.txt:71 ../../ref/signals.txt:90 ../../ref/signals.txt:107
#: ../../ref/signals.txt:139 ../../ref/signals.txt:174
#: ../../ref/signals.txt:195 ../../ref/signals.txt:224
#: ../../ref/signals.txt:297 ../../ref/signals.txt:324
#: ../../ref/signals.txt:356 ../../ref/signals.txt:385
#: ../../ref/signals.txt:440 ../../ref/signals.txt:465
#: ../../ref/signals.txt:478 ../../ref/signals.txt:509
#: ../../ref/signals.txt:530 ../../ref/signals.txt:563
msgid "``sender``"
msgstr ""

# 182dcb0cfea34c7483fad71b8f390bf9
#: ../../ref/contrib/auth.txt:363
msgid "The class of the user that just logged in."
msgstr ""

# a8b4f4d8ce5544e8bb3d70f8bb178d71
# 4358042e216e482e8ba57b67abfb8548
# 14dea752a6024df9a0cce16dac7790d0
# 39e55750fc2a424a916cf7f0316a03f6
# a707843ecdfc431083ac80cc2ab92cee
# 0a7e5866bc1c46a8944b12c1fc5b8ac1
# f1431f5d10b74d788c22a3451dd07101
#: ../../ref/contrib/auth.txt:366 ../../ref/contrib/auth.txt:380
#: ../../ref/contrib/comments/signals.txt:40
#: ../../ref/contrib/comments/signals.txt:61
#: ../../ref/contrib/comments/signals.txt:90 ../../ref/signals.txt:481
#: ../../ref/template-response.txt:156
msgid "``request``"
msgstr ""

# 1d79f77cd524487cbc51653ea46669d8
# 12ecff39cfe5475ab8b9aef9fc1d8195
#: ../../ref/contrib/auth.txt:366 ../../ref/contrib/auth.txt:380
msgid "The current :class:`~django.http.HttpRequest` instance."
msgstr ""

# 799a77cb083d404686150981c8b3a798
# 7867aa3eba7444f8aa841c4886bb4a30
#: ../../ref/contrib/auth.txt:368 ../../ref/contrib/auth.txt:383
msgid "``user``"
msgstr ""

# d17952cad88e497d88f8c08d26c64010
#: ../../ref/contrib/auth.txt:369
msgid "The user instance that just logged in."
msgstr ""

# ee13442dbf1e4d01884e7676bbaf0a12
#: ../../ref/contrib/auth.txt:373
msgid "Sent when the logout method is called."
msgstr ""

# a4cce12102db4335af36a7e4a95113d0
#: ../../ref/contrib/auth.txt:376
msgid ""
"As above: the class of the user that just logged out or ``None`` if the user "
"was not authenticated."
msgstr ""

# d8fd7c78cb1d4e1aaa9a413fa357a86f
#: ../../ref/contrib/auth.txt:383
msgid ""
"The user instance that just logged out or ``None`` if the user was not "
"authenticated."
msgstr ""

# 1a18547f280b482892139f6355d9c6d1
#: ../../ref/contrib/auth.txt:390
msgid "Sent when the user failed to login successfully"
msgstr ""

# d25d0611e6194c0ea93919c5d4282f14
#: ../../ref/contrib/auth.txt:393
msgid "The name of the module used for authentication."
msgstr ""

# 2bedda964ecc46ceb82383bb9bc25cb1
#: ../../ref/contrib/auth.txt:398
msgid "``credentials``"
msgstr ""

# 792da3c4d75843a68e24dd0bc06b5e45
#: ../../ref/contrib/auth.txt:396
msgid ""
"A dictionary of keyword arguments containing the user credentials that were "
"passed to :func:`~django.contrib.auth.authenticate()` or your own custom "
"authentication backend. Credentials matching a set of 'sensitive' patterns, "
"(including password) will not be sent in the clear as part of the signal."
msgstr ""

# 92635f69fd9d434f886b00e9952d29f0
#: ../../ref/contrib/auth.txt:404
msgid "Authentication backends"
msgstr ""

# bf5f80a12fab4432bc1171b7093a0e4f
#: ../../ref/contrib/auth.txt:409
msgid ""
"This section details the authentication backends that come with Django. For "
"information on how to use them and how to write your own authentication "
"backends, see the :ref:`Other authentication sources section <authentication-"
"backends>` of the :doc:`User authentication guide </topics/auth/index>`."
msgstr ""

# e3192b169c604e33be2b11f64c6c3342
#: ../../ref/contrib/auth.txt:417
msgid "Available authentication backends"
msgstr ""

# 650bf21117ed48ba91964c38d4342bd4
#: ../../ref/contrib/auth.txt:419
msgid ""
"The following backends are available in :mod:`django.contrib.auth.backends`:"
msgstr ""

# 0bdbbd301b7c4a6bb39d62a3bd7fde29
#: ../../ref/contrib/auth.txt:423
msgid ""
"This is the default authentication backend used by Django.  It authenticates "
"using credentials consisting of a user identifier and password.  For "
"Django's default user model, the user identifier is the username, for custom "
"user models it is the field specified by USERNAME_FIELD (see :doc:"
"`Customizing Users and authentication </topics/auth/customizing>`)."
msgstr ""

# 412a865303334e0486bc92395afefbd3
#: ../../ref/contrib/auth.txt:430
msgid ""
"It also handles the default permissions model as defined for :class:`~django."
"contrib.auth.models.User` and :class:`~django.contrib.auth.models."
"PermissionsMixin`."
msgstr ""

# ae2801c8cdd74443824ae33c98514a0c
#: ../../ref/contrib/auth.txt:436
msgid ""
"Use this backend to take advantage of external-to-Django-handled "
"authentication.  It authenticates using usernames passed in :attr:`request."
"META['REMOTE_USER'] <django.http.HttpRequest.META>`.  See the :doc:"
"`Authenticating against REMOTE_USER </howto/auth-remote-user>` documentation."
msgstr ""

# 3773c42f50984b859e468ef2222b5620
#: ../../ref/contrib/comments/custom.txt:3
msgid "Customizing the comments framework"
msgstr ""

# 9d66799c2cbd4f6dac81b4a581049faf
#: ../../ref/contrib/comments/custom.txt:7
msgid ""
"If the built-in comment framework doesn't quite fit your needs, you can "
"extend the comment app's behavior to add custom data and logic. The comments "
"framework lets you extend the built-in comment model, the built-in comment "
"form, and the various comment views."
msgstr ""

# b529eaabecc74fe0ab10b5203baa3799
#: ../../ref/contrib/comments/custom.txt:12
msgid ""
"The :setting:`COMMENTS_APP` setting is where this customization begins. Set :"
"setting:`COMMENTS_APP` to the name of the app you'd like to use to provide "
"custom behavior. You'll use the same syntax as you'd use for :setting:"
"`INSTALLED_APPS`, and the app given must also be in the :setting:"
"`INSTALLED_APPS` list."
msgstr ""

# 02cf1214415a4203a84ed9af3f8b53f2
#: ../../ref/contrib/comments/custom.txt:18
msgid ""
"For example, if you wanted to use an app named ``my_comment_app``, your "
"settings file would contain::"
msgstr ""

# 70aee7f6e5da418e85db0f7057126fc5
#: ../../ref/contrib/comments/custom.txt:29
msgid ""
"The app named in :setting:`COMMENTS_APP` provides its custom behavior by "
"defining some module-level functions in the app's ``__init__.py``. The :ref:"
"`complete list of these functions <custom-comment-app-api>` can be found "
"below, but first let's look at a quick example."
msgstr ""

# 7f7bde9dc038467a80dd9126130b8d5d
#: ../../ref/contrib/comments/custom.txt:35
msgid "An example custom comments app"
msgstr ""

# 6ef6d82e992f443590c3f14509e5fc88
#: ../../ref/contrib/comments/custom.txt:37
msgid ""
"One of the most common types of customization is modifying the set of fields "
"provided on the built-in comment model. For example, some sites that allow "
"comments want the commentator to provide a title for their comment; the "
"built-in comment model has no field for that title."
msgstr ""

# 7903f80b5dce48699be4b9e2f47967a8
#: ../../ref/contrib/comments/custom.txt:42
msgid "To make this kind of customization, we'll need to do three things:"
msgstr ""

# f2b638f1d6224115a533ada93063aeec
#: ../../ref/contrib/comments/custom.txt:44
msgid ""
"Create a custom comment :class:`~django.db.models.Model` that adds on the "
"\"title\" field."
msgstr ""

# d5ac0a5ab42546569863b5890ecc19fa
#: ../../ref/contrib/comments/custom.txt:47
msgid ""
"Create a custom comment :class:`~django.forms.Form` that also adds this "
"\"title\" field."
msgstr ""

# 527f5db2e5a64b61a11a0af9a2fc73cf
#: ../../ref/contrib/comments/custom.txt:50
msgid ""
"Inform Django of these objects by defining a few functions in a custom :"
"setting:`COMMENTS_APP`."
msgstr ""

# 8fabfbc997bd461b8d37a05260f85ca1
#: ../../ref/contrib/comments/custom.txt:53
msgid ""
"So, carrying on the example above, we're dealing with a typical app "
"structure in the ``my_comment_app`` directory::"
msgstr ""

# 35c04222ba454d35b060a0e8cb722e4b
#: ../../ref/contrib/comments/custom.txt:61
msgid "In the ``models.py`` we'll define a ``CommentWithTitle`` model::"
msgstr ""

# 1d3a007aff8440e0a5ebadf742b1031c
#: ../../ref/contrib/comments/custom.txt:69
msgid ""
"Most custom comment models will subclass the :class:`~django.contrib."
"comments.models.Comment` model. However, if you want to substantially remove "
"or change the fields available in the :class:`~django.contrib.comments."
"models.Comment` model, but don't want to rewrite the templates, you could "
"try subclassing from ``BaseCommentAbstractModel``."
msgstr ""

# a0cb98171abd4631a5c7e3ee968ab0ef
#: ../../ref/contrib/comments/custom.txt:76
msgid ""
"Next, we'll define a custom comment form in ``forms.py``. This is a little "
"more tricky: we have to both create a form and override ``CommentForm."
"get_comment_model()`` and ``CommentForm.get_comment_create_data()`` to "
"return deal with our custom title field::"
msgstr ""

# 6418f0db333d4e61b127958c3e116541
#: ../../ref/contrib/comments/custom.txt:99
msgid ""
"Django provides a couple of \"helper\" classes to make writing certain types "
"of custom comment forms easier; see :mod:`django.contrib.comments.forms` for "
"more."
msgstr ""

# d9be5dfe4a9f4b08af94690e444d2e9d
#: ../../ref/contrib/comments/custom.txt:103
msgid ""
"Finally, we'll define a couple of methods in ``my_comment_app/__init__.py`` "
"to point Django at these classes we've created::"
msgstr ""

# 7876a978174e42f0bf2b0f73b1c06b97
#: ../../ref/contrib/comments/custom.txt:118
msgid ""
"Be careful not to create cyclic imports in your custom comments app. If you "
"feel your comment configuration isn't being used as defined -- for example, "
"if your comment moderation policy isn't being applied -- you may have a "
"cyclic import problem."
msgstr ""

# b3e82c734d034658a8d76074753ed375
#: ../../ref/contrib/comments/custom.txt:123
msgid ""
"If you are having unexplained problems with comments behavior, check if your "
"custom comments application imports (even indirectly) any module that itself "
"imports Django's comments module."
msgstr ""

# 319a39cd31264acea52e1e00d010fa5a
#: ../../ref/contrib/comments/custom.txt:127
msgid ""
"The above process should take care of most common situations. For more "
"advanced usage, there are additional methods you can define. Those are "
"explained in the next section."
msgstr ""

# 737875466cfc462d9a033774d2a44ff1
#: ../../ref/contrib/comments/custom.txt:134
msgid "Custom comment app API"
msgstr ""

# d77283f1409b4e4da76a2e7cd00ab30f
#: ../../ref/contrib/comments/custom.txt:136
msgid ""
"The :mod:`django.contrib.comments` app defines the following methods; any "
"custom comment app must define at least one of them. All are optional, "
"however."
msgstr ""

# 26e61c749d5c4e62ab8669ff4fc76865
#: ../../ref/contrib/comments/custom.txt:142
msgid ""
"Return the :class:`~django.db.models.Model` class to use for comments. This "
"model should inherit from ``django.contrib.comments.models."
"BaseCommentAbstractModel``, which defines necessary core fields."
msgstr ""

# 1742962b5dbf44a6811ddaffc75ff8c2
#: ../../ref/contrib/comments/custom.txt:147
msgid ""
"The default implementation returns :class:`django.contrib.comments.models."
"Comment`."
msgstr ""

# fb8cf305b5a440fdb44f24a4ed1e8f81
#: ../../ref/contrib/comments/custom.txt:152
msgid ""
"Return the :class:`~django.forms.Form` class you want to use for creating, "
"validating, and saving your comment model.  Your custom comment form should "
"accept an additional first argument, ``target_object``, which is the object "
"the comment will be attached to."
msgstr ""

# 98d9b084cbb140d4b94c509761eb1872
#: ../../ref/contrib/comments/custom.txt:158
msgid ""
"The default implementation returns :class:`django.contrib.comments.forms."
"CommentForm`."
msgstr ""

# e13bca9c350c4fdda6634ee6521f1c10
#: ../../ref/contrib/comments/custom.txt:163
msgid ""
"The default comment form also includes a number of unobtrusive spam-"
"prevention features (see :ref:`notes-on-the-comment-form`).  If replacing it "
"with your own form, you may want to look at the source code for the built-in "
"form and consider incorporating similar features."
msgstr ""

# 3f01f66e65a5468b8aeb93c6c81bc0f5
#: ../../ref/contrib/comments/custom.txt:171
msgid ""
"Return the URL for POSTing comments. This will be the ``<form action>`` "
"attribute when rendering your comment form."
msgstr ""

# 7aab1bcf910745db8c8082433ac60a53
#: ../../ref/contrib/comments/custom.txt:174
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``post_comment()`` view."
msgstr ""

# 9b3402e684814f31895d7df10d9d8a24
#: ../../ref/contrib/comments/custom.txt:179
msgid ""
"If you provide a custom comment model and/or form, but you want to use the "
"default ``post_comment()`` view, you will need to be aware that it requires "
"the model and form to have certain additional attributes and methods: see "
"the ``django.contrib.comments.views.post_comment()`` view for details."
msgstr ""

# 5e95864bda09451ea0543408e872e78e
#: ../../ref/contrib/comments/custom.txt:187
msgid "Return the URL for the \"flag this comment\" view."
msgstr ""

# 386b940ce53449b3b8efef1efac1a2ff
#: ../../ref/contrib/comments/custom.txt:189
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``django.contrib.comments.views.moderation.flag()`` view."
msgstr ""

# 6cda93ff6ae64742b3c2cacc7de24c47
#: ../../ref/contrib/comments/custom.txt:194
msgid "Return the URL for the \"delete this comment\" view."
msgstr ""

# cda32cd7ed6d409791f706efdf90beae
#: ../../ref/contrib/comments/custom.txt:196
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``django.contrib.comments.views.moderation.delete()`` view."
msgstr ""

# e0f59410d4364b89952279a4d32ccb6f
#: ../../ref/contrib/comments/custom.txt:201
msgid "Return the URL for the \"approve this comment from moderation\" view."
msgstr ""

# 2a190142d1bc43c69f58e8f3f35bd10f
#: ../../ref/contrib/comments/custom.txt:203
msgid ""
"The default implementation returns a reverse-resolved URL pointing to the "
"``django.contrib.comments.views.moderation.approve()`` view."
msgstr ""

# ef82fdc3e6fa4d248c1097439f835a57
#: ../../ref/contrib/comments/example.txt:5
msgid "Example of using the built-in comments app"
msgstr ""

# e030584ec39e4559832b89b3d7356add
#: ../../ref/contrib/comments/example.txt:7
msgid ""
"Follow the first three steps of the quick start guide in the :doc:"
"`documentation </ref/contrib/comments/index>`."
msgstr ""

# ca60a83dfc8d407393422f5dc26b58d2
#: ../../ref/contrib/comments/example.txt:10
msgid ""
"Now suppose, you have an app (``blog``) with a model (``Post``) to which you "
"want to attach comments. Let's also suppose that you have a template called "
"``blog_detail.html`` where you want to display the comments list and comment "
"form."
msgstr ""

# 5b353693c1ff43dbb5f0e4d78d310257
# f5fbd3e1a9384e32aa294d765e219a56
# 40b49d6aae5542a48119172b8834cda2
# 5f899a118db845e792ed15a1f55949b9
# 61ca914c5f3e4b80bbdbfd0d4dbeb9b1
#: ../../ref/contrib/comments/example.txt:16
#: ../../ref/templates/builtins.txt:1510 ../../ref/templates/builtins.txt:1521
#: ../../ref/templates/builtins.txt:1532 ../../ref/templates/builtins.txt:1544
msgid "Template"
msgstr ""

# 27eb67bef96642caac17b80c27f49562
#: ../../ref/contrib/comments/example.txt:18
msgid ""
"First, we should load the ``comment`` template tags in the ``blog_detail."
"html`` so that we can use its functionality. So just like all other custom "
"template tag libraries::"
msgstr ""

# 2e5345b5bb40418da1f081718fea84e7
#: ../../ref/contrib/comments/example.txt:24
msgid ""
"Next, let's add the number of comments attached to the particular model "
"instance of ``Post``. For this we assume that a context variable "
"``object_pk`` is present which gives the ``id`` of the instance of ``Post``."
msgstr ""

# 0609e23279f14381a9f2d875ae513ecf
#: ../../ref/contrib/comments/example.txt:29
msgid "The usage of the :ttag:`get_comment_count` tag is like below::"
msgstr ""

# 6ea85aaa61b2467586e4a9ad7273c907
#: ../../ref/contrib/comments/example.txt:34
msgid ""
"If you have the instance (say ``entry``) of the model (``Post``) available "
"in the context, then you can refer to it directly::"
msgstr ""

# dd6ad9af28364fbabd7da6127df3c25e
#: ../../ref/contrib/comments/example.txt:40
msgid ""
"Next, we can use the :ttag:`render_comment_list` tag, to render all comments "
"to the given instance (``entry``) by using the ``comments/list.html`` "
"template::"
msgstr ""

# d85ea0ebf034407a97396148c40d2665
#: ../../ref/contrib/comments/example.txt:45
msgid ""
"Django will will look for the ``list.html`` under the following directories "
"(for our example)::"
msgstr ""

# 309097ac13ad438d97aaea0051ba9be3
#: ../../ref/contrib/comments/example.txt:52
msgid ""
"To get a list of comments, we make use of the :ttag:`get_comment_list` tag. "
"Using this tag is very similar to the :ttag:`get_comment_count` tag. We need "
"to remember that :ttag:`get_comment_list` returns a list of comments and "
"hence we have to iterate through them to display them::"
msgstr ""

# 7c938f914c0e4a8bbd99c51219304ef4
#: ../../ref/contrib/comments/example.txt:65
msgid ""
"Finally, we display the comment form, enabling users to enter their "
"comments. There are two ways of doing so. The first is when you want to "
"display the comments template available under your ``comments/form.html``. "
"The other method gives you a chance to customize the form."
msgstr ""

# 78e1bd03c33644d2bfbaf66319cff0ff
#: ../../ref/contrib/comments/example.txt:70
msgid ""
"The first method makes use of the :ttag:`render_comment_form` tag. Its usage "
"too is similar to the other three tags we have discussed above::"
msgstr ""

# dfaf80fd034440efbec50043e9a6e5be
#: ../../ref/contrib/comments/example.txt:75
msgid ""
"It looks for the ``form.html`` under the following directories (for our "
"example)::"
msgstr ""

# 10c36ff02eeb4fb0ad2ad48a64973ffe
#: ../../ref/contrib/comments/example.txt:82
msgid ""
"Since we customize the form in the second method, we make use of another tag "
"called :ttag:`comment_form_target`. This tag on rendering gives the URL "
"where the comment form is posted. Without any :doc:`customization </ref/"
"contrib/comments/custom>`, :ttag:`comment_form_target` evaluates to ``/"
"comments/post/``. We use this tag in the form's ``action`` attribute."
msgstr ""

# a829e663a4774a70b7872b0dff27f275
#: ../../ref/contrib/comments/example.txt:88
msgid ""
"The :ttag:`get_comment_form` tag renders a ``form`` for a model instance by "
"creating a context variable. One can iterate over the ``form`` object to get "
"individual fields. This gives you fine-grain control over the form::"
msgstr ""

# 5aaa469120e9491c82e49422e5365ab6
#: ../../ref/contrib/comments/example.txt:98
msgid "But let's look at a simple example::"
msgstr ""

# 27ec6a2f77d6428ea8a572f4f6ee3e03
#: ../../ref/contrib/comments/example.txt:117
msgid "Flagging"
msgstr ""

# d14748632e9046c59ae8ed464002581e
#: ../../ref/contrib/comments/example.txt:119
msgid ""
"If you want your users to be able to flag comments (say for profanity), you "
"can just direct them (by placing a link in your comment list) to ``/flag/"
"{{ comment.id }}/``. Similarly, a user with requisite permissions (``\"Can "
"moderate comments\"``) can approve and delete comments. This can also be "
"done through the ``admin`` as you'll see later. You might also want to "
"customize the following templates:"
msgstr ""

# eee88122bf9345998a71786bd5f89337
#: ../../ref/contrib/comments/example.txt:126
msgid "``flag.html``"
msgstr ""

# 4b860ef6b9e84474abb108872dfc4096
#: ../../ref/contrib/comments/example.txt:127
msgid "``flagged.html``"
msgstr ""

# 91c177ec293649b7879fc44a33d83939
#: ../../ref/contrib/comments/example.txt:128
msgid "``approve.html``"
msgstr ""

# 7f9f0652d97c450bbba8322ecb930476
#: ../../ref/contrib/comments/example.txt:129
msgid "``approved.html``"
msgstr ""

# 01d16fee1fb641849669283125e430e0
#: ../../ref/contrib/comments/example.txt:130
msgid "``delete.html``"
msgstr ""

# 13a0136c70a04720b52d34b2ed29387e
#: ../../ref/contrib/comments/example.txt:131
msgid "``deleted.html``"
msgstr ""

# 59d162460d4447ec85916010f184f3b9
#: ../../ref/contrib/comments/example.txt:133
msgid "found under the directory structure we saw for ``form.html``."
msgstr ""

# 2f71cfebc1894eacb03ab7f4372bdd95
#: ../../ref/contrib/comments/example.txt:136
msgid "Feeds"
msgstr ""

# c3def387095441f98c6eb3947d60754c
#: ../../ref/contrib/comments/example.txt:138
msgid ""
"Suppose you want to export a :doc:`feed </ref/contrib/syndication>` of the "
"latest comments, you can use the built-in ``LatestCommentFeed``. Just enable "
"it in your project's ``urls.py``:"
msgstr ""

# 0f85ab0776ff4a0193bef68b0bd9245d
#: ../../ref/contrib/comments/example.txt:153
msgid ""
"Now you should have the latest comment feeds being served off ``/feeds/"
"latest/``."
msgstr ""

# abd1a51698314c13a7b1fc31777fc7ef
#: ../../ref/contrib/comments/example.txt:157
msgid "Moderation"
msgstr ""

# 16a152f1c813436c9f42d3670372612b
#: ../../ref/contrib/comments/example.txt:159
msgid ""
"Now that we have the comments framework working, we might want to have some "
"moderation setup to administer the comments. The comments framework comes "
"built-in with :doc:`generic comment moderation </ref/contrib/comments/"
"moderation>`. The comment moderation has the following features (all of "
"which or only certain can be enabled):"
msgstr ""

# dc41f5f6eae442a7bfc3ab5aabc8a668
#: ../../ref/contrib/comments/example.txt:165
msgid "Enable comments for a particular model instance."
msgstr ""

# 2c026dfa10164e5389aa3406d1738f1b
#: ../../ref/contrib/comments/example.txt:166
msgid "Close comments after a particular (user-defined) number of days."
msgstr ""

# a394f9dfa79e453da7a1de97295bf3fe
#: ../../ref/contrib/comments/example.txt:167
msgid "Email new comments to the site-staff."
msgstr ""

# d045e70f692e436fa10e0713fe945b83
#: ../../ref/contrib/comments/example.txt:169
msgid ""
"To enable comment moderation, we subclass the ``CommentModerator`` and "
"register it with the moderation features we want. Let's suppose we want to "
"close comments after 7 days of posting and also send out an email to the "
"site staff. In ``blog/models.py``, we register a comment moderator in the "
"following way:"
msgstr ""

# 0740205d5ca740199e025b7af5799897
#: ../../ref/contrib/comments/example.txt:193
msgid ""
"The generic comment moderation also has the facility to remove comments. "
"These comments can then be moderated by any user who has access to the "
"``admin`` site and the ``Can moderate comments`` permission (can be set "
"under the ``Users`` page in the ``admin``)."
msgstr ""

# c2762b8f97f94dc78dc3d0a2285c9ec0
#: ../../ref/contrib/comments/example.txt:198
msgid ""
"The moderator can ``Flag``, ``Approve`` or ``Remove`` comments using the "
"``Action`` drop-down in the ``admin`` under the ``Comments`` page."
msgstr ""

# beb3ceb3e66e4293a675bc08f16ad559
#: ../../ref/contrib/comments/example.txt:203
msgid ""
"Only a super-user will be able to delete comments from the database. "
"``Remove Comments`` only sets the ``is_public`` attribute to ``False``."
msgstr ""

# 2ff73993b12c4bc480133c94d7e010f9
#: ../../ref/contrib/comments/forms.txt:3
msgid "Comment form classes"
msgstr ""

# 42a3b86f5a1942918cf2607b0e182ae2
#: ../../ref/contrib/comments/forms.txt:8
msgid ""
"The ``django.contrib.comments.forms`` module contains a handful of forms "
"you'll use when writing custom views dealing with comments, or when writing :"
"doc:`custom comment apps </ref/contrib/comments/custom>`."
msgstr ""

# a0d5ebf0d251427f9f4feab7f370cd1b
#: ../../ref/contrib/comments/forms.txt:14
msgid ""
"The main comment form representing the standard, built-in way of handling "
"submitted comments. This is the class used by all the views :mod:`django."
"contrib.comments` to handle submitted comments."
msgstr ""

# 97c8683ce2ad4daaa8bcf9e4dead113f
#: ../../ref/contrib/comments/forms.txt:18
msgid ""
"If you want to build custom views that are similar to Django's built-in "
"comment handling views, you'll probably want to use this form."
msgstr ""

# 1ae515959b7746c7a812921b48494b71
#: ../../ref/contrib/comments/forms.txt:22
msgid "Abstract comment forms for custom comment apps"
msgstr ""

# 655d7e0fac3c4f6ca013340bad604266
#: ../../ref/contrib/comments/forms.txt:24
msgid ""
"If you're building a :doc:`custom comment app </ref/contrib/comments/"
"custom>`, you might want to replace *some* of the form logic but still rely "
"on parts of the existing form."
msgstr ""

# 5178e89d8a2f495098cf94d71fd52105
#: ../../ref/contrib/comments/forms.txt:28
msgid ""
":class:`CommentForm` is actually composed of a couple of abstract base class "
"forms that you can subclass to reuse pieces of the form handling logic:"
msgstr ""

# e86a28d8589d40cfa8dab7b7f57a9083
#: ../../ref/contrib/comments/forms.txt:33
msgid ""
"Handles the anti-spoofing protection aspects of the comment form handling."
msgstr ""

# 1973ce8a1b6741d28c7cad357dd7ed28
#: ../../ref/contrib/comments/forms.txt:35
msgid ""
"This class contains the ``content_type`` and ``object_pk`` fields pointing "
"to the object the comment is attached to, along with a ``timestamp`` and a "
"``security_hash`` of all the form data. Together, the timestamp and the "
"security hash ensure that spammers can't \"replay\" form submissions and "
"flood you with comments."
msgstr ""

# f5b7be2f5f83442ea69ead7d5d8ac1cb
#: ../../ref/contrib/comments/forms.txt:43
msgid "Handles the details of the comment itself."
msgstr ""

# 0487ecc6560c4e23bf64b5d0cae03348
#: ../../ref/contrib/comments/forms.txt:45
msgid ""
"This class contains the ``name``, ``email``, ``url``, and the ``comment`` "
"field itself, along with the associated validation logic."
msgstr ""

# 94eeedcf0f6349329423cc93a788beca
#: ../../ref/contrib/comments/index.txt:3
msgid "Django's comments framework"
msgstr ""

# 3a8cb873ae2f41e8bcf6479e17adb4a6
#: ../../ref/contrib/comments/index.txt:10
msgid ""
"Django includes a simple, yet customizable comments framework. The built-in "
"comments framework can be used to attach comments to any model, so you can "
"use it for comments on blog entries, photos, book chapters, or anything else."
msgstr ""

# bc8b8ec270754e80b41a8e5c7220de12
#: ../../ref/contrib/comments/index.txt:15
msgid "Quick start guide"
msgstr ""

# 7711cc46c30e41a48474029cf03b5785
#: ../../ref/contrib/comments/index.txt:17
msgid "To get started using the ``comments`` app, follow these steps:"
msgstr ""

# 9004392e14e54990af4655efa9f1f1a6
#: ../../ref/contrib/comments/index.txt:19
msgid ""
"Install the comments framework by adding ``'django.contrib.comments'`` to :"
"setting:`INSTALLED_APPS`."
msgstr ""

# 055af6a0a1a04f58a9f95b8f12c1e929
#: ../../ref/contrib/comments/index.txt:22
msgid "Run ``manage.py syncdb`` so that Django will create the comment tables."
msgstr ""

# 9818597575034bc0bebf582367643a98
#: ../../ref/contrib/comments/index.txt:24
msgid "Add the comment app's URLs to your project's ``urls.py``:"
msgstr ""

# 4cacda2267e9430ab6270e32b7898fd4
#: ../../ref/contrib/comments/index.txt:34
msgid ""
"Use the `comment template tags`_ below to embed comments in your templates."
msgstr ""

# 824183674a944f249cc80370dcb3b550
#: ../../ref/contrib/comments/index.txt:37
msgid "You might also want to examine :doc:`/ref/contrib/comments/settings`."
msgstr ""

# 00ec6f747bcd46e1be8c0c916c79aebc
#: ../../ref/contrib/comments/index.txt:40
msgid "Comment template tags"
msgstr ""

# d7089f5e2c9d4c50865724eeb5301098
#: ../../ref/contrib/comments/index.txt:42
msgid ""
"You'll primarily interact with the comment system through a series of "
"template tags that let you embed comments and generate forms for your users "
"to post them."
msgstr ""

# 972fde89e4744605b840352caa3169e9
#: ../../ref/contrib/comments/index.txt:45
msgid ""
"Like all custom template tag libraries, you'll need to :ref:`load the custom "
"tags <loading-custom-template-libraries>` before you can use them::"
msgstr ""

# c1f198e981ab4fa38146f398aafd5924
#: ../../ref/contrib/comments/index.txt:50
msgid "Once loaded you can use the template tags below."
msgstr ""

# c63c67a22cba49fda215c380299a681b
#: ../../ref/contrib/comments/index.txt:53
msgid "Specifying which object comments are attached to"
msgstr ""

# 76295832192747e3ae47ff95bc61566c
#: ../../ref/contrib/comments/index.txt:55
msgid ""
"Django's comments are all \"attached\" to some parent object. This can be "
"any instance of a Django model. Each of the tags below gives you a couple of "
"different ways you can specify which object to attach to:"
msgstr ""

# 96c8bc7438ff4c25ba49e93089b2fc27
#: ../../ref/contrib/comments/index.txt:59
msgid ""
"Refer to the object directly -- the more common method. Most of the time, "
"you'll have some object in the template's context you want to attach the "
"comment to; you can simply use that object."
msgstr ""

# 8e79b55ec560456aadc474aaadcdc2a5
#: ../../ref/contrib/comments/index.txt:63
msgid ""
"For example, in a blog entry page that has a variable named ``entry``, you "
"could use the following to load the number of comments::"
msgstr ""

# 175d50445c764c5994bdb2f56329b47d
#: ../../ref/contrib/comments/index.txt:68
msgid ""
"Refer to the object by content-type and object id. You'd use this method if "
"you, for some reason, don't actually have direct access to the object."
msgstr ""

# 65242659c74843ceba0aeab7e76696ea
#: ../../ref/contrib/comments/index.txt:71
msgid ""
"Following the above example, if you knew the object ID was ``14`` but didn't "
"have access to the actual object, you could do something like::"
msgstr ""

# 5060e353024949e4b069b00ff333e742
#: ../../ref/contrib/comments/index.txt:76
msgid ""
"In the above, ``blog.entry`` is the app label and (lower-cased) model name "
"of the model class."
msgstr ""

# 2e41a5bf818140c48bda30b0a8b4d551
#: ../../ref/contrib/comments/index.txt:80
msgid "Displaying comments"
msgstr ""

# af7207136ea1435f9711f73305730559
#: ../../ref/contrib/comments/index.txt:82
msgid ""
"To display a list of comments, you can use the template tags :ttag:"
"`render_comment_list` or :ttag:`get_comment_list`."
msgstr ""

# 9b079a1b90bd49e9bd8cc279ff66427a
#: ../../ref/contrib/comments/index.txt:88
msgid "Quickly rendering a comment list"
msgstr ""

# 13f5aa751dad41c6942735786eba307c
#: ../../ref/contrib/comments/index.txt:90
msgid ""
"The easiest way to display a list of comments for some object is by using :"
"ttag:`render_comment_list`::"
msgstr ""

# 4753f874e21c45abb78341c3020619c6
#: ../../ref/contrib/comments/index.txt:99
msgid ""
"This will render comments using a template named ``comments/list.html``, a "
"default version of which is included with Django."
msgstr ""

# 7b6b5b00226f4490a7d013c862393709
#: ../../ref/contrib/comments/index.txt:105
msgid "Rendering a custom comment list"
msgstr ""

# 9095f9cb34a64d55a4a062ac9f8b4c53
#: ../../ref/contrib/comments/index.txt:107
msgid ""
"To get the list of comments for some object, use :ttag:`get_comment_list`::"
msgstr ""

# 34380ca4c53e4e82a2187af0e45c87e8
#: ../../ref/contrib/comments/index.txt:118
msgid ""
"This returns a list of :class:`~django.contrib.comments.models.Comment` "
"objects; see :doc:`the comment model documentation </ref/contrib/comments/"
"models>` for details."
msgstr ""

# 2dfced2bfee6453397286cf8cf920e41
#: ../../ref/contrib/comments/index.txt:125
msgid "Linking to comments"
msgstr ""

# 59e4df400ad449309077a56c70c71e77
#: ../../ref/contrib/comments/index.txt:127
msgid ""
"To provide a permalink to a specific comment, use :ttag:"
"`get_comment_permalink`::"
msgstr ""

# a28d4d0842a54e7c9148fab342e6c7c3
#: ../../ref/contrib/comments/index.txt:131
msgid ""
"By default, the named anchor that will be appended to the URL will be the "
"letter 'c' followed by the comment id, for example 'c82'. You may specify a "
"custom format string if you wish to override this behavior::"
msgstr ""

# 403f41234b2f4fb38d18567db0dca28e
#: ../../ref/contrib/comments/index.txt:137
msgid ""
"The format string is a standard python format string. Valid mapping keys "
"include any attributes of the comment object."
msgstr ""

# a098093bdecb457d87569f557daccf08
#: ../../ref/contrib/comments/index.txt:140
msgid ""
"Regardless of whether you specify a custom anchor pattern, you must supply a "
"matching named anchor at a suitable place in your template."
msgstr ""

# 37ba663cc2f94ddfa1f26c012f29bf06
#: ../../ref/contrib/comments/index.txt:155
msgid ""
"There's a `known bug`_ in Safari/Webkit which causes the named anchor to be "
"forgotten following a redirect. The practical impact for comments is that "
"the Safari/webkit browsers will arrive at the correct page but will not "
"scroll to the named anchor."
msgstr ""

# 9cce35f03a6149ea82a21c1f7b23ef7a
#: ../../ref/contrib/comments/index.txt:165
msgid "Counting comments"
msgstr ""

# f2184e53a67b41eba7a2ea640913f58f
#: ../../ref/contrib/comments/index.txt:167
msgid ""
"To count comments attached to an object, use :ttag:`get_comment_count`::"
msgstr ""

# 9ac06be86dce43cd9079a250deb7b63d
#: ../../ref/contrib/comments/index.txt:179
msgid "Displaying the comment post form"
msgstr ""

# 72da91a48f0c4b49a9af3daa52b894b6
#: ../../ref/contrib/comments/index.txt:181
msgid ""
"To show the form that users will use to post a comment, you can use :ttag:"
"`render_comment_form` or :ttag:`get_comment_form`"
msgstr ""

# 9f389fc32f7446429ff92f826e7260f8
#: ../../ref/contrib/comments/index.txt:187
msgid "Quickly rendering the comment form"
msgstr ""

# d8ff1adf2a894387868c00a9237dcc1b
#: ../../ref/contrib/comments/index.txt:189
msgid ""
"The easiest way to display a comment form is by using :ttag:"
"`render_comment_form`::"
msgstr ""

# fb6d5ee1f9e24e3caa9b233f9c5f5cd5
#: ../../ref/contrib/comments/index.txt:198
msgid ""
"This will render comments using a template named ``comments/form.html``, a "
"default version of which is included with Django."
msgstr ""

# c5911f446ebb4acb9bcf9fa66bcc1a33
#: ../../ref/contrib/comments/index.txt:204
msgid "Rendering a custom comment form"
msgstr ""

# b13c2f28fda04be8badf3c3fddb007fb
#: ../../ref/contrib/comments/index.txt:206
msgid ""
"If you want more control over the look and feel of the comment form, you may "
"use :ttag:`get_comment_form` to get a :doc:`form object </topics/forms/"
"index>` that you can use in the template::"
msgstr ""

# 43dd38f5d58e414ebcc82ee07561299b
#: ../../ref/contrib/comments/index.txt:212
msgid "A complete form might look like::"
msgstr ""

# e7bf8887284e414db67622ccc3da6adb
#: ../../ref/contrib/comments/index.txt:228
msgid ""
"Be sure to read the `notes on the comment form`_, below, for some special "
"considerations you'll need to make if you're using this approach."
msgstr ""

# c8a760d4044340e9903181ce0cd4a05c
#: ../../ref/contrib/comments/index.txt:234
msgid "Getting the comment form target"
msgstr ""

# 0d4e994632d3412e83c84d7038d15261
#: ../../ref/contrib/comments/index.txt:236
msgid ""
"You may have noticed that the above example uses another template tag -- :"
"ttag:`comment_form_target` -- to actually get the ``action`` attribute of "
"the form. This will always return the correct URL that comments should be "
"posted to; you'll always want to use it like above::"
msgstr ""

# b2ff6f5e4657406088de4ac90be4bc86
#: ../../ref/contrib/comments/index.txt:244
msgid "Redirecting after the comment post"
msgstr ""

# 4067cb6b6d7740b793c4729e992d59b1
#: ../../ref/contrib/comments/index.txt:246
msgid ""
"To specify the URL you want to redirect to after the comment has been "
"posted, you can include a hidden form input called ``next`` in your comment "
"form. For example::"
msgstr ""

# 35642c3fb8484997b2a54bdec3e1d82b
#: ../../ref/contrib/comments/index.txt:252
msgid "Providing a comment form for authenticated users"
msgstr ""

# 54aebff61ec84e85b2301c88a4265925
#: ../../ref/contrib/comments/index.txt:254
msgid ""
"If a user is already authenticated, it makes little sense to display the "
"name, email, and URL fields, since these can already be retrieved from their "
"login data and profile. In addition, some sites will only accept comments "
"from authenticated users."
msgstr ""

# e4e10fb198c14168a86878712d3a0e96
#: ../../ref/contrib/comments/index.txt:259
msgid ""
"To provide a comment form for authenticated users, you can manually provide "
"the additional fields expected by the Django comments framework. For "
"example, assuming comments are attached to the model \"object\"::"
msgstr ""

# 078cb3d5f87e4d59826ecaac5987ce20
#: ../../ref/contrib/comments/index.txt:280
msgid ""
"The honeypot, content_type, object_pk, timestamp, and security_hash fields "
"are fields that would have been created automatically if you had simply used "
"``{{ form }}`` in your template, and are referred to in `Notes on the "
"comment form`_ below."
msgstr ""

# 02e7ebd9273b45a4b0743f26764dc393
#: ../../ref/contrib/comments/index.txt:285
msgid ""
"Note that we do not need to specify the user to be associated with comments "
"submitted by authenticated users. This is possible because the :doc:`Built-"
"in Comment Models</ref/contrib/comments/models>` that come with Django "
"associate comments with authenticated users by default."
msgstr ""

# 439ca36f96d94951b3532b0826839ea4
#: ../../ref/contrib/comments/index.txt:290
msgid ""
"In this example, the honeypot field will still be visible to the user; "
"you'll need to hide that field in your CSS::"
msgstr ""

# 38d694322d724e9ca2dafd274b83d75a
#: ../../ref/contrib/comments/index.txt:297
msgid ""
"If you want to accept either anonymous or authenticated comments, replace "
"the contents of the \"else\" clause above with a standard comment form and "
"the right thing will happen whether a user is logged in or not."
msgstr ""

# 8d899188cbb94d7295567a18d8223740
#: ../../ref/contrib/comments/index.txt:304
msgid "Notes on the comment form"
msgstr ""

# e5c5c3aee8604fe9ba4381f416a7d6ee
#: ../../ref/contrib/comments/index.txt:306
msgid ""
"The form used by the comment system has a few important anti-spam attributes "
"you should know about:"
msgstr ""

# 9176486bbcbb41de861f05357ee9748f
#: ../../ref/contrib/comments/index.txt:309
msgid ""
"It contains a number of hidden fields that contain timestamps, information "
"about the object the comment should be attached to, and a \"security hash\" "
"used to validate this information. If someone tampers with this data -- "
"something comment spammers will try -- the comment submission will fail."
msgstr ""

# 0ed2873940dd40038edaf21112391519
#: ../../ref/contrib/comments/index.txt:314
msgid ""
"If you're rendering a custom comment form, you'll need to make sure to pass "
"these values through unchanged."
msgstr ""

# 45bf49d63d47466885f6a65e85ba4c36
#: ../../ref/contrib/comments/index.txt:317
msgid ""
"The timestamp is used to ensure that \"reply attacks\" can't continue very "
"long. Users who wait too long between requesting the form and posting a "
"comment will have their submissions refused."
msgstr ""

# 4755ec92485a4b77acc4897705e86d2f
#: ../../ref/contrib/comments/index.txt:321
msgid ""
"The comment form includes a \"honeypot_\" field. It's a trap: if any data is "
"entered in that field, the comment will be considered spam (spammers often "
"automatically fill in all fields in an attempt to make valid submissions)."
msgstr ""

# 1d8f205ae9664858886de8b2cf36a96e
#: ../../ref/contrib/comments/index.txt:325
msgid ""
"The default form hides this field with a piece of CSS and further labels it "
"with a warning field; if you use the comment form with a custom template you "
"should be sure to do the same."
msgstr ""

# 214d8a03e84648d28d2bd67b130f5307
#: ../../ref/contrib/comments/index.txt:329
msgid ""
"The comments app also depends on the more general :doc:`Cross Site Request "
"Forgery protection </ref/contrib/csrf>` that comes with Django.  As "
"described in the documentation, it is best to use ``CsrfViewMiddleware``.  "
"However, if you are not using that, you will need to use the "
"``csrf_protect`` decorator on any views that include the comment form, in "
"order for those views to be able to output the CSRF token and cookie."
msgstr ""

# 0ade02b79b0d4b1a8815de8a2d828e92
#: ../../ref/contrib/comments/index.txt:339
msgid "More information"
msgstr ""

# c7da078f27d340ccb26e0e82d15a8890
#: ../../ref/contrib/comments/models.txt:3
msgid "The built-in comment models"
msgstr ""

# 19d0e9a4ca0a496e8286b8ef9d77453e
#: ../../ref/contrib/comments/models.txt:10
msgid "Django's built-in comment model. Has the following fields:"
msgstr ""

# a254212f56f244c081a7afea7e7e8953
#: ../../ref/contrib/comments/models.txt:14
msgid ""
"A :class:`~django.contrib.contenttypes.generic.GenericForeignKey` attribute "
"pointing to the object the comment is attached to. You can use this to get "
"at the related object (i.e. ``my_comment.content_object``)."
msgstr ""

# a4395ea597c443edac22b43e67604375
#: ../../ref/contrib/comments/models.txt:18
msgid ""
"Since this field is a :class:`~django.contrib.contenttypes.generic."
"GenericForeignKey`, it's actually syntactic sugar on top of two underlying "
"attributes, described below."
msgstr ""

# 37a64df6e2684110abe2f9528ec9e487
#: ../../ref/contrib/comments/models.txt:25
msgid ""
"A :class:`~django.db.models.ForeignKey` to :class:`~django.contrib."
"contenttypes.models.ContentType`; this is the type of the object the comment "
"is attached to."
msgstr ""

# ca82ba79188e4f77a47627e4251fea32
#: ../../ref/contrib/comments/models.txt:31
msgid ""
"A :class:`~django.db.models.TextField` containing the primary key of the "
"object the comment is attached to."
msgstr ""

# d32da8484bb34db68bbd6b94f2437b7e
#: ../../ref/contrib/comments/models.txt:36
msgid ""
"A :class:`~django.db.models.ForeignKey` to the :class:`~django.contrib.sites."
"models.Site` on which the comment was posted."
msgstr ""

# 7d7a4c4b43d14f61beee38460783fcf7
#: ../../ref/contrib/comments/models.txt:42
msgid ""
"A :class:`~django.db.models.ForeignKey` to the :class:`~django.contrib.auth."
"models.User` who posted the comment. May be blank if the comment was posted "
"by an unauthenticated user."
msgstr ""

# 38c17a60bc0b492d80a36a5609ba0233
#: ../../ref/contrib/comments/models.txt:48
msgid "The name of the user who posted the comment."
msgstr ""

# 5341fcac465c4f3c84476c458b9c82c4
#: ../../ref/contrib/comments/models.txt:52
msgid "The email of the user who posted the comment."
msgstr ""

# d74bc0e2b5bf46fe8759c5f761123bea
#: ../../ref/contrib/comments/models.txt:56
msgid "The URL entered by the person who posted the comment."
msgstr ""

# 8dcb2d049a44436cb8cb6a8e08b3f3fb
#: ../../ref/contrib/comments/models.txt:60
msgid "The actual content of the comment itself."
msgstr ""

# c5526383dae849c5a1ac0113700329d3
#: ../../ref/contrib/comments/models.txt:64
msgid "The date the comment was submitted."
msgstr ""

# af653b471b184e9db021c2baa317fcde
#: ../../ref/contrib/comments/models.txt:68
msgid "The IP address of the user posting the comment."
msgstr ""

# 91ef73f2b0a54781894b05e573a8cf00
#: ../../ref/contrib/comments/models.txt:72
msgid ""
"``False`` if the comment is in moderation (see :doc:`/ref/contrib/comments/"
"moderation`); If ``True``, the comment will be displayed on the site."
msgstr ""

# a2e6da79877f4e2592181f30720f7e72
#: ../../ref/contrib/comments/models.txt:78
msgid ""
"``True`` if the comment was removed. Used to keep track of removed comments "
"instead of just deleting them."
msgstr ""

# 5e67caafbf954b688edde4ae71e4a2f9
#: ../../ref/contrib/comments/moderation.txt:3
msgid "Generic comment moderation"
msgstr ""

# e5b05d4ae7ae4636a421f3671e697be4
#: ../../ref/contrib/comments/moderation.txt:8
msgid ""
"Django's bundled comments application is extremely useful on its own, but "
"the amount of comment spam circulating on the Web today essentially makes it "
"necessary to have some sort of automatic moderation system in place for any "
"application which makes use of comments. To make this easier to handle in a "
"consistent fashion, ``django.contrib.comments.moderation`` provides a "
"generic, extensible comment-moderation system which can be applied to any "
"model or set of models which want to make use of Django's comment system."
msgstr ""

# 8225311824034114a801252a5041224c
#: ../../ref/contrib/comments/moderation.txt:21
msgid ""
"The entire system is contained within ``django.contrib.comments."
"moderation``, and uses a two-step process to enable moderation for any given "
"model:"
msgstr ""

# ee8d042a71804998beb58979019b9d4a
#: ../../ref/contrib/comments/moderation.txt:24
msgid ""
"A subclass of :class:`CommentModerator` is defined which specifies the "
"moderation options the model wants to enable."
msgstr ""

# 4cca831bfc954a289d78dda37401f8c0
#: ../../ref/contrib/comments/moderation.txt:28
msgid ""
"The model is registered with the moderation system, passing in the model "
"class and the class which specifies its moderation options."
msgstr ""

# e50b2e8c9b8e4946885171e745627bdc
#: ../../ref/contrib/comments/moderation.txt:31
msgid ""
"A simple example is the best illustration of this. Suppose we have the "
"following model, which would represent entries in a Weblog::"
msgstr ""

# 800626585f364905891134c6cdf5124d
#: ../../ref/contrib/comments/moderation.txt:42
msgid ""
"Now, suppose that we want the following steps to be applied whenever a new "
"comment is posted on an ``Entry``:"
msgstr ""

# cdc269084f394e0ba48462d0c1e87747
#: ../../ref/contrib/comments/moderation.txt:45
msgid ""
"If the ``Entry``'s ``enable_comments`` field is ``False``, the comment will "
"simply be disallowed (i.e., immediately deleted)."
msgstr ""

# f062ca3ce5ff4bafb7a49040f9f60110
#: ../../ref/contrib/comments/moderation.txt:48
msgid ""
"If the ``enable_comments`` field is ``True``, the comment will be allowed to "
"save."
msgstr ""

# 5635dfad37a94bb58cf9eaea5ba88fb6
#: ../../ref/contrib/comments/moderation.txt:51
msgid ""
"Once the comment is saved, an email should be sent to site staff notifying "
"them of the new comment."
msgstr ""

# 015b0cca7e714c13b3e49dbd4ddee87c
#: ../../ref/contrib/comments/moderation.txt:54
msgid ""
"Accomplishing this is fairly straightforward and requires very little code::"
msgstr ""

# 909e24c18a0d4cf7bcf0f3176dd42b83
#: ../../ref/contrib/comments/moderation.txt:65
msgid ""
"The :class:`CommentModerator` class pre-defines a number of useful "
"moderation options which subclasses can enable or disable as desired, and "
"``moderator`` knows how to work with them to determine whether to allow a "
"comment, whether to moderate a comment which will be allowed to post, and "
"whether to email notifications of new comments."
msgstr ""

# 480ee7d8d82741cf97a8269326528555
#: ../../ref/contrib/comments/moderation.txt:72
msgid "Built-in moderation options"
msgstr ""

# ee8b716a417847be9a71062173271b4d
#: ../../ref/contrib/comments/moderation.txt:76
msgid ""
"Most common comment-moderation needs can be handled by subclassing :class:"
"`CommentModerator` and changing the values of pre-defined attributes; the "
"full range of built-in options is as follows."
msgstr ""

# cb0f6699736a4173a33333c7b438a9a9
#: ../../ref/contrib/comments/moderation.txt:83
msgid ""
"If this is set to the name of a :class:`~django.db.models.DateField` or :"
"class:`~django.db.models.DateTimeField` on the model for which comments are "
"being moderated, new comments for objects of that model will be disallowed "
"(immediately deleted) when a certain number of days have passed after the "
"date specified in that field. Must be used in conjunction with :attr:"
"`close_after`, which specifies the number of days past which comments should "
"be disallowed. Default value is ``None``."
msgstr ""

# 9ad8ea1098f2462384cd73e35d697d8b
#: ../../ref/contrib/comments/moderation.txt:95
msgid ""
"Like :attr:`auto_close_field`, but instead of outright deleting new comments "
"when the requisite number of days have elapsed, it will simply set the "
"``is_public`` field of new comments to ``False`` before saving them. Must be "
"used in conjunction with :attr:`moderate_after`, which specifies the number "
"of days past which comments should be moderated. Default value is ``None``."
msgstr ""

# 1af118038dde43fea56ebbac21dd30b6
#: ../../ref/contrib/comments/moderation.txt:104
msgid ""
"If :attr:`auto_close_field` is used, this must specify the number of days "
"past the value of the field specified by :attr:`auto_close_field` after "
"which new comments for an object should be disallowed. Allowed values are "
"``None``, 0 (which disallows comments immediately), or any positive integer. "
"Default value is ``None``."
msgstr ""

# 2e4a56e503e64678af409a304850e2dc
#: ../../ref/contrib/comments/moderation.txt:113
msgid ""
"If ``True``, any new comment on an object of this model which survives "
"moderation (i.e., is not deleted) will generate an email to site staff. "
"Default value is ``False``."
msgstr ""

# dee77616678e4095a24eb3a2c6850d18
#: ../../ref/contrib/comments/moderation.txt:119
msgid ""
"If this is set to the name of a :class:`~django.db.models.BooleanField` on "
"the model for which comments are being moderated, new comments on objects of "
"that model will be disallowed (immediately deleted) whenever the value of "
"that field is ``False`` on the object the comment would be attached to. "
"Default value is ``None``."
msgstr ""

# fb7ada56da874419a9b69aa2a65d3771
#: ../../ref/contrib/comments/moderation.txt:128
msgid ""
"If :attr:`auto_moderate_field` is used, this must specify the number of days "
"past the value of the field specified by :attr:`auto_moderate_field` after "
"which new comments for an object should be marked non-public. Allowed values "
"are ``None``, 0 (which moderates comments immediately), or any positive "
"integer. Default value is ``None``."
msgstr ""

# dc5d19d93fd948038a9008c2fb80ca50
#: ../../ref/contrib/comments/moderation.txt:135
msgid ""
"Simply subclassing :class:`CommentModerator` and changing the values of "
"these options will automatically enable the various moderation methods for "
"any models registered using the subclass."
msgstr ""

# 82d09931d6ee4f37b079b537cda72463
#: ../../ref/contrib/comments/moderation.txt:140
msgid "Adding custom moderation methods"
msgstr ""

# abeb131da3034e7fa861ae5ae507db03
#: ../../ref/contrib/comments/moderation.txt:142
msgid ""
"For situations where the built-in options listed above are not sufficient, "
"subclasses of :class:`CommentModerator` can also override the methods which "
"actually perform the moderation, and apply any logic they desire.  :class:"
"`CommentModerator` defines three methods which determine how moderation will "
"take place; each method will be called by the moderation system and passed "
"two arguments: ``comment``, which is the new comment being posted, "
"``content_object``, which is the object the comment will be attached to, and "
"``request``, which is the :class:`~django.http.HttpRequest` in which the "
"comment is being submitted:"
msgstr ""

# 8ae9176d7ea44e339d74193f45caa8a6
#: ../../ref/contrib/comments/moderation.txt:154
msgid ""
"Should return ``True`` if the comment should be allowed to post on the "
"content object, and ``False`` otherwise (in which case the comment will be "
"immediately deleted)."
msgstr ""

# b03a15688f474efc9d5ece213a5e92a7
#: ../../ref/contrib/comments/moderation.txt:160
msgid ""
"If email notification of the new comment should be sent to site staff or "
"moderators, this method is responsible for sending the email."
msgstr ""

# 614fde5b06154510be1608d2d38bf6ca
#: ../../ref/contrib/comments/moderation.txt:166
msgid ""
"Should return ``True`` if the comment should be moderated (in which case its "
"``is_public`` field will be set to ``False`` before saving), and ``False`` "
"otherwise (in which case the ``is_public`` field will not be changed)."
msgstr ""

# beb93358cde143da93a2ec7477b44274
#: ../../ref/contrib/comments/moderation.txt:173
msgid "Registering models for moderation"
msgstr ""

# 8e1163313bc94fad8b65c46159c93825
#: ../../ref/contrib/comments/moderation.txt:175
msgid ""
"The moderation system, represented by ``django.contrib.comments.moderation."
"moderator`` is an instance of the class :class:`Moderator`, which allows "
"registration and \"unregistration\" of models via two methods:"
msgstr ""

# 9d9e9356201340eba6dbbb75dcd98d2e
#: ../../ref/contrib/comments/moderation.txt:182
msgid ""
"Takes two arguments: the first should be either a model class or list of "
"model classes, and the second should be a subclass of ``CommentModerator``, "
"and register the model or models to be moderated using the options defined "
"in the ``CommentModerator`` subclass. If any of the models are already "
"registered for moderation, the exception ``AlreadyModerated`` will be raised."
msgstr ""

# 65a5d88186454f8488bc24a25c1ca975
#: ../../ref/contrib/comments/moderation.txt:192
msgid ""
"Takes one argument: a model class or list of model classes, and removes the "
"model or models from the set of models which are being moderated. If any of "
"the models are not currently being moderated, the exception ``NotModerated`` "
"will be raised."
msgstr ""

# 94e549da005a42d19c90fe04d3854a33
#: ../../ref/contrib/comments/moderation.txt:199
msgid "Customizing the moderation system"
msgstr ""

# fb8d3b4ed3f44e1eadd37675f3acfe34
#: ../../ref/contrib/comments/moderation.txt:201
msgid ""
"Most use cases will work easily with simple subclassing of :class:"
"`CommentModerator` and registration with the provided :class:`Moderator` "
"instance, but customization of global moderation behavior can be achieved by "
"subclassing :class:`Moderator` and instead registering models with an "
"instance of the subclass."
msgstr ""

# d7e1cebdfc1f458da5502800dd41c5ca
#: ../../ref/contrib/comments/moderation.txt:209
msgid ""
"In addition to the :func:`moderator.register` and :func:`moderator."
"unregister` methods detailed above, the following methods on :class:"
"`Moderator` can be overridden to achieve customized behavior:"
msgstr ""

# 0e4a14e1eccf4283a0d43615f7b3502e
#: ../../ref/contrib/comments/moderation.txt:215
msgid ""
"Determines how moderation is set up globally. The base implementation in :"
"class:`Moderator` does this by attaching listeners to the :data:`~django."
"contrib.comments.signals.comment_will_be_posted` and :data:`~django.contrib."
"comments.signals.comment_was_posted` signals from the comment models."
msgstr ""

# b93e1721dc234270a9bff4d45210cfd9
#: ../../ref/contrib/comments/moderation.txt:224
msgid ""
"In the base implementation, applies all pre-save moderation steps (such as "
"determining whether the comment needs to be deleted, or whether it needs to "
"be marked as non-public or generate an email)."
msgstr ""

# 93c95937353641f6b0a9c1e0e6f151c5
#: ../../ref/contrib/comments/moderation.txt:231
msgid ""
"In the base implementation, applies all post-save moderation steps "
"(currently this consists entirely of deleting comments which were "
"disallowed)."
msgstr ""

# 126e1282203f48f193b45bd691693fa0
#: ../../ref/contrib/comments/settings.txt:3
msgid "Comment settings"
msgstr ""

# 6f3bf4d77d88401cac4ce3cf90d2e707
#: ../../ref/contrib/comments/settings.txt:5
msgid "These settings configure the behavior of the comments framework:"
msgstr ""

# 9fc1c832fb1f4ee58899cc04f39a5bf1
#: ../../ref/contrib/comments/settings.txt:10
msgid "COMMENTS_HIDE_REMOVED"
msgstr ""

# 2a8270c7e97d4b719690aea3425cbefd
#: ../../ref/contrib/comments/settings.txt:12
msgid ""
"If ``True`` (default), removed comments will be excluded from comment lists/"
"counts (as taken from template tags). Otherwise, the template author is "
"responsible for some sort of a \"this comment has been removed by the site "
"staff\" message."
msgstr ""

# ee1204c1602d421fb49e573ababc4181
#: ../../ref/contrib/comments/settings.txt:20
msgid "COMMENT_MAX_LENGTH"
msgstr ""

# 433344807ce54f61b6a052b496364ff7
#: ../../ref/contrib/comments/settings.txt:22
msgid ""
"The maximum length of the comment field, in characters. Comments longer than "
"this will be rejected. Defaults to 3000."
msgstr ""

# c448ec89818e42129fdc7fa7c87b9d9c
#: ../../ref/contrib/comments/settings.txt:28
msgid "COMMENTS_APP"
msgstr ""

# f43579e621b64792a802b369966ef0ae
#: ../../ref/contrib/comments/settings.txt:30
msgid ""
"An app which provides :doc:`customization of the comments framework </ref/"
"contrib/comments/custom>`.  Use the same dotted-string notation as in :"
"setting:`INSTALLED_APPS`.  Your custom :setting:`COMMENTS_APP` must also be "
"listed in :setting:`INSTALLED_APPS`."
msgstr ""

# b842258915504bdc8ff6b40437252d3b
#: ../../ref/contrib/comments/signals.txt:3
msgid "Signals sent by the comments app"
msgstr ""

# 64d2fc6222244ae4aca4d83e20a26417
#: ../../ref/contrib/comments/signals.txt:8
msgid ""
"The comment app sends a series of :doc:`signals </topics/signals>` to allow "
"for comment moderation and similar activities. See :doc:`the introduction to "
"signals </topics/signals>` for information about how to register for and "
"receive these signals."
msgstr ""

# ceeee642c3854b3b83b3cbb053b37c41
#: ../../ref/contrib/comments/signals.txt:14
msgid "comment_will_be_posted"
msgstr ""

# 24908652f63f40d8971b95d592de0cd3
#: ../../ref/contrib/comments/signals.txt:19
msgid ""
"Sent just before a comment will be saved, after it's been sanity checked and "
"submitted. This can be used to modify the comment (in place) with posting "
"details or other such actions."
msgstr ""

# 02d12d6201f24d27b247f142da462230
#: ../../ref/contrib/comments/signals.txt:23
msgid ""
"If any receiver returns ``False`` the comment will be discarded and a 400 "
"response will be returned."
msgstr ""

# 7da295fd9072484e85faa03a2429ee17
#: ../../ref/contrib/comments/signals.txt:26
msgid ""
"This signal is sent at more or less the same time (just before, actually) as "
"the ``Comment`` object's :data:`~django.db.models.signals.pre_save` signal."
msgstr ""

# 96c5af85871a4d679deae11a3d3579f2
# 9845a263576d40a595513ef02c496807
# f7a3ad4bcd7f4fe5adbde35c3f1dc37c
#: ../../ref/contrib/comments/signals.txt:32
#: ../../ref/contrib/comments/signals.txt:53
#: ../../ref/contrib/comments/signals.txt:76
msgid "The comment model."
msgstr ""

# c9d947acab614211b71e3ad991b8dcba
# 30af64785be043f1acc11873a1dbc160
# f5bd6134f9c34e008247053ac8d34907
#: ../../ref/contrib/comments/signals.txt:37
#: ../../ref/contrib/comments/signals.txt:58
#: ../../ref/contrib/comments/signals.txt:81
msgid "``comment``"
msgstr ""

# 305803d8290947b6933f3bebbbedd899
#: ../../ref/contrib/comments/signals.txt:35
msgid ""
"The comment instance about to be posted. Note that it won't have been saved "
"into the database yet, so it won't have a primary key, and any relations "
"might not work correctly yet."
msgstr ""

# 5327f653c6b540b3a89fd8a0d06e7260
# f8d01edd47d44e80a3a8f277f0862475
# bce7b9e9ee3d4828b01e0508832107d1
#: ../../ref/contrib/comments/signals.txt:40
#: ../../ref/contrib/comments/signals.txt:61
#: ../../ref/contrib/comments/signals.txt:91
msgid "The :class:`~django.http.HttpRequest` that posted the comment."
msgstr ""

# 7d0cc1371bff4f7ca8ed2d2fbab9376c
#: ../../ref/contrib/comments/signals.txt:43
msgid "comment_was_posted"
msgstr ""

# 54a44b07e1d841318529e262a3beffcc
#: ../../ref/contrib/comments/signals.txt:48
msgid "Sent just after the comment is saved."
msgstr ""

# b9c1ef8c76c14571aa5fa413ee7bd696
# 05cccb8b42654affa5d3f7f1523e589e
#: ../../ref/contrib/comments/signals.txt:56
#: ../../ref/contrib/comments/signals.txt:79
msgid ""
"The comment instance that was posted. Note that it will have already been "
"saved, so if you modify it you'll need to call :meth:`~django.db.models."
"Model.save` again."
msgstr ""

# 202f6e93c63b49288b458d77771a3116
#: ../../ref/contrib/comments/signals.txt:64
msgid "comment_was_flagged"
msgstr ""

# 1dc3828e61a0479bb713c77f4b900573
#: ../../ref/contrib/comments/signals.txt:69
msgid ""
"Sent after a comment was \"flagged\" in some way. Check the flag to see if "
"this was a user requesting removal of a comment, a moderator approving/"
"removing a comment, or some other custom user flag."
msgstr ""

# 4c9f0314d15a46d2a87c27169b8ed04c
#: ../../ref/contrib/comments/signals.txt:85
msgid "``flag``"
msgstr ""

# ddb028ba97cd428182a73facc450ac46
#: ../../ref/contrib/comments/signals.txt:84
msgid ""
"The ``django.contrib.comments.models.CommentFlag`` that's been attached to "
"the comment."
msgstr ""

# 5a51fdb016ea47bf9303836542b5e1ae
# d53c8e6b763b45d08a8f7fe560821e5b
#: ../../ref/contrib/comments/signals.txt:88 ../../ref/signals.txt:145
msgid "``created``"
msgstr ""

# 3bea3b06a1c64f8fb1646e391d108192
#: ../../ref/contrib/comments/signals.txt:88
msgid "``True`` if this is a new flag; ``False`` if it's a duplicate flag."
msgstr ""

# 765e4695b8d84ebaaacc15fa086fbc41
#: ../../ref/contrib/contenttypes.txt:3
msgid "The contenttypes framework"
msgstr ""

# e983b92962924211a6f9d7296cf7cf71
#: ../../ref/contrib/contenttypes.txt:8
msgid ""
"Django includes a :mod:`~django.contrib.contenttypes` application that can "
"track all of the models installed in your Django-powered project, providing "
"a high-level, generic interface for working with your models."
msgstr ""

# a00c4f91a819498ca8b1dc7c401d684a
#: ../../ref/contrib/contenttypes.txt:15
msgid ""
"At the heart of the contenttypes application is the :class:`~django.contrib."
"contenttypes.models.ContentType` model, which lives at ``django.contrib."
"contenttypes.models.ContentType``. Instances of :class:`~django.contrib."
"contenttypes.models.ContentType` represent and store information about the "
"models installed in your project, and new instances of :class:`~django."
"contrib.contenttypes.models.ContentType` are automatically created whenever "
"new models are installed."
msgstr ""

# 24ce6fee7d9845c68e053d130a396899
#: ../../ref/contrib/contenttypes.txt:23
msgid ""
"Instances of :class:`~django.contrib.contenttypes.models.ContentType` have "
"methods for returning the model classes they represent and for querying "
"objects from those models. :class:`~django.contrib.contenttypes.models."
"ContentType` also has a :ref:`custom manager <custom-managers>` that adds "
"methods for working with :class:`~django.contrib.contenttypes.models."
"ContentType` and for obtaining instances of :class:`~django.contrib."
"contenttypes.models.ContentType` for a particular model."
msgstr ""

# 3ea94302616d4158b1ad820abc849100
#: ../../ref/contrib/contenttypes.txt:31
msgid ""
"Relations between your models and :class:`~django.contrib.contenttypes."
"models.ContentType` can also be used to enable \"generic\" relationships "
"between an instance of one of your models and instances of any model you "
"have installed."
msgstr ""

# f7a0ad5f0ce44f32af4800a1c427d755
#: ../../ref/contrib/contenttypes.txt:37
msgid "Installing the contenttypes framework"
msgstr ""

# 1d37553ca72e4238a03f70f0c4dd8f3f
#: ../../ref/contrib/contenttypes.txt:39
msgid ""
"The contenttypes framework is included in the default :setting:"
"`INSTALLED_APPS` list created by ``django-admin.py startproject``, but if "
"you've removed it or if you manually set up your :setting:`INSTALLED_APPS` "
"list, you can enable it by adding ``'django.contrib.contenttypes'`` to your :"
"setting:`INSTALLED_APPS` setting."
msgstr ""

# 4380614e0fd3444a8bfefd4d45de02c5
#: ../../ref/contrib/contenttypes.txt:45
msgid ""
"It's generally a good idea to have the contenttypes framework installed; "
"several of Django's other bundled applications require it:"
msgstr ""

# 34f3ccc2681847f3a3b4c4f80d0d1f9f
#: ../../ref/contrib/contenttypes.txt:48
msgid ""
"The admin application uses it to log the history of each object added or "
"changed through the admin interface."
msgstr ""

# e777b1af16c749e8a3100715007eafc2
#: ../../ref/contrib/contenttypes.txt:51
msgid ""
"Django's :mod:`authentication framework <django.contrib.auth>` uses it to "
"tie user permissions to specific models."
msgstr ""

# a51cabee20004b6092e9d406183bb69b
#: ../../ref/contrib/contenttypes.txt:54
msgid ""
"Django's comments system (:mod:`django.contrib.comments`) uses it to \"attach"
"\" comments to any installed model."
msgstr ""

# 822efc4267b64c76b1423da156261fdf
#: ../../ref/contrib/contenttypes.txt:60
msgid "The ``ContentType`` model"
msgstr ""

# 5291c68fa1fb460fb93ed605f703620c
#: ../../ref/contrib/contenttypes.txt:64
msgid ""
"Each instance of :class:`~django.contrib.contenttypes.models.ContentType` "
"has three fields which, taken together, uniquely describe an installed model:"
msgstr ""

# 9a51c1a17568463b830c6cf237530281
#: ../../ref/contrib/contenttypes.txt:70
msgid ""
"The name of the application the model is part of. This is taken from the :"
"attr:`app_label` attribute of the model, and includes only the *last* part "
"of the application's Python import path; \"django.contrib.contenttypes\", "
"for example, becomes an :attr:`app_label` of \"contenttypes\"."
msgstr ""

# e97cf3b9046f42d4a638fabe73454212
#: ../../ref/contrib/contenttypes.txt:78
msgid "The name of the model class."
msgstr ""

# e8e7b98243dd4873a9325fb4fb63d04f
#: ../../ref/contrib/contenttypes.txt:82
msgid ""
"The human-readable name of the model. This is taken from the :attr:"
"`verbose_name <django.db.models.Field.verbose_name>` attribute of the model."
msgstr ""

# 24574f17236a43a98a01071e0358b7a3
#: ../../ref/contrib/contenttypes.txt:86
msgid ""
"Let's look at an example to see how this works. If you already have the :mod:"
"`~django.contrib.contenttypes` application installed, and then add :mod:`the "
"sites application <django.contrib.sites>` to your :setting:`INSTALLED_APPS` "
"setting and run ``manage.py syncdb`` to install it, the model :class:`django."
"contrib.sites.models.Site` will be installed into your database. Along with "
"it a new instance of :class:`~django.contrib.contenttypes.models."
"ContentType` will be created with the following values:"
msgstr ""

# d1d7f4dc126f404fb1e66dced88a5d12
#: ../../ref/contrib/contenttypes.txt:95
msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.app_label` will be "
"set to ``'sites'`` (the last part of the Python path \"django.contrib.sites"
"\")."
msgstr ""

# a985ca83672b4926aecfe6c97e556ce0
#: ../../ref/contrib/contenttypes.txt:99
msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.model` will be set to "
"``'site'``."
msgstr ""

# 4635aff12bcb45a992c7572a53967847
#: ../../ref/contrib/contenttypes.txt:102
msgid ""
":attr:`~django.contrib.contenttypes.models.ContentType.name` will be set to "
"``'site'``."
msgstr ""

# 8648f592bf7c4770b729094f845a1515
#: ../../ref/contrib/contenttypes.txt:108
msgid "Methods on ``ContentType`` instances"
msgstr ""

# 7f80f69ebeb648b1a72414f5017c2626
#: ../../ref/contrib/contenttypes.txt:110
msgid ""
"Each :class:`~django.contrib.contenttypes.models.ContentType` instance has "
"methods that allow you to get from a :class:`~django.contrib.contenttypes."
"models.ContentType` instance to the model it represents, or to retrieve "
"objects from that model:"
msgstr ""

# 161960274d6e42bb92a45401d30a102e
#: ../../ref/contrib/contenttypes.txt:117
msgid ""
"Takes a set of valid :ref:`lookup arguments <field-lookups-intro>` for the "
"model the :class:`~django.contrib.contenttypes.models.ContentType` "
"represents, and does :meth:`a get() lookup <django.db.models.query.QuerySet."
"get>` on that model, returning the corresponding object."
msgstr ""

# 91cc654fcc514fa6856908a2f6141d12
#: ../../ref/contrib/contenttypes.txt:125
msgid ""
"Returns the model class represented by this :class:`~django.contrib."
"contenttypes.models.ContentType` instance."
msgstr ""

# 93ac7063e30c497f8693f784811c13bb
#: ../../ref/contrib/contenttypes.txt:128
msgid ""
"For example, we could look up the :class:`~django.contrib.contenttypes."
"models.ContentType` for the :class:`~django.contrib.auth.models.User` model::"
msgstr ""

# b36c4d1e4215425f8cb7a8e6d82ef00e
#: ../../ref/contrib/contenttypes.txt:137
msgid ""
"And then use it to query for a particular :class:`~django.contrib.auth."
"models.User`, or to get access to the ``User`` model class::"
msgstr ""

# ec598acaa15040e780e2d69396869e2d
#: ../../ref/contrib/contenttypes.txt:146
msgid ""
"Together, :meth:`~django.contrib.contenttypes.models.ContentType."
"get_object_for_this_type` and :meth:`~django.contrib.contenttypes.models."
"ContentType.model_class` enable two extremely important use cases:"
msgstr ""

# b5e5fe053bfc4d04a4b41644e3910391
#: ../../ref/contrib/contenttypes.txt:151
msgid ""
"Using these methods, you can write high-level generic code that performs "
"queries on any installed model -- instead of importing and using a single "
"specific model class, you can pass an ``app_label`` and ``model`` into a :"
"class:`~django.contrib.contenttypes.models.ContentType` lookup at runtime, "
"and then work with the model class or retrieve objects from it."
msgstr ""

# 40a857f21e324e428b89f795e11d9da1
#: ../../ref/contrib/contenttypes.txt:158
msgid ""
"You can relate another model to :class:`~django.contrib.contenttypes.models."
"ContentType` as a way of tying instances of it to particular model classes, "
"and use these methods to get access to those model classes."
msgstr ""

# eff8b3f2a0004fcd9473fb58b01acb7b
#: ../../ref/contrib/contenttypes.txt:163
msgid ""
"Several of Django's bundled applications make use of the latter technique. "
"For example, :class:`the permissions system <django.contrib.auth.models."
"Permission>` in Django's authentication framework uses a :class:`~django."
"contrib.auth.models.Permission` model with a foreign key to :class:`~django."
"contrib.contenttypes.models.ContentType`; this lets :class:`~django.contrib."
"auth.models.Permission` represent concepts like \"can add blog entry\" or "
"\"can delete news story\"."
msgstr ""

# fa5019435c9341c19028a5ec82c265b3
#: ../../ref/contrib/contenttypes.txt:173
msgid "The ``ContentTypeManager``"
msgstr ""

# 01a6124f81134e85b1aa6a19f1ab6829
#: ../../ref/contrib/contenttypes.txt:177
msgid ""
":class:`~django.contrib.contenttypes.models.ContentType` also has a custom "
"manager, :class:`~django.contrib.contenttypes.models.ContentTypeManager`, "
"which adds the following methods:"
msgstr ""

# f8332bd59ab5455ba8d0fa48a9458aaa
#: ../../ref/contrib/contenttypes.txt:183
msgid ""
"Clears an internal cache used by :class:`~django.contrib.contenttypes.models."
"ContentType` to keep track of models for which it has created :class:"
"`~django.contrib.contenttypes.models.ContentType` instances. You probably "
"won't ever need to call this method yourself; Django will call it "
"automatically when it's needed."
msgstr ""

# 93543f2751fa4c7197a7e30e4fbfaf01
#: ../../ref/contrib/contenttypes.txt:192
msgid ""
"Lookup a :class:`~django.contrib.contenttypes.models.ContentType` by ID. "
"Since this method uses the same shared cache as :meth:`~django.contrib."
"contenttypes.models.ContentTypeManager.get_for_model`, it's preferred to use "
"this method over the usual ``ContentType.objects.get(pk=id)``"
msgstr ""

# 81409fbe73e14c549de91e1779103e7f
#: ../../ref/contrib/contenttypes.txt:200
msgid ""
"Takes either a model class or an instance of a model, and returns the :class:"
"`~django.contrib.contenttypes.models.ContentType` instance representing that "
"model."
msgstr ""

# 0726733466164c3c81904e1d81cc833d
#: ../../ref/contrib/contenttypes.txt:206
msgid ""
"Takes a variadic number of model classes, and returns a dictionary mapping "
"the model classes to the :class:`~django.contrib.contenttypes.models."
"ContentType` instances representing them."
msgstr ""

# f14e3d63612c4cf39ede7dcc2b0707b6
#: ../../ref/contrib/contenttypes.txt:213
msgid ""
"Returns the :class:`~django.contrib.contenttypes.models.ContentType` "
"instance uniquely identified by the given application label and model name. "
"The primary purpose of this method is to allow :class:`~django.contrib."
"contenttypes.models.ContentType` objects to be referenced via a :ref:"
"`natural key<topics-serialization-natural-keys>` during deserialization."
msgstr ""

# 96a8f85e26504c1bbe691e6c36932de4
#: ../../ref/contrib/contenttypes.txt:220
msgid ""
"The :meth:`~ContentTypeManager.get_for_model()` method is especially useful "
"when you know you need to work with a :class:`ContentType <django.contrib."
"contenttypes.models.ContentType>` but don't want to go to the trouble of "
"obtaining the model's metadata to perform a manual lookup::"
msgstr ""

# a182203eb92749acafebec9ebfe0b0b8
#: ../../ref/contrib/contenttypes.txt:237
msgid ""
"Prior to Django 1.5, :meth:`~django.contrib.contenttypes.models."
"ContentTypeManager.get_for_model` and :meth:`~django.contrib.contenttypes."
"models.ContentTypeManager.get_for_models` always returned the :class:"
"`~django.contrib.contenttypes.models.ContentType` associated with the "
"concrete model of the specified one(s). That means there was no way to "
"retrieve the :class:`~django.contrib.contenttypes.models.ContentType` of a "
"proxy model using those methods. As of Django 1.5 you can now pass a boolean "
"flag – ``for_concrete_model`` and ``for_concrete_models`` respectively – to "
"specify wether or not you want to retrieve the :class:`~django.contrib."
"contenttypes.models.ContentType` for the concrete or direct model."
msgstr ""

# 76942ae587a241edac78b07bcb900d96
#: ../../ref/contrib/contenttypes.txt:251
msgid "Generic relations"
msgstr ""

# 5a8d4cedf19049fbad35ef65c64fc281
#: ../../ref/contrib/contenttypes.txt:253
msgid ""
"Adding a foreign key from one of your own models to :class:`~django.contrib."
"contenttypes.models.ContentType` allows your model to effectively tie itself "
"to another model class, as in the example of the :class:`~django.contrib."
"auth.models.Permission` model above. But it's possible to go one step "
"further and use :class:`~django.contrib.contenttypes.models.ContentType` to "
"enable truly generic (sometimes called \"polymorphic\") relationships "
"between models."
msgstr ""

# f46896330dac4e409a3a359bd8398cae
#: ../../ref/contrib/contenttypes.txt:261
msgid "A simple example is a tagging system, which might look like this::"
msgstr ""

# cdd4db51f47443fcb6d7df87408820ba
#: ../../ref/contrib/contenttypes.txt:276
msgid ""
"A normal :class:`~django.db.models.ForeignKey` can only \"point to\" one "
"other model, which means that if the ``TaggedItem`` model used a :class:"
"`~django.db.models.ForeignKey` it would have to choose one and only one "
"model to store tags for. The contenttypes application provides a special "
"field type (``GenericForeignKey``) which works around this and allows the "
"relationship to be with any model:"
msgstr ""

# f9b44475a9704a728235b8cf8ed4fb72
#: ../../ref/contrib/contenttypes.txt:286
msgid ""
"There are three parts to setting up a :class:`~django.contrib.contenttypes."
"generic.GenericForeignKey`:"
msgstr ""

# 270318abfd4242c0aa3e9e9d55095b2d
#: ../../ref/contrib/contenttypes.txt:289
msgid ""
"Give your model a :class:`~django.db.models.ForeignKey` to :class:`~django."
"contrib.contenttypes.models.ContentType`. The usual name for this field is "
"\"content_type\"."
msgstr ""

# c676b25488cf4c94b19879801cc5bf86
#: ../../ref/contrib/contenttypes.txt:293
msgid ""
"Give your model a field that can store primary key values from the models "
"you'll be relating to. For most models, this means a :class:`~django.db."
"models.PositiveIntegerField`. The usual name for this field is \"object_id\"."
msgstr ""

# c5dcb50a976b42c5a468da8d141aedf4
#: ../../ref/contrib/contenttypes.txt:298
msgid ""
"Give your model a :class:`~django.contrib.contenttypes.generic."
"GenericForeignKey`, and pass it the names of the two fields described above. "
"If these fields are named \"content_type\" and \"object_id\", you can omit "
"this -- those are the default field names :class:`~django.contrib."
"contenttypes.generic.GenericForeignKey` will look for."
msgstr ""

# ab9a8677d88b4482bfb401280f146b02
#: ../../ref/contrib/contenttypes.txt:306
msgid "Primary key type compatibility"
msgstr ""

# b869e413bb6d48898f07b3d6374d5e9f
#: ../../ref/contrib/contenttypes.txt:308
msgid ""
"The \"object_id\" field doesn't have to be the same type as the primary key "
"fields on the related models, but their primary key values must be coercible "
"to the same type as the \"object_id\" field by its :meth:`~django.db.models."
"Field.get_db_prep_value` method."
msgstr ""

# ec2734b0370f4b6f92250a128c62b6ce
#: ../../ref/contrib/contenttypes.txt:313
msgid ""
"For example, if you want to allow generic relations to models with either :"
"class:`~django.db.models.IntegerField` or :class:`~django.db.models."
"CharField` primary key fields, you can use :class:`~django.db.models."
"CharField` for the \"object_id\" field on your model since integers can be "
"coerced to strings by :meth:`~django.db.models.Field.get_db_prep_value`."
msgstr ""

# 65b541b8c3a0481db60fca3f362b15e3
#: ../../ref/contrib/contenttypes.txt:320
msgid ""
"For maximum flexibility you can use a :class:`~django.db.models.TextField` "
"which doesn't have a maximum length defined, however this may incur "
"significant performance penalties depending on your database backend."
msgstr ""

# 63493b90c50d4c94a141be82b84c31e5
#: ../../ref/contrib/contenttypes.txt:325
msgid ""
"There is no one-size-fits-all solution for which field type is best. You "
"should evaluate the models you expect to be pointing to and determine which "
"solution will be most effective for your use case."
msgstr ""

# 2c05885c21ca4a6f9f27b0a418ef461f
#: ../../ref/contrib/contenttypes.txt:329
msgid "Serializing references to ``ContentType`` objects"
msgstr ""

# 0513f4bad5144f21a840971aa0d57ab5
#: ../../ref/contrib/contenttypes.txt:331
msgid ""
"If you're serializing data (for example, when generating :class:`~django."
"test.TestCase.fixtures`) from a model that implements generic relations, you "
"should probably be using a natural key to uniquely identify related :class:"
"`~django.contrib.contenttypes.models.ContentType` objects. See :ref:`natural "
"keys<topics-serialization-natural-keys>` and :djadminopt:`dumpdata --natural "
"<--natural>` for more information."
msgstr ""

# a98603f2f1ab4df2a446ecb59119ceeb
#: ../../ref/contrib/contenttypes.txt:338
msgid ""
"This will enable an API similar to the one used for a normal :class:`~django."
"db.models.ForeignKey`; each ``TaggedItem`` will have a ``content_object`` "
"field that returns the object it's related to, and you can also assign to "
"that field or use it when creating a ``TaggedItem``::"
msgstr ""

# 69f31e57adb24955bbf4ba84b626f131
#: ../../ref/contrib/contenttypes.txt:351
msgid ""
"Due to the way :class:`~django.contrib.contenttypes.generic."
"GenericForeignKey` is implemented, you cannot use such fields directly with "
"filters (``filter()`` and ``exclude()``, for example) via the database API. "
"Because a :class:`~django.contrib.contenttypes.generic.GenericForeignKey` "
"isn't a normal field object, these examples will *not* work::"
msgstr ""

# c1b5fbf5b8dc4279a935d93c02122433
#: ../../ref/contrib/contenttypes.txt:362
msgid ""
"Likewise, :class:`~django.contrib.contenttypes.generic.GenericForeignKey`\\s "
"does not appear in :class:`~django.forms.ModelForm`\\s."
msgstr ""

# 3faceffae15c4ca7976cbf67ab95229d
#: ../../ref/contrib/contenttypes.txt:366
msgid "Reverse generic relations"
msgstr ""

# 9739abd4f7c64a47ad84f8b8d3651e41
#: ../../ref/contrib/contenttypes.txt:367
msgid ""
"If you know which models you'll be using most often, you can also add a "
"\"reverse\" generic relationship to enable an additional API. For example::"
msgstr ""

# f97e83a493924f1288b197cb1c262e4c
#: ../../ref/contrib/contenttypes.txt:374
msgid ""
"``Bookmark`` instances will each have a ``tags`` attribute, which can be "
"used to retrieve their associated ``TaggedItems``::"
msgstr ""

# 966ca46b192145ddb13cc7665916a2fe
#: ../../ref/contrib/contenttypes.txt:386
msgid ""
"Just as :class:`~django.contrib.contenttypes.generic.GenericForeignKey` "
"accepts the names of the content-type and object-ID fields as arguments, so "
"too does :class:`~django.contrib.contenttypes.generic.GenericRelation`; if "
"the model which has the generic foreign key is using non-default names for "
"those fields, you must pass the names of the fields when setting up a :class:"
"`.GenericRelation` to it. For example, if the ``TaggedItem`` model referred "
"to above used fields named ``content_type_fk`` and ``object_primary_key`` to "
"create its generic foreign key, then a :class:`.GenericRelation` back to it "
"would need to be defined like so::"
msgstr ""

# a8504b4007d44ed08d5af9986f876648
#: ../../ref/contrib/contenttypes.txt:401
msgid ""
"Of course, if you don't add the reverse relationship, you can do the same "
"types of lookups manually::"
msgstr ""

# 8b03420126fc4ede87f868046f477308
#: ../../ref/contrib/contenttypes.txt:410
msgid ""
"Note that if the model in a :class:`~django.contrib.contenttypes.generic."
"GenericRelation` uses a non-default value for ``ct_field`` or ``fk_field`` "
"in its :class:`~django.contrib.contenttypes.generic.GenericForeignKey` (e.g. "
"the :mod:`django.contrib.comments` app uses ``ct_field=\"object_pk\"``), "
"you'll need to set ``content_type_field`` and/or ``object_id_field`` in the :"
"class:`~django.contrib.contenttypes.generic.GenericRelation` to match the "
"``ct_field`` and ``fk_field``, respectively, in the :class:`~django.contrib."
"contenttypes.generic.GenericForeignKey`::"
msgstr ""

# 7cc7cade3b02405db2b6a3eff9329d35
#: ../../ref/contrib/contenttypes.txt:422
msgid ""
"Note also, that if you delete an object that has a :class:`~django.contrib."
"contenttypes.generic.GenericRelation`, any objects which have a :class:"
"`~django.contrib.contenttypes.generic.GenericForeignKey` pointing at it will "
"be deleted as well. In the example above, this means that if a ``Bookmark`` "
"object were deleted, any ``TaggedItem`` objects pointing at it would be "
"deleted at the same time."
msgstr ""

# a5849fc5a7604ce3aff5dd5cd2633c50
#: ../../ref/contrib/contenttypes.txt:429
msgid ""
"Unlike :class:`~django.db.models.ForeignKey`, :class:`~django.contrib."
"contenttypes.generic.GenericForeignKey` does not accept an :attr:`~django.db."
"models.ForeignKey.on_delete` argument to customize this behavior; if "
"desired, you can avoid the cascade-deletion simply by not using :class:"
"`~django.contrib.contenttypes.generic.GenericRelation`, and alternate "
"behavior can be provided via the :data:`~django.db.models.signals."
"pre_delete` signal."
msgstr ""

# 7c5496a3c3004ba8a73d224774eb13a4
#: ../../ref/contrib/contenttypes.txt:438
msgid "Generic relations and aggregation"
msgstr ""

# 16a8fb744ce34b1c955e3773f1154947
#: ../../ref/contrib/contenttypes.txt:440
msgid ""
":doc:`Django's database aggregation API </topics/db/aggregation>` doesn't "
"work with a :class:`~django.contrib.contenttypes.generic.GenericRelation`. "
"For example, you might be tempted to try something like::"
msgstr ""

# 622a2b0efbe54911a9aa8056b7022f22
#: ../../ref/contrib/contenttypes.txt:447
msgid ""
"This will not work correctly, however. The generic relation adds extra "
"filters to the queryset to ensure the correct content type, but the :meth:"
"`~django.db.models.query.QuerySet.aggregate` method doesn't take them into "
"account. For now, if you need aggregates on generic relations, you'll need "
"to calculate them without using the aggregation API."
msgstr ""

# f02a4c6119834b2c900b2808332efe9f
#: ../../ref/contrib/contenttypes.txt:454
msgid "Generic relations in forms and admin"
msgstr ""

# 9912ff781e614dd39ecd3105095718fc
#: ../../ref/contrib/contenttypes.txt:456
msgid "The :mod:`django.contrib.contenttypes.generic` module provides:"
msgstr ""

# 28091205068349ffae3a74da6188317f
#: ../../ref/contrib/contenttypes.txt:458
msgid "``BaseGenericInlineFormSet``"
msgstr ""

# eec9677f77684bb6ba2f2fb66076e4b3
#: ../../ref/contrib/contenttypes.txt:459
msgid ""
":class:`~django.contrib.contenttypes.generic.GenericTabularInline` and :"
"class:`~django.contrib.contenttypes.generic.GenericStackedInline` "
"(subclasses of :class:`~django.contrib.contenttypes.generic."
"GenericInlineModelAdmin`)"
msgstr ""

# bb09f4cef26448199c229bd23acb32cc
#: ../../ref/contrib/contenttypes.txt:463
msgid ""
"A formset factory, :func:`generic_inlineformset_factory`, for use with :"
"class:`GenericForeignKey`"
msgstr ""

# d280cb0296ab40b39f7347e8af458cd1
#: ../../ref/contrib/contenttypes.txt:466
msgid ""
"These classes and functions enable the use of generic relations in forms and "
"the admin. See the :doc:`model formset </topics/forms/modelforms>` and :ref:"
"`admin <using-generic-relations-as-an-inline>` documentation for more "
"information."
msgstr ""

# 1948bef38fc94a03bee4c33a25ffb0de
#: ../../ref/contrib/contenttypes.txt:473
msgid ""
"The :class:`~django.contrib.contenttypes.generic.GenericInlineModelAdmin` "
"class inherits all properties from an :class:`~django.contrib.admin."
"InlineModelAdmin` class. However, it adds a couple of its own for working "
"with the generic relation:"
msgstr ""

# 9e15483474ad478d8d1a798c3e92f712
#: ../../ref/contrib/contenttypes.txt:480
msgid ""
"The name of the :class:`~django.contrib.contenttypes.models.ContentType` "
"foreign key field on the model. Defaults to ``content_type``."
msgstr ""

# 79b0e4229ae14f0fbecb8718607e0c71
#: ../../ref/contrib/contenttypes.txt:486
msgid ""
"The name of the integer field that represents the ID of the related object. "
"Defaults to ``object_id``."
msgstr ""

# 92b085ed154a4df1ab87e1c5acf20d72
#: ../../ref/contrib/contenttypes.txt:492
msgid ""
"Subclasses of :class:`GenericInlineModelAdmin` with stacked and tabular "
"layouts, respectively."
msgstr ""

# d8eba84b73a2450bba243f4994ef0f0a
#: ../../ref/contrib/contenttypes.txt:497
msgid ""
"Returns a ``GenericInlineFormSet`` using :func:`~django.forms.models."
"modelformset_factory`."
msgstr ""

# bdea560bcf5542b285f912538b6968bd
#: ../../ref/contrib/contenttypes.txt:500
msgid ""
"You must provide ``ct_field`` and ``fk_field`` if they are different from "
"the defaults, ``content_type`` and ``object_id`` respectively. Other "
"parameters are similar to those documented in :func:`~django.forms.models."
"modelformset_factory` and :func:`~django.forms.models.inlineformset_factory`."
msgstr ""

# f83e40f3d7ca4e9d89f0683b622d9872
#: ../../ref/contrib/csrf.txt:3
msgid "Cross Site Request Forgery protection"
msgstr ""

# 72f6c8bf50cc4e529fa29a7595db7ea8
#: ../../ref/contrib/csrf.txt:8
msgid ""
"The CSRF middleware and template tag provides easy-to-use protection against "
"`Cross Site Request Forgeries`_.  This type of attack occurs when a "
"malicious Web site contains a link, a form button or some javascript that is "
"intended to perform some action on your Web site, using the credentials of a "
"logged-in user who visits the malicious site in their browser.  A related "
"type of attack, 'login CSRF', where an attacking site tricks a user's "
"browser into logging into a site with someone else's credentials, is also "
"covered."
msgstr ""

# 8ea4a188bf7447adaac95ebb306899f6
#: ../../ref/contrib/csrf.txt:16
msgid ""
"The first defense against CSRF attacks is to ensure that GET requests (and "
"other 'safe' methods, as defined by 9.1.1 Safe Methods, HTTP 1.1, :rfc:"
"`2616#section-9.1.1`) are side-effect free. Requests via 'unsafe' methods, "
"such as POST, PUT and DELETE, can then be protected by following the steps "
"below."
msgstr ""

# f6ecc9892d124d878913662c4651b202
#: ../../ref/contrib/csrf.txt:29
msgid "To enable CSRF protection for your views, follow these steps:"
msgstr ""

# 73e7b8566fcf43aaa104faa11b678896
#: ../../ref/contrib/csrf.txt:31
msgid ""
"Add the middleware ``'django.middleware.csrf.CsrfViewMiddleware'`` to your "
"list of middleware classes, :setting:`MIDDLEWARE_CLASSES`.  (It should come "
"before any view middleware that assume that CSRF attacks have been dealt "
"with.)"
msgstr ""

# 8c907aef31804c40a21eb42538b36253
#: ../../ref/contrib/csrf.txt:37
msgid ""
"Alternatively, you can use the decorator :func:`~django.views.decorators."
"csrf.csrf_protect` on particular views you want to protect (see below)."
msgstr ""

# 40513996c04b442582571a49a8889c19
#: ../../ref/contrib/csrf.txt:41
msgid ""
"In any template that uses a POST form, use the :ttag:`csrf_token` tag inside "
"the ``<form>`` element if the form is for an internal URL, e.g.::"
msgstr ""

# 3d09e9f0208e463a9bc9f73e3c01a7bc
#: ../../ref/contrib/csrf.txt:46
msgid ""
"This should not be done for POST forms that target external URLs, since that "
"would cause the CSRF token to be leaked, leading to a vulnerability."
msgstr ""

# 75af3a372738475584d6e58d8d9a4f1d
#: ../../ref/contrib/csrf.txt:49
msgid ""
"In the corresponding view functions, ensure that the ``'django.core."
"context_processors.csrf'`` context processor is being used. Usually, this "
"can be done in one of two ways:"
msgstr ""

# bd6bbe6823ee46138393d3c64fcb8b90
#: ../../ref/contrib/csrf.txt:53
msgid ""
"Use RequestContext, which always uses ``'django.core.context_processors."
"csrf'`` (no matter what your TEMPLATE_CONTEXT_PROCESSORS setting).  If you "
"are using generic views or contrib apps, you are covered already, since "
"these apps use RequestContext throughout."
msgstr ""

# c5b627a669ab43a393f5f743848f8de5
#: ../../ref/contrib/csrf.txt:59
msgid ""
"Manually import and use the processor to generate the CSRF token and add it "
"to the template context. e.g.::"
msgstr ""

# e9a7786b942d42059db252163184f4f2
#: ../../ref/contrib/csrf.txt:71
msgid ""
"You may want to write your own :func:`~django.shortcuts."
"render_to_response()` wrapper that takes care of this step for you."
msgstr ""

# 3c16260f05fa466d8043a8e1442c7dac
#: ../../ref/contrib/csrf.txt:75
msgid ""
"The utility script ``extras/csrf_migration_helper.py`` (located in the "
"Django distribution, but not installed) can help to automate the finding of "
"code and templates that may need these steps. It contains full help on how "
"to use it."
msgstr ""

# d42c8441e87a4d64807bc86a7f0d28b2
#: ../../ref/contrib/csrf.txt:82
msgid "AJAX"
msgstr ""

# d3e2a44367cf45f090187adfe23d679d
#: ../../ref/contrib/csrf.txt:84
msgid ""
"While the above method can be used for AJAX POST requests, it has some "
"inconveniences: you have to remember to pass the CSRF token in as POST data "
"with every POST request. For this reason, there is an alternative method: on "
"each XMLHttpRequest, set a custom ``X-CSRFToken`` header to the value of the "
"CSRF token. This is often easier, because many javascript frameworks provide "
"hooks that allow headers to be set on every request."
msgstr ""

# 90593323203444218bb5ac4b88dc23cb
#: ../../ref/contrib/csrf.txt:91
msgid ""
"As a first step, you must get the CSRF token itself. The recommended source "
"for the token is the ``csrftoken`` cookie, which will be set if you've "
"enabled CSRF protection for your views as outlined above."
msgstr ""

# 60299d718e124773acf69c53557ca6a5
#: ../../ref/contrib/csrf.txt:97
msgid ""
"The CSRF token cookie is named ``csrftoken`` by default, but you can control "
"the cookie name via the :setting:`CSRF_COOKIE_NAME` setting."
msgstr ""

# 4cb929afeb424cbea9e651edfc440fe1
#: ../../ref/contrib/csrf.txt:100
msgid "Acquiring the token is straightforward:"
msgstr ""

# 2184f99a7cc14a06b82d6947f783c6fe
#: ../../ref/contrib/csrf.txt:122
msgid ""
"The above code could be simplified by using the `jQuery cookie plugin "
"<http://plugins.jquery.com/cookie/>`_ to replace ``getCookie``:"
msgstr ""

# 0e6c0c0615ea4e3691b439542cc2c086
#: ../../ref/contrib/csrf.txt:131
msgid ""
"The CSRF token is also present in the DOM, but only if explicitly included "
"using :ttag:`csrf_token` in a template. The cookie contains the canonical "
"token; the ``CsrfViewMiddleware`` will prefer the cookie to the token in the "
"DOM. Regardless, you're guaranteed to have the cookie if the token is "
"present in the DOM, so you should use the cookie!"
msgstr ""

# 9aa463d8e6484db7a870f8a61b2ce379
#: ../../ref/contrib/csrf.txt:139
msgid ""
"If your view is not rendering a template containing the :ttag:`csrf_token` "
"template tag, Django might not set the CSRF token cookie. This is common in "
"cases where forms are dynamically added to the page. To address this case, "
"Django provides a view decorator which forces setting of the cookie: :func:"
"`~django.views.decorators.csrf.ensure_csrf_cookie`."
msgstr ""

# bbeba6b228d4449d8d255b9862364943
#: ../../ref/contrib/csrf.txt:145
msgid ""
"Finally, you'll have to actually set the header on your AJAX request, while "
"protecting the CSRF token from being sent to other domains."
msgstr ""

# 6593a206aead47c58149aab201ba98de
#: ../../ref/contrib/csrf.txt:180
msgid ""
"Due to a bug introduced in jQuery 1.5, the example above will not work "
"correctly on that version. Make sure you are running at least jQuery 1.5.1."
msgstr ""

# 9e9a20b49d3040388be41fd724ac6f46
#: ../../ref/contrib/csrf.txt:183
msgid ""
"You can use `settings.crossDomain <http://api.jquery.com/jQuery.ajax>`_ in "
"jQuery 1.5 and newer in order to replace the ``sameOrigin`` logic above:"
msgstr ""

# 5c422a04225e4a0db7a0651463bc35f8
#: ../../ref/contrib/csrf.txt:203
msgid ""
"In a `security release blogpost`_, a simpler \"same origin test\" example "
"was provided which only checked for a relative URL. The ``sameOrigin`` test "
"above supersedes that example—it works for edge cases like scheme-relative "
"or absolute URLs for the same domain."
msgstr ""

# a514464eeb924c51bbf14250ff91e781
#: ../../ref/contrib/csrf.txt:211
msgid "Other template engines"
msgstr ""

# 831b23ad02ec41f298dc273edada88db
#: ../../ref/contrib/csrf.txt:213
msgid ""
"When using a different template engine than Django's built-in engine, you "
"can set the token in your forms manually after making sure it's available in "
"the template context."
msgstr ""

# 6e8f82dab8e34b7e9a8361ebe774eae8
#: ../../ref/contrib/csrf.txt:217
msgid ""
"For example, in the Cheetah template language, your form could contain the "
"following:"
msgstr ""

# 73dccf48e80d485083e130b03cb52121
#: ../../ref/contrib/csrf.txt:226
msgid ""
"You can use JavaScript similar to the :ref:`AJAX code <csrf-ajax>` above to "
"get the value of the CSRF token."
msgstr ""

# 739902a2238f40cc972c3bcba128cf4a
#: ../../ref/contrib/csrf.txt:230
msgid "The decorator method"
msgstr ""

# afa554c4b66a42f18d9b60b3e0febf22
#: ../../ref/contrib/csrf.txt:234
msgid ""
"Rather than adding ``CsrfViewMiddleware`` as a blanket protection, you can "
"use the ``csrf_protect`` decorator, which has exactly the same "
"functionality, on particular views that need the protection. It must be used "
"**both** on views that insert the CSRF token in the output, and on those "
"that accept the POST form data. (These are often the same view function, but "
"not always)."
msgstr ""

# 04f6ecc5b02f48c79ff71b4647996f7d
#: ../../ref/contrib/csrf.txt:240
msgid ""
"Use of the decorator by itself is **not recommended**, since if you forget "
"to use it, you will have a security hole. The 'belt and braces' strategy of "
"using both is fine, and will incur minimal overhead."
msgstr ""

# 75dcdc205f27463ba2da7508e6175e7b
#: ../../ref/contrib/csrf.txt:246
msgid ""
"Decorator that provides the protection of ``CsrfViewMiddleware`` to a view."
msgstr ""

# 981f13c1ada74303bc3bd75ad6f6571a
# 6325348b53e44751b28718ad3655711c
#: ../../ref/contrib/csrf.txt:248 ../../ref/contrib/webdesign.txt:32
msgid "Usage::"
msgstr ""

# d0e512f054634f72a47e66456692f753
#: ../../ref/contrib/csrf.txt:260
msgid "Rejected requests"
msgstr ""

# a44cae0d6a714a4c97dd34a1bfc810c7
#: ../../ref/contrib/csrf.txt:262
msgid ""
"By default, a '403 Forbidden' response is sent to the user if an incoming "
"request fails the checks performed by ``CsrfViewMiddleware``.  This should "
"usually only be seen when there is a genuine Cross Site Request Forgery, or "
"when, due to a programming error, the CSRF token has not been included with "
"a POST form."
msgstr ""

# cdb1e0d14c04456ba6799f8064197e45
#: ../../ref/contrib/csrf.txt:268
msgid ""
"The error page, however, is not very friendly, so you may want to provide "
"your own view for handling this condition.  To do this, simply set the :"
"setting:`CSRF_FAILURE_VIEW` setting."
msgstr ""

# 2b66ee1a0c5c4ff0990d6e0ea88d65a7
# 7f08f363a8d84346bb3c6028a3865050
# 6f92295c3b2843c5ac8733be6e510c27
# ab8ab4fd71cd436baae73a1601764503
#: ../../ref/contrib/csrf.txt:275 ../../ref/contrib/flatpages.txt:63
#: ../../ref/contrib/formtools/form-wizard.txt:23
#: ../../ref/contrib/redirects.txt:24
msgid "How it works"
msgstr ""

# 254b6117d10d4032a1f282828d8740a7
#: ../../ref/contrib/csrf.txt:277
msgid "The CSRF protection is based on the following things:"
msgstr ""

# 90fb022172ea46eb81f11b46678320a3
#: ../../ref/contrib/csrf.txt:279
msgid ""
"A CSRF cookie that is set to a random value (a session independent nonce, as "
"it is called), which other sites will not have access to."
msgstr ""

# 9aad8100c58c460fbfe06550956a647b
#: ../../ref/contrib/csrf.txt:282
msgid ""
"This cookie is set by ``CsrfViewMiddleware``.  It is meant to be permanent, "
"but since there is no way to set a cookie that never expires, it is sent "
"with every response that has called ``django.middleware.csrf.get_token()`` "
"(the function used internally to retrieve the CSRF token)."
msgstr ""

# a63cd68cc2274623baf348bd54eaa25a
#: ../../ref/contrib/csrf.txt:287
msgid ""
"A hidden form field with the name 'csrfmiddlewaretoken' present in all "
"outgoing POST forms.  The value of this field is the value of the CSRF "
"cookie."
msgstr ""

# 9fc2018ee676435a8c1f9486266b51da
#: ../../ref/contrib/csrf.txt:291
msgid "This part is done by the template tag."
msgstr ""

# 4bddfd0453af4d4a861b6a23c926f532
#: ../../ref/contrib/csrf.txt:293
msgid ""
"For all incoming requests that are not using HTTP GET, HEAD, OPTIONS or "
"TRACE, a CSRF cookie must be present, and the 'csrfmiddlewaretoken' field "
"must be present and correct. If it isn't, the user will get a 403 error."
msgstr ""

# 2f6a9d0de3704c71932dceb3450b815b
#: ../../ref/contrib/csrf.txt:297
msgid "This check is done by ``CsrfViewMiddleware``."
msgstr ""

# 1656ae039f3a499fbb1f20b9fc5527bc
#: ../../ref/contrib/csrf.txt:299
msgid ""
"In addition, for HTTPS requests, strict referer checking is done by "
"``CsrfViewMiddleware``.  This is necessary to address a Man-In-The-Middle "
"attack that is possible under HTTPS when using a session independent nonce, "
"due to the fact that HTTP 'Set-Cookie' headers are (unfortunately) accepted "
"by clients that are talking to a site under HTTPS.  (Referer checking is not "
"done for HTTP requests because the presence of the Referer header is not "
"reliable enough under HTTP.)"
msgstr ""

# 9426a267bb4e4f61a61ffb44442eb9b7
#: ../../ref/contrib/csrf.txt:307
msgid ""
"This ensures that only forms that have originated from your Web site can be "
"used to POST data back."
msgstr ""

# 0c927953a1604905a66921d62e522b5f
#: ../../ref/contrib/csrf.txt:310
msgid ""
"It deliberately ignores GET requests (and other requests that are defined as "
"'safe' by :rfc:`2616`). These requests ought never to have any potentially "
"dangerous side effects , and so a CSRF attack with a GET request ought to be "
"harmless. :rfc:`2616` defines POST, PUT and DELETE as 'unsafe', and all "
"other methods are assumed to be unsafe, for maximum protection."
msgstr ""

# 594cd221e9b946d78667dbeae8e9ac54
#: ../../ref/contrib/csrf.txt:317
msgid "Caching"
msgstr ""

# 0cd327ab267842d1bcddfa65698ced4b
#: ../../ref/contrib/csrf.txt:319
msgid ""
"If the :ttag:`csrf_token` template tag is used by a template (or the "
"``get_token`` function is called some other way), ``CsrfViewMiddleware`` "
"will add a cookie and a ``Vary: Cookie`` header to the response. This means "
"that the middleware will play well with the cache middleware if it is used "
"as instructed (``UpdateCacheMiddleware`` goes before all other middleware)."
msgstr ""

# f578598cde0047458e8db715db0f0036
#: ../../ref/contrib/csrf.txt:325
msgid ""
"However, if you use cache decorators on individual views, the CSRF "
"middleware will not yet have been able to set the Vary header or the CSRF "
"cookie, and the response will be cached without either one. In this case, on "
"any views that will require a CSRF token to be inserted you should use the :"
"func:`django.views.decorators.csrf.csrf_protect` decorator first::"
msgstr ""

# 46cb5305502c4c4988f9554765088ba9
#: ../../ref/contrib/csrf.txt:341
msgid "Testing"
msgstr ""

# f3e203f82bb34861a022a9c24e0305b0
#: ../../ref/contrib/csrf.txt:343
msgid ""
"The ``CsrfViewMiddleware`` will usually be a big hindrance to testing view "
"functions, due to the need for the CSRF token which must be sent with every "
"POST request.  For this reason, Django's HTTP client for tests has been "
"modified to set a flag on requests which relaxes the middleware and the "
"``csrf_protect`` decorator so that they no longer rejects requests.  In "
"every other respect (e.g. sending cookies etc.), they behave the same."
msgstr ""

# e8d36ecf690f4dbeb4880f11d8dce4b3
#: ../../ref/contrib/csrf.txt:350
msgid ""
"If, for some reason, you *want* the test client to perform CSRF checks, you "
"can create an instance of the test client that enforces CSRF checks::"
msgstr ""

# 7b63cea02aeb4e109e9ea9cd9f9b48a2
#: ../../ref/contrib/csrf.txt:362
msgid ""
"Subdomains within a site will be able to set cookies on the client for the "
"whole domain.  By setting the cookie and using a corresponding token, "
"subdomains will be able to circumvent the CSRF protection.  The only way to "
"avoid this is to ensure that subdomains are controlled by trusted users (or, "
"are at least unable to set cookies).  Note that even without CSRF, there are "
"other vulnerabilities, such as session fixation, that make giving subdomains "
"to untrusted parties a bad idea, and these vulnerabilities cannot easily be "
"fixed with current browsers."
msgstr ""

# 85089b0184df4cdfa6f8c2de8cc3a12d
#: ../../ref/contrib/csrf.txt:371
msgid "Edge cases"
msgstr ""

# e975ce38d76444babad15e0eb3d1d6c7
#: ../../ref/contrib/csrf.txt:373
msgid ""
"Certain views can have unusual requirements that mean they don't fit the "
"normal pattern envisaged here. A number of utilities can be useful in these "
"situations. The scenarios they might be needed in are described in the "
"following section."
msgstr ""

# 6336b35d1154472dae51ed66ce942a4c
#: ../../ref/contrib/csrf.txt:379
msgid "Utilities"
msgstr ""

# caf3f02ba9d14b59a8b7107a432a876c
#: ../../ref/contrib/csrf.txt:383
msgid ""
"This decorator marks a view as being exempt from the protection ensured by "
"the middleware. Example::"
msgstr ""

# 119dbe9d3d66469297c0240cd49ff177
#: ../../ref/contrib/csrf.txt:394
msgid ""
"Normally the :ttag:`csrf_token` template tag will not work if "
"``CsrfViewMiddleware.process_view`` or an equivalent like ``csrf_protect`` "
"has not run. The view decorator ``requires_csrf_token`` can be used to "
"ensure the template tag does work. This decorator works similarly to "
"``csrf_protect``, but never rejects an incoming request."
msgstr ""

# 94a01c42901f4c389b25b5fdd0c209e2
#: ../../ref/contrib/csrf.txt:415
msgid "This decorator forces a view to send the CSRF cookie."
msgstr ""

# bab00780def943f8841a048ab3ea0f3b
#: ../../ref/contrib/csrf.txt:418
msgid "Scenarios"
msgstr ""

# 60b9c85bbae646b2b8abb72d022a50ef
#: ../../ref/contrib/csrf.txt:421
msgid "CSRF protection should be disabled for just a few views"
msgstr ""

# 08b6b24dbfb24c07bf0255f04ec739fe
#: ../../ref/contrib/csrf.txt:423
msgid "Most views requires CSRF protection, but a few do not."
msgstr ""

# 4ddd220218f24290bb409fce1bd6f5cc
#: ../../ref/contrib/csrf.txt:425
msgid ""
"Solution: rather than disabling the middleware and applying ``csrf_protect`` "
"to all the views that need it, enable the middleware and use :func:`~django."
"views.decorators.csrf.csrf_exempt`."
msgstr ""

# 73b3809ad485458c820a319e0a1e7a5d
#: ../../ref/contrib/csrf.txt:430
msgid "CsrfViewMiddleware.process_view not used"
msgstr ""

# 7edf117413d749adba4b6d45944cfeff
#: ../../ref/contrib/csrf.txt:432
msgid ""
"There are cases when ``CsrfViewMiddleware.process_view`` may not have run "
"before your view is run - 404 and 500 handlers, for example - but you still "
"need the CSRF token in a form."
msgstr ""

# 467e3e550121497aaa3263aab2ffe9aa
#: ../../ref/contrib/csrf.txt:436
msgid "Solution: use :func:`~django.views.decorators.csrf.requires_csrf_token`"
msgstr ""

# fa574d8ffe744e8f9eec6e79a6b160f8
#: ../../ref/contrib/csrf.txt:439
msgid "Unprotected view needs the CSRF token"
msgstr ""

# 1f52ced9a96b41dd8df28eb1da899cc1
#: ../../ref/contrib/csrf.txt:441
msgid ""
"There may be some views that are unprotected and have been exempted by "
"``csrf_exempt``, but still need to include the CSRF token."
msgstr ""

# 56ea238ca683438da6e617a0f85257fc
#: ../../ref/contrib/csrf.txt:444
msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` followed by :"
"func:`~django.views.decorators.csrf.requires_csrf_token`. (i.e. "
"``requires_csrf_token`` should be the innermost decorator)."
msgstr ""

# 37b5ddaaffc54cf6b6d22c55ed6b5c76
#: ../../ref/contrib/csrf.txt:449
msgid "View needs protection for one path"
msgstr ""

# 84907b0747844d3cba1d2fe77bcb59d5
#: ../../ref/contrib/csrf.txt:451
msgid ""
"A view needs CRSF protection under one set of conditions only, and mustn't "
"have it for the rest of the time."
msgstr ""

# 3ce50d65945e44639d598d219ca8ddea
#: ../../ref/contrib/csrf.txt:454
msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` for the "
"whole view function, and :func:`~django.views.decorators.csrf.csrf_protect` "
"for the path within it that needs protection. Example::"
msgstr ""

# 7ee3a02e6df54ef4a929358dd1300224
#: ../../ref/contrib/csrf.txt:473
msgid "Page uses AJAX without any HTML form"
msgstr ""

# 93fc5623211144d1b974a03ab7cf4f3a
#: ../../ref/contrib/csrf.txt:475
msgid ""
"A page makes a POST request via AJAX, and the page does not have an HTML "
"form with a :ttag:`csrf_token` that would cause the required CSRF cookie to "
"be sent."
msgstr ""

# 4aa778010c1049b392e627b7d3df69e2
#: ../../ref/contrib/csrf.txt:478
msgid ""
"Solution: use :func:`~django.views.decorators.csrf.ensure_csrf_cookie` on "
"the view that sends the page."
msgstr ""

# 4a3dabb716ff4424b6604966d8b94144
#: ../../ref/contrib/csrf.txt:482
msgid "Contrib and reusable apps"
msgstr ""

# 3b3d6bd9ea06492ca5306313b2fe0b67
#: ../../ref/contrib/csrf.txt:484
msgid ""
"Because it is possible for the developer to turn off the "
"``CsrfViewMiddleware``, all relevant views in contrib apps use the "
"``csrf_protect`` decorator to ensure the security of these applications "
"against CSRF.  It is recommended that the developers of other reusable apps "
"that want the same guarantees also use the ``csrf_protect`` decorator on "
"their views."
msgstr ""

# eb7d5fd2d2374e85923850045495bc8e
# 09992fe9299a442ebd692fa05150908a
# 8333eb2988ac452bb26a1c4b631f0d79
# d504ceb58c5d4005b69278b7087d1768
# 8232697d8f684a9abb47e914822241be
# 08e126fb77db457eab8ee981ea2156f9
# 5cdd2c386c6a40d0867f533e2f9a6540
# 9257ff2f6f4545579dbe4c1c07c6ee79
#: ../../ref/contrib/csrf.txt:491 ../../ref/contrib/gis/gdal.txt:1087
#: ../../ref/contrib/gis/geos.txt:953 ../../ref/contrib/gis/testing.txt:14
#: ../../ref/contrib/gis/testing.txt:115 ../../ref/contrib/messages.txt:317
#: ../../ref/contrib/staticfiles.txt:21 ../../ref/settings.txt:3
msgid "Settings"
msgstr ""

# 0b9eb75bda214441bd341b0d388ee6cf
#: ../../ref/contrib/csrf.txt:493
msgid "A number of settings can be used to control Django's CSRF behavior."
msgstr ""

# 943ecf7cb86a4069b781e9d8d869917e
# 57d8314172cc426ba1c6f240c3fcc6cc
#: ../../ref/contrib/csrf.txt:496 ../../ref/settings.txt:335
msgid "CSRF_COOKIE_DOMAIN"
msgstr ""

# 6b4c76c122ec4711bdfa1101479d19d0
# d053dfeb7fb14c5ea3bccd369814a962
# 6f32ad3d0c754f20a0943875a7a5b47e
# 46f9dca1bbb64ee29ce2012af567229c
# 66583f36f2814a3eb08400395174ce25
# 25e7e87d691c42d69ad35df014739951
# 4c5660562d6e46b4a73579b58ea33c9f
# 0f4dc15bf6e749e994f5cc1d9890af16
# 99d58149732d49e4a959cbb2c1d32278
# 1b3da15898024b8a91033e0f98b26308
# 3b8deb882b64431db62038f637001a1c
# c9ac55891117470eb633c8040f38c0eb
# a453fd1c409f4e659ed6addbae4510a2
# be45c3acaf44442f9b3f6cb7b83ebd8f
# 886743737088466d8cefaeb874bbdefb
# 92ed6bd272c14891a3a5f74671641468
# 408aa7292d074cafb68a82faec175397
# c45217dbae79467eb76983ad3e016ff9
# 107617927d9a43b58b48fcc2ffa011ad
# 06a17ed90bdc4da1a340ec9a1c28f6ef
#: ../../ref/contrib/csrf.txt:498 ../../ref/contrib/messages.txt:388
#: ../../ref/settings.txt:337 ../../ref/settings.txt:535
#: ../../ref/settings.txt:552 ../../ref/settings.txt:578
#: ../../ref/settings.txt:593 ../../ref/settings.txt:620
#: ../../ref/settings.txt:644 ../../ref/settings.txt:656
#: ../../ref/settings.txt:668 ../../ref/settings.txt:1061
#: ../../ref/settings.txt:1087 ../../ref/settings.txt:1129
#: ../../ref/settings.txt:1141 ../../ref/settings.txt:1614
#: ../../ref/settings.txt:1720 ../../ref/settings.txt:1827
#: ../../ref/settings.txt:1936 ../../ref/settings.txt:2255
msgid "Default: ``None``"
msgstr ""

# a666bfcc446f40b2a156dd1867a96923
#: ../../ref/contrib/csrf.txt:500
msgid ""
"The domain to be used when setting the CSRF cookie.  This can be useful for "
"easily allowing cross-subdomain requests to be excluded from the normal "
"cross site request forgery protection.  It should be set to a string such as "
"``\".example.com\"`` to allow a POST request from a form on one subdomain to "
"be accepted by a view served from another subdomain."
msgstr ""

# adbddb64e2914d528651a85bf6245ecb
#: ../../ref/contrib/csrf.txt:506
msgid ""
"Please note that, with or without use of this setting, this CSRF protection "
"mechanism is not safe against cross-subdomain attacks -- see `Limitations`_."
msgstr ""

# 321c5aa8c2764f149fae544d538c56f2
# 99d5f3ea47234e469713391f8ea91536
#: ../../ref/contrib/csrf.txt:510 ../../ref/settings.txt:352
msgid "CSRF_COOKIE_NAME"
msgstr ""

# 989709a838034a1ca36ed87c38c685e8
# e85a0b783b3c44c2b51e335b9330b0fb
#: ../../ref/contrib/csrf.txt:512 ../../ref/settings.txt:354
msgid "Default: ``'csrftoken'``"
msgstr ""

# 3245e6e7bece47f1b00332e6b5822ccd
#: ../../ref/contrib/csrf.txt:514
msgid ""
"The name of the cookie to use for the CSRF authentication token. This can be "
"whatever you want."
msgstr ""

# ecbb93be3d1d46ec8630442ce9c0e2c6
# 5184b5f3724f4a54bb176ecb354042fd
#: ../../ref/contrib/csrf.txt:518 ../../ref/settings.txt:362
msgid "CSRF_COOKIE_PATH"
msgstr ""

# ec39c443d9524dc7bbea41915309468d
# 2e759dac1d64447e8af4518d198b74d2
# 4a84032da72a43b1868ac9ef4d4962f3
#: ../../ref/contrib/csrf.txt:522 ../../ref/settings.txt:366
#: ../../ref/settings.txt:1764
msgid "Default: ``'/'``"
msgstr ""

# 33c8966c90f24169b29c4efcaabe10ed
# 15e308504e3646fca111d1b8c3c6e785
#: ../../ref/contrib/csrf.txt:524 ../../ref/settings.txt:368
msgid ""
"The path set on the CSRF cookie. This should either match the URL path of "
"your Django installation or be a parent of that path."
msgstr ""

# 5435d22ef6f24113b9c6a230711392fc
# 2ea4263206b54bddb89898cbb95c9dd1
#: ../../ref/contrib/csrf.txt:527 ../../ref/settings.txt:371
msgid ""
"This is useful if you have multiple Django instances running under the same "
"hostname. They can use different cookie paths, and each instance will only "
"see its own CSRF cookie."
msgstr ""

# 1b10fd6415654e919c4c68dfead3da7d
# f9c21555607e4bea9ef191960d1003b4
#: ../../ref/contrib/csrf.txt:532 ../../ref/settings.txt:378
msgid "CSRF_COOKIE_SECURE"
msgstr ""

# fff89c1a985e4ee48ec9c20f41c1d70e
# 0b4b3562bee04aafa90a0068872f8627
# 684a07324ff747019e92df9b68a64e8e
# 0e72114c6ef747368af4d62f83c7ef94
# 9e701699b9544c15811bfcc83f58dbe2
# 08c20ce0eb024604ab21beab8aeaae6e
# 15ef0d454033462dafa15a7fb9e38773
# 66665582bb4c45a492a6f893c16ffc37
# 774dde819e4546ecaf425007760dab39
# f398562a98194b31861f70bfd96da64d
# c0379a005a7a4d99a9426a897f1dec3f
# dfb54f5d5e05478bbffa0e57930025bb
# 44091f9cf1034b649d6af84a0b16aeae
# caddefd962ea4eea95c7e3583cd18b2b
# cf8b7d17697b436e918aa0002a27132a
# 93a6345981b14754b03a6ac99393f3e0
# 6d26bfe3ddbd467db7c8bd164a54d413
# cad55b87a99a4acb8955ab02ce195117
#: ../../ref/contrib/csrf.txt:536 ../../ref/settings.txt:298
#: ../../ref/settings.txt:382 ../../ref/settings.txt:782
#: ../../ref/settings.txt:831 ../../ref/settings.txt:1020
#: ../../ref/settings.txt:1540 ../../ref/settings.txt:1675
#: ../../ref/settings.txt:1788 ../../ref/settings.txt:1817
#: ../../ref/settings.txt:1839 ../../ref/settings.txt:1978
#: ../../ref/settings.txt:2152 ../../ref/settings.txt:2162
#: ../../ref/settings.txt:2188 ../../ref/settings.txt:2206
#: ../../ref/settings.txt:2223 ../../ref/settings.txt:2242
msgid "Default: ``False``"
msgstr ""

# 92e91b778e604aca88bb075b8925dcef
# 947b105a544244ec94a7874305420cc1
#: ../../ref/contrib/csrf.txt:538 ../../ref/settings.txt:384
msgid ""
"Whether to use a secure cookie for the CSRF cookie. If this is set to "
"``True``, the cookie will be marked as \"secure,\" which means browsers may "
"ensure that the cookie is only sent under an HTTPS connection."
msgstr ""

# 603053a193444eda8a399cab9b79f2a6
# 9a82a07319b843e0a7be9562c6f5bce6
#: ../../ref/contrib/csrf.txt:543 ../../ref/settings.txt:391
msgid "CSRF_FAILURE_VIEW"
msgstr ""

# 87707d9ba39149f2bfaea72db82a78e0
# 2b4966e715074a7e9df451b6417c7c2f
#: ../../ref/contrib/csrf.txt:545 ../../ref/settings.txt:393
msgid "Default: ``'django.views.csrf.csrf_failure'``"
msgstr ""

# eb5b18ef380b4531a6fc467b66c337df
# a984644162f445908647478c83609117
#: ../../ref/contrib/csrf.txt:547 ../../ref/settings.txt:395
msgid ""
"A dotted path to the view function to be used when an incoming request is "
"rejected by the CSRF protection.  The function should have this signature::"
msgstr ""

# cda1f00de48f44218232478a85eef072
#: ../../ref/contrib/csrf.txt:552
msgid ""
"where ``reason`` is a short message (intended for developers or logging, not "
"for end users) indicating the reason the request was rejected."
msgstr ""

# a0a68e3e6d5f4e21a76c14b09b146a61
#: ../../ref/contrib/databrowse.txt:3
msgid "Databrowse"
msgstr ""

# 8affaa64d2404199af7300d62fa223c0
#: ../../ref/contrib/databrowse.txt:8
msgid ""
"This module has been deprecated. It's available as a `third-party package "
"<https://pypi.python.org/pypi/django-databrowse>`_."
msgstr ""

# 2dd6f3b9421d434aad3e1bac3be065ae
#: ../../ref/contrib/databrowse.txt:11
msgid "Databrowse is a Django application that lets you browse your data."
msgstr ""

# a5b62f157aaa4655aac5683fc9393246
#: ../../ref/contrib/databrowse.txt:13
msgid ""
"As the Django admin dynamically creates an admin interface by introspecting "
"your models, Databrowse dynamically creates a rich, browsable Web site by "
"introspecting your models."
msgstr ""

# 2e0d84418d714442bdb6567102b9d964
#: ../../ref/contrib/databrowse.txt:18
msgid "How to use Databrowse"
msgstr ""

# 3ad1807662b64317a1539327a1d2036b
#: ../../ref/contrib/databrowse.txt:20
msgid ""
"Point Django at the default Databrowse templates. There are two ways to do "
"this:"
msgstr ""

# 854475ccb9e5406e8dc8142eb2371400
#: ../../ref/contrib/databrowse.txt:23
msgid ""
"Add ``'django.contrib.databrowse'`` to your :setting:`INSTALLED_APPS` "
"setting. This will work if your :setting:`TEMPLATE_LOADERS` setting includes "
"the ``app_directories`` template loader (which is the case by default). See "
"the :ref:`template loader docs <template-loaders>` for more."
msgstr ""

# 2c89b3c8b1d746e69ced8485b712071f
#: ../../ref/contrib/databrowse.txt:29
msgid ""
"Otherwise, determine the full filesystem path to the :file:`django/contrib/"
"databrowse/templates` directory, and add that directory to your :setting:"
"`TEMPLATE_DIRS` setting."
msgstr ""

# d64b9252c365484188b937c93e7c7a65
#: ../../ref/contrib/databrowse.txt:33
msgid "Register a number of models with the Databrowse site::"
msgstr ""

# ff683d661d3c45a095c462be2b34a142
#: ../../ref/contrib/databrowse.txt:41
msgid "Note that you should register the model *classes*, not instances."
msgstr ""

# 310f28ff87a94fcf99f2824fdb95059c
#: ../../ref/contrib/databrowse.txt:45
msgid ""
"Since Django 1.4, it is possible to register several models in the same call "
"to ``databrowse.site.register()``."
msgstr ""

# fbe1470883884ce58b436993ff00016a
#: ../../ref/contrib/databrowse.txt:48
msgid ""
"It doesn't matter where you put this, as long as it gets executed at some "
"point. A good place for it is in your :doc:`URLconf file </topics/http/"
"urls>` (``urls.py``)."
msgstr ""

# 4080e803eee148868db6f6627846b760
#: ../../ref/contrib/databrowse.txt:52
msgid ""
"Change your URLconf to import the :mod:`~django.contrib.databrowse` module::"
msgstr ""

# e5fe7317332148938292e3944a8ae76f
#: ../../ref/contrib/databrowse.txt:56
msgid "...and add the following line to your URLconf::"
msgstr ""

# d2aa4f7ffad447ebb9cc2c258d5241da
#: ../../ref/contrib/databrowse.txt:60
msgid ""
"The prefix doesn't matter -- you can use ``databrowse/`` or ``db/`` or "
"whatever you'd like."
msgstr ""

# a422c2c929c243718bc5cadd13246008
#: ../../ref/contrib/databrowse.txt:63
msgid "Run the Django server and visit ``/databrowse/`` in your browser."
msgstr ""

# 12ac2e540ed24a90a5738f1d9f7b0e08
#: ../../ref/contrib/databrowse.txt:66
msgid "Requiring user login"
msgstr ""

# 6b1256c51c0d463dbceb112ebf2f1ea5
#: ../../ref/contrib/databrowse.txt:68
msgid ""
"You can restrict access to logged-in users with only a few extra lines of "
"code. Simply add the following import to your URLconf::"
msgstr ""

# 93f57e488eb044d1867ebd0247a81a42
#: ../../ref/contrib/databrowse.txt:73
msgid ""
"Then modify the :doc:`URLconf </topics/http/urls>` so that the ``databrowse."
"site.root()`` view is decorated with :func:`django.contrib.auth.decorators."
"login_required`::"
msgstr ""

# 4c8d4cd72b5b4f91a39375eb7dee9818
#: ../../ref/contrib/databrowse.txt:79
msgid ""
"If you haven't already added support for user logins to your :doc:`URLconf </"
"topics/http/urls>`, as described in the :doc:`user authentication docs </ref/"
"contrib/auth>`, then you will need to do so now with the following mapping::"
msgstr ""

# 968c731d691e44eb9ecebfb8b3fcc198
#: ../../ref/contrib/databrowse.txt:86
msgid ""
"The final step is to create the login form required by :func:`django.contrib."
"auth.views.login`. The :doc:`user authentication docs </ref/contrib/auth>` "
"provide full details and a sample template that can be used for this purpose."
msgstr ""

# 013ef03e40964a13b8c270db36e67181
#: ../../ref/contrib/flatpages.txt:3
msgid "The flatpages app"
msgstr ""

# f5b0b89698d745b4a618e1c5903916f1
#: ../../ref/contrib/flatpages.txt:8
msgid ""
"Django comes with an optional \"flatpages\" application. It lets you store "
"simple \"flat\" HTML content in a database and handles the management for "
"you via Django's admin interface and a Python API."
msgstr ""

# 06ff342374584b6388f870e91ce38226
#: ../../ref/contrib/flatpages.txt:12
msgid ""
"A flatpage is a simple object with a URL, title and content. Use it for one-"
"off, special-case pages, such as \"About\" or \"Privacy Policy\" pages, that "
"you want to store in a database but for which you don't want to develop a "
"custom Django application."
msgstr ""

# 110bde9c63484cf5bd0cce06be1142c1
#: ../../ref/contrib/flatpages.txt:17
msgid ""
"A flatpage can use a custom template or a default, systemwide flatpage "
"template. It can be associated with one, or multiple, sites."
msgstr ""

# e69d09b9ec394588bbf4095419b0a431
#: ../../ref/contrib/flatpages.txt:20
msgid ""
"The content field may optionally be left blank if you prefer to put your "
"content in a custom template."
msgstr ""

# 44358b49c69c4e10a534e4c6fa99da5a
#: ../../ref/contrib/flatpages.txt:23
msgid "Here are some examples of flatpages on Django-powered sites:"
msgstr ""

# fd578fa449304172b1f9f4787de7ae5e
#: ../../ref/contrib/flatpages.txt:25
msgid "http://www.lawrence.com/about/contact/"
msgstr ""

# c267dd8bc4784970a745ea2079bb2bf5
#: ../../ref/contrib/flatpages.txt:26
msgid "http://www2.ljworld.com/site/rules/"
msgstr ""

# 126f627d191f4eb3bdfaa70a13efb8c5
# fc83ee8d687d4ec49eff5001e55a2a51
# 2c13cf26c92c4bc68ca6d8b045854188
# 58d0dac4de0b4d3aa52ce598a6b285b7
#: ../../ref/contrib/flatpages.txt:29
#: ../../ref/contrib/gis/install/index.txt:76
#: ../../ref/contrib/redirects.txt:12 ../../ref/contrib/sitemaps.txt:30
msgid "Installation"
msgstr ""

# 1d6feb54816a415790a749102257b09f
#: ../../ref/contrib/flatpages.txt:31
msgid "To install the flatpages app, follow these steps:"
msgstr ""

# 18449ed172f74ed9ac8e0908f5d8bf1b
#: ../../ref/contrib/flatpages.txt:33
msgid ""
"Install the :mod:`sites framework <django.contrib.sites>` by adding "
"``'django.contrib.sites'`` to your :setting:`INSTALLED_APPS` setting, if "
"it's not already in there."
msgstr ""

# 99f6d2a8578249d8be99509941aa5fd9
#: ../../ref/contrib/flatpages.txt:37
msgid ""
"Also make sure you've correctly set :setting:`SITE_ID` to the ID of the site "
"the settings file represents. This will usually be ``1`` (i.e. ``SITE_ID = "
"1``, but if you're using the sites framework to manage multiple sites, it "
"could be the ID of a different site."
msgstr ""

# eb6a59819d7a45f79f710f6afe3f7c00
#: ../../ref/contrib/flatpages.txt:42
msgid ""
"Add ``'django.contrib.flatpages'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# 497b5b22133e4b9381643f89a9962ba3
#: ../../ref/contrib/flatpages.txt:45
msgid "Then either:"
msgstr ""

# 3255f880174342958033733f49f7c6f8
#: ../../ref/contrib/flatpages.txt:47
msgid "Add an entry in your URLconf. For example::"
msgstr ""

# 1a32f22d52f24b03a421d9420c48b029
#: ../../ref/contrib/flatpages.txt:53
msgid "or:"
msgstr ""

# dc6957759c3d4081a9b30f6b3a35526b
#: ../../ref/contrib/flatpages.txt:55
msgid ""
"Add ``'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE_CLASSES` setting."
msgstr ""

# 22c2231f07ee460d96c22f713070efc2
# 0cd0a3ca5f07456a9d564de3c8406b7c
#: ../../ref/contrib/flatpages.txt:58 ../../ref/contrib/redirects.txt:21
msgid "Run the command :djadmin:`manage.py syncdb <syncdb>`."
msgstr ""

# cf1685db85524700ac0530b58ad26c45
#: ../../ref/contrib/flatpages.txt:65
msgid ""
"``manage.py syncdb`` creates two tables in your database: "
"``django_flatpage`` and ``django_flatpage_sites``. ``django_flatpage`` is a "
"simple lookup table that simply maps a URL to a title and bunch of text "
"content. ``django_flatpage_sites`` associates a flatpage with a site."
msgstr ""

# 242f91253f7e4864a62d7cdde379680b
#: ../../ref/contrib/flatpages.txt:71
msgid "Using the URLconf"
msgstr ""

# e79870fea08e4b3882bfb948528f2de0
#: ../../ref/contrib/flatpages.txt:73
msgid ""
"There are several ways to include the flat pages in your URLconf. You can "
"dedicate a particular path to flat pages::"
msgstr ""

# 8f7ff4be08b54769831e691cc679b1d1
#: ../../ref/contrib/flatpages.txt:80
msgid ""
"You can also set it up as a \"catchall\" pattern. In this case, it is "
"important to place the pattern at the end of the other urlpatterns::"
msgstr ""

# 38d14ca8cc1c4963b548d581f80ef902
#: ../../ref/contrib/flatpages.txt:90
msgid ""
"If you set :setting:`APPEND_SLASH` to ``False``, you must remove the slash "
"in the catchall pattern or flatpages without a trailing slash will not be "
"matched."
msgstr ""

# 1746914dd9f64dc2838f26d4f5cf2c2e
#: ../../ref/contrib/flatpages.txt:94
msgid ""
"Another common setup is to use flat pages for a limited set of known pages "
"and to hard code the urls, so you can reference them with the :ttag:`url` "
"template tag::"
msgstr ""

# 1e5f8f82011145ff9c6b9bb22703cd2a
#: ../../ref/contrib/flatpages.txt:98
msgid "Using the middleware"
msgstr ""

# 71bceb154c184b27b0565dc61308f0a1
#: ../../ref/contrib/flatpages.txt:100
msgid ""
"The :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"can do all of the work."
msgstr ""

# e80f8c99513044738c63822cb635306f
#: ../../ref/contrib/flatpages.txt:105
msgid ""
"Each time any Django application raises a 404 error, this middleware checks "
"the flatpages database for the requested URL as a last resort. Specifically, "
"it checks for a flatpage with the given URL with a site ID that corresponds "
"to the :setting:`SITE_ID` setting."
msgstr ""

# e54e3c392ddb4f268e82e9698ae60051
#: ../../ref/contrib/flatpages.txt:110
msgid "If it finds a match, it follows this algorithm:"
msgstr ""

# 8ddbbd490d6a4e04af8283b3356d14d0
#: ../../ref/contrib/flatpages.txt:112
msgid ""
"If the flatpage has a custom template, it loads that template. Otherwise, it "
"loads the template :file:`flatpages/default.html`."
msgstr ""

# 0822da9e2caf4ca092f341d262ee6927
#: ../../ref/contrib/flatpages.txt:115
msgid ""
"It passes that template a single context variable, ``flatpage``, which is "
"the flatpage object. It uses :class:`~django.template.RequestContext` in "
"rendering the template."
msgstr ""

# 149e72e1b7914cf0828be5a5eba94935
# b21c96f033a5414f8153772b59b22d72
#: ../../ref/contrib/flatpages.txt:132 ../../ref/contrib/redirects.txt:39
msgid ""
"If it doesn't find a match, the request continues to be processed as usual."
msgstr ""

# dd3957bbaa6c4cbaa94c75038394ed65
# ff3adb7daa7041699c7ce22a230ea0e6
#: ../../ref/contrib/flatpages.txt:134 ../../ref/contrib/redirects.txt:42
msgid ""
"The middleware only gets activated for 404s -- not for 500s or responses of "
"any other status code."
msgstr ""

# 51259c38c97b46b2b43d263a9e479bb7
#: ../../ref/contrib/flatpages.txt:143
msgid "Flatpages will not apply view middleware"
msgstr ""

# 60c1ee71c75b481eac0bb4fb772f27d1
#: ../../ref/contrib/flatpages.txt:145
msgid ""
"Because the ``FlatpageFallbackMiddleware`` is applied only after URL "
"resolution has failed and produced a 404, the response it returns will not "
"apply any :ref:`view middleware <view-middleware>` methods. Only requests "
"which are successfully routed to a view via normal URL resolution apply view "
"middleware."
msgstr ""

# 29eef6e723bf485d8dc606a77f09ef68
#: ../../ref/contrib/flatpages.txt:151
msgid ""
"Note that the order of :setting:`MIDDLEWARE_CLASSES` matters. Generally, you "
"can put :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` at the end of the list. This means it will run "
"first when processing the response, and ensures that any other response-"
"processing middlewares see the real flatpage response rather than the 404."
msgstr ""

# ab5bc05aec2c42769f939e0965095cc6
# 1de74682cf954480990f0648e0b4c46e
#: ../../ref/contrib/flatpages.txt:152 ../../ref/contrib/redirects.txt:49
msgid ""
"For more on middleware, read the :doc:`middleware docs </topics/http/"
"middleware>`."
msgstr ""

# 771e1b21219c4bf1991cb4884c7fb81d
#: ../../ref/contrib/flatpages.txt:161
msgid "Ensure that your 404 template works"
msgstr ""

# 1d00299d01aa4788a8fa911cb8889a48
#: ../../ref/contrib/flatpages.txt:163
msgid ""
"Note that the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only steps in once another view has successfully "
"produced a 404 response. If another view or middleware class attempts to "
"produce a 404 but ends up raising an exception instead, the response will "
"become an HTTP 500 (\"Internal Server Error\") and the :class:`~django."
"contrib.flatpages.middleware.FlatpageFallbackMiddleware` will not attempt to "
"serve a flat page."
msgstr ""

# d74ccb4faeb7455b8a419cf9306fb599
#: ../../ref/contrib/flatpages.txt:169
msgid "How to add, change and delete flatpages"
msgstr ""

# 1452091b1b924cf9afe5025617edfd4c
# 71ad4152cfb14bd39aa5e216882a5a8f
#: ../../ref/contrib/flatpages.txt:172 ../../ref/contrib/redirects.txt:56
msgid "Via the admin interface"
msgstr ""

# 11df1cfa21de4a708149f98abf0f16c7
#: ../../ref/contrib/flatpages.txt:174
msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Flatpages\" section on the admin index page. Edit flatpages as you edit "
"any other object in the system."
msgstr ""

# 9ce653b3d79b411e8b691c1b5f62d892
# e6683814f20b4f7b91856a5261e2f1f7
#: ../../ref/contrib/flatpages.txt:179 ../../ref/contrib/redirects.txt:63
msgid "Via the Python API"
msgstr ""

# 3a49d2d151a9412fb149692c53876a41
#: ../../ref/contrib/flatpages.txt:183
msgid ""
"Flatpages are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in `django/contrib/flatpages/models.py`_. You can "
"access flatpage objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""

# 984a0bf407cf486ead3dd2acab6af491
#: ../../ref/contrib/flatpages.txt:198
msgid "Check for duplicate flatpage URLs."
msgstr ""

# 7ba385ae505a43dc94c9b03d2d516229
#: ../../ref/contrib/flatpages.txt:200
msgid ""
"If you add or modify flatpages via your own code, you will likely want to "
"check for duplicate flatpage URLs within the same site. The flatpage form "
"used in the admin performs this validation check, and can be imported from "
"``django.contrib.flatpages.forms.FlatPageForm`` and used in your own views."
msgstr ""

# 95267a913edc4b709d221388abd0cfd2
#: ../../ref/contrib/flatpages.txt:201
msgid "Flatpage templates"
msgstr ""

# a91c9ecc304649528b7a76c3c92a5951
#: ../../ref/contrib/flatpages.txt:203
msgid ""
"By default, flatpages are rendered via the template :file:`flatpages/default."
"html`, but you can override that for a particular flatpage: in the admin, a "
"collapsed fieldset titled \"Advanced options\" (clicking will expand it) "
"contains a field for specifying a template name. If you're creating a flat "
"page via the Python API you can simply set the template name as the field "
"``template_name`` on the ``FlatPage`` object."
msgstr ""

# 5b458e6944b9435b8efd47c4bb19be93
#: ../../ref/contrib/flatpages.txt:211
msgid ""
"Creating the :file:`flatpages/default.html` template is your responsibility; "
"in your template directory, just create a :file:`flatpages` directory "
"containing a file :file:`default.html`."
msgstr ""

# ce26463361d74103a16a4f50a25a366c
#: ../../ref/contrib/flatpages.txt:215
msgid ""
"Flatpage templates are passed a single context variable, ``flatpage``, which "
"is the flatpage object."
msgstr ""

# 952dd3e4e2554b479c283ee52773c7da
#: ../../ref/contrib/flatpages.txt:218
msgid "Here's a sample :file:`flatpages/default.html` template:"
msgstr ""

# b51e8ce55fa842288c8abf606559d1b5
#: ../../ref/contrib/flatpages.txt:232
msgid ""
"Since you're already entering raw HTML into the admin page for a flatpage, "
"both ``flatpage.title`` and ``flatpage.content`` are marked as **not** "
"requiring :ref:`automatic HTML escaping <automatic-html-escaping>` in the "
"template."
msgstr ""

# 38358f7df2fa47e193c9f64f74b7d950
#: ../../ref/contrib/flatpages.txt:238
msgid ""
"Getting a list of :class:`~django.contrib.flatpages.models.FlatPage` objects "
"in your templates"
msgstr ""

# 1b24317895204c42af15543fed5dfe33
#: ../../ref/contrib/flatpages.txt:240
msgid ""
"The flatpages app provides a template tag that allows you to iterate over "
"all of the available flatpages on the :ref:`current site <hooking-into-"
"current-site-from-views>`."
msgstr ""

# cae02875bb0c46fd90195244ec6008eb
#: ../../ref/contrib/flatpages.txt:244
msgid ""
"Like all custom template tags, you'll need to :ref:`load its custom tag "
"library <loading-custom-template-libraries>` before you can use it. After "
"loading the library, you can retrieve all current flatpages via the :ttag:"
"`get_flatpages` tag:"
msgstr ""

# 4740a62982e84b5a834d8a4d25b16c8a
#: ../../ref/contrib/flatpages.txt:262
msgid "Displaying ``registration_required`` flatpages"
msgstr ""

# af5417b3ef2c49aab2bd9caa19a8c2f1
#: ../../ref/contrib/flatpages.txt:264
msgid ""
"By default, the :ttag:`get_flatpages` templatetag will only show flatpages "
"that are marked ``registration_required = False``. If you want to display "
"registration-protected flatpages, you need to specify an authenticated user "
"using a ``for`` clause."
msgstr ""

# 12a7917a642c4e07a7127ce86e0507d6
# b5109c1c6e484c31b5aac5fc55074a5d
#: ../../ref/contrib/flatpages.txt:269 ../../ref/contrib/flatpages.txt:287
msgid "For example:"
msgstr ""

# 993f55d5d4b44435bb2dc5e2fc49d1f9
#: ../../ref/contrib/flatpages.txt:275
msgid ""
"If you provide an anonymous user, :ttag:`get_flatpages` will behave the same "
"as if you hadn't provided a user -- i.e., it will only show you public "
"flatpages."
msgstr ""

# e1ea9b89152640be9c3b170168fe1710
#: ../../ref/contrib/flatpages.txt:280
msgid "Limiting flatpages by base URL"
msgstr ""

# 95b49778f1de4d0385c045c61136c645
#: ../../ref/contrib/flatpages.txt:282
msgid ""
"An optional argument, ``starts_with``, can be applied to limit the returned "
"pages to those beginning with a particular base URL. This argument may be "
"passed as a string, or as a variable to be resolved from the context."
msgstr ""

# e9b1b66b2be940f0ae5266a2e6e70a8c
#: ../../ref/contrib/formtools/form-preview.txt:3
msgid "Form preview"
msgstr ""

# 78fa4e8245154940a7d1a337095b42d9
#: ../../ref/contrib/formtools/form-preview.txt:9
msgid ""
"Django comes with an optional \"form preview\" application that helps "
"automate the following workflow:"
msgstr ""

# 3e93c705566d455c9abb17093ffcf431
# c59ec4872d174b5aa978c3a7704a5a2d
#: ../../ref/contrib/formtools/form-preview.txt:12
#: ../../ref/contrib/index.txt:100
msgid ""
"\"Display an HTML form, force a preview, then do something with the "
"submission.\""
msgstr ""

# 85ae820337de48c3baac79d5a4f81fa6
#: ../../ref/contrib/formtools/form-preview.txt:14
msgid ""
"To force a preview of a form submission, all you have to do is write a short "
"Python class."
msgstr ""

# bf98f9de9b08412698df43a3fe90278e
#: ../../ref/contrib/formtools/form-preview.txt:20
msgid ""
"Given a :class:`django.forms.Form` subclass that you define, this "
"application takes care of the following workflow:"
msgstr ""

# 70a17cbe31a74e77a6fb4f2d6c68874a
#: ../../ref/contrib/formtools/form-preview.txt:23
msgid "Displays the form as HTML on a Web page."
msgstr ""

# 1b071e2ac8454f1e936455b6a47afa2f
#: ../../ref/contrib/formtools/form-preview.txt:24
msgid ""
"Validates the form data when it's submitted via POST. a. If it's valid, "
"displays a preview page. b. If it's not valid, redisplays the form with "
"error messages."
msgstr ""

# 011def32b4db4627b8ad00e0cb7aa1cf
#: ../../ref/contrib/formtools/form-preview.txt:27
msgid ""
"When the \"confirmation\" form is submitted from the preview page, calls a "
"hook that you define -- a ``done()`` method that gets passed the valid data."
msgstr ""

# 1466c9440343423e822000fd9b9ea784
#: ../../ref/contrib/formtools/form-preview.txt:31
msgid ""
"The framework enforces the required preview by passing a shared-secret hash "
"to the preview page via hidden form fields. If somebody tweaks the form "
"parameters on the preview page, the form submission will fail the hash-"
"comparison test."
msgstr ""

# 896b73d0506c405b8c2fe0cbfbea2dbf
#: ../../ref/contrib/formtools/form-preview.txt:36
msgid "How to use ``FormPreview``"
msgstr ""

# ac53b4f12eef4bacafd84654bf0c64d0
#: ../../ref/contrib/formtools/form-preview.txt:38
msgid ""
"Point Django at the default FormPreview templates. There are two ways to do "
"this:"
msgstr ""

# f386a51a092a4a99bc5883e54e96adc3
#: ../../ref/contrib/formtools/form-preview.txt:41
msgid ""
"Add ``'django.contrib.formtools'`` to your :setting:`INSTALLED_APPS` "
"setting. This will work if your :setting:`TEMPLATE_LOADERS` setting includes "
"the ``app_directories`` template loader (which is the case by default). See "
"the :ref:`template loader docs <template-loaders>` for more."
msgstr ""

# 22805e39f6d34caf912683154e5819fe
#: ../../ref/contrib/formtools/form-preview.txt:48
msgid ""
"Otherwise, determine the full filesystem path to the :file:`django/contrib/"
"formtools/templates` directory, and add that directory to your :setting:"
"`TEMPLATE_DIRS` setting."
msgstr ""

# 1d0f1130eeab4142a5b4bf9793656efb
#: ../../ref/contrib/formtools/form-preview.txt:52
msgid ""
"Create a :class:`~django.contrib.formtools.preview.FormPreview` subclass "
"that overrides the ``done()`` method::"
msgstr ""

# d903739e6b3a42bc9a6d2181e9701782
#: ../../ref/contrib/formtools/form-preview.txt:65
msgid ""
"This method takes an :class:`~django.http.HttpRequest` object and a "
"dictionary of the form data after it has been validated and cleaned. It "
"should return an :class:`~django.http.HttpResponseRedirect` that is the end "
"result of the form being submitted."
msgstr ""

# e8fa08e31d7145638c9e41593077ddd7
#: ../../ref/contrib/formtools/form-preview.txt:70
msgid ""
"Change your URLconf to point to an instance of your :class:`~django.contrib."
"formtools.preview.FormPreview` subclass::"
msgstr ""

# be04c804f91042e4923e7d7938e8322b
#: ../../ref/contrib/formtools/form-preview.txt:77
msgid ""
"...and add the following line to the appropriate model in your URLconf::"
msgstr ""

# 0b941ad22c364cdfa0cbeb1ce5065e3c
#: ../../ref/contrib/formtools/form-preview.txt:81
msgid "where ``SomeModelForm`` is a Form or ModelForm class for the model."
msgstr ""

# bbe8b93e48084a0db251dd31651eab90
#: ../../ref/contrib/formtools/form-preview.txt:83
msgid "Run the Django server and visit :file:`/post/` in your browser."
msgstr ""

# 5a1ee6e7e752439bb852bbea851de78f
#: ../../ref/contrib/formtools/form-preview.txt:86
msgid "``FormPreview`` classes"
msgstr ""

# 8e8f13ab3e444b468b545af475b4278f
#: ../../ref/contrib/formtools/form-preview.txt:90
msgid ""
"A :class:`~django.contrib.formtools.preview.FormPreview` class is a simple "
"Python class that represents the preview workflow. :class:`~django.contrib."
"formtools.preview.FormPreview` classes must subclass ``django.contrib."
"formtools.preview.FormPreview`` and override the ``done()`` method. They can "
"live anywhere in your codebase."
msgstr ""

# 81cf0a83281c43d0a8116222002432d2
#: ../../ref/contrib/formtools/form-preview.txt:97
msgid "``FormPreview`` templates"
msgstr ""

# 3158a570406d45e8b17ed26c24f15d13
#: ../../ref/contrib/formtools/form-preview.txt:102
msgid ""
"By default, the form is rendered via the template :file:`formtools/form."
"html`, and the preview page is rendered via the template :file:`formtools/"
"preview.html`. These values can be overridden for a particular form preview "
"by setting :attr:`~django.contrib.formtools.preview.FormPreview."
"preview_template` and :attr:`~django.contrib.formtools.preview.FormPreview."
"form_template` attributes on the FormPreview subclass. See :file:`django/"
"contrib/formtools/templates` for the default templates."
msgstr ""

# 0f46b20827554c2c8ec66b9bc070dd6f
#: ../../ref/contrib/formtools/form-preview.txt:111
msgid "Advanced ``FormPreview`` methods"
msgstr ""

# 3ce2a525dddd4a7096933114778aa3cf
#: ../../ref/contrib/formtools/form-preview.txt:115
msgid ""
"Given a validated form, performs any extra processing before displaying the "
"preview page, and saves any extra data in context."
msgstr ""

# c5807cd7fe8c4bc58ba7d312b3597a1d
#: ../../ref/contrib/formtools/form-preview.txt:118
msgid ""
"By default, this method is empty.  It is called after the form is validated, "
"but before the context is modified with hash information and rendered."
msgstr ""

# b88e52e834d54ea2ad3f3fa765c63507
#: ../../ref/contrib/formtools/form-wizard.txt:3
msgid "Form wizard"
msgstr ""

# 5929634ad9f64c09b4b3b0f264829080
#: ../../ref/contrib/formtools/form-wizard.txt:8
msgid ""
"Django comes with an optional \"form wizard\" application that splits :doc:"
"`forms </topics/forms/index>` across multiple Web pages. It maintains state "
"in one of the backends so that the full server-side processing can be "
"delayed until the submission of the final form."
msgstr ""

# efefb998ee3d4646907c9385a1946176
#: ../../ref/contrib/formtools/form-wizard.txt:13
msgid ""
"You might want to use this if you have a lengthy form that would be too "
"unwieldy for display on a single page. The first page might ask the user for "
"core information, the second page might ask for less important information, "
"etc."
msgstr ""

# 4a4396a1276446989620f1efd7cfb785
#: ../../ref/contrib/formtools/form-wizard.txt:18
msgid "The term \"wizard\", in this context, is `explained on Wikipedia`_."
msgstr ""

# 0699201a657c442c8f45de36b39f596f
#: ../../ref/contrib/formtools/form-wizard.txt:25
msgid "Here's the basic workflow for how a user would use a wizard:"
msgstr ""

# f7a12abdb9f346c2b4faeb17d7a79294
#: ../../ref/contrib/formtools/form-wizard.txt:27
msgid ""
"The user visits the first page of the wizard, fills in the form and submits "
"it."
msgstr ""

# 36d5012b4a8b4fae880443d4316d3950
#: ../../ref/contrib/formtools/form-wizard.txt:29
msgid ""
"The server validates the data. If it's invalid, the form is displayed again, "
"with error messages. If it's valid, the server saves the current state of "
"the wizard in the backend and redirects to the next step."
msgstr ""

# 6cebb6d9c8404f7bb0ab6316b21f7dba
#: ../../ref/contrib/formtools/form-wizard.txt:32
msgid "Step 1 and 2 repeat, for every subsequent form in the wizard."
msgstr ""

# 73ab49a686f749b1a6afff56c8b3a067
#: ../../ref/contrib/formtools/form-wizard.txt:33
msgid ""
"Once the user has submitted all the forms and all the data has been "
"validated, the wizard processes the data -- saving it to the database, "
"sending an email, or whatever the application needs to do."
msgstr ""

# 6ac8379152d742019b3f0f7dd3a0fe7a
# d0b4e3db8ea64725957226fe37753af0
# 12ebd945f38d4be097959b17dbc4138e
#: ../../ref/contrib/formtools/form-wizard.txt:38
#: ../../ref/django-admin.txt:37 ../../ref/request-response.txt:547
msgid "Usage"
msgstr ""

# d156fc432fdd4934b365cc658c139b85
#: ../../ref/contrib/formtools/form-wizard.txt:40
msgid ""
"This application handles as much machinery for you as possible. Generally, "
"you just have to do these things:"
msgstr ""

# 0226bba89b564a79b12294d019c5a2be
#: ../../ref/contrib/formtools/form-wizard.txt:43
msgid ""
"Define a number of :class:`~django.forms.Form` classes -- one per wizard "
"page."
msgstr ""

# 75319bb973c04197834c18a8c988b937
#: ../../ref/contrib/formtools/form-wizard.txt:46
msgid ""
"Create a :class:`WizardView` subclass that specifies what to do once all of "
"your forms have been submitted and validated. This also lets you override "
"some of the wizard's behavior."
msgstr ""

# 7c3058507ac546bea49078a7b4fd3b16
#: ../../ref/contrib/formtools/form-wizard.txt:50
msgid ""
"Create some templates that render the forms. You can define a single, "
"generic template to handle every one of the forms, or you can define a "
"specific template for each form."
msgstr ""

# 7d05e01a33c34555a8b20060f8e24681
#: ../../ref/contrib/formtools/form-wizard.txt:54
msgid ""
"Add ``django.contrib.formtools`` to your :setting:`INSTALLED_APPS` list in "
"your settings file."
msgstr ""

# b2e16c262c1c42e0ad15cb9bd422ade7
#: ../../ref/contrib/formtools/form-wizard.txt:57
msgid ""
"Point your URLconf at your :class:`WizardView` :meth:`~WizardView.as_view` "
"method."
msgstr ""

# da2c7975d228475aa6258412452f50c8
#: ../../ref/contrib/formtools/form-wizard.txt:61
msgid "Defining ``Form`` classes"
msgstr ""

# e0158211df1b482d98bc432985eee157
#: ../../ref/contrib/formtools/form-wizard.txt:63
msgid ""
"The first step in creating a form wizard is to create the :class:`~django."
"forms.Form` classes.  These should be standard :class:`django.forms.Form` "
"classes, covered in the :doc:`forms documentation </topics/forms/index>`.  "
"These classes can live anywhere in your codebase, but convention is to put "
"them in a file called :file:`forms.py` in your application."
msgstr ""

# fb0cad8ef50d43c59f1cbf08d60f8810
#: ../../ref/contrib/formtools/form-wizard.txt:70
msgid ""
"For example, let's write a \"contact form\" wizard, where the first page's "
"form collects the sender's email address and subject, and the second page "
"collects the message itself. Here's what the :file:`forms.py` might look "
"like::"
msgstr ""

# 2c62b7611fb746f7a3ca9bbc79c3fea5
#: ../../ref/contrib/formtools/form-wizard.txt:86
msgid ""
"In order to use :class:`~django.forms.FileField` in any form, see the "
"section :ref:`Handling files <wizard-files>` below to learn more about what "
"to do."
msgstr ""

# 75fb6dca28b04e7a8142862e9353027e
#: ../../ref/contrib/formtools/form-wizard.txt:91
msgid "Creating a ``WizardView`` subclass"
msgstr ""

# e1d157deafc944ceb4a32e64d46fbe49
#: ../../ref/contrib/formtools/form-wizard.txt:96
msgid ""
"The next step is to create a :class:`django.contrib.formtools.wizard.views."
"WizardView` subclass. You can also use the :class:`SessionWizardView` or :"
"class:`CookieWizardView` classes which preselect the backend used for "
"storing information during execution of the wizard (as their names indicate, "
"server-side sessions and browser cookies respectively)."
msgstr ""

# 462b2db0cf70486d9a3ee7b52fdd2000
#: ../../ref/contrib/formtools/form-wizard.txt:105
msgid ""
"To use the :class:`SessionWizardView` follow the instructions in the :doc:"
"`sessions documentation </topics/http/sessions>` on how to enable sessions."
msgstr ""

# 6e790939a58941b69dde3d8c3893aa96
#: ../../ref/contrib/formtools/form-wizard.txt:109
msgid ""
"We will use the :class:`SessionWizardView` in all examples but is is "
"completely fine to use the :class:`CookieWizardView` instead. As with your :"
"class:`~django.forms.Form` classes, this :class:`WizardView` class can live "
"anywhere in your codebase, but convention is to put it in :file:`views.py`."
msgstr ""

# dd3fc4f06e5d41e9ad7bfa6b415bba56
#: ../../ref/contrib/formtools/form-wizard.txt:114
msgid ""
"The only requirement on this subclass is that it implement a :meth:"
"`~WizardView.done()` method."
msgstr ""

# 3679e130f4104a65927fbe51730206da
#: ../../ref/contrib/formtools/form-wizard.txt:119
msgid ""
"This method specifies what should happen when the data for *every* form is "
"submitted and validated. This method is passed a list of validated :class:"
"`~django.forms.Form` instances."
msgstr ""

# 48ace86b0e84435191260a45fd8e6d15
#: ../../ref/contrib/formtools/form-wizard.txt:123
msgid ""
"In this simplistic example, rather than performing any database operation, "
"the method simply renders a template of the validated data::"
msgstr ""

# db0bf9a9e6e045c08cc7fa82ae4331d8
#: ../../ref/contrib/formtools/form-wizard.txt:135
msgid ""
"Note that this method will be called via ``POST``, so it really ought to be "
"a good Web citizen and redirect after processing the data. Here's another "
"example::"
msgstr ""

# 2eeaf7eb607a4414bbf4d1a48ac983c2
#: ../../ref/contrib/formtools/form-wizard.txt:147
msgid ""
"See the section :ref:`Advanced WizardView methods <wizardview-advanced-"
"methods>` below to learn about more :class:`WizardView` hooks."
msgstr ""

# 4cd40b8a8d8e4c7391afff6090793ac2
#: ../../ref/contrib/formtools/form-wizard.txt:151
msgid "Creating templates for the forms"
msgstr ""

# 63ed32433a574429b54797b633732385
#: ../../ref/contrib/formtools/form-wizard.txt:153
msgid ""
"Next, you'll need to create a template that renders the wizard's forms. By "
"default, every form uses a template called :file:`formtools/wizard/"
"wizard_form.html`. You can change this template name by overriding either "
"the :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"attribute or the :meth:`~django.views.generic.base.TemplateResponseMixin."
"get_template_names()` method, which are documented in the :class:`~django."
"views.generic.base.TemplateResponseMixin` documentation.  The latter one "
"allows you to use a different template for each form (:ref:`see the example "
"below <wizard-template-for-each-form>`)."
msgstr ""

# 0843ab3f6a83495a84ff58b2dbc07efa
#: ../../ref/contrib/formtools/form-wizard.txt:165
msgid ""
"This template expects a ``wizard`` object that has various items attached to "
"it:"
msgstr ""

# b7e2a7a161184c69bc84e226bb6a2836
#: ../../ref/contrib/formtools/form-wizard.txt:168
msgid ""
"``form`` -- The :class:`~django.forms.Form` or :class:`~django.forms."
"formsets.BaseFormSet` instance for the current step (either empty or with "
"errors)."
msgstr ""

# ed8a0160726c42848c7c7a0c6f3c859b
#: ../../ref/contrib/formtools/form-wizard.txt:172
msgid "``steps`` -- A helper object to access the various steps related data:"
msgstr ""

# b3addbfe17a848afb2d370fba6b41d05
#: ../../ref/contrib/formtools/form-wizard.txt:174
msgid "``step0`` -- The current step (zero-based)."
msgstr ""

# f4e29afd09cc44739c30d2c66e250fcc
#: ../../ref/contrib/formtools/form-wizard.txt:175
msgid "``step1`` -- The current step (one-based)."
msgstr ""

# 950b74fb60534f2fa2c28b5d40c87556
#: ../../ref/contrib/formtools/form-wizard.txt:176
msgid "``count`` -- The total number of steps."
msgstr ""

# 73eecb7ebec646bc87569f6ed53ce68e
#: ../../ref/contrib/formtools/form-wizard.txt:177
msgid "``first`` -- The first step."
msgstr ""

# 9624ffed910344d9b5765a1767c29c95
#: ../../ref/contrib/formtools/form-wizard.txt:178
msgid "``last`` -- The last step."
msgstr ""

# 32ab65cb1b2045749f9a41534c4e8780
#: ../../ref/contrib/formtools/form-wizard.txt:179
msgid "``current`` -- The current (or first) step."
msgstr ""

# 67a701a3ec3b44c294059695ad30ebd1
#: ../../ref/contrib/formtools/form-wizard.txt:180
msgid "``next`` -- The next step."
msgstr ""

# 5109b02c982a46e997ea85407483296a
#: ../../ref/contrib/formtools/form-wizard.txt:181
msgid "``prev`` -- The previous step."
msgstr ""

# 4a14c27b87184b85a87a92c79517030f
#: ../../ref/contrib/formtools/form-wizard.txt:182
msgid "``index`` -- The index of the current step."
msgstr ""

# c01c12849ee742eb8be39f6b39b5d10f
#: ../../ref/contrib/formtools/form-wizard.txt:183
msgid "``all`` -- A list of all steps of the wizard."
msgstr ""

# a958ccc7cc3a451381b94cc08f9e1ae6
#: ../../ref/contrib/formtools/form-wizard.txt:185
msgid ""
"You can supply additional context variables by using the :meth:`~WizardView."
"get_context_data` method of your :class:`WizardView` subclass."
msgstr ""

# e27f585f7a264be39ea69c0dd332d20e
#: ../../ref/contrib/formtools/form-wizard.txt:189
msgid "Here's a full example template:"
msgstr ""

# 082ad2a42a9a49d6ad26efc3b6827969
#: ../../ref/contrib/formtools/form-wizard.txt:224
msgid ""
"Note that ``{{ wizard.management_form }}`` **must be used** for the wizard "
"to work properly."
msgstr ""

# 8cef8d70196e4d2e9bb6b34d4d75492e
#: ../../ref/contrib/formtools/form-wizard.txt:230
msgid "Hooking the wizard into a URLconf"
msgstr ""

# f2c3eeade3ce4d2dbb3b368c382523a2
#: ../../ref/contrib/formtools/form-wizard.txt:234
msgid ""
"Finally, we need to specify which forms to use in the wizard, and then "
"deploy the new :class:`WizardView` object at a URL in the ``urls.py``. The "
"wizard's ``as_view()`` method takes a list of your :class:`~django.forms."
"Form` classes as an argument during instantiation::"
msgstr ""

# 9bbd297c000946c5ae4099d8e681809d
#: ../../ref/contrib/formtools/form-wizard.txt:251
msgid "Using a different template for each form"
msgstr ""

# 9a13163ddeff4001800a6a9ab50a1ca6
#: ../../ref/contrib/formtools/form-wizard.txt:253
msgid ""
"As mentioned above, you may specify a different template for each form. "
"Consider an example using a form wizard to implement a multi-step checkout "
"process for an online store. In the first step, the user specifies a billing "
"and shipping address. In the second step, the user chooses payment type. If "
"they chose to pay by credit card, they will enter credit card information in "
"the next step. In the final step, they will confirm the purchase."
msgstr ""

# c6a7585e91be4715894530c4a7e82775
#: ../../ref/contrib/formtools/form-wizard.txt:260
msgid "Here's what the view code might look like::"
msgstr ""

# baf9b27133084a2880fe9832c5ce7616
#: ../../ref/contrib/formtools/form-wizard.txt:292
msgid "The ``urls.py`` file would contain something like::"
msgstr ""

# 8c4d27f4291e475a9ccd41f4dea87e02
#: ../../ref/contrib/formtools/form-wizard.txt:298
msgid ""
"Note that the ``OrderWizard`` object is initialized with a list of pairs. "
"The first element in the pair is a string that corresponds to the name of "
"the step and the second is the form class."
msgstr ""

# 69b076a9ba7b48e4b672a38b7787170b
#: ../../ref/contrib/formtools/form-wizard.txt:302
msgid ""
"In this example, the :meth:`~django.views.generic.base.TemplateResponseMixin."
"get_template_names()` method returns a list containing a single template, "
"which is selected based on the name of the current step."
msgstr ""

# b988515cd42447f594a83ad5972e27ca
#: ../../ref/contrib/formtools/form-wizard.txt:310
msgid "Advanced ``WizardView`` methods"
msgstr ""

# a4669c88c83749a49c749415294c9e95
#: ../../ref/contrib/formtools/form-wizard.txt:314
msgid ""
"Aside from the :meth:`~done()` method, :class:`WizardView` offers a few "
"advanced method hooks that let you customize how your wizard works."
msgstr ""

# 1ad220a1fe79409c986fd745e3a91d38
#: ../../ref/contrib/formtools/form-wizard.txt:317
msgid ""
"Some of these methods take an argument ``step``, which is a zero-based "
"counter as string representing the current step of the wizard. (E.g., the "
"first form is ``'0'`` and the second form is ``'1'``)"
msgstr ""

# 36824416f170480690826377fca3db5a
#: ../../ref/contrib/formtools/form-wizard.txt:323
msgid ""
"Returns the prefix which will be used when calling the form for the given "
"step. ``step`` contains the step name, ``form`` the form class which will be "
"called with the returned prefix."
msgstr ""

# 9104731bc36d410588dc53c2f316e3a7
#: ../../ref/contrib/formtools/form-wizard.txt:327
msgid ""
"If no ``step`` is given, it will be determined automatically. By default, "
"this simply uses the step itself and the ``form`` parameter is not used."
msgstr ""

# 45995cfd8ec54f71ab4a2e876bff5987
#: ../../ref/contrib/formtools/form-wizard.txt:330
msgid "For more, see the :ref:`form prefix documentation <form-prefix>`."
msgstr ""

# 8bd961cc5641491aa7070dffbda8733a
#: ../../ref/contrib/formtools/form-wizard.txt:334
msgid ""
"Returns a dictionary which will be passed as the :attr:`~django.forms.Form."
"initial` argument when instantiating the Form instance for step ``step``. If "
"no initial data was provided while initializing the form wizard, an empty "
"dictionary should be returned."
msgstr ""

# cd8a96980f424aaf99be26a6edb958d9
# bf6a32ec173b406798fe16c1e556456c
# bb453f4ced2c45cea34d4bd40129122b
# 17791fe2982d4fe7908d3b78979ff683
#: ../../ref/contrib/formtools/form-wizard.txt:339
#: ../../ref/contrib/formtools/form-wizard.txt:349
#: ../../ref/contrib/formtools/form-wizard.txt:364
#: ../../ref/contrib/formtools/form-wizard.txt:446
msgid "The default implementation::"
msgstr ""

# 2f2315c81ffe4c10bf8f571084956cf6
#: ../../ref/contrib/formtools/form-wizard.txt:346
msgid ""
"Returns a dictionary which will be used as the keyword arguments when "
"instantiating the form instance on given ``step``."
msgstr ""

# 4b4f81914737494386d0dee34fa699d1
#: ../../ref/contrib/formtools/form-wizard.txt:356
msgid ""
"This method will be called only if a :class:`~django.forms.ModelForm` is "
"used as the form for step ``step``."
msgstr ""

# 44ee4cadaa2a4cbbbf79dca0f37dd5a3
#: ../../ref/contrib/formtools/form-wizard.txt:359
msgid ""
"Returns an :class:`~django.db.models.Model` object which will be passed as "
"the ``instance`` argument when instantiating the ``ModelForm`` for step "
"``step``.  If no instance object was provided while initializing the form "
"wizard, ``None`` will be returned."
msgstr ""

# 201b9b60ff0e4624abe58c196754ebfe
#: ../../ref/contrib/formtools/form-wizard.txt:371
msgid ""
"Returns the template context for a step. You can overwrite this method to "
"add more data for all or some steps. This method returns a dictionary "
"containing the rendered form step."
msgstr ""

# 232b06f772e4495c94d030c422f6448f
#: ../../ref/contrib/formtools/form-wizard.txt:375
msgid "The default template context variables are:"
msgstr ""

# 9dda234d4fbf4c4783a01ed9231dca6e
#: ../../ref/contrib/formtools/form-wizard.txt:377
msgid "Any extra data the storage backend has stored"
msgstr ""

# 5a7c9cb7980a4aa397d36be086712754
#: ../../ref/contrib/formtools/form-wizard.txt:378
msgid "``form`` -- form instance of the current step"
msgstr ""

# c91d0a0028804b43a42faa8b7eabb7e4
#: ../../ref/contrib/formtools/form-wizard.txt:379
msgid "``wizard`` -- the wizard instance itself"
msgstr ""

# 7fd5ac553bb4486a9cac254752439c08
#: ../../ref/contrib/formtools/form-wizard.txt:381
msgid "Example to add extra variables for a specific step::"
msgstr ""

# 2f04b4d5cee54b1bb07de243b390cf97
#: ../../ref/contrib/formtools/form-wizard.txt:391
msgid ""
"This method returns a prefix for use by the storage backends. Backends use "
"the prefix as a mechanism to allow data to be stored separately for each "
"wizard. This allows wizards to store their data in a single backend without "
"overwriting each other."
msgstr ""

# b6c142cee94447008da725cf41edfb94
#: ../../ref/contrib/formtools/form-wizard.txt:396
msgid ""
"You can change this method to make the wizard data prefix more unique to, e."
"g. have multiple instances of one wizard in one session."
msgstr ""

# 5b7e2b36e9ab4365aaa41179740c0a60
# db00ec8e6d434bbfbd62d4c273f85d1a
# ffc5519b0c784cd4848441d9e3194616
# 438ad3bad2e140df8bc18dfa367b760b
# 579648b8d3bb434e9a1ef8ded8248f63
# 9ce717d7b04646adbe9c812ebcefa60a
# 33538f9bbaa5466c999bd5086eba4d65
#: ../../ref/contrib/formtools/form-wizard.txt:399
#: ../../ref/contrib/formtools/form-wizard.txt:459
#: ../../ref/contrib/formtools/form-wizard.txt:475
#: ../../ref/contrib/formtools/form-wizard.txt:487
#: ../../ref/contrib/formtools/form-wizard.txt:497
#: ../../ref/contrib/formtools/form-wizard.txt:507
#: ../../ref/contrib/formtools/form-wizard.txt:718
msgid "Default implementation::"
msgstr ""

# 370d06ca53574231bd1c7d3da7463094
#: ../../ref/contrib/formtools/form-wizard.txt:407
msgid ""
"This method constructs the form for a given ``step``. If no ``step`` is "
"defined, the current step will be determined automatically. If you override "
"``get_form``, however, you will need to set ``step`` yourself using ``self."
"steps.current`` as in the example below. The method gets three arguments:"
msgstr ""

# 6be030215c594d7e8617c64b25be2105
#: ../../ref/contrib/formtools/form-wizard.txt:413
msgid "``step`` -- The step for which the form instance should be generated."
msgstr ""

# bce83c73bcbf432886d7a6d59052efa0
#: ../../ref/contrib/formtools/form-wizard.txt:414
msgid "``data`` -- Gets passed to the form's data argument"
msgstr ""

# b439f670985f467db53fa3aab444debf
#: ../../ref/contrib/formtools/form-wizard.txt:415
msgid "``files`` -- Gets passed to the form's files argument"
msgstr ""

# c6880783c80c4c5982adcd257abed71d
#: ../../ref/contrib/formtools/form-wizard.txt:417
msgid ""
"You can override this method to add extra arguments to the form instance."
msgstr ""

# e6171e14b9684ce8b1943cc8a93db1bf
#: ../../ref/contrib/formtools/form-wizard.txt:419
msgid "Example code to add a user attribute to the form on step 2::"
msgstr ""

# 773f6dbb5b48408d987a88b121cd9e36
#: ../../ref/contrib/formtools/form-wizard.txt:434
msgid ""
"Hook for modifying the wizard's internal state, given a fully validated :"
"class:`~django.forms.Form` object. The Form is guaranteed to have clean, "
"valid data."
msgstr ""

# 3a285d1987914ed187b192687094fcf0
#: ../../ref/contrib/formtools/form-wizard.txt:438
msgid ""
"This method gives you a way to post-process the form data before the data "
"gets stored within the storage backend. By default it just returns the "
"``form.data`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""

# e2d1e60fbffa4c97b71f287185186163
#: ../../ref/contrib/formtools/form-wizard.txt:443
msgid ""
"Note that this method is called every time a page is rendered for *all* "
"submitted steps."
msgstr ""

# 0e3f71258bf24abf92215aa194cebdd2
#: ../../ref/contrib/formtools/form-wizard.txt:453
msgid ""
"This method gives you a way to post-process the form files before the files "
"gets stored within the storage backend. By default it just returns the "
"``form.files`` dictionary. You should not manipulate the data here but you "
"can use it to do some extra work if needed (e.g. set storage extra data)."
msgstr ""

# 03e6df18407d4d8dbfb7f86c1138b40c
#: ../../ref/contrib/formtools/form-wizard.txt:466
msgid ""
"When the wizard thinks all steps have passed it revalidates all forms with "
"the data from the backend storage."
msgstr ""

# aa84c6dccae443b889881a725b1b2e22
#: ../../ref/contrib/formtools/form-wizard.txt:469
msgid ""
"If any of the forms don't validate correctly, this method gets called. This "
"method expects two arguments, ``step`` and ``form``."
msgstr ""

# b60aa32bc3c94cc999b74dd59ca62622
#: ../../ref/contrib/formtools/form-wizard.txt:472
msgid ""
"The default implementation resets the current step to the first failing form "
"and redirects the user to the invalid form."
msgstr ""

# 51e98cabac0d4fc481c2880033c9b43f
#: ../../ref/contrib/formtools/form-wizard.txt:483
msgid ""
"This method fetches the data from the ``form`` Form instance and returns the "
"dictionary. You can use this method to manipulate the values before the data "
"gets stored in the storage backend."
msgstr ""

# 16f4e7a430394de09015f0ff7b30e5f4
#: ../../ref/contrib/formtools/form-wizard.txt:494
msgid ""
"This method returns the form files. You can use this method to manipulate "
"the files before the data gets stored in the storage backend."
msgstr ""

# 161b5a2660444949bc1f0c37b2be3cb9
#: ../../ref/contrib/formtools/form-wizard.txt:504
msgid ""
"This method gets called after the GET or POST request has been handled. You "
"can hook in this method to, e.g. change the type of HTTP response."
msgstr ""

# 0718f737318c4d0382a9a4bd9fca4132
#: ../../ref/contrib/formtools/form-wizard.txt:516
msgid ""
"This method returns the cleaned data for a given ``step``. Before returning "
"the cleaned data, the stored values are revalidated through the form. If the "
"data doesn't validate, ``None`` will be returned."
msgstr ""

# d444b949381e4101b27102805b07db85
#: ../../ref/contrib/formtools/form-wizard.txt:522
msgid ""
"This method returns a merged dictionary of all form steps' ``cleaned_data`` "
"dictionaries. If a step contains a ``FormSet``, the key will be prefixed "
"with ``formset-`` and contain a list of the formset's ``cleaned_data`` "
"dictionaries. Note that if two or more steps have a field with the same "
"name, the value for that field from the latest step will overwrite the value "
"from any earlier steps."
msgstr ""

# 3ef7e8b3a23f4fdab13037560c1d3a97
#: ../../ref/contrib/formtools/form-wizard.txt:530
msgid "Providing initial data for the forms"
msgstr ""

# 1724dacadc744eb68f4afad451fc8583
#: ../../ref/contrib/formtools/form-wizard.txt:534
msgid ""
"Initial data for a wizard's :class:`~django.forms.Form` objects can be "
"provided using the optional :attr:`~WizardView.initial_dict` keyword "
"argument. This argument should be a dictionary mapping the steps to "
"dictionaries containing the initial data for each step. The dictionary of "
"initial data will be passed along to the constructor of the step's :class:"
"`~django.forms.Form`::"
msgstr ""

# 1c71273f55d34c498e8be76ed51f6f94
#: ../../ref/contrib/formtools/form-wizard.txt:557
msgid ""
"The ``initial_dict`` can also take a list of dictionaries for a specific "
"step if the step is a ``FormSet``."
msgstr ""

# f561d44448594c009502412611378f96
#: ../../ref/contrib/formtools/form-wizard.txt:563
msgid "Handling files"
msgstr ""

# a9069a770de04b4ca4d3674f97f1ce16
#: ../../ref/contrib/formtools/form-wizard.txt:567
msgid ""
"To handle :class:`~django.forms.FileField` within any step form of the "
"wizard, you have to add a ``file_storage`` to your :class:`WizardView` "
"subclass."
msgstr ""

# ba6aa7bdb84c49f69b636b28767a19c8
#: ../../ref/contrib/formtools/form-wizard.txt:570
msgid ""
"This storage will temporarily store the uploaded files for the wizard. The "
"``file_storage`` attribute should be a :class:`~django.core.files.storage."
"Storage` subclass."
msgstr ""

# 8f7c095968834a3fa0f63db9c595f031
#: ../../ref/contrib/formtools/form-wizard.txt:574
msgid ""
"Django provides a built-in storage class (see :ref:`the built-in filesystem "
"storage class <builtin-fs-storage>`)::"
msgstr ""

# 957b3f2719b44bfd8b1ca7b8bb3ad5c4
#: ../../ref/contrib/formtools/form-wizard.txt:586
msgid ""
"Please remember to take care of removing old files as the :class:"
"`WizardView` won't remove any files, whether the wizard gets finished "
"correctly or not."
msgstr ""

# 12636eda0d554dba985c8eeaa744deb0
#: ../../ref/contrib/formtools/form-wizard.txt:591
msgid "Conditionally view/skip specific steps"
msgstr ""

# 2b38c7f022fc4021b503859182a9980c
#: ../../ref/contrib/formtools/form-wizard.txt:595
msgid ""
"The :meth:`~WizardView.as_view` method accepts a ``condition_dict`` "
"argument. You can pass a dictionary of boolean values or callables. The key "
"should match the steps names (e.g. '0', '1')."
msgstr ""

# d74eba74089442598dc12f83193bd12b
#: ../../ref/contrib/formtools/form-wizard.txt:599
msgid ""
"If the value of a specific step is callable it will be called with the :"
"class:`WizardView` instance as the only argument. If the return value is "
"true, the step's form will be used."
msgstr ""

# 78e24cce2a4d4056b1fc4909e89f1416
#: ../../ref/contrib/formtools/form-wizard.txt:603
msgid ""
"This example provides a contact form including a condition. The condition is "
"used to show a message form only if a checkbox in the first step was checked."
msgstr ""

# 8a48586f27094f8bab7c0416cb208009
#: ../../ref/contrib/formtools/form-wizard.txt:606
msgid "The steps are defined in a ``forms.py`` file::"
msgstr ""

# ebbfb0cc4585420280f08e1109336b63
#: ../../ref/contrib/formtools/form-wizard.txt:618
msgid "We define our wizard in a ``views.py``::"
msgstr ""

# 8fbaaae6b26441df953f5fe02658aaa9
#: ../../ref/contrib/formtools/form-wizard.txt:636
msgid "We need to add the ``ContactWizard`` to our ``urls.py`` file::"
msgstr ""

# 02b4477378254124a7d0ec6b0073f2d2
#: ../../ref/contrib/formtools/form-wizard.txt:651
msgid ""
"As you can see, we defined a ``show_message_form_condition`` next to our :"
"class:`WizardView` subclass and added a ``condition_dict`` argument to the :"
"meth:`~WizardView.as_view` method. The key refers to the second wizard step "
"(because of the zero based step index)."
msgstr ""

# aa41120fd1614b9b9dbd7c6292ccefba
#: ../../ref/contrib/formtools/form-wizard.txt:657
msgid "How to work with ModelForm and ModelFormSet"
msgstr ""

# 31115a55bdd642b3800b53eb80c780f8
#: ../../ref/contrib/formtools/form-wizard.txt:661
msgid ""
"WizardView supports :doc:`ModelForms </topics/forms/modelforms>` and :ref:"
"`ModelFormSets <model-formsets>`. Additionally to :attr:`~WizardView."
"initial_dict`, the :meth:`~WizardView.as_view` method takes an "
"``instance_dict`` argument that should contain model instances for steps "
"based on ``ModelForm`` and querysets for steps based on ``ModelFormSet``."
msgstr ""

# 53a9d9e8ff274042b3a0ad2556bd5aaa
#: ../../ref/contrib/formtools/form-wizard.txt:668
msgid "Usage of ``NamedUrlWizardView``"
msgstr ""

# f50c5154bcaf4a9aa78e034b4752bcf3
#: ../../ref/contrib/formtools/form-wizard.txt:674
msgid ""
"There is a :class:`WizardView` subclass which adds named-urls support to the "
"wizard. By doing this, you can have single urls for every step. You can also "
"use the :class:`NamedUrlSessionWizardView` or :class:"
"`NamedUrlCookieWizardView` classes which preselect the backend used for "
"storing information (server-side sessions and browser cookies respectively)."
msgstr ""

# 6e17a62034984fdf988dadfe85fafb65
#: ../../ref/contrib/formtools/form-wizard.txt:680
msgid "To use the named urls, you have to change the ``urls.py``."
msgstr ""

# e67958a3985f491a96ccff40f006aa7e
#: ../../ref/contrib/formtools/form-wizard.txt:682
msgid ""
"Below you will see an example of a contact wizard with two steps, step 1 "
"with \"contactdata\" as its name and step 2 with \"leavemessage\" as its "
"name."
msgstr ""

# 77a87c8878b5479cb6f416f13e9cd437
#: ../../ref/contrib/formtools/form-wizard.txt:685
msgid ""
"Additionally you have to pass two more arguments to the :meth:`~WizardView."
"as_view` method:"
msgstr ""

# 313456cc796548d98222830500b5d86e
#: ../../ref/contrib/formtools/form-wizard.txt:688
msgid "``url_name`` -- the name of the url (as provided in the urls.py)"
msgstr ""

# 610a294548c548ab81f5bbdcf6ed452b
#: ../../ref/contrib/formtools/form-wizard.txt:689
msgid "``done_step_name`` -- the name in the url for the done step"
msgstr ""

# 9010ca3e49f8485595c5f8f57a1d0f32
#: ../../ref/contrib/formtools/form-wizard.txt:691
msgid "Example code for the changed ``urls.py`` file::"
msgstr ""

# 3aed0ab0527d470daac52fb3c4b0b220
#: ../../ref/contrib/formtools/form-wizard.txt:712
msgid "Advanced ``NamedUrlWizardView`` methods"
msgstr ""

# 6614c2b2ad2f40e9be73d3cd960e29ae
#: ../../ref/contrib/formtools/form-wizard.txt:716
msgid "This method returns the URL for a specific step."
msgstr ""

# d664631222c34b6a9a1d929a545c24ed
#: ../../ref/contrib/formtools/index.txt:2
msgid "django.contrib.formtools"
msgstr ""

# 57aa6080b48046148465f1f7ea6d4530
#: ../../ref/contrib/formtools/index.txt:6
msgid ""
"A set of high-level abstractions for Django forms (:mod:`django.forms`)."
msgstr ""

# dcbf0a4e778a4b1c8d65e370944933c5
#: ../../ref/contrib/gis/admin.txt:5
msgid "GeoDjango's admin site"
msgstr ""

# 037b03fe03a048148bd8dc347e072a12
#: ../../ref/contrib/gis/admin.txt:12
msgid "``GeoModelAdmin``"
msgstr ""

# 0b1f29fbd0a84c6aaafebef78b094873
#: ../../ref/contrib/gis/admin.txt:18
msgid "The default center longitude."
msgstr ""

# d728079fd1894dc9838a03a05ffe025a
#: ../../ref/contrib/gis/admin.txt:22
msgid "The default center latitude."
msgstr ""

# 0bf07b07a28a4330b2c293a0238f2028
#: ../../ref/contrib/gis/admin.txt:26
msgid "The default zoom level to use.  Defaults to 18."
msgstr ""

# 778f6071fea14a479b8653e606f95efc
#: ../../ref/contrib/gis/admin.txt:30
msgid "Sequence of URLs to any extra JavaScript to include."
msgstr ""

# 39d3cb5e3ad3403ea04f1967d380c111
#: ../../ref/contrib/gis/admin.txt:34
msgid ""
"Override the template used to generate the JavaScript slippy map. Default is "
"``'gis/admin/openlayers.html'``."
msgstr ""

# 09d3b6acf3554e29b8c5b87f5de6d341
#: ../../ref/contrib/gis/admin.txt:39
msgid "Width of the map, in pixels.  Defaults to 600."
msgstr ""

# b3b5e74e599a47919f48008bea6a32b9
#: ../../ref/contrib/gis/admin.txt:43
msgid "Height of the map, in pixels.  Defaults to 400."
msgstr ""

# b5bcaa2ee82347baa19033a2b2961a02
#: ../../ref/contrib/gis/admin.txt:47
msgid ""
"Link to the URL of the OpenLayers JavaScript.  Defaults to ``'http://"
"openlayers.org/api/2.11/OpenLayers.js'``."
msgstr ""

# a517da8f68fe44a59d55223fdf23ca44
#: ../../ref/contrib/gis/admin.txt:53
msgid ""
"Defaults to ``True``.  When set to ``False``, disables editing of existing "
"geometry fields in the admin."
msgstr ""

# 31602643bbb042adbd26f8bacb7c56ed
#: ../../ref/contrib/gis/admin.txt:58
msgid ""
"This is different from adding the geometry field to :attr:`~django.contrib."
"admin.ModelAdmin.readonly_fields`, which will only display the WKT of the "
"geometry. Setting ``modifiable=False``, actually displays the geometry in a "
"map, but disables the ability to edit its vertices."
msgstr ""

# 1b1486263a754de4ac6cbd0a1fc84279
# 0a2d6f6022c044729e7a38216990fdcf
#: ../../ref/contrib/gis/admin.txt:65 ../../ref/contrib/gis/tutorial.txt:758
msgid "``OSMGeoAdmin``"
msgstr ""

# 7d998c1a2d42413d81ce72aba39e04de
#: ../../ref/contrib/gis/admin.txt:69
msgid ""
"A subclass of :class:`GeoModelAdmin` that uses a spherical mercator "
"projection with `OpenStreetMap <http://openstreetmap.org/>`_ street data "
"tiles. See the :ref:`OSMGeoAdmin introduction <osmgeoadmin-intro>` in the "
"tutorial for a usage example."
msgstr ""

# 54b6f42fe1e74498a887fc047b084230
#: ../../ref/contrib/gis/commands.txt:5
msgid "GeoDjango Management Commands"
msgstr ""

# 41b3876889ff4b52b4c1935b25d3e5b2
# 7e73cf9cc3564f129ef28081008a363a
#: ../../ref/contrib/gis/commands.txt:8 ../../ref/django-admin.txt:241
msgid "inspectdb"
msgstr ""

# 0cddabd5bccf431cb670049276ad3527
#: ../../ref/contrib/gis/commands.txt:12
msgid ""
"When :mod:`django.contrib.gis` is in your :setting:`INSTALLED_APPS`, the :"
"djadmin:`inspectdb` management command is overridden with one from "
"GeoDjango. The overridden command is spatially-aware, and places geometry "
"fields in the auto-generated model definition, where appropriate."
msgstr ""

# ecb5679ee068480f957f42345d1e875e
#: ../../ref/contrib/gis/commands.txt:18
msgid "ogrinspect <data_source> <model_name>"
msgstr ""

# 882e4200d9824b13bc30e07b4082000d
#: ../../ref/contrib/gis/commands.txt:22
msgid ""
"The ``ogrinpsect`` management command will inspect the given OGR-compatible :"
"class:`~django.contrib.gis.gdal.DataSource` (e.g., a shapefile) and will "
"output a GeoDjango model with the given model name.  There's a detailed "
"example of using ``ogrinspect`` :ref:`in the tutorial <ogrinspect-intro>`."
msgstr ""

# ee0de3b3b72f4776bb4821ce38a00cc7
#: ../../ref/contrib/gis/commands.txt:29
msgid ""
"Use a comma separated list of OGR field names to add the ``blank=True`` "
"keyword option to the field definition.  Set with ``true`` to apply to all "
"applicable fields."
msgstr ""

# e220aa0dc42e48f49632dcb9f3ff9579
#: ../../ref/contrib/gis/commands.txt:35
msgid ""
"Use a comma separated list of OGR float fields to generate :class:`~django."
"db.models.DecimalField` instead of the default :class:`~django.db.models."
"FloatField`. Set to ``true`` to apply to all OGR float fields."
msgstr ""

# 649953f467d245219290e47c5e8484c8
#: ../../ref/contrib/gis/commands.txt:42
msgid ""
"Specifies the model attribute name to use for the geometry field. Defaults "
"to ``'geom'``."
msgstr ""

# 50530ab3b27b449ab65cd868d32736ee
#: ../../ref/contrib/gis/commands.txt:47
msgid ""
"The key for specifying which layer in the OGR :class:`~django.contrib.gis."
"gdal.DataSource` source to use. Defaults to 0 (the first layer). May be an "
"integer or a string identifier for the :class:`~django.contrib.gis.gdal."
"Layer`."
msgstr ""

# 7b5e47bd6b874656a73e896f524a57bf
#: ../../ref/contrib/gis/commands.txt:54
msgid ""
"Automatically generate a mapping dictionary for use with :class:`~django."
"contrib.gis.utils.LayerMapping`."
msgstr ""

# 20e6ed45ac124d0a823d0f96910d3cf4
#: ../../ref/contrib/gis/commands.txt:59
msgid ""
"When generating the geometry field, treat it as a geometry collection. For "
"example, if this setting is enabled then a :class:`~django.contrib.gis.db."
"models.MultiPolygonField` will be placed in the generated model rather than :"
"class:`~django.contrib.gis.db.models.PolygonField`."
msgstr ""

# b109fb0d5dd1429bb8f4d62053de653d
#: ../../ref/contrib/gis/commands.txt:67
msgid ""
"Generates a ``__unicode__`` routine on the model that will return the the "
"given field name."
msgstr ""

# fdea13b4e32c42848cae87155c01d37f
#: ../../ref/contrib/gis/commands.txt:72
msgid ""
"Suppresses the ``from django.contrib.gis.db import models`` import statement."
msgstr ""

# 46f2c75ccab74b9eb4436d85a26f1a72
#: ../../ref/contrib/gis/commands.txt:76
msgid ""
"Use a comma separated list of OGR field names to add the ``null=True`` "
"keyword option to the field definition.  Set with ``true`` to apply to all "
"applicable fields."
msgstr ""

# fc571a2363aa4c19852a314d37b55d69
#: ../../ref/contrib/gis/commands.txt:82
msgid ""
"The SRID to use for the geometry field.  If not set, ``ogrinspect`` attempts "
"to automatically determine of the SRID of the data source."
msgstr ""

# 694eb810814249d192e20926aa9ddec1
#: ../../ref/contrib/gis/db-api.txt:5
msgid "GeoDjango Database API"
msgstr ""

# 5e7ea371fb104514bd486b7464cafddb
#: ../../ref/contrib/gis/db-api.txt:10
msgid "Spatial Backends"
msgstr ""

# a8711b2a530944258ed6e4f26ee13965
#: ../../ref/contrib/gis/db-api.txt:15
msgid "GeoDjango currently provides the following spatial database backends:"
msgstr ""

# 0c68d0ef06c345adabacda315db91204
#: ../../ref/contrib/gis/db-api.txt:17
msgid "``django.contrib.gis.db.backends.postgis``"
msgstr ""

# 5f4012ae7c3845c0b8265fb8b7b1fba6
#: ../../ref/contrib/gis/db-api.txt:18
msgid "``django.contrib.gis.db.backends.mysql``"
msgstr ""

# fb9f763a57534096a9ba219fe0c1ea41
#: ../../ref/contrib/gis/db-api.txt:19
msgid "``django.contrib.gis.db.backends.oracle``"
msgstr ""

# f6705f44010c4de5804c73fc118fb646
#: ../../ref/contrib/gis/db-api.txt:20
msgid "``django.contrib.gis.db.backends.spatialite``"
msgstr ""

# 9b4ecd8404ca40f4b6c1bb7a6c71e5a4
#: ../../ref/contrib/gis/db-api.txt:28
msgid "MySQL Spatial Limitations"
msgstr ""

# 1e732a2007d04905b321d2f1c38f0e39
#: ../../ref/contrib/gis/db-api.txt:30
msgid ""
"MySQL's spatial extensions only support bounding box operations (what MySQL "
"calls minimum bounding rectangles, or MBR).  Specifically, `MySQL does not "
"conform to the OGC standard <http://dev.mysql.com/doc/refman/5.1/en/"
"functions-for-testing-spatial-relations-between-geometric-objects.html>`_:"
msgstr ""

# f23451217f4146f2ae764cd4a588d671
#: ../../ref/contrib/gis/db-api.txt:34
msgid ""
"Currently, MySQL does not implement these functions [``Contains``, "
"``Crosses``, ``Disjoint``, ``Intersects``, ``Overlaps``, ``Touches``, "
"``Within``] according to the specification.  Those that are implemented "
"return the same result as the corresponding MBR-based functions."
msgstr ""

# fcaa34eb47914b4ca6b35b54e307be0d
#: ../../ref/contrib/gis/db-api.txt:40
msgid ""
"In other words, while spatial lookups such as :lookup:`contains <gis-"
"contains>` are available in GeoDjango when using MySQL, the results returned "
"are really equivalent to what would be returned when using :lookup:"
"`bbcontains` on a different spatial backend."
msgstr ""

# ae8d51a9b476439dbb6382f182e64b6b
#: ../../ref/contrib/gis/db-api.txt:47
msgid ""
"True spatial indexes (R-trees) are only supported with MyISAM tables on "
"MySQL. [#fnmysqlidx]_ In other words, when using MySQL spatial extensions "
"you have to choose between fast spatial lookups and the integrity of your "
"data -- MyISAM tables do not support transactions or foreign key constraints."
msgstr ""

# cb0fe84e093540b082502e9f829033b0
#: ../../ref/contrib/gis/db-api.txt:54
msgid "Creating and Saving Geographic Models"
msgstr ""

# 1dc70d236bb343449e0129cbc96f488f
#: ../../ref/contrib/gis/db-api.txt:55
msgid ""
"Here is an example of how to create a geometry object (assuming the "
"``Zipcode`` model)::"
msgstr ""

# 2fe2c7687360448bafeac011c5e603b5
#: ../../ref/contrib/gis/db-api.txt:62
msgid ""
":class:`~django.contrib.gis.geos.GEOSGeometry` objects may also be used to "
"save geometric models::"
msgstr ""

# 1ca04c8bf30a4149a04d40cc75085f1f
#: ../../ref/contrib/gis/db-api.txt:69
msgid ""
"Moreover, if the ``GEOSGeometry`` is in a different coordinate system (has a "
"different SRID value) than that of the field, then it will be implicitly "
"transformed into the SRID of the model's field, using the spatial database's "
"transform procedure::"
msgstr ""

# f237e092dfdb4854bb9c3cf1e35faa79
#: ../../ref/contrib/gis/db-api.txt:81
msgid ""
"Thus, geometry parameters may be passed in using the ``GEOSGeometry`` "
"object, WKT (Well Known Text [#fnwkt]_), HEXEWKB (PostGIS specific -- a WKB "
"geometry in hexadecimal [#fnewkb]_), and GeoJSON [#fngeojson]_ (requires "
"GDAL). Essentially, if the input is not a ``GEOSGeometry`` object, the "
"geometry field will attempt to create a ``GEOSGeometry`` instance from the "
"input."
msgstr ""

# 26c14f80ce834713b733aedf6b2a285a
#: ../../ref/contrib/gis/db-api.txt:87
msgid ""
"For more information creating :class:`~django.contrib.gis.geos.GEOSGeometry` "
"objects, refer to the :ref:`GEOS tutorial <geos-tutorial>`."
msgstr ""

# 385317c8d0674a84b9627ea27b19ec6c
# a31eb907010b4c3e9cca858da2b00b79
# 667ce12ea59348f683c61ba677d07c11
# 7f3a83c2cff34e6a9436e6867b89e0aa
#: ../../ref/contrib/gis/db-api.txt:93 ../../ref/contrib/gis/db-api.txt:227
#: ../../ref/contrib/gis/geoquerysets.txt:15
#: ../../ref/contrib/gis/tutorial.txt:590
msgid "Spatial Lookups"
msgstr ""

# 1f19d041441b44f4a61a1ec983e901df
#: ../../ref/contrib/gis/db-api.txt:95
msgid ""
"GeoDjango's lookup types may be used with any manager method like "
"``filter()``, ``exclude()``, etc.  However, the lookup types unique to "
"GeoDjango are only available on geometry fields. Filters on 'normal' fields "
"(e.g. :class:`~django.db.models.CharField`) may be chained with those on "
"geographic fields.  Thus, geographic queries take the following general form "
"(assuming  the ``Zipcode`` model used in the :ref:`ref-gis-model-api`)::"
msgstr ""

# c911aaa936094693bc95246e6714bbf0
#: ../../ref/contrib/gis/db-api.txt:110
msgid ""
"In this case, ``poly`` is the geographic field, :lookup:`contains <gis-"
"contains>` is the spatial lookup type, and ``pnt`` is the parameter (which "
"may be a :class:`~django.contrib.gis.geos.GEOSGeometry` object or a string "
"of GeoJSON , WKT, or HEXEWKB)."
msgstr ""

# 71192f5b5c4547bf8e402485545abe6a
#: ../../ref/contrib/gis/db-api.txt:115
msgid ""
"A complete reference can be found in the :ref:`spatial lookup reference "
"<spatial-lookups>`."
msgstr ""

# f7965775c58e4f23b5d602d5b5049979
#: ../../ref/contrib/gis/db-api.txt:120
msgid ""
"GeoDjango constructs spatial SQL with the :class:`GeoQuerySet`, a subclass "
"of :class:`~django.db.models.query.QuerySet`.  The :class:`GeoManager` "
"instance attached to your model is what enables use of :class:`GeoQuerySet`."
msgstr ""

# d38e90e3e25b4a098f63924b49c20339
#: ../../ref/contrib/gis/db-api.txt:128
msgid "Distance Queries"
msgstr ""

# ef038b2680144b068953f61e7d266618
# 75f8697f405a45b4b96d6c5b8d9cef12
#: ../../ref/contrib/gis/db-api.txt:131 ../../ref/contrib/gis/tutorial.txt:6
msgid "Introduction"
msgstr ""

# 5887fa0047d14246bcc4c0c26022e045
#: ../../ref/contrib/gis/db-api.txt:132
msgid ""
"Distance calculations with spatial data is tricky because, unfortunately, "
"the Earth is not flat.  Some distance queries with fields in a geographic "
"coordinate system may have to be expressed differently because of "
"limitations in PostGIS.  Please see the :ref:`selecting-an-srid` section in "
"the :ref:`ref-gis-model-api` documentation for more details."
msgstr ""

# d0bd1cd184e344d5bd721ffdb967d913
# 18b85693b0e2431e8928b688c220545d
#: ../../ref/contrib/gis/db-api.txt:141
#: ../../ref/contrib/gis/geoquerysets.txt:510
msgid "Distance Lookups"
msgstr ""

# b771e13de62a4784b12fe0ca51582f72
# c7d6bceacb2644a392c2f6d59ab80c0d
# 5189279409bd4f90b460dc70d0077668
# b5ca7c50367e4ff89dfef26c138c0e56
# a7eebdfd5ce649758d62f59665e05f54
# eca24e0005424338854fd8a5301d551d
# 58f50f3492a34197a6c4c2014914af9f
# 8ab281dc978a4f49ae442f6ea8a69184
# acd2601e5fa04ab7bd130f4f0c12b7b9
# d075f28aad9840f6bb5bebfd07b15e50
# 5d416097daa84d30a99703ca72282c0a
# 2ec8cbfc7454442abcc0b818600f1984
#: ../../ref/contrib/gis/db-api.txt:142
#: ../../ref/contrib/gis/geoquerysets.txt:270
#: ../../ref/contrib/gis/geoquerysets.txt:512
#: ../../ref/contrib/gis/geoquerysets.txt:691
#: ../../ref/contrib/gis/geoquerysets.txt:770
#: ../../ref/contrib/gis/geoquerysets.txt:790
#: ../../ref/contrib/gis/geoquerysets.txt:849
#: ../../ref/contrib/gis/geoquerysets.txt:887
#: ../../ref/contrib/gis/geoquerysets.txt:980
#: ../../ref/contrib/gis/geoquerysets.txt:1076
#: ../../ref/contrib/gis/geoquerysets.txt:1088
#: ../../ref/contrib/gis/geoquerysets.txt:1165
msgid "*Availability*: PostGIS, Oracle, SpatiaLite"
msgstr ""

# 31beb3d1c9c74bd6aa7975c9cd8cff63
#: ../../ref/contrib/gis/db-api.txt:144
msgid "The following distance lookups are available:"
msgstr ""

# 781730973c0a445cabdd6bc47d2e3aa4
# 4b6fb846eaf94a0c94223f111affaec9
#: ../../ref/contrib/gis/db-api.txt:146 ../../ref/contrib/gis/db-api.txt:246
msgid ":lookup:`distance_lt`"
msgstr ""

# 5998aeb92e74417a931ea02f0fe62a15
# 70723609858944a9a1e412437e2c73af
#: ../../ref/contrib/gis/db-api.txt:147 ../../ref/contrib/gis/db-api.txt:247
msgid ":lookup:`distance_lte`"
msgstr ""

# 032e2d6ba69743eb898e174ff13ca44a
# f861243825e8429cb56467eb25b676bd
#: ../../ref/contrib/gis/db-api.txt:148 ../../ref/contrib/gis/db-api.txt:244
msgid ":lookup:`distance_gt`"
msgstr ""

# 799dcbba824b4e378a3f6db0e8290685
# d68b98ec2f754ec7b4983279e23c4a39
#: ../../ref/contrib/gis/db-api.txt:149 ../../ref/contrib/gis/db-api.txt:245
msgid ":lookup:`distance_gte`"
msgstr ""

# 9fb7ede823b84f0b96acb71d7a149d8b
# 146dcc05d6b94fd5a6ff179e0d442405
#: ../../ref/contrib/gis/db-api.txt:150 ../../ref/contrib/gis/db-api.txt:248
msgid ":lookup:`dwithin`"
msgstr ""

# 7c205d0530f14c03ae93e48dfa2f1d7f
#: ../../ref/contrib/gis/db-api.txt:154
msgid ""
"For *measuring*, rather than querying on distances, use the :meth:"
"`GeoQuerySet.distance` method."
msgstr ""

# c73c863c257744e0b4c10e8e209aea00
#: ../../ref/contrib/gis/db-api.txt:157
msgid "Distance lookups take a tuple parameter comprising:"
msgstr ""

# 70574103bcce4124a468a4f80a49729d
#: ../../ref/contrib/gis/db-api.txt:159
msgid "A geometry to base calculations from; and"
msgstr ""

# c7792800f0534139b798cfa7147e4446
#: ../../ref/contrib/gis/db-api.txt:160
msgid ""
"A number or :class:`~django.contrib.gis.measure.Distance` object containing "
"the distance."
msgstr ""

# 31e9b78ad7254ec3be666174f2c4a77a
#: ../../ref/contrib/gis/db-api.txt:162
msgid ""
"If a :class:`~django.contrib.gis.measure.Distance` object is used, it may be "
"expressed in any units (the SQL generated will use units converted to those "
"of the field); otherwise, numeric parameters are assumed to be in the units "
"of the field."
msgstr ""

# a6f2b862d9374f10bfc22ea67a6c2c23
#: ../../ref/contrib/gis/db-api.txt:169
msgid ""
"For users of PostGIS 1.4 and below, the routine ``ST_Distance_Sphere`` is "
"used by default for calculating distances on geographic coordinate systems "
"(e.g., WGS84) -- which may only be called with point geometries "
"[#fndistsphere14]_. Thus, geographic distance lookups on traditional PostGIS "
"geometry columns are only allowed on :class:`PointField` model fields using "
"a point for the geometry parameter."
msgstr ""

# 5079d019d4d04cd78d60e4d98cb6d7eb
#: ../../ref/contrib/gis/db-api.txt:178
msgid ""
"In PostGIS 1.5, ``ST_Distance_Sphere`` does *not* limit the geometry types "
"geographic distance queries are performed with. [#fndistsphere15]_  However, "
"these queries may take a long time, as great-circle distances must be "
"calculated on the fly for *every* row in the query.  This is because the "
"spatial index on traditional geometry fields cannot be used."
msgstr ""

# 58eb14e5360b44f9ad62a129565de379
#: ../../ref/contrib/gis/db-api.txt:184
msgid ""
"For much better performance on WGS84 distance queries, consider using :ref:"
"`geography columns <geography-type>` in your database instead because they "
"are able to use their spatial index in distance queries. You can tell "
"GeoDjango to use a geography column by setting ``geography=True`` in your "
"field definition."
msgstr ""

# 99cfc5a396c94d3f9c7c3fa51d0245bb
#: ../../ref/contrib/gis/db-api.txt:190
msgid ""
"For example, let's say we have a ``SouthTexasCity`` model (from the "
"`GeoDjango distance tests`__ ) on a *projected* coordinate system valid for "
"cities in southern Texas::"
msgstr ""

# 3ddb81ba562a4eb8bf79a31a9f71dada
#: ../../ref/contrib/gis/db-api.txt:203
msgid "Then distance queries may be performed as follows::"
msgstr ""

# 582105d9c878415092c10ebfff1ad77c
#: ../../ref/contrib/gis/db-api.txt:222
msgid "Compatibility Tables"
msgstr ""

# 88c05ae32eca495ebf97ce0e41693c41
#: ../../ref/contrib/gis/db-api.txt:229
msgid ""
"The following table provides a summary of what spatial lookups are available "
"for each spatial database backend."
msgstr ""

# da20a2c5674141a7910184abcc5943ff
#: ../../ref/contrib/gis/db-api.txt:233
msgid "Lookup Type"
msgstr ""

# 6027198b07044578be951f16df7fb48e
# fb0b1bfaf7814393932171c80a977128
# fb52d744403a428eb4ff83b77525d1f7
# 15514d6ed02c46f2b1f9890036dc4fe6
# 6b66adc4c5ef4dd29a87a1ff5cd5fa87
# ad49c3495e254009b87be6cf0badbf40
# 8b179a4b0a8b4c32af23438139af8de1
# ad822c3d6cda4f35b35ed7d4d3288273
# 9ffd87e0c23b488a9a7f5612d3dd13f2
# f39a5bc939c543fca8e6334f93b198e9
# dc61ed2a66124c3f93275c729c405fce
# e65a57ae2d9645d5b20342deb0a39812
# 60e3e6f3b1314488b9c066ab2b39a5b7
# 7ea07f4ed80c4be6ad653d666efb5ede
# 2a26b3b803744aba8769e448ec4c6f60
# 604c32d411b64d02971543b1f06b1078
# 90fe015d9ea74bf085c5b28ed115f9a7
# 562254adb7be413f8c26a96299db63e8
# 5bd9864cc6074617938cca98f167eecf
# e4bdcb0364444d5a9e8fbc408eac59e1
# 6d1faf28beda486485bcb2b37e4d00e5
#: ../../ref/contrib/gis/db-api.txt:233 ../../ref/contrib/gis/db-api.txt:276
#: ../../ref/contrib/gis/geoquerysets.txt:44
#: ../../ref/contrib/gis/geoquerysets.txt:66
#: ../../ref/contrib/gis/geoquerysets.txt:88
#: ../../ref/contrib/gis/geoquerysets.txt:109
#: ../../ref/contrib/gis/geoquerysets.txt:136
#: ../../ref/contrib/gis/geoquerysets.txt:156
#: ../../ref/contrib/gis/geoquerysets.txt:177
#: ../../ref/contrib/gis/geoquerysets.txt:197
#: ../../ref/contrib/gis/geoquerysets.txt:217
#: ../../ref/contrib/gis/geoquerysets.txt:252
#: ../../ref/contrib/gis/geoquerysets.txt:333
#: ../../ref/contrib/gis/geoquerysets.txt:355
#: ../../ref/contrib/gis/geoquerysets.txt:546
#: ../../ref/contrib/gis/geoquerysets.txt:566
#: ../../ref/contrib/gis/geoquerysets.txt:586
#: ../../ref/contrib/gis/geoquerysets.txt:606
#: ../../ref/contrib/gis/geoquerysets.txt:626
#: ../../ref/contrib/gis/install/index.txt:448
#: ../../ref/contrib/gis/testing.txt:11
msgid "PostGIS"
msgstr ""

# 0314e865f57c469a8dcd28def44d93cf
# a696676b58954608a794662bb0f45c01
# 47c2ca8739934400844c534221d34c2d
# a81a30bbc167455a8e283c5e0d5cd414
# 849beecd73314d1caa00977ee36bc522
# 676c33693a2046d2953c6c9a5fc9abbb
# e0e2aa59af3d4abf9547b8f8fce18b48
# 5c04c895c286494ca59d1ed906fb6dd0
# d6c16763d0c94a218db6e46c0c6ee301
# d5da1c95b2344affb69ebda7328d293a
# c454fdb1543b4c138612a5b53ba52ba1
# f568bd4f5c0a49428e8c9fb44ef8cfe2
# 9a0be2d8075747d59ba8cfdf61cf7f68
# 6bfd5efa15d240f0a7773e2c94fd21af
# cc84a2a0fe1b4e4da89769d5c3a8d22f
# 867125cc0c9b43f69f4bbc4fc777e987
#: ../../ref/contrib/gis/db-api.txt:233 ../../ref/contrib/gis/db-api.txt:276
#: ../../ref/contrib/gis/geoquerysets.txt:110
#: ../../ref/contrib/gis/geoquerysets.txt:157
#: ../../ref/contrib/gis/geoquerysets.txt:178
#: ../../ref/contrib/gis/geoquerysets.txt:218
#: ../../ref/contrib/gis/geoquerysets.txt:253
#: ../../ref/contrib/gis/geoquerysets.txt:300
#: ../../ref/contrib/gis/geoquerysets.txt:335
#: ../../ref/contrib/gis/geoquerysets.txt:357
#: ../../ref/contrib/gis/geoquerysets.txt:547
#: ../../ref/contrib/gis/geoquerysets.txt:567
#: ../../ref/contrib/gis/geoquerysets.txt:587
#: ../../ref/contrib/gis/geoquerysets.txt:607
#: ../../ref/contrib/gis/geoquerysets.txt:627
#: ../../ref/contrib/gis/install/index.txt:66
msgid "Oracle"
msgstr ""

# eaa5d743f4034eb9bf4e59c40b5f1cc9
#: ../../ref/contrib/gis/db-api.txt:233
msgid "MySQL [#]_"
msgstr ""

# 4796920d339f49d3a373db3b590711db
# 9afc9c634dd64fa9ac67d6fe573d062e
# 200d759eb7de417fb86c91738b129dfd
# e9df47d5ea9d4f5a9e63fd6a398f23df
# b8029d6755524b73986395b8cfff00d3
# 0c01a68fded047fda618cb505b167545
# 01bf60b329b546f7aa0a88ffd83bbaf9
# a19b609ffba2430d943e75f2e2ca56d9
# ddc59df27af449589363149c02ede42b
# 5dddbcfdd9c24d8f8839ac0d67cba23c
# 4ff4238f0bb4475b90400a3192adbbab
# a94749b31cb34736bb84b359f4190cda
# d51513db17264c148b23cff9961eb937
# b15d75723df94939999cf53feb448d42
# 1e43a72180eb4e00b19f0cd331c4c1f7
# 76bf7fb6740142aca909e2f03c3b6d89
#: ../../ref/contrib/gis/db-api.txt:233 ../../ref/contrib/gis/db-api.txt:276
#: ../../ref/contrib/gis/geoquerysets.txt:46
#: ../../ref/contrib/gis/geoquerysets.txt:68
#: ../../ref/contrib/gis/geoquerysets.txt:90
#: ../../ref/contrib/gis/geoquerysets.txt:112
#: ../../ref/contrib/gis/geoquerysets.txt:198
#: ../../ref/contrib/gis/geoquerysets.txt:220
#: ../../ref/contrib/gis/geoquerysets.txt:255
#: ../../ref/contrib/gis/geoquerysets.txt:336
#: ../../ref/contrib/gis/geoquerysets.txt:358
#: ../../ref/contrib/gis/geoquerysets.txt:548
#: ../../ref/contrib/gis/geoquerysets.txt:568
#: ../../ref/contrib/gis/geoquerysets.txt:588
#: ../../ref/contrib/gis/geoquerysets.txt:608
#: ../../ref/contrib/gis/testing.txt:107
msgid "SpatiaLite"
msgstr ""

# 715ddecc7e8341e9ab5964ccd99a5b4d
#: ../../ref/contrib/gis/db-api.txt:235
msgid ":lookup:`bbcontains`"
msgstr ""

# 28883e1d7c914b078425d8a2c4217f8c
# 16c91f82cf4b4fc9a8241fae69b6081f
# 6d6b16664659475da8182b75a7608c75
# 1a1b65cad1464ad1ab2f0b843ed6741d
# 4cb660fd5081453b8551bb2c8c2acd35
# 89207ccaf37e43ce87a045f37ecc1594
# 61a6c456f6e64830a40b4f1fe4dcbb3a
# b58b8c39e5ee493aa9db158dab784729
# c6fb9a14305047259946aaecb800c60e
# 29de748376c24ce79afc3fbcc7417a21
# 4061ad72b8dd4a59a4c45c19294a6b7b
# 1bc4f2b895884d4d88ee65b2616ef8d6
# 45e6dab45d634cfa9dbb11d63d72e858
# 4a726459faf744ffb218ff34bd7b8693
# 5b5a895680b24f419c3d08c7146c6735
# 1b6003f2612e4323bd2831be1306362b
# 7409b6f1d2974038b6d57b3278777bc8
# f59f4c0006b14db8ad3ee8b864a9b52c
# d622cd220ccc4ea289457220f3c0eb90
# 1caf91eeb0a94dc6b1b1b0d9baa7ca26
# eb9e95b95a534fa4acd9359b120107ec
# cc872a006d1941808f5d3a971da75399
# 0eb896d1b45f4f28b14f2b4b53270903
# 09a086359c884964a75af04a41e792cc
# e0a9c8a02eef4b65bd0a3321274eb6f0
# c510f93af014459a8b96b19394eef44e
# ee0194f8ee164bf28dc3db89ded6a18b
# 1f4b575ca6d045c9b393bbb80b74325e
# aa0b79d48d364587a95a378fa7468cc6
# ee34c9cd5a1f4893b0709bcfaf42b4d3
# 021c6358d21342a788fbd54e45a2058a
# 6a3938d57b424e58a63c9bd89c2bdf67
# 6791ce6697144fe0bc7c565dca759850
# 1eccdcb6ca1140f281e8bb2d2e5338a2
# 5aca826860604795a2e0da144d577194
# 2eecdc2cc85a4ae8bb750dfe8d198f5e
# f62d4ba8a1194a99b1accb07026cc05c
# f7e2059e61f54ae8960ed4264228ec0c
# 8c826d200af6497399d42004c499dd11
# 700f7a148b184d758f86e95bcbf9f611
# 955a9c09655e46e4a1b833bc8a4e3276
# 079b2d4ffd3f4b45aae3b10ff4d87d3c
# 42126b30aff84980a56817d6337c1be2
# 063c919e1e3f4751b9ab5f91c77dc26e
# a7d0136fe4b34bed85ecbeb0855f148b
# 84ebcbd2a5fa4d03bb28614e93be05a6
# 49285bf7e5ca48388bde74ff4c1509ef
# 5b66bcfcc1884e8ea7f400bc47fefc1b
# 374952f19b604a63aa21fc058bfffd91
# e9b28c0d869c4deb9d22f398dc3a7d6a
# 79f1a5ead40642f9bb27e83f50083960
# 43ff0a907d1c4309823b4c736269df52
# a9fc8eea2e0643a7a9802b032b8cebe4
# eb04f16d14474aa88e7c5ba90592b062
# 84dc4e2bf9d24602a886ad2c376cc908
# 12e11e3319434b6085463351336f7c1f
# d746d7084081490a92389d1517c362b3
# 4d6b157b60e849c4a4d68ecb4f81f9e1
# a8d2b367b00740aaba5542a4ba2fe694
# 8614737977c247b48a4dc5822f9acc7e
# e747c9166f3245f4a05b46aa102dce2b
# bcaf714cb04e44f48220e67cfc102c17
# 08ba8b20066f42db825535bda754ad9e
# aa23fd08ffad4a2984312605a9af6e7a
# 2bae551b6f174efd91271c154f5fb9c6
# ca4a1d80e84a4fa99d48cb7f6cbc13c5
# 3eadab6161244b7baaf66ddcf616489f
# 01c184a961294920b482bc3b8583ce1e
# fd1e13ab5f004a85a16004e9673b3acf
# 964d4e855286408b813c26fe760482e7
# c3279811ef7d4b72af8cd8a85cc9ffb4
# 6d48c8446f094ce2a062568c682d1338
# 14288256c6a3441cb44c8f0ecf2cff9f
# a838e7d7b6b24657a00807d173e0e6b6
# c8a7bd6ff34c4f8abd34b924ee8661be
# fa7036c994e4490baa5aaf9b417be468
# 710e415c6e1648b7a8b9c5151956fb04
# 52c272456a814af5a0fac5fa4e4d14d7
# 89b919871bca42bda2e705b0080bd1f2
# 2033589b6f0b422194b1d5492846568d
# c4b4e7bb95b64b62a920fe364bb01c4a
# 794adbf93c944972b2ea2c343df8112c
# 633667a910b149a89e1b12232df7dffc
# c9da6a4a2f7b43a59edb0aeb5a8d1839
# a4eda36cd264475599ccaee1a6fc7650
# 31c034bae95d4c8abddd1edc2614ea52
# d5393a72e792441090f2d7c0005840dc
# 8cc8fc84e35a4b40b58aaa7764285c34
# ee3c7d4b2f8c4d12870c244adfab7077
# 2e9dffc0e66740feaa0cb4e178ce3083
# 33fe4f04f82247819169513f7c632e2f
# 41add477756f4561bd7d7b1a561980c2
# 4ad5d884abee459c889cd065a5aad015
# 5db7bd82fa104cb79df8e62d16d247f2
# c8d5215bacfa44d98c17ac0e66dc7cc7
# c25b12f9187f442685cf2ba314e6f8ce
# 42ad016fb29a41eea936eaa1c5b7ec80
# 5599256f1c3249bead49d9282b517c1e
# 320c8a3f1ca54cd199bebf1c9c6067ba
# 5500896abce34716b14f646bd752292f
# b738664a9af347529e3da3ce72fba28b
# 815d4be107404084b61765982912322b
# 4565617b4c1f41cdb401e980c326d916
# c496591dd57b46cfa7cf5ec8aa331960
# efe29519855a4bc49b1c6cd751f7024f
# 73a0339ab1534397876635c84a5fad7d
# e8a77fd4e83c4288afdfa0c8eebd9db6
# 5e4762499aad48d99747489de1a00aea
# 7254432b3ffd4904a1be0cbd9aaaeed0
# a7eebe3f9bc04344b71fb5c61eaa12f4
# b80842072f8c46b7bb4ac4550318db48
# 14800b637aa941b39fea762aea38f881
# a8d0a138bf8c468da14467a4ade6387e
# 33a82dfc703d4221a1f032a65b81ea72
# 2f596f3b3eaf4d2095b0e50753a8def1
# 44e95a6683af41e1b99a72186d4b1046
# 50619401b0954fcbacb2174190dbd7f1
# 5c24f8a2cfee454ca8bff8ea06f06d66
# 978b0a016a2149d9b9031f38bc6db1b5
# 8eade0791d704b0587811a5ca9a04e3b
# c729d806bdbf4fcd9f6a0a0a9fcbe128
# 23c82005001f4c47ab24bb0ab900f50e
# 60f284ba2a954c45bb90610276fec826
# aa31b3911c104578983dd796c4bad826
# 24001a866e0f4cceab79f3a66af6a678
# 56b513c82e4c44239eb85b4a0bcd1d52
# d50410396b23446b8861b6969ef43f5b
# 303264719793404fb398fe14b38497e5
# 5f33ef3a540940669d6cafb3a7699590
# 038817dee7da47b6b4204f79a189c627
# d6e24d016ab1494e9781913e4a11bf47
# d1dd2e3dd9a34d419670a7dcee0a0bb3
# 6b8d0f9055684b7f9d9b091542ce5775
# bd4195a73f2c49fea5302e54714714b9
# 053ae6f245b54e9abde2880946f0343f
# b0cf936e350c49a2b70cef25e5ba695a
# 8743a67428ef4687bca6c7e94252a748
# e5e55d4148fc4da99ae3b961d5bf8425
# 456a243b26f94295962586ec5d40417e
# 0eaa7b3504524c43b47141db04292c94
# 0c79fee4b2db487fb7edf4a2312af84c
# d15443e683994de8872b89577ac31cb4
# 9109bedeed0044229428978f3c983137
# 9f07260ffa1c46099913a9884bf558e0
#: ../../ref/contrib/gis/db-api.txt:235 ../../ref/contrib/gis/db-api.txt:236
#: ../../ref/contrib/gis/db-api.txt:237 ../../ref/contrib/gis/db-api.txt:238
#: ../../ref/contrib/gis/db-api.txt:239 ../../ref/contrib/gis/db-api.txt:240
#: ../../ref/contrib/gis/db-api.txt:241 ../../ref/contrib/gis/db-api.txt:242
#: ../../ref/contrib/gis/db-api.txt:243 ../../ref/contrib/gis/db-api.txt:244
#: ../../ref/contrib/gis/db-api.txt:245 ../../ref/contrib/gis/db-api.txt:246
#: ../../ref/contrib/gis/db-api.txt:247 ../../ref/contrib/gis/db-api.txt:248
#: ../../ref/contrib/gis/db-api.txt:249 ../../ref/contrib/gis/db-api.txt:250
#: ../../ref/contrib/gis/db-api.txt:251 ../../ref/contrib/gis/db-api.txt:252
#: ../../ref/contrib/gis/db-api.txt:253 ../../ref/contrib/gis/db-api.txt:254
#: ../../ref/contrib/gis/db-api.txt:255 ../../ref/contrib/gis/db-api.txt:256
#: ../../ref/contrib/gis/db-api.txt:257 ../../ref/contrib/gis/db-api.txt:258
#: ../../ref/contrib/gis/db-api.txt:259 ../../ref/contrib/gis/db-api.txt:260
#: ../../ref/contrib/gis/db-api.txt:261 ../../ref/contrib/gis/db-api.txt:262
#: ../../ref/contrib/gis/db-api.txt:263 ../../ref/contrib/gis/db-api.txt:264
#: ../../ref/contrib/gis/db-api.txt:278 ../../ref/contrib/gis/db-api.txt:279
#: ../../ref/contrib/gis/db-api.txt:280 ../../ref/contrib/gis/db-api.txt:281
#: ../../ref/contrib/gis/db-api.txt:282 ../../ref/contrib/gis/db-api.txt:283
#: ../../ref/contrib/gis/db-api.txt:284 ../../ref/contrib/gis/db-api.txt:285
#: ../../ref/contrib/gis/db-api.txt:286 ../../ref/contrib/gis/db-api.txt:287
#: ../../ref/contrib/gis/db-api.txt:288 ../../ref/contrib/gis/db-api.txt:289
#: ../../ref/contrib/gis/db-api.txt:290 ../../ref/contrib/gis/db-api.txt:291
#: ../../ref/contrib/gis/db-api.txt:292 ../../ref/contrib/gis/db-api.txt:293
#: ../../ref/contrib/gis/db-api.txt:294 ../../ref/contrib/gis/db-api.txt:295
#: ../../ref/contrib/gis/db-api.txt:296 ../../ref/contrib/gis/db-api.txt:297
#: ../../ref/contrib/gis/db-api.txt:298 ../../ref/contrib/gis/db-api.txt:299
#: ../../ref/contrib/gis/db-api.txt:300 ../../ref/contrib/gis/db-api.txt:301
#: ../../ref/contrib/gis/db-api.txt:302 ../../ref/contrib/gis/db-api.txt:303
#: ../../ref/contrib/gis/db-api.txt:304 ../../ref/contrib/gis/db-api.txt:305
#: ../../ref/contrib/gis/db-api.txt:306 ../../ref/contrib/gis/db-api.txt:307
msgid "X"
msgstr ""

# 5e0f5849f9f14d80b29567b942e69e38
# c663b1358ce243269b782b9332b767c4
#: ../../ref/contrib/gis/db-api.txt:236
#: ../../ref/contrib/gis/model-api.txt:214
msgid ":lookup:`bboverlaps`"
msgstr ""

# 4df2ef248115469e92e342f346bf649d
#: ../../ref/contrib/gis/db-api.txt:237
msgid ":lookup:`contained`"
msgstr ""

# 1a899e764cbe49b0be4c3596f5383134
#: ../../ref/contrib/gis/db-api.txt:238
msgid ":lookup:`contains <gis-contains>`"
msgstr ""

# 2def8f5dc5394e4aa876be2fdb2fdaa0
#: ../../ref/contrib/gis/db-api.txt:239
msgid ":lookup:`contains_properly`"
msgstr ""

# c8ed438bdcf94d50a34fc13540e51a55
# 74cf276fa89a4eb185bfd4921df2072e
#: ../../ref/contrib/gis/db-api.txt:240
#: ../../ref/contrib/gis/model-api.txt:215
msgid ":lookup:`coveredby`"
msgstr ""

# 14ab49eb56804ea0a19bf62758257812
# aaa05a84a3f34c1abead9549a8cf4348
#: ../../ref/contrib/gis/db-api.txt:241
#: ../../ref/contrib/gis/model-api.txt:216
msgid ":lookup:`covers`"
msgstr ""

# addb398504f740fd9ca5f39b06d771b8
#: ../../ref/contrib/gis/db-api.txt:242
msgid ":lookup:`crosses`"
msgstr ""

# 6f743677409746958f834999af07b8b6
#: ../../ref/contrib/gis/db-api.txt:243
msgid ":lookup:`disjoint`"
msgstr ""

# 195e444252f748bd9fd8885cf9926bd9
#: ../../ref/contrib/gis/db-api.txt:249
msgid ":lookup:`equals`"
msgstr ""

# 36c6bf0f996a47039c80fd7d60ec8568
#: ../../ref/contrib/gis/db-api.txt:250
msgid ":lookup:`exact`"
msgstr ""

# 4f52b67d97cc44a9b46255655a2eed6c
# 135c9012e57b49ada5b6399acc6f524d
#: ../../ref/contrib/gis/db-api.txt:251
#: ../../ref/contrib/gis/model-api.txt:217
msgid ":lookup:`intersects`"
msgstr ""

# 5a5ef88916ea4d15b3ad6f5e7a8d0672
#: ../../ref/contrib/gis/db-api.txt:252
msgid ":lookup:`overlaps`"
msgstr ""

# 8ba518b4449948469a7fbfe1c832e6e8
#: ../../ref/contrib/gis/db-api.txt:253
msgid ":lookup:`relate`"
msgstr ""

# 8c8bdb65c0b842f8b64b7fe2ee8c6dc6
#: ../../ref/contrib/gis/db-api.txt:254
msgid ":lookup:`same_as`"
msgstr ""

# 00205b0637a24ed7a224326f1cca2284
#: ../../ref/contrib/gis/db-api.txt:255
msgid ":lookup:`touches`"
msgstr ""

# 0cd6b50960c84528804987a99b9b081b
#: ../../ref/contrib/gis/db-api.txt:256
msgid ":lookup:`within`"
msgstr ""

# f5563571c7e34e4aa23f9a0303ae31f7
#: ../../ref/contrib/gis/db-api.txt:257
msgid ":lookup:`left`"
msgstr ""

# c08837b76b1846c5b0dc7e018db6000b
#: ../../ref/contrib/gis/db-api.txt:258
msgid ":lookup:`right`"
msgstr ""

# efdcb56f1a924b5a8da8fa0b0121ca74
#: ../../ref/contrib/gis/db-api.txt:259
msgid ":lookup:`overlaps_left`"
msgstr ""

# c2f458acdf3740c8baa221fb06ee3b61
#: ../../ref/contrib/gis/db-api.txt:260
msgid ":lookup:`overlaps_right`"
msgstr ""

# fd824a939b69490d8f0e853a4cd920a8
#: ../../ref/contrib/gis/db-api.txt:261
msgid ":lookup:`overlaps_above`"
msgstr ""

# 3296a42a3f244f8bbcacad69a0a65834
#: ../../ref/contrib/gis/db-api.txt:262
msgid ":lookup:`overlaps_below`"
msgstr ""

# 94d2c1bcdd054b8ca0e6ff9b81808ecb
#: ../../ref/contrib/gis/db-api.txt:263
msgid ":lookup:`strictly_above`"
msgstr ""

# 7835ff1d42014d47ae8c3a82fe51d791
#: ../../ref/contrib/gis/db-api.txt:264
msgid ":lookup:`strictly_below`"
msgstr ""

# 196d5cfe7abb47fa88f2d1bdfeb69f75
# dfa704a8968044aca9f9d8ccb8a2d8ef
# 5df8dbed04a34d12ac1635413a98ca7d
#: ../../ref/contrib/gis/db-api.txt:270
#: ../../ref/contrib/gis/geoquerysets.txt:638
#: ../../ref/contrib/gis/tutorial.txt:702
msgid "``GeoQuerySet`` Methods"
msgstr ""

# 3e8d2e840e6647b0b8367423e206c5f2
#: ../../ref/contrib/gis/db-api.txt:271
msgid ""
"The following table provides a summary of what :class:`GeoQuerySet` methods "
"are available on each spatial backend.  Please note that MySQL does not "
"support any of these methods, and is thus excluded from the table."
msgstr ""

# 2918e3f50b204d5686948d03b3ceb865
#: ../../ref/contrib/gis/db-api.txt:276
msgid "Method"
msgstr ""

# f11bfff4bb964f63be944f611c83381b
#: ../../ref/contrib/gis/db-api.txt:278
msgid ":meth:`GeoQuerySet.area`"
msgstr ""

# fd42636aae9446648f4b6021fccd5a46
#: ../../ref/contrib/gis/db-api.txt:279
msgid ":meth:`GeoQuerySet.centroid`"
msgstr ""

# 880b0153a8894c2aa2d5d9bab0241f5b
#: ../../ref/contrib/gis/db-api.txt:280
msgid ":meth:`GeoQuerySet.collect`"
msgstr ""

# 9e510e4f4982437687f088b071b2bf55
#: ../../ref/contrib/gis/db-api.txt:281
msgid ":meth:`GeoQuerySet.difference`"
msgstr ""

# 2324a94707c44284b2c2df76043b0d59
#: ../../ref/contrib/gis/db-api.txt:282
msgid ":meth:`GeoQuerySet.distance`"
msgstr ""

# ed65ead95da6453197d93c0212d6ff42
#: ../../ref/contrib/gis/db-api.txt:283
msgid ":meth:`GeoQuerySet.envelope`"
msgstr ""

# 5de35ec9d68d4b8cb1486b5908eb3340
#: ../../ref/contrib/gis/db-api.txt:284
msgid ":meth:`GeoQuerySet.extent`"
msgstr ""

# 0130994acca54b3bab304eddbc98374b
#: ../../ref/contrib/gis/db-api.txt:285
msgid ":meth:`GeoQuerySet.extent3d`"
msgstr ""

# 2b7b0cfe7e054db098c2e2bdb1ac7392
#: ../../ref/contrib/gis/db-api.txt:286
msgid ":meth:`GeoQuerySet.force_rhr`"
msgstr ""

# 6d36dfdccaf74979a9fa0fd8f2864386
#: ../../ref/contrib/gis/db-api.txt:287
msgid ":meth:`GeoQuerySet.geohash`"
msgstr ""

# af80aad307084c87b6c64d6471b37479
#: ../../ref/contrib/gis/db-api.txt:288
msgid ":meth:`GeoQuerySet.geojson`"
msgstr ""

# bb098c5ffbf048b7985009db095b616f
#: ../../ref/contrib/gis/db-api.txt:289
msgid ":meth:`GeoQuerySet.gml`"
msgstr ""

# 19e599b0f1bd4c798a35db1c66dd1e9f
#: ../../ref/contrib/gis/db-api.txt:290
msgid ":meth:`GeoQuerySet.intersection`"
msgstr ""

# d60ab99df68747b19b4603e9a7c8c16d
#: ../../ref/contrib/gis/db-api.txt:291
msgid ":meth:`GeoQuerySet.kml`"
msgstr ""

# 082bfd2177314405b0ebf7197bff4648
#: ../../ref/contrib/gis/db-api.txt:292
msgid ":meth:`GeoQuerySet.length`"
msgstr ""

# 3ef0d58d26014832bbda881b61994cae
#: ../../ref/contrib/gis/db-api.txt:293
msgid ":meth:`GeoQuerySet.make_line`"
msgstr ""

# 57f7140702984d67a20cfe6fe9647ea8
#: ../../ref/contrib/gis/db-api.txt:294
msgid ":meth:`GeoQuerySet.mem_size`"
msgstr ""

# 3399da3781634abaadcf5ae67de291f4
#: ../../ref/contrib/gis/db-api.txt:295
msgid ":meth:`GeoQuerySet.num_geom`"
msgstr ""

# 6f03557d415643e49b8eba7626cabc1d
#: ../../ref/contrib/gis/db-api.txt:296
msgid ":meth:`GeoQuerySet.num_points`"
msgstr ""

# 5685df1274734055b41c13e6d45ad4f1
#: ../../ref/contrib/gis/db-api.txt:297
msgid ":meth:`GeoQuerySet.perimeter`"
msgstr ""

# b4d2a82341184d97b0d6a8a36a605956
#: ../../ref/contrib/gis/db-api.txt:298
msgid ":meth:`GeoQuerySet.point_on_surface`"
msgstr ""

# 415cd3fe6ae346b792fcbeb7147ea6de
#: ../../ref/contrib/gis/db-api.txt:299
msgid ":meth:`GeoQuerySet.reverse_geom`"
msgstr ""

# 0a8272370f08481793b7a634114ee2f9
#: ../../ref/contrib/gis/db-api.txt:300
msgid ":meth:`GeoQuerySet.scale`"
msgstr ""

# 4d5335f4f2294c3e87ab83a16a7fa16a
#: ../../ref/contrib/gis/db-api.txt:301
msgid ":meth:`GeoQuerySet.snap_to_grid`"
msgstr ""

# 71ac768ecce44257894077f29a1b83a3
#: ../../ref/contrib/gis/db-api.txt:302
msgid ":meth:`GeoQuerySet.svg`"
msgstr ""

# 78409b22e7e5493a860341280bc942e6
#: ../../ref/contrib/gis/db-api.txt:303
msgid ":meth:`GeoQuerySet.sym_difference`"
msgstr ""

# e1d0ad20453c461fb9a064eb564465ed
#: ../../ref/contrib/gis/db-api.txt:304
msgid ":meth:`GeoQuerySet.transform`"
msgstr ""

# 67c58ec3c3e04519a8a272fbd20ba89c
#: ../../ref/contrib/gis/db-api.txt:305
msgid ":meth:`GeoQuerySet.translate`"
msgstr ""

# cfde1931fa2648be8cf907196687a36d
#: ../../ref/contrib/gis/db-api.txt:306
msgid ":meth:`GeoQuerySet.union`"
msgstr ""

# 6b2e394bcf2848569d2a195202279744
#: ../../ref/contrib/gis/db-api.txt:307
msgid ":meth:`GeoQuerySet.unionagg`"
msgstr ""

# 0b4f1db35f29485b8e877c7eab21e1a0
# 34781bbdc91647d79ea1acf9ff87bf5c
# 6a099d340fca4e669e4f3e77057e2541
# c1129e3e2cd74005b4b666a15a786828
# 1b40571f18cd41a08a4ffdd408eaa382
# a101549e21564aea9aac42c7e712263e
# 63147f2ca91f468bae2ec11caab1024b
# d64f8ed6f4184f12a0ebf21b8ea2dfb1
# 55629c3cf72e4f638cecc48fa2d321d2
# 5fc9e6e73dd74bdd892dce118b2b7441
#: ../../ref/contrib/gis/db-api.txt:310 ../../ref/contrib/gis/geoip.txt:227
#: ../../ref/contrib/gis/geoquerysets.txt:1236
#: ../../ref/contrib/gis/geos.txt:948
#: ../../ref/contrib/gis/install/geolibs.txt:271
#: ../../ref/contrib/gis/install/index.txt:531
#: ../../ref/contrib/gis/measure.txt:177
#: ../../ref/contrib/gis/model-api.txt:254
#: ../../ref/contrib/gis/sitemaps.txt:25
#: ../../ref/contrib/gis/tutorial.txt:780
msgid "Footnotes"
msgstr ""

# 6852cc2f250340c0978d17842565b379
#: ../../ref/contrib/gis/db-api.txt:311
msgid ""
"*See* Open Geospatial Consortium, Inc., `OpenGIS Simple Feature "
"Specification For SQL <http://www.opengis.org/docs/99-049.pdf>`_, Document "
"99-049 (May 5, 1999), at  Ch. 3.2.5, p. 3-11 (SQL Textual Representation of "
"Geometry)."
msgstr ""

# 9dbba9aca23a463cbbf641c0daf8009c
#: ../../ref/contrib/gis/db-api.txt:312
msgid ""
"*See* `PostGIS EWKB, EWKT and Canonical Forms <http://postgis.refractions."
"net/documentation/manual-1.5/ch04.html#EWKB_EWKT>`_, PostGIS documentation "
"at Ch. 4.1.2."
msgstr ""

# a22bc9e9d78c43d3ba1343491ca176c3
#: ../../ref/contrib/gis/db-api.txt:313
msgid ""
"*See* Howard Butler, Martin Daly, Allan Doyle, Tim Schaub, & Christopher "
"Schmidt, `The GeoJSON Format Specification <http://geojson.org/geojson-spec."
"html>`_, Revision 1.0 (June 16, 2008)."
msgstr ""

# 5a71d93335184b0980899b11b1c08e9c
#: ../../ref/contrib/gis/db-api.txt:314
msgid ""
"*See* `PostGIS 1.4 documentation <http://postgis.refractions.net/"
"documentation/manual-1.4/ST_Distance_Sphere.html>`_ on "
"``ST_distance_sphere``."
msgstr ""

# 872af8f56e9247a0be35f296e1a9ce79
#: ../../ref/contrib/gis/db-api.txt:315
msgid ""
"*See* `PostGIS 1.5 documentation <http://postgis.refractions.net/"
"documentation/manual-1.5/ST_Distance_Sphere.html>`_ on "
"``ST_distance_sphere``."
msgstr ""

# 50a2db534a994279bcae71f435779858
#: ../../ref/contrib/gis/db-api.txt:316
msgid ""
"*See* `Creating Spatial Indexes <http://dev.mysql.com/doc/refman/5.1/en/"
"creating-spatial-indexes.html>`_ in the MySQL 5.1 Reference Manual:"
msgstr ""

# 007bad05b0684c32892d8c456e146c8a
#: ../../ref/contrib/gis/db-api.txt:319
msgid ""
"For MyISAM tables, ``SPATIAL INDEX`` creates an R-tree index. For storage "
"engines that support nonspatial indexing of spatial columns, the engine "
"creates a B-tree index. A B-tree index on spatial values will be useful for "
"exact-value lookups, but not for range scans."
msgstr ""

# dcf638d9cabc4ff39d05e0893646fcf4
#: ../../ref/contrib/gis/db-api.txt:324
msgid "Refer :ref:`mysql-spatial-limitations` section for more details."
msgstr ""

# 493e83103f8249b699862a1979cd7131
#: ../../ref/contrib/gis/deployment.txt:3
msgid "Deploying GeoDjango"
msgstr ""

# 1898772e61684e52b78d823ee80c754c
#: ../../ref/contrib/gis/deployment.txt:5
msgid ""
"Basically, the deployment of a GeoDjango application is not different from "
"the deployment of a normal Django application. Please consult Django's :doc:"
"`deployment documentation </howto/deployment/index>`."
msgstr ""

# cd04d3ad39ea450bb2af51157b101292
#: ../../ref/contrib/gis/deployment.txt:11
msgid ""
"GeoDjango uses the GDAL geospatial library which is not thread safe at this "
"time.  Thus, it is *highly* recommended to not use threading when deploying "
"-- in other words, use an appropriate configuration of Apache or the prefork "
"method when using FastCGI through another Web server."
msgstr ""

# 7878f6d1b4194d0ba3690aa554978ec9
#: ../../ref/contrib/gis/deployment.txt:17
msgid ""
"For example, when configuring your application with ``mod_wsgi``, set the "
"``WSGIDaemonProcess`` attribute ``threads`` to ``1``, unless Apache may "
"crash when running your GeoDjango application.  Increase the number of "
"``processes`` instead."
msgstr ""

# 239b3f7e6de44cf29448dba03fa92601
#: ../../ref/contrib/gis/feeds.txt:3
msgid "Geographic Feeds"
msgstr ""

# 62c7f395cb684c219afa0dccdf482442
#: ../../ref/contrib/gis/feeds.txt:8
msgid ""
"GeoDjango has its own :class:`Feed` subclass that may embed location "
"information in RSS/Atom feeds formatted according to either the `Simple "
"GeoRSS`__ or `W3C Geo`_ standards.  Because GeoDjango's syndication API is a "
"superset of Django's, please consult :doc:`Django's syndication "
"documentation </ref/contrib/syndication>` for details on general usage."
msgstr ""

# 9d767c1549ac4a1686807913b90a9203
# 003922ab8e6e46e4be7796daa07461b9
# e5cddcfa0bb844aa8a292a6f6f4422c2
# bab8e95e84e747e9bc36ac7ecc420052
# 8d58be05fe854370bcd7e97c5c92306f
# 10733956e11c4408a9ccfebd76067a28
# 60ef265bc5ef44ecaae2258fc3df4449
# 3c7ad34cf50b41198e5856ba1f899f84
#: ../../ref/contrib/gis/feeds.txt:19 ../../ref/contrib/gis/geoip.txt:36
#: ../../ref/contrib/gis/layermapping.txt:34
#: ../../ref/contrib/gis/measure.txt:17 ../../ref/contrib/gis/sitemaps.txt:11
#: ../../ref/contrib/gis/testing.txt:152 ../../ref/contrib/gis/testing.txt:187
#: ../../ref/contrib/sitemaps.txt:257
msgid "Example"
msgstr ""

# 116fbb5c75714315b571a2cde2bc44e3
# 1770ab4d785641519f7fc88e50559eb3
#: ../../ref/contrib/gis/feeds.txt:22 ../../ref/index.txt:3
msgid "API Reference"
msgstr ""

# 01fd01b0a385479dae4c3139cadb3252
#: ../../ref/contrib/gis/feeds.txt:25
msgid "``Feed`` Subclass"
msgstr ""

# 15b4658b341f46b089947a7f78fc2ba7
#: ../../ref/contrib/gis/feeds.txt:29
msgid ""
"In addition to methods provided by the :class:`django.contrib.syndication."
"views.Feed` base class, GeoDjango's ``Feed`` class provides the following "
"overrides.  Note that these overrides may be done in multiple ways::"
msgstr ""

# 7666c85ce4b94fbdba4d45d11711d20b
#: ../../ref/contrib/gis/feeds.txt:58
msgid ""
"Takes the object returned by ``get_object()`` and returns the *feed's* "
"geometry.  Typically this is a ``GEOSGeometry`` instance, or can be a tuple "
"to represent a point or a box.  For example::"
msgstr ""

# 3c0440594d5349be87fd2a477f10be6c
#: ../../ref/contrib/gis/feeds.txt:70
msgid ""
"Set this to return the geometry for each *item* in the feed.  This can be a "
"``GEOSGeometry`` instance, or a tuple that represents a point coordinate or "
"bounding box.  For example::"
msgstr ""

# c340a07ef9124b3eb604cfd65f87b956
#: ../../ref/contrib/gis/feeds.txt:81
msgid "``SyndicationFeed`` Subclasses"
msgstr ""

# 94ebbba0822c4b9c8a56802ba59303b0
#: ../../ref/contrib/gis/feeds.txt:83
msgid ""
"The following :class:`django.utils.feedgenerator.SyndicationFeed` subclasses "
"are available:"
msgstr ""

# 21a9a732ce2a4d2bb846098b0e0c6564
#: ../../ref/contrib/gis/feeds.txt:94
msgid ""
"`W3C Geo`_ formatted feeds only support :class:`~django.contrib.gis.db."
"models.PointField` geometries."
msgstr ""

# 8a2ca6499ac04e56adf023dd8f4e1895
#: ../../ref/contrib/gis/gdal.txt:5
msgid "GDAL API"
msgstr ""

# e8ea8860d6a246a2ae6838bb5ed34ea8
#: ../../ref/contrib/gis/gdal.txt:10
msgid ""
"`GDAL`__ stands for **G**\\ eospatial **D**\\ ata **A**\\ bstraction **L**\\ "
"ibrary, and is a veritable \"swiss army knife\" of GIS data functionality.  "
"A subset of GDAL is the `OGR`__ Simple Features Library, which specializes "
"in reading and writing vector geographic data in a variety of standard "
"formats."
msgstr ""

# a727c81d605a475f861e2f8987ac791a
#: ../../ref/contrib/gis/gdal.txt:16
msgid ""
"GeoDjango provides a high-level Python interface for some of the "
"capabilities of OGR, including the reading and coordinate transformation of "
"vector spatial data."
msgstr ""

# bb9dd29069d248b7b8b6297c0e808b43
#: ../../ref/contrib/gis/gdal.txt:22
msgid ""
"Although the module is named ``gdal``, GeoDjango only supports some of the "
"capabilities of OGR.  Thus, none of GDAL's features with respect to raster "
"(image) data are supported at this time."
msgstr ""

# 9c6608ee3b514d7c9d2e28f630d2830c
#: ../../ref/contrib/gis/gdal.txt:33
msgid "Sample Data"
msgstr ""

# b386ffd6e893490d9786caa375e025cb
#: ../../ref/contrib/gis/gdal.txt:35
msgid ""
"The GDAL/OGR tools described here are designed to help you read in your "
"geospatial data, in order for most of them to be useful you have to have "
"some data to work with.  If you're starting out and don't yet have any data "
"of your own to use, GeoDjango comes with a number of simple data sets that "
"you can use for testing.  This snippet will determine where these sample "
"files are installed on your computer::"
msgstr ""

# 2443e4fae2bc442bb4c09e0e66275edd
#: ../../ref/contrib/gis/gdal.txt:48
msgid "Vector Data Source Objects"
msgstr ""

# 3a29c0bcf7d147ea8c6875d7ab5e000d
#: ../../ref/contrib/gis/gdal.txt:51
msgid "``DataSource``"
msgstr ""

# 249ab8744dba4d028d16c98122795b7c
#: ../../ref/contrib/gis/gdal.txt:53
msgid ""
":class:`DataSource` is a wrapper for the OGR data source object that "
"supports reading data from a variety of OGR-supported geospatial file "
"formats and data sources using a simple, consistent interface.  Each data "
"source is represented by a :class:`DataSource` object which contains one or "
"more layers of data.  Each layer, represented by a :class:`Layer` object, "
"contains some number of geographic features (:class:`Feature`), information "
"about the type of features contained in that layer (e.g. points, polygons, "
"etc.), as well as the names and types of any additional fields (:class:"
"`Field`) of data that may be associated with each feature in that layer."
msgstr ""

# b6a1334df59b44d6bfdebbb3a42a6134
#: ../../ref/contrib/gis/gdal.txt:66
msgid ""
"The constructor for ``DataSource`` just a single parameter: the path of the "
"file you want to read.  However, OGR also supports a variety of more complex "
"data sources, including databases, that may be accessed by passing a special "
"name string instead of a path.  For more information, see the `OGR Vector "
"Formats`__ documentation.  The :attr:`name` property of a ``DataSource`` "
"instance gives the OGR name of the underlying data source that it is using."
msgstr ""

# c3a4645378904377b2994362661edfae
#: ../../ref/contrib/gis/gdal.txt:75
msgid ""
"Once you've created your ``DataSource``, you can find out how many layers of "
"data it contains by accessing the :attr:`layer_count` property, or "
"(equivalently) by using the ``len()`` function.  For information on "
"accessing the layers of data themselves, see the next section::"
msgstr ""

# 6d5c3b82878949c2953b80b3ca5a10f5
#: ../../ref/contrib/gis/gdal.txt:89
msgid "Returns the number of layers in the data source."
msgstr ""

# e2e3cadc457d41abb21c6a392af167bd
#: ../../ref/contrib/gis/gdal.txt:93
msgid "Returns the name of the data source."
msgstr ""

# 7d281797103244b0a27995f174dfeb54
#: ../../ref/contrib/gis/gdal.txt:98
msgid "``Layer``"
msgstr ""

# 0e30f09e2e924c7aa27e74950f1e29ce
#: ../../ref/contrib/gis/gdal.txt:102
msgid ""
"``Layer`` is a wrapper for a layer of data in a ``DataSource`` object. You "
"never create a ``Layer`` object directly.  Instead, you retrieve them from "
"a :class:`DataSource` object, which is essentially a standard Python "
"container of ``Layer`` objects.  For example, you can access a specific "
"layer by its index (e.g. ``ds[0]`` to access the first layer), or you can "
"iterate over all the layers in the container in a ``for`` loop.  The "
"``Layer`` itself acts as a container for geometric features."
msgstr ""

# aa8f82c663204699ab9158c3c9d5f775
#: ../../ref/contrib/gis/gdal.txt:111
msgid ""
"Typically, all the features in a given layer have the same geometry type. "
"The :attr:`geom_type` property of a layer is an :class:`OGRGeomType` that "
"identifies the feature type.  We can use it to print out some basic "
"information about each layer in a :class:`DataSource`::"
msgstr ""

# cf7de5c974b8413c8299a0b7bd41c807
#: ../../ref/contrib/gis/gdal.txt:121
msgid ""
"The example output is from the cities data source, loaded above, which "
"evidently contains one layer, called ``\"cities\"``, which contains three "
"point features.  For simplicity, the examples below assume that you've "
"stored that layer in the variable ``layer``::"
msgstr ""

# ab87ab94e1eb434695ace565e83d6883
#: ../../ref/contrib/gis/gdal.txt:130
msgid "Returns the name of this layer in the data source."
msgstr ""

# 15b30875473545d2b0aba84af2270f19
#: ../../ref/contrib/gis/gdal.txt:137
msgid "Returns the number of features in the layer.  Same as ``len(layer)``::"
msgstr ""

# b013f593469f43ff91f22282256419d6
#: ../../ref/contrib/gis/gdal.txt:144
msgid ""
"Returns the geometry type of the layer, as an :class:`OGRGeomType` object::"
msgstr ""

# bda1efbf62524ed397032f0bffcda970
#: ../../ref/contrib/gis/gdal.txt:152
msgid ""
"Returns the number of fields in the layer, i.e the number of fields of data "
"associated with each feature in the layer::"
msgstr ""

# 603e57e63ebe4141a156c65f54b7e150
#: ../../ref/contrib/gis/gdal.txt:160
msgid "Returns a list of the names of each of the fields in this layer::"
msgstr ""

# 7596f6cec3f34f2bb8889b9446ff5c37
#: ../../ref/contrib/gis/gdal.txt:167
msgid ""
"Returns a list of the data types of each of the fields in this layer. These "
"are subclasses of ``Field``, discussed below::"
msgstr ""

# 2c37190d94a844758241d780adf33203
#: ../../ref/contrib/gis/gdal.txt:175
msgid ""
"Returns a list of the maximum field widths for each of the fields in this "
"layer::"
msgstr ""

# ad3bde0ea972418cb23a7ded3c4388ad
#: ../../ref/contrib/gis/gdal.txt:183
msgid ""
"Returns a list of the numeric precisions for each of the fields in this "
"layer.  This is meaningless (and set to zero) for non-numeric fields::"
msgstr ""

# 630ca8f56af74a50ba68954640245f92
#: ../../ref/contrib/gis/gdal.txt:192
msgid ""
"Returns the spatial extent of this layer, as an :class:`Envelope` object::"
msgstr ""

# cc8cda0522c140e6a43e6ea4fc8ce7a2
#: ../../ref/contrib/gis/gdal.txt:200
msgid ""
"Property that returns the :class:`SpatialReference` associated with this "
"layer::"
msgstr ""

# 2bc80c3202f04b52ad2f63c23f377385
#: ../../ref/contrib/gis/gdal.txt:210
msgid ""
"If the :class:`Layer` has no spatial reference information associated with "
"it, ``None`` is returned."
msgstr ""

# f7d44d7ea94b45a4bcc33b03f5aac693
#: ../../ref/contrib/gis/gdal.txt:215
msgid ""
"Property that may be used to retrieve or set a spatial filter for this "
"layer.  A spatial filter can only be set with an :class:`OGRGeometry` "
"instance, a 4-tuple extent, or ``None``.  When set with something other than "
"``None``, only features that intersect the filter will be returned when "
"iterating over the layer::"
msgstr ""

# 982d214294af4fa68acf9221be04af79
#: ../../ref/contrib/gis/gdal.txt:239
msgid ""
"A method that returns a list of the values of a given field for each feature "
"in the layer::"
msgstr ""

# f07c8f67fee34c51a65427a7558a6142
#: ../../ref/contrib/gis/gdal.txt:247
msgid ""
"A method that returns a list containing the geometry of each feature in the "
"layer.  If the optional argument ``geos`` is set to ``True`` then the "
"geometries are converted to :class:`~django.contrib.gis.geos.GEOSGeometry` "
"objects. Otherwise, they are returned as :class:`OGRGeometry` objects::"
msgstr ""

# 4378da1885584e06bfb19f27f0363338
#: ../../ref/contrib/gis/gdal.txt:257
msgid ""
"Returns a boolean indicating whether this layer supports the given "
"capability (a string).  Examples of valid capability strings include: "
"``'RandomRead'``, ``'SequentialWrite'``, ``'RandomWrite'``, "
"``'FastSpatialFilter'``, ``'FastFeatureCount'``, ``'FastGetExtent'``, "
"``'CreateField'``, ``'Transactions'``, ``'DeleteFeature'``, and "
"``'FastSetNextByIndex'``."
msgstr ""

# 880d411ae1e547cc88476b585e266b20
#: ../../ref/contrib/gis/gdal.txt:265
msgid "``Feature``"
msgstr ""

# 5fd1caa366d04ef980f74c98f03414b6
#: ../../ref/contrib/gis/gdal.txt:270
msgid ""
"``Feature`` wraps an OGR feature.  You never create a ``Feature`` object "
"directly.  Instead, you retrieve them from a :class:`Layer` object. Each "
"feature consists of a geometry and a set of fields containing additional "
"properties.  The geometry of a field is accessible via its ``geom`` "
"property, which returns an :class:`OGRGeometry` object.  A ``Feature`` "
"behaves like a standard Python container for its fields, which it returns "
"as :class:`Field` objects: you can access a field directly by its index or "
"name, or you can iterate over a feature's fields, e.g. in a ``for`` loop."
msgstr ""

# cf576ab776644cf3991a76a3e223680d
#: ../../ref/contrib/gis/gdal.txt:281
msgid "Returns the geometry for this feature, as an ``OGRGeometry`` object::"
msgstr ""

# e621072e7ed24431b9196b82cac081b1
#: ../../ref/contrib/gis/gdal.txt:288
msgid ""
"A method that returns the value of the given field (specified by name) for "
"this feature, **not** a ``Field`` wrapper object::"
msgstr ""

# 4806b3a8db22450d8af5f25a7f85a406
#: ../../ref/contrib/gis/gdal.txt:296
msgid ""
"Returns the type of geometry for this feature, as an :class:`OGRGeomType` "
"object.  This will be the same for all features in a given layer, and is "
"equivalent to the :attr:`Layer.geom_type` property of the :class:`Layer` "
"object the feature came from."
msgstr ""

# f931f3ce5899499e9ad898dd913689a1
#: ../../ref/contrib/gis/gdal.txt:303
msgid ""
"Returns the number of fields of data associated with the feature. This will "
"be the same for all features in a given layer, and is equivalent to the :"
"attr:`Layer.num_fields` property of the :class:`Layer` object the feature "
"came from."
msgstr ""

# 31f0c4798f72495eb41087612ca6a85d
#: ../../ref/contrib/gis/gdal.txt:310
msgid ""
"Returns a list of the names of the fields of data associated with the "
"feature.  This will be the same for all features in a given layer, and is "
"equivalent to the :attr:`Layer.fields` property of the :class:`Layer` object "
"the feature came from."
msgstr ""

# f3789cf622514355871741d8008387be
#: ../../ref/contrib/gis/gdal.txt:317
msgid "Returns the feature identifier within the layer::"
msgstr ""

# 05898f2f9f994e0bac7f466b9605cb41
#: ../../ref/contrib/gis/gdal.txt:324
msgid ""
"Returns the name of the :class:`Layer` that the feature came from. This will "
"be the same for all features in a given layer::"
msgstr ""

# 6a199bc5f0f94911a12f90a418a6b8c6
#: ../../ref/contrib/gis/gdal.txt:332
msgid ""
"A method that returns the index of the given field name.  This will be the "
"same for all features in a given layer::"
msgstr ""

# daba6f2f9a9646f4b22cf6bc6d7b57da
#: ../../ref/contrib/gis/gdal.txt:339
msgid "``Field``"
msgstr ""

# bf01a680209a4131b91330fe336f0dcf
#: ../../ref/contrib/gis/gdal.txt:345
msgid "Returns the name of this field::"
msgstr ""

# e8cefaedcf444af69bf390f757bdd9e5
#: ../../ref/contrib/gis/gdal.txt:352
msgid ""
"Returns the OGR type of this field, as an integer.  The ``FIELD_CLASSES`` "
"dictionary maps these values onto subclasses of ``Field``::"
msgstr ""

# ca827ef010624da2ba0b73f2b983838b
#: ../../ref/contrib/gis/gdal.txt:361
msgid "Returns a string with the name of the data type of this field::"
msgstr ""

# b3794ca0ed4046858e733c1fc9cd23f5
#: ../../ref/contrib/gis/gdal.txt:368
msgid ""
"Returns the value of this field.  The ``Field`` class itself returns the "
"value as a string, but each subclass returns the value in the most "
"appropriate form::"
msgstr ""

# 8a80d533e3f545a6bca011dd629d0412
#: ../../ref/contrib/gis/gdal.txt:377
msgid "Returns the width of this field::"
msgstr ""

# 8757ae72cbd84bdb82574c51510a83d3
#: ../../ref/contrib/gis/gdal.txt:384
msgid ""
"Returns the numeric precision of this field.  This is meaningless (and set "
"to zero) for non-numeric fields::"
msgstr ""

# c58dcd2d9486422092dd732b005089b3
#: ../../ref/contrib/gis/gdal.txt:392
msgid "Returns the value of the field as a double (float)::"
msgstr ""

# 27661ed89bef4250b8fcc0dd3b999e87
#: ../../ref/contrib/gis/gdal.txt:399
msgid "Returns the value of the field as an integer::"
msgstr ""

# df2a1e2208f74fb890766510ff71457d
#: ../../ref/contrib/gis/gdal.txt:406
msgid "Returns the value of the field as a string::"
msgstr ""

# d8d9f347f24b4e8a88af8a96c05a76ae
#: ../../ref/contrib/gis/gdal.txt:413
msgid "Returns the value of the field as a tuple of date and time components::"
msgstr ""

# ff33c26b63de4a889d9fdb61a68916b0
#: ../../ref/contrib/gis/gdal.txt:419
msgid "``Driver``"
msgstr ""

# 2761baafa1504965aa43ac8268067fbb
#: ../../ref/contrib/gis/gdal.txt:423
msgid ""
"The ``Driver`` class is used internally to wrap an OGR :class:`DataSource` "
"driver."
msgstr ""

# df0603bef04d42f3a8bde0b0ef35686f
#: ../../ref/contrib/gis/gdal.txt:427
msgid "Returns the number of OGR vector drivers currently registered."
msgstr ""

# 6b8c18b3f2c64c4eacfe83eaed3a44b1
#: ../../ref/contrib/gis/gdal.txt:431
msgid "OGR Geometries"
msgstr ""

# 1007bd73bc104916bfee18df75dcaf94
#: ../../ref/contrib/gis/gdal.txt:434
msgid "``OGRGeometry``"
msgstr ""

# de4d2265d8c64b0fa53f56a2e3c3c0c2
#: ../../ref/contrib/gis/gdal.txt:436
msgid ""
":class:`OGRGeometry` objects share similar functionality with :class:"
"`~django.contrib.gis.geos.GEOSGeometry` objects, and are thin wrappers "
"around OGR's internal geometry representation.  Thus, they allow for more "
"efficient access to data when using :class:`DataSource`. Unlike its GEOS "
"counterpart, :class:`OGRGeometry` supports spatial reference systems and "
"coordinate transformation::"
msgstr ""

# 9688316fe8fc4c929178799d598c8855
#: ../../ref/contrib/gis/gdal.txt:448
msgid ""
"This object is a wrapper for the `OGR Geometry`__ class. These objects are "
"instantiated directly from the given ``geom_input`` parameter, which may be "
"a string containing WKT, HEX, GeoJSON, a ``buffer`` containing WKB data, or "
"an :class:`OGRGeomType` object. These objects are also returned from the :"
"class:`Feature.geom` attribute, when reading vector data from :class:`Layer` "
"(which is in turn a part of a :class:`DataSource`)."
msgstr ""

# 6461d3c02be24c2293da70745fa9de5b
#: ../../ref/contrib/gis/gdal.txt:460
msgid "Constructs a :class:`Polygon` from the given bounding-box (a 4-tuple)."
msgstr ""

# 05eb8976305b4530936b4697e1c1838a
#: ../../ref/contrib/gis/gdal.txt:464
msgid ""
"Returns the number of points in a :class:`LineString`, the number of rings "
"in a :class:`Polygon`, or the number of geometries in a :class:"
"`GeometryCollection`. Not applicable to other geometry types."
msgstr ""

# 5c60df6feac649d5be1b8853d1ce17e9
#: ../../ref/contrib/gis/gdal.txt:470
msgid ""
"Iterates over the points in a :class:`LineString`, the rings in a :class:"
"`Polygon`, or the geometries in a :class:`GeometryCollection`. Not "
"applicable to other geometry types."
msgstr ""

# b040bb84f6354300b3723d8a6f6ba7ed
#: ../../ref/contrib/gis/gdal.txt:476
msgid ""
"Returns the point at the specified index for a :class:`LineString`, the "
"interior ring at the specified index for a :class:`Polygon`, or the geometry "
"at the specified index in a :class:`GeometryCollection`.  Not applicable to "
"other geometry types."
msgstr ""

# 6c9195845e694b49a4b75502101753dd
#: ../../ref/contrib/gis/gdal.txt:483
msgid ""
"Returns the number of coordinated dimensions of the geometry, i.e. 0 for "
"points, 1 for lines, and so forth::"
msgstr ""

# 69aff56f3c014a90999c437d006940d5
#: ../../ref/contrib/gis/gdal.txt:491
msgid ""
"Returns or sets the coordinate dimension of this geometry.  For example, the "
"value would be 2 for two-dimensional geometries."
msgstr ""

# 867afba67cd64ae7827884d077df7f59
#: ../../ref/contrib/gis/gdal.txt:496
msgid "Returns the number of elements in this geometry::"
msgstr ""

# c660f2e81c404483abe1f1c8d0fb4cd0
#: ../../ref/contrib/gis/gdal.txt:503
msgid "Returns the number of points used to describe this geometry::"
msgstr ""

# 85893084ee7b4a81a903d4bb65671f98
# 272b712b4cd44c9eb010d02915caedb9
#: ../../ref/contrib/gis/gdal.txt:510 ../../ref/contrib/gis/gdal.txt:514
msgid "Alias for :attr:`point_count`."
msgstr ""

# 6310313d52f247ff92b33e526819fa35
#: ../../ref/contrib/gis/gdal.txt:518
msgid "Returns the type of this geometry, as an :class:`OGRGeomType` object."
msgstr ""

# c21bc9090bf0412993b0fb086640f2fb
#: ../../ref/contrib/gis/gdal.txt:522
msgid "Returns the name of the type of this geometry::"
msgstr ""

# 14806bbab7fc477c87894e5e045e5a38
#: ../../ref/contrib/gis/gdal.txt:529
msgid ""
"Returns the area of this geometry, or 0 for geometries that do not contain "
"an area::"
msgstr ""

# c8d694352edb47e8898afc1c54dba1f4
#: ../../ref/contrib/gis/gdal.txt:537
msgid "Returns the envelope of this geometry, as an :class:`Envelope` object."
msgstr ""

# f8437747a04249fe9bf4384a7cae448a
#: ../../ref/contrib/gis/gdal.txt:541
msgid ""
"Returns the envelope of this geometry as a 4-tuple, instead of as an :class:"
"`Envelope` object::"
msgstr ""

# 1974d0d01387454fa4b11a92e8d2e3b1
#: ../../ref/contrib/gis/gdal.txt:549
msgid ""
"This property controls the spatial reference for this geometry, or ``None`` "
"if no spatial reference system has been assigned to it. If assigned, "
"accessing this property returns a :class:`SpatialReference` object.  It may "
"be set with another :class:`SpatialReference` object, or any input that :"
"class:`SpatialReference` accepts. Example::"
msgstr ""

# 4bb89066dd9a4becbec1c27a15465eb9
#: ../../ref/contrib/gis/gdal.txt:560
msgid ""
"Returns or sets the spatial reference identifier corresponding to :class:"
"`SpatialReference` of this geometry.  Returns ``None`` if there is no "
"spatial reference information associated with this geometry, or if an SRID "
"cannot be determined."
msgstr ""

# 066fdc8d43e04f2da521b16aed09e859
#: ../../ref/contrib/gis/gdal.txt:567
msgid ""
"Returns a :class:`~django.contrib.gis.geos.GEOSGeometry` object "
"corresponding to this geometry."
msgstr ""

# a6ce5a8e8a8a47eaac9e9a24131e51cf
#: ../../ref/contrib/gis/gdal.txt:572
msgid "Returns a string representation of this geometry in GML format::"
msgstr ""

# 43cca722de764460814f0acbfb5993ba
#: ../../ref/contrib/gis/gdal.txt:579
msgid "Returns a string representation of this geometry in HEX WKB format::"
msgstr ""

# ff0ccd90508c4f2784eb1fcefea27d5d
#: ../../ref/contrib/gis/gdal.txt:586
msgid "Returns a string representation of this geometry in JSON format::"
msgstr ""

# 0296e20fbb30414b9ab0484c52fe3b2b
#: ../../ref/contrib/gis/gdal.txt:594
msgid "Returns a string representation of this geometry in KML format."
msgstr ""

# 6f64992b2eb84da5a583d979fe176567
#: ../../ref/contrib/gis/gdal.txt:598
msgid ""
"Returns the size of the WKB buffer needed to hold a WKB representation of "
"this geometry::"
msgstr ""

# f055b36c094642b8aeddde89e5d34db9
#: ../../ref/contrib/gis/gdal.txt:606
msgid "Returns a ``buffer`` containing a WKB representation of this geometry."
msgstr ""

# cec917eec10740fa92eabe6084bc5516
#: ../../ref/contrib/gis/gdal.txt:610
msgid "Returns a string representation of this geometry in WKT format."
msgstr ""

# 3f461ba322a74f3e8b378e1199cb1e08
#: ../../ref/contrib/gis/gdal.txt:614
msgid "Returns the EWKT representation of this geometry."
msgstr ""

# 64ad883dd39e4b0bb1e406873d48790a
#: ../../ref/contrib/gis/gdal.txt:618
msgid "Returns a new :class:`OGRGeometry` clone of this geometry object."
msgstr ""

# 3fcfc64e90044e0d872931ad91a355b3
#: ../../ref/contrib/gis/gdal.txt:622
msgid ""
"If there are any rings within this geometry that have not been closed, this "
"routine will do so by adding the starting point to the end::"
msgstr ""

# f3468079c29e46569056854040d78537
#: ../../ref/contrib/gis/gdal.txt:632
msgid ""
"Transforms this geometry to a different spatial reference system.  May take "
"a :class:`CoordTransform` object, a :class:`SpatialReference` object, or any "
"other input accepted by :class:`SpatialReference` (including spatial "
"reference WKT and PROJ.4 strings, or an integer SRID). By default nothing is "
"returned and the geometry is transformed in-place. However, if the ``clone`` "
"keyword is set to ``True`` then a transformed clone of this geometry is "
"returned instead."
msgstr ""

# 2526ab0eeb144dcb87828008ef7ccc78
#: ../../ref/contrib/gis/gdal.txt:642
msgid ""
"Returns ``True`` if this geometry intersects the other, otherwise returns "
"``False``."
msgstr ""

# 090a3c841b1e42e5821f4c464b5c9ebb
#: ../../ref/contrib/gis/gdal.txt:647
msgid ""
"Returns ``True`` if this geometry is equivalent to the other, otherwise "
"returns ``False``."
msgstr ""

# f9d4ed83a76440beb9e2b6b1c1f2ae8e
#: ../../ref/contrib/gis/gdal.txt:652
msgid ""
"Returns ``True`` if this geometry is spatially disjoint to (i.e. does not "
"intersect) the other, otherwise returns ``False``."
msgstr ""

# 713bdf05ceb14c21a6e8b45bd3c8536e
#: ../../ref/contrib/gis/gdal.txt:657
msgid ""
"Returns ``True`` if this geometry touches the other, otherwise returns "
"``False``."
msgstr ""

# 5facd4c1ad5f48ea8a28b8170c2038b1
#: ../../ref/contrib/gis/gdal.txt:662
msgid ""
"Returns ``True`` if this geometry crosses the other, otherwise returns "
"``False``."
msgstr ""

# 9c0032c4d3064491a9faf748f49e0e15
#: ../../ref/contrib/gis/gdal.txt:667
msgid ""
"Returns ``True`` if this geometry is contained within the other, otherwise "
"returns ``False``."
msgstr ""

# 6d199dca2caf48a69ba80f5e265acba0
#: ../../ref/contrib/gis/gdal.txt:672
msgid ""
"Returns ``True`` if this geometry contains the other, otherwise returns "
"``False``."
msgstr ""

# b54198c308ed48f6bd5fcac23ebc44b6
#: ../../ref/contrib/gis/gdal.txt:677
msgid ""
"Returns ``True`` if this geometry overlaps the other, otherwise returns "
"``False``."
msgstr ""

# 17a202017ec94ed0a6d1ff7554d2e380
#: ../../ref/contrib/gis/gdal.txt:682
msgid "The boundary of this geometry, as a new :class:`OGRGeometry` object."
msgstr ""

# 9b94f831a100458eba13060d5a3e8724
#: ../../ref/contrib/gis/gdal.txt:686
msgid ""
"The smallest convex polygon that contains this geometry, as a new :class:"
"`OGRGeometry` object."
msgstr ""

# 95c3adeb74cb41eeb9d678a8ef3dffcd
#: ../../ref/contrib/gis/gdal.txt:691
msgid ""
"Returns the region consisting of the difference of this geometry and the "
"other, as a new :class:`OGRGeometry` object."
msgstr ""

# 8c2d84a2604844448f39adf8be4fb5bd
#: ../../ref/contrib/gis/gdal.txt:696
msgid ""
"Returns the region consisting of the intersection of this geometry and the "
"other, as a new :class:`OGRGeometry` object."
msgstr ""

# f01ad479cfa4442aa9e62e5ee71f990d
#: ../../ref/contrib/gis/gdal.txt:701
msgid ""
"Returns the region consisting of the symmetric difference of this geometry "
"and the other, as a new :class:`OGRGeometry` object."
msgstr ""

# 95d8b4c6b33d439d90b04d7ec8c3a605
#: ../../ref/contrib/gis/gdal.txt:706
msgid ""
"Returns the region consisting of the union of this geometry and the other, "
"as a new :class:`OGRGeometry` object."
msgstr ""

# c881d25dbf544b628fbe86e5e1570519
#: ../../ref/contrib/gis/gdal.txt:711
msgid ""
"Returns the coordinates of a point geometry as a tuple, the coordinates of a "
"line geometry as a tuple of tuples, and so forth::"
msgstr ""

# 1851f7574bd6478897bbaeb27905c612
#: ../../ref/contrib/gis/gdal.txt:721
msgid "An alias for :attr:`tuple`."
msgstr ""

# dc3f479f9dd047cb80347f8c56ee464a
#: ../../ref/contrib/gis/gdal.txt:727
msgid "Returns the X coordinate of this point::"
msgstr ""

# 3d68820afdfd44259760ee73c55c8939
#: ../../ref/contrib/gis/gdal.txt:734
msgid "Returns the Y coordinate of this point::"
msgstr ""

# 8f5f4a7b80f7498699982a1f63c5ded8
#: ../../ref/contrib/gis/gdal.txt:741
msgid ""
"Returns the Z coordinate of this point, or ``None`` if the the point does "
"not have a Z coordinate::"
msgstr ""

# 374d8a6c92b246deaa9f32f5d1f66906
#: ../../ref/contrib/gis/gdal.txt:751
msgid "Returns a list of X coordinates in this line::"
msgstr ""

# 7d756fe3e7bf4918bcad3300cba745c8
#: ../../ref/contrib/gis/gdal.txt:758
msgid "Returns a list of Y coordinates in this line::"
msgstr ""

# 18d6b40fb143494eae0e3df40f438900
#: ../../ref/contrib/gis/gdal.txt:765
msgid ""
"Returns a list of Z coordinates in this line, or ``None`` if the line does "
"not have Z coordinates::"
msgstr ""

# 6a7df293551a4f9fbcb9b13bd288a1ac
#: ../../ref/contrib/gis/gdal.txt:776
msgid ""
"Returns the shell or exterior ring of this polygon, as a ``LinearRing`` "
"geometry."
msgstr ""

# 86d3d5b9508e4fc0ac1700313b12b67f
#: ../../ref/contrib/gis/gdal.txt:781
msgid "An alias for :attr:`shell`."
msgstr ""

# 8ab6f367c4af4a6cb8905bbf9e8101bd
#: ../../ref/contrib/gis/gdal.txt:785
msgid "Returns a :class:`Point` representing the centroid of this polygon."
msgstr ""

# a73c7b46703f4421ab718668d9485aa0
#: ../../ref/contrib/gis/gdal.txt:791
msgid ""
"Adds a geometry to this geometry collection.  Not applicable to other "
"geometry types."
msgstr ""

# 0275653339ee4ac685294c9d0386a791
#: ../../ref/contrib/gis/gdal.txt:796
msgid "``OGRGeomType``"
msgstr ""

# 959fac10aea04fc7b4a88cbd1e6ae59b
#: ../../ref/contrib/gis/gdal.txt:800
msgid ""
"This class allows for the representation of an OGR geometry type in any of "
"several ways::"
msgstr ""

# 81fef666f5f54518b1275588f62b5e1f
#: ../../ref/contrib/gis/gdal.txt:812
msgid "Returns a short-hand string form of the OGR Geometry type::"
msgstr ""

# 4562eea5a6cf4345b00787e486f28e39
#: ../../ref/contrib/gis/gdal.txt:819
msgid "Returns the number corresponding to the OGR geometry type::"
msgstr ""

# 281da2a56cd54fd391eee4389f487c0f
#: ../../ref/contrib/gis/gdal.txt:826
msgid ""
"Returns the Django field type (a subclass of GeometryField) to use for "
"storing this OGR type, or ``None`` if there is no appropriate Django type::"
msgstr ""

# dfc75f98b2894a6f87708e570c0199f0
#: ../../ref/contrib/gis/gdal.txt:834
msgid "``Envelope``"
msgstr ""

# 8d0dccf8d93843eca90c42a261243c81
#: ../../ref/contrib/gis/gdal.txt:838
msgid ""
"Represents an OGR Envelope structure that contains the minimum and maximum "
"X, Y coordinates for a rectangle bounding box. The naming of the variables "
"is compatible with the OGR Envelope C structure."
msgstr ""

# 2f3e75b2419049c7b74f5be59e5edae0
#: ../../ref/contrib/gis/gdal.txt:845
msgid "The value of the minimum X coordinate."
msgstr ""

# 0fed2604529e4ac0adf18321f6f90faf
#: ../../ref/contrib/gis/gdal.txt:849
msgid "The value of the maximum X coordinate."
msgstr ""

# 73d29c664a444690a75b18a11d372923
#: ../../ref/contrib/gis/gdal.txt:853
msgid "The value of the minimum Y coordinate."
msgstr ""

# 48d67486b2bf4d668a344f50349ab1fb
#: ../../ref/contrib/gis/gdal.txt:857
msgid "The value of the maximum Y coordinate."
msgstr ""

# e7e17341c1674575928c0e6ae7de2abc
#: ../../ref/contrib/gis/gdal.txt:861
msgid "The upper-right coordinate, as a tuple."
msgstr ""

# b17cbb7ab13f4ab1837053ce35d2afe1
#: ../../ref/contrib/gis/gdal.txt:865
msgid "The lower-left coordinate, as a tuple."
msgstr ""

# 81924da266874303959fedbb5d250f7f
#: ../../ref/contrib/gis/gdal.txt:869
msgid "A tuple representing the envelope."
msgstr ""

# 63a7875e02f74495a977e9a3f534234a
#: ../../ref/contrib/gis/gdal.txt:873
msgid "A string representing this envelope as a polygon in WKT format."
msgstr ""

# 20e9ef5772c04a4ca499f94c5a22ca4d
#: ../../ref/contrib/gis/gdal.txt:879
msgid "Coordinate System Objects"
msgstr ""

# 5ecb8642a24c4fc08ede280d60d9592e
#: ../../ref/contrib/gis/gdal.txt:882
msgid "``SpatialReference``"
msgstr ""

# b54423f7415d45a6b76b151abcbe2909
#: ../../ref/contrib/gis/gdal.txt:886
msgid ""
"Spatial reference objects are initialized on the given ``srs_input``, which "
"may be one of the following:"
msgstr ""

# e7585454398042ea8e24cc56eb6baf8a
#: ../../ref/contrib/gis/gdal.txt:889
msgid "OGC Well Known Text (WKT) (a string)"
msgstr ""

# fcc2a8232446474889a5cfd419f03b5a
#: ../../ref/contrib/gis/gdal.txt:890
msgid "EPSG code (integer or string)"
msgstr ""

# 005ee7a8097146f3b8b9e295810d3351
#: ../../ref/contrib/gis/gdal.txt:891
msgid "PROJ.4 string"
msgstr ""

# 8b52d5f8b9294002af89a13fe475ba50
#: ../../ref/contrib/gis/gdal.txt:892
msgid ""
"A shorthand string for well-known standards (``'WGS84'``, ``'WGS72'``, "
"``'NAD27'``, ``'NAD83'``)"
msgstr ""

# cb3b59cfb20240a9bca61f6c0a34f662
#: ../../ref/contrib/gis/gdal.txt:914
msgid ""
"Returns the value of the given string attribute node, ``None`` if the node "
"doesn't exist.  Can also take a tuple as a parameter, (target, child), where "
"child is the index of the attribute in the WKT.  For example::"
msgstr ""

# c0be870d05c74819aeeea6c4fca55f0d
#: ../../ref/contrib/gis/gdal.txt:937
msgid ""
"The attribute value for the given target node (e.g. ``'PROJCS'``). The index "
"keyword specifies an index of the child node to return."
msgstr ""

# 2caa99968b604f95a6b44e644969882b
#: ../../ref/contrib/gis/gdal.txt:942
msgid "Returns the authority name for the given string target node."
msgstr ""

# 0bf85bd1bd3b47f0b5289100fe76c344
#: ../../ref/contrib/gis/gdal.txt:946
msgid "Returns the authority code for the given string target node."
msgstr ""

# e8b08018a5bd48528fc66dfc355be113
#: ../../ref/contrib/gis/gdal.txt:950
msgid "Returns a clone of this spatial reference object."
msgstr ""

# a9b4973c61f547d2a1119648c01ba080
#: ../../ref/contrib/gis/gdal.txt:954
msgid ""
"This method inspects the WKT of this SpatialReference, and will add EPSG "
"authority nodes where an EPSG identifier is applicable."
msgstr ""

# 0efcca459f6d4c3fb01ddae2cb7f7a13
#: ../../ref/contrib/gis/gdal.txt:959
msgid "Morphs this SpatialReference from ESRI's format to EPSG"
msgstr ""

# c01f4c96e8d543b4a55a11cadafd1181
#: ../../ref/contrib/gis/gdal.txt:963
msgid "Morphs this SpatialReference to ESRI's format."
msgstr ""

# 8715aaa67a7f424db36cc1e8936e6bf0
#: ../../ref/contrib/gis/gdal.txt:967
msgid ""
"Checks to see if the given spatial reference is valid, if not an exception "
"will be raised."
msgstr ""

# b180d9203fe34c26ba9a4d98b177c731
#: ../../ref/contrib/gis/gdal.txt:972
msgid "Import spatial reference from EPSG code."
msgstr ""

# 1db2a4c5c8ba479787d0e81da6afd802
#: ../../ref/contrib/gis/gdal.txt:976
msgid "Import spatial reference from PROJ.4 string."
msgstr ""

# 2be64b169a1040a5a04586a5d71ca7d1
#: ../../ref/contrib/gis/gdal.txt:982
msgid "Import spatial reference from WKT."
msgstr ""

# 1265becd665c42198277a29dd0f1bd72
#: ../../ref/contrib/gis/gdal.txt:986
msgid "Import spatial reference from XML."
msgstr ""

# 3bf1893deaf24e049e1ea8bd77cbca06
#: ../../ref/contrib/gis/gdal.txt:990
msgid "Returns the name of this Spatial Reference."
msgstr ""

# 44513eebd4f34a1dbd877a52eb61ec9f
#: ../../ref/contrib/gis/gdal.txt:994
msgid "Returns the SRID of top-level authority, or ``None`` if undefined."
msgstr ""

# 6298227a80c74c64ba96b104ee36dcd1
#: ../../ref/contrib/gis/gdal.txt:998
msgid "Returns the name of the linear units."
msgstr ""

# e2fa0444d0374a5197f2926e9722d994
#: ../../ref/contrib/gis/gdal.txt:1002
msgid "Returns the value of the linear units."
msgstr ""

# c7a64f44c1e947148cac82e83c2e8a78
#: ../../ref/contrib/gis/gdal.txt:1006
msgid "Returns the name of the angular units.\""
msgstr ""

# 70ec48e3e4ad439dbc3b9404e1da441f
#: ../../ref/contrib/gis/gdal.txt:1010
msgid "Returns the value of the angular units."
msgstr ""

# db71cd3e956d48f6993386e5dd2c9968
#: ../../ref/contrib/gis/gdal.txt:1014
msgid ""
"Returns a 2-tuple of the units value and the units name, and will "
"automatically determines whether to return the linear or angular units."
msgstr ""

# 3251ba5fd99a4e589bfa6267dea7ab86
#: ../../ref/contrib/gis/gdal.txt:1020
msgid ""
"Returns a tuple of the ellipsoid parameters for this spatial reference: "
"(semimajor axis, semiminor axis, and inverse flattening)"
msgstr ""

# 55b284b7be26463a9913730f45987c45
#: ../../ref/contrib/gis/gdal.txt:1025
msgid ""
"Returns the semi major axis of the ellipsoid for this spatial reference."
msgstr ""

# 69ec9d9243124c028378c11d8b8fc1fe
#: ../../ref/contrib/gis/gdal.txt:1029
msgid ""
"Returns the semi minor axis of the ellipsoid for this spatial reference."
msgstr ""

# 0f70ec322d78406eba0317baa8378742
#: ../../ref/contrib/gis/gdal.txt:1033
msgid ""
"Returns the inverse flattening of the ellipsoid for this spatial reference."
msgstr ""

# 8d7c04154dc347728a0587f8cff11510
#: ../../ref/contrib/gis/gdal.txt:1037
msgid ""
"Returns ``True`` if this spatial reference is geographic (root node is "
"``GEOGCS``)."
msgstr ""

# 1d2bcbb49b2545f58aa339331070bba9
#: ../../ref/contrib/gis/gdal.txt:1042
msgid ""
"Returns ``True`` if this spatial reference is local (root node is "
"``LOCAL_CS``)."
msgstr ""

# 89957f2062de4cca86bfa1efbd916bae
#: ../../ref/contrib/gis/gdal.txt:1047
msgid ""
"Returns ``True`` if this spatial reference is a projected coordinate system "
"(root node is ``PROJCS``)."
msgstr ""

# 54d0cc845e594f18970742dad0096650
#: ../../ref/contrib/gis/gdal.txt:1052
msgid "Returns the WKT representation of this spatial reference."
msgstr ""

# b0014b88d9884dbaaa4f8efac5dc8b0d
#: ../../ref/contrib/gis/gdal.txt:1056
msgid "Returns the 'pretty' representation of the WKT."
msgstr ""

# 774fa13ed23f4df282eefc47dcceeecb
#: ../../ref/contrib/gis/gdal.txt:1060
msgid "Returns the PROJ.4 representation for this spatial reference."
msgstr ""

# 19046465c0654d17ba713e39533210d9
#: ../../ref/contrib/gis/gdal.txt:1064
msgid "Alias for :attr:`SpatialReference.proj`."
msgstr ""

# 64ab5afe9a054addbe7708aa0188fa67
#: ../../ref/contrib/gis/gdal.txt:1068
msgid "Returns the XML representation of this spatial reference."
msgstr ""

# 37e839de47f9453c835eb56a04e6ac83
#: ../../ref/contrib/gis/gdal.txt:1072
msgid "``CoordTransform``"
msgstr ""

# 534ec94ec543408995dbfcbcdb4589fa
#: ../../ref/contrib/gis/gdal.txt:1076
msgid ""
"Represents a coordinate system transform.  It is initialized with two :class:"
"`SpatialReference`, representing the source and target coordinate systems, "
"respectively.  These objects should be used when performing the same "
"coordinate transformation repeatedly on different geometries::"
msgstr ""

# 1fe51d606a8f4d808cb8df5b2d5aa4ed
#: ../../ref/contrib/gis/gdal.txt:1092
msgid "GDAL_LIBRARY_PATH"
msgstr ""

# 29283f42223b4473983286aebc738cc6
#: ../../ref/contrib/gis/gdal.txt:1094
msgid ""
"A string specifying the location of the GDAL library.  Typically, this "
"setting is only used if the GDAL library is in a non-standard location (e."
"g., ``/home/john/lib/libgdal.so``)."
msgstr ""

# eb808d139b9d4345993ce528b4e9a588
#: ../../ref/contrib/gis/geoip.txt:5
msgid "Geolocation with GeoIP"
msgstr ""

# 00916c6c2062436fb0f2bb08cc75c54a
#: ../../ref/contrib/gis/geoip.txt:14
msgid ""
"In Django 1.4, the :class:`GeoIP` object was moved out of :mod:`django."
"contrib.gis.utils` and into its own module, :mod:`django.contrib.gis.geoip`. "
"A shortcut is still provided in ``utils``, but will be removed in Django 1.6."
msgstr ""

# 4381a053d2c64a1f8ffdf0c9887a860c
#: ../../ref/contrib/gis/geoip.txt:19
msgid ""
"The :class:`GeoIP` object is a ctypes wrapper for the `MaxMind GeoIP C "
"API`__. [#]_"
msgstr ""

# a8865b8b02b94b6291b9a71a31f26e7d
#: ../../ref/contrib/gis/geoip.txt:22
msgid ""
"In order to perform IP-based geolocation, the :class:`GeoIP` object requires "
"the GeoIP C libary and either the GeoIP `Country`__ or `City`__ datasets in "
"binary format (the CSV files will not work!).  These datasets may be "
"`downloaded from MaxMind`__.  Grab the ``GeoLiteCountry/GeoIP.dat.gz`` and "
"``GeoLiteCity.dat.gz`` files and unzip them in a directory corresponding to "
"what you set :setting:`GEOIP_PATH` with in your settings.  See the example "
"and reference below for more details."
msgstr ""

# d1104e8b08794acc8478a723a9f61701
#: ../../ref/contrib/gis/geoip.txt:38
msgid ""
"Assuming you have the GeoIP C library installed, here is an example of its "
"usage::"
msgstr ""

# c58099db52df4431942d0be7a1c07a60
#: ../../ref/contrib/gis/geoip.txt:64
msgid "``GeoIP`` Settings"
msgstr ""

# 81d7464e34214296b3e3d0189ab132e6
#: ../../ref/contrib/gis/geoip.txt:69
msgid "GEOIP_PATH"
msgstr ""

# 132ec723cf5343ae9dd3e68938d6fe15
#: ../../ref/contrib/gis/geoip.txt:71
msgid ""
"A string specifying the directory where the GeoIP data files are located.  "
"This setting is *required* unless manually specified with ``path`` keyword "
"when initializing the :class:`GeoIP` object."
msgstr ""

# c629e2d9cb39474db15d720bb61fcd70
#: ../../ref/contrib/gis/geoip.txt:78
msgid "GEOIP_LIBRARY_PATH"
msgstr ""

# 1cbcc1595554484c934baeeddddbab66
#: ../../ref/contrib/gis/geoip.txt:80
msgid ""
"A string specifying the location of the GeoIP C library.  Typically, this "
"setting is only used if the GeoIP C library is in a non-standard location (e."
"g., ``/home/sue/lib/libGeoIP.so``)."
msgstr ""

# eea703b4258943068c44841e2de53cc8
#: ../../ref/contrib/gis/geoip.txt:87
msgid "GEOIP_COUNTRY"
msgstr ""

# 88f9317fef1b42c8a92cea91f3c4679e
#: ../../ref/contrib/gis/geoip.txt:89
msgid ""
"The basename to use for the GeoIP country data file. Defaults to ``'GeoIP."
"dat'``."
msgstr ""

# a3ebf829b5f5417f86b94bff8c7c2299
#: ../../ref/contrib/gis/geoip.txt:95
msgid "GEOIP_CITY"
msgstr ""

# f15b43f39ac14a448acb37b9b0fd0f0f
#: ../../ref/contrib/gis/geoip.txt:97
msgid ""
"The basename to use for the GeoIP city data file. Defaults to ``'GeoLiteCity."
"dat'``."
msgstr ""

# a146887283724d10b7940149f0453333
#: ../../ref/contrib/gis/geoip.txt:101
msgid "``GeoIP`` API"
msgstr ""

# 44ec48ac95ce473ca6baddbdf59ee766
#: ../../ref/contrib/gis/geoip.txt:105
msgid ""
"The ``GeoIP`` object does not require any parameters to use the default "
"settings.  However, at the very least the :setting:`GEOIP_PATH` setting "
"should be set with the path of the location of your GeoIP data sets.  The "
"following intialization keywords may be used to customize any of the "
"defaults."
msgstr ""

# 1a378e4d2d1e435db6d76ed7b575e0b2
# 7a79b90aa214461cae5233ac3539bc0e
#: ../../ref/contrib/gis/geoip.txt:112
#: ../../ref/contrib/gis/layermapping.txt:112
msgid "Keyword Arguments"
msgstr ""

# 15602df0dac84d1aa6172219760e1e59
# cb3f3ab8809c4f36978b7b0e0ae52df7
# 87224fe18e1f4d5188601f7261cf4a44
# 1ce666c0754f4c77bcbc18587e91f27a
# cb842dd5a33f4a8f9c635f1dbb4fefa7
# 2059310746d3478aa922f5114c944760
# dad2bbf6ab9f46468b59eb86ac33bd69
# b13741cfbc884929bc36dbcfa55480f7
# 4811f86736b14780a9d6835fb90c00de
# de01c9cb7a1a4781ad5d028f1376d083
# ba17aadd4e3c4ba6b76521cf5ccd1645
# 15b0f219a04d4d1d82a0b5bfd4f74fd6
# b71cc82b7447414dbe6f6d3c3c261d32
# fb1b618e95324950b0c5f614aa5fca6b
# df27ab91fb12422a925c1fed4e0836ab
# a1d291809f3a454ba7d4aa808e6fee4a
# 87cac8824be54c5fb4bed9a2e0260795
#: ../../ref/contrib/gis/geoip.txt:112
#: ../../ref/contrib/gis/geoquerysets.txt:659
#: ../../ref/contrib/gis/geoquerysets.txt:837
#: ../../ref/contrib/gis/geoquerysets.txt:959
#: ../../ref/contrib/gis/geoquerysets.txt:992
#: ../../ref/contrib/gis/geoquerysets.txt:1025
#: ../../ref/contrib/gis/geoquerysets.txt:1045
#: ../../ref/contrib/gis/geoquerysets.txt:1183
#: ../../ref/contrib/gis/geos.txt:879 ../../ref/contrib/gis/geos.txt:902
#: ../../ref/contrib/gis/install/geolibs.txt:11
#: ../../ref/contrib/gis/layermapping.txt:95
#: ../../ref/contrib/gis/layermapping.txt:157
#: ../../ref/contrib/webdesign.txt:40 ../../ref/models/fields.txt:529
#: ../../ref/templates/builtins.txt:312 ../../ref/templates/builtins.txt:1207
msgid "Description"
msgstr ""

# c70eef4560c9403eae45832461af7526
#: ../../ref/contrib/gis/geoip.txt:114
msgid "``path``"
msgstr ""

# 1f82c03ac8424d0faeae3cb94c570dac
#: ../../ref/contrib/gis/geoip.txt:114
msgid ""
"Base directory to where GeoIP data is located or the full path to where the "
"city or country data files (.dat) are located.  Assumes that both the city "
"and country data sets are located in this directory; overrides the :setting:"
"`GEOIP_PATH` settings attribute."
msgstr ""

# 86a29838014141759ed91a8046f68d79
#: ../../ref/contrib/gis/geoip.txt:120
msgid "``cache``"
msgstr ""

# b6c5a03e580c474697db9c148398b187
#: ../../ref/contrib/gis/geoip.txt:120
msgid ""
"The cache settings when opening up the GeoIP datasets, and may be an integer "
"in (0, 1, 2, 4) corresponding to the ``GEOIP_STANDARD``, "
"``GEOIP_MEMORY_CACHE``, ``GEOIP_CHECK_CACHE``, and ``GEOIP_INDEX_CACHE`` "
"``GeoIPOptions`` C API settings, respectively. Defaults to 0 "
"(``GEOIP_STANDARD``)."
msgstr ""

# 91dd85ba54a44eccb54281cb327a7324
#: ../../ref/contrib/gis/geoip.txt:127
msgid "``country``"
msgstr ""

# f5ce54af35eb4255b03de26e5450b4e2
#: ../../ref/contrib/gis/geoip.txt:127
msgid ""
"The name of the GeoIP country data file.  Defaults to ``GeoIP.dat``.  "
"Setting this keyword overrides the :setting:`GEOIP_COUNTRY` settings "
"attribute."
msgstr ""

# b9e1bf2e84734f39962e493452f1037b
#: ../../ref/contrib/gis/geoip.txt:131
msgid "``city``"
msgstr ""

# 44b21693d2f241ed8a19fda5e8e32ca6
#: ../../ref/contrib/gis/geoip.txt:131
msgid ""
"The name of the GeoIP city data file.  Defaults to ``GeoLiteCity.dat``.  "
"Setting this keyword overrides the :setting:`GEOIP_CITY` settings attribute."
msgstr ""

# 7f32c51f672344f4aa75e414862e5078
#: ../../ref/contrib/gis/geoip.txt:137
msgid "``GeoIP`` Methods"
msgstr ""

# 6773d14c5cd24ccbbb3f91544d24898e
#: ../../ref/contrib/gis/geoip.txt:140
msgid "Querying"
msgstr ""

# 8aed4e05a5184e139eaac483b074140f
#: ../../ref/contrib/gis/geoip.txt:142
msgid ""
"All the following querying routines may take either a string IP address or a "
"fully qualified domain name (FQDN).  For example, both ``'205.186.163.125'`` "
"and ``'djangoproject.com'`` would be valid query parameters."
msgstr ""

# f8dcfa4972794a229c36be949369f8de
#: ../../ref/contrib/gis/geoip.txt:149
msgid ""
"Returns a dictionary of city information for the given query.  Some of the "
"values in the dictionary may be undefined (``None``)."
msgstr ""

# af0391edb60f490db05d972f0dbd13c0
#: ../../ref/contrib/gis/geoip.txt:154
msgid ""
"Returns a dictionary with the country code and country for the given query."
msgstr ""

# 684768615d4e476ab27e4e342e9170c6
#: ../../ref/contrib/gis/geoip.txt:159
msgid "Returns only the country code corresponding to the query."
msgstr ""

# 748630a3b9bf41ec8cbcfe20599f61e8
#: ../../ref/contrib/gis/geoip.txt:163
msgid "Returns only the country name corresponding to the query."
msgstr ""

# 0880994307cc4d2e95eb97a2ea160e8e
#: ../../ref/contrib/gis/geoip.txt:166
msgid "Coordinate Retrieval"
msgstr ""

# abff085dd33745998d64aba0128f27aa
# 2363783442554547b308f79a62521b68
#: ../../ref/contrib/gis/geoip.txt:170 ../../ref/contrib/gis/geoip.txt:174
msgid "Returns a coordinate tuple of (longitude, latitude)."
msgstr ""

# 1ec67f205247404cb89b4e9e824d79d4
#: ../../ref/contrib/gis/geoip.txt:178
msgid "Returns a coordinate tuple of (latitude, longitude),"
msgstr ""

# 97c807d644304b7bbc3cb9595311b821
#: ../../ref/contrib/gis/geoip.txt:182
msgid ""
"Returns a :class:`django.contrib.gis.geos.Point` object corresponding to the "
"query."
msgstr ""

# cdaf8f7f3a1b480e9e950fce76cda711
#: ../../ref/contrib/gis/geoip.txt:185
msgid "Database Information"
msgstr ""

# 09fe35ab4b3542469bf2833bc77e2190
#: ../../ref/contrib/gis/geoip.txt:189
msgid "This property returns information about the GeoIP country database."
msgstr ""

# 46e483de0830428c99eed8f90b0f2fb5
#: ../../ref/contrib/gis/geoip.txt:193
msgid "This property returns information about the GeoIP city database."
msgstr ""

# 981750db830341e3992da52fbb87d576
#: ../../ref/contrib/gis/geoip.txt:197
msgid ""
"This property returns information about all GeoIP databases (both city and "
"country), and the version of the GeoIP C library (if supported)."
msgstr ""

# 67ad1fe927334f6f83b1fd111c443170
#: ../../ref/contrib/gis/geoip.txt:201
msgid "GeoIP-Python API compatibility methods"
msgstr ""

# fd2411d76dbc40939f1cf2f50c9d83da
#: ../../ref/contrib/gis/geoip.txt:203
msgid ""
"These methods exist to ease compatibility with any code using MaxMind's "
"existing Python API."
msgstr ""

# 573807501f88421ba2a61480f12092bd
#: ../../ref/contrib/gis/geoip.txt:208
msgid ""
"This classmethod instantiates the GeoIP object from the given database path "
"and given cache setting."
msgstr ""

# 6331121c01ef4e458f2b7c831a9faf8b
#: ../../ref/contrib/gis/geoip.txt:228
msgid ""
"GeoIP(R) is a registered trademark of MaxMind, LLC of Boston, Massachusetts."
msgstr ""

# 6f546a266fe74144bd01b4ad44b2d639
#: ../../ref/contrib/gis/geoquerysets.txt:5
msgid "GeoQuerySet API Reference"
msgstr ""

# e37c1347e9eb470492aa5a5eea7137ad
#: ../../ref/contrib/gis/geoquerysets.txt:17
msgid ""
"Just like when using the :ref:`queryset-api`, interaction with "
"``GeoQuerySet`` by :ref:`chaining filters <chaining-filters>`. Instead of "
"the regular Django :ref:`field-lookups`, the spatial lookups in this section "
"are available for :class:`GeometryField`."
msgstr ""

# 79861101476c4f30aa8aa163a9d2b76b
#: ../../ref/contrib/gis/geoquerysets.txt:22
msgid ""
"For an introduction, see the :ref:`spatial lookups introduction <spatial-"
"lookups-intro>`.  For an overview of what lookups are compatible with a "
"particular spatial backend, refer to the :ref:`spatial lookup compatibility "
"table <spatial-lookup-compatibility>`."
msgstr ""

# de13441b241142eebed2452f11a53408
#: ../../ref/contrib/gis/geoquerysets.txt:30
msgid "bbcontains"
msgstr ""

# 8bf0713871b74827a4229e2aad2fbbff
# f22db033ac784211bcfea25f255dd3f7
# 691d5911bd5d4c09b42621a7fbdc8d3b
#: ../../ref/contrib/gis/geoquerysets.txt:32
#: ../../ref/contrib/gis/geoquerysets.txt:54
#: ../../ref/contrib/gis/geoquerysets.txt:76
msgid "*Availability*: PostGIS, MySQL, SpatiaLite"
msgstr ""

# 70830334c6054e5ca4307a98452fa080
#: ../../ref/contrib/gis/geoquerysets.txt:34
msgid ""
"Tests if the geometry field's bounding box completely contains the lookup "
"geometry's bounding box."
msgstr ""

# 291a40b89c394a7a9f3bfe7efa2e84a9
# ac4dc493e29541cfaf95a73a44a73d4e
# dc32c8ce576e41a18c0ceb40ad69102e
# c883f5d8b2e14e1f9d0a9ecfb1fb3774
# e3a826a24eb245ec9b571f3b095fd36c
# b692b5fafb204cb1847711bfd193c332
# 5dcc3eea4eaa4aa386ad9c4a21ca830d
# cb94e1f3426a47d78602854f39345051
# ac7ab0dfe0674a6e9595522250c2e541
# 8274639e5ffb4f93979e0b22e41dd99d
# 46f785e566e8463689e40fd778b92af1
# 409db8d154074e39abda0b0ed82febf7
# 976105226c8948c0a64498b09735a789
# 8031070b3d724594a43551f7c8d84aa4
# 7a21e787fce1476f91ee0a639f4f235f
# 23fa0e2a36fe40dd9c02ddbe78ddc18f
# 2577a9c6f4874225842666679819a4d3
#: ../../ref/contrib/gis/geoquerysets.txt:42
#: ../../ref/contrib/gis/geoquerysets.txt:64
#: ../../ref/contrib/gis/geoquerysets.txt:86
#: ../../ref/contrib/gis/geoquerysets.txt:107
#: ../../ref/contrib/gis/geoquerysets.txt:134
#: ../../ref/contrib/gis/geoquerysets.txt:154
#: ../../ref/contrib/gis/geoquerysets.txt:175
#: ../../ref/contrib/gis/geoquerysets.txt:195
#: ../../ref/contrib/gis/geoquerysets.txt:215
#: ../../ref/contrib/gis/geoquerysets.txt:250
#: ../../ref/contrib/gis/geoquerysets.txt:331
#: ../../ref/contrib/gis/geoquerysets.txt:353
#: ../../ref/contrib/gis/geoquerysets.txt:544
#: ../../ref/contrib/gis/geoquerysets.txt:564
#: ../../ref/contrib/gis/geoquerysets.txt:584
#: ../../ref/contrib/gis/geoquerysets.txt:604
#: ../../ref/contrib/gis/geoquerysets.txt:624
msgid "Backend"
msgstr ""

# 8a6cf8d74f384cfa93f59db6d11e4cf0
# 8da0be5256174520b91925eff96a96c4
# 8876b9a12fb349569fab90d6b5b63942
# 312af876d15c4f10a1682f8a737c34a1
# 3b24320984b94568a7c29407859a4d3b
# 60ddfda490554cac9bf6d98e06f94a4d
# 4adeedd67d05490fb096b9147a37af85
# cdc9e76486294e0d8d1bb812b634536a
# 1d7da647d351414fa25d24380ab7327b
# 0d48cba2c21646719f9ac777c7dddc11
# a0d26706385e47efa3751f1d7a893689
# d165cd14ed9c49d0ac8733a0bffdba09
# 97ea6b1d6af849b6a25615fdc1a637fd
# fddfd6bfb004491690d27fd90dab1f24
# 83d8a6b80e09405aa7bf179c05d8e410
# 8ab7037d1f9e4758baf94b0ae3085e97
# 201900e056d7472cba94f9039da3cf20
#: ../../ref/contrib/gis/geoquerysets.txt:42
#: ../../ref/contrib/gis/geoquerysets.txt:64
#: ../../ref/contrib/gis/geoquerysets.txt:86
#: ../../ref/contrib/gis/geoquerysets.txt:107
#: ../../ref/contrib/gis/geoquerysets.txt:134
#: ../../ref/contrib/gis/geoquerysets.txt:154
#: ../../ref/contrib/gis/geoquerysets.txt:175
#: ../../ref/contrib/gis/geoquerysets.txt:195
#: ../../ref/contrib/gis/geoquerysets.txt:215
#: ../../ref/contrib/gis/geoquerysets.txt:250
#: ../../ref/contrib/gis/geoquerysets.txt:331
#: ../../ref/contrib/gis/geoquerysets.txt:353
#: ../../ref/contrib/gis/geoquerysets.txt:544
#: ../../ref/contrib/gis/geoquerysets.txt:564
#: ../../ref/contrib/gis/geoquerysets.txt:584
#: ../../ref/contrib/gis/geoquerysets.txt:604
#: ../../ref/contrib/gis/geoquerysets.txt:624
msgid "SQL Equivalent"
msgstr ""

# df9d7b7785174857b3bd5a9b34d88010
#: ../../ref/contrib/gis/geoquerysets.txt:44
msgid "``poly ~ geom``"
msgstr ""

# 94ca9a3a9a034602902b160cca3a262e
# 409f186b85e74f2db567710e8fd7a906
# 6b0a385278254d998cce1f94fece334f
# e600967f94294276ac2be74cf70dd415
# 3d6bc882af8143f3b0f1e66fd1ceb164
# 1be6233d0c6e4d77b6c804744744bec9
# a944ab0facd04186b010a2423887321b
# 2c23590a0d014a42ad77eb21aed12f76
# 79f3aae3f98c481db53db85e24cfa78d
#: ../../ref/contrib/gis/geoquerysets.txt:45
#: ../../ref/contrib/gis/geoquerysets.txt:67
#: ../../ref/contrib/gis/geoquerysets.txt:89
#: ../../ref/contrib/gis/geoquerysets.txt:111
#: ../../ref/contrib/gis/geoquerysets.txt:219
#: ../../ref/contrib/gis/geoquerysets.txt:254
#: ../../ref/contrib/gis/geoquerysets.txt:334
#: ../../ref/contrib/gis/geoquerysets.txt:356
#: ../../ref/contrib/gis/install/index.txt:65
msgid "MySQL"
msgstr ""

# 71a8b0b067df4dba9a3ecb108a029677
# 7e970b03de854175ae0cfcdbcb152919
#: ../../ref/contrib/gis/geoquerysets.txt:45
#: ../../ref/contrib/gis/geoquerysets.txt:111
msgid "``MBRContains(poly, geom)``"
msgstr ""

# 2ca9c5f945ea4325a42c1b5e95b46070
#: ../../ref/contrib/gis/geoquerysets.txt:46
msgid "``MbrContains(poly, geom)``"
msgstr ""

# f6ddacd7e8ed4430b0237ab43973f198
#: ../../ref/contrib/gis/geoquerysets.txt:52
msgid "bboverlaps"
msgstr ""

# ce64964d9d1f44498d50f3083d59fd60
#: ../../ref/contrib/gis/geoquerysets.txt:56
msgid ""
"Tests if the geometry field's bounding box overlaps the lookup geometry's "
"bounding box."
msgstr ""

# d5d06c15d60a4dedba4fa235a6997a2d
#: ../../ref/contrib/gis/geoquerysets.txt:66
msgid "``poly && geom``"
msgstr ""

# 8393223877464bac95b319511caf3f53
#: ../../ref/contrib/gis/geoquerysets.txt:67
msgid "``MBROverlaps(poly, geom)``"
msgstr ""

# f4946ab93e7c48c5bad0ff0b91c4154e
#: ../../ref/contrib/gis/geoquerysets.txt:68
msgid "``MbrOverlaps(poly, geom)``"
msgstr ""

# 3169467956cc48c786489c99f29bff6a
#: ../../ref/contrib/gis/geoquerysets.txt:74
msgid "contained"
msgstr ""

# c1bef9a3bcb548a190002e38c027293b
#: ../../ref/contrib/gis/geoquerysets.txt:78
msgid ""
"Tests if the geometry field's bounding box is completely contained by the "
"lookup geometry's bounding box."
msgstr ""

# 933a2e9fa2204c92a4741e6c1968c285
#: ../../ref/contrib/gis/geoquerysets.txt:88
msgid "``poly @ geom``"
msgstr ""

# 323f85181cde49ada6fa9fcb7c17c66e
# f68d0f0cc16f42a78e51ff14f959d390
#: ../../ref/contrib/gis/geoquerysets.txt:89
#: ../../ref/contrib/gis/geoquerysets.txt:356
msgid "``MBRWithin(poly, geom)``"
msgstr ""

# 50a4385cb52e4d2e9365e878a2e337ea
#: ../../ref/contrib/gis/geoquerysets.txt:90
msgid "``MbrWithin(poly, geom)``"
msgstr ""

# a9ef8f1600b14555be6ad8b0b8c05ee1
# 0e1de169b92046d1bf5cf91455de69ad
#: ../../ref/contrib/gis/geoquerysets.txt:96
#: ../../ref/models/querysets.txt:1767
msgid "contains"
msgstr ""

# a045113b0c90426cb31da12bb5171746
# 61ec462db9f948fc8d6c2d06befd3f58
# 98fb543ff174441eb218aca3b6892774
# 6d2649a389da4cceb3c48fc4747e2ac5
# d4c81fa0f06e4071aaec73c79d7341c5
# 4896dc7a1a9f407692635f8f18c915af
# b2f154d79ac5473ba51c98b14abf840b
# 68cfde1c54c448eb87280e505b555329
#: ../../ref/contrib/gis/geoquerysets.txt:98
#: ../../ref/contrib/gis/geoquerysets.txt:206
#: ../../ref/contrib/gis/geoquerysets.txt:226
#: ../../ref/contrib/gis/geoquerysets.txt:234
#: ../../ref/contrib/gis/geoquerysets.txt:241
#: ../../ref/contrib/gis/geoquerysets.txt:263
#: ../../ref/contrib/gis/geoquerysets.txt:322
#: ../../ref/contrib/gis/geoquerysets.txt:344
msgid "*Availability*: PostGIS, Oracle, MySQL, SpatiaLite"
msgstr ""

# 5ae8d639ab364ace9e01de4533a91fce
#: ../../ref/contrib/gis/geoquerysets.txt:100
msgid "Tests if the geometry field spatially contains the lookup geometry."
msgstr ""

# 25d8aee625d94a078807ca59b3824adc
#: ../../ref/contrib/gis/geoquerysets.txt:109
msgid "``ST_Contains(poly, geom)``"
msgstr ""

# 94887a521b9d40dd95aceccc9345e0c2
#: ../../ref/contrib/gis/geoquerysets.txt:110
msgid "``SDO_CONTAINS(poly, geom)``"
msgstr ""

# 7161ed48cadf4cb3a07382d7f80ea0bd
#: ../../ref/contrib/gis/geoquerysets.txt:112
msgid "``Contains(poly, geom)``"
msgstr ""

# ec33a9106ff64bcc98c5d13cf6a469ec
#: ../../ref/contrib/gis/geoquerysets.txt:118
msgid "contains_properly"
msgstr ""

# d5dda5ff043a4863ac4abc46797b0d8a
# 9681af1fbe634a539c8e886242d02ae8
# a3d7493a9c37489d8a1782d36888c49d
# f76b8a036193412cb59ca9cab1fd5a2f
# b0f11075c872492cb36fc7da590c6dbc
# e78dc4f6b2474574bfeae2a3a8e3b08a
# b39899d694094efbb5face93c9aad625
# b22d97fd738943f9a9e385934c49ec9b
# 619c6f0a3e93425db0412c6a096d2308
# a34028bafe8f4173be577cf8cda14cea
# 7ad8e576531f4d9db2070ba3e9946ebf
# 610fcd61f606413b858afcd393d2e091
# 088e97b0f1eb44d5b903307088600b30
# 9e8a349405f44b53bf786e830fb1c6e5
#: ../../ref/contrib/gis/geoquerysets.txt:120
#: ../../ref/contrib/gis/geoquerysets.txt:366
#: ../../ref/contrib/gis/geoquerysets.txt:384
#: ../../ref/contrib/gis/geoquerysets.txt:402
#: ../../ref/contrib/gis/geoquerysets.txt:421
#: ../../ref/contrib/gis/geoquerysets.txt:439
#: ../../ref/contrib/gis/geoquerysets.txt:457
#: ../../ref/contrib/gis/geoquerysets.txt:475
#: ../../ref/contrib/gis/geoquerysets.txt:493
#: ../../ref/contrib/gis/geoquerysets.txt:804
#: ../../ref/contrib/gis/geoquerysets.txt:1066
#: ../../ref/contrib/gis/geoquerysets.txt:1105
#: ../../ref/contrib/gis/geoquerysets.txt:1134
#: ../../ref/contrib/gis/geoquerysets.txt:1150
msgid "*Availability*: PostGIS"
msgstr ""

# 6d858f3910f940b1b15a861a64a5b992
#: ../../ref/contrib/gis/geoquerysets.txt:122
msgid ""
"Returns true if the lookup geometry intersects the interior of the geometry "
"field, but not the boundary (or exterior). [#fncontainsproperly]_"
msgstr ""

# 250c9547647249329d8c942c0c802efc
#: ../../ref/contrib/gis/geoquerysets.txt:127
msgid "Requires PostGIS 1.4 and above."
msgstr ""

# 8f5ee072e0ee4bbd8bb39c92dc9e4191
#: ../../ref/contrib/gis/geoquerysets.txt:136
msgid "``ST_ContainsProperly(poly, geom)``"
msgstr ""

# 385ed9546bb04a69a65e5bf4881d2a18
#: ../../ref/contrib/gis/geoquerysets.txt:142
msgid "coveredby"
msgstr ""

# 3a552b24549e40628392e8abb3256b55
# be498ce90eb841b2ba3a797b8866a603
# 7d4443fd49084bc286f1c4465472cb9d
# 1d84903e953f441aa4cb43d88c0296d0
#: ../../ref/contrib/gis/geoquerysets.txt:144
#: ../../ref/contrib/gis/geoquerysets.txt:165
#: ../../ref/contrib/gis/geoquerysets.txt:815
#: ../../ref/contrib/gis/geoquerysets.txt:1118
msgid "*Availability*: PostGIS, Oracle"
msgstr ""

# 607b4ad96d654aa3baabdf53f9c8bb96
#: ../../ref/contrib/gis/geoquerysets.txt:146
msgid ""
"Tests if no point in the geometry field is outside the lookup geometry. "
"[#fncovers]_"
msgstr ""

# e03aa4bb540d4b518b7bd6ecb3fd4599
#: ../../ref/contrib/gis/geoquerysets.txt:156
msgid "``ST_CoveredBy(poly, geom)``"
msgstr ""

# 64c718943da8443f8d98bcc44927a174
#: ../../ref/contrib/gis/geoquerysets.txt:157
msgid "``SDO_COVEREDBY(poly, geom)``"
msgstr ""

# 7f8e11db6f6d4efe81f2465879fb8380
#: ../../ref/contrib/gis/geoquerysets.txt:163
msgid "covers"
msgstr ""

# 76ca8e77df034824bc988e7af42f90ee
#: ../../ref/contrib/gis/geoquerysets.txt:167
msgid ""
"Tests if no point in the lookup geometry is outside the geometry field. "
"[#fncovers]_"
msgstr ""

# 312d16065e02427289d90f8afebdf624
#: ../../ref/contrib/gis/geoquerysets.txt:177
msgid "``ST_Covers(poly, geom)``"
msgstr ""

# b8b311fe0c7245718c4fb02a5df04556
#: ../../ref/contrib/gis/geoquerysets.txt:178
msgid "``SDO_COVERS(poly, geom)``"
msgstr ""

# 6912f9da2bff42cabe95ffd4d8e36ea4
#: ../../ref/contrib/gis/geoquerysets.txt:184
msgid "crosses"
msgstr ""

# 0d389ad66ee74dc1b01ae432835908bd
# 5e89b00d64674ba7b65e011137b5f993
# 69015ea05dfd46598097badfc9c4cfd0
# db4881475fef4b6eb51fd3f4e920bd91
# cb4efd26f97a42d2850b09e200bdc38b
# bf5ef2eed3e84e5c8c2535fec50a86c2
# 1a7316ac379a4239862f0351e6abab84
#: ../../ref/contrib/gis/geoquerysets.txt:186
#: ../../ref/contrib/gis/geoquerysets.txt:780
#: ../../ref/contrib/gis/geoquerysets.txt:825
#: ../../ref/contrib/gis/geoquerysets.txt:880
#: ../../ref/contrib/gis/geoquerysets.txt:950
#: ../../ref/contrib/gis/geoquerysets.txt:1011
#: ../../ref/contrib/gis/geoquerysets.txt:1039
msgid "*Availability*: PostGIS, SpatiaLite"
msgstr ""

# 08172512cfc8482a9042752c83328c17
#: ../../ref/contrib/gis/geoquerysets.txt:188
msgid "Tests if the geometry field spatially crosses the lookup geometry."
msgstr ""

# 4c699b67dd594202b3792d7e2a9ae723
#: ../../ref/contrib/gis/geoquerysets.txt:197
msgid "``ST_Crosses(poly, geom)``"
msgstr ""

# e6b8aa5e25624744aeaf55cd6d659f25
#: ../../ref/contrib/gis/geoquerysets.txt:198
msgid "``Crosses(poly, geom)``"
msgstr ""

# 37d18eb442224497a7ba86c8fcc15eef
#: ../../ref/contrib/gis/geoquerysets.txt:204
msgid "disjoint"
msgstr ""

# 078d491b1db54c73b35c0f4e2099aec9
#: ../../ref/contrib/gis/geoquerysets.txt:208
msgid ""
"Tests if the geometry field is spatially disjoint from the lookup geometry."
msgstr ""

# 9b59ae1c12194b45a16b2b3c498dd374
#: ../../ref/contrib/gis/geoquerysets.txt:217
msgid "``ST_Disjoint(poly, geom)``"
msgstr ""

# fe06dbe3c2c044ad9bc0dd98fdf46d6c
#: ../../ref/contrib/gis/geoquerysets.txt:218
msgid "``SDO_GEOM.RELATE(poly, 'DISJOINT', geom, 0.05)``"
msgstr ""

# 79bb619cc6204f209b557c21ad30aef1
#: ../../ref/contrib/gis/geoquerysets.txt:219
msgid "``MBRDisjoint(poly, geom)``"
msgstr ""

# 66530ef22e35416e9bd4917d1bf92b7b
#: ../../ref/contrib/gis/geoquerysets.txt:220
msgid "``Disjoint(poly, geom)``"
msgstr ""

# f586e25e608643d490e3ddda6edf5b55
#: ../../ref/contrib/gis/geoquerysets.txt:224
msgid "equals"
msgstr ""

# 90fa1a5215d747ad82335eff667d9471
#: ../../ref/contrib/gis/geoquerysets.txt:232
msgid "exact, same_as"
msgstr ""

# dabdb6dce53446dda1bbf81a6926ec95
#: ../../ref/contrib/gis/geoquerysets.txt:239
msgid "intersects"
msgstr ""

# d5fdaca4e0ac41e5a48f748debf2e539
#: ../../ref/contrib/gis/geoquerysets.txt:243
msgid "Tests if the geometry field spatially intersects the lookup geometry."
msgstr ""

# 92d0412c4b8445b8b2a0e3a9e724e1c9
#: ../../ref/contrib/gis/geoquerysets.txt:252
msgid "``ST_Intersects(poly, geom)``"
msgstr ""

# 6b421df5620b4076a4c4d4c63fec117a
#: ../../ref/contrib/gis/geoquerysets.txt:253
msgid "``SDO_OVERLAPBDYINTERSECT(poly, geom)``"
msgstr ""

# 26cdc74a0e974bbcbffa568de86fd2e9
#: ../../ref/contrib/gis/geoquerysets.txt:254
msgid "``MBRIntersects(poly, geom)``"
msgstr ""

# e629c856ddb742928fa52ad3c83f6f65
#: ../../ref/contrib/gis/geoquerysets.txt:255
msgid "``Intersects(poly, geom)``"
msgstr ""

# 23ce089698254050815048855b0d58e2
#: ../../ref/contrib/gis/geoquerysets.txt:261
msgid "overlaps"
msgstr ""

# 5d40cec5bc034e63b2792d189f81c1b1
#: ../../ref/contrib/gis/geoquerysets.txt:268
msgid "relate"
msgstr ""

# 0c635e51dd28450b96ea96218d4c962a
#: ../../ref/contrib/gis/geoquerysets.txt:272
msgid ""
"Tests if the geometry field is spatially related to the lookup geometry by "
"the values given in the given pattern.  This lookup requires a tuple "
"parameter, ``(geom, pattern)``; the form of ``pattern`` will depend on the "
"spatial backend:"
msgstr ""

# 6efddd71a83c4e99b09cb2acb9e979a3
#: ../../ref/contrib/gis/geoquerysets.txt:277
msgid "PostGIS & SpatiaLite"
msgstr ""

# 0036d628cfc7420a9e6d3626f0f9ef85
#: ../../ref/contrib/gis/geoquerysets.txt:278
msgid ""
"On these spatial backends the intersection pattern is a string comprising "
"nine characters, which  define intersections between  the interior, "
"boundary, and exterior of the geometry field and the lookup geometry. The "
"intersection pattern matrix may only use the following characters: ``1``, "
"``2``, ``T``, ``F``, or ``*``.  This lookup type allows users to \"fine tune"
"\" a specific geometric relationship consistent with the DE-9IM model. "
"[#fnde9im]_"
msgstr ""

# 7cb611c3ccfa455880243e0433393897
#: ../../ref/contrib/gis/geoquerysets.txt:291
msgid "PostGIS SQL equivalent::"
msgstr ""

# 5e13831eec374943b206fbebf25f7de7
#: ../../ref/contrib/gis/geoquerysets.txt:295
msgid "SpatiaLite SQL equivalent::"
msgstr ""

# bafdd22eac2743c18f26ffdc588dad29
#: ../../ref/contrib/gis/geoquerysets.txt:302
msgid ""
"Here the relation pattern is comprised at least one of the nine relation "
"strings: ``TOUCH``, ``OVERLAPBDYDISJOINT``, ``OVERLAPBDYINTERSECT``, "
"``EQUAL``, ``INSIDE``, ``COVEREDBY``, ``CONTAINS``, ``COVERS``, ``ON``, and "
"``ANYINTERACT``.   Multiple strings may be combined with the logical Boolean "
"operator OR, for example, ``'inside+touch'``. [#fnsdorelate]_  The relation "
"strings are case-insensitive."
msgstr ""

# 661616d2f00f4612b35ca6829576773f
#: ../../ref/contrib/gis/geoquerysets.txt:313
msgid "Oracle SQL equivalent::"
msgstr ""

# 13d7545b6b25467dac43c6e0503c8b08
#: ../../ref/contrib/gis/geoquerysets.txt:320
msgid "touches"
msgstr ""

# c6b3f1fbeaab4fa29ca87a0065743260
#: ../../ref/contrib/gis/geoquerysets.txt:324
msgid "Tests if the geometry field spatially touches the lookup geometry."
msgstr ""

# 813ce761ce4a4f3cb109f624650f33d7
#: ../../ref/contrib/gis/geoquerysets.txt:333
msgid "``ST_Touches(poly, geom)``"
msgstr ""

# e1a2eb96a13a4f6eb43035c0450f1e10
#: ../../ref/contrib/gis/geoquerysets.txt:334
msgid "``MBRTouches(poly, geom)``"
msgstr ""

# f9865e2796114ce08f2292e626e7bca1
#: ../../ref/contrib/gis/geoquerysets.txt:335
msgid "``SDO_TOUCH(poly, geom)``"
msgstr ""

# 1f3d3cbff44c43b691232b625de47461
#: ../../ref/contrib/gis/geoquerysets.txt:336
msgid "``Touches(poly, geom)``"
msgstr ""

# 608fc62c91b94c818ac3c2472fd0372a
#: ../../ref/contrib/gis/geoquerysets.txt:342
msgid "within"
msgstr ""

# 95eed68062df46ceaa4b0471bd9314aa
#: ../../ref/contrib/gis/geoquerysets.txt:346
msgid "Tests if the geometry field is spatially within the lookup geometry."
msgstr ""

# 6e9a420f2e5c45e3bb9dc5157b9c8420
#: ../../ref/contrib/gis/geoquerysets.txt:355
msgid "``ST_Within(poly, geom)``"
msgstr ""

# d17e018932d94e3b8d4d9bf8098b65e1
#: ../../ref/contrib/gis/geoquerysets.txt:357
msgid "``SDO_INSIDE(poly, geom)``"
msgstr ""

# 0573ff9eb7b54e57804294379a54132f
#: ../../ref/contrib/gis/geoquerysets.txt:358
msgid "``Within(poly, geom)``"
msgstr ""

# 67be662b4d2d4641887e81b905e21c68
#: ../../ref/contrib/gis/geoquerysets.txt:364
msgid "left"
msgstr ""

# b15b1bf7eac0400c9e5519518dbd296b
#: ../../ref/contrib/gis/geoquerysets.txt:368
msgid ""
"Tests if the geometry field's bounding box is strictly to the left of the "
"lookup geometry's bounding box."
msgstr ""

# 8206b84e2656487da3740c88814568f1
# 65689c6a410d4ad581ea3b12c125bd79
# 113c8642e9aa4aada5aac723b51af4c2
# fdd0dbbb5d104331a2c6f2ed613c040c
# 0f86321b674f43079994e1b7cbb178a0
# 5e3cf3c273b240bdb8fc7d692d25db40
# da5b9badaf6c41d59007f14cd3d40a17
# 7bb30abfe0474fc09a4f306956b55d91
#: ../../ref/contrib/gis/geoquerysets.txt:375
#: ../../ref/contrib/gis/geoquerysets.txt:393
#: ../../ref/contrib/gis/geoquerysets.txt:411
#: ../../ref/contrib/gis/geoquerysets.txt:430
#: ../../ref/contrib/gis/geoquerysets.txt:448
#: ../../ref/contrib/gis/geoquerysets.txt:466
#: ../../ref/contrib/gis/geoquerysets.txt:484
#: ../../ref/contrib/gis/geoquerysets.txt:502
msgid "PostGIS equivalent::"
msgstr ""

# 9e1637a2ff1345ffb3f91b16402333fe
#: ../../ref/contrib/gis/geoquerysets.txt:382
msgid "right"
msgstr ""

# 6f00fc2312cc4e81be48c8af9e4dc238
#: ../../ref/contrib/gis/geoquerysets.txt:386
msgid ""
"Tests if the geometry field's bounding box is strictly to the right of the "
"lookup geometry's bounding box."
msgstr ""

# 7686c6f80d2a4840aa152dba44846170
#: ../../ref/contrib/gis/geoquerysets.txt:400
msgid "overlaps_left"
msgstr ""

# 15dc7d222d4e465bb93d74cdc1d4f481
#: ../../ref/contrib/gis/geoquerysets.txt:404
msgid ""
"Tests if the geometry field's bounding box overlaps or is to the left of the "
"lookup geometry's bounding box."
msgstr ""

# 3a480655def940c8a46089fc87aea503
#: ../../ref/contrib/gis/geoquerysets.txt:419
msgid "overlaps_right"
msgstr ""

# 56691a28395d49a3973c4348663f5423
#: ../../ref/contrib/gis/geoquerysets.txt:423
msgid ""
"Tests if the geometry field's bounding box overlaps or is to the right of "
"the lookup geometry's bounding box."
msgstr ""

# 7e1c8d564e234e2ea756093f31877166
#: ../../ref/contrib/gis/geoquerysets.txt:437
msgid "overlaps_above"
msgstr ""

# f94d19a4b3664b13bd4d746ff35a25b1
#: ../../ref/contrib/gis/geoquerysets.txt:441
msgid ""
"Tests if the geometry field's bounding box overlaps or is above the lookup "
"geometry's bounding box."
msgstr ""

# 2e32f5da872547e19518319d5d20d91c
#: ../../ref/contrib/gis/geoquerysets.txt:455
msgid "overlaps_below"
msgstr ""

# 97c5eb4dcbcd434bb1a74c7025f42aab
#: ../../ref/contrib/gis/geoquerysets.txt:459
msgid ""
"Tests if the geometry field's bounding box overlaps or is below the lookup "
"geometry's bounding box."
msgstr ""

# b1b0c80694844563a835435471911a42
#: ../../ref/contrib/gis/geoquerysets.txt:473
msgid "strictly_above"
msgstr ""

# 849df60fd4fb4a809245e6f4490c9853
# 20078bb351534c8fb79df696b3c50c41
#: ../../ref/contrib/gis/geoquerysets.txt:477
#: ../../ref/contrib/gis/geoquerysets.txt:495
msgid ""
"Tests if the geometry field's bounding box is strictly above the lookup "
"geometry's bounding box."
msgstr ""

# e1fb37f0277f406c8d7c167e40eca893
#: ../../ref/contrib/gis/geoquerysets.txt:491
msgid "strictly_below"
msgstr ""

# 710992fac31a4c5190fee629ead9b2eb
#: ../../ref/contrib/gis/geoquerysets.txt:514
msgid ""
"For an overview on performing distance queries, please refer to the :ref:"
"`distance queries introduction <distance-queries>`."
msgstr ""

# a4f4ad3ae9844b28bbb8d2d965db557d
#: ../../ref/contrib/gis/geoquerysets.txt:517
msgid "Distance lookups take the following form::"
msgstr ""

# 34eac7c12c69454980e8fc1c4c354afd
#: ../../ref/contrib/gis/geoquerysets.txt:521
msgid ""
"The value passed into a distance lookup is a tuple; the first two values are "
"mandatory, and are the geometry to calculate distances to, and a distance "
"value (either a number in units of the field or a :class:`~django.contrib."
"gis.measure.Distance` object).  On every distance lookup but :lookup:"
"`dwithin`, an optional third element, ``'spheroid'``, may be included to "
"tell GeoDjango to use the more accurate spheroid distance calculation "
"functions on fields with a geodetic coordinate system (e.g., "
"``ST_Distance_Spheroid`` would be used instead of ``ST_Distance_Sphere``)."
msgstr ""

# 876e123181b14ae48af16318952752da
#: ../../ref/contrib/gis/geoquerysets.txt:534
msgid "distance_gt"
msgstr ""

# 3d85d92f1fec4101aeb24e1dcc525041
#: ../../ref/contrib/gis/geoquerysets.txt:536
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is greater than the given distance value."
msgstr ""

# 9041aea8cc924e61bd8b905346b7e0ff
#: ../../ref/contrib/gis/geoquerysets.txt:546
msgid "``ST_Distance(poly, geom) > 5``"
msgstr ""

# 9adc9b8c111d4bd1b1bcc5552ffc624b
#: ../../ref/contrib/gis/geoquerysets.txt:547
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) > 5``"
msgstr ""

# 5a7f1d9c70984d3d96658e68c5e9801b
#: ../../ref/contrib/gis/geoquerysets.txt:548
msgid "``Distance(poly, geom) > 5``"
msgstr ""

# 3f19b4f879e9471f92936704fed80595
#: ../../ref/contrib/gis/geoquerysets.txt:554
msgid "distance_gte"
msgstr ""

# 1069b10887c0415990dc397e3f3fb730
#: ../../ref/contrib/gis/geoquerysets.txt:556
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is greater than or equal to the given distance value."
msgstr ""

# 4b9d57ff8edc4f73ae73d6aa19203e2f
#: ../../ref/contrib/gis/geoquerysets.txt:566
msgid "``ST_Distance(poly, geom) >= 5``"
msgstr ""

# f640caa78a664725aba382e2c1122069
#: ../../ref/contrib/gis/geoquerysets.txt:567
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) >= 5``"
msgstr ""

# 7b6cd14e1105405d88cf8a4235369682
#: ../../ref/contrib/gis/geoquerysets.txt:568
msgid "``Distance(poly, geom) >= 5``"
msgstr ""

# 97c44484e1454444847b07a44dc555a9
#: ../../ref/contrib/gis/geoquerysets.txt:574
msgid "distance_lt"
msgstr ""

# 6b413f59feb646e6ae370a7b60926ee1
#: ../../ref/contrib/gis/geoquerysets.txt:576
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is less than the given distance value."
msgstr ""

# a31c372c9f6a480c80f5e9d43d134ae2
#: ../../ref/contrib/gis/geoquerysets.txt:586
msgid "``ST_Distance(poly, geom) < 5``"
msgstr ""

# a7cbb5c8a8e24b6fb1ab9e72d1e2a94b
#: ../../ref/contrib/gis/geoquerysets.txt:587
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) < 5``"
msgstr ""

# 188cd3c0bcf644c8aa8bd942826dd2cf
#: ../../ref/contrib/gis/geoquerysets.txt:588
msgid "``Distance(poly, geom) < 5``"
msgstr ""

# e648a4fcfbbb4ee39182ef6c8c007f3e
#: ../../ref/contrib/gis/geoquerysets.txt:594
msgid "distance_lte"
msgstr ""

# 53677425399e4260ba2ab07a2bbb33e1
#: ../../ref/contrib/gis/geoquerysets.txt:596
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry is less than or equal to the given distance value."
msgstr ""

# e4badc88f95741deba55c24d0dfc136d
#: ../../ref/contrib/gis/geoquerysets.txt:606
msgid "``ST_Distance(poly, geom) <= 5``"
msgstr ""

# d2d01db9ee214cc69947685c5dc4ba97
#: ../../ref/contrib/gis/geoquerysets.txt:607
msgid "``SDO_GEOM.SDO_DISTANCE(poly, geom, 0.05) <= 5``"
msgstr ""

# 025c0b7e684b4446ae9f89553613fe0b
#: ../../ref/contrib/gis/geoquerysets.txt:608
msgid "``Distance(poly, geom) <= 5``"
msgstr ""

# 797836d4aa174deb8dd49999ef571807
#: ../../ref/contrib/gis/geoquerysets.txt:614
msgid "dwithin"
msgstr ""

# 2091969f1cb24bd8a2375654d8fc2fb2
#: ../../ref/contrib/gis/geoquerysets.txt:616
msgid ""
"Returns models where the distance to the geometry field from the lookup "
"geometry are within the given distance from one another."
msgstr ""

# 5a08780bc60145cf99e2224eaaf8d6e3
#: ../../ref/contrib/gis/geoquerysets.txt:626
msgid "``ST_DWithin(poly, geom, 5)``"
msgstr ""

# 632901a80cee415a90a21398f13f3661
#: ../../ref/contrib/gis/geoquerysets.txt:627
msgid "``SDO_WITHIN_DISTANCE(poly, geom, 5)``"
msgstr ""

# 5460c4b02f8c4b5e8ed39cf1938f243b
#: ../../ref/contrib/gis/geoquerysets.txt:632
msgid "This lookup is not available on SpatiaLite."
msgstr ""

# 0a8012a82dea4c33b91b2060a35fabff
#: ../../ref/contrib/gis/geoquerysets.txt:640
msgid ""
"``GeoQuerySet`` methods specify that a spatial operation be performed on "
"each patial operation on each geographic field in the queryset and store its "
"output in a new attribute on the model (which is generally the name of the "
"``GeoQuerySet`` method)."
msgstr ""

# 9f69a8d309e5440085ea16f7b0ab27cb
#: ../../ref/contrib/gis/geoquerysets.txt:645
msgid ""
"There are also aggregate ``GeoQuerySet`` methods which return a single value "
"instead of a queryset.  This section will describe the API and availability "
"of every ``GeoQuerySet`` method available in GeoDjango."
msgstr ""

# 1eeda1833db14462a32a9c6d49313d7d
#: ../../ref/contrib/gis/geoquerysets.txt:651
msgid ""
"What methods are available depend on your spatial backend.  See the :ref:"
"`compatibility table <geoqueryset-method-compatibility>` for more details."
msgstr ""

# 6a387f53566548d2b7f94da63349fb2b
#: ../../ref/contrib/gis/geoquerysets.txt:655
msgid ""
"With a few exceptions, the following keyword arguments may be used with all "
"``GeoQuerySet`` methods:"
msgstr ""

# 959d450279824d80b2e94b183740e747
# 6e48ae8e0a204c44be9184cc24026fbc
# fcb5fa5dabb84f65b68607444287fffc
# ea4e978d2dcf4affa15cd829c088ae6c
# f8800140a5974afdb2a05a43892ff564
# 9795e44820a54e11af171d5e23854715
#: ../../ref/contrib/gis/geoquerysets.txt:659
#: ../../ref/contrib/gis/geoquerysets.txt:959
#: ../../ref/contrib/gis/geoquerysets.txt:992
#: ../../ref/contrib/gis/geoquerysets.txt:1025
#: ../../ref/contrib/gis/geoquerysets.txt:1045
#: ../../ref/contrib/gis/geoquerysets.txt:1183
msgid "Keyword Argument"
msgstr ""

# be6731a5e2ef4bdcb74a40640bb30e0c
#: ../../ref/contrib/gis/geoquerysets.txt:661
msgid "``field_name``"
msgstr ""

# a8b21454eb7d40e9959ba7e7b06a8e84
#: ../../ref/contrib/gis/geoquerysets.txt:661
msgid ""
"By default, ``GeoQuerySet`` methods use the first geographic field "
"encountered in the model.  This keyword should be used to specify another "
"geographic field (e.g., ``field_name='point2'``) when there are multiple "
"geographic fields in a model."
msgstr ""

# 469cc6453998424ba8b082917ab30795
#: ../../ref/contrib/gis/geoquerysets.txt:667
msgid ""
"On PostGIS, the ``field_name`` keyword may also be used on geometry fields "
"in models that are related via a ``ForeignKey`` relation (e.g., "
"``field_name='related__point'``)."
msgstr ""

# 961238ba60b1420aa93521dcbc40f2f7
#: ../../ref/contrib/gis/geoquerysets.txt:672
msgid "``model_att``"
msgstr ""

# f84d21ef0cda476da63c5a418f7461c2
#: ../../ref/contrib/gis/geoquerysets.txt:672
msgid ""
"By default, ``GeoQuerySet`` methods typically attach their output in an "
"attribute with the same name as the ``GeoQuerySet`` method.  Setting this "
"keyword with the desired attribute name will override this default "
"behavior.  For example, ``qs = Zipcode.objects.centroid(model_att='c')`` "
"will attach the centroid of the ``Zipcode`` geometry field in a ``c`` "
"attribute on every model rather than in a ``centroid`` attribute."
msgstr ""

# 56dfacad58f54f158ea0556710da670d
#: ../../ref/contrib/gis/geoquerysets.txt:682
msgid ""
"This keyword is required if a method name clashes with an existing "
"``GeoQuerySet`` method -- if you wanted to use the ``area()`` method on "
"model with a ``PolygonField`` named ``area``, for example."
msgstr ""

# b95636439d704463918ac79cb422dbef
#: ../../ref/contrib/gis/geoquerysets.txt:690
msgid "Measurement"
msgstr ""

# dfb19bf3df1e40e793a3382bfbd56818
#: ../../ref/contrib/gis/geoquerysets.txt:694
msgid "``area``"
msgstr ""

# 0d26e66bc3b24e289a56dc50a58c9b6c
#: ../../ref/contrib/gis/geoquerysets.txt:698
msgid ""
"Returns the area of the geographic field in an ``area`` attribute on each "
"element of this GeoQuerySet."
msgstr ""

# 77867337b5374da693afc73817bb3011
#: ../../ref/contrib/gis/geoquerysets.txt:702
msgid "``distance``"
msgstr ""

# 246fdec080054644a6f9c6e23aaf100c
#: ../../ref/contrib/gis/geoquerysets.txt:706
msgid ""
"This method takes a geometry as a parameter, and attaches a ``distance`` "
"attribute to every model in the returned queryset that contains the distance "
"(as a :class:`~django.contrib.gis.measure.Distance` object) to the given "
"geometry."
msgstr ""

# 72c0b8b4647c443298a6cc09ab783f62
#: ../../ref/contrib/gis/geoquerysets.txt:710
msgid ""
"In the following example (taken from the `GeoDjango distance tests`__), the "
"distance from the `Tasmanian`__ city of Hobart to every other :class:"
"`PointField` in the ``AustraliaCity`` queryset is calculated::"
msgstr ""

# 76d1c67309c249a086d297346d6de4c0
#: ../../ref/contrib/gis/geoquerysets.txt:730
msgid ""
"Because the ``distance`` attribute is a :class:`~django.contrib.gis.measure."
"Distance` object, you can easily express the value in the units of your "
"choice.  For example, ``city.distance.mi`` is the distance value in miles "
"and ``city.distance.km`` is the distance value in kilometers.  See the :ref:"
"`ref-measure` for usage details and the list of :ref:`supported_units`."
msgstr ""

# 4f90cca302b54a469f3204936350b22a
#: ../../ref/contrib/gis/geoquerysets.txt:741
msgid "``length``"
msgstr ""

# a10e3dc60ba04b3d8e53416bd8cc214e
#: ../../ref/contrib/gis/geoquerysets.txt:745
msgid ""
"Returns the length of the geometry field in a ``length`` attribute (a :class:"
"`~django.contrib.gis.measure.Distance` object) on each model in the queryset."
msgstr ""

# 989b5067060c4581a8e504bf9922ae79
#: ../../ref/contrib/gis/geoquerysets.txt:750
msgid "``perimeter``"
msgstr ""

# 6a45bdef622b4d2297aefe7699e9ac8a
#: ../../ref/contrib/gis/geoquerysets.txt:754
msgid ""
"Returns the perimeter of the geometry field in a ``perimeter`` attribute (a :"
"class:`~django.contrib.gis.measure.Distance` object) on each model in the "
"queryset."
msgstr ""

# 952856a3e59841309d307402ce2615da
#: ../../ref/contrib/gis/geoquerysets.txt:759
msgid "Geometry Relationships"
msgstr ""

# 9a49457ddd0d406397aef20191d3c2a4
#: ../../ref/contrib/gis/geoquerysets.txt:761
msgid ""
"The following methods take no arguments, and attach geometry objects each "
"element of the :class:`GeoQuerySet` that is the result of relationship "
"function evaluated on the geometry field."
msgstr ""

# ec0b33414f7143c6a896dab85ce7463a
#: ../../ref/contrib/gis/geoquerysets.txt:766
msgid "``centroid``"
msgstr ""

# 993a0a3c9cad450893023295acb10e69
#: ../../ref/contrib/gis/geoquerysets.txt:772
msgid ""
"Returns the ``centroid`` value for the geographic field in a ``centroid`` "
"attribute on each element of the ``GeoQuerySet``."
msgstr ""

# b8b0cfa7f364487a8563faa2d7206274
#: ../../ref/contrib/gis/geoquerysets.txt:776
msgid "``envelope``"
msgstr ""

# db1ab3b32c0f419485bdf21fd22516d3
#: ../../ref/contrib/gis/geoquerysets.txt:782
msgid ""
"Returns a geometry representing the bounding box of the geometry field in an "
"``envelope`` attribute on each element of the ``GeoQuerySet``."
msgstr ""

# ef92c46c4e90452b8a72cd4dfd231bfe
#: ../../ref/contrib/gis/geoquerysets.txt:786
msgid "``point_on_surface``"
msgstr ""

# a08cf35dcea842c3bdc1c028fb58f3fc
#: ../../ref/contrib/gis/geoquerysets.txt:792
msgid ""
"Returns a Point geometry guaranteed to lie on the surface of the geometry "
"field in a ``point_on_surface`` attribute on each element of the queryset; "
"otherwise sets with None."
msgstr ""

# 47685f580e6346e39d84feb89bcd686a
#: ../../ref/contrib/gis/geoquerysets.txt:797
msgid "Geometry Editors"
msgstr ""

# e731c6594f194c1f931d767774d28e77
#: ../../ref/contrib/gis/geoquerysets.txt:800
msgid "``force_rhr``"
msgstr ""

# 6f07287564b242aa9756bcbf061d656d
#: ../../ref/contrib/gis/geoquerysets.txt:806
msgid ""
"Returns a modified version of the polygon/multipolygon in which all of the "
"vertices follow the Right-Hand-Rule, and attaches as a ``force_rhr`` "
"attribute on each element of the queryset."
msgstr ""

# 5ddb378b70834ca5a8b195bf88d3312c
#: ../../ref/contrib/gis/geoquerysets.txt:811
msgid "``reverse_geom``"
msgstr ""

# c09f49b92f2343f2a3215a1bea8f2855
#: ../../ref/contrib/gis/geoquerysets.txt:817
msgid ""
"Reverse the coordinate order of the geometry field, and attaches as a "
"``reverse`` attribute on each element of the queryset."
msgstr ""

# 695e70d69e8f4cf498a31c6efa22a440
#: ../../ref/contrib/gis/geoquerysets.txt:821
msgid "``scale``"
msgstr ""

# cef66ca19faf4a619016dc5ebbb74d19
#: ../../ref/contrib/gis/geoquerysets.txt:828
msgid "``snap_to_grid``"
msgstr ""

# 81491b0526cf4b84b55b6e1df5d9052f
#: ../../ref/contrib/gis/geoquerysets.txt:832
msgid ""
"Snap all points of the input geometry to the grid.  How the geometry is "
"snapped to the grid depends on how many numeric (either float, integer, or "
"long) arguments are given."
msgstr ""

# 4791bede713d43e495340b6c1b9c5fea
#: ../../ref/contrib/gis/geoquerysets.txt:837
msgid "Number of Arguments"
msgstr ""

# 9b4fa15bda524fedbf5dad36dd4beac8
# 4dd5bb2fa1924cb8b6cda123d0776cc1
# bd00ffdb68a249cda08b81f5ed306361
#: ../../ref/contrib/gis/geoquerysets.txt:839
#: ../../ref/contrib/gis/geos.txt:198 ../../ref/contrib/gis/geos.txt:882
msgid "1"
msgstr ""

# 0807382b1de542c4ad983b7266800955
#: ../../ref/contrib/gis/geoquerysets.txt:839
msgid "A single size to snap bot the X and Y grids to."
msgstr ""

# f1e9ee1537aa438e82bccbf2b060ca2a
# 6f1eeae490a245bd91ac88dec50a372f
# 1c03cdd3170042e5bc58403562dee888
#: ../../ref/contrib/gis/geoquerysets.txt:840
#: ../../ref/contrib/gis/geos.txt:199 ../../ref/contrib/gis/geos.txt:904
msgid "2"
msgstr ""

# 07a61ffefcee4bc6ab5e20e8271aad0e
#: ../../ref/contrib/gis/geoquerysets.txt:840
msgid "X and Y sizes to snap the grid to."
msgstr ""

# c181de2a4c1c41049b0d899d3292221a
# 0018dfa376c241fd8a35efb52636d777
#: ../../ref/contrib/gis/geoquerysets.txt:841
#: ../../ref/contrib/gis/geos.txt:201
msgid "4"
msgstr ""

# bf46e1a9ec724799805e205b56656a25
#: ../../ref/contrib/gis/geoquerysets.txt:841
msgid "X, Y sizes and the corresponding X, Y origins."
msgstr ""

# b6d637ac63034dc4bd0c014a801ea49a
# 068410fb8f58419d935792edd40a3dc5
#: ../../ref/contrib/gis/geoquerysets.txt:845
#: ../../ref/contrib/gis/layermapping.txt:131
msgid "``transform``"
msgstr ""

# e67ac503c1fb4c79b603ca9595fe0f5f
#: ../../ref/contrib/gis/geoquerysets.txt:851
msgid ""
"The ``transform`` method transforms the geometry field of a model to the "
"spatial reference system specified by the ``srid`` parameter.  If no "
"``srid`` is given, then 4326 (WGS84) is used by default."
msgstr ""

# ecccd9c3a06b41e4ba679d722962f9a1
#: ../../ref/contrib/gis/geoquerysets.txt:857
msgid ""
"Unlike other ``GeoQuerySet`` methods, ``transform`` stores its output \"in-"
"place\".  In other words, no new attribute for the transformed geometry is "
"placed on the models."
msgstr ""

# 7dba703a52304c6dbad587569c10dde3
#: ../../ref/contrib/gis/geoquerysets.txt:863
msgid ""
"What spatial reference system an integer SRID corresponds to may depend on "
"the spatial database used.  In other words, the SRID numbers used for Oracle "
"are not necessarily the same as those used by PostGIS."
msgstr ""

# 3b5e52aab8dd4cf9910fc0d988b9fde7
#: ../../ref/contrib/gis/geoquerysets.txt:877
msgid "``translate``"
msgstr ""

# d4917a34e32f446490909ddff3b27a48
#: ../../ref/contrib/gis/geoquerysets.txt:882
msgid ""
"Translates the geometry field to a new location using the given numeric "
"parameters as offsets."
msgstr ""

# 9d0549ba2c734b3da0d0f68accdde1d4
#: ../../ref/contrib/gis/geoquerysets.txt:886
msgid "Geometry Operations"
msgstr ""

# c751994f09a1450bb20c1ec37e976a52
#: ../../ref/contrib/gis/geoquerysets.txt:889
msgid ""
"The following methods all take a geometry as a parameter and attach a "
"geometry to each element of the ``GeoQuerySet`` that is the result of the "
"operation."
msgstr ""

# 24d42ce2e7f84f31bb5aa465aed266d4
#: ../../ref/contrib/gis/geoquerysets.txt:893
msgid "``difference``"
msgstr ""

# dcb1999a592d4ed9a11b5ae6f21988d8
#: ../../ref/contrib/gis/geoquerysets.txt:897
msgid ""
"Returns the spatial difference of the geographic field with the given "
"geometry in a ``difference`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

# 7f88c7e91b8346b590276596c0622f4e
#: ../../ref/contrib/gis/geoquerysets.txt:903
msgid "``intersection``"
msgstr ""

# 2601fc7d674f43d68496fa0c8651d648
#: ../../ref/contrib/gis/geoquerysets.txt:907
msgid ""
"Returns the spatial intersection of the geographic field with the given "
"geometry in an ``intersection`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

# 400cad75c8c047129adcdd4d1c9d9e35
#: ../../ref/contrib/gis/geoquerysets.txt:912
msgid "``sym_difference``"
msgstr ""

# 75686a4052f54640962f31bfd8a6af7f
#: ../../ref/contrib/gis/geoquerysets.txt:916
msgid ""
"Returns the symmetric difference of the geographic field with the given "
"geometry in a ``sym_difference`` attribute on each element of the "
"``GeoQuerySet``."
msgstr ""

# ef1f7646d6f34058bd48ee378aa17928
#: ../../ref/contrib/gis/geoquerysets.txt:921
msgid "``union``"
msgstr ""

# 69ed4e50038d428183fd54f131c6c025
#: ../../ref/contrib/gis/geoquerysets.txt:925
msgid ""
"Returns the union of the geographic field with the given geometry in an "
"``union`` attribute on each element of the ``GeoQuerySet``."
msgstr ""

# b9e08bd646734c568b126fc3f8754e05
#: ../../ref/contrib/gis/geoquerysets.txt:930
msgid "Geometry Output"
msgstr ""

# 9110b6e41eb64bd68ca3eb9b424491c4
#: ../../ref/contrib/gis/geoquerysets.txt:932
msgid ""
"The following ``GeoQuerySet`` methods will return an attribute that has the "
"value of the geometry field in each model converted to the requested output "
"format."
msgstr ""

# 63c890a9144c47ca9e7bfe5ec09f80a9
#: ../../ref/contrib/gis/geoquerysets.txt:936
msgid "``geohash``"
msgstr ""

# ba5ff510005247cea46b0ce300b4ffda
#: ../../ref/contrib/gis/geoquerysets.txt:940
msgid ""
"Attaches a ``geohash`` attribute to every model the queryset containing the "
"`GeoHash`__ representation of the geometry."
msgstr ""

# e22d409246924fc1b79b927277e398a5
#: ../../ref/contrib/gis/geoquerysets.txt:946
msgid "``geojson``"
msgstr ""

# 46a51cf06cc84c3f8ff0d7ad00066f34
#: ../../ref/contrib/gis/geoquerysets.txt:955
msgid ""
"Attaches a ``geojson`` attribute to every model in the queryset that "
"contains the `GeoJSON`__ representation of the geometry."
msgstr ""

# 210b66cfa4cb448cb19a17a944ef4f1a
# 301396fae8c34cf0844aee66f436e588
# ecb6def35b7949e39831104e907ec217
# 7930d433b3e0421097c7a9e83f392d79
#: ../../ref/contrib/gis/geoquerysets.txt:961
#: ../../ref/contrib/gis/geoquerysets.txt:994
#: ../../ref/contrib/gis/geoquerysets.txt:1027
#: ../../ref/contrib/gis/geoquerysets.txt:1051
msgid "``precision``"
msgstr ""

# aee7ffd02f6c47188c2eadfb53fb9273
#: ../../ref/contrib/gis/geoquerysets.txt:961
msgid ""
"It may be used to specify the number of significant digits for the "
"coordinates in the GeoJSON representation -- the default value is 8."
msgstr ""

# 22db3a0cdb6e4b1f9b15a6047159ac5b
#: ../../ref/contrib/gis/geoquerysets.txt:965
msgid "``crs``"
msgstr ""

# 7f18b0020b304b82af4b98bd683ae950
#: ../../ref/contrib/gis/geoquerysets.txt:965
msgid ""
"Set this to ``True`` if you want the coordinate reference system to be "
"included in the returned GeoJSON."
msgstr ""

# fde5f6a4a7e04d9e9ff108d1031242e3
#: ../../ref/contrib/gis/geoquerysets.txt:969
msgid "``bbox``"
msgstr ""

# 5eea7d21f67b4b699964478d78456265
#: ../../ref/contrib/gis/geoquerysets.txt:969
msgid ""
"Set this to ``True`` if you want the bounding box to be included in the "
"returned GeoJSON."
msgstr ""

# 34c9c2b4657b4cb489f40c86198733fb
#: ../../ref/contrib/gis/geoquerysets.txt:976
msgid "``gml``"
msgstr ""

# 569354e92c4f49459a2c7613bafe1a9f
#: ../../ref/contrib/gis/geoquerysets.txt:982
msgid ""
"Attaches a ``gml`` attribute to every model in the queryset that contains "
"the `Geographic Markup Language (GML)`__ representation of the geometry."
msgstr ""

# 991905726a404756badad242a7ee0952
#: ../../ref/contrib/gis/geoquerysets.txt:994
msgid ""
"This keyword is for PostGIS only.  It may be used to specify the number of "
"significant digits for the coordinates in the GML representation -- the "
"default value is 8."
msgstr ""

# 0365c22e8f2a4538a4e1a6e7d5c91318
#: ../../ref/contrib/gis/geoquerysets.txt:999
msgid "``version``"
msgstr ""

# 88cffa8fb2a247e099336c0e5a52a19b
#: ../../ref/contrib/gis/geoquerysets.txt:999
msgid ""
"This keyword is for PostGIS only.  It may be used to specify the GML version "
"used, and may only be values of 2 or 3.  The default value is 2."
msgstr ""

# 69e969c691b44cc1b83bde7b1df391dd
#: ../../ref/contrib/gis/geoquerysets.txt:1007
msgid "``kml``"
msgstr ""

# 20c77131a0ce4c719a13efc42883a35f
#: ../../ref/contrib/gis/geoquerysets.txt:1013
msgid ""
"Attaches a ``kml`` attribute to every model in the queryset that contains "
"the `Keyhole Markup Language (KML)`__ representation of the geometry fields. "
"It should be noted that the contents of the KML are transformed to WGS84 if "
"necessary."
msgstr ""

# b3f70a7e262a400d8877057647d1c0f6
#: ../../ref/contrib/gis/geoquerysets.txt:1027
msgid ""
"This keyword may be used to specify the number of significant digits for the "
"coordinates in the KML representation -- the default value is 8."
msgstr ""

# 5e1f06e2fc8144f5bcd78abb40cf00ed
#: ../../ref/contrib/gis/geoquerysets.txt:1035
msgid "``svg``"
msgstr ""

# 848bf68178df4735a96fc33494b8fb2b
#: ../../ref/contrib/gis/geoquerysets.txt:1041
msgid ""
"Attaches a ``svg`` attribute to every model in the queryset that contains "
"the `Scalable Vector Graphics (SVG)`__ path data of the geometry fields."
msgstr ""

# 65fe9717f4fc4ebcb37c161e3d2e9c7e
#: ../../ref/contrib/gis/geoquerysets.txt:1047
msgid "``relative``"
msgstr ""

# 2bf07373b2a4411d8b1c65326a364e88
#: ../../ref/contrib/gis/geoquerysets.txt:1047
msgid ""
"If set to ``True``, the path data will be implemented in terms of relative "
"moves.  Defaults to ``False``, meaning that absolute moves are used instead."
msgstr ""

# 67ef460282c04933b3272041c05ed2a4
#: ../../ref/contrib/gis/geoquerysets.txt:1051
msgid ""
"This keyword may be used to specify the number of significant digits for the "
"coordinates in the SVG representation -- the default value is 8."
msgstr ""

# 27f517871ef04435b424bd8333efa06f
#: ../../ref/contrib/gis/geoquerysets.txt:1059
msgid "Miscellaneous"
msgstr ""

# 33800182141549499f3b6a146a99da98
#: ../../ref/contrib/gis/geoquerysets.txt:1062
msgid "``mem_size``"
msgstr ""

# 4f9e8267e15e435bbc3123879232e626
#: ../../ref/contrib/gis/geoquerysets.txt:1068
msgid ""
"Returns the memory size (number of bytes) that the geometry field takes in a "
"``mem_size`` attribute  on each element of the ``GeoQuerySet``."
msgstr ""

# 7615afae9b7d473687330744c33521b7
#: ../../ref/contrib/gis/geoquerysets.txt:1072
msgid "``num_geom``"
msgstr ""

# 963d4b4961b0404cb58691dad911f67a
#: ../../ref/contrib/gis/geoquerysets.txt:1078
msgid ""
"Returns the number of geometries in a ``num_geom`` attribute on each element "
"of the ``GeoQuerySet`` if the geometry field is a collection (e.g., a "
"``GEOMETRYCOLLECTION`` or ``MULTI*`` field); otherwise sets with ``None``."
msgstr ""

# 2072717b3592418280127c904e79e4ca
#: ../../ref/contrib/gis/geoquerysets.txt:1084
msgid "``num_points``"
msgstr ""

# 48262b3045bc4b73b2cfe533fb0db39c
#: ../../ref/contrib/gis/geoquerysets.txt:1090
msgid ""
"Returns the number of points in the first linestring in the geometry field "
"in a ``num_points`` attribute on each element of the ``GeoQuerySet``; "
"otherwise sets with ``None``."
msgstr ""

# 8a875efbc321455f962333f991f28bd2
#: ../../ref/contrib/gis/geoquerysets.txt:1095
msgid "Spatial Aggregates"
msgstr ""

# 0061766c3fda4a7fb8d081faf06389d6
#: ../../ref/contrib/gis/geoquerysets.txt:1098
msgid "Aggregate Methods"
msgstr ""

# f36731d341d8463ab83f3b379879a734
#: ../../ref/contrib/gis/geoquerysets.txt:1101
msgid "``collect``"
msgstr ""

# 69046add1fb6452b94d071820b30af8d
#: ../../ref/contrib/gis/geoquerysets.txt:1107
msgid ""
"Returns a ``GEOMETRYCOLLECTION`` or a ``MULTI`` geometry object from the "
"geometry column.  This is analagous to a simplified version of the :meth:"
"`GeoQuerySet.unionagg` method, except it can be several orders of magnitude "
"faster than peforming a union because it simply rolls up geometries into a "
"collection or multi object, not caring about dissolving boundaries."
msgstr ""

# f6625fe31ca245369f168db3d59f33a7
#: ../../ref/contrib/gis/geoquerysets.txt:1114
msgid "``extent``"
msgstr ""

# b5389b5e65d6444d983bdb499f599ed2
#: ../../ref/contrib/gis/geoquerysets.txt:1120
msgid ""
"Returns the extent of the ``GeoQuerySet`` as a four-tuple, comprising the "
"lower left coordinate and the upper right coordinate."
msgstr ""

# dcf38d3ac78f4122ab5d95b815f79901
#: ../../ref/contrib/gis/geoquerysets.txt:1130
msgid "``extent3d``"
msgstr ""

# 2a85659672ff41a89e45e92fb6fe5fca
#: ../../ref/contrib/gis/geoquerysets.txt:1136
msgid ""
"Returns the 3D extent of the ``GeoQuerySet`` as a six-tuple, comprising the "
"lower left coordinate and upper right coordinate."
msgstr ""

# 9d93bc9e90624af2a54bd5b6c83fa298
#: ../../ref/contrib/gis/geoquerysets.txt:1146
msgid "``make_line``"
msgstr ""

# 59b2c933315142feb96ab4d0cb48f9a1
#: ../../ref/contrib/gis/geoquerysets.txt:1152
msgid ""
"Returns a ``LineString`` constructed from the point field geometries in the "
"``GeoQuerySet``.  Currently, ordering the queryset has no effect."
msgstr ""

# 3622ee6925974e3c9f90c65e27f0b06b
#: ../../ref/contrib/gis/geoquerysets.txt:1161
msgid "``unionagg``"
msgstr ""

# edd1d2c2127e4b4d868fa3040f464003
#: ../../ref/contrib/gis/geoquerysets.txt:1167
msgid ""
"This method returns a :class:`~django.contrib.gis.geos.GEOSGeometry` object "
"comprising the union of every geometry in the queryset.  Please note that "
"use of ``unionagg`` is processor intensive and may take a significant amount "
"of time on large querysets."
msgstr ""

# e5828684f6d9475fa6276be9910536e2
#: ../../ref/contrib/gis/geoquerysets.txt:1174
msgid ""
"If the computation time for using this method is too expensive, consider "
"using :meth:`GeoQuerySet.collect` instead."
msgstr ""

# d7b85a0e41504c9692ffdf9e91df284b
#: ../../ref/contrib/gis/geoquerysets.txt:1185
msgid "``tolerance``"
msgstr ""

# 9d82cd34a00949a89d7e8dbf7378fd47
#: ../../ref/contrib/gis/geoquerysets.txt:1185
msgid ""
"This keyword is for Oracle only.  It is for the tolerance value used by the "
"``SDOAGGRTYPE`` procedure; the  `Oracle documentation`__ has more details."
msgstr ""

# ecafd5b7c5b7492cabab9c8b35cc1f54
#: ../../ref/contrib/gis/geoquerysets.txt:1194
msgid "Aggregate Functions"
msgstr ""

# a093061599f44113b845adf1a2c95fb9
#: ../../ref/contrib/gis/geoquerysets.txt:1202
msgid "``Collect``"
msgstr ""

# 5a5553710e5b4204b1be0f4974ef3e4c
#: ../../ref/contrib/gis/geoquerysets.txt:1206
msgid "Returns the same as the :meth:`GeoQuerySet.collect` aggregate method."
msgstr ""

# 5563f37e24794dfeb8cea9d5b7957291
#: ../../ref/contrib/gis/geoquerysets.txt:1209
msgid "``Extent``"
msgstr ""

# 721bfc1cd0314103809a90acf1ab957d
#: ../../ref/contrib/gis/geoquerysets.txt:1213
msgid "Returns the same as the :meth:`GeoQuerySet.extent` aggregate method."
msgstr ""

# d602397b2a924f6fa093c077480d054f
#: ../../ref/contrib/gis/geoquerysets.txt:1216
msgid "``Extent3D``"
msgstr ""

# 0367846879da4a6cbbf13253aa588308
#: ../../ref/contrib/gis/geoquerysets.txt:1220
msgid "Returns the same as the :meth:`GeoQuerySet.extent3d` aggregate method."
msgstr ""

# 95e345d2b4b64b1581bc7476cce3dcfe
#: ../../ref/contrib/gis/geoquerysets.txt:1223
msgid "``MakeLine``"
msgstr ""

# d811ac18d4574e20905e9e51d0abe618
#: ../../ref/contrib/gis/geoquerysets.txt:1227
msgid "Returns the same as the :meth:`GeoQuerySet.make_line` aggregate method."
msgstr ""

# ade1a1a2da834687bf1a00b4f4e57550
#: ../../ref/contrib/gis/geoquerysets.txt:1230
msgid "``Union``"
msgstr ""

# e75fecf19528412aac0d4ec606d78f7a
#: ../../ref/contrib/gis/geoquerysets.txt:1234
msgid "Returns the same as the :meth:`GeoQuerySet.union` aggregate method."
msgstr ""

# f66ff8c020334266afe202413bece5b6
#: ../../ref/contrib/gis/geoquerysets.txt:1237
msgid ""
"*See* `OpenGIS Simple Feature Specification For SQL <http://www.opengis.org/"
"docs/99-049.pdf>`_, at Ch. 2.1.13.2, p. 2-13 (The Dimensionally Extended "
"Nine-Intersection Model)."
msgstr ""

# d682949829b9422492fecb5ce2aef8aa
#: ../../ref/contrib/gis/geoquerysets.txt:1238
msgid ""
"*See* `SDO_RELATE documentation <http://docs.oracle.com/cd/B19306_01/"
"appdev.102/b14255/sdo_operat.htm#sthref845>`_, from Ch. 11 of the Oracle "
"Spatial User's Guide and Manual."
msgstr ""

# 134fc6dd11a641068fb06a01ae6df445
#: ../../ref/contrib/gis/geoquerysets.txt:1239
msgid ""
"For an explanation of this routine, read `Quirks of the \"Contains\" Spatial "
"Predicate <http://lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-"
"covers-spatial.html>`_ by Martin Davis (a PostGIS developer)."
msgstr ""

# 9a141311900f47cf9c2415ed9681c377
#: ../../ref/contrib/gis/geoquerysets.txt:1240
msgid ""
"Refer to the PostGIS ``ST_ContainsProperly`` `documentation <http://postgis."
"refractions.net/documentation/manual-1.4/ST_ContainsProperly.html>`_ for "
"more details."
msgstr ""

# d74096bf412640d6855da00127b9ab01
#: ../../ref/contrib/gis/geos.txt:5
msgid "GEOS API"
msgstr ""

# bdfbbb7897394fcdbd7744af5c35507d
#: ../../ref/contrib/gis/geos.txt:11
msgid "Background"
msgstr ""

# e9a9fab85f0d487688c153da06d6accb
#: ../../ref/contrib/gis/geos.txt:14
msgid "What is GEOS?"
msgstr ""

# 51744de1dcda40babd229f49b7c1d70e
#: ../../ref/contrib/gis/geos.txt:16
msgid ""
"`GEOS`__ stands for **G**\\ eometry **E**\\ ngine - **O**\\ pen **S**\\ "
"ource, and is a C++ library, ported from the  `Java Topology Suite`__.  GEOS "
"implements the OpenGIS `Simple Features for SQL`__ spatial predicate "
"functions and spatial operators. GEOS, now an OSGeo project, was initially "
"developed and maintained by `Refractions Research`__ of Victoria, Canada."
msgstr ""

# 5d4a49b2c4c148e1a8a13975558f5d85
#: ../../ref/contrib/gis/geos.txt:28
msgid "Features"
msgstr ""

# 4220a3c91c644c6c93cb2120cf9b04d7
#: ../../ref/contrib/gis/geos.txt:30
msgid ""
"GeoDjango implements a high-level Python wrapper for the GEOS library, its "
"features include:"
msgstr ""

# 5d9249aaba4a4ad7b81de783fd245cff
#: ../../ref/contrib/gis/geos.txt:33
msgid ""
"A BSD-licensed interface to the GEOS geometry routines, implemented purely "
"in Python using ``ctypes``."
msgstr ""

# 3300ea407cb64fe39c332f27631ac1d3
#: ../../ref/contrib/gis/geos.txt:35
msgid ""
"Loosely-coupled to GeoDjango.  For example, :class:`GEOSGeometry` objects "
"may be used outside of a django project/application.  In other words, no "
"need to have ``DJANGO_SETTINGS_MODULE`` set or use a database, etc."
msgstr ""

# d110edc661ca4a07a5c6db6a064d5c7e
#: ../../ref/contrib/gis/geos.txt:38
msgid "Mutability: :class:`GEOSGeometry` objects may be modified."
msgstr ""

# be63103e594c4f6486aae39b219282d6
#: ../../ref/contrib/gis/geos.txt:39
msgid ""
"Cross-platform and tested; compatible with Windows, Linux, Solaris, and Mac "
"OS X platforms."
msgstr ""

# 53fcc2a78e75489e9db7bf2b214e6541
#: ../../ref/contrib/gis/geos.txt:45
msgid "Tutorial"
msgstr ""

# ec0135d4e3714ab28840d00b3e7c4718
#: ../../ref/contrib/gis/geos.txt:47
msgid ""
"This section contains a brief introduction and tutorial to using :class:"
"`GEOSGeometry` objects."
msgstr ""

# 750ace183d3b404887226351ee84d215
#: ../../ref/contrib/gis/geos.txt:51
msgid "Creating a Geometry"
msgstr ""

# 7edfca58ef234c44a5001f5030ffe656
#: ../../ref/contrib/gis/geos.txt:53
msgid ""
":class:`GEOSGeometry` objects may be created in a few ways.  The first is to "
"simply instantiate the object on some spatial input -- the following are "
"examples of creating the same geometry from WKT, HEX, WKB, and GeoJSON::"
msgstr ""

# 78109e20c4814116be1c1b471f3f9f0c
#: ../../ref/contrib/gis/geos.txt:63
msgid ""
"Another option is to use the constructor for the specific geometry type that "
"you wish to create.  For example, a :class:`Point` object may be created by "
"passing in the X and Y coordinates into its constructor::"
msgstr ""

# 84ee3fe85b064595bd931cfffcd58554
#: ../../ref/contrib/gis/geos.txt:70
msgid ""
"Finally, there are :func:`fromstr` and :func:`fromfile` factory methods, "
"which return a :class:`GEOSGeometry` object from an input string or a file::"
msgstr ""

# 25ce7b238f65474e96cd3e0ec3c69f02
#: ../../ref/contrib/gis/geos.txt:80
msgid "My logs are filled with GEOS-related errors"
msgstr ""

# e42deb85686140718ee0045cf5c830a7
#: ../../ref/contrib/gis/geos.txt:82
msgid ""
"You find many ``TypeError`` or ``AttributeError`` exceptions filling your "
"Web server's log files. This generally means that you are creating GEOS "
"objects at the top level of some of your Python modules. Then, due to a race "
"condition in the garbage collector, your module is garbage collected before "
"the GEOS object. To prevent this, create :class:`GEOSGeometry` objects "
"inside the local scope of your functions/methods."
msgstr ""

# d08a5112e718498ca6d759a5fce0d3ef
#: ../../ref/contrib/gis/geos.txt:90
msgid "Geometries are Pythonic"
msgstr ""

# 43a39550caf74a85b25054adb6e602cb
#: ../../ref/contrib/gis/geos.txt:91
msgid ""
":class:`GEOSGeometry` objects are 'Pythonic', in other words components may "
"be accessed, modified, and iterated over using standard Python conventions. "
"For example, you can iterate over the coordinates in a :class:`Point`::"
msgstr ""

# 0b93d5d2735f4b86a2dfdec81a2cf765
#: ../../ref/contrib/gis/geos.txt:99
msgid ""
"With any geometry object, the :attr:`GEOSGeometry.coords` property may be "
"used to get the geometry coordinates as a Python tuple::"
msgstr ""

# fd852c4c8f0346b09ce2d9ea4e084934
#: ../../ref/contrib/gis/geos.txt:105
msgid ""
"You can get/set geometry components using standard Python indexing "
"techniques.  However, what is returned depends on the geometry type of the "
"object.  For example, indexing on a :class:`LineString` returns a coordinate "
"tuple::"
msgstr ""

# a683b594554c40e994dfcf0e634b73ec
#: ../../ref/contrib/gis/geos.txt:117
msgid ""
"Whereas indexing on a :class:`Polygon` will return the ring (a :class:"
"`LinearRing` object) corresponding to the index::"
msgstr ""

# db07e81560fa4515b08dcb9955400f88
#: ../../ref/contrib/gis/geos.txt:127
msgid ""
"In addition, coordinates/components of the geometry may added or modified, "
"just like a Python list::"
msgstr ""

# 1d01769970cd49cb8cb6cb3d578f4933
#: ../../ref/contrib/gis/geos.txt:138
msgid "Geometry Objects"
msgstr ""

# eb4e1714c9ea42e09a174309335b57ca
#: ../../ref/contrib/gis/geos.txt:141
msgid "``GEOSGeometry``"
msgstr ""

# b71e8918c0364cd1813d587156ddde39
#: ../../ref/contrib/gis/geos.txt:145
msgid "Geometry input value (string or buffer)"
msgstr ""

# 4d518b115245492cb9bf5f5e7fd5d84c
# 35172047b0d44493aad231883d5ecd33
#: ../../ref/contrib/gis/geos.txt:146 ../../ref/contrib/gis/geos.txt:801
msgid "spatial reference identifier"
msgstr ""

# efc1da4f26cf41ce983a44aad837b9c1
#: ../../ref/contrib/gis/geos.txt:149
msgid ""
"This is the base class for all GEOS geometry objects.  It initializes on the "
"given ``geo_input`` argument, and then assumes the proper geometry subclass "
"(e.g., ``GEOSGeometry('POINT(1 1)')`` will create a :class:`Point` object)."
msgstr ""

# bf53ef2bd17e4acca4b12a069743106c
#: ../../ref/contrib/gis/geos.txt:153
msgid ""
"The following input formats, along with their corresponding Python types, "
"are accepted:"
msgstr ""

# 467e2405703d48c092d4509bff23bd00
#: ../../ref/contrib/gis/geos.txt:157
msgid "Format"
msgstr ""

# 98b4d857d08a403abe99316767bc181e
#: ../../ref/contrib/gis/geos.txt:157
msgid "Input Type"
msgstr ""

# 2ef49e969f4b4310b96db89e180d91d6
#: ../../ref/contrib/gis/geos.txt:159
msgid "WKT / EWKT"
msgstr ""

# bb66856852da45cb974c0e9d7066ba29
# 2e962e83faa04b2a8ca33e6701da338a
# de894925090148a0867757d7ea7b417c
#: ../../ref/contrib/gis/geos.txt:159 ../../ref/contrib/gis/geos.txt:160
#: ../../ref/contrib/gis/geos.txt:162
msgid "``str`` or ``unicode``"
msgstr ""

# f8a21706f2424dc69bf9b45a9af1cc4d
#: ../../ref/contrib/gis/geos.txt:160
msgid "HEX / HEXEWKB"
msgstr ""

# e8042cd9e805419b8fc308dc80515016
#: ../../ref/contrib/gis/geos.txt:161
msgid "WKB / EWKB"
msgstr ""

# ab77408645484aefb1decfc4b6cb7d17
#: ../../ref/contrib/gis/geos.txt:161
msgid "``buffer``"
msgstr ""

# fd0bcab7153145dcb83654798c98c39b
#: ../../ref/contrib/gis/geos.txt:162
msgid "GeoJSON"
msgstr ""

# e7a8411789484b27b191f9dbfde177e9
#: ../../ref/contrib/gis/geos.txt:167
msgid ""
"The new 3D/4D WKT notation with an intermediary Z or M (like ``POINT Z (3, "
"4, 5)``) is only supported with GEOS 3.3.0 or later."
msgstr ""

# bdfc5fd739a54b1db6d523d713a81e74
#: ../../ref/contrib/gis/geos.txt:171
msgid "Properties"
msgstr ""

# d1ba0692489d46e3a9d0f8ef70077485
#: ../../ref/contrib/gis/geos.txt:175
msgid "Returns the coordinates of the geometry as a tuple."
msgstr ""

# 9cf2d90ab4f64be388f08e83001c78bd
#: ../../ref/contrib/gis/geos.txt:179
msgid "Returns whether or not the set of points in the geometry is empty."
msgstr ""

# 3be0cad779e040629c56ac17369b7923
#: ../../ref/contrib/gis/geos.txt:183
msgid "Returns a string corresponding to the type of geometry.  For example::"
msgstr ""

# 5139f1549df24d0a995f580ceb085201
#: ../../ref/contrib/gis/geos.txt:191
msgid ""
"Returns the GEOS geometry type identification number.  The following table "
"shows the value for each geometry type:"
msgstr ""

# fd2c3696e3344f129176778b69296580
#: ../../ref/contrib/gis/geos.txt:195
msgid "Geometry"
msgstr ""

# 7d2c6f00eca64db5bb6ddaa7c658b434
#: ../../ref/contrib/gis/geos.txt:195
msgid "ID"
msgstr ""

# c08c8069ff5a477488b01d08ff95222e
#: ../../ref/contrib/gis/geos.txt:197
msgid ":class:`Point`"
msgstr ""

# cd2c837603484205be7f4aed1a3ba135
# d7e88b1a0eeb4fe5a4c8e041d41ba28f
#: ../../ref/contrib/gis/geos.txt:197 ../../ref/contrib/gis/geos.txt:881
msgid "0"
msgstr ""

# 88883e57d4da4144835c939f7873be58
#: ../../ref/contrib/gis/geos.txt:198
msgid ":class:`LineString`"
msgstr ""

# f24f92213f9046ff81d1f9d41193ea16
#: ../../ref/contrib/gis/geos.txt:199
msgid ":class:`LinearRing`"
msgstr ""

# da07aa594bcd406fabc607ab03c19766
#: ../../ref/contrib/gis/geos.txt:200
msgid ":class:`Polygon`"
msgstr ""

# 45e918d996b945e998f86182fa877053
# 014aa0de7461416488bbf88042240273
#: ../../ref/contrib/gis/geos.txt:200 ../../ref/contrib/gis/geos.txt:905
msgid "3"
msgstr ""

# cf833c09bee34c3db6e62b7a76660e36
#: ../../ref/contrib/gis/geos.txt:201
msgid ":class:`MultiPoint`"
msgstr ""

# 5a44fefe871b428fbc53c109c9178316
#: ../../ref/contrib/gis/geos.txt:202
msgid ":class:`MultiLineString`"
msgstr ""

# c028f41d17634b2782b605a319400d4c
#: ../../ref/contrib/gis/geos.txt:202
msgid "5"
msgstr ""

# 0d3c1db5f75f4975b4188743e2ab48e6
#: ../../ref/contrib/gis/geos.txt:203
msgid ":class:`MultiPolygon`"
msgstr ""

# 00c6e3829c0947cc8374821a0809ff92
#: ../../ref/contrib/gis/geos.txt:203
msgid "6"
msgstr ""

# 512d56168e5145eda4302261ffd146c6
#: ../../ref/contrib/gis/geos.txt:204
msgid ":class:`GeometryCollection`"
msgstr ""

# 29d7bac118f14cc5b7062746cf82d477
#: ../../ref/contrib/gis/geos.txt:204
msgid "7"
msgstr ""

# e8d980fa46a04aeebe767cdaa7b46dc9
#: ../../ref/contrib/gis/geos.txt:209
msgid "Returns the number of coordinates in the geometry."
msgstr ""

# c25f2e35a83f45bb9a8583d9a70100ac
#: ../../ref/contrib/gis/geos.txt:213
msgid ""
"Returns the number of geometries in this geometry.  In other words, will "
"return 1 on anything but geometry collections."
msgstr ""

# 063f14b9d0bd4fc1bb46cd3fa2557e49
#: ../../ref/contrib/gis/geos.txt:218
msgid "Returns a boolean indicating whether the geometry is three-dimensional."
msgstr ""

# c881164d94dd413d8cf961da614d9b16
#: ../../ref/contrib/gis/geos.txt:222
msgid "Returns a boolean indicating whether the geometry is a ``LinearRing``."
msgstr ""

# e127f90ff7404d199e7e965f22d7d4f4
#: ../../ref/contrib/gis/geos.txt:226
msgid ""
"Returns a boolean indicating whether the geometry is 'simple'. A geometry is "
"simple if and only if it does not intersect itself (except at boundary "
"points).  For example, a :class:`LineString` object is not simple if it "
"intersects itself. Thus, :class:`LinearRing` and :class`Polygon` objects are "
"always simple because they do cannot intersect themselves, by definition."
msgstr ""

# 567370f391a544279895908ea7c1f863
#: ../../ref/contrib/gis/geos.txt:235
msgid "Returns a boolean indicating whether the geometry is valid."
msgstr ""

# 43171bbd2158410f91a134fbf2673670
#: ../../ref/contrib/gis/geos.txt:239
msgid "Returns a string describing the reason why a geometry is invalid."
msgstr ""

# 8cf30c9df7d54989bf80bced211c392d
#: ../../ref/contrib/gis/geos.txt:243
msgid ""
"Property that may be used to retrieve or set the SRID associated with the "
"geometry.  For example::"
msgstr ""

# 63eab8a2d304441d84ff2e59b390c7f2
#: ../../ref/contrib/gis/geos.txt:254
msgid "Output Properties"
msgstr ""

# f0ddc17498d74e35a3d60739304a5148
#: ../../ref/contrib/gis/geos.txt:256
msgid ""
"The properties in this section export the :class:`GEOSGeometry` object into "
"a different.  This output may be in the form of a string, buffer, or even "
"another object."
msgstr ""

# dfc2c057ddc34a0da9768f97fca20db9
#: ../../ref/contrib/gis/geos.txt:262
msgid ""
"Returns the \"extended\" Well-Known Text of the geometry.  This "
"representation is specific to PostGIS and is a super set of the OGC WKT "
"standard. [#fnogc]_ Essentially the SRID is prepended to the WKT "
"representation, for example ``SRID=4326;POINT(5 23)``."
msgstr ""

# 68da04dac0bc4904a5c270906d11e70d
#: ../../ref/contrib/gis/geos.txt:269
msgid ""
"The output from this property does not include the 3dm, 3dz, and 4d "
"information that PostGIS supports in its EWKT representations."
msgstr ""

# 034e03ff551e4d68808450252733fbcb
#: ../../ref/contrib/gis/geos.txt:274
msgid ""
"Returns the WKB of this Geometry in hexadecimal form.  Please note that the "
"SRID value is not included in this representation because it is not a part "
"of the OGC specification (use the :attr:`GEOSGeometry.hexewkb` property "
"instead)."
msgstr ""

# 9c1347f7e7b44b2abbf77fe12f90a89d
#: ../../ref/contrib/gis/geos.txt:285
msgid ""
"Returns the EWKB of this Geometry in hexadecimal form.  This is an extension "
"of the WKB specification that includes the SRID value that are a part of "
"this geometry."
msgstr ""

# de34401da4fa49e59faba8aeb89c1747
#: ../../ref/contrib/gis/geos.txt:291
msgid "GEOS 3.1 is *required* if you want valid 3D HEXEWKB."
msgstr ""

# ef90279f834d4d7f914cdbfde62d4aa4
#: ../../ref/contrib/gis/geos.txt:295
msgid "Returns the GeoJSON representation of the geometry."
msgstr ""

# 7e58efc9ddf945a994258402af8112d6
# f71d93f4e56c4cb4a2601f7c2c10f056
# e242192754284d80a90f7d3dd1ea32e8
# 273354573b494ee891378b49df0b692a
#: ../../ref/contrib/gis/geos.txt:299 ../../ref/contrib/gis/geos.txt:318
#: ../../ref/contrib/gis/geos.txt:564 ../../ref/contrib/gis/geos.txt:578
msgid "Requires GDAL."
msgstr ""

# de956e614be0465297b59b049455666d
#: ../../ref/contrib/gis/geos.txt:303
msgid "Alias for :attr:`GEOSGeometry.json`."
msgstr ""

# a8419087b16e4903a694a0e58b5ff3ae
#: ../../ref/contrib/gis/geos.txt:307
msgid ""
"Returns a `KML`__ (Keyhole Markup Language) representation of the geometry.  "
"This should only be used for geometries with an SRID of 4326 (WGS84), but "
"this restriction is not enforced."
msgstr ""

# a9fca83099ea4c45bec94f5df8924cc6
#: ../../ref/contrib/gis/geos.txt:313
msgid ""
"Returns an :class:`~django.contrib.gis.gdal.OGRGeometry` object correspondg "
"to the GEOS geometry."
msgstr ""

# f264ca26d16d42ab9860965b43566181
#: ../../ref/contrib/gis/geos.txt:324
msgid ""
"Returns the WKB (Well-Known Binary) representation of this Geometry as a "
"Python buffer.  SRID value is not included, use the :attr:`GEOSGeometry."
"ewkb` property instead."
msgstr ""

# eb49df364ac74485b46375258d5caeb0
#: ../../ref/contrib/gis/geos.txt:336
msgid ""
"Return the EWKB representation of this Geometry as a Python buffer. This is "
"an extension of the WKB specification that includes any SRID value that are "
"a part of this geometry."
msgstr ""

# 919741d38f00479eab10bdb8d09a7b6b
#: ../../ref/contrib/gis/geos.txt:342
msgid "GEOS 3.1 is *required* if you want valid 3D EWKB."
msgstr ""

# cd9e2ae9e3a24794bf26ac66a2c8bedd
#: ../../ref/contrib/gis/geos.txt:346
msgid "Returns the Well-Known Text of the geometry (an OGC standard)."
msgstr ""

# e7cbd47393e74165a62ed5f51640b65d
#: ../../ref/contrib/gis/geos.txt:351
msgid "Spatial Predicate Methods"
msgstr ""

# 98e4048308a44bd6928e5d2865c6cdf1
#: ../../ref/contrib/gis/geos.txt:353
msgid ""
"All of the following spatial predicate methods take another :class:"
"`GEOSGeometry` instance (``other``) as a parameter, and return a boolean."
msgstr ""

# bd73fdca2ac84ad7ad135e12776e739c
#: ../../ref/contrib/gis/geos.txt:359
msgid "Returns ``True`` if :meth:`GEOSGeometry.within` is ``False``."
msgstr ""

# 950c2e32067d415ea1b7541fa676c448
#: ../../ref/contrib/gis/geos.txt:363
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two Geometries is "
"``T*T******`` (for a point and a curve,a point and an area or a line and an "
"area) ``0********`` (for two curves)."
msgstr ""

# fc8d2c5f8bc44472affc2c987fdddf99
#: ../../ref/contrib/gis/geos.txt:369
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``FF*FF****``."
msgstr ""

# 2ad9abd324b245bbb27ffd52d105f959
#: ../../ref/contrib/gis/geos.txt:374
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``T*F**FFF*``."
msgstr ""

# d4f1a2f48285488bbf1004f9ff1c5ad3
#: ../../ref/contrib/gis/geos.txt:379
msgid ""
"Returns true if the two geometries are exactly equal, up to a specified "
"tolerance.  The ``tolerance`` value should be a floating point number "
"representing the error tolerance in the comparison, e.g., ``poly1."
"equals_exact(poly2, 0.001)`` will compare equality to within one thousandth "
"of a unit."
msgstr ""

# abd49abd9a3047318cd3ea7eb4068570
#: ../../ref/contrib/gis/geos.txt:387
msgid "Returns ``True`` if :meth:`GEOSGeometry.disjoint` is ``False``."
msgstr ""

# 5a023176f12148b590f1bcf6d6b74996
#: ../../ref/contrib/gis/geos.txt:391
msgid ""
"Returns true if the DE-9IM intersection matrix for the two geometries is "
"``T*T***T**`` (for two points or two surfaces) ``1*T***T**`` (for two "
"curves)."
msgstr ""

# d7e32bfa40074b57810429caeec4016b
#: ../../ref/contrib/gis/geos.txt:397
msgid ""
"Returns ``True`` if the elements in the DE-9IM intersection matrix for this "
"geometry and the other matches the given ``pattern`` -- a string of nine "
"characters from the alphabet: {``T``, ``F``, ``*``, ``0``}."
msgstr ""

# 08654de8aaf349b2bbf9d38d5ac43010
#: ../../ref/contrib/gis/geos.txt:403
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``FT*******``, ``F**T*****`` or ``F***T****``."
msgstr ""

# 3991b338de5c47fd833c1a08ff83bcaf
#: ../../ref/contrib/gis/geos.txt:408
msgid ""
"Returns ``True`` if the DE-9IM intersection matrix for the two geometries is "
"``T*F**F***``."
msgstr ""

# e574cc51a9a84f0fbfb2cb84b5eeb48d
#: ../../ref/contrib/gis/geos.txt:412
msgid "Topological Methods"
msgstr ""

# 0826d5d103dd4977a093b2aaf181edf5
#: ../../ref/contrib/gis/geos.txt:416
msgid ""
"Returns a :class:`GEOSGeometry` that represents all points whose distance "
"from this geometry is less than or equal to the given ``width``. The "
"optional ``quadsegs`` keyword sets the number of segments used to "
"approximate a quarter circle (defaults is 8)."
msgstr ""

# 077156c0370f4fed863efeb5f33fe34b
#: ../../ref/contrib/gis/geos.txt:423
msgid ""
"Returns a :class:`GEOSGeometry` representing the points making up this "
"geometry that do not make up other."
msgstr ""

# 8db40f03cf394aac9a7a107baeca81a2
#: ../../ref/contrib/gis/geos.txt:431
msgid ""
"Given a distance (float), returns the point (or closest point) within the "
"geometry (:class:`LineString` or :class:`MultiLineString`) at that distance. "
"The normalized version takes the distance as a float between 0 (origin) and "
"1 (endpoint)."
msgstr ""

# 85b94caa89164b259103ecd81c5cfd89
#: ../../ref/contrib/gis/geos.txt:436
msgid "Reverse of :meth:`GEOSGeometry.project`."
msgstr ""

# 1b89c76f17464d44a3801b8dcd955b2a
#: ../../ref/contrib/gis/geos.txt:440
msgid ""
"Returns a :class:`GEOSGeometry` representing the points shared by this "
"geometry and other."
msgstr ""

# 720d80a7673944dcaf97ff99c5b11e24
#: ../../ref/contrib/gis/geos.txt:448
msgid ""
"Returns the distance (float) from the origin of the geometry (:class:"
"`LineString` or :class:`MultiLineString`) to the point projected on the "
"geometry (that is to a point of the line the closest to the given point). "
"The normalized version returns the distance as a float between 0 (origin) "
"and 1 (endpoint)."
msgstr ""

# f4f1cdb371e64a06be80d4a133191f05
#: ../../ref/contrib/gis/geos.txt:454
msgid "Reverse of :meth:`GEOSGeometry.interpolate`."
msgstr ""

# 92157e2441784e7a8ec4a8f2cedf46ca
#: ../../ref/contrib/gis/geos.txt:458
msgid ""
"Returns the DE-9IM intersection matrix (a string) representing the "
"topological relationship between this geometry and the other."
msgstr ""

# f1074dee82204c629e3120ec9ad3dfe9
#: ../../ref/contrib/gis/geos.txt:463
msgid ""
"Returns a new :class:`GEOSGeometry`, simplified using the Douglas-Peucker "
"algorithm to the specified tolerance.  A higher tolerance value implies less "
"points in the output.  If no tolerance is tolerance provided, it defaults to "
"0."
msgstr ""

# fd54b54089994254a4c603752569c9f2
#: ../../ref/contrib/gis/geos.txt:468
msgid ""
"By default, this function does not preserve topology - e.g., :class:"
"`Polygon` objects can be split, collapsed into lines or disappear. :class:"
"`Polygon` holes can be created or disappear, and lines can cross. By "
"specifying ``preserve_topology=True``, the result will have the same "
"dimension and number of components as the input, however, this is "
"significantly slower."
msgstr ""

# 41ea373986ce464c9236293a79d8d81b
#: ../../ref/contrib/gis/geos.txt:477
msgid ""
"Returns a :class:`GEOSGeometry` combining the points in this geometry not in "
"other, and the points in other not in this geometry."
msgstr ""

# a88a4d893d094177a9fb46976a752978
#: ../../ref/contrib/gis/geos.txt:482
msgid ""
"Returns a :class:`GEOSGeometry` representing all the points in this geometry "
"and the other."
msgstr ""

# f45ebf92e327474cb31c54c91f8a6d5a
#: ../../ref/contrib/gis/geos.txt:486
msgid "Topological Properties"
msgstr ""

# cac4f5a07368423ea512fd34e88dfb29
#: ../../ref/contrib/gis/geos.txt:490
msgid "Returns the boundary as a newly allocated Geometry object."
msgstr ""

# b66e5ae832cd4b02a60d0ffefdb6f400
#: ../../ref/contrib/gis/geos.txt:494
msgid ""
"Returns a :class:`Point` object representing the geometric center of the "
"geometry.  The point is not guaranteed to be on the interior of the geometry."
msgstr ""

# fd4c605701654e9689a3cbcdd54d0849
#: ../../ref/contrib/gis/geos.txt:500
msgid ""
"Returns the smallest :class:`Polygon` that contains all the points in the "
"geometry."
msgstr ""

# 334965dd6e244ba598049c14b4b36283
#: ../../ref/contrib/gis/geos.txt:505
msgid ""
"Returns a :class:`Polygon` that represents the bounding envelope of this "
"geometry."
msgstr ""

# 5e9432966d2c4019a0d30486e457e865
#: ../../ref/contrib/gis/geos.txt:510
msgid ""
"Computes and returns a :class:`Point` guaranteed to be on the interior of "
"this geometry."
msgstr ""

# 29127d7d26d143d4a31e556fce743701
#: ../../ref/contrib/gis/geos.txt:514
msgid "Other Properties & Methods"
msgstr ""

# a4477e8d865f4aeeb5290d5f49959274
#: ../../ref/contrib/gis/geos.txt:518
msgid "This property returns the area of the Geometry."
msgstr ""

# cb632726a90f494e9f8853b4194e6c97
#: ../../ref/contrib/gis/geos.txt:522
msgid ""
"This property returns the extent of this geometry as a 4-tuple, consisting "
"of (xmin, ymin, xmax, ymax)."
msgstr ""

# 9c82112c71d34664b40a86bb6cf1366d
#: ../../ref/contrib/gis/geos.txt:527
msgid ""
"This method returns a :class:`GEOSGeometry` that is a clone of the original."
msgstr ""

# 5b189d9a479d4657bdb6deb02b60bafd
#: ../../ref/contrib/gis/geos.txt:531
msgid ""
"Returns the distance between the closest points on this geometry and the "
"given ``geom`` (another :class:`GEOSGeometry` object)."
msgstr ""

# 5bbaeb11fb4a4ccc870a3869f06e7004
#: ../../ref/contrib/gis/geos.txt:536
msgid ""
"GEOS distance calculations are  linear -- in other words, GEOS does not "
"perform a spherical calculation even if the SRID specifies a geographic "
"coordinate system."
msgstr ""

# 534411277b2a4aa09d290bc21ae0629d
#: ../../ref/contrib/gis/geos.txt:542
msgid ""
"Returns the length of this geometry (e.g., 0 for a :class:`Point`, the "
"length of a :class:`LineString`, or the circumference of a :class:`Polygon`)."
msgstr ""

# 48805590123c473b895cbe0cb8918eb8
#: ../../ref/contrib/gis/geos.txt:550
msgid "Support for prepared geometries requires GEOS 3.1."
msgstr ""

# 7eb799f666ad48b998c6551707bc46a5
#: ../../ref/contrib/gis/geos.txt:552
msgid ""
"Returns a GEOS ``PreparedGeometry`` for the contents of this geometry. "
"``PreparedGeometry`` objects are optimized for the contains, intersects, and "
"covers operations.  Refer to the :ref:`prepared-geometries` documentation "
"for more information."
msgstr ""

# 2f5f63aaaf5d48138c9f589ed7b89eb4
#: ../../ref/contrib/gis/geos.txt:559
msgid ""
"Returns a :class:`~django.contrib.gis.gdal.SpatialReference` object "
"corresponding to the SRID of the geometry or ``None``."
msgstr ""

# fa008483388940b08d0eb9448c0ff881
#: ../../ref/contrib/gis/geos.txt:568
msgid ""
"Transforms the geometry according to the given coordinate transformation "
"paramter (``ct``), which may be an integer SRID, spatial reference WKT "
"string, a PROJ.4 string, a :class:`~django.contrib.gis.gdal."
"SpatialReference` object, or a :class:`~django.contrib.gis.gdal."
"CoordTransform` object. By default, the geometry is transformed in-place and "
"nothing is returned. However if the ``clone`` keyword is set, then the "
"geometry is not modified and a transformed clone of the geometry is returned "
"instead."
msgstr ""

# 7d2b83d778c4461695644ab15ede278b
#: ../../ref/contrib/gis/geos.txt:582
msgid ""
"Prior to 1.3, this method would silently no-op if GDAL was not available. "
"Now, a :class:`~django.contrib.gis.geos.GEOSException` is raised as "
"application code relying on this behavior is in error. In addition, use of "
"this method when the SRID is ``None`` or less than 0 now also generates a :"
"class:`~django.contrib.gis.geos.GEOSException`."
msgstr ""

# f803eeb409a94f7dbae726cd1931bc0a
#: ../../ref/contrib/gis/geos.txt:590
msgid "``Point``"
msgstr ""

# a0c7dd7632a0464ba88717d215fd5b04
#: ../../ref/contrib/gis/geos.txt:594
msgid ""
"``Point`` objects are instantiated using arguments that represent the "
"component coordinates of the point or with a single sequence coordinates.  "
"For example, the following are equivalent::"
msgstr ""

# c66af74b08444d329a64a8a4662f5d41
#: ../../ref/contrib/gis/geos.txt:602
msgid "``LineString``"
msgstr ""

# 05c4e500b2fb41bd862f381964ec866d
#: ../../ref/contrib/gis/geos.txt:606
msgid ""
"``LineString`` objects are instantiated using arguments that are either a "
"sequence of coordinates or :class:`Point` objects. For example, the "
"following are equivalent::"
msgstr ""

# 1c9e3948ca4c42d490491f9bbe328ad4
#: ../../ref/contrib/gis/geos.txt:613
msgid ""
"In addition, ``LineString`` objects may also be created by passing in a "
"single sequence of coordinate or :class:`Point` objects::"
msgstr ""

# 75fe2c4f238a44c9902f121f557dbd79
#: ../../ref/contrib/gis/geos.txt:620
msgid "``LinearRing``"
msgstr ""

# bc09d96294ac422084a08cf4bfa6ec68
#: ../../ref/contrib/gis/geos.txt:624
msgid ""
"``LinearRing`` objects are constructed in the exact same way as :class:"
"`LineString` objects, however the coordinates must be *closed*, in other "
"words, the first coordinates must be the same as the last coordinates.  For "
"example::"
msgstr ""

# 496f955077024c048aa2b1485037d24c
#: ../../ref/contrib/gis/geos.txt:631
msgid ""
"Notice that ``(0, 0)`` is the first and last coordinate -- if they were not "
"equal, an error would be raised."
msgstr ""

# d048b68be22c46238c79155f2322197a
#: ../../ref/contrib/gis/geos.txt:635
msgid "``Polygon``"
msgstr ""

# 65891b4c84944d13a5e0f10e1b981305
#: ../../ref/contrib/gis/geos.txt:639
msgid ""
"``Polygon`` objects may be instantiated by passing in one or more parameters "
"that represent the rings of the polygon.  The parameters must either be :"
"class:`LinearRing` instances, or a sequence that may be used to construct a :"
"class:`LinearRing`::"
msgstr ""

# ae59e811eb9648e3bae4d36e980155d0
#: ../../ref/contrib/gis/geos.txt:651
msgid ""
"Returns a polygon object from the given bounding-box, a 4-tuple comprising "
"(xmin, ymin, xmax, ymax)."
msgstr ""

# 7fb9884285204dc6afdd78b718476524
#: ../../ref/contrib/gis/geos.txt:656
msgid "Returns the number of interior rings in this geometry."
msgstr ""

# bb5c65dcbae1434993a81a5f9203c0ea
#: ../../ref/contrib/gis/geos.txt:658
msgid "Comparing Polygons"
msgstr ""

# b7290f051e784fdd81c84dad2db435f3
#: ../../ref/contrib/gis/geos.txt:660
msgid ""
"Note that it is possible to compare ``Polygon`` objects directly with ``<`` "
"or ``>``, but as the comparison is made through Polygon's :class:"
"`LineString`, it does not mean much (but is consistent and quick). You can "
"always force the comparison with the :attr:`~GEOSGeometry.area` property::"
msgstr ""

# 8921d14772d04f0d9aabcd37127460f4
#: ../../ref/contrib/gis/geos.txt:670
msgid "Geometry Collections"
msgstr ""

# b2bb9d499f514725b8212ee24870e17a
#: ../../ref/contrib/gis/geos.txt:673
msgid "``MultiPoint``"
msgstr ""

# 9fa0523a40664f24bc14130b64b409f6
#: ../../ref/contrib/gis/geos.txt:677
msgid ""
"``MultiPoint`` objects may be instantiated by passing in one or more :class:"
"`Point` objects as arguments, or a single sequence of :class:`Point` "
"objects::"
msgstr ""

# 45a60a8fe41348e0896ced609ecfc908
#: ../../ref/contrib/gis/geos.txt:685
msgid "``MultiLineString``"
msgstr ""

# 378de772e31e4488bebc82b738ce7883
#: ../../ref/contrib/gis/geos.txt:689
msgid ""
"``MultiLineString`` objects may be instantiated by passing in one or more :"
"class:`LineString` objects as arguments, or a single sequence of :class:"
"`LineString` objects::"
msgstr ""

# c202db6ba5834b48a339a987b1b9194e
#: ../../ref/contrib/gis/geos.txt:700
msgid ""
"Returns a :class:`LineString` representing the line merge of all the "
"components in this ``MultiLineString``."
msgstr ""

# 762b90e1a15641d8964295db09e096f3
#: ../../ref/contrib/gis/geos.txt:705
msgid "``MultiPolygon``"
msgstr ""

# 09eec877e97948bfa543115a0231ad19
#: ../../ref/contrib/gis/geos.txt:709
msgid ""
"``MultiPolygon`` objects may be instantiated by passing one or more :class:"
"`Polygon` objects as arguments, or a single sequence of :class:`Polygon` "
"objects::"
msgstr ""

# 71a635aac7f84a148aa99545cadc520f
#: ../../ref/contrib/gis/geos.txt:720
msgid ""
"Returns a :class:`Polygon` that is the union of all of the component "
"polygons in this collection.  The algorithm employed is significantly more "
"efficient (faster) than trying to union the geometries together "
"individually. [#fncascadedunion]_"
msgstr ""

# 1ac817e1504a4db1b601e5e79f463d5b
#: ../../ref/contrib/gis/geos.txt:727
msgid "GEOS 3.1 is *required* to peform cascaded unions."
msgstr ""

# 5716c09156254e90b5cc72945f968494
#: ../../ref/contrib/gis/geos.txt:730
msgid "``GeometryCollection``"
msgstr ""

# 06fc409ffc4a4679b8a558b0ff186b66
#: ../../ref/contrib/gis/geos.txt:734
msgid ""
"``GeometryCollection`` objects may be instantiated by passing in one or more "
"other :class:`GEOSGeometry` as arguments, or a single sequence of :class:"
"`GEOSGeometry` objects::"
msgstr ""

# aa5ed83f445243f5afc6d0ef69a865bb
#: ../../ref/contrib/gis/geos.txt:745
msgid "Prepared Geometries"
msgstr ""

# 378c5697e62d47f2b8a98f0e32229277
#: ../../ref/contrib/gis/geos.txt:747
msgid ""
"In order to obtain a prepared geometry, just access the :attr:`GEOSGeometry."
"prepared` property.  Once you have a ``PreparedGeometry`` instance its "
"spatial predicate methods, listed below, may be used with other "
"``GEOSGeometry`` objects.  An operation with a prepared geometry can be "
"orders of magnitude faster -- the more complex the geometry that is "
"prepared, the larger the speedup in the operation.  For more information, "
"please consult the `GEOS wiki page on prepared geometries <http://trac.osgeo."
"org/geos/wiki/PreparedGeometry>`_."
msgstr ""

# 70da98f5ae434f33b7519906c17c6040
#: ../../ref/contrib/gis/geos.txt:757
msgid "GEOS 3.1 is *required* in order to use prepared geometries."
msgstr ""

# 28fca8251d3a4b9aa17a467b2d0f9d42
#: ../../ref/contrib/gis/geos.txt:768
msgid "``PreparedGeometry``"
msgstr ""

# 24b17c0f855f442993fa229b609245ca
#: ../../ref/contrib/gis/geos.txt:772
msgid ""
"All methods on ``PreparedGeometry`` take an ``other`` argument, which must "
"be a :class:`GEOSGeometry` instance."
msgstr ""

# d256020b9401427cbb82131fb37ceb92
#: ../../ref/contrib/gis/geos.txt:784
msgid "Geometry Factories"
msgstr ""

# af11f51248c84c3394ef19628e76d335
#: ../../ref/contrib/gis/geos.txt:788
msgid "input file that contains spatial data"
msgstr ""

# 240bcde80a9249eb940b1f05c456dce3
#: ../../ref/contrib/gis/geos.txt:790
msgid "a :class:`GEOSGeometry` corresponding to the spatial data in the file"
msgstr ""

# d97b71104f6d4e888c2e08fa79f21895
#: ../../ref/contrib/gis/geos.txt:799
msgid "string that contains spatial data"
msgstr ""

# f7de2a29a817466084fe2a89c86b78b6
#: ../../ref/contrib/gis/geos.txt:803
msgid "a :class:`GEOSGeometry` corresponding to the spatial data in the string"
msgstr ""

# f402a500b0954613a5b09b1ba6f12a05
#: ../../ref/contrib/gis/geos.txt:811
msgid "I/O Objects"
msgstr ""

# ded93f83c5724ca9a9d8359e05e7012f
#: ../../ref/contrib/gis/geos.txt:814
msgid "Reader Objects"
msgstr ""

# 922aaf562cf94113b81feb96589db69a
#: ../../ref/contrib/gis/geos.txt:816
msgid ""
"The reader I/O classes simply return a :class:`GEOSGeometry` instance from "
"the WKB and/or WKT input given to their ``read(geom)`` method."
msgstr ""

# 27370ca8672649269f4bc805f9493b0f
#: ../../ref/contrib/gis/geos.txt:838
msgid "Writer Objects"
msgstr ""

# 8f35458111094b31bce34d90127dd11b
#: ../../ref/contrib/gis/geos.txt:840
msgid ""
"All writer objects have a ``write(geom)`` method that returns either the WKB "
"or WKT of the given geometry.  In addition, :class:`WKBWriter` objects also "
"have properties that may be used to change the byte order, and or include "
"the SRID value (in other words, EWKB)."
msgstr ""

# d97fb8f147a549729fe97c36b0d8be31
#: ../../ref/contrib/gis/geos.txt:847
msgid ""
"``WKBWriter`` provides the most control over its output.  By default it "
"returns OGC-compliant WKB when it's ``write`` method is called.  However, it "
"has properties that allow for the creation of EWKB, a superset of the WKB "
"standard that includes additional information."
msgstr ""

# bb02613f6fd94171a39a7eb27e92f194
#: ../../ref/contrib/gis/geos.txt:854
msgid ""
"Returns the WKB of the given geometry as a Python ``buffer`` object. "
"Example::"
msgstr ""

# f1d8e3a489dc4c9798809fe21569d8c6
#: ../../ref/contrib/gis/geos.txt:865
msgid "Returns WKB of the geometry in hexadecimal.  Example::"
msgstr ""

# feaf1fd04aa548de95b7f9f7920730c8
#: ../../ref/contrib/gis/geos.txt:875
msgid ""
"This property may be be set to change the byte-order of the geometry "
"representation."
msgstr ""

# e9e103ae40ff4be88b449ccbbbf030e5
#: ../../ref/contrib/gis/geos.txt:879
msgid "Byteorder Value"
msgstr ""

# b8ac7deb2e864b83a26eca8ccc1840ff
#: ../../ref/contrib/gis/geos.txt:881
msgid "Big Endian (e.g., compatible with RISC systems)"
msgstr ""

# f299394f2fe44b8d9a8770a2b73bf5ae
#: ../../ref/contrib/gis/geos.txt:882
msgid "Little Endian (e.g., compatible with x86 systems)"
msgstr ""

# a2ab2229ea1243fa8c1b2ca66e266b75
#: ../../ref/contrib/gis/geos.txt:897
msgid ""
"This property may be set to change the output dimension of the geometry "
"representation.  In other words, if you have a 3D geometry then set to 3 so "
"that the Z value is included in the WKB."
msgstr ""

# 597680f85a5a43b68fe1b951de2a8d08
#: ../../ref/contrib/gis/geos.txt:902
msgid "Outdim Value"
msgstr ""

# acf0ce53872a403a97e498223f92e96e
#: ../../ref/contrib/gis/geos.txt:904
msgid "The default, output 2D WKB."
msgstr ""

# 83b55233cf404f91af698fffb04fdf96
#: ../../ref/contrib/gis/geos.txt:905
msgid "Output 3D WKB."
msgstr ""

# fdd27403545c43cfaaa132917e711756
#: ../../ref/contrib/gis/geos.txt:923
msgid ""
"Set this property with a boolean to indicate whether the SRID of the "
"geometry should be included with the WKB representation.  Example::"
msgstr ""

# a93a0f8121d045df8f72b389401df04b
#: ../../ref/contrib/gis/geos.txt:939
msgid "Returns the WKT of the given geometry. Example::"
msgstr ""

# fe6ff16499364710b930496f94092baa
#: ../../ref/contrib/gis/geos.txt:949
msgid ""
"*See* `PostGIS EWKB, EWKT and Canonical Forms <http://postgis.refractions."
"net/docs/using_postgis_dbmanagement.html#EWKB_EWKT>`_, PostGIS documentation "
"at Ch. 4.1.2."
msgstr ""

# eac04c2657ee4122b9b111c96a271207
#: ../../ref/contrib/gis/geos.txt:950
msgid ""
"For more information, read Paul Ramsey's blog post about `(Much) Faster "
"Unions in PostGIS 1.4 <http://blog.cleverelephant.ca/2009/01/must-faster-"
"unions-in-postgis-14.html>`_ and Martin Davis' blog post on `Fast polygon "
"merging in JTS using Cascaded Union <http://lin-ear-th-inking.blogspot."
"com/2007/11/fast-polygon-merging-in-jts-using.html>`_."
msgstr ""

# 7d65502b3bbc4f1d98a0e0575bc42921
#: ../../ref/contrib/gis/geos.txt:958
msgid "GEOS_LIBRARY_PATH"
msgstr ""

# 42dbd2b11fb8498d9a55bdd3e29a705e
#: ../../ref/contrib/gis/geos.txt:960
msgid ""
"A string specifying the location of the GEOS C library.  Typically, this "
"setting is only used if the GEOS C library is in a non-standard location (e."
"g., ``/home/bob/lib/libgeos_c.so``)."
msgstr ""

# e85a2f762cd14886a17a4aa01a05170a
# 58078bdc05324f1bbb5db763e6342cc9
#: ../../ref/contrib/gis/geos.txt:966
#: ../../ref/contrib/gis/install/geolibs.txt:139
msgid ""
"The setting must be the *full* path to the **C** shared library; in other "
"words you want to use ``libgeos_c.so``, not ``libgeos.so``."
msgstr ""

# 3eec93e534cb4b478509e88b8e6e7cbb
#: ../../ref/contrib/gis/geos.txt:970
msgid "Exceptions"
msgstr ""

# 80a37d9c6c764c05b1d336179e68a1dd
#: ../../ref/contrib/gis/geos.txt:974
msgid "The base GEOS exception, indicates a GEOS-related error."
msgstr ""

# 67148ec615df48beabcd890674dede53
#: ../../ref/contrib/gis/index.txt:5
msgid "GeoDjango"
msgstr ""

# e1c8ea6f9b024fdab4cec671727b7467
#: ../../ref/contrib/gis/index.txt:10
msgid ""
"GeoDjango intends to be a world-class geographic Web framework. Its goal is "
"to make it as easy as possible to build GIS Web applications and harness the "
"power of spatially enabled data."
msgstr ""

# 9609084669794523bc9bc9976a828b81
#: ../../ref/contrib/gis/install/geolibs.txt:5
msgid "Installing Geospatial libraries"
msgstr ""

# 7a1ef627dd254ead865dc41ce99192b4
#: ../../ref/contrib/gis/install/geolibs.txt:7
msgid ""
"GeoDjango uses and/or provides interfaces for the following open source "
"geospatial libraries:"
msgstr ""

# 4b5b04db606645148a1fabba6c9b07e4
#: ../../ref/contrib/gis/install/geolibs.txt:11
msgid "Program"
msgstr ""

# f166382be727417db0eec243dbfd8609
#: ../../ref/contrib/gis/install/geolibs.txt:11
msgid "Required"
msgstr ""

# ee95c7205f9742acb01e50d962054c9a
# 319f65eb29e24330a00195016a42389f
#: ../../ref/contrib/gis/install/geolibs.txt:11
#: ../../ref/contrib/gis/install/index.txt:62
msgid "Supported Versions"
msgstr ""

# 336dd59793714065826bf320c482044e
#: ../../ref/contrib/gis/install/geolibs.txt:13
msgid ":ref:`GEOS <ref-geos>`"
msgstr ""

# 132baffea5b5408eae6883f204ba7231
#: ../../ref/contrib/gis/install/geolibs.txt:13
msgid "Geometry Engine Open Source"
msgstr ""

# 6b72258e07d14333a8a17c2b0597df4b
#: ../../ref/contrib/gis/install/geolibs.txt:13
msgid "Yes"
msgstr ""

# d9c9979a90f64ce288434fdf31909fdd
#: ../../ref/contrib/gis/install/geolibs.txt:13
msgid "3.3, 3.2, 3.1, 3.0"
msgstr ""

# 368c47ba92164b4e8604625b86e6f097
#: ../../ref/contrib/gis/install/geolibs.txt:14
msgid "`PROJ.4`_"
msgstr ""

# 5e3b881474d94f7a9b67eca8d0807274
#: ../../ref/contrib/gis/install/geolibs.txt:14
msgid "Cartographic Projections library"
msgstr ""

# 4c5b6ce482d649d28f3a791cd496ac55
#: ../../ref/contrib/gis/install/geolibs.txt:14
msgid "Yes (PostgreSQL and SQLite only)"
msgstr ""

# d08d9ab9a7e8493183b529f95b3de0db
#: ../../ref/contrib/gis/install/geolibs.txt:14
msgid "4.8, 4.7, 4.6, 4.5, 4.4"
msgstr ""

# 27169c39eff0469188d39eddfa52a8fb
#: ../../ref/contrib/gis/install/geolibs.txt:15
msgid ":ref:`GDAL <ref-gdal>`"
msgstr ""

# 1ec02d3b555b48708e232f0ebcff02a9
#: ../../ref/contrib/gis/install/geolibs.txt:15
msgid "Geospatial Data Abstraction Library"
msgstr ""

# 7a80089985d04337a137dcf3498e5079
#: ../../ref/contrib/gis/install/geolibs.txt:15
msgid "No (but, required for SQLite)"
msgstr ""

# 9216aeb305b14a7da60a419dac68e8d9
#: ../../ref/contrib/gis/install/geolibs.txt:15
msgid "1.9, 1.8, 1.7, 1.6, 1.5"
msgstr ""

# b03f528a788b44128e31c325d4eca610
#: ../../ref/contrib/gis/install/geolibs.txt:16
msgid ":ref:`GeoIP <ref-geoip>`"
msgstr ""

# 762f8f060d034b6c82d6bd975963eb48
#: ../../ref/contrib/gis/install/geolibs.txt:16
msgid "IP-based geolocation library"
msgstr ""

# e8d94dd9f559427d85878b61ac697bb5
#: ../../ref/contrib/gis/install/geolibs.txt:16
msgid "No"
msgstr ""

# e70b8964be2346cfb2634b0dbc5bc736
# 18fe0201ea3841d4870eaffb50c5c515
#: ../../ref/contrib/gis/install/geolibs.txt:16
#: ../../ref/contrib/gis/install/postgis.txt:132
msgid "1.4"
msgstr ""

# 51ed640c13664037b3d6cd61adbc43f2
#: ../../ref/contrib/gis/install/geolibs.txt:17
msgid "`PostGIS`__"
msgstr ""

# a2d2d5f8c5a745168ae9fcf83bea79ec
#: ../../ref/contrib/gis/install/geolibs.txt:17
msgid "Spatial extensions for PostgreSQL"
msgstr ""

# 367d98aaf247494f88bfa30c87a3c009
#: ../../ref/contrib/gis/install/geolibs.txt:17
msgid "Yes (PostgreSQL only)"
msgstr ""

# ac2ba5d96b804e0980165ff13088639c
#: ../../ref/contrib/gis/install/geolibs.txt:17
msgid "2.0, 1.5, 1.4, 1.3"
msgstr ""

# 81c85fbb9b7b493eb7819adfc61d7230
#: ../../ref/contrib/gis/install/geolibs.txt:18
msgid "`SpatiaLite`__"
msgstr ""

# 6429ce1bb346437bb6e2230d68a8663c
#: ../../ref/contrib/gis/install/geolibs.txt:18
msgid "Spatial extensions for SQLite"
msgstr ""

# 05143ae645714b1fbf71ab9e914adb82
#: ../../ref/contrib/gis/install/geolibs.txt:18
msgid "Yes (SQLite only)"
msgstr ""

# 0ba6b03fee8a47889f7994ea2aba1042
#: ../../ref/contrib/gis/install/geolibs.txt:18
msgid "3.0, 2.4, 2.3"
msgstr ""

# 9dfbe5961a64426d87a895840fe7319c
#: ../../ref/contrib/gis/install/geolibs.txt:21
msgid "Install GDAL"
msgstr ""

# 5fd3c9b5ec7645c8a089ce0fbf35e7c7
#: ../../ref/contrib/gis/install/geolibs.txt:23
msgid ""
"While :ref:`gdalbuild` is technically not required, it is *recommended*. "
"Important features of GeoDjango (including the :ref:`ref-layermapping`, "
"geometry reprojection, and the geographic admin) depend on its functionality."
msgstr ""

# 6ffb09c2c14d41ad93cf62fd7433fb9f
#: ../../ref/contrib/gis/install/geolibs.txt:30
msgid ""
"The GeoDjango interfaces to GEOS, GDAL, and GeoIP may be used independently "
"of Django.  In other words, no database or settings file required -- just "
"import them as normal from :mod:`django.contrib.gis`."
msgstr ""

# 47deddc238084bc6b8d28337b5bb5f86
#: ../../ref/contrib/gis/install/geolibs.txt:39
msgid ""
"On Debian/Ubuntu, you are advised to install the following packages which "
"will install, directly or by dependency, the required geospatial libraries:"
msgstr ""

# 378a325c91664c88b3fe3a65ec4316d0
#: ../../ref/contrib/gis/install/geolibs.txt:46
msgid "Optional packages to consider:"
msgstr ""

# c539989076a243cdbbe25bfc552b29ab
#: ../../ref/contrib/gis/install/geolibs.txt:48
msgid "``libgeoip1``: for :ref:`GeoIP <ref-geoip>` support"
msgstr ""

# 2de7bf100a0a4b679057d9763f486f11
#: ../../ref/contrib/gis/install/geolibs.txt:49
msgid "``gdal-bin``: for GDAL command line programs like ``ogr2ogr``"
msgstr ""

# e959d6b21b2f4305aa364e1471c7fe95
#: ../../ref/contrib/gis/install/geolibs.txt:50
msgid ""
"``python-gdal`` for GDAL's own Python bindings -- includes interfaces for "
"raster manipulation"
msgstr ""

# 57264f2abbbd49aa979d99e25406c497
#: ../../ref/contrib/gis/install/geolibs.txt:52
msgid ""
"Please also consult platform-specific instructions if you are on :ref:"
"`macosx` or :ref:`windows`."
msgstr ""

# 447d1d45c9d14a2fb7f8dbd547e817b3
# dbcfb1d2998843a598e273904a75fffb
#: ../../ref/contrib/gis/install/geolibs.txt:58
#: ../../ref/contrib/gis/install/postgis.txt:27
msgid "Building from source"
msgstr ""

# b55fe6d76e4144e595bebbd5ab85a22d
#: ../../ref/contrib/gis/install/geolibs.txt:60
msgid ""
"When installing from source on UNIX and GNU/Linux systems, please follow the "
"installation instructions carefully, and install the libraries in the given "
"order.  If using MySQL or Oracle as the spatial database, only GEOS is "
"required."
msgstr ""

# 61b27285c6224870af9a80732dd0732d
#: ../../ref/contrib/gis/install/geolibs.txt:67
msgid ""
"On Linux platforms, it may be necessary to run the ``ldconfig`` command "
"after installing each library.  For example::"
msgstr ""

# 454f90a08fbc4f66bb0e3d610f6bd432
#: ../../ref/contrib/gis/install/geolibs.txt:75
msgid ""
"OS X users are required to install `Apple Developer Tools`_ in order to "
"compile software from source.  This is typically included on your OS X "
"installation DVDs."
msgstr ""

# adfa1ea080cd4bc59eebb4d8b2cf2e68
# 7153a0a783a140c9a7e84242cbb77a9c
# 11656631268b4c79800c6eb091dccd54
# e0b4219295a84981a721eb1b0647ef57
#: ../../ref/contrib/gis/install/geolibs.txt:84
#: ../../ref/contrib/gis/install/index.txt:65
#: ../../ref/contrib/gis/install/index.txt:66
#: ../../ref/contrib/gis/install/index.txt:298
msgid "GEOS"
msgstr ""

# 56444c1cb634426ca7a4cda4d5e5cd05
#: ../../ref/contrib/gis/install/geolibs.txt:86
msgid ""
"GEOS is a C++ library for performing geometric operations, and is the "
"default internal geometry representation used by GeoDjango (it's behind the "
"\"lazy\" geometries).  Specifically, the C API library is called (e.g., "
"``libgeos_c.so``) directly from Python using ctypes."
msgstr ""

# 3cced6a2ff26495c98fcd1a744b29496
#: ../../ref/contrib/gis/install/geolibs.txt:91
msgid ""
"First, download GEOS 3.3.5 from the refractions Web site and untar the "
"source archive::"
msgstr ""

# 12f2c393abda47dab02d6e2487a5da70
#: ../../ref/contrib/gis/install/geolibs.txt:97
msgid ""
"Next, change into the directory where GEOS was unpacked, run the configure "
"script, compile, and install::"
msgstr ""

# ef63dc9a829b4b53ab3700f2cdc435a3
# e5fee8737aee4b8f9e86f6f68c892840
# 12517bbbff1a4d07a0a7779c0d5f46e2
# b9a58b8787514bc0be8cade41bd1caf6
#: ../../ref/contrib/gis/install/geolibs.txt:107
#: ../../ref/contrib/gis/install/geolibs.txt:211
#: ../../ref/contrib/gis/install/index.txt:130
#: ../../ref/contrib/gis/layermapping.txt:199
msgid "Troubleshooting"
msgstr ""

# 61e56763dafb45ccacd18bb70cfc8a3e
#: ../../ref/contrib/gis/install/geolibs.txt:110
msgid "Can't find GEOS library"
msgstr ""

# 5ba4ea8a12fb47bb85b0ffda33393a19
#: ../../ref/contrib/gis/install/geolibs.txt:112
msgid "When GeoDjango can't find GEOS, this error is raised:"
msgstr ""

# a0d8aca2bc9042a685485dfcd93efb45
#: ../../ref/contrib/gis/install/geolibs.txt:118
msgid ""
"The most common solution is to properly configure your :ref:`libsettings` "
"*or* set :ref:`geoslibrarypath` in your settings."
msgstr ""

# cdb993b35c9547ca8020b53a4197fe9e
#: ../../ref/contrib/gis/install/geolibs.txt:121
msgid ""
"If using a binary package of GEOS (e.g., on Ubuntu), you may need to :ref:"
"`binutils`."
msgstr ""

# 255b8fc728fb471ea46d3a1ac3318b7f
#: ../../ref/contrib/gis/install/geolibs.txt:126
msgid "``GEOS_LIBRARY_PATH``"
msgstr ""

# 36dfbf913a6047808ef9803558c4b8e0
#: ../../ref/contrib/gis/install/geolibs.txt:128
msgid ""
"If your GEOS library is in a non-standard location, or you don't want to "
"modify the system's library path then the :setting:`GEOS_LIBRARY_PATH` "
"setting may be added to your Django settings file with the full path to the "
"GEOS C library.  For example:"
msgstr ""

# 9e9a975f0e2c4e12b738a77a3da0ecbc
#: ../../ref/contrib/gis/install/geolibs.txt:142
msgid ""
"See also :ref:`My logs are filled with GEOS-related errors <geos-exceptions-"
"in-logfile>`."
msgstr ""

# 0e35c26805924dcf94c42c3d689b3d40
#: ../../ref/contrib/gis/install/geolibs.txt:147
msgid "PROJ.4"
msgstr ""

# 87746e34be4041ada43738571a7ef9ee
#: ../../ref/contrib/gis/install/geolibs.txt:149
msgid ""
"`PROJ.4`_ is a library for converting geospatial data to different "
"coordinate reference systems."
msgstr ""

# e370f886fb02448c9bd61e4e96839137
#: ../../ref/contrib/gis/install/geolibs.txt:152
msgid "First, download the PROJ.4 source code and datum shifting files [#]_::"
msgstr ""

# 40524c78fa7b4e8a96a12e8dc3ea1a6b
#: ../../ref/contrib/gis/install/geolibs.txt:157
msgid ""
"Next, untar the source code archive, and extract the datum shifting files in "
"the ``nad`` subdirectory.  This must be done *prior* to configuration::"
msgstr ""

# 913d0ccd093a4f0b9f3ffe618871769f
#: ../../ref/contrib/gis/install/geolibs.txt:165
msgid "Finally, configure, make and install PROJ.4::"
msgstr ""

# 8c6d982c0e7e4dc08c2187d0f9aeb5d7
# f4baee4926b84d53af994d961e4184c1
#: ../../ref/contrib/gis/install/geolibs.txt:175
#: ../../ref/contrib/gis/install/index.txt:300
msgid "GDAL"
msgstr ""

# c13b6b7da29d4e099ebea60d73caf287
#: ../../ref/contrib/gis/install/geolibs.txt:177
msgid ""
"`GDAL`__ is an excellent open source geospatial library that has support for "
"reading most vector and raster spatial data formats.  Currently, GeoDjango "
"only supports :ref:`GDAL's vector data <ref-gdal>` capabilities [#]_. :ref:"
"`geosbuild` and :ref:`proj4` should be installed prior to building GDAL."
msgstr ""

# 6208a48c3de84422888dfbefc4d1c36c
#: ../../ref/contrib/gis/install/geolibs.txt:182
msgid "First download the latest GDAL release version and untar the archive::"
msgstr ""

# f4f2691635354a4cbf09936fe3e498ed
#: ../../ref/contrib/gis/install/geolibs.txt:188
msgid "Configure, make and install::"
msgstr ""

# 24af7fef9f764c61aac410b87fcddf30
#: ../../ref/contrib/gis/install/geolibs.txt:197
msgid ""
"Because GeoDjango has it's own Python interface, the preceding instructions "
"do not build GDAL's own Python bindings.  The bindings may be built by "
"adding the ``--with-python`` flag when running ``configure``.  See `GDAL/OGR "
"In Python`__ for more information on GDAL's bindings."
msgstr ""

# 34be97cd670147c899d71f014fc41588
#: ../../ref/contrib/gis/install/geolibs.txt:202
msgid ""
"If you have any problems, please see the troubleshooting section below for "
"suggestions and solutions."
msgstr ""

# c0b24c8bd7c04a2fb602056b22c98037
#: ../../ref/contrib/gis/install/geolibs.txt:214
msgid "Can't find GDAL library"
msgstr ""

# 6945009d08c24d91affa9034949fac51
#: ../../ref/contrib/gis/install/geolibs.txt:216
msgid ""
"When GeoDjango can't find the GDAL library, the ``HAS_GDAL`` flag will be "
"false:"
msgstr ""

# ca196c5bfbaf4681a2afa02d53aabcd9
#: ../../ref/contrib/gis/install/geolibs.txt:225
msgid ""
"The solution is to properly configure your :ref:`libsettings` *or* set :ref:"
"`gdallibrarypath` in your settings."
msgstr ""

# 2848049b350042b5812a51f69d19b339
#: ../../ref/contrib/gis/install/geolibs.txt:231
msgid "``GDAL_LIBRARY_PATH``"
msgstr ""

# 9a3cf6eafb7e47bd993c5a9650f56a60
#: ../../ref/contrib/gis/install/geolibs.txt:233
msgid ""
"If your GDAL library is in a non-standard location, or you don't want to "
"modify the system's library path then the :setting:`GDAL_LIBRARY_PATH` "
"setting may be added to your Django settings file with the full path to the "
"GDAL library.  For example:"
msgstr ""

# e176a2ceba92499f936a3f2b50564280
#: ../../ref/contrib/gis/install/geolibs.txt:245
msgid "Can't find GDAL data files (``GDAL_DATA``)"
msgstr ""

# b730aa49986348c69088baab114bd53d
#: ../../ref/contrib/gis/install/geolibs.txt:247
msgid ""
"When installed from source, GDAL versions 1.5.1 and below have an autoconf "
"bug that places data in the wrong location. [#]_   This can lead to error "
"messages like this:"
msgstr ""

# 5dabfca191534e81b7219fc4df08eb1b
#: ../../ref/contrib/gis/install/geolibs.txt:257
msgid ""
"The solution is to set the ``GDAL_DATA`` environment variable to the "
"location of the GDAL data files before invoking Python  (typically ``/usr/"
"local/share``; use ``gdal-config --datadir`` to find out). For example::"
msgstr ""

# 8a3ce9f49c2f44bb8805f6417c907f7d
#: ../../ref/contrib/gis/install/geolibs.txt:264
msgid ""
"If using Apache, you may need to add this environment variable to your "
"configuration file:"
msgstr ""

# d6fbd9cdfaf54318878bc1ab4a642240
#: ../../ref/contrib/gis/install/geolibs.txt:272
msgid ""
"The datum shifting files are needed for converting data to and from certain "
"projections. For example, the PROJ.4 string for the `Google projection "
"(900913 or 3857) <http://spatialreference.org/ref/sr-org/6864/prj/>`_ "
"requires the ``null`` grid file only included in the extra datum shifting "
"files. It is easier to install the shifting files now, then to have debug a "
"problem caused by their absence later."
msgstr ""

# aa10777ae644498eb353bd78fc8192ab
#: ../../ref/contrib/gis/install/geolibs.txt:279
msgid ""
"Specifically, GeoDjango provides support for the `OGR <http://gdal.org/"
"ogr>`_ library, a component of GDAL."
msgstr ""

# 265dde37bd5f40eea2c8de2d4ed8917c
#: ../../ref/contrib/gis/install/geolibs.txt:281
msgid "See `GDAL ticket #2382 <http://trac.osgeo.org/gdal/ticket/2382>`_."
msgstr ""

# 412c27d7a53746e3a1eb25014f3711d5
#: ../../ref/contrib/gis/install/index.txt:5
msgid "GeoDjango Installation"
msgstr ""

# 775a1bb65c6440509c9bfed75da6556f
#: ../../ref/contrib/gis/install/index.txt:11
msgid "In general, GeoDjango installation requires:"
msgstr ""

# 5e5ca27808974db19c7e1a6a77558c4c
#: ../../ref/contrib/gis/install/index.txt:13
msgid ":ref:`Python and Django <django>`"
msgstr ""

# d9f3c2dc0ab54349b5285cdff0a70653
#: ../../ref/contrib/gis/install/index.txt:14
msgid ":ref:`spatial_database`"
msgstr ""

# 51bcbda77e1c454b9c18c953e4a6780c
#: ../../ref/contrib/gis/install/index.txt:15
msgid ":ref:`geospatial_libs`"
msgstr ""

# cd739e94486f4161bb0e9e99f650684c
#: ../../ref/contrib/gis/install/index.txt:17
msgid ""
"Details for each of the requirements and installation instructions are "
"provided in the sections below. In addition, platform-specific instructions "
"are available for:"
msgstr ""

# f43ebe2c680e422bb116931886f88205
#: ../../ref/contrib/gis/install/index.txt:21
msgid ":ref:`macosx`"
msgstr ""

# ebae5f0f4fbc40708c69729a8975f131
#: ../../ref/contrib/gis/install/index.txt:22
msgid ":ref:`windows`"
msgstr ""

# 9ea19904353e4b899a608b87fa3c0fb1
#: ../../ref/contrib/gis/install/index.txt:24
msgid "Use the Source"
msgstr ""

# d3ed3ad37a9e45d194880c491ee7b513
#: ../../ref/contrib/gis/install/index.txt:26
msgid ""
"Because GeoDjango takes advantage of the latest in the open source "
"geospatial software technology, recent versions of the libraries are "
"necessary. If binary packages aren't available for your platform, "
"installation from source may be required. When compiling the libraries from "
"source, please follow the directions closely, especially if you're a "
"beginner."
msgstr ""

# b9733dc7bf60462d82bc1b43240f1d39
#: ../../ref/contrib/gis/install/index.txt:33
msgid "Requirements"
msgstr ""

# a3a6db657caa48f49accab1e0a7a24c2
#: ../../ref/contrib/gis/install/index.txt:38
msgid "Python and Django"
msgstr ""

# 8327afd97ac145a0a89eb53d11f6daa4
#: ../../ref/contrib/gis/install/index.txt:40
msgid ""
"Because GeoDjango is included with Django, please refer to Django's :ref:"
"`installation instructions <installing-official-release>` for details on how "
"to install."
msgstr ""

# 449997658e6c49049c16fa3eee045ae7
#: ../../ref/contrib/gis/install/index.txt:48
msgid "Spatial database"
msgstr ""

# 657437ac89af4d04a413cfddf94ced0d
#: ../../ref/contrib/gis/install/index.txt:49
msgid ""
"PostgreSQL (with PostGIS), MySQL (mostly with MyISAM engine), Oracle, and "
"SQLite (with SpatiaLite) are the spatial databases currently supported."
msgstr ""

# 2d1297d1fb194a7b8796ac192b5031de
#: ../../ref/contrib/gis/install/index.txt:54
msgid ""
"PostGIS is recommended, because it is the most mature and feature-rich open "
"source spatial database."
msgstr ""

# 5f15052b96e1456b832bf764bc7b5519
#: ../../ref/contrib/gis/install/index.txt:57
msgid ""
"The geospatial libraries required for a GeoDjango installation depends on "
"the spatial database used.  The following lists the library requirements, "
"supported versions, and any notes for each of the supported database "
"backends:"
msgstr ""

# cb8766f220e14bb691e84085fb5e882b
#: ../../ref/contrib/gis/install/index.txt:62
msgid "Database"
msgstr ""

# d93a1feb285445058da9cf1438f57d26
#: ../../ref/contrib/gis/install/index.txt:62
msgid "Library Requirements"
msgstr ""

# 20942c4920cf4e1589a256716c1fa354
#: ../../ref/contrib/gis/install/index.txt:62
msgid "Notes"
msgstr ""

# 7043d41083ac4c5aa0bf814528011861
# b517807e132b448ea29ec876b87fce55
#: ../../ref/contrib/gis/install/index.txt:64
#: ../../ref/contrib/gis/install/index.txt:416
msgid "PostgreSQL"
msgstr ""

# d7a6108874b84ef1ad1c85438520c875
#: ../../ref/contrib/gis/install/index.txt:64
msgid "GEOS, PROJ.4, PostGIS"
msgstr ""

# 2ebcc5569c7f4adf808c2af6ba8c6a13
#: ../../ref/contrib/gis/install/index.txt:64
msgid "8.2+"
msgstr ""

# 4dffd25407ce4a64a4bb8cd9f63e7e2f
#: ../../ref/contrib/gis/install/index.txt:64
msgid "Requires PostGIS."
msgstr ""

# 0c73dc8638a147c7955b5544cf356dc8
#: ../../ref/contrib/gis/install/index.txt:65
msgid "5.x"
msgstr ""

# 28dc212693eb4b9487d062cef650b3bb
#: ../../ref/contrib/gis/install/index.txt:65
msgid ""
"Not OGC-compliant; :ref:`limited functionality <mysql-spatial-limitations>`."
msgstr ""

# e8c162edba644e9bac8117268ec2fc97
#: ../../ref/contrib/gis/install/index.txt:66
msgid "10.2, 11"
msgstr ""

# 0cc390af41ed4a3e95ebb9712b8d829c
#: ../../ref/contrib/gis/install/index.txt:66
msgid "XE not supported; not tested with 9."
msgstr ""

# d7d62087821f414aa92fa063783620a1
# 476ed635fb4c463f9326aeb29c2d22b8
#: ../../ref/contrib/gis/install/index.txt:67
#: ../../ref/contrib/gis/install/spatialite.txt:31
msgid "SQLite"
msgstr ""

# 03bc22d422734fb185249816ab6864f0
#: ../../ref/contrib/gis/install/index.txt:67
msgid "GEOS, GDAL, PROJ.4, SpatiaLite"
msgstr ""

# 41e6a465e04042fd94b1afd40067e7f5
#: ../../ref/contrib/gis/install/index.txt:67
msgid "3.6.+"
msgstr ""

# 29528a0da94f47e1894b80f1cfc851df
#: ../../ref/contrib/gis/install/index.txt:67
msgid "Requires SpatiaLite 2.3+, pysqlite2 2.5+"
msgstr ""

# a7b508833e384c5ca3c867f494ce6a85
#: ../../ref/contrib/gis/install/index.txt:70
msgid ""
"See also `this comparison matrix`__ on the OSGeo Wiki for PostgreSQL/PostGIS/"
"GEOS/GDAL possible combinations."
msgstr ""

# fb2c27a45f394f3fb27667dfc7ef1ed2
#: ../../ref/contrib/gis/install/index.txt:79
msgid "Geospatial libraries"
msgstr ""

# 82bed41a40594bbf843f34869ac595aa
#: ../../ref/contrib/gis/install/index.txt:87
msgid "Database installation"
msgstr ""

# 7a08f4a7f4c048f3a7f75ee3b52f5f57
#: ../../ref/contrib/gis/install/index.txt:96
msgid "Add ``django.contrib.gis`` to :setting:`INSTALLED_APPS`"
msgstr ""

# f4ec0d80958547d5aa961714272f29cd
#: ../../ref/contrib/gis/install/index.txt:98
msgid ""
"Like other Django contrib applications, you will *only* need to add :mod:"
"`django.contrib.gis` to :setting:`INSTALLED_APPS` in your settings. This is "
"the so that ``gis`` templates can be located -- if not done, then features "
"such as the geographic admin or KML sitemaps will not function properly."
msgstr ""

# 4986e6f9051d4f129ad2e54e4466cb6f
#: ../../ref/contrib/gis/install/index.txt:106
msgid "Add Google projection to ``spatial_ref_sys`` table"
msgstr ""

# 3526da6759004ce68cc2e218e4eeff59
#: ../../ref/contrib/gis/install/index.txt:110
msgid ""
"If you're running PostGIS 1.4 or above, you can skip this step. The entry is "
"already included in the default ``spatial_ref_sys`` table."
msgstr ""

# 9be8ae96e44448c986c91e08980a06a5
#: ../../ref/contrib/gis/install/index.txt:113
msgid ""
"In order to conduct database transformations to the so-called \"Google\" "
"projection (a spherical mercator projection used by Google Maps), an entry "
"must be added to your spatial database's ``spatial_ref_sys`` table. Invoke "
"the Django shell from your project and execute the ``add_srs_entry`` "
"function:"
msgstr ""

# 1c866efcc4504fd0b640587b9f4fe1fb
#: ../../ref/contrib/gis/install/index.txt:125
msgid ""
"This adds an entry for the 900913 SRID to the ``spatial_ref_sys`` (or "
"equivalent) table, making it possible for the spatial database to transform "
"coordinates in this projection.  You only need to execute this command "
"*once* per spatial database."
msgstr ""

# fea605f76b7b4fe7af4cd362d5350391
#: ../../ref/contrib/gis/install/index.txt:132
msgid ""
"If you can't find the solution to your problem here then participate in the "
"community!  You can:"
msgstr ""

# 78b0054e79b6479b91c0d23125562b8e
#: ../../ref/contrib/gis/install/index.txt:135
msgid ""
"Join the ``#geodjango`` IRC channel on FreeNode. Please be patient and "
"polite -- while you may not get an immediate response, someone will attempt "
"to answer your question as soon as they see it."
msgstr ""

# a16e8fc56fc54a5685112aef0bdd1494
#: ../../ref/contrib/gis/install/index.txt:138
msgid "Ask your question on the `GeoDjango`__ mailing list."
msgstr ""

# 342e583ebc6847c6924649e0b2501d7f
#: ../../ref/contrib/gis/install/index.txt:139
msgid ""
"File a ticket on the `Django trac`__ if you think there's a bug.  Make sure "
"to provide a complete description of the problem, versions used, and specify "
"the component as \"GIS\"."
msgstr ""

# a1347a179a3142769f2eceb34807a8fc
#: ../../ref/contrib/gis/install/index.txt:149
msgid "Library environment settings"
msgstr ""

# c7075af821054bedb9c4c0dcda5a04ff
#: ../../ref/contrib/gis/install/index.txt:151
msgid ""
"By far, the most common problem when installing GeoDjango is that the "
"external shared libraries (e.g., for GEOS and GDAL) cannot be located. [#]_ "
"Typically, the cause of this problem is that the operating system isn't "
"aware of the directory where the libraries built from source were installed."
msgstr ""

# 9addfa2688bf423aabfef6bf684ddd4d
#: ../../ref/contrib/gis/install/index.txt:156
msgid ""
"In general, the library path may be set on a per-user basis by setting an "
"environment variable, or by configuring the library path for the entire "
"system."
msgstr ""

# ba9907cbda464111b7331d8da4c6335a
#: ../../ref/contrib/gis/install/index.txt:161
msgid "``LD_LIBRARY_PATH`` environment variable"
msgstr ""

# 4b9de21c076242c3bba58857f9ca5044
#: ../../ref/contrib/gis/install/index.txt:163
msgid ""
"A user may set this environment variable to customize the library paths they "
"want to use.  The typical library directory for software built from source "
"is ``/usr/local/lib``.  Thus, ``/usr/local/lib`` needs to be included in the "
"``LD_LIBRARY_PATH`` variable.  For example, the user could place the "
"following in their bash profile::"
msgstr ""

# a28e8a5561f24a5e8ecf3c093945d684
#: ../../ref/contrib/gis/install/index.txt:172
msgid "Setting system library path"
msgstr ""

# 3f0dcf96261947b181aae9c6296482fc
#: ../../ref/contrib/gis/install/index.txt:174
msgid ""
"On GNU/Linux systems, there is typically a file in ``/etc/ld.so.conf``, "
"which may include additional paths from files in another directory, such as "
"``/etc/ld.so.conf.d``. As the root user, add the custom library path (like "
"``/usr/local/lib``) on a new line in ``ld.so.conf``.  This is *one* example "
"of how to do so::"
msgstr ""

# 08e6a1c830e24c8ea0709f6adc61053a
#: ../../ref/contrib/gis/install/index.txt:182
msgid ""
"For OpenSolaris users, the system library path may be modified using the "
"``crle`` utility.  Run ``crle`` with no options to see the current "
"configuration and use ``crle -l`` to set with the new library path.  Be "
"*very* careful when modifying the system library path::"
msgstr ""

# 789d9d7267c04ca19a89d0f92368c191
#: ../../ref/contrib/gis/install/index.txt:192
msgid "Install ``binutils``"
msgstr ""

# 697b17f28e8e4e30bd3b4e21eaad657a
#: ../../ref/contrib/gis/install/index.txt:194
msgid ""
"GeoDjango uses the ``find_library`` function (from the ``ctypes.util`` "
"Python module) to discover libraries.  The ``find_library`` routine uses a "
"program called ``objdump`` (part of the ``binutils`` package) to verify a "
"shared library on GNU/Linux systems.  Thus, if ``binutils`` is not installed "
"on your Linux system then Python's ctypes may not be able to find your "
"library even if your library path is set correctly and geospatial libraries "
"were built perfectly."
msgstr ""

# 8d1c63fff0c74880af3eadbab4bb0f4e
#: ../../ref/contrib/gis/install/index.txt:201
msgid ""
"The ``binutils`` package may be installed on Debian and Ubuntu systems using "
"the following command::"
msgstr ""

# 1baad0d12f1a4255b958bd91d2d1d5de
#: ../../ref/contrib/gis/install/index.txt:206
msgid "Similarly, on Red Hat and CentOS systems::"
msgstr ""

# c0a810ae0e5d4717a43b2fc7fc736f8a
#: ../../ref/contrib/gis/install/index.txt:211
msgid "Platform-specific instructions"
msgstr ""

# 9ab83107a61b4f4b9c840f8a14e2a6f4
#: ../../ref/contrib/gis/install/index.txt:216
msgid "Mac OS X"
msgstr ""

# ad404790969b417b95e9ae27ebcd1eab
#: ../../ref/contrib/gis/install/index.txt:218
msgid ""
"Because of the variety of packaging systems available for OS X, users have "
"several different options for installing GeoDjango. These options are:"
msgstr ""

# 05f5d1abbd00402cae467305d0afb6d5
#: ../../ref/contrib/gis/install/index.txt:221
msgid ":ref:`homebrew`"
msgstr ""

# 29636ce3afc549d8a783333db2d5dd75
#: ../../ref/contrib/gis/install/index.txt:222
msgid ":ref:`kyngchaos`"
msgstr ""

# afa51cb4251c473b848562ecca91acfc
#: ../../ref/contrib/gis/install/index.txt:223
msgid ":ref:`fink`"
msgstr ""

# 640b95fc03ef4e7fb2d9980163a684bd
#: ../../ref/contrib/gis/install/index.txt:224
msgid ":ref:`macports`"
msgstr ""

# f0c02fe700b64710a7969e918454f66c
#: ../../ref/contrib/gis/install/index.txt:225
msgid ":ref:`build_from_source`"
msgstr ""

# 3e19d1edea574d539b71caacd817e4cb
#: ../../ref/contrib/gis/install/index.txt:229
msgid ""
"Currently, the easiest and recommended approach for installing GeoDjango on "
"OS X is to use the KyngChaos packages."
msgstr ""

# a8b0a9a60b0c432d9268515d4222bd15
#: ../../ref/contrib/gis/install/index.txt:232
msgid ""
"This section also includes instructions for installing an upgraded version "
"of :ref:`macosx_python` from packages provided by the Python Software "
"Foundation, however, this is not required."
msgstr ""

# b975b417c767400c944da95af9128d45
# 3adc174510db49f3b76b6a9ae10e272b
#: ../../ref/contrib/gis/install/index.txt:239
#: ../../ref/contrib/gis/install/index.txt:400
msgid "Python"
msgstr ""

# 0f742a11bad843349f7a2dab7e99d308
#: ../../ref/contrib/gis/install/index.txt:241
msgid ""
"Although OS X comes with Python installed, users can use framework "
"installers (`2.6`__ and `2.7`__ are available) provided by the Python "
"Software Foundation.  An advantage to using the installer is that OS X's "
"Python will remain \"pristine\" for internal operating system use."
msgstr ""

# 8c13f11fefc5435890af1997c2b88cd5
#: ../../ref/contrib/gis/install/index.txt:252
msgid ""
"You will need to modify the ``PATH`` environment variable in your ``."
"profile`` file so that the new version of Python is used when ``python`` is "
"entered at the command-line::"
msgstr ""

# f3f57bb7aa70488baaf8a37f35142963
#: ../../ref/contrib/gis/install/index.txt:261
msgid "Homebrew"
msgstr ""

# 2cd48a60acfc4f6aa1ebcab5f84abdc5
#: ../../ref/contrib/gis/install/index.txt:263
msgid ""
"`Homebrew`__ provides \"recipes\" for building binaries and packages from "
"source. It provides recipes for the GeoDjango prerequisites on Macintosh "
"computers running OS X. Because Homebrew still builds the software from "
"source, the `Apple Developer Tools`_ are required."
msgstr ""

# 04d7df564ece40f08698858ccd9fe503
# 57bc34c230244f768d653a92f78e3834
#: ../../ref/contrib/gis/install/index.txt:268
#: ../../ref/contrib/gis/install/index.txt:361
msgid "Summary::"
msgstr ""

# fedcb12109ec42a39c08313716b9833c
#: ../../ref/contrib/gis/install/index.txt:281
msgid "KyngChaos packages"
msgstr ""

# 34477326feef4aabb300c68388dce2db
#: ../../ref/contrib/gis/install/index.txt:283
msgid ""
"William Kyngesburye provides a number of `geospatial library binary "
"packages`__ that make it simple to get GeoDjango installed on OS X without "
"compiling them from source.  However, the `Apple Developer Tools`_ are still "
"necessary for compiling the Python database adapters :ref:"
"`psycopg2_kyngchaos` (for PostGIS) and :ref:`pysqlite2` (for SpatiaLite)."
msgstr ""

# b862c76631a74573bbead60c0aad96d0
#: ../../ref/contrib/gis/install/index.txt:291
msgid ""
"SpatiaLite users should consult the :ref:`spatialite_macosx` section after "
"installing the packages for additional instructions."
msgstr ""

# b1afc1a2e89a4675ae5aa78171d668dd
#: ../../ref/contrib/gis/install/index.txt:294
msgid "Download the framework packages for:"
msgstr ""

# d86290b384294614b91779662242c1cb
#: ../../ref/contrib/gis/install/index.txt:296
msgid "UnixImageIO"
msgstr ""

# 545db63bda054ed4ab9cc75644fc09b1
#: ../../ref/contrib/gis/install/index.txt:297
msgid "PROJ"
msgstr ""

# 699ad6ca78fd4717a8218ee144404cd5
#: ../../ref/contrib/gis/install/index.txt:299
msgid "SQLite3 (includes the SpatiaLite library)"
msgstr ""

# 0db1a0f8465842b99139a9926fcba15d
#: ../../ref/contrib/gis/install/index.txt:302
msgid ""
"Install the packages in the order they are listed above, as the GDAL and "
"SQLite packages require the packages listed before them."
msgstr ""

# db1164020e6244a084c3b5cc8ee084e8
#: ../../ref/contrib/gis/install/index.txt:305
msgid ""
"Afterwards, you can also install the KyngChaos binary packages for "
"`PostgreSQL and PostGIS`__."
msgstr ""

# d3acd994bc224069bd229fa74d8f87c7
#: ../../ref/contrib/gis/install/index.txt:308
msgid ""
"After installing the binary packages, you'll want to add the following to "
"your ``.profile`` to be able to run the package programs from the command-"
"line::"
msgstr ""

# 3ad085c8090a456da8699e863d30e51c
# e86a63a9cb324c7086947d9c59715ef9
#: ../../ref/contrib/gis/install/index.txt:324
#: ../../ref/contrib/gis/install/index.txt:467
msgid "psycopg2"
msgstr ""

# 1c4bfd76a1b646aca9abf68bf97a1820
#: ../../ref/contrib/gis/install/index.txt:326
msgid ""
"After you've installed the KyngChaos binaries and modified your ``PATH``, as "
"described above, ``psycopg2`` may be installed using the following command::"
msgstr ""

# 96dda7821e17422db33bd44a63ad55cd
#: ../../ref/contrib/gis/install/index.txt:333
msgid ""
"If you don't have ``pip``, follow the :ref:`installation instructions "
"<installing-official-release>` to install it."
msgstr ""

# 6f9769097386451c9d0ad0d08c9b7bfa
#: ../../ref/contrib/gis/install/index.txt:339
msgid "Fink"
msgstr ""

# a39e5ead99124866b96b6287b0851b76
#: ../../ref/contrib/gis/install/index.txt:341
msgid ""
"`Kurt Schwehr`__ has been gracious enough to create GeoDjango packages for "
"users of the `Fink`__ package system.  The following packages are available, "
"depending on which version of Python you want to use:"
msgstr ""

# ed7b97fc417b467aa91815d7b1ef641c
#: ../../ref/contrib/gis/install/index.txt:345
msgid "``django-gis-py26``"
msgstr ""

# 272ebe71876e48b684cfc9c205aa4415
#: ../../ref/contrib/gis/install/index.txt:346
msgid "``django-gis-py25``"
msgstr ""

# 7e1888f39c4b4935bf29069ae8f3e6a1
#: ../../ref/contrib/gis/install/index.txt:347
msgid "``django-gis-py24``"
msgstr ""

# 2233a9a3f74540979b78d055fc0f096c
#: ../../ref/contrib/gis/install/index.txt:355
msgid "MacPorts"
msgstr ""

# c3e9b9ef53754308af7fd5cff4f67df7
#: ../../ref/contrib/gis/install/index.txt:357
msgid ""
"`MacPorts`__ may be used to install GeoDjango prerequisites on Macintosh "
"computers running OS X.  Because MacPorts still builds the software from "
"source, the `Apple Developer Tools`_ are required."
msgstr ""

# 72e1d973b8304372b2965d0d77255d2d
#: ../../ref/contrib/gis/install/index.txt:372
msgid ""
"You will also have to modify the ``PATH`` in your ``.profile`` so that the "
"MacPorts programs are accessible from the command-line::"
msgstr ""

# f4909a99f6f3438a908d925b62b3c4e8
#: ../../ref/contrib/gis/install/index.txt:377
msgid ""
"In addition, add the ``DYLD_FALLBACK_LIBRARY_PATH`` setting so that the "
"libraries can be found by Python::"
msgstr ""

# 7a5e308faba74a2c902f06c5a0825f48
# 077002046ffb4000b1de6c68e709a453
#: ../../ref/contrib/gis/install/index.txt:387
#: ../../ref/contrib/gis/testing.txt:96
msgid "Windows"
msgstr ""

# a0279693b64b41dc953e2ac9c36161d2
#: ../../ref/contrib/gis/install/index.txt:389
msgid ""
"Proceed through the following sections sequentially in order to install "
"GeoDjango on Windows."
msgstr ""

# 81fe23fd2b17403db69ccab3ddb0e671
#: ../../ref/contrib/gis/install/index.txt:394
msgid ""
"These instructions assume that you are using 32-bit versions of all "
"programs.  While 64-bit versions of Python and PostgreSQL 9.x are available, "
"64-bit versions of spatial libraries, like GEOS and GDAL, are not yet "
"provided by the :ref:`OSGeo4W` installer."
msgstr ""

# 4ae1e53a433547a1b2da27c15e01b9fe
#: ../../ref/contrib/gis/install/index.txt:402
msgid ""
"First, download the latest `Python 2.7 installer`__ from the Python Web "
"site. Next, run the installer and keep the defaults -- for example, keep "
"'Install for all users' checked and the installation path set as ``C:"
"\\Python27``."
msgstr ""

# 71fed35b9d1042eeacffd1bd885223b8
#: ../../ref/contrib/gis/install/index.txt:409
msgid ""
"You may already have a version of Python installed in ``C:\\python`` as ESRI "
"products sometimes install a copy there.  *You should still install a fresh "
"version of Python 2.7.*"
msgstr ""

# 3d4f55cdc70742f4bfec71bc502a669e
#: ../../ref/contrib/gis/install/index.txt:418
msgid ""
"First, download the latest `PostgreSQL 9.x installer`__ from the "
"`EnterpriseDB`__ Web site.  After downloading, simply run the installer, "
"follow the on-screen directions, and keep the default options unless you "
"know the consequences of changing them."
msgstr ""

# 7202e73dd5024e0fa226226ec02f83d3
#: ../../ref/contrib/gis/install/index.txt:425
msgid ""
"The PostgreSQL installer creates both a new Windows user to be the 'postgres "
"service account' and a ``postgres`` database superuser You will be prompted "
"once to set the password for both accounts -- make sure to remember it!"
msgstr ""

# 9679d7e9741240be82150b7b23f2e081
#: ../../ref/contrib/gis/install/index.txt:430
msgid ""
"When the installer completes, it will ask to launch the Application Stack "
"Builder (ASB) on exit -- keep this checked, as it is necessary to install :"
"ref:`postgisasb`."
msgstr ""

# 60607f30110047aaa8d2de468cd0c07e
#: ../../ref/contrib/gis/install/index.txt:436
msgid ""
"If installed successfully, the PostgreSQL server will run in the background "
"each time the system as started as a Windows service. A :menuselection:"
"`PostgreSQL 9.x` start menu group will created and contains shortcuts for "
"the ASB as well as the 'SQL Shell', which will launch a ``psql`` command "
"window."
msgstr ""

# 4147ee03f71c4731a32e3aeb20c5ab75
#: ../../ref/contrib/gis/install/index.txt:450
msgid ""
"From within the Application Stack Builder (to run outside of the installer, :"
"menuselection:`Start --> Programs --> PostgreSQL 9.x`), select :"
"menuselection:`PostgreSQL Database Server 9.x on port 5432` from the drop "
"down menu.  Next, expand the :menuselection:`Categories --> Spatial "
"Extensions` menu tree and select :menuselection:`PostGIS 1.5 for PostgreSQL "
"9.x`."
msgstr ""

# b1686740be9243b0aff8955d7e641c8d
#: ../../ref/contrib/gis/install/index.txt:456
msgid ""
"After clicking next, you will be prompted to select your mirror, PostGIS "
"will be downloaded, and the PostGIS installer will begin.  Select only the "
"default options during install (e.g., do not uncheck the option to create a "
"default PostGIS database)."
msgstr ""

# 9a54c6a04b444b7e9e5f3f44106b6dfc
#: ../../ref/contrib/gis/install/index.txt:463
msgid ""
"You will be prompted to enter your ``postgres`` database superuser password "
"in the 'Database Connection Information' dialog."
msgstr ""

# 528e8890e46f4463848d872f11362c96
#: ../../ref/contrib/gis/install/index.txt:469
msgid ""
"The ``psycopg2`` Python module provides the interface between Python and the "
"PostgreSQL database.  Download the latest `Windows installer`__ for your "
"version of Python and PostgreSQL and run using the default settings. [#]_"
msgstr ""

# 8ee26db8c3fe47bb89192cb588e9209b
#: ../../ref/contrib/gis/install/index.txt:478
msgid "OSGeo4W"
msgstr ""

# 1b91dbddab3b436b9cf77875c41f0613
#: ../../ref/contrib/gis/install/index.txt:480
msgid ""
"The `OSGeo4W installer`_ makes it simple to install the PROJ.4, GDAL, and "
"GEOS libraries required by GeoDjango.  First, download the `OSGeo4W "
"installer`_, and run it.  Select :menuselection:`Express Web-GIS Install` "
"and click next. In the 'Select Packages' list, ensure that GDAL is selected; "
"MapServer and Apache are also enabled by default, but are not required by "
"GeoDjango and may be unchecked safely.  After clicking next, the packages "
"will be automatically downloaded and installed, after which you may exit the "
"installer."
msgstr ""

# bf066d6ec7e04ed9b741ec1765dce6c6
#: ../../ref/contrib/gis/install/index.txt:492
msgid "Modify Windows environment"
msgstr ""

# 9981152b2ee6496798a0f9666de5600e
#: ../../ref/contrib/gis/install/index.txt:494
msgid ""
"In order to use GeoDjango, you will need to add your Python and OSGeo4W "
"directories to your Windows system ``Path``, as well as create ``GDAL_DATA`` "
"and ``PROJ_LIB`` environment variables.  The following set of commands, "
"executable with ``cmd.exe``, will set this up:"
msgstr ""

# 74ad0989604d4ff487cdcefb7fc21357
#: ../../ref/contrib/gis/install/index.txt:510
msgid ""
"For your convenience, these commands are available in the executable batch "
"script, :download:`geodjango_setup.bat`."
msgstr ""

# 44aaa33f519041a2927438a158d4983c
#: ../../ref/contrib/gis/install/index.txt:515
msgid ""
"Administrator privileges are required to execute these commands. To do this, "
"right-click on :download:`geodjango_setup.bat` and select :menuselection:"
"`Run as administrator`. You need to log out and log back in again for the "
"settings to take effect."
msgstr ""

# d2930958950b4906b3ff3dd2e90d7c5c
#: ../../ref/contrib/gis/install/index.txt:522
msgid ""
"If you customized the Python or OSGeo4W installation directories, then you "
"will need to modify the ``OSGEO4W_ROOT`` and/or ``PYTHON_ROOT`` variables "
"accordingly."
msgstr ""

# abeb18b635de4d3d94854325dd399e7f
#: ../../ref/contrib/gis/install/index.txt:527
msgid "Install Django and set up database"
msgstr ""

# 5258bf2cf0524ae3a0a486514dc4168e
#: ../../ref/contrib/gis/install/index.txt:529
msgid ""
"Finally, :ref:`install Django <installing-official-release>` on your system."
msgstr ""

# 1479b355026a4cc18be5a3169783f9b6
#: ../../ref/contrib/gis/install/index.txt:532
msgid ""
"GeoDjango uses the :func:`~ctypes.util.find_library` routine from ``ctypes."
"util`` to locate shared libraries."
msgstr ""

# 72a2df54605e4ffaa5df45929a8b88f6
#: ../../ref/contrib/gis/install/index.txt:534
msgid ""
"The ``psycopg2`` Windows installers are packaged and maintained by `Jason "
"Erickson <http://www.stickpeople.com/projects/python/win-psycopg/>`_."
msgstr ""

# 4ba9b2f23e6940ada87a04623e3a3699
#: ../../ref/contrib/gis/install/postgis.txt:5
msgid "Installing PostGIS"
msgstr ""

# 214e3fd16a9b45eba608e8abbea7c227
#: ../../ref/contrib/gis/install/postgis.txt:7
msgid ""
"`PostGIS`__ adds geographic object support to PostgreSQL, turning it into a "
"spatial database. :ref:`geosbuild`, :ref:`proj4` and :ref:`gdalbuild` should "
"be installed prior to building PostGIS. You might also need additional "
"libraries, see `PostGIS requirements`_."
msgstr ""

# 354c42ba34f34d04ba4124bb972e8949
#: ../../ref/contrib/gis/install/postgis.txt:14
msgid ""
"The `psycopg2`_ module is required for use as the database adaptor when "
"using GeoDjango with PostGIS."
msgstr ""

# 5d7e8af7e33e46559092f75e66162f75
#: ../../ref/contrib/gis/install/postgis.txt:20
msgid ""
"On Debian/Ubuntu, you are advised to install the following packages: "
"postgresql-x.x, postgresql-x.x-postgis, postgresql-server-dev-x.x, python-"
"psycopg2 (x.x matching the PostgreSQL version you want to install). Please "
"also consult platform-specific instructions if you are on :ref:`macosx` or :"
"ref:`windows`."
msgstr ""

# b802e2a29daf497881ca79ae8709b6da
#: ../../ref/contrib/gis/install/postgis.txt:29
msgid "First download the source archive, and extract::"
msgstr ""

# 09126366470141fa94db4046fcbc67ab
#: ../../ref/contrib/gis/install/postgis.txt:35
msgid "Next, configure, make and install PostGIS::"
msgstr ""

# ad0c41d4128941cdad7583bbf8807ab5
#: ../../ref/contrib/gis/install/postgis.txt:39
msgid "Finally, make and install::"
msgstr ""

# 322def9116d54399b7dd6652d9e91a4e
#: ../../ref/contrib/gis/install/postgis.txt:47
msgid ""
"GeoDjango does not automatically create a spatial database.  Please consult "
"the section on :ref:`spatialdb_template91` or :ref:"
"`spatialdb_template_earlier` for more information."
msgstr ""

# 18c4e2dfb36848ce84601b29c5309d52
#: ../../ref/contrib/gis/install/postgis.txt:54
msgid "Post-installation"
msgstr ""

# 6e5eecbb1d574fbe930057fc26cd4c9e
#: ../../ref/contrib/gis/install/postgis.txt:60
msgid "Creating a spatial database with PostGIS 2.0 and PostgreSQL 9.1+"
msgstr ""

# eb67df52b05e4997b66f4922fe45dc7f
#: ../../ref/contrib/gis/install/postgis.txt:62
msgid ""
"PostGIS 2 includes an extension for Postgres 9.1+ that can be used to enable "
"spatial functionality::"
msgstr ""

# 8e800f400f1a4c70ab8a50cebc34bc19
#: ../../ref/contrib/gis/install/postgis.txt:70
msgid ""
"No PostGIS topology functionalities are yet available from GeoDjango, so the "
"creation of the ``postgis_topology`` extension is entirely optional."
msgstr ""

# 8942f170cb0543cfb86287af0e651a48
#: ../../ref/contrib/gis/install/postgis.txt:76
msgid "Creating a spatial database template for earlier versions"
msgstr ""

# 6f5a5b0afd2547788d5f9b4f072cb105
#: ../../ref/contrib/gis/install/postgis.txt:78
msgid ""
"If you have an earlier version of PostGIS or PostgreSQL, the CREATE "
"EXTENSION isn't available and you need to create the spatial database using "
"the following instructions."
msgstr ""

# 084d5970b6784cdf8a24e291c37cddee
#: ../../ref/contrib/gis/install/postgis.txt:82
msgid ""
"Creating a spatial database with PostGIS is different than normal because "
"additional SQL must be loaded to enable spatial functionality.  Because of "
"the steps in this process, it's better to create a database template that "
"can be reused later."
msgstr ""

# d8f4b420b08241fab7a66af6ec3df74d
#: ../../ref/contrib/gis/install/postgis.txt:87
msgid ""
"First, you need to be able to execute the commands as a privileged database "
"user.  For example, you can use the following to become the ``postgres`` "
"user::"
msgstr ""

# d7e75fdd3ef84f98a3529945a164900e
#: ../../ref/contrib/gis/install/postgis.txt:94
msgid ""
"The location *and* name of the PostGIS SQL files (e.g., from "
"``POSTGIS_SQL_PATH`` below) depends on the version of PostGIS. PostGIS "
"versions 1.3 and below use ``<pg_sharedir>/contrib/lwpostgis.sql``; whereas "
"version 1.4 uses ``<sharedir>/contrib/postgis.sql`` and version 1.5 uses "
"``<sharedir>/contrib/postgis-1.5/postgis.sql``."
msgstr ""

# fc1aebac940c4e5cbfbf657765025363
#: ../../ref/contrib/gis/install/postgis.txt:100
msgid ""
"To complicate matters, Debian/Ubuntu distributions have their own separate "
"directory naming system that might change with time. In this case, use the :"
"download:`create_template_postgis-debian.sh` script."
msgstr ""

# eb6caf9006c649b580180fbe6b139470
#: ../../ref/contrib/gis/install/postgis.txt:104
msgid ""
"The example below assumes PostGIS 1.5, thus you may need to modify "
"``POSTGIS_SQL_PATH`` and the name of the SQL file for the specific version "
"of PostGIS you are using."
msgstr ""

# 74669bad85cb428da72640d3a4101e6e
#: ../../ref/contrib/gis/install/postgis.txt:108
msgid ""
"Once you're a database super user, then you may execute the following "
"commands to create a PostGIS spatial database template::"
msgstr ""

# 2c6a1e6b082a4dd390ed973dc94b997b
#: ../../ref/contrib/gis/install/postgis.txt:125
msgid ""
"These commands may be placed in a shell script for later use; for "
"convenience the following scripts are available:"
msgstr ""

# 9d6e11149b134c3d9d0942bc7e366fe0
#: ../../ref/contrib/gis/install/postgis.txt:129
msgid "PostGIS version"
msgstr ""

# d30a7a67c5d74fcd89875ec584c5591a
#: ../../ref/contrib/gis/install/postgis.txt:129
msgid "Bash shell script"
msgstr ""

# ec4e7590f1d14f9985e728405d24e540
#: ../../ref/contrib/gis/install/postgis.txt:131
msgid "1.3"
msgstr ""

# 8a448bac7c954e3aa17169544b176ae1
#: ../../ref/contrib/gis/install/postgis.txt:131
msgid ":download:`create_template_postgis-1.3.sh`"
msgstr ""

# dd53daeed80c4688a7cc1464be014498
#: ../../ref/contrib/gis/install/postgis.txt:132
msgid ":download:`create_template_postgis-1.4.sh`"
msgstr ""

# 988259b6b41644ca8ee3d49bd4a19d94
#: ../../ref/contrib/gis/install/postgis.txt:133
msgid "1.5"
msgstr ""

# 0f7471fb7bfe404b82042a6db1d87f84
#: ../../ref/contrib/gis/install/postgis.txt:133
msgid ":download:`create_template_postgis-1.5.sh`"
msgstr ""

# cfbf93a0c7bc48e19e34e5fa2222d8b0
#: ../../ref/contrib/gis/install/postgis.txt:134
msgid "Debian/Ubuntu"
msgstr ""

# 230af0c084de41e493d9f2fad5c76991
#: ../../ref/contrib/gis/install/postgis.txt:134
msgid ":download:`create_template_postgis-debian.sh`"
msgstr ""

# e11e88be702c40e394785e06abf96f79
#: ../../ref/contrib/gis/install/postgis.txt:137
msgid ""
"Afterwards, you may create a spatial database by simply specifying "
"``template_postgis`` as the template to use (via the ``-T`` option)::"
msgstr ""

# 8c439ff8b5e74e8fa997cb2cd2879d33
#: ../../ref/contrib/gis/install/postgis.txt:144
msgid ""
"While the ``createdb`` command does not require database super-user "
"privileges, it must be executed by a database user that has permissions to "
"create databases. You can create such a user with the following command::"
msgstr ""

# 5da8f587bbee447989bd47d07220607a
#: ../../ref/contrib/gis/install/postgis.txt:151
msgid "PostgreSQL's createdb fails"
msgstr ""

# 97a0d2fbfed4428d9b631d367afc7504
#: ../../ref/contrib/gis/install/postgis.txt:153
msgid ""
"When the PostgreSQL cluster uses a non-UTF8 encoding, the :file:"
"`create_template_postgis-*.sh` script will fail when executing ``createdb``::"
msgstr ""

# 6f74f36b298448a39148b9811951193f
#: ../../ref/contrib/gis/install/postgis.txt:160
msgid ""
"The `current workaround`__ is to re-create the cluster using UTF8 (back up "
"any databases before dropping the cluster)."
msgstr ""

# e21133cf7d884473891ed678a60d0929
#: ../../ref/contrib/gis/install/postgis.txt:166
msgid "Managing the database"
msgstr ""

# 3ac018e90be549d69dfd2d852121e210
#: ../../ref/contrib/gis/install/postgis.txt:168
msgid ""
"To administer the database, you can either use the pgAdmin III program (:"
"menuselection:`Start --> PostgreSQL 9.x --> pgAdmin III`) or the SQL Shell (:"
"menuselection:`Start --> PostgreSQL 9.x --> SQL Shell`). For example, to "
"create a ``geodjango`` spatial database and user, the following may be "
"executed from the SQL Shell as the ``postgres`` user::"
msgstr ""

# f5006a53329645afaac3e63069a37d82
#: ../../ref/contrib/gis/install/spatialite.txt:5
msgid "Installing Spatialite"
msgstr ""

# 3d29de44e7de44d9b6900193888ba7cd
#: ../../ref/contrib/gis/install/spatialite.txt:7
msgid ""
"`SpatiaLite`__ adds spatial support to SQLite, turning it into a full-"
"featured spatial database."
msgstr ""

# 26426f7f38564d39b3ecfdccd9b1184f
#: ../../ref/contrib/gis/install/spatialite.txt:10
msgid ""
"Check first if you can install Spatialite from system packages or binaries. "
"For example, on Debian-based distributions, try to install the ``spatialite-"
"bin`` package. For Mac OS X, follow the :ref:`specific instructions "
"below<spatialite_macosx>`. For Windows, you may find binaries on `Gaia-"
"SINS`__ home page. In any case, you should always be able to :ref:`install "
"from source<spatialite_source>`."
msgstr ""

# 36c102e6b2964e938c6784e52a9e3806
#: ../../ref/contrib/gis/install/spatialite.txt:17
msgid ""
"When you are done with the installation process, skip to :ref:"
"`create_spatialite_db`."
msgstr ""

# 4dd01c0ecc9c4bbea4856dd413b745c4
#: ../../ref/contrib/gis/install/spatialite.txt:25
msgid "Installing from source"
msgstr ""

# d87b7ab6b5134e20b88ae92b192fe199
#: ../../ref/contrib/gis/install/spatialite.txt:27
msgid ""
":ref:`GEOS and PROJ.4<geospatial_libs>` should be installed prior to "
"building SpatiaLite."
msgstr ""

# 4aa04a13d5114f3db4a9044d53bc663b
#: ../../ref/contrib/gis/install/spatialite.txt:33
msgid ""
"Check first if SQLite is compiled with the `R*Tree module`__. Run the "
"sqlite3 command line interface and enter the following query::"
msgstr ""

# 599bf9de50d543a49c29edd6056e9206
#: ../../ref/contrib/gis/install/spatialite.txt:38
msgid ""
"If you obtain an error, you will have to recompile SQLite from source. "
"Otherwise, just skip this section."
msgstr ""

# 5adf63b9a93b4e839c24a388a8004834
#: ../../ref/contrib/gis/install/spatialite.txt:41
msgid ""
"To install from sources, download the latest amalgamation source archive "
"from the `SQLite download page`__, and extract::"
msgstr ""

# fce8249f15a34905ad70827525d1609d
#: ../../ref/contrib/gis/install/spatialite.txt:48
msgid ""
"Next, run the ``configure`` script -- however the ``CFLAGS`` environment "
"variable needs to be customized so that SQLite knows to build the R*Tree "
"module::"
msgstr ""

# 9508b2088bec4757a6a5ff9e6086e33b
#: ../../ref/contrib/gis/install/spatialite.txt:62
msgid "SpatiaLite library (``libspatialite``) and tools (``spatialite``)"
msgstr ""

# ec20e203a4004759a41de87a2a08130a
#: ../../ref/contrib/gis/install/spatialite.txt:64
msgid ""
"Get the latest SpatiaLite library source and tools bundle from the `download "
"page`__::"
msgstr ""

# a5a5771413204b5fb428a0cf4d83ebb6
#: ../../ref/contrib/gis/install/spatialite.txt:72
msgid ""
"Prior to attempting to build, please read the important notes below to see "
"if customization of the ``configure`` command is necessary.  If not, then "
"run the ``configure`` script, make, and install for the SpatiaLite library::"
msgstr ""

# e72fbc9570cb43fdbddb5186247775a1
#: ../../ref/contrib/gis/install/spatialite.txt:82
msgid "Finally, do the same for the SpatiaLite tools::"
msgstr ""

# 5df2d27c651a47858f9c1e4058ce3924
#: ../../ref/contrib/gis/install/spatialite.txt:92
msgid ""
"If you've installed GEOS and PROJ.4 from binary packages, you will have to "
"specify their paths when running the ``configure`` scripts for *both* the "
"library and the tools (the configure scripts look, by default, in ``/usr/"
"local``).  For example, on Debian/Ubuntu distributions that have GEOS and "
"PROJ.4 packages, the command would be::"
msgstr ""

# b239672f375040dda4f17f052281eab2
#: ../../ref/contrib/gis/install/spatialite.txt:101
msgid ""
"For Mac OS X users building from source, the SpatiaLite library *and* tools "
"need to have their ``target`` configured::"
msgstr ""

# cc3bff5a3f9944c0b10d97f201f59bb2
#: ../../ref/contrib/gis/install/spatialite.txt:111
msgid "pysqlite2"
msgstr ""

# c4d6816be9ba4e548171d6bde535abd8
#: ../../ref/contrib/gis/install/spatialite.txt:113
msgid ""
"If you are on Python 2.6, you will also have to compile pysqlite2, because "
"``SpatiaLite`` must be loaded as an external extension, and the required "
"``enable_load_extension`` method is only available in versions 2.5+ of "
"pysqlite2. Thus, download pysqlite2 2.6, and untar::"
msgstr ""

# fdcc5e95e10f4604b60f63a1cd2cd62a
#: ../../ref/contrib/gis/install/spatialite.txt:122
msgid ""
"Next, use a text editor (e.g., ``emacs`` or ``vi``) to edit the ``setup."
"cfg`` file to look like the following:"
msgstr ""

# bb5897bd86404ab0ad4b31ed0ebc1dc0
#: ../../ref/contrib/gis/install/spatialite.txt:134
msgid "or if you are on Mac OS X:"
msgstr ""

# d96eb59bbca546cb969d6a7406ecf8af
#: ../../ref/contrib/gis/install/spatialite.txt:147
msgid ""
"The important thing here is to make sure you comment out the "
"``define=SQLITE_OMIT_LOAD_EXTENSION`` flag and that the ``include_dirs`` and "
"``library_dirs`` settings are uncommented and set to the appropriate path if "
"the SQLite header files and libraries are not in ``/usr/include`` and ``/usr/"
"lib``, respectively."
msgstr ""

# b985f6ab1fd3498fa0ba2fa7aaefe93f
#: ../../ref/contrib/gis/install/spatialite.txt:153
msgid ""
"After modifying ``setup.cfg`` appropriately, then run the ``setup.py`` "
"script to build and install::"
msgstr ""

# 1e716a3b49364c69b3c813595b9fad6c
#: ../../ref/contrib/gis/install/spatialite.txt:161
msgid "Mac OS X-specific instructions"
msgstr ""

# a075575e11c04b04bb2729e7c87fa1d0
#: ../../ref/contrib/gis/install/spatialite.txt:163
msgid ""
"Mac OS X users should follow the instructions in the :ref:`kyngchaos` "
"section, as it is much easier than building from source."
msgstr ""

# 04423c1ef059455fab70807a341b366d
#: ../../ref/contrib/gis/install/spatialite.txt:166
msgid ""
"When :ref:`create_spatialite_db`, the ``spatialite`` program is required. "
"However, instead of attempting to compile the SpatiaLite tools from source, "
"download the `SpatiaLite Binaries`__ for OS X, and install ``spatialite`` in "
"a location available in your ``PATH``.  For example::"
msgstr ""

# 50f175f8d1c74e78b2fa040595fbc9bd
#: ../../ref/contrib/gis/install/spatialite.txt:176
msgid ""
"Finally, for GeoDjango to be able to find the KyngChaos SpatiaLite library, "
"add the following to your ``settings.py``:"
msgstr ""

# 75579625e8ec4080a9a1467126baacbb
#: ../../ref/contrib/gis/install/spatialite.txt:188
msgid "Creating a spatial database for SpatiaLite"
msgstr ""

# 3942a47c5d7f45fd8b37951cc4fc886e
#: ../../ref/contrib/gis/install/spatialite.txt:190
msgid ""
"After you've installed SpatiaLite, you'll need to create a number of spatial "
"metadata tables in your database in order to perform spatial queries."
msgstr ""

# efb1557ebcaa4f8382403ab80ea7204b
#: ../../ref/contrib/gis/install/spatialite.txt:193
msgid ""
"If you're using SpatiaLite 2.4 or newer, use the ``spatialite`` utility to "
"call the ``InitSpatialMetaData()`` function, like this::"
msgstr ""

# b61f69839bad463e946fb734bc24d747
#: ../../ref/contrib/gis/install/spatialite.txt:201
msgid ""
"You can safely ignore the error messages shown. When you've done this, you "
"can skip the rest of this section."
msgstr ""

# 05ef489781064eceb96287fd13f982dd
#: ../../ref/contrib/gis/install/spatialite.txt:204
msgid ""
"If you're using SpatiaLite 2.3, you'll need to download a database-"
"initialization file and execute its SQL queries in your database."
msgstr ""

# 2af7566fc3444b5a9241c65071e57cdd
#: ../../ref/contrib/gis/install/spatialite.txt:207
msgid "First, get it from the `SpatiaLite Resources`__ page::"
msgstr ""

# e47ff2b07af54b7590b1460e6f9821da
#: ../../ref/contrib/gis/install/spatialite.txt:212
msgid "Then, use the ``spatialite`` command to initialize a spatial database::"
msgstr ""

# a3a9ecac5548423fba24a99f75f550c8
#: ../../ref/contrib/gis/install/spatialite.txt:218
msgid ""
"The parameter ``geodjango.db`` is the *filename* of the SQLite database you "
"want to use.  Use the same in the :setting:`DATABASES` ``\"name\"`` key "
"inside your ``settings.py``."
msgstr ""

# ff189ff5a3ff43879e84c0632b5766c7
#: ../../ref/contrib/gis/layermapping.txt:5
msgid "``LayerMapping`` data import utility"
msgstr ""

# ff552f299e35474584d45d97ccf6f3d6
#: ../../ref/contrib/gis/layermapping.txt:12
msgid ""
"The :class:`LayerMapping` class provides a way to map the contents of vector "
"spatial data files (e.g. shapefiles) into GeoDjango models."
msgstr ""

# e926922d47e448cd9ec3dfce7bdf7eb0
#: ../../ref/contrib/gis/layermapping.txt:15
msgid ""
"This utility grew out of the author's personal needs to eliminate the code "
"repetition that went into pulling geometries and fields out of a vector "
"layer, converting to another coordinate system (e.g. WGS84), and then "
"inserting into a GeoDjango model."
msgstr ""

# c5b1c313fc2d489bb784377f73776038
#: ../../ref/contrib/gis/layermapping.txt:22
msgid "Use of :class:`LayerMapping` requires GDAL."
msgstr ""

# dab720e7d098491b9f30c012ef463772
#: ../../ref/contrib/gis/layermapping.txt:26
msgid ""
"GIS data sources, like shapefiles, may be very large.  If you find that :"
"class:`LayerMapping` is using too much memory, set :setting:`DEBUG` to "
"``False`` in your settings.  When :setting:`DEBUG` is set to ``True``, "
"Django :ref:`automatically logs <faq-see-raw-sql-queries>` *every* SQL query "
"-- thus, when SQL statements contain geometries, it is easy to consume more "
"memory than is typical."
msgstr ""

# c2404ef3845244a2b1ad487786fc88f9
#: ../../ref/contrib/gis/layermapping.txt:36
msgid ""
"You need a GDAL-supported data source, like a shapefile (here we're using a "
"simple polygon shapefile, ``test_poly.shp``, with three features)::"
msgstr ""

# 97857a7c70b645bfa2e15f7446eb4aa6
#: ../../ref/contrib/gis/layermapping.txt:55
msgid ""
"Now we define our corresponding Django model (make sure to use ``syncdb``)::"
msgstr ""

# 17705e7dd4ed442c883ae54eed6cba02
#: ../../ref/contrib/gis/layermapping.txt:66
msgid ""
"Use :class:`LayerMapping` to extract all the features and place them in the "
"database::"
msgstr ""

# 7a124a33378f432e87c2111092f21f2e
#: ../../ref/contrib/gis/layermapping.txt:80
msgid ""
"Here, :class:`LayerMapping` just transformed the three geometries from the "
"shapefile in their original spatial reference system (WGS84) to the spatial "
"reference system of the GeoDjango model (NAD83).  If no spatial reference "
"system is defined for the layer, use the ``source_srs`` keyword with a :"
"class:`~django.contrib.gis.gdal.SpatialReference` object to specify one."
msgstr ""

# 36d2c64254d1485fa65ebdf5bd819d24
#: ../../ref/contrib/gis/layermapping.txt:87
msgid "``LayerMapping`` API"
msgstr ""

# 945b45997add4395adeaf9f82a76d63f
#: ../../ref/contrib/gis/layermapping.txt:91
msgid ""
"The following are the arguments and keywords that may be used during "
"instantiation of ``LayerMapping`` objects."
msgstr ""

# 277d18b1de614531b8f00b56aff52486
# fc2e004e917d475b88bdbac34ff6c095
# efae4e71790f4276a1500f1cc0abdb8d
# 188301bf5de0491198d8b4cab07b0ce8
# 5cc0e09b34d44ced96ef2581362e7613
# 108cd7b6b16e4db386a866871737a922
# eada59b50303498eba236b3117eb2125
# 324c4c3e014340719c5d5e30e27dbb06
#: ../../ref/contrib/gis/layermapping.txt:95
#: ../../ref/contrib/webdesign.txt:40 ../../ref/models/fields.txt:529
#: ../../ref/signals.txt:69 ../../ref/signals.txt:295
#: ../../ref/signals.txt:322 ../../ref/templates/builtins.txt:940
#: ../../ref/templates/builtins.txt:2273
msgid "Argument"
msgstr ""

# ea68c4f15549487396e7752a75e333e1
# 481026a119de4c1cbe747c8743a01438
# fbd482cfe994467498d20e05e1c1d701
# 0ddc75ff1a134eaebea764d6c85800ac
#: ../../ref/contrib/gis/layermapping.txt:97 ../../ref/signals.txt:254
#: ../../ref/signals.txt:307 ../../ref/signals.txt:334
msgid "``model``"
msgstr ""

# 1a6705d7edff47cd8a9f37ebe1f196a3
#: ../../ref/contrib/gis/layermapping.txt:97
msgid "The geographic model, *not* an instance."
msgstr ""

# c1a85198692e469da8276699fe62febd
#: ../../ref/contrib/gis/layermapping.txt:99
msgid "``data_source``"
msgstr ""

# aff349d502244aff9fb6c3d2918c06cf
#: ../../ref/contrib/gis/layermapping.txt:99
msgid ""
"The path to the OGR-supported data source file (e.g., a shapefile).  Also "
"accepts :class:`django.contrib.gis.gdal.DataSource` instances."
msgstr ""

# 8fd6b81f333d426fb4ac27790a4cd25b
# 353cc233d50f4b83a0020b145999fb30
#: ../../ref/contrib/gis/layermapping.txt:103
#: ../../ref/contrib/gis/ogrinspect.txt:19
msgid "``mapping``"
msgstr ""

# 7281074e1e564829b158cf1d69801e5f
#: ../../ref/contrib/gis/layermapping.txt:103
msgid ""
"A dictionary: keys are strings corresponding to the model field, and values "
"correspond to string field names for the OGR feature, or if the model field "
"is a geographic then it should correspond to the OGR geometry type, e.g., "
"``'POINT'``, ``'LINESTRING'``, ``'POLYGON'``."
msgstr ""

# 53a38f4f012548f0839115df8261d279
#: ../../ref/contrib/gis/layermapping.txt:114
msgid "``layer``"
msgstr ""

# b0e2178b12ab44c39183711eb76a6e72
#: ../../ref/contrib/gis/layermapping.txt:114
msgid "The index of the layer to use from the Data Source (defaults to 0)"
msgstr ""

# 1d5735b9f9a64bd0b6ac2fc0fddfebff
#: ../../ref/contrib/gis/layermapping.txt:117
msgid "``source_srs``"
msgstr ""

# 5bdce3b7647044378b2d98b1be32a376
#: ../../ref/contrib/gis/layermapping.txt:117
msgid ""
"Use this to specify the source SRS manually (for example, some shapefiles "
"don't come with a '.prj' file).  An integer SRID, WKT or PROJ.4 strings, "
"and :class:`django.contrib.gis.gdal.SpatialReference` objects are accepted."
msgstr ""

# 096b8dc12a004db8a7903176159ff4c0
#: ../../ref/contrib/gis/layermapping.txt:123
msgid "``encoding``"
msgstr ""

# c30a2bd8bc074effa7377eb7ebe0b184
#: ../../ref/contrib/gis/layermapping.txt:123
msgid ""
"Specifies the character set encoding of the strings in the OGR data source.  "
"For example, ``'latin-1'``, ``'utf-8'``, and ``'cp437'`` are all valid "
"encoding parameters."
msgstr ""

# d0cc3fded7a141a584beca4a6a4a10a1
#: ../../ref/contrib/gis/layermapping.txt:128
msgid "``transaction_mode``"
msgstr ""

# 2a29efeec7e147948eb00f88336fa7ae
#: ../../ref/contrib/gis/layermapping.txt:128
msgid "May be ``'commit_on_success'`` (default) or ``'autocommit'``."
msgstr ""

# 6f57258dd3db4fe189c071dfee794660
#: ../../ref/contrib/gis/layermapping.txt:131
msgid ""
"Setting this to False will disable coordinate transformations.  In other "
"words, geometries will be inserted into the database unmodified from their "
"original state in the data source."
msgstr ""

# e98fecc3d27a4cbea9f9a26760a0a2a5
# 1e69aa3c13944ad2a2599c4d7baf6daa
#: ../../ref/contrib/gis/layermapping.txt:136 ../../ref/models/fields.txt:261
msgid "``unique``"
msgstr ""

# d5bd755217cd4712b576c96cf8d6023a
#: ../../ref/contrib/gis/layermapping.txt:136
msgid ""
"Setting this to the name, or a tuple of names, from the given  model will "
"create models unique only to the given name(s). Geometries will from each "
"feature will be added into the collection associated with the unique model.  "
"Forces the transaction mode to be ``'autocommit'``."
msgstr ""

# edf4a373af3c495ebe784d7e7dc04ac3
# 2f9bd7c7174e46728646cee7492090f3
# 7be4cc94853e49cfbf4806c4fddda4a9
# 7e8a39184f7e430aad53ff1723b0b50b
# 21a1034f03484f3fbeefe4ad03a875df
# d3c9ed8141d745cbb02fbe99df276e07
# a3385626120f496ba397be5d19a3b90e
# 59a024604e9448a1a94518a6c8993098
#: ../../ref/contrib/gis/layermapping.txt:143 ../../ref/signals.txt:119
#: ../../ref/signals.txt:154 ../../ref/signals.txt:180
#: ../../ref/signals.txt:204 ../../ref/signals.txt:264
#: ../../ref/signals.txt:312 ../../ref/signals.txt:340
msgid "``using``"
msgstr ""

# 82f080d19c2447b89b1bd48ba05a2dff
#: ../../ref/contrib/gis/layermapping.txt:143
msgid ""
"New in version 1.2.  Sets the database to use when importing spatial data.  "
"Default is ``'default'``"
msgstr ""

# 64bb7c233d834ea6b83bc7ba5867c2f4
#: ../../ref/contrib/gis/layermapping.txt:148
msgid "``save()`` Keyword Arguments"
msgstr ""

# 14a53004efd447b9af9573e95fd848b1
#: ../../ref/contrib/gis/layermapping.txt:152
msgid ""
"The ``save()`` method also accepts keywords.  These keywords are used for "
"controlling output logging, error handling, and for importing specific "
"feature ranges."
msgstr ""

# 5f642a3febc9422aacae084a344030d6
#: ../../ref/contrib/gis/layermapping.txt:157
msgid "Save Keyword Arguments"
msgstr ""

# 949f27392bdb48c89886dfe8952d7262
#: ../../ref/contrib/gis/layermapping.txt:159
msgid "``fid_range``"
msgstr ""

# 752a8873c6e546b285231bad8406a934
#: ../../ref/contrib/gis/layermapping.txt:159
msgid ""
"May be set with a slice or tuple of (begin, end) feature ID's to map from "
"the data source.  In other words, this keyword enables the user to "
"selectively import a subset range of features in the geographic data source."
msgstr ""

# e0276aea84a34cbbab6ea852e920ca84
#: ../../ref/contrib/gis/layermapping.txt:166
msgid "``progress``"
msgstr ""

# aa4dea29eec0478e89d3c63af3d18366
#: ../../ref/contrib/gis/layermapping.txt:166
msgid ""
"When this keyword is set, status information will be printed giving the "
"number of features processed and successfully saved.  By default, progress "
"information will be printed every 1000 features processed, however, this "
"default may be overridden by setting this keyword with an integer for the "
"desired interval."
msgstr ""

# 6b0b6d7490c24c33bafea8d22f604090
#: ../../ref/contrib/gis/layermapping.txt:174
msgid "``silent``"
msgstr ""

# 9ae22b536cef4e7bad113553410df4b3
#: ../../ref/contrib/gis/layermapping.txt:174
msgid ""
"By default, non-fatal error notifications are printed to ``sys.stdout``, but "
"this keyword may be set to disable these notifications."
msgstr ""

# a0d62cbfbde948d6b7a0928a673bc9e8
#: ../../ref/contrib/gis/layermapping.txt:178
msgid "``step``"
msgstr ""

# 1171b5e89fef404daeb0cdc58931090e
#: ../../ref/contrib/gis/layermapping.txt:178
msgid ""
"If set with an integer, transactions will occur at every step interval. For "
"example, if ``step=1000``, a commit would occur after the 1,000th feature, "
"the 2,000th feature etc."
msgstr ""

# a72b20dbcf8245e085938056bd8edae9
#: ../../ref/contrib/gis/layermapping.txt:184
msgid "``stream``"
msgstr ""

# df944ae3dfa740f386920090661fe0ee
#: ../../ref/contrib/gis/layermapping.txt:184
msgid ""
"Status information will be written to this file handle.  Defaults to using "
"``sys.stdout``, but any object with a ``write`` method is supported."
msgstr ""

# c76e271d88324e57bac3f9d08b7a36b9
#: ../../ref/contrib/gis/layermapping.txt:188
msgid "``strict``"
msgstr ""

# 3d76868122f94b8398b8bea882bc3043
#: ../../ref/contrib/gis/layermapping.txt:188
msgid ""
"Execution of the model mapping will cease upon the first error encountered.  "
"The default value (``False``) behavior is to attempt to continue."
msgstr ""

# ee7ef9a419a74b2f99cc8e93d34fceee
#: ../../ref/contrib/gis/layermapping.txt:193
msgid "``verbose``"
msgstr ""

# b8d527090e82428aa134c880802fa7ee
#: ../../ref/contrib/gis/layermapping.txt:193
msgid ""
"If set, information will be printed subsequent to each model save executed "
"on the database."
msgstr ""

# 96b3d65b50d048fc909e8916c6eda629
#: ../../ref/contrib/gis/layermapping.txt:202
msgid "Running out of memory"
msgstr ""

# 465fc4cd490d4d959180aba11343afa8
#: ../../ref/contrib/gis/layermapping.txt:204
msgid ""
"As noted in the warning at the top of this section, Django stores all SQL "
"queries when ``DEBUG=True``.  Set ``DEBUG=False`` in your settings, and this "
"should stop excessive memory use when running ``LayerMapping`` scripts."
msgstr ""

# 373b4705dbb84a398ced2368e3eb1085
#: ../../ref/contrib/gis/layermapping.txt:209
msgid "MySQL: ``max_allowed_packet`` error"
msgstr ""

# 788c2b7a70d141fabee180569ed2560b
#: ../../ref/contrib/gis/layermapping.txt:211
msgid ""
"If you encounter the following error when using ``LayerMapping`` and MySQL::"
msgstr ""

# f30f28a0a62141bcad2ae3be1eac45ae
#: ../../ref/contrib/gis/layermapping.txt:215
msgid ""
"Then the solution is to increase the value of the ``max_allowed_packet`` "
"setting in your MySQL configuration.  For example, the default value may be "
"something low like one megabyte -- the setting may be modified in MySQL's "
"configuration file (``my.cnf``) in the ``[mysqld]`` section::"
msgstr ""

# b26b3df2fa6640a18bb7784f447e6dfd
#: ../../ref/contrib/gis/measure.txt:5
msgid "Measurement Objects"
msgstr ""

# 5fccfedcc2354f0c9880e90f14beb577
#: ../../ref/contrib/gis/measure.txt:10
msgid ""
"The :mod:`django.contrib.gis.measure` module contains objects that allow for "
"convenient representation of distance and area units of measure. [#]_ "
"Specifically, it implements two objects, :class:`Distance` and :class:`Area` "
"-- both of which may be accessed via the :class:`D` and :class:`A` "
"convenience aliases, respectively."
msgstr ""

# 3e0c7d2725184173ba89605254f668f4
#: ../../ref/contrib/gis/measure.txt:19
msgid ""
":class:`Distance` objects may be instantiated using a keyword argument "
"indicating the context of the units.  In the example below, two different "
"distance objects are instantiated in units of kilometers (``km``) and miles "
"(``mi``)::"
msgstr ""

# 8c1eb7f5bb6f40d391d0ca71b143286a
#: ../../ref/contrib/gis/measure.txt:31
msgid ""
"Conversions are easy, just access the preferred unit attribute to get a "
"converted distance quantity::"
msgstr ""

# b912906cc81049b881836162301da6d2
#: ../../ref/contrib/gis/measure.txt:39
msgid ""
"Moreover, arithmetic operations may be performed between the distance "
"objects::"
msgstr ""

# 68492491f2644865b552906ee7c120a6
#: ../../ref/contrib/gis/measure.txt:47
msgid ""
"Two :class:`Distance` objects multiplied together will yield an :class:"
"`Area` object, which uses squared units of measure::"
msgstr ""

# 49d8671cad12420bba55c176bfc09e2a
#: ../../ref/contrib/gis/measure.txt:54
msgid ""
"To determine what the attribute abbreviation of a unit is, the "
"``unit_attname`` class method may be used::"
msgstr ""

# af4230538fa341dd83f3bd2840769995
#: ../../ref/contrib/gis/measure.txt:65
msgid "Supported units"
msgstr ""

# 20d5d571318d4ee6ad06c16071bd3aaa
#: ../../ref/contrib/gis/measure.txt:68
msgid "Unit Attribute"
msgstr ""

# c85fe9dc47a748e6a7c987fbba4461f1
#: ../../ref/contrib/gis/measure.txt:68
msgid "Full name or alias(es)"
msgstr ""

# 6e2831e6a4024021a7ea6c37dc91e66a
#: ../../ref/contrib/gis/measure.txt:70
msgid "``km``"
msgstr ""

# 0e6316b9c7df4290ac76c2259aadfd9a
#: ../../ref/contrib/gis/measure.txt:70
msgid "Kilometre, Kilometer"
msgstr ""

# aa3ff73d450d443b9bd13b9b905627c5
#: ../../ref/contrib/gis/measure.txt:71
msgid "``mi``"
msgstr ""

# 146a12290fe340b786f556fbdfe4b8f0
#: ../../ref/contrib/gis/measure.txt:71
msgid "Mile"
msgstr ""

# 9e569f0bc98a458ebf541e8799ecb3e5
#: ../../ref/contrib/gis/measure.txt:72
msgid "``m``"
msgstr ""

# 2a7f749f54be489e99cd485a1d0dcfbf
#: ../../ref/contrib/gis/measure.txt:72
msgid "Meter, Metre"
msgstr ""

# 283f34b226cc4b74a1ff3e3f9de04ab6
#: ../../ref/contrib/gis/measure.txt:73
msgid "``yd``"
msgstr ""

# 1da1d221140b41c2a634f9fa47b0b2bc
#: ../../ref/contrib/gis/measure.txt:73
msgid "Yard"
msgstr ""

# 2d5b4c1a267642bb8fc6f92076da5f1f
#: ../../ref/contrib/gis/measure.txt:74
msgid "``ft``"
msgstr ""

# d56e0568b1074dba86654e4e832153db
#: ../../ref/contrib/gis/measure.txt:74
msgid "Foot, Foot (International)"
msgstr ""

# c8f781c9dce744478fafe48cd4ea25be
#: ../../ref/contrib/gis/measure.txt:75
msgid "``survey_ft``"
msgstr ""

# 1aab28ed88494474af83e5c73f7c58b8
#: ../../ref/contrib/gis/measure.txt:75
msgid "U.S. Foot, US survey foot"
msgstr ""

# ca632f5d7076490f94ea97fb40baab37
#: ../../ref/contrib/gis/measure.txt:76
msgid "``inch``"
msgstr ""

# 4fe4d8046fbe40f1adb3a455001748f2
#: ../../ref/contrib/gis/measure.txt:76
msgid "Inches"
msgstr ""

# d423bc4280184b08b7f6cad0baf7a982
#: ../../ref/contrib/gis/measure.txt:77
msgid "``cm``"
msgstr ""

# 7bdb21559f8d426cb89a438b98401194
#: ../../ref/contrib/gis/measure.txt:77
msgid "Centimeter"
msgstr ""

# c998a0bd0dd64a34a41602a236197cb5
#: ../../ref/contrib/gis/measure.txt:78
msgid "``mm``"
msgstr ""

# 96ff29193b7646a78de41413b1d03ceb
#: ../../ref/contrib/gis/measure.txt:78
msgid "Millimetre, Millimeter"
msgstr ""

# 6989a6f15d54480b8915174c0974ec26
#: ../../ref/contrib/gis/measure.txt:79
msgid "``um``"
msgstr ""

# 2d842ffa3d3746a28a6218876f6c0a6e
#: ../../ref/contrib/gis/measure.txt:79
msgid "Micrometer, Micrometre"
msgstr ""

# 314dfcf651054d79831e078d761b03b0
#: ../../ref/contrib/gis/measure.txt:80
msgid "``british_ft``"
msgstr ""

# dca26be9e2894642a1aede0d2f14f293
#: ../../ref/contrib/gis/measure.txt:80
msgid "British foot (Sears 1922)"
msgstr ""

# a06348fc810149779e4775dc8930ed7f
#: ../../ref/contrib/gis/measure.txt:81
msgid "``british_yd``"
msgstr ""

# fa595129b6aa4b3696abebc0f85c1f05
#: ../../ref/contrib/gis/measure.txt:81
msgid "British yard (Sears 1922)"
msgstr ""

# 3a488a13b41147efb79e6c31dbfcec00
#: ../../ref/contrib/gis/measure.txt:82
msgid "``british_chain_sears``"
msgstr ""

# 65e24134fcb545e6b179b04987e8c623
#: ../../ref/contrib/gis/measure.txt:82
msgid "British chain (Sears 1922)"
msgstr ""

# 55887822b91b46a19370491f102a218b
#: ../../ref/contrib/gis/measure.txt:83
msgid "``indian_yd``"
msgstr ""

# 904572098d644183a73ea966736550e9
#: ../../ref/contrib/gis/measure.txt:83
msgid "Indian yard, Yard (Indian)"
msgstr ""

# 8e43e79b9e464d19accf49b2a7207e08
#: ../../ref/contrib/gis/measure.txt:84
msgid "``sears_yd``"
msgstr ""

# 509ded1107d244afb20d56e67d6e7c69
#: ../../ref/contrib/gis/measure.txt:84
msgid "Yard (Sears)"
msgstr ""

# b7e2ac9a623c45d4974ac8c3f8bbfffe
#: ../../ref/contrib/gis/measure.txt:85
msgid "``clarke_ft``"
msgstr ""

# 24628b3ebcdc47f59637821ad8cad000
#: ../../ref/contrib/gis/measure.txt:85
msgid "Clarke's Foot"
msgstr ""

# cbba35e535a643f0b443f4b510062617
#: ../../ref/contrib/gis/measure.txt:86
msgid "``chain``"
msgstr ""

# aa0c62c2ea93470b9c8900e2dd28cdba
#: ../../ref/contrib/gis/measure.txt:86
msgid "Chain"
msgstr ""

# 7706c1f3c6c24dbaa4b012d055ef2886
#: ../../ref/contrib/gis/measure.txt:87
msgid "``chain_benoit``"
msgstr ""

# dd1c9a85c04b46f788b92562c0592875
#: ../../ref/contrib/gis/measure.txt:87
msgid "Chain (Benoit)"
msgstr ""

# 800bc3bf9b1448a4ae07e7b1b824711f
#: ../../ref/contrib/gis/measure.txt:88
msgid "``chain_sears``"
msgstr ""

# 0d6e223194f0496d910fb820a0a0f306
#: ../../ref/contrib/gis/measure.txt:88
msgid "Chain (Sears)"
msgstr ""

# 92d97f19eca647889a94577f6b9eec78
#: ../../ref/contrib/gis/measure.txt:89
msgid "``british_chain_benoit``"
msgstr ""

# f49470e93dde481cbf3656254656b157
#: ../../ref/contrib/gis/measure.txt:89
msgid "British chain (Benoit 1895 B)"
msgstr ""

# ee57dcc09c8b4d87a73948d192b23cd4
#: ../../ref/contrib/gis/measure.txt:90
msgid "``british_chain_sears_truncated``"
msgstr ""

# 8748c69533cb40c5a793194ae2394f33
#: ../../ref/contrib/gis/measure.txt:90
msgid "British chain (Sears 1922 truncated)"
msgstr ""

# ba5d2a4cc4c1493aaf99b24f9f6958fa
#: ../../ref/contrib/gis/measure.txt:91
msgid "``gold_coast_ft``"
msgstr ""

# d1099b8a96e5411eb305cc686d18a08d
#: ../../ref/contrib/gis/measure.txt:91
msgid "Gold Coast foot"
msgstr ""

# db696af1d982461eb8696cd6f9b84def
# f78aeaf2404b4edaa3033b46c7d70611
# 6a5ede4bbd4f4c04b5b6112979b8f411
#: ../../ref/contrib/gis/measure.txt:92 ../../ref/contrib/syndication.txt:818
#: ../../ref/contrib/syndication.txt:846
msgid "``link``"
msgstr ""

# 13ac9085bcc24250bc9857a0ae67d2cd
#: ../../ref/contrib/gis/measure.txt:92
msgid "Link"
msgstr ""

# 4b2d28381f5d4bc5adcce14669a6c9ae
#: ../../ref/contrib/gis/measure.txt:93
msgid "``link_benoit``"
msgstr ""

# 12ee5443b3cf41118040b6b254b396e8
#: ../../ref/contrib/gis/measure.txt:93
msgid "Link (Benoit)"
msgstr ""

# dfbca28fb53a46c69bebfcd96a8a8313
#: ../../ref/contrib/gis/measure.txt:94
msgid "``link_sears``"
msgstr ""

# 76f4a5a4173847bca641cc88e3e69161
#: ../../ref/contrib/gis/measure.txt:94
msgid "Link (Sears)"
msgstr ""

# ce62c08641c0419ebf2edb09764d9ae3
#: ../../ref/contrib/gis/measure.txt:95
msgid "``clarke_link``"
msgstr ""

# 55c8c97aaee74fb58e9d4f92d38b797c
#: ../../ref/contrib/gis/measure.txt:95
msgid "Clarke's link"
msgstr ""

# 1031efad46404d97ad03b5ff1641691f
#: ../../ref/contrib/gis/measure.txt:96
msgid "``fathom``"
msgstr ""

# 153f3ff6f46a468183ed6ec91249b9b2
#: ../../ref/contrib/gis/measure.txt:96
msgid "Fathom"
msgstr ""

# 7571ea27c27c4c24b477ecbc0f9b498d
#: ../../ref/contrib/gis/measure.txt:97
msgid "``rod``"
msgstr ""

# 446e26d4dd00454f97f23ae53f588a23
#: ../../ref/contrib/gis/measure.txt:97
msgid "Rod"
msgstr ""

# 670d94a9733649eea7f77054316fd039
#: ../../ref/contrib/gis/measure.txt:98
msgid "``nm``"
msgstr ""

# 87797fad52c8475182d7558d69f97391
#: ../../ref/contrib/gis/measure.txt:98
msgid "Nautical Mile"
msgstr ""

# 461e5a6ed5c7471aa1d0c7488c455d98
#: ../../ref/contrib/gis/measure.txt:99
msgid "``nm_uk``"
msgstr ""

# 296e53e502604c1fa9cdb1e8d675b837
#: ../../ref/contrib/gis/measure.txt:99
msgid "Nautical Mile (UK)"
msgstr ""

# 05737565a32f4b359d6b6af2df229698
#: ../../ref/contrib/gis/measure.txt:100
msgid "``german_m``"
msgstr ""

# 3a3f900ef0f84fa9964893062ed234f0
#: ../../ref/contrib/gis/measure.txt:100
msgid "German legal metre"
msgstr ""

# 55e9099b0308409fa315538d4315320e
#: ../../ref/contrib/gis/measure.txt:105
msgid ""
":class:`Area` attributes are the same as :class:`Distance` attributes, "
"except they are prefixed with ``sq_`` (area units are square in nature). For "
"example, ``Area(sq_m=2)`` creates an :class:`Area` object representing two "
"square meters."
msgstr ""

# d4e62fdc76a04b1da9d42ea6df0af2b7
#: ../../ref/contrib/gis/measure.txt:111
msgid "Measurement API"
msgstr ""

# 05a327152cd342abaffb3330b4b75892
#: ../../ref/contrib/gis/measure.txt:114
msgid "``Distance``"
msgstr ""

# 813047fdf67347129648ca6ecc6c2849
#: ../../ref/contrib/gis/measure.txt:118
msgid ""
"To initialize a distance object, pass in a keyword corresponding to the "
"desired :ref:`unit attribute name <supported_units>` set with desired "
"value.  For example, the following creates a distance object representing 5 "
"miles::"
msgstr ""

# 943dfd21769147599b59c244a33bf16d
#: ../../ref/contrib/gis/measure.txt:127
msgid ""
"Returns the distance value in units corresponding to the given unit "
"attribute.  For example::"
msgstr ""

# 383fcbad3a554ec7a833ac6e64f1f3bd
#: ../../ref/contrib/gis/measure.txt:135
msgid ""
"Returns the distance unit attribute name for the given full unit name. For "
"example::"
msgstr ""

# aa0b7ce5835d4895b40b64032e9ebff2
#: ../../ref/contrib/gis/measure.txt:143
msgid "Alias for :class:`Distance` class."
msgstr ""

# 37a3585d257c4e2da49a83af4eec1fdf
#: ../../ref/contrib/gis/measure.txt:146
msgid "``Area``"
msgstr ""

# 3247b1ebef944aa29bb0a5b59365029f
#: ../../ref/contrib/gis/measure.txt:150
msgid ""
"To initialize a distance object, pass in a keyword corresponding to the "
"desired :ref:`unit attribute name <supported_units>` set with desired "
"value.  For example, the following creates a distance object representing 5 "
"square miles::"
msgstr ""

# eebfe3dcde0e4e568efdda79704e3e26
#: ../../ref/contrib/gis/measure.txt:159
msgid ""
"Returns the area value in units corresponding to the given unit attribute.  "
"For example::"
msgstr ""

# 11e808f39dd142b886f18819543a6c86
#: ../../ref/contrib/gis/measure.txt:167
msgid ""
"Returns the area unit attribute name for the given full unit name. For "
"example::"
msgstr ""

# 35c9606fdf9a4551abb3819f2409fda7
#: ../../ref/contrib/gis/measure.txt:175
msgid "Alias for :class:`Area` class."
msgstr ""

# e8abd83bcc504f978a8f8ac46b775532
#: ../../ref/contrib/gis/measure.txt:178
msgid ""
"`Robert Coup <http://koordinates.com/>`_ is the initial author of the "
"measure objects, and was inspired by Brian Beck's work in `geopy <http://"
"code.google.com/p/geopy/>`_ and Geoff Biggs' PhD work on dimensioned units "
"for robotics."
msgstr ""

# 55bff77efcf0401a9cf3c25d10cc42cd
#: ../../ref/contrib/gis/model-api.txt:5
msgid "GeoDjango Model API"
msgstr ""

# 4af75022e95b40ab846325fcddbb2d9e
#: ../../ref/contrib/gis/model-api.txt:10
msgid ""
"This document explores the details of the GeoDjango Model API.  Throughout "
"this section, we'll be using the following geographic model of a `ZIP "
"code`__ as our example::"
msgstr ""

# 41b51e9a3c6742a79286c3b5bf1b0c7d
#: ../../ref/contrib/gis/model-api.txt:24
msgid "Geometry Field Types"
msgstr ""

# 1dc02c61fe1a4156849b355fedb106e7
#: ../../ref/contrib/gis/model-api.txt:26
msgid ""
"Each of the following geometry field types correspond with the OpenGIS "
"Simple Features specification [#fnogc]_."
msgstr ""

# 055cd3918cb7466eaead00273cd4eff2
#: ../../ref/contrib/gis/model-api.txt:30
msgid "``GeometryField``"
msgstr ""

# a4aadb6006784a5892e362b74079327d
#: ../../ref/contrib/gis/model-api.txt:35
msgid "``PointField``"
msgstr ""

# 603e9807e6fc4c94bc68d87a83bcd142
#: ../../ref/contrib/gis/model-api.txt:40
msgid "``LineStringField``"
msgstr ""

# 98c92d874ab542b0aa075668220d18c9
#: ../../ref/contrib/gis/model-api.txt:45
msgid "``PolygonField``"
msgstr ""

# 943009f710344dbca964047ec4a56d0b
#: ../../ref/contrib/gis/model-api.txt:50
msgid "``MultiPointField``"
msgstr ""

# 3ec3890d677e414abab303f94845435d
#: ../../ref/contrib/gis/model-api.txt:55
msgid "``MultiLineStringField``"
msgstr ""

# d1133c3acb8a4a33b508ba41dddd4032
#: ../../ref/contrib/gis/model-api.txt:60
msgid "``MultiPolygonField``"
msgstr ""

# b8dc8f8b28b54a588b91edd11b43b7b4
#: ../../ref/contrib/gis/model-api.txt:65
msgid "``GeometryCollectionField``"
msgstr ""

# 7e21977353e84a0e987cb3e2b0c2deca
#: ../../ref/contrib/gis/model-api.txt:72
msgid "Geometry Field Options"
msgstr ""

# 948344b7d44d4f2498dfcb53f6e4e0ad
#: ../../ref/contrib/gis/model-api.txt:74
msgid ""
"In addition to the regular :ref:`common-model-field-options` available for "
"Django model fields, geometry fields have the following additional options. "
"All are optional."
msgstr ""

# a15aacb3240b47deb31da9d800d29b81
#: ../../ref/contrib/gis/model-api.txt:79
msgid "``srid``"
msgstr ""

# 632983830f4c4b56989fb01eb53408ab
#: ../../ref/contrib/gis/model-api.txt:83
msgid ""
"Sets the SRID [#fnogcsrid]_ (Spatial Reference System Identity) of the "
"geometry field to the given value. Defaults to 4326 (also known as "
"`WGS84`__, units are in degrees of longitude and latitude)."
msgstr ""

# 6fa01134057f4230980bd164add8f70b
#: ../../ref/contrib/gis/model-api.txt:92
msgid "Selecting an SRID"
msgstr ""

# d96457d916d24e299bcbafba869d8320
#: ../../ref/contrib/gis/model-api.txt:94
msgid ""
"Choosing an appropriate SRID for your model is an important decision that "
"the developer should consider carefully.  The SRID is an integer specifier "
"that corresponds to the projection system that will be used to interpret the "
"data in the spatial database. [#fnsrid]_  Projection systems give the "
"context to the coordinates that specify a location.  Although the details of "
"`geodesy`__ are beyond the scope of this documentation, the general problem "
"is that the earth is spherical and representations of the earth (e.g., paper "
"maps, Web maps) are not."
msgstr ""

# 2ea390ec42aa45d4b3e2d9315e55268a
#: ../../ref/contrib/gis/model-api.txt:103
msgid ""
"Most people are familiar with using latitude and longitude to reference a "
"location on the earth's surface.  However, latitude and longitude are "
"angles, not distances. [#fnharvard]_  In other words, while the shortest "
"path between two points on a flat surface is a straight line, the shortest "
"path between two points on a curved surface (such as the earth) is an *arc* "
"of a `great circle`__. [#fnthematic]_  Thus, additional computation is "
"required to obtain distances in planar units (e.g., kilometers and miles).  "
"Using a geographic coordinate system may introduce complications for the "
"developer later on.  For example, PostGIS versions 1.4 and below do not have "
"the capability to perform distance calculations between non-point geometries "
"using geographic coordinate systems, e.g., constructing a query to  find all "
"points within 5 miles of a county boundary stored as WGS84. [#fndist]_"
msgstr ""

# 0414e0832c9d416d9642aab9976ff5d0
#: ../../ref/contrib/gis/model-api.txt:116
msgid ""
"Portions of the earth's surface may projected onto a two-dimensional, or "
"Cartesian, plane.  Projected coordinate systems are especially convenient "
"for region-specific applications, e.g., if you know that your database will "
"only cover geometries in `North Kansas`__, then you may consider using "
"projection system specific to that region.  Moreover, projected coordinate "
"systems are defined in Cartesian units (such as meters or feet), easing "
"distance calculations."
msgstr ""

# 6c3a585d82cb415ea756614ef36cda50
#: ../../ref/contrib/gis/model-api.txt:126
msgid ""
"If you wish to peform arbitrary distance queries using non-point geometries "
"in WGS84, consider upgrading to PostGIS 1.5. For better performance, enable "
"the :attr:`GeometryField.geography` keyword so that :ref:`geography database "
"type <geography-type>` is used instead."
msgstr ""

# 4faf3176a0e84e5795a814258a8c80c4
#: ../../ref/contrib/gis/model-api.txt:132
msgid "Additional Resources:"
msgstr ""

# 4cbece87e5774df0bde6f4255223245a
#: ../../ref/contrib/gis/model-api.txt:134
msgid ""
"`spatialreference.org`__: A Django-powered database of spatial reference "
"systems."
msgstr ""

# 3a9182f78347425095c079bad65db418
#: ../../ref/contrib/gis/model-api.txt:136
msgid ""
"`The State Plane Coordinate System`__: A Web site covering the various "
"projection systems used in the United States.  Much of the U.S. spatial data "
"encountered will be in one of these coordinate systems rather than in a "
"geographic coordinate system such as WGS84."
msgstr ""

# a942bfc316bf411086871632b45a5e11
#: ../../ref/contrib/gis/model-api.txt:148
msgid "``spatial_index``"
msgstr ""

# 3d648f264c7f4de6a746df028f2be3ea
#: ../../ref/contrib/gis/model-api.txt:152
msgid ""
"Defaults to ``True``.  Creates a spatial index for the given geometry field."
msgstr ""

# 7c40fe5979974e4da7fb14b957c1f773
#: ../../ref/contrib/gis/model-api.txt:157
msgid ""
"This is different from the ``db_index`` field option because spatial indexes "
"are created in a different manner than regular database indexes.  "
"Specifically, spatial indexes are typically created using a variant of the R-"
"Tree, while regular database indexes typically use B-Trees."
msgstr ""

# b0e95d7c62cd4bfea2ac44707a90d929
#: ../../ref/contrib/gis/model-api.txt:164
msgid "``dim``"
msgstr ""

# 45d5652e60304aeeb65132b9f1d5a4f0
#: ../../ref/contrib/gis/model-api.txt:168
msgid ""
"This option may be used for customizing the coordinate dimension of the "
"geometry field.  By default, it is set to 2, for representing two-"
"dimensional geometries.  For spatial backends that support it, it may be set "
"to 3 for three-dimensonal support."
msgstr ""

# 5d837619c1ab474285e8dd28438fb23b
#: ../../ref/contrib/gis/model-api.txt:175
msgid ""
"At this time 3D support requires that GEOS 3.1 be installed, and is limited "
"only to the PostGIS spatial backend."
msgstr ""

# 452a5ea6a1684763960ac4bc36b90ace
#: ../../ref/contrib/gis/model-api.txt:179
msgid "``geography``"
msgstr ""

# 76c85ae39ac04cc29595fb37308570a3
#: ../../ref/contrib/gis/model-api.txt:183
msgid ""
"If set to ``True``, this option will create a database column of type "
"geography, rather than geometry.  Please refer to the :ref:`geography type "
"<geography-type>` section below for more details."
msgstr ""

# 46b5e003cd364646abcd5640810d7238
#: ../../ref/contrib/gis/model-api.txt:190
msgid ""
"Geography support is limited only to PostGIS 1.5+, and will force the SRID "
"to be 4326."
msgstr ""

# ba59c61111bb4a35a4b06c31b39444d6
#: ../../ref/contrib/gis/model-api.txt:196
msgid "Geography Type"
msgstr ""

# 4a4e9b7aaa9e4b28b99ca29b9c327c86
#: ../../ref/contrib/gis/model-api.txt:198
msgid ""
"In PostGIS 1.5, the geography type was introduced -- it provides native "
"support for spatial features represented with geographic coordinates (e.g., "
"WGS84 longitude/latitude). [#fngeography]_ Unlike the plane used by a "
"geometry type, the geography type uses a spherical representation of its "
"data.  Distance and measurement operations performed on a geography column "
"automatically employ great circle arc calculations and return linear units.  "
"In other words, when ``ST_Distance`` is called on two geographies, a value "
"in meters is returned (as opposed to degrees if called on a geometry column "
"in WGS84)."
msgstr ""

# 953b2b2e411d42a39eb9d9f8092d61c4
#: ../../ref/contrib/gis/model-api.txt:208
msgid ""
"Because geography calculations involve more mathematics, only a subset of "
"the PostGIS spatial lookups are available for the geography type. "
"Practically, this means that in addition to the :ref:`distance lookups "
"<distance-lookups>` only the following additional :ref:`spatial lookups "
"<spatial-lookups>` are available for geography columns:"
msgstr ""

# 858c145d89424ae09bc5b1b8e6f734e7
#: ../../ref/contrib/gis/model-api.txt:219
msgid ""
"For more information, the PostGIS documentation contains a helpful section "
"on determining `when to use geography data type over geometry data type "
"<http://postgis.refractions.net/documentation/manual-1.5/ch04."
"html#PostGIS_GeographyVSGeometry>`_."
msgstr ""

# 429c734de9054aac81e5f811f8761e1f
#: ../../ref/contrib/gis/model-api.txt:224
msgid "``GeoManager``"
msgstr ""

# 055a569b25af493d9f34f5d5e1dc9609
#: ../../ref/contrib/gis/model-api.txt:229
msgid ""
"In order to conduct geographic queries, each geographic model requires a "
"``GeoManager`` model manager.  This manager allows for the proper SQL "
"construction for geographic queries; thus, without it, all geographic "
"filters will fail.  It should also be noted that ``GeoManager`` is required "
"even if the model does not have a geographic field itself, e.g., in the case "
"of a ``ForeignKey`` relation to a model with a geographic field.  For "
"example, if we had an ``Address`` model with a ``ForeignKey`` to our "
"``Zipcode`` model::"
msgstr ""

# 80fcf80f319844e98a8c4c1ef65e4cea
#: ../../ref/contrib/gis/model-api.txt:249
msgid ""
"The geographic manager is needed to do spatial queries on related "
"``Zipcode`` objects, for example::"
msgstr ""

# df6dac2de893418ba68bc495a45fd442
#: ../../ref/contrib/gis/model-api.txt:255
msgid ""
"OpenGIS Consortium, Inc., `Simple Feature Specification For SQL <http://www."
"opengeospatial.org/standards/sfs>`_."
msgstr ""

# bcc14d997a2744d393e591d4b6a6825b
#: ../../ref/contrib/gis/model-api.txt:256
msgid ""
"*See id.* at Ch. 2.3.8, p. 39 (Geometry Values and Spatial Reference "
"Systems)."
msgstr ""

# 40b2dbf3cc744504bcf672d53cd78439
#: ../../ref/contrib/gis/model-api.txt:257
msgid ""
"Typically, SRID integer corresponds to an EPSG (`European Petroleum Survey "
"Group <http://www.epsg.org>`_) identifier.  However, it may also be "
"associated with custom projections defined in spatial database's spatial "
"reference systems table."
msgstr ""

# 64e8413c413543edb17e46e64f31a480
#: ../../ref/contrib/gis/model-api.txt:258
msgid ""
"Harvard Graduate School of Design, `An Overview of Geodesy and Geographic "
"Referencing Systems <http://www.gsd.harvard.edu/gis/manual/projections/"
"fundamentals/>`_.  This is an excellent resource for an overview of "
"principles relating to geographic and Cartesian coordinate systems."
msgstr ""

# 9a0d5ba038f341d68f6f4b2997321447
#: ../../ref/contrib/gis/model-api.txt:259
msgid ""
"Terry A. Slocum, Robert B. McMaster, Fritz C. Kessler, & Hugh H. Howard, "
"*Thematic Cartography and Geographic Visualization* (Prentice Hall, 2nd "
"edition), at Ch. 7.1.3."
msgstr ""

# 423fb9efd23547e1a24678dc6bf8afa1
#: ../../ref/contrib/gis/model-api.txt:260
msgid ""
"This limitation does not apply to PostGIS 1.5.  It should be noted that even "
"in previous versions of PostGIS, this isn't impossible using GeoDjango; you "
"could for example, take a known point in a projected coordinate system, "
"buffer it to the appropriate radius, and then perform an intersection "
"operation with the buffer transformed to the geographic coordinate system."
msgstr ""

# 093a530fde6c462ab7c7b7afffaf17ab
#: ../../ref/contrib/gis/model-api.txt:261
msgid ""
"Please refer to the `PostGIS Geography Type <http://postgis.refractions.net/"
"documentation/manual-1.5/ch04.html#PostGIS_Geography>`_ documentation for "
"more details."
msgstr ""

# f630f65ec4f649dda5fa20aa1dcb2118
#: ../../ref/contrib/gis/ogrinspect.txt:5
msgid "OGR Inspection"
msgstr ""

# 0270537cc1e741cb93a1fe8753aee511
#: ../../ref/contrib/gis/ogrinspect.txt:13
msgid "``ogrinspect``"
msgstr ""

# 0d90a304b6e6485da0ec35e6dee92bc8
#: ../../ref/contrib/gis/sitemaps.txt:3
msgid "Geographic Sitemaps"
msgstr ""

# 5057b53e8fcc4d77a302939335cb8308
#: ../../ref/contrib/gis/sitemaps.txt:5
msgid ""
"Google's sitemap protocol used to include geospatial content support. [#]_ "
"This included the addition of the ``<url>`` child element ``<geo:geo>``, "
"which tells Google that the content located at the URL is geographic in "
"nature. This is now obsolete."
msgstr ""

# 9b187590b6724f1d81c28aefdc3a9acf
#: ../../ref/contrib/gis/sitemaps.txt:14
msgid "Reference"
msgstr ""

# 4377455896eb4dadbc9802611022a582
#: ../../ref/contrib/gis/sitemaps.txt:17
msgid "``KMLSitemap``"
msgstr ""

# cdf074a5fe764eceb4da81a65340ee2b
#: ../../ref/contrib/gis/sitemaps.txt:20
msgid "``KMZSitemap``"
msgstr ""

# 652d011ecde643229b8a3befdf11c3d4
#: ../../ref/contrib/gis/sitemaps.txt:23
msgid "``GeoRSSSitemap``"
msgstr ""

# 318683b7bea14696a0359ef986e31371
#: ../../ref/contrib/gis/sitemaps.txt:26
msgid ""
"Google, Inc., `What is a Geo Sitemap? <http://support.google.com/webmasters/"
"bin/answer.py?answer=94555>`_."
msgstr ""

# b193cc1527034877b722f8e51062572b
#: ../../ref/contrib/gis/testing.txt:3
msgid "Testing GeoDjango apps"
msgstr ""

# 5c43efcaa85447a4b5d460b7292d0774
#: ../../ref/contrib/gis/testing.txt:5
msgid ""
"Included in this documentation are some additional notes and settings for :"
"ref:`testing-postgis` and :ref:`testing-spatialite` users."
msgstr ""

# 51613bdc80134091ba018bb057e77c62
#: ../../ref/contrib/gis/testing.txt:18
msgid ""
"The settings below have sensible defaults, and shouldn't require manual "
"setting."
msgstr ""

# 0fe6e4649d264c28a2a2d060ea0f7400
#: ../../ref/contrib/gis/testing.txt:23
msgid "``POSTGIS_TEMPLATE``"
msgstr ""

# 18fafd1e49d64e0ebc152981f7a537f9
#: ../../ref/contrib/gis/testing.txt:25
msgid ""
"This setting may be used to customize the name of the PostGIS template "
"database to use. It automatically defaults to ``'template_postgis'`` (the "
"same name used in the :ref:`installation documentation "
"<spatialdb_template>`)."
msgstr ""

# 92b6667c8dbd4876aa0091f0f1302837
#: ../../ref/contrib/gis/testing.txt:33
msgid "``POSTGIS_VERSION``"
msgstr ""

# ead5a07b8e05453c819ce3a27189011a
#: ../../ref/contrib/gis/testing.txt:35
msgid ""
"When GeoDjango's spatial backend initializes on PostGIS, it has to perform a "
"SQL query to determine the version in order to figure out what features are "
"available. Advanced users wishing to prevent this additional query may set "
"the version manually using a 3-tuple of integers specifying the major, "
"minor, and subminor version numbers for PostGIS. For example, to configure "
"for PostGIS 1.5.2 you would use::"
msgstr ""

# 3c1ed442f1be49e881c402d39451890f
#: ../../ref/contrib/gis/testing.txt:45
msgid "Obtaining sufficient privileges"
msgstr ""

# ef72a3628a1b419d9c4d4c183971b7dc
#: ../../ref/contrib/gis/testing.txt:47
msgid ""
"Depending on your configuration, this section describes several methods to "
"configure a database user with sufficient privileges to run tests for "
"GeoDjango applications on PostgreSQL. If your :ref:`spatial database "
"template <spatialdb_template>` was created like in the instructions, then "
"your testing database user only needs to have the ability to create "
"databases. In other configurations, you may be required to use a database "
"superuser."
msgstr ""

# eaa4a0f262584f6bb91c1a1b344ff14a
#: ../../ref/contrib/gis/testing.txt:56
msgid "Create database user"
msgstr ""

# 7adf8a3ba38942da8b98b04126936fad
#: ../../ref/contrib/gis/testing.txt:58
msgid ""
"To make a database user with the ability to create databases, use the "
"following command::"
msgstr ""

# aa3996625cc0450aa24892a12587b65d
#: ../../ref/contrib/gis/testing.txt:63
msgid ""
"The ``-R -S`` flags indicate that we do not want the user to have the "
"ability to create additional users (roles) or to be a superuser, "
"respectively."
msgstr ""

# 7f083149339e4728a3163efabfa909f1
#: ../../ref/contrib/gis/testing.txt:66
msgid ""
"Alternatively, you may alter an existing user's role from the SQL shell "
"(assuming this is done from an existing superuser account)::"
msgstr ""

# ee1ea2bf2f8846a89f73ee98a0d0e8a6
#: ../../ref/contrib/gis/testing.txt:72
msgid "Create database superuser"
msgstr ""

# 5ef067f0989f4772894e8e2c246f9748
#: ../../ref/contrib/gis/testing.txt:74
msgid "This may be done at the time the user is created, for example::"
msgstr ""

# 298c02688e564c4c857a6ad039162136
#: ../../ref/contrib/gis/testing.txt:78
msgid ""
"Or you may alter the user's role from the SQL shell (assuming this is done "
"from an existing superuser account)::"
msgstr ""

# ff050332fbaa450f80328516f843e10a
#: ../../ref/contrib/gis/testing.txt:85
msgid "Create local PostgreSQL database"
msgstr ""

# 61eb5e274334469fa8091afeea3d41aa
#: ../../ref/contrib/gis/testing.txt:87
msgid "Initialize database: ``initdb -D /path/to/user/db``"
msgstr ""

# 31f1ae43d0724f98a73979c1a4e2e2d3
#: ../../ref/contrib/gis/testing.txt:89
msgid ""
"If there's already a Postgres instance on the machine, it will need to use a "
"different TCP port than 5432. Edit ``postgresql.conf`` (in ``/path/to/user/"
"db``) to change the database port (e.g. ``port = 5433``)."
msgstr ""

# a04488949730427a852fae1a032f7a76
#: ../../ref/contrib/gis/testing.txt:93
msgid "Start this database ``pg_ctl -D /path/to/user/db start``"
msgstr ""

# f2cb551907464264982c4018aaa7ddb0
#: ../../ref/contrib/gis/testing.txt:98
msgid ""
"On Windows platforms the pgAdmin III utility may also be used as a simple "
"way to add superuser privileges to your database user."
msgstr ""

# a956683a825a417daf7065cd8c8896c4
#: ../../ref/contrib/gis/testing.txt:101
msgid ""
"By default, the PostGIS installer on Windows includes a template spatial "
"database entitled ``template_postgis``."
msgstr ""

# 29c1ca7097444147b6e19cc299119d94
#: ../../ref/contrib/gis/testing.txt:109
msgid ""
"Make sure the necessary spatial tables are created in your test spatial "
"database, as described in :ref:`create_spatialite_db`. Then just do this::"
msgstr ""

# f6368d14482c4758adb0314f881413e1
#: ../../ref/contrib/gis/testing.txt:120
msgid "``SPATIALITE_SQL``"
msgstr ""

# 98346f09cf1547c6b5b2a91cd6cdeaa5
#: ../../ref/contrib/gis/testing.txt:122
msgid "Only relevant when using a SpatiaLite version 2.3."
msgstr ""

# 79af68b2147d43ccbe775d7684c51fc7
#: ../../ref/contrib/gis/testing.txt:124
msgid ""
"By default, the GeoDjango test runner looks for the :ref:`file containing "
"the SpatiaLite dababase-initialization SQL code <create_spatialite_db>` in "
"the same directory where it was invoked (by default the same directory where "
"``manage.py`` is located). To use a different location, add the following to "
"your settings::"
msgstr ""

# ae394d331e784193adc6a34b380bee07
#: ../../ref/contrib/gis/testing.txt:135
msgid "GeoDjango tests"
msgstr ""

# 006cfc625a5c4e9ebc3b2d4ca8d46c0b
#: ../../ref/contrib/gis/testing.txt:137
msgid ""
"GeoDjango's test suite may be run in one of two ways, either by itself or "
"with the rest of :ref:`Django's unit tests <running-unit-tests>`."
msgstr ""

# 41e7d56b57d84b2d865ad36d51772d6d
#: ../../ref/contrib/gis/testing.txt:141
msgid "Run only GeoDjango tests"
msgstr ""

# 42deb66c91484c928d87dc0002e31257
#: ../../ref/contrib/gis/testing.txt:145
msgid ""
"To run *only* the tests for GeoDjango, the :setting:`TEST_RUNNER` setting "
"must be changed to use the :class:`~django.contrib.gis.tests."
"GeoDjangoTestSuiteRunner`::"
msgstr ""

# f8f499ff86dc4cc489d2f0cea9497bca
#: ../../ref/contrib/gis/testing.txt:154
msgid ""
"First, you'll need a bare-bones settings file, like below, that is "
"customized with your spatial database name and user::"
msgstr ""

# d6f9207e9e2e49bbabf37eaefce7426e
#: ../../ref/contrib/gis/testing.txt:167
msgid ""
"Assuming the above is in a file called ``postgis.py`` that is in the the "
"same directory as ``manage.py`` of your Django project, then you may run the "
"tests with the following command::"
msgstr ""

# 1ce2b7194e5948bcb503955fe1c55fbf
#: ../../ref/contrib/gis/testing.txt:174
msgid "Run with ``runtests.py``"
msgstr ""

# e40b62b7634e49e9ba5e900a483c3bb6
#: ../../ref/contrib/gis/testing.txt:176
msgid ""
"To have the GeoDjango tests executed when :ref:`running the Django test "
"suite <running-unit-tests>` with ``runtests.py`` all of the databases in the "
"settings file must be using one of the :ref:`spatial database backends "
"<spatial-backends>`."
msgstr ""

# 291cdeeec3bc47c6b26b8465b3baf496
#: ../../ref/contrib/gis/testing.txt:183
msgid ""
"Do not change the :setting:`TEST_RUNNER` setting when running the GeoDjango "
"tests with ``runtests.py``."
msgstr ""

# febe0a4a601041159e5c6ac49217a6df
#: ../../ref/contrib/gis/testing.txt:189
msgid ""
"The following is an example bare-bones settings file with spatial backends "
"that can be used to run the entire Django test suite, including those in :"
"mod:`django.contrib.gis`::"
msgstr ""

# 9b6116136c2a40d0b8d267a4e7c63a79
#: ../../ref/contrib/gis/testing.txt:206
msgid ""
"Assuming the settings above were in a ``postgis.py`` file in the same "
"directory as ``runtests.py``, then all Django and GeoDjango tests would be "
"performed when executing the command::"
msgstr ""

# b6f63c312e1f43d1ae1f8bc382a291e2
#: ../../ref/contrib/gis/tutorial.txt:3
msgid "GeoDjango Tutorial"
msgstr ""

# 1da097763ea44675b2b71d71d0e89231
#: ../../ref/contrib/gis/tutorial.txt:8
msgid ""
"GeoDjango is an included contrib module for Django that turns it into a "
"world-class geographic Web framework.  GeoDjango strives to make it as "
"simple as possible to create geographic Web applications, like location-"
"based services. Its features include:"
msgstr ""

# c92707f3b5de4d64965c10e84ec4fd85
#: ../../ref/contrib/gis/tutorial.txt:13
msgid "Django model fields for `OGC`_ geometries."
msgstr ""

# bfd1bc2e818d44139ce5f7dd1e4d0c6f
#: ../../ref/contrib/gis/tutorial.txt:14
msgid "Extensions to Django's ORM for querying and manipulating spatial data."
msgstr ""

# 79508456590c438bb4555511f2af173d
#: ../../ref/contrib/gis/tutorial.txt:15
msgid ""
"Loosely-coupled, high-level Python interfaces for GIS geometry operations "
"and data formats."
msgstr ""

# 113b21075f9445099db675a72bb29ab4
#: ../../ref/contrib/gis/tutorial.txt:17
msgid "Editing geometry fields from the admin."
msgstr ""

# 2257cbbae7144c8581e01bea11aa5cc4
#: ../../ref/contrib/gis/tutorial.txt:19
msgid ""
"This tutorial assumes familiarity with Django; thus, if you're brand new to "
"Django, please read through the :doc:`regular tutorial </intro/tutorial01>` "
"to familiarize yourself with Django first."
msgstr ""

# 289e7552b5d646c1bb2620c975c6f7ab
#: ../../ref/contrib/gis/tutorial.txt:25
msgid ""
"GeoDjango has additional requirements beyond what Django requires -- please "
"consult the :ref:`installation documentation <ref-gis-install>` for more "
"details."
msgstr ""

# 58db1db349f8442f84870ee704f8b033
#: ../../ref/contrib/gis/tutorial.txt:29
msgid ""
"This tutorial will guide you through the creation of a geographic web "
"application for viewing the `world borders`_. [#]_ Some of the code used in "
"this tutorial is taken from and/or inspired by the `GeoDjango basic apps`_ "
"project. [#]_"
msgstr ""

# 198ddea1bc0f4fc38d7400f9c7251637
#: ../../ref/contrib/gis/tutorial.txt:36
msgid ""
"Proceed through the tutorial sections sequentially for step-by-step "
"instructions."
msgstr ""

# 6ac372a79fbc450892ecac0748075607
#: ../../ref/contrib/gis/tutorial.txt:44
msgid "Setting Up"
msgstr ""

# 2f8b4a308a4e41419103a2d0d39818e8
#: ../../ref/contrib/gis/tutorial.txt:47
msgid "Create a Spatial Database"
msgstr ""

# 167f83cb646141bc851f6755bd2f5727
#: ../../ref/contrib/gis/tutorial.txt:51
msgid ""
"MySQL and Oracle users can skip this section because spatial types are "
"already built into the database."
msgstr ""

# 44e863d5bd2a42a1a3e918e4378fae60
#: ../../ref/contrib/gis/tutorial.txt:54
msgid "First, create a spatial database for your project."
msgstr ""

# c83d21b8bacf4b4b8d02d343762588cf
#: ../../ref/contrib/gis/tutorial.txt:56
msgid ""
"If you are using PostGIS, create the database from the :ref:`spatial "
"database template <spatialdb_template>`:"
msgstr ""

# 73e36a88c7df459f9c1619cd39da3387
#: ../../ref/contrib/gis/tutorial.txt:65
msgid ""
"This command must be issued by a database user with enough privileges to "
"create a database.  To create a user with ``CREATE DATABASE`` privileges in "
"PostgreSQL, use the following commands:"
msgstr ""

# bd32d371a9204fc7ae0c190091a8036c
#: ../../ref/contrib/gis/tutorial.txt:75
msgid ""
"Replace ``geo`` with your Postgres database user's username. (In PostgreSQL, "
"this user will also be an OS-level user.)"
msgstr ""

# 5b82861778d9445abab2b9bb4a9d9e6d
#: ../../ref/contrib/gis/tutorial.txt:78
msgid ""
"If you are using SQLite and SpatiaLite, consult the instructions on how to "
"create a :ref:`SpatiaLite database <create_spatialite_db>`."
msgstr ""

# 5e07d7cd0e444d7fb0a95b968b0b2342
#: ../../ref/contrib/gis/tutorial.txt:82
msgid "Create a New Project"
msgstr ""

# 8bd1daefd8dd4f98b414914f090fcd18
#: ../../ref/contrib/gis/tutorial.txt:84
msgid ""
"Use the standard ``django-admin.py`` script to create a project called "
"``geodjango``:"
msgstr ""

# 3f4053ca9ff64cd5a8a93c48c675aebb
#: ../../ref/contrib/gis/tutorial.txt:91
msgid ""
"This will initialize a new project. Now, create a ``world`` Django "
"application within the ``geodjango`` project:"
msgstr ""

# 914c86d457ca44a68430e03c6267edb9
#: ../../ref/contrib/gis/tutorial.txt:100
msgid "Configure ``settings.py``"
msgstr ""

# 0fdd36e398e54b529a08fdccc1dbda7e
#: ../../ref/contrib/gis/tutorial.txt:102
msgid ""
"The ``geodjango`` project settings are stored in the ``geodjango/settings."
"py`` file. Edit the database connection settings to match your setup::"
msgstr ""

# 2c0715cc64f54421a5957e5dcd92573c
#: ../../ref/contrib/gis/tutorial.txt:113
msgid ""
"In addition, modify the :setting:`INSTALLED_APPS` setting to include :mod:"
"`django.contrib.admin`, :mod:`django.contrib.gis`, and ``world`` (your newly "
"created application)::"
msgstr ""

# 0787b8c8dcd24a19a43507744edbffbf
#: ../../ref/contrib/gis/tutorial.txt:130
msgid "Geographic Data"
msgstr ""

# ddc35c6f29cc416098d20ee84cad0f5e
#: ../../ref/contrib/gis/tutorial.txt:135
msgid "World Borders"
msgstr ""

# 0bf344904f274852952f944ca36e6a96
#: ../../ref/contrib/gis/tutorial.txt:137
msgid ""
"The world borders data is available in this `zip file`__.  Create a ``data`` "
"directory in the ``world`` application, download the world borders data, and "
"unzip. On GNU/Linux platforms, use the following commands:"
msgstr ""

# a531962b4487406696659a64d84ad74b
#: ../../ref/contrib/gis/tutorial.txt:149
msgid ""
"The world borders ZIP file contains a set of data files collectively known "
"as an `ESRI Shapefile`__, one of the most popular geospatial data formats.  "
"When unzipped, the world borders dataset includes files with the following "
"extensions:"
msgstr ""

# 77c7ee2853dc448c9c59396cb280e031
#: ../../ref/contrib/gis/tutorial.txt:154
msgid "``.shp``: Holds the vector data for the world borders geometries."
msgstr ""

# c3dffcc6f71c477ab08a338c8c344437
#: ../../ref/contrib/gis/tutorial.txt:155
msgid "``.shx``: Spatial index file for geometries stored in the ``.shp``."
msgstr ""

# 46bc4de189814be6a8bf5e07bff743b7
#: ../../ref/contrib/gis/tutorial.txt:156
msgid ""
"``.dbf``: Database file for holding non-geometric attribute data (e.g., "
"integer and character fields)."
msgstr ""

# 430c3f28d2ca4ca586b8c1a15ca71857
#: ../../ref/contrib/gis/tutorial.txt:158
msgid ""
"``.prj``: Contains the spatial reference information for the geographic data "
"stored in the shapefile."
msgstr ""

# d70d2f4de0914cbcb507833a73da631c
#: ../../ref/contrib/gis/tutorial.txt:165
msgid "Use ``ogrinfo`` to examine spatial data"
msgstr ""

# 35b4759bfa404e7fb151e84bffcc3c2e
#: ../../ref/contrib/gis/tutorial.txt:167
msgid ""
"The GDAL ``ogrinfo`` utility allows examining the metadata of shapefiles or "
"other vector data sources:"
msgstr ""

# 47ecd3f2a1da4b03a093849c2065f0f3
#: ../../ref/contrib/gis/tutorial.txt:177
msgid ""
"``ogrinfo`` tells us that the shapefile has one layer, and that this layer "
"contains polygon data.  To find out more, we'll specify the layer name and "
"use the ``-so`` option to get only the important summary information:"
msgstr ""

# 5cfe0d23eeda4b81878713f364368d31
#: ../../ref/contrib/gis/tutorial.txt:209
msgid ""
"This detailed summary information tells us the number of features in the "
"layer (246), the geographic bounds of the data, the spatial reference system "
"(\"SRS WKT\"), as well as type information for each attribute field. For "
"example, ``FIPS: String (2.0)`` indicates that the ``FIPS`` character field "
"has a maximum length of 2.  Similarly, ``LON: Real (8.3)`` is a floating-"
"point field that holds a maximum of 8 digits up to three decimal places."
msgstr ""

# a9c9675536d04a52b0a20b95c4736f95
#: ../../ref/contrib/gis/tutorial.txt:217
msgid "Geographic Models"
msgstr ""

# 5f9b28e5078b492a8eec64cadca8129e
#: ../../ref/contrib/gis/tutorial.txt:220
msgid "Defining a Geographic Model"
msgstr ""

# dac0ce4dc0b6460a8e9338d438526b01
#: ../../ref/contrib/gis/tutorial.txt:222
msgid ""
"Now that you've examined your dataset using ``ogrinfo``, create a GeoDjango "
"model to represent this data::"
msgstr ""

# 30f878d56e6f4f0b96d5907468865257
#: ../../ref/contrib/gis/tutorial.txt:251
msgid "Please note two important things:"
msgstr ""

# 0c4fdcacfb88431493b186e0cb3ffb6a
#: ../../ref/contrib/gis/tutorial.txt:253
msgid "The ``models`` module is imported from ``django.contrib.gis.db``."
msgstr ""

# bc4b6861e4e4431dbb7493de261770e4
#: ../../ref/contrib/gis/tutorial.txt:254
msgid ""
"You must override the model's default manager with :class:`~django.contrib."
"gis.db.models.GeoManager` to perform spatial queries."
msgstr ""

# 50321a3058494b269f462b6d0acd33f2
#: ../../ref/contrib/gis/tutorial.txt:257
msgid ""
"The default spatial reference system for geometry fields is WGS84 (meaning "
"the `SRID`__ is 4326) -- in other words, the field coordinates are in "
"longitude, latitude pairs in units of degrees.  To use a different "
"coordinate system, set the SRID of the geometry field with the ``srid`` "
"argument. Use an integer representing the coordinate system's EPSG code."
msgstr ""

# 744e64100b244505afd09118b99304c2
#: ../../ref/contrib/gis/tutorial.txt:266
msgid "Run ``syncdb``"
msgstr ""

# ebc8042dc463421ca770ac5d2019a930
#: ../../ref/contrib/gis/tutorial.txt:268
msgid ""
"After defining your model, you need to sync it with the database. First, "
"let's look at the SQL that will generate the table for the ``WorldBorder`` "
"model::"
msgstr ""

# 362ccec50fc340a1b2746439fc89682b
#: ../../ref/contrib/gis/tutorial.txt:274
msgid "This command should produce the following output:"
msgstr ""

# 8abc958d5f56416cbb912f5a24a1cb93
#: ../../ref/contrib/gis/tutorial.txt:299
msgid ""
"If this looks correct, run ``syncdb`` to create this table in the database::"
msgstr ""

# 9ff3154f05f8498daf03ef7c4538bdc2
#: ../../ref/contrib/gis/tutorial.txt:305
msgid ""
"The ``syncdb`` command may also prompt you to create an admin user. Either "
"do so now, or later by running ``django-admin.py createsuperuser``."
msgstr ""

# 2563c9e56c7d4ecfb28aa6884dc3ac08
#: ../../ref/contrib/gis/tutorial.txt:309
msgid "Importing Spatial Data"
msgstr ""

# e548d0071d6d4ca48e160778228364a7
#: ../../ref/contrib/gis/tutorial.txt:311
msgid ""
"This section will show you how to import the world borders shapefile into "
"the database via GeoDjango models using the :ref:`ref-layermapping`. There "
"are many different ways to import data into a spatial database -- besides "
"the tools included within GeoDjango, you may also use the following:"
msgstr ""

# 1d4e0ba3000f45fc88f3263cc996de6c
#: ../../ref/contrib/gis/tutorial.txt:317
msgid ""
"`ogr2ogr`_: A command-line utility included with GDAL that can import many "
"vector data formats into PostGIS, MySQL, and Oracle databases."
msgstr ""

# 1431e453fc2c4703ab517932b14cf3a2
#: ../../ref/contrib/gis/tutorial.txt:319
msgid ""
"`shp2pgsql`_: This utility included with PostGIS imports ESRI shapefiles "
"into PostGIS."
msgstr ""

# 98740f7e1a1a470f9e3721b565acec10
#: ../../ref/contrib/gis/tutorial.txt:328
msgid "GDAL Interface"
msgstr ""

# f89ec6336765494ebf605bcbc516157d
#: ../../ref/contrib/gis/tutorial.txt:330
msgid ""
"Earlier, you used ``ogrinfo`` to examine the contents of the world borders "
"shapefile.  GeoDjango also includes a Pythonic interface to GDAL's powerful "
"OGR library that can work with all the vector data sources that OGR supports."
msgstr ""

# 395eeda147cb47989d67678ac019d8cb
#: ../../ref/contrib/gis/tutorial.txt:334
msgid "First, invoke the Django shell:"
msgstr ""

# 7bf818f441084616b3d7fa62cc6bad9d
#: ../../ref/contrib/gis/tutorial.txt:340
msgid ""
"If you downloaded the :ref:`worldborders` data earlier in the tutorial, then "
"you can determine its path using Python's built-in ``os`` module::"
msgstr ""

# d92e7086e3f54743b3538b7d1fd780dc
#: ../../ref/contrib/gis/tutorial.txt:349
msgid ""
"Now, open the world borders shapefile using GeoDjango's :class:`~django."
"contrib.gis.gdal.DataSource` interface::"
msgstr ""

# adab41f4bf4747529d287109732e98c7
#: ../../ref/contrib/gis/tutorial.txt:357
msgid ""
"Data source objects can have different layers of geospatial features; "
"however, shapefiles are only allowed to have one layer::"
msgstr ""

# 79efbdfef07548b89388a5e574cf3f4a
#: ../../ref/contrib/gis/tutorial.txt:366
msgid ""
"You can see the layer's geometry type and how many features it contains::"
msgstr ""

# 380ad6c5679e416e8237907a4daa8047
#: ../../ref/contrib/gis/tutorial.txt:375
msgid ""
"Unfortunately, the shapefile data format does not allow for greater "
"specificity with regards to geometry types.  This shapefile, like many "
"others, actually includes ``MultiPolygon`` geometries, not Polygons. It's "
"important to use a more general field type in models: a GeoDjango "
"``MultiPolygonField`` will accept a ``Polygon`` geometry, but a "
"``PolygonField`` will not accept a ``MultiPolygon`` type geometry.  This is "
"why the ``WorldBorder`` model defined above uses a ``MultiPolygonField``."
msgstr ""

# b67ba66638284c7eb60c2200e5c0db35
#: ../../ref/contrib/gis/tutorial.txt:383
msgid ""
"The :class:`~django.contrib.gis.gdal.Layer` may also have a spatial "
"reference system associated with it.  If it does, the ``srs`` attribute will "
"return a :class:`~django.contrib.gis.gdal.SpatialReference` object::"
msgstr ""

# 9445ab4a56d24cddaa5db588a51555bb
#: ../../ref/contrib/gis/tutorial.txt:397
msgid ""
"This shapefile is in the popular WGS84 spatial reference system -- in other "
"words, the data uses longitude, latitude pairs in units of degrees."
msgstr ""

# 6e62a24e8c89471b8980b3bc9c46f556
#: ../../ref/contrib/gis/tutorial.txt:401
msgid ""
"In addition, shapefiles also support attribute fields that may contain "
"additional data.  Here are the fields on the World Borders layer:"
msgstr ""

# 43ab0e3aefd24c8caf9e78395f5963ad
#: ../../ref/contrib/gis/tutorial.txt:407
msgid ""
"The following code will let you examine the OGR types (e.g. integer or "
"string) associated with each of the fields:"
msgstr ""

# 85f4087fb4a4412da0ea23b5c5868284
#: ../../ref/contrib/gis/tutorial.txt:413
msgid ""
"You can iterate over each feature in the layer and extract information from "
"both the feature's geometry (accessed via the ``geom`` attribute) as well as "
"the feature's attribute fields (whose **values** are accessed via ``get()`` "
"method)::"
msgstr ""

# 4bab9d7ec02c4df4bfea4171553befd1
#: ../../ref/contrib/gis/tutorial.txt:426
msgid ":class:`~django.contrib.gis.gdal.Layer` objects may be sliced::"
msgstr ""

# 3409215929f84c26afbf4c792183f567
#: ../../ref/contrib/gis/tutorial.txt:431
msgid "And individual features may be retrieved by their feature ID::"
msgstr ""

# 7262382531ec4d2b9f848483cfa08153
#: ../../ref/contrib/gis/tutorial.txt:437
msgid "Boundary geometries may be exported as WKT and GeoJSON::"
msgstr ""

# e4ec0189466c4863807e2a53861753b8
#: ../../ref/contrib/gis/tutorial.txt:447
msgid "``LayerMapping``"
msgstr ""

# 7a02a701c0d34506b89e6c044edda31c
#: ../../ref/contrib/gis/tutorial.txt:449
msgid ""
"To import the data, use a LayerMapping in a Python script. Create a file "
"called ``load.py`` inside the ``world`` application, with the following "
"code::"
msgstr ""

# fd53388ed19c4304912a266f6fa746a8
#: ../../ref/contrib/gis/tutorial.txt:480
msgid "A few notes about what's going on:"
msgstr ""

# 03549becc66441039cbd4f42b9fd17a9
#: ../../ref/contrib/gis/tutorial.txt:482
msgid ""
"Each key in the ``world_mapping`` dictionary corresponds to a field in the "
"``WorldBorder`` model.  The value is the name of the shapefile field that "
"data will be loaded from."
msgstr ""

# 8b002b8359d34421aa439f598a398f16
#: ../../ref/contrib/gis/tutorial.txt:485
msgid ""
"The key ``mpoly`` for the geometry field is ``MULTIPOLYGON``, the geometry "
"type GeoDjango will import the field as.  Even simple polygons in the "
"shapefile will automatically be converted into collections prior to "
"insertion into the database."
msgstr ""

# 660ffb3b3d5d4abbbdbd8d5a6a934faa
#: ../../ref/contrib/gis/tutorial.txt:489
msgid ""
"The path to the shapefile is not absolute -- in other words, if you move the "
"``world`` application (with ``data`` subdirectory) to a different location, "
"the script will still work."
msgstr ""

# 543b697b607e41caa53002713ef47426
#: ../../ref/contrib/gis/tutorial.txt:492
msgid ""
"The ``transform`` keyword is set to ``False`` because the data in the "
"shapefile does not need to be converted -- it's already in WGS84 (SRID=4326)."
msgstr ""

# 845f39c8ba2547a7b9d8d2dade9e302c
#: ../../ref/contrib/gis/tutorial.txt:494
msgid ""
"The ``encoding`` keyword is set to the character encoding of the string "
"values in the shapefile. This ensures that string values are read and saved "
"correctly from their original encoding system."
msgstr ""

# ca1e4ce96b144c58aeaa5f09b4b57e47
#: ../../ref/contrib/gis/tutorial.txt:498
msgid ""
"Afterwards, invoke the Django shell from the ``geodjango`` project directory:"
msgstr ""

# bd7b3a7841f44eb3bc45948a4cf4f521
#: ../../ref/contrib/gis/tutorial.txt:504
msgid ""
"Next, import the ``load`` module, call the ``run`` routine, and watch "
"``LayerMapping`` do the work::"
msgstr ""

# ee40812cc56042cc9bd1b913c919bb4c
#: ../../ref/contrib/gis/tutorial.txt:514
msgid "Try ``ogrinspect``"
msgstr ""

# 8fe1c344ccf643018aa01ce8e0a104e6
#: ../../ref/contrib/gis/tutorial.txt:515
msgid ""
"Now that you've seen how to define geographic models and import data with "
"the :ref:`ref-layermapping`, it's possible to further automate this process "
"with use of the :djadmin:`ogrinspect` management command.  The :djadmin:"
"`ogrinspect` command  introspects a GDAL-supported vector data source (e.g., "
"a shapefile) and generates a model definition and ``LayerMapping`` "
"dictionary automatically."
msgstr ""

# 2698441933fa41e39ef55ee5125ba68e
#: ../../ref/contrib/gis/tutorial.txt:521
msgid "The general usage of the command goes as follows:"
msgstr ""

# badb5e8129774c31af18a8d95be07c25
#: ../../ref/contrib/gis/tutorial.txt:527
msgid ""
"``data_source`` is the path to the GDAL-supported data source and "
"``model_name`` is the name to use for the model.  Command-line options may "
"be used to further define how the model is generated."
msgstr ""

# 8c77722e7cdf4f02b09bbab5ebb1309a
#: ../../ref/contrib/gis/tutorial.txt:531
msgid ""
"For example, the following command nearly reproduces the ``WorldBorder`` "
"model and mapping dictionary created above, automatically:"
msgstr ""

# 0915521c543043ac97b175782d365737
#: ../../ref/contrib/gis/tutorial.txt:539
msgid "A few notes about the command-line options given above:"
msgstr ""

# 3ba060c8b34146c2b2cc6b4e60fef20f
#: ../../ref/contrib/gis/tutorial.txt:541
msgid "The ``--srid=4326`` option sets the SRID for the geographic field."
msgstr ""

# 14be188be9c443d0a8b2502f54c3850f
#: ../../ref/contrib/gis/tutorial.txt:542
msgid ""
"The ``--mapping`` option tells ``ogrinspect`` to also generate a mapping "
"dictionary for use with :class:`~django.contrib.gis.utils.LayerMapping`."
msgstr ""

# 5a20a96512944efdad96816fb9a3a51e
#: ../../ref/contrib/gis/tutorial.txt:545
msgid ""
"The ``--multi`` option is specified so that the geographic field is a :class:"
"`~django.contrib.gis.db.models.MultiPolygonField` instead of just a :class:"
"`~django.contrib.gis.db.models.PolygonField`."
msgstr ""

# 39884e45e57b4e39b7645c41005795c1
#: ../../ref/contrib/gis/tutorial.txt:549
msgid ""
"The command produces the following output, which may be copied directly into "
"the ``models.py`` of a GeoDjango application::"
msgstr ""

# 001a223d8bbc4096ad6f0935dd4649f1
#: ../../ref/contrib/gis/tutorial.txt:587
msgid "Spatial Queries"
msgstr ""

# decfe30146724c58ba37fccffb458f76
#: ../../ref/contrib/gis/tutorial.txt:591
msgid ""
"GeoDjango adds spatial lookups to the Django ORM.  For example, you can find "
"the country in the ``WorldBorder`` table that contains a particular point.  "
"First, fire up the management shell:"
msgstr ""

# ce4835faea7c4fc5950b586444a10651
#: ../../ref/contrib/gis/tutorial.txt:599
msgid "Now, define a point of interest [#]_::"
msgstr ""

# ad377534204241cdb6dd53f7723bf8e8
#: ../../ref/contrib/gis/tutorial.txt:603
msgid ""
"The ``pnt_wkt`` string represents the point at -95.3385 degrees longitude, "
"29.7245 degrees latitude.  The geometry is in a format known as Well Known "
"Text (WKT), a standard issued by the Open Geospatial Consortium (OGC). [#]_  "
"Import the ``WorldBorder`` model, and perform a ``contains`` lookup using "
"the ``pnt_wkt`` as the parameter::"
msgstr ""

# 295949950fa44b66b9716abaf2d1611e
#: ../../ref/contrib/gis/tutorial.txt:614
msgid ""
"Here, you retrieved a ``GeoQuerySet`` with only one model: the border of the "
"United States (exactly what you would expect)."
msgstr ""

# 2792ca32600d4501b81282fe41a3aee1
#: ../../ref/contrib/gis/tutorial.txt:617
msgid ""
"Similarly, you may also use a :ref:`GEOS geometry object <ref-geos>`. Here, "
"you can combine the ``intersects`` spatial lookup with the ``get`` method to "
"retrieve only the ``WorldBorder`` instance for San Marino instead of a "
"queryset::"
msgstr ""

# 7bb31a7b27a54d7d995f60b7a7e5547d
#: ../../ref/contrib/gis/tutorial.txt:628
msgid ""
"The ``contains`` and ``intersects`` lookups are just a subset of the "
"available queries -- the :ref:`ref-gis-db-api` documentation has more."
msgstr ""

# 50786497f513457b9db7c7d2d3fb95f7
#: ../../ref/contrib/gis/tutorial.txt:632
msgid "Automatic Spatial Transformations"
msgstr ""

# 7716bdb21c1d4f4282f326a2fffaf5f5
#: ../../ref/contrib/gis/tutorial.txt:633
msgid ""
"When doing spatial queries, GeoDjango automatically transforms geometries if "
"they're in a different coordinate system.  In the following example, "
"coordinates will be expressed in `EPSG SRID 32140`__, a coordinate system "
"specific to south Texas **only** and in units of **meters**, not degrees::"
msgstr ""

# b624a7ec1d794514b0b6b1f40ba7f0c8
#: ../../ref/contrib/gis/tutorial.txt:642
msgid ""
"Note that ``pnt`` may also be constructed with EWKT, an \"extended\" form of "
"WKT that includes the SRID::"
msgstr ""

# 32ccdae459924f5a9c71c7b80e0e1abd
#: ../../ref/contrib/gis/tutorial.txt:647
msgid ""
"GeoDjango's ORM will automatically wrap geometry values in transformation "
"SQL, allowing the developer to work at a higher level of abstraction::"
msgstr ""

# be876e2a88224ca9be37f860b2b9605b
#: ../../ref/contrib/gis/tutorial.txt:664
msgid "Raw queries"
msgstr ""

# 1665888d5020496c9c99358c7592a19c
#: ../../ref/contrib/gis/tutorial.txt:666
msgid ""
"When using :doc:`raw queries </topics/db/sql>`, you should generally wrap "
"your geometry fields with the ``asText()`` SQL function (or ``ST_AsText`` "
"for PostGIS) so that the field value will be recognized by GEOS::"
msgstr ""

# 3cf726adde89497dbb110d68729b03b9
#: ../../ref/contrib/gis/tutorial.txt:672
msgid ""
"This is not absolutely required by PostGIS, but generally you should only "
"use raw queries when you know exactly what you are doing."
msgstr ""

# 8a587649cf6b4066866bf8397033a26d
#: ../../ref/contrib/gis/tutorial.txt:676
msgid "Lazy Geometries"
msgstr ""

# 88e0dc55242f43dd85524930bb03ea08
#: ../../ref/contrib/gis/tutorial.txt:677
msgid ""
"GeoDjango loads geometries in a standardized textual representation.  When "
"the geometry field is first accessed, GeoDjango creates a `GEOS geometry "
"object <ref-geos>`, exposing powerful functionality, such as serialization "
"properties for popular geospatial formats::"
msgstr ""

# cd3d5c29f2ed4c74a7edc6730b005759
#: ../../ref/contrib/gis/tutorial.txt:692
msgid ""
"This includes access to all of the advanced geometric operations provided by "
"the GEOS library::"
msgstr ""

# 893f760cc5ad45818c6886c02e04c4cf
#: ../../ref/contrib/gis/tutorial.txt:706
msgid "Putting your data on the map"
msgstr ""

# 4e78a790186f406cb76589edca0020a6
#: ../../ref/contrib/gis/tutorial.txt:709
msgid "Geographic Admin"
msgstr ""

# 0cf7827654e049219ad5193544d1f21c
#: ../../ref/contrib/gis/tutorial.txt:711
msgid ""
"GeoDjango extends :doc:`Django's admin application </ref/contrib/admin/"
"index>` with support for editing geometry fields."
msgstr ""

# 19d1a2a3ab644ce08959c7965ab2b063
# c4f42bda74f64eb3a9ea559bfe5742ec
#: ../../ref/contrib/gis/tutorial.txt:715 ../../ref/templates/api.txt:16
msgid "Basics"
msgstr ""

# 5cc994fec3d04941856ac59218d385bf
#: ../../ref/contrib/gis/tutorial.txt:717
msgid ""
"GeoDjango also supplements the Django admin by allowing users to create and "
"modify geometries on a JavaScript slippy map (powered by `OpenLayers`_)."
msgstr ""

# dda5dffdd3804a00ba368393bfd4e594
#: ../../ref/contrib/gis/tutorial.txt:720
msgid ""
"Let's dive right in.  Create a file called ``admin.py`` inside the ``world`` "
"application with the following code::"
msgstr ""

# 5c56a726812c48af93e265f52cda0e0f
#: ../../ref/contrib/gis/tutorial.txt:728
msgid ""
"Next, edit your ``urls.py`` in the ``geodjango`` application folder as "
"follows::"
msgstr ""

# 95fe83d3e9784fb890e26ba773ff818f
#: ../../ref/contrib/gis/tutorial.txt:739
msgid "Start up the Django development server:"
msgstr ""

# cd6662a4d41d4d3ab47d744c017c322a
#: ../../ref/contrib/gis/tutorial.txt:745
msgid ""
"Finally, browse to ``http://localhost:8000/admin/``, and log in with the "
"admin user created after running ``syncdb``.  Browse to any of the "
"``WorldBorder`` entries -- the borders may be edited by clicking on a "
"polygon and dragging the vertexes to the desired position."
msgstr ""

# fedfd0c12d424078af75f2582e7ee487
#: ../../ref/contrib/gis/tutorial.txt:760
msgid ""
"With the :class:`~django.contrib.gis.admin.OSMGeoAdmin`, GeoDjango uses a "
"`Open Street Map`_ layer in the admin. This provides more context (including "
"street and thoroughfare details) than available with the :class:`~django."
"contrib.gis.admin.GeoModelAdmin` (which uses the `Vector Map Level 0`_ WMS "
"dataset hosted at `OSGeo`_)."
msgstr ""

# 2784cb3f33e146d98a1fa82cd78cb64b
#: ../../ref/contrib/gis/tutorial.txt:766
msgid "First, there are some important requirements:"
msgstr ""

# 20bb43b1c055443ea6705ae6a4dab287
#: ../../ref/contrib/gis/tutorial.txt:768
msgid ""
":class:`~django.contrib.gis.admin.OSMGeoAdmin` requires that the :ref:"
"`spherical mercator projection be added <addgoogleprojection>` to the "
"``spatial_ref_sys`` table (PostGIS 1.3 and below, only)."
msgstr ""

# 74dfbe130a7c403493446e1360e1a74b
#: ../../ref/contrib/gis/tutorial.txt:771
msgid ""
"The PROJ.4 datum shifting files must be installed (see the :ref:`PROJ.4 "
"installation instructions <proj4>` for more details)."
msgstr ""

# 680939a71de84086b3a350dd45ddf731
#: ../../ref/contrib/gis/tutorial.txt:774
msgid ""
"If you meet these requirements, then just substitute the ``OSMGeoAdmin`` "
"option class in your ``admin.py`` file::"
msgstr ""

# b7241028cb12409c84f272e1717f1fe8
#: ../../ref/contrib/gis/tutorial.txt:781
msgid ""
"Special thanks to Bjørn Sandvik of `thematicmapping.org <http://"
"thematicmapping.org>`_ for providing and maintaining this dataset."
msgstr ""

# 0a69993c178c4ea386fdb16fb387b954
#: ../../ref/contrib/gis/tutorial.txt:784
msgid ""
"GeoDjango basic apps was written by Dane Springmeyer, Josh Livni, and "
"Christopher Schmidt."
msgstr ""

# 22ee9566ef654f93b52163869d7b1fc3
#: ../../ref/contrib/gis/tutorial.txt:786
msgid ""
"This point is the `University of Houston Law Center <http://www.law.uh.edu/"
">`_."
msgstr ""

# 068574f760bf4f01b0f94b0fa325e453
#: ../../ref/contrib/gis/tutorial.txt:788
msgid ""
"Open Geospatial Consortium, Inc., `OpenGIS Simple Feature Specification For "
"SQL <http://www.opengeospatial.org/standards/sfs>`_."
msgstr ""

# f4d2857d030041619db6688e27b5e798
#: ../../ref/contrib/gis/utils.txt:5
msgid "GeoDjango Utilities"
msgstr ""

# d0717b7924724c288c67cc1924279831
#: ../../ref/contrib/gis/utils.txt:10
msgid ""
"The :mod:`django.contrib.gis.utils` module contains various utilities that "
"are useful in creating geospatial Web applications."
msgstr ""

# 3aad502478a046c385cd2fe2144e0b44
# dbe875f4c9e545eabc5d82b25ab32d8d
#: ../../ref/contrib/humanize.txt:3 ../../ref/templates/builtins.txt:2328
msgid "django.contrib.humanize"
msgstr ""

# b1ce830947bc4c978df1513451c2147a
# 71400299b1ad49468d25cc1dfede2830
#: ../../ref/contrib/humanize.txt:9 ../../ref/contrib/index.txt:122
msgid ""
"A set of Django template filters useful for adding a \"human touch\" to data."
msgstr ""

# 7e012f16c1604835a3da1b09182959b8
#: ../../ref/contrib/humanize.txt:11
msgid ""
"To activate these filters, add ``'django.contrib.humanize'`` to your :"
"setting:`INSTALLED_APPS` setting. Once you've done that, use ``{% load "
"humanize %}`` in a template, and you'll have access to the following filters."
msgstr ""

# 0a44c8ce62bf4051a627de18c478290b
#: ../../ref/contrib/humanize.txt:19
msgid "apnumber"
msgstr ""

# f34466a6a6154fb6b3f24759e8424069
#: ../../ref/contrib/humanize.txt:21
msgid ""
"For numbers 1-9, returns the number spelled out. Otherwise, returns the "
"number. This follows Associated Press style."
msgstr ""

# 9148345cc42d4e9884a6fa933a882be8
# aa75b5f231264d1db1b73e71f7fd925e
# 13c6bb710b3b498c9e52e3c5ba0b820c
# f13c3b3eb4e64d8a8bc7bd7d3b6470b5
# 4703bc6661634f12b068b5f360145707
# 303d5250c478491994df4b829288ad38
#: ../../ref/contrib/humanize.txt:24 ../../ref/contrib/humanize.txt:39
#: ../../ref/contrib/humanize.txt:62 ../../ref/contrib/humanize.txt:134
#: ../../ref/contrib/webdesign.txt:51 ../../ref/django-admin.txt:1149
msgid "Examples:"
msgstr ""

# 95c14847933f45d2b9f26cac757987d8
#: ../../ref/contrib/humanize.txt:26
msgid "``1`` becomes ``one``."
msgstr ""

# 84d4fccb62714dfd9ef0f94ff23abf9e
#: ../../ref/contrib/humanize.txt:27
msgid "``2`` becomes ``two``."
msgstr ""

# f7609d65c5584fbfae8449a38f3c344c
#: ../../ref/contrib/humanize.txt:28
msgid "``10`` becomes ``10``."
msgstr ""

# 7e77279f54cd4c079e43cc32c153251e
# aca8760848614951a12483efae73326d
# 84bfc5672ba349c8a2622c4915cb2975
# 0f7260e73f5e4d52b9177d653f98dd79
#: ../../ref/contrib/humanize.txt:30 ../../ref/contrib/humanize.txt:52
#: ../../ref/contrib/humanize.txt:77 ../../ref/contrib/humanize.txt:140
msgid ""
"You can pass in either an integer or a string representation of an integer."
msgstr ""

# fc6491646691463389369aaae759ed03
#: ../../ref/contrib/humanize.txt:35
msgid "intcomma"
msgstr ""

# aaad55daa751492eb611ac582d083a2f
#: ../../ref/contrib/humanize.txt:37
msgid "Converts an integer to a string containing commas every three digits."
msgstr ""

# ec5ff596275846e589b78b937e0faad7
#: ../../ref/contrib/humanize.txt:41
msgid "``4500`` becomes ``4,500``."
msgstr ""

# c3ab8a3ebcc842f6920416f1b4a4ea76
#: ../../ref/contrib/humanize.txt:42
msgid "``45000`` becomes ``45,000``."
msgstr ""

# c521918b382f4235b3f4bfd15042ef63
#: ../../ref/contrib/humanize.txt:43
msgid "``450000`` becomes ``450,000``."
msgstr ""

# 8676eca5cd0849268e292e7bbe7481cf
#: ../../ref/contrib/humanize.txt:44
msgid "``4500000`` becomes ``4,500,000``."
msgstr ""

# d067cec2cf5a4016a4d609dcb47cb3bd
# 0d17c63b5b1140c1be93d63bc3c7e597
#: ../../ref/contrib/humanize.txt:46 ../../ref/contrib/humanize.txt:70
msgid ""
":ref:`Format localization <format-localization>` will be respected if "
"enabled, e.g. with the ``'de'`` language:"
msgstr ""

# b8960dc49d754daba21a32247c66b8cf
#: ../../ref/contrib/humanize.txt:49
msgid "``45000`` becomes ``'45.000'``."
msgstr ""

# 50caa380ff9944ee80bd2e2988fd8e63
#: ../../ref/contrib/humanize.txt:50
msgid "``450000`` becomes ``'450.000'``."
msgstr ""

# 792dbe63908b4de8975ab544cf575b8b
#: ../../ref/contrib/humanize.txt:57
msgid "intword"
msgstr ""

# 286120a012264bfb8557474299eaedf5
#: ../../ref/contrib/humanize.txt:59
msgid ""
"Converts a large integer to a friendly text representation. Works best for "
"numbers over 1 million."
msgstr ""

# 3ebbcd2f2cb34612a380412dc2db6671
#: ../../ref/contrib/humanize.txt:64
msgid "``1000000`` becomes ``1.0 million``."
msgstr ""

# bd59b03e1a334f3c9d73023b6616f5da
#: ../../ref/contrib/humanize.txt:65
msgid "``1200000`` becomes ``1.2 million``."
msgstr ""

# 6a5e98b62fcb449f8d3166cb9913cdfc
#: ../../ref/contrib/humanize.txt:66
msgid "``1200000000`` becomes ``1.2 billion``."
msgstr ""

# 33eb654683dd4c8f9a36e09b807e151f
#: ../../ref/contrib/humanize.txt:68
msgid "Values up to 10^100 (Googol) are supported."
msgstr ""

# dbe3ba60c0a94817bb32bcf345381166
#: ../../ref/contrib/humanize.txt:73
msgid "``1000000`` becomes ``'1,0 Million'``."
msgstr ""

# 8855c6ab65da456e832748cbfc505a5f
#: ../../ref/contrib/humanize.txt:74
msgid "``1200000`` becomes ``'1,2 Million'``."
msgstr ""

# 1232568cb9bb41b1b6eef918c7c2bbe7
#: ../../ref/contrib/humanize.txt:75
msgid "``1200000000`` becomes ``'1,2 Milliarden'``."
msgstr ""

# 8c35e9e78a094b549e86c194b2704d16
#: ../../ref/contrib/humanize.txt:82
msgid "naturalday"
msgstr ""

# 2737117c6f574b0fa106a7436190e50c
#: ../../ref/contrib/humanize.txt:84
msgid ""
"For dates that are the current day or within one day, return \"today\", "
"\"tomorrow\" or \"yesterday\", as appropriate. Otherwise, format the date "
"using the passed in format string."
msgstr ""

# 9d3f6ad94d6743f2b20bd84ca772ca25
#: ../../ref/contrib/humanize.txt:88
msgid ""
"**Argument:** Date formatting string as described in the :tfilter:`date` tag."
msgstr ""

# 66e7eed6f68c4819b8f06bb76bd0b779
#: ../../ref/contrib/humanize.txt:90
msgid "Examples (when 'today' is 17 Feb 2007):"
msgstr ""

# a9516f24b5b943ca9d2cb471282afb5a
#: ../../ref/contrib/humanize.txt:92
msgid "``16 Feb 2007`` becomes ``yesterday``."
msgstr ""

# 9fb2f6e5a2e147dfa5e599ddf9fd010e
#: ../../ref/contrib/humanize.txt:93
msgid "``17 Feb 2007`` becomes ``today``."
msgstr ""

# 6253eeb6053745a29bb692a0d54a0852
#: ../../ref/contrib/humanize.txt:94
msgid "``18 Feb 2007`` becomes ``tomorrow``."
msgstr ""

# 219316c6c5234eeabc2319b9461ab245
#: ../../ref/contrib/humanize.txt:95
msgid ""
"Any other day is formatted according to given argument or the :setting:"
"`DATE_FORMAT` setting if no argument is given."
msgstr ""

# 61c47218b37344ffba8dac1ceabb6e4c
#: ../../ref/contrib/humanize.txt:101
msgid "naturaltime"
msgstr ""

# fcc704b0622349ebbd305889798646bc
#: ../../ref/contrib/humanize.txt:105
msgid ""
"For datetime values, returns a string representing how many seconds, minutes "
"or hours ago it was -- falling back to the :tfilter:`timesince` format if "
"the value is more than a day old. In case the datetime value is in the "
"future the return value will automatically use an appropriate phrase."
msgstr ""

# 4233640ac4df4434bc908c26c19289a4
#: ../../ref/contrib/humanize.txt:110
msgid "Examples (when 'now' is 17 Feb 2007 16:30:00):"
msgstr ""

# 750b0b644f714e41bd7284343fe4ca8e
#: ../../ref/contrib/humanize.txt:112
msgid "``17 Feb 2007 16:30:00`` becomes ``now``."
msgstr ""

# 5e549f6e946147bda775182dd75e67b7
#: ../../ref/contrib/humanize.txt:113
msgid "``17 Feb 2007 16:29:31`` becomes ``29 seconds ago``."
msgstr ""

# e4d4a73735e44446aa7e8e0b993d988f
#: ../../ref/contrib/humanize.txt:114
msgid "``17 Feb 2007 16:29:00`` becomes ``a minute ago``."
msgstr ""

# e181ff4822314bd4857e2942976f40a4
#: ../../ref/contrib/humanize.txt:115
msgid "``17 Feb 2007 16:25:35`` becomes ``4 minutes ago``."
msgstr ""

# 6ccda756d6d14be3871bffc4bcf065d1
#: ../../ref/contrib/humanize.txt:116
msgid "``17 Feb 2007 15:30:29`` becomes ``an hour ago``."
msgstr ""

# 6ed579ceae0445988e2f569d6a8514e7
#: ../../ref/contrib/humanize.txt:117
msgid "``17 Feb 2007 13:31:29`` becomes ``2 hours ago``."
msgstr ""

# 276e68a3e4034c6d9dc85c2bb0c7d07c
#: ../../ref/contrib/humanize.txt:118
msgid "``16 Feb 2007 13:31:29`` becomes ``1 day, 3 hours ago``."
msgstr ""

# 888af9b0d1164b9e8db9af2aa20c10e6
#: ../../ref/contrib/humanize.txt:119
msgid "``17 Feb 2007 16:30:30`` becomes ``29 seconds from now``."
msgstr ""

# 73187d78b2f24008a261da2dee5ec16c
#: ../../ref/contrib/humanize.txt:120
msgid "``17 Feb 2007 16:31:00`` becomes ``a minute from now``."
msgstr ""

# cf17c71b497a41e3af9a82dae21863e5
#: ../../ref/contrib/humanize.txt:121
msgid "``17 Feb 2007 16:34:35`` becomes ``4 minutes from now``."
msgstr ""

# 5bff60336c6f40609555ae1588e2132b
#: ../../ref/contrib/humanize.txt:122
msgid "``17 Feb 2007 16:30:29`` becomes ``an hour from now``."
msgstr ""

# 2cf3c0c1f8b8454c8855707921c14db2
#: ../../ref/contrib/humanize.txt:123
msgid "``17 Feb 2007 18:31:29`` becomes ``2 hours from now``."
msgstr ""

# 58b7cf0809074e71a6b9603539d049d2
#: ../../ref/contrib/humanize.txt:124
msgid "``18 Feb 2007 16:31:29`` becomes ``1 day from now``."
msgstr ""

# a25f8ee8fc0e4e65ba752e6a7dba5733
#: ../../ref/contrib/humanize.txt:125
msgid "``26 Feb 2007 18:31:29`` becomes ``1 week, 2 days from now``."
msgstr ""

# 54480ebc19be45758eabee79ab112336
#: ../../ref/contrib/humanize.txt:130
msgid "ordinal"
msgstr ""

# b6567e20c62341579a4ffcb65ede094f
#: ../../ref/contrib/humanize.txt:132
msgid "Converts an integer to its ordinal as a string."
msgstr ""

# c9d0dd7f49a449f8b956ddf0bfbf5064
#: ../../ref/contrib/humanize.txt:136
msgid "``1`` becomes ``1st``."
msgstr ""

# f64641f3b0634838a754c2d6e63baa9b
#: ../../ref/contrib/humanize.txt:137
msgid "``2`` becomes ``2nd``."
msgstr ""

# 8fdd8c1acc994339bfca8ff9af87d717
#: ../../ref/contrib/humanize.txt:138
msgid "``3`` becomes ``3rd``."
msgstr ""

# 5d312b415a994f3fa92394505b784c79
#: ../../ref/contrib/index.txt:3
msgid "``contrib`` packages"
msgstr ""

# 82a1163ca951433aaf9f4bc81ca8ba6a
#: ../../ref/contrib/index.txt:5
msgid ""
"Django aims to follow Python's `\"batteries included\" philosophy`_. It "
"ships with a variety of extra, optional tools that solve common Web-"
"development problems."
msgstr ""

# cd9946bf724644648ee592b619f8b1ce
#: ../../ref/contrib/index.txt:9
msgid ""
"This code lives in ``django/contrib`` in the Django distribution. This "
"document gives a rundown of the packages in ``contrib``, along with any "
"dependencies those packages have."
msgstr ""

# c6bd788a1f664413ab955c84ebc0b354
#: ../../ref/contrib/index.txt:15
msgid ""
"For most of these add-ons -- specifically, the add-ons that include either "
"models or template tags -- you'll need to add the package name (e.g., "
"``'django.contrib.admin'``) to your :setting:`INSTALLED_APPS` setting and re-"
"run ``manage.py syncdb``."
msgstr ""

# d8ae0b59ed5c41e8acbc2bfe82ad58a3
#: ../../ref/contrib/index.txt:46
msgid "admin"
msgstr ""

# 371af94d68464556997cd0fbdbe3fc29
#: ../../ref/contrib/index.txt:48
msgid ""
"The automatic Django administrative interface. For more information, see :"
"doc:`Tutorial 2 </intro/tutorial02>` and the :doc:`admin documentation </ref/"
"contrib/admin/index>`."
msgstr ""

# f691e93797ba49fea2f6a4a8e16ebbc5
#: ../../ref/contrib/index.txt:52
msgid "Requires the auth_ and contenttypes_ contrib packages to be installed."
msgstr ""

# 65fbdeb06356496e8acc803cef8ad883
#: ../../ref/contrib/index.txt:55
msgid "auth"
msgstr ""

# 15dff8d95a474ed3a5013f05df56b0e3
#: ../../ref/contrib/index.txt:57
msgid "Django's authentication framework."
msgstr ""

# 92f6f77d9c3c423eafdbfbb59f36c5c3
#: ../../ref/contrib/index.txt:59
msgid "See :doc:`/topics/auth/index`."
msgstr ""

# 2a99724bba1148fc9c5741a76ec151c0
#: ../../ref/contrib/index.txt:62
msgid "comments"
msgstr ""

# 19ab66628fe84d1084c26a0397aea4bb
#: ../../ref/contrib/index.txt:64
msgid ""
"A simple yet flexible comments system. See :doc:`/ref/contrib/comments/"
"index`."
msgstr ""

# 046b3ccc05b2471f91c41921f7f71809
#: ../../ref/contrib/index.txt:67
msgid "contenttypes"
msgstr ""

# 6b7df5610bba4935ac707f293569bce1
#: ../../ref/contrib/index.txt:69
msgid ""
"A light framework for hooking into \"types\" of content, where each "
"installed Django model is a separate content type."
msgstr ""

# 2d13a5a494984251bf2c4553cb42ce30
#: ../../ref/contrib/index.txt:72
msgid "See the :doc:`contenttypes documentation </ref/contrib/contenttypes>`."
msgstr ""

# ee795b7cc12041b895d2f58f8f3b0c21
#: ../../ref/contrib/index.txt:75
msgid "csrf"
msgstr ""

# f22cd28b2a2b4e0abe06d99324b682ce
#: ../../ref/contrib/index.txt:77
msgid "A middleware for preventing Cross Site Request Forgeries"
msgstr ""

# 53509892880248b28dc6e49983cf29a9
#: ../../ref/contrib/index.txt:79
msgid "See the :doc:`csrf documentation </ref/contrib/csrf>`."
msgstr ""

# 72565269146440b0a0ad31f37c969401
#: ../../ref/contrib/index.txt:82
msgid "flatpages"
msgstr ""

# 5d5cf56861294fd39a3453cc7ca90795
#: ../../ref/contrib/index.txt:84
msgid "A framework for managing simple \"flat\" HTML content in a database."
msgstr ""

# f1bb50b489004955bd53b9ed27673280
#: ../../ref/contrib/index.txt:86
msgid "See the :doc:`flatpages documentation </ref/contrib/flatpages>`."
msgstr ""

# 71ee601fa6404275ae924296335e949e
#: ../../ref/contrib/index.txt:88
msgid "Requires the sites_ contrib package to be installed as well."
msgstr ""

# b29c7513eda84bf3aa0e0914cae6e6a0
#: ../../ref/contrib/index.txt:91
msgid "formtools"
msgstr ""

# 05b071a8b20c4b8ab0f1ad7848eeed08
#: ../../ref/contrib/index.txt:93
msgid "A set of high-level abstractions for Django forms (django.forms)."
msgstr ""

# 48f7089b729940d7a2ca0951f8830608
#: ../../ref/contrib/index.txt:96
msgid "django.contrib.formtools.preview"
msgstr ""

# 1e0159acfbd246cc87e9a5d1e2a094ec
#: ../../ref/contrib/index.txt:98
msgid "An abstraction of the following workflow:"
msgstr ""

# 29650b67219848ecb5134e86991da318
#: ../../ref/contrib/index.txt:102
msgid ""
"See the :doc:`form preview documentation </ref/contrib/formtools/form-"
"preview>`."
msgstr ""

# 9b1e67e707914d66b86d1f3b1e8f03bb
#: ../../ref/contrib/index.txt:105
msgid "django.contrib.formtools.wizard"
msgstr ""

# 2280834977924d2d8003825544fdf572
#: ../../ref/contrib/index.txt:107
msgid "Splits forms across multiple Web pages."
msgstr ""

# bd7c0bebc44b4c6bbc58ef19ceb81a0a
#: ../../ref/contrib/index.txt:109
msgid ""
"See the :doc:`form wizard documentation </ref/contrib/formtools/form-"
"wizard>`."
msgstr ""

# 767c30b5aea74ae6991a6ac967abacb3
#: ../../ref/contrib/index.txt:112
msgid "gis"
msgstr ""

# 2444b4c298ec4fccad4544d9ed5f1a83
#: ../../ref/contrib/index.txt:114
msgid ""
"A world-class geospatial framework built on top of Django, that enables "
"storage, manipulation and display of spatial data."
msgstr ""

# b7a3f5df766f4f998b916647b1ab43ba
#: ../../ref/contrib/index.txt:117
msgid "See the :doc:`/ref/contrib/gis/index` documentation for more."
msgstr ""

# 3dee9de9bd194202940995b1cc8eeb57
#: ../../ref/contrib/index.txt:120
msgid "humanize"
msgstr ""

# 31c5eac0a9474f60b8cc0f409ccc15a9
#: ../../ref/contrib/index.txt:124
msgid "See the :doc:`humanize documentation </ref/contrib/humanize>`."
msgstr ""

# 5473f67f7abf411abbc2e9cdb87f502d
#: ../../ref/contrib/index.txt:127
msgid "localflavor"
msgstr ""

# d86cde7c9f7f482db1d569b1d5cd2def
#: ../../ref/contrib/index.txt:129
msgid ""
"A collection of various Django snippets that are useful only for a "
"particular country or culture. For example, ``django.contrib.localflavor.us."
"forms`` contains a ``USZipCodeField`` that you can use to validate U.S. zip "
"codes."
msgstr ""

# 1350f49d88f243daae8632c2c383bffa
#: ../../ref/contrib/index.txt:133
msgid "See the :doc:`localflavor documentation </ref/contrib/localflavor>`."
msgstr ""

# 62648be1e849432786a8d937d3078a99
#: ../../ref/contrib/index.txt:136
msgid "markup"
msgstr ""

# 2bcd4d898edb4af4ada000dd94a531df
#: ../../ref/contrib/index.txt:138
msgid "A collection of template filters that implement common markup languages"
msgstr ""

# 9c26081b876943d4b2f7575ea0ffe22f
# 4e1e0956ee7d4d38bb2568e7c6053981
#: ../../ref/contrib/index.txt:140 ../../ref/templates/builtins.txt:2342
msgid "See the :doc:`markup documentation </ref/contrib/markup>`."
msgstr ""

# 4f1e5d7b282a4df9a8ac05e3ed628f6d
#: ../../ref/contrib/index.txt:143
msgid "messages"
msgstr ""

# 5865cd1079044309a47edbfc0114299e
#: ../../ref/contrib/index.txt:145
msgid ""
"A framework for storing and retrieving temporary cookie- or session-based "
"messages"
msgstr ""

# 06d3d9f74cec4de9a0a95e3a8bbc2576
#: ../../ref/contrib/index.txt:148
msgid "See the :doc:`messages documentation </ref/contrib/messages>`."
msgstr ""

# 5999c4519b704a3a80d61533ed3ed761
#: ../../ref/contrib/index.txt:151
msgid "redirects"
msgstr ""

# 3007f00ce71f41b991ab2f5e3d449313
#: ../../ref/contrib/index.txt:153
msgid "A framework for managing redirects."
msgstr ""

# 15d3abd53b8b4e18a234d3609abee39a
#: ../../ref/contrib/index.txt:155
msgid "See the :doc:`redirects documentation </ref/contrib/redirects>`."
msgstr ""

# 29bb8977a599404fa531015dc2e4f52e
#: ../../ref/contrib/index.txt:158
msgid "sessions"
msgstr ""

# 1c10c0361085445e8fc8a8843af63c30
#: ../../ref/contrib/index.txt:160
msgid "A framework for storing data in anonymous sessions."
msgstr ""

# ae2eda401f3b49e18dcba6cb67b4e002
#: ../../ref/contrib/index.txt:162
msgid "See the :doc:`sessions documentation </topics/http/sessions>`."
msgstr ""

# 8f71c46941b7402681e4c9963a18a1bf
#: ../../ref/contrib/index.txt:165
msgid "sites"
msgstr ""

# d8ef1ced10654dcda4cf92e3d0bc8d94
#: ../../ref/contrib/index.txt:167
msgid ""
"A light framework that lets you operate multiple Web sites off of the same "
"database and Django installation. It gives you hooks for associating objects "
"to one or more sites."
msgstr ""

# 1dc7387996334509abe237d07bcbef91
#: ../../ref/contrib/index.txt:171
msgid "See the :doc:`sites documentation </ref/contrib/sites>`."
msgstr ""

# e26aebf1f9cf418f973251cdcb8b5225
#: ../../ref/contrib/index.txt:174
msgid "sitemaps"
msgstr ""

# 371d0e9cb67b49e6b3c2b5de1eb967be
#: ../../ref/contrib/index.txt:176
msgid "A framework for generating Google sitemap XML files."
msgstr ""

# 445be9a2721d4f36b0442675bb685925
#: ../../ref/contrib/index.txt:178
msgid "See the :doc:`sitemaps documentation </ref/contrib/sitemaps>`."
msgstr ""

# e8ad188a3fc94e8ca21f28e127f27a82
#: ../../ref/contrib/index.txt:181
msgid "syndication"
msgstr ""

# 59d3a3f9c5874c2b9963d1e5e570c8f7
#: ../../ref/contrib/index.txt:183
msgid ""
"A framework for generating syndication feeds, in RSS and Atom, quite easily."
msgstr ""

# cb8f1cb20cb846708393068a237aaf81
#: ../../ref/contrib/index.txt:185
msgid "See the :doc:`syndication documentation </ref/contrib/syndication>`."
msgstr ""

# 44cf2dd8a9604a26920a1755f136f25d
#: ../../ref/contrib/index.txt:188
msgid "webdesign"
msgstr ""

# 885433ac72804f2ca955d6c55a321dd8
#: ../../ref/contrib/index.txt:190
msgid ""
"Helpers and utilities targeted primarily at Web *designers* rather than Web "
"*developers*."
msgstr ""

# acad822c72f84728ad82cf2ad9b2ed2f
#: ../../ref/contrib/index.txt:193
msgid ""
"See the :doc:`Web design helpers documentation </ref/contrib/webdesign>`."
msgstr ""

# dbd8523cd8004227a6a8dd0e9fcef442
#: ../../ref/contrib/index.txt:196
msgid "Other add-ons"
msgstr ""

# 8011cec057e14992b0ba099fd21c8df6
#: ../../ref/contrib/index.txt:198
msgid ""
"If you have an idea for functionality to include in ``contrib``, let us "
"know! Code it up, and post it to the `django-users mailing list`_."
msgstr ""

# 5de63c83ea92463b86cb40e5ac87a0c4
#: ../../ref/contrib/localflavor.txt:3
msgid "The \"local flavor\" add-ons"
msgstr ""

# 8d0d8d7de8784cebbc5b01a0a9653b92
#: ../../ref/contrib/localflavor.txt:9
msgid ""
"Historically, Django has shipped with ``django.contrib.localflavor`` -- "
"assorted pieces of code that are useful for particular countries or "
"cultures. Starting with Django 1.5, we've started the process of moving the "
"code to an external package (i.e., a package distributed separately from "
"Django), for easier maintenance and to trim the size of Django's codebase."
msgstr ""

# 031357067c6946289a34d9f80979d30f
#: ../../ref/contrib/localflavor.txt:15
msgid ""
"The new localflavor package is named ``django-localflavor``, with a main "
"module called ``localflavor`` and many subpackages using an `ISO 3166 "
"country code`_. For example: ``localflavor.us`` is the localflavor package "
"for the U.S.A."
msgstr ""

# 11a88e02376c40b5bb71400cfdd468a6
#: ../../ref/contrib/localflavor.txt:19
msgid ""
"Most of these ``localflavor`` add-ons are country-specific fields for the :"
"doc:`forms </topics/forms/index>` framework -- for example, a "
"``USStateField`` that knows how to validate U.S. state abbreviations and a "
"``FISocialSecurityNumber`` that knows how to validate Finnish social "
"security numbers."
msgstr ""

# 7fb663630b9a42f6bce6887754e2eec6
#: ../../ref/contrib/localflavor.txt:25
msgid ""
"To use one of these localized components, just import the relevant "
"subpackage. For example, here's how you can create a form with a field "
"representing a French telephone number::"
msgstr ""

# 062e19e2978048d6b3862ad9a5c7b4fd
#: ../../ref/contrib/localflavor.txt:35
msgid ""
"For documentation on a given country's localflavor helpers, see its README "
"file."
msgstr ""

# 5ec25eb95340401d9417a3a4877bc18b
#: ../../ref/contrib/localflavor.txt:43
msgid "How to migrate"
msgstr ""

# a246b9aefdc841009612c8773f1b0d21
#: ../../ref/contrib/localflavor.txt:46
msgid ""
"If you've used the old ``django.contrib.localflavor`` package or one of the "
"temporary ``django-localflavor-*`` releases, follow these two easy steps to "
"update your code:"
msgstr ""

# 053241f008824c74a91ccce3acd7d55b
#: ../../ref/contrib/localflavor.txt:50
msgid "Install the third-party ``django-localflavor`` package from PyPI."
msgstr ""

# 7bfb0e4d07d940f8b967770b5447e3f2
#: ../../ref/contrib/localflavor.txt:52
msgid "Change your app's import statements to reference the new package."
msgstr ""

# f718ac8bb80a4d3abd8e4599717d0050
#: ../../ref/contrib/localflavor.txt:53
msgid "For example, change this::"
msgstr ""

# f7563a7e2c3d4d0e93f7796022b0d13f
#: ../../ref/contrib/localflavor.txt:57
msgid "...to this::"
msgstr ""

# ab21705b8cdb41bdabd3376a054c5dad
#: ../../ref/contrib/localflavor.txt:62
msgid ""
"The code in the new package is the same (it was copied directly from "
"Django), so you don't have to worry about backwards compatibility in terms "
"of functionality. Only the imports have changed."
msgstr ""

# d364a449325d4084a87d7ec0c6918a3f
#: ../../ref/contrib/localflavor.txt:68
msgid "Deprecation policy"
msgstr ""

# 467db53506ab44af87917b70298a9620
#: ../../ref/contrib/localflavor.txt:70
msgid ""
"In Django 1.5, importing from ``django.contrib.localflavor`` will result in "
"a ``DeprecationWarning``. This means your code will still work, but you "
"should change it as soon as possible."
msgstr ""

# 047c474bad604269852b31de696ab7f3
#: ../../ref/contrib/localflavor.txt:74
msgid ""
"In Django 1.6, importing from ``django.contrib.localflavor`` will no longer "
"work."
msgstr ""

# 1630d97f7b1548849cc2259c8174bed9
#: ../../ref/contrib/localflavor.txt:80
msgid "Supported countries"
msgstr ""

# 967caab83a704e9184e120f937861aa5
#: ../../ref/contrib/localflavor.txt:83
msgid "See the official documentation for more information:"
msgstr ""

# 73b13a059b6d4de3805638d070682e85
#: ../../ref/contrib/localflavor.txt:85
msgid "https://django-localflavor.readthedocs.org/"
msgstr ""

# e4fb19eca70e4e2aa59fb88e2d4cda6a
#: ../../ref/contrib/localflavor.txt:88
msgid "django.contrib.localflavor.generic"
msgstr ""

# 98a2b163bbff480c86f6b799d12610ef
#: ../../ref/contrib/localflavor.txt:90
msgid ""
"The ``django.contrib.localflavor.generic`` package, which hasn't been "
"removed from Django 1.5 yet, contains useful code that is not specific to "
"one particular country or culture. Currently, it defines date, datetime and "
"split datetime input fields based on those from :doc:`forms </topics/forms/"
"index>`, but with non-US default formats. Here's an example of how to use "
"them::"
msgstr ""

# a579a7c8dc204327b55dde4f5462aad1
#: ../../ref/contrib/localflavor.txt:102
msgid ""
"Of course the same package can also be found in the ``django-localflavor`` "
"packages and it's recommended to use that instead."
msgstr ""

# e317276d51c24c898cc9069b9fd3e1e0
#: ../../ref/contrib/localflavor.txt:106
msgid "Internationalization of localflavors"
msgstr ""

# 7283491b4d7c49f995e17b74f9da5227
#: ../../ref/contrib/localflavor.txt:108
msgid ""
"To activate translations for the ``localflavor`` application, you must "
"include the application's name in the :setting:`INSTALLED_APPS` setting, so "
"the internationalization system can find the catalog, as explained in :ref:"
"`how-django-discovers-translations`."
msgstr ""

# 8ae07ece9a474fc2a1f3b81c2e83697c
#: ../../ref/contrib/localflavor.txt:113
msgid ""
"If you're still using the legacy ``localflavor`` application, you must "
"include :mod:`django.contrib.localflavor` in :setting:`INSTALLED_APPS` (that "
"will raise a ``DeprecationWarning``)."
msgstr ""

# 3c996eb8b86b489e9a1eac2ad8a67f09
# ad77dd1464b041909ce86201322b0ddf
#: ../../ref/contrib/markup.txt:3 ../../ref/templates/builtins.txt:2334
msgid "django.contrib.markup"
msgstr ""

# 1da3bd02f7614b83b17ddaa4244e2f12
#: ../../ref/contrib/markup.txt:8
msgid "This module has been deprecated."
msgstr ""

# e7f61cc4fbb64a94bbb8d96c944b3c6a
#: ../../ref/contrib/markup.txt:11
msgid ""
"Django provides template filters that implement the following markup "
"languages:"
msgstr ""

# 241265da5bb140e3a75be0a4699502d4
#: ../../ref/contrib/markup.txt:14
msgid "``textile`` -- implements `Textile`_ -- requires `PyTextile`_"
msgstr ""

# 7a96dc8bafa54979bc29affdfc44b108
#: ../../ref/contrib/markup.txt:15
msgid ""
"``markdown`` -- implements `Markdown`_ -- requires `Python-markdown`_ (>=2.1)"
msgstr ""

# d5e66231b893418d92f0761aa635d382
#: ../../ref/contrib/markup.txt:16
msgid ""
"``restructuredtext`` -- implements `reST (reStructured Text)`_ -- requires "
"`doc-utils`_"
msgstr ""

# 5d2f893d5c8d4a52bc26fe2a432cae65
#: ../../ref/contrib/markup.txt:19
msgid ""
"In each case, the filter expects formatted markup as a string and returns a "
"string representing the marked-up text. For example, the ``textile`` filter "
"converts text that is marked-up in Textile format to HTML."
msgstr ""

# 222e97baa3f640389cb55e61754a0587
#: ../../ref/contrib/markup.txt:24
msgid ""
"To activate these filters, add ``'django.contrib.markup'`` to your :setting:"
"`INSTALLED_APPS` setting. Once you've done that, use ``{% load markup %}`` "
"in a template, and you'll have access to these filters. For more "
"documentation, read the source code in :file:`django/contrib/markup/"
"templatetags/markup.py`."
msgstr ""

# 26e9e624991548b494913020b2d81fe9
#: ../../ref/contrib/markup.txt:32
msgid ""
"The output of markup filters is marked \"safe\" and will not be escaped when "
"rendered in a template. Always be careful to sanitize your inputs and make "
"sure you are not leaving yourself vulnerable to cross-site scripting or "
"other types of attacks."
msgstr ""

# af38885e49fe49d382f0e1e0a35daeb6
#: ../../ref/contrib/markup.txt:45
msgid "reStructured Text"
msgstr ""

# e0499973e9cc4ee3ae047a58f2b2798a
#: ../../ref/contrib/markup.txt:47
msgid ""
"When using the ``restructuredtext`` markup filter you can define a :setting:"
"`RESTRUCTUREDTEXT_FILTER_SETTINGS` in your django settings to override the "
"default writer settings. See the `restructuredtext writer settings`_ for "
"details on what these settings are."
msgstr ""

# 8568af922b4c48a49bfa2370e841977d
#: ../../ref/contrib/markup.txt:54
msgid ""
"reStructured Text has features that allow raw HTML to be included, and that "
"allow arbitrary files to be included. These can lead to XSS vulnerabilities "
"and leaking of private information. It is your responsibility to check the "
"features of this library and configure appropriately to avoid this. See the "
"`Deploying Docutils Securely <http://docutils.sourceforge.net/docs/howto/"
"security.html>`_ documentation."
msgstr ""

# bf213dab8e4a412dbb81f75aaa7b1236
# e949b72000d9427ca9f10b43666d45f6
#: ../../ref/contrib/markup.txt:64 ../../ref/templates/builtins.txt:2339
msgid "Markdown"
msgstr ""

# d05afa9b5469428f90156ef604f662b5
#: ../../ref/contrib/markup.txt:66
msgid ""
"The Python Markdown library supports options named \"safe_mode\" and "
"\"enable_attributes\". Both relate to the security of the output. To enable "
"both options in tandem, the markdown filter supports the \"safe\" argument::"
msgstr ""

# 329de1e9dae047d78a6e84ebd74ee78d
#: ../../ref/contrib/markup.txt:74
msgid ""
"Versions of the Python-Markdown library prior to 2.1 do not support the "
"optional disabling of attributes. This is a security flaw. Therefore, "
"``django.contrib.markup`` has dropped support for versions of Python-"
"Markdown < 2.1 in Django 1.5."
msgstr ""

# 6dc7072e3d334336b7dd9b5220b48c2c
#: ../../ref/contrib/messages.txt:3
msgid "The messages framework"
msgstr ""

# 2e0536f2211741cda83c52c0ffb70235
#: ../../ref/contrib/messages.txt:8
msgid ""
"Quite commonly in web applications, you need to display a one-time "
"notification message (also known as \"flash message\") to the user after "
"processing a form or some other types of user input."
msgstr ""

# 0cc28918091946689e2087f20ab79b9b
#: ../../ref/contrib/messages.txt:12
msgid ""
"For this, Django provides full support for cookie- and session-based "
"messaging, for both anonymous and authenticated users. The messages "
"framework allows you to temporarily store messages in one request and "
"retrieve them for display in a subsequent request (usually the next one). "
"Every message is tagged with a specific ``level`` that determines its "
"priority (e.g., ``info``, ``warning``, or ``error``)."
msgstr ""

# 342bda0d85d94e70a94c8209332d9b0a
#: ../../ref/contrib/messages.txt:20
msgid "Enabling messages"
msgstr ""

# ba2e49556fba4e8887f65055cf9d4823
#: ../../ref/contrib/messages.txt:22
msgid ""
"Messages are implemented through a :doc:`middleware </ref/middleware>` class "
"and corresponding :doc:`context processor </ref/templates/api>`."
msgstr ""

# 37eb4b5927694713b52a889f5ad1c47b
#: ../../ref/contrib/messages.txt:25
msgid ""
"The default ``settings.py`` created by ``django-admin.py startproject`` "
"already contains all the settings required to enable message functionality:"
msgstr ""

# 65d73c49f6d54a7587e43a85b7ebf9d6
#: ../../ref/contrib/messages.txt:28
msgid "``'django.contrib.messages'`` is in :setting:`INSTALLED_APPS`."
msgstr ""

# ea1b350ecc9a45feaac63ad275238aa6
#: ../../ref/contrib/messages.txt:30
msgid ""
":setting:`MIDDLEWARE_CLASSES` contains ``'django.contrib.sessions.middleware."
"SessionMiddleware'`` and ``'django.contrib.messages.middleware."
"MessageMiddleware'``."
msgstr ""

# 3d0d140a859140c6819d845a2e80d49a
#: ../../ref/contrib/messages.txt:34
msgid ""
"The default :ref:`storage backend <message-storage-backends>` relies on :doc:"
"`sessions </topics/http/sessions>`. That's why ``SessionMiddleware`` must be "
"enabled and appear before ``MessageMiddleware`` in :setting:"
"`MIDDLEWARE_CLASSES`."
msgstr ""

# 9479592a5c4142ab98d0ef513390b056
#: ../../ref/contrib/messages.txt:39
msgid ""
":setting:`TEMPLATE_CONTEXT_PROCESSORS`   contains ``'django.contrib.messages."
"context_processors.messages'``."
msgstr ""

# 527fd8d87d8f44cbb1880daefaf8223d
#: ../../ref/contrib/messages.txt:42
msgid ""
"If you don't want to use messages, you can remove ``'django.contrib."
"messages'`` from your :setting:`INSTALLED_APPS`, the ``MessageMiddleware`` "
"line from :setting:`MIDDLEWARE_CLASSES`, and the ``messages`` context "
"processor from :setting:`TEMPLATE_CONTEXT_PROCESSORS`."
msgstr ""

# 9eb0916e7e4d489598de0b761190eadb
#: ../../ref/contrib/messages.txt:48
msgid "Configuring the message engine"
msgstr ""

# e290c79005b04234875b5960d2837ba5
#: ../../ref/contrib/messages.txt:53
msgid "Storage backends"
msgstr ""

# e3b132f44c884be0b6e09b0b747116a4
#: ../../ref/contrib/messages.txt:55
msgid ""
"The messages framework can use different backends to store temporary "
"messages."
msgstr ""

# 985cad022636446fb0735b7f40bbe409
#: ../../ref/contrib/messages.txt:57
msgid ""
"Django provides three built-in storage classes in :mod:`django.contrib."
"messages`:"
msgstr ""

# 927d760eef0f452d9ba3e8280a871608
#: ../../ref/contrib/messages.txt:61
msgid ""
"This class stores all messages inside of the request's session. Therefore it "
"requires Django's ``contrib.sessions`` application."
msgstr ""

# fa262fdd7cc5468c956216a424e91a41
#: ../../ref/contrib/messages.txt:66
msgid ""
"This class stores the message data in a cookie (signed with a secret hash to "
"prevent manipulation) to persist notifications across requests. Old messages "
"are dropped if the cookie data size would exceed 2048 bytes."
msgstr ""

# b5a040f4c5ff4400b2f64dbdd456ecdc
#: ../../ref/contrib/messages.txt:72
msgid ""
"This class first uses ``CookieStorage``, and falls back to using "
"``SessionStorage`` for the messages that could not fit in a single cookie. "
"It also requires Django's ``contrib.sessions`` application."
msgstr ""

# 772c4ae74c4c4d9697f4b33cd4d2b942
#: ../../ref/contrib/messages.txt:76
msgid ""
"This behavior avoids writing to the session whenever possible. It should "
"provide the best performance in the general case."
msgstr ""

# 44fc5a6067af47c1ae822564f401a187
#: ../../ref/contrib/messages.txt:79
msgid ""
":class:`~django.contrib.messages.storage.fallback.FallbackStorage` is the "
"default storage class. If it isn't suitable to your needs, you can select "
"another storage class by setting `MESSAGE_STORAGE`_ to its full import path, "
"for example::"
msgstr ""

# cff30e9807d54375a818ad2d6e4d23ed
#: ../../ref/contrib/messages.txt:86
msgid ""
"To write your own storage class, subclass the ``BaseStorage`` class in "
"``django.contrib.messages.storage.base`` and implement the ``_get`` and "
"``_store`` methods."
msgstr ""

# b18f253baf9342d38f6a4cd3382bfb9f
#: ../../ref/contrib/messages.txt:91
msgid "Message levels"
msgstr ""

# 194e5ad6c8534e6fa84a66f44e5ba555
#: ../../ref/contrib/messages.txt:93
msgid ""
"The messages framework is based on a configurable level architecture similar "
"to that of the Python logging module. Message levels allow you to group "
"messages by type so they can be filtered or displayed differently in views "
"and templates."
msgstr ""

# 4927f8525e704204a4b54517a1a683c4
#: ../../ref/contrib/messages.txt:98
msgid ""
"The built-in levels, which can be imported from ``django.contrib.messages`` "
"directly, are:"
msgstr ""

# df9df9d54de044d8980ef895e5f93347
#: ../../ref/contrib/messages.txt:102
msgid "Constant"
msgstr ""

# 41a12f6438ff42568f7de84c82bf089a
#: ../../ref/contrib/messages.txt:102
msgid "Purpose"
msgstr ""

# 457f70c7f441489f8d0fd7831842f617
# f74a96639da0483984106f2faf79bcc4
# 35af38f99fa24be3a7faef778a945f1a
#: ../../ref/contrib/messages.txt:104 ../../ref/contrib/messages.txt:131
#: ../../ref/contrib/messages.txt:211
msgid "``DEBUG``"
msgstr ""

# bab554e6c27b46c0a4423acf0e8bfe4b
#: ../../ref/contrib/messages.txt:104
msgid ""
"Development-related messages that will be ignored (or removed) in a "
"production deployment"
msgstr ""

# b331548074334b17a14943e2436d5bf2
# ae96c343e4f447e9b9b1dbe665a7b910
# 4384d991a8cb408ea6dc2bf20bdfa6cc
#: ../../ref/contrib/messages.txt:105 ../../ref/contrib/messages.txt:132
#: ../../ref/contrib/messages.txt:212
msgid "``INFO``"
msgstr ""

# ecbf17a0617845d7bd1c9ed2bb67a807
#: ../../ref/contrib/messages.txt:105
msgid "Informational messages for the user"
msgstr ""

# 830b5edf38f34d7ba69ecfc939f24792
# 4895bbb76dc7465482d02e39bba27356
# 7a3766a8fe5840f8a905c842520e20d4
#: ../../ref/contrib/messages.txt:106 ../../ref/contrib/messages.txt:133
#: ../../ref/contrib/messages.txt:213
msgid "``SUCCESS``"
msgstr ""

# c31e7b92d6024407bd1e51bd73e8121d
#: ../../ref/contrib/messages.txt:106
msgid ""
"An action was successful, e.g. \"Your profile was updated successfully\""
msgstr ""

# 86b22c38265f4dcab1d1c0ceadb0b0f1
# ab11045172e2491e80c617a7a2089989
# 3283e9043c8c4749b8ae1ebb937a5039
#: ../../ref/contrib/messages.txt:107 ../../ref/contrib/messages.txt:134
#: ../../ref/contrib/messages.txt:214
msgid "``WARNING``"
msgstr ""

# c231b63763d64189b975dc6f7797c1c9
#: ../../ref/contrib/messages.txt:107
msgid "A failure did not occur but may be imminent"
msgstr ""

# c1cfb17e403540d5b3be061e3561f45e
# b368de44930741ae95c917de2ee9f747
# 64be807131224a4aa043a130684a3fc4
#: ../../ref/contrib/messages.txt:108 ../../ref/contrib/messages.txt:135
#: ../../ref/contrib/messages.txt:215
msgid "``ERROR``"
msgstr ""

# acbf427c73204cd7a4ff5e66df7af5f9
#: ../../ref/contrib/messages.txt:108
msgid "An action was **not** successful or some other failure occurred"
msgstr ""

# f2b7438511cb46929420288d7ebfb6db
#: ../../ref/contrib/messages.txt:111
msgid ""
"The `MESSAGE_LEVEL`_ setting can be used to change the minimum recorded "
"level (or it can be `changed per request`_). Attempts to add messages of a "
"level less than this will be ignored."
msgstr ""

# 9b7f89aeb00c495aa139e4df07c2730b
#: ../../ref/contrib/messages.txt:118
msgid "Message tags"
msgstr ""

# 0aec1a0eef2b44dd99e376d5f42df297
#: ../../ref/contrib/messages.txt:120
msgid ""
"Message tags are a string representation of the message level plus any extra "
"tags that were added directly in the view (see `Adding extra message tags`_ "
"below for more details). Tags are stored in a string and are separated by "
"spaces. Typically, message tags are used as CSS classes to customize message "
"style based on message type. By default, each level has a single tag that's "
"a lowercase version of its own constant:"
msgstr ""

# da0a7c6e666e48db9713f024ec343259
# 405ec9516bc44b71a4482c0592d36232
#: ../../ref/contrib/messages.txt:129 ../../ref/contrib/messages.txt:209
msgid "Level Constant"
msgstr ""

# d97982ad27694c52973aa161ba8b1304
#: ../../ref/contrib/messages.txt:129
msgid "Tag"
msgstr ""

# f0149337ce124360a06ba60f104c58d0
#: ../../ref/contrib/messages.txt:131
msgid "``debug``"
msgstr ""

# f3a03ba6bd9b406ea18ef298d1336b95
#: ../../ref/contrib/messages.txt:132
msgid "``info``"
msgstr ""

# 26e95456f6bb41c98f577d9bf7291288
#: ../../ref/contrib/messages.txt:133
msgid "``success``"
msgstr ""

# 2cf27d112e394a3ba1f1597a12c19710
#: ../../ref/contrib/messages.txt:134
msgid "``warning``"
msgstr ""

# 1d0396419277407fbe11531c5fd95a6d
#: ../../ref/contrib/messages.txt:135
msgid "``error``"
msgstr ""

# 70fca321e3744e22964ac0fe22fbe029
#: ../../ref/contrib/messages.txt:138
msgid ""
"To change the default tags for a message level (either built-in or custom), "
"set the `MESSAGE_TAGS`_ setting to a dictionary containing the levels you "
"wish to change. As this extends the default tags, you only need to provide "
"tags for the levels you wish to override::"
msgstr ""

# aa971abe61e74aa693827a36950dcfcc
#: ../../ref/contrib/messages.txt:150
msgid "Using messages in views and templates"
msgstr ""

# 0239d583173a4b93884f87e782a52a20
#: ../../ref/contrib/messages.txt:155
msgid "Adding a message"
msgstr ""

# d81d93f4dc264c7b97da3138289950ac
#: ../../ref/contrib/messages.txt:157
msgid "To add a message, call::"
msgstr ""

# 5afdfe8e413940faa2fe000ae4d2e0f5
#: ../../ref/contrib/messages.txt:162
msgid ""
"Some shortcut methods provide a standard way to add messages with commonly "
"used tags (which are usually represented as HTML classes for the message)::"
msgstr ""

# 6e0325b5b54448768efffd1ff56beb81
#: ../../ref/contrib/messages.txt:172
msgid "Displaying messages"
msgstr ""

# e692ddcadf3b4495adf6baa24b05ea13
#: ../../ref/contrib/messages.txt:174
msgid "In your template, use something like::"
msgstr ""

# 737e8c7657bf4c659f33efe0580a1308
#: ../../ref/contrib/messages.txt:184
msgid ""
"If you're using the context processor, your template should be rendered with "
"a ``RequestContext``. Otherwise, ensure ``messages`` is available to the "
"template context."
msgstr ""

# 9081ebccd4ff4c0c8ed865fb7b254473
#: ../../ref/contrib/messages.txt:188
msgid ""
"Even if you know there is only just one message, you should still iterate "
"over the ``messages`` sequence, because otherwise the message storage will "
"not be cleared for the next request."
msgstr ""

# 53a084bd5d17442aa70d50005aa86681
#: ../../ref/contrib/messages.txt:193
msgid "Creating custom message levels"
msgstr ""

# 67e977bec57c40fba69a9721f751fc5b
#: ../../ref/contrib/messages.txt:195
msgid ""
"Messages levels are nothing more than integers, so you can define your own "
"level constants and use them to create more customized user feedback, e.g.::"
msgstr ""

# 877c8a75bc524b718faa74128b6bf900
#: ../../ref/contrib/messages.txt:203
msgid ""
"When creating custom message levels you should be careful to avoid "
"overloading existing levels. The values for the built-in levels are:"
msgstr ""

# d48e3444eec2420b83f0499bc96a1029
# 9d15c2b6f47f42cdbd9a4cd50df073b8
# bc96896c64c249f890ae7f9ca4cc4014
# f5757ba7b18348d0af6da3f4eead82fc
# a3f1b0368d134074b6d31ff1e9248b18
#: ../../ref/contrib/messages.txt:209 ../../ref/signals.txt:69
#: ../../ref/signals.txt:295 ../../ref/signals.txt:322
#: ../../ref/templates/builtins.txt:2273
msgid "Value"
msgstr ""

# 342dfd78c7cf40aea56b8352e2c1743b
#: ../../ref/contrib/messages.txt:211
msgid "10"
msgstr ""

# 614264ffe4a84402b20ff352a7ab4f22
#: ../../ref/contrib/messages.txt:212
msgid "20"
msgstr ""

# 1681f8b5fac54bc79dacc54686dd4780
#: ../../ref/contrib/messages.txt:213
msgid "25"
msgstr ""

# 5e5cc7fb0b4f491cadc0bfa9fb5f8c43
#: ../../ref/contrib/messages.txt:214
msgid "30"
msgstr ""

# 72970b60724c4303b44a1528d9597180
#: ../../ref/contrib/messages.txt:215
msgid "40"
msgstr ""

# 5992880b90b64ad3bcdcac2eb3c82951
#: ../../ref/contrib/messages.txt:218
msgid ""
"If you need to identify the custom levels in your HTML or CSS, you need to "
"provide a mapping via the `MESSAGE_TAGS`_ setting."
msgstr ""

# 5364dd25591f4a6c8ad9c52855aa4b9f
#: ../../ref/contrib/messages.txt:222
msgid ""
"If you are creating a reusable application, it is recommended to use only "
"the built-in `message levels`_ and not rely on any custom levels."
msgstr ""

# 0afa9f7eb3c247f2bceda7f6710d727f
#: ../../ref/contrib/messages.txt:226
msgid "Changing the minimum recorded level per-request"
msgstr ""

# 4dbffad6c8d44b9d90aedda45436eb76
#: ../../ref/contrib/messages.txt:228
msgid ""
"The minimum recorded level can be set per request via the ``set_level`` "
"method::"
msgstr ""

# aecac0ed7d964e87bcbb81eb6b635155
#: ../../ref/contrib/messages.txt:245
msgid ""
"Similarly, the current effective level can be retrieved with ``get_level``::"
msgstr ""

# 25928f48d0be44e5be37fffdb87ee2d2
#: ../../ref/contrib/messages.txt:250
msgid ""
"For more information on how the minimum recorded level functions, see "
"`Message levels`_ above."
msgstr ""

# 34f3d25d0c46438e9c9bbf8e01388823
#: ../../ref/contrib/messages.txt:254
msgid "Adding extra message tags"
msgstr ""

# b9d87deb18764812af54c0c151db8012
#: ../../ref/contrib/messages.txt:256
msgid ""
"For more direct control over message tags, you can optionally provide a "
"string containing extra tags to any of the add methods::"
msgstr ""

# 3657b93c23d143f0b0c92a669d48627b
#: ../../ref/contrib/messages.txt:263
msgid ""
"Extra tags are added before the default tag for that level and are space "
"separated."
msgstr ""

# ce9b189b00e64a079e48730d95e95645
#: ../../ref/contrib/messages.txt:267
msgid "Failing silently when the message framework is disabled"
msgstr ""

# 6b029a7b007b4e29851a58f5d39ecbb0
#: ../../ref/contrib/messages.txt:269
msgid ""
"If you're writing a reusable app (or other piece of code) and want to "
"include messaging functionality, but don't want to require your users to "
"enable it if they don't want to, you may pass an additional keyword argument "
"``fail_silently=True`` to any of the ``add_message`` family of methods. For "
"example::"
msgstr ""

# 8c40d658edb247c8b6cb1e5b72bc0624
#: ../../ref/contrib/messages.txt:280
msgid ""
"Setting ``fail_silently=True`` only hides the ``MessageFailure`` that would "
"otherwise occur when the messages framework disabled and one attempts to use "
"one of the ``add_message`` family of methods. It does not hide failures that "
"may occur for other reasons."
msgstr ""

# 914826457c6d466a84d7580616e4035d
#: ../../ref/contrib/messages.txt:286
msgid "Expiration of messages"
msgstr ""

# d350409326ae4caeaa1bcb9e170b55bc
#: ../../ref/contrib/messages.txt:288
msgid ""
"The messages are marked to be cleared when the storage instance is iterated "
"(and cleared when the response is processed)."
msgstr ""

# 48d810de79ae444cb7f4f455793bd0f9
#: ../../ref/contrib/messages.txt:291
msgid ""
"To avoid the messages being cleared, you can set the messages storage to "
"``False`` after iterating::"
msgstr ""

# 9d36084c2ed34d1c899476efb6924d72
#: ../../ref/contrib/messages.txt:300
msgid "Behavior of parallel requests"
msgstr ""

# 5c8006df588c4f87922669bb782a2418
#: ../../ref/contrib/messages.txt:302
msgid ""
"Due to the way cookies (and hence sessions) work, **the behavior of any "
"backends that make use of cookies or sessions is undefined when the same "
"client makes multiple requests that set or get messages in parallel**. For "
"example, if a client initiates a request that creates a message in one "
"window (or tab) and then another that fetches any uniterated messages in "
"another window, before the first window redirects, the message may appear in "
"the second window instead of the first window where it may be expected."
msgstr ""

# 6adf7afc6a9f414cb5a64b6f475b16f5
#: ../../ref/contrib/messages.txt:310
msgid ""
"In short, when multiple simultaneous requests from the same client are "
"involved, messages are not guaranteed to be delivered to the same window "
"that created them nor, in some cases, at all. Note that this is typically "
"not a problem in most applications and will become a non-issue in HTML5, "
"where each window/tab will have its own browsing context."
msgstr ""

# 809d03b6a39646418c6a6031598a1e3f
#: ../../ref/contrib/messages.txt:319
msgid ""
"A few :doc:`Django settings </ref/settings>` give you control over message "
"behavior:"
msgstr ""

# a153b1d9e16a48c6b55f7e70f5abed0a
# 078a31f782604732b0ae087308cb4833
#: ../../ref/contrib/messages.txt:323 ../../ref/settings.txt:1421
msgid "MESSAGE_LEVEL"
msgstr ""

# 15cba15945664a0d81ab2f2e52a60ade
# 97bdda9feab0425e860bfb3912f59fb6
#: ../../ref/contrib/messages.txt:325 ../../ref/settings.txt:1423
msgid "Default: ``messages.INFO``"
msgstr ""

# 573a38ae674e4276a9842323bae25b58
#: ../../ref/contrib/messages.txt:327
msgid ""
"This sets the minimum message that will be saved in the message storage. See "
"`Message levels`_ above for more details."
msgstr ""

# c05c99879e7b48d9a2827bb5881fd86c
# a7f4b248a4c241fdbdb054373c778d5c
#: ../../ref/contrib/messages.txt:333 ../../ref/contrib/messages.txt:375
msgid "Important"
msgstr ""

# 5e614e2d5cce490fb521967f1083cf29
#: ../../ref/contrib/messages.txt:335
msgid ""
"If you override ``MESSAGE_LEVEL`` in your settings file and rely on any of "
"the built-in constants, you must import the constants module directly to "
"avoid the potential for circular imports, e.g.::"
msgstr ""

# a62012e2b2ad47168ed527f72d2326c3
# 70fbc58ae6d5429bab83910326991941
#: ../../ref/contrib/messages.txt:339 ../../ref/contrib/messages.txt:381
msgid ""
"If desired, you may specify the numeric values for the constants directly "
"according to the values in the above :ref:`constants table <message-level-"
"constants>`."
msgstr ""

# c29b0c14d5c14957885e887222ef6393
# 1e4542bbaea6475e81c1be7dd7cbd201
#: ../../ref/contrib/messages.txt:344 ../../ref/settings.txt:1430
msgid "MESSAGE_STORAGE"
msgstr ""

# 8ed6cce768cd4f04bf3a4aab7c348a95
# 96b01e0936d34060b4fec8fb346c5f08
#: ../../ref/contrib/messages.txt:346 ../../ref/settings.txt:1432
msgid "Default: ``'django.contrib.messages.storage.fallback.FallbackStorage'``"
msgstr ""

# 727dc604865b44a4a683b9220b86c948
#: ../../ref/contrib/messages.txt:348
msgid "Controls where Django stores message data. Valid values are:"
msgstr ""

# 9e52a93ce8e947358afbd3eff0089a74
#: ../../ref/contrib/messages.txt:350
msgid "``'django.contrib.messages.storage.fallback.FallbackStorage'``"
msgstr ""

# 2198237f51d6443cb79055119bd286c4
#: ../../ref/contrib/messages.txt:351
msgid "``'django.contrib.messages.storage.session.SessionStorage'``"
msgstr ""

# 3ebcd66deb34437b8f1e1298b34b5297
#: ../../ref/contrib/messages.txt:352
msgid "``'django.contrib.messages.storage.cookie.CookieStorage'``"
msgstr ""

# fb7a8b05657640cd99517f6d31b110b5
#: ../../ref/contrib/messages.txt:354
msgid "See `Storage backends`_ for more details."
msgstr ""

# 13dcef0607b043019521b3bc8c2dc6a1
# 761e30957cf04e9d8f5911c1844b4ef7
#: ../../ref/contrib/messages.txt:357 ../../ref/settings.txt:1438
msgid "MESSAGE_TAGS"
msgstr ""

# 0cd36044694b4c4cadba830d714b7c49
#: ../../ref/contrib/messages.txt:367
msgid ""
"This sets the mapping of message level to message tag, which is typically "
"rendered as a CSS class in HTML. If you specify a value, it will extend the "
"default. This means you only have to specify those values which you need to "
"override. See `Displaying messages`_ above for more details."
msgstr ""

# a122827ed2454bf0be7fae8912c9c4be
#: ../../ref/contrib/messages.txt:374
msgid ""
"If you override ``MESSAGE_TAGS`` in your settings file and rely on any of "
"the built-in constants, you must import the ``constants`` module directly to "
"avoid the potential for circular imports, e.g.::"
msgstr ""

# fc09b351ba194a8da11cab5103f20647
# d731076b3d91471f85a23abe701f86a5
#: ../../ref/contrib/messages.txt:386 ../../ref/settings.txt:1718
msgid "SESSION_COOKIE_DOMAIN"
msgstr ""

# 63e95c48ba7e419f8fcdf7519264fdc8
#: ../../ref/contrib/messages.txt:390
msgid ""
"The storage backends that use cookies -- ``CookieStorage`` and "
"``FallbackStorage`` -- use the value of :setting:`SESSION_COOKIE_DOMAIN` in "
"setting their cookies. See the :doc:`settings documentation </ref/settings>` "
"for more information on how this works and why you might need to set it."
msgstr ""

# 0289461ad0b5493188d35d65fd497af1
#: ../../ref/contrib/redirects.txt:3
msgid "The redirects app"
msgstr ""

# 8d9cab1ef52a47ffa0a1604c0f435cdc
#: ../../ref/contrib/redirects.txt:8
msgid ""
"Django comes with an optional redirects application. It lets you store "
"simple redirects in a database and handles the redirecting for you."
msgstr ""

# ed31e8e099ab45b6b347eae81cf29591
#: ../../ref/contrib/redirects.txt:14
msgid "To install the redirects app, follow these steps:"
msgstr ""

# 74f8bff8620a43339366346214e56b01
#: ../../ref/contrib/redirects.txt:16
msgid ""
"Ensure that the ``django.contrib.sites`` framework :ref:`is installed "
"<enabling-the-sites-framework>`."
msgstr ""

# f6b3128ccb9c47a38c7bdee262042b9f
#: ../../ref/contrib/redirects.txt:18
msgid ""
"Add ``'django.contrib.redirects'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# b78bdeb9dacd4d3c9ab6cee5d3f74d60
#: ../../ref/contrib/redirects.txt:19
msgid ""
"Add ``'django.contrib.redirects.middleware.RedirectFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE_CLASSES` setting."
msgstr ""

# 20311412d09f4dcd851e90b95c8fbe36
#: ../../ref/contrib/redirects.txt:26
msgid ""
"``manage.py syncdb`` creates a ``django_redirect`` table in your database. "
"This is a simple lookup table with ``site_id``, ``old_path`` and "
"``new_path`` fields."
msgstr ""

# bfda692360ef4c00b603a2cc576bc77e
#: ../../ref/contrib/redirects.txt:29
msgid ""
"The ``RedirectFallbackMiddleware`` does all of the work. Each time any "
"Django application raises a 404 error, this middleware checks the redirects "
"database for the requested URL as a last resort. Specifically, it checks for "
"a redirect with the given ``old_path`` with a site ID that corresponds to "
"the :setting:`SITE_ID` setting."
msgstr ""

# 43ab9f743c8748a0b53329bc22e8bffc
#: ../../ref/contrib/redirects.txt:35
msgid ""
"If it finds a match, and ``new_path`` is not empty, it redirects to "
"``new_path``."
msgstr ""

# 4d154119d52f485387dab62610112538
#: ../../ref/contrib/redirects.txt:37
msgid ""
"If it finds a match, and ``new_path`` is empty, it sends a 410 (\"Gone\") "
"HTTP header and empty (content-less) response."
msgstr ""

# 3a8cc6dcb0dd47e189641539557200bd
#: ../../ref/contrib/redirects.txt:45
msgid ""
"Note that the order of :setting:`MIDDLEWARE_CLASSES` matters. Generally, you "
"can put ``RedirectFallbackMiddleware`` at the end of the list, because it's "
"a last resort."
msgstr ""

# bd29b0190d86492f931cffb04b304714
#: ../../ref/contrib/redirects.txt:53
msgid "How to add, change and delete redirects"
msgstr ""

# e018a0ec91e44c189bcc47a0971b1e30
#: ../../ref/contrib/redirects.txt:58
msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Redirects\" section on the admin index page. Edit redirects as you edit "
"any other object in the system."
msgstr ""

# 8078fb99d1024f3fa58bba405c620c6e
#: ../../ref/contrib/redirects.txt:67
msgid ""
"Redirects are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in `django/contrib/redirects/models.py`_. You can "
"access redirect objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""

# 1f6305b233324812a2f728f34ef47a16
#: ../../ref/contrib/sitemaps.txt:3
msgid "The sitemap framework"
msgstr ""

# 823a41eea3264200a5b32fed2fa7e760
#: ../../ref/contrib/sitemaps.txt:8
msgid ""
"Django comes with a high-level sitemap-generating framework that makes "
"creating sitemap_ XML files easy."
msgstr ""

# ba419c1ab062415fa908482f52025dd9
#: ../../ref/contrib/sitemaps.txt:16
msgid ""
"A sitemap is an XML file on your Web site that tells search-engine indexers "
"how frequently your pages change and how \"important\" certain pages are in "
"relation to other pages on your site. This information helps search engines "
"index your site."
msgstr ""

# 8825031641af47f7bdc10cc58141a0f8
#: ../../ref/contrib/sitemaps.txt:21
msgid ""
"The Django sitemap framework automates the creation of this XML file by "
"letting you express this information in Python code."
msgstr ""

# 3e7456c63dee4aeaaa42a0189717e21c
#: ../../ref/contrib/sitemaps.txt:24
msgid ""
"It works much like Django's :doc:`syndication framework </ref/contrib/"
"syndication>`. To create a sitemap, just write a :class:`~django.contrib."
"sitemaps.Sitemap` class and point to it in your :doc:`URLconf </topics/http/"
"urls>`."
msgstr ""

# 9b0900b45dc74189b473c53cbd7fc069
#: ../../ref/contrib/sitemaps.txt:32
msgid "To install the sitemap app, follow these steps:"
msgstr ""

# ba3139c76e5143c2bdd8fe3ec7ae5c00
#: ../../ref/contrib/sitemaps.txt:34
msgid ""
"Add ``'django.contrib.sitemaps'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

# 8c1d1edf1f0541c994b5c83c79a16a3d
#: ../../ref/contrib/sitemaps.txt:37
msgid ""
"Make sure ``'django.template.loaders.app_directories.Loader'`` is in your :"
"setting:`TEMPLATE_LOADERS` setting. It's in there by default, so you'll only "
"need to change this if you've changed that setting."
msgstr ""

# 7a4a53c909dd49b88f3799b9b44e1e8d
#: ../../ref/contrib/sitemaps.txt:41
msgid ""
"Make sure you've installed the :mod:`sites framework <django.contrib.sites>`."
msgstr ""

# b0c9d74671e64f4ab1ff015907776f97
#: ../../ref/contrib/sitemaps.txt:44
msgid ""
"(Note: The sitemap application doesn't install any database tables. The only "
"reason it needs to go into :setting:`INSTALLED_APPS` is so that the :func:"
"`~django.template.loaders.app_directories.Loader` template loader can find "
"the default templates.)"
msgstr ""

# 0cffcdb33541402d80e4b6582f044cc4
#: ../../ref/contrib/sitemaps.txt:50
msgid "Initialization"
msgstr ""

# 6dc1e8363f8141f39ed6998f7005ac94
#: ../../ref/contrib/sitemaps.txt:54
msgid ""
"To activate sitemap generation on your Django site, add this line to your :"
"doc:`URLconf </topics/http/urls>`::"
msgstr ""

# 01f9d708262a40d7b5af1df7def8afb4
#: ../../ref/contrib/sitemaps.txt:59
msgid ""
"This tells Django to build a sitemap when a client accesses :file:`/sitemap."
"xml`."
msgstr ""

# 911ddba7544148a69454cd49838c2484
#: ../../ref/contrib/sitemaps.txt:61
msgid ""
"The name of the sitemap file is not important, but the location is. Search "
"engines will only index links in your sitemap for the current URL level and "
"below. For instance, if :file:`sitemap.xml` lives in your root directory, it "
"may reference any URL in your site. However, if your sitemap lives at :file:"
"`/content/sitemap.xml`, it may only reference URLs that begin with :file:`/"
"content/`."
msgstr ""

# 8fd18abc26a84c77b4919f33e1c766d0
#: ../../ref/contrib/sitemaps.txt:68
msgid ""
"The sitemap view takes an extra, required argument: ``{'sitemaps': sitemaps}"
"``. ``sitemaps`` should be a dictionary that maps a short section label (e."
"g., ``blog`` or ``news``) to its :class:`~django.contrib.sitemaps.Sitemap` "
"class (e.g., ``BlogSitemap`` or ``NewsSitemap``). It may also map to an "
"*instance* of a :class:`~django.contrib.sitemaps.Sitemap` class (e.g., "
"``BlogSitemap(some_var)``)."
msgstr ""

# 94ea4016b3af4493bc8cce720b0073d4
#: ../../ref/contrib/sitemaps.txt:76
msgid "Sitemap classes"
msgstr ""

# 63b898b1f7d34b72913dddec3874a270
#: ../../ref/contrib/sitemaps.txt:78
msgid ""
"A :class:`~django.contrib.sitemaps.Sitemap` class is a simple Python class "
"that represents a \"section\" of entries in your sitemap. For example, one :"
"class:`~django.contrib.sitemaps.Sitemap` class could represent all the "
"entries of your Weblog, while another could represent all of the events in "
"your events calendar."
msgstr ""

# 142c7d16117247de8381696e2afc9137
#: ../../ref/contrib/sitemaps.txt:84
msgid ""
"In the simplest case, all these sections get lumped together into one :file:"
"`sitemap.xml`, but it's also possible to use the framework to generate a "
"sitemap index that references individual sitemap files, one per section. "
"(See `Creating a sitemap index`_ below.)"
msgstr ""

# e0a02ee912224ef38ff87609dc68ead5
#: ../../ref/contrib/sitemaps.txt:89
msgid ""
":class:`~django.contrib.sitemaps.Sitemap` classes must subclass ``django."
"contrib.sitemaps.Sitemap``. They can live anywhere in your codebase."
msgstr ""

# 8a4a0a6723ac462db59747588ef8b306
# 3fd636b1e78a451cae1c2c9b692cf45a
#: ../../ref/contrib/sitemaps.txt:93 ../../ref/contrib/syndication.txt:50
msgid "A simple example"
msgstr ""

# 1c3b161313fe40aeb088c70cdb24649c
#: ../../ref/contrib/sitemaps.txt:95
msgid ""
"Let's assume you have a blog system, with an ``Entry`` model, and you want "
"your sitemap to include all the links to your individual blog entries. "
"Here's how your sitemap class might look::"
msgstr ""

# b08871a273f84d3dadde6aac4d3135cf
# a669818ba5844af384e7d5d6f5e1244b
#: ../../ref/contrib/sitemaps.txt:112 ../../ref/contrib/syndication.txt:89
msgid "Note:"
msgstr ""

# b1cdd8df4c064d63a4fe91e327645764
#: ../../ref/contrib/sitemaps.txt:114
msgid ""
":attr:`~Sitemap.changefreq` and :attr:`~Sitemap.priority` are class "
"attributes corresponding to ``<changefreq>`` and ``<priority>`` elements, "
"respectively. They can be made callable as functions, as :attr:`~Sitemap."
"lastmod` was in the example."
msgstr ""

# 65563650fcab472d8d2c7b6f9d80c8c2
#: ../../ref/contrib/sitemaps.txt:118
msgid ""
":attr:`~Sitemap.items()` is simply a method that returns a list of objects. "
"The objects returned will get passed to any callable methods corresponding "
"to a sitemap property (:attr:`~Sitemap.location`, :attr:`~Sitemap.lastmod`, :"
"attr:`~Sitemap.changefreq`, and :attr:`~Sitemap.priority`)."
msgstr ""

# 69575ab8027c40b7944ffa5da3ed69c3
#: ../../ref/contrib/sitemaps.txt:123
msgid ":attr:`~Sitemap.lastmod` should return a Python ``datetime`` object."
msgstr ""

# 6edc4b0a12c84ab8b074b46bb20a8d19
#: ../../ref/contrib/sitemaps.txt:124
msgid ""
"There is no :attr:`~Sitemap.location` method in this example, but you can "
"provide it in order to specify the URL for your object. By default, :attr:"
"`~Sitemap.location()` calls ``get_absolute_url()`` on each object and "
"returns the result."
msgstr ""

# f13e8e0fe10b4474b5f0d7a706648dcb
#: ../../ref/contrib/sitemaps.txt:130
msgid "Sitemap class reference"
msgstr ""

# 78a3661a73974210b737e56e0da7b1bc
#: ../../ref/contrib/sitemaps.txt:134
msgid "A ``Sitemap`` class can define the following methods/attributes:"
msgstr ""

# 1c700d45d70c44ca876a25b7dbe28db6
#: ../../ref/contrib/sitemaps.txt:138
msgid ""
"**Required.** A method that returns a list of objects. The framework doesn't "
"care what *type* of objects they are; all that matters is that these objects "
"get passed to the :attr:`~Sitemap.location()`, :attr:`~Sitemap.lastmod()`, :"
"attr:`~Sitemap.changefreq()` and :attr:`~Sitemap.priority()` methods."
msgstr ""

# 6b76b4c79f3c4709a3ea86d9c2742ff3
# 62b1cc55436f43d892beb445edb54835
# 4de382f00ff34443a92766b70b494c59
# 453faea2533f4371abb85a62b75d5ed8
#: ../../ref/contrib/sitemaps.txt:146 ../../ref/contrib/sitemaps.txt:171
#: ../../ref/contrib/sitemaps.txt:183 ../../ref/contrib/sitemaps.txt:203
msgid "**Optional.** Either a method or attribute."
msgstr ""

# 7b30538965f348d08382b93d1a40338e
#: ../../ref/contrib/sitemaps.txt:148
msgid ""
"If it's a method, it should return the absolute path for a given object as "
"returned by :attr:`~Sitemap.items()`."
msgstr ""

# 126b87388374435485d4e82ea6ece327
#: ../../ref/contrib/sitemaps.txt:151
msgid ""
"If it's an attribute, its value should be a string representing an absolute "
"path to use for *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""

# 15b3298a514a4498964def1dfd53d418
#: ../../ref/contrib/sitemaps.txt:155
msgid ""
"In both cases, \"absolute path\" means a URL that doesn't include the "
"protocol or domain. Examples:"
msgstr ""

# a35d38a5d4054780ac0a4bd6b819888f
#: ../../ref/contrib/sitemaps.txt:158
msgid "Good: :file:`'/foo/bar/'`"
msgstr ""

# 40e0973ae8bb4542b62cdce7ec456f7e
#: ../../ref/contrib/sitemaps.txt:159
msgid "Bad: :file:`'example.com/foo/bar/'`"
msgstr ""

# 8fc5c53279364f148033d4ef414e9598
#: ../../ref/contrib/sitemaps.txt:160
msgid "Bad: :file:`'http://example.com/foo/bar/'`"
msgstr ""

# e0390f7072e045119a778fcebf2d08aa
#: ../../ref/contrib/sitemaps.txt:162
msgid ""
"If :attr:`~Sitemap.location` isn't provided, the framework will call the "
"``get_absolute_url()`` method on each object as returned by :attr:`~Sitemap."
"items()`."
msgstr ""

# 492cca2b538e4ff78c44a6e22393dbd1
#: ../../ref/contrib/sitemaps.txt:166
msgid ""
"To specify a protocol other than ``'http'``, use :attr:`~Sitemap.protocol`."
msgstr ""

# f97816c97e3c467f8bc8deeeb5c3aa8b
#: ../../ref/contrib/sitemaps.txt:173
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's last-modified date/time, "
"as a Python ``datetime.datetime`` object."
msgstr ""

# b73478018b0247dd9fda884ddd51d155
#: ../../ref/contrib/sitemaps.txt:177
msgid ""
"If it's an attribute, its value should be a Python ``datetime.datetime`` "
"object representing the last-modified date/time for *every* object returned "
"by :attr:`~Sitemap.items()`."
msgstr ""

# 1b55544058bf44378f8859ec87fe6369
#: ../../ref/contrib/sitemaps.txt:185
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's change frequency, as a "
"Python string."
msgstr ""

# 539bb05f39c9439e8d50a21ed7505053
#: ../../ref/contrib/sitemaps.txt:188
msgid ""
"If it's an attribute, its value should be a string representing the change "
"frequency of *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""

# 7e1527a4cf71438c95425325d237fc51
#: ../../ref/contrib/sitemaps.txt:191
msgid ""
"Possible values for :attr:`~Sitemap.changefreq`, whether you use a method or "
"attribute, are:"
msgstr ""

# 8430e44f73194e2aa925d869da9a8097
#: ../../ref/contrib/sitemaps.txt:193
msgid "``'always'``"
msgstr ""

# ede5585c4ed14bcda7b7c244bb90bdeb
#: ../../ref/contrib/sitemaps.txt:194
msgid "``'hourly'``"
msgstr ""

# c7c4e3b0cb1740b28f66d4b231426007
#: ../../ref/contrib/sitemaps.txt:195
msgid "``'daily'``"
msgstr ""

# 72b97bbd855a4dda8399c0ac12fa163a
#: ../../ref/contrib/sitemaps.txt:196
msgid "``'weekly'``"
msgstr ""

# 552f5c5c47564b0d9cb858bb86697ebd
#: ../../ref/contrib/sitemaps.txt:197
msgid "``'monthly'``"
msgstr ""

# a1f4a1825584483d991ea468b9c508f5
#: ../../ref/contrib/sitemaps.txt:198
msgid "``'yearly'``"
msgstr ""

# 791ece02682b4d4786072dae5902f154
#: ../../ref/contrib/sitemaps.txt:199
msgid "``'never'``"
msgstr ""

# 3f2d164e2dcb48d68de24fffbd866f2d
#: ../../ref/contrib/sitemaps.txt:205
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's priority, as either a "
"string or float."
msgstr ""

# f79fbfce63a9412a92a9684d2acd6b72
#: ../../ref/contrib/sitemaps.txt:208
msgid ""
"If it's an attribute, its value should be either a string or float "
"representing the priority of *every* object returned by :attr:`~Sitemap."
"items()`."
msgstr ""

# 6f36545c6a93467d9c66421cb1140076
#: ../../ref/contrib/sitemaps.txt:211
msgid ""
"Example values for :attr:`~Sitemap.priority`: ``0.4``, ``1.0``. The default "
"priority of a page is ``0.5``. See the `sitemaps.org documentation`_ for "
"more."
msgstr ""

# d7584aa1073e457693add315d1cdfa64
#: ../../ref/contrib/sitemaps.txt:220
msgid "**Optional.**"
msgstr ""

# 075bd908d8c44cf2ae29bb469083d23a
#: ../../ref/contrib/sitemaps.txt:222
msgid ""
"This attribute defines the protocol (``'http'`` or ``'https'``) of the URLs "
"in the sitemap. If it isn't set, the protocol with which the sitemap was "
"requested is used. If the sitemap is built outside the context of a request, "
"the default is ``'http'``."
msgstr ""

# f7b4aa613d234c87a47db9e775e89540
#: ../../ref/contrib/sitemaps.txt:229
msgid "Shortcuts"
msgstr ""

# 66ba48ab4b8d45c69683ad47efa93a70
#: ../../ref/contrib/sitemaps.txt:231
msgid ""
"The sitemap framework provides a couple convenience classes for common cases:"
msgstr ""

# e607b10d11bd4649989cfb3e394dc9db
#: ../../ref/contrib/sitemaps.txt:235
msgid ""
"The :class:`django.contrib.sitemaps.FlatPageSitemap` class looks at all "
"publicly visible :mod:`flatpages <django.contrib.flatpages>` defined for the "
"current :setting:`SITE_ID` (see the :mod:`sites documentation <django."
"contrib.sites>`) and creates an entry in the sitemap. These entries include "
"only the :attr:`~Sitemap.location` attribute -- not :attr:`~Sitemap."
"lastmod`, :attr:`~Sitemap.changefreq` or :attr:`~Sitemap.priority`."
msgstr ""

# d3194adfd1ba451f857b6536a3c66cd7
#: ../../ref/contrib/sitemaps.txt:245
msgid ""
"The :class:`django.contrib.sitemaps.GenericSitemap` class allows you to "
"create a sitemap by passing it a dictionary which has to contain at least a "
"``queryset`` entry. This queryset will be used to generate the items of the "
"sitemap. It may also have a ``date_field`` entry that specifies a date field "
"for objects retrieved from the ``queryset``. This will be used for the :attr:"
"`~Sitemap.lastmod` attribute in the generated sitemap. You may also pass :"
"attr:`~Sitemap.priority` and :attr:`~Sitemap.changefreq` keyword arguments "
"to the :class:`~django.contrib.sitemaps.GenericSitemap`  constructor to "
"specify these attributes for all URLs."
msgstr ""

# 552fcbbbe4f84f2ea2758d9dd5881fcc
#: ../../ref/contrib/sitemaps.txt:259
msgid "Here's an example of a :doc:`URLconf </topics/http/urls>` using both::"
msgstr ""

# 31cbd507b7b84687987ea3eff26a30e2
#: ../../ref/contrib/sitemaps.txt:286
msgid "Creating a sitemap index"
msgstr ""

# 801996254eea4a6181188385dc904814
#: ../../ref/contrib/sitemaps.txt:290
msgid ""
"The sitemap framework also has the ability to create a sitemap index that "
"references individual sitemap files, one per each section defined in your "
"``sitemaps`` dictionary. The only differences in usage are:"
msgstr ""

# 53f83fc53d344055af768cd270e886ec
#: ../../ref/contrib/sitemaps.txt:294
msgid ""
"You use two views in your URLconf: :func:`django.contrib.sitemaps.views."
"index` and :func:`django.contrib.sitemaps.views.sitemap`."
msgstr ""

# ffbcae3b57144142a8cec05f09cecefe
#: ../../ref/contrib/sitemaps.txt:296
msgid ""
"The :func:`django.contrib.sitemaps.views.sitemap` view should take a "
"``section`` keyword argument."
msgstr ""

# 3e308829e4c34ecebdd31eb99b5ebc50
#: ../../ref/contrib/sitemaps.txt:299
msgid ""
"Here's what the relevant URLconf lines would look like for the example "
"above::"
msgstr ""

# a631c853a13948118dea183e8937513c
#: ../../ref/contrib/sitemaps.txt:306
msgid ""
"This will automatically generate a :file:`sitemap.xml` file that references "
"both :file:`sitemap-flatpages.xml` and :file:`sitemap-blog.xml`. The :class:"
"`~django.contrib.sitemaps.Sitemap` classes and the ``sitemaps`` dict don't "
"change at all."
msgstr ""

# cf0975a127624ef4afc1c025d0a04823
#: ../../ref/contrib/sitemaps.txt:311
msgid ""
"You should create an index file if one of your sitemaps has more than 50,000 "
"URLs. In this case, Django will automatically paginate the sitemap, and the "
"index will reflect that."
msgstr ""

# c15e198c19874c4da7392b0cb4b979bf
#: ../../ref/contrib/sitemaps.txt:317
msgid ""
"If you're not using the vanilla sitemap view -- for example, if it's wrapped "
"with a caching decorator -- you must name your sitemap view and pass "
"``sitemap_url_name`` to the index view::"
msgstr ""

# 320cbb30c23d4414945dd09f585cae55
#: ../../ref/contrib/sitemaps.txt:335
msgid "Template customization"
msgstr ""

# 59a182b3a46040069ad83e5593df0fee
#: ../../ref/contrib/sitemaps.txt:337
msgid ""
"If you wish to use a different template for each sitemap or sitemap index "
"available on your site, you may specify it by passing a ``template_name`` "
"parameter to the ``sitemap`` and ``index`` views via the URLconf::"
msgstr ""

# c3ff9caf231c4311b4c3847a6faa9183
#: ../../ref/contrib/sitemaps.txt:361
msgid "Context variables"
msgstr ""

# 3ade243dd7084614b2db3283967aa187
#: ../../ref/contrib/sitemaps.txt:363
msgid ""
"When customizing the templates for the :func:`~django.contrib.sitemaps.views."
"index` and :func:`~django.contrib.sitemaps.views.sitemap` views, you can "
"rely on the following context variables."
msgstr ""

# dcca127f277d4188b3b204ba3254f095
#: ../../ref/contrib/sitemaps.txt:371
msgid ""
"The variable ``sitemaps`` is a list of absolute URLs to each of the sitemaps."
msgstr ""

# bf85d07884784210878de5fd9f623ba1
#: ../../ref/contrib/sitemaps.txt:374
msgid "Sitemap"
msgstr ""

# 4e8af7b7b52e423e9dd412a1f26707de
#: ../../ref/contrib/sitemaps.txt:376
msgid ""
"The variable ``urlset`` is a list of URLs that should appear in the sitemap. "
"Each URL exposes attributes as defined in the :class:`~django.contrib."
"sitemaps.Sitemap` class:"
msgstr ""

# dc5f11819c534500b6c276b1c255a46c
#: ../../ref/contrib/sitemaps.txt:380
msgid "``changefreq``"
msgstr ""

# cc848b45e72a44db9b488bd93bfa700b
#: ../../ref/contrib/sitemaps.txt:381
msgid "``item``"
msgstr ""

# f3d5e11cb57149cbb15965a60a1bc96e
#: ../../ref/contrib/sitemaps.txt:382
msgid "``lastmod``"
msgstr ""

# a8533638287b4e589d1fff107b959c6c
#: ../../ref/contrib/sitemaps.txt:383
msgid "``location``"
msgstr ""

# 58cb89fcf9ca4ea78a1069fabc708c7a
#: ../../ref/contrib/sitemaps.txt:384
msgid "``priority``"
msgstr ""

# 3b32c7d0471542d8869a504ab29f3e8e
#: ../../ref/contrib/sitemaps.txt:388
msgid ""
"The ``item`` attribute has been added for each URL to allow more flexible "
"customization of the templates, such as `Google news sitemaps`_. Assuming "
"Sitemap's :attr:`~Sitemap.items()` would return a list of items with "
"``publication_data`` and a ``tags`` field something like this would generate "
"a Google News compatible sitemap:"
msgstr ""

# 5e942f704c4d4691b59bfc47ba786031
#: ../../ref/contrib/sitemaps.txt:419
msgid "Pinging Google"
msgstr ""

# 1a81710eed73407ba44506371df7b39f
#: ../../ref/contrib/sitemaps.txt:421
msgid ""
"You may want to \"ping\" Google when your sitemap changes, to let it know to "
"reindex your site. The sitemaps framework provides a function to do just "
"that: :func:`django.contrib.sitemaps.ping_google()`."
msgstr ""

# 74aa0a1ebe6e41eba436cce982aa34fc
#: ../../ref/contrib/sitemaps.txt:427
msgid ""
":func:`ping_google` takes an optional argument, ``sitemap_url``, which "
"should be the absolute path to your site's sitemap (e.g., :file:`'/sitemap."
"xml'`). If this argument isn't provided, :func:`ping_google` will attempt to "
"figure out your sitemap by performing a reverse looking in your URLconf."
msgstr ""

# 0bd843f97d53448c9bf48478be7747aa
#: ../../ref/contrib/sitemaps.txt:433
msgid ""
":func:`ping_google` raises the exception ``django.contrib.sitemaps."
"SitemapNotFound`` if it cannot determine your sitemap URL."
msgstr ""

# d74dbf6cfdaf4ea9a9013af112c63038
#: ../../ref/contrib/sitemaps.txt:437
msgid "Register with Google first!"
msgstr ""

# 99d4d9d6e33d484dbc1b42ee5474153c
#: ../../ref/contrib/sitemaps.txt:439
msgid ""
"The :func:`ping_google` command only works if you have registered your site "
"with `Google Webmaster Tools`_."
msgstr ""

# 8528b6e80cee40b89f9174132c149a69
#: ../../ref/contrib/sitemaps.txt:444
msgid ""
"One useful way to call :func:`ping_google` is from a model's ``save()`` "
"method::"
msgstr ""

# 8f2c160b30fd4afe9878325f2baa3c36
#: ../../ref/contrib/sitemaps.txt:460
msgid ""
"A more efficient solution, however, would be to call :func:`ping_google` "
"from a cron script, or some other scheduled task. The function makes an HTTP "
"request to Google's servers, so you may not want to introduce that network "
"overhead each time you call ``save()``."
msgstr ""

# 085c7df2bdb54bc9b751be8324bf93bc
#: ../../ref/contrib/sitemaps.txt:466
msgid "Pinging Google via ``manage.py``"
msgstr ""

# aa02f2fde0864ca6a718097765b00bbe
#: ../../ref/contrib/sitemaps.txt:470
msgid ""
"Once the sitemaps application is added to your project, you may also ping "
"Google using the ``ping_google`` management command::"
msgstr ""

# 90baf84c029340b496eadbc872fd72f0
#: ../../ref/contrib/sites.txt:3
msgid "The \"sites\" framework"
msgstr ""

# e692849799e94f3db03e40609645b958
#: ../../ref/contrib/sites.txt:11
msgid ""
"Django comes with an optional \"sites\" framework. It's a hook for "
"associating objects and functionality to particular Web sites, and it's a "
"holding place for the domain names and \"verbose\" names of your Django-"
"powered sites."
msgstr ""

# 7f32f97f914645e8befc8d482b0c6986
#: ../../ref/contrib/sites.txt:15
msgid ""
"Use it if your single Django installation powers more than one site and you "
"need to differentiate between those sites in some way."
msgstr ""

# e84f3510c15541ee91d8112a2a9f9d35
#: ../../ref/contrib/sites.txt:18
msgid "The whole sites framework is based on a simple model:"
msgstr ""

# 423e03e7bd5d4c1eb2873930a7fb460f
#: ../../ref/contrib/sites.txt:22
msgid ""
"A model for storing the ``domain`` and ``name`` attributes of a Web site. "
"The :setting:`SITE_ID` setting specifies the database ID of the :class:"
"`~django.contrib.sites.models.Site` object associated with that particular "
"settings file."
msgstr ""

# 7a7e2c08fcc947f6851ad6e79f75ae35
#: ../../ref/contrib/sites.txt:29
msgid "The domain name associated with the Web site."
msgstr ""

# 81ea9761c2a44c6981cd7318dc4f2fa8
#: ../../ref/contrib/sites.txt:33
msgid "A human-readable \"verbose\" name for the Web site."
msgstr ""

# 1019fdb372d0464ea76faae30e262a97
#: ../../ref/contrib/sites.txt:36
msgid ""
"How you use this is up to you, but Django uses it in a couple of ways "
"automatically via simple conventions."
msgstr ""

# c3493ba4da2d45c0b9a4e61b603f213e
#: ../../ref/contrib/sites.txt:40
msgid "Example usage"
msgstr ""

# a6dbdf4741fb42b38f071f3cb0033263
#: ../../ref/contrib/sites.txt:42
msgid "Why would you use sites? It's best explained through examples."
msgstr ""

# 95cb18cb4a174bedaeec86990bac582e
#: ../../ref/contrib/sites.txt:45
msgid "Associating content with multiple sites"
msgstr ""

# e32305f3130e4d2a839f7af207efdbe7
#: ../../ref/contrib/sites.txt:47
msgid ""
"The Django-powered sites LJWorld.com_ and Lawrence.com_ are operated by the "
"same news organization -- the Lawrence Journal-World newspaper in Lawrence, "
"Kansas. LJWorld.com focuses on news, while Lawrence.com focuses on local "
"entertainment. But sometimes editors want to publish an article on *both* "
"sites."
msgstr ""

# de6e7d784e674151aeb4e83ba1c321c4
#: ../../ref/contrib/sites.txt:53
msgid ""
"The brain-dead way of solving the problem would be to require site producers "
"to publish the same story twice: once for LJWorld.com and again for Lawrence."
"com. But that's inefficient for site producers, and it's redundant to store "
"multiple copies of the same story in the database."
msgstr ""

# 876c00f3cc004a348d9346bea2ffa388
#: ../../ref/contrib/sites.txt:58
msgid ""
"The better solution is simple: Both sites use the same article database, and "
"an article is associated with one or more sites. In Django model "
"terminology, that's represented by a :class:`~django.db.models."
"ManyToManyField` in the ``Article`` model::"
msgstr ""

# d93a1299d89440c4822ad850d046c0d5
#: ../../ref/contrib/sites.txt:71
msgid "This accomplishes several things quite nicely:"
msgstr ""

# c6fa521a2fe44e2694e0d223b6660c1b
#: ../../ref/contrib/sites.txt:73
msgid ""
"It lets the site producers edit all content -- on both sites -- in a single "
"interface (the Django admin)."
msgstr ""

# 3f4b1c451de14a269bf6b39abff091fa
#: ../../ref/contrib/sites.txt:76
msgid ""
"It means the same story doesn't have to be published twice in the database; "
"it only has a single record in the database."
msgstr ""

# b94128f30c0946eb94c1e1e61e8f98d9
#: ../../ref/contrib/sites.txt:79
msgid ""
"It lets the site developers use the same Django view code for both sites. "
"The view code that displays a given story just checks to make sure the "
"requested story is on the current site. It looks something like this::"
msgstr ""

# 8aa46651bc3f49249871f8944539afdc
#: ../../ref/contrib/sites.txt:96
msgid "Associating content with a single site"
msgstr ""

# 6fbce4067601492e8a37b1bcc64d43b3
#: ../../ref/contrib/sites.txt:98
msgid ""
"Similarly, you can associate a model to the :class:`~django.contrib.sites."
"models.Site` model in a many-to-one relationship, using :class:`~django.db."
"models.ForeignKey`."
msgstr ""

# 80f3849bffea4a8da16f5b36587f3b9a
#: ../../ref/contrib/sites.txt:103
msgid ""
"For example, if an article is only allowed on a single site, you'd use a "
"model like this::"
msgstr ""

# 979f473d11fe4f068bfd1117f89064d3
#: ../../ref/contrib/sites.txt:114
msgid "This has the same benefits as described in the last section."
msgstr ""

# a1ed16464b744c32aeacb2b77749068a
#: ../../ref/contrib/sites.txt:119
msgid "Hooking into the current site from views"
msgstr ""

# d4af420dbc564fc693cc0b50c6e7a61a
#: ../../ref/contrib/sites.txt:121
msgid ""
"You can use the sites framework in your Django views to do particular things "
"based on the site in which the view is being called. For example::"
msgstr ""

# 4204d96fec224966b795c155405d7b54
#: ../../ref/contrib/sites.txt:135
msgid ""
"Of course, it's ugly to hard-code the site IDs like that. This sort of hard-"
"coding is best for hackish fixes that you need done quickly. The cleaner way "
"of accomplishing the same thing is to check the current site's domain::"
msgstr ""

# 1e27fbc3c803498e9dbc69001776d526
#: ../../ref/contrib/sites.txt:151
msgid ""
"This has also the advantage of checking if the sites framework is installed, "
"and return a :class:`RequestSite` instance if it is not."
msgstr ""

# 0928c4503c524216bf99f9f0725b9566
#: ../../ref/contrib/sites.txt:154
msgid ""
"If you don't have access to the request object, you can use the "
"``get_current()`` method of the :class:`~django.contrib.sites.models.Site` "
"model's manager. You should then ensure that your settings file does contain "
"the :setting:`SITE_ID` setting. This example is equivalent to the previous "
"one::"
msgstr ""

# f779793ab9004ddd85e7cd9dc7f442d9
#: ../../ref/contrib/sites.txt:171
msgid "Getting the current domain for display"
msgstr ""

# 2d8ed31e9b6d446f881679f306e52ace
#: ../../ref/contrib/sites.txt:173
msgid ""
"LJWorld.com and Lawrence.com both have email alert functionality, which lets "
"readers sign up to get notifications when news happens. It's pretty basic: A "
"reader signs up on a Web form, and he immediately gets an email saying, "
"\"Thanks for your subscription.\""
msgstr ""

# 5c038a41b6134d3da6ce3a8ceb5114ed
#: ../../ref/contrib/sites.txt:178
msgid ""
"It'd be inefficient and redundant to implement this signup-processing code "
"twice, so the sites use the same code behind the scenes. But the \"thank you "
"for signing up\" notice needs to be different for each site. By using :class:"
"`~django.contrib.sites.models.Site` objects, we can abstract the \"thank you"
"\" notice to use the values of the current site's :attr:`~django.contrib."
"sites.models.Site.name` and :attr:`~django.contrib.sites.models.Site.domain`."
msgstr ""

# ed0d058d029c42eb8b1d10b7f574e82a
#: ../../ref/contrib/sites.txt:186
msgid "Here's an example of what the form-handling view looks like::"
msgstr ""

# f88fd0e09c0e4bf2be23082c931b07e6
#: ../../ref/contrib/sites.txt:203
msgid ""
"On Lawrence.com, this email has the subject line \"Thanks for subscribing to "
"lawrence.com alerts.\" On LJWorld.com, the email has the subject \"Thanks "
"for subscribing to LJWorld.com alerts.\" Same goes for the email's message "
"body."
msgstr ""

# f07b4b68959f4a8c898f2595b2879273
#: ../../ref/contrib/sites.txt:207
msgid ""
"Note that an even more flexible (but more heavyweight) way of doing this "
"would be to use Django's template system. Assuming Lawrence.com and LJWorld."
"com have different template directories (:setting:`TEMPLATE_DIRS`), you "
"could simply farm out to the template system like so::"
msgstr ""

# 2699969a2cbb459b9b9f317cc6a8bfef
#: ../../ref/contrib/sites.txt:225
msgid ""
"In this case, you'd have to create :file:`subject.txt` and :file:`message."
"txt` template files for both the LJWorld.com and Lawrence.com template "
"directories. That gives you more flexibility, but it's also more complex."
msgstr ""

# 51d91d7bc7aa44a8911751376bb9d951
#: ../../ref/contrib/sites.txt:229
msgid ""
"It's a good idea to exploit the :class:`~django.contrib.sites.models.Site` "
"objects as much as possible, to remove unneeded complexity and redundancy."
msgstr ""

# 54cc79d1e01b46b6ac9f9ac9ae89af12
#: ../../ref/contrib/sites.txt:233
msgid "Getting the current domain for full URLs"
msgstr ""

# bd223f562da644deb8dc719269080bcc
#: ../../ref/contrib/sites.txt:235
msgid ""
"Django's ``get_absolute_url()`` convention is nice for getting your objects' "
"URL without the domain name, but in some cases you might want to display the "
"full URL -- with ``http://`` and the domain and everything -- for an object. "
"To do this, you can use the sites framework. A simple example::"
msgstr ""

# 2bd0b41cb38845e4970c53996aa05d8f
#: ../../ref/contrib/sites.txt:252
msgid "Default site and ``syncdb``"
msgstr ""

# ae06105e8f8e4fa2853911ecab527aac
#: ../../ref/contrib/sites.txt:254
msgid ""
"``django.contrib.sites`` registers a :data:`~django.db.models.signals."
"post_syncdb` signal handler which creates a default site named ``example."
"com`` with the domain ``example.com``. For example, this site will be "
"created after Django creates the test database."
msgstr ""

# b39fc987289c4820a2860fed39184e0c
#: ../../ref/contrib/sites.txt:260
msgid "Caching the current ``Site`` object"
msgstr ""

# 03ae5ae7722d4a1b9816b2d4f18c260d
#: ../../ref/contrib/sites.txt:262
msgid ""
"As the current site is stored in the database, each call to ``Site.objects."
"get_current()`` could result in a database query. But Django is a little "
"cleverer than that: on the first request, the current site is cached, and "
"any subsequent call returns the cached data instead of hitting the database."
msgstr ""

# aae9f7c497534d779b0cbafad6d48c57
#: ../../ref/contrib/sites.txt:267
msgid ""
"If for any reason you want to force a database query, you can tell Django to "
"clear the cache using ``Site.objects.clear_cache()``::"
msgstr ""

# 92f326879da94d55af6c01e066727b0f
#: ../../ref/contrib/sites.txt:285
msgid "The ``CurrentSiteManager``"
msgstr ""

# 50562772452b41f6865cd109513c559f
#: ../../ref/contrib/sites.txt:289
msgid ""
"If :class:`~django.contrib.sites.models.Site` plays a key role in your "
"application, consider using the helpful :class:`~django.contrib.sites."
"managers.CurrentSiteManager` in your model(s). It's a model :doc:`manager </"
"topics/db/managers>` that automatically filters its queries to include only "
"objects associated with the current :class:`~django.contrib.sites.models."
"Site`."
msgstr ""

# 8a09b4c2add645ffb3507bbec4e66234
#: ../../ref/contrib/sites.txt:296
msgid ""
"Use :class:`~django.contrib.sites.managers.CurrentSiteManager` by adding it "
"to your model explicitly. For example::"
msgstr ""

# bb422f1cef78457cbb83755311c554c2
#: ../../ref/contrib/sites.txt:311
msgid ""
"With this model, ``Photo.objects.all()`` will return all ``Photo`` objects "
"in the database, but ``Photo.on_site.all()`` will return only the ``Photo`` "
"objects associated with the current site, according to the :setting:"
"`SITE_ID` setting."
msgstr ""

# 1c055fdf4b6e475fb00740f9802e981d
#: ../../ref/contrib/sites.txt:315
msgid "Put another way, these two statements are equivalent::"
msgstr ""

# cf12587389fd47d68f068fc8ff28bd89
#: ../../ref/contrib/sites.txt:320
msgid ""
"How did :class:`~django.contrib.sites.managers.CurrentSiteManager` know "
"which field of ``Photo`` was the :class:`~django.contrib.sites.models.Site`? "
"By default, :class:`~django.contrib.sites.managers.CurrentSiteManager` looks "
"for a either a :class:`~django.db.models.ForeignKey` called ``site`` or a :"
"class:`~django.db.models.ManyToManyField` called ``sites`` to filter on. If "
"you use a field named something other than ``site`` or ``sites`` to identify "
"which :class:`~django.contrib.sites.models.Site` objects your object is "
"related to, then you need to explicitly pass the custom field name as a "
"parameter to :class:`~django.contrib.sites.managers.CurrentSiteManager` on "
"your model. The following model, which has a field called ``publish_on``, "
"demonstrates this::"
msgstr ""

# 4ec5b47eaca54d6daf5f3c7055460c38
#: ../../ref/contrib/sites.txt:348
msgid ""
"If you attempt to use :class:`~django.contrib.sites.managers."
"CurrentSiteManager` and pass a field name that doesn't exist, Django will "
"raise a ``ValueError``."
msgstr ""

# eb0ce6e18b9a49ffb28b730036a22f2d
#: ../../ref/contrib/sites.txt:351
msgid ""
"Finally, note that you'll probably want to keep a normal (non-site-specific) "
"``Manager`` on your model, even if you use :class:`~django.contrib.sites."
"managers.CurrentSiteManager`. As explained in the :doc:`manager "
"documentation </topics/db/managers>`, if you define a manager manually, then "
"Django won't create the automatic ``objects = models.Manager()`` manager for "
"you. Also note that certain parts of Django -- namely, the Django admin site "
"and generic views -- use whichever manager is defined *first* in the model, "
"so if you want your admin site to have access to all objects (not just site-"
"specific ones), put ``objects = models.Manager()`` in your model, before you "
"define :class:`~django.contrib.sites.managers.CurrentSiteManager`."
msgstr ""

# 49a3d6a0129a43179b2dd53c22785421
#: ../../ref/contrib/sites.txt:364
msgid "How Django uses the sites framework"
msgstr ""

# 69c75ab6b13d422f912b5c9e7e39f82f
#: ../../ref/contrib/sites.txt:366
msgid ""
"Although it's not required that you use the sites framework, it's strongly "
"encouraged, because Django takes advantage of it in a few places. Even if "
"your Django installation is powering only a single site, you should take the "
"two seconds to create the site object with your ``domain`` and ``name``, and "
"point to its ID in your :setting:`SITE_ID` setting."
msgstr ""

# 4cbf3896a52843d8a7c7625214427ae8
#: ../../ref/contrib/sites.txt:372
msgid "Here's how Django uses the sites framework:"
msgstr ""

# 31f0d39da83b4f50bb163e1b847b357b
#: ../../ref/contrib/sites.txt:374
msgid ""
"In the :mod:`redirects framework <django.contrib.redirects>`, each redirect "
"object is associated with a particular site. When Django searches for a "
"redirect, it takes into account the current site."
msgstr ""

# 725516085cfb469da9bc35bc96cfd99e
#: ../../ref/contrib/sites.txt:378
msgid ""
"In the comments framework, each comment is associated with a particular "
"site. When a comment is posted, its :class:`~django.contrib.sites.models."
"Site` is set to the current site, and when comments are listed via the "
"appropriate template tag, only the comments for the current site are "
"displayed."
msgstr ""

# e1ad6559728a4155bd5be02544176ceb
#: ../../ref/contrib/sites.txt:384
msgid ""
"In the :mod:`flatpages framework <django.contrib.flatpages>`, each flatpage "
"is associated with a particular site. When a flatpage is created, you "
"specify its :class:`~django.contrib.sites.models.Site`, and the :class:"
"`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` checks the "
"current site in retrieving flatpages to display."
msgstr ""

# d4b8f407d53d46acabd670f5e5ed49e4
#: ../../ref/contrib/sites.txt:390
msgid ""
"In the :mod:`syndication framework <django.contrib.syndication>`, the "
"templates for ``title`` and ``description`` automatically have access to a "
"variable ``{{ site }}``, which is the :class:`~django.contrib.sites.models."
"Site` object representing the current site. Also, the hook for providing "
"item URLs will use the ``domain`` from the current :class:`~django.contrib."
"sites.models.Site` object if you don't specify a fully-qualified domain."
msgstr ""

# 4fba84b0193c4bbbbe03ffe2a0a52c21
#: ../../ref/contrib/sites.txt:398
msgid ""
"In the :mod:`authentication framework <django.contrib.auth>`, the :func:"
"`django.contrib.auth.views.login` view passes the current :class:`~django."
"contrib.sites.models.Site` name to the template as ``{{ site_name }}``."
msgstr ""

# dab21f0c39b048cfa066d6b39a342a49
#: ../../ref/contrib/sites.txt:403
msgid ""
"The shortcut view (``django.views.defaults.shortcut``) uses the domain of "
"the current :class:`~django.contrib.sites.models.Site` object when "
"calculating an object's URL."
msgstr ""

# eef5549415554cb981f27cc9419899c7
#: ../../ref/contrib/sites.txt:407
msgid ""
"In the admin framework, the \"view on site\" link uses the current :class:"
"`~django.contrib.sites.models.Site` to work out the domain for the site that "
"it will redirect to."
msgstr ""

# c6a91b8337e84b53b80cdeb37ddf34a1
#: ../../ref/contrib/sites.txt:414
msgid "``RequestSite`` objects"
msgstr ""

# 0dd467a25857410fac0e00b757c5d7e5
#: ../../ref/contrib/sites.txt:418
msgid ""
"Some :doc:`django.contrib </ref/contrib/index>` applications take advantage "
"of the sites framework but are architected in a way that doesn't *require* "
"the sites framework to be installed in your database. (Some people don't "
"want to, or just aren't *able* to install the extra database table that the "
"sites framework requires.) For those cases, the framework provides a :class:"
"`~django.contrib.sites.models.RequestSite` class, which can be used as a "
"fallback when the database-backed sites framework is not available."
msgstr ""

# 2c6b56b81ae74622be93f206a4566ffb
#: ../../ref/contrib/sites.txt:428
msgid ""
"A class that shares the primary interface of :class:`~django.contrib.sites."
"models.Site` (i.e., it has ``domain`` and ``name`` attributes) but gets its "
"data from a Django :class:`~django.http.HttpRequest` object rather than from "
"a database."
msgstr ""

# 10a08cda502941fb8f71df2c09f5af27
#: ../../ref/contrib/sites.txt:433
msgid "The ``save()`` and ``delete()`` methods raise ``NotImplementedError``."
msgstr ""

# 33629117d3c14dad8bc65a6c75dc8888
#: ../../ref/contrib/sites.txt:437
msgid ""
"Sets the ``name`` and ``domain`` attributes to the value of :meth:`~django."
"http.HttpRequest.get_host`."
msgstr ""

# 24e64c1adf494ad590067ec9d68a0401
#: ../../ref/contrib/sites.txt:441
msgid ""
"A :class:`~django.contrib.sites.models.RequestSite` object has a similar "
"interface to a normal :class:`~django.contrib.sites.models.Site` object, "
"except its :meth:`~django.contrib.sites.models.RequestSite.__init__()` "
"method takes an :class:`~django.http.HttpRequest` object. It's able to "
"deduce the ``domain`` and ``name`` by looking at the request's domain. It "
"has ``save()`` and ``delete()`` methods to match the interface of :class:"
"`~django.contrib.sites.models.Site`, but the methods raise "
"``NotImplementedError``."
msgstr ""

# 81b919893d704dfa9a06948d45189ba6
#: ../../ref/contrib/staticfiles.txt:3
msgid "The staticfiles app"
msgstr ""

# 313f81204cbf4a239ddf115a0c6e77ee
#: ../../ref/contrib/staticfiles.txt:8
msgid ""
"``django.contrib.staticfiles`` collects static files from each of your "
"applications (and any other places you specify) into a single location that "
"can easily be served in production."
msgstr ""

# 1721b8d14d8f4fa29463cbb1bbe25799
#: ../../ref/contrib/staticfiles.txt:14
msgid ""
"For an introduction to the static files app and some usage examples, see :"
"doc:`/howto/static-files/index`. For guidelines on deploying static files, "
"see :doc:`/howto/static-files/deployment`."
msgstr ""

# 8602f6d61ff54bcda7fb285392fd534a
#: ../../ref/contrib/staticfiles.txt:27
msgid "The following settings control the behavior of the staticfiles app."
msgstr ""

# d0d5f0162f1e420bb54d5c2946b47e2d
#: ../../ref/contrib/staticfiles.txt:32
msgid "STATICFILES_DIRS"
msgstr ""

# 50cf00bba9624030a3e0913fd5fd3b14
#: ../../ref/contrib/staticfiles.txt:34
msgid "Default: ``[]``"
msgstr ""

# 022246089596417d9073de9b8ba6b180
#: ../../ref/contrib/staticfiles.txt:36
msgid ""
"This setting defines the additional locations the staticfiles app will "
"traverse if the ``FileSystemFinder`` finder is enabled, e.g. if you use the :"
"djadmin:`collectstatic` or :djadmin:`findstatic` management command or use "
"the static file serving view."
msgstr ""

# f5bb881ee264417f83f23a713df5cf88
#: ../../ref/contrib/staticfiles.txt:41
msgid ""
"This should be set to a list or tuple of strings that contain full paths to "
"your additional files directory(ies) e.g.::"
msgstr ""

# 2dd326a190584f8aa6b0a75a090784b9
#: ../../ref/contrib/staticfiles.txt:51
msgid "Prefixes (optional)"
msgstr ""

# f7ff9542d19e40db981e59a29d315233
#: ../../ref/contrib/staticfiles.txt:53
msgid ""
"In case you want to refer to files in one of the locations with an "
"additional namespace, you can **optionally** provide a prefix as ``(prefix, "
"path)`` tuples, e.g.::"
msgstr ""

# 7c5ea5fcfe7348648515ac7a63bd65bb
#: ../../ref/contrib/staticfiles.txt:62
msgid "Example:"
msgstr ""

# ddbfa6020dc546f48ed1139f2c5abefe
#: ../../ref/contrib/staticfiles.txt:64
msgid ""
"Assuming you have :setting:`STATIC_URL` set ``'/static/'``, the :djadmin:"
"`collectstatic` management command would collect the \"stats\" files in a "
"``'downloads'`` subdirectory of :setting:`STATIC_ROOT`."
msgstr ""

# 5a92097d0ba143a091479798929f6cfe
#: ../../ref/contrib/staticfiles.txt:68
msgid ""
"This would allow you to refer to the local file ``'/opt/webfiles/stats/"
"polls_20101022.tar.gz'`` with ``'/static/downloads/polls_20101022.tar.gz'`` "
"in your templates, e.g.:"
msgstr ""

# 951dd7e983dd4c3bafd910baa127cf93
#: ../../ref/contrib/staticfiles.txt:79
msgid "STATICFILES_STORAGE"
msgstr ""

# 137ea4ecd4be4e35a4b994a8492e6901
#: ../../ref/contrib/staticfiles.txt:81
msgid "Default: ``'django.contrib.staticfiles.storage.StaticFilesStorage'``"
msgstr ""

# 3c88238e0656441cbba7ebd7012a62b1
#: ../../ref/contrib/staticfiles.txt:83
msgid ""
"The file storage engine to use when collecting static files with the :"
"djadmin:`collectstatic` management command."
msgstr ""

# c12b5213dfce443692e779e1f220b829
#: ../../ref/contrib/staticfiles.txt:88
msgid ""
"A ready-to-use instance of the storage backend defined in this setting can "
"be found at ``django.contrib.staticfiles.storage.staticfiles_storage``."
msgstr ""

# 4b657479344d40b5834da8566c4e6c31
#: ../../ref/contrib/staticfiles.txt:91
msgid "For an example, see :ref:`staticfiles-from-cdn`."
msgstr ""

# 30696ea0366746d3ab58c4e76a13ba47
#: ../../ref/contrib/staticfiles.txt:96
msgid "STATICFILES_FINDERS"
msgstr ""

# df56795f5aea4de89764938137515578
#: ../../ref/contrib/staticfiles.txt:103
msgid ""
"The list of finder backends that know how to find static files in various "
"locations."
msgstr ""

# 533f038aa54c40569f524022e3d6707d
#: ../../ref/contrib/staticfiles.txt:106
msgid ""
"The default will find files stored in the :setting:`STATICFILES_DIRS` "
"setting (using ``django.contrib.staticfiles.finders.FileSystemFinder``) and "
"in a ``static`` subdirectory of each app (using ``django.contrib.staticfiles."
"finders.AppDirectoriesFinder``). If multiple files with the same name are "
"present, the first file that is found will be used."
msgstr ""

# ba8e5ab81e6b4ef7bccbbab30def5cc2
#: ../../ref/contrib/staticfiles.txt:111
msgid ""
"One finder is disabled by default: ``django.contrib.staticfiles.finders."
"DefaultStorageFinder``. If added to your :setting:`STATICFILES_FINDERS` "
"setting, it will look for static files in the default file storage as "
"defined by the :setting:`DEFAULT_FILE_STORAGE` setting."
msgstr ""

# 78ec408bf2a44e68bf92b6a942112c0c
#: ../../ref/contrib/staticfiles.txt:119
msgid ""
"When using the ``AppDirectoriesFinder`` finder, make sure your apps can be "
"found by staticfiles. Simply add the app to the :setting:`INSTALLED_APPS` "
"setting of your site."
msgstr ""

# 2df8cc9b9cba4f65bf3e3308324716cb
#: ../../ref/contrib/staticfiles.txt:123
msgid ""
"Static file finders are currently considered a private interface, and this "
"interface is thus undocumented."
msgstr ""

# c47644e159d344ec8278593379f62ec9
#: ../../ref/contrib/staticfiles.txt:127
msgid "Management Commands"
msgstr ""

# 60331b8d29994938860837562d1651e6
#: ../../ref/contrib/staticfiles.txt:131
msgid "``django.contrib.staticfiles`` exposes three management commands."
msgstr ""

# e4cbb298a05b4174a8a4dbff067ba294
# 3310ba65637c4306a5d86d43e0f6b6b3
#: ../../ref/contrib/staticfiles.txt:134 ../../ref/django-admin.txt:1279
msgid "collectstatic"
msgstr ""

# 43c4300b14b244c9b63d3a21ead5e7ee
#: ../../ref/contrib/staticfiles.txt:138
msgid "Collects the static files into :setting:`STATIC_ROOT`."
msgstr ""

# 79c35f8d4d2942048ea73acc10e542a4
#: ../../ref/contrib/staticfiles.txt:140
msgid ""
"Duplicate file names are by default resolved in a similar way to how "
"template resolution works: the file that is first found in one of the "
"specified locations will be used. If you're confused, the :djadmin:"
"`findstatic` command can help show you which files are found."
msgstr ""

# f7f9fb4afebd4df6a7e15810f571ef37
#: ../../ref/contrib/staticfiles.txt:145
msgid ""
"Files are searched by using the :setting:`enabled finders "
"<STATICFILES_FINDERS>`. The default is to look in all locations defined in :"
"setting:`STATICFILES_DIRS` and in the ``'static'`` directory of apps "
"specified by the :setting:`INSTALLED_APPS` setting."
msgstr ""

# 52bd6e46962a4996a4f3f2ad1830f1e9
#: ../../ref/contrib/staticfiles.txt:152
msgid ""
"The :djadmin:`collectstatic` management command calls the :meth:`~django."
"contrib.staticfiles.storage.StaticFilesStorage.post_process` method of the :"
"setting:`STATICFILES_STORAGE` after each run and passes a list of paths that "
"have been found by the management command. It also receives all command line "
"options of :djadmin:`collectstatic`. This is used by the :class:`~django."
"contrib.staticfiles.storage.CachedStaticFilesStorage` by default."
msgstr ""

# cd5a4704201d47f4b730a7f42eea178a
#: ../../ref/contrib/staticfiles.txt:160
msgid "Some commonly used options are:"
msgstr ""

# be540f9558e04d118fd47d6f3c806ab1
#: ../../ref/contrib/staticfiles.txt:164
msgid "Do NOT prompt the user for input of any kind."
msgstr ""

# d1af0903a5cb4cc980787d4ad897b125
#: ../../ref/contrib/staticfiles.txt:169
msgid ""
"Ignore files or directories matching this glob-style pattern. Use multiple "
"times to ignore more."
msgstr ""

# e3d8233e82c3411f91a670a5268abe64
#: ../../ref/contrib/staticfiles.txt:175
msgid "Do everything except modify the filesystem."
msgstr ""

# fbf0b1131c4b4d34aefc0733b9fc67f2
#: ../../ref/contrib/staticfiles.txt:182
msgid ""
"Clear the existing files before trying to copy or link the original file."
msgstr ""

# 3577f1c28e264a0a9df949087d165315
#: ../../ref/contrib/staticfiles.txt:187
msgid "Create a symbolic link to each file instead of copying."
msgstr ""

# f3de2725d1c84d8b96f332a2fb083d3e
#: ../../ref/contrib/staticfiles.txt:193
msgid ""
"Don't call the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method of the configured :setting:`STATICFILES_STORAGE` "
"storage backend."
msgstr ""

# 0c860692fec44e8488b47e52a4d367f5
#: ../../ref/contrib/staticfiles.txt:199
msgid ""
"Don't ignore the common private glob-style patterns ``'CVS'``, ``'.*'`` and "
"``'*~'``."
msgstr ""

# 1a4e00fe21b34f32938427285c5f104d
#: ../../ref/contrib/staticfiles.txt:202
msgid "For a full list of options, refer to the commands own help by running::"
msgstr ""

# 88a9c9bdf1534608a85c02328b41a9c4
# 187721b3a26446cba6307ce2a11ff042
#: ../../ref/contrib/staticfiles.txt:207 ../../ref/django-admin.txt:1288
msgid "findstatic"
msgstr ""

# 40248e3e4d094485bd8171f932beacef
#: ../../ref/contrib/staticfiles.txt:211
msgid "Searches for one or more relative paths with the enabled finders."
msgstr ""

# 2b962271ebbc4b5a8f47ee677f7781a9
#: ../../ref/contrib/staticfiles.txt:220
msgid ""
"By default, all matching locations are found. To only return the first match "
"for each relative path, use the ``--first`` option::"
msgstr ""

# b91bd7f0c53c44d88faf7f00dd26e735
#: ../../ref/contrib/staticfiles.txt:226
msgid ""
"This is a debugging aid; it'll show you exactly which static file will be "
"collected for a given path."
msgstr ""

# 750d0c9ebb2e43cf9c5ff40add5ce296
#: ../../ref/contrib/staticfiles.txt:232
msgid "runserver"
msgstr ""

# bad1647726184eda923e16541e4878e8
#: ../../ref/contrib/staticfiles.txt:236
msgid ""
"Overrides the core :djadmin:`runserver` command if the ``staticfiles`` app "
"is :setting:`installed<INSTALLED_APPS>` and adds automatic serving of static "
"files and the following new options."
msgstr ""

# e43598c8af9d43b6bfe0142648ad9311
#: ../../ref/contrib/staticfiles.txt:242
msgid ""
"Use the ``--nostatic`` option to disable serving of static files with the :"
"doc:`staticfiles </ref/contrib/staticfiles>` app entirely. This option is "
"only available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is "
"in your project's :setting:`INSTALLED_APPS` setting."
msgstr ""

# 5123b72e91384fc9926038d574e93f92
# 53a4784189ae4a1fbbacc5702be7355b
# 13bf171fc51347329be89d9866643a1d
# 1b06feabac0644a9af8306a4a7f0128e
# 73928bf3e5304632ac858622249e7128
# 8295789e8b1a4ea6bacbaf13f923967d
# c161b05ccfa646b192cae82c728e7de6
# 6fff8e7c9d8f4947b419aa0b422cfaf8
# a8bb1ce7b14b41a491eed974a0555b16
# b5f5cdb8eda74edeb6afdb14fd753f21
# 66788cae49e040ff928121850089ff87
# 486f2720be62449ba5bbeb13ed04a6ae
# 1da90a48860f469780ab04c521ca6228
# d3df00dcc6fb49f7ab0c6dd76e3b7a6b
# 465a266312bd4f86b35bcba435058ea0
# 8d764d8d9c494bfeb718d8434c0e8a0b
# d77c326898484c48b52d4437195f6cc0
#: ../../ref/contrib/staticfiles.txt:247 ../../ref/contrib/staticfiles.txt:261
#: ../../ref/django-admin.txt:114 ../../ref/django-admin.txt:448
#: ../../ref/django-admin.txt:457 ../../ref/django-admin.txt:467
#: ../../ref/django-admin.txt:484 ../../ref/django-admin.txt:495
#: ../../ref/django-admin.txt:635 ../../ref/django-admin.txt:697
#: ../../ref/django-admin.txt:715 ../../ref/django-admin.txt:1204
#: ../../ref/django-admin.txt:1304 ../../ref/django-admin.txt:1319
#: ../../ref/django-admin.txt:1333 ../../ref/django-admin.txt:1343
#: ../../ref/templates/builtins.txt:879
msgid "Example usage::"
msgstr ""

# 93b79e0a1aad451f95aa1d4ae0463e95
#: ../../ref/contrib/staticfiles.txt:255
msgid ""
"Use the ``--insecure`` option to force serving of static files with the :doc:"
"`staticfiles </ref/contrib/staticfiles>` app even if the :setting:`DEBUG` "
"setting is ``False``. By using this you acknowledge the fact that it's "
"**grossly inefficient** and probably **insecure**. This is only intended for "
"local development, should **never be used in production** and is only "
"available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is in "
"your project's :setting:`INSTALLED_APPS` setting. :djadmin:`runserver` ``--"
"insecure`` doesn't work with :class:`~django.contrib.staticfiles.storage."
"CachedStaticFilesStorage`."
msgstr ""

# 0bb89976c0144d48a1f180f7880e0397
#: ../../ref/contrib/staticfiles.txt:266
msgid "Storages"
msgstr ""

# 1053cd7d4ea14077a69426d707f1e9a0
#: ../../ref/contrib/staticfiles.txt:269
msgid "StaticFilesStorage"
msgstr ""

# caff6a025f8440f6b1c23b45d900a8c2
#: ../../ref/contrib/staticfiles.txt:273
msgid ""
"A subclass of the :class:`~django.core.files.storage.FileSystemStorage` "
"storage backend that uses the :setting:`STATIC_ROOT` setting as the base "
"file system location and the :setting:`STATIC_URL` setting respectively as "
"the base URL."
msgstr ""

# c0156a42926c42ca99e7256f95326860
#: ../../ref/contrib/staticfiles.txt:282
msgid ""
"This method is called by the :djadmin:`collectstatic` management command "
"after each run and gets passed the local storages and paths of found files "
"as a dictionary, as well as the command line options."
msgstr ""

# cd37a427f2ff40659383fa2f92b4955f
#: ../../ref/contrib/staticfiles.txt:286
msgid ""
"The :class:`~django.contrib.staticfiles.storage.CachedStaticFilesStorage` "
"uses this behind the scenes to replace the paths with their hashed "
"counterparts and update the cache appropriately."
msgstr ""

# d336ab5649ef4c349efcbc6619be9f20
#: ../../ref/contrib/staticfiles.txt:291
msgid "CachedStaticFilesStorage"
msgstr ""

# 3c440d07fa3344c0b8859887ef0dfbb7
#: ../../ref/contrib/staticfiles.txt:297
msgid ""
"A subclass of the :class:`~django.contrib.staticfiles.storage."
"StaticFilesStorage` storage backend which caches the files it saves by "
"appending the MD5 hash of the file's content to the filename. For example, "
"the file ``css/styles.css`` would also be saved as ``css/styles.55e7cbb9ba48."
"css``."
msgstr ""

# c5cc24938eb14be8b81c4338f519ad7a
#: ../../ref/contrib/staticfiles.txt:302
msgid ""
"The purpose of this storage is to keep serving the old files in case some "
"pages still refer to those files, e.g. because they are cached by you or a "
"3rd party proxy server. Additionally, it's very helpful if you want to apply "
"`far future Expires headers`_ to the deployed files to speed up the load "
"time for subsequent page visits."
msgstr ""

# d276a270484a41858959b4cd4d6b7219
#: ../../ref/contrib/staticfiles.txt:308
msgid ""
"The storage backend automatically replaces the paths found in the saved "
"files matching other saved files with the path of the cached copy (using "
"the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method). The regular expressions used to find those paths "
"(``django.contrib.staticfiles.storage.CachedStaticFilesStorage."
"cached_patterns``) by default cover the `@import`_ rule and `url()`_ "
"statement of `Cascading Style Sheets`_. For example, the ``'css/styles."
"css'`` file with the content"
msgstr ""

# 3fb8ac600f93440ebf3452d17855649b
#: ../../ref/contrib/staticfiles.txt:321
msgid ""
"would be replaced by calling the :meth:`~django.core.files.storage.Storage."
"url` method of the ``CachedStaticFilesStorage`` storage backend, "
"ultimatively saving a ``'css/styles.55e7cbb9ba48.css'`` file with the "
"following content:"
msgstr ""

# 0b0cfb8e8fc64e0ca7bec7792cd695ae
#: ../../ref/contrib/staticfiles.txt:331
msgid ""
"To enable the ``CachedStaticFilesStorage`` you have to make sure the "
"following requirements are met:"
msgstr ""

# 2916a49eebea4f90a059180a44ab8de6
#: ../../ref/contrib/staticfiles.txt:334
msgid ""
"the :setting:`STATICFILES_STORAGE` setting is set to ``'django.contrib."
"staticfiles.storage.CachedStaticFilesStorage'``"
msgstr ""

# b25e2cb1ba4241588e60075ee2310a31
#: ../../ref/contrib/staticfiles.txt:336
msgid "the :setting:`DEBUG` setting is set to ``False``"
msgstr ""

# 79ed2d0e02bf4723a8cd64b19a38a2f3
#: ../../ref/contrib/staticfiles.txt:337
msgid ""
"you use the ``staticfiles`` :ttag:`static<staticfiles-static>` template tag "
"to refer to your static files in your templates"
msgstr ""

# 4cff8f6e80844af1af5e18837fbc5398
#: ../../ref/contrib/staticfiles.txt:339
msgid ""
"you've collected all your static files by using the :djadmin:`collectstatic` "
"management command"
msgstr ""

# 5759a6b5c59e4c8784d021aa43f4fc39
#: ../../ref/contrib/staticfiles.txt:342
msgid ""
"Since creating the MD5 hash can be a performance burden to your website "
"during runtime, ``staticfiles`` will automatically try to cache the hashed "
"name for each file path using Django's :doc:`caching framework</topics/"
"cache>`. If you want to override certain options of the cache backend the "
"storage uses, simply specify a custom entry in the :setting:`CACHES` setting "
"named ``'staticfiles'``. It falls back to using the ``'default'`` cache "
"backend."
msgstr ""

# 623f551e785749eabfe66166c869f0a0
#: ../../ref/contrib/staticfiles.txt:354
msgid ""
"The method that is used when creating the hashed name of a file. Needs to "
"return a hash for the given file name and content. By default it calculates "
"a MD5 hash from the content's chunks as mentioned above."
msgstr ""

# c3e6fcef25da42e98b8c0f3f673576f4
# 6264e3de024843b78d3f8f45407568d5
# 9d87af4cd55b47498448dadc6bf4f6a9
#: ../../ref/contrib/staticfiles.txt:370 ../../ref/templates/builtins.txt:2351
#: ../../ref/templates/builtins.txt:2356
msgid "static"
msgstr ""

# f88f9fe38bbc460ea66ad03a6f61cc11
#: ../../ref/contrib/staticfiles.txt:376
msgid ""
"Uses the configured :setting:`STATICFILES_STORAGE` storage to create the "
"full URL for the given relative path, e.g.:"
msgstr ""

# 1e35dc835ff3458ab7c1667773402845
#: ../../ref/contrib/staticfiles.txt:384
msgid ""
"The previous example is equal to calling the ``url`` method of an instance "
"of :setting:`STATICFILES_STORAGE` with ``\"images/hi.jpg\"``. This is "
"especially useful when using a non-local storage backend to deploy files as "
"documented in :ref:`staticfiles-from-cdn`."
msgstr ""

# 669820369bdc408da03fe7eb836553a7
#: ../../ref/contrib/staticfiles.txt:391
msgid ""
"If you'd like to retrieve a static URL without displaying it, you can use a "
"slightly different call:"
msgstr ""

# b7bbb8e5692442e09c808fe8d0231da1
#: ../../ref/contrib/staticfiles.txt:401
msgid "Other Helpers"
msgstr ""

# 6f610193e6514d3e9a773568a7ce44af
#: ../../ref/contrib/staticfiles.txt:403
msgid ""
"There are a few other helpers outside of the :mod:`staticfiles <django."
"contrib.staticfiles>` app to work with static files:"
msgstr ""

# 3c52f78527784e2abd5fba5d03486450
#: ../../ref/contrib/staticfiles.txt:407
msgid ""
"The :func:`django.core.context_processors.static` context processor which "
"adds :setting:`STATIC_URL` to every template context rendered with :class:"
"`~django.template.RequestContext` contexts."
msgstr ""

# d929d2a0eac44caa966f38c1ad687228
#: ../../ref/contrib/staticfiles.txt:411
msgid ""
"The builtin template tag :ttag:`static` which takes a path and urljoins it "
"with the static prefix :setting:`STATIC_URL`."
msgstr ""

# fe3f8607952e4cdcae86cc28dee87238
#: ../../ref/contrib/staticfiles.txt:414
msgid ""
"The builtin template tag :ttag:`get_static_prefix` which populates a "
"template variable with the static prefix :setting:`STATIC_URL` to be used as "
"a variable or directly."
msgstr ""

# 2ec6669e20f54e5a82ece1ec1d1d67ba
#: ../../ref/contrib/staticfiles.txt:418
msgid ""
"The similar template tag :ttag:`get_media_prefix` which works like :ttag:"
"`get_static_prefix` but uses :setting:`MEDIA_URL`."
msgstr ""

# 40f7930ee25b416e8ebe36d34b1b0eb0
#: ../../ref/contrib/staticfiles.txt:424
msgid "Static file development view"
msgstr ""

# 69d521084b854d9dab5cd9548206e57c
#: ../../ref/contrib/staticfiles.txt:428
msgid ""
"The static files tools are mostly designed to help with getting static files "
"successfully deployed into production. This usually means a separate, "
"dedicated static file server, which is a lot of overhead to mess with when "
"developing locally. Thus, the ``staticfiles`` app ships with a **quick and "
"dirty helper view** that you can use to serve files locally in development."
msgstr ""

# 9e1755dc924d4ca5b62281d0d31f6274
#: ../../ref/contrib/staticfiles.txt:439
msgid "This view function serves static files in development."
msgstr ""

# 67004247790b4dc18c8239b809f956be
#: ../../ref/contrib/staticfiles.txt:443
msgid "This view will only work if :setting:`DEBUG` is ``True``."
msgstr ""

# 90b8471bd6a64d50bca8102fa3f24670
# 7188689a33aa4d2f88c350b5910725fd
#: ../../ref/contrib/staticfiles.txt:445 ../../ref/contrib/staticfiles.txt:490
msgid ""
"That's because this view is **grossly inefficient** and probably "
"**insecure**. This is only intended for local development, and should "
"**never be used in production**."
msgstr ""

# 8d05c655554c41a6921e0d4b661beb79
#: ../../ref/contrib/staticfiles.txt:449
msgid ""
"This view is automatically enabled by :djadmin:`runserver` (with a :setting:"
"`DEBUG` setting set to ``True``). To use the view with a different local "
"development server, add the following snippet to the end of your primary URL "
"configuration::"
msgstr ""

# 3fb1e072d68c48edb52c48456e6cae47
#: ../../ref/contrib/staticfiles.txt:461
msgid ""
"Note, the beginning of the pattern (``r'^static/'``) should be your :setting:"
"`STATIC_URL` setting."
msgstr ""

# 3bcc0ef213354481a32ed5b60095bd9f
#: ../../ref/contrib/staticfiles.txt:464
msgid ""
"Since this is a bit finicky, there's also a helper function that'll do this "
"for you:"
msgstr ""

# 02a1822b6118424c8b2fa48292973aa8
#: ../../ref/contrib/staticfiles.txt:469
msgid ""
"This will return the proper URL pattern for serving static files to your "
"already defined pattern list. Use it like this::"
msgstr ""

# af8652eff5914f838eaf3d4c0bccd345
#: ../../ref/contrib/staticfiles.txt:478
msgid ""
"This will inspect your :setting:`STATIC_URL` setting and wire up the view to "
"serve static files accordingly. Don't forget to set the :setting:"
"`STATICFILES_DIRS` setting appropriately to let ``django.contrib."
"staticfiles`` know where to look for files in addition to files in app "
"directories."
msgstr ""

# b3784977a2604e708ad19cc2e718766d
#: ../../ref/contrib/staticfiles.txt:486
msgid ""
"This helper function will only work if :setting:`DEBUG` is ``True`` and "
"your :setting:`STATIC_URL` setting is neither empty nor a full URL such as "
"``http://static.example.com/``."
msgstr ""

# a1799478767d454caf9978b7175c994d
#: ../../ref/contrib/syndication.txt:3
msgid "The syndication feed framework"
msgstr ""

# eb8cd71fae554801b19ca14756f42664
#: ../../ref/contrib/syndication.txt:9
msgid ""
"Django comes with a high-level syndication-feed-generating framework that "
"makes creating RSS_ and Atom_ feeds easy."
msgstr ""

# b2724e8cc97347fcac54a6799bf25625
#: ../../ref/contrib/syndication.txt:12
msgid ""
"To create any syndication feed, all you have to do is write a short Python "
"class. You can create as many feeds as you want."
msgstr ""

# c3217399416342dcb0ab41dc7dedc045
#: ../../ref/contrib/syndication.txt:15
msgid ""
"Django also comes with a lower-level feed-generating API. Use this if you "
"want to generate feeds outside of a Web context, or in some other lower-"
"level way."
msgstr ""

# b18282de43bd4634bc6b1b0236416c9f
#: ../../ref/contrib/syndication.txt:23
msgid "The high-level framework"
msgstr ""

# 67e66479ad03421387770db7b1802c68
#: ../../ref/contrib/syndication.txt:28
msgid ""
"The high-level feed-generating framework is supplied by the :class:`~django."
"contrib.syndication.views.Feed` class. To create a feed, write a :class:"
"`~django.contrib.syndication.views.Feed` class and point to an instance of "
"it in your :doc:`URLconf </topics/http/urls>`."
msgstr ""

# 5612461959354938859e5aff27fbe795
#: ../../ref/contrib/syndication.txt:35
msgid "Feed classes"
msgstr ""

# 8d1edf4b963d43f1bcf6d682df5929c8
#: ../../ref/contrib/syndication.txt:37
msgid ""
"A :class:`~django.contrib.syndication.views.Feed` class is a Python class "
"that represents a syndication feed. A feed can be simple (e.g., a \"site news"
"\" feed, or a basic feed displaying the latest entries of a blog) or more "
"complex (e.g., a feed displaying all the blog entries in a particular "
"category, where the category is variable)."
msgstr ""

# 05d0e5d9bccc49a8ad0b76f1e479be39
#: ../../ref/contrib/syndication.txt:43
msgid ""
"Feed classes subclass :class:`django.contrib.syndication.views.Feed`. They "
"can live anywhere in your codebase."
msgstr ""

# e1641bef6f494da2b39dc584625bd800
#: ../../ref/contrib/syndication.txt:46
msgid ""
"Instances of :class:`~django.contrib.syndication.views.Feed` classes are "
"views which can be used in your :doc:`URLconf </topics/http/urls>`."
msgstr ""

# 98f7d14592144e25b600b316eb788bb8
#: ../../ref/contrib/syndication.txt:52
msgid ""
"This simple example, taken from a hypothetical police beat news site "
"describes a feed of the latest five news items::"
msgstr ""

# 3c020dfbaa8d474195146a5ede0753cd
#: ../../ref/contrib/syndication.txt:77
msgid ""
"To connect a URL to this feed, put an instance of the Feed object in your :"
"doc:`URLconf </topics/http/urls>`. For example::"
msgstr ""

# db5df54f3ada4d6db81ebfc41a9407fe
#: ../../ref/contrib/syndication.txt:91
msgid ""
"The Feed class subclasses :class:`django.contrib.syndication.views.Feed`."
msgstr ""

# a8fdab7b8a9349a69e3c11b240692a57
#: ../../ref/contrib/syndication.txt:93
msgid ""
"``title``, ``link`` and ``description`` correspond to the standard RSS "
"``<title>``, ``<link>`` and ``<description>`` elements, respectively."
msgstr ""

# d3e6e19be04e46ab8973173a49430eb6
#: ../../ref/contrib/syndication.txt:97
msgid ""
"``items()`` is, simply, a method that returns a list of objects that should "
"be included in the feed as ``<item>`` elements. Although this example "
"returns ``NewsItem`` objects using Django's :doc:`object-relational mapper </"
"ref/models/querysets>`, ``items()`` doesn't have to return model instances. "
"Although you get a few bits of functionality \"for free\" by using Django "
"models, ``items()`` can return any type of object you want."
msgstr ""

# a8aff5c0b6484f6ba040ff35928b4247
#: ../../ref/contrib/syndication.txt:105
msgid ""
"If you're creating an Atom feed, rather than an RSS feed, set the "
"``subtitle`` attribute instead of the ``description`` attribute. See "
"`Publishing Atom and RSS feeds in tandem`_, later, for an example."
msgstr ""

# 99bbb3e8c685452e8c919ecfb531e820
#: ../../ref/contrib/syndication.txt:109
msgid ""
"One thing is left to do. In an RSS feed, each ``<item>`` has a ``<title>``, "
"``<link>`` and ``<description>``. We need to tell the framework what data to "
"put into those elements."
msgstr ""

# 1f7b69f2491343b2af6a32e266c477cd
#: ../../ref/contrib/syndication.txt:113
msgid ""
"For the contents of ``<title>`` and ``<description>``, Django tries calling "
"the methods ``item_title()`` and ``item_description()`` on the :class:"
"`~django.contrib.syndication.views.Feed` class. They are passed a single "
"parameter, ``item``, which is the object itself. These are optional; by "
"default, the unicode representation of the object is used for both."
msgstr ""

# 36d9115478334e7282c4a959410606ed
#: ../../ref/contrib/syndication.txt:120
msgid ""
"If you want to do any special formatting for either the title or "
"description, :doc:`Django templates </topics/templates>` can be used "
"instead. Their paths can be specified with the ``title_template`` and "
"``description_template`` attributes on the :class:`~django.contrib."
"syndication.views.Feed` class. The templates are rendered for each item and "
"are passed two template context variables:"
msgstr ""

# 634ce07fef654807a9330c406c802e15
#: ../../ref/contrib/syndication.txt:127
msgid ""
"``{{ obj }}`` -- The current object (one of whichever objects you returned "
"in ``items()``)."
msgstr ""

# 2995066497cc4e60be8b937db1ec23cd
#: ../../ref/contrib/syndication.txt:130
msgid ""
"``{{ site }}`` -- A :class:`django.contrib.sites.models.Site` object "
"representing the current site. This is useful for ``{{ site.domain }}`` or "
"``{{ site.name }}``. If you do *not* have the Django sites framework "
"installed, this will be set to a :class:`django.contrib.sites.models."
"RequestSite` object. See the :ref:`RequestSite section of the sites "
"framework documentation <requestsite-objects>` for more."
msgstr ""

# 01b19b1822284ae0ada09886313ee7e5
#: ../../ref/contrib/syndication.txt:138
msgid "See `a complex example`_ below that uses a description template."
msgstr ""

# 9a26e3a6dce84706a273b23f3363ee64
#: ../../ref/contrib/syndication.txt:140
msgid ""
"To specify the contents of ``<link>``, you have two options. For each item "
"in ``items()``, Django first tries calling the ``item_link()`` method on "
"the :class:`~django.contrib.syndication.views.Feed` class. In a similar way "
"to the title and description, it is passed it a single parameter, ``item``. "
"If that method doesn't exist, Django tries executing a "
"``get_absolute_url()`` method on that object. Both ``get_absolute_url()`` "
"and ``item_link()`` should return the item's URL as a normal Python string. "
"As with ``get_absolute_url()``, the result of ``item_link()`` will be "
"included directly in the URL, so you are responsible for doing all necessary "
"URL quoting and conversion to ASCII inside the method itself."
msgstr ""

# dc17bc2126434e39ad3ee7af92873d49
#: ../../ref/contrib/syndication.txt:156
msgid "A complex example"
msgstr ""

# 79c164f80c4b43cf9b27ea95c90769ee
#: ../../ref/contrib/syndication.txt:158
msgid "The framework also supports more complex feeds, via arguments."
msgstr ""

# 98ec268b143f451e8963ee537dfd6e46
#: ../../ref/contrib/syndication.txt:158
msgid ""
"For example, a website could offer an RSS feed of recent crimes for every "
"police beat in a city. It'd be silly to create a separate :class:`~django."
"contrib.syndication.views.Feed` class for each police beat; that would "
"violate the :ref:`DRY principle <dry>` and would couple data to programming "
"logic. Instead, the syndication framework lets you access the arguments "
"passed from your :doc:`URLconf </topics/http/urls>` so feeds can output "
"items based on information in the feed's URL."
msgstr ""

# 97ec0a1f0e464620aa2451a79eaf41d5
#: ../../ref/contrib/syndication.txt:166
msgid "The police beat feeds could be accessible via URLs like this:"
msgstr ""

# 47d9da6c5ef945b48a6b41961e0f4746
#: ../../ref/contrib/syndication.txt:170
msgid ":file:`/beats/613/rss/` -- Returns recent crimes for beat 613."
msgstr ""

# f936e72e319d43ac89b59589601d07ad
#: ../../ref/contrib/syndication.txt:171
msgid ":file:`/beats/1424/rss/` -- Returns recent crimes for beat 1424."
msgstr ""

# fe354af02a0a4e56a2153ea6891768f7
#: ../../ref/contrib/syndication.txt:173
msgid ""
"These can be matched with a :doc:`URLconf </topics/http/urls>` line such as::"
msgstr ""

# 0d05a98046504198a8ca5982bcb6c2f1
#: ../../ref/contrib/syndication.txt:177
msgid ""
"Like a view, the arguments in the URL are passed to the ``get_object()`` "
"method along with the request object."
msgstr ""

# 4ebc7c2143304c2dbb03d79798dfa186
#: ../../ref/contrib/syndication.txt:180
msgid "Here's the code for these beat-specific feeds::"
msgstr ""

# 15080701ace4443b853149bdcfc46e26
#: ../../ref/contrib/syndication.txt:203
msgid ""
"To generate the feed's ``<title>``, ``<link>`` and ``<description>``, Django "
"uses the ``title()``, ``link()`` and ``description()`` methods. In the "
"previous example, they were simple string class attributes, but this example "
"illustrates that they can be either strings *or* methods. For each of "
"``title``, ``link`` and ``description``, Django follows this algorithm:"
msgstr ""

# e464f3c1b7594aacbe83332d511ac3e9
#: ../../ref/contrib/syndication.txt:210
msgid ""
"First, it tries to call a method, passing the ``obj`` argument, where "
"``obj`` is the object returned by ``get_object()``."
msgstr ""

# ab8d016e48dc426989c51b0eb013846c
#: ../../ref/contrib/syndication.txt:213
msgid "Failing that, it tries to call a method with no arguments."
msgstr ""

# ebf911d68fa848289af97aa0d0dd91f4
#: ../../ref/contrib/syndication.txt:215
msgid "Failing that, it uses the class attribute."
msgstr ""

# e24511f9c61f4cbdb63e39f16f9f5493
#: ../../ref/contrib/syndication.txt:217
msgid ""
"Also note that ``items()`` also follows the same algorithm -- first, it "
"tries ``items(obj)``, then ``items()``, then finally an ``items`` class "
"attribute (which should be a list)."
msgstr ""

# cf12fa94592e4a459f6e618f062818b6
#: ../../ref/contrib/syndication.txt:221
msgid ""
"We are using a template for the item descriptions. It can be very simple:"
msgstr ""

# a4415233c9f1452bb1b7f842932fdfbe
#: ../../ref/contrib/syndication.txt:227
msgid "However, you are free to add formatting as desired."
msgstr ""

# 5ab6b959638a48f993b0c683d538506c
#: ../../ref/contrib/syndication.txt:229
msgid ""
"The ``ExampleFeed`` class below gives full documentation on methods and "
"attributes of :class:`~django.contrib.syndication.views.Feed` classes."
msgstr ""

# 2035f252a70942e596096499c0a1dbb5
#: ../../ref/contrib/syndication.txt:233
msgid "Specifying the type of feed"
msgstr ""

# af99b9f0a2734bb5a5d89b0a0aa096c8
#: ../../ref/contrib/syndication.txt:235
msgid "By default, feeds produced in this framework use RSS 2.0."
msgstr ""

# c8e2419ecb8f4f97b3b25b85d29cf0cd
#: ../../ref/contrib/syndication.txt:237
msgid ""
"To change that, add a ``feed_type`` attribute to your :class:`~django."
"contrib.syndication.views.Feed` class, like so::"
msgstr ""

# 040cc78f5f014bbbbd2971ea116adf17
#: ../../ref/contrib/syndication.txt:245
msgid "Note that you set ``feed_type`` to a class object, not an instance."
msgstr ""

# 7d2b2a8c59e54afbaeedcd1369a8d607
#: ../../ref/contrib/syndication.txt:247
msgid "Currently available feed types are:"
msgstr ""

# eba0469c3af64604b4314b2a6d917f4f
#: ../../ref/contrib/syndication.txt:249
msgid ":class:`django.utils.feedgenerator.Rss201rev2Feed` (RSS 2.01. Default.)"
msgstr ""

# 796ae23db70749d6836c420d88b000a2
#: ../../ref/contrib/syndication.txt:250
msgid ":class:`django.utils.feedgenerator.RssUserland091Feed` (RSS 0.91.)"
msgstr ""

# 6e823ce399be4f3dbbf08342b0f40244
#: ../../ref/contrib/syndication.txt:251
msgid ":class:`django.utils.feedgenerator.Atom1Feed` (Atom 1.0.)"
msgstr ""

# 00cbea1a56eb4c95b49700e69aa59105
#: ../../ref/contrib/syndication.txt:254
msgid "Enclosures"
msgstr ""

# b09f204296ee4d019e80bfe79d9d8027
#: ../../ref/contrib/syndication.txt:256
msgid ""
"To specify enclosures, such as those used in creating podcast feeds, use the "
"``item_enclosure_url``, ``item_enclosure_length`` and "
"``item_enclosure_mime_type`` hooks. See the ``ExampleFeed`` class below for "
"usage examples."
msgstr ""

# 9f7f370146bf4e56a5c5a49232bc7ad5
#: ../../ref/contrib/syndication.txt:262
msgid "Language"
msgstr ""

# 2eae1273b6c04cc69e4445af8d792461
#: ../../ref/contrib/syndication.txt:264
msgid ""
"Feeds created by the syndication framework automatically include the "
"appropriate ``<language>`` tag (RSS 2.0) or ``xml:lang`` attribute (Atom). "
"This comes directly from your :setting:`LANGUAGE_CODE` setting."
msgstr ""

# 71db48d62d3f468588e4e8ce2d86bacd
#: ../../ref/contrib/syndication.txt:269
msgid "URLs"
msgstr ""

# b9eb77d934c34eaba32b7d10bcedbcf7
#: ../../ref/contrib/syndication.txt:271
msgid ""
"The ``link`` method/attribute can return either an absolute path (e.g. :file:"
"`\"/blog/\"`) or a URL with the fully-qualified domain and protocol (e.g. ``"
"\"http://www.example.com/blog/\"``). If ``link`` doesn't return the domain, "
"the syndication framework will insert the domain of the current site, "
"according to your :setting:`SITE_ID setting <SITE_ID>`."
msgstr ""

# 141edba89d7e46419b9c28179116471f
#: ../../ref/contrib/syndication.txt:277
msgid ""
"Atom feeds require a ``<link rel=\"self\">`` that defines the feed's current "
"location. The syndication framework populates this automatically, using the "
"domain of the current site according to the :setting:`SITE_ID` setting."
msgstr ""

# aa58b198d72a4a95bd846a638722c82a
#: ../../ref/contrib/syndication.txt:282
msgid "Publishing Atom and RSS feeds in tandem"
msgstr ""

# 93892d6fc19f4dd89e81efd8a072fb72
#: ../../ref/contrib/syndication.txt:284
msgid ""
"Some developers like to make available both Atom *and* RSS versions of their "
"feeds. That's easy to do with Django: Just create a subclass of your :class:"
"`~django.contrib.syndication.views.Feed` class and set the ``feed_type`` to "
"something different. Then update your URLconf to add the extra versions."
msgstr ""

# 8a7cf5b48f254cb68c9168774820798b
#: ../../ref/contrib/syndication.txt:290
msgid "Here's a full example::"
msgstr ""

# a1508a1fc4e440f694fa04fb7ab52728
#: ../../ref/contrib/syndication.txt:309
msgid ""
"In this example, the RSS feed uses a ``description`` while the Atom feed "
"uses a ``subtitle``. That's because Atom feeds don't provide for a feed-"
"level \"description,\" but they *do* provide for a \"subtitle.\""
msgstr ""

# 05d3fd476703462a9a9c4cfe45c17bee
#: ../../ref/contrib/syndication.txt:313
msgid ""
"If you provide a ``description`` in your :class:`~django.contrib.syndication."
"views.Feed` class, Django will *not* automatically put that into the "
"``subtitle`` element, because a subtitle and description are not necessarily "
"the same thing. Instead, you should define a ``subtitle`` attribute."
msgstr ""

# 5cc7fda60601494dadf5359422738db4
#: ../../ref/contrib/syndication.txt:319
msgid ""
"In the above example, we simply set the Atom feed's ``subtitle`` to the RSS "
"feed's ``description``, because it's quite short already."
msgstr ""

# e65c517df59b43f1bcf68a655c045dbb
#: ../../ref/contrib/syndication.txt:322
msgid "And the accompanying URLconf::"
msgstr ""

# 993f34d3600f43dd80e659a0736b47f3
#: ../../ref/contrib/syndication.txt:335
msgid "Feed class reference"
msgstr ""

# c1b0fd61dc784825b22f4096d1e34d25
#: ../../ref/contrib/syndication.txt:339
msgid ""
"This example illustrates all possible attributes and methods for a :class:"
"`~django.contrib.syndication.views.Feed` class::"
msgstr ""

# 08284af63132461e97c2fe9e799daf76
#: ../../ref/contrib/syndication.txt:785
msgid "The low-level framework"
msgstr ""

# 6c23cdb842fb468d900a1813cf601364
#: ../../ref/contrib/syndication.txt:787
msgid ""
"Behind the scenes, the high-level RSS framework uses a lower-level framework "
"for generating feeds' XML. This framework lives in a single module: `django/"
"utils/feedgenerator.py`_."
msgstr ""

# b33faa1d054a4e219ba73f1406b98eba
#: ../../ref/contrib/syndication.txt:791
msgid ""
"You use this framework on your own, for lower-level feed generation. You can "
"also create custom feed generator subclasses for use with the ``feed_type`` "
"``Feed`` option."
msgstr ""

# b85ac76ce5d842be922c8773834a5b8e
#: ../../ref/contrib/syndication.txt:798
msgid "``SyndicationFeed`` classes"
msgstr ""

# dde909e05921435f881dc6f6a21857d9
#: ../../ref/contrib/syndication.txt:800
msgid "The :mod:`~django.utils.feedgenerator` module contains a base class:"
msgstr ""

# 3793de4c570543f18def114201357fe5
#: ../../ref/contrib/syndication.txt:802
msgid ":class:`django.utils.feedgenerator.SyndicationFeed`"
msgstr ""

# c98c7fc2201b437caa61a3444d631e1c
#: ../../ref/contrib/syndication.txt:804
msgid "and several subclasses:"
msgstr ""

# 3616a056c4764483a504d98c47a289f1
#: ../../ref/contrib/syndication.txt:806
msgid ":class:`django.utils.feedgenerator.RssUserland091Feed`"
msgstr ""

# 0b9c3bfa9ed648459b287906557dd649
#: ../../ref/contrib/syndication.txt:807
msgid ":class:`django.utils.feedgenerator.Rss201rev2Feed`"
msgstr ""

# fe94f33a084744d6a655eb9cd23c4c1b
#: ../../ref/contrib/syndication.txt:808
msgid ":class:`django.utils.feedgenerator.Atom1Feed`"
msgstr ""

# 9e99a9727a124137aa7b202880ca8e1c
#: ../../ref/contrib/syndication.txt:810
msgid ""
"Each of these three classes knows how to render a certain type of feed as "
"XML. They share this interface:"
msgstr ""

# 0613d0d701f7449387d413f555d29798
#: ../../ref/contrib/syndication.txt:838
msgid ":meth:`.SyndicationFeed.__init__`"
msgstr ""

# 5bfb20cc0a4542a3af49134599a8fe0f
#: ../../ref/contrib/syndication.txt:814
msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed. Required keyword arguments are:"
msgstr ""

# c8f97e743ed64701af45fd30a60138cc
# 86a478f204bf4892bed1e6e9c4ed1afe
#: ../../ref/contrib/syndication.txt:817 ../../ref/contrib/syndication.txt:845
msgid "``title``"
msgstr ""

# 6f3f33c92ddf454fa061730e1c72e3c0
#: ../../ref/contrib/syndication.txt:821
msgid "There's also a bunch of other optional keywords:"
msgstr ""

# 2161ab5d5df0455cb1236368e1566cef
#: ../../ref/contrib/syndication.txt:823
msgid "``language``"
msgstr ""

# 6795ad19ce1b4ed69daa914b9afac77b
# 232a50bd6a004209b37cf2ccd40fc87c
#: ../../ref/contrib/syndication.txt:824 ../../ref/contrib/syndication.txt:851
msgid "``author_email``"
msgstr ""

# c999b510affb47719c6c52a8e74c4886
# 0123949658124a34bbfb6755c2b7cad4
#: ../../ref/contrib/syndication.txt:825 ../../ref/contrib/syndication.txt:852
msgid "``author_name``"
msgstr ""

# 0c6a3d0a64a24095aa1f4e73a4ee2a27
# d737a2a494a9499f882d7af7cee5b3eb
#: ../../ref/contrib/syndication.txt:826 ../../ref/contrib/syndication.txt:853
msgid "``author_link``"
msgstr ""

# e49c4805c09b4b6c9a0f24557c2d520a
#: ../../ref/contrib/syndication.txt:827
msgid "``subtitle``"
msgstr ""

# 163b40e985b54a51b66409c8652d633b
# fa2842d635dd437699d01b87188c7e2b
#: ../../ref/contrib/syndication.txt:828 ../../ref/contrib/syndication.txt:858
msgid "``categories``"
msgstr ""

# 75c9224e3bd74406b5bfa830816ea510
#: ../../ref/contrib/syndication.txt:829
msgid "``feed_url``"
msgstr ""

# 57d63652e5734240ab8ed96b1ec5c305
#: ../../ref/contrib/syndication.txt:830
msgid "``feed_copyright``"
msgstr ""

# f26f3f19b8164797b9e09acaf898a436
#: ../../ref/contrib/syndication.txt:831
msgid "``feed_guid``"
msgstr ""

# 45f321c79a6a4b0699151ad877f8523b
# 69a6fa3108444ce39e17ae3673a7850c
#: ../../ref/contrib/syndication.txt:832 ../../ref/contrib/syndication.txt:860
msgid "``ttl``"
msgstr ""

# 2ff19edf7e2e42d98bdb49ca9e293fa1
#: ../../ref/contrib/syndication.txt:834
msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed`` for use with `custom feed generators`_."
msgstr ""

# db366c4682824dca98380ffc6b78c8a7
# b147eb4b2c934282b9823c765468bb6d
#: ../../ref/contrib/syndication.txt:837 ../../ref/utils.txt:369
msgid ""
"All parameters should be Unicode objects, except ``categories``, which "
"should be a sequence of Unicode objects."
msgstr ""

# 94252a4b2c01491da0f8cf56060e326b
#: ../../ref/contrib/syndication.txt:869
msgid ":meth:`.SyndicationFeed.add_item`"
msgstr ""

# bf04963c9dc347a0a4f9657ca1e35592
#: ../../ref/contrib/syndication.txt:841
msgid "Add an item to the feed with the given parameters."
msgstr ""

# 76c941c1aaf54ae9abe7daecde8d5ef4
#: ../../ref/contrib/syndication.txt:843
msgid "Required keyword arguments are:"
msgstr ""

# 4efc11d2c3ee47c7b0e7b56ecc785ab1
#: ../../ref/contrib/syndication.txt:849
msgid "Optional keyword arguments are:"
msgstr ""

# a99a6d14179045d3a60664acce70f6f5
#: ../../ref/contrib/syndication.txt:854
msgid "``pubdate``"
msgstr ""

# d44d1769d7c64ebd8a0c6d485cb1f53d
#: ../../ref/contrib/syndication.txt:855
msgid "``comments``"
msgstr ""

# 1bbb9ed419d14ab39b015ffd7b963a42
#: ../../ref/contrib/syndication.txt:856
msgid "``unique_id``"
msgstr ""

# 96248dc28df8459483dd920daa8c54c6
#: ../../ref/contrib/syndication.txt:857
msgid "``enclosure``"
msgstr ""

# f8c0e2795ebb439c937f40a6afbbd9ef
#: ../../ref/contrib/syndication.txt:859
msgid "``item_copyright``"
msgstr ""

# 43e80897ac71469f9014d6c21edb66d0
#: ../../ref/contrib/syndication.txt:862
msgid "Extra keyword arguments will be stored for `custom feed generators`_."
msgstr ""

# 39eddee5c8134fc4aa903e3e5852f56d
#: ../../ref/contrib/syndication.txt:864
msgid "All parameters, if given, should be Unicode objects, except:"
msgstr ""

# 8c16f7bc39064d35a4c2fb9b2f361ca7
#: ../../ref/contrib/syndication.txt:866
msgid "``pubdate`` should be a Python  :class:`~datetime.datetime` object."
msgstr ""

# 2f61a6d6902e4a73917c9eb3322e0ab1
#: ../../ref/contrib/syndication.txt:867
msgid ""
"``enclosure`` should be an instance of :class:`django.utils.feedgenerator."
"Enclosure`."
msgstr ""

# 25bd89c3ad7f43e7b475ed4d7ef531af
#: ../../ref/contrib/syndication.txt:869
msgid "``categories`` should be a sequence of Unicode objects."
msgstr ""

# daab00431a284d8c92a6e7ab2ebaf0fd
#: ../../ref/contrib/syndication.txt:872
msgid ":meth:`.SyndicationFeed.write`"
msgstr ""

# 22bdce790973474da679113e60305a6e
#: ../../ref/contrib/syndication.txt:872
msgid ""
"Outputs the feed in the given encoding to outfile, which is a file-like "
"object."
msgstr ""

# 3b7016496aa040f99fef0cd088c55a28
#: ../../ref/contrib/syndication.txt:875
msgid ":meth:`.SyndicationFeed.writeString`"
msgstr ""

# 4db637d2da4e4c9780ba168c13b1ad7e
#: ../../ref/contrib/syndication.txt:875
msgid "Returns the feed as a string in the given encoding."
msgstr ""

# db0efd0b9f234e379bd7443ebf1dd8c4
#: ../../ref/contrib/syndication.txt:877
msgid ""
"For example, to create an Atom 1.0 feed and print it to standard output::"
msgstr ""

# fe85802008f044f3a3a7fdb3fe39d807
#: ../../ref/contrib/syndication.txt:903
msgid "Custom feed generators"
msgstr ""

# 693b98c49f2e477ba75f023eb38fcd70
#: ../../ref/contrib/syndication.txt:905
msgid ""
"If you need to produce a custom feed format, you've got a couple of options."
msgstr ""

# 7c362ffc2a574b3785f3444bf93638de
#: ../../ref/contrib/syndication.txt:907
msgid ""
"If the feed format is totally custom, you'll want to subclass "
"``SyndicationFeed`` and completely replace the ``write()`` and "
"``writeString()`` methods."
msgstr ""

# 2b5dccbabbef440fb0135c0b7768e6dc
#: ../../ref/contrib/syndication.txt:911
msgid ""
"However, if the feed format is a spin-off of RSS or Atom (i.e. GeoRSS_, "
"Apple's `iTunes podcast format`_, etc.), you've got a better choice. These "
"types of feeds typically add extra elements and/or attributes to the "
"underlying format, and there are a set of methods that ``SyndicationFeed`` "
"calls to get these extra attributes. Thus, you can subclass the appropriate "
"feed generator class (``Atom1Feed`` or ``Rss201rev2Feed``) and extend these "
"callbacks. They are:"
msgstr ""

# df60a9db856c45b28ab97f5b92e2dedd
#: ../../ref/contrib/syndication.txt:923
msgid "``SyndicationFeed.root_attributes(self, )``"
msgstr ""

# 893a4f6bcf2f45b5a8dca8cbe556938b
#: ../../ref/contrib/syndication.txt:922
msgid ""
"Return a ``dict`` of attributes to add to the root feed element (``feed``/"
"``channel``)."
msgstr ""

# f2800fd7a08640b49150acf72b79d1f7
#: ../../ref/contrib/syndication.txt:929
msgid "``SyndicationFeed.add_root_elements(self, handler)``"
msgstr ""

# d9c870ebfc874092af1532a8d39d58ef
#: ../../ref/contrib/syndication.txt:926
msgid ""
"Callback to add elements inside the root feed element (``feed``/"
"``channel``). ``handler`` is an :class:`~xml.sax.saxutils.XMLGenerator` from "
"Python's built-in SAX library; you'll call methods on it to add to the XML "
"document in process."
msgstr ""

# 15d39e6a7374445b83528c2ead7a5239
#: ../../ref/contrib/syndication.txt:934
msgid "``SyndicationFeed.item_attributes(self, item)``"
msgstr ""

# 13ed9dae9e0c41878e6383752436500d
#: ../../ref/contrib/syndication.txt:932
msgid ""
"Return a ``dict`` of attributes to add to each item (``item``/``entry``) "
"element. The argument, ``item``, is a dictionary of all the data passed to "
"``SyndicationFeed.add_item()``."
msgstr ""

# 8e49eac54bdf46d8979b35bf28978ac1
#: ../../ref/contrib/syndication.txt:938
msgid "``SyndicationFeed.add_item_elements(self, handler, item)``"
msgstr ""

# 8b1435f985824ea99c78793587e1f16e
#: ../../ref/contrib/syndication.txt:937
msgid ""
"Callback to add elements to each item (``item``/``entry``) element. "
"``handler`` and ``item`` are as above."
msgstr ""

# 1030f28a02c24f7fbc7d9d596e0c5e67
#: ../../ref/contrib/syndication.txt:942
msgid ""
"If you override any of these methods, be sure to call the superclass methods "
"since they add the required elements for each feed format."
msgstr ""

# 6c28f64fcf014142af9c9b72be1e91c0
#: ../../ref/contrib/syndication.txt:945
msgid ""
"For example, you might start implementing an iTunes RSS feed generator like "
"so::"
msgstr ""

# df6bff9f8f174eb6a7a0109575a4eedd
#: ../../ref/contrib/syndication.txt:957
msgid ""
"Obviously there's a lot more work to be done for a complete custom feed "
"class, but the above example should demonstrate the basic idea."
msgstr ""

# 0f72f3ceb3164d5fa304148dcec30b11
# 46e609790ebf43e29dd94f79fcb0dcf7
#: ../../ref/contrib/webdesign.txt:3 ../../ref/templates/builtins.txt:2345
msgid "django.contrib.webdesign"
msgstr ""

# a6d26796c42a45e8828f0c544405e246
#: ../../ref/contrib/webdesign.txt:9
msgid ""
"The ``django.contrib.webdesign`` package, part of the :doc:`\"django.contrib"
"\" add-ons </ref/contrib/index>`, provides various Django helpers that are "
"particularly useful to Web *designers* (as opposed to developers)."
msgstr ""

# 0a03af15a6c147caa22e1e4f447e8c33
#: ../../ref/contrib/webdesign.txt:14
msgid ""
"At present, the package contains only a single template tag. If you have "
"ideas for Web-designer-friendly functionality in Django, please :doc:"
"`suggest them </internals/contributing/index>`."
msgstr ""

# a756a00c8cbd40d5bc3c83ae87b6389e
#: ../../ref/contrib/webdesign.txt:21
msgid ""
"To use these template tags, add ``'django.contrib.webdesign'`` to your :"
"setting:`INSTALLED_APPS` setting. Once you've done that, use ``{% load "
"webdesign %}`` in a template to give your template access to the tags."
msgstr ""

# 50e523f312c24033a5c42fe0f936b016
#: ../../ref/contrib/webdesign.txt:27
msgid "lorem"
msgstr ""

# a89cc2063914437e828bb65ce6225249
#: ../../ref/contrib/webdesign.txt:29
msgid ""
"Displays random \"lorem ipsum\" Latin text. This is useful for providing "
"sample data in templates."
msgstr ""

# 3a91caf1f7c741f49d5ca097da0766de
#: ../../ref/contrib/webdesign.txt:36
msgid ""
"The ``{% lorem %}`` tag can be used with zero, one, two or three arguments. "
"The arguments are:"
msgstr ""

# 11cad59040a8482a8b36703956cc22e4
#: ../../ref/contrib/webdesign.txt:42
msgid "``count``"
msgstr ""

# c9a1f3e4abe943308f5228e90c053be9
#: ../../ref/contrib/webdesign.txt:42
msgid ""
"A number (or variable) containing the number of paragraphs or words to "
"generate (default is 1)."
msgstr ""

# d76d6b728443480895f9019f0814d7e8
#: ../../ref/contrib/webdesign.txt:44
msgid "``method``"
msgstr ""

# 28f0d6fdf7aa4a5b843c80d0def55037
#: ../../ref/contrib/webdesign.txt:44
msgid ""
"Either ``w`` for words, ``p`` for HTML paragraphs or ``b`` for plain-text "
"paragraph blocks (default is ``b``)."
msgstr ""

# 4fdfe6d6af6c469290265213586051a9
#: ../../ref/contrib/webdesign.txt:46
msgid "``random``"
msgstr ""

# 9464fc4b2d184eb7a5c13f0e82fbb71f
#: ../../ref/contrib/webdesign.txt:46
msgid ""
"The word ``random``, which if given, does not use the common paragraph "
"(\"Lorem ipsum dolor sit amet...\") when generating text."
msgstr ""

# 9bc905bc5cf5435dbcc02ce840397f03
#: ../../ref/contrib/webdesign.txt:53
msgid "``{% lorem %}`` will output the common \"lorem ipsum\" paragraph."
msgstr ""

# ab36091ec141441ab6e36d84699714f4
#: ../../ref/contrib/webdesign.txt:54
msgid ""
"``{% lorem 3 p %}`` will output the common \"lorem ipsum\" paragraph and two "
"random paragraphs each wrapped in HTML ``<p>`` tags."
msgstr ""

# 02ba30bd547c403cbc2ab233fcdb8791
#: ../../ref/contrib/webdesign.txt:56
msgid "``{% lorem 2 w random %}`` will output two random Latin words."
msgstr ""

# 9d92986b7dfc423ba898977e81975366
#: ../../ref/databases.txt:3
msgid "Databases"
msgstr ""

# 5121b168c33d43d4bafb1f8840a9f4f6
#: ../../ref/databases.txt:5
msgid ""
"Django attempts to support as many features as possible on all database "
"backends. However, not all database backends are alike, and we've had to "
"make design decisions on which features to support and which assumptions we "
"can make safely."
msgstr ""

# c0904425314d425794a100e56f3f7058
#: ../../ref/databases.txt:10
msgid ""
"This file describes some of the features that might be relevant to Django "
"usage. Of course, it is not intended as a replacement for server-specific "
"documentation or reference manuals."
msgstr ""

# 7adb55639af24c4fa0daf638cab0cf7e
#: ../../ref/databases.txt:17
msgid "PostgreSQL notes"
msgstr ""

# 797e2606486f470fb2e4ba88a347dea1
#: ../../ref/databases.txt:21
msgid "Django supports PostgreSQL 8.2 and higher."
msgstr ""

# 53395d07a44c4730be0ac7d872763882
#: ../../ref/databases.txt:24
msgid "PostgreSQL 8.2 to 8.2.4"
msgstr ""

# 5742ded6fa8a4595b09d48554b950301
#: ../../ref/databases.txt:26
msgid ""
"The implementation of the population statistics aggregates ``STDDEV_POP`` "
"and ``VAR_POP`` that shipped with PostgreSQL 8.2 to 8.2.4 are `known to be "
"faulty`_. Users of these releases of PostgreSQL are advised to upgrade to "
"`Release 8.2.5`_ or later. Django will raise a ``NotImplementedError`` if "
"you attempt to use the ``StdDev(sample=False)`` or "
"``Variance(sample=False)`` aggregate with a database backend that falls "
"within the affected release range."
msgstr ""

# 2045513c70094b69a7de07e58a34368f
#: ../../ref/databases.txt:37
msgid "PostgreSQL connection settings"
msgstr ""

# 56d09962355f41c68e14093f1f58af6d
#: ../../ref/databases.txt:39
msgid "See :setting:`HOST` for details."
msgstr ""

# 597ab83c2b614056a04ea4735b6a29b1
#: ../../ref/databases.txt:42
msgid "Optimizing PostgreSQL's configuration"
msgstr ""

# 28e64a512f654216b474182b16fd77ef
#: ../../ref/databases.txt:44
msgid "Django needs the following parameters for its database connections:"
msgstr ""

# 75481775482d4e17a5e630ccd20d86db
#: ../../ref/databases.txt:46
msgid "``client_encoding``: ``'UTF8'``,"
msgstr ""

# 4c5c956699ab4a288558c9a7f66d208e
#: ../../ref/databases.txt:47
msgid "``default_transaction_isolation``: ``'read committed'``,"
msgstr ""

# 546820366f3644db9350809be1685d30
#: ../../ref/databases.txt:48
msgid ""
"``timezone``: ``'UTC'`` when :setting:`USE_TZ` is ``True``, value of :"
"setting:`TIME_ZONE` otherwise."
msgstr ""

# 0b45f1a4b9fb46b58acbe48c5a4d5573
#: ../../ref/databases.txt:51
msgid ""
"If these parameters already have the correct values, Django won't set them "
"for every new connection, which improves performance slightly. You can "
"configure them directly in :file:`postgresql.conf` or more conveniently per "
"database user with `ALTER ROLE`_."
msgstr ""

# 33d8a84f17414844be0d69b0174e72c3
#: ../../ref/databases.txt:56
msgid ""
"Django will work just fine without this optimization, but each new "
"connection will do some additional queries to set these parameters."
msgstr ""

# 583e8bd0d5cd4cd3aae34b7cf38aea53
#: ../../ref/databases.txt:62
msgid "Transaction handling"
msgstr ""

# f1c3650afa894e4c8b8d6d36f1ad6849
#: ../../ref/databases.txt:64
msgid ""
":doc:`By default </topics/db/transactions>`, Django runs with an open "
"transaction which it commits automatically when any built-in, data-altering "
"model function is called. The PostgreSQL backends normally operate the same "
"as any other Django backend in this respect."
msgstr ""

# 26b836e974b841e194731b14e99fa8e8
#: ../../ref/databases.txt:72
msgid "Autocommit mode"
msgstr ""

# 4ad491b5541941d9b4ef51f1cb841cc7
#: ../../ref/databases.txt:74
msgid ""
"If your application is particularly read-heavy and doesn't make many "
"database writes, the overhead of a constantly open transaction can sometimes "
"be noticeable. For those situations, you can configure Django to use *"
"\"autocommit\"* behavior for the connection, meaning that each database "
"operation will normally be in its own transaction, rather than having the "
"transaction extend over multiple operations. In this case, you can still "
"manually start a transaction if you're doing something that requires "
"consistency across multiple database operations. The autocommit behavior is "
"enabled by setting the ``autocommit`` key in the :setting:`OPTIONS` part of "
"your database configuration in :setting:`DATABASES`::"
msgstr ""

# 91e1c3533efe4be79df6a60150e241d8
#: ../../ref/databases.txt:90
msgid ""
"In this configuration, Django still ensures that :ref:`delete() <topics-db-"
"queries-delete>` and :ref:`update() <topics-db-queries-update>` queries run "
"inside a single transaction, so that either all the affected objects are "
"changed or none of them are."
msgstr ""

# 23ae45da7ae94a5da2d393e8a5a73e07
#: ../../ref/databases.txt:95
msgid "This is database-level autocommit"
msgstr ""

# e606cb90c82d4ad1a2034dd1fe015243
#: ../../ref/databases.txt:97
msgid ""
"This functionality is not the same as the :ref:`autocommit <topics-db-"
"transactions-autocommit>` decorator. That decorator is a Django-level "
"implementation that commits automatically after data changing operations. "
"The feature enabled using the :setting:`OPTIONS` option provides autocommit "
"behavior at the database adapter level. It commits after *every* operation."
msgstr ""

# 023197fba1244549941241b777dac162
#: ../../ref/databases.txt:104
msgid ""
"If you are using this feature and performing an operation akin to delete or "
"updating that requires multiple operations, you are strongly recommended to "
"wrap you operations in manual transaction handling to ensure data "
"consistency. You should also audit your existing code for any instances of "
"this behavior before enabling this feature. It's faster, but it provides "
"less automatic protection for multi-call operations."
msgstr ""

# dfdbe216f17d454ab69708f3da8bdf20
#: ../../ref/databases.txt:112
msgid "Indexes for ``varchar`` and ``text`` columns"
msgstr ""

# c0f375d2764c41c89fc390236b5dee81
#: ../../ref/databases.txt:114
msgid ""
"When specifying ``db_index=True`` on your model fields, Django typically "
"outputs a single ``CREATE INDEX`` statement.  However, if the database type "
"for the field is either ``varchar`` or ``text`` (e.g., used by "
"``CharField``, ``FileField``, and ``TextField``), then Django will create an "
"additional index that uses an appropriate `PostgreSQL operator class`_ for "
"the column.  The extra index is necessary to correctly perform lookups that "
"use the ``LIKE`` operator in their SQL, as is done with the ``contains`` and "
"``startswith`` lookup types."
msgstr ""

# fb8feb9ce331486686d5a08ec3578ff1
#: ../../ref/databases.txt:128
msgid "MySQL notes"
msgstr ""

# 1a18b63ce7034357ac99007425e583ff
#: ../../ref/databases.txt:131
msgid "Version support"
msgstr ""

# 2a4d05b420fe4ead88e2f0fd86edd318
#: ../../ref/databases.txt:133
msgid "Django supports MySQL 5.0.3 and higher."
msgstr ""

# 8a289d88a293490097cf90613cffd786
#: ../../ref/databases.txt:135
msgid ""
"`MySQL 5.0`_ adds the ``information_schema`` database, which contains "
"detailed data on all database schema. Django's ``inspectdb`` feature uses it."
msgstr ""

# 18a2922713e340dbad702f6e260da5c3
#: ../../ref/databases.txt:141
msgid ""
"Django expects the database to support Unicode (UTF-8 encoding) and "
"delegates to it the task of enforcing transactions and referential "
"integrity. It is important to be aware of the fact that the two latter ones "
"aren't actually enforced by MySQL when using the MyISAM storage engine, see "
"the next section."
msgstr ""

# c63836db1a474a26aa2b1d7f5f0a2ac9
#: ../../ref/databases.txt:152
msgid "Storage engines"
msgstr ""

# 6d9c5af0125b4702a307316fad57584d
#: ../../ref/databases.txt:154
msgid ""
"MySQL has several `storage engines`_. You can change the default storage "
"engine in the server configuration."
msgstr ""

# 4cf770e8c0cc431f968aa143d01da2e7
#: ../../ref/databases.txt:157
msgid ""
"Until MySQL 5.5.4, the default engine was MyISAM_ [#]_. The main drawbacks "
"of MyISAM are that it doesn't support transactions or enforce foreign-key "
"constraints. On the plus side, it's currently the only engine that supports "
"full-text indexing and searching."
msgstr ""

# d9b8e86bdf354b51aaf618e1cf50960e
#: ../../ref/databases.txt:162
msgid ""
"Since MySQL 5.5.5, the default storage engine is InnoDB_. This engine is "
"fully transactional and supports foreign key references. It's probably the "
"best choice at this point. However, note that the the InnoDB autoincrement "
"counter is lost on a MySQL restart because it does not remember the "
"``AUTO_INCREMENT`` value, instead recreating it as \"max(id)+1\". This may "
"result in an inadvertent reuse of :class:`~django.db.models.AutoField` "
"values."
msgstr ""

# 67777a0b408c4e889edd545df5c1f61d
#: ../../ref/databases.txt:166
msgid ""
"If you upgrade an existing project to MySQL 5.5.5 and subsequently add some "
"tables, ensure that your tables are using the same storage engine (i.e. "
"MyISAM vs. InnoDB). Specifically, if tables that have a ``ForeignKey`` "
"between them use different storage engines, you may see an error like the "
"following when running ``syncdb``::"
msgstr ""

# 471cb2b7f7fa42019f21587c3662cb4a
#: ../../ref/databases.txt:178
msgid ""
"In previous versions of Django, fixtures with forward references (i.e. "
"relations to rows that have not yet been inserted into the database) would "
"fail to load when using the InnoDB storage engine. This was due to the fact "
"that InnoDB deviates from the SQL standard by checking foreign key "
"constraints immediately instead of deferring the check until the transaction "
"is committed. This problem has been resolved in Django 1.4. Fixture data is "
"now loaded with foreign key checks turned off; foreign key checks are then "
"re-enabled when the data has finished loading, at which point the entire "
"table is checked for invalid foreign key references and an `IntegrityError` "
"is raised if any are found."
msgstr ""

# a2cb0d6e64d747efad6153ab6f213f96
#: ../../ref/databases.txt:192
msgid ""
"Unless this was changed by the packager of your MySQL package. We've had "
"reports that the Windows Community Server installer sets up InnoDB as the "
"default storage engine, for example."
msgstr ""

# 1a0dbe822734480d9bd53455d3480cff
#: ../../ref/databases.txt:197
msgid "MySQLdb"
msgstr ""

# a8ff142235d9472faa90d97b76ceebf8
#: ../../ref/databases.txt:199
msgid ""
"`MySQLdb`_ is the Python interface to MySQL. Version 1.2.1p2 or later is "
"required for full MySQL support in Django."
msgstr ""

# f286ed4819cb44c8a3214b846ccb7832
#: ../../ref/databases.txt:203
msgid ""
"If you see ``ImportError: cannot import name ImmutableSet`` when trying to "
"use Django, your MySQLdb installation may contain an outdated ``sets.py`` "
"file that conflicts with the built-in module of the same name from Python "
"2.4 and later. To fix this, verify that you have installed MySQLdb version "
"1.2.1p2 or newer, then delete the ``sets.py`` file in the MySQLdb directory "
"that was left by an earlier version."
msgstr ""

# 2566ad756a2942cfa07c57f22d2a2f70
#: ../../ref/databases.txt:213
msgid "Python 3"
msgstr ""

# 1803d0d4fd4a4ef9be837ba2770778ec
#: ../../ref/databases.txt:215
msgid ""
"At the time of writing, the latest release of MySQLdb (1.2.4) doesn't "
"support Python 3. In order to use MySQL under Python 3, you'll have to "
"install an unofficial fork, such as `MySQL-for-Python-3`_."
msgstr ""

# 53e8450453644f9b92b6d6690eacc129
#: ../../ref/databases.txt:222
msgid "Creating your database"
msgstr ""

# 8db1e39b1f914994854c3d0d55fa6e4e
#: ../../ref/databases.txt:224
msgid ""
"You can `create your database`_ using the command-line tools and this SQL::"
msgstr ""

# ddc178b361cf4a1ea63fedab57643f80
#: ../../ref/databases.txt:228
msgid "This ensures all tables and columns will use UTF-8 by default."
msgstr ""

# 635a695350804d0b96a9cd4604784fd2
#: ../../ref/databases.txt:235
msgid "Collation settings"
msgstr ""

# 4a2d7ae923ee4ecba0f64d10d4b898fb
#: ../../ref/databases.txt:237
msgid ""
"The collation setting for a column controls the order in which data is "
"sorted as well as what strings compare as equal. It can be set on a database-"
"wide level and also per-table and per-column. This is `documented "
"thoroughly`_ in the MySQL documentation. In all cases, you set the collation "
"by directly manipulating the database tables; Django doesn't provide a way "
"to set this on the model definition."
msgstr ""

# 6bc48b9b672d4e6f835da8bbd3228190
#: ../../ref/databases.txt:246
msgid ""
"By default, with a UTF-8 database, MySQL will use the "
"``utf8_general_ci_swedish`` collation. This results in all string equality "
"comparisons being done in a *case-insensitive* manner. That is, ``\"Fred\"`` "
"and ``\"freD\"`` are considered equal at the database level. If you have a "
"unique constraint on a field, it would be illegal to try to insert both ``"
"\"aa\"`` and ``\"AA\"`` into the same column, since they compare as equal "
"(and, hence, non-unique) with the default collation."
msgstr ""

# c9f617f934b74bb2bd732386fede4b68
#: ../../ref/databases.txt:254
msgid ""
"In many cases, this default will not be a problem. However, if you really "
"want case-sensitive comparisons on a particular column or table, you would "
"change the column or table to use the ``utf8_bin`` collation. The main thing "
"to be aware of in this case is that if you are using MySQLdb 1.2.2, the "
"database backend in Django will then return bytestrings (instead of unicode "
"strings) for any character fields it receive from the database. This is a "
"strong variation from Django's normal practice of *always* returning unicode "
"strings. It is up to you, the developer, to handle the fact that you will "
"receive bytestrings if you configure your table(s) to use ``utf8_bin`` "
"collation. Django itself should mostly work smoothly with such columns "
"(except for the ``contrib.sessions`` ``Session`` and ``contrib.admin`` "
"``LogEntry`` tables described below), but your code must be prepared to call "
"``django.utils.encoding.smart_text()`` at times if it really wants to work "
"with consistent data -- Django will not do this for you (the database "
"backend layer and the model population layer are separated internally so the "
"database layer doesn't know it needs to make this conversion in this one "
"particular case)."
msgstr ""

# 7a3c3b2ed7f7413483e84ea2cde3c765
#: ../../ref/databases.txt:271
msgid ""
"If you're using MySQLdb 1.2.1p2, Django's standard :class:`~django.db.models."
"CharField` class will return unicode strings even with ``utf8_bin`` "
"collation. However, :class:`~django.db.models.TextField` fields will be "
"returned as an ``array.array`` instance (from Python's standard ``array`` "
"module). There isn't a lot Django can do about that, since, again, the "
"information needed to make the necessary conversions isn't available when "
"the data is read in from the database. This problem was `fixed in MySQLdb "
"1.2.2`_, so if you want to use :class:`~django.db.models.TextField` with "
"``utf8_bin`` collation, upgrading to version 1.2.2 and then dealing with the "
"bytestrings (which shouldn't be too difficult) as described above is the "
"recommended solution."
msgstr ""

# a88f27b1f99c47fa962eb5f0b0246935
#: ../../ref/databases.txt:283
msgid ""
"Should you decide to use ``utf8_bin`` collation for some of your tables with "
"MySQLdb 1.2.1p2 or 1.2.2, you should still use ``utf8_collation_ci_swedish`` "
"(the default) collation for the ``django.contrib.sessions.models.Session`` "
"table (usually called ``django_session``) and the ``django.contrib.admin."
"models.LogEntry`` table (usually called ``django_admin_log``). Those are the "
"two standard tables that use :class:`~django.db.models.TextField` internally."
msgstr ""

# c13f1e7c816e4c2c952312184b24d9f3
# dc1b54c804a941468ff55c45b6378a80
#: ../../ref/databases.txt:294 ../../ref/databases.txt:621
msgid "Connecting to the database"
msgstr ""

# 5bc3d34847ad4fb18ca151cd4d05b992
#: ../../ref/databases.txt:296
msgid "Refer to the :doc:`settings documentation </ref/settings>`."
msgstr ""

# 58dfbfaded3a44a18a64f1055dc2bd9d
#: ../../ref/databases.txt:298
msgid "Connection settings are used in this order:"
msgstr ""

# 5e02fe0c6f294bd89e62923bf527766d
#: ../../ref/databases.txt:300
msgid ":setting:`OPTIONS`."
msgstr ""

# 0aed5fb135d94a4894b502682e4091a3
#: ../../ref/databases.txt:301
msgid ""
":setting:`NAME`, :setting:`USER`, :setting:`PASSWORD`, :setting:`HOST`, :"
"setting:`PORT`"
msgstr ""

# c853d4f3eaaa41bb83a65032cb702525
#: ../../ref/databases.txt:303
msgid "MySQL option files."
msgstr ""

# 6c8f5648a72e47c99401380ca6789986
#: ../../ref/databases.txt:305
msgid ""
"In other words, if you set the name of the database in :setting:`OPTIONS`, "
"this will take precedence over :setting:`NAME`, which would override "
"anything in a `MySQL option file`_."
msgstr ""

# 4b3e5ebaf1994d0cb9406dcf9b36fa9a
#: ../../ref/databases.txt:309
msgid "Here's a sample configuration which uses a MySQL option file::"
msgstr ""

# d299fdc6539e4be1b26609ed19de4515
#: ../../ref/databases.txt:329
msgid ""
"Several other MySQLdb connection options may be useful, such as ``ssl``, "
"``init_command``, and ``sql_mode``. Consult the `MySQLdb documentation`_ for "
"more details."
msgstr ""

# ff843f2bc3a145a6b995f60609a1d4d2
#: ../../ref/databases.txt:337
msgid "Creating your tables"
msgstr ""

# b42ceef5a25f470eaaa61881ebf3d210
#: ../../ref/databases.txt:339
msgid ""
"When Django generates the schema, it doesn't specify a storage engine, so "
"tables will be created with whatever default storage engine your database "
"server is configured for. The easiest solution is to set your database "
"server's default storage engine to the desired engine."
msgstr ""

# 87d6b62d0dc74fe18278df5b74753738
#: ../../ref/databases.txt:344
msgid ""
"If you're using a hosting service and can't change your server's default "
"storage engine, you have a couple of options."
msgstr ""

# 538120834f084bbeaa2bb163292e0508
#: ../../ref/databases.txt:347
msgid ""
"After the tables are created, execute an ``ALTER TABLE`` statement to "
"convert a table to a new storage engine (such as InnoDB)::"
msgstr ""

# b139959123744153880379a85dc42cda
#: ../../ref/databases.txt:352
msgid "This can be tedious if you have a lot of tables."
msgstr ""

# 54287f21fd8b486c953df86e59c8ef8f
#: ../../ref/databases.txt:354
msgid ""
"Another option is to use the ``init_command`` option for MySQLdb prior to "
"creating your tables::"
msgstr ""

# 6855415e889644a0a133d75295300509
#: ../../ref/databases.txt:361
msgid ""
"This sets the default storage engine upon connecting to the database. After "
"your tables have been created, you should remove this option as it adds a "
"query that is only needed during table creation to each database connection."
msgstr ""

# da7a0dcd8a0a422d9b610e7fdbb60233
#: ../../ref/databases.txt:366
msgid ""
"Another method for changing the storage engine is described in "
"AlterModelOnSyncDB_."
msgstr ""

# bb7ca46cb04449e3a32ad5104cb8ba7b
# 3097db02e5ad4d9f9db53cd370c70189
#: ../../ref/databases.txt:372 ../../ref/models/options.txt:45
msgid "Table names"
msgstr ""

# 9d543b9b188940e58505ecd29c0f4737
#: ../../ref/databases.txt:374
msgid ""
"There are `known issues`_ in even the latest versions of MySQL that can "
"cause the case of a table name to be altered when certain SQL statements are "
"executed under certain conditions. It is recommended that you use lowercase "
"table names, if possible, to avoid any problems that might arise from this "
"behavior. Django uses lowercase table names when it auto-generates table "
"names from models, so this is mainly a consideration if you are overriding "
"the table name via the :class:`~django.db.models.Options.db_table` parameter."
msgstr ""

# d250cfda6a8542208992a803c5cc6847
#: ../../ref/databases.txt:385
msgid "Savepoints"
msgstr ""

# edc453f00be948319d86bb78bd916378
#: ../../ref/databases.txt:387
msgid ""
"Both the Django ORM and MySQL (when using the InnoDB :ref:`storage engine "
"<mysql-storage-engines>`) support database :ref:`savepoints <topics-db-"
"transactions-savepoints>`, but this feature wasn't available in Django until "
"version 1.4 when such supports was added."
msgstr ""

# 13fae4d5562d4861ab6963c96ac63bfb
#: ../../ref/databases.txt:392
msgid ""
"If you use the MyISAM storage engine please be aware of the fact that you "
"will receive database-generated errors if you try to use the :ref:`savepoint-"
"related methods of the transactions API <topics-db-transactions-"
"savepoints>`. The reason for this is that detecting the storage engine of a "
"MySQL database/table is an expensive operation so it was decided it isn't "
"worth to dynamically convert these methods in no-op's based in the results "
"of such detection."
msgstr ""

# c1d75cd37aaf44cda7a1db9873700cd0
#: ../../ref/databases.txt:400
msgid "Notes on specific fields"
msgstr ""

# 6a88c633a1884747846664927e974876
#: ../../ref/databases.txt:403
msgid "Character fields"
msgstr ""

# 4169e19a4ed64e76899ac0e092cf39f9
#: ../../ref/databases.txt:405
msgid ""
"Any fields that are stored with ``VARCHAR`` column types have their "
"``max_length`` restricted to 255 characters if you are using ``unique=True`` "
"for the field. This affects :class:`~django.db.models.CharField`, :class:"
"`~django.db.models.SlugField` and :class:`~django.db.models."
"CommaSeparatedIntegerField`."
msgstr ""

# 10af378876a7410fbc044ac541bf0658
#: ../../ref/databases.txt:412
msgid "DateTime fields"
msgstr ""

# b94ff433c7034da19ee1a240aaa91e2e
#: ../../ref/databases.txt:414
msgid ""
"MySQL does not have a timezone-aware column type. If an attempt is made to "
"store a timezone-aware ``time`` or ``datetime`` to a :class:`~django.db."
"models.TimeField` or :class:`~django.db.models.DateTimeField` respectively, "
"a ``ValueError`` is raised rather than truncating data."
msgstr ""

# 53d77788d14e468eb95bc1255480e764
#: ../../ref/databases.txt:419
msgid ""
"MySQL does not store fractions of seconds. Fractions of seconds are "
"truncated to zero when the time is stored."
msgstr ""

# e45e2efe0e4343368e3450329019b49f
#: ../../ref/databases.txt:423
msgid "Row locking with ``QuerySet.select_for_update()``"
msgstr ""

# ab392aa6bde74256abb2c912f9471ef6
#: ../../ref/databases.txt:425
msgid ""
"MySQL does not support the ``NOWAIT`` option to the ``SELECT ... FOR "
"UPDATE`` statement. If ``select_for_update()`` is used with ``nowait=True`` "
"then a ``DatabaseError`` will be raised."
msgstr ""

# b04e9c1a69ed4fb5833b11210cc5a539
#: ../../ref/databases.txt:432
msgid "SQLite notes"
msgstr ""

# fc20aaa0a5b64409b3da6e97c90803c6
#: ../../ref/databases.txt:434
msgid ""
"SQLite_ provides an excellent development alternative for applications that "
"are predominantly read-only or require a smaller installation footprint. As "
"with all database servers, though, there are some differences that are "
"specific to SQLite that you should be aware of."
msgstr ""

# 4c8bbd5fd36744ef9c1027ac490303bc
#: ../../ref/databases.txt:444
msgid "Substring matching and case sensitivity"
msgstr ""

# 193b43b45d7040b5a850faec5fde0d9f
#: ../../ref/databases.txt:446
msgid ""
"For all SQLite versions, there is some slightly counter-intuitive behavior "
"when attempting to match some types of strings.  These are triggered when "
"using the :lookup:`iexact` or :lookup:`contains` filters in Querysets. The "
"behavior splits into two cases:"
msgstr ""

# 647a7bf74b8046d5bf512fd1691baca9
#: ../../ref/databases.txt:451
msgid ""
"1. For substring matching, all matches are done case-insensitively. That is "
"a filter such as ``filter(name__contains=\"aa\")`` will match a name of ``"
"\"Aabb\"``."
msgstr ""

# 91e33ef3cee94fcaa3055b89592dcc2f
#: ../../ref/databases.txt:454
msgid ""
"2. For strings containing characters outside the ASCII range, all exact "
"string matches are performed case-sensitively, even when the case-"
"insensitive options are passed into the query. So the :lookup:`iexact` "
"filter will behave exactly the same as the :lookup:`exact` filter in these "
"cases."
msgstr ""

# d807601618144cd3ab26a105bdde5230
#: ../../ref/databases.txt:459
msgid ""
"Some possible workarounds for this are `documented at sqlite.org`_, but they "
"aren't utilised by the default SQLite backend in Django, as incorporating "
"them would be fairly difficult to do robustly. Thus, Django exposes the "
"default SQLite behavior and you should be aware of this when doing case-"
"insensitive or substring filtering."
msgstr ""

# 9f6946fee75b4f5c84e0a4f440e6e69a
#: ../../ref/databases.txt:468
msgid "SQLite 3.3.6 or newer strongly recommended"
msgstr ""

# 94da38587f184c2ba0a910df38107b55
#: ../../ref/databases.txt:470
msgid "Versions of SQLite 3.3.5 and older contains the following bugs:"
msgstr ""

# 695a4c30ee3a43c99a0faedffecda7bc
#: ../../ref/databases.txt:472
msgid ""
"A bug when `handling`_ ``ORDER BY`` parameters. This can cause problems when "
"you use the ``select`` parameter for the ``extra()`` QuerySet method. The "
"bug can be identified by the error message ``OperationalError: ORDER BY "
"terms must not be non-integer constants``."
msgstr ""

# e306dbc1ba66428f904fbb010b37a043
#: ../../ref/databases.txt:477
msgid ""
"A bug when handling `aggregation`_ together with DateFields and "
"DecimalFields."
msgstr ""

# 92abb569a3fe457595293c6fe9448cd2
#: ../../ref/databases.txt:483
msgid ""
"SQLite 3.3.6 was released in April 2006, so most current binary "
"distributions for different platforms include newer version of SQLite usable "
"from Python through either the ``pysqlite2`` or the ``sqlite3`` modules."
msgstr ""

# 57bde6f788b14472815d62c6cf5c267e
#: ../../ref/databases.txt:488
msgid "Version 3.5.9"
msgstr ""

# 64b1211f02344fac8f5e45e62681af43
#: ../../ref/databases.txt:490
msgid ""
"The Ubuntu \"Intrepid Ibex\" (8.10) SQLite 3.5.9-3 package contains a bug "
"that causes problems with the evaluation of query expressions. If you are "
"using Ubuntu \"Intrepid Ibex\", you will need to update the package to "
"version 3.5.9-3ubuntu1 or newer (recommended) or find an alternate source "
"for SQLite packages, or install SQLite from source."
msgstr ""

# ff74d75e51db44609e81abce68407277
#: ../../ref/databases.txt:496
msgid ""
"At one time, Debian Lenny shipped with the same malfunctioning SQLite "
"3.5.9-3 package. However the Debian project has subsequently issued updated "
"versions of the SQLite package that correct these bugs. If you find you are "
"getting unexpected results under Debian, ensure you have updated your SQLite "
"package to 3.5.9-5 or later."
msgstr ""

# 592892584c1e4d95aa8706b6492c8e6c
#: ../../ref/databases.txt:502
msgid ""
"The problem does not appear to exist with other versions of SQLite packaged "
"with other operating systems."
msgstr ""

# a9c80497ef3c41b58fdb09fe5d376677
#: ../../ref/databases.txt:506
msgid "Version 3.6.2"
msgstr ""

# 0e1b5e24166e452393715e5fe09deb17
#: ../../ref/databases.txt:508
msgid ""
"SQLite version 3.6.2 (released August 30, 2008) introduced a bug into "
"``SELECT DISTINCT`` handling that is triggered by, amongst other things, "
"Django's ``DateQuerySet`` (returned by the ``dates()`` method on a queryset)."
msgstr ""

# d491c86b045b4f1185ffb808c98a27a5
#: ../../ref/databases.txt:512
msgid ""
"You should avoid using this version of SQLite with Django. Either upgrade to "
"3.6.3 (released September 22, 2008) or later, or downgrade to an earlier "
"version of SQLite."
msgstr ""

# 28daf19c97f9436cbe5826b4abeb8fa1
#: ../../ref/databases.txt:519
msgid "Using newer versions of the SQLite DB-API 2.0 driver"
msgstr ""

# 982e59f4df2d40888ecbe974773de2b8
#: ../../ref/databases.txt:521
msgid ""
"For versions of Python 2.5 or newer that include ``sqlite3`` in the standard "
"library Django will now use a ``pysqlite2`` interface in preference to "
"``sqlite3`` if it finds one is available."
msgstr ""

# 69a5a7f424524842be6c025ddd50349d
#: ../../ref/databases.txt:525
msgid ""
"This provides the ability to upgrade both the DB-API 2.0 interface or SQLite "
"3 itself to versions newer than the ones included with your particular "
"Python binary distribution, if needed."
msgstr ""

# eab55df0c76f4391b365829eac29eb26
#: ../../ref/databases.txt:530
msgid "\"Database is locked\" errors"
msgstr ""

# f4b4a2bca84743d0be9789d661b59bbd
#: ../../ref/databases.txt:532
msgid ""
"SQLite is meant to be a lightweight database, and thus can't support a high "
"level of concurrency. ``OperationalError: database is locked`` errors "
"indicate that your application is experiencing more concurrency than "
"``sqlite`` can handle in default configuration. This error means that one "
"thread or process has an exclusive lock on the database connection and "
"another thread timed out waiting for the lock the be released."
msgstr ""

# 27e3d93924354fdcbfcd7bd0d2761631
#: ../../ref/databases.txt:539
msgid ""
"Python's SQLite wrapper has a default timeout value that determines how long "
"the second thread is allowed to wait on the lock before it times out and "
"raises the ``OperationalError: database is locked`` error."
msgstr ""

# 39716437d7f3446ab4a3bb60f2eef188
#: ../../ref/databases.txt:544
msgid "If you're getting this error, you can solve it by:"
msgstr ""

# 9bfca51e91174d869f0c9c4caf6a5150
#: ../../ref/databases.txt:546
msgid ""
"Switching to another database backend. At a certain point SQLite becomes too "
"\"lite\" for real-world applications, and these sorts of concurrency errors "
"indicate you've reached that point."
msgstr ""

# 845017aa15ed4d828789f2e50ec4af88
#: ../../ref/databases.txt:550
msgid ""
"Rewriting your code to reduce concurrency and ensure that database "
"transactions are short-lived."
msgstr ""

# e7a5c9fe100140b39f224233c7d20465
#: ../../ref/databases.txt:553
msgid ""
"Increase the default timeout value by setting the ``timeout`` database "
"option option::"
msgstr ""

# af4c873a672d4789975afdac43ca7c33
#: ../../ref/databases.txt:562
msgid ""
"This will simply make SQLite wait a bit longer before throwing \"database is "
"locked\" errors; it won't really do anything to solve them."
msgstr ""

# f08238a6a72646858d4fc3376b061a17
#: ../../ref/databases.txt:566
msgid "``QuerySet.select_for_update()`` not supported"
msgstr ""

# 9fa839adff274a05b07e09c382851cbe
#: ../../ref/databases.txt:568
msgid ""
"SQLite does not support the ``SELECT ... FOR UPDATE`` syntax. Calling it "
"will have no effect."
msgstr ""

# 49b65d6dd38d4a3f8099b36165e17302
#: ../../ref/databases.txt:574
msgid "Parameters not quoted in ``connection.queries``"
msgstr ""

# 5cbc53ae6f954870974973924e539cf4
#: ../../ref/databases.txt:576
msgid ""
"``sqlite3`` does not provide a way to retrieve the SQL after quoting and "
"substituting the parameters. Instead, the SQL in ``connection.queries`` is "
"rebuilt with a simple string interpolation. It may be incorrect. Make sure "
"you add quotes where necessary before copying a query into a SQLite shell."
msgstr ""

# d000604be2a04cfcb1916c349d586063
#: ../../ref/databases.txt:584
msgid "Oracle notes"
msgstr ""

# 4cf56731c5ed44a7a8dc23adc118cff6
#: ../../ref/databases.txt:586
msgid ""
"Django supports `Oracle Database Server`_ versions 9i and higher. Oracle "
"version 10g or later is required to use Django's ``regex`` and ``iregex`` "
"query operators. You will also need at least version 4.3.1 of the "
"`cx_Oracle`_ Python driver."
msgstr ""

# 53c0dc08e6e647c2a7b8775ee12f9b82
#: ../../ref/databases.txt:591
msgid ""
"Note that due to a Unicode-corruption bug in ``cx_Oracle`` 5.0, that version "
"of the driver should **not** be used with Django; ``cx_Oracle`` 5.0.1 "
"resolved this issue, so if you'd like to use a more recent ``cx_Oracle``, "
"use version 5.0.1."
msgstr ""

# 7619db8601f241cca2576f6dc68aa64a
#: ../../ref/databases.txt:596
msgid ""
"``cx_Oracle`` 5.0.1 or greater can optionally be compiled with the "
"``WITH_UNICODE`` environment variable.  This is recommended but not required."
msgstr ""

# f3343cd9124c4693818a0630f0ad2cc8
#: ../../ref/databases.txt:603
msgid ""
"In order for the ``python manage.py syncdb`` command to work, your Oracle "
"database user must have privileges to run the following commands:"
msgstr ""

# 3cf270a4ad9543d488045421d7ec9fce
#: ../../ref/databases.txt:606
msgid "CREATE TABLE"
msgstr ""

# 8cb6a9ba4c274fe28983de9ed632fa12
#: ../../ref/databases.txt:607
msgid "CREATE SEQUENCE"
msgstr ""

# 50d246fa2c0044fc90e1dc65198c2903
#: ../../ref/databases.txt:608
msgid "CREATE PROCEDURE"
msgstr ""

# b6dc1734889943eaaeceb2ba26a58d1e
#: ../../ref/databases.txt:609
msgid "CREATE TRIGGER"
msgstr ""

# 47d7c63eb3db46d58290a68d99f272fa
#: ../../ref/databases.txt:611
msgid ""
"To run Django's test suite, the user needs these *additional* privileges:"
msgstr ""

# df5b7bf8bfbc418287b89f0eb6f0d5b9
#: ../../ref/databases.txt:613
msgid "CREATE USER"
msgstr ""

# 5902fd80e3d74caababe3de40b53d4cb
#: ../../ref/databases.txt:614
msgid "DROP USER"
msgstr ""

# 928e0e933427402884dfe671813e65f5
#: ../../ref/databases.txt:615
msgid "CREATE TABLESPACE"
msgstr ""

# 65ee52d912f74e7099531e47e669d3d3
#: ../../ref/databases.txt:616
msgid "DROP TABLESPACE"
msgstr ""

# 2b51b68cef884e1a9e1ce36649952d2d
#: ../../ref/databases.txt:617
msgid "CONNECT WITH ADMIN OPTION"
msgstr ""

# d9d1005de73b4a63960e33bfe1a95de3
#: ../../ref/databases.txt:618
msgid "RESOURCE WITH ADMIN OPTION"
msgstr ""

# 8ed77d75587a4986add54533a0ec9e2d
#: ../../ref/databases.txt:623
msgid ""
"The Oracle database backend uses the ``SYS.DBMS_LOB`` package, so your user "
"will require execute permissions on it. It's normally accessible to all "
"users by default, but in case it is not, you'll need to grant permissions "
"like so:"
msgstr ""

# 3b86531f707846a5aabe36e88877e5af
#: ../../ref/databases.txt:634
msgid ""
"Your Django settings.py file should look something like this for Oracle::"
msgstr ""

# 60aa25aeced34ecfa4953f80db594ca5
#: ../../ref/databases.txt:637
msgid ""
"If you don't use a ``tnsnames.ora`` file or a similar naming method that "
"recognizes the SID (\"xe\" in this example), then fill in both :setting:"
"`HOST` and :setting:`PORT` like so::"
msgstr ""

# bb4c1cea741e4bd8894777e26b224fb6
#: ../../ref/databases.txt:652
msgid ""
"You should supply both :setting:`HOST` and :setting:`PORT`, or leave both as "
"empty strings."
msgstr ""

# 0c93ed0d6f5340cfb758f5c2c1d5cac3
#: ../../ref/databases.txt:656
msgid "Threaded option"
msgstr ""

# 3c99bb6521744e38a90119a9741a8d68
#: ../../ref/databases.txt:658
msgid ""
"If you plan to run Django in a multithreaded environment (e.g. Apache using "
"the the default MPM module on any modern operating system), then you "
"**must** set the ``threaded`` option of your Oracle database configuration "
"to True::"
msgstr ""

# 88e98722643f4f258d1ad96d8c4a1579
#: ../../ref/databases.txt:666
msgid "Failure to do this may result in crashes and other odd behavior."
msgstr ""

# 534ee6cf631a4a978fcfdb1782d8db69
#: ../../ref/databases.txt:669
msgid "INSERT ... RETURNING INTO"
msgstr ""

# e3f7e024e1334de6ae26b96b5d5b2294
#: ../../ref/databases.txt:671
msgid ""
"By default, the Oracle backend uses a ``RETURNING INTO`` clause to "
"efficiently retrieve the value of an ``AutoField`` when inserting new rows.  "
"This behavior may result in a ``DatabaseError`` in certain unusual setups, "
"such as when inserting into a remote table, or into a view with an ``INSTEAD "
"OF`` trigger. The ``RETURNING INTO`` clause can be disabled by setting the "
"``use_returning_into`` option of the database configuration to False::"
msgstr ""

# 02e16eaf72d243ae8b52d87fbac76ffd
#: ../../ref/databases.txt:682
msgid ""
"In this case, the Oracle backend will use a separate ``SELECT`` query to "
"retrieve AutoField values."
msgstr ""

# d5ad9adcefbb49edbc33a9f6d6d1afe7
#: ../../ref/databases.txt:686
msgid "Naming issues"
msgstr ""

# 5eb5aa5cfb524db2ba2bcb6f9630f485
#: ../../ref/databases.txt:688
msgid ""
"Oracle imposes a name length limit of 30 characters. To accommodate this, "
"the backend truncates database identifiers to fit, replacing the final four "
"characters of the truncated name with a repeatable MD5 hash value."
msgstr ""

# 37586222f0fd4163b286d166065d7617
#: ../../ref/databases.txt:692
msgid ""
"When running syncdb, an ``ORA-06552`` error may be encountered if certain "
"Oracle keywords are used as the name of a model field or the value of a "
"``db_column`` option.  Django quotes all identifiers used in queries to "
"prevent most such problems, but this error can still occur when an Oracle "
"datatype is used as a column name.  In particular, take care to avoid using "
"the names ``date``, ``timestamp``, ``number`` or ``float`` as a field name."
msgstr ""

# d01e72117e864c6bb7865461f63bf68f
#: ../../ref/databases.txt:701
msgid "NULL and empty strings"
msgstr ""

# 63adfc9903bd4e4890d2bf2116eda11c
#: ../../ref/databases.txt:703
msgid ""
"Django generally prefers to use the empty string ('') rather than NULL, but "
"Oracle treats both identically. To get around this, the Oracle backend "
"ignores an explicit ``null`` option on fields that have the empty string as "
"a possible value and generates DDL as if ``null=True``. When fetching from "
"the database, it is assumed that a ``NULL`` value in one of these fields "
"really means the empty string, and the data is silently converted to reflect "
"this assumption."
msgstr ""

# bcd05d7c1670430487a3b4510765e05b
#: ../../ref/databases.txt:712
msgid "``TextField`` limitations"
msgstr ""

# 090b66d60e7c488b9c9770acc07e4bbf
#: ../../ref/databases.txt:714
msgid ""
"The Oracle backend stores ``TextFields`` as ``NCLOB`` columns. Oracle "
"imposes some limitations on the usage of such LOB columns in general:"
msgstr ""

# b6d89f24f79d455ea4f447be80841e38
#: ../../ref/databases.txt:717
msgid "LOB columns may not be used as primary keys."
msgstr ""

# df2173f7977b47a9abc37f9372588ccd
#: ../../ref/databases.txt:719
msgid "LOB columns may not be used in indexes."
msgstr ""

# 79864492bf0e4da193f2e87fb01e6c27
#: ../../ref/databases.txt:721
msgid ""
"LOB columns may not be used in a ``SELECT DISTINCT`` list. This means that "
"attempting to use the ``QuerySet.distinct`` method on a model that includes "
"``TextField`` columns will result in an error when run against Oracle. As a "
"workaround, use the ``QuerySet.defer`` method in conjunction with "
"``distinct()`` to prevent ``TextField`` columns from being included in the "
"``SELECT DISTINCT`` list."
msgstr ""

# 4401189dc4ad4d82954fc7d3db3d8372
#: ../../ref/databases.txt:731
msgid "Using a 3rd-party database backend"
msgstr ""

# 61ec2d81913c415a8ed1b1b7d5d8c461
#: ../../ref/databases.txt:733
msgid ""
"In addition to the officially supported databases, there are backends "
"provided by 3rd parties that allow you to use other databases with Django:"
msgstr ""

# 3bfc501c49b3411c993628f9c885f929
#: ../../ref/databases.txt:736
msgid "`Sybase SQL Anywhere`_"
msgstr ""

# b5eab299b95241e8b4942afb127d6efd
#: ../../ref/databases.txt:737
msgid "`IBM DB2`_"
msgstr ""

# 5f625d2b9fc74d5d9da5f12d6c878dda
#: ../../ref/databases.txt:738
msgid "`Microsoft SQL Server 2005`_"
msgstr ""

# 3a1212e12d5b4551b06424da117d38ff
#: ../../ref/databases.txt:739
msgid "Firebird_"
msgstr ""

# f98443086e814a179dcbf616bcc2ae68
#: ../../ref/databases.txt:740
msgid "ODBC_"
msgstr ""

# 546af1235b114559b328097d08e08136
#: ../../ref/databases.txt:741
msgid "ADSDB_"
msgstr ""

# a3cb7bfb638444eca1a767bcedff79b1
#: ../../ref/databases.txt:743
msgid ""
"The Django versions and ORM features supported by these unofficial backends "
"vary considerably. Queries regarding the specific capabilities of these "
"unofficial backends, along with any support queries, should be directed to "
"the support channels provided by each 3rd party project."
msgstr ""

# 14dc0f3f0c414f39817770cf5a35a280
#: ../../ref/django-admin.txt:3
msgid "django-admin.py and manage.py"
msgstr ""

# 22c892480cc74648b8e65b98095e8b2e
#: ../../ref/django-admin.txt:5
msgid ""
"``django-admin.py`` is Django's command-line utility for administrative "
"tasks. This document outlines all it can do."
msgstr ""

# 90e75fa77bca419a80157b33513fa3b2
#: ../../ref/django-admin.txt:8
msgid ""
"In addition, ``manage.py`` is automatically created in each Django project. "
"``manage.py`` is a thin wrapper around ``django-admin.py`` that takes care "
"of two things for you before delegating to ``django-admin.py``:"
msgstr ""

# 677d209ac4d74c6f8de4ef1f59cd32dc
#: ../../ref/django-admin.txt:12
msgid "It puts your project's package on ``sys.path``."
msgstr ""

# a4a588af9a7a489aa7745e608c620e79
#: ../../ref/django-admin.txt:14
msgid ""
"It sets the :envvar:`DJANGO_SETTINGS_MODULE` environment variable so that it "
"points to your project's ``settings.py`` file."
msgstr ""

# 2e8213922c614a8190331c21b415a2b9
#: ../../ref/django-admin.txt:17
msgid ""
"The ``django-admin.py`` script should be on your system path if you "
"installed Django via its ``setup.py`` utility. If it's not on your path, you "
"can find it in ``site-packages/django/bin`` within your Python installation. "
"Consider symlinking it from some place on your path, such as ``/usr/local/"
"bin``."
msgstr ""

# c2800f08e6b24ea3bc505b9d5a76d4b9
#: ../../ref/django-admin.txt:22
msgid ""
"For Windows users, who do not have symlinking functionality available, you "
"can copy ``django-admin.py`` to a location on your existing path or edit the "
"``PATH`` settings (under ``Settings - Control Panel - System - Advanced - "
"Environment...``) to point to its installed location."
msgstr ""

# 572a8385f7e34bf2a68aa1a9dd620b8f
#: ../../ref/django-admin.txt:27
msgid ""
"Generally, when working on a single Django project, it's easier to use "
"``manage.py`` than ``django-admin.py``. If you need to switch between "
"multiple Django settings files, use ``django-admin.py`` with :envvar:"
"`DJANGO_SETTINGS_MODULE` or the :djadminopt:`--settings` command line option."
msgstr ""

# a5c9c84d22fc4ae484ef32080d7dd956
#: ../../ref/django-admin.txt:33
msgid ""
"The command-line examples throughout this document use ``django-admin.py`` "
"to be consistent, but any example can use ``manage.py`` just as well."
msgstr ""

# 56bd72674e7e40458f65e1c34129c9ab
#: ../../ref/django-admin.txt:44
msgid ""
"``command`` should be one of the commands listed in this document. "
"``options``, which is optional, should be zero or more of the options "
"available for the given command."
msgstr ""

# ba9d5e4ea0274f21a4e8647a98f6eb2e
#: ../../ref/django-admin.txt:49
msgid "Getting runtime help"
msgstr ""

# 186b5ba77d494aaab0dfa72aa2b048c3
#: ../../ref/django-admin.txt:53
msgid ""
"Run ``django-admin.py help`` to display usage information and a list of the "
"commands provided by each application."
msgstr ""

# 4d0ac6b41d10413694842e9b249c139a
#: ../../ref/django-admin.txt:56
msgid ""
"Run ``django-admin.py help --commands`` to display a list of all available "
"commands."
msgstr ""

# 0eef43f0967f424fa6bca114be819e0d
#: ../../ref/django-admin.txt:59
msgid ""
"Run ``django-admin.py help <command>`` to display a description of the given "
"command and a list of its available options."
msgstr ""

# ae14ccba0cee4a3da6eed6875ae95b83
#: ../../ref/django-admin.txt:63
msgid "App names"
msgstr ""

# 87877df2aa3749afbd7ea2b8b7af8594
#: ../../ref/django-admin.txt:65
msgid ""
"Many commands take a list of \"app names.\" An \"app name\" is the basename "
"of the package containing your models. For example, if your :setting:"
"`INSTALLED_APPS` contains the string ``'mysite.blog'``, the app name is "
"``blog``."
msgstr ""

# a0fc35a490f7442b980915c333c7ceed
#: ../../ref/django-admin.txt:70
msgid "Determining the version"
msgstr ""

# e67c5a60ccf5438186763633841af597
#: ../../ref/django-admin.txt:74
msgid "Run ``django-admin.py version`` to display the current Django version."
msgstr ""

# 03051e77f9fd46299142d5f7d8472145
#: ../../ref/django-admin.txt:76
msgid "The output follows the schema described in :pep:`386`::"
msgstr ""

# 9fd720350e3540d6b6f360251fa5cf69
#: ../../ref/django-admin.txt:83
msgid "Displaying debug output"
msgstr ""

# 45aa957eb82f400d81d05a5cdb1614ce
#: ../../ref/django-admin.txt:85
msgid ""
"Use :djadminopt:`--verbosity` to specify the amount of notification and "
"debug information that ``django-admin.py`` should print to the console. For "
"more details, see the documentation for the :djadminopt:`--verbosity` option."
msgstr ""

# fd8f4d4cb1134c4b95f6bd2c53dd4bde
#: ../../ref/django-admin.txt:90
msgid "Available commands"
msgstr ""

# 7e4f42c33a654dda8214c29dffc06359
#: ../../ref/django-admin.txt:93
msgid "cleanup"
msgstr ""

# 97c75966ee504050979d4221c54c0847
#: ../../ref/django-admin.txt:97
msgid ""
"Can be run as a cronjob or directly to clean out old data from the database "
"(only expired sessions at the moment)."
msgstr ""

# a574b7936c2f47aebc5c0e492bb44d6b
#: ../../ref/django-admin.txt:104
msgid "compilemessages"
msgstr ""

# 797270349cdb45b7ab3c927c7fd018c9
#: ../../ref/django-admin.txt:108
msgid ""
"Compiles .po files created with ``makemessages`` to .mo files for use with "
"the builtin gettext support. See :doc:`/topics/i18n/index`."
msgstr ""

# 5b170e289bde4664920b29cba3869393
#: ../../ref/django-admin.txt:111
msgid ""
"Use the :djadminopt:`--locale` option to specify the locale to process. If "
"not provided, all locales are processed."
msgstr ""

# fab55714f9194c5587bb5d82138836e4
#: ../../ref/django-admin.txt:119
msgid "createcachetable"
msgstr ""

# 472b0e64777e4894bffb4def90c93036
#: ../../ref/django-admin.txt:123
msgid ""
"Creates a cache table named ``tablename`` for use with the database cache "
"backend. See :doc:`/topics/cache` for more information."
msgstr ""

# b3a9e65ef3fe4624b9555a15304ce91e
#: ../../ref/django-admin.txt:126
msgid ""
"The :djadminopt:`--database` option can be used to specify the database onto "
"which the cachetable will be installed."
msgstr ""

# 18d689b0b5c046f0be1f6b9821fbd45e
#: ../../ref/django-admin.txt:130
msgid "dbshell"
msgstr ""

# 8d7eb4f64c3e4ed9b7fcd57c38c8104e
#: ../../ref/django-admin.txt:134
msgid ""
"Runs the command-line client for the database engine specified in your "
"``ENGINE`` setting, with the connection parameters specified in your :"
"setting:`USER`, :setting:`PASSWORD`, etc., settings."
msgstr ""

# d596757b952c4056b61be08c1f2c52b5
#: ../../ref/django-admin.txt:138
msgid "For PostgreSQL, this runs the ``psql`` command-line client."
msgstr ""

# 12636dd38c024d32b4b5d6b9a0d4e852
#: ../../ref/django-admin.txt:139
msgid "For MySQL, this runs the ``mysql`` command-line client."
msgstr ""

# caa4051312a744fcaec788fbe3a6bfe8
#: ../../ref/django-admin.txt:140
msgid "For SQLite, this runs the ``sqlite3`` command-line client."
msgstr ""

# 7aecb8b1ecc8490bb369a396c86082b5
#: ../../ref/django-admin.txt:142
msgid ""
"This command assumes the programs are on your ``PATH`` so that a simple call "
"to the program name (``psql``, ``mysql``, ``sqlite3``) will find the program "
"in the right place. There's no way to specify the location of the program "
"manually."
msgstr ""

# fd9eafc948f9480db144bb64ad5276b2
#: ../../ref/django-admin.txt:147
msgid ""
"The :djadminopt:`--database` option can be used to specify the database onto "
"which to open a shell."
msgstr ""

# 76becc77b514459c9129dfb4ca60f3b5
#: ../../ref/django-admin.txt:151
msgid "diffsettings"
msgstr ""

# 1b3175136c5545098f4d8ccfae00b49b
#: ../../ref/django-admin.txt:155
msgid ""
"Displays differences between the current settings file and Django's default "
"settings."
msgstr ""

# 01e4eeb934194000a2706bccac7d571c
#: ../../ref/django-admin.txt:158
msgid ""
"Settings that don't appear in the defaults are followed by ``\"###\"``. For "
"example, the default settings don't define :setting:`ROOT_URLCONF`, so :"
"setting:`ROOT_URLCONF` is followed by ``\"###\"`` in the output of "
"``diffsettings``."
msgstr ""

# 0d4e4171a251482b91ac0c13aab8dcd2
#: ../../ref/django-admin.txt:163
msgid ""
"Note that Django's default settings live in ``django/conf/global_settings."
"py``, if you're ever curious to see the full list of defaults."
msgstr ""

# 03cb4552658f499aaeb3b16f49d444ae
#: ../../ref/django-admin.txt:167
msgid "dumpdata <appname appname appname.Model ...>"
msgstr ""

# 7f193169ea004e6da5238eb22081add4
#: ../../ref/django-admin.txt:171
msgid ""
"Outputs to standard output all data in the database associated with the "
"named application(s)."
msgstr ""

# 740a0b720b814ac987c9c3d7f57fd4a3
#: ../../ref/django-admin.txt:174
msgid ""
"If no application name is provided, all installed applications will be "
"dumped."
msgstr ""

# 96fb452864f44731b64740e32d434563
#: ../../ref/django-admin.txt:176
msgid "The output of ``dumpdata`` can be used as input for ``loaddata``."
msgstr ""

# 5620dbb1dab1460f9c8ca3cc69c56c09
#: ../../ref/django-admin.txt:178
msgid ""
"Note that ``dumpdata`` uses the default manager on the model for selecting "
"the records to dump. If you're using a :ref:`custom manager <custom-"
"managers>` as the default manager and it filters some of the available "
"records, not all of the objects will be dumped."
msgstr ""

# b4b946e82d78475ca98898fbfeb12ccb
#: ../../ref/django-admin.txt:183
msgid ""
"The :djadminopt:`--all` option may be provided to specify that ``dumpdata`` "
"should use Django's base manager, dumping records which might otherwise be "
"filtered or modified by a custom manager."
msgstr ""

# 5faef7637a994d2d9c29a697c490b7cd
#: ../../ref/django-admin.txt:189
msgid ""
"By default, ``dumpdata`` will format its output in JSON, but you can use the "
"``--format`` option to specify another format. Currently supported formats "
"are listed in :ref:`serialization-formats`."
msgstr ""

# 2b0a40bda5f84a4ca78eb36799e0680e
#: ../../ref/django-admin.txt:195
msgid ""
"By default, ``dumpdata`` will output all data on a single line. This isn't "
"easy for humans to read, so you can use the ``--indent`` option to pretty-"
"print the output with a number of indentation spaces."
msgstr ""

# 1f0e4766d8b14bcb95255aeab458434c
#: ../../ref/django-admin.txt:199
msgid ""
"The :djadminopt:`--exclude` option may be provided to prevent specific "
"applications or models (specified as in the form of ``appname.ModelName``) "
"from being dumped. If you specify a model name to ``dumpdata``, the dumped "
"output will be restricted to that model, rather than the entire application. "
"You can also mix application names and model names."
msgstr ""

# 9e8d5af5d78e4724ae648a609f5f7c31
#: ../../ref/django-admin.txt:205
msgid ""
"The :djadminopt:`--database` option can be used to specify the database from "
"which data will be dumped."
msgstr ""

# 45f130416ef84a0c9565cae71ba51b1c
#: ../../ref/django-admin.txt:210
msgid ""
"Use :ref:`natural keys <topics-serialization-natural-keys>` to represent any "
"foreign key and many-to-many relationship with a model that provides a "
"natural key definition. If you are dumping ``contrib.auth`` ``Permission`` "
"objects or ``contrib.contenttypes`` ``ContentType`` objects, you should "
"probably be using this flag."
msgstr ""

# b29a263dc93c4c7eb832a76b3e690128
#: ../../ref/django-admin.txt:217
msgid "flush"
msgstr ""

# 18e80943defe4d2daf4fd60249cbf1e8
#: ../../ref/django-admin.txt:221
msgid ""
"Returns the database to the state it was in immediately after :djadmin:"
"`syncdb` was executed. This means that all data will be removed from the "
"database, any post-synchronization handlers will be re-executed, and the "
"``initial_data`` fixture will be re-installed."
msgstr ""

# 9e306195986944b5884c706619b6f509
# bd269de5951a4c048f2310e2ac4cf28f
# cdd962a8b47d4bada5eea7c70d64a04a
#: ../../ref/django-admin.txt:226 ../../ref/django-admin.txt:1065
#: ../../ref/django-admin.txt:1164
msgid ""
"The :djadminopt:`--noinput` option may be provided to suppress all user "
"prompts."
msgstr ""

# 70f8a5f5a60540289228e1ad50a9291f
#: ../../ref/django-admin.txt:229
msgid ""
"The :djadminopt:`--database` option may be used to specify the database to "
"flush."
msgstr ""

# 2110afaa5a59467596ad5c633de31a8b
# 854bda3f02cd4852a57f12828e0fa0a2
#: ../../ref/django-admin.txt:233 ../../ref/django-admin.txt:1072
msgid "``--no-initial-data``"
msgstr ""

# 65ed019af033422f8ec69e96fbc9bd26
# 69d3559c560f4e78abf881c0a0429681
#: ../../ref/django-admin.txt:237 ../../ref/django-admin.txt:1076
msgid "Use ``--no-initial-data`` to avoid loading the initial_data fixture."
msgstr ""

# 09e0f2d6b5c047b9aa020039c08dd2e3
#: ../../ref/django-admin.txt:245
msgid ""
"Introspects the database tables in the database pointed-to by the :setting:"
"`NAME` setting and outputs a Django model module (a ``models.py`` file) to "
"standard output."
msgstr ""

# 5dd23ff8902043009a7b2d250a2c8615
#: ../../ref/django-admin.txt:249
msgid ""
"Use this if you have a legacy database with which you'd like to use Django. "
"The script will inspect the database and create a model for each table "
"within it."
msgstr ""

# 6a37e634ffac4bb0bda6641c9bd9c03c
#: ../../ref/django-admin.txt:253
msgid ""
"As you might expect, the created models will have an attribute for every "
"field in the table. Note that ``inspectdb`` has a few special cases in its "
"field-name output:"
msgstr ""

# 709876383d8f451ca26c580e618b33c9
#: ../../ref/django-admin.txt:257
msgid ""
"If ``inspectdb`` cannot map a column's type to a model field type, it'll use "
"``TextField`` and will insert the Python comment ``'This field type is a "
"guess.'`` next to the field in the generated model."
msgstr ""

# aa455a950c234cfb94c915652f0258b1
#: ../../ref/django-admin.txt:262
msgid ""
"If the database column name is a Python reserved word (such as ``'pass'``, "
"``'class'`` or ``'for'``), ``inspectdb`` will append ``'_field'`` to the "
"attribute name. For example, if a table has a column ``'for'``, the "
"generated model will have a field ``'for_field'``, with the ``db_column`` "
"attribute set to ``'for'``. ``inspectdb`` will insert the Python comment "
"``'Field renamed because it was a Python reserved word.'`` next to the field."
msgstr ""

# 845575cf8f034d08b2d6be7312a55709
#: ../../ref/django-admin.txt:271
msgid ""
"This feature is meant as a shortcut, not as definitive model generation. "
"After you run it, you'll want to look over the generated models yourself to "
"make customizations. In particular, you'll need to rearrange models' order, "
"so that models that refer to other models are ordered properly."
msgstr ""

# cd35c353c88b43829d913bc21cf937d5
#: ../../ref/django-admin.txt:276
msgid ""
"Primary keys are automatically introspected for PostgreSQL, MySQL and "
"SQLite, in which case Django puts in the ``primary_key=True`` where needed."
msgstr ""

# 5bb9ed70350e40588aae4ed9555ed528
#: ../../ref/django-admin.txt:280
msgid ""
"``inspectdb`` works with PostgreSQL, MySQL and SQLite. Foreign-key detection "
"only works in PostgreSQL and with certain types of MySQL tables."
msgstr ""

# d37d17f45d0f4c899b57f20855197d9d
#: ../../ref/django-admin.txt:283
msgid ""
"The :djadminopt:`--database` option may be used to specify the database to "
"introspect."
msgstr ""

# b25fc390733342ceb7b0e1c62ac0c0e4
#: ../../ref/django-admin.txt:287
msgid "loaddata <fixture fixture ...>"
msgstr ""

# 8f5f2a97b02b4e209d1ed769d5525083
#: ../../ref/django-admin.txt:291
msgid ""
"Searches for and loads the contents of the named fixture into the database."
msgstr ""

# 814b3d55712a4ee5abf14123fbdd2e51
#: ../../ref/django-admin.txt:293
msgid ""
"The :djadminopt:`--database` option can be used to specify the database onto "
"which the data will be loaded."
msgstr ""

# 34d326e9a25d4149912982235a2f60e0
#: ../../ref/django-admin.txt:300
msgid ""
"The :djadminopt:`--ignorenonexistent` option can be used to ignore fields "
"that may have been removed from models since the fixture was originally "
"generated."
msgstr ""

# 9719dfa5397742fdb20d1aa0562e2362
#: ../../ref/django-admin.txt:304
msgid "What's a \"fixture\"?"
msgstr ""

# 9abc5ec0d8b545a5b9cf5d1f9afe588c
#: ../../ref/django-admin.txt:306
msgid ""
"A *fixture* is a collection of files that contain the serialized contents of "
"the database. Each fixture has a unique name, and the files that comprise "
"the fixture can be distributed over multiple directories, in multiple "
"applications."
msgstr ""

# 434fe3af57c24019b46006d79ecc8491
#: ../../ref/django-admin.txt:310
msgid "Django will search in three locations for fixtures:"
msgstr ""

# 5752ebe391154473b0b9364bd7a30bb3
#: ../../ref/django-admin.txt:312
msgid "In the ``fixtures`` directory of every installed application"
msgstr ""

# fa0bf6afcfb448659a68ec558adbd546
#: ../../ref/django-admin.txt:313
msgid "In any directory named in the :setting:`FIXTURE_DIRS` setting"
msgstr ""

# eba5754f05df46b38cc8ce7eea9615e9
#: ../../ref/django-admin.txt:314
msgid "In the literal path named by the fixture"
msgstr ""

# 24dc9e2e4322412fa1882c801b3b303b
#: ../../ref/django-admin.txt:316
msgid ""
"Django will load any and all fixtures it finds in these locations that match "
"the provided fixture names."
msgstr ""

# 17b005c084974dd69f2d226b4a065cf1
#: ../../ref/django-admin.txt:319
msgid ""
"If the named fixture has a file extension, only fixtures of that type will "
"be loaded. For example::"
msgstr ""

# aaff6f19ee3d44d198e438cd786aeacc
#: ../../ref/django-admin.txt:324
msgid ""
"would only load JSON fixtures called ``mydata``. The fixture extension must "
"correspond to the registered name of a :ref:`serializer <serialization-"
"formats>` (e.g., ``json`` or ``xml``)."
msgstr ""

# ed446b55ac4b48638109209d9d68a3e6
#: ../../ref/django-admin.txt:328
msgid ""
"If you omit the extensions, Django will search all available fixture types "
"for a matching fixture. For example::"
msgstr ""

# 47b9db73ff2e4a80903dedc40a20637a
#: ../../ref/django-admin.txt:333
msgid ""
"would look for any fixture of any fixture type called ``mydata``. If a "
"fixture directory contained ``mydata.json``, that fixture would be loaded as "
"a JSON fixture."
msgstr ""

# 2850ff29eec34e9bb2bb9ce43725ff48
#: ../../ref/django-admin.txt:337
msgid ""
"The fixtures that are named can include directory components. These "
"directories will be included in the search path. For example::"
msgstr ""

# a3510498977649e085e4a027dc361c0b
#: ../../ref/django-admin.txt:342
msgid ""
"would search ``<appname>/fixtures/foo/bar/mydata.json`` for each installed "
"application,  ``<dirname>/foo/bar/mydata.json`` for each directory in :"
"setting:`FIXTURE_DIRS`, and the literal path ``foo/bar/mydata.json``."
msgstr ""

# 4b120c0667ff4bb6b5b21a12100b4d85
#: ../../ref/django-admin.txt:346
msgid ""
"When fixture files are processed, the data is saved to the database as is. "
"Model defined :meth:`~django.db.models.Model.save` methods are not called, "
"and any :data:`~django.db.models.signals.pre_save` or :data:`~django.db."
"models.signals.post_save` signals will be called with ``raw=True`` since the "
"instance only contains attributes that are local to the model. You may, for "
"example, want to disable handlers that access related fields that aren't "
"present during fixture loading and would otherwise raise an exception::"
msgstr ""

# a4948d635ece420abf052c1f046611bb
#: ../../ref/django-admin.txt:366
msgid "You could also write a simple decorator to encapsulate this logic::"
msgstr ""

# 1abfed532f3b4bc0b22ef558ce91b511
#: ../../ref/django-admin.txt:385
msgid ""
"Just be aware that this logic will disable the signals whenever fixtures are "
"deserialized, not just during ``loaddata``."
msgstr ""

# 63b7993605f64c36b53e22db98d890e8
#: ../../ref/django-admin.txt:388
msgid ""
"Note that the order in which fixture files are processed is undefined. "
"However, all fixture data is installed as a single transaction, so data in "
"one fixture can reference data in another fixture. If the database backend "
"supports row-level constraints, these constraints will be checked at the end "
"of the transaction."
msgstr ""

# e17fa7f2bab9401dbae21c7e525975f2
#: ../../ref/django-admin.txt:394
msgid ""
"The ``dumpdata`` command can be used to generate input for ``loaddata``."
msgstr ""

# fd7192303745466faf8e3d85eb4f722c
#: ../../ref/django-admin.txt:397
msgid "Compressed fixtures"
msgstr ""

# 081b2516fad44324af438d19b858a061
#: ../../ref/django-admin.txt:399
msgid ""
"Fixtures may be compressed in ``zip``, ``gz``, or ``bz2`` format. For "
"example::"
msgstr ""

# 3b533b745dc54b5ea584dc34e578a882
#: ../../ref/django-admin.txt:403
msgid ""
"would look for any of ``mydata.json``, ``mydata.json.zip``, ``mydata.json."
"gz``, or ``mydata.json.bz2``. The first file contained within a zip-"
"compressed archive is used."
msgstr ""

# 396016ae80304cf5abc769ef0c0c2e08
#: ../../ref/django-admin.txt:407
msgid ""
"Note that if two fixtures with the same name but different fixture type are "
"discovered (for example, if ``mydata.json`` and ``mydata.xml.gz`` were found "
"in the same fixture directory), fixture installation will be aborted, and "
"any data installed in the call to ``loaddata`` will be removed from the "
"database."
msgstr ""

# 5fd002c5d15346929f1ad88ddb061023
#: ../../ref/django-admin.txt:413
msgid "MySQL with MyISAM and fixtures"
msgstr ""

# 2b3d6be96be44a19b3e8bc6beab2a46f
#: ../../ref/django-admin.txt:415
msgid ""
"The MyISAM storage engine of MySQL doesn't support transactions or "
"constraints, so if you use MyISAM, you won't get validation of fixture data, "
"or a rollback if multiple transaction files are found."
msgstr ""

# 7c29aa59fd804566814ed81e52328ab7
#: ../../ref/django-admin.txt:420
msgid "Database-specific fixtures"
msgstr ""

# 739ee752a480426fbb67453a425fa11e
#: ../../ref/django-admin.txt:422
msgid ""
"If you're in a multi-database setup, you might have fixture data that you "
"want to load onto one database, but not onto another. In this situation, you "
"can add database identifier into the names of your fixtures."
msgstr ""

# 6480598c5daf4196825938ba8ae298f6
#: ../../ref/django-admin.txt:426
msgid ""
"For example, if your :setting:`DATABASES` setting has a 'master' database "
"defined, name the fixture ``mydata.master.json`` or ``mydata.master.json."
"gz`` and the fixture will only be loaded when you specify you want to load "
"data into the ``master`` database."
msgstr ""

# ec1b384e7f76421d8e528097833c49d2
#: ../../ref/django-admin.txt:432
msgid "makemessages"
msgstr ""

# 3c6fb6b5f95140ea87694af0d8ca9032
#: ../../ref/django-admin.txt:436
msgid ""
"Runs over the entire source tree of the current directory and pulls out all "
"strings marked for translation. It creates (or updates) a message file in "
"the conf/locale (in the django tree) or locale (for project and application) "
"directory. After making changes to the messages files you need to compile "
"them with ``compilemessages`` for use with the builtin gettext support. See "
"the :ref:`i18n documentation <how-to-create-language-files>` for details."
msgstr ""

# 8cbd7324ffa14c9980951378c39514c7
#: ../../ref/django-admin.txt:445
msgid ""
"Use the ``--all`` or ``-a`` option to update the message files for all "
"available languages."
msgstr ""

# 6ac7187d8baf4ffdaa11111b7ef195bd
#: ../../ref/django-admin.txt:454
msgid ""
"Use the ``--extension`` or ``-e`` option to specify a list of file "
"extensions to examine (default: \".html\", \".txt\")."
msgstr ""

# a7141a1a7f994abca183163817cfed76
#: ../../ref/django-admin.txt:461
msgid ""
"Separate multiple extensions with commas or use -e or --extension multiple "
"times::"
msgstr ""

# 859f928a39aa49ffbc9eccc6ee2871da
#: ../../ref/django-admin.txt:465
msgid "Use the :djadminopt:`--locale` option to specify the locale to process."
msgstr ""

# 92c237c4fcf44dd7bec2cfb103f7612e
#: ../../ref/django-admin.txt:473
msgid ""
"Use the ``--domain`` or ``-d`` option to change the domain of the messages "
"files. Currently supported:"
msgstr ""

# 42fe41c4594f4feeab4f36f40cf5cfc2
#: ../../ref/django-admin.txt:476
msgid "``django`` for all ``*.py``, ``*.html`` and ``*.txt`` files (default)"
msgstr ""

# bc12afe6f4b4460eb90900f0a5285dfb
#: ../../ref/django-admin.txt:477
msgid "``djangojs`` for ``*.js`` files"
msgstr ""

# c84abe0c359141a993d49b0c43583552
#: ../../ref/django-admin.txt:481
msgid ""
"Use the ``--symlinks`` or ``-s`` option to follow symlinks to directories "
"when looking for new translation strings."
msgstr ""

# a717f188bbc3481e9eb1d42d52a9ed81
#: ../../ref/django-admin.txt:490
msgid ""
"Use the ``--ignore`` or ``-i`` option to ignore files or directories "
"matching the given :mod:`glob`-style pattern. Use multiple times to ignore "
"more."
msgstr ""

# 37b7a4b959864616ad01abd24c67bd38
#: ../../ref/django-admin.txt:493
msgid "These patterns are used by default: ``'CVS'``, ``'.*'``, ``'*~'``"
msgstr ""

# 9aa22f6d292949ccb52bc75c54ab548b
#: ../../ref/django-admin.txt:501
msgid ""
"Use the ``--no-default-ignore`` option to disable the default values of :"
"djadminopt:`--ignore`."
msgstr ""

# bc587432597e4ce98d8e4eab955984c1
#: ../../ref/django-admin.txt:506
msgid ""
"Use the ``--no-wrap`` option to disable breaking long message lines into "
"several lines in language files."
msgstr ""

# fb3b1085c2b144109135ca39c0f3cba9
#: ../../ref/django-admin.txt:513
msgid ""
"Use the ``--no-location`` option to not write '``#: filename:line``' comment "
"lines in language files. Note that using this option makes it harder for "
"technically skilled translators to understand each message's context."
msgstr ""

# 312571d111f5484c8076ba683b5f89e1
#: ../../ref/django-admin.txt:518
msgid "runfcgi [options]"
msgstr ""

# 2a63b4a801d8455e896f30cb759060e3
#: ../../ref/django-admin.txt:522
msgid ""
"Starts a set of FastCGI processes suitable for use with any Web server that "
"supports the FastCGI protocol. See the :doc:`FastCGI deployment "
"documentation </howto/deployment/fastcgi>` for details. Requires the Python "
"FastCGI module from `flup`_."
msgstr ""

# 5659945c0d9b4360af5ba48a78a4d373
#: ../../ref/django-admin.txt:533
msgid ""
"The options accepted by this command are passed to the FastCGI library and "
"don't use the ``'--'`` prefix as is usual for other Django management "
"commands."
msgstr ""

# d7116a6e98a647d885829a6771793f1e
#: ../../ref/django-admin.txt:538
msgid "``protocol=PROTOCOL``"
msgstr ""

# 514cbb0e28ad470295c1960c45f6a279
#: ../../ref/django-admin.txt:540
msgid ""
"Protocol to use. *PROTOCOL* can be ``fcgi``, ``scgi``, ``ajp``, etc. "
"(default is ``fcgi``)"
msgstr ""

# 611d22a9ea884244a0111788058c4331
#: ../../ref/django-admin.txt:545
msgid "``host=HOSTNAME``"
msgstr ""

# d389e56a891748bdb8581b508f95cfcb
#: ../../ref/django-admin.txt:547
msgid "Hostname to listen on."
msgstr ""

# d856348ce50c40a3a361b280510b6814
#: ../../ref/django-admin.txt:551
msgid "``port=PORTNUM``"
msgstr ""

# e777ec304e1549e2bde708f456e773b5
#: ../../ref/django-admin.txt:553
msgid "Port to listen on."
msgstr ""

# 7b67b2fed20944648d4322ce97cd3f56
#: ../../ref/django-admin.txt:557
msgid "``socket=FILE``"
msgstr ""

# c51590854cd54254835ad037a62b5ea5
#: ../../ref/django-admin.txt:559
msgid "UNIX socket to listen on."
msgstr ""

# 305d09b85bdb4497a2065b427b6d0210
#: ../../ref/django-admin.txt:563
msgid "``method=IMPL``"
msgstr ""

# fca4071aab89443aba79e90e64b8c606
#: ../../ref/django-admin.txt:565
msgid "Possible values: ``prefork`` or ``threaded`` (default ``prefork``)"
msgstr ""

# 415ef6dde13d45908e2eba994d1887d1
#: ../../ref/django-admin.txt:569
msgid "``maxrequests=NUMBER``"
msgstr ""

# 8526f8d765ad45d78fe992b8ab746c3a
#: ../../ref/django-admin.txt:571
msgid ""
"Number of requests a child handles before it is killed and a new child is "
"forked (0 means no limit)."
msgstr ""

# 1a8da69a2d674c12ad00ef1082e31b53
#: ../../ref/django-admin.txt:576
msgid "``maxspare=NUMBER``"
msgstr ""

# ce2aa16e7b9a4f36b4e90e09cba4532c
#: ../../ref/django-admin.txt:578
msgid "Max number of spare processes / threads."
msgstr ""

# 3fa426f7859d4ad6953d49f19f49f705
#: ../../ref/django-admin.txt:582
msgid "``minspare=NUMBER``"
msgstr ""

# b997ca2605054191b3bcade5dbe9b684
#: ../../ref/django-admin.txt:584
msgid "Min number of spare processes / threads."
msgstr ""

# 1642fd9bf622449bb05c96adf703191a
#: ../../ref/django-admin.txt:588
msgid "``maxchildren=NUMBER``"
msgstr ""

# 9fb68eaacc1b4ec7820c7c5fd091999c
#: ../../ref/django-admin.txt:590
msgid "Hard limit number of processes / threads."
msgstr ""

# 6f8e6350a735490eab168af0ca13d00b
#: ../../ref/django-admin.txt:594
msgid "``daemonize=BOOL``"
msgstr ""

# 0f1ea34e023b4e77853de9389b229a28
#: ../../ref/django-admin.txt:596
msgid "Whether to detach from terminal."
msgstr ""

# b402da4a61ac48c7b5c919b3f4b34298
#: ../../ref/django-admin.txt:600
msgid "``pidfile=FILE``"
msgstr ""

# 5797cd4990cf4748b08141d5cf72c72f
#: ../../ref/django-admin.txt:602
msgid "Write the spawned process-id to file *FILE*."
msgstr ""

# 0a643460ae9b432186a90181d619e110
#: ../../ref/django-admin.txt:606
msgid "``workdir=DIRECTORY``"
msgstr ""

# 691a183afe924fe08cb1c700addd3b61
#: ../../ref/django-admin.txt:608
msgid "Change to directory *DIRECTORY* when daemonizing."
msgstr ""

# 37f576b93a7440afbf89261b9994fc69
#: ../../ref/django-admin.txt:612
msgid "``debug=BOOL``"
msgstr ""

# a54f947771e54f8d8821a75fa12b5c40
#: ../../ref/django-admin.txt:614
msgid "Set to true to enable flup tracebacks."
msgstr ""

# abbe9eec32c548349e7eea17e92f911c
#: ../../ref/django-admin.txt:618
msgid "``outlog=FILE``"
msgstr ""

# 4f5cd2f57a59419cacd125d094d21fd3
#: ../../ref/django-admin.txt:620
msgid "Write stdout to the *FILE* file."
msgstr ""

# 32fdba522e004b50b2127c3c801c5ae5
#: ../../ref/django-admin.txt:624
msgid "``errlog=FILE``"
msgstr ""

# 5a79160c6e154eac803c9867d8283783
#: ../../ref/django-admin.txt:626
msgid "Write stderr to the *FILE* file."
msgstr ""

# ba29b84b79e6479cb6c9aff6b3bb8b6c
#: ../../ref/django-admin.txt:630
msgid "``umask=UMASK``"
msgstr ""

# dcefcbea503f4a44a9ace3818ed49da4
#: ../../ref/django-admin.txt:632
msgid ""
"Umask to use when daemonizing. The value is interpeted as an octal number "
"(default value is ``022``)."
msgstr ""

# b3b8c8e67b954d5082e92556a922466e
#: ../../ref/django-admin.txt:640
msgid "Run a FastCGI server as a daemon and write the spawned PID in a file."
msgstr ""

# 3bc0c8ea57b6412d89570b0e2eae5a13
#: ../../ref/django-admin.txt:643
msgid "runserver [port or address:port]"
msgstr ""

# b48a9862570040b5bbb492ee18f7220a
#: ../../ref/django-admin.txt:647
msgid ""
"Starts a lightweight development Web server on the local machine. By "
"default, the server runs on port 8000 on the IP address ``127.0.0.1``. You "
"can pass in an IP address and port number explicitly."
msgstr ""

# de894748fe2143ddb3c7db22a345877b
#: ../../ref/django-admin.txt:651
msgid ""
"If you run this script as a user with normal privileges (recommended), you "
"might not have access to start a port on a low port number. Low port numbers "
"are reserved for the superuser (root)."
msgstr ""

# dea0a9513e754054954687859e7bd673
#: ../../ref/django-admin.txt:659
msgid ""
"DO NOT USE THIS SERVER IN A PRODUCTION SETTING. It has not gone through "
"security audits or performance tests. (And that's how it's gonna stay. We're "
"in the business of making Web frameworks, not Web servers, so improving this "
"server to be able to handle a production environment is outside the scope of "
"Django.)"
msgstr ""

# c0405bfeaac047718d51dddd4fabbc67
#: ../../ref/django-admin.txt:665
msgid ""
"The development server automatically reloads Python code for each request, "
"as needed. You don't need to restart the server for code changes to take "
"effect."
msgstr ""

# d40e2d9269bb4f02be1e70d8e25c3ba5
#: ../../ref/django-admin.txt:668
msgid ""
"When you start the server, and each time you change Python code while the "
"server is running, the server will validate all of your installed models. "
"(See the ``validate`` command below.) If the validator finds errors, it will "
"print them to standard output, but it won't stop the server."
msgstr ""

# 1e4e8117007848f7b4c1efb8994a45eb
#: ../../ref/django-admin.txt:673
msgid ""
"You can run as many servers as you want, as long as they're on separate "
"ports. Just execute ``django-admin.py runserver`` more than once."
msgstr ""

# 0ce886d5e7c547a884abad25dfb890a7
#: ../../ref/django-admin.txt:676
msgid ""
"Note that the default IP address, ``127.0.0.1``, is not accessible from "
"other machines on your network. To make your development server viewable to "
"other machines on the network, use its own IP address (e.g. ``192.168.2.1``) "
"or ``0.0.0.0`` or ``::`` (with IPv6 enabled)."
msgstr ""

# 187b118fe42b48cca6ef9a7de8267c77
#: ../../ref/django-admin.txt:681
msgid ""
"You can provide an IPv6 address surrounded by brackets (e.g. "
"``[200a::1]:8000``). This will automatically enable IPv6 support."
msgstr ""

# 629750cea9b64b1ca54bc4f88ef07cc5
#: ../../ref/django-admin.txt:684
msgid "A hostname containing ASCII-only characters can also be used."
msgstr ""

# 316eeffdf72e440dac1ebcd7dc42aaec
#: ../../ref/django-admin.txt:686
msgid ""
"If the :doc:`staticfiles</ref/contrib/staticfiles>` contrib app is enabled "
"(default in new projects) the :djadmin:`runserver` command will be overriden "
"with its own :ref:`runserver<staticfiles-runserver>` command."
msgstr ""

# ad572570cfbb41688d37891bf965ed78
#: ../../ref/django-admin.txt:692
msgid ""
"Use the ``--noreload`` option to disable the use of the auto-reloader. This "
"means any Python code changes you make while the server is running will "
"*not* take effect if the particular Python modules have already been loaded "
"into memory."
msgstr ""

# 2aaaf871c00040a3beb3e3ef811568eb
#: ../../ref/django-admin.txt:705
msgid ""
"Since version 1.4, the development server is multithreaded by default. Use "
"the ``--nothreading`` option to disable the use of threading in the "
"development server."
msgstr ""

# a8ab7f95d0ba402585c8a4f88ed1029d
#: ../../ref/django-admin.txt:711
msgid ""
"Use the ``--ipv6`` (or shorter ``-6``) option to tell Django to use IPv6 for "
"the development server. This changes the default IP address from "
"``127.0.0.1`` to ``::1``."
msgstr ""

# 2bcf0afc7c2149dc91a3d9d38d037934
#: ../../ref/django-admin.txt:720
msgid "Examples of using different ports and addresses"
msgstr ""

# a144089a33384b78a9a8a32be87fb3ab
#: ../../ref/django-admin.txt:722
msgid "Port 8000 on IP address ``127.0.0.1``::"
msgstr ""

# d47b2c406a914547a89d13c1e3794756
#: ../../ref/django-admin.txt:726
msgid "Port 8000 on IP address ``1.2.3.4``::"
msgstr ""

# e00f38a61875472cb042ba46c8e7192f
#: ../../ref/django-admin.txt:730
msgid "Port 7000 on IP address ``127.0.0.1``::"
msgstr ""

# a9c8837818ed4a0bbfb66ffd37851e98
#: ../../ref/django-admin.txt:734
msgid "Port 7000 on IP address ``1.2.3.4``::"
msgstr ""

# ba49c566d1574674b7248b27e54820c6
#: ../../ref/django-admin.txt:738
msgid "Port 8000 on IPv6 address ``::1``::"
msgstr ""

# 593f892f98054691961b0e044c5c9969
#: ../../ref/django-admin.txt:742
msgid "Port 7000 on IPv6 address ``::1``::"
msgstr ""

# 88739185ddcf43ee8b92d4421f821e22
#: ../../ref/django-admin.txt:746
msgid "Port 7000 on IPv6 address ``2001:0db8:1234:5678::9``::"
msgstr ""

# 00ae6a42e892483d81c6d691cda579a8
#: ../../ref/django-admin.txt:750
msgid "Port 8000 on IPv4 address of host ``localhost``::"
msgstr ""

# 833fcaae076644b4bc9d9372a3d438b8
#: ../../ref/django-admin.txt:754
msgid "Port 8000 on IPv6 address of host ``localhost``::"
msgstr ""

# 4e3382dfd7134715928bba28c67ad966
#: ../../ref/django-admin.txt:759
msgid "Serving static files with the development server"
msgstr ""

# 4148e54655124e00988cd1078ba54274
#: ../../ref/django-admin.txt:761
msgid ""
"By default, the development server doesn't serve any static files for your "
"site (such as CSS files, images, things under :setting:`MEDIA_URL` and so "
"forth). If you want to configure Django to serve static media, read :doc:`/"
"howto/static-files/index`."
msgstr ""

# 17f2a221d4674133995b278cba7813a7
#: ../../ref/django-admin.txt:767
msgid "shell"
msgstr ""

# dcc635e32ff04dfcbccd6a5d9fc98a20
#: ../../ref/django-admin.txt:771
msgid "Starts the Python interactive interpreter."
msgstr ""

# ca783d9a759840d0bcf70d67911a1fa1
#: ../../ref/django-admin.txt:773
msgid ""
"Django will use IPython_ or bpython_ if either is installed. If you have a "
"rich shell installed but want to force use of the \"plain\" Python "
"interpreter, use the ``--plain`` option, like so::"
msgstr ""

# 89a3fec5dd5248a69bd5698b5254e5d1
#: ../../ref/django-admin.txt:781
msgid ""
"If you would like to specify either IPython or bpython as your interpreter "
"if you have both installed you can specify an alternative interpreter "
"interface with the ``-i`` or ``--interface`` options like so:"
msgstr ""

# e035d1abf7f3490baf771d1f950092e2
#: ../../ref/django-admin.txt:785
msgid "IPython::"
msgstr ""

# 8f312dabb4d747ccaefd6f9d46db511b
#: ../../ref/django-admin.txt:791
msgid "bpython::"
msgstr ""

# f1f4ebd5cf4f41cbb7fc9a3eb95227f3
#: ../../ref/django-admin.txt:801
msgid "sql <appname appname ...>"
msgstr ""

# a04a091c49b243ed9cd4adc004e22190
#: ../../ref/django-admin.txt:805
msgid "Prints the CREATE TABLE SQL statements for the given app name(s)."
msgstr ""

# 7f31fa1b53d34e098f0ff2cc90fb1105
# 546cefa617024aa3af3a9a775dff9668
# 3d86f8598d9c42d0b392f707900d1bae
# da66e2e51c904a00be65dd714e553109
# 0abd3883ef8c47219217594ec64ebd6d
# acfe4c5d33854dfebf063c1f8d1674bd
# 1432243c2d1a4191a511f3ec6d7920f4
#: ../../ref/django-admin.txt:807 ../../ref/django-admin.txt:820
#: ../../ref/django-admin.txt:830 ../../ref/django-admin.txt:854
#: ../../ref/django-admin.txt:865 ../../ref/django-admin.txt:875
#: ../../ref/django-admin.txt:891
msgid ""
"The :djadminopt:`--database` option can be used to specify the database for "
"which to print the SQL."
msgstr ""

# 534d6ad344734ff8bcaafead3c2f915b
#: ../../ref/django-admin.txt:811
msgid "sqlall <appname appname ...>"
msgstr ""

# b45cb221768f4206ae5d26f079c4816b
#: ../../ref/django-admin.txt:815
msgid ""
"Prints the CREATE TABLE and initial-data SQL statements for the given app "
"name(s)."
msgstr ""

# 9bbb06837cc44e799257b3e94e9240a2
#: ../../ref/django-admin.txt:817
msgid ""
"Refer to the description of ``sqlcustom`` for an explanation of how to "
"specify initial data."
msgstr ""

# 022b69f4db7b486bb23fe929be881b35
#: ../../ref/django-admin.txt:824
msgid "sqlclear <appname appname ...>"
msgstr ""

# 55fdb30cfa5b4bc1873e7bf983b8de0d
#: ../../ref/django-admin.txt:828
msgid "Prints the DROP TABLE SQL statements for the given app name(s)."
msgstr ""

# 1085d93f0b914e2094e836672bf822ec
#: ../../ref/django-admin.txt:834
msgid "sqlcustom <appname appname ...>"
msgstr ""

# a9ff10b22beb4b9dbe248daf622e0e0b
#: ../../ref/django-admin.txt:838
msgid "Prints the custom SQL statements for the given app name(s)."
msgstr ""

# aaa1908d30f245c4af92a81bfb2e183e
#: ../../ref/django-admin.txt:840
msgid ""
"For each model in each specified app, this command looks for the file "
"``<appname>/sql/<modelname>.sql``, where ``<appname>`` is the given app name "
"and ``<modelname>`` is the model's name in lowercase. For example, if you "
"have an app ``news`` that includes a ``Story`` model, ``sqlcustom`` will "
"attempt to read a file ``news/sql/story.sql`` and append it to the output of "
"this command."
msgstr ""

# 2d20ab15c34042488d5d8b133d208aaf
#: ../../ref/django-admin.txt:847
msgid ""
"Each of the SQL files, if given, is expected to contain valid SQL. The SQL "
"files are piped directly into the database after all of the models' table-"
"creation statements have been executed. Use this SQL hook to make any table "
"modifications, or insert any SQL functions into the database."
msgstr ""

# 6a9784965f46417ea13578669ded02ef
#: ../../ref/django-admin.txt:852
msgid "Note that the order in which the SQL files are processed is undefined."
msgstr ""

# 7f5272467f2b4616b38169c00569b629
#: ../../ref/django-admin.txt:858
msgid "sqlflush"
msgstr ""

# d8ee3a3bcc0d4ea684158ed93e8d4e45
#: ../../ref/django-admin.txt:862
msgid ""
"Prints the SQL statements that would be executed for the :djadmin:`flush` "
"command."
msgstr ""

# 9c6bf512d59f4489b479e4efe203a894
#: ../../ref/django-admin.txt:869
msgid "sqlindexes <appname appname ...>"
msgstr ""

# f4dfa117bb9f420c951499d74cf44533
#: ../../ref/django-admin.txt:873
msgid "Prints the CREATE INDEX SQL statements for the given app name(s)."
msgstr ""

# 1792ded2155642e4ae342887f1da77cc
#: ../../ref/django-admin.txt:879
msgid "sqlsequencereset <appname appname ...>"
msgstr ""

# 052236ff1c714cfa920b7e2ff57bdafb
#: ../../ref/django-admin.txt:883
msgid ""
"Prints the SQL statements for resetting sequences for the given app name(s)."
msgstr ""

# 65bb62d21ef94facb90df66cdba7839e
#: ../../ref/django-admin.txt:885
msgid ""
"Sequences are indexes used by some database engines to track the next "
"available number for automatically incremented fields."
msgstr ""

# 67513bd1fc314455bc829fd09ade2838
#: ../../ref/django-admin.txt:888
msgid ""
"Use this command to generate SQL which will fix cases where a sequence is "
"out of sync with its automatically incremented field data."
msgstr ""

# 82134235c8824167bfbb471c2c988e63
#: ../../ref/django-admin.txt:895
msgid "startapp <appname> [destination]"
msgstr ""

# f6b65398a4ea4060b7c990158679b4c9
#: ../../ref/django-admin.txt:899
msgid ""
"Creates a Django app directory structure for the given app name in the "
"current directory or the given destination."
msgstr ""

# a92b9e7609d34d03870f8a0d3e8e1e87
#: ../../ref/django-admin.txt:904
msgid ""
"By default the directory created contains a ``models.py`` file and other app "
"template files. (See the `source`_ for more details.) If only the app name "
"is given, the app directory will be created in the current working directory."
msgstr ""

# ee19f37aa4794c84b2bd695d6ce5da47
#: ../../ref/django-admin.txt:909
msgid ""
"If the optional destination is provided, Django will use that existing "
"directory rather than creating a new one. You can use '.' to denote the "
"current working directory."
msgstr ""

# af8ba7c16292423984cebff806c02f26
#: ../../ref/django-admin.txt:920
msgid ""
"With the ``--template`` option, you can use a custom app template by "
"providing either the path to a directory with the app template file, or a "
"path to a compressed file (``.tar.gz``, ``.tar.bz2``, ``.tgz``, ``.tbz``, ``."
"zip``) containing the app template files."
msgstr ""

# 8447d2432d4143328d5ff9400c95443d
#: ../../ref/django-admin.txt:925
msgid ""
"For example, this would look for an app template in the given directory when "
"creating the ``myapp`` app::"
msgstr ""

# 93add0c71ed349b5afb61076a2bf2303
#: ../../ref/django-admin.txt:930
msgid ""
"Django will also accept URLs (``http``, ``https``, ``ftp``) to compressed "
"archives with the app template files, downloading and extracting them on the "
"fly."
msgstr ""

# a69d3dc0350641409c04f0b04475b89b
# e4bcb4e611c94e3da0dff81628bbae75
#: ../../ref/django-admin.txt:934 ../../ref/django-admin.txt:1009
msgid ""
"For example, taking advantage of Github's feature to expose repositories as "
"zip files, you can use a URL like::"
msgstr ""

# ca3a05b700bc4fd88094cee6c2ccd682
#: ../../ref/django-admin.txt:941
msgid ""
"When Django copies the app template files, it also renders certain files "
"through the template engine: the files whose extensions match the ``--"
"extension`` option (``py`` by default) and the files whose names are passed "
"with the ``--name`` option. The :class:`template context <django.template."
"Context>` used is:"
msgstr ""

# 94f6a1f34b724b35a7a16182b25e6891
# b62e5ab5a2c843598a0b7148b6aafce1
#: ../../ref/django-admin.txt:947 ../../ref/django-admin.txt:1020
msgid ""
"Any option passed to the startapp command (among the command's supported "
"options)"
msgstr ""

# 921b9636a1494e2a821ef44ff395281f
#: ../../ref/django-admin.txt:949
msgid "``app_name`` -- the app name as passed to the command"
msgstr ""

# f63fb9da79804445b2756866eaa37e7a
#: ../../ref/django-admin.txt:950
msgid "``app_directory`` -- the full path of the newly created app"
msgstr ""

# a0c612cc55c445149ed5380dd03828e2
#: ../../ref/django-admin.txt:956
msgid ""
"When the app template files are rendered with the Django template engine (by "
"default all ``*.py`` files), Django will also replace all stray template "
"variables contained. For example, if one of the Python files contains a "
"docstring explaining a particular feature related to template rendering, it "
"might result in an incorrect example."
msgstr ""

# 493c148bf33e47b4956a87f90a4c247f
#: ../../ref/django-admin.txt:962
msgid ""
"To work around this problem, you can use the :ttag:`templatetag` templatetag "
"to \"escape\" the various parts of the template syntax."
msgstr ""

# 335c45392f914ae6b0ab73c86f851ceb
#: ../../ref/django-admin.txt:968
msgid "startproject <projectname> [destination]"
msgstr ""

# dc83d404bbed440a8d0693c3dd121d3e
#: ../../ref/django-admin.txt:972
msgid ""
"Creates a Django project directory structure for the given project name in "
"the current directory or the given destination."
msgstr ""

# cf262c3efc54466881c3e945b668626f
#: ../../ref/django-admin.txt:977
msgid ""
"By default, the new directory contains ``manage.py`` and a project package "
"(containing a ``settings.py`` and other files). See the `template source`_ "
"for details."
msgstr ""

# 89ee91d6f9a24fcf87be06f120c45821
#: ../../ref/django-admin.txt:981
msgid ""
"If only the project name is given, both the project directory and project "
"package will be named ``<projectname>`` and the project directory will be "
"created in the current working directory."
msgstr ""

# b567d8931d044fe787192f710fdb2f20
#: ../../ref/django-admin.txt:985
msgid ""
"If the optional destination is provided, Django will use that existing "
"directory as the project directory, and create ``manage.py`` and the project "
"package within it. Use '.' to denote the current working directory."
msgstr ""

# 371569cf68304ba387236dae82f3b724
#: ../../ref/django-admin.txt:995
msgid ""
"As with the :djadmin:`startapp` command, the ``--template`` option lets you "
"specify a directory, file path or URL of a custom project template. See the :"
"djadmin:`startapp` documentation for details of supported project template "
"formats."
msgstr ""

# 7585f0ec87f942aa868e905b21d7b675
#: ../../ref/django-admin.txt:1000
msgid ""
"For example, this would look for a project template in the given directory "
"when creating the ``myproject`` project::"
msgstr ""

# 956d38c23ea74ee88354afa44164c8ae
#: ../../ref/django-admin.txt:1005
msgid ""
"Django will also accept URLs (``http``, ``https``, ``ftp``) to compressed "
"archives with the project template files, downloading and extracting them on "
"the fly."
msgstr ""

# 54ce358618514fa9b8f773f237759b9c
#: ../../ref/django-admin.txt:1014
msgid ""
"When Django copies the project template files, it also renders certain files "
"through the template engine: the files whose extensions match the ``--"
"extension`` option (``py`` by default) and the files whose names are passed "
"with the ``--name`` option. The :class:`template context <django.template."
"Context>` used is:"
msgstr ""

# 6a30a2be7e4a4f88a0a3d20ff543fc7a
#: ../../ref/django-admin.txt:1022
msgid "``project_name`` -- the project name as passed to the command"
msgstr ""

# 617b59348482408ab3ee6bd10c0814a4
#: ../../ref/django-admin.txt:1023
msgid "``project_directory`` -- the full path of the newly created project"
msgstr ""

# 9ad414199d4842c498fd72b56d8c3d9d
#: ../../ref/django-admin.txt:1024
msgid "``secret_key`` -- a random key for the :setting:`SECRET_KEY` setting"
msgstr ""

# 59048b8cba6240d6af7d4b203ae744ad
#: ../../ref/django-admin.txt:1026
msgid ""
"Please also see the :ref:`rendering warning <render_warning>` as mentioned "
"for :djadmin:`startapp`."
msgstr ""

# fe0e3f4d9e03429897d2fe1bfc0d6db4
#: ../../ref/django-admin.txt:1032
msgid "syncdb"
msgstr ""

# dda42a180ea74bcfab175dc88ee7b256
#: ../../ref/django-admin.txt:1036
msgid ""
"Creates the database tables for all apps in :setting:`INSTALLED_APPS` whose "
"tables have not already been created."
msgstr ""

# a4bd3d626c4d40b5b4db7872b27563ca
#: ../../ref/django-admin.txt:1039
msgid ""
"Use this command when you've added new applications to your project and want "
"to install them in the database. This includes any apps shipped with Django "
"that might be in :setting:`INSTALLED_APPS` by default. When you start a new "
"project, run this command to install the default apps."
msgstr ""

# e93b8d668b2d4ae9ab6a863371deb96c
#: ../../ref/django-admin.txt:1044
msgid "Syncdb will not alter existing tables"
msgstr ""

# 1c51111903774161aa0cfe0b2c0e3a42
#: ../../ref/django-admin.txt:1046
msgid ""
"``syncdb`` will only create tables for models which have not yet been "
"installed. It will *never* issue ``ALTER TABLE`` statements to match changes "
"made to a model class after installation. Changes to model classes and "
"database schemas often involve some form of ambiguity and, in those cases, "
"Django would have to guess at the correct changes to make. There is a risk "
"that critical data would be lost in the process."
msgstr ""

# 477707b8f44740d2b4f9f2493a1c29cb
#: ../../ref/django-admin.txt:1053
msgid ""
"If you have made changes to a model and wish to alter the database tables to "
"match, use the ``sql`` command to display the new SQL structure and compare "
"that to your existing table schema to work out the changes."
msgstr ""

# 65e38e54afe74758a0527b78b7819882
#: ../../ref/django-admin.txt:1057
msgid ""
"If you're installing the ``django.contrib.auth`` application, ``syncdb`` "
"will give you the option of creating a superuser immediately."
msgstr ""

# 5e4d89d426a44d8fbedc8ed4a1699570
#: ../../ref/django-admin.txt:1060
msgid ""
"``syncdb`` will also search for and install any fixture named "
"``initial_data`` with an appropriate extension (e.g. ``json`` or ``xml``). "
"See the documentation for ``loaddata`` for details on the specification of "
"fixture data files."
msgstr ""

# e96e668314f549bb852cd73e92c789b0
#: ../../ref/django-admin.txt:1068
msgid ""
"The :djadminopt:`--database` option can be used to specify the database to "
"synchronize."
msgstr ""

# 58127794298d46b79b388d3bf4508d6c
#: ../../ref/django-admin.txt:1079
msgid "test <app or test identifier>"
msgstr ""

# dd43663b52aa441fbfe1ef1e784fb57d
#: ../../ref/django-admin.txt:1083
msgid ""
"Runs tests for all installed models. See :doc:`/topics/testing/index` for "
"more information."
msgstr ""

# 09428fa67b6940b091e1a243edce0b4e
#: ../../ref/django-admin.txt:1088
msgid ""
"The ``--failfast`` option can be used to stop running tests and report the "
"failure immediately after a test fails."
msgstr ""

# 8170ef1a41274756b662ed873543a38a
#: ../../ref/django-admin.txt:1094
msgid ""
"The ``--testrunner`` option can be used to control the test runner class "
"that is used to execute tests. If this value is provided, it overrides the "
"value provided by the :setting:`TEST_RUNNER` setting."
msgstr ""

# 8efcafa2ca84448d8bc407fcc0823223
#: ../../ref/django-admin.txt:1101
msgid ""
"The ``--liveserver`` option can be used to override the default address "
"where the live server (used with :class:`~django.test.LiveServerTestCase`) "
"is expected to run from. The default value is ``localhost:8081``."
msgstr ""

# 625fab3979334c6f81602b4e4cd545b5
#: ../../ref/django-admin.txt:1106
msgid "testserver <fixture fixture ...>"
msgstr ""

# 1b42e8d8d53941c5b49f212502aa6ede
#: ../../ref/django-admin.txt:1110
msgid ""
"Runs a Django development server (as in ``runserver``) using data from the "
"given fixture(s)."
msgstr ""

# b9dd9009d00a466ca77ab7526cbdff13
#: ../../ref/django-admin.txt:1113
msgid "For example, this command::"
msgstr ""

# a8b5a4299f0c4844af98239d646bceff
#: ../../ref/django-admin.txt:1117
msgid "...would perform the following steps:"
msgstr ""

# f3d6b088c30f458399956504f540db7a
#: ../../ref/django-admin.txt:1119
msgid "Create a test database, as described in :ref:`the-test-database`."
msgstr ""

# 6ac63ccd2a9b493f99226bc77088d49e
#: ../../ref/django-admin.txt:1120
msgid ""
"Populate the test database with fixture data from the given fixtures. (For "
"more on fixtures, see the documentation for ``loaddata`` above.)"
msgstr ""

# 769758f0327b45ddb245805c877449ac
#: ../../ref/django-admin.txt:1122
msgid ""
"Runs the Django development server (as in ``runserver``), pointed at this "
"newly created test database instead of your production database."
msgstr ""

# be710a0bc5bf4a80afca52e5cb075e2e
#: ../../ref/django-admin.txt:1125
msgid "This is useful in a number of ways:"
msgstr ""

# f5284f150fe8439b9d8c0f5e7b679464
#: ../../ref/django-admin.txt:1127
msgid ""
"When you're writing :doc:`unit tests </topics/testing/overview>` of how your "
"views act with certain fixture data, you can use ``testserver`` to interact "
"with the views in a Web browser, manually."
msgstr ""

# 0c798ee2a6c145b7849f86fdf958ef80
#: ../../ref/django-admin.txt:1131
msgid ""
"Let's say you're developing your Django application and have a \"pristine\" "
"copy of a database that you'd like to interact with. You can dump your "
"database to a fixture (using the ``dumpdata`` command, explained above), "
"then use ``testserver`` to run your Web application with that data. With "
"this arrangement, you have the flexibility of messing up your data in any "
"way, knowing that whatever data changes you're making are only being made to "
"a test database."
msgstr ""

# 816e51ff2ef24cb9bf13d59ca329d134
#: ../../ref/django-admin.txt:1139
msgid ""
"Note that this server does *not* automatically detect changes to your Python "
"source code (as ``runserver`` does). It does, however, detect changes to "
"templates."
msgstr ""

# ae41006ff40e4f479ceb56bce5de67b6
#: ../../ref/django-admin.txt:1145
msgid ""
"Use ``--addrport`` to specify a different port, or IP address and port, from "
"the default of ``127.0.0.1:8000``. This value follows exactly the same "
"format and serves exactly the same function as the argument to the "
"``runserver`` command."
msgstr ""

# a4c53b73578e475b900a4043a4e4694b
#: ../../ref/django-admin.txt:1151
msgid ""
"To run the test server on port 7000 with ``fixture1`` and ``fixture2``::"
msgstr ""

# e6b1b8b3b22d48c79be537b21a69cc1f
#: ../../ref/django-admin.txt:1156
msgid ""
"(The above statements are equivalent. We include both of them to demonstrate "
"that it doesn't matter whether the options come before or after the fixture "
"arguments.)"
msgstr ""

# 5609d7b9c225484a83d59e10d8375cb1
#: ../../ref/django-admin.txt:1160
msgid "To run on 1.2.3.4:7000 with a ``test`` fixture::"
msgstr ""

# 13a73453f60540749b61fbe3a34c9b90
#: ../../ref/django-admin.txt:1168
msgid "validate"
msgstr ""

# 41d2d15cf4fd476695950d80b7b61aeb
#: ../../ref/django-admin.txt:1172
msgid ""
"Validates all installed models (according to the :setting:`INSTALLED_APPS` "
"setting) and prints validation errors to standard output."
msgstr ""

# 9a01d5eaa8914d22a610bb262004073d
#: ../../ref/django-admin.txt:1176
msgid "Commands provided by applications"
msgstr ""

# 16df99ed0b724ae19273af7fc5ca0917
#: ../../ref/django-admin.txt:1178
msgid ""
"Some commands are only available when the ``django.contrib`` application "
"that :doc:`implements </howto/custom-management-commands>` them has been :"
"setting:`enabled <INSTALLED_APPS>`. This section describes them grouped by "
"their application."
msgstr ""

# daf75863046d46bd9ecd5348a32c5cc9
#: ../../ref/django-admin.txt:1187
msgid "changepassword"
msgstr ""

# 50b4d02ba4c24cef9d23156ef7605264
# d21260d548544977822358e65ae091ea
#: ../../ref/django-admin.txt:1191 ../../ref/django-admin.txt:1213
msgid ""
"This command is only available if Django's :doc:`authentication system </"
"topics/auth/index>` (``django.contrib.auth``) is installed."
msgstr ""

# 5335d5542196455d8deb25ac6368307c
#: ../../ref/django-admin.txt:1194
msgid ""
"Allows changing a user's password. It prompts you to enter twice the "
"password of the user given as parameter. If they both match, the new "
"password will be changed immediately. If you do not supply a user, the "
"command will attempt to change the password whose username matches the "
"current user."
msgstr ""

# 7c932d97c4fb4ebd82e589dad992892c
#: ../../ref/django-admin.txt:1201
msgid ""
"Use the ``--database`` option to specify the database to query for the user. "
"If it's not supplied, Django will use the ``default`` database."
msgstr ""

# e6c1b1c442c8485f9c65ee24f0c813fd
#: ../../ref/django-admin.txt:1209
msgid "createsuperuser"
msgstr ""

# a4c2f8777deb458fb44ae635267ac8d5
#: ../../ref/django-admin.txt:1216
msgid ""
"Creates a superuser account (a user who has all permissions). This is useful "
"if you need to create an initial superuser account but did not do so during "
"``syncdb``, or if you need to programmatically generate superuser accounts "
"for your site(s)."
msgstr ""

# 312fa04a7bb94200beabafdcb30218b5
#: ../../ref/django-admin.txt:1221
msgid ""
"When run interactively, this command will prompt for a password for the new "
"superuser account. When run non-interactively, no password will be set, and "
"the superuser account will not be able to log in until a password has been "
"manually set for it."
msgstr ""

# aae0699dcfba4787867cd4c6741eff10
#: ../../ref/django-admin.txt:1229
msgid ""
"The username and email address for the new account can be supplied by using "
"the ``--username`` and ``--email`` arguments on the command line. If either "
"of those is not supplied, ``createsuperuser`` will prompt for it when "
"running interactively."
msgstr ""

# 8693520a34e74040b168cba57282d343
#: ../../ref/django-admin.txt:1236
msgid ""
"Use the ``--database`` option to specify the database into which the "
"superuser object will be saved."
msgstr ""

# e06d5f2e508241ad86311280213cade7
#: ../../ref/django-admin.txt:1240
msgid "``django.contrib.gis``"
msgstr ""

# 48d2dee316ea4d148ec7f1bb3252e790
#: ../../ref/django-admin.txt:1243
msgid "ogrinspect"
msgstr ""

# a9267387a5914af1bd05a65102254f75
#: ../../ref/django-admin.txt:1245
msgid ""
"This command is only available if :doc:`GeoDjango </ref/contrib/gis/index>` "
"(``django.contrib.gis``) is installed."
msgstr ""

# 64821f452b594048b7e0ac215b6b5c9d
#: ../../ref/django-admin.txt:1248
msgid ""
"Please refer to its :djadmin:`description <ogrinspect>` in the GeoDjango "
"documentation."
msgstr ""

# 47754ba4210e4aada195336181860944
#: ../../ref/django-admin.txt:1252
msgid "``django.contrib.sessions``"
msgstr ""

# 6a551cecce0842cb8c84c232306f840e
#: ../../ref/django-admin.txt:1255
msgid "clearsessions"
msgstr ""

# 6ac6de46ab19469d853dbb8063ea3689
#: ../../ref/django-admin.txt:1261
msgid "Can be run as a cron job or directly to clean out expired sessions."
msgstr ""

# acccf49a774e47ba9784177e47a43e4e
#: ../../ref/django-admin.txt:1264
msgid "``django.contrib.sitemaps``"
msgstr ""

# c0958ac31b0b4353aef62dc70045d230
#: ../../ref/django-admin.txt:1267
msgid "ping_google"
msgstr ""

# ea0920d1a6ac4893b38bbe5a00830a84
#: ../../ref/django-admin.txt:1269
msgid ""
"This command is only available if the :doc:`Sitemaps framework </ref/contrib/"
"sitemaps>` (``django.contrib.sitemaps``) is installed."
msgstr ""

# 57be15bba8c4432b85b63b3cf039516c
#: ../../ref/django-admin.txt:1272
msgid ""
"Please refer to its :djadmin:`description <ping_google>` in the Sitemaps "
"documentation."
msgstr ""

# 7ff9c8608d0e460f81572054e027bb4d
#: ../../ref/django-admin.txt:1276
msgid "``django.contrib.staticfiles``"
msgstr ""

# 019d15340a1944619d6db1522daa1805
# 9e087dd91260473e9fb67cf8d7536fd8
#: ../../ref/django-admin.txt:1281 ../../ref/django-admin.txt:1290
msgid ""
"This command is only available if the :doc:`static files application </howto/"
"static-files/index>` (``django.contrib.staticfiles``) is installed."
msgstr ""

# 82b2869163c4437383fa10b7b0ee0703
#: ../../ref/django-admin.txt:1284
msgid ""
"Please refer to its :djadmin:`description <collectstatic>` in the :doc:"
"`staticfiles </ref/contrib/staticfiles>` documentation."
msgstr ""

# b0698d910f5446c1a23a84b9c943ee4f
#: ../../ref/django-admin.txt:1293
msgid ""
"Please refer to its :djadmin:`description <findstatic>` in the :doc:"
"`staticfiles </ref/contrib/staticfiles>` documentation."
msgstr ""

# b96f44d90fb74d7d9813b92c037ac045
#: ../../ref/django-admin.txt:1297
msgid "Default options"
msgstr ""

# 4750fb2bd7b54c4fa085296e21901260
#: ../../ref/django-admin.txt:1299
msgid ""
"Although some commands may allow their own custom options, every command "
"allows for the following options:"
msgstr ""

# 597fe1c0bd024bf0a42dd6e740f5b958
#: ../../ref/django-admin.txt:1308
msgid ""
"Adds the given filesystem path to the Python `import search path`_. If this "
"isn't provided, ``django-admin.py`` will use the ``PYTHONPATH`` environment "
"variable."
msgstr ""

# 970cc49986504e18814922683e667c52
#: ../../ref/django-admin.txt:1312
msgid ""
"Note that this option is unnecessary in ``manage.py``, because it takes care "
"of setting the Python path for you."
msgstr ""

# 41514946d0784ba188c4be760968ff0c
#: ../../ref/django-admin.txt:1323
msgid ""
"Explicitly specifies the settings module to use. The settings module should "
"be in Python package syntax, e.g. ``mysite.settings``. If this isn't "
"provided, ``django-admin.py`` will use the ``DJANGO_SETTINGS_MODULE`` "
"environment variable."
msgstr ""

# dfe493a232c1406c85cae8349a730079
#: ../../ref/django-admin.txt:1328
msgid ""
"Note that this option is unnecessary in ``manage.py``, because it uses "
"``settings.py`` from the current project by default."
msgstr ""

# 58dab899b526412686c46fc5562fa128
#: ../../ref/django-admin.txt:1337
msgid ""
"By default, ``django-admin.py`` will show a simple error message whenever an "
"error occurs. If you specify ``--traceback``, ``django-admin.py``  will "
"output a full stack trace whenever an exception is raised."
msgstr ""

# d00de2c918734f44aca0e6dd2cde83b6
#: ../../ref/django-admin.txt:1347
msgid ""
"Use ``--verbosity`` to specify the amount of notification and debug "
"information that ``django-admin.py`` should print to the console."
msgstr ""

# 32f54a008e8140e5a8711fe282e17866
#: ../../ref/django-admin.txt:1350
msgid "``0`` means no output."
msgstr ""

# de8a71a6247e449d8d27f4e20cb74ca0
#: ../../ref/django-admin.txt:1351
msgid "``1`` means normal output (default)."
msgstr ""

# 0d266c2fd150491ea897360296851433
#: ../../ref/django-admin.txt:1352
msgid "``2`` means verbose output."
msgstr ""

# 9bc482762aa44c78bc5cda17636cbda6
#: ../../ref/django-admin.txt:1353
msgid "``3`` means *very* verbose output."
msgstr ""

# 1f89b7d8c18a4e6e9e30e096efc01ead
#: ../../ref/django-admin.txt:1356
msgid "Common options"
msgstr ""

# 86dca6a83f434000becd0685c44e6df5
#: ../../ref/django-admin.txt:1358
msgid ""
"The following options are not available on every command, but they are "
"common to a number of commands."
msgstr ""

# fecc1e0aca68476f9fc2aefbe9759a24
#: ../../ref/django-admin.txt:1363
msgid ""
"Used to specify the database on which a command will operate. If not "
"specified, this option will default to an alias of ``default``."
msgstr ""

# fc8a16bcea1a4b01afa132213c6b5eb0
#: ../../ref/django-admin.txt:1366
msgid "For example, to dump data from the database with the alias ``master``::"
msgstr ""

# 9641ae60de154711b8cd8f0f02502747
#: ../../ref/django-admin.txt:1372
msgid ""
"Exclude a specific application from the applications whose contents is "
"output. For example, to specifically exclude the ``auth`` application from "
"the output of dumpdata, you would call::"
msgstr ""

# 955cb5d24d874e508dcca1189e0c1449
#: ../../ref/django-admin.txt:1378
msgid ""
"If you want to exclude multiple applications, use multiple ``--exclude`` "
"directives::"
msgstr ""

# 29fe6550064440b6bec5f69ea0b5dc5f
#: ../../ref/django-admin.txt:1385
msgid ""
"Use the ``--locale`` or ``-l`` option to specify the locale to process. If "
"not provided all locales are processed."
msgstr ""

# 9b337f2c6e1d424c835a114e4ba95312
#: ../../ref/django-admin.txt:1390
msgid ""
"Use the ``--noinput`` option to suppress all user prompting, such as \"Are "
"you sure?\" confirmation messages. This is useful if ``django-admin.py`` is "
"being executed as an unattended, automated script."
msgstr ""

# 5ae27ec38ea9411da482cd89c0b8bb0e
#: ../../ref/django-admin.txt:1395
msgid "Extra niceties"
msgstr ""

# 38403c4e07a4443cbfdd287d9f32b0ea
#: ../../ref/django-admin.txt:1400
msgid "Syntax coloring"
msgstr ""

# 99441a5b4d3d455997910d672b2b5e38
#: ../../ref/django-admin.txt:1402
msgid ""
"The ``django-admin.py`` / ``manage.py`` commands will use pretty color-coded "
"output if your terminal supports ANSI-colored output. It won't use the color "
"codes if you're piping the command's output to another program."
msgstr ""

# 201948fe7d5f4189b8ff9181a001e2fb
#: ../../ref/django-admin.txt:1407
msgid ""
"The colors used for syntax highlighting can be customized. Django ships with "
"three color palettes:"
msgstr ""

# d04483fe12bb45c49cf8fc45a264fcf7
#: ../../ref/django-admin.txt:1410
msgid ""
"``dark``, suited to terminals that show white text on a black background. "
"This is the default palette."
msgstr ""

# 9dd08b8e28864a1dab10debbb22a406a
#: ../../ref/django-admin.txt:1413
msgid ""
"``light``, suited to terminals that show black text on a white background."
msgstr ""

# 898c42ecf2f84677b0fee1852b876012
#: ../../ref/django-admin.txt:1416
msgid "``nocolor``, which disables syntax highlighting."
msgstr ""

# 78ed22feb6214df9b6b6c62dfe67ba61
#: ../../ref/django-admin.txt:1418
msgid ""
"You select a palette by setting a ``DJANGO_COLORS`` environment variable to "
"specify the palette you want to use. For example, to specify the ``light`` "
"palette under a Unix or OS/X BASH shell, you would run the following at a "
"command prompt::"
msgstr ""

# 1aa2fa7520d145e2b1a3b5eebd9377f5
#: ../../ref/django-admin.txt:1425
msgid ""
"You can also customize the colors that are used. Django specifies a number "
"of roles in which color is used:"
msgstr ""

# 27cdbf3b43aa428f81c7eab35b6e6120
#: ../../ref/django-admin.txt:1428
msgid "``error`` - A major error."
msgstr ""

# 3412375b041e41ef9c8f30f7a984b7b9
#: ../../ref/django-admin.txt:1429
msgid "``notice`` - A minor error."
msgstr ""

# 93588c288ade46fe84c76eb014dca309
#: ../../ref/django-admin.txt:1430
msgid "``sql_field`` - The name of a model field in SQL."
msgstr ""

# c2456d42f6d14864b934cda7842bca71
#: ../../ref/django-admin.txt:1431
msgid "``sql_coltype`` - The type of a model field in SQL."
msgstr ""

# a78ce3418e284ea18a8f5d0b4d039a34
#: ../../ref/django-admin.txt:1432
msgid "``sql_keyword`` - A SQL keyword."
msgstr ""

# 7cfc00a4887944f08bc064a184ad8126
#: ../../ref/django-admin.txt:1433
msgid "``sql_table`` - The name of a model in SQL."
msgstr ""

# a5c4d842505a424f9021ea8cbd6c8cdf
#: ../../ref/django-admin.txt:1434
msgid "``http_info`` - A 1XX HTTP Informational server response."
msgstr ""

# 59d48c476eee4fa8aafaa90c47633dd5
#: ../../ref/django-admin.txt:1435
msgid "``http_success`` - A 2XX HTTP Success server response."
msgstr ""

# ce2a4ad19fce4e66b378269964aaf3f3
#: ../../ref/django-admin.txt:1436
msgid "``http_not_modified`` - A 304 HTTP Not Modified server response."
msgstr ""

# 7dbf85e067ba4aba951cb84751cb9b5b
#: ../../ref/django-admin.txt:1437
msgid "``http_redirect`` - A 3XX HTTP Redirect server response other than 304."
msgstr ""

# 1593304c973341ea9b0a95d34d93b3cc
#: ../../ref/django-admin.txt:1438
msgid "``http_not_found`` - A 404 HTTP Not Found server response."
msgstr ""

# 0a04ed07c823453cbb749e47e99fb296
#: ../../ref/django-admin.txt:1439
msgid ""
"``http_bad_request`` - A 4XX HTTP Bad Request server response other than 404."
msgstr ""

# 3c62248ca5484cd5bd8fa23061cb591a
#: ../../ref/django-admin.txt:1440
msgid "``http_server_error`` - A 5XX HTTP Server Error response."
msgstr ""

# 3e1928c83dfa403fa5fdd6624047dd67
#: ../../ref/django-admin.txt:1442
msgid ""
"Each of these roles can be assigned a specific foreground and background "
"color, from the following list:"
msgstr ""

# 093e997986854e9689f8fa105e6c38de
#: ../../ref/django-admin.txt:1445
msgid "``black``"
msgstr ""

# 5d77349b2d0548098e8c09ee8b10f6d9
#: ../../ref/django-admin.txt:1446
msgid "``red``"
msgstr ""

# ca81d624f8a14320963122940cb11178
#: ../../ref/django-admin.txt:1447
msgid "``green``"
msgstr ""

# 3e5c0c06d5034109a3cf0a4f15f5d4e4
#: ../../ref/django-admin.txt:1448
msgid "``yellow``"
msgstr ""

# 890dbcb2c26f44ed9b9aa68586d07dfd
#: ../../ref/django-admin.txt:1449
msgid "``blue``"
msgstr ""

# d765b1df48004253ab815f139b511002
#: ../../ref/django-admin.txt:1450
msgid "``magenta``"
msgstr ""

# 1258386905b74028b5578088fac97fe8
#: ../../ref/django-admin.txt:1451
msgid "``cyan``"
msgstr ""

# 592fe13d2ca944b0825fa8bf8d4809fa
#: ../../ref/django-admin.txt:1452
msgid "``white``"
msgstr ""

# 99fd27c4b68c4b67a103084704af3676
#: ../../ref/django-admin.txt:1454
msgid ""
"Each of these colors can then be modified by using the following display "
"options:"
msgstr ""

# 25d07ad0c57c41018b4c2462e60377a6
#: ../../ref/django-admin.txt:1457
msgid "``bold``"
msgstr ""

# 72832f2046754de7b04f89d5caa45145
#: ../../ref/django-admin.txt:1458
msgid "``underscore``"
msgstr ""

# 4612edb5b2fa43c585e242dae96c1658
#: ../../ref/django-admin.txt:1459
msgid "``blink``"
msgstr ""

# b234dfbbb3114ab9b4262386c00cc4ee
# ce45bb2b4b9142b1bcb80ce374cf04ad
# c270605d1c5049f3aeb5e766e60893d1
# 323c1d8802304ecba662ccca12218880
#: ../../ref/django-admin.txt:1460 ../../ref/signals.txt:250
#: ../../ref/signals.txt:303 ../../ref/signals.txt:330
msgid "``reverse``"
msgstr ""

# 04b3ba83c660400ea1016e335612c01d
#: ../../ref/django-admin.txt:1461
msgid "``conceal``"
msgstr ""

# 203473e6289145f59742c1d311232d74
#: ../../ref/django-admin.txt:1463
msgid "A color specification follows one of the following patterns:"
msgstr ""

# 2791bed35d664978987a8f31bf723fc2
#: ../../ref/django-admin.txt:1465
msgid "``role=fg``"
msgstr ""

# 33856423efe44386bbce715e31e05131
#: ../../ref/django-admin.txt:1466
msgid "``role=fg/bg``"
msgstr ""

# fb9bd1c9ed1148ddac8258807426f083
#: ../../ref/django-admin.txt:1467
msgid "``role=fg,option,option``"
msgstr ""

# 90b52078469d4f15b20ac3e37d66d2bb
#: ../../ref/django-admin.txt:1468
msgid "``role=fg/bg,option,option``"
msgstr ""

# edd6eac4d07d438f8becec4cfe64042e
#: ../../ref/django-admin.txt:1470
msgid ""
"where ``role`` is the name of a valid color role, ``fg`` is the foreground "
"color, ``bg`` is the background color and each ``option`` is one of the "
"color modifying options. Multiple color specifications are then separated by "
"semicolon. For example::"
msgstr ""

# 2419ab4a712e4d92984749fb1a90e349
#: ../../ref/django-admin.txt:1477
msgid ""
"would specify that errors be displayed using blinking yellow on blue, and "
"notices displayed using magenta. All other color roles would be left "
"uncolored."
msgstr ""

# d1261a028b6d4132ac1c5baba8458e88
#: ../../ref/django-admin.txt:1481
msgid ""
"Colors can also be specified by extending a base palette. If you put a "
"palette name in a color specification, all the colors implied by that "
"palette will be loaded. So::"
msgstr ""

# 87c4ab67d85d4e4d9654d1ca282016d2
#: ../../ref/django-admin.txt:1487
msgid ""
"would specify the use of all the colors in the light color palette, *except* "
"for the colors for errors and notices which would be overridden as specified."
msgstr ""

# aa1e8e50bdb1444995819d903db61d3c
#: ../../ref/django-admin.txt:1492
msgid "Bash completion"
msgstr ""

# 1caf2184d2f74c3a9c34c54063c785ad
#: ../../ref/django-admin.txt:1494
msgid ""
"If you use the Bash shell, consider installing the Django bash completion "
"script, which lives in ``extras/django_bash_completion`` in the Django "
"distribution. It enables tab-completion of ``django-admin.py`` and ``manage."
"py`` commands, so you can, for instance..."
msgstr ""

# c837255f11184803a841b704f5b06833
#: ../../ref/django-admin.txt:1499
msgid "Type ``django-admin.py``."
msgstr ""

# dc92dd32a6ca43c89731e12e59e887e4
#: ../../ref/django-admin.txt:1500
msgid "Press [TAB] to see all available options."
msgstr ""

# 3f1636c53e9e4b709350c410e193b80a
#: ../../ref/django-admin.txt:1501
msgid ""
"Type ``sql``, then [TAB], to see all available options whose names start "
"with ``sql``."
msgstr ""

# 3c14bd5ee43843b1abec80a8954930b3
#: ../../ref/django-admin.txt:1505
msgid ""
"See :doc:`/howto/custom-management-commands` for how to add customized "
"actions."
msgstr ""

# 5463d45ad28b4de58a7496c029ec5c26
#: ../../ref/django-admin.txt:1510
msgid "Running management commands from your code"
msgstr ""

# 7b060c6b937d4600bc6c7aee73a4099a
#: ../../ref/django-admin.txt:1516
msgid "To call a management command from code use ``call_command``."
msgstr ""

# d1c1791c341840afa51a1bbf555e508d
#: ../../ref/django-admin.txt:1519
msgid "``name``"
msgstr ""

# c843fdb26c114286a25d4b657e714eb8
#: ../../ref/django-admin.txt:1519
msgid "the name of the command to call."
msgstr ""

# 5b0bc690ff324eb9b866a1e93e89f049
#: ../../ref/django-admin.txt:1522
msgid "``*args``"
msgstr ""

# 7bae585d119049378b9f42b02677a75a
#: ../../ref/django-admin.txt:1522
msgid "a list of arguments accepted by the command."
msgstr ""

# 7f26280634604153ad02076232819ec5
#: ../../ref/django-admin.txt:1525
msgid "``**options``"
msgstr ""

# 77f4f677f07a4b07be9908cdb4c71c41
#: ../../ref/django-admin.txt:1525
msgid "named options accepted on the command-line."
msgstr ""

# 5a882269739d47869dc105ee564277ed
# 498f02bebec04b56a34edb91cf54d7c8
# 4529baf7c9224022919223a372b5642f
# b483a28e1a5a4a77b30ea10b9470e65d
# 07280a3fdc0d428583699c3fb739fa53
#: ../../ref/django-admin.txt:1527 ../../ref/models/querysets.txt:404
#: ../../ref/models/querysets.txt:576 ../../ref/models/querysets.txt:605
#: ../../ref/models/querysets.txt:1720
msgid "Examples::"
msgstr ""

# 2b6cbc657ae2490b95682d5af514a1c6
#: ../../ref/django-admin.txt:1533
msgid ""
"Note that command options that take no arguments are passed as keywords with "
"``True`` or ``False``::"
msgstr ""

# 75ed6bdabe3b4969956d80f7817f2d1f
#: ../../ref/django-admin.txt:1538
msgid "Command options which take multiple options are passed a list::"
msgstr ""

# d3b7e07716c74bc0b11e55b59d3b3b58
#: ../../ref/django-admin.txt:1543
msgid "Output redirection"
msgstr ""

# 43df7c6a672842b5b78241a69c8fed2e
#: ../../ref/django-admin.txt:1536
msgid ""
"Note that you can redirect standard output and error streams as all commands "
"support the ``stdout`` and ``stderr`` options. For example, you could write::"
msgstr ""

# 0adf4d440d954c888321e892b58722ca
#: ../../ref/exceptions.txt:3
msgid "Django Exceptions"
msgstr ""

# 507345f33a9a461fadede1227379e470
#: ../../ref/exceptions.txt:6
msgid ""
"Django raises some Django specific exceptions as well as many standard "
"Python exceptions."
msgstr ""

# e40e8a506b9b4d80965c72308b0c7fec
#: ../../ref/exceptions.txt:10
msgid "Django-specific Exceptions"
msgstr ""

# 7efc0e36ed834579be409d5ffb6cc744
#: ../../ref/exceptions.txt:16
msgid "ObjectDoesNotExist and DoesNotExist"
msgstr ""

# de9e5ca6a7ca49f3976c915d079b4bf0
#: ../../ref/exceptions.txt:20
msgid ""
"The :exc:`DoesNotExist` exception is raised when an object is not found for "
"the given parameters of a query."
msgstr ""

# 6c1d620f370344e896d28ba4b412792d
#: ../../ref/exceptions.txt:23
msgid ""
":exc:`ObjectDoesNotExist` is defined in :mod:`django.core.exceptions`. :exc:"
"`DoesNotExist` is a subclass of the base :exc:`ObjectDoesNotExist` exception "
"that is provided on every model class as a way of identifying the specific "
"type of object that could not be found."
msgstr ""

# 0d567175a68e43cd95269db58df9c1aa
#: ../../ref/exceptions.txt:28
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information "
"on :exc:`ObjectDoesNotExist` and :exc:`DoesNotExist`."
msgstr ""

# 126e568b32f246b1b2a67c592f2b5662
#: ../../ref/exceptions.txt:32
msgid "MultipleObjectsReturned"
msgstr ""

# 4b63d439f27f44cc8bf079add45fa644
#: ../../ref/exceptions.txt:35
msgid ""
"The :exc:`MultipleObjectsReturned` exception is raised by a query if only "
"one object is expected, but multiple objects are returned. A base version of "
"this exception is provided in :mod:`django.core.exceptions`; each model "
"class contains a subclassed version that can be used to identify the "
"specific object type that has returned multiple objects."
msgstr ""

# 9d24ece8f4404010b8c9b06abe701d2b
#: ../../ref/exceptions.txt:41
msgid ""
"See :meth:`~django.db.models.query.QuerySet.get()` for further information."
msgstr ""

# 4fc044ed05424d80bac8627da480ea59
#: ../../ref/exceptions.txt:44
msgid "SuspiciousOperation"
msgstr ""

# e70e9b08f5aa44b09eb9f3b0eeb9082c
#: ../../ref/exceptions.txt:47
msgid ""
"The :exc:`SuspiciousOperation` exception is raised when a user has performed "
"an operation that should be considered suspicious from a security "
"perspective, such as tampering with a session cookie."
msgstr ""

# 8e12fd0618d841228723db72cc8622bc
#: ../../ref/exceptions.txt:52
msgid "PermissionDenied"
msgstr ""

# 54950dedec3043728381c6bde1df52d8
#: ../../ref/exceptions.txt:55
msgid ""
"The :exc:`PermissionDenied` exception is raised when a user does not have "
"permission to perform the action requested."
msgstr ""

# 5040cb3e4ada45518c459064b60e2be9
#: ../../ref/exceptions.txt:59
msgid "ViewDoesNotExist"
msgstr ""

# 1d60332238bc4a95afad6eb707d38e9e
#: ../../ref/exceptions.txt:62
msgid ""
"The :exc:`ViewDoesNotExist` exception is raised by :mod:`django.core."
"urlresolvers` when a requested view does not exist."
msgstr ""

# 24aa8cfd8da6420cac6d235409ef2eb4
#: ../../ref/exceptions.txt:66
msgid "MiddlewareNotUsed"
msgstr ""

# 303eafce11ca449db3335c5ec43cf459
#: ../../ref/exceptions.txt:69
msgid ""
"The :exc:`MiddlewareNotUsed` exception is raised when a middleware is not "
"used in the server configuration."
msgstr ""

# 8ae27694436f43308aee50b4bd8c0a2d
#: ../../ref/exceptions.txt:73
msgid "ImproperlyConfigured"
msgstr ""

# 7f632db8fcfb49088e86b2fb5a68b32b
#: ../../ref/exceptions.txt:76
msgid ""
"The :exc:`ImproperlyConfigured` exception is raised when Django is somehow "
"improperly configured -- for example, if a value in ``settings.py`` is "
"incorrect or unparseable."
msgstr ""

# 843945d4123248c8b493ccbfca0b4566
#: ../../ref/exceptions.txt:81
msgid "FieldError"
msgstr ""

# c0358f08aa464a54b226e64e6ce44fbe
#: ../../ref/exceptions.txt:84
msgid ""
"The :exc:`FieldError` exception is raised when there is a problem with a "
"model field. This can happen for several reasons:"
msgstr ""

# fb06f2aaa6e947a0bfbddcf40962ab90
#: ../../ref/exceptions.txt:87
msgid ""
"A field in a model clashes with a field of the same name from an abstract "
"base class"
msgstr ""

# 69e8819db67849c9bcbdc039542e2f18
#: ../../ref/exceptions.txt:89
msgid "An infinite loop is caused by ordering"
msgstr ""

# f3f836b56e4a4dfbac0a30951891fcf0
#: ../../ref/exceptions.txt:90
msgid "A keyword cannot be parsed from the filter parameters"
msgstr ""

# 0fca80834f6a4e65aa63fe3dda1d8663
#: ../../ref/exceptions.txt:91
msgid "A field cannot be determined from a keyword in the query parameters"
msgstr ""

# 183ba472782c44a58225449405b230a4
#: ../../ref/exceptions.txt:93
msgid "A join is not permitted on the specified field"
msgstr ""

# 6f1b7817363b4eca925e44224ff7ebf8
#: ../../ref/exceptions.txt:94
msgid "A field name is invalid"
msgstr ""

# 3aa3bf3e6fd14316a1dd4a80c7ad819d
#: ../../ref/exceptions.txt:95
msgid "A query contains invalid order_by arguments"
msgstr ""

# c5474683129448188585b6d430b6d5f8
#: ../../ref/exceptions.txt:98
msgid "ValidationError"
msgstr ""

# 14dd807ca21540e5882a2175b7ea079b
#: ../../ref/exceptions.txt:101
msgid ""
"The :exc:`ValidationError` exception is raised when data fails form or model "
"field validation. For more information about validation, see :doc:`Form and "
"Field Validation </ref/forms/validation>`, :ref:`Model Field Validation "
"<validating-objects>` and the :doc:`Validator Reference </ref/validators>`."
msgstr ""

# 14a114ff32e545cdb598391354fde755
#: ../../ref/exceptions.txt:110
msgid "NoReverseMatch"
msgstr ""

# 29529f1bb21f4f4f9ce0d39ba94e8912
#: ../../ref/exceptions.txt:113
msgid ""
"The :exc:`NoReverseMatch` exception is raised by :mod:`django.core."
"urlresolvers` when a matching URL in your URLconf cannot be identified based "
"on the parameters supplied."
msgstr ""

# fa18269e152e49fabd9d95dec0b8448f
#: ../../ref/exceptions.txt:120
msgid "Database Exceptions"
msgstr ""

# 25ec881f70a147c28262071be1e09115
#: ../../ref/exceptions.txt:122
msgid ""
"Django wraps the standard database exceptions :exc:`DatabaseError` and :exc:"
"`IntegrityError` so that your Django code has a guaranteed common "
"implementation of these classes. These database exceptions are provided in :"
"mod:`django.db`."
msgstr ""

# 89bdd915b8274b2c9aca4ad22b98f57b
#: ../../ref/exceptions.txt:130
msgid ""
"The Django wrappers for database exceptions behave exactly the same as the "
"underlying database exceptions. See :pep:`249`, the Python Database API "
"Specification v2.0, for further information."
msgstr ""

# 154ceca576554178ae953314d7827d1f
#: ../../ref/exceptions.txt:136
msgid ""
"Raised to prevent deletion of referenced objects when using :attr:`django.db."
"models.PROTECT`. Subclass of :exc:`IntegrityError`."
msgstr ""

# c9b527d9b92f4bfd88cd4789924f38c7
#: ../../ref/exceptions.txt:142
msgid "Http Exceptions"
msgstr ""

# 4e06e182d5bf41a58d5773514b00f8f5
#: ../../ref/exceptions.txt:146
msgid ""
"The :exc:`UnreadablePostError` is raised when a user cancels an upload. It "
"is available from :mod:`django.http`."
msgstr ""

# 83ba67cc6cbd4d348264d40d5450e629
#: ../../ref/exceptions.txt:152
msgid "Transaction Exceptions"
msgstr ""

# 6be2f19549db47d98bdef7e6963b51f5
#: ../../ref/exceptions.txt:156
msgid ""
"The :exc:`TransactionManagementError` is raised for any and all problems "
"related to database transactions. It is available from :mod:`django.db."
"transaction`."
msgstr ""

# 0505e8f3e236419cab2adc2b24e8573b
#: ../../ref/exceptions.txt:161
msgid "Python Exceptions"
msgstr ""

# 02068b6cf8ea4f3cad75a10918e9fc6b
#: ../../ref/exceptions.txt:163
msgid ""
"Django raises built-in Python exceptions when appropriate as well. See the "
"Python documentation for further information on the built-in :mod:"
"`exceptions`."
msgstr ""

# b15308217fa54a528158b05ccec5834d
#: ../../ref/files/file.txt:2
msgid "The ``File`` object"
msgstr ""

# 6a4fc898f0d043f699d04d2a7230872e
#: ../../ref/files/file.txt:4
msgid ""
"The :mod:`django.core.files` module and its submodules contain built-in "
"classes for basic file handling in Django."
msgstr ""

# 41a920833721401b906c638158c4d8b7
#: ../../ref/files/file.txt:10
msgid "The ``File`` Class"
msgstr ""

# 5d491ddfeebd432ea85e1dec5b552867
#: ../../ref/files/file.txt:14
msgid ""
"The :class:`File` class is a thin wrapper around Python's :py:ref:`built-in "
"file object<bltin-file-objects>` with some Django-specific additions. "
"Internally, Django uses this class when it needs to represent a file."
msgstr ""

# f408e9042a9340b6bbdea5cd2a703793
#: ../../ref/files/file.txt:18
msgid ":class:`File` objects have the following attributes and methods:"
msgstr ""

# 42b22897f672427eb6f96fefa29b261b
#: ../../ref/files/file.txt:22
msgid ""
"The name of the file including the relative path from :setting:`MEDIA_ROOT`."
msgstr ""

# 3a7bc63b65704f88a5598e3438881b81
#: ../../ref/files/file.txt:27
msgid "The size of the file in bytes."
msgstr ""

# d9d276c35b1d4ed387dc90558beab316
#: ../../ref/files/file.txt:31
msgid ""
"The underlying :py:ref:`built-in file object<bltin-file-objects>` that this "
"class wraps."
msgstr ""

# 45653e00052843ec96f06d9bcdd57fca
#: ../../ref/files/file.txt:36
msgid "The read/write mode for the file."
msgstr ""

# 3fd01dfcd50a437a8062d96954ef57f1
#: ../../ref/files/file.txt:40
msgid ""
"Open or reopen the file (which also does ``File.seek(0)``). The ``mode`` "
"argument allows the same values as Python's built-in :func:`python:open()`."
msgstr ""

# 7a1d8e05ad254147ba6b9de935590288
#: ../../ref/files/file.txt:44
msgid ""
"When reopening a file, ``mode`` will override whatever mode the file was "
"originally opened with; ``None`` means to reopen with the original mode."
msgstr ""

# 6f675a6e70d0446ab62a513aed8baea0
#: ../../ref/files/file.txt:50
msgid ""
"Read content from the file. The optional ``size`` is the number of bytes to "
"read; if not specified, the file will be read to the end."
msgstr ""

# bb0fdd0c1f8b4d298a298b5465006213
#: ../../ref/files/file.txt:55
msgid "Iterate over the file yielding one line at a time."
msgstr ""

# 707e53b952a74c93b4a1dba27d2bba07
#: ../../ref/files/file.txt:59
msgid ""
"Iterate over the file yielding \"chunks\" of a given size. ``chunk_size`` "
"defaults to 64 KB."
msgstr ""

# 0bb07cec5f72489ea23ce6013f869576
#: ../../ref/files/file.txt:62
msgid ""
"This is especially useful with very large files since it allows them to be "
"streamed off disk and avoids storing the whole file in memory."
msgstr ""

# 853dc5ccef944d4ab4e3f62ff26eb52e
#: ../../ref/files/file.txt:67
msgid ""
"Returns ``True`` if the file is large enough to require multiple chunks to "
"access all of its content give some ``chunk_size``."
msgstr ""

# e62e61f838d44deda830a474d17fefa7
#: ../../ref/files/file.txt:72
msgid ""
"Writes the specified content string to the file. Depending on the storage "
"system behind the scenes, this content might not be fully committed until :"
"func:`close()` is called on the file."
msgstr ""

# adf7ddf8f31145aaad14d8252df44056
#: ../../ref/files/file.txt:78
msgid "Close the file."
msgstr ""

# 5da233293f6044238a5dc24237f67fcb
#: ../../ref/files/file.txt:80
msgid ""
"In addition to the listed methods, :class:`~django.core.files.File` exposes "
"the following attributes and methods of its ``file`` object: ``encoding``, "
"``fileno``, ``flush``, ``isatty``, ``newlines``, ``read``, ``readinto``, "
"``readlines``, ``seek``, ``softspace``, ``tell``, ``truncate``, "
"``writelines``, ``xreadlines``."
msgstr ""

# 56eda84f4afe4cbc98ba8edb826b63d0
#: ../../ref/files/file.txt:89
msgid "The ``ContentFile`` Class"
msgstr ""

# 96af84bf95834a74820ddf87303489a0
#: ../../ref/files/file.txt:93
msgid ""
"The ``ContentFile`` class inherits from :class:`~django.core.files.File`, "
"but unlike :class:`~django.core.files.File` it operates on string content "
"(bytes also supported), rather than an actual file. For example::"
msgstr ""

# 5afedde88f5346b5ab5c4925b19831ea
#: ../../ref/files/file.txt:110
msgid "The ``ImageFile`` Class"
msgstr ""

# 1b044a85e8f147828509d148c126ce68
#: ../../ref/files/file.txt:114
msgid ""
"Django provides a built-in class specifically for images. :class:`django."
"core.files.images.ImageFile` inherits all the attributes and methods of :"
"class:`~django.core.files.File`, and additionally provides the following:"
msgstr ""

# d96da1003d3445abb3d61fb8d547b70d
#: ../../ref/files/file.txt:121
msgid "Width of the image in pixels."
msgstr ""

# 14125834cc174f99bf3ccbf3d14956c4
#: ../../ref/files/file.txt:125
msgid "Height of the image in pixels."
msgstr ""

# ec6883b8134f4921bfad890546d4ecba
#: ../../ref/files/file.txt:130
msgid "Additional methods on files attached to objects"
msgstr ""

# 9e7179f10d9d4f6d88cf939323ba0d6f
#: ../../ref/files/file.txt:132
msgid ""
"Any :class:`File` that is associated with an object (as with ``Car.photo``, "
"below) will also have a couple of extra methods:"
msgstr ""

# 980c3c42f1dc42fc9c07079f5cf31278
#: ../../ref/files/file.txt:137
msgid ""
"Saves a new file with the file name and contents provided. This will not "
"replace the existing file, but will create a new file and update the object "
"to point to it. If ``save`` is ``True``, the model's ``save()`` method will "
"be called once the file is saved. That is, these two lines::"
msgstr ""

# 68cb52ebd8454c2994081ee5eced8d1a
#: ../../ref/files/file.txt:145
msgid "are equivalent to::"
msgstr ""

# aec09b80e6c249de8d6c2f8d6e9884bf
#: ../../ref/files/file.txt:149
msgid ""
"Note that the ``content`` argument must be an instance of either :class:"
"`File` or of a subclass of :class:`File`, such as :class:`~django.core.files."
"base.ContentFile`."
msgstr ""

# 7c1945e8e5f340649356cd59a9e6c486
#: ../../ref/files/file.txt:155
msgid ""
"Removes the file from the model instance and deletes the underlying file. If "
"``save`` is ``True``, the model's ``save()`` method will be called once the "
"file is deleted."
msgstr ""

# 4d5aa31c93504cb783fb2c3971364e74
#: ../../ref/files/index.txt:3
msgid "File handling"
msgstr ""

# 7af1b0c2d31a443f85aaee4136dc9053
#: ../../ref/files/storage.txt:2
msgid "File storage API"
msgstr ""

# cc2dc3250b784215889c2dc3d171b632
#: ../../ref/files/storage.txt:7
msgid "Getting the current storage class"
msgstr ""

# f93303f8cbd846759c00bc3a608d23c1
#: ../../ref/files/storage.txt:9
msgid ""
"Django provides two convenient ways to access the current storage class:"
msgstr ""

# 42c16be53a4b4893b1dd9eb5c44b76b5
#: ../../ref/files/storage.txt:13
msgid ""
":class:`~django.core.files.storage.DefaultStorage` provides lazy access to "
"the current default storage system as defined by :setting:"
"`DEFAULT_FILE_STORAGE`. :class:`DefaultStorage` uses :func:`~django.core."
"files.storage.get_storage_class` internally."
msgstr ""

# a33c35ea20f04868bdb56fbea84a355d
#: ../../ref/files/storage.txt:20
msgid "Returns a class or module which implements the storage API."
msgstr ""

# cad70f68b5f54efbb246155465613c30
#: ../../ref/files/storage.txt:22
msgid ""
"When called without the ``import_path`` parameter ``get_storage_class`` will "
"return the current default storage system as defined by :setting:"
"`DEFAULT_FILE_STORAGE`. If ``import_path`` is provided, "
"``get_storage_class`` will attempt to import the class or module from the "
"given path and will return it if successful. An exception will be raised if "
"the import is unsuccessful."
msgstr ""

# a9c8009a4b8645869c994c1a722be1f8
#: ../../ref/files/storage.txt:30
msgid "The FileSystemStorage Class"
msgstr ""

# a98e89865ff84d77975ac1ddf1ba4a40
#: ../../ref/files/storage.txt:34
msgid ""
"The :class:`~django.core.files.storage.FileSystemStorage` class implements "
"basic file storage on a local filesystem. It inherits from :class:`~django."
"core.files.storage.Storage` and provides implementations for all the public "
"methods thereof."
msgstr ""

# 95c01b68a77a4ce498ab61be5105357e
#: ../../ref/files/storage.txt:41
msgid ""
"The ``FileSystemStorage.delete()`` method will not raise raise an exception "
"if the given file name does not exist."
msgstr ""

# b6d6a3cbd35b42db9e4e3302e07c8788
#: ../../ref/files/storage.txt:45
msgid "The Storage Class"
msgstr ""

# f9344651a9ab4966afaee9c276911bca
#: ../../ref/files/storage.txt:49
msgid ""
"The :class:`~django.core.files.storage.Storage` class provides a "
"standardized API for storing files, along with a set of default behaviors "
"that all other storage systems can inherit or override as necessary."
msgstr ""

# 4d04a1c5f7a1418385f7f48c4af6127e
#: ../../ref/files/storage.txt:56
msgid ""
"Returns a ``datetime`` object containing the last accessed time of the file. "
"For storage systems that aren't able to return the last accessed time this "
"will raise ``NotImplementedError`` instead."
msgstr ""

# 197eec15070f43038ecd96cdc68cdfb4
#: ../../ref/files/storage.txt:62
msgid ""
"Returns a ``datetime`` object containing the creation time of the file. For "
"storage systems that aren't able to return the creation time this will raise "
"``NotImplementedError`` instead."
msgstr ""

# 23a04b65b775463d961f7db972da58b3
#: ../../ref/files/storage.txt:68
msgid ""
"Deletes the file referenced by ``name``. If deletion is not supported on the "
"target storage system this will raise ``NotImplementedError`` instead"
msgstr ""

# ac3b1b535461493fb50f83f737314317
#: ../../ref/files/storage.txt:74
msgid ""
"Returns ``True`` if a file referenced by the given name already exists in "
"the storage system, or ``False`` if the name is available for a new file."
msgstr ""

# 569e3281a6734da2b95bf6d748df2b75
#: ../../ref/files/storage.txt:80
msgid ""
"Returns a filename based on the ``name`` parameter that's free and available "
"for new content to be written to on the target storage system."
msgstr ""

# 475c25f277ea40d5b4d85e9ca2a47702
#: ../../ref/files/storage.txt:87
msgid ""
"Returns a filename based on the ``name`` parameter that's suitable for use "
"on the target storage system."
msgstr ""

# d2031799daa04a5896f1e5f52f2626b7
#: ../../ref/files/storage.txt:92
msgid ""
"Lists the contents of the specified path, returning a 2-tuple of lists; the "
"first item being directories, the second item being files. For storage "
"systems that aren't able to provide such a listing, this will raise a "
"``NotImplementedError`` instead."
msgstr ""

# 9c76489800684f64ac3a0fe3600d0bb5
#: ../../ref/files/storage.txt:99
msgid ""
"Returns a ``datetime`` object containing the last modified time. For storage "
"systems that aren't able to return the last modified time, this will raise "
"``NotImplementedError`` instead."
msgstr ""

# 06bbcb5edeaf4ff3abe495f8837396e5
#: ../../ref/files/storage.txt:105
msgid ""
"Opens the file given by ``name``. Note that although the returned file is "
"guaranteed to be a ``File`` object, it might actually be some subclass. In "
"the case of remote file storage this means that reading/writing could be "
"quite slow, so be warned."
msgstr ""

# a25f638d565c4195b17878b8fa0dc720
#: ../../ref/files/storage.txt:112
msgid ""
"The local filesystem path where the file can be opened using Python's "
"standard ``open()``. For storage systems that aren't accessible from the "
"local filesystem, this will raise ``NotImplementedError`` instead."
msgstr ""

# 361442515b3d454c9f8c6583b7b6ce53
#: ../../ref/files/storage.txt:118
msgid ""
"Saves a new file using the storage system, preferably with the name "
"specified. If there already exists a file with this name ``name``, the "
"storage system may modify the filename as necessary to get a unique name. "
"The actual name of the stored file will be returned."
msgstr ""

# 895c337e108b40b3ae36272f40f8a421
#: ../../ref/files/storage.txt:123
msgid ""
"The ``content`` argument must be an instance of :class:`django.core.files."
"File` or of a subclass of :class:`~django.core.files.File`."
msgstr ""

# eba9814c5aef408284487e5c8f50c923
#: ../../ref/files/storage.txt:129
msgid ""
"Returns the total size, in bytes, of the file referenced by ``name``. For "
"storage systems that aren't able to return the file size this will raise "
"``NotImplementedError`` instead."
msgstr ""

# 0726534bf77040c2aafca2b9d448e89d
#: ../../ref/files/storage.txt:135
msgid ""
"Returns the URL where the contents of the file referenced by ``name`` can be "
"accessed. For storage systems that don't support access by URL this will "
"raise ``NotImplementedError`` instead."
msgstr ""

# eb85d97515e64c1eb21631136158ae53
#: ../../ref/forms/api.txt:3
msgid "The Forms API"
msgstr ""

# 9b9c55f2954d4816930879252f30d6b7
#: ../../ref/forms/api.txt:7
msgid "About this document"
msgstr ""

# a061ac6d71114a85af81d18d5c86fc77
#: ../../ref/forms/api.txt:9
msgid ""
"This document covers the gritty details of Django's forms API. You should "
"read the :doc:`introduction to working with forms </topics/forms/index>` "
"first."
msgstr ""

# 8da2e4c57e214e79923c3197a50c73d7
#: ../../ref/forms/api.txt:16
msgid "Bound and unbound forms"
msgstr ""

# 9f95e946da014244a094b8f7ad220804
#: ../../ref/forms/api.txt:18
msgid ""
"A :class:`Form` instance is either **bound** to a set of data, or "
"**unbound**."
msgstr ""

# 379ff79f14ab4a2bb82d5943832feb5b
#: ../../ref/forms/api.txt:20
msgid ""
"If it's **bound** to a set of data, it's capable of validating that data and "
"rendering the form as HTML with the data displayed in the HTML."
msgstr ""

# a7af4a6350344932b83cd56ba2b64a47
#: ../../ref/forms/api.txt:23
msgid ""
"If it's **unbound**, it cannot do validation (because there's no data to "
"validate!), but it can still render the blank form as HTML."
msgstr ""

# 91f734beb3074ba7aa4166a5b7b57f3d
#: ../../ref/forms/api.txt:28
msgid ""
"To create an unbound :class:`Form` instance, simply instantiate the class::"
msgstr ""

# 05b405e8c73d41bda0db1a6a512a9084
#: ../../ref/forms/api.txt:32
msgid ""
"To bind data to a form, pass the data as a dictionary as the first parameter "
"to your :class:`Form` class constructor::"
msgstr ""

# ced95602b2324ff3a94d48334a4149bd
#: ../../ref/forms/api.txt:41
msgid ""
"In this dictionary, the keys are the field names, which correspond to the "
"attributes in your :class:`Form` class. The values are the data you're "
"trying to validate. These will usually be strings, but there's no "
"requirement that they be strings; the type of data you pass depends on the :"
"class:`Field`, as we'll see in a moment."
msgstr ""

# baa6c8808fef44a1ad2ed12d3acdf71b
#: ../../ref/forms/api.txt:49
msgid ""
"If you need to distinguish between bound and unbound form instances at "
"runtime, check the value of the form's :attr:`~Form.is_bound` attribute::"
msgstr ""

# 64524fba9fa847499e48bb6baaec04f8
#: ../../ref/forms/api.txt:59
msgid ""
"Note that passing an empty dictionary creates a *bound* form with empty "
"data::"
msgstr ""

# d269b948204d41d683362945ec74d321
#: ../../ref/forms/api.txt:65
msgid ""
"If you have a bound :class:`Form` instance and want to change the data "
"somehow, or if you want to bind an unbound :class:`Form` instance to some "
"data, create another :class:`Form` instance. There is no way to change data "
"in a :class:`Form` instance. Once a :class:`Form` instance has been created, "
"you should consider its data immutable, whether it has data or not."
msgstr ""

# 5f7897b526ad455d9d7dfc0e11b2c180
#: ../../ref/forms/api.txt:72
msgid "Using forms to validate data"
msgstr ""

# 9dc9a6a2e6a944878208f86f60c16a91
#: ../../ref/forms/api.txt:76
msgid ""
"The primary task of a :class:`Form` object is to validate data. With a "
"bound :class:`Form` instance, call the :meth:`~Form.is_valid` method to run "
"validation and return a boolean designating whether the data was valid::"
msgstr ""

# 67233a8874944523917b0f44f08b1168
#: ../../ref/forms/api.txt:88
msgid ""
"Let's try with some invalid data. In this case, ``subject`` is blank (an "
"error, because all fields are required by default) and ``sender`` is not a "
"valid email address::"
msgstr ""

# 6f6944959c74438697933e818ad89942
#: ../../ref/forms/api.txt:102
msgid ""
"Access the :attr:`~Form.errors` attribute to get a dictionary of error "
"messages::"
msgstr ""

# 58d3bffa80244a1db6bebbd4d9882ce8
#: ../../ref/forms/api.txt:108
msgid ""
"In this dictionary, the keys are the field names, and the values are lists "
"of Unicode strings representing the error messages. The error messages are "
"stored in lists because a field can have multiple error messages."
msgstr ""

# bc8b2598741341eb9a49e1e9d1d75bb0
#: ../../ref/forms/api.txt:112
msgid ""
"You can access :attr:`~Form.errors` without having to call :meth:`~Form."
"is_valid` first. The form's data will be validated the first time either you "
"call :meth:`~Form.is_valid` or access :attr:`~Form.errors`."
msgstr ""

# c176736c4fdf44e68fa59e381beb4c2b
#: ../../ref/forms/api.txt:116
msgid ""
"The validation routines will only get called once, regardless of how many "
"times you access :attr:`~Form.errors` or call :meth:`~Form.is_valid`. This "
"means that if validation has side effects, those side effects will only be "
"triggered once."
msgstr ""

# cddf72ff383d43e0807561b6b5a4e2fa
#: ../../ref/forms/api.txt:121
msgid "Behavior of unbound forms"
msgstr ""

# 1f2128c7939341498358e9920cdf8de4
#: ../../ref/forms/api.txt:123
msgid ""
"It's meaningless to validate a form with no data, but, for the record, "
"here's what happens with unbound forms::"
msgstr ""

# c34e0cb56529479f907bd4b455546a8a
#: ../../ref/forms/api.txt:133
msgid "Dynamic initial values"
msgstr ""

# 76c4f83e780d4ddb9c45302f00b918f9
#: ../../ref/forms/api.txt:137
msgid ""
"Use :attr:`~Form.initial` to declare the initial value of form fields at "
"runtime. For example, you might want to fill in a ``username`` field with "
"the username of the current session."
msgstr ""

# da6cff49e40945a6b10b79db5ff931eb
#: ../../ref/forms/api.txt:141
msgid ""
"To accomplish this, use the :attr:`~Form.initial` argument to a :class:"
"`Form`. This argument, if given, should be a dictionary mapping field names "
"to initial values. Only include the fields for which you're specifying an "
"initial value; it's not necessary to include every field in your form. For "
"example::"
msgstr ""

# d30258d9ca5d44d8895bcda89934810a
#: ../../ref/forms/api.txt:148
msgid ""
"These values are only displayed for unbound forms, and they're not used as "
"fallback values if a particular value isn't provided."
msgstr ""

# f29c76e3e35f4d7f8062df5f8727cf03
#: ../../ref/forms/api.txt:151
msgid ""
"Note that if a :class:`~django.forms.Field` defines :attr:`~Form.initial` "
"*and* you include ``initial`` when instantiating the ``Form``, then the "
"latter ``initial`` will have precedence. In this example, ``initial`` is "
"provided both at the field level and at the form instance level, and the "
"latter gets precedence::"
msgstr ""

# 6c6b46a70687439faa5ad8bf2b193893
#: ../../ref/forms/api.txt:168
msgid "Accessing \"clean\" data"
msgstr ""

# aee80c5460784bcf93c29fc495d50c55
#: ../../ref/forms/api.txt:172
msgid ""
"Each field in a :class:`Form` class is responsible not only for validating "
"data, but also for \"cleaning\" it -- normalizing it to a consistent format. "
"This is a nice feature, because it allows data for a particular field to be "
"input in a variety of ways, always resulting in consistent output."
msgstr ""

# 4dda954ea4604f78a7560047baffa5e0
#: ../../ref/forms/api.txt:177
msgid ""
"For example, :class:`~django.forms.DateField` normalizes input into a Python "
"``datetime.date`` object. Regardless of whether you pass it a string in the "
"format ``'1994-07-15'``, a ``datetime.date`` object, or a number of other "
"formats, ``DateField`` will always normalize it to a ``datetime.date`` "
"object as long as it's valid."
msgstr ""

# defabcc212db4a679d95cfee34c184a9
#: ../../ref/forms/api.txt:183
msgid ""
"Once you've created a :class:`~Form` instance with a set of data and "
"validated it, you can access the clean data via its ``cleaned_data`` "
"attribute::"
msgstr ""

# 724d747c7850472cab70c5e9a6a26015
#: ../../ref/forms/api.txt:196
msgid ""
"Note that any text-based field -- such as ``CharField`` or ``EmailField`` -- "
"always cleans the input into a Unicode string. We'll cover the encoding "
"implications later in this document."
msgstr ""

# 7a9e74c2249040d7b27095357b48d933
#: ../../ref/forms/api.txt:200
msgid ""
"If your data does *not* validate, the ``cleaned_data`` dictionary contains "
"only the valid fields::"
msgstr ""

# 4b354b99f6a54200be11f442332653f3
#: ../../ref/forms/api.txt:215
msgid ""
"Until Django 1.5, the ``cleaned_data`` attribute wasn't defined at all when "
"the ``Form`` didn't validate."
msgstr ""

# f0cfc56f2a7b407598e355f5e6703275
#: ../../ref/forms/api.txt:218
msgid ""
"``cleaned_data`` will always *only* contain a key for fields defined in the "
"``Form``, even if you pass extra data when you define the ``Form``. In this "
"example, we pass a bunch of extra fields to the ``ContactForm`` constructor, "
"but ``cleaned_data`` contains only the form's fields::"
msgstr ""

# 42535c9662484368b6eca73395bb057e
#: ../../ref/forms/api.txt:236
msgid ""
"When the ``Form`` is valid, ``cleaned_data`` will include a key and value "
"for *all* its fields, even if the data didn't include a value for some "
"optional fields. In this example, the data dictionary doesn't include a "
"value for the ``nick_name`` field, but ``cleaned_data`` includes it, with an "
"empty value::"
msgstr ""

# 7e0f3f338f094121bfb00e6e817ba7ec
#: ../../ref/forms/api.txt:252
msgid ""
"In this above example, the ``cleaned_data`` value for ``nick_name`` is set "
"to an empty string, because ``nick_name`` is ``CharField``, and ``CharField``"
"\\s treat empty values as an empty string. Each field type knows what its "
"\"blank\" value is -- e.g., for ``DateField``, it's ``None`` instead of the "
"empty string. For full details on each field's behavior in this case, see "
"the \"Empty value\" note for each field in the \"Built-in ``Field`` classes"
"\" section below."
msgstr ""

# c0c6031adf3640168d02a2585222d88f
#: ../../ref/forms/api.txt:259
msgid ""
"You can write code to perform validation for particular form fields (based "
"on their name) or for the form as a whole (considering combinations of "
"various fields). More information about this is in :doc:`/ref/forms/"
"validation`."
msgstr ""

# 165a209f93524881b6e33bbc81663fc6
#: ../../ref/forms/api.txt:264
msgid "Outputting forms as HTML"
msgstr ""

# 0da75d83d7f24910a5f36bc90777ffda
#: ../../ref/forms/api.txt:266
msgid ""
"The second task of a ``Form`` object is to render itself as HTML. To do so, "
"simply ``print`` it::"
msgstr ""

# 026c1e9634094e4b87f9b2f510745551
#: ../../ref/forms/api.txt:276
msgid ""
"If the form is bound to data, the HTML output will include that data "
"appropriately. For example, if a field is represented by an ``<input type="
"\"text\">``, the data will be in the ``value`` attribute. If a field is "
"represented by an ``<input type=\"checkbox\">``, then that HTML will include "
"``checked=\"checked\"`` if appropriate::"
msgstr ""

# 0f9bc04d219f452db9ba73c769fc2c9c
#: ../../ref/forms/api.txt:293
msgid ""
"This default output is a two-column HTML table, with a ``<tr>`` for each "
"field. Notice the following:"
msgstr ""

# 01156d044b65460fab893ef124a5c348
#: ../../ref/forms/api.txt:296
msgid ""
"For flexibility, the output does *not* include the ``<table>`` and ``</"
"table>`` tags, nor does it include the ``<form>`` and ``</form>`` tags or an "
"``<input type=\"submit\">`` tag. It's your job to do that."
msgstr ""

# 16fcf498c0db44cbab3298e92f8311ca
#: ../../ref/forms/api.txt:300
msgid ""
"Each field type has a default HTML representation. ``CharField`` and "
"``EmailField`` are represented by an ``<input type=\"text\">``. "
"``BooleanField`` is represented by an ``<input type=\"checkbox\">``. Note "
"these are merely sensible defaults; you can specify which HTML to use for a "
"given field by using widgets, which we'll explain shortly."
msgstr ""

# c40984f97d284efb9d8508259e7eedac
#: ../../ref/forms/api.txt:306
msgid ""
"The HTML ``name`` for each tag is taken directly from its attribute name in "
"the ``ContactForm`` class."
msgstr ""

# 0c911c81a243411db40e0e50876c169f
#: ../../ref/forms/api.txt:309
msgid ""
"The text label for each field -- e.g. ``'Subject:'``, ``'Message:'`` and "
"``'Cc myself:'`` is generated from the field name by converting all "
"underscores to spaces and upper-casing the first letter. Again, note these "
"are merely sensible defaults; you can also specify labels manually."
msgstr ""

# af4af2e75e3e4f3681be1c559999f7cd
#: ../../ref/forms/api.txt:314
msgid ""
"Each text label is surrounded in an HTML ``<label>`` tag, which points to "
"the appropriate form field via its ``id``. Its ``id``, in turn, is generated "
"by prepending ``'id_'`` to the field name. The ``id`` attributes and "
"``<label>`` tags are included in the output by default, to follow best "
"practices, but you can change that behavior."
msgstr ""

# 9f29560b74644af38474d378415c6d41
#: ../../ref/forms/api.txt:320
msgid ""
"Although ``<table>`` output is the default output style when you ``print`` a "
"form, other output styles are available. Each style is available as a method "
"on a form object, and each rendering method returns a Unicode object."
msgstr ""

# 0eea5347eda5414fa2798d0a0e9421d5
#: ../../ref/forms/api.txt:325
msgid "``as_p()``"
msgstr ""

# a31e358a045c4cb0b1821b5999108d1f
#: ../../ref/forms/api.txt:329
msgid ""
"``as_p()`` renders the form as a series of ``<p>`` tags, with each ``<p>`` "
"containing one field::"
msgstr ""

# 08e95532f1fc43b3a45f272a3b02f358
#: ../../ref/forms/api.txt:342
msgid "``as_ul()``"
msgstr ""

# 9292abd5105f4ea5a520ee3e892cd8b0
#: ../../ref/forms/api.txt:346
msgid ""
"``as_ul()`` renders the form as a series of ``<li>`` tags, with each "
"``<li>`` containing one field. It does *not* include the ``<ul>`` or ``</"
"ul>``, so that you can specify any HTML attributes on the ``<ul>`` for "
"flexibility::"
msgstr ""

# 410e986a6201422f9a7f9e3eb6552d1f
#: ../../ref/forms/api.txt:361
msgid "``as_table()``"
msgstr ""

# 66578c27b8814e099823caba68546400
#: ../../ref/forms/api.txt:365
msgid ""
"Finally, ``as_table()`` outputs the form as an HTML ``<table>``. This is "
"exactly the same as ``print``. In fact, when you ``print`` a form object, it "
"calls its ``as_table()`` method behind the scenes::"
msgstr ""

# 1dd1d32a1a4847e189b9b33bebaec97a
#: ../../ref/forms/api.txt:379
msgid "Styling required or erroneous form rows"
msgstr ""

# 1d414078a787404a93645c2236f24d4d
#: ../../ref/forms/api.txt:384
msgid ""
"It's pretty common to style form rows and fields that are required or have "
"errors. For example, you might want to present required form rows in bold "
"and highlight errors in red."
msgstr ""

# 7409f91547734261b22b7640a3f3a1b5
#: ../../ref/forms/api.txt:388
msgid ""
"The :class:`Form` class has a couple of hooks you can use to add ``class`` "
"attributes to required rows or to rows with errors: simply set the :attr:"
"`Form.error_css_class` and/or :attr:`Form.required_css_class` attributes::"
msgstr ""

# c571bdabb1de419eacc24979c5167f88
#: ../../ref/forms/api.txt:399
msgid ""
"Once you've done that, rows will be given ``\"error\"`` and/or ``\"required"
"\"`` classes, as needed. The HTML will look something like::"
msgstr ""

# 15f869cb281a4b03b4efe90bcfa2a443
#: ../../ref/forms/api.txt:412
msgid "Configuring HTML ``<label>`` tags"
msgstr ""

# 81699e829f25460784b7caa30391e7dc
#: ../../ref/forms/api.txt:414
msgid ""
"An HTML ``<label>`` tag designates which label text is associated with which "
"form element. This small enhancement makes forms more usable and more "
"accessible to assistive devices. It's always a good idea to use ``<label>`` "
"tags."
msgstr ""

# bce80a9332924d15934ee548e416a70f
#: ../../ref/forms/api.txt:418
msgid ""
"By default, the form rendering methods include HTML ``id`` attributes on the "
"form elements and corresponding ``<label>`` tags around the labels. The "
"``id`` attribute values are generated by prepending ``id_`` to the form "
"field names. This behavior is configurable, though, if you want to change "
"the ``id`` convention or remove HTML ``id`` attributes and ``<label>`` tags "
"entirely."
msgstr ""

# e722f0bbe74b4abfb3308cad9457d729
#: ../../ref/forms/api.txt:424
msgid ""
"Use the ``auto_id`` argument to the ``Form`` constructor to control the "
"label and ``id`` behavior. This argument must be ``True``, ``False`` or a "
"string."
msgstr ""

# ea2cca8638a7499586be8dd5a091cc58
#: ../../ref/forms/api.txt:427
msgid ""
"If ``auto_id`` is ``False``, then the form output will not include "
"``<label>`` tags nor ``id`` attributes::"
msgstr ""

# bf5af1d59b6447fcadeef740ec4c8ab2
#: ../../ref/forms/api.txt:447
msgid ""
"If ``auto_id`` is set to ``True``, then the form output *will* include "
"``<label>`` tags and will simply use the field name as its ``id`` for each "
"form field::"
msgstr ""

# cefb333678d143ca948bdad43341d63c
#: ../../ref/forms/api.txt:468
msgid ""
"If ``auto_id`` is set to a string containing the format character ``'%s'``, "
"then the form output will include ``<label>`` tags, and will generate ``id`` "
"attributes based on the format string. For example, for a format string "
"``'field_%s'``, a field named ``subject`` will get the ``id`` value "
"``'field_subject'``. Continuing our example::"
msgstr ""

# f0ca07640312438586789174de7a6b04
#: ../../ref/forms/api.txt:491
msgid ""
"If ``auto_id`` is set to any other true value -- such as a string that "
"doesn't include ``%s`` -- then the library will act as if ``auto_id`` is "
"``True``."
msgstr ""

# b6fa7c721d224355a2eeb6a0201a4f2c
#: ../../ref/forms/api.txt:494
msgid "By default, ``auto_id`` is set to the string ``'id_%s'``."
msgstr ""

# 2ee0aa61a9f74322a85ab0a29da4a3f3
#: ../../ref/forms/api.txt:496
msgid ""
"Normally, a colon (``:``) will be appended after any label name when a form "
"is rendered. It's possible to change the colon to another character, or omit "
"it entirely, using the ``label_suffix`` parameter::"
msgstr ""

# 3378798f0b254a6181de08e93d279e4b
#: ../../ref/forms/api.txt:513
msgid ""
"Note that the label suffix is added only if the last character of the label "
"isn't a punctuation character (``.``, ``!``, ``?`` or ``:``)"
msgstr ""

# 7bf647010b06478880ad4efc91b05995
#: ../../ref/forms/api.txt:517
msgid "Notes on field ordering"
msgstr ""

# 8f350adc02794afebb91fb45f8d1109a
#: ../../ref/forms/api.txt:519
msgid ""
"In the ``as_p()``, ``as_ul()`` and ``as_table()`` shortcuts, the fields are "
"displayed in the order in which you define them in your form class. For "
"example, in the ``ContactForm`` example, the fields are defined in the order "
"``subject``, ``message``, ``sender``, ``cc_myself``. To reorder the HTML "
"output, just change the order in which those fields are listed in the class."
msgstr ""

# 5de82409fdba49efb2ca9aae7c19a12a
#: ../../ref/forms/api.txt:526
msgid "How errors are displayed"
msgstr ""

# ed29c8d4e47e42f0a5dbe532007fa617
#: ../../ref/forms/api.txt:528
msgid ""
"If you render a bound ``Form`` object, the act of rendering will "
"automatically run the form's validation if it hasn't already happened, and "
"the HTML output will include the validation errors as a ``<ul class="
"\"errorlist\">`` near the field. The particular positioning of the error "
"messages depends on the output method you're using::"
msgstr ""

# bcdda8504bd04b0e845991a399f9322b
#: ../../ref/forms/api.txt:558
msgid "Customizing the error list format"
msgstr ""

# 34af5c91b5ad4414811003ff6b82c95f
#: ../../ref/forms/api.txt:560
msgid ""
"By default, forms use ``django.forms.util.ErrorList`` to format validation "
"errors. If you'd like to use an alternate class for displaying errors, you "
"can pass that in at construction time::"
msgstr ""

# 255b13d15d4243849afbd23e895f2959
#: ../../ref/forms/api.txt:581
msgid "More granular output"
msgstr ""

# 3fb84702f2a34fc4854004e14c6a3fcd
#: ../../ref/forms/api.txt:583
msgid ""
"The ``as_p()``, ``as_ul()`` and ``as_table()`` methods are simply shortcuts "
"for lazy developers -- they're not the only way a form object can be "
"displayed."
msgstr ""

# 28f07542a94d4a9dab5429229c62705e
#: ../../ref/forms/api.txt:588
msgid ""
"Used to display HTML or access attributes for a single field of a :class:"
"`Form` instance."
msgstr ""

# f5a6dc9d6e6c418d815515801947356b
#: ../../ref/forms/api.txt:591
msgid ""
"The ``__unicode__()`` and ``__str__()`` methods of this object displays the "
"HTML for this field."
msgstr ""

# 2e0aec1fc11f4f7b9b277c429a391d4b
#: ../../ref/forms/api.txt:594
msgid ""
"To retrieve a single ``BoundField``, use dictionary lookup syntax on your "
"form using the field's name as the key::"
msgstr ""

# deda773ddc6a410aa58cf0252c5d6c08
#: ../../ref/forms/api.txt:601
msgid "To retrieve all ``BoundField`` objects, iterate the form::"
msgstr ""

# b5768f4f0c964efa997ad22ca834c3c6
#: ../../ref/forms/api.txt:610
msgid ""
"The field-specific output honors the form object's ``auto_id`` setting::"
msgstr ""

# 9f948e4f0e00406183a72c16c0f2d150
#: ../../ref/forms/api.txt:619
msgid "For a field's list of errors, access the field's ``errors`` attribute."
msgstr ""

# e9ccc17b8a8546948d09694e2c86e388
#: ../../ref/forms/api.txt:623
msgid ""
"A list-like object that is displayed as an HTML ``<ul class=\"errorlist\">`` "
"when printed::"
msgstr ""

# ea4849587f4344ddadfb2ab72bead54e
#: ../../ref/forms/api.txt:643
msgid ""
"To separately render the label tag of a form field, you can call its "
"``label_tag`` method::"
msgstr ""

# 47b5bcb5f884404984b47b829a5d0df5
#: ../../ref/forms/api.txt:650
msgid ""
"Optionally, you can provide the ``contents`` parameter which will replace "
"the auto-generated label tag. An optional ``attrs`` dictionary may contain "
"additional attributes for the ``<label>`` tag."
msgstr ""

# 0bdfa4dc70f448fbbf871ef787298379
#: ../../ref/forms/api.txt:656
msgid ""
"When you use Django's rendering shortcuts, CSS classes are used to indicate "
"required form fields or fields that contain errors. If you're manually "
"rendering a form, you can access these CSS classes using the ``css_classes`` "
"method::"
msgstr ""

# 3193df33b2a14c19837b3dc4068de7ae
#: ../../ref/forms/api.txt:665
msgid ""
"If you want to provide some additional classes in addition to the error and "
"required classes that may be required, you can provide those classes as an "
"argument::"
msgstr ""

# 85c53b92329440109c0bcf1c9eb05d35
#: ../../ref/forms/api.txt:675
msgid ""
"Use this method to render the raw value of this field as it would be "
"rendered by a ``Widget``::"
msgstr ""

# e9ff2b4315514c009000aebc6aec12ba
#: ../../ref/forms/api.txt:688
msgid ""
"Use this property to render the ID of this field. For example, if you are "
"manually constructing a ``<label>`` in your template (despite the fact that :"
"meth:`~BoundField.label_tag` will do this for you):"
msgstr ""

# dd1d772a7828429bb4bc71c9cef50b00
#: ../../ref/forms/api.txt:696
msgid ""
"By default, this will be the field's name prefixed by ``id_`` "
"(\"``id_my_field``\" for the example above). You may modify the ID by "
"setting :attr:`~django.forms.Widget.attrs` on the field's widget. For "
"example, declaring a field like this::"
msgstr ""

# 813c0b9cf4824939b6b73755be3fe0a8
#: ../../ref/forms/api.txt:703
msgid "and using the template above, would render something like:"
msgstr ""

# daf8e2cd1ce24786b9a8938a138d74cd
#: ../../ref/forms/api.txt:712
msgid "Binding uploaded files to a form"
msgstr ""

# 88d8575860f94dffb3ad1b88881fa9d4
#: ../../ref/forms/api.txt:691
msgid ""
"Dealing with forms that have ``FileField`` and ``ImageField`` fields is a "
"little more complicated than a normal form."
msgstr ""

# a1378a42c6c34f328bb145929a67b193
#: ../../ref/forms/api.txt:694
msgid ""
"Firstly, in order to upload files, you'll need to make sure that your "
"``<form>`` element correctly defines the ``enctype`` as ``\"multipart/form-"
"data\"``::"
msgstr ""

# b2307de1587546e4843b8c9bd7e1a843
#: ../../ref/forms/api.txt:700
msgid ""
"Secondly, when you use the form, you need to bind the file data. File data "
"is handled separately to normal form data, so when your form contains a "
"``FileField`` and ``ImageField``, you will need to specify a second argument "
"when you bind your form. So if we extend our ContactForm to include an "
"``ImageField`` called ``mugshot``, we need to bind the file data containing "
"the mugshot image::"
msgstr ""

# a569049494444314b106bc03ae48b137
#: ../../ref/forms/api.txt:716
msgid ""
"In practice, you will usually specify ``request.FILES`` as the source of "
"file data (just like you use ``request.POST`` as the source of form data)::"
msgstr ""

# 028bbe64cf1f4b8d9edc885f093d1470
#: ../../ref/forms/api.txt:723
msgid ""
"Constructing an unbound form is the same as always -- just omit both form "
"data *and* file data::"
msgstr ""

# eb828c31012347189dc2d98b7015ebd6
#: ../../ref/forms/api.txt:730
msgid "Testing for multipart forms"
msgstr ""

# ecc1771720fe4115869ab1c99313dc5e
#: ../../ref/forms/api.txt:734
msgid ""
"If you're writing reusable views or templates, you may not know ahead of "
"time whether your form is a multipart form or not. The ``is_multipart()`` "
"method tells you whether the form requires multipart encoding for "
"submission::"
msgstr ""

# 5f49cb2ca7b847fe9661fb455c2e768f
#: ../../ref/forms/api.txt:742
msgid "Here's an example of how you might use this in a template::"
msgstr ""

# 396161fd7b174ac6a783c4df0e57b1b6
#: ../../ref/forms/api.txt:753
msgid "Subclassing forms"
msgstr ""

# e0405490e4844c5c9bcd778fbf8bc5c9
#: ../../ref/forms/api.txt:755
msgid ""
"If you have multiple ``Form`` classes that share fields, you can use "
"subclassing to remove redundancy."
msgstr ""

# ac526385546a43d5941a1736e78cbd37
#: ../../ref/forms/api.txt:758
msgid ""
"When you subclass a custom ``Form`` class, the resulting subclass will "
"include all fields of the parent class(es), followed by the fields you "
"define in the subclass."
msgstr ""

# 6611514c1ed84efebf349edf367862bf
#: ../../ref/forms/api.txt:762
msgid ""
"In this example, ``ContactFormWithPriority`` contains all the fields from "
"``ContactForm``, plus an additional field, ``priority``. The ``ContactForm`` "
"fields are ordered first::"
msgstr ""

# e496886d8a90474195f0be5a8fcb2f85
#: ../../ref/forms/api.txt:776
msgid ""
"It's possible to subclass multiple forms, treating forms as \"mix-ins.\" In "
"this example, ``BeatleForm`` subclasses both ``PersonForm`` and "
"``InstrumentForm`` (in that order), and its field list includes the fields "
"from the parent classes::"
msgstr ""

# fcc856902a1e4e2d9a01e83096c111cd
#: ../../ref/forms/api.txt:798
msgid "Prefixes for forms"
msgstr ""

# 3d4fb11e7c134fa89b36cbe1cabfd753
#: ../../ref/forms/api.txt:802
msgid ""
"You can put several Django forms inside one ``<form>`` tag. To give each "
"``Form`` its own namespace, use the ``prefix`` keyword argument::"
msgstr ""

# bde64754137e4c4c9a26d8caf48c05da
#: ../../ref/forms/fields.txt:3
msgid "Form fields"
msgstr ""

# 52562d10819b4b418f987243699b6503
#: ../../ref/forms/fields.txt:12
msgid ""
"When you create a ``Form`` class, the most important part is defining the "
"fields of the form. Each field has custom validation logic, along with a few "
"other hooks."
msgstr ""

# 4f9dcb8f734141c0bc337dd729243f8d
#: ../../ref/forms/fields.txt:18
msgid ""
"Although the primary way you'll use ``Field`` classes is in ``Form`` "
"classes, you can also instantiate them and use them directly to get a better "
"idea of how they work. Each ``Field`` instance has a ``clean()`` method, "
"which takes a single argument and either raises a ``django.forms."
"ValidationError`` exception or returns the clean value::"
msgstr ""

# 4e46c1b0b13747a280400468cc6501e7
#: ../../ref/forms/fields.txt:34
msgid "Core field arguments"
msgstr ""

# 736e3ec169124a809639acd6be89e130
#: ../../ref/forms/fields.txt:36
msgid ""
"Each ``Field`` class constructor takes at least these arguments. Some "
"``Field`` classes take additional, field-specific arguments, but the "
"following should *always* be accepted:"
msgstr ""

# aaa7f622c8d14035b748825de43cd01c
#: ../../ref/forms/fields.txt:41
msgid "``required``"
msgstr ""

# cfbf33836acb4d14bbcc2aa3cdffa4fd
#: ../../ref/forms/fields.txt:45
msgid ""
"By default, each ``Field`` class assumes the value is required, so if you "
"pass an empty value -- either ``None`` or the empty string (``\"\"``) -- "
"then ``clean()`` will raise a ``ValidationError`` exception::"
msgstr ""

# d5942f769eb54f6083320d9da090f126
#: ../../ref/forms/fields.txt:69
msgid ""
"To specify that a field is *not* required, pass ``required=False`` to the "
"``Field`` constructor::"
msgstr ""

# a7f1f84262bb4c659e3d29748de8535d
#: ../../ref/forms/fields.txt:86
msgid ""
"If a ``Field`` has ``required=False`` and you pass ``clean()`` an empty "
"value, then ``clean()`` will return a *normalized* empty value rather than "
"raising ``ValidationError``. For ``CharField``, this will be a Unicode empty "
"string. For other ``Field`` classes, it might be ``None``. (This varies from "
"field to field.)"
msgstr ""

# 210c680e36ac4dbabe6ee11b20d949ff
#: ../../ref/forms/fields.txt:93
msgid "``label``"
msgstr ""

# 982c98bafbfd4b189c95a292f5164a35
#: ../../ref/forms/fields.txt:97
msgid ""
"The ``label`` argument lets you specify the \"human-friendly\" label for "
"this field. This is used when the ``Field`` is displayed in a ``Form``."
msgstr ""

# ecaf05316ebf487b9cbed5bf0357f1a6
#: ../../ref/forms/fields.txt:100
msgid ""
"As explained in \"Outputting forms as HTML\" above, the default label for a "
"``Field`` is generated from the field name by converting all underscores to "
"spaces and upper-casing the first letter. Specify ``label`` if that default "
"behavior doesn't result in an adequate label."
msgstr ""

# 1872e46a9625409b8ef4f6d36b9991bf
#: ../../ref/forms/fields.txt:105
msgid ""
"Here's a full example ``Form`` that implements ``label`` for two of its "
"fields. We've specified ``auto_id=False`` to simplify the output::"
msgstr ""

# 1af55b5987124125be0b32aa30ab7d13
#: ../../ref/forms/fields.txt:119
msgid "``initial``"
msgstr ""

# 5870f69f6af54be1a25d6d1aaa2aca27
#: ../../ref/forms/fields.txt:123
msgid ""
"The ``initial`` argument lets you specify the initial value to use when "
"rendering this ``Field`` in an unbound ``Form``."
msgstr ""

# f88d64ed00f645438bb094772a40742d
#: ../../ref/forms/fields.txt:126
msgid ""
"To specify dynamic initial data, see the :attr:`Form.initial` parameter."
msgstr ""

# 517e82853fd44ec09232c5ae1e3c53a6
#: ../../ref/forms/fields.txt:128
msgid ""
"The use-case for this is when you want to display an \"empty\" form in which "
"a field is initialized to a particular value. For example::"
msgstr ""

# 88c52ed7b0bb40d4911142a71ac968e5
#: ../../ref/forms/fields.txt:141
msgid ""
"You may be thinking, why not just pass a dictionary of the initial values as "
"data when displaying the form? Well, if you do that, you'll trigger "
"validation, and the HTML output will include any validation errors::"
msgstr ""

# 91b4cc9dc9b648f3a510af263ba44440
#: ../../ref/forms/fields.txt:156
msgid ""
"This is why ``initial`` values are only displayed for unbound forms. For "
"bound forms, the HTML output will use the bound data."
msgstr ""

# fc11874046fc419187d039642ddd9f24
#: ../../ref/forms/fields.txt:159
msgid ""
"Also note that ``initial`` values are *not* used as \"fallback\" data in "
"validation if a particular field's value is not given. ``initial`` values "
"are *only* intended for initial form display::"
msgstr ""

# bc24aa34e9054cfa83e2e7d5be146b38
#: ../../ref/forms/fields.txt:175
msgid "Instead of a constant, you can also pass any callable::"
msgstr ""

# c8ae683776ba4a288751580e9268b405
#: ../../ref/forms/fields.txt:183
msgid ""
"The callable will be evaluated only when the unbound form is displayed, not "
"when it is defined."
msgstr ""

# 17b7f4ea58144c58bf3117ae8750ca99
#: ../../ref/forms/fields.txt:186
msgid "``widget``"
msgstr ""

# 242717bd03b24c888cf2edaae41f64a8
#: ../../ref/forms/fields.txt:190
msgid ""
"The ``widget`` argument lets you specify a ``Widget`` class to use when "
"rendering this ``Field``. See :doc:`/ref/forms/widgets` for more information."
msgstr ""

# c370f61949ea4a2d82e71aeddb3f935b
# 92d6b6d44723432386639a812fac97c7
#: ../../ref/forms/fields.txt:194 ../../ref/models/fields.txt:228
msgid "``help_text``"
msgstr ""

# a160221afc7c40d9914fe0d646821d3f
#: ../../ref/forms/fields.txt:198
msgid ""
"The ``help_text`` argument lets you specify descriptive text for this "
"``Field``. If you provide ``help_text``, it will be displayed next to the "
"``Field`` when the ``Field`` is rendered by one of the convenience ``Form`` "
"methods (e.g., ``as_ul()``)."
msgstr ""

# 9e50a2a497fd46b3972f748aec0db1ad
#: ../../ref/forms/fields.txt:203
msgid ""
"Here's a full example ``Form`` that implements ``help_text`` for two of its "
"fields. We've specified ``auto_id=False`` to simplify the output::"
msgstr ""

# 85e0febc5eef4917a3f4201305136fd6
# 02099709f03e47a5af2fba78d2de17ac
#: ../../ref/forms/fields.txt:229 ../../ref/models/fields.txt:215
msgid "``error_messages``"
msgstr ""

# 54ab34b317144af5b2d0632e2fb50c74
#: ../../ref/forms/fields.txt:233
msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the field will raise. Pass in a dictionary with keys matching the error "
"messages you want to override. For example, here is the default error "
"message::"
msgstr ""

# 40accea0dfaf47a0a731d8f4b33e46f8
#: ../../ref/forms/fields.txt:243
msgid "And here is a custom error message::"
msgstr ""

# 4f5db01b8ed7479e94931d19ae06900b
#: ../../ref/forms/fields.txt:251
msgid ""
"In the `built-in Field classes`_ section below, each ``Field`` defines the "
"error message keys it uses."
msgstr ""

# 1c8546902a054acfa4be1adb616a15ef
# a6eb415f95384ee1b82d02729620b149
#: ../../ref/forms/fields.txt:255 ../../ref/models/fields.txt:317
msgid "``validators``"
msgstr ""

# e22972746591407dafc43acbcd8363bf
#: ../../ref/forms/fields.txt:259
msgid ""
"The ``validators`` argument lets you provide a list of validation functions "
"for this field."
msgstr ""

# 9768c6a7bcb44ecf8d7d0152a93c340b
#: ../../ref/forms/fields.txt:262
msgid ""
"See the :doc:`validators documentation </ref/validators>` for more "
"information."
msgstr ""

# db85d21ed73c4c9e99ad87a41dfeffba
#: ../../ref/forms/fields.txt:265
msgid "``localize``"
msgstr ""

# 2bba1fef4c824050a3860fdc6c0dc373
#: ../../ref/forms/fields.txt:269
msgid ""
"The ``localize`` argument enables the localization of form data, input as "
"well as the rendered output."
msgstr ""

# 9307162e8c234015ac3845d9fe3460e3
#: ../../ref/forms/fields.txt:272
msgid ""
"See the :ref:`format localization <format-localization>` documentation for "
"more information."
msgstr ""

# 854458c6e164467ca5d7f29a298237b0
#: ../../ref/forms/fields.txt:278
msgid "Built-in ``Field`` classes"
msgstr ""

# c66b0a38c03c44c98336edaa6306d37e
#: ../../ref/forms/fields.txt:280
msgid ""
"Naturally, the ``forms`` library comes with a set of ``Field`` classes that "
"represent common validation needs. This section documents each built-in "
"field."
msgstr ""

# a9d47611128c421c9293379913e8ed7a
#: ../../ref/forms/fields.txt:283
msgid ""
"For each field, we describe the default widget used if you don't specify "
"``widget``. We also specify the value returned when you provide an empty "
"value (see the section on ``required`` above to understand what that means)."
msgstr ""

# 153a35876c7e48f2a3d3e25bb3b0dc48
# a8b8671b33694293a8c0cb3c540bb57a
#: ../../ref/forms/fields.txt:288 ../../ref/models/fields.txt:352
msgid "``BooleanField``"
msgstr ""

# 610242943acf46e2a03b18a06cb35ef2
#: ../../ref/forms/fields.txt:292
msgid "Default widget: :class:`CheckboxInput`"
msgstr ""

# caa460f2dc9e42dda2d4cb5cef9d628a
#: ../../ref/forms/fields.txt:293
msgid "Empty value: ``False``"
msgstr ""

# 566aa2ba1e784f8bbdd3c77d8a350952
#: ../../ref/forms/fields.txt:294
msgid "Normalizes to: A Python ``True`` or ``False`` value."
msgstr ""

# c9f9091b6fbf4bbb96a2dfe7a4c303c5
#: ../../ref/forms/fields.txt:295
msgid ""
"Validates that the value is ``True`` (e.g. the check box is checked) if the "
"field has ``required=True``."
msgstr ""

# df91f2155e674354b11d0fe6b2f4a1d7
#: ../../ref/forms/fields.txt:297
msgid "Error message keys: ``required``"
msgstr ""

# 6a4ba0027d5d476c8aa09080afb227ab
#: ../../ref/forms/fields.txt:301
msgid ""
"Since all ``Field`` subclasses have ``required=True`` by default, the "
"validation condition here is important. If you want to include a boolean in "
"your form that can be either ``True`` or ``False`` (e.g. a checked or "
"unchecked checkbox), you must remember to pass in ``required=False`` when "
"creating the ``BooleanField``."
msgstr ""

# 57ffc7cac60b40529ba4f5d38a7e1a21
# 352ed2ba8a994d07a638c9089b789a1d
#: ../../ref/forms/fields.txt:308 ../../ref/models/fields.txt:365
msgid "``CharField``"
msgstr ""

# ab9edec5378c44c582824bcd169949ca
# 2a462380de4a4d5d8df08eab4775f597
# a12600215c4149d382d686ff19ad250a
# d654146bfb2a43b9bcc89a3fd7fb0896
# 836ab85fc4da452e9d4e6a2b9a255b4c
# 3a3f8b960a81447cba8564c93e13ff8e
# 1cddb98a08b64854839ee0f44fa604dd
# 5a2b8353573b4d94a4d040a868350b05
# a26afc857df7480387610e45de818397
# 0ab59e8af4b34c6ea3358236139ec5b3
# 1cc90fdd0dc54add8a2c549769d9df14
# bfdbac3995eb42858dcd0742da894803
# e664f5bf0e9d49c0b7c52a90200bd8dc
#: ../../ref/forms/fields.txt:312 ../../ref/forms/fields.txt:457
#: ../../ref/forms/fields.txt:492 ../../ref/forms/fields.txt:583
#: ../../ref/forms/fields.txt:624 ../../ref/forms/fields.txt:647
#: ../../ref/forms/fields.txt:663 ../../ref/forms/fields.txt:744
#: ../../ref/forms/fields.txt:771 ../../ref/forms/fields.txt:786
#: ../../ref/forms/fields.txt:810 ../../ref/forms/fields.txt:832
#: ../../ref/forms/fields.txt:859
msgid "Default widget: :class:`TextInput`"
msgstr ""

# c6d6cbaa2b37419a9f854e24c8836a70
# de82ea3ea4694b148e19f2a03fffa2f8
# d9a9be239ac8485d92fe41c1b8dd5343
# e6d7287fde284f88ac5865e62a857742
# 72c42533fdfa44148469877093ec725a
# 42c9576e0b7d475183b5273770acac84
# d6db8cac677b4196887005f313d61c72
# ab8ed7600f534047be78701fcc45c143
# 21b45f7dc0884f9b98063c2134fd51b0
# 8b5e7aa030c54a84ad33477e6ae1a731
#: ../../ref/forms/fields.txt:313 ../../ref/forms/fields.txt:333
#: ../../ref/forms/fields.txt:493 ../../ref/forms/fields.txt:648
#: ../../ref/forms/fields.txt:664 ../../ref/forms/fields.txt:745
#: ../../ref/forms/fields.txt:772 ../../ref/forms/fields.txt:811
#: ../../ref/forms/fields.txt:833 ../../ref/forms/fields.txt:860
msgid "Empty value: ``''`` (an empty string)"
msgstr ""

# 4b3210b703be4aa9876fe288ca57d7e8
# 5d078c707f7d4fcd8a6e70a0846c106c
# fcefd8002d154ba8a289a2e04744b245
# f005339e75184eb69143bd6348653699
# cfea83470cd74390a9266376e8bc27e6
# 892da0204c284d96ac0e514bba4a9fe4
# 407dd2efdc8d4a51bd957a8be3553a47
# 6ab4586ad9fc46aa87923b6dc6f0520e
#: ../../ref/forms/fields.txt:314 ../../ref/forms/fields.txt:334
#: ../../ref/forms/fields.txt:494 ../../ref/forms/fields.txt:649
#: ../../ref/forms/fields.txt:746 ../../ref/forms/fields.txt:773
#: ../../ref/forms/fields.txt:812 ../../ref/forms/fields.txt:834
msgid "Normalizes to: A Unicode object."
msgstr ""

# 9478b33dca944a869ff6d87bd29dd230
#: ../../ref/forms/fields.txt:315
msgid ""
"Validates ``max_length`` or ``min_length``, if they are provided. Otherwise, "
"all inputs are valid."
msgstr ""

# 3bb12cb6ee0d414ea07579964cc8491e
#: ../../ref/forms/fields.txt:317
msgid "Error message keys: ``required``, ``max_length``, ``min_length``"
msgstr ""

# 2992266f115c46658d945c0540f7273f
#: ../../ref/forms/fields.txt:319
msgid "Has two optional arguments for validation:"
msgstr ""

# 28fe368ea52d4c9599f9b6c2f834208b
#: ../../ref/forms/fields.txt:324
msgid ""
"If provided, these arguments ensure that the string is at most or at least "
"the given length."
msgstr ""

# 4dce07116ea34adab6e1d7189b61b4a2
#: ../../ref/forms/fields.txt:328
msgid "``ChoiceField``"
msgstr ""

# fe3edb95b7424b98acd564a25bc19eb5
# 8be10af775284b07a850e8e0becb6cab
# e058e1fee4e64353b3514c9c6151e6cc
# 3d40807668ba4adcb0d9f0e0a3b54543
#: ../../ref/forms/fields.txt:332 ../../ref/forms/fields.txt:358
#: ../../ref/forms/fields.txt:536 ../../ref/forms/fields.txt:948
msgid "Default widget: :class:`Select`"
msgstr ""

# 5de5d5b8baef4a7cacb851221f0be62b
#: ../../ref/forms/fields.txt:335
msgid "Validates that the given value exists in the list of choices."
msgstr ""

# bb6218d3e29847ac8d50832b1df8832d
# 05a9e7d89c6d4023b60d70166fe695c6
# 19f88febcfc54c3cafed2f4af529217a
# 3ffb0c0fb3494a63a4667b99d4243115
# 20835ab0e1b247558d6af2fbc9dcf0a1
#: ../../ref/forms/fields.txt:336 ../../ref/forms/fields.txt:363
#: ../../ref/forms/fields.txt:540 ../../ref/forms/fields.txt:722
#: ../../ref/forms/fields.txt:952
msgid "Error message keys: ``required``, ``invalid_choice``"
msgstr ""

# cd4093f9cf3a4d16aee13501619a6cb4
# aef425138f4647f3b57c2c91102aafbd
# 161432d354f34db29f509f5222a61e9a
#: ../../ref/forms/fields.txt:338 ../../ref/forms/fields.txt:703
#: ../../ref/forms/fields.txt:724
msgid ""
"The ``invalid_choice`` error message may contain ``%(value)s``, which will "
"be replaced with the selected choice."
msgstr ""

# 304e03cb9b2842399c8108403443d203
# 7e9dfeb4d3eb46e989f28b5165a357ce
# f74f69c033254f0198380e14f176da2c
#: ../../ref/forms/fields.txt:341 ../../ref/forms/fields.txt:839
#: ../../ref/forms/fields.txt:874
msgid "Takes one extra required argument:"
msgstr ""

# 88bcd7000a294877aef1fc01db28a1f5
#: ../../ref/forms/fields.txt:345
msgid ""
"An iterable (e.g., a list or tuple) of 2-tuples to use as choices for this "
"field. This argument accepts the same formats as the ``choices`` argument to "
"a model field. See the :ref:`model field reference documentation on choices "
"<field-choices>` for more details."
msgstr ""

# aabc44c1eb5544e0b24455384126fd4e
#: ../../ref/forms/fields.txt:351
msgid "``TypedChoiceField``"
msgstr ""

# b02c8567f4ed44a6a41e90a73d653aaa
#: ../../ref/forms/fields.txt:355
msgid ""
"Just like a :class:`ChoiceField`, except :class:`TypedChoiceField` takes two "
"extra arguments, ``coerce`` and ``empty_value``."
msgstr ""

# 5a7b1f96741b49d3b36cd9185d8a05eb
# cc380fc9b72943c589a7d7d2bb0f5e92
#: ../../ref/forms/fields.txt:359 ../../ref/forms/fields.txt:717
msgid "Empty value: Whatever you've given as ``empty_value``"
msgstr ""

# c9fd14a1e9f847b5aadf7f37ac493856
#: ../../ref/forms/fields.txt:360
msgid "Normalizes to: A value of the type provided by the ``coerce`` argument."
msgstr ""

# ea895807de6f4c7d80bd5f0cc9f8400d
#: ../../ref/forms/fields.txt:361
msgid ""
"Validates that the given value exists in the list of choices and can be "
"coerced."
msgstr ""

# 162fd6dd65234edd96959685c92b16a9
#: ../../ref/forms/fields.txt:365
msgid "Takes extra arguments:"
msgstr ""

# 4cc351c16ff246098db477cbc5a6f7fd
#: ../../ref/forms/fields.txt:369
msgid ""
"A function that takes one argument and returns a coerced value. Examples "
"include the built-in ``int``, ``float``, ``bool`` and other types. Defaults "
"to an identity function."
msgstr ""

# d42a1cc125e7406fab118a4b1480b6f1
#: ../../ref/forms/fields.txt:375
msgid ""
"The value to use to represent \"empty.\" Defaults to the empty string; "
"``None`` is another common choice here. Note that this value will not be "
"coerced by the function given in the ``coerce`` argument, so choose it "
"accordingly."
msgstr ""

# bd20fee526ff4e9b9aab236744843a81
# f975c3c5f431486ca306230a7608004b
#: ../../ref/forms/fields.txt:381 ../../ref/models/fields.txt:407
msgid "``DateField``"
msgstr ""

# 0cbcee93ab0f4d3eba084bbbf6485df2
#: ../../ref/forms/fields.txt:385
msgid "Default widget: :class:`DateInput`"
msgstr ""

# 15c29e315ddf4ccd8bb2e18183f4dce7
# c3e84b4cc0844e9ab9e4a729116936ea
# bb1f2079fa444eca8b5d324d647b6237
# a4d3829351484a8f96e6932c097ca5d0
# de1d07dcf28d4d3c8202b97f5637d703
# c52a535200e9422b9d6900c69ab36521
# 44b06aa032154a8a875890e0e0a8d99c
# 2c5e1065d9114bc7a45738263b367a29
# f54e3bf0823e401c913d4ac082976d1d
# fe37ac23048a47caa24702a4c0732150
# 423866cdcf8d41f3bad710906eebf3bc
# ca2da5e8b8cc49d795e984b18a58f7fe
#: ../../ref/forms/fields.txt:386 ../../ref/forms/fields.txt:425
#: ../../ref/forms/fields.txt:458 ../../ref/forms/fields.txt:509
#: ../../ref/forms/fields.txt:537 ../../ref/forms/fields.txt:584
#: ../../ref/forms/fields.txt:600 ../../ref/forms/fields.txt:625
#: ../../ref/forms/fields.txt:735 ../../ref/forms/fields.txt:787
#: ../../ref/forms/fields.txt:906 ../../ref/forms/fields.txt:949
msgid "Empty value: ``None``"
msgstr ""

# f0bca2ece14b45a28f19fb01ae3983e9
#: ../../ref/forms/fields.txt:387
msgid "Normalizes to: A Python ``datetime.date`` object."
msgstr ""

# 46d85203a7704d54a4437f3f69408c98
#: ../../ref/forms/fields.txt:388
msgid ""
"Validates that the given value is either a ``datetime.date``, ``datetime."
"datetime`` or string formatted in a particular date format."
msgstr ""

# 0d586a9244574057bfd5fe593a93ea8e
# b923117c0b05454eb0c787f13365b31a
# 205363640a464398861ab78d8ad5521b
# 13b633d05dbd4e8aafae3b8fcce1578a
# 67d4930c30b348ac8896e87d37eb717d
# 3dde70fe026f413f8c68db1c4688d8b2
# 5104ddcf7f6548a0a58b51caaf851d43
# d0de7479b7be48a0a1992579bd512d52
# eadd31d55e434064acd9ad461a6803ab
# a103a4163d304b4fbbfe4b4fc7c64692
#: ../../ref/forms/fields.txt:390 ../../ref/forms/fields.txt:429
#: ../../ref/forms/fields.txt:497 ../../ref/forms/fields.txt:652
#: ../../ref/forms/fields.txt:668 ../../ref/forms/fields.txt:749
#: ../../ref/forms/fields.txt:791 ../../ref/forms/fields.txt:814
#: ../../ref/forms/fields.txt:837 ../../ref/forms/fields.txt:864
msgid "Error message keys: ``required``, ``invalid``"
msgstr ""

# 5be95f311528423890b32561c5ed689f
# d4f5e8a670b740989ab49bb6f0b4ee59
# 17b954381b4e487f9d2b8840ebb4e90b
# 378da01f39ff4fe5bb5d23cc39f9df2f
# cac086df5d184e2d9defcf3626ce2479
# 859084564b874e77a5dd64d514f2009c
#: ../../ref/forms/fields.txt:392 ../../ref/forms/fields.txt:431
#: ../../ref/forms/fields.txt:793 ../../ref/forms/widgets.txt:399
#: ../../ref/forms/widgets.txt:486 ../../ref/forms/widgets.txt:701
msgid "Takes one optional argument:"
msgstr ""

# 4218ef37d07d4d53888f5e5f5f799c86
# a96e260c4ea3426d8fb3a6033e310e31
#: ../../ref/forms/fields.txt:396 ../../ref/forms/fields.txt:917
msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"date`` object."
msgstr ""

# e16ab1e6c6814e089d9e80c0e634e720
# 2506cee845254282b9642bd860183e86
# 8b6499150d3446f88da6b4f773a63b80
#: ../../ref/forms/fields.txt:399 ../../ref/forms/fields.txt:438
#: ../../ref/forms/fields.txt:800
msgid ""
"If no ``input_formats`` argument is provided, the default input formats are::"
msgstr ""

# 721c44c6f32a45c3aef5d3519d4c4d10
#: ../../ref/forms/fields.txt:405
msgid ""
"Additionally, if you specify :setting:`USE_L10N=False<USE_L10N>` in your "
"settings, the following will also be included in the default input formats::"
msgstr ""

# f1ff37cb339d4ea386500aafbd54ee2f
# d9e32021f8034a4db73e306513f3aaac
#: ../../ref/forms/fields.txt:417 ../../ref/forms/fields.txt:450
msgid "See also :ref:`format localization <format-localization>`."
msgstr ""

# fa2c5084ef8f436ca46e6f080de8e9e6
# 7681444600e4498589e957ce412d83a7
#: ../../ref/forms/fields.txt:420 ../../ref/models/fields.txt:437
msgid "``DateTimeField``"
msgstr ""

# c8ad5ea7454f4481b8aacde77528a8f8
#: ../../ref/forms/fields.txt:424
msgid "Default widget: :class:`DateTimeInput`"
msgstr ""

# 0d95862edbaf462e8d0cb292e5e54ef0
# effcbb113f90470ba908a65ffa47e887
#: ../../ref/forms/fields.txt:426 ../../ref/forms/fields.txt:907
msgid "Normalizes to: A Python ``datetime.datetime`` object."
msgstr ""

# f031d58dbf7d45128b3a5985109d4ddc
#: ../../ref/forms/fields.txt:427
msgid ""
"Validates that the given value is either a ``datetime.datetime``, ``datetime."
"date`` or string formatted in a particular datetime format."
msgstr ""

# d4daaa8f5bfb4879b51d59bc910dcaa6
#: ../../ref/forms/fields.txt:435
msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"datetime`` object."
msgstr ""

# 989705cf8a544be4ababdef8734fc055
# 9f7552665e4642a483429184b89955f9
#: ../../ref/forms/fields.txt:453 ../../ref/models/fields.txt:449
msgid "``DecimalField``"
msgstr ""

# 04ee028a4843477aa459014cbbc7f57b
#: ../../ref/forms/fields.txt:459
msgid "Normalizes to: A Python ``decimal``."
msgstr ""

# 1f5aa87d811c4a6ea87cab9249923a2a
#: ../../ref/forms/fields.txt:460
msgid ""
"Validates that the given value is a decimal. Leading and trailing whitespace "
"is ignored."
msgstr ""

# bd8f504336c443d6a972d60937828ecf
#: ../../ref/forms/fields.txt:462
msgid ""
"Error message keys: ``required``, ``invalid``, ``max_value``, ``min_value``, "
"``max_digits``, ``max_decimal_places``, ``max_whole_digits``"
msgstr ""

# 45672cde37bb42129124b0aa15e850a5
# bc2b98d411c54511bf0d8a4c79aec467
#: ../../ref/forms/fields.txt:466 ../../ref/forms/fields.txt:632
msgid ""
"The ``max_value`` and ``min_value`` error messages may contain ``"
"%(limit_value)s``, which will be substituted by the appropriate limit."
msgstr ""

# 28b9320cfcd14fcaa656f02c268e0a5d
#: ../../ref/forms/fields.txt:469
msgid "Takes four optional arguments:"
msgstr ""

# 757046946c0c4f4d915a4c0b3f73930e
#: ../../ref/forms/fields.txt:474
msgid ""
"These control the range of values permitted in the field, and should be "
"given as ``decimal.Decimal`` values."
msgstr ""

# d5997fe9f669413bb997d602e9b700cd
#: ../../ref/forms/fields.txt:479
msgid ""
"The maximum number of digits (those before the decimal point plus those "
"after the decimal point, with leading zeros stripped) permitted in the value."
msgstr ""

# 3a3d1fa9cda042c3bbc6695d8ecd25b7
#: ../../ref/forms/fields.txt:485
msgid "The maximum number of decimal places permitted."
msgstr ""

# e6791a2d4bc94778be283edc25304e8d
# d45039035a8d42619346fad090553f2c
#: ../../ref/forms/fields.txt:488 ../../ref/models/fields.txt:484
msgid "``EmailField``"
msgstr ""

# 63c94c2de869409eac67266c3750d45e
#: ../../ref/forms/fields.txt:495
msgid ""
"Validates that the given value is a valid email address, using a moderately "
"complex regular expression."
msgstr ""

# d513978fa2184136807ec0958b83d650
#: ../../ref/forms/fields.txt:499
msgid ""
"Has two optional arguments for validation, ``max_length`` and "
"``min_length``. If provided, these arguments ensure that the string is at "
"most or at least the given length."
msgstr ""

# 3cfd673c5883487b9dea822a6599771a
# 1b334342716b445099ad73a95692a14a
#: ../../ref/forms/fields.txt:504 ../../ref/models/fields.txt:500
msgid "``FileField``"
msgstr ""

# fd574a7219e740fd9dd9db1c266cb282
# ef2471166f4c4e208fc7f868585712b9
#: ../../ref/forms/fields.txt:508 ../../ref/forms/fields.txt:599
msgid "Default widget: :class:`ClearableFileInput`"
msgstr ""

# 240f800fbe0546069926fd84678548c5
# 9e03d784186d40149563593fe0dd1797
#: ../../ref/forms/fields.txt:510 ../../ref/forms/fields.txt:601
msgid ""
"Normalizes to: An ``UploadedFile`` object that wraps the file content and "
"file name into a single object."
msgstr ""

# ca5b139a1a484376b0ef317171766fc5
#: ../../ref/forms/fields.txt:512
msgid "Can validate that non-empty file data has been bound to the form."
msgstr ""

# 6c5bb52c83224332acd1fbdd764072f1
#: ../../ref/forms/fields.txt:513
msgid ""
"Error message keys: ``required``, ``invalid``, ``missing``, ``empty``, "
"``max_length``"
msgstr ""

# ae7da64dbe044ca9a05f5d53c3d643b4
#: ../../ref/forms/fields.txt:516
msgid ""
"Has two optional arguments for validation, ``max_length`` and "
"``allow_empty_file``. If provided, these ensure that the file name is at "
"most the given length, and that validation will succeed even if the file "
"content is empty."
msgstr ""

# 1e4c0182237a4f38baf98cb555f24cfe
#: ../../ref/forms/fields.txt:521
msgid ""
"To learn more about the ``UploadedFile`` object, see the :doc:`file uploads "
"documentation </topics/http/file-uploads>`."
msgstr ""

# 716be43da033468bbcac7f9114155861
#: ../../ref/forms/fields.txt:524
msgid ""
"When you use a ``FileField`` in a form, you must also remember to :ref:`bind "
"the file data to the form <binding-uploaded-files>`."
msgstr ""

# e63dd33ec34d4231910d9e84b43dd8e1
#: ../../ref/forms/fields.txt:527
msgid ""
"The ``max_length`` error refers to the length of the filename. In the error "
"message for that key, ``%(max)d`` will be replaced with the maximum filename "
"length and ``%(length)d`` will be replaced with the current filename length."
msgstr ""

# 9fb76697f3e04a4489076ac662be7b70
# d1b4cc16a57849048321cdd09c98829f
#: ../../ref/forms/fields.txt:532 ../../ref/models/fields.txt:692
msgid "``FilePathField``"
msgstr ""

# 1f27f2a02cfa437993c399908c857987
#: ../../ref/forms/fields.txt:538
msgid "Normalizes to: A unicode object"
msgstr ""

# 7ddca323f08f444d9e7e32cead378d0e
#: ../../ref/forms/fields.txt:539
msgid "Validates that the selected choice exists in the list of choices."
msgstr ""

# 818bba551bf1400da30ba6236309048e
#: ../../ref/forms/fields.txt:542
msgid ""
"The field allows choosing from files inside a certain directory. It takes "
"three extra arguments; only ``path`` is required:"
msgstr ""

# 3da7f26deb0747e8999b391d7aedf3b4
#: ../../ref/forms/fields.txt:547
msgid ""
"The absolute path to the directory whose contents you want listed. This "
"directory must exist."
msgstr ""

# a0ef8c4a274c46498d5d663ba7c5f9a2
#: ../../ref/forms/fields.txt:552
msgid ""
"If ``False`` (the default) only the direct contents of ``path`` will be "
"offered as choices. If ``True``, the directory will be descended into "
"recursively and all descendants will be listed as choices."
msgstr ""

# 99a1c52f6246406a80d1381b24adacf7
#: ../../ref/forms/fields.txt:558
msgid ""
"A regular expression pattern; only files with names matching this expression "
"will be allowed as choices."
msgstr ""

# d720ec4c7e184a5d90318ab7f1fb3c1e
#: ../../ref/forms/fields.txt:565
msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``True``.  Specifies "
"whether files in the specified location should be included.  Either this or :"
"attr:`allow_folders` must be ``True``."
msgstr ""

# 551d360cf8ba4bf7b6c66c78f178ade5
#: ../../ref/forms/fields.txt:573
msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``False``.  Specifies "
"whether folders in the specified location should be included.  Either this "
"or :attr:`allow_files` must be ``True``."
msgstr ""

# 30cf47a59b11437a990a1e98c0885abd
# 7ae6a1a327d14d659def276f5ddbc1b0
#: ../../ref/forms/fields.txt:579 ../../ref/models/fields.txt:750
msgid "``FloatField``"
msgstr ""

# c27be16e8e314e099b27b4de0d3acfdc
#: ../../ref/forms/fields.txt:585
msgid "Normalizes to: A Python float."
msgstr ""

# 69ac5168ee8c48109f40130bbb3b0698
#: ../../ref/forms/fields.txt:586
msgid ""
"Validates that the given value is an float. Leading and trailing whitespace "
"is allowed, as in Python's ``float()`` function."
msgstr ""

# 9a120628b08e4143a850927425cfa84a
# d90c21e06f3c4eb1ba314c5043113764
#: ../../ref/forms/fields.txt:588 ../../ref/forms/fields.txt:629
msgid ""
"Error message keys: ``required``, ``invalid``, ``max_value``, ``min_value``"
msgstr ""

# 7f4a28606b2e471a956e5cc9fe61650e
#: ../../ref/forms/fields.txt:591
msgid ""
"Takes two optional arguments for validation, ``max_value`` and "
"``min_value``. These control the range of values permitted in the field."
msgstr ""

# 9cd286966fc449ce959570284d3f6a39
# 3b7e11c7294040108591ab3d29a4ab2d
#: ../../ref/forms/fields.txt:595 ../../ref/models/fields.txt:770
msgid "``ImageField``"
msgstr ""

# b96c369890a940f7a45fbe31c2a140a8
#: ../../ref/forms/fields.txt:603
msgid ""
"Validates that file data has been bound to the form, and that the file is of "
"an image format understood by PIL."
msgstr ""

# b5d780a8bb544a54acc95584e62e3536
#: ../../ref/forms/fields.txt:605
msgid ""
"Error message keys: ``required``, ``invalid``, ``missing``, ``empty``, "
"``invalid_image``"
msgstr ""

# 23cbd4fcde8d435b9ae31c354000f4a8
#: ../../ref/forms/fields.txt:608
msgid ""
"Using an ``ImageField`` requires that the `Python Imaging Library`_ (PIL) is "
"installed and supports the image formats you use. If you encounter a "
"``corrupt image`` error when you upload an image, it usually means PIL "
"doesn't understand its format. To fix this, install the appropriate library "
"and reinstall PIL."
msgstr ""

# e11998586bde4960a6879978e3be41fe
#: ../../ref/forms/fields.txt:614
msgid ""
"When you use an ``ImageField`` on a form, you must also remember to :ref:"
"`bind the file data to the form <binding-uploaded-files>`."
msgstr ""

# 40bda32a021041a0890120e164081705
# 6083b465e77b4be5b6c70f4db9d25103
#: ../../ref/forms/fields.txt:620 ../../ref/models/fields.txt:802
msgid "``IntegerField``"
msgstr ""

# 725aadbb20b84829abd711c3467ded69
#: ../../ref/forms/fields.txt:626
msgid "Normalizes to: A Python integer or long integer."
msgstr ""

# 858fa0f29fb64d439240bb2217c3cfd3
#: ../../ref/forms/fields.txt:627
msgid ""
"Validates that the given value is an integer. Leading and trailing "
"whitespace is allowed, as in Python's ``int()`` function."
msgstr ""

# 9940738ba0394031a5cf86ce63d7382e
#: ../../ref/forms/fields.txt:635
msgid "Takes two optional arguments for validation:"
msgstr ""

# 57761b9f334a49e7bc7d543c9ef76772
#: ../../ref/forms/fields.txt:640
msgid "These control the range of values permitted in the field."
msgstr ""

# 614fbc69e20e46eaae4353a88b6d16e9
# fd64b49b060749bfbcb9c554d5140d8e
#: ../../ref/forms/fields.txt:643 ../../ref/models/fields.txt:810
msgid "``IPAddressField``"
msgstr ""

# 99d45f0ff23246e69e9a5d15d76dc7b8
#: ../../ref/forms/fields.txt:650
msgid ""
"Validates that the given value is a valid IPv4 address, using a regular "
"expression."
msgstr ""

# 49976c42c8514e539e019888eb1eb852
# 58a3393bbab74e3a91ec7df18489bc05
#: ../../ref/forms/fields.txt:655 ../../ref/models/fields.txt:818
msgid "``GenericIPAddressField``"
msgstr ""

# 2da72803b9da42de912d5532c4377d00
#: ../../ref/forms/fields.txt:661
msgid "A field containing either an IPv4 or an IPv6 address."
msgstr ""

# f548e2037f834c44aabad6bf92bb1e24
#: ../../ref/forms/fields.txt:665
msgid ""
"Normalizes to: A Unicode object. IPv6 addresses are normalized as described "
"below."
msgstr ""

# b99e74e2765e405cb9cd0a24e1c6cd1e
#: ../../ref/forms/fields.txt:667
msgid "Validates that the given value is a valid IP address."
msgstr ""

# cfe0fcb8615e41b59348773a8ab24215
# 78935c6fc5244c49b25eb2453f0835be
#: ../../ref/forms/fields.txt:670 ../../ref/models/fields.txt:828
msgid ""
"The IPv6 address normalization follows :rfc:`4291#section-2.2` section 2.2, "
"including using the IPv4 format suggested in paragraph 3 of that section, "
"like ``::ffff:192.0.2.0``. For example, ``2001:0::0:01`` would be normalized "
"to ``2001::1``, and ``::ffff:0a0a:0a0a`` to ``::ffff:10.10.10.10``. All "
"characters are converted to lowercase."
msgstr ""

# 477f17d41005477e991faab0c059f469
# 4cf60471ea7346fb8c2082ea6588b772
#: ../../ref/forms/fields.txt:676 ../../ref/forms/fields.txt:913
msgid "Takes two optional arguments:"
msgstr ""

# cee5dbc85e044b8f8a427f42f63d25f8
#: ../../ref/forms/fields.txt:680
msgid ""
"Limits valid inputs to the specified protocol. Accepted values are ``both`` "
"(default), ``IPv4`` or ``IPv6``. Matching is case insensitive."
msgstr ""

# 806f4c2a638642d7a3ba715768481610
# 6b389deeb1c44389999835f00a92ba76
#: ../../ref/forms/fields.txt:686 ../../ref/models/fields.txt:842
msgid ""
"Unpacks IPv4 mapped addresses like ``::ffff:192.0.2.1``. If this option is "
"enabled that address would be unpacked to ``192.0.2.1``. Default is "
"disabled. Can only be used when ``protocol`` is set to ``'both'``."
msgstr ""

# 1603e8908a154bdfb71dd48fb58220df
#: ../../ref/forms/fields.txt:692
msgid "``MultipleChoiceField``"
msgstr ""

# a3d559a9d0eb48bdad3b1e503b3b61d6
# ef50f576f9114a299dfff097ef5ce349
# 89606a1936f546b89b14dc921e7e9608
#: ../../ref/forms/fields.txt:696 ../../ref/forms/fields.txt:716
#: ../../ref/forms/fields.txt:1003
msgid "Default widget: :class:`SelectMultiple`"
msgstr ""

# d29f2e331b034a00887ae1e6061b8a9b
#: ../../ref/forms/fields.txt:697
msgid "Empty value: ``[]`` (an empty list)"
msgstr ""

# bbae2b48c0fc435b89c35cb28a886bd3
#: ../../ref/forms/fields.txt:698
msgid "Normalizes to: A list of Unicode objects."
msgstr ""

# 37068e0274a04f178d8f2da684c9d1f8
#: ../../ref/forms/fields.txt:699
msgid ""
"Validates that every value in the given list of values exists in the list of "
"choices."
msgstr ""

# da9f78c74005445195ee32b958aae24a
#: ../../ref/forms/fields.txt:701
msgid "Error message keys: ``required``, ``invalid_choice``, ``invalid_list``"
msgstr ""

# 6eda5073ad0547feaf8425706ed19d0f
#: ../../ref/forms/fields.txt:706
msgid "Takes one extra required argument, ``choices``, as for ``ChoiceField``."
msgstr ""

# fe45458604b44a4a9740668f72bd90a0
#: ../../ref/forms/fields.txt:709
msgid "``TypedMultipleChoiceField``"
msgstr ""

# 1f9829ad399e4403a08509b4eec171b2
#: ../../ref/forms/fields.txt:713
msgid ""
"Just like a :class:`MultipleChoiceField`, except :class:"
"`TypedMultipleChoiceField` takes two extra arguments, ``coerce`` and "
"``empty_value``."
msgstr ""

# 42dcf47bdaf1446ab9fba17f96b13158
#: ../../ref/forms/fields.txt:718
msgid ""
"Normalizes to: A list of values of the type provided by the ``coerce`` "
"argument."
msgstr ""

# 4696aa6c3fff4f3295cca3a39765a3a8
#: ../../ref/forms/fields.txt:720
msgid ""
"Validates that the given values exists in the list of choices and can be "
"coerced."
msgstr ""

# 1491e513d74342f985522e9744fd01d3
#: ../../ref/forms/fields.txt:727
msgid ""
"Takes two extra arguments, ``coerce`` and ``empty_value``, as for "
"``TypedChoiceField``."
msgstr ""

# de8c3b8a987a4f3c84bddbecf78f9267
# 7b541f601f43495ba42811abf4047633
#: ../../ref/forms/fields.txt:730 ../../ref/models/fields.txt:848
msgid "``NullBooleanField``"
msgstr ""

# 8a87c663c796427c9e097da7147c73cb
#: ../../ref/forms/fields.txt:734
msgid "Default widget: :class:`NullBooleanSelect`"
msgstr ""

# 8d590cc5d7e240dc966cbd7c7ea3ba55
#: ../../ref/forms/fields.txt:736
msgid "Normalizes to: A Python ``True``, ``False`` or ``None`` value."
msgstr ""

# e9ef31402a3646f790d732ed7981fa45
#: ../../ref/forms/fields.txt:737
msgid "Validates nothing (i.e., it never raises a ``ValidationError``)."
msgstr ""

# 4e7149537fa14d73942f53134c1eb019
#: ../../ref/forms/fields.txt:740
msgid "``RegexField``"
msgstr ""

# d35f2c3ddee04babb3bb994ec6edcb3d
#: ../../ref/forms/fields.txt:747
msgid ""
"Validates that the given value matches against a certain regular expression."
msgstr ""

# 4d7223cb97284d6b8c019dcddeb7c239
#: ../../ref/forms/fields.txt:751
msgid "Takes one required argument:"
msgstr ""

# 05671255407a496ab843250fc021313e
#: ../../ref/forms/fields.txt:755
msgid ""
"A regular expression specified either as a string or a compiled regular "
"expression object."
msgstr ""

# 88194b347d2c4574ab7ae31a89c01cc5
#: ../../ref/forms/fields.txt:758
msgid ""
"Also takes ``max_length`` and ``min_length``, which work just as they do for "
"``CharField``."
msgstr ""

# 6b6acef0606a4d08a1c3da433648137d
#: ../../ref/forms/fields.txt:761
msgid ""
"The optional argument ``error_message`` is also accepted for backwards "
"compatibility. The preferred way to provide an error message is to use the "
"``error_messages`` argument, passing a dictionary with ``'invalid'`` as a "
"key and the error message as the value."
msgstr ""

# 0f8541339f4443b1b9e1061f78c91b5d
# 71cbf80ad68549d699c64207b346aca3
#: ../../ref/forms/fields.txt:767 ../../ref/models/fields.txt:874
msgid "``SlugField``"
msgstr ""

# fe4c0a68644844988b7e97ab28e82cb9
#: ../../ref/forms/fields.txt:774
msgid ""
"Validates that the given value contains only letters, numbers, underscores, "
"and hyphens."
msgstr ""

# d21ec6bbc2384259a4cc921c77830bb6
#: ../../ref/forms/fields.txt:776
msgid "Error messages: ``required``, ``invalid``"
msgstr ""

# 6e072621be734971801062c80d530603
#: ../../ref/forms/fields.txt:778
msgid ""
"This field is intended for use in representing a model :class:`~django.db."
"models.SlugField` in forms."
msgstr ""

# a1708a5da22a4663a17720be5143796f
# 89674de9dfbf45639b88a9c357b1dbb9
#: ../../ref/forms/fields.txt:782 ../../ref/models/fields.txt:918
msgid "``TimeField``"
msgstr ""

# 283949b833214f6c8ba308b18988c1d0
#: ../../ref/forms/fields.txt:788
msgid "Normalizes to: A Python ``datetime.time`` object."
msgstr ""

# b85585052edf442f8c040b4ae65e6ab3
#: ../../ref/forms/fields.txt:789
msgid ""
"Validates that the given value is either a ``datetime.time`` or string "
"formatted in a particular time format."
msgstr ""

# 5e90fa60f1fb4753b2a02b0a4f89a961
# 14365b91d9834678a35ca40634ab2aad
#: ../../ref/forms/fields.txt:797 ../../ref/forms/fields.txt:925
msgid ""
"A list of formats used to attempt to convert a string to a valid ``datetime."
"time`` object."
msgstr ""

# 2f7e0212ccf54556bdfd49094a919b1f
# 2e5aa45c0de14d9eb3b50dd4c0ae8401
#: ../../ref/forms/fields.txt:806 ../../ref/models/fields.txt:929
msgid "``URLField``"
msgstr ""

# 742d6d19227c4dda86923e1326bee87e
#: ../../ref/forms/fields.txt:813
msgid "Validates that the given value is a valid URL."
msgstr ""

# 0bbd2701490740f2aff3e6bc557ab73e
#: ../../ref/forms/fields.txt:816
msgid "Takes the following optional arguments:"
msgstr ""

# 71ae038722af4029b6befea559e924fb
#: ../../ref/forms/fields.txt:821
msgid ""
"These are the same as ``CharField.max_length`` and ``CharField.min_length``."
msgstr ""

# 32451f6e3d67477c8cc83654ffb8e124
#: ../../ref/forms/fields.txt:825
msgid "Slightly complex built-in ``Field`` classes"
msgstr ""

# 340d53ef5d4146b885651077cd93caba
#: ../../ref/forms/fields.txt:828
msgid "``ComboField``"
msgstr ""

# abc8e772243348b8bc798e4ee137becc
#: ../../ref/forms/fields.txt:835
msgid ""
"Validates that the given value against each of the fields specified as an "
"argument to the ``ComboField``."
msgstr ""

# 588b9f643b184ca9b42aa340df12746c
#: ../../ref/forms/fields.txt:843
msgid ""
"The list of fields that should be used to validate the field's value (in the "
"order in which they are provided)."
msgstr ""

# 76939d3e740b42ddae0d290592c802f6
#: ../../ref/forms/fields.txt:855
msgid "``MultiValueField``"
msgstr ""

# c55aced2471843d99b0e2326a0cab590
#: ../../ref/forms/fields.txt:861
msgid ""
"Normalizes to: the type returned by the ``compress`` method of the subclass."
msgstr ""

# b7ca9af3f4b54fefb2c42f224e9f87d6
#: ../../ref/forms/fields.txt:862
msgid ""
"Validates that the given value against each of the fields specified as an "
"argument to the ``MultiValueField``."
msgstr ""

# 5389c712949e4428aec41190ba8848cc
#: ../../ref/forms/fields.txt:866
msgid ""
"Aggregates the logic of multiple fields that together produce a single value."
msgstr ""

# 136902beb9a144d78caa4278190d3b15
#: ../../ref/forms/fields.txt:869
msgid ""
"This field is abstract and must be subclassed. In contrast with the single-"
"value fields, subclasses of :class:`MultiValueField` must not implement :"
"meth:`~django.forms.Field.clean` but instead - implement :meth:"
"`~MultiValueField.compress`."
msgstr ""

# 3e5f00cc8cdd4c3595e24e72a13ca187
#: ../../ref/forms/fields.txt:878
msgid ""
"A tuple of fields whose values are cleaned and subsequently combined into a "
"single value.  Each value of the field is cleaned by the corresponding field "
"in ``fields`` -- the first value is cleaned by the first field, the second "
"value is cleaned by the second field, etc. Once all fields are cleaned, the "
"list of clean values is combined into a single value by :meth:"
"`~MultiValueField.compress`."
msgstr ""

# 4cde426662ce4f71863266b6d05abbce
#: ../../ref/forms/fields.txt:887
msgid ""
"Must be a subclass of :class:`django.forms.MultiWidget`. Default value is :"
"class:`~django.forms.TextInput`, which probably is not very useful in this "
"case."
msgstr ""

# 9b2f1ea9a6d24ee09c23ff26c092d43d
#: ../../ref/forms/fields.txt:893
msgid ""
"Takes a list of valid values and returns  a \"compressed\" version of those "
"values -- in a single value. For example, :class:`SplitDateTimeField` is a "
"subclass which combines a time field and a date field into a ``datetime`` "
"object."
msgstr ""

# 8bfebe671c9d484099b75ac1b7acabdf
#: ../../ref/forms/fields.txt:898
msgid "This method must be implemented in the subclasses."
msgstr ""

# 136a24329ab648898bf898558ff2a76d
#: ../../ref/forms/fields.txt:901
msgid "``SplitDateTimeField``"
msgstr ""

# 680e2aecb1cb4214bad8a7eb04268bfe
#: ../../ref/forms/fields.txt:905
msgid "Default widget: :class:`SplitDateTimeWidget`"
msgstr ""

# e3a8bb5bd75b42e9976e04c3c1284d9a
#: ../../ref/forms/fields.txt:908
msgid ""
"Validates that the given value is a ``datetime.datetime`` or string "
"formatted in a particular datetime format."
msgstr ""

# 984b16be382e4104bc13e8658c6e7893
#: ../../ref/forms/fields.txt:910
msgid ""
"Error message keys: ``required``, ``invalid``, ``invalid_date``, "
"``invalid_time``"
msgstr ""

# 7011d218ff9d472fb5e18fbf5b602106
#: ../../ref/forms/fields.txt:920
msgid ""
"If no ``input_date_formats`` argument is provided, the default input formats "
"for ``DateField`` are used."
msgstr ""

# 1ad0a269dcb944d0b69ba083a9668339
#: ../../ref/forms/fields.txt:928
msgid ""
"If no ``input_time_formats`` argument is provided, the default input formats "
"for ``TimeField`` are used."
msgstr ""

# 9985782a83db45da88463192eea5e6c9
#: ../../ref/forms/fields.txt:932
msgid "Fields which handle relationships"
msgstr ""

# 1eb29c08ffeb412a879e71fba91dd880
#: ../../ref/forms/fields.txt:934
msgid ""
"Two fields are available for representing relationships between models: :"
"class:`ModelChoiceField` and :class:`ModelMultipleChoiceField`.  Both of "
"these fields require a single ``queryset`` parameter that is used to create "
"the choices for the field.  Upon form validation, these fields will place "
"either one model object (in the case of ``ModelChoiceField``) or multiple "
"model objects (in the case of ``ModelMultipleChoiceField``) into the "
"``cleaned_data`` dictionary of the form."
msgstr ""

# e1f9ed4ffee446d2906818c0daa80781
#: ../../ref/forms/fields.txt:944
msgid "``ModelChoiceField``"
msgstr ""

# ee139447c020416d8c1b32a1a90483f6
#: ../../ref/forms/fields.txt:950
msgid "Normalizes to: A model instance."
msgstr ""

# ed68961de8d74d4f93804c7fcb0d6cd2
#: ../../ref/forms/fields.txt:951
msgid "Validates that the given id exists in the queryset."
msgstr ""

# 6c52ae4feac940c386457d4f1ac0bcbf
#: ../../ref/forms/fields.txt:954
msgid ""
"Allows the selection of a single model object, suitable for representing a "
"foreign key. Note that the default widget for ``ModelChoiceField`` becomes "
"impractical when the number of entries increases. You should avoid using it "
"for more than 100 items."
msgstr ""

# 80c93e9b3b364a6bb36c3b347d5ae302
#: ../../ref/forms/fields.txt:959
msgid "A single argument is required:"
msgstr ""

# e016e084527b4d2899568e576d80ff18
# c2c75da1c7ba4800b839f35187d02a97
#: ../../ref/forms/fields.txt:963 ../../ref/forms/fields.txt:1022
msgid ""
"A ``QuerySet`` of model objects from which the choices for the field will be "
"derived, and which will be used to validate the user's selection."
msgstr ""

# 3de069effddc4b228d7c6c097c6b9232
#: ../../ref/forms/fields.txt:967
msgid "``ModelChoiceField`` also takes one optional argument:"
msgstr ""

# 9bc5239fc2384cc686c9332e75aa0dfd
#: ../../ref/forms/fields.txt:971
msgid ""
"By default the ``<select>`` widget used by ``ModelChoiceField`` will have an "
"empty choice at the top of the list. You can change the text of this label "
"(which is ``\"---------\"`` by default) with the ``empty_label`` attribute, "
"or you can disable the empty label entirely by setting ``empty_label`` to "
"``None``::"
msgstr ""

# 2a912562095543009fd5f45dd5845a7e
#: ../../ref/forms/fields.txt:983
msgid ""
"Note that if a ``ModelChoiceField`` is required and has a default initial "
"value, no empty choice is created (regardless of the value of "
"``empty_label``)."
msgstr ""

# 074e6c8fb68e47e2ba7cbf461782fa64
#: ../../ref/forms/fields.txt:987
msgid ""
"The ``__unicode__`` method of the model will be called to generate string "
"representations of the objects for use in the field's choices; to provide "
"customized representations, subclass ``ModelChoiceField`` and override "
"``label_from_instance``. This method will receive a model object, and should "
"return a string suitable for representing it. For example::"
msgstr ""

# 9a3d11d5ee6346ffa6a52349c7ba027c
#: ../../ref/forms/fields.txt:999
msgid "``ModelMultipleChoiceField``"
msgstr ""

# 74582953f0314d3ea8b3db979e2b164f
#: ../../ref/forms/fields.txt:1004
msgid "Empty value: An empty ``QuerySet`` (self.queryset.none())"
msgstr ""

# b5e91289f43b421caa3a2d8ee2b19872
#: ../../ref/forms/fields.txt:1005
msgid "Normalizes to: A ``QuerySet`` of model instances."
msgstr ""

# e9f7f4c4532d4d368a0b492e74418589
#: ../../ref/forms/fields.txt:1006
msgid ""
"Validates that every id in the given list of values exists in the queryset."
msgstr ""

# a47ca3b0e27a4075b17a30a53f646c21
#: ../../ref/forms/fields.txt:1008
msgid ""
"Error message keys: ``required``, ``list``, ``invalid_choice``, "
"``invalid_pk_value``"
msgstr ""

# 9dcb6053cfc340c0a6aaf47802de5ba6
#: ../../ref/forms/fields.txt:1015
msgid ""
"Allows the selection of one or more model objects, suitable for representing "
"a many-to-many relation. As with :class:`ModelChoiceField`, you can use "
"``label_from_instance`` to customize the object representations, and "
"``queryset`` is a required parameter:"
msgstr ""

# 599293a0de5a413e8af619f96cfb1f72
#: ../../ref/forms/fields.txt:1027
msgid "Creating custom fields"
msgstr ""

# 5c5a0bde9bb04258a690b61c84d7391c
#: ../../ref/forms/fields.txt:1029
msgid ""
"If the built-in ``Field`` classes don't meet your needs, you can easily "
"create custom ``Field`` classes. To do this, just create a subclass of "
"``django.forms.Field``. Its only requirements are that it implement a "
"``clean()`` method and that its ``__init__()`` method accept the core "
"arguments mentioned above (``required``, ``label``, ``initial``, ``widget``, "
"``help_text``)."
msgstr ""

# 2c5f303af0d94954b4bc4ef95c71d03d
#: ../../ref/forms/index.txt:3
msgid "Forms"
msgstr ""

# b9d7c9b37ef142f5b7c5bf5fe8d86349
#: ../../ref/forms/index.txt:5
msgid ""
"Detailed form API reference. For introductory material, see :doc:`/topics/"
"forms/index`."
msgstr ""

# 16ebf9602da94b478c30b4373a028c7f
#: ../../ref/forms/models.txt:3
msgid "Model Form Functions"
msgstr ""

# af155855ed9c4923b63e520916c0154a
#: ../../ref/forms/models.txt:10
msgid ""
"Returns a :class:`~django.forms.ModelForm` class for the given ``model``. "
"You can optionally pass a ``form`` argument to use as a starting point for "
"constructing the ``ModelForm``."
msgstr ""

# 45d93a3d07734d2ab0024ea33d36dd50
#: ../../ref/forms/models.txt:14
msgid ""
"``fields`` is an optional list of field names. If provided, only the named "
"fields will be included in the returned fields."
msgstr ""

# 7b5c9248ee364274b9b72a6d6aa9b1d6
#: ../../ref/forms/models.txt:17
msgid ""
"``exclude`` is an optional list of field names. If provided, the named "
"fields will be excluded from the returned fields, even if they are listed in "
"the ``fields`` argument."
msgstr ""

# 3a52f078736a4697b81d4a56e00d3225
#: ../../ref/forms/models.txt:21
msgid "``widgets`` is a dictionary of model field names mapped to a widget."
msgstr ""

# 0e2864e0d844496e983cf02230553cf0
#: ../../ref/forms/models.txt:23
msgid ""
"``formfield_callback`` is a callable that takes a model field and returns a "
"form field."
msgstr ""

# d643bb2e4f824030873f0da35febbf7c
#: ../../ref/forms/models.txt:26
msgid "See :ref:`modelforms-factory` for example usage."
msgstr ""

# 181f40eac077461382e4c7fc69f8475b
#: ../../ref/forms/models.txt:30
msgid "Returns a ``FormSet`` class for the given ``model`` class."
msgstr ""

# 930eb3cb024643d081c8e30ee1d4a2c3
#: ../../ref/forms/models.txt:32
msgid ""
"Arguments ``model``, ``form``, ``fields``, ``exclude``, and "
"``formfield_callback`` are all passed through to :func:`~django.forms.models."
"modelform_factory`."
msgstr ""

# a50ac68233a2463ab509626f39b290ab
#: ../../ref/forms/models.txt:36
msgid ""
"Arguments ``formset``, ``extra``, ``max_num``, ``can_order``, and "
"``can_delete`` are passed through to ``formset_factory``. See :ref:"
"`formsets` for details."
msgstr ""

# 0702a0fc9c3d40b8bfda4753c48613e2
#: ../../ref/forms/models.txt:40
msgid "See :ref:`model-formsets` for example usage."
msgstr ""

# 5e84b49a6c274d9686a078fbfd6c66c8
#: ../../ref/forms/models.txt:44
msgid ""
"Returns an ``InlineFormSet`` using :func:`modelformset_factory` with "
"defaults of ``formset=``:class:`~django.forms.models.BaseInlineFormSet`, "
"``can_delete=True``, and ``extra=3``."
msgstr ""

# 597b7c55327b409a844385a78cd611a7
#: ../../ref/forms/models.txt:48
msgid ""
"If your model has more than one :class:`~django.db.models.ForeignKey` to the "
"``parent_model``, you must specify a ``fk_name``."
msgstr ""

# 2edbb74dfbd1458ca4235738d455481a
#: ../../ref/forms/models.txt:51
msgid "See :ref:`inline-formsets` for example usage."
msgstr ""

# 7d0088d42fee43b28e222c04dd190328
#: ../../ref/forms/validation.txt:4
msgid "Form and field validation"
msgstr ""

# d673f2653182409aad1093a46ec475ad
#: ../../ref/forms/validation.txt:6
msgid ""
"Form validation happens when the data is cleaned. If you want to customize "
"this process, there are various places you can change, each one serving a "
"different purpose. Three types of cleaning methods are run during form "
"processing. These are normally executed when you call the ``is_valid()`` "
"method on a form. There are other things that can trigger cleaning and "
"validation (accessing the ``errors`` attribute or calling ``full_clean()`` "
"directly), but normally they won't be needed."
msgstr ""

# b16e055b2de945f0984b62d961dafb0e
#: ../../ref/forms/validation.txt:14
msgid ""
"In general, any cleaning method can raise ``ValidationError`` if there is a "
"problem with the data it is processing, passing the relevant error message "
"to the ``ValidationError`` constructor. If no ``ValidationError`` is raised, "
"the method should return the cleaned (normalized) data as a Python object."
msgstr ""

# 9fe976c4b08a4cffa3efe92890d1b475
#: ../../ref/forms/validation.txt:19
msgid ""
"If you detect multiple errors during a cleaning method and wish to signal "
"all of them to the form submitter, it is possible to pass a list of errors "
"to the ``ValidationError`` constructor."
msgstr ""

# 690391e23d88467eada6dc8d6710f5cd
#: ../../ref/forms/validation.txt:23
msgid ""
"Most validation can be done using `validators`_ - simple helpers that can be "
"reused easily. Validators are simple functions (or callables) that take a "
"single argument and raise ``ValidationError`` on invalid input. Validators "
"are run after the field's ``to_python`` and ``validate`` methods have been "
"called."
msgstr ""

# 346126d5fdb74ba4961ddc22ed9888ab
#: ../../ref/forms/validation.txt:28
msgid ""
"Validation of a Form is split into several steps, which can be customized or "
"overridden:"
msgstr ""

# 7c2927d33dbd46af9073c333190a65b9
#: ../../ref/forms/validation.txt:31
msgid ""
"The ``to_python()`` method on a Field is the first step in every validation. "
"It coerces the value to correct datatype and raises ``ValidationError`` if "
"that is not possible. This method accepts the raw value from the widget and "
"returns the converted value. For example, a FloatField will turn the data "
"into a Python ``float`` or raise a ``ValidationError``."
msgstr ""

# 0cfb3775a66642ffb044977a52723afd
#: ../../ref/forms/validation.txt:38
msgid ""
"The ``validate()`` method on a Field handles field-specific validation that "
"is not suitable for a validator, It takes a value that has been coerced to "
"correct datatype and raises ``ValidationError`` on any error. This method "
"does not return anything and shouldn't alter the value. You should override "
"it to handle validation logic that you can't or don't want to put in a "
"validator."
msgstr ""

# 0152b721e7cb4a8fa8ad54066435f206
#: ../../ref/forms/validation.txt:45
msgid ""
"The ``run_validators()`` method on a Field runs all of the field's "
"validators and aggregates all the errors into a single ``ValidationError``. "
"You shouldn't need to override this method."
msgstr ""

# c6fc0403148743f28da8c84c47555573
#: ../../ref/forms/validation.txt:49
msgid ""
"The ``clean()`` method on a Field subclass. This is responsible for running "
"``to_python``, ``validate`` and ``run_validators`` in the correct order and "
"propagating their errors. If, at any time, any of the methods raise "
"``ValidationError``, the validation stops and that error is raised. This "
"method returns the clean data, which is then inserted into the "
"``cleaned_data`` dictionary of the form."
msgstr ""

# d3bcb7b98dce45259158dcc05786f690
#: ../../ref/forms/validation.txt:56
msgid ""
"The ``clean_<fieldname>()`` method in a form subclass -- where "
"``<fieldname>`` is replaced with the name of the form field attribute. This "
"method does any cleaning that is specific to that particular attribute, "
"unrelated to the type of field that it is. This method is not passed any "
"parameters. You will need to look up the value of the field in ``self."
"cleaned_data`` and remember that it will be a Python object at this point, "
"not the original string submitted in the form (it will be in "
"``cleaned_data`` because the general field ``clean()`` method, above, has "
"already cleaned the data once)."
msgstr ""

# 9705c9b03f83497295463642f79a2bbd
#: ../../ref/forms/validation.txt:66
msgid ""
"For example, if you wanted to validate that the contents of a ``CharField`` "
"called ``serialnumber`` was unique, ``clean_serialnumber()`` would be the "
"right place to do this. You don't need a specific field (it's just a "
"``CharField``), but you want a formfield-specific piece of validation and, "
"possibly, cleaning/normalizing the data."
msgstr ""

# e4731096d4904a55862e7a39bfc599b8
#: ../../ref/forms/validation.txt:73
msgid ""
"This method should return the cleaned value obtained from cleaned_data, "
"regardless of whether it changed anything or not."
msgstr ""

# 5b7461b0e55e4a51a767185a1fe94676
#: ../../ref/forms/validation.txt:76
msgid ""
"The Form subclass's ``clean()`` method. This method can perform any "
"validation that requires access to multiple fields from the form at once. "
"This is where you might put in things to check that if field ``A`` is "
"supplied, field ``B`` must contain a valid email address and the like. The "
"data that this method returns is the final ``cleaned_data`` attribute for "
"the form, so don't forget to return the full list of cleaned data if you "
"override this method (by default, ``Form.clean()`` just returns ``self."
"cleaned_data``)."
msgstr ""

# 2602da5278f042ea8588b4cfb351d600
#: ../../ref/forms/validation.txt:85
msgid ""
"Note that any errors raised by your ``Form.clean()`` override will not be "
"associated with any field in particular. They go into a special \"field"
"\" (called ``__all__``), which you can access via the ``non_field_errors()`` "
"method if you need to. If you want to attach errors to a specific field in "
"the form, you will need to access the ``_errors`` attribute on the form, "
"which is `described later`_."
msgstr ""

# 8b699a54aed4455782bb04d43628e488
#: ../../ref/forms/validation.txt:92
msgid ""
"Also note that there are special considerations when overriding the "
"``clean()`` method of a ``ModelForm`` subclass. (see the :ref:`ModelForm "
"documentation <overriding-modelform-clean-method>` for more information)"
msgstr ""

# ba25dfbd166a4e9798938849caa0f2a2
#: ../../ref/forms/validation.txt:97
msgid ""
"These methods are run in the order given above, one field at a time.  That "
"is, for each field in the form (in the order they are declared in the form "
"definition), the ``Field.clean()`` method (or its override) is run, then "
"``clean_<fieldname>()``. Finally, once those two methods are run for every "
"field, the ``Form.clean()`` method, or its override, is executed."
msgstr ""

# 0fc7e83c2a634a8eac9a95de4761ded4
#: ../../ref/forms/validation.txt:103
msgid "Examples of each of these methods are provided below."
msgstr ""

# 2803ac41cd6c482cb6cd9527e2d44793
#: ../../ref/forms/validation.txt:105
msgid ""
"As mentioned, any of these methods can raise a ``ValidationError``. For any "
"field, if the ``Field.clean()`` method raises a ``ValidationError``, any "
"field-specific cleaning method is not called. However, the cleaning methods "
"for all remaining fields are still executed."
msgstr ""

# e63b2d189e0444718385bdc52ab8b522
#: ../../ref/forms/validation.txt:110
msgid ""
"The ``clean()`` method for the ``Form`` class or subclass is always run. If "
"that method raises a ``ValidationError``, ``cleaned_data`` will be an empty "
"dictionary."
msgstr ""

# 0416a33667584014b0c981d51367e6d7
#: ../../ref/forms/validation.txt:114
msgid ""
"The previous paragraph means that if you are overriding ``Form.clean()``, "
"you should iterate through ``self.cleaned_data.items()``, possibly "
"considering the ``_errors`` dictionary attribute on the form as well. In "
"this way, you will already know which fields have passed their individual "
"validation requirements."
msgstr ""

# eef9c30af4da498b9e8cd3b56e66cd3c
#: ../../ref/forms/validation.txt:122
msgid "Form subclasses and modifying field errors"
msgstr ""

# 175a04c90f9e4cb49c6a7c5383c03e48
#: ../../ref/forms/validation.txt:124
msgid ""
"Sometimes, in a form's ``clean()`` method, you will want to add an error "
"message to a particular field in the form. This won't always be appropriate "
"and the more typical situation is to raise a ``ValidationError`` from ``Form."
"clean()``, which is turned into a form-wide error that is available through "
"the ``Form.non_field_errors()`` method."
msgstr ""

# fe3bf49bcf764bdc864e99862ca53235
#: ../../ref/forms/validation.txt:130
msgid ""
"When you really do need to attach the error to a particular field, you "
"should store (or amend) a key in the ``Form._errors`` attribute. This "
"attribute is an instance of a ``django.forms.util.ErrorDict`` class. "
"Essentially, though, it's just a dictionary. There is a key in the "
"dictionary for each field in the form that has an error. Each value in the "
"dictionary is a ``django.forms.util.ErrorList`` instance, which is a list "
"that knows how to display itself in different ways. So you can treat "
"``_errors`` as a dictionary mapping field names to lists."
msgstr ""

# 79f86f8289d5430dbda19dd3cbc4ac11
#: ../../ref/forms/validation.txt:139
msgid ""
"If you want to add a new error to a particular field, you should check "
"whether the key already exists in ``self._errors`` or not. If not, create a "
"new entry for the given key, holding an empty ``ErrorList`` instance. In "
"either case, you can then append your error message to the list for the "
"field name in question and it will be displayed when the form is displayed."
msgstr ""

# 146b19affbc24b73b65fb62bb33a492d
#: ../../ref/forms/validation.txt:145
msgid ""
"There is an example of modifying ``self._errors`` in the following section."
msgstr ""

# 7286734c32da41a4904150465d8a2669
#: ../../ref/forms/validation.txt:147
msgid "What's in a name?"
msgstr ""

# e9ef7759b3a843f8aa87b1ec3f946e00
#: ../../ref/forms/validation.txt:149
msgid ""
"You may be wondering why is this attribute called ``_errors`` and not "
"``errors``. Normal Python practice is to prefix a name with an underscore if "
"it's not for external usage. In this case, you are subclassing the ``Form`` "
"class, so you are essentially writing new internals. In effect, you are "
"given permission to access some of the internals of ``Form``."
msgstr ""

# 36af6e44fed74782b01ec65d9eecd1aa
#: ../../ref/forms/validation.txt:155
msgid ""
"Of course, any code outside your form should never access ``_errors`` "
"directly. The data is available to external code through the ``errors`` "
"property, which populates ``_errors`` before returning it)."
msgstr ""

# 011df40c723742b988eab0822be326b9
#: ../../ref/forms/validation.txt:159
msgid ""
"Another reason is purely historical: the attribute has been called "
"``_errors`` since the early days of the forms module and changing it now "
"(particularly since ``errors`` is used for the read-only property name) "
"would be inconvenient for a number of reasons. You can use whichever "
"explanation makes you feel more comfortable. The result is the same."
msgstr ""

# ecb39433d04a47c5856c2f8cda186681
#: ../../ref/forms/validation.txt:166
msgid "Using validation in practice"
msgstr ""

# 7c63cdcb910d44f980d1d05489fc5f26
#: ../../ref/forms/validation.txt:168
msgid ""
"The previous sections explained how validation works in general for forms. "
"Since it can sometimes be easier to put things into place by seeing each "
"feature in use, here are a series of small examples that use each of the "
"previous features."
msgstr ""

# 74cc540cccd9480bb8a8aa7930a84392
#: ../../ref/forms/validation.txt:176
msgid "Using validators"
msgstr ""

# 863a29e6b79b4cf2a4a701bb35a3ff2f
#: ../../ref/forms/validation.txt:178
msgid ""
"Django's form (and model) fields support use of simple utility functions and "
"classes known as validators. A validator is merely a callable object or "
"function that takes a value and simply returns nothing if the value is valid "
"or raises a :exc:`~django.core.exceptions.ValidationError` if not. These can "
"be passed to a field's constructor, via the field's ``validators`` argument, "
"or defined on the :class:`~django.forms.Field` class itself with the "
"``default_validators`` attribute."
msgstr ""

# 207b27ef2622467fb887ec334cad2f04
#: ../../ref/forms/validation.txt:183
msgid ""
"Simple validators can be used to validate values inside the field, let's "
"have a look at Django's ``EmailField``::"
msgstr ""

# 6c985c9a91b04073aaa43518fc7849e7
#: ../../ref/forms/validation.txt:192
msgid ""
"As you can see, ``EmailField`` is just a ``CharField`` with customized error "
"message and a validator that validates email addresses. This can also be "
"done on field definition so::"
msgstr ""

# 0b3b2cffdb1840f180a31292cc5e3365
#: ../../ref/forms/validation.txt:198
msgid "is equivalent to::"
msgstr ""

# 2a9baf8f56bb47f091bb58e9db07a942
#: ../../ref/forms/validation.txt:206
msgid ""
"Common cases such as validating against an email or a regular expression can "
"be handled using existing validator classes available in Django. For "
"example, ``validators.validate_slug`` is an instance of a :class:`~django."
"core.validators.RegexValidator` constructed with the first argument being "
"the pattern: ``^[-a-zA-Z0-9_]+$``. See the section on :doc:`writing "
"validators </ref/validators>` to see a list of what is already available and "
"for an example of how to write a validator."
msgstr ""

# 4333d931bdc54d7ca2ef9f3eca5359a4
#: ../../ref/forms/validation.txt:215
msgid "Form field default cleaning"
msgstr ""

# de563d5d14dc4f90940b3157eee29ced
#: ../../ref/forms/validation.txt:207
msgid ""
"Let's firstly create a custom form field that validates its input is a "
"string containing comma-separated email addresses. The full class looks like "
"this::"
msgstr ""

# 565eb7e1a56344aea870e26e75bca9b9
#: ../../ref/forms/validation.txt:231
msgid ""
"Every form that uses this field will have these methods run before anything "
"else can be done with the field's data. This is cleaning that is specific to "
"this type of field, regardless of how it is subsequently used."
msgstr ""

# ba9ecd28043a49ae9703810180101b8d
#: ../../ref/forms/validation.txt:235
msgid ""
"Let's create a simple ``ContactForm`` to demonstrate how you'd use this "
"field::"
msgstr ""

# 52c8bc76b256455fb16b0222645dfa76
#: ../../ref/forms/validation.txt:245
msgid ""
"Simply use ``MultiEmailField`` like any other form field. When the "
"``is_valid()`` method is called on the form, the ``MultiEmailField.clean()`` "
"method will be run as part of the cleaning process and it will, in turn, "
"call the custom ``to_python()`` and ``validate()`` methods."
msgstr ""

# 64f836b0c4ff42dcadb9667f2dffbc1a
#: ../../ref/forms/validation.txt:251
msgid "Cleaning a specific field attribute"
msgstr ""

# 45b89051c8c049a28780ffffb5f52eef
#: ../../ref/forms/validation.txt:253
msgid ""
"Continuing on from the previous example, suppose that in our "
"``ContactForm``, we want to make sure that the ``recipients`` field always "
"contains the address ``\"fred@example.com\"``. This is validation that is "
"specific to our form, so we don't want to put it into the general "
"``MultiEmailField`` class. Instead, we write a cleaning method that operates "
"on the ``recipients`` field, like so::"
msgstr ""

# 9a5439c5d8ef44b7a9dcea6a985c8b92
#: ../../ref/forms/validation.txt:273
msgid "Cleaning and validating fields that depend on each other"
msgstr ""

# f5b49b1657c64abeb7b4214dd12db090
#: ../../ref/forms/validation.txt:275
msgid ""
"Suppose we add another requirement to our contact form: if the ``cc_myself`` "
"field is ``True``, the ``subject`` must contain the word ``\"help\"``. We "
"are performing validation on more than one field at a time, so the form's "
"``clean()`` method is a good spot to do this. Notice that we are talking "
"about the ``clean()`` method on the form here, whereas earlier we were "
"writing a ``clean()`` method on a field. It's important to keep the field "
"and form difference clear when working out where to validate things. Fields "
"are single data points, forms are a collection of fields."
msgstr ""

# 7c3b4283ec894603a942831b216123a5
#: ../../ref/forms/validation.txt:284
msgid ""
"By the time the form's ``clean()`` method is called, all the individual "
"field clean methods will have been run (the previous two sections), so "
"``self.cleaned_data`` will be populated with any data that has survived so "
"far. So you also need to remember to allow for the fact that the fields you "
"are wanting to validate might not have survived the initial individual field "
"checks."
msgstr ""

# 0a344da9112b4764a53bfb75bc6c6e78
#: ../../ref/forms/validation.txt:291
msgid ""
"There are two ways to report any errors from this step. Probably the most "
"common method is to display the error at the top of the form. To create such "
"an error, you can raise a ``ValidationError`` from the ``clean()`` method. "
"For example::"
msgstr ""

# 90ebf097c9c04e16b5510fc92f30a49c
#: ../../ref/forms/validation.txt:314
msgid ""
"In this code, if the validation error is raised, the form will display an "
"error message at the top of the form (normally) describing the problem."
msgstr ""

# 6e91c3eec55f4aed8d973bc8dcb6ddec
#: ../../ref/forms/validation.txt:317
msgid ""
"Note that the call to ``super(ContactForm, self).clean()`` in the example "
"code ensures that any validation logic in parent classes is maintained."
msgstr ""

# 57fc863e667748088ebf7d67ecc3ba1d
#: ../../ref/forms/validation.txt:320
msgid ""
"The second approach might involve assigning the error message to one of the "
"fields. In this case, let's assign an error message to both the \"subject\" "
"and \"cc_myself\" rows in the form display. Be careful when doing this in "
"practice, since it can lead to confusing form output. We're showing what is "
"possible here and leaving it up to you and your designers to work out what "
"works effectively in your particular situation. Our new code (replacing the "
"previous sample) looks like this::"
msgstr ""

# eff1861986fb42c3a7d367e43b2c360e
#: ../../ref/forms/validation.txt:352
msgid ""
"As you can see, this approach requires a bit more effort, not withstanding "
"the extra design effort to create a sensible form display. The details are "
"worth noting, however. Firstly, earlier we mentioned that you might need to "
"check if the field name keys already exist in the ``_errors`` dictionary. In "
"this case, since we know the fields exist in ``self.cleaned_data``, they "
"must have been valid when cleaned as individual fields, so there will be no "
"corresponding entries in ``_errors``."
msgstr ""

# 4955a5cffadf49b098cd74ad653c2ba6
#: ../../ref/forms/validation.txt:360
msgid ""
"Secondly, once we have decided that the combined data in the two fields we "
"are considering aren't valid, we must remember to remove them from the "
"``cleaned_data``."
msgstr ""

# f25fea54c1744885b12ebf0a008abc97
#: ../../ref/forms/validation.txt:366
msgid ""
"Django used to remove the ``cleaned_data`` attribute entirely if there were "
"any errors in the form. Since version 1.5, ``cleaned_data`` is present even "
"if the form doesn't validate, but it contains only field values that did "
"validate."
msgstr ""

# e3245d071b94422da87393808fa7303f
#: ../../ref/forms/widgets.txt:3
msgid "Widgets"
msgstr ""

# ee479b3f1a474e32b92847cc52a22354
#: ../../ref/forms/widgets.txt:10
msgid ""
"A widget is Django's representation of a HTML input element. The widget "
"handles the rendering of the HTML, and the extraction of data from a GET/"
"POST dictionary that corresponds to the widget."
msgstr ""

# db1cdd1a75d0493297b0df93ffe198b7
#: ../../ref/forms/widgets.txt:16
msgid ""
"Widgets should not be confused with the :doc:`form fields </ref/forms/"
"fields>`. Form fields deal with the logic of input validation and are used "
"directly in templates. Widgets deal with rendering of HTML form input "
"elements on the web page and extraction of raw submitted data. However, "
"widgets do need to be :ref:`assigned <widget-to-field>` to form fields."
msgstr ""

# 44ab5814ee6747c29d788dfb76587509
#: ../../ref/forms/widgets.txt:25
msgid "Specifying widgets"
msgstr ""

# fa08443d4460411a92579fb67128c822
#: ../../ref/forms/widgets.txt:27
msgid ""
"Whenever you specify a field on a form, Django will use a default widget "
"that is appropriate to the type of data that is to be displayed. To find "
"which widget is used on which field, see the documentation about :ref:`built-"
"in fields`."
msgstr ""

# f4f9112ac8394de3a1167c4c290a3eed
#: ../../ref/forms/widgets.txt:32
msgid ""
"However, if you want to use a different widget for a field, you can just use "
"the :attr:`~Field.widget` argument on the field definition. For example::"
msgstr ""

# e25b53d3bff34ea2a3945c7656c4965f
#: ../../ref/forms/widgets.txt:43
msgid ""
"This would specify a form with a comment that uses a larger :class:"
"`Textarea` widget, rather than the default :class:`TextInput` widget."
msgstr ""

# a1efc517172b4f3eaa1b44f763f642b9
#: ../../ref/forms/widgets.txt:48
msgid "Setting arguments for widgets"
msgstr ""

# d740dbfb8618495d974670a4181e7809
#: ../../ref/forms/widgets.txt:50
msgid ""
"Many widgets have optional extra arguments; they can be set when defining "
"the widget on the field. In the following example, the :attr:`~django.forms."
"extras.widgets.SelectDateWidget.years` attribute is set for a :class:"
"`~django.forms.extras.widgets.SelectDateWidget`::"
msgstr ""

# 12d762c9117942deac9d3d809a503a0a
#: ../../ref/forms/widgets.txt:69
msgid ""
"See the :ref:`built-in widgets` for more information about which widgets are "
"available and which arguments they accept."
msgstr ""

# d06ad55bdaf24595b57437653adafe5a
#: ../../ref/forms/widgets.txt:74
msgid "Widgets inheriting from the Select widget"
msgstr ""

# 764553b3cad2476ea2a40d16288fbf5c
#: ../../ref/forms/widgets.txt:76
msgid ""
"Widgets inheriting from the :class:`Select` widget deal with choices. They "
"present the user with a list of options to choose from. The different "
"widgets present this choice differently; the :class:`Select` widget itself "
"uses a ``<select>`` HTML list representation, while :class:`RadioSelect` "
"uses radio buttons."
msgstr ""

# 0dfdd0490ac340e6801fcc0d0aef604f
#: ../../ref/forms/widgets.txt:82
msgid ""
":class:`Select` widgets are used by default on :class:`ChoiceField` fields. "
"The choices displayed on the widget are inherited from the :class:"
"`ChoiceField` and changing :attr:`ChoiceField.choices` will update :attr:"
"`Select.choices`. For example::"
msgstr ""

# 62915aa790d347edb940a04adabad17d
#: ../../ref/forms/widgets.txt:100
msgid ""
"Widgets which offer a :attr:`~Select.choices` attribute can however be used "
"with fields which are not based on choice -- such as a :class:`CharField` -- "
"but it is recommended to use a :class:`ChoiceField`-based field when the "
"choices are inherent to the model and not just the representational widget."
msgstr ""

# 2180f4f1a22d4449a709c945464005ca
#: ../../ref/forms/widgets.txt:106
msgid "Customizing widget instances"
msgstr ""

# 18b672ebf0a14d4e9d8b3309743260dc
#: ../../ref/forms/widgets.txt:108
msgid ""
"When Django renders a widget as HTML, it only renders very minimal markup - "
"Django doesn't add class names, or any other widget-specific attributes. "
"This means, for example, that all :class:`TextInput` widgets will appear the "
"same on your Web pages."
msgstr ""

# 4a82ff8b8b96475baadc9767848d3684
#: ../../ref/forms/widgets.txt:113
msgid ""
"There are two ways to customize widgets: :ref:`per widget instance <styling-"
"widget-instances>` and :ref:`per widget class <styling-widget-classes>`."
msgstr ""

# b75c93134b07462ba920a88258582dc7
#: ../../ref/forms/widgets.txt:119
msgid "Styling widget instances"
msgstr ""

# 8e0d13f1300c476a92d97fe0c07613e7
#: ../../ref/forms/widgets.txt:121
msgid ""
"If you want to make one widget instance look different from another, you "
"will need to specify additional attributes at the time when the widget "
"object is instantiated and assigned to a form field (and perhaps add some "
"rules to your CSS files)."
msgstr ""

# 3aa09fe5b44648c4ad4463e4d0a39c11
#: ../../ref/forms/widgets.txt:126
msgid "For example, take the following simple form::"
msgstr ""

# 45d09a5eee1142a5a4b302d4fc0d4de7
#: ../../ref/forms/widgets.txt:135
msgid ""
"This form will include three default :class:`TextInput` widgets, with "
"default rendering -- no CSS class, no extra attributes. This means that the "
"input boxes provided for each widget will be rendered exactly the same::"
msgstr ""

# d757fcc58cb2454ca28c597d94757543
#: ../../ref/forms/widgets.txt:145
msgid ""
"On a real Web page, you probably don't want every widget to look the same. "
"You might want a larger input element for the comment, and you might want "
"the 'name' widget to have some special CSS class. It is also possible to "
"specify the 'type' attribute to take advantage of the new HTML5 input "
"types.  To do this, you use the :attr:`Widget.attrs` argument when creating "
"the widget::"
msgstr ""

# 98be157286e14ae8aabddc95ea973009
#: ../../ref/forms/widgets.txt:158
msgid "Django will then include the extra attributes in the rendered output:"
msgstr ""

# 3b7e893c537b48828d0773f4738160c7
#: ../../ref/forms/widgets.txt:165
msgid ""
"You can also set the HTML ``id`` using :attr:`~Widget.attrs`. See :attr:"
"`BoundField.id_for_label` for an example."
msgstr ""

# f07cf52426684a228cd07b14337933ae
#: ../../ref/forms/widgets.txt:171
msgid "Styling widget classes"
msgstr ""

# 74fb9357098e4b1b86373739ea295922
#: ../../ref/forms/widgets.txt:173
msgid ""
"With widgets, it is possible to add media (``css`` and ``javascript``) and "
"more deeply customize their appearance and behavior."
msgstr ""

# 8af7280758e84185884cd5886be1f1bd
#: ../../ref/forms/widgets.txt:174
msgid ""
"In a nutshell, you will need to subclass the widget and either :ref:`define "
"a class \"Media\" <media-as-a-static-definition>` as a member of the "
"subclass, or :ref:`create a property \"media\" <dynamic-property>`, "
"returning an instance of that class."
msgstr ""

# 0c5cb0daa7904fb78b8d729f28098932
#: ../../ref/forms/widgets.txt:179
msgid ""
"These methods involve somewhat advanced Python programming and are described "
"in detail in the :doc:`Form Media </topics/forms/media>` topic guide."
msgstr ""

# 04d0bbba7ecd497eabbf0558b1407810
#: ../../ref/forms/widgets.txt:185
msgid "Base Widget classes"
msgstr ""

# 8b4f2f07467942a2873eb9fac2110ae7
#: ../../ref/forms/widgets.txt:187
msgid ""
"Base widget classes :class:`Widget` and :class:`MultiWidget` are subclassed "
"by all the :ref:`built-in widgets <built-in widgets>` and may serve as a "
"foundation for custom widgets."
msgstr ""

# 7eb5aa6d33db4538b2fa0696975317b6
#: ../../ref/forms/widgets.txt:193
msgid ""
"This abstract class cannot be rendered, but provides the basic attribute :"
"attr:`~Widget.attrs`.  You may also implement or override the :meth:`~Widget."
"render()` method on custom widgets."
msgstr ""

# 4b32dd49928b46b88e8072a5aeac5491
#: ../../ref/forms/widgets.txt:199
msgid ""
"A dictionary containing HTML attributes to be set on the rendered widget."
msgstr ""

# 91e89966de8544b3bb35ac7f4413d822
#: ../../ref/forms/widgets.txt:210
msgid ""
"Returns HTML for the widget, as a Unicode string. This method must be "
"implemented by the subclass, otherwise ``NotImplementedError`` will be "
"raised."
msgstr ""

# 71a1b47c070c4e28bb09e94627548497
#: ../../ref/forms/widgets.txt:214
msgid ""
"The 'value' given is not guaranteed to be valid input, therefore subclass "
"implementations should program defensively."
msgstr ""

# 3785222140e84b6c9f9304a42a4cace8
#: ../../ref/forms/widgets.txt:219
msgid ""
"Given a dictionary of data and this widget's name, returns the value of this "
"widget. Returns ``None`` if a value wasn't provided."
msgstr ""

# 5970da74f71f419a832611eeef93df8e
#: ../../ref/forms/widgets.txt:224
msgid ""
"A widget that is composed of multiple widgets. :class:`~django.forms."
"MultiWidget` works hand in hand with the :class:`~django.forms."
"MultiValueField`."
msgstr ""

# e083d4d3c24240239dfbbbdf3e901a64
#: ../../ref/forms/widgets.txt:228
msgid ":class:`MultiWidget` has one required argument:"
msgstr ""

# 2067636fc0a449e981494ceb0b3eb6a8
#: ../../ref/forms/widgets.txt:232
msgid "An iterable containing the widgets needed."
msgstr ""

# 1fc728e8712f4f969ca3d17a3be9a747
#: ../../ref/forms/widgets.txt:234
msgid "And one required method:"
msgstr ""

# 3f4a345c7bbd4ebaacf3e7347ab26cbf
#: ../../ref/forms/widgets.txt:238
msgid ""
"This method takes a single \"compressed\" value from the field and returns a "
"list of \"decompressed\" values. The input value can be assumed valid, but "
"not necessarily non-empty."
msgstr ""

# f9ae78544fbe4b9cabf0506ecc4ada18
#: ../../ref/forms/widgets.txt:242
msgid ""
"This method **must be implemented** by the subclass, and since the value may "
"be empty, the implementation must be defensive."
msgstr ""

# cbd894ada9574843b031831c2c9a1f5b
#: ../../ref/forms/widgets.txt:245
msgid ""
"The rationale behind \"decompression\" is that it is necessary to \"split\" "
"the combined value of the form field into the values for each widget."
msgstr ""

# f31e2372906c4029841bf686e30e27a1
#: ../../ref/forms/widgets.txt:248
msgid ""
"An example of this is how :class:`SplitDateTimeWidget` turns a :class:"
"`~datetime.datetime` value into a list with date and time split into two "
"separate values::"
msgstr ""

# a1c9cca10d3b490dbccb84b584c28bc6
#: ../../ref/forms/widgets.txt:263
msgid ""
"Note that :class:`~django.forms.MultiValueField` has a complementary method :"
"meth:`~django.forms.MultiValueField.compress` with the opposite "
"responsibility - to combine cleaned values of all member fields into one."
msgstr ""

# 77d84592ddb043f8a0cc18cc7d3ef439
#: ../../ref/forms/widgets.txt:268
msgid "Other methods that may be useful to override include:"
msgstr ""

# 4b6622ba9cba43efa3f49bb9c113a81a
#: ../../ref/forms/widgets.txt:272
msgid ""
"Argument ``value`` is handled differently in this method from the subclasses "
"of :class:`~Widget` because it has to figure out how to split a single value "
"for display in multiple widgets."
msgstr ""

# d46ba9dda740436cb4bd40b4fb6638c0
#: ../../ref/forms/widgets.txt:276
msgid "The ``value`` argument used when rendering can be one of two things:"
msgstr ""

# 4b3c3a5bb75945c396e124113867bb26
#: ../../ref/forms/widgets.txt:278
msgid "A ``list``."
msgstr ""

# f9ce0f3b7be648b384d73a90450a1e03
#: ../../ref/forms/widgets.txt:279
msgid ""
"A single value (e.g., a string) that is the \"compressed\" representation of "
"a ``list`` of values."
msgstr ""

# 44283743b7d04af891edbd847911e995
#: ../../ref/forms/widgets.txt:282
msgid ""
"If ``value`` is a list, the output of :meth:`~MultiWidget.render` will be a "
"concatenation of rendered child widgets. If ``value`` is not a list, it will "
"first be processed by the method :meth:`~MultiWidget.decompress()` to create "
"the list and then rendered."
msgstr ""

# 68258ade5e1c4d8190e7b53bf842c3d1
#: ../../ref/forms/widgets.txt:287
msgid ""
"When ``render()`` executes its HTML rendering, each value in the list is "
"rendered with the corresponding widget -- the first value is rendered in the "
"first widget, the second value is rendered in the second widget, etc."
msgstr ""

# 56171b8f4c08482cbd6ea4e15c08599e
#: ../../ref/forms/widgets.txt:292
msgid ""
"Unlike in the single value widgets, method :meth:`~MultiWidget.render` need "
"not be implemented in the subclasses."
msgstr ""

# 92ba1414d6c444d99a7311a047e91f27
#: ../../ref/forms/widgets.txt:297
msgid ""
"Given a list of rendered widgets (as strings), returns a Unicode string "
"representing the HTML for the whole lot."
msgstr ""

# b3a60d82602347878cfe1af8534c2803
#: ../../ref/forms/widgets.txt:300
msgid ""
"This hook allows you to format the HTML design of the widgets any way you'd "
"like."
msgstr ""

# 83e1abcdfe39484f90d0fddf555edf0c
#: ../../ref/forms/widgets.txt:303
msgid ""
"Here's an example widget which subclasses :class:`MultiWidget` to display a "
"date with the day, month, and year in different select boxes. This widget is "
"intended to be used with a :class:`~django.forms.DateField` rather than a :"
"class:`~django.forms.MultiValueField`, thus we have implemented :meth:"
"`~Widget.value_from_datadict`::"
msgstr ""

# 9760ecbf67e544f497216bc046bc572e
#: ../../ref/forms/widgets.txt:344
msgid ""
"The constructor creates several :class:`Select` widgets in a tuple. The "
"``super`` class uses this tuple to setup the widget."
msgstr ""

# 88023b6d8a0948af9ef66cbb3969fde6
#: ../../ref/forms/widgets.txt:347
msgid ""
"The :meth:`~MultiWidget.format_output` method is fairly vanilla here (in "
"fact, it's the same as what's been implemented as the default for "
"``MultiWidget``), but the idea is that you could add custom HTML between the "
"widgets should you wish."
msgstr ""

# 19813610eab244d98de56b9c25674cdf
#: ../../ref/forms/widgets.txt:352
msgid ""
"The required method :meth:`~MultiWidget.decompress` breaks up a ``datetime."
"date`` value into the day, month, and year values corresponding to each "
"widget. Note how the method handles the case where ``value`` is ``None``."
msgstr ""

# 592f113498c14d6c85096d15261a3b2f
#: ../../ref/forms/widgets.txt:357
msgid ""
"The default implementation of :meth:`~Widget.value_from_datadict` returns a "
"list of values corresponding to each ``Widget``.  This is appropriate when "
"using a ``MultiWidget`` with a :class:`~django.forms.MultiValueField`, but "
"since we want to use this widget with a :class:`~django.forms.DateField` "
"which takes a single value, we have overridden this method to combine the "
"data of all the subwidgets into a ``datetime.date``. The method extracts "
"data from the ``POST`` dictionary and constructs and validates the date. If "
"it is valid, we return the string, otherwise, we return an empty string "
"which will cause ``form.is_valid`` to return ``False``."
msgstr ""

# d5eb5baa30a043fe9df8e0342f1074d7
#: ../../ref/forms/widgets.txt:370
msgid "Built-in widgets"
msgstr ""

# c548e7ac322240c49369040b716c3ab9
#: ../../ref/forms/widgets.txt:372
msgid ""
"Django provides a representation of all the basic HTML widgets, plus some "
"commonly used groups of widgets in the ``django.forms.widgets`` module, "
"including :ref:`the input of text <text-widgets>`, :ref:`various checkboxes "
"and selectors <selector-widgets>`, :ref:`uploading files <file-upload-"
"widgets>`, and :ref:`handling of multi-valued input <composite-widgets>`."
msgstr ""

# a4206f2333bb4690b718d6940b019fb1
#: ../../ref/forms/widgets.txt:381
msgid "Widgets handling input of text"
msgstr ""

# 33b6893885ae44bd90f33f9160fc76f8
#: ../../ref/forms/widgets.txt:383
msgid "These widgets make use of the HTML elements ``input`` and ``textarea``."
msgstr ""

# 213d6b90524a44bbac5d3cec78bcae97
#: ../../ref/forms/widgets.txt:386
msgid "``TextInput``"
msgstr ""

# 69c12b67faef4a78b98f3c44d98571c8
#: ../../ref/forms/widgets.txt:390
msgid "Text input: ``<input type='text' ...>``"
msgstr ""

# 093e568a6c2d44d3b1694d6975fef697
#: ../../ref/forms/widgets.txt:393
msgid "``PasswordInput``"
msgstr ""

# 938e6ce1b00f4b4eacaec2bdee6188ac
#: ../../ref/forms/widgets.txt:397
msgid "Password input: ``<input type='password' ...>``"
msgstr ""

# 94ade9d1f66c4d10ac68f8156a5c535b
#: ../../ref/forms/widgets.txt:403
msgid ""
"Determines whether the widget will have a value filled in when the form is "
"re-displayed after a validation error (default is ``False``)."
msgstr ""

# 1763833f076143879b862a5eb67323a4
#: ../../ref/forms/widgets.txt:407
msgid "``HiddenInput``"
msgstr ""

# 4abd52771d5643a8a9c76d53c517eec0
#: ../../ref/forms/widgets.txt:411
msgid "Hidden input: ``<input type='hidden' ...>``"
msgstr ""

# 4df70d68cd3647b68d651df181808c02
#: ../../ref/forms/widgets.txt:413
msgid ""
"Note that there also is a :class:`MultipleHiddenInput` widget that "
"encapsulates a set of hidden input elements."
msgstr ""

# 0893c679b2a8494c989c6650418ce4bd
#: ../../ref/forms/widgets.txt:417
msgid "``DateInput``"
msgstr ""

# 90359f022ab146058abf63477e2ddcb1
#: ../../ref/forms/widgets.txt:421
msgid "Date input as a simple text box: ``<input type='text' ...>``"
msgstr ""

# 4652aa73ca874b3e9ef3ba4d980b7d6e
# b074a0fd346d4670af77e53aaa7b18a8
# a36f0b2d35c540879f1b5bc2f755dc23
#: ../../ref/forms/widgets.txt:427 ../../ref/forms/widgets.txt:444
#: ../../ref/forms/widgets.txt:461
msgid ""
"Takes same arguments as :class:`TextInput`, with one more optional argument:"
msgstr ""

# 55a118b311794966a7c644a734b0c73e
# 315277c685924a48aa76d04a939c365b
# da09b78db83046c09525079463289c16
#: ../../ref/forms/widgets.txt:431 ../../ref/forms/widgets.txt:448
#: ../../ref/forms/widgets.txt:465
msgid "The format in which this field's initial value will be displayed."
msgstr ""

# e454fa47e0874bd38353803f0ade8f10
#: ../../ref/forms/widgets.txt:429
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATE_INPUT_FORMATS` and respects :ref:`format-"
"localization`."
msgstr ""

# 03e759d5daff4cba8ac8d700cfe8470e
#: ../../ref/forms/widgets.txt:434
msgid "``DateTimeInput``"
msgstr ""

# 9879c5bc4ed64c9a9860272a531ff11e
#: ../../ref/forms/widgets.txt:438
msgid "Date/time input as a simple text box: ``<input type='text' ...>``"
msgstr ""

# cd144cd3fe22455eaad8c8e6484a16b7
#: ../../ref/forms/widgets.txt:446
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATETIME_INPUT_FORMATS` and respects :ref:`format-"
"localization`."
msgstr ""

# fafba8531ee5454a9b3ca6efe6ee42fb
#: ../../ref/forms/widgets.txt:451
msgid "``TimeInput``"
msgstr ""

# 1e8d6327723045db870afd5e8a5ec34b
#: ../../ref/forms/widgets.txt:455
msgid "Time input as a simple text box: ``<input type='text' ...>``"
msgstr ""

# 3f806886fc5246ccbf41e0c62b81a898
#: ../../ref/forms/widgets.txt:463
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`TIME_INPUT_FORMATS` and respects :ref:`format-"
"localization`."
msgstr ""

# 1f03d0d32e91410582d081e42df0045f
#: ../../ref/forms/widgets.txt:468
msgid "``Textarea``"
msgstr ""

# f507e04691f740259f0b01dac92c5c92
#: ../../ref/forms/widgets.txt:472
msgid "Text area: ``<textarea>...</textarea>``"
msgstr ""

# 69d8d7e9b29a49dab327b7f1915007d1
#: ../../ref/forms/widgets.txt:477
msgid "Selector and checkbox widgets"
msgstr ""

# 1f9728cce67d436180082bd809b1de44
#: ../../ref/forms/widgets.txt:480
msgid "``CheckboxInput``"
msgstr ""

# 4fdd8ea732264ac794d274a176a7b8bc
#: ../../ref/forms/widgets.txt:484
msgid "Checkbox: ``<input type='checkbox' ...>``"
msgstr ""

# c9f3fd6024ba44d3b80a190297680db7
#: ../../ref/forms/widgets.txt:490
msgid ""
"A callable that takes the value of the CheckBoxInput and returns ``True`` if "
"the checkbox should be checked for that value."
msgstr ""

# 462ea74ba16443da9b20095fb3d3bae4
#: ../../ref/forms/widgets.txt:498
msgid "``Select``"
msgstr ""

# ef222e6a8e124260bda5a244a177b20d
#: ../../ref/forms/widgets.txt:502
msgid "Select widget: ``<select><option ...>...</select>``"
msgstr ""

# eab634fe0f014b14b3c9abdcd986285c
# 91f264f60f1d4c38bc1fad2189a78e45
#: ../../ref/forms/widgets.txt:506 ../../ref/forms/widgets.txt:660
msgid ""
"This attribute is optional when the form field does not have a ``choices`` "
"attribute. If it does, it will override anything you set here when the "
"attribute is updated on the :class:`Field`."
msgstr ""

# e6e1a4cfadff405a93c13e44b910e6b7
#: ../../ref/forms/widgets.txt:511
msgid "``NullBooleanSelect``"
msgstr ""

# 7ed5f629be9a4e018a69b51c02cc70bd
#: ../../ref/forms/widgets.txt:515
msgid "Select widget with options 'Unknown', 'Yes' and 'No'"
msgstr ""

# 5488b0579dbf415fbe07f7ee604da6f1
#: ../../ref/forms/widgets.txt:518
msgid "``SelectMultiple``"
msgstr ""

# 7ef15a3ddde64601affee7629f685566
#: ../../ref/forms/widgets.txt:522
msgid ""
"Similar to :class:`Select`, but allows multiple selection: ``<select "
"multiple='multiple'>...</select>``"
msgstr ""

# aebc6ea7e92b463083942ab758d22358
#: ../../ref/forms/widgets.txt:526
msgid "``RadioSelect``"
msgstr ""

# da47734fe01c4689a6deae696edc4912
#: ../../ref/forms/widgets.txt:530
msgid ""
"Similar to :class:`Select`, but rendered as a list of radio buttons within "
"``<li>`` tags:"
msgstr ""

# df7fbd0b7ba54db4a9f1d6ee00be895b
#: ../../ref/forms/widgets.txt:542
msgid ""
"For more granular control over the generated markup, you can loop over the "
"radio buttons in the template. Assuming a form ``myform`` with a field "
"``beatles`` that uses a ``RadioSelect`` as its widget:"
msgstr ""

# af43ecdaef234f319c551c13d0d537c0
#: ../../ref/forms/widgets.txt:554
msgid "This would generate the following HTML:"
msgstr ""

# d6d8fbee80504df482b85608285c0536
#: ../../ref/forms/widgets.txt:571
msgid ""
"That included the ``<label>`` tags. To get more granular, you can use each "
"radio button's ``tag`` and ``choice_label`` attributes. For example, this "
"template..."
msgstr ""

# e4c7c49110dc4ae39a50ffe32d4fde14
#: ../../ref/forms/widgets.txt:583
msgid "...will result in the following HTML:"
msgstr ""

# 6436fdabdaf044f8baf9471095046966
#: ../../ref/forms/widgets.txt:604
msgid ""
"If you decide not to loop over the radio buttons -- e.g., if your template "
"simply includes ``{{ myform.beatles }}`` -- they'll be output in a ``<ul>`` "
"with ``<li>`` tags, as above."
msgstr ""

# 118eed5c37e740328e467bf38568bc57
#: ../../ref/forms/widgets.txt:608
msgid "``CheckboxSelectMultiple``"
msgstr ""

# 359fea3a647949598ba4c54c3baa08fb
#: ../../ref/forms/widgets.txt:612
msgid ""
"Similar to :class:`SelectMultiple`, but rendered as a list of check buttons:"
msgstr ""

# 2ca622040f3242dc98248c632a4fea81
#: ../../ref/forms/widgets.txt:625
msgid "File upload widgets"
msgstr ""

# 7134371dbafc46b5ad63f74ae6ad8ef6
#: ../../ref/forms/widgets.txt:628
msgid "``FileInput``"
msgstr ""

# 8741ee71885e4e44814ada67201b0d42
#: ../../ref/forms/widgets.txt:632
msgid "File upload input: ``<input type='file' ...>``"
msgstr ""

# 900a586a31734205851e346408d5d1a6
#: ../../ref/forms/widgets.txt:635
msgid "``ClearableFileInput``"
msgstr ""

# 0ea114b591454246bdab4ac0ad853f4a
#: ../../ref/forms/widgets.txt:639
msgid ""
"File upload input: ``<input type='file' ...>``, with an additional checkbox "
"input to clear the field's value, if the field is not required and has "
"initial data."
msgstr ""

# bb95e9fcd7284aac96062f917dbd07a1
#: ../../ref/forms/widgets.txt:646
msgid "Composite widgets"
msgstr ""

# 02841bb11e8140bebe333920545655dc
#: ../../ref/forms/widgets.txt:649
msgid "``MultipleHiddenInput``"
msgstr ""

# cd2a05bd099b47da9fa4290e31eb4229
#: ../../ref/forms/widgets.txt:653
msgid "Multiple ``<input type='hidden' ...>`` widgets."
msgstr ""

# 1d0391456d374db8bd242438dafab634
#: ../../ref/forms/widgets.txt:655
msgid ""
"A widget that handles multiple hidden widgets for fields that have a list of "
"values."
msgstr ""

# 1b180512a945439295fcd053b34dfc5a
#: ../../ref/forms/widgets.txt:665
msgid "``SplitDateTimeWidget``"
msgstr ""

# dc1c5bc7889747668e27ccc6a9cbc208
#: ../../ref/forms/widgets.txt:669
msgid ""
"Wrapper (using :class:`MultiWidget`) around two widgets: :class:`DateInput` "
"for the date, and :class:`TimeInput` for the time."
msgstr ""

# 47103678376347a092ca10f468e0f984
#: ../../ref/forms/widgets.txt:672
msgid "``SplitDateTimeWidget`` has two optional attributes:"
msgstr ""

# c43909fb79ee464e98689ef7e9a54a8e
#: ../../ref/forms/widgets.txt:676
msgid "Similar to :attr:`DateInput.format`"
msgstr ""

# 57a98a46738642cdae38834b8ace0c56
#: ../../ref/forms/widgets.txt:680
msgid "Similar to :attr:`TimeInput.format`"
msgstr ""

# d310b659481c45ce8abdc27056d4af03
#: ../../ref/forms/widgets.txt:683
msgid "``SplitHiddenDateTimeWidget``"
msgstr ""

# 1716487d042f4efca9a563bdcbd65ad3
#: ../../ref/forms/widgets.txt:687
msgid ""
"Similar to :class:`SplitDateTimeWidget`, but uses :class:`HiddenInput` for "
"both date and time."
msgstr ""

# 3555b8837abd4d6fb11815f7f331858a
#: ../../ref/forms/widgets.txt:693
msgid "``SelectDateWidget``"
msgstr ""

# 10ac2282aa4247ef8ee9ba8404f02026
#: ../../ref/forms/widgets.txt:697
msgid ""
"Wrapper around three :class:`~django.forms.Select` widgets: one each for "
"month, day, and year. Note that this widget lives in a separate file from "
"the standard widgets."
msgstr ""

# cb3f4d0502bc4f048a768c13dc67a0b9
#: ../../ref/forms/widgets.txt:705
msgid ""
"An optional list/tuple of years to use in the \"year\" select box. The "
"default is a list containing the current year and the next 9 years."
msgstr ""

# b730e6945e07411886df797864f94022
#: ../../ref/middleware.txt:3
msgid "Middleware"
msgstr ""

# f74e52e7e7f1436e80650d80361f19bc
#: ../../ref/middleware.txt:8
msgid ""
"This document explains all middleware components that come with Django. For "
"information on how to use them and how to write your own middleware, see "
"the :doc:`middleware usage guide </topics/http/middleware>`."
msgstr ""

# bf002f98f9bb42f3a3209fafd6705122
#: ../../ref/middleware.txt:13
msgid "Available middleware"
msgstr ""

# 6d5e0cf23d594de9825e012689b90299
#: ../../ref/middleware.txt:16
msgid "Cache middleware"
msgstr ""

# 4f56555210f44966b1ffc9ab13c7d05f
#: ../../ref/middleware.txt:25
msgid ""
"Enable the site-wide cache. If these are enabled, each Django-powered page "
"will be cached for as long as the :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting defines. See the :doc:`cache documentation </topics/cache>`."
msgstr ""

# 941319496aef42baadda6763c5f86d68
#: ../../ref/middleware.txt:30
msgid "\"Common\" middleware"
msgstr ""

# 2ed7414e543846b293b9f463d33096ec
#: ../../ref/middleware.txt:37
msgid "Adds a few conveniences for perfectionists:"
msgstr ""

# a4c5f994a9a64d82a88373a6cba34690
#: ../../ref/middleware.txt:39
msgid ""
"Forbids access to user agents in the :setting:`DISALLOWED_USER_AGENTS` "
"setting, which should be a list of compiled regular expression objects."
msgstr ""

# 1181ae00e7a04670b559c406ad952307
#: ../../ref/middleware.txt:42
msgid ""
"Performs URL rewriting based on the :setting:`APPEND_SLASH` and :setting:"
"`PREPEND_WWW` settings."
msgstr ""

# c914f53b70954f83bd74e9d2c40aa7c7
#: ../../ref/middleware.txt:45
msgid ""
"If :setting:`APPEND_SLASH` is ``True`` and the initial URL doesn't end with "
"a slash, and it is not found in the URLconf, then a new URL is formed by "
"appending a slash at the end. If this new URL is found in the URLconf, then "
"Django redirects the request to this new URL. Otherwise, the initial URL is "
"processed as usual."
msgstr ""

# 48c7a8fa43994722af76bc12bd3cc58a
#: ../../ref/middleware.txt:51
msgid ""
"For example, ``foo.com/bar`` will be redirected to ``foo.com/bar/`` if you "
"don't have a valid URL pattern for ``foo.com/bar`` but *do* have a valid "
"pattern for ``foo.com/bar/``."
msgstr ""

# 782ce7fac5374330a8f87e3bc853d7b0
#: ../../ref/middleware.txt:55
msgid ""
"If :setting:`PREPEND_WWW` is ``True``, URLs that lack a leading \"www.\" "
"will be redirected to the same URL with a leading \"www.\""
msgstr ""

# d14475ad2f6a41e1896d87b05ec8d6c0
#: ../../ref/middleware.txt:58
msgid ""
"Both of these options are meant to normalize URLs. The philosophy is that "
"each URL should exist in one, and only one, place. Technically a URL ``foo."
"com/bar`` is distinct from ``foo.com/bar/`` -- a search-engine indexer would "
"treat them as separate URLs -- so it's best practice to normalize URLs."
msgstr ""

# ee434ce1ac604cabbeadd7d68dda506c
#: ../../ref/middleware.txt:64
msgid ""
"Sends broken link notification emails to :setting:`MANAGERS` if :setting:"
"`SEND_BROKEN_LINK_EMAILS` is set to ``True``."
msgstr ""

# 26a6021643bf45ab80ca1f3de1650750
#: ../../ref/middleware.txt:67
msgid ""
"Handles ETags based on the :setting:`USE_ETAGS` setting. If :setting:"
"`USE_ETAGS` is set to ``True``, Django will calculate an ETag for each "
"request by MD5-hashing the page content, and it'll take care of sending "
"``Not Modified`` responses, if appropriate."
msgstr ""

# 660c6ff9c6c34d209678d62694d67426
#: ../../ref/middleware.txt:73
msgid "View metadata middleware"
msgstr ""

# d91e2cbdb13845b297bd2a759f306576
#: ../../ref/middleware.txt:80
msgid ""
"Sends custom ``X-View`` HTTP headers to HEAD requests that come from IP "
"addresses defined in the :setting:`INTERNAL_IPS` setting. This is used by "
"Django's :doc:`automatic documentation system </ref/contrib/admin/"
"admindocs>`. Depends on :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware`."
msgstr ""

# a2a797c4845e47f3b2df6fd1b2a0e72e
#: ../../ref/middleware.txt:86
msgid "GZip middleware"
msgstr ""

# d657be0caaa84ef58a4a983e8894241f
#: ../../ref/middleware.txt:95
msgid ""
"Security researchers recently revealed that when compression techniques "
"(including ``GZipMiddleware``) are used on a website, the site becomes "
"exposed to a number of possible attacks. These approaches can be used to "
"compromise, amongst other things, Django's CSRF protection. Before using "
"``GZipMiddleware`` on your site, you should consider very carefully whether "
"you are subject to these attacks. If you're in *any* doubt about whether "
"you're affected, you should avoid using ``GZipMiddleware``. For more "
"details, see the `the BREACH paper (PDF)`_ and `breachattack.com`_."
msgstr ""

# 301580c636bc46dbb1e06527af2b9609
#: ../../ref/middleware.txt:107
msgid ""
"Compresses content for browsers that understand GZip compression (all modern "
"browsers)."
msgstr ""

# 305da243e8e84b2ca80390cdae0b97bf
#: ../../ref/middleware.txt:96
msgid ""
"This middleware should be placed before any other middleware that need to "
"read or write the response body so that compression happens afterward."
msgstr ""

# 262180fd2d8b49af93333d27edb682c8
#: ../../ref/middleware.txt:99
msgid "It will NOT compress content if any of the following are true:"
msgstr ""

# 60563a0320fa4c34bce2ba43c4edc751
#: ../../ref/middleware.txt:101
msgid "The content body is less than 200 bytes long."
msgstr ""

# 25170f91d70d492b9d12774beac4ea77
#: ../../ref/middleware.txt:103
msgid "The response has already set the ``Content-Encoding`` header."
msgstr ""

# 521e12d278fa44c7be5cb8847baec005
#: ../../ref/middleware.txt:105
msgid ""
"The request (the browser) hasn't sent an ``Accept-Encoding`` header "
"containing ``gzip``."
msgstr ""

# 8355bc76fa604bf3bf5b10933b8391d4
#: ../../ref/middleware.txt:108
msgid ""
"The request is from Internet Explorer and the ``Content-Type`` header "
"contains ``javascript`` or starts with anything other than ``text/``. We do "
"this to avoid a bug in early versions of IE that caused decompression not to "
"be performed on certain content types."
msgstr ""

# c52104c58f04443ea9a1ab9cd9d3121f
#: ../../ref/middleware.txt:113
msgid ""
"You can apply GZip compression to individual views using the :func:`~django."
"views.decorators.gzip.gzip_page()` decorator."
msgstr ""

# 0734eed49dad459182ccf690c4be4f01
#: ../../ref/middleware.txt:117
msgid "Conditional GET middleware"
msgstr ""

# 6260b1f9c0fe49a888e656268da3cb86
#: ../../ref/middleware.txt:124
msgid ""
"Handles conditional GET operations. If the response has a ``ETag`` or ``Last-"
"Modified`` header, and the request has ``If-None-Match`` or ``If-Modified-"
"Since``, the response is replaced by an :class:`~django.http."
"HttpResponseNotModified`."
msgstr ""

# e99c16063b644a1cbc66371dd346b1b3
#: ../../ref/middleware.txt:129
msgid "Also sets the ``Date`` and ``Content-Length`` response-headers."
msgstr ""

# 3748128339e5499894b403e355490b7e
#: ../../ref/middleware.txt:132
msgid "Reverse proxy middleware"
msgstr ""

# 3f91f7f3282a4140b32dad7b4f65d825
#: ../../ref/middleware.txt:136
msgid ""
"This middleware was removed in Django 1.1. See :ref:`the release notes "
"<removed-setremoteaddrfromforwardedfor-middleware>` for details."
msgstr ""

# cc42c4325f76428d8ef20bf0770cd06c
#: ../../ref/middleware.txt:140
msgid "Locale middleware"
msgstr ""

# cf246ba6d4ed4cadbbb678020bac46ed
#: ../../ref/middleware.txt:147
msgid ""
"Enables language selection based on data from the request. It customizes "
"content for each user. See the :doc:`internationalization documentation </"
"topics/i18n/translation>`."
msgstr ""

# 88441617423746d1852d9e7c1e698443
#: ../../ref/middleware.txt:152
msgid "Message middleware"
msgstr ""

# bc50f7cbd73348dab067f06bc44a6c32
#: ../../ref/middleware.txt:159
msgid ""
"Enables cookie- and session-based message support. See the :doc:`messages "
"documentation </ref/contrib/messages>`."
msgstr ""

# b788fbcf80a74c7f995bd92cfd3132f2
#: ../../ref/middleware.txt:163
msgid "Session middleware"
msgstr ""

# 9bc1f5e2a3284a5a98d57d1cd5e4a91e
#: ../../ref/middleware.txt:170
msgid ""
"Enables session support. See the :doc:`session documentation </topics/http/"
"sessions>`."
msgstr ""

# 8ba105a8acaf4c81bfa603612dbc1c83
#: ../../ref/middleware.txt:174
msgid "Authentication middleware"
msgstr ""

# 112571784dee4797b54fe5ea5452317d
#: ../../ref/middleware.txt:181
msgid ""
"Adds the ``user`` attribute, representing the currently-logged-in user, to "
"every incoming ``HttpRequest`` object. See :ref:`Authentication in Web "
"requests <auth-web-requests>`."
msgstr ""

# e26c847dacf44844a3a7ad430d55f997
#: ../../ref/middleware.txt:186
msgid "CSRF protection middleware"
msgstr ""

# 34b4108746384765893e377cf9b5ff5e
#: ../../ref/middleware.txt:194
msgid ""
"Adds protection against Cross Site Request Forgeries by adding hidden form "
"fields to POST forms and checking requests for the correct value. See the :"
"doc:`Cross Site Request Forgery protection documentation </ref/contrib/"
"csrf>`."
msgstr ""

# d428bae5d57a457a9f4967b777fbefa9
#: ../../ref/middleware.txt:199
msgid "Transaction middleware"
msgstr ""

# 19c0b1e84f2a4705bb807cf93077d46c
#: ../../ref/middleware.txt:206
msgid ""
"Binds commit and rollback of the default database to the request/response "
"phase. If a view function runs successfully, a commit is done. If it fails "
"with an exception, a rollback is done."
msgstr ""

# 2e01900f5f424330a0d3ffd08ea61814
#: ../../ref/middleware.txt:210
msgid ""
"The order of this middleware in the stack is important: middleware modules "
"running outside of it run with commit-on-save - the default Django behavior. "
"Middleware modules running inside it (coming later in the stack) will be "
"under the same transaction control as the view functions."
msgstr ""

# ae498344b6dd4d2186bc6587f950a507
#: ../../ref/middleware.txt:215
msgid ""
"See the :doc:`transaction management documentation </topics/db/"
"transactions>`."
msgstr ""

# d6c9d1cd333f4f949910e328695fae0c
#: ../../ref/middleware.txt:218
msgid "X-Frame-Options middleware"
msgstr ""

# a89a2901d7cd4afa8de1e9312d87c5ec
#: ../../ref/middleware.txt:228
msgid ""
"Simple :doc:`clickjacking protection via the X-Frame-Options header </ref/"
"clickjacking/>`."
msgstr ""

# 5104322cd59047909ce8ebe2d90eb72d
#: ../../ref/models/fields.txt:3
msgid "Model field reference"
msgstr ""

# 1e44514e70d54a70a41cdc40d909e4e9
#: ../../ref/models/fields.txt:10
msgid ""
"This document contains all the gory details about all the `field options`_ "
"and `field types`_ Django's got to offer."
msgstr ""

# 952c53df676e467e9f05755579a1f817
#: ../../ref/models/fields.txt:15
msgid ""
"If the built-in fields don't do the trick, you can try :mod:`django.contrib."
"localflavor`, which contains assorted pieces of code that are useful for "
"particular countries or cultures. Also, you can easily :doc:`write your own "
"custom model fields </howto/custom-model-fields>`."
msgstr ""

# 015b8dab616348bab5afec5f456eee68
#: ../../ref/models/fields.txt:22
msgid ""
"Technically, these models are defined in :mod:`django.db.models.fields`, but "
"for convenience they're imported into :mod:`django.db.models`; the standard "
"convention is to use ``from django.db import models`` and refer to fields as "
"``models.<Foo>Field``."
msgstr ""

# c555e76fa74a48f2bfe20647be5705cb
#: ../../ref/models/fields.txt:30
msgid "Field options"
msgstr ""

# 063cb5dcc5bb4cf3a883cbff956eb673
#: ../../ref/models/fields.txt:32
msgid ""
"The following arguments are available to all field types. All are optional."
msgstr ""

# 2f6a54be2d264f309e9b9e404159b95b
#: ../../ref/models/fields.txt:35
msgid "``null``"
msgstr ""

# 1bef0886c5d54369a76458b31f1dae3b
#: ../../ref/models/fields.txt:39
msgid ""
"If ``True``, Django will store empty values as ``NULL`` in the database. "
"Default is ``False``."
msgstr ""

# 1b7ff63e8bc14699b4e96f04513aed1b
#: ../../ref/models/fields.txt:42
msgid ""
"Note that empty string values will always get stored as empty strings, not "
"as ``NULL``. Only use ``null=True`` for non-string fields such as integers, "
"booleans and dates. For both types of fields, you will also need to set "
"``blank=True`` if you wish to permit empty values in forms, as the :attr:"
"`~Field.null` parameter only affects database storage (see :attr:`~Field."
"blank`)."
msgstr ""

# b52df3e730d84b9d9c7a312747af5448
#: ../../ref/models/fields.txt:49
msgid ""
"Avoid using :attr:`~Field.null` on string-based fields such as :class:"
"`CharField` and :class:`TextField` unless you have an excellent reason. If a "
"string-based field has ``null=True``, that means it has two possible values "
"for \"no data\": ``NULL``, and the empty string. In most cases, it's "
"redundant to have two possible values for \"no data;\" Django convention is "
"to use the empty string, not ``NULL``."
msgstr ""

# f48c58fae2fd4ff5b7bc30c35971b9e7
#: ../../ref/models/fields.txt:58
msgid ""
"When using the Oracle database backend, the value ``NULL`` will be stored to "
"denote the empty string regardless of this attribute."
msgstr ""

# 65425060341640d4b96b0fa1ddc15659
#: ../../ref/models/fields.txt:61
msgid ""
"If you want to accept :attr:`~Field.null` values with :class:`BooleanField`, "
"use :class:`NullBooleanField` instead."
msgstr ""

# deb6f6858b0340d6b01ccdb90e91587d
#: ../../ref/models/fields.txt:65
msgid "``blank``"
msgstr ""

# 6f092e283a0d4536bd4a73c1fbce1826
#: ../../ref/models/fields.txt:69
msgid "If ``True``, the field is allowed to be blank. Default is ``False``."
msgstr ""

# 9bb8764d0cd04f52a24a1f6611f2f555
#: ../../ref/models/fields.txt:71
msgid ""
"Note that this is different than :attr:`~Field.null`. :attr:`~Field.null` is "
"purely database-related, whereas :attr:`~Field.blank` is validation-related. "
"If a field has ``blank=True``, form validation will allow entry of an empty "
"value. If a field has ``blank=False``, the field will be required."
msgstr ""

# 148005ce6a2e4b7cb626c693e95083a0
#: ../../ref/models/fields.txt:79
msgid "``choices``"
msgstr ""

# 0f6f3bc989f844b79a9481050c3865ee
#: ../../ref/models/fields.txt:83
msgid ""
"An iterable (e.g., a list or tuple) of 2-tuples to use as choices for this "
"field. If this is given, the default form widget will be a select box with "
"these choices instead of the standard text field."
msgstr ""

# 9df21164c74245cb95309c7fa14be23a
#: ../../ref/models/fields.txt:87
msgid ""
"The first element in each tuple is the actual value to be stored, and the "
"second element is the human-readable name. For example::"
msgstr ""

# 5a68336290d14f04ac713838b3554113
#: ../../ref/models/fields.txt:97
msgid ""
"Generally, it's best to define choices inside a model class, and to define a "
"suitably-named constant for each value::"
msgstr ""

# ba48eafa2dc7405da5fcde988b48ba6c
#: ../../ref/models/fields.txt:118
msgid ""
"Though you can define a choices list outside of a model class and then refer "
"to it, defining the choices and names for each choice inside the model class "
"keeps all of that information with the class that uses it, and makes the "
"choices easy to reference (e.g, ``Student.SOPHOMORE`` will work anywhere "
"that the ``Student`` model has been imported)."
msgstr ""

# f69f6397c96c43a5810e998819cb7319
#: ../../ref/models/fields.txt:124
msgid ""
"You can also collect your available choices into named groups that can be "
"used for organizational purposes::"
msgstr ""

# f218f67d71e4433c9d284ec0a8cd85d4
#: ../../ref/models/fields.txt:141
msgid ""
"The first element in each tuple is the name to apply to the group. The "
"second element is an iterable of 2-tuples, with each 2-tuple containing a "
"value and a human-readable name for an option. Grouped options may be "
"combined with ungrouped options within a single list (such as the `unknown` "
"option in this example)."
msgstr ""

# 0d342eff85a94100841778459dac8f16
#: ../../ref/models/fields.txt:147
msgid ""
"For each model field that has :attr:`~Field.choices` set, Django will add a "
"method to retrieve the human-readable name for the field's current value. "
"See :meth:`~django.db.models.Model.get_FOO_display` in the database API "
"documentation."
msgstr ""

# e319544a97224e50a722aadb82b31f8e
#: ../../ref/models/fields.txt:152
msgid ""
"Finally, note that choices can be any iterable object -- not necessarily a "
"list or tuple. This lets you construct choices dynamically. But if you find "
"yourself hacking :attr:`~Field.choices` to be dynamic, you're probably "
"better off using a proper database table with a :class:`ForeignKey`. :attr:"
"`~Field.choices` is meant for static data that doesn't change much, if ever."
msgstr ""

# 2fc9ae2a532f421ea15a2b60c71f4876
#: ../../ref/models/fields.txt:159
msgid "``db_column``"
msgstr ""

# 42b6c7fa051c4f299ac89d118246ec49
#: ../../ref/models/fields.txt:163
msgid ""
"The name of the database column to use for this field. If this isn't given, "
"Django will use the field's name."
msgstr ""

# 18308be446de411fb7c5bdb40f227d4c
#: ../../ref/models/fields.txt:166
msgid ""
"If your database column name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""

# 009f1e76771d469790174ff81fbc1c04
#: ../../ref/models/fields.txt:172
msgid "``db_index``"
msgstr ""

# 8935107dde9f43829089ee9aa87b8c13
#: ../../ref/models/fields.txt:176
msgid ""
"If ``True``, :djadmin:`django-admin.py sqlindexes <sqlindexes>` will output "
"a ``CREATE INDEX`` statement for this field."
msgstr ""

# 718b5e94e1c14be6a84ec0e491aaa1ae
# 21cf98038f2c41fc9c6219e6cc9a4e38
#: ../../ref/models/fields.txt:180 ../../ref/models/options.txt:72
msgid "``db_tablespace``"
msgstr ""

# cfbc93e310544086b5b88cf954859efe
#: ../../ref/models/fields.txt:184
msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this field's index, if this field is indexed. The default is the "
"project's :setting:`DEFAULT_INDEX_TABLESPACE` setting, if set, or the :attr:"
"`~Options.db_tablespace` of the model, if any. If the backend doesn't "
"support tablespaces for indexes, this option is ignored."
msgstr ""

# 7823f65faa11467b9408046885252ea8
#: ../../ref/models/fields.txt:191
msgid "``default``"
msgstr ""

# 435bc12c1b714f2f88cf524a72f9c70e
#: ../../ref/models/fields.txt:195
msgid ""
"The default value for the field. This can be a value or a callable object. "
"If callable it will be called every time a new object is created."
msgstr ""

# 17a31e1cdc5a4b1d9ce70a193ec3170c
#: ../../ref/models/fields.txt:198
msgid ""
"The default cannot be a mutable object (model instance, list, set, etc.), as "
"a reference to the same instance of that object would be used as the default "
"value in all new model instances. Instead, wrap the desired default in a "
"callable.  For example, if you had a custom ``JSONField`` and wanted to "
"specify a dictionary as the default, use a ``lambda`` as follows::"
msgstr ""

# cbc6ea2c2bf24740a6bdf56313c61d91
#: ../../ref/models/fields.txt:207
msgid "``editable``"
msgstr ""

# c1b2bcbb26284dba8e3f1930fbd85c7a
#: ../../ref/models/fields.txt:211
msgid ""
"If ``False``, the field will not be displayed in the admin or any other :"
"class:`~django.forms.ModelForm`. Default is ``True``."
msgstr ""

# b15b6e31f82f421581e2534b9fc0e9e1
#: ../../ref/models/fields.txt:219
msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the field will raise. Pass in a dictionary with keys matching the error "
"messages you want to override."
msgstr ""

# c3683fa1bdcb4a76922e70745ce671b8
#: ../../ref/models/fields.txt:223
msgid ""
"Error message keys include ``null``, ``blank``, ``invalid``, "
"``invalid_choice``, and ``unique``. Additional error message keys are "
"specified for each field in the `Field types`_ section below."
msgstr ""

# e73b4bff9bb44d26b841ac7d088f5bfc
#: ../../ref/models/fields.txt:232
msgid ""
"Extra \"help\" text to be displayed with the form widget. It's useful for "
"documentation even if your field isn't used on a form."
msgstr ""

# c7e3c3a6e0494745b37d166e0f5f0b5f
#: ../../ref/models/fields.txt:235
msgid ""
"Note that this value is *not* HTML-escaped in automatically-generated forms. "
"This lets you include HTML in :attr:`~Field.help_text` if you so desire. For "
"example::"
msgstr ""

# dd1d0b9b287e4d088a0ee9d95d9ff09f
#: ../../ref/models/fields.txt:241
msgid ""
"Alternatively you can use plain text and ``django.utils.html.escape()`` to "
"escape any HTML special characters."
msgstr ""

# 8b084040690d413f874440167a8e50b6
#: ../../ref/models/fields.txt:245
msgid "``primary_key``"
msgstr ""

# 8291c1739b23469faff71681174d359b
#: ../../ref/models/fields.txt:249
msgid "If ``True``, this field is the primary key for the model."
msgstr ""

# 28eab8b24e014d24b4b98cd3d2c0047c
#: ../../ref/models/fields.txt:251
msgid ""
"If you don't specify ``primary_key=True`` for any field in your model, "
"Django will automatically add an :class:`AutoField` to hold the primary key, "
"so you don't need to set ``primary_key=True`` on any of your fields unless "
"you want to override the default primary-key behavior. For more, see :ref:"
"`automatic-primary-key-fields`."
msgstr ""

# 0cac573b3544408ba0d3098f2dd9f6cf
#: ../../ref/models/fields.txt:257
msgid ""
"``primary_key=True`` implies :attr:`null=False <Field.null>` and :attr:"
"`unique=True <Field.unique>`. Only one primary key is allowed on an object."
msgstr ""

# b079f29e5fcd49908a4b785e59822626
#: ../../ref/models/fields.txt:265
msgid "If ``True``, this field must be unique throughout the table."
msgstr ""

# 281df6dbc7f94bbfb35608515d5b3f3f
#: ../../ref/models/fields.txt:267
msgid ""
"This is enforced at the database level and by model validation. If you try "
"to save a model with a duplicate value in a :attr:`~Field.unique` field, a :"
"exc:`django.db.IntegrityError` will be raised by the model's :meth:`~django."
"db.models.Model.save` method."
msgstr ""

# 9122e6a4f64549cca31b3f5545f64489
#: ../../ref/models/fields.txt:272
msgid ""
"This option is valid on all field types except :class:`ManyToManyField`, :"
"class:`OneToOneField`, and :class:`FileField`."
msgstr ""

# d14a97a77b804ec7890fecd966538ef1
#: ../../ref/models/fields.txt:275
msgid ""
"Note that when ``unique`` is ``True``, you don't need to specify :attr:"
"`~Field.db_index`, because ``unique`` implies the creation of an index."
msgstr ""

# eddcb92e12e24c0ca572f346b9b3a427
#: ../../ref/models/fields.txt:279
msgid "``unique_for_date``"
msgstr ""

# 6a2ebd220fd946feb49420a3b0244077
#: ../../ref/models/fields.txt:283
msgid ""
"Set this to the name of a :class:`DateField` or :class:`DateTimeField` to "
"require that this field be unique for the value of the date field."
msgstr ""

# 8164d61282164fe7ae94f8895fd63ed3
#: ../../ref/models/fields.txt:286
msgid ""
"For example, if you have a field ``title`` that has ``unique_for_date="
"\"pub_date\"``, then Django wouldn't allow the entry of two records with the "
"same ``title`` and ``pub_date``."
msgstr ""

# 765b8c406804410e83d3ee108740d323
#: ../../ref/models/fields.txt:290
msgid "This is enforced by model validation but not at the database level."
msgstr ""

# 4a698ba13d294fd4be98b2334bfadc88
#: ../../ref/models/fields.txt:293
msgid "``unique_for_month``"
msgstr ""

# 73807dca4d2946cb9b805a107aad6561
#: ../../ref/models/fields.txt:297
msgid ""
"Like :attr:`~Field.unique_for_date`, but requires the field to be unique "
"with respect to the month."
msgstr ""

# a1f3e6a48b8f4540a0fdce929b460023
#: ../../ref/models/fields.txt:301
msgid "``unique_for_year``"
msgstr ""

# ef0cac4fba5a420cb378aeb1a59f825c
#: ../../ref/models/fields.txt:305
msgid ""
"Like :attr:`~Field.unique_for_date` and :attr:`~Field.unique_for_month`."
msgstr ""

# 3ef5b6d2db694b178e21fe3c7af0fd6c
# 2dbf820c7bd2496c9343ca236547467c
#: ../../ref/models/fields.txt:308 ../../ref/models/options.txt:280
msgid "``verbose_name``"
msgstr ""

# 2ffb3232647a4a5398ab4b887cdcaaa9
#: ../../ref/models/fields.txt:312
msgid ""
"A human-readable name for the field. If the verbose name isn't given, Django "
"will automatically create it using the field's attribute name, converting "
"underscores to spaces. See :ref:`Verbose field names <verbose-field-names>`."
msgstr ""

# 1d4ab22a4bda4c73928f0161bc446f0e
#: ../../ref/models/fields.txt:321
msgid ""
"A list of validators to run for this field. See the :doc:`validators "
"documentation </ref/validators>` for more information."
msgstr ""

# 496090569b0a45d7981e3b79f46ee370
#: ../../ref/models/fields.txt:327
msgid "Field types"
msgstr ""

# b8c134f1b8e24a499d3f7fd3fdc63286
#: ../../ref/models/fields.txt:332
msgid "``AutoField``"
msgstr ""

# 19c692080191427e9cad9c1faab6c40d
#: ../../ref/models/fields.txt:336
msgid ""
"An :class:`IntegerField` that automatically increments according to "
"available IDs. You usually won't need to use this directly; a primary key "
"field will automatically be added to your model if you don't specify "
"otherwise. See :ref:`automatic-primary-key-fields`."
msgstr ""

# d7799391e9b34121ab208e62103f5bec
#: ../../ref/models/fields.txt:342
msgid "``BigIntegerField``"
msgstr ""

# d060b9f6e3a640c6988e7fab7d037cca
#: ../../ref/models/fields.txt:346
msgid ""
"A 64 bit integer, much like an :class:`IntegerField` except that it is "
"guaranteed to fit numbers from -9223372036854775808 to 9223372036854775807. "
"The default form widget for this field is a :class:`~django.forms.TextInput`."
msgstr ""

# 3fcc1f3b19c9470592d4263a8c0d6c61
#: ../../ref/models/fields.txt:356
msgid "A true/false field."
msgstr ""

# 86bd3e896762455982f57264955a63c7
#: ../../ref/models/fields.txt:358
msgid ""
"The default form widget for this field is a :class:`~django.forms."
"CheckboxInput`."
msgstr ""

# d9d6a86288bf4f06976e025fc3cdb1f1
#: ../../ref/models/fields.txt:361
msgid ""
"If you need to accept :attr:`~Field.null` values then use :class:"
"`NullBooleanField` instead."
msgstr ""

# b795185846ad4a5f8013652b27a72142
#: ../../ref/models/fields.txt:369
msgid "A string field, for small- to large-sized strings."
msgstr ""

# be859ce25b354f36a02377514892e02f
#: ../../ref/models/fields.txt:371
msgid "For large amounts of text, use :class:`~django.db.models.TextField`."
msgstr ""

# b76bff7aa9ba47dfb2b9badbdc163495
# 80d26a9438b5400584f8c737ebb361da
# 29ca31df734140e39c91060f7671e07d
# bacf7e19ad9b461c9aee9ef12e18adfc
#: ../../ref/models/fields.txt:373 ../../ref/models/fields.txt:475
#: ../../ref/models/fields.txt:756 ../../ref/models/fields.txt:935
msgid ""
"The default form widget for this field is a :class:`~django.forms.TextInput`."
msgstr ""

# 1a619993760c4c83b83c86e91408b536
#: ../../ref/models/fields.txt:375
msgid ":class:`CharField` has one extra required argument:"
msgstr ""

# 68be54a9933840ff9c80215a80b4cd46
#: ../../ref/models/fields.txt:379
msgid ""
"The maximum length (in characters) of the field. The max_length is enforced "
"at the database level and in Django's validation."
msgstr ""

# 4b0a5924b2af40b1940ec8a9e7405d37
#: ../../ref/models/fields.txt:384
msgid ""
"If you are writing an application that must be portable to multiple database "
"backends, you should be aware that there are restrictions on ``max_length`` "
"for some backends. Refer to the :doc:`database backend notes </ref/"
"databases>` for details."
msgstr ""

# ed604a9abb2547269822f1d45df01f72
# 7c5410e4e82e4d01a3fc5b86b1a35bcc
#: ../../ref/models/fields.txt:389 ../../ref/models/fields.txt:910
msgid "MySQL users"
msgstr ""

# 4986d139e9964b55acb351bc010277d0
#: ../../ref/models/fields.txt:391
msgid ""
"If you are using this field with MySQLdb 1.2.2 and the ``utf8_bin`` "
"collation (which is *not* the default), there are some issues to be aware "
"of. Refer to the :ref:`MySQL database notes <mysql-collation>` for details."
msgstr ""

# 2cdf96e2deeb424fbb8e26108d51decd
#: ../../ref/models/fields.txt:398
msgid "``CommaSeparatedIntegerField``"
msgstr ""

# 0d7dcfcc41864042b4c2419d33f79aca
#: ../../ref/models/fields.txt:402
msgid ""
"A field of integers separated by commas. As in :class:`CharField`, the :attr:"
"`~CharField.max_length` argument is required and the note about database "
"portability mentioned there should be heeded."
msgstr ""

# 32f6659c874a4297a13fd21e57078049
#: ../../ref/models/fields.txt:411
msgid ""
"A date, represented in Python by a ``datetime.date`` instance. Has a few "
"extra, optional arguments:"
msgstr ""

# 203b09ed056548e9b4f33618beabc5e6
#: ../../ref/models/fields.txt:416
msgid ""
"Automatically set the field to now every time the object is saved. Useful "
"for \"last-modified\" timestamps. Note that the current date is *always* "
"used; it's not just a default value that you can override."
msgstr ""

# 744d407ed3054f41af0aae8bcf9011ae
#: ../../ref/models/fields.txt:422
msgid ""
"Automatically set the field to now when the object is first created. Useful "
"for creation of timestamps. Note that the current date is *always* used; "
"it's not just a default value that you can override."
msgstr ""

# 17903f47ca644491a59eea8210982601
#: ../../ref/models/fields.txt:426
msgid ""
"The default form widget for this field is a :class:`~django.forms."
"TextInput`. The admin adds a JavaScript calendar, and a shortcut for \"Today"
"\". Includes an additional ``invalid_date`` error message key."
msgstr ""

# 384e4ffa5946409492e13455e6cfaac9
#: ../../ref/models/fields.txt:432
msgid ""
"As currently implemented, setting ``auto_now`` or ``auto_now_add`` to "
"``True`` will cause the field to have ``editable=False`` and ``blank=True`` "
"set."
msgstr ""

# 4bf49ea6c7f94768989143c5e6f74cb1
#: ../../ref/models/fields.txt:441
msgid ""
"A date and time, represented in Python by a ``datetime.datetime`` instance. "
"Takes the same extra arguments as :class:`DateField`."
msgstr ""

# 7578ffc18e0a4f7ea7d57920b6989dda
#: ../../ref/models/fields.txt:444
msgid ""
"The default form widget for this field is a single :class:`~django.forms."
"TextInput`. The admin uses two separate :class:`~django.forms.TextInput` "
"widgets with JavaScript shortcuts."
msgstr ""

# 62831e97b6074d29a5236078ab18740d
#: ../../ref/models/fields.txt:453
msgid ""
"A fixed-precision decimal number, represented in Python by a :class:"
"`~decimal.Decimal` instance. Has two **required** arguments:"
msgstr ""

# 22d06e636b084a0c81a596c9e25cc11a
#: ../../ref/models/fields.txt:458
msgid ""
"The maximum number of digits allowed in the number. Note that this number "
"must be greater than or equal to ``decimal_places``."
msgstr ""

# 420e0a34f31841758a8148c157dc584a
#: ../../ref/models/fields.txt:463
msgid "The number of decimal places to store with the number."
msgstr ""

# eb70b2ff630348c39d0d01d42d07bad7
#: ../../ref/models/fields.txt:465
msgid ""
"For example, to store numbers up to 999 with a resolution of 2 decimal "
"places, you'd use::"
msgstr ""

# 29dcc2d1d89c4e7c84457f7a91be0706
#: ../../ref/models/fields.txt:470
msgid ""
"And to store numbers up to approximately one billion with a resolution of 10 "
"decimal places::"
msgstr ""

# b541192a01594769b4370a041b100d68
#: ../../ref/models/fields.txt:479
msgid ""
"For more information about the differences between the :class:`FloatField` "
"and :class:`DecimalField` classes, please see :ref:`FloatField vs. "
"DecimalField <floatfield_vs_decimalfield>`."
msgstr ""

# dd65113502e34ef9b61e93f32f6dc203
#: ../../ref/models/fields.txt:488
msgid ""
"A :class:`CharField` that checks that the value is a valid email address."
msgstr ""

# 0bc003e4b32341cabe5af153d9be6b0e
#: ../../ref/models/fields.txt:490
msgid "Incompliance to RFCs"
msgstr ""

# ada26d62e57d426ebd1d7c3beb7f7658
#: ../../ref/models/fields.txt:492
msgid ""
"The default 75 character ``max_length`` is not capable of storing all "
"possible RFC3696/5321-compliant email addresses. In order to store all "
"possible valid email addresses, a ``max_length`` of 254 is required. The "
"default ``max_length`` of 75 exists for historical reasons. The default has "
"not been changed in order to maintain backwards compatibility with existing "
"uses of :class:`EmailField`."
msgstr ""

# 0543aeb536f6475b8f85e08f6e35d13d
#: ../../ref/models/fields.txt:504
msgid "A file-upload field."
msgstr ""

# 8dea819f241e46b98d7dcfaa3d9a20c7
#: ../../ref/models/fields.txt:507
msgid ""
"The ``primary_key`` and ``unique`` arguments are not supported, and will "
"raise a ``TypeError`` if used."
msgstr ""

# 0451f6cd57e14b1392fc832051ab2d59
#: ../../ref/models/fields.txt:510
msgid "Has one **required** argument:"
msgstr ""

# 0b991798cc2645638bc959430d167bbb
#: ../../ref/models/fields.txt:514
msgid ""
"A local filesystem path that will be appended to your :setting:`MEDIA_ROOT` "
"setting to determine the value of the :attr:`~django.db.models.fields.files."
"FieldFile.url` attribute."
msgstr ""

# 6e0659177cbf461cb47d139eb2a23374
#: ../../ref/models/fields.txt:518
msgid ""
"This path may contain :func:`~time.strftime` formatting, which will be "
"replaced by the date/time of the file upload (so that uploaded files don't "
"fill up the given directory)."
msgstr ""

# 3f4b8c9c22654daa847654281766a11e
#: ../../ref/models/fields.txt:522
msgid ""
"This may also be a callable, such as a function, which will be called to "
"obtain the upload path, including the filename. This callable must be able "
"to accept two arguments, and return a Unix-style path (with forward slashes) "
"to be passed along to the storage system. The two arguments that will be "
"passed are:"
msgstr ""

# 1e1d835626bb40038110004c6dfd3498
# bed06410a1ac4e6f85db1e5126618c26
# 913afd9e88134fcf8190f8d99d01e9a5
# 8ea78a10e48e4566a015ee1a5bb22822
# f9d5966a4d15454b984191cee7bfc494
# 58d0be868913482cb89ee1b89162a7bf
# d4976e66d7574ff7964aa854d6e8ecd1
# 9c0589cb09b541e5966fee913e783487
# e333daf6bf0c4bc4b9eeeb15d8213c42
#: ../../ref/models/fields.txt:531 ../../ref/signals.txt:93
#: ../../ref/signals.txt:110 ../../ref/signals.txt:142
#: ../../ref/signals.txt:177 ../../ref/signals.txt:201
#: ../../ref/signals.txt:229 ../../ref/signals.txt:299
#: ../../ref/signals.txt:326
msgid "``instance``"
msgstr ""

# 6d23eb262c2d4d46a8c63a914ed0923e
#: ../../ref/models/fields.txt:531
msgid ""
"An instance of the model where the ``FileField`` is defined. More "
"specifically, this is the particular instance where the current file is "
"being attached."
msgstr ""

# a0dd15e89403424e8e16401e708697a3
#: ../../ref/models/fields.txt:536
msgid ""
"In most cases, this object will not have been saved to the database yet, so "
"if it uses the default ``AutoField``, *it might not yet have a value for its "
"primary key field*."
msgstr ""

# 616f7a3a700648ff94c0e910855d2908
#: ../../ref/models/fields.txt:541
msgid "``filename``"
msgstr ""

# 9e82a48f68f14f7580d566d40c42319f
#: ../../ref/models/fields.txt:541
msgid ""
"The filename that was originally given to the file. This may or may not be "
"taken into account when determining the final destination path."
msgstr ""

# 8cba32e1db344294a25c891cf243ee9e
#: ../../ref/models/fields.txt:546
msgid "Also has one optional argument:"
msgstr ""

# 46f70e6679814a6f97ab28df459f8962
#: ../../ref/models/fields.txt:550
msgid ""
"Optional. A storage object, which handles the storage and retrieval of your "
"files. See :doc:`/topics/files` for details on how to provide this object."
msgstr ""

# 35537292c3244d4a917c0c8a300ac033
#: ../../ref/models/fields.txt:553
msgid ""
"The default form widget for this field is a :class:`~django.forms.FileInput`."
msgstr ""

# 731a1854583c40969621dbf0af7f914c
#: ../../ref/models/fields.txt:555
msgid ""
"Using a :class:`FileField` or an :class:`ImageField` (see below) in a model "
"takes a few steps:"
msgstr ""

# f2e637e51140419b8b27a5a9e8e2bf9e
#: ../../ref/models/fields.txt:558
msgid ""
"In your settings file, you'll need to define :setting:`MEDIA_ROOT` as the "
"full path to a directory where you'd like Django to store uploaded files. "
"(For performance, these files are not stored in the database.) Define :"
"setting:`MEDIA_URL` as the base public URL of that directory. Make sure that "
"this directory is writable by the Web server's user account."
msgstr ""

# a50df8bd90124de1bd1c846c75f343c7
#: ../../ref/models/fields.txt:564
msgid ""
"Add the :class:`FileField` or :class:`ImageField` to your model, making sure "
"to define the :attr:`~FileField.upload_to` option to tell Django to which "
"subdirectory of :setting:`MEDIA_ROOT` it should upload files."
msgstr ""

# 8d9cfeef13354d3d88e6a5b5ad2038ae
#: ../../ref/models/fields.txt:568
msgid ""
"All that will be stored in your database is a path to the file (relative to :"
"setting:`MEDIA_ROOT`). You'll most likely want to use the convenience :attr:"
"`~django.db.models.fields.files.FieldFile.url` attribute provided by Django. "
"For example, if your :class:`ImageField` is called ``mug_shot``, you can get "
"the absolute path to your image in a template with ``{{ object.mug_shot."
"url }}``."
msgstr ""

# 34838b9dca0d4cee840e1bcb521bee00
#: ../../ref/models/fields.txt:575
msgid ""
"For example, say your :setting:`MEDIA_ROOT` is set to ``'/home/media'``, "
"and :attr:`~FileField.upload_to` is set to ``'photos/%Y/%m/%d'``. The ``'%Y/"
"%m/%d'`` part of :attr:`~FileField.upload_to` is :func:`~time.strftime` "
"formatting; ``'%Y'`` is the four-digit year, ``'%m'`` is the two-digit month "
"and ``'%d'`` is the two-digit day. If you upload a file on Jan. 15, 2007, it "
"will be saved in the directory ``/home/media/photos/2007/01/15``."
msgstr ""

# 4a3226385a32444092e810fecd4dc365
#: ../../ref/models/fields.txt:582
msgid ""
"If you wanted to retrieve the uploaded file's on-disk filename, or the "
"file's size, you could use the :attr:`~django.core.files.File.name` and :"
"attr:`~django.core.files.File.size` attributes respectively; for more "
"information on the available attributes and methods, see the :class:`~django."
"core.files.File` class reference and the :doc:`/topics/files` topic guide."
msgstr ""

# 3c6f0cd5d6c5485d87e8bbecaabe52bb
#: ../../ref/models/fields.txt:590
msgid ""
"The file is saved as part of saving the model in the database, so the actual "
"file name used on disk cannot be relied on until after the model has been "
"saved."
msgstr ""

# 4152a6b83b4843919107104285672aec
#: ../../ref/models/fields.txt:594
msgid ""
"The uploaded file's relative URL can be obtained using the :attr:`~django.db."
"models.fields.files.FieldFile.url` attribute. Internally, this calls the :"
"meth:`~django.core.files.storage.Storage.url` method of the underlying :"
"class:`~django.core.files.storage.Storage` class."
msgstr ""

# c61b4edb8f41450a8418e41bc50bf809
#: ../../ref/models/fields.txt:601
msgid ""
"Note that whenever you deal with uploaded files, you should pay close "
"attention to where you're uploading them and what type of files they are, to "
"avoid security holes. *Validate all uploaded files* so that you're sure the "
"files are what you think they are. For example, if you blindly let somebody "
"upload files, without validation, to a directory that's within your Web "
"server's document root, then somebody could upload a CGI or PHP script and "
"execute that script by visiting its URL on your site. Don't allow that."
msgstr ""

# dcc7454f919b43459bc48a192fc5703c
#: ../../ref/models/fields.txt:609
msgid ""
"Also note that even an uploaded HTML file, since it can be executed by the "
"browser (though not by the server), can pose security threats that are "
"equivalent to XSS or CSRF attacks."
msgstr ""

# 4ae4a853c9bf41998378e09dab092763
#: ../../ref/models/fields.txt:613
msgid ""
"By default, :class:`FileField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""

# f36667e80c764761ac6cdd7ee9a4bf25
#: ../../ref/models/fields.txt:618
msgid "FileField and FieldFile"
msgstr ""

# 98b4cf281a624ee0ba44b77081b2fe9c
#: ../../ref/models/fields.txt:624
msgid ""
"When you access a :class:`~django.db.models.FileField` on a model, you are "
"given an instance of :class:`FieldFile` as a proxy for accessing the "
"underlying file. This class has several attributes and methods that can be "
"used to interact with file data:"
msgstr ""

# b3bbcd360b3543cd9d4e9c1fe214bb34
#: ../../ref/models/fields.txt:631
msgid ""
"A read-only property to access the file's relative URL by calling the :meth:"
"`~django.core.files.storage.Storage.url` method of the underlying :class:"
"`~django.core.files.storage.Storage` class."
msgstr ""

# d9c7f48924f84b79b4004baa1fbe887c
#: ../../ref/models/fields.txt:637
msgid ""
"Behaves like the standard Python ``open()`` method and opens the file "
"associated with this instance in the mode specified by ``mode``."
msgstr ""

# 838cf6ea37cb424480bbe524e2a42d40
#: ../../ref/models/fields.txt:642
msgid ""
"Behaves like the standard Python ``file.close()`` method and closes the file "
"associated with this instance."
msgstr ""

# b0fb8c3992f34c81ae769824c6223366
#: ../../ref/models/fields.txt:647
msgid ""
"This method takes a filename and file contents and passes them to the "
"storage class for the field, then associates the stored file with the model "
"field. If you want to manually associate file data with :class:`~django.db."
"models.FileField` instances on your model, the ``save()`` method is used to "
"persist that file data."
msgstr ""

# 0993d9f6d15843acbae8022f89943310
#: ../../ref/models/fields.txt:653
msgid ""
"Takes two required arguments: ``name`` which is the name of the file, and "
"``content`` which is an object containing the file's contents.  The optional "
"``save`` argument controls whether or not the instance is saved after the "
"file has been altered. Defaults to ``True``."
msgstr ""

# f0a67a6ec5a64ba8871dfebfba7daf72
#: ../../ref/models/fields.txt:658
msgid ""
"Note that the ``content`` argument should be an instance of :class:`django."
"core.files.File`, not Python's built-in file object. You can construct a :"
"class:`~django.core.files.File` from an existing Python file object like "
"this::"
msgstr ""

# c9e8c6c463524616acc80a5fc47721f2
#: ../../ref/models/fields.txt:668
msgid "Or you can construct one from a Python string like this::"
msgstr ""

# 49b55e0529524a0985ca1cd240bd3b04
#: ../../ref/models/fields.txt:673
msgid "For more information, see :doc:`/topics/files`."
msgstr ""

# c1708d6b21954bdc9b4ed589ea532ac3
#: ../../ref/models/fields.txt:677
msgid ""
"Deletes the file associated with this instance and clears all attributes on "
"the field. Note: This method will close the file if it happens to be open "
"when ``delete()`` is called."
msgstr ""

# 168b00801991416ea8b1819b4fd49c8b
#: ../../ref/models/fields.txt:681
msgid ""
"The optional ``save`` argument controls whether or not the instance is saved "
"after the file has been deleted. Defaults to ``True``."
msgstr ""

# a836ae9dbd5d42b49730b7258f8ecf6b
#: ../../ref/models/fields.txt:684
msgid ""
"Note that when a model is deleted, related files are not deleted. If you "
"need to cleanup orphaned files, you'll need to handle it yourself (for "
"instance, with a custom management command that can be run manually or "
"scheduled to run periodically via e.g. cron)."
msgstr ""

# d1b3ab92ac6f4314bbefb5aad5aaaf7c
#: ../../ref/models/fields.txt:696
msgid ""
"A :class:`CharField` whose choices are limited to the filenames in a certain "
"directory on the filesystem. Has three special arguments, of which the first "
"is **required**:"
msgstr ""

# ec13b70c86c14fb69287b9c1ab64c5fd
#: ../../ref/models/fields.txt:702
msgid ""
"Required. The absolute filesystem path to a directory from which this :class:"
"`FilePathField` should get its choices. Example: ``\"/home/images\"``."
msgstr ""

# eea4e5956cb44e9baee6b2e6b286356f
#: ../../ref/models/fields.txt:707
msgid ""
"Optional. A regular expression, as a string, that :class:`FilePathField` "
"will use to filter filenames. Note that the regex will be applied to the "
"base filename, not the full path. Example: ``\"foo.*\\.txt$\"``, which will "
"match a file called ``foo23.txt`` but not ``bar.txt`` or ``foo23.png``."
msgstr ""

# f1698268790848d7bcbd18bab5f7be2b
#: ../../ref/models/fields.txt:714
msgid ""
"Optional. Either ``True`` or ``False``. Default is ``False``. Specifies "
"whether all subdirectories of :attr:`~FilePathField.path` should be included"
msgstr ""

# 990a1f2981584c69939130d40e3f6689
#: ../../ref/models/fields.txt:721
msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``True``.  Specifies "
"whether files in the specified location should be included.  Either this or :"
"attr:`~FilePathField.allow_folders` must be ``True``."
msgstr ""

# cc21adc758954c3f8f61ae3fa2b3f636
#: ../../ref/models/fields.txt:729
msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``False``.  Specifies "
"whether folders in the specified location should be included.  Either this "
"or :attr:`~FilePathField.allow_files` must be ``True``."
msgstr ""

# 6f2a85dda10644ba8cbb0d3fdf2a7af1
#: ../../ref/models/fields.txt:734
msgid "Of course, these arguments can be used together."
msgstr ""

# 35e1b928951c4f1b804aeae61ef24829
#: ../../ref/models/fields.txt:736
msgid ""
"The one potential gotcha is that :attr:`~FilePathField.match` applies to the "
"base filename, not the full path. So, this example::"
msgstr ""

# a1b5ec09bcc84258849d4f52026f623e
#: ../../ref/models/fields.txt:741
msgid ""
"...will match ``/home/images/foo.png`` but not ``/home/images/foo/bar.png`` "
"because the :attr:`~FilePathField.match` applies to the base filename (``foo."
"png`` and ``bar.png``)."
msgstr ""

# 72cbb471a5f74fcb802b12a38d59b173
#: ../../ref/models/fields.txt:745
msgid ""
"By default, :class:`FilePathField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""

# 2750f612fc5345328786b81f0ee53c1e
#: ../../ref/models/fields.txt:754
msgid "A floating-point number represented in Python by a ``float`` instance."
msgstr ""

# b97c1704851946b0b756ced68b302ba3
#: ../../ref/models/fields.txt:760
msgid "``FloatField`` vs. ``DecimalField``"
msgstr ""

# c4de06ffeb9347b7b2a88229ace77935
#: ../../ref/models/fields.txt:762
msgid ""
"The :class:`FloatField` class is sometimes mixed up with the :class:"
"`DecimalField` class. Although they both represent real numbers, they "
"represent those numbers differently. ``FloatField`` uses Python's ``float`` "
"type internally, while ``DecimalField`` uses Python's ``Decimal`` type. For "
"information on the difference between the two, see Python's documentation "
"for the :mod:`decimal` module."
msgstr ""

# 0beda25a44cc4753869b3b9289759a2e
#: ../../ref/models/fields.txt:774
msgid ""
"Inherits all attributes and methods from :class:`FileField`, but also "
"validates that the uploaded object is a valid image."
msgstr ""

# 7c89e3a2d2784e7698d78b2010d27c78
#: ../../ref/models/fields.txt:777
msgid ""
"In addition to the special attributes that are available for :class:"
"`FileField`, an :class:`ImageField` also has ``height`` and ``width`` "
"attributes."
msgstr ""

# ce366b8880f44de4b1576333d72b138b
#: ../../ref/models/fields.txt:780
msgid ""
"To facilitate querying on those attributes, :class:`ImageField` has two "
"extra optional arguments:"
msgstr ""

# 8305ebee375948a6993c10e9eb57a0e1
#: ../../ref/models/fields.txt:785
msgid ""
"Name of a model field which will be auto-populated with the height of the "
"image each time the model instance is saved."
msgstr ""

# 733909467e024a73a454b2196cc39964
#: ../../ref/models/fields.txt:790
msgid ""
"Name of a model field which will be auto-populated with the width of the "
"image each time the model instance is saved."
msgstr ""

# ae85b99cc77348fc84001d5bf8842994
#: ../../ref/models/fields.txt:793
msgid "Requires the `Python Imaging Library`_."
msgstr ""

# 3e22b8d183304fe48241101ed1e9f6c3
#: ../../ref/models/fields.txt:797
msgid ""
"By default, :class:`ImageField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""

# 0e77ab93b4df48af92df655711b2cb25
#: ../../ref/models/fields.txt:806
msgid ""
"An integer. The default form widget for this field is a :class:`~django."
"forms.TextInput`."
msgstr ""

# fef7107be2994162ace377efc1c26090
#: ../../ref/models/fields.txt:814
msgid ""
"An IP address, in string format (e.g. \"192.0.2.30\"). The default form "
"widget for this field is a :class:`~django.forms.TextInput`."
msgstr ""

# f7864f5d938740cdbc24f17c8dd1cf7d
#: ../../ref/models/fields.txt:824
msgid ""
"An IPv4 or IPv6 address, in string format (e.g. ``192.0.2.30`` or "
"``2a02:42fe::4``). The default form widget for this field is a :class:"
"`~django.forms.TextInput`."
msgstr ""

# 3ca0b329c2e443ffb7ec0d7de6baeed1
#: ../../ref/models/fields.txt:836
msgid ""
"Limits valid inputs to the specified protocol. Accepted values are "
"``'both'`` (default), ``'IPv4'`` or ``'IPv6'``. Matching is case insensitive."
msgstr ""

# 20ee738b656f42048f415b199dbd56b2
#: ../../ref/models/fields.txt:852
msgid ""
"Like a :class:`BooleanField`, but allows ``NULL`` as one of the options. Use "
"this instead of a :class:`BooleanField` with ``null=True``. The default form "
"widget for this field is a :class:`~django.forms.NullBooleanSelect`."
msgstr ""

# 6616472e57af46ea821cd67e129550a3
#: ../../ref/models/fields.txt:857
msgid "``PositiveIntegerField``"
msgstr ""

# 106d916642f0460a966de14db5615d9e
#: ../../ref/models/fields.txt:861
msgid ""
"Like an :class:`IntegerField`, but must be either positive or zero (``0``). "
"The value ``0`` is accepted for backward compatibility reasons."
msgstr ""

# d34338c3793b4ba7b2477195109fedf6
#: ../../ref/models/fields.txt:865
msgid "``PositiveSmallIntegerField``"
msgstr ""

# fa57c8ecb8784f6395310df2770ad51a
#: ../../ref/models/fields.txt:869
msgid ""
"Like a :class:`PositiveIntegerField`, but only allows values under a certain "
"(database-dependent) point. Values up to 32767 are safe in all databases "
"supported by Django."
msgstr ""

# c70c6e82faec44c391d8136aff536764
#: ../../ref/models/fields.txt:878
msgid ""
":term:`Slug` is a newspaper term. A slug is a short label for something, "
"containing only letters, numbers, underscores or hyphens. They're generally "
"used in URLs."
msgstr ""

# 62eee492dfdf4aa59d3f01bf5acd87e3
#: ../../ref/models/fields.txt:882
msgid ""
"Like a CharField, you can specify :attr:`~CharField.max_length` (read the "
"note about database portability and :attr:`~CharField.max_length` in that "
"section, too). If :attr:`~CharField.max_length` is not specified, Django "
"will use a default length of 50."
msgstr ""

# 19baa101448a4c0ea9fa1297da3192ee
#: ../../ref/models/fields.txt:887
msgid "Implies setting :attr:`Field.db_index` to ``True``."
msgstr ""

# 6603b47177484aa9a9a463776cced264
#: ../../ref/models/fields.txt:889
msgid ""
"It is often useful to automatically prepopulate a SlugField based on the "
"value of some other value.  You can do this automatically in the admin "
"using :attr:`~django.contrib.admin.ModelAdmin.prepopulated_fields`."
msgstr ""

# 1a6c56e84e6d48448630811fbf92c31c
#: ../../ref/models/fields.txt:894
msgid "``SmallIntegerField``"
msgstr ""

# 956312f59082432382bbcc474f8e22d6
#: ../../ref/models/fields.txt:898
msgid ""
"Like an :class:`IntegerField`, but only allows values under a certain "
"(database-dependent) point. Values from -32768 to 32767 are safe in all "
"databases supported by Django."
msgstr ""

# cebe62e55d974b8a8692f4f209b6b65d
#: ../../ref/models/fields.txt:903
msgid "``TextField``"
msgstr ""

# af42b40ae61442569f3a8133a8e4f1e0
#: ../../ref/models/fields.txt:907
msgid ""
"A large text field. The default form widget for this field is a :class:"
"`~django.forms.Textarea`."
msgstr ""

# 213c830b11cb4e2894b7e50452d135d1
#: ../../ref/models/fields.txt:912
msgid ""
"If you are using this field with MySQLdb 1.2.1p2 and the ``utf8_bin`` "
"collation (which is *not* the default), there are some issues to be aware "
"of. Refer to the :ref:`MySQL database notes <mysql-collation>` for details."
msgstr ""

# 09d1d8fc0e554ea7a26866beafbc2517
#: ../../ref/models/fields.txt:922
msgid ""
"A time, represented in Python by a ``datetime.time`` instance. Accepts the "
"same auto-population options as :class:`DateField`."
msgstr ""

# b808a7a290374304a145cb7978ceec9c
#: ../../ref/models/fields.txt:925
msgid ""
"The default form widget for this field is a :class:`~django.forms."
"TextInput`. The admin adds some JavaScript shortcuts."
msgstr ""

# cf75032ae710407c8beecc29fbc054bc
#: ../../ref/models/fields.txt:933
msgid "A :class:`CharField` for a URL."
msgstr ""

# 820779ca15a548849b6dff67dbcd7747
#: ../../ref/models/fields.txt:937
msgid ""
"Like all :class:`CharField` subclasses, :class:`URLField` takes the "
"optional :attr:`~CharField.max_length` argument. If you don't specify :attr:"
"`~CharField.max_length`, a default of 200 is used."
msgstr ""

# 7965a2e54dc74f139886ca2097d9f336
#: ../../ref/models/fields.txt:943
msgid ""
"The current value of the field will be displayed as a clickable link above "
"the input widget."
msgstr ""

# 01c28d1d36bb49308beae5f6a10da21e
#: ../../ref/models/fields.txt:948
msgid "Relationship fields"
msgstr ""

# c65775213d7f4b7283e15f409da28d19
#: ../../ref/models/fields.txt:955
msgid "Django also defines a set of fields that represent relations."
msgstr ""

# c20986f3b96b49a9874d5cac59285d9e
#: ../../ref/models/fields.txt:960
msgid "``ForeignKey``"
msgstr ""

# b9c692cf9fd3467299d2c3d8dfc85b45
#: ../../ref/models/fields.txt:964
msgid ""
"A many-to-one relationship. Requires a positional argument: the class to "
"which the model is related."
msgstr ""

# ee4174f323504e21b00e423a09e4fcfb
#: ../../ref/models/fields.txt:969
msgid ""
"To create a recursive relationship -- an object that has a many-to-one "
"relationship with itself -- use ``models.ForeignKey('self')``."
msgstr ""

# 83d7edb20abd4c4492f2bd1fd0f82d15
#: ../../ref/models/fields.txt:974
msgid ""
"If you need to create a relationship on a model that has not yet been "
"defined, you can use the name of the model, rather than the model object "
"itself::"
msgstr ""

# 33c4afdcfcda411ebb75b5b18eb5fbbf
#: ../../ref/models/fields.txt:984
msgid ""
"To refer to models defined in another application, you can explicitly "
"specify a model with the full application label. For example, if the "
"``Manufacturer`` model above is defined in another application called "
"``production``, you'd need to use::"
msgstr ""

# 6df186bd19b14c85b1c79c10ff256f19
#: ../../ref/models/fields.txt:992
msgid ""
"This sort of reference can be useful when resolving circular import "
"dependencies between two applications."
msgstr ""

# 44b3bb2add594d9f9626d34c6e85547b
#: ../../ref/models/fields.txt:995
msgid ""
"A database index is automatically created on the ``ForeignKey``. You can "
"disable this by setting :attr:`~Field.db_index` to ``False``.  You may want "
"to avoid the overhead of an index if you are creating a foreign key for "
"consistency rather than joins, or if you will be creating an alternative "
"index like a partial or multiple column index."
msgstr ""

# b80c3b6094794946981486f7925e23f2
# c8a6328f269f42e480f53b11a67709dd
#: ../../ref/models/fields.txt:1002 ../../ref/models/fields.txt:1129
msgid "Database Representation"
msgstr ""

# 700ab209c7d34f7198c34cd08058d34d
#: ../../ref/models/fields.txt:1004
msgid ""
"Behind the scenes, Django appends ``\"_id\"`` to the field name to create "
"its database column name. In the above example, the database table for the "
"``Car`` model will have a ``manufacturer_id`` column. (You can change this "
"explicitly by specifying :attr:`~Field.db_column`) However, your code should "
"never have to deal with the database column name, unless you write custom "
"SQL. You'll always deal with the field names of your model object."
msgstr ""

# 8607aa6d5fde4e5c9f33c44c0d4268da
# c3eed67ff5d44a5fbb21819ae1a6b780
#: ../../ref/models/fields.txt:1014 ../../ref/models/fields.txt:1143
msgid "Arguments"
msgstr ""

# 6522a5c4fa424a10a04c231ffa21475e
#: ../../ref/models/fields.txt:1016
msgid ""
":class:`ForeignKey` accepts an extra set of arguments -- all optional -- "
"that define the details of how the relation works."
msgstr ""

# 5e3c1447adf24a248440efb022f5844c
#: ../../ref/models/fields.txt:1021
msgid ""
"A dictionary of lookup arguments and values (see :doc:`/topics/db/queries`) "
"that limit the available admin or ModelForm choices for this object. Use "
"this with functions from the Python ``datetime`` module to limit choices of "
"objects by date. For example::"
msgstr ""

# c81ffd1d97cf42b68200e96aa809d30b
#: ../../ref/models/fields.txt:1028
msgid ""
"only allows the choice of related objects with a ``pub_date`` before the "
"current date to be chosen."
msgstr ""

# dd00d5afed674c5c9a802514e8f46f5e
#: ../../ref/models/fields.txt:1031
msgid ""
"Instead of a dictionary this can also be a :class:`~django.db.models.Q` "
"object for more :ref:`complex queries <complex-lookups-with-q>`. However, if "
"``limit_choices_to`` is a :class:`~django.db.models.Q` object then it will "
"only have an effect on the choices available in the admin when the field is "
"not listed in ``raw_id_fields`` in the ``ModelAdmin`` for the model."
msgstr ""

# eb50c48a466b4ba9838a53336101754c
#: ../../ref/models/fields.txt:1039
msgid ""
"The name to use for the relation from the related object back to this one. "
"See the :ref:`related objects documentation <backwards-related-objects>` for "
"a full explanation and example. Note that you must set this value when "
"defining relations on :ref:`abstract models <abstract-base-classes>`; and "
"when you do so :ref:`some special syntax <abstract-related-name>` is "
"available."
msgstr ""

# 8b7441bf67524a25aa7c12f91940e8c8
#: ../../ref/models/fields.txt:1046
msgid ""
"If you'd prefer Django not to create a backwards relation, set "
"``related_name`` to ``'+'`` or end it with ``'+'``. For example, this will "
"ensure that the ``User`` model won't have a backwards relation to this "
"model::"
msgstr ""

# dee258918bac4114843ca6ee187ac47f
#: ../../ref/models/fields.txt:1055
msgid ""
"The field on the related object that the relation is to. By default, Django "
"uses the primary key of the related object."
msgstr ""

# c399425087bc4916824911b41500198f
#: ../../ref/models/fields.txt:1060
msgid ""
"When an object referenced by a :class:`ForeignKey` is deleted, Django by "
"default emulates the behavior of the SQL constraint ``ON DELETE CASCADE`` "
"and also deletes the object containing the ``ForeignKey``. This behavior can "
"be overridden by specifying the :attr:`on_delete` argument. For example, if "
"you have a nullable :class:`ForeignKey` and you want it to be set null when "
"the referenced object is deleted::"
msgstr ""

# 21029750e940463293780e0e8bea895d
#: ../../ref/models/fields.txt:1069
msgid ""
"The possible values for :attr:`~ForeignKey.on_delete` are found in :mod:"
"`django.db.models`:"
msgstr ""

# 4de054d545f640478304c4e0dc914ff2
#: ../../ref/models/fields.txt:1074
msgid "Cascade deletes; the default."
msgstr ""

# 1f0b53849da6437b9942f68aa2a4318b
#: ../../ref/models/fields.txt:1078
msgid ""
"Prevent deletion of the referenced object by raising :exc:`~django.db.models."
"ProtectedError`, a subclass of :exc:`django.db.IntegrityError`."
msgstr ""

# 25e62ed9765b4a22b6a3f5aad8fd094d
#: ../../ref/models/fields.txt:1084
msgid ""
"Set the :class:`ForeignKey` null; this is only possible if :attr:`~Field."
"null` is ``True``."
msgstr ""

# c63c98979de243c1a5b8cf960bcde5cb
#: ../../ref/models/fields.txt:1089
msgid ""
"Set the :class:`ForeignKey` to its default value; a default for the :class:"
"`ForeignKey` must be set."
msgstr ""

# 7632be49dbb44e8a8973db375a01aad5
#: ../../ref/models/fields.txt:1094
msgid ""
"Set the :class:`ForeignKey` to the value passed to :func:`~django.db.models."
"SET()`, or if a callable is passed in, the result of calling it. In most "
"cases, passing a callable will be necessary to avoid executing queries at "
"the time your models.py is imported::"
msgstr ""

# d954fa99a6854ce5b691bd31eacd6c13
#: ../../ref/models/fields.txt:1108
msgid ""
"Take no action. If your database backend enforces referential integrity, "
"this will cause an :exc:`~django.db.IntegrityError` unless you manually add "
"a SQL ``ON DELETE`` constraint to the database field (perhaps using :ref:"
"`initial sql<initial-sql>`)."
msgstr ""

# 23bfd0d466b44ff6b4f29e23f3d8362e
#: ../../ref/models/fields.txt:1116
msgid "``ManyToManyField``"
msgstr ""

# 2271f25c8dd4413995c6437b4d207c41
#: ../../ref/models/fields.txt:1120
msgid ""
"A many-to-many relationship. Requires a positional argument: the class to "
"which the model is related, which works exactly the same as it does for :"
"class:`ForeignKey`, including :ref:`recursive <recursive-relationships>` "
"and :ref:`lazy <lazy-relationships>` relationships."
msgstr ""

# 5f036ea98fb44ebf9e87a0eea4b078fd
#: ../../ref/models/fields.txt:1125
msgid ""
"Related objects can be added, removed, or created with the field's :class:"
"`~django.db.models.fields.related.RelatedManager`."
msgstr ""

# 8699efb29de24f89bcea26f0abf503a7
#: ../../ref/models/fields.txt:1131
msgid ""
"Behind the scenes, Django creates an intermediary join table to represent "
"the many-to-many relationship. By default, this table name is generated "
"using the name of the many-to-many field and the name of the table for the "
"model that contains it. Since some databases don't support table names above "
"a certain length, these table names will be automatically truncated to 64 "
"characters and a uniqueness hash will be used. This means you might see "
"table names like ``author_books_9cdf4``; this is perfectly normal.  You can "
"manually provide the name of the join table using the :attr:"
"`~ManyToManyField.db_table` option."
msgstr ""

# e531a8d2516948e287ba7fdab5c9f94a
#: ../../ref/models/fields.txt:1145
msgid ""
":class:`ManyToManyField` accepts an extra set of arguments -- all optional "
"-- that control how the relationship functions."
msgstr ""

# 626521f0d61a480b85e0852884020a70
#: ../../ref/models/fields.txt:1150
msgid "Same as :attr:`ForeignKey.related_name`."
msgstr ""

# 11c572967eb34c4ea60d413417eef32f
#: ../../ref/models/fields.txt:1152
msgid ""
"If you have more than one ``ManyToManyField`` pointing to the same model and "
"want to suppress the backwards relations, set each ``related_name`` to a "
"unique value ending with ``'+'``::"
msgstr ""

# 1805fc002b88428fb29f8d48dc3df7ea
#: ../../ref/models/fields.txt:1161
msgid "Same as :attr:`ForeignKey.limit_choices_to`."
msgstr ""

# 8a0f8cf6bd4a4f5ebd9036d681e86a40
#: ../../ref/models/fields.txt:1163
msgid ""
"``limit_choices_to`` has no effect when used on a ``ManyToManyField`` with a "
"custom intermediate table specified using the :attr:`~ManyToManyField."
"through` parameter."
msgstr ""

# c77e46ddbd9a4d50a1340821713c37cd
#: ../../ref/models/fields.txt:1169
msgid ""
"Only used in the definition of ManyToManyFields on self. Consider the "
"following model::"
msgstr ""

# eb0c1cfc979b4036bc7267cc800a4d39
#: ../../ref/models/fields.txt:1175
msgid ""
"When Django processes this model, it identifies that it has a :class:"
"`ManyToManyField` on itself, and as a result, it doesn't add a "
"``person_set`` attribute to the ``Person`` class. Instead, the :class:"
"`ManyToManyField` is assumed to be symmetrical -- that is, if I am your "
"friend, then you are my friend."
msgstr ""

# 3c1bc61d9b274b8991cf2d2b29da6318
#: ../../ref/models/fields.txt:1181
msgid ""
"If you do not want symmetry in many-to-many relationships with ``self``, "
"set :attr:`~ManyToManyField.symmetrical` to ``False``. This will force "
"Django to add the descriptor for the reverse relationship, allowing :class:"
"`ManyToManyField` relationships to be non-symmetrical."
msgstr ""

# f696ea18e36c4cf987b03ea717d73bbb
#: ../../ref/models/fields.txt:1188
msgid ""
"Django will automatically generate a table to manage many-to-many "
"relationships. However, if you want to manually specify the intermediary "
"table, you can use the :attr:`~ManyToManyField.through` option to specify "
"the Django model that represents the intermediate table that you want to use."
msgstr ""

# cd6b468beaee4297b82269588d37d367
#: ../../ref/models/fields.txt:1194
msgid ""
"The most common use for this option is when you want to associate :ref:"
"`extra data with a many-to-many relationship <intermediary-manytomany>`."
msgstr ""

# b2b09aefd7734d64859380295026de68
#: ../../ref/models/fields.txt:1200
msgid ""
"The name of the table to create for storing the many-to-many data. If this "
"is not provided, Django will assume a default name based upon the names of: "
"the table for the model defining the relationship and the name of the field "
"itself."
msgstr ""

# f9602440d9ad4324b9ca61bd0ba37b29
#: ../../ref/models/fields.txt:1208
msgid "``OneToOneField``"
msgstr ""

# a37ed5be4e474efebab5655d04ab6325
#: ../../ref/models/fields.txt:1212
msgid ""
"A one-to-one relationship. Conceptually, this is similar to a :class:"
"`ForeignKey` with :attr:`unique=True <Field.unique>`, but the \"reverse\" "
"side of the relation will directly return a single object."
msgstr ""

# 5e6bc18f5cb142829d4a2c04c7a3a29e
#: ../../ref/models/fields.txt:1216
msgid ""
"This is most useful as the primary key of a model which \"extends\" another "
"model in some way; :ref:`multi-table-inheritance` is implemented by adding "
"an implicit one-to-one relation from the child model to the parent model, "
"for example."
msgstr ""

# 9b164b3b05264d069cead80f01236fc6
#: ../../ref/models/fields.txt:1221
msgid ""
"One positional argument is required: the class to which the model will be "
"related. This works exactly the same as it does for :class:`ForeignKey`, "
"including all the options regarding :ref:`recursive <recursive-"
"relationships>` and :ref:`lazy <lazy-relationships>` relationships."
msgstr ""

# 39c43043df434b9e9360be6e59aa1c1c
#: ../../ref/models/fields.txt:1228
msgid ""
"Additionally, ``OneToOneField`` accepts all of the extra arguments accepted "
"by :class:`ForeignKey`, plus one extra argument:"
msgstr ""

# 8daa793a2b304e7aaa32094a645b5184
#: ../../ref/models/fields.txt:1233
msgid ""
"When ``True`` and used in a model which inherits from another (concrete) "
"model, indicates that this field should be used as the link back to the "
"parent class, rather than the extra ``OneToOneField`` which would normally "
"be implicitly created by subclassing."
msgstr ""

# a3148b28fc43449289c3b50d166577b8
#: ../../ref/models/index.txt:5
msgid ""
"Model API reference. For introductory material, see :doc:`/topics/db/models`."
msgstr ""

# a714015a0ca7444f85f668c0fbdfd3cb
#: ../../ref/models/instances.txt:3
msgid "Model instance reference"
msgstr ""

# 60492bf15f604cf0b577b340bd2e2cf4
#: ../../ref/models/instances.txt:7
msgid ""
"This document describes the details of the ``Model`` API. It builds on the "
"material presented in the :doc:`model </topics/db/models>` and :doc:"
"`database query </topics/db/queries>` guides, so you'll probably want to "
"read and understand those documents before reading this one."
msgstr ""

# eea17489b248438daceab8aa6502f434
# d088823a5a8e45ec9f3e5e013785b2a7
#: ../../ref/models/instances.txt:12 ../../ref/models/querysets.txt:12
msgid ""
"Throughout this reference we'll use the :ref:`example Weblog models "
"<queryset-model-example>` presented in the :doc:`database query guide </"
"topics/db/queries>`."
msgstr ""

# 3a15787618594da6ad3496654606717d
#: ../../ref/models/instances.txt:17
msgid "Creating objects"
msgstr ""

# 1df0867f9bb04ef5a331479965c78442
#: ../../ref/models/instances.txt:19
msgid ""
"To create a new instance of a model, just instantiate it like any other "
"Python class:"
msgstr ""

# 66266fdbb8fb453b8d9d16d9b13e744a
#: ../../ref/models/instances.txt:24
msgid ""
"The keyword arguments are simply the names of the fields you've defined on "
"your model. Note that instantiating a model in no way touches your database; "
"for that, you need to :meth:`~Model.save()`."
msgstr ""

# 96dd9d581cd846448867b46b24a07c3e
#: ../../ref/models/instances.txt:30
msgid ""
"You may be tempted to customize the model by overriding the ``__init__`` "
"method. If you do so, however, take care not to change the calling signature "
"as any change may prevent the model instance from being saved. Rather than "
"overriding ``__init__``, try using one of these approaches:"
msgstr ""

# ec535c87a2a44eff852bdc5aff230cbf
#: ../../ref/models/instances.txt:35
msgid "Add a classmethod on the model class::"
msgstr ""

# c57865771e69470cbfff1acda7b63fc0
#: ../../ref/models/instances.txt:48
msgid "Add a method on a custom manager (usually preferred)::"
msgstr ""

# 29793048fbfe4c868478499722e91f7e
#: ../../ref/models/instances.txt:66
msgid "Validating objects"
msgstr ""

# 91b7cdbd0d774c56b1d806ce22b884d3
#: ../../ref/models/instances.txt:68
msgid "There are three steps involved in validating a model:"
msgstr ""

# 0c79016261f9435bbaa09935bdac04e4
#: ../../ref/models/instances.txt:70
msgid "Validate the model fields - :meth:`Model.clean_fields()`"
msgstr ""

# 64bfee1c29524a7ebab9e27704c0aa76
#: ../../ref/models/instances.txt:71
msgid "Validate the model as a whole - :meth:`Model.clean()`"
msgstr ""

# 5f303d03ee7140ebb157a5fd9c3d74c5
#: ../../ref/models/instances.txt:72
msgid "Validate the field uniqueness - :meth:`Model.validate_unique()`"
msgstr ""

# 4b342b2e87544c9d80e4a411a2587bd6
#: ../../ref/models/instances.txt:74
msgid ""
"All three steps are performed when you call a model's :meth:`~Model."
"full_clean()` method."
msgstr ""

# 9d0d90852d6143b19f5d26069a5847c7
#: ../../ref/models/instances.txt:77
msgid ""
"When you use a :class:`~django.forms.ModelForm`, the call to :meth:`~django."
"forms.Form.is_valid()` will perform these validation steps for all the "
"fields that are included on the form. See the :doc:`ModelForm documentation "
"</topics/forms/modelforms>` for more information. You should only need to "
"call a model's :meth:`~Model.full_clean()` method if you plan to handle "
"validation errors yourself, or if you have excluded fields from the :class:"
"`~django.forms.ModelForm` that require validation."
msgstr ""

# d40717733c054b7585f42d105f3956c6
#: ../../ref/models/instances.txt:87
msgid ""
"This method calls :meth:`Model.clean_fields()`, :meth:`Model.clean()`, and :"
"meth:`Model.validate_unique()`, in that order and raises a :exc:`~django."
"core.exceptions.ValidationError` that has a ``message_dict`` attribute "
"containing errors from all three stages."
msgstr ""

# 7b3c5907bae7459b85a8c12f53cf3e63
#: ../../ref/models/instances.txt:92
msgid ""
"The optional ``exclude`` argument can be used to provide a list of field "
"names that can be excluded from validation and cleaning. :class:`~django."
"forms.ModelForm` uses this argument to exclude fields that aren't present on "
"your form from being validated since any errors raised could not be "
"corrected by the user."
msgstr ""

# 33d903ddb0a44b9282f99191ddb49eb0
#: ../../ref/models/instances.txt:98
msgid ""
"Note that ``full_clean()`` will *not* be called automatically when you call "
"your model's :meth:`~Model.save()` method, nor as a result of :class:"
"`~django.forms.ModelForm` validation. In the case of :class:`~django.forms."
"ModelForm` validation, :meth:`Model.clean_fields()`, :meth:`Model.clean()`, "
"and :meth:`Model.validate_unique()` are all called individually."
msgstr ""

# 6781e88a31d94a80ada79bcbd1224bc3
#: ../../ref/models/instances.txt:105
msgid ""
"You'll need to call ``full_clean`` manually when you want to run one-step "
"model validation for your own manually created models. For example::"
msgstr ""

# 96c5360f835a4ec7bdf3786d95182166
#: ../../ref/models/instances.txt:115
msgid ""
"The first step ``full_clean()`` performs is to clean each individual field."
msgstr ""

# f519eeae53034921971e94d34c476e4e
#: ../../ref/models/instances.txt:119
msgid ""
"This method will validate all fields on your model. The optional ``exclude`` "
"argument lets you provide a list of field names to exclude from validation. "
"It will raise a :exc:`~django.core.exceptions.ValidationError` if any fields "
"fail validation."
msgstr ""

# c0700504d666413bab1741ce733a3d38
#: ../../ref/models/instances.txt:124
msgid ""
"The second step ``full_clean()`` performs is to call :meth:`Model.clean()`. "
"This method should be overridden to perform custom validation on your model."
msgstr ""

# d1425dc45b2649bc90fea74a5be56703
#: ../../ref/models/instances.txt:129
msgid ""
"This method should be used to provide custom model validation, and to modify "
"attributes on your model if desired. For instance, you could use it to "
"automatically provide a value for a field, or to do validation that requires "
"access to more than a single field::"
msgstr ""

# 0b623af4c54d42cbb113fdd5979fcd00
#: ../../ref/models/instances.txt:143
msgid ""
"Any :exc:`~django.core.exceptions.ValidationError` exceptions raised by "
"``Model.clean()`` will be stored in a special key error dictionary key, "
"``NON_FIELD_ERRORS``, that is used for errors that are tied to the entire "
"model instead of to a specific field::"
msgstr ""

# 1dd4e4ce22124944847ed565a6f3902c
#: ../../ref/models/instances.txt:154
msgid ""
"Finally, ``full_clean()`` will check any unique constraints on your model."
msgstr ""

# c792d1c893e6450c8da465514234810d
#: ../../ref/models/instances.txt:158
msgid ""
"This method is similar to :meth:`~Model.clean_fields`, but validates all "
"uniqueness constraints on your model instead of individual field values. The "
"optional ``exclude`` argument allows you to provide a list of field names to "
"exclude from validation. It will raise a :exc:`~django.core.exceptions."
"ValidationError` if any fields fail validation."
msgstr ""

# 55e3ba0e88b147f6a13d7e820593bf1a
#: ../../ref/models/instances.txt:164
msgid ""
"Note that if you provide an ``exclude`` argument to ``validate_unique()``, "
"any :attr:`~django.db.models.Options.unique_together` constraint involving "
"one of the fields you provided will not be checked."
msgstr ""

# c0493ed3678c495fbf65d6d086b4954d
#: ../../ref/models/instances.txt:170
msgid "Saving objects"
msgstr ""

# 6a4a147df3184d3d9cb61de145d42df2
#: ../../ref/models/instances.txt:172
msgid "To save an object back to the database, call ``save()``:"
msgstr ""

# 69c3713a9e204079b8620ce3ecc125de
#: ../../ref/models/instances.txt:176
msgid ""
"If you want customized saving behavior, you can override this ``save()`` "
"method. See :ref:`overriding-model-methods` for more details."
msgstr ""

# 09b000ee8a0a4a8681de46d3b78bce35
#: ../../ref/models/instances.txt:179
msgid ""
"The model save process also has some subtleties; see the sections below."
msgstr ""

# d7f130f7d8ac4b9b9997a1a15a14c7fd
#: ../../ref/models/instances.txt:182
msgid "Auto-incrementing primary keys"
msgstr ""

# 52b49b96262b45838c54992d668a0c97
#: ../../ref/models/instances.txt:184
msgid ""
"If a model has an :class:`~django.db.models.AutoField` — an auto-"
"incrementing primary key — then that auto-incremented value will be "
"calculated and saved as an attribute on your object the first time you call "
"``save()``::"
msgstr ""

# afd9d4d0aeca4044aab11d6b0e9c1410
#: ../../ref/models/instances.txt:193
msgid ""
"There's no way to tell what the value of an ID will be before you call "
"``save()``, because that value is calculated by your database, not by Django."
msgstr ""

# a6f75bfa564d4d8b8b4ff4bedca6c8aa
#: ../../ref/models/instances.txt:196
msgid ""
"For convenience, each model has an :class:`~django.db.models.AutoField` "
"named ``id`` by default unless you explicitly specify ``primary_key=True`` "
"on a field in your model. See the documentation for :class:`~django.db."
"models.AutoField` for more details."
msgstr ""

# 9e8b4b01bbf742b981999419f386413d
#: ../../ref/models/instances.txt:202
msgid "The ``pk`` property"
msgstr ""

# 5a8c5db6476c49c19d5d4e7149aadf16
#: ../../ref/models/instances.txt:206
msgid ""
"Regardless of whether you define a primary key field yourself, or let Django "
"supply one for you, each model will have a property called ``pk``. It "
"behaves like a normal attribute on the model, but is actually an alias for "
"whichever attribute is the primary key field for the model. You can read and "
"set this value, just as you would for any other attribute, and it will "
"update the correct field in the model."
msgstr ""

# 9e08842b5f7849daa95635503e30c21d
#: ../../ref/models/instances.txt:214
msgid "Explicitly specifying auto-primary-key values"
msgstr ""

# 2e88b01f0e0a49d3a846118605b4195a
#: ../../ref/models/instances.txt:216
msgid ""
"If a model has an :class:`~django.db.models.AutoField` but you want to "
"define a new object's ID explicitly when saving, just define it explicitly "
"before saving, rather than relying on the auto-assignment of the ID::"
msgstr ""

# c0b117331f6441e49639f0b4434f5ee9
#: ../../ref/models/instances.txt:225
msgid ""
"If you assign auto-primary-key values manually, make sure not to use an "
"already-existing primary-key value! If you create a new object with an "
"explicit primary-key value that already exists in the database, Django will "
"assume you're changing the existing record rather than creating a new one."
msgstr ""

# 61062d3639c34bd6b7f31ff036ab7c00
#: ../../ref/models/instances.txt:230
msgid ""
"Given the above ``'Cheddar Talk'`` blog example, this example would override "
"the previous record in the database::"
msgstr ""

# 2928a282420b4522a3334c328ff6690f
#: ../../ref/models/instances.txt:236
msgid ""
"See `How Django knows to UPDATE vs. INSERT`_, below, for the reason this "
"happens."
msgstr ""

# fc4bb6ea0db545b9a8bb7b333e308a7c
#: ../../ref/models/instances.txt:239
msgid ""
"Explicitly specifying auto-primary-key values is mostly useful for bulk-"
"saving objects, when you're confident you won't have primary-key collision."
msgstr ""

# ca5403f1fa2e41cfa7a88969c979fcfc
#: ../../ref/models/instances.txt:243
msgid "What happens when you save?"
msgstr ""

# bf09a85e78b54e4b8615648bcf4a54c9
#: ../../ref/models/instances.txt:245
msgid "When you save an object, Django performs the following steps:"
msgstr ""

# 01b2dc47f4e94b1cbc5fcc660e8bfb3a
#: ../../ref/models/instances.txt:247
msgid ""
"**Emit a pre-save signal.** The :doc:`signal </ref/signals>` :attr:`django."
"db.models.signals.pre_save` is sent, allowing any functions listening for "
"that signal to take some customized action."
msgstr ""

# cabb742314204d31b283b1d9fe132f64
#: ../../ref/models/instances.txt:252
msgid ""
"**Pre-process the data.** Each field on the object is asked to perform any "
"automated data modification that the field may need to perform."
msgstr ""

# 327b61ea2c854d5e93d0d25e95683ecc
#: ../../ref/models/instances.txt:256
msgid ""
"Most fields do *no* pre-processing — the field data is kept as-is. Pre-"
"processing is only used on fields that have special behavior.  For example, "
"if your model has a :class:`~django.db.models.DateField` with "
"``auto_now=True``, the pre-save phase will alter the data in the object to "
"ensure that the date field contains the current date stamp. (Our "
"documentation doesn't yet include a list of all the fields with this "
"\"special behavior.\")"
msgstr ""

# 2c18a149f2c644a391f90b5c46154755
#: ../../ref/models/instances.txt:264
msgid ""
"**Prepare the data for the database.** Each field is asked to provide its "
"current value in a data type that can be written to the database."
msgstr ""

# 1af8e1e19ffa46feaea3d8ec0fe92723
#: ../../ref/models/instances.txt:267
msgid ""
"Most fields require *no* data preparation. Simple data types, such as "
"integers and strings, are 'ready to write' as a Python object. However, more "
"complex data types often require some modification."
msgstr ""

# f54c2f522eaa4648a2daf3186c713742
#: ../../ref/models/instances.txt:271
msgid ""
"For example, :class:`~django.db.models.DateField` fields use a Python "
"``datetime`` object to store data. Databases don't store ``datetime`` "
"objects, so the field value must be converted into an ISO-compliant date "
"string for insertion into the database."
msgstr ""

# 0b2eb3a983b84bbf94ad93e498fce395
#: ../../ref/models/instances.txt:276
msgid ""
"**Insert the data into the database.** The pre-processed, prepared data is "
"then composed into an SQL statement for insertion into the database."
msgstr ""

# 2febb0c2e8ed4733840d0267a766a78b
#: ../../ref/models/instances.txt:280
msgid ""
"**Emit a post-save signal.** The signal :attr:`django.db.models.signals."
"post_save` is sent, allowing any functions listening for that signal to take "
"some customized action."
msgstr ""

# b5bfb9bcbeb147ed80c17c7ebd65a6ea
#: ../../ref/models/instances.txt:286
msgid "How Django knows to UPDATE vs. INSERT"
msgstr ""

# ff6a865607d74eb3b11b406a69e66462
#: ../../ref/models/instances.txt:288
msgid ""
"You may have noticed Django database objects use the same ``save()`` method "
"for creating and changing objects. Django abstracts the need to use "
"``INSERT`` or ``UPDATE`` SQL statements. Specifically, when you call "
"``save()``, Django follows this algorithm:"
msgstr ""

# edb95db1f4764a65ad5ac3af00e29e3f
#: ../../ref/models/instances.txt:293
msgid ""
"If the object's primary key attribute is set to a value that evaluates to "
"``True`` (i.e., a value other than ``None`` or the empty string), Django "
"executes a ``SELECT`` query to determine whether a record with the given "
"primary key already exists."
msgstr ""

# f5bf8c181d5f4989b5988a80f639fa59
#: ../../ref/models/instances.txt:297
msgid ""
"If the record with the given primary key does already exist, Django executes "
"an ``UPDATE`` query."
msgstr ""

# bf70ceec691b4a16bd0a4b238691711f
#: ../../ref/models/instances.txt:299
msgid ""
"If the object's primary key attribute is *not* set, or if it's set but a "
"record doesn't exist, Django executes an ``INSERT``."
msgstr ""

# 9c8fb7aaeec146f1bdc28e2af2546b05
#: ../../ref/models/instances.txt:302
msgid ""
"The one gotcha here is that you should be careful not to specify a primary-"
"key value explicitly when saving new objects, if you cannot guarantee the "
"primary-key value is unused. For more on this nuance, see `Explicitly "
"specifying auto-primary-key values`_ above and `Forcing an INSERT or "
"UPDATE`_ below."
msgstr ""

# 7527c7360c75466e86e0823873cc0ae0
#: ../../ref/models/instances.txt:310
msgid "Forcing an INSERT or UPDATE"
msgstr ""

# 436018fb90f9404ca0919a3a95d6b2de
#: ../../ref/models/instances.txt:312
msgid ""
"In some rare circumstances, it's necessary to be able to force the :meth:"
"`~Model.save()` method to perform an SQL ``INSERT`` and not fall back to "
"doing an ``UPDATE``. Or vice-versa: update, if possible, but not insert a "
"new row. In these cases you can pass the ``force_insert=True`` or "
"``force_update=True`` parameters to the :meth:`~Model.save()` method. "
"Obviously, passing both parameters is an error: you cannot both insert *and* "
"update at the same time!"
msgstr ""

# e13cd4730cba4a7ca42ed3894f079b75
#: ../../ref/models/instances.txt:320
msgid ""
"It should be very rare that you'll need to use these parameters. Django will "
"almost always do the right thing and trying to override that will lead to "
"errors that are difficult to track down. This feature is for advanced use "
"only."
msgstr ""

# 8b06e35e36464446bff92a0752936c73
#: ../../ref/models/instances.txt:325
msgid ""
"Using ``update_fields`` will force an update similarly to ``force_update``."
msgstr ""

# 2506d66b32104859be38f455ef2b7a09
#: ../../ref/models/instances.txt:328
msgid "Updating attributes based on existing fields"
msgstr ""

# 4a876d903f8542b9942a4f204b3ac0bc
#: ../../ref/models/instances.txt:330
msgid ""
"Sometimes you'll need to perform a simple arithmetic task on a field, such "
"as incrementing or decrementing the current value. The obvious way to "
"achieve this is to do something like::"
msgstr ""

# fceaa22388574ba9ad3460e54396e206
#: ../../ref/models/instances.txt:338
msgid ""
"If the old ``number_sold`` value retrieved from the database was 10, then "
"the value of 11 will be written back to the database."
msgstr ""

# 108e6f028c2a4de4a31b86d3a8d53d71
#: ../../ref/models/instances.txt:341
msgid ""
"This sequence has a standard update problem in that it contains a race "
"condition. If another thread of execution has already saved an updated value "
"after the current thread retrieved the old value, the current thread will "
"only save the old value plus one, rather than the new (current) value plus "
"one."
msgstr ""

# 3cff8ef23130447b83a2e2eb2544d50a
#: ../../ref/models/instances.txt:346
msgid ""
"The process can be made robust and slightly faster by expressing the update "
"relative to the original field value, rather than as an explicit assignment "
"of a new value. Django provides :ref:`F() expressions <query-expressions>` "
"for performing this kind of relative update. Using ``F()`` expressions, the "
"previous example is expressed as::"
msgstr ""

# 398944243e924e14ad02322a0198e357
#: ../../ref/models/instances.txt:357
msgid ""
"This approach doesn't use the initial value from the database. Instead, it "
"makes the database do the update based on whatever value is current at the "
"time that the :meth:`~Model.save()` is executed."
msgstr ""

# 9c58678090a04e6ab7fdfcc95a5a6676
#: ../../ref/models/instances.txt:361
msgid ""
"Once the object has been saved, you must reload the object in order to "
"access the actual value that was applied to the updated field::"
msgstr ""

# dd0a9de096ce4ffc94f6dc040f926e25
#: ../../ref/models/instances.txt:368
msgid ""
"For more details, see the documentation on :ref:`F() expressions <query-"
"expressions>` and their :ref:`use in update queries <topics-db-queries-"
"update>`."
msgstr ""

# f81eec8bb9de445fb7ddd9f2858623eb
#: ../../ref/models/instances.txt:373
msgid "Specifying which fields to save"
msgstr ""

# 8691fabf7ffe4d50b029dca062a08f9d
#: ../../ref/models/instances.txt:377
msgid ""
"If ``save()`` is passed a list of field names in keyword argument "
"``update_fields``, only the fields named in that list will be updated. This "
"may be desirable if you want to update just one or a few fields on an "
"object. There will be a slight performance benefit from preventing all of "
"the model fields from being updated in the database. For example::"
msgstr ""

# 5af36c379e1244f1bdba05d33bddddde
#: ../../ref/models/instances.txt:386
msgid ""
"The ``update_fields`` argument can be any iterable containing strings. An "
"empty ``update_fields`` iterable will skip the save. A value of None will "
"perform an update on all fields."
msgstr ""

# fd1ec4f455bb4015b2e5efb62b5906ce
#: ../../ref/models/instances.txt:390
msgid "Specifying ``update_fields`` will force an update."
msgstr ""

# 993d721dff3d4ba1bc5911fd0cee0418
#: ../../ref/models/instances.txt:392
msgid ""
"When saving a model fetched through deferred model loading (:meth:`~django."
"db.models.query.QuerySet.only()` or :meth:`~django.db.models.query.QuerySet."
"defer()`) only the fields loaded from the DB will get updated. In effect "
"there is an automatic ``update_fields`` in this case. If you assign or "
"change any deferred field value, the field will be added to the updated "
"fields."
msgstr ""

# f99661d99b434b968ac521b4aae35766
#: ../../ref/models/instances.txt:400
msgid "Deleting objects"
msgstr ""

# ea8f3499ab9044fb9c5b83ed36654901
#: ../../ref/models/instances.txt:404
msgid ""
"Issues a SQL ``DELETE`` for the object. This only deletes the object in the "
"database; the Python instance will still exist and will still have data in "
"its fields."
msgstr ""

# 3c9e94176bad48219c14fa5d342c6440
#: ../../ref/models/instances.txt:408
msgid ""
"For more details, including how to delete objects in bulk, see :ref:`topics-"
"db-queries-delete`."
msgstr ""

# d0aae6e152fd4db59b4e28538ef65a39
#: ../../ref/models/instances.txt:411
msgid ""
"If you want customized deletion behavior, you can override the ``delete()`` "
"method. See :ref:`overriding-model-methods` for more details."
msgstr ""

# 6a10551b6852498291fd637e1be0d8de
#: ../../ref/models/instances.txt:417
msgid "Other model instance methods"
msgstr ""

# a887b57443524ddcb95d285658727a32
#: ../../ref/models/instances.txt:419
msgid "A few object methods have special purposes."
msgstr ""

# 8043e90273fb4a95b3022a7a2078964b
#: ../../ref/models/instances.txt:422
msgid "``__unicode__``"
msgstr ""

# 2ea0804b8492404ab7c785a7d86b3c74
#: ../../ref/models/instances.txt:426
msgid ""
"The ``__unicode__()`` method is called whenever you call ``unicode()`` on an "
"object. Django uses ``unicode(obj)`` (or the related function, :meth:"
"`str(obj) <Model.__str__>`) in a number of places. Most notably, to display "
"an object in the Django admin site and as the value inserted into a template "
"when it displays an object. Thus, you should always return a nice, human-"
"readable representation of the model from the ``__unicode__()`` method."
msgstr ""

# 75523704bb0a4e7b85ec0fea6ecbdcb1
#: ../../ref/models/instances.txt:442
msgid ""
"If you define a ``__unicode__()`` method on your model and not a :meth:"
"`~Model.__str__()` method, Django will automatically provide you with a :"
"meth:`~Model.__str__()` that calls ``__unicode__()`` and then converts the "
"result correctly to a UTF-8 encoded string object. This is recommended "
"development practice: define only ``__unicode__()`` and let Django take care "
"of the conversion to string objects when required."
msgstr ""

# 95c6e4d49f644f31b36ecc7d69112748
#: ../../ref/models/instances.txt:450
msgid "``__str__``"
msgstr ""

# cbcf92b3cafe4e2cb270913b420c209f
#: ../../ref/models/instances.txt:454
msgid ""
"The ``__str__()`` method is called whenever you call ``str()`` on an object. "
"The main use for this method directly inside Django is when the ``repr()`` "
"output of a model is displayed anywhere (for example, in debugging output). "
"Thus, you should return a nice, human-readable string for the object's "
"``__str__()``.  It isn't required to put ``__str__()`` methods everywhere if "
"you have sensible :meth:`~Model.__unicode__()` methods."
msgstr ""

# 081a433838644c0fb12523c896ae3873
#: ../../ref/models/instances.txt:458
msgid ""
"The previous :meth:`~Model.__unicode__()` example could be similarly written "
"using ``__str__()`` like this::"
msgstr ""

# 839d41830597499daa06d8b303d51819
#: ../../ref/models/instances.txt:471
msgid "``get_absolute_url``"
msgstr ""

# 0d61a453988346baa3c5c527981a20d3
#: ../../ref/models/instances.txt:475
msgid ""
"Define a ``get_absolute_url()`` method to tell Django how to calculate the "
"canonical URL for an object. To callers, this method should appear to return "
"a string that can be used to refer to the object over HTTP."
msgstr ""

# 9f91191009d04dfdb7fd1d3ca3dae27d
#: ../../ref/models/instances.txt:484
msgid ""
"(Whilst this code is correct and simple, it may not be the most portable way "
"to write this kind of method. The :func:`~django.core.urlresolvers.reverse` "
"function is usually the best approach.)"
msgstr ""

# a929af9ded6b41f8a476c6733ddd6543
#: ../../ref/models/instances.txt:493
msgid ""
"One place Django uses ``get_absolute_url()`` is in the admin app. If an "
"object defines this method, the object-editing page will have a \"View on "
"site\" link that will jump you directly to the object's public view, as "
"given by ``get_absolute_url()``."
msgstr ""

# f4170626e65c47188bf803e9d4ea74ad
#: ../../ref/models/instances.txt:498
msgid ""
"Similarly, a couple of other bits of Django, such as the :doc:`syndication "
"feed framework </ref/contrib/syndication>`, use ``get_absolute_url()`` when "
"it is defined. If it makes sense for your model's instances to each have a "
"unique URL, you should define ``get_absolute_url()``."
msgstr ""

# d805c8b5de8a4752a62a0e8214367c40
#: ../../ref/models/instances.txt:503
msgid ""
"It's good practice to use ``get_absolute_url()`` in templates, instead of "
"hard-coding your objects' URLs. For example, this template code is bad:"
msgstr ""

# 1dc1993efdab49c48e1e0713cbeaaaf4
#: ../../ref/models/instances.txt:511
msgid "This template code is much better:"
msgstr ""

# 41580183215e44c889fa6b4d6511a78c
#: ../../ref/models/instances.txt:517
msgid ""
"The logic here is that if you change the URL structure of your objects, even "
"for something simple such as correcting a spelling error, you don't want to "
"have to track down every place that the URL might be created. Specify it "
"once, in ``get_absolute_url()`` and have all your other code call that one "
"place."
msgstr ""

# 98ba0b40baaa4726aaf778023d90f08e
#: ../../ref/models/instances.txt:523
msgid ""
"The string you return from ``get_absolute_url()`` **must** contain only "
"ASCII characters (required by the URI specfication, :rfc:`2396`) and be URL-"
"encoded, if necessary."
msgstr ""

# 5d95fa881048497c96961dc320df7904
#: ../../ref/models/instances.txt:527
msgid ""
"Code and templates calling ``get_absolute_url()`` should be able to use the "
"result directly without any further processing. You may wish to use the "
"``django.utils.encoding.iri_to_uri()`` function to help with this if you are "
"using unicode strings containing characters outside the ASCII range at all."
msgstr ""

# 7ee767a8c3ec46c6a1981707a77ca996
#: ../../ref/models/instances.txt:534
msgid "The ``permalink`` decorator"
msgstr ""

# 0d0b7c76563d42bba6366f6d1da490fa
#: ../../ref/models/instances.txt:538
msgid ""
"The ``permalink`` decorator is no longer recommended. You should use :func:"
"`~django.core.urlresolvers.reverse` in the body of your ``get_absolute_url`` "
"method instead."
msgstr ""

# 1410e59b6c3c4de4b70e8a3d186c8ac8
#: ../../ref/models/instances.txt:542
msgid ""
"In early versions of Django, there wasn't an easy way to use URLs defined in "
"URLconf file inside :meth:`~django.db.models.Model.get_absolute_url`. That "
"meant you would need to define the URL both in URLConf and :meth:`~django.db."
"models.Model.get_absolute_url`. The ``permalink`` decorator was added to "
"overcome this DRY principle violation. However, since the introduction of :"
"func:`~django.core.urlresolvers.reverse` there is no reason to use "
"``permalink`` any more."
msgstr ""

# 6a8eb0ed40ce4e88a1d1cc009743fece
#: ../../ref/models/instances.txt:552
msgid ""
"This decorator takes the name of a URL pattern (either a view name or a URL "
"pattern name) and a list of position or keyword arguments and uses the "
"URLconf patterns to construct the correct, full URL. It returns a string for "
"the correct URL, with all parameters substituted in the correct positions."
msgstr ""

# f1b37f8492544133864f253a35cb1eb6
#: ../../ref/models/instances.txt:557
msgid ""
"The ``permalink`` decorator is a Python-level equivalent to the :ttag:`url` "
"template tag and a high-level wrapper for the :func:`~django.core."
"urlresolvers.reverse` function."
msgstr ""

# 4ee6b18c02f54030a8424b2de27db9b5
#: ../../ref/models/instances.txt:561
msgid ""
"An example should make it clear how to use ``permalink()``. Suppose your "
"URLconf contains a line such as::"
msgstr ""

# c1cdc02cc09b44f59336914daf653f97
#: ../../ref/models/instances.txt:566
msgid ""
"...your model could have a :meth:`~django.db.models.Model.get_absolute_url` "
"method that looked like this::"
msgstr ""

# a193aa2ef81f4cf0a2361f0d4c9e5684
#: ../../ref/models/instances.txt:575
msgid "Similarly, if you had a URLconf entry that looked like::"
msgstr ""

# cc45eb318dfe4e31b5303cfc017155fa
#: ../../ref/models/instances.txt:579
msgid "...you could reference this using ``permalink()`` as follows::"
msgstr ""

# 9e5074dcf17444d09345ce8605be373f
#: ../../ref/models/instances.txt:588
msgid ""
"Notice that we specify an empty sequence for the second parameter in this "
"case, because we only want to pass keyword parameters, not positional ones."
msgstr ""

# 14b3813e8a004ef0926ef7f864ef26a8
#: ../../ref/models/instances.txt:591
msgid ""
"In this way, you're associating the model's absolute path with the view that "
"is used to display it, without repeating the view's URL information "
"anywhere. You can still use the :meth:`~django.db.models.Model."
"get_absolute_url()` method in templates, as before."
msgstr ""

# dc1ed71d432f4a008689dc9f38ed105b
#: ../../ref/models/instances.txt:596
msgid ""
"In some cases, such as the use of generic views or the re-use of custom "
"views for multiple models, specifying the view function may confuse the "
"reverse URL matcher (because multiple patterns point to the same view). For "
"that case, Django has :ref:`named URL patterns <naming-url-patterns>`. Using "
"a named URL pattern, it's possible to give a name to a pattern, and then "
"reference the name rather than the view function. A named URL pattern is "
"defined by replacing the pattern tuple by a call to the ``url`` function)::"
msgstr ""

# 96e2d41511204b5f912d8dd7ce908c9e
#: ../../ref/models/instances.txt:608
msgid ""
"...and then using that name to perform the reverse URL resolution instead of "
"the view name::"
msgstr ""

# fb13ba277c194bd88fc6eb5ce0b13338
#: ../../ref/models/instances.txt:617
msgid ""
"More details on named URL patterns are in the :doc:`URL dispatch "
"documentation </topics/http/urls>`."
msgstr ""

# ba76431746d24655b08e3b8c784ffd07
#: ../../ref/models/instances.txt:621
msgid "Extra instance methods"
msgstr ""

# d839a1e18f5a4ee9ac640cea24bbd499
#: ../../ref/models/instances.txt:623
msgid ""
"In addition to :meth:`~Model.save()`, :meth:`~Model.delete()`, a model "
"object might have some of the following methods:"
msgstr ""

# 89444298fee54a14839518cb41d8f270
#: ../../ref/models/instances.txt:628
msgid ""
"For every field that has :attr:`~django.db.models.Field.choices` set, the "
"object will have a ``get_FOO_display()`` method, where ``FOO`` is the name "
"of the field. This method returns the \"human-readable\" value of the field."
msgstr ""

# c88bb46aefe446a0bc4ded3819f289ab
#: ../../ref/models/instances.txt:657
msgid ""
"For every :class:`~django.db.models.DateField` and :class:`~django.db.models."
"DateTimeField` that does not have :attr:`null=True <django.db.models.Field."
"null>`, the object will have ``get_next_by_FOO()`` and "
"``get_previous_by_FOO()`` methods, where ``FOO`` is the name of the field. "
"This returns the next and previous object with respect to the date field, "
"raising a :exc:`~django.core.exceptions.DoesNotExist` exception when "
"appropriate."
msgstr ""

# d11a35301391450581bd780886276661
#: ../../ref/models/instances.txt:664
msgid ""
"Both of these methods will perform their queries using the default manager "
"for the model. If you need to emulate filtering used by a custom manager, or "
"want to perform one-off custom filtering, both methods also accept optional "
"keyword arguments, which should be in the format described in :ref:`Field "
"lookups <field-lookups>`."
msgstr ""

# c31b67c91d10410b99469a3c50a2ec34
#: ../../ref/models/instances.txt:667
msgid ""
"Note that in the case of identical date values, these methods will use the "
"primary key as a tie-breaker. This guarantees that no records are skipped or "
"duplicated. That also means you cannot use those methods on unsaved objects."
msgstr ""

# 17ae054d58e843febf600290aa15f838
#: ../../ref/models/options.txt:3
msgid "Model ``Meta`` options"
msgstr ""

# b8cca8c94e0e4799b8e0aef0f01e2e6b
#: ../../ref/models/options.txt:5
msgid ""
"This document explains all the possible :ref:`metadata options <meta-"
"options>` that you can give your model in its internal ``class Meta``."
msgstr ""

# 587508f3d8164185b7b7465985ce76c1
#: ../../ref/models/options.txt:10
msgid "Available ``Meta`` options"
msgstr ""

# cfe749a58dd343f1b4e069f68e8f3e52
#: ../../ref/models/options.txt:15
msgid "``abstract``"
msgstr ""

# 56474373fc404537886e28263e96b20f
#: ../../ref/models/options.txt:19
msgid ""
"If ``abstract = True``, this model will be an :ref:`abstract base class "
"<abstract-base-classes>`."
msgstr ""

# 66bd15e31a6e42048f908ac49d5f60d3
#: ../../ref/models/options.txt:27
msgid ""
"If a model exists outside of the standard :file:`models.py` (for instance, "
"if the app's models are in submodules of ``myapp.models``), the model must "
"define which app it is part of::"
msgstr ""

# 84adc0e238b8463884a1a0f2a9d914d1
#: ../../ref/models/options.txt:34
msgid "``db_table``"
msgstr ""

# 5826f377db984a85b376a27c857d7955
#: ../../ref/models/options.txt:38
msgid "The name of the database table to use for the model::"
msgstr ""

# 9e78687a99dd4a45b6396f731c4cdf23
#: ../../ref/models/options.txt:47
msgid ""
"To save you time, Django automatically derives the name of the database "
"table from the name of your model class and the app that contains it. A "
"model's database table name is constructed by joining the model's \"app label"
"\" -- the name you used in :djadmin:`manage.py startapp <startapp>` -- to "
"the model's class name, with an underscore between them."
msgstr ""

# 8c72a35922a04693826a210570e08f9b
#: ../../ref/models/options.txt:53
msgid ""
"For example, if you have an app ``bookstore`` (as created by ``manage.py "
"startapp bookstore``), a model defined as ``class Book`` will have a "
"database table named ``bookstore_book``."
msgstr ""

# 51b2c6759dac42b7ba977a3d58553960
#: ../../ref/models/options.txt:57
msgid ""
"To override the database table name, use the ``db_table`` parameter in "
"``class Meta``."
msgstr ""

# a044ee71ef21484a89035f9b1a8b13ad
#: ../../ref/models/options.txt:60
msgid ""
"If your database table name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""

# fc65ff47bb2742949757feb672560a6e
#: ../../ref/models/options.txt:64
msgid "Use lowercase table names for MySQL"
msgstr ""

# 831c5b85936547518d7aa851d309b3dd
#: ../../ref/models/options.txt:66
msgid ""
"It is strongly advised that you use lowercase table names when you override "
"the table name via ``db_table``, particularly if you are using the MySQL "
"backend. See the :ref:`MySQL notes <mysql-notes>` for more details."
msgstr ""

# 8663516f6ffe4f79be2d814a16ba9daa
#: ../../ref/models/options.txt:76
msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this model. The default is the project's :setting:`DEFAULT_TABLESPACE` "
"setting, if set. If the backend doesn't support tablespaces, this option is "
"ignored."
msgstr ""

# b28620bcfea542bda5e705ac75b3b12a
#: ../../ref/models/options.txt:82
msgid "``get_latest_by``"
msgstr ""

# ed17475f3aa24d338ba18e78adc44e2c
#: ../../ref/models/options.txt:86
msgid ""
"The name of an orderable field in the model, typically a :class:"
"`DateField`, :class:`DateTimeField`, or :class:`IntegerField`. This "
"specifies the default field to use in your model :class:`Manager`'s :meth:"
"`~django.db.models.query.QuerySet.latest` method."
msgstr ""

# ebf9c3791db249acb2f215a5c77ebdb7
#: ../../ref/models/options.txt:95
msgid "See the :meth:`~django.db.models.query.QuerySet.latest` docs for more."
msgstr ""

# ebd1b5d05df642b7b015ca279fc08cd6
#: ../../ref/models/options.txt:98
msgid "``managed``"
msgstr ""

# 7d9aa1f2ea064203ba6a6c510beb3d15
#: ../../ref/models/options.txt:102
msgid ""
"Defaults to ``True``, meaning Django will create the appropriate database "
"tables in :djadmin:`syncdb` and remove them as part of a :djadmin:`flush` "
"management command. That is, Django *manages* the database tables' "
"lifecycles."
msgstr ""

# 87e214a94fa14e55bde3e7d2a98362ee
#: ../../ref/models/options.txt:107
msgid ""
"If ``False``, no database table creation or deletion operations will be "
"performed for this model. This is useful if the model represents an existing "
"table or a database view that has been created by some other means. This is "
"the *only* difference when ``managed=False``. All other aspects of model "
"handling are exactly the same as normal. This includes"
msgstr ""

# 2228f3f64b3e460880789a7e1b84189b
#: ../../ref/models/options.txt:113
msgid ""
"Adding an automatic primary key field to the model if you don't declare it.  "
"To avoid confusion for later code readers, it's recommended to specify all "
"the columns from the database table you are modeling when using unmanaged "
"models."
msgstr ""

# 63ebd3d48f2647ebb6d1a6d05085a41f
#: ../../ref/models/options.txt:118
msgid ""
"If a model with ``managed=False`` contains a :class:`~django.db.models."
"ManyToManyField` that points to another unmanaged model, then the "
"intermediate table for the many-to-many join will also not be created. "
"However, the intermediary table between one managed and one unmanaged model "
"*will* be created."
msgstr ""

# df451cda5bdf4c0d8cbe6baaf0a08f14
#: ../../ref/models/options.txt:124
msgid ""
"If you need to change this default behavior, create the intermediary table "
"as an explicit model (with ``managed`` set as needed) and use the :attr:"
"`ManyToManyField.through` attribute to make the relation use your custom "
"model."
msgstr ""

# 3f71e509eb034fb1871699b582b69133
#: ../../ref/models/options.txt:129
msgid ""
"For tests involving models with ``managed=False``, it's up to you to ensure "
"the correct tables are created as part of the test setup."
msgstr ""

# 1c7dea5f4ffa42f1b7bb2c3dccbec435
#: ../../ref/models/options.txt:132
msgid ""
"If you're interested in changing the Python-level behavior of a model class, "
"you *could* use ``managed=False`` and create a copy of an existing model. "
"However, there's a better approach for that situation: :ref:`proxy-models`."
msgstr ""

# 871c0abc6ead409d9f13e6e2991360ec
#: ../../ref/models/options.txt:137
msgid "``order_with_respect_to``"
msgstr ""

# 620bd186ffea47df83071a5e69dad954
#: ../../ref/models/options.txt:141
msgid ""
"Marks this object as \"orderable\" with respect to the given field. This is "
"almost always used with related objects to allow them to be ordered with "
"respect to a parent object. For example, if an ``Answer`` relates to a "
"``Question`` object, and a question has more than one answer, and the order "
"of answers matters, you'd do this::"
msgstr ""

# 9aa914df72274d608eadc1d7cb21b911
#: ../../ref/models/options.txt:154
msgid ""
"When ``order_with_respect_to`` is set, two additional methods are provided "
"to retrieve and to set the order of the related objects: "
"``get_RELATED_order()`` and ``set_RELATED_order()``, where ``RELATED`` is "
"the lowercased model name. For example, assuming that a ``Question`` object "
"has multiple related ``Answer`` objects, the list returned contains the "
"primary keys of the related ``Answer`` objects::"
msgstr ""

# 49bf1c902161465d9945168411338de4
#: ../../ref/models/options.txt:165
msgid ""
"The order of a ``Question`` object's related ``Answer`` objects can be set "
"by passing in a list of ``Answer`` primary keys::"
msgstr ""

# 6c5702720cdd44b3ac02789957852f85
#: ../../ref/models/options.txt:170
msgid ""
"The related objects also get two methods, ``get_next_in_order()`` and "
"``get_previous_in_order()``, which can be used to access those objects in "
"their proper order. Assuming the ``Answer`` objects are ordered by ``id``::"
msgstr ""

# 68f54ad280b14140a327ef6525a1255c
#: ../../ref/models/options.txt:180
msgid "Changing order_with_respect_to"
msgstr ""

# db1624021a774fe2a95436adcb9f0f56
#: ../../ref/models/options.txt:182
msgid ""
"``order_with_respect_to`` adds an additional field/database column named "
"``_order``, so be sure to handle that as you would any other change to your "
"models if you add or change ``order_with_respect_to`` after your initial :"
"djadmin:`syncdb`."
msgstr ""

# 04cc1399980b48bfbb821a7098c8d472
#: ../../ref/models/options.txt:188
msgid "``ordering``"
msgstr ""

# 0a21a857c80842019c7ed232a2ae668b
#: ../../ref/models/options.txt:192
msgid ""
"The default ordering for the object, for use when obtaining lists of "
"objects::"
msgstr ""

# 0577b2ae352c41849e9dba02d21ee371
#: ../../ref/models/options.txt:196
msgid ""
"This is a tuple or list of strings. Each string is a field name with an "
"optional \"-\" prefix, which indicates descending order. Fields without a "
"leading \"-\" will be ordered ascending. Use the string \"?\" to order "
"randomly."
msgstr ""

# 3f1b296e4e814ff5a1505a99dac76389
#: ../../ref/models/options.txt:200
msgid "For example, to order by a ``pub_date`` field ascending, use this::"
msgstr ""

# c6f20202807e4b84b2f82192c9dd1170
#: ../../ref/models/options.txt:204
msgid "To order by ``pub_date`` descending, use this::"
msgstr ""

# 1c9608b58ea24b3e85da24577d437c41
#: ../../ref/models/options.txt:208
msgid ""
"To order by ``pub_date`` descending, then by ``author`` ascending, use this::"
msgstr ""

# 1d4a1c2c5ebe4ec58bd82f404bed33d7
#: ../../ref/models/options.txt:217
msgid "``permissions``"
msgstr ""

# aa93601fd9c340d193c67bf094c99414
#: ../../ref/models/options.txt:221
msgid ""
"Extra permissions to enter into the permissions table when creating this "
"object. Add, delete and change permissions are automatically created for "
"each object that has ``admin`` set. This example specifies an extra "
"permission, ``can_deliver_pizzas``::"
msgstr ""

# 9c902e799a254aeca731e419926a2fa0
#: ../../ref/models/options.txt:228
msgid ""
"This is a list or tuple of 2-tuples in the format ``(permission_code, "
"human_readable_permission_name)``."
msgstr ""

# e5a0ae723f5e41f79303cbcfa251b5f0
#: ../../ref/models/options.txt:232
msgid "``proxy``"
msgstr ""

# ac5f565d0dec4588a1113519dfa80515
#: ../../ref/models/options.txt:236
msgid ""
"If ``proxy = True``, a model which subclasses another model will be treated "
"as a :ref:`proxy model <proxy-models>`."
msgstr ""

# ceae89f33f604aa6b410bd7fac9fb0d5
#: ../../ref/models/options.txt:240
msgid "``unique_together``"
msgstr ""

# a8e7ec2172a943888d6db3e8d63aa714
#: ../../ref/models/options.txt:244
msgid "Sets of field names that, taken together, must be unique::"
msgstr ""

# e4f5a05cbe594229a9841b63f0eec259
#: ../../ref/models/options.txt:248
msgid ""
"This is a tuple of tuples that must be unique when considered together. It's "
"used in the Django admin and is enforced at the database level (i.e., the "
"appropriate ``UNIQUE`` statements are included in the ``CREATE TABLE`` "
"statement)."
msgstr ""

# d1776593aa814cabb62fa27485caf35c
#: ../../ref/models/options.txt:253
msgid ""
"For convenience, unique_together can be a single tuple when dealing with a "
"single set of fields::"
msgstr ""

# d654ee4826654c93a59da7356272b6f8
#: ../../ref/models/options.txt:258
msgid ""
"A :class:`~django.db.models.ManyToManyField` cannot be included in "
"unique_together. (It's not clear what that would even mean!) If you need to "
"validate uniqueness related to a :class:`~django.db.models.ManyToManyField`, "
"try using a signal or an explicit :attr:`through <ManyToManyField.through>` "
"model."
msgstr ""

# 618e684b13364ac8ab9d61fdafb674ff
#: ../../ref/models/options.txt:264
msgid "``index_together``"
msgstr ""

# 68dc85baf2d64ca7a4d9c7c352395bb7
#: ../../ref/models/options.txt:270
msgid "Sets of field names that, taken together, are indexed::"
msgstr ""

# 64decb41a5964d419975fafd2d01d644
#: ../../ref/models/options.txt:276
msgid ""
"This list of fields will be indexed together (i.e. the appropriate ``CREATE "
"INDEX`` statement will be issued.)"
msgstr ""

# a15b82d01e914ec19f3d9811c81f35a6
#: ../../ref/models/options.txt:284
msgid "A human-readable name for the object, singular::"
msgstr ""

# 9bee683295cd461bafebb379bca8d9f4
#: ../../ref/models/options.txt:288
msgid ""
"If this isn't given, Django will use a munged version of the class name: "
"``CamelCase`` becomes ``camel case``."
msgstr ""

# 58005bee85bc4503bb74d2488a15e97e
#: ../../ref/models/options.txt:292
msgid "``verbose_name_plural``"
msgstr ""

# 61d6e3d228d84172bacc22631254415b
#: ../../ref/models/options.txt:296
msgid "The plural name for the object::"
msgstr ""

# d275bf089638425f9b2e69f182a818fc
#: ../../ref/models/options.txt:300
msgid ""
"If this isn't given, Django will use :attr:`~Options.verbose_name` + ``\"s"
"\"``."
msgstr ""

# b842742c9b3c47f9b11ae39fa70347a7
#: ../../ref/models/querysets.txt:3
msgid "QuerySet API reference"
msgstr ""

# 9ee082d19a5441dc941e4eea86d91dd8
#: ../../ref/models/querysets.txt:7
msgid ""
"This document describes the details of the ``QuerySet`` API. It builds on "
"the material presented in the :doc:`model </topics/db/models>` and :doc:"
"`database query </topics/db/queries>` guides, so you'll probably want to "
"read and understand those documents before reading this one."
msgstr ""

# 15463a6970db44ee9d1797f230e08dcc
#: ../../ref/models/querysets.txt:19
msgid "When QuerySets are evaluated"
msgstr ""

# 98a8eb6da121441fa5a41f0b8ec1064c
#: ../../ref/models/querysets.txt:21
msgid ""
"Internally, a ``QuerySet`` can be constructed, filtered, sliced, and "
"generally passed around without actually hitting the database. No database "
"activity actually occurs until you do something to evaluate the queryset."
msgstr ""

# f3a58822363845f8bdc5fb6ace8cceca
#: ../../ref/models/querysets.txt:25
msgid "You can evaluate a ``QuerySet`` in the following ways:"
msgstr ""

# 5d32845d47464d20bdf126b76293b65e
#: ../../ref/models/querysets.txt:27
msgid ""
"**Iteration.** A ``QuerySet`` is iterable, and it executes its database "
"query the first time you iterate over it. For example, this will print the "
"headline of all entries in the database::"
msgstr ""

# 364740313b494402b9b72190e1eb4ef4
#: ../../ref/models/querysets.txt:34
msgid ""
"Note: Don't use this if all you want to do is determine if at least one "
"result exists. It's more efficient to use :meth:`~QuerySet.exists`."
msgstr ""

# 730a40c836c94a70bd863980e5afbc6b
#: ../../ref/models/querysets.txt:37
msgid ""
"**Slicing.** As explained in :ref:`limiting-querysets`, a ``QuerySet`` can "
"be sliced, using Python's array-slicing syntax. Slicing an unevaluated "
"``QuerySet`` usually returns another unevaluated ``QuerySet``, but Django "
"will execute the database query if you use the \"step\" parameter of slice "
"syntax, and will return a list. Slicing a ``QuerySet`` that has been "
"evaluated (partially or fully) also returns a list."
msgstr ""

# 3472fbc231bf419a940a6f2d1f09a8f5
#: ../../ref/models/querysets.txt:44
msgid ""
"**Pickling/Caching.** See the following section for details of what is "
"involved when `pickling QuerySets`_. The important thing for the purposes of "
"this section is that the results are read from the database."
msgstr ""

# 5db841526fe542beb829af65bdd69096
#: ../../ref/models/querysets.txt:48
msgid ""
"**repr().** A ``QuerySet`` is evaluated when you call ``repr()`` on it. This "
"is for convenience in the Python interactive interpreter, so you can "
"immediately see your results when using the API interactively."
msgstr ""

# 2b240a4bd27749d19cb3b7245fa07c43
#: ../../ref/models/querysets.txt:52
msgid ""
"**len().** A ``QuerySet`` is evaluated when you call ``len()`` on it. This, "
"as you might expect, returns the length of the result list."
msgstr ""

# 4bd9a35799a348b9afe47072f973839e
#: ../../ref/models/querysets.txt:55
msgid ""
"Note: *Don't* use ``len()`` on ``QuerySet``\\s if all you want to do is "
"determine the number of records in the set. It's much more efficient to "
"handle a count at the database level, using SQL's ``SELECT COUNT(*)``, and "
"Django provides a ``count()`` method for precisely this reason. See "
"``count()`` below."
msgstr ""

# 19e4e3e580a74d508c435c0250146aeb
#: ../../ref/models/querysets.txt:61
msgid ""
"**list().** Force evaluation of a ``QuerySet`` by calling ``list()`` on it. "
"For example::"
msgstr ""

# 7bfb58cf3a40490fadbaf697034266a4
#: ../../ref/models/querysets.txt:66
msgid ""
"Be warned, though, that this could have a large memory overhead, because "
"Django will load each element of the list into memory. In contrast, "
"iterating over a ``QuerySet`` will take advantage of your database to load "
"data and instantiate objects only as you need them."
msgstr ""

# bea2746b2f38482588743a4101b564e8
#: ../../ref/models/querysets.txt:71
msgid ""
"**bool().** Testing a ``QuerySet`` in a boolean context, such as using "
"``bool()``, ``or``, ``and`` or an ``if`` statement, will cause the query to "
"be executed. If there is at least one result, the ``QuerySet`` is ``True``, "
"otherwise ``False``. For example::"
msgstr ""

# 143045f12b7b40d2aecd972c3bceba9d
#: ../../ref/models/querysets.txt:79
msgid ""
"Note: *Don't* use this if all you want to do is determine if at least one "
"result exists, and don't need the actual objects. It's more efficient to "
"use :meth:`~QuerySet.exists` (see below)."
msgstr ""

# 04b90552b1ce477bb51c3a4cb2e4d14b
#: ../../ref/models/querysets.txt:86
msgid "Pickling QuerySets"
msgstr ""

# 52cb849ec5ae4a1bb381e7a667906754
#: ../../ref/models/querysets.txt:88
msgid ""
"If you :mod:`pickle` a ``QuerySet``, this will force all the results to be "
"loaded into memory prior to pickling. Pickling is usually used as a "
"precursor to caching and when the cached queryset is reloaded, you want the "
"results to already be present and ready for use (reading from the database "
"can take some time, defeating the purpose of caching). This means that when "
"you unpickle a ``QuerySet``, it contains the results at the moment it was "
"pickled, rather than the results that are currently in the database."
msgstr ""

# 5beb4907247b47f0bc768cabbee148c9
#: ../../ref/models/querysets.txt:96
msgid ""
"If you only want to pickle the necessary information to recreate the "
"``QuerySet`` from the database at a later time, pickle the ``query`` "
"attribute of the ``QuerySet``. You can then recreate the original "
"``QuerySet`` (without any results loaded) using some code like this::"
msgstr ""

# bf571ce5159446fc8c63527f4a2d8b99
#: ../../ref/models/querysets.txt:106
msgid ""
"The ``query`` attribute is an opaque object. It represents the internals of "
"the query construction and is not part of the public API. However, it is "
"safe (and fully supported) to pickle and unpickle the attribute's contents "
"as described here."
msgstr ""

# 306cdaf37b9840209cf7d2d12bb7aa63
#: ../../ref/models/querysets.txt:111
msgid "You can't share pickles between versions"
msgstr ""

# 44fb1305e41047abaa5667119543548b
#: ../../ref/models/querysets.txt:113
msgid ""
"Pickles of ``QuerySets`` are only valid for the version of Django that was "
"used to generate them. If you generate a pickle using Django version N, "
"there is no guarantee that pickle will be readable with Django version N+1. "
"Pickles should not be used as part of a long-term archival strategy."
msgstr ""

# 24cb6e6e8308436b86bd0b109d9fa20f
#: ../../ref/models/querysets.txt:122
msgid "QuerySet API"
msgstr ""

# e045ee6ffe5e4b8ebb405cf03773441b
#: ../../ref/models/querysets.txt:124
msgid ""
"Though you usually won't create one manually — you'll go through a :class:"
"`~django.db.models.Manager` — here's the formal declaration of a "
"``QuerySet``:"
msgstr ""

# 0bea783b6ee047c2a41a08ca09646301
#: ../../ref/models/querysets.txt:130
msgid ""
"Usually when you'll interact with a ``QuerySet`` you'll use it by :ref:"
"`chaining filters <chaining-filters>`. To make this work, most ``QuerySet`` "
"methods return new querysets. These methods are covered in detail later in "
"this section."
msgstr ""

# 9f7cc26f78754394b6562429c427437a
#: ../../ref/models/querysets.txt:135
msgid ""
"The ``QuerySet`` class has two public attributes you can use for "
"introspection:"
msgstr ""

# 3aba76d588ab47fd87e9f09be71da3f5
#: ../../ref/models/querysets.txt:140
msgid ""
"``True`` if the ``QuerySet`` is ordered — i.e. has an :meth:`order_by()` "
"clause or a default ordering on the model. ``False`` otherwise."
msgstr ""

# edf49de5dd9d426582d4406154fa2d8a
#: ../../ref/models/querysets.txt:146
msgid "The database that will be used if this query is executed now."
msgstr ""

# 23e9a7227ffe4d4ba450515ddf3df6b1
#: ../../ref/models/querysets.txt:150
msgid ""
"The ``query`` parameter to :class:`QuerySet` exists so that specialized "
"query subclasses such as :class:`~django.contrib.gis.db.models.GeoQuerySet` "
"can reconstruct internal query state. The value of the parameter is an "
"opaque representation of that query state and is not part of a public API. "
"To put it simply: if you need to ask, you don't need to use it."
msgstr ""

# 5f148af296204f9fbb2b8069b672a41f
#: ../../ref/models/querysets.txt:160
msgid "Methods that return new QuerySets"
msgstr ""

# e7dac15b8fea42769573388fd18770ee
#: ../../ref/models/querysets.txt:162
msgid ""
"Django provides a range of ``QuerySet`` refinement methods that modify "
"either the types of results returned by the ``QuerySet`` or the way its SQL "
"query is executed."
msgstr ""

# ef734bcab7f34e5baed29be7627d7d38
# 9bbe038c3137453ba5892f394ae2c74a
#: ../../ref/models/querysets.txt:167 ../../ref/templates/builtins.txt:216
msgid "filter"
msgstr ""

# fdd7da5cac2f4b86952b8b67a805ee1d
#: ../../ref/models/querysets.txt:171
msgid ""
"Returns a new ``QuerySet`` containing objects that match the given lookup "
"parameters."
msgstr ""

# 47d898f0b2db426f9b234734ba2e5381
#: ../../ref/models/querysets.txt:174
msgid ""
"The lookup parameters (``**kwargs``) should be in the format described in "
"`Field lookups`_ below. Multiple parameters are joined via ``AND`` in the "
"underlying SQL statement."
msgstr ""

# 89cb6526e2d1499b8482dc3ed35e62a6
#: ../../ref/models/querysets.txt:179
msgid "exclude"
msgstr ""

# f49142f770dc416cbdbb9bb9a5c04e97
#: ../../ref/models/querysets.txt:183
msgid ""
"Returns a new ``QuerySet`` containing objects that do *not* match the given "
"lookup parameters."
msgstr ""

# d3c6f00f530e445aa61545482188d6b4
#: ../../ref/models/querysets.txt:186
msgid ""
"The lookup parameters (``**kwargs``) should be in the format described in "
"`Field lookups`_ below. Multiple parameters are joined via ``AND`` in the "
"underlying SQL statement, and the whole thing is enclosed in a ``NOT()``."
msgstr ""

# b535d2e639e04526a0186be32235a80a
#: ../../ref/models/querysets.txt:190
msgid ""
"This example excludes all entries whose ``pub_date`` is later than 2005-1-3 "
"AND whose ``headline`` is \"Hello\"::"
msgstr ""

# a54ab00167f34a7498367434a062e223
# da95b975c13f4d49b83f4294ba97e00a
#: ../../ref/models/querysets.txt:195 ../../ref/models/querysets.txt:205
msgid "In SQL terms, that evaluates to::"
msgstr ""

# b35bc739f37d4342abaaada7fe53d787
#: ../../ref/models/querysets.txt:200
msgid ""
"This example excludes all entries whose ``pub_date`` is later than 2005-1-3 "
"OR whose headline is \"Hello\"::"
msgstr ""

# bfdc6d624f7a498a99a6c4da98173bc8
#: ../../ref/models/querysets.txt:211
msgid "Note the second example is more restrictive."
msgstr ""

# 2a09bb225bb5409b9584ea9b7d7745dc
#: ../../ref/models/querysets.txt:214
msgid "annotate"
msgstr ""

# 2733d33f5a454112a471c4c3355226af
#: ../../ref/models/querysets.txt:218
msgid ""
"Annotates each object in the ``QuerySet`` with the provided list of "
"aggregate values (averages, sums, etc) that have been computed over the "
"objects that are related to the objects in the ``QuerySet``. Each argument "
"to ``annotate()`` is an annotation that will be added to each object in the "
"``QuerySet`` that is returned."
msgstr ""

# 2dd2953e8528497ea298284cd3c92d0b
# 260981e5d0dc412ca97554892ee36366
#: ../../ref/models/querysets.txt:224 ../../ref/models/querysets.txt:1506
msgid ""
"The aggregation functions that are provided by Django are described in "
"`Aggregation Functions`_ below."
msgstr ""

# 0745c680d4664295928c83c45cf3c20b
#: ../../ref/models/querysets.txt:227
msgid ""
"Annotations specified using keyword arguments will use the keyword as the "
"alias for the annotation. Anonymous arguments will have an alias generated "
"for them based upon the name of the aggregate function and the model field "
"that is being aggregated."
msgstr ""

# 58968f705c384b25a16626a71038cef0
#: ../../ref/models/querysets.txt:232
msgid ""
"For example, if you were manipulating a list of blogs, you may want to "
"determine how many entries have been made in each blog::"
msgstr ""

# 6cffaabfc52d437b8ac9ac5dc6a38bee
#: ../../ref/models/querysets.txt:243
msgid ""
"The ``Blog`` model doesn't define an ``entry__count`` attribute by itself, "
"but by using a keyword argument to specify the aggregate function, you can "
"control the name of the annotation::"
msgstr ""

# e707a47482ae4036a53dd938c11395e1
# 06b5bc6b2cf64d81812bd0adc936a4e7
#: ../../ref/models/querysets.txt:252 ../../ref/models/querysets.txt:1526
msgid ""
"For an in-depth discussion of aggregation, see :doc:`the topic guide on "
"Aggregation </topics/db/aggregation>`."
msgstr ""

# 6f7f6366eaf14e398a9e2a3fb1986898
#: ../../ref/models/querysets.txt:256
msgid "order_by"
msgstr ""

# 8bc9a5ab362e47a191a7abc6c63b3458
#: ../../ref/models/querysets.txt:260
msgid ""
"By default, results returned by a ``QuerySet`` are ordered by the ordering "
"tuple given by the ``ordering`` option in the model's ``Meta``. You can "
"override this on a per-``QuerySet`` basis by using the ``order_by`` method."
msgstr ""

# 1f705f621f12410b835359880ba57fe9
#: ../../ref/models/querysets.txt:268
msgid ""
"The result above will be ordered by ``pub_date`` descending, then by "
"``headline`` ascending. The negative sign in front of ``\"-pub_date\"`` "
"indicates *descending* order. Ascending order is implied. To order randomly, "
"use ``\"?\"``, like so::"
msgstr ""

# a38d7830e7bc4f808d13904545f77f7b
#: ../../ref/models/querysets.txt:275
msgid ""
"Note: ``order_by('?')`` queries may be expensive and slow, depending on the "
"database backend you're using."
msgstr ""

# 82d04b79882f413c8e9e42df51582cdb
#: ../../ref/models/querysets.txt:278
msgid ""
"To order by a field in a different model, use the same syntax as when you "
"are querying across model relations. That is, the name of the field, "
"followed by a double underscore (``__``), followed by the name of the field "
"in the new model, and so on for as many models as you want to join. For "
"example::"
msgstr ""

# 91c404f238264a328dd8a408df0d1e39
#: ../../ref/models/querysets.txt:285
msgid ""
"If you try to order by a field that is a relation to another model, Django "
"will use the default ordering on the related model (or order by the related "
"model's primary key if there is no :attr:`Meta.ordering <django.db.models."
"Options.ordering>` specified. For example::"
msgstr ""

# 3bb5c6f26c874a48af6b467d4812d537
#: ../../ref/models/querysets.txt:292
msgid "...is identical to::"
msgstr ""

# 788e869b0ecc440b9c4e4c5b0e13d3a8
#: ../../ref/models/querysets.txt:296
msgid "...since the ``Blog`` model has no default ordering specified."
msgstr ""

# 5618d268babc457987cf78364de7ac8a
#: ../../ref/models/querysets.txt:298
msgid ""
"Be cautious when ordering by fields in related models if you are also using :"
"meth:`distinct()`. See the note in :meth:`distinct` for an explanation of "
"how related model ordering can change the expected results."
msgstr ""

# b3bc53ff0ef149f4a8ca012c3d23ef8f
#: ../../ref/models/querysets.txt:303
msgid ""
"It is permissible to specify a multi-valued field to order the results by "
"(for example, a :class:`~django.db.models.ManyToManyField` field, or the "
"reverse relation of a :class:`~django.db.models.ForeignKey` field)."
msgstr ""

# c153b0bc60014a8b99a22b65995d885c
#: ../../ref/models/querysets.txt:307
msgid "Consider this case::"
msgstr ""

# 7876a4577338465b8caf5985f1263c51
#: ../../ref/models/querysets.txt:315
msgid ""
"Here, there could potentially be multiple ordering data for each ``Event``; "
"each ``Event`` with multiple ``children`` will be returned multiple times "
"into the new ``QuerySet`` that ``order_by()`` creates. In other words, using "
"``order_by()`` on the ``QuerySet`` could return more items than you were "
"working on to begin with - which is probably neither expected nor useful."
msgstr ""

# fae191faab2c49b5abf3cc3522162f75
#: ../../ref/models/querysets.txt:322
msgid ""
"Thus, take care when using multi-valued field to order the results. **If** "
"you can be sure that there will only be one ordering piece of data for each "
"of the items you're ordering, this approach should not present problems. If "
"not, make sure the results are what you expect."
msgstr ""

# 70443e1fa06440e99a37daa0aba4e1bb
#: ../../ref/models/querysets.txt:327
msgid ""
"There's no way to specify whether ordering should be case sensitive. With "
"respect to case-sensitivity, Django will order results however your database "
"backend normally orders them."
msgstr ""

# 1cae9d739bda4ca093c23851ae661137
#: ../../ref/models/querysets.txt:331
msgid ""
"If you don't want any ordering to be applied to a query, not even the "
"default ordering, call :meth:`order_by()` with no parameters."
msgstr ""

# 6454b216f2934b62a646b0a0d89d949d
#: ../../ref/models/querysets.txt:318
msgid ""
"You can tell if a query is ordered or not by checking the :attr:`.QuerySet."
"ordered` attribute, which will be ``True`` if the ``QuerySet`` has been "
"ordered in any way."
msgstr ""

# 6e13a0df16eb4257bd9b08e4fb259a23
#: ../../ref/models/querysets.txt:323
msgid "reverse"
msgstr ""

# 58fc600982754cf0a731e7fcad9e183a
#: ../../ref/models/querysets.txt:327
msgid ""
"Use the ``reverse()`` method to reverse the order in which a queryset's "
"elements are returned. Calling ``reverse()`` a second time restores the "
"ordering back to the normal direction."
msgstr ""

# 34226d18410d400cb3d914013300a09d
#: ../../ref/models/querysets.txt:331
msgid "To retrieve the \"last\" five items in a queryset, you could do this::"
msgstr ""

# 1e4805ee88cd421f87b53260fba9d245
#: ../../ref/models/querysets.txt:335
msgid ""
"Note that this is not quite the same as slicing from the end of a sequence "
"in Python. The above example will return the last item first, then the "
"penultimate item and so on. If we had a Python sequence and looked at "
"``seq[-5:]``, we would see the fifth-last item first. Django doesn't support "
"that mode of access (slicing from the end), because it's not possible to do "
"it efficiently in SQL."
msgstr ""

# f468ba5197af4a49adaa17b706ca81ef
#: ../../ref/models/querysets.txt:342
msgid ""
"Also, note that ``reverse()`` should generally only be called on a "
"``QuerySet`` which has a defined ordering (e.g., when querying against a "
"model which defines a default ordering, or when using :meth:`order_by()`). "
"If no such ordering is defined for a given ``QuerySet``, calling "
"``reverse()`` on it has no real effect (the ordering was undefined prior to "
"calling ``reverse()``, and will remain undefined afterward)."
msgstr ""

# b9f72707cae34561871ecbda97ad011f
#: ../../ref/models/querysets.txt:350
msgid "distinct"
msgstr ""

# 3421ebb6533148bf806f484122d05967
#: ../../ref/models/querysets.txt:354
msgid ""
"Returns a new ``QuerySet`` that uses ``SELECT DISTINCT`` in its SQL query. "
"This eliminates duplicate rows from the query results."
msgstr ""

# 353353906db14b94bee64b8234e1119d
#: ../../ref/models/querysets.txt:357
msgid ""
"By default, a ``QuerySet`` will not eliminate duplicate rows. In practice, "
"this is rarely a problem, because simple queries such as ``Blog.objects."
"all()`` don't introduce the possibility of duplicate result rows. However, "
"if your query spans multiple tables, it's possible to get duplicate results "
"when a ``QuerySet`` is evaluated. That's when you'd use ``distinct()``."
msgstr ""

# 614921d443f7467eb81c833230ef27df
#: ../../ref/models/querysets.txt:364
msgid ""
"Any fields used in an :meth:`order_by` call are included in the SQL "
"``SELECT`` columns. This can sometimes lead to unexpected results when used "
"in conjunction with ``distinct()``. If you order by fields from a related "
"model, those fields will be added to the selected columns and they may make "
"otherwise duplicate rows appear to be distinct. Since the extra columns "
"don't appear in the returned results (they are only there to support "
"ordering), it sometimes looks like non-distinct results are being returned."
msgstr ""

# 38cd910a81774c2c91cbbe3e7766d3a0
#: ../../ref/models/querysets.txt:372
msgid ""
"Similarly, if you use a :meth:`values()` query to restrict the columns "
"selected, the columns used in any :meth:`order_by()` (or default model "
"ordering) will still be involved and may affect uniqueness of the results."
msgstr ""

# 6037182042124a49a77ba9a5e2d9f863
#: ../../ref/models/querysets.txt:376
msgid ""
"The moral here is that if you are using ``distinct()`` be careful about "
"ordering by related models. Similarly, when using ``distinct()`` and :meth:"
"`values()` together, be careful when ordering by fields not in the :meth:"
"`values()` call."
msgstr ""

# 92302eb268714a0090ecfe114203c058
#: ../../ref/models/querysets.txt:383
msgid ""
"As of Django 1.4, you can pass positional arguments (``*fields``) in order "
"to specify the names of fields to which the ``DISTINCT`` should apply. This "
"translates to a ``SELECT DISTINCT ON`` SQL query."
msgstr ""

# 09188d11ca824d7b889bb16dc8c90af9
#: ../../ref/models/querysets.txt:387
msgid ""
"Here's the difference. For a normal ``distinct()`` call, the database "
"compares *each* field in each row when determining which rows are distinct. "
"For a ``distinct()`` call with specified field names, the database will only "
"compare the specified field names."
msgstr ""

# 6a36752de1cc49e9acd24760db097bb9
#: ../../ref/models/querysets.txt:393
msgid "This ability to specify field names is only available in PostgreSQL."
msgstr ""

# c36900de24a84098a9c195d140c32f6b
#: ../../ref/models/querysets.txt:412
msgid ""
"When you specify field names, you *must* provide an ``order_by()`` in the "
"``QuerySet``, and the fields in ``order_by()`` must start with the fields in "
"``distinct()``, in the same order."
msgstr ""

# cdcf25886c604c439ee075cdeb6dc524
#: ../../ref/models/querysets.txt:400
msgid ""
"For example, ``SELECT DISTINCT ON (a)`` gives you the first row for each "
"value in column ``a``. If you don't specify an order, you'll get some "
"arbitrary row."
msgstr ""

# 18cbba59f22e4952b0cdc7533b6908fe
#: ../../ref/models/querysets.txt:425
msgid "values"
msgstr ""

# e1c252d4b2e145fb84c1178341535f8c
#: ../../ref/models/querysets.txt:429
msgid ""
"Returns a ``ValuesQuerySet`` — a ``QuerySet`` subclass that returns "
"dictionaries when used as an iterable, rather than model-instance objects."
msgstr ""

# 700692ccff644505ad611abaee8da73c
#: ../../ref/models/querysets.txt:432
msgid ""
"Each of those dictionaries represents an object, with the keys corresponding "
"to the attribute names of model objects."
msgstr ""

# 09bfc5d118cb455da2152c1d5c582abc
#: ../../ref/models/querysets.txt:435
msgid ""
"This example compares the dictionaries of ``values()`` with the normal model "
"objects::"
msgstr ""

# 486492c669604e7bb4ac0a5d4bd37ca4
#: ../../ref/models/querysets.txt:446
msgid ""
"The ``values()`` method takes optional positional arguments, ``*fields``, "
"which specify field names to which the ``SELECT`` should be limited. If you "
"specify the fields, each dictionary will contain only the field keys/values "
"for the fields you specify. If you don't specify the fields, each dictionary "
"will contain a key and value for every field in the database table."
msgstr ""

# 063e433537954816b2a001246dd3b75c
#: ../../ref/models/querysets.txt:459
msgid "A few subtleties that are worth mentioning:"
msgstr ""

# bfffd2d8c9b4400f9257e0c129eab783
#: ../../ref/models/querysets.txt:461
msgid ""
"If you have a field called ``foo`` that is a :class:`~django.db.models."
"ForeignKey`, the default ``values()`` call will return a dictionary key "
"called ``foo_id``, since this is the name of the hidden model attribute that "
"stores the actual value (the ``foo`` attribute refers to the related model). "
"When you are calling ``values()`` and passing in field names, you can pass "
"in either ``foo`` or ``foo_id`` and you will get back the same thing (the "
"dictionary key will match the field name you passed in)."
msgstr ""

# b8314dc376b2463e9d0f8cccc5a1c97f
#: ../../ref/models/querysets.txt:481
msgid ""
"When using ``values()`` together with :meth:`distinct()`, be aware that "
"ordering can affect the results. See the note in :meth:`distinct` for "
"details."
msgstr ""

# 6963a8f2cd8043b8a97f0083df4d206a
#: ../../ref/models/querysets.txt:485
msgid ""
"If you use a ``values()`` clause after an :meth:`extra()` call, any fields "
"defined by a ``select`` argument in the :meth:`extra()` must be explicitly "
"included in the ``values()`` call. Any :meth:`extra()` call made after a "
"``values()`` call will have its extra selected fields ignored."
msgstr ""

# 0aa1c637bb484c8eb80bd611b6911dda
#: ../../ref/models/querysets.txt:491
msgid ""
"A ``ValuesQuerySet`` is useful when you know you're only going to need "
"values from a small number of the available fields and you won't need the "
"functionality of a model instance object. It's more efficient to select only "
"the fields you need to use."
msgstr ""

# 9245e40f40884163ad7fbf63087d48b4
#: ../../ref/models/querysets.txt:496
msgid ""
"Finally, note a ``ValuesQuerySet`` is a subclass of ``QuerySet``, so it has "
"all methods of ``QuerySet``. You can call ``filter()`` on it, or "
"``order_by()``, or whatever. Yes, that means these two calls are identical::"
msgstr ""

# 6dc04e40a4ef4bd58d52af6bed1fbec5
#: ../../ref/models/querysets.txt:503
msgid ""
"The people who made Django prefer to put all the SQL-affecting methods "
"first, followed (optionally) by any output-affecting methods (such as "
"``values()``), but it doesn't really matter. This is your chance to really "
"flaunt your individualism."
msgstr ""

# a632641923644827ad21ae43d5752366
#: ../../ref/models/querysets.txt:508
msgid ""
"You can also refer to fields on related models with reverse relations "
"through ``OneToOneField``, ``ForeignKey`` and ``ManyToManyField`` "
"attributes::"
msgstr ""

# 16f6b671809c4e5885181b3a88dd15a5
#: ../../ref/models/querysets.txt:517
msgid ""
"Because :class:`~django.db.models.ManyToManyField` attributes and reverse "
"relations can have multiple related rows, including these can have a "
"multiplier effect on the size of your result set. This will be especially "
"pronounced if you include multiple such fields in your ``values()`` query, "
"in which case all possible combinations will be returned."
msgstr ""

# 678aece196a74fcda58ded718b06465d
#: ../../ref/models/querysets.txt:524
msgid "values_list"
msgstr ""

# 6bb95f2c603c4b029c90a57b69a6fc54
#: ../../ref/models/querysets.txt:528
msgid ""
"This is similar to ``values()`` except that instead of returning "
"dictionaries, it returns tuples when iterated over. Each tuple contains the "
"value from the respective field passed into the ``values_list()`` call — so "
"the first item is the first field, etc. For example::"
msgstr ""

# 57c703fd94624de08a8d0087cf8fb493
#: ../../ref/models/querysets.txt:536
msgid ""
"If you only pass in a single field, you can also pass in the ``flat`` "
"parameter. If ``True``, this will mean the returned results are single "
"values, rather than one-tuples. An example should make the difference "
"clearer::"
msgstr ""

# 308079d4886b456296cb6b94a9be849a
#: ../../ref/models/querysets.txt:546
msgid "It is an error to pass in ``flat`` when there is more than one field."
msgstr ""

# 6a2525bd86d64da79214069bc21fb9cd
#: ../../ref/models/querysets.txt:548
msgid ""
"If you don't pass any values to ``values_list()``, it will return all the "
"fields in the model, in the order they were declared."
msgstr ""

# 0f262c47f4c445e794d92cd170d5e50b
#: ../../ref/models/querysets.txt:552
msgid "dates"
msgstr ""

# 3728149f17cb41f0a8b983ffa9f35756
#: ../../ref/models/querysets.txt:556
msgid ""
"Returns a ``DateQuerySet`` — a ``QuerySet`` that evaluates to a list of "
"``datetime.datetime`` objects representing all available dates of a "
"particular kind within the contents of the ``QuerySet``."
msgstr ""

# 88ea231d42774736843a1442db60e690
#: ../../ref/models/querysets.txt:560
msgid ""
"``field`` should be the name of a ``DateField`` or ``DateTimeField`` of your "
"model."
msgstr ""

# cbeab671ebde4bd3b1fa0d2c6e7e285b
#: ../../ref/models/querysets.txt:563
msgid ""
"``kind`` should be either ``\"year\"``, ``\"month\"`` or ``\"day\"``. Each "
"``datetime.datetime`` object in the result list is \"truncated\" to the "
"given ``type``."
msgstr ""

# 76064dadf1e640ff8b0d773afb905898
#: ../../ref/models/querysets.txt:567
msgid "``\"year\"`` returns a list of all distinct year values for the field."
msgstr ""

# 6d5b58655b9c4d6d8b85cac7f37e0e65
#: ../../ref/models/querysets.txt:568
msgid ""
"``\"month\"`` returns a list of all distinct year/month values for the field."
msgstr ""

# d3524805e7de48c6b28703887a730fbf
#: ../../ref/models/querysets.txt:570
msgid ""
"``\"day\"`` returns a list of all distinct year/month/day values for the "
"field."
msgstr ""

# eb3be8bdd2c440aca2eec215c82d4ff2
#: ../../ref/models/querysets.txt:573
msgid ""
"``order``, which defaults to ``'ASC'``, should be either ``'ASC'`` or "
"``'DESC'``. This specifies how to order the results."
msgstr ""

# 67b102108811493f8a63fcae24d81db7
#: ../../ref/models/querysets.txt:591
msgid ""
"When :doc:`time zone support </topics/i18n/timezones>` is enabled, Django "
"uses UTC in the database connection, which means the aggregation is "
"performed in UTC. This is a known limitation of the current implementation."
msgstr ""

# 151f5ed7eca5462ba84d16767a2f44bc
#: ../../ref/models/querysets.txt:596
msgid "none"
msgstr ""

# 5c2fccddb3ee4317a0404e95348413ea
#: ../../ref/models/querysets.txt:600
msgid ""
"Returns an ``EmptyQuerySet`` — a ``QuerySet`` subclass that always evaluates "
"to an empty list. This can be used in cases where you know that you should "
"return an empty result set and your caller is expecting a ``QuerySet`` "
"object (instead of returning an empty list, for example.)"
msgstr ""

# 92c590e054ac42a7965cd269dac0033b
#: ../../ref/models/querysets.txt:611
msgid "all"
msgstr ""

# 2f66182c98984e608237eeb69fb35c09
#: ../../ref/models/querysets.txt:615
msgid ""
"Returns a *copy* of the current ``QuerySet`` (or ``QuerySet`` subclass).  "
"This can be useful in situations where you might want to pass in either a "
"model manager or a ``QuerySet`` and do further filtering on the result. "
"After calling ``all()`` on either object, you'll definitely have a "
"``QuerySet`` to work with."
msgstr ""

# 6fdcdd78aa124f0d97e39e31c7baf3ea
#: ../../ref/models/querysets.txt:621
msgid "select_related"
msgstr ""

# e485e2d21b9f438698baa01d1d0ec0b5
#: ../../ref/models/querysets.txt:625
msgid ""
"Returns a ``QuerySet`` that will automatically \"follow\" foreign-key "
"relationships, selecting that additional related-object data when it "
"executes its query. This is a performance booster which results in "
"(sometimes much) larger queries but means later use of foreign-key "
"relationships won't require database queries."
msgstr ""

# e8dd66035cde4e69a42edb5aac0b3747
#: ../../ref/models/querysets.txt:631
msgid ""
"The following examples illustrate the difference between plain lookups and "
"``select_related()`` lookups. Here's standard lookup::"
msgstr ""

# d3c31da099524924ac5548a93b0aa595
#: ../../ref/models/querysets.txt:640
msgid "And here's ``select_related`` lookup::"
msgstr ""

# 6d3f65516b68412885c1b8a8af750894
#: ../../ref/models/querysets.txt:649
msgid ""
"``select_related()`` follows foreign keys as far as possible. If you have "
"the following models::"
msgstr ""

# 6e0e27852bab4ff79a379bb587466f41
#: ../../ref/models/querysets.txt:664
msgid ""
"...then a call to ``Book.objects.select_related().get(id=4)`` will cache the "
"related ``Person`` *and* the related ``City``::"
msgstr ""

# bd53b062a030447bbe8cc3a4192cbf28
#: ../../ref/models/querysets.txt:675
msgid ""
"Note that, by default, ``select_related()`` does not follow foreign keys "
"that have ``null=True``."
msgstr ""

# a9a51e6ad87f41749c62b02ac3894246
#: ../../ref/models/querysets.txt:678
msgid ""
"Usually, using ``select_related()`` can vastly improve performance because "
"your app can avoid many database calls. However, there are times you are "
"only interested in specific related models, or have deeply nested sets of "
"relationships, and in these cases ``select_related()`` can be optimized by "
"explicitly passing the related field names you are interested in. Only the "
"specified relations will be followed."
msgstr ""

# 64f75c232d194498ae0efd1752a87e97
#: ../../ref/models/querysets.txt:685
msgid ""
"You can even do this for models that are more than one relation away by "
"separating the field names with double underscores, just as for filters. For "
"example, if you have this model::"
msgstr ""

# 701b765f53084e81b4996f8e970e3016
#: ../../ref/models/querysets.txt:699
msgid ""
"...and you only needed to work with the ``room`` and ``subject`` attributes, "
"you could write this::"
msgstr ""

# 723b668c3c8949a581031d289410e704
#: ../../ref/models/querysets.txt:704
msgid "This is also valid::"
msgstr ""

# c8e8a8c616bc4f1ea651cf7d8c1bcb2a
#: ../../ref/models/querysets.txt:708
msgid "...and would also pull in the ``building`` relation."
msgstr ""

# 84a6c7aa58d0424296fa55557c94e2c9
#: ../../ref/models/querysets.txt:710
msgid ""
"You can refer to any :class:`~django.db.models.ForeignKey` or :class:"
"`~django.db.models.OneToOneField` relation in the list of fields passed to "
"``select_related()``. This includes foreign keys that have ``null=True`` "
"(which are omitted in a no-parameter ``select_related()`` call). It's an "
"error to use both a list of fields and the ``depth`` parameter in the same "
"``select_related()`` call; they are conflicting options."
msgstr ""

# 35e081613b844687baa58d027c574510
#: ../../ref/models/querysets.txt:717
msgid ""
"You can also refer to the reverse direction of a :class:`~django.db.models."
"OneToOneField` in the list of fields passed to ``select_related`` — that is, "
"you can traverse a :class:`~django.db.models.OneToOneField` back to the "
"object on which the field is defined. Instead of specifying the field name, "
"use the :attr:`related_name <django.db.models.ForeignKey.related_name>` for "
"the field on the related object."
msgstr ""

# 5a2c11aebc424eac8a54e40f87aab013
#: ../../ref/models/querysets.txt:724
msgid ""
"The ``depth`` parameter to ``select_related()`` has been deprecated. You "
"should replace it with the use of the ``(*fields)`` listing specific related "
"fields instead as documented above."
msgstr ""

# 90d384ccaf5a45d88a8c4531fa267ea6
#: ../../ref/models/querysets.txt:729
msgid "A depth limit of relationships to follow can also be specified::"
msgstr ""

# e6d97dabca064a87b11028f6e5369a38
#: ../../ref/models/querysets.txt:735
msgid ""
"A :class:`~django.db.models.OneToOneField` is not traversed in the reverse "
"direction if you are performing a depth-based ``select_related()`` call."
msgstr ""

# c63af0fff93f4db28f073773933d3637
#: ../../ref/models/querysets.txt:739
msgid "prefetch_related"
msgstr ""

# a72f8c34d3d044aeaa4369b1dc396625
#: ../../ref/models/querysets.txt:745
msgid ""
"Returns a ``QuerySet`` that will automatically retrieve, in a single batch, "
"related objects for each of the specified lookups."
msgstr ""

# 43a05cec8d0a417b8cee5a95741c6558
#: ../../ref/models/querysets.txt:748
msgid ""
"This has a similar purpose to ``select_related``, in that both are designed "
"to stop the deluge of database queries that is caused by accessing related "
"objects, but the strategy is quite different."
msgstr ""

# 153813708d304afabb29304fa7683065
#: ../../ref/models/querysets.txt:768
msgid ""
"``select_related`` works by creating a SQL join and including the fields of "
"the related object in the ``SELECT`` statement. For this reason, "
"``select_related`` gets the related objects in the same database query. "
"However, to avoid the much larger result set that would result from joining "
"across a 'many' relationship, ``select_related`` is limited to single-valued "
"relationships - foreign key and one-to-one."
msgstr ""

# e1628137de1045ddaf9d323089cfa02e
#: ../../ref/models/querysets.txt:759
msgid ""
"``prefetch_related``, on the other hand, does a separate lookup for each "
"relationship, and does the 'joining' in Python. This allows it to prefetch "
"many-to-many and many-to-one objects, which cannot be done using "
"``select_related``, in addition to the foreign key and one-to-one "
"relationships that are supported by ``select_related``. It also supports "
"prefetching of :class:`~django.contrib.contenttypes.generic.GenericRelation` "
"and :class:`~django.contrib.contenttypes.generic.GenericForeignKey`."
msgstr ""

# 77d412ac184a45c5951aa9a842aaf419
#: ../../ref/models/querysets.txt:767
msgid "For example, suppose you have these models::"
msgstr ""

# 2eff45a989f5492da3aa300b5d72ab8b
#: ../../ref/models/querysets.txt:796
msgid "and run::"
msgstr ""

# 075bae43161340e5aa6473901863f4e3
#: ../../ref/models/querysets.txt:801
msgid ""
"The problem with this is that every time ``Pizza.__unicode__()`` asks for "
"``self.toppings.all()`` it has to query the database, so ``Pizza.objects."
"all()`` will run a query on the Toppings table for **every** item in the "
"Pizza ``QuerySet``."
msgstr ""

# d385a800a80e4daba4ab7c595cf1decd
#: ../../ref/models/querysets.txt:806
msgid "We can reduce to just two queries using ``prefetch_related``:"
msgstr ""

# ed1866a7a3ab48bbaaa5566d175945c5
#: ../../ref/models/querysets.txt:810
msgid ""
"This implies a ``self.toppings.all()`` for each ``Pizza``; now each time "
"``self.toppings.all()`` is called, instead of having to go to the database "
"for the items, it will find them in a prefetched ``QuerySet`` cache that was "
"populated in a single query."
msgstr ""

# 9614e6968f78475ba240a5df130142f9
#: ../../ref/models/querysets.txt:815
msgid ""
"That is, all the relevant toppings will have been fetched in a single query, "
"and used to make ``QuerySets`` that have a pre-filled cache of the relevant "
"results; these ``QuerySets`` are then used in the ``self.toppings.all()`` "
"calls."
msgstr ""

# 965f5da0aa7043fab2ad6685562286a9
#: ../../ref/models/querysets.txt:819
msgid ""
"The additional queries in ``prefetch_related()`` are executed after the "
"``QuerySet`` has begun to be evaluated and the primary query has been "
"executed."
msgstr ""

# b12d34cbae2748ec98b610017029280b
#: ../../ref/models/querysets.txt:822
msgid ""
"Note that the result cache of the primary ``QuerySet`` and all specified "
"related objects will then be fully loaded into memory. This changes the "
"typical behavior of ``QuerySets``, which normally try to avoid loading all "
"objects into memory before they are needed, even after a query has been "
"executed in the database."
msgstr ""

# 9896c396c2c84cf99c92cd7443dd9dd8
#: ../../ref/models/querysets.txt:830
msgid ""
"Remember that, as always with ``QuerySets``, any subsequent chained methods "
"which imply a different database query will ignore previously cached "
"results, and retrieve data using a fresh database query. So, if you write "
"the following:"
msgstr ""

# ed5f53069a004ea6925f0ee0492c8ffb
#: ../../ref/models/querysets.txt:838
msgid ""
"...then the fact that ``pizza.toppings.all()`` has been prefetched will not "
"help you. The ``prefetch_related('toppings')`` implied ``pizza.toppings."
"all()``, but ``pizza.toppings.filter()`` is a new and different query. The "
"prefetched cache can't help here; in fact it hurts performance, since you "
"have done a database query that you haven't used. So use this feature with "
"caution!"
msgstr ""

# 1f66c66661e74a599eb5274e27b7b36a
#: ../../ref/models/querysets.txt:845
msgid ""
"You can also use the normal join syntax to do related fields of related "
"fields. Suppose we have an additional model to the example above::"
msgstr ""

# 19d24cda83d64b1c9a84f1b4052676b4
#: ../../ref/models/querysets.txt:821
msgid "The following are all legal:"
msgstr ""

# 8023a5a5a5d6426ebae8c37376b642f4
#: ../../ref/models/querysets.txt:825
msgid ""
"This will prefetch all pizzas belonging to restaurants, and all toppings "
"belonging to those pizzas. This will result in a total of 3 database queries "
"- one for the restaurants, one for the pizzas, and one for the toppings."
msgstr ""

# dfb578dc8b9343c48cdce07555c03fd6
#: ../../ref/models/querysets.txt:831
msgid ""
"This will fetch the best pizza and all the toppings for the best pizza for "
"each restaurant. This will be done in 3 database queries - one for the "
"restaurants, one for the 'best pizzas', and one for one for the toppings."
msgstr ""

# 2a02fc4c69d446a3acbea9cfc6514bf3
#: ../../ref/models/querysets.txt:835
msgid ""
"Of course, the ``best_pizza`` relationship could also be fetched using "
"``select_related`` to reduce the query count to 2:"
msgstr ""

# 6e71c866abc14174982d5f944a6ec4fa
#: ../../ref/models/querysets.txt:840
msgid ""
"Since the prefetch is executed after the main query (which includes the "
"joins needed by ``select_related``), it is able to detect that the "
"``best_pizza`` objects have already been fetched, and it will skip fetching "
"them again."
msgstr ""

# 769db3e83b8f4408afd2fbdbf997b9a2
#: ../../ref/models/querysets.txt:844
msgid ""
"Chaining ``prefetch_related`` calls will accumulate the lookups that are "
"prefetched. To clear any ``prefetch_related`` behavior, pass `None` as a "
"parameter::"
msgstr ""

# 0644cecb8b4c450eaacee38b11f5ff88
#: ../../ref/models/querysets.txt:850
msgid ""
"One difference to note when using ``prefetch_related`` is that objects "
"created by a query can be shared between the different objects that they are "
"related to i.e. a single Python model instance can appear at more than one "
"point in the tree of objects that are returned. This will normally happen "
"with foreign key relationships. Typically this behavior will not be a "
"problem, and will in fact save both memory and CPU time."
msgstr ""

# ef5304f453a349a2b09ae35baa34a0a1
#: ../../ref/models/querysets.txt:857
msgid ""
"While ``prefetch_related`` supports prefetching ``GenericForeignKey`` "
"relationships, the number of queries will depend on the data. Since a "
"``GenericForeignKey`` can reference data in multiple tables, one query per "
"table referenced is needed, rather than one query for all the items. There "
"could be additional queries on the ``ContentType`` table if the relevant "
"rows have not already been fetched."
msgstr ""

# e61cfaa8aa634923bdc6da9edce18638
#: ../../ref/models/querysets.txt:895
msgid ""
"``prefetch_related`` in most cases will be implemented using a SQL query "
"that uses the 'IN' operator. This means that for a large ``QuerySet`` a "
"large 'IN' clause could be generated, which, depending on the database, "
"might have performance problems of its own when it comes to parsing or "
"executing the SQL query. Always profile for your use case!"
msgstr ""

# 1520d18294fe4d39ae8b894123cd228a
#: ../../ref/models/querysets.txt:870
msgid ""
"Note that if you use ``iterator()`` to run the query, ``prefetch_related()`` "
"calls will be ignored since these two optimizations do not make sense "
"together."
msgstr ""

# 1ebfc65a4d394668899cad10c4feba20
#: ../../ref/models/querysets.txt:874
msgid "extra"
msgstr ""

# 36e5e730a00c4441b85c34360fdbba60
#: ../../ref/models/querysets.txt:878
msgid ""
"Sometimes, the Django query syntax by itself can't easily express a complex "
"``WHERE`` clause. For these edge cases, Django provides the ``extra()`` "
"``QuerySet`` modifier — a hook for injecting specific clauses into the SQL "
"generated by a ``QuerySet``."
msgstr ""

# 7b1a682db70e4a498e0b37ebf6992ab2
#: ../../ref/models/querysets.txt:883
msgid ""
"By definition, these extra lookups may not be portable to different database "
"engines (because you're explicitly writing SQL code) and violate the DRY "
"principle, so you should avoid them if possible."
msgstr ""

# e0c9b9ef15564fee87ecc259e525e4a0
#: ../../ref/models/querysets.txt:887
msgid ""
"Specify one or more of ``params``, ``select``, ``where`` or ``tables``. None "
"of the arguments is required, but you should use at least one of them."
msgstr ""

# cfc8c93f625346cd9e82636e84db095b
#: ../../ref/models/querysets.txt:890
msgid "``select``"
msgstr ""

# a833fef3de674ce5b7dd72d202ba23e5
#: ../../ref/models/querysets.txt:892
msgid ""
"The ``select`` argument lets you put extra fields in the ``SELECT`` clause.  "
"It should be a dictionary mapping attribute names to SQL clauses to use to "
"calculate that attribute."
msgstr ""

# 71d2b99d70064f969f81872d1b79c2d0
#: ../../ref/models/querysets.txt:900
msgid ""
"As a result, each ``Entry`` object will have an extra attribute, "
"``is_recent``, a boolean representing whether the entry's ``pub_date`` is "
"greater than Jan. 1, 2006."
msgstr ""

# b4ce6b753040412e8207d22a22c339e5
#: ../../ref/models/querysets.txt:904
msgid ""
"Django inserts the given SQL snippet directly into the ``SELECT`` statement, "
"so the resulting SQL of the above example would be something like::"
msgstr ""

# d41c5862ecc74e768e35f2f5c392e010
#: ../../ref/models/querysets.txt:912
msgid ""
"The next example is more advanced; it does a subquery to give each resulting "
"``Blog`` object an ``entry_count`` attribute, an integer count of associated "
"``Entry`` objects::"
msgstr ""

# 21b2b416eab245cfb760df8e45efbf1b
#: ../../ref/models/querysets.txt:922
msgid ""
"In this particular case, we're exploiting the fact that the query will "
"already contain the ``blog_blog`` table in its ``FROM`` clause."
msgstr ""

# ee50b637ad114240a208c9fa0353c625
#: ../../ref/models/querysets.txt:925
msgid "The resulting SQL of the above example would be::"
msgstr ""

# 03d81d7965e24e8b8f058cb578a93f16
#: ../../ref/models/querysets.txt:930
msgid ""
"Note that the parentheses required by most database engines around "
"subqueries are not required in Django's ``select`` clauses. Also note that "
"some database backends, such as some MySQL versions, don't support "
"subqueries."
msgstr ""

# 59ebad5e65a54d23ba1858d5838ee415
#: ../../ref/models/querysets.txt:935
msgid ""
"In some rare cases, you might wish to pass parameters to the SQL fragments "
"in ``extra(select=...)``. For this purpose, use the ``select_params`` "
"parameter. Since ``select_params`` is a sequence and the ``select`` "
"attribute is a dictionary, some care is required so that the parameters are "
"matched up correctly with the extra select pieces. In this situation, you "
"should use a :class:`django.utils.datastructures.SortedDict` for the "
"``select`` value, not just a normal Python dictionary."
msgstr ""

# c78ea0ae4bed485b81fc0db67c20a04f
#: ../../ref/models/querysets.txt:944
msgid "This will work, for example::"
msgstr ""

# 2f7cb240a46841f0991035c9b7e893db
#: ../../ref/models/querysets.txt:950
msgid ""
"The only thing to be careful about when using select parameters in "
"``extra()`` is to avoid using the substring ``\"%%s\"`` (that's *two* "
"percent characters before the ``s``) in the select strings. Django's "
"tracking of parameters looks for ``%s`` and an escaped ``%`` character like "
"this isn't detected. That will lead to incorrect results."
msgstr ""

# 4bffcafd75484a05b2754c60bca8b84d
#: ../../ref/models/querysets.txt:956
msgid "``where`` / ``tables``"
msgstr ""

# 3edebae90c10415e875e3f2564cf7fe4
#: ../../ref/models/querysets.txt:958
msgid ""
"You can define explicit SQL ``WHERE`` clauses — perhaps to perform non-"
"explicit joins — by using ``where``. You can manually add tables to the SQL "
"``FROM`` clause by using ``tables``."
msgstr ""

# 988d8356371d4447a72b337fa5ba5f72
#: ../../ref/models/querysets.txt:962
msgid ""
"``where`` and ``tables`` both take a list of strings. All ``where`` "
"parameters are \"AND\"ed to any other search criteria."
msgstr ""

# 95f597518e43482684ed7647f6aa8514
#: ../../ref/models/querysets.txt:969
msgid "...translates (roughly) into the following SQL::"
msgstr ""

# da65833d993841b7b58d272ed642bf1c
#: ../../ref/models/querysets.txt:973
msgid ""
"Be careful when using the ``tables`` parameter if you're specifying tables "
"that are already used in the query. When you add extra tables via the "
"``tables`` parameter, Django assumes you want that table included an extra "
"time, if it is already included. That creates a problem, since the table "
"name will then be given an alias. If a table appears multiple times in an "
"SQL statement, the second and subsequent occurrences must use aliases so the "
"database can tell them apart. If you're referring to the extra table you "
"added in the extra ``where`` parameter this is going to cause errors."
msgstr ""

# 11fd070e74c948979036f2d580f44eac
#: ../../ref/models/querysets.txt:983
msgid ""
"Normally you'll only be adding extra tables that don't already appear in the "
"query. However, if the case outlined above does occur, there are a few "
"solutions. First, see if you can get by without including the extra table "
"and use the one already in the query. If that isn't possible, put your "
"``extra()`` call at the front of the queryset construction so that your "
"table is the first use of that table. Finally, if all else fails, look at "
"the query produced and rewrite your ``where`` addition to use the alias "
"given to your extra table. The alias will be the same each time you "
"construct the queryset in the same way, so you can rely upon the alias name "
"to not change."
msgstr ""

# 21206ae1f66048398742545f3f8380f4
#: ../../ref/models/querysets.txt:994
msgid "``order_by``"
msgstr ""

# da06649a99e646f2a8a803b319a3ffbe
#: ../../ref/models/querysets.txt:996
msgid ""
"If you need to order the resulting queryset using some of the new fields or "
"tables you have included via ``extra()`` use the ``order_by`` parameter to "
"``extra()`` and pass in a sequence of strings. These strings should either "
"be model fields (as in the normal :meth:`order_by()` method on querysets), "
"of the form ``table_name.column_name`` or an alias for a column that you "
"specified in the ``select`` parameter to ``extra()``."
msgstr ""

# 077af2cecb2d4a5a979c298183c5aec6
#: ../../ref/models/querysets.txt:1009
msgid ""
"This would sort all the items for which ``is_recent`` is true to the front "
"of the result set (``True`` sorts before ``False`` in a descending ordering)."
msgstr ""

# b0c961b111a348d1aa6fe48654b269ac
#: ../../ref/models/querysets.txt:1013
msgid ""
"This shows, by the way, that you can make multiple calls to ``extra()`` and "
"it will behave as you expect (adding new constraints each time)."
msgstr ""

# ffaae2712e6940728bc7010cd0e09b52
#: ../../ref/models/querysets.txt:1016
msgid "``params``"
msgstr ""

# 24e7e7e89c4b4dc5a343358f9a66a6ba
#: ../../ref/models/querysets.txt:1018
msgid ""
"The ``where`` parameter described above may use standard Python database "
"string placeholders — ``'%s'`` to indicate parameters the database engine "
"should automatically quote. The ``params`` argument is a list of any extra "
"parameters to be substituted."
msgstr ""

# d992334ee58e4a828d65347b9746e3ce
#: ../../ref/models/querysets.txt:1027
msgid ""
"Always use ``params`` instead of embedding values directly into ``where`` "
"because ``params`` will ensure values are quoted correctly according to your "
"particular backend. For example, quotes will be escaped correctly."
msgstr ""

# 718ac5a775e34023b9f1e599555d0348
#: ../../ref/models/querysets.txt:1032
msgid "Bad::"
msgstr ""

# a6ca83bb2244454081ed9a8d4070ab60
#: ../../ref/models/querysets.txt:1036
msgid "Good::"
msgstr ""

# 1e93a70cba3e423abf45dc0ae3b8613b
#: ../../ref/models/querysets.txt:1041
msgid "defer"
msgstr ""

# ff1168785269415da6a54c9e9206a44e
#: ../../ref/models/querysets.txt:1045
msgid ""
"In some complex data-modeling situations, your models might contain a lot of "
"fields, some of which could contain a lot of data (for example, text "
"fields), or require expensive processing to convert them to Python objects. "
"If you are using the results of a queryset in some situation where you don't "
"know if you need those particular fields when you initially fetch the data, "
"you can tell Django not to retrieve them from the database."
msgstr ""

# 3466e2f254904fb6b4e9267518316f3d
#: ../../ref/models/querysets.txt:1052
msgid ""
"This is done by passing the names of the fields to not load to ``defer()``::"
msgstr ""

# b3f06475b39545ce9a11c98970a7f85c
#: ../../ref/models/querysets.txt:1056
msgid ""
"A queryset that has deferred fields will still return model instances. Each "
"deferred field will be retrieved from the database if you access that field "
"(one at a time, not all the deferred fields at once)."
msgstr ""

# 2587ce36220a47f79a5b6d8366b88c88
#: ../../ref/models/querysets.txt:1060
msgid ""
"You can make multiple calls to ``defer()``. Each call adds new fields to the "
"deferred set::"
msgstr ""

# a043107c56684eb495a51f56ab5fa4fc
#: ../../ref/models/querysets.txt:1066
msgid ""
"The order in which fields are added to the deferred set does not matter. "
"Calling ``defer()`` with a field name that has already been deferred is "
"harmless (the field will still be deferred)."
msgstr ""

# b7f0b4bc5edc42b0ab4466cf1e402f57
#: ../../ref/models/querysets.txt:1070
msgid ""
"You can defer loading of fields in related models (if the related models are "
"loading via :meth:`select_related()`) by using the standard double-"
"underscore notation to separate related fields::"
msgstr ""

# cce4b939430c49429be947409642fdec
#: ../../ref/models/querysets.txt:1076
msgid ""
"If you want to clear the set of deferred fields, pass ``None`` as a "
"parameter to ``defer()``::"
msgstr ""

# c68a1a8bb18847fd9880b1768f0a0f22
#: ../../ref/models/querysets.txt:1084
msgid ""
"Some fields in a model won't be deferred, even if you ask for them. You can "
"never defer the loading of the primary key. If you are using :meth:"
"`select_related()` to retrieve related models, you shouldn't defer the "
"loading of the field that connects from the primary model to the related "
"one, doing so will result in an error."
msgstr ""

# 3eacb640aadd4d619b34b3522e85428d
#: ../../ref/models/querysets.txt:1092
msgid ""
"The ``defer()`` method (and its cousin, :meth:`only()`, below) are only for "
"advanced use-cases. They provide an optimization for when you have analyzed "
"your queries closely and understand *exactly* what information you need and "
"have measured that the difference between returning the fields you need and "
"the full set of fields for the model will be significant."
msgstr ""

# ff73df4e2477480ca6678865c1931ec7
#: ../../ref/models/querysets.txt:1098
msgid ""
"Even if you think you are in the advanced use-case situation, **only use "
"defer() when you cannot, at queryset load time, determine if you will need "
"the extra fields or not**. If you are frequently loading and using a "
"particular subset of your data, the best choice you can make is to normalize "
"your models and put the non-loaded data into a separate model (and database "
"table). If the columns *must* stay in the one table for some reason, create "
"a model with ``Meta.managed = False`` (see the :attr:`managed attribute "
"<django.db.models.Options.managed>` documentation) containing just the "
"fields you normally need to load and use that where you might otherwise call "
"``defer()``. This makes your code more explicit to the reader, is slightly "
"faster and consumes a little less memory in the Python process."
msgstr ""

# 45289cbcabea4ea6b46e3eff424475bf
# 1291e093f67f41f2ae995805d749379f
#: ../../ref/models/querysets.txt:1115 ../../ref/models/querysets.txt:1167
msgid ""
"When calling :meth:`~django.db.models.Model.save()` for instances with "
"deferred fields, only the loaded fields will be saved. See :meth:`~django.db."
"models.Model.save()` for more details."
msgstr ""

# 8d24a82c399b447080f8bf62512c1b0f
#: ../../ref/models/querysets.txt:1121
msgid "only"
msgstr ""

# 868bfc29c8fe457b8a189f6b1c97ebcc
#: ../../ref/models/querysets.txt:1125
msgid ""
"The ``only()`` method is more or less the opposite of :meth:`defer()`. You "
"call it with the fields that should *not* be deferred when retrieving a "
"model.  If you have a model where almost all the fields need to be deferred, "
"using ``only()`` to specify the complementary set of fields can result in "
"simpler code."
msgstr ""

# c8e157be781646919707f07384971525
#: ../../ref/models/querysets.txt:1131
msgid ""
"Suppose you have a model with fields ``name``, ``age`` and ``biography``. "
"The following two querysets are the same, in terms of deferred fields::"
msgstr ""

# 4f5986ea7200421abe0ac5943e115827
#: ../../ref/models/querysets.txt:1137
msgid ""
"Whenever you call ``only()`` it *replaces* the set of fields to load "
"immediately. The method's name is mnemonic: **only** those fields are loaded "
"immediately; the remainder are deferred. Thus, successive calls to "
"``only()`` result in only the final fields being considered::"
msgstr ""

# fc36074e1240473eabfc8f2e4632d8d3
#: ../../ref/models/querysets.txt:1145
msgid ""
"Since ``defer()`` acts incrementally (adding fields to the deferred list), "
"you can combine calls to ``only()`` and ``defer()`` and things will behave "
"logically::"
msgstr ""

# 7ce73d4af5af413b90279c2ef66d18df
#: ../../ref/models/querysets.txt:1158
msgid ""
"All of the cautions in the note for the :meth:`defer` documentation apply to "
"``only()`` as well. Use it cautiously and only after exhausting your other "
"options. Also note that using :meth:`only` and omitting a field requested "
"using :meth:`select_related` is an error as well."
msgstr ""

# 9e0c14c8ba0148709adb6acc64e72d41
#: ../../ref/models/querysets.txt:1172
msgid "using"
msgstr ""

# fdec93a0ab94414ca74e1d6ed77a81b5
#: ../../ref/models/querysets.txt:1176
msgid ""
"This method is for controlling which database the ``QuerySet`` will be "
"evaluated against if you are using more than one database.  The only "
"argument this method takes is the alias of a database, as defined in :"
"setting:`DATABASES`."
msgstr ""

# 59cbce1d1f6f4c67925f04677ba15a40
#: ../../ref/models/querysets.txt:1190
msgid "select_for_update"
msgstr ""

# 1564866904fe4d168ba1cbc2507d6810
#: ../../ref/models/querysets.txt:1196
msgid ""
"Returns a queryset that will lock rows until the end of the transaction, "
"generating a ``SELECT ... FOR UPDATE`` SQL statement on supported databases."
msgstr ""

# a89c9a026eb444179c5edc46e248cc5b
#: ../../ref/models/querysets.txt:1203
msgid ""
"All matched entries will be locked until the end of the transaction block, "
"meaning that other transactions will be prevented from changing or acquiring "
"locks on them."
msgstr ""

# 415839b1a44443dd97f0c77133e0cf54
#: ../../ref/models/querysets.txt:1207
msgid ""
"Usually, if another transaction has already acquired a lock on one of the "
"selected rows, the query will block until the lock is released. If this is "
"not the behavior you want, call ``select_for_update(nowait=True)``. This "
"will make the call non-blocking. If a conflicting lock is already acquired "
"by another transaction, :exc:`~django.db.DatabaseError` will be raised when "
"the queryset is evaluated."
msgstr ""

# de2ea60817da4c23bdf2073f4d47d5e4
#: ../../ref/models/querysets.txt:1214
msgid ""
"Note that using ``select_for_update()`` will cause the current transaction "
"to be considered dirty, if under transaction management. This is to ensure "
"that Django issues a ``COMMIT`` or ``ROLLBACK``, releasing any locks held by "
"the ``SELECT FOR UPDATE``."
msgstr ""

# 28306b234c474afe8facc1a76a0a04ef
#: ../../ref/models/querysets.txt:1219
msgid ""
"Currently, the ``postgresql_psycopg2``, ``oracle``, and ``mysql`` database "
"backends support ``select_for_update()``. However, MySQL has no support for "
"the ``nowait`` argument. Obviously, users of external third-party backends "
"should check with their backend's documentation for specifics in those cases."
msgstr ""

# 86664544a8fa4cdc8fae62542b3537fa
#: ../../ref/models/querysets.txt:1224
msgid ""
"Passing ``nowait=True`` to ``select_for_update`` using database backends "
"that do not support ``nowait``, such as MySQL, will cause a :exc:`~django.db."
"DatabaseError` to be raised. This is in order to prevent code unexpectedly "
"blocking."
msgstr ""

# 2a2ac3476bb04093b25d73412636df17
#: ../../ref/models/querysets.txt:1229
msgid ""
"Using ``select_for_update`` on backends which do not support ``SELECT ... "
"FOR UPDATE`` (such as SQLite) will have no effect."
msgstr ""

# 9809dcebf4094ef3a5b902a3975161ab
#: ../../ref/models/querysets.txt:1233
msgid "Methods that do not return QuerySets"
msgstr ""

# 0546cc8b543d4ef58725ba026cf49b60
#: ../../ref/models/querysets.txt:1235
msgid ""
"The following ``QuerySet`` methods evaluate the ``QuerySet`` and return "
"something *other than* a ``QuerySet``."
msgstr ""

# bd7c092bb3ba4353bda72fb07cb7b062
#: ../../ref/models/querysets.txt:1238
msgid ""
"These methods do not use a cache (see :ref:`caching-and-querysets`). Rather, "
"they query the database each time they're called."
msgstr ""

# 4ffbca53e6ee489a9c111abe3c25552f
#: ../../ref/models/querysets.txt:1242
msgid "get"
msgstr ""

# 16d5584010a1457582c4c987b4d23ed3
#: ../../ref/models/querysets.txt:1246
msgid ""
"Returns the object matching the given lookup parameters, which should be in "
"the format described in `Field lookups`_."
msgstr ""

# 9a0a9b66c3704c1b92ec54c320eb846e
#: ../../ref/models/querysets.txt:1249
msgid ""
"``get()`` raises :exc:`~django.core.exceptions.MultipleObjectsReturned` if "
"more than one object was found. The :exc:`~django.core.exceptions."
"MultipleObjectsReturned` exception is an attribute of the model class."
msgstr ""

# 3601ffa013434cdd9171339a729a695f
#: ../../ref/models/querysets.txt:1254
msgid ""
"``get()`` raises a :exc:`~django.core.exceptions.DoesNotExist` exception if "
"an object wasn't found for the given parameters. This exception is also an "
"attribute of the model class. Example::"
msgstr ""

# 73c54949e3de434e966ee1f77aa55174
#: ../../ref/models/querysets.txt:1260
msgid ""
"The :exc:`~django.core.exceptions.DoesNotExist` exception inherits from :exc:"
"`django.core.exceptions.ObjectDoesNotExist`, so you can target multiple :exc:"
"`~django.core.exceptions.DoesNotExist` exceptions. Example::"
msgstr ""

# 9e675b1be89a408f938bd1569621eace
#: ../../ref/models/querysets.txt:1272
msgid "create"
msgstr ""

# 6fad8bbccc1447f08b1436c48c279dc0
#: ../../ref/models/querysets.txt:1276
msgid ""
"A convenience method for creating an object and saving it all in one step.  "
"Thus::"
msgstr ""

# 97afc77b90bc4014a93155692b3b8dbb
#: ../../ref/models/querysets.txt:1280
msgid "and::"
msgstr ""

# af71704668eb4e8b95498fc67263cad8
#: ../../ref/models/querysets.txt:1285
msgid "are equivalent."
msgstr ""

# d5eca200e7514c6d9eac5cddb98fef41
#: ../../ref/models/querysets.txt:1287
msgid ""
"The :ref:`force_insert <ref-models-force-insert>` parameter is documented "
"elsewhere, but all it means is that a new object will always be created. "
"Normally you won't need to worry about this. However, if your model contains "
"a manual primary key value that you set and if that value already exists in "
"the database, a call to ``create()`` will fail with an :exc:`~django.db."
"IntegrityError` since primary keys must be unique. Be prepared to handle the "
"exception if you are using manual primary keys."
msgstr ""

# 31b4111bba59446c8ef1b0df4ef7ad8d
#: ../../ref/models/querysets.txt:1296
msgid "get_or_create"
msgstr ""

# 718b271e8d514702802dec3bab27675e
#: ../../ref/models/querysets.txt:1331
msgid ""
"A convenience method for looking up an object with the given ``kwargs``, "
"creating one if necessary."
msgstr ""

# 3e27638d51ba4c3ca1b987cb4f697a43
#: ../../ref/models/querysets.txt:1303
msgid ""
"Returns a tuple of ``(object, created)``, where ``object`` is the retrieved "
"or created object and ``created`` is a boolean specifying whether a new "
"object was created."
msgstr ""

# 71bf53e3ae4d4ab9b211929b666429bf
#: ../../ref/models/querysets.txt:1338
msgid "This is meant as a shortcut to boilerplatish code. For example::"
msgstr ""

# 6e01a1f7de044cbe9653b4c3d6734fe3
#: ../../ref/models/querysets.txt:1316
msgid ""
"This pattern gets quite unwieldy as the number of fields in a model goes up. "
"The above example can be rewritten using ``get_or_create()`` like so::"
msgstr ""

# 429eb722cfad4b6395750f1276c22b97
#: ../../ref/models/querysets.txt:1322
msgid ""
"Any keyword arguments passed to ``get_or_create()`` — *except* an optional "
"one called ``defaults`` — will be used in a :meth:`get()` call. If an object "
"is found, ``get_or_create()`` returns a tuple of that object and ``False``. "
"If multiple objects are found, ``get_or_create`` raises :exc:`~django.core."
"exceptions.MultipleObjectsReturned`. If an object is *not* found, "
"``get_or_create()`` will instantiate and save a new object, returning a "
"tuple of the new object and ``True``. The new object will be created roughly "
"according to this algorithm::"
msgstr ""

# 8f0e717659254e5f8e53b16f359f095d
#: ../../ref/models/querysets.txt:1337
msgid ""
"In English, that means start with any non-``'defaults'`` keyword argument "
"that doesn't contain a double underscore (which would indicate a non-exact "
"lookup). Then add the contents of ``defaults``, overriding any keys if "
"necessary, and use the result as the keyword arguments to the model class. "
"As hinted at above, this is a simplification of the algorithm that is used, "
"but it contains all the pertinent details. The internal implementation has "
"some more error-checking than this and handles some extra edge-conditions; "
"if you're interested, read the code."
msgstr ""

# 17319a284de94728929d1b241aa541ab
#: ../../ref/models/querysets.txt:1346
msgid ""
"If you have a field named ``defaults`` and want to use it as an exact lookup "
"in ``get_or_create()``, just use ``'defaults__exact'``, like so::"
msgstr ""

# 97c5de5d1e7547d29a4c03b9c84c84b5
#: ../../ref/models/querysets.txt:1351
msgid ""
"The ``get_or_create()`` method has similar error behavior to :meth:"
"`create()` when you're using manually specified primary keys. If an object "
"needs to be created and the key already exists in the database, an :exc:"
"`~django.db.IntegrityError` will be raised."
msgstr ""

# e0baf348add044f59cbcecff03305e7b
#: ../../ref/models/querysets.txt:1386
msgid ""
"This method is atomic assuming correct usage, correct database "
"configuration, and correct behavior of the underlying database. However, if "
"uniqueness is not enforced at the database level for the ``kwargs`` used in "
"a ``get_or_create`` call (see :attr:`~django.db.models.Field.unique` or :"
"attr:`~django.db.models.Options.unique_together`), this method is prone to a "
"race-condition which can result in multiple rows with the same parameters "
"being inserted simultaneously."
msgstr ""

# 4ce3804511a248c8a0d01317ac8deb63
#: ../../ref/models/querysets.txt:1394
msgid ""
"If you are using MySQL, be sure to use the ``READ COMMITTED`` isolation "
"level rather than ``REPEATABLE READ`` (the default), otherwise you may see "
"cases where ``get_or_create`` will raise an :exc:`~django.db.IntegrityError` "
"but the object won't appear in a subsequent :meth:`~django.db.models.query."
"QuerySet.get` call."
msgstr ""

# 853a65e9654d486dae9b8e10d212a903
#: ../../ref/models/querysets.txt:1400
msgid ""
"Finally, a word on using ``get_or_create()`` in Django views: please make "
"sure to use it only in ``POST`` requests unless you have a good reason not "
"to ``GET`` requests shouldn't have any effect on data; use ``POST`` whenever "
"a request to a page has a side effect on your data. For more, see `Safe "
"methods`_ in the HTTP spec."
msgstr ""

# 14046fe911f248d0ba73cf4ae1fc674b
#: ../../ref/models/querysets.txt:1409
msgid "bulk_create"
msgstr ""

# 666a28c806fd49a5b0a25b86c6eefc29
#: ../../ref/models/querysets.txt:1373
msgid ""
"This method inserts the provided list of objects into the database in an "
"efficient manner (generally only 1 query, no matter how many objects there "
"are)::"
msgstr ""

# 29164c8362b743209b9659a31ebdb86d
#: ../../ref/models/querysets.txt:1383
msgid "This has a number of caveats though:"
msgstr ""

# 7bc72833d56a496fa64c09bcf55b45df
#: ../../ref/models/querysets.txt:1385
msgid ""
"The model's ``save()`` method will not be called, and the ``pre_save`` and "
"``post_save`` signals will not be sent."
msgstr ""

# 009dbb299017481baf942c3169fb18a0
#: ../../ref/models/querysets.txt:1387
msgid ""
"It does not work with child models in a multi-table inheritance scenario."
msgstr ""

# 2372ded384344ab980e02d37a58abbe9
#: ../../ref/models/querysets.txt:1388
msgid ""
"If the model's primary key is an :class:`~django.db.models.AutoField` it "
"does not retrieve and set the primary key attribute, as ``save()`` does."
msgstr ""

# 9aaf02e83c0646d781746add16e12828
#: ../../ref/models/querysets.txt:1391
msgid ""
"The ``batch_size`` parameter controls how many objects are created in single "
"query. The default is to create all objects in one batch, except for SQLite "
"where the default is such that at maximum 999 variables per query is used."
msgstr ""

# 0d9d9e39724341678d9cc1b12dbd1870
#: ../../ref/models/querysets.txt:1399
msgid "count"
msgstr ""

# 9e4a11382498445691f46e384d630907
#: ../../ref/models/querysets.txt:1403
msgid ""
"Returns an integer representing the number of objects in the database "
"matching the ``QuerySet``. The ``count()`` method never raises exceptions."
msgstr ""

# 0d3387aac4994712b1d45cff01e431e0
#: ../../ref/models/querysets.txt:1414
msgid ""
"A ``count()`` call performs a ``SELECT COUNT(*)`` behind the scenes, so you "
"should always use ``count()`` rather than loading all of the record into "
"Python objects and calling ``len()`` on the result (unless you need to load "
"the objects into memory anyway, in which case ``len()`` will be faster)."
msgstr ""

# 62f6f40d398b4e9aa2bdabd2cda08293
#: ../../ref/models/querysets.txt:1419
msgid ""
"Depending on which database you're using (e.g. PostgreSQL vs. MySQL), "
"``count()`` may return a long integer instead of a normal Python integer. "
"This is an underlying implementation quirk that shouldn't pose any real-"
"world problems."
msgstr ""

# c6aa822be60b47148ef59c8b6cc6c517
#: ../../ref/models/querysets.txt:1425
msgid "in_bulk"
msgstr ""

# 428857579eb34a29893ba0c5ea94bd52
#: ../../ref/models/querysets.txt:1429
msgid ""
"Takes a list of primary-key values and returns a dictionary mapping each "
"primary-key value to an instance of the object with the given ID."
msgstr ""

# 3a2914c65135418aa803101a28f5a799
#: ../../ref/models/querysets.txt:1441
msgid ""
"If you pass ``in_bulk()`` an empty list, you'll get an empty dictionary."
msgstr ""

# 5c02b639e1f3485bbc89eed0f70acaed
#: ../../ref/models/querysets.txt:1444
msgid "iterator"
msgstr ""

# 31ded63458de42aeba44290eb5492f9d
#: ../../ref/models/querysets.txt:1448
msgid ""
"Evaluates the ``QuerySet`` (by performing the query) and returns an iterator "
"(see :pep:`234`) over the results. A ``QuerySet`` typically caches its "
"results internally so that repeated evaluations do not result in additional "
"queries. In contrast, ``iterator()`` will read results directly, without "
"doing any caching at the ``QuerySet`` level (internally, the default "
"iterator calls ``iterator()`` and caches the return value). For a "
"``QuerySet`` which returns a large number of objects that you only need to "
"access once, this can result in better performance and a significant "
"reduction in memory."
msgstr ""

# e720c087395847e2a12ab5d792c3c1c2
#: ../../ref/models/querysets.txt:1457
msgid ""
"Note that using ``iterator()`` on a ``QuerySet`` which has already been "
"evaluated will force it to evaluate again, repeating the query."
msgstr ""

# 873720d739554ced876258bb88a4e1ba
#: ../../ref/models/querysets.txt:1460
msgid ""
"Also, use of ``iterator()`` causes previous ``prefetch_related()`` calls to "
"be ignored since these two optimizations do not make sense together."
msgstr ""

# 4e896f57b5e242ecb9d1809feff11b3f
#: ../../ref/models/querysets.txt:1465
msgid ""
"Some Python database drivers like ``psycopg2`` perform caching if using "
"client side cursors (instantiated with ``connection.cursor()`` and what "
"Django's ORM uses). Using ``iterator()`` does not affect caching at the "
"database driver level. To disable this caching, look at `server side "
"cursors`_."
msgstr ""

# ea1718cbb3154a9abd8e497edd8941ef
#: ../../ref/models/querysets.txt:1474
msgid "latest"
msgstr ""

# 4db3df7e50e04d649356aafba78bd6b3
#: ../../ref/models/querysets.txt:1478
msgid ""
"Returns the latest object in the table, by date, using the ``field_name`` "
"provided as the date field."
msgstr ""

# 86e527ee8cc2460dba96cfdcc0c7894c
#: ../../ref/models/querysets.txt:1481
msgid ""
"This example returns the latest ``Entry`` in the table, according to the "
"``pub_date`` field::"
msgstr ""

# f4736bb8e213453ea78949ff89a92771
#: ../../ref/models/querysets.txt:1486
msgid ""
"If your model's :ref:`Meta <meta-options>` specifies :attr:`~django.db."
"models.Options.get_latest_by`, you can leave off the ``field_name`` argument "
"to ``latest()``. Django will use the field specified in :attr:`~django.db."
"models.Options.get_latest_by` by default."
msgstr ""

# b9743c530f2246548005f88892e4e82a
#: ../../ref/models/querysets.txt:1491
msgid ""
"Like :meth:`get()`, ``latest()`` raises :exc:`~django.core.exceptions."
"DoesNotExist` if there is no object with the given parameters."
msgstr ""

# c002694a3b4e457d9cf8337cff3ee0ab
#: ../../ref/models/querysets.txt:1495
msgid "Note ``latest()`` exists purely for convenience and readability."
msgstr ""

# b357cfdc6af14fd7b9842e7d9d33dc18
#: ../../ref/models/querysets.txt:1498
msgid "aggregate"
msgstr ""

# e3d10694e1fe4ed7ad74ef268a28c4b5
#: ../../ref/models/querysets.txt:1502
msgid ""
"Returns a dictionary of aggregate values (averages, sums, etc) calculated "
"over the ``QuerySet``. Each argument to ``aggregate()`` specifies a value "
"that will be included in the dictionary that is returned."
msgstr ""

# 6fccf3d833c440fe8a13673b52a796b2
#: ../../ref/models/querysets.txt:1509
msgid ""
"Aggregates specified using keyword arguments will use the keyword as the "
"name for the annotation. Anonymous arguments will have a name generated for "
"them based upon the name of the aggregate function and the model field that "
"is being aggregated."
msgstr ""

# edec1b54be5e43f098e3f072d9da3dbb
#: ../../ref/models/querysets.txt:1514
msgid ""
"For example, when you are working with blog entries, you may want to know "
"the number of authors that have contributed blog entries::"
msgstr ""

# 0dc816fbd5324026bc0d8da3534c3a30
#: ../../ref/models/querysets.txt:1520
msgid ""
"By using a keyword argument to specify the aggregate function, you can "
"control the name of the aggregation value that is returned::"
msgstr ""

# d9a134da48f044a89a69e64dbd2c36de
#: ../../ref/models/querysets.txt:1530
msgid "exists"
msgstr ""

# 3ed55126702b48139a8e737e3c21c0f7
#: ../../ref/models/querysets.txt:1534
msgid ""
"Returns ``True`` if the :class:`.QuerySet` contains any results, and "
"``False`` if not. This tries to perform the query in the simplest and "
"fastest way possible, but it *does* execute nearly the same query as a "
"normal :class:`.QuerySet` query."
msgstr ""

# c6f80856803f4aad9faab0111e6d8ca2
#: ../../ref/models/querysets.txt:1539
msgid ""
":meth:`~.QuerySet.exists` is useful for searches relating to both object "
"membership in a :class:`.QuerySet` and to the existence of any objects in a :"
"class:`.QuerySet`, particularly in the context of a large :class:`.QuerySet`."
msgstr ""

# 7063be05dc3a4bb1bd7276cc387142ba
#: ../../ref/models/querysets.txt:1543
msgid ""
"The most efficient method of finding whether a model with a unique field (e."
"g. ``primary_key``) is a member of a :class:`.QuerySet` is::"
msgstr ""

# 915bbd4a8546425dbf9b6c2e3b69ec90
#: ../../ref/models/querysets.txt:1550
msgid ""
"Which will be faster than the following which requires evaluating and "
"iterating through the entire queryset::"
msgstr ""

# 620a96f645f94800b9229954f38eff5d
#: ../../ref/models/querysets.txt:1556
msgid "And to find whether a queryset contains any items::"
msgstr ""

# 6f350c098d8a4456bfeb5bd2d73611a6
#: ../../ref/models/querysets.txt:1561
msgid "Which will be faster than::"
msgstr ""

# 92a1e2e8db1c43aeafd99507339622ef
#: ../../ref/models/querysets.txt:1566
msgid ""
"... but not by a large degree (hence needing a large queryset for efficiency "
"gains)."
msgstr ""

# 9302104c04834b7ebe655b61ddeb84fc
#: ../../ref/models/querysets.txt:1569
msgid ""
"Additionally, if a ``some_query_set`` has not yet been evaluated, but you "
"know that it will be at some point, then using ``some_query_set.exists()`` "
"will do more overall work (one query for the existence check plus an extra "
"one to later retrieve the results) than simply using "
"``bool(some_query_set)``, which retrieves the results and then checks if any "
"were returned."
msgstr ""

# d93455f3b2ff4a4eac8a9d9f065d9b5c
#: ../../ref/models/querysets.txt:1576
msgid "update"
msgstr ""

# b8a6540b4b5c409392b4a9eaac18d924
#: ../../ref/models/querysets.txt:1580
msgid ""
"Performs an SQL update query for the specified fields, and returns the "
"number of rows matched (which may not be equal to the number of rows updated "
"if some rows already have the new value)."
msgstr ""

# 948511861efc4beaa06165c6ed424a9c
#: ../../ref/models/querysets.txt:1584
msgid ""
"For example, to turn comments off for all blog entries published in 2010, "
"you could do this::"
msgstr ""

# e28ff078d960494eb0235d86801945e2
#: ../../ref/models/querysets.txt:1589
msgid ""
"(This assumes your ``Entry`` model has fields ``pub_date`` and "
"``comments_on``.)"
msgstr ""

# a8af2c2f6c2244bdbede047289e077ba
#: ../../ref/models/querysets.txt:1591
msgid ""
"You can update multiple fields — there's no limit on how many. For example, "
"here we update the ``comments_on`` and ``headline`` fields::"
msgstr ""

# ee318b7195c14f1dbc6f6adfa4d9a993
#: ../../ref/models/querysets.txt:1596
msgid ""
"The ``update()`` method is applied instantly, and the only restriction on "
"the :class:`.QuerySet` that is updated is that it can only update columns in "
"the model's main table, not on related models. You can't do this, for "
"example::"
msgstr ""

# cfcee1d7d0714f91aadba0decd00748b
#: ../../ref/models/querysets.txt:1602
msgid "Filtering based on related fields is still possible, though::"
msgstr ""

# 86f7d4582074477f98c5796717017517
#: ../../ref/models/querysets.txt:1606
msgid ""
"You cannot call ``update()`` on a :class:`.QuerySet` that has had a slice "
"taken or can otherwise no longer be filtered."
msgstr ""

# cabdae4d2b7f438080105d8c0f6c902e
#: ../../ref/models/querysets.txt:1609
msgid "The ``update()`` method returns the number of affected rows::"
msgstr ""

# 96dfea6b71bb44528e6cb89f7d3dfd94
#: ../../ref/models/querysets.txt:1620
msgid ""
"If you're just updating a record and don't need to do anything with the "
"model object, the most efficient approach is to call ``update()``, rather "
"than loading the model object into memory. For example, instead of doing "
"this::"
msgstr ""

# 15a57bc28f1b449aaffbe8bd17f43555
#: ../../ref/models/querysets.txt:1628
msgid "...do this::"
msgstr ""

# 72f04a14ea794e509963c9944afc5caf
#: ../../ref/models/querysets.txt:1632
msgid ""
"Using ``update()`` also prevents a race condition wherein something might "
"change in your database in the short period of time between loading the "
"object and calling ``save()``."
msgstr ""

# 06ea6e205e0e45968986b31fdc7ccd52
#: ../../ref/models/querysets.txt:1636
msgid ""
"Finally, realize that ``update()`` does an update at the SQL level and, "
"thus, does not call any ``save()`` methods on your models, nor does it emit "
"the :attr:`~django.db.models.signals.pre_save` or :attr:`~django.db.models."
"signals.post_save` signals (which are a consequence of calling :meth:`Model."
"save() <django.db.models.Model.save>`). If you want to update a bunch of "
"records for a model that has a custom :meth:`~django.db.models.Model.save()` "
"method, loop over them and call :meth:`~django.db.models.Model.save()`, like "
"this::"
msgstr ""

# 0265bceb08cf4fe685832b58ca91cef3
#: ../../ref/models/querysets.txt:1650
msgid "delete"
msgstr ""

# 1a0a5addc0104b5b953b5e1988a31d65
#: ../../ref/models/querysets.txt:1654
msgid ""
"Performs an SQL delete query on all rows in the :class:`.QuerySet`. The "
"``delete()`` is applied instantly. You cannot call ``delete()`` on a :class:"
"`.QuerySet` that has had a slice taken or can otherwise no longer be "
"filtered."
msgstr ""

# 31b39d714f814a06a4ea0cd77ab58f3e
#: ../../ref/models/querysets.txt:1659
msgid "For example, to delete all the entries in a particular blog::"
msgstr ""

# 5da4471b53e84e5aa8bc41161b94b62e
#: ../../ref/models/querysets.txt:1666
msgid ""
"By default, Django's :class:`~django.db.models.ForeignKey` emulates the SQL "
"constraint ``ON DELETE CASCADE`` — in other words, any objects with foreign "
"keys pointing at the objects to be deleted will be deleted along with them. "
"For example::"
msgstr ""

# c4bb2b3af52149238b90e9002c48b22c
#: ../../ref/models/querysets.txt:1675
msgid ""
"This cascade behavior is customizable via the :attr:`~django.db.models."
"ForeignKey.on_delete` argument to the :class:`~django.db.models.ForeignKey`."
msgstr ""

# 179ffbc3f6f941068dd201f02278aba2
#: ../../ref/models/querysets.txt:1679
msgid ""
"The ``delete()`` method does a bulk delete and does not call any "
"``delete()`` methods on your models. It does, however, emit the :data:"
"`~django.db.models.signals.pre_delete` and :data:`~django.db.models.signals."
"post_delete` signals for all deleted objects (including cascaded deletions)."
msgstr ""

# 1bd24e1259ff4f738b14c35e8226832f
#: ../../ref/models/querysets.txt:1688
msgid ""
"Django needs to fetch objects into memory to send signals and handle "
"cascades. However, if there are no cascades and no signals, then Django may "
"take a fast-path and delete objects without fetching into memory. For large "
"deletes this can result in significantly reduced memory usage. The amount of "
"executed queries can be reduced, too."
msgstr ""

# 93b2ea568b1842e58fd4b40b65069ff5
#: ../../ref/models/querysets.txt:1694
msgid ""
"ForeignKeys which are set to :attr:`~django.db.models.ForeignKey.on_delete` "
"DO_NOTHING do not prevent taking the fast-path in deletion."
msgstr ""

# e2d7bbc0fa214891977937ff60f6045f
#: ../../ref/models/querysets.txt:1697
msgid ""
"Note that the queries generated in object deletion is an implementation "
"detail subject to change."
msgstr ""

# 434e06ae5eef4271a11453cce296b331
#: ../../ref/models/querysets.txt:1703
msgid "Field lookups"
msgstr ""

# 6614c106e77f4d0599fb98c98c2c212b
#: ../../ref/models/querysets.txt:1705
msgid ""
"Field lookups are how you specify the meat of an SQL ``WHERE`` clause. "
"They're specified as keyword arguments to the ``QuerySet`` methods :meth:"
"`filter()`, :meth:`exclude()` and :meth:`get()`."
msgstr ""

# ef187d57e3a2494191737eb677160bf3
#: ../../ref/models/querysets.txt:1709
msgid ""
"For an introduction, see :ref:`models and database queries documentation "
"<field-lookups-intro>`."
msgstr ""

# 95f015d8b3fe49bdb54731e056f17fe2
#: ../../ref/models/querysets.txt:1715
msgid "exact"
msgstr ""

# 65460462b1414354be53d23edbe31229
#: ../../ref/models/querysets.txt:1717
msgid ""
"Exact match. If the value provided for comparison is ``None``, it will be "
"interpreted as an SQL ``NULL`` (see :lookup:`isnull` for more details)."
msgstr ""

# 280d7770ff8343019e136cccb21e1179
# 0315bab1c3cc40039a41b49783a68b99
# 6b4dcd4b2a794059a8d53ceb93f43ad4
#: ../../ref/models/querysets.txt:1725 ../../ref/models/querysets.txt:2153
#: ../../ref/models/querysets.txt:2177
msgid "SQL equivalents::"
msgstr ""

# a5a1e7e7bcf440ec9faa268a445fb37b
#: ../../ref/models/querysets.txt:1772
msgid "MySQL comparisons"
msgstr ""

# 6276074afb174085a80bb219c780d6a1
#: ../../ref/models/querysets.txt:1774
msgid ""
"In MySQL, a database table's \"collation\" setting determines whether "
"``exact`` comparisons are case-sensitive. This is a database setting, *not* "
"a Django setting. It's possible to configure your MySQL tables to use case-"
"sensitive comparisons, but some trade-offs are involved. For more "
"information about this, see the :ref:`collation section <mysql-collation>` "
"in the :doc:`databases </ref/databases>` documentation."
msgstr ""

# 55d36b58525741a082e6b36ab7e9fc34
#: ../../ref/models/querysets.txt:1742
msgid "iexact"
msgstr ""

# 6a9bdda87f6f43edbc3ed67fb2fd0772
#: ../../ref/models/querysets.txt:1744
msgid "Case-insensitive exact match."
msgstr ""

# f5c5c37469f74b75929b0e884f57da65
# cee4e2f34e5b4dc790e20ce497113295
# ce1bcead4a9145599d98ce2e595b94aa
# 338e5a17310a4bcaba9bd4bf8ec75656
# 3920a4d271904bf6a4c4a2c89adefcba
# 67410d72c4e94e3499f710b3fdf8fad8
# 2ce9fb77278f42e6a7d69a143ce9768d
# 59dc71bfb280429688bc4daa16ee2027
# 4ddfea0dc63441d58b3a1b0e733959ab
# 9d0e2a856aae4e3abd864818200c6ec4
# 45f55dc25b5449b0866308c9b5e8b338
# e66614f50dcd4a67af63c2940d45935b
# 4b9f6e1818e046738bc3b01562f58e05
# 17fe53549e034898bdc78a9f649db3ce
# 0e866c82c56e45428f6c2d8c34e78f74
#: ../../ref/models/querysets.txt:1750 ../../ref/models/querysets.txt:1775
#: ../../ref/models/querysets.txt:1800 ../../ref/models/querysets.txt:1821
#: ../../ref/models/querysets.txt:1878 ../../ref/models/querysets.txt:1914
#: ../../ref/models/querysets.txt:1932 ../../ref/models/querysets.txt:1953
#: ../../ref/models/querysets.txt:1974 ../../ref/models/querysets.txt:1997
#: ../../ref/models/querysets.txt:2026 ../../ref/models/querysets.txt:2044
#: ../../ref/models/querysets.txt:2061 ../../ref/models/querysets.txt:2110
#: ../../ref/models/querysets.txt:2126
msgid "SQL equivalent::"
msgstr ""

# 6510908db6594fd0933e115ec5ba8a6c
#: ../../ref/models/querysets.txt:1754
msgid ""
"Note this will match ``'Beatles Blog'``, ``'beatles blog'``, ``'BeAtLes "
"BLoG'``, etc."
msgstr ""

# da1c157503e04550a22eb6d60cf87034
# f74502bbb407446fb96513d8589e5eb3
# c2c879fcf4604c0cbcdaf6172a62fa0e
# 1c7a0aded3814897a6b9588e20449561
# 22032bd0f6af4c978674a25ba523ffb9
# c7cd18903d5f4c1d86a9cc25a7924d33
#: ../../ref/models/querysets.txt:1799 ../../ref/models/querysets.txt:1824
#: ../../ref/models/querysets.txt:1846 ../../ref/models/querysets.txt:1978
#: ../../ref/models/querysets.txt:1999 ../../ref/models/querysets.txt:2020
msgid "SQLite users"
msgstr ""

# 18078e519f9b4eba96881fd0bc51c609
#: ../../ref/models/querysets.txt:1801
msgid ""
"When using the SQLite backend and Unicode (non-ASCII) strings, bear in mind "
"the :ref:`database note <sqlite-string-matching>` about string comparisons. "
"SQLite does not do case-insensitive matching for Unicode strings."
msgstr ""

# 0f957751a5e84f609a79e1041adc64a3
#: ../../ref/models/querysets.txt:1769
msgid "Case-sensitive containment test."
msgstr ""

# 61afc1d9d1be4c66a86d5707a65744bd
#: ../../ref/models/querysets.txt:1779
msgid ""
"Note this will match the headline ``'Lennon honored today'`` but not "
"``'lennon honored today'``."
msgstr ""

# e0a1547bed404539a1d606c60cb5e967
#: ../../ref/models/querysets.txt:1784
msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``contains`` acts "
"like ``icontains`` for SQLite. See the :ref:`database note <sqlite-string-"
"matching>` for more information."
msgstr ""

# e50168e004b04cfeb69380be783c8227
#: ../../ref/models/querysets.txt:1792
msgid "icontains"
msgstr ""

# 84594e8e12dd4188bb698b9b4dbd8075
#: ../../ref/models/querysets.txt:1794
msgid "Case-insensitive containment test."
msgstr ""

# 901089d0122c4c358bdcfaf135167c9c
# 8274ac17659941228ff53a4a55cb4f45
# eeabad3d9df8434fb5fce016d9bbf3d8
#: ../../ref/models/querysets.txt:1806 ../../ref/models/querysets.txt:1938
#: ../../ref/models/querysets.txt:1980
msgid ""
"When using the SQLite backend and Unicode (non-ASCII) strings, bear in mind "
"the :ref:`database note <sqlite-string-matching>` about string comparisons."
msgstr ""

# 67b890bdc96a447a855cb3053321802d
#: ../../ref/models/querysets.txt:1813
msgid "in"
msgstr ""

# 8024e888c5f145a286e7497dd3461749
#: ../../ref/models/querysets.txt:1815
msgid "In a given list."
msgstr ""

# 7b54f731e4134c69861e660743573479
#: ../../ref/models/querysets.txt:1825
msgid ""
"You can also use a queryset to dynamically evaluate the list of values "
"instead of providing a list of literal values::"
msgstr ""

# 5507b042d4f8426eb4b19d1dfd9037cc
#: ../../ref/models/querysets.txt:1831
msgid "This queryset will be evaluated as subselect statement::"
msgstr ""

# 7896af19faa740569ac808d2f9e03223
#: ../../ref/models/querysets.txt:1835
msgid ""
"If you pass in a ``ValuesQuerySet`` or ``ValuesListQuerySet`` (the result of "
"calling ``values()`` or ``values_list()`` on a queryset) as the value to an "
"``__in`` lookup, you need to ensure you are only extracting one field in the "
"result. For example, this will work (filtering on the blog names)::"
msgstr ""

# c0b8fd92d6304224b16bc3258c8d220b
#: ../../ref/models/querysets.txt:1843
msgid ""
"This example will raise an exception, since the inner query is trying to "
"extract two field values, where only one is expected::"
msgstr ""

# a08d4ecae42c41249b9be4e74c577997
# 415aa64b0d1c4ed9bbbc1e8bc75074c8
#: ../../ref/models/querysets.txt:1892 ../../ref/request-response.txt:842
msgid "Performance considerations"
msgstr ""

# f57206af9c564ffe93804320a11d1c61
#: ../../ref/models/querysets.txt:1894
msgid ""
"Be cautious about using nested queries and understand your database server's "
"performance characteristics (if in doubt, benchmark!). Some database "
"backends, most notably MySQL, don't optimize nested queries very well. It is "
"more efficient, in those cases, to extract a list of values and then pass "
"that into the second query. That is, execute two queries instead of one::"
msgstr ""

# e6bd0fca70334bdfa876240b75f1035f
#: ../../ref/models/querysets.txt:1905
msgid ""
"Note the ``list()`` call around the Blog ``QuerySet`` to force execution of "
"the first query. Without it, a nested query would be executed, because :ref:"
"`querysets-are-lazy`."
msgstr ""

# 410355b3adba41f3a5791a87ba48e3cb
#: ../../ref/models/querysets.txt:1870
msgid "gt"
msgstr ""

# 80776fd8d19847648030dd4a1959f167
#: ../../ref/models/querysets.txt:1872
msgid "Greater than."
msgstr ""

# f2f060a215bd4575bd80d2f20f950a95
#: ../../ref/models/querysets.txt:1885
msgid "gte"
msgstr ""

# ddc7d57d98e6454194611f1dee1c23be
#: ../../ref/models/querysets.txt:1887
msgid "Greater than or equal to."
msgstr ""

# 5678f120b40d4755a5259c8b41d0cacd
#: ../../ref/models/querysets.txt:1892
msgid "lt"
msgstr ""

# 49e6796350d746abae2e617a6c3c1f5a
#: ../../ref/models/querysets.txt:1894
msgid "Less than."
msgstr ""

# 06216112551e4926bcb1f1adcb6b93a6
#: ../../ref/models/querysets.txt:1899
msgid "lte"
msgstr ""

# 09846eeca4c74abeac4b7804f5dc9ba1
#: ../../ref/models/querysets.txt:1901
msgid "Less than or equal to."
msgstr ""

# 86f3301caa6a4a55a5096803371a8884
#: ../../ref/models/querysets.txt:1906
msgid "startswith"
msgstr ""

# 16be33a73cff4aceae7703ff5b2fef31
#: ../../ref/models/querysets.txt:1908
msgid "Case-sensitive starts-with."
msgstr ""

# 7e1eab787463436c8834ffa7e437982e
#: ../../ref/models/querysets.txt:1918
msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``startswith`` "
"acts like ``istartswith`` for SQLite."
msgstr ""

# 3aca9e44a29b4cc887ae438e72a9ce8a
#: ../../ref/models/querysets.txt:1924
msgid "istartswith"
msgstr ""

# 6efc9ec726824429b35901b8e3a8180e
#: ../../ref/models/querysets.txt:1926
msgid "Case-insensitive starts-with."
msgstr ""

# caf157b6a08246d483785a180a052dc6
#: ../../ref/models/querysets.txt:1945
msgid "endswith"
msgstr ""

# 6075c335c196416290075bbad79bdc99
#: ../../ref/models/querysets.txt:1947
msgid "Case-sensitive ends-with."
msgstr ""

# 805fdc4db83a401380d37f396aab5d94
#: ../../ref/models/querysets.txt:1959
msgid ""
"SQLite doesn't support case-sensitive ``LIKE`` statements; ``endswith`` acts "
"like ``iendswith`` for SQLite. Refer to the :ref:`database note <sqlite-"
"string-matching>` documentation for more."
msgstr ""

# 8a6cfdb4c6c649b7ba77eae056e05793
#: ../../ref/models/querysets.txt:1966
msgid "iendswith"
msgstr ""

# 767b04c9eb284a8a8f73b3b6641da77c
#: ../../ref/models/querysets.txt:1968
msgid "Case-insensitive ends-with."
msgstr ""

# d88f9f54a69342bda90b8ebb2f8a3f6b
#: ../../ref/models/querysets.txt:1987
msgid "range"
msgstr ""

# eed3663efc0c47d4a8944a2d580cc8cb
#: ../../ref/models/querysets.txt:1989
msgid "Range test (inclusive)."
msgstr ""

# ee2ab715eeb74e18a5f2471a8c14b849
#: ../../ref/models/querysets.txt:2001
msgid ""
"You can use ``range`` anywhere you can use ``BETWEEN`` in SQL — for dates, "
"numbers and even characters."
msgstr ""

# d9466789a4c24fb9b0fda7b53313c748
#: ../../ref/models/querysets.txt:2006
msgid ""
"Filtering a ``DateTimeField`` with dates won't include items on the last "
"day, because the bounds are interpreted as \"0am on the given date\". If "
"``pub_date`` was a ``DateTimeField``, the above expression would be turned "
"into this SQL::"
msgstr ""

# 270d8b6f2d774124a7ff06874e9292da
#: ../../ref/models/querysets.txt:2013
msgid "Generally speaking, you can't mix dates and datetimes."
msgstr ""

# 8851800cc6ef442cbff70233561da730
#: ../../ref/models/querysets.txt:2018
msgid "year"
msgstr ""

# 4ed0a9cc0fef4503a5be1ea0e88f11c7
#: ../../ref/models/querysets.txt:2020
msgid "For date/datetime fields, exact year match. Takes a four-digit year."
msgstr ""

# 4142ff2cf7aa4e9f9f2a14d50157b1f1
# 9b18485414d646e288de3a573fe90ed2
# 96f60603c4a64fdb912729297e33ccbc
#: ../../ref/models/querysets.txt:2030 ../../ref/models/querysets.txt:2048
#: ../../ref/models/querysets.txt:2065
msgid "(The exact SQL syntax varies for each database engine.)"
msgstr ""

# 815ee9f819a94e3094bdae27e5dd83b3
#: ../../ref/models/querysets.txt:2035
msgid "month"
msgstr ""

# 38c582237ce64db2853e5dc4b9a1ccef
#: ../../ref/models/querysets.txt:2037
msgid ""
"For date and datetime fields, an exact month match. Takes an integer 1 "
"(January) through 12 (December)."
msgstr ""

# d51283f775e5495a945859a2a44fb584
#: ../../ref/models/querysets.txt:2053
msgid "day"
msgstr ""

# 3598109f578c467d873a17b5b73706e0
#: ../../ref/models/querysets.txt:2055
msgid "For date and datetime fields, an exact day match."
msgstr ""

# f56dbeef5971457585cce767dadc61f3
#: ../../ref/models/querysets.txt:2067
msgid ""
"Note this will match any record with a pub_date on the third day of the "
"month, such as January 3, July 3, etc."
msgstr ""

# abc6262b28dc4ff49382c1c7fb4fea04
#: ../../ref/models/querysets.txt:2073
msgid "week_day"
msgstr ""

# b791c35faf794b3cbc4fabf8007b4408
#: ../../ref/models/querysets.txt:2075
msgid "For date and datetime fields, a 'day of the week' match."
msgstr ""

# f795279d9d6f445ba330b868b69541e5
#: ../../ref/models/querysets.txt:2077
msgid ""
"Takes an integer value representing the day of week from 1 (Sunday) to 7 "
"(Saturday)."
msgstr ""

# dd1d9721f4614e7eb526be156a96e93d
#: ../../ref/models/querysets.txt:2084
msgid ""
"(No equivalent SQL code fragment is included for this lookup because "
"implementation of the relevant query varies among different database "
"engines.)"
msgstr ""

# 1d9681791205417fb5503da98c9afb1e
#: ../../ref/models/querysets.txt:2087
msgid ""
"Note this will match any record with a ``pub_date`` that falls on a Monday "
"(day 2 of the week), regardless of the month or year in which it occurs. "
"Week days are indexed with day 1 being Sunday and day 7 being Saturday."
msgstr ""

# 5e566da17e5b46beab66cc537ef5cf86
#: ../../ref/models/querysets.txt:2093
msgid ""
"When :doc:`time zone support </topics/i18n/timezones>` is enabled, Django "
"uses UTC in the database connection, which means the ``year``, ``month``, "
"``day`` and ``week_day`` lookups are performed in UTC. This is a known "
"limitation of the current implementation."
msgstr ""

# aad6595d5b854597a922486f8aa9dff4
#: ../../ref/models/querysets.txt:2101
msgid "isnull"
msgstr ""

# 74d9937a6cce4765bfe5fcd6f133371e
#: ../../ref/models/querysets.txt:2103
msgid ""
"Takes either ``True`` or ``False``, which correspond to SQL queries of ``IS "
"NULL`` and ``IS NOT NULL``, respectively."
msgstr ""

# 6dac823586364740a6cf7eb84ca11c9a
#: ../../ref/models/querysets.txt:2117
msgid "search"
msgstr ""

# 0c11454a014145efbcd1035f09c52763
#: ../../ref/models/querysets.txt:2119
msgid ""
"A boolean full-text search, taking advantage of full-text indexing. This is "
"like :lookup:`contains` but is significantly faster due to full-text "
"indexing."
msgstr ""

# bab8c555ec394245a328d71416bc6d88
#: ../../ref/models/querysets.txt:2130
msgid ""
"Note this is only available in MySQL and requires direct manipulation of the "
"database to add the full-text index. By default Django uses BOOLEAN MODE for "
"full text searches. See the `MySQL documentation`_ for additional details."
msgstr ""

# 12776993778f4d47a58988cc03362cdb
#: ../../ref/models/querysets.txt:2140
msgid "regex"
msgstr ""

# e145781b7dfe48829908d66ad40cfdb6
#: ../../ref/models/querysets.txt:2142
msgid "Case-sensitive regular expression match."
msgstr ""

# 51848ce02c444e0aa6ef3c1cd44e1fb8
#: ../../ref/models/querysets.txt:2144
msgid ""
"The regular expression syntax is that of the database backend in use. In the "
"case of SQLite, which has no built in regular expression support, this "
"feature is provided by a (Python) user-defined REGEXP function, and the "
"regular expression syntax is therefore that of Python's ``re`` module."
msgstr ""

# 98d5a9bdbc9143f1a88d06d174bdb3e8
#: ../../ref/models/querysets.txt:2163
msgid ""
"Using raw strings (e.g., ``r'foo'`` instead of ``'foo'``) for passing in the "
"regular expression syntax is recommended."
msgstr ""

# 7562090cd3014c7782cc6221b4c477cd
#: ../../ref/models/querysets.txt:2169
msgid "iregex"
msgstr ""

# 30e92db9bc7c4dc0ac96540c736199fd
#: ../../ref/models/querysets.txt:2171
msgid "Case-insensitive regular expression match."
msgstr ""

# 3bf030055a894388b40a224a6dbea66f
#: ../../ref/models/querysets.txt:2190
msgid "Aggregation functions"
msgstr ""

# abe3c95ffc2f498cb7c7034223412b63
#: ../../ref/models/querysets.txt:2194
msgid ""
"Django provides the following aggregation functions in the ``django.db."
"models`` module. For details on how to use these aggregate functions, see :"
"doc:`the topic guide on aggregation </topics/db/aggregation>`."
msgstr ""

# 52235fd061b64178844c702e91ec2699
#: ../../ref/models/querysets.txt:2200
msgid "Avg"
msgstr ""

# 656fbd1db51b4f3e97e7fd6e16c49f72
#: ../../ref/models/querysets.txt:2204
msgid "Returns the mean value of the given field, which must be numeric."
msgstr ""

# 8c3dd13bd1d4430a98d57db4b926a09d
#: ../../ref/models/querysets.txt:2206
msgid "Default alias: ``<field>__avg``"
msgstr ""

# d997e6e41b25462da47a9e8cb621fba0
# 3548cc96e0694096981e44ecc0751861
# dcbd1b3e39c340cbbf6af06479d542b5
#: ../../ref/models/querysets.txt:2207 ../../ref/models/querysets.txt:2255
#: ../../ref/models/querysets.txt:2289
msgid "Return type: ``float``"
msgstr ""

# 503ed6241b9440f9b6be6e7a91f070bd
#: ../../ref/models/querysets.txt:2210
msgid "Count"
msgstr ""

# 512d0c72e0824674a518b31b190b9386
#: ../../ref/models/querysets.txt:2214
msgid ""
"Returns the number of objects that are related through the provided field."
msgstr ""

# 6362fd7ef66b4edb9be1aa9c96dce079
#: ../../ref/models/querysets.txt:2216
msgid "Default alias: ``<field>__count``"
msgstr ""

# c424877c38fe439cb98a1833ca679e46
#: ../../ref/models/querysets.txt:2217
msgid "Return type: ``int``"
msgstr ""

# cf25f0916dab44afa0e57c92fcc7934f
# 153a11d9e6ed4a338e4a2943c34a9321
# 00fe9be9056d407f989efc28f39b560c
#: ../../ref/models/querysets.txt:2219 ../../ref/models/querysets.txt:2257
#: ../../ref/models/querysets.txt:2291
msgid "Has one optional argument:"
msgstr ""

# 0eb607acff184bc6b98d6ff1c4fb47cf
#: ../../ref/models/querysets.txt:2223
msgid ""
"If ``distinct=True``, the count will only include unique instances. This is "
"the SQL equivalent of ``COUNT(DISTINCT <field>)``. The default value is "
"``False``."
msgstr ""

# 0188fecadf754cf79d7077de66a1c39b
#: ../../ref/models/querysets.txt:2228
msgid "Max"
msgstr ""

# 5cf20d6c5a9d4c37a4fbbe58a0976ade
#: ../../ref/models/querysets.txt:2232
msgid "Returns the maximum value of the given field."
msgstr ""

# f3f8a6dea65d4dc3b07f89c251a5da09
#: ../../ref/models/querysets.txt:2234
msgid "Default alias: ``<field>__max``"
msgstr ""

# eeae4035b54540e4b6a2ea3ecaeac38e
# d7703fce915e4819a18d4dc3ef3d2b18
# 544293506f3044b9b205051d05c08941
#: ../../ref/models/querysets.txt:2235 ../../ref/models/querysets.txt:2245
#: ../../ref/models/querysets.txt:2279
msgid "Return type: same as input field"
msgstr ""

# 941e9a211e5d49d487f11d7e9e1f45b7
#: ../../ref/models/querysets.txt:2238
msgid "Min"
msgstr ""

# 9b512e4cfc9d450aa36b015b37cfb72e
#: ../../ref/models/querysets.txt:2242
msgid "Returns the minimum value of the given field."
msgstr ""

# c7962597db7b4601a315c010ee6f3d81
#: ../../ref/models/querysets.txt:2244
msgid "Default alias: ``<field>__min``"
msgstr ""

# 829f4ab2e3554612abde213a3831b18a
#: ../../ref/models/querysets.txt:2248
msgid "StdDev"
msgstr ""

# 2dd54e18c1be4e9e9788c2d7383a8d09
#: ../../ref/models/querysets.txt:2252
msgid "Returns the standard deviation of the data in the provided field."
msgstr ""

# 80e6fe5ef1444615943928c80e0e6027
#: ../../ref/models/querysets.txt:2254
msgid "Default alias: ``<field>__stddev``"
msgstr ""

# 6ad2f018000f4675bf14d5a5cffd8a63
#: ../../ref/models/querysets.txt:2261
msgid ""
"By default, ``StdDev`` returns the population standard deviation. However, "
"if ``sample=True``, the return value will be the sample standard deviation."
msgstr ""

# 40086d6677b84539bf0a5c5253e44db5
#: ../../ref/models/querysets.txt:2266
msgid ""
"SQLite doesn't provide ``StdDev`` out of the box. An implementation is "
"available as an extension module for SQLite. Consult the `SQlite "
"documentation`_ for instructions on obtaining and installing this extension."
msgstr ""

# fed21c76151044789d369192e1cf4319
#: ../../ref/models/querysets.txt:2272
msgid "Sum"
msgstr ""

# 739a67db1eef4f8c95806f23d4a4fc89
#: ../../ref/models/querysets.txt:2276
msgid "Computes the sum of all values of the given field."
msgstr ""

# 5afdbaf705094ffdbbd80392af228f4c
#: ../../ref/models/querysets.txt:2278
msgid "Default alias: ``<field>__sum``"
msgstr ""

# 004ecae0719644aa90ac6a70bb3bb909
#: ../../ref/models/querysets.txt:2282
msgid "Variance"
msgstr ""

# 8c20c2a797bb45f0bb2d5c21a2586f96
#: ../../ref/models/querysets.txt:2286
msgid "Returns the variance of the data in the provided field."
msgstr ""

# 8b7e82d78b02489ab25f51be701a5cd0
#: ../../ref/models/querysets.txt:2288
msgid "Default alias: ``<field>__variance``"
msgstr ""

# 60fe5faedbeb49ab9f7370c121aecc67
#: ../../ref/models/querysets.txt:2295
msgid ""
"By default, ``Variance`` returns the population variance. However, if "
"``sample=True``, the return value will be the sample variance."
msgstr ""

# a312a887830844d2a2f792ff675e0471
#: ../../ref/models/querysets.txt:2300
msgid ""
"SQLite doesn't provide ``Variance`` out of the box. An implementation is "
"available as an extension module for SQLite. Consult the `SQlite "
"documentation`_ for instructions on obtaining and installing this extension."
msgstr ""

# f1accca5942b4ac680a21dccb03a1b69
#: ../../ref/models/relations.txt:3
msgid "Related objects reference"
msgstr ""

# e4b126354f264a22b195376fa9006154
#: ../../ref/models/relations.txt:9
msgid ""
"A \"related manager\" is a manager used in a one-to-many or many-to-many "
"related context. This happens in two cases:"
msgstr ""

# 05eb884df0dd48f79b95d0ea627e5599
#: ../../ref/models/relations.txt:12
msgid ""
"The \"other side\" of a :class:`~django.db.models.ForeignKey` relation. That "
"is::"
msgstr ""

# 13d09bd0f18547a09e299e73aa70a8f2
#: ../../ref/models/relations.txt:21
msgid ""
"In the above example, the methods below will be available on the manager "
"``reporter.article_set``."
msgstr ""

# 1566efa6d4394b788ec126667d63618e
#: ../../ref/models/relations.txt:24
msgid "Both sides of a :class:`~django.db.models.ManyToManyField` relation::"
msgstr ""

# 37df4ff2fdf04269b1949f618efe9c29
#: ../../ref/models/relations.txt:32
msgid ""
"In this example, the methods below will be available both on ``topping."
"pizza_set`` and on ``pizza.toppings``."
msgstr ""

# 1d058027eb334f1784be5c641b61cf63
#: ../../ref/models/relations.txt:35
msgid "These related managers have some extra methods:"
msgstr ""

# cf13ec7bea21431ab9d2f06f53e50214
#: ../../ref/models/relations.txt:39
msgid "Adds the specified model objects to the related object set."
msgstr ""

# 0a8d20ca7b52433998496768c4773091
#: ../../ref/models/relations.txt:47
msgid ""
"In the example above, ``e.save()`` is called to perform the update. Using "
"``add()`` with a many-to-many relationship, however, will not call any "
"``save()`` methods, but rather create the relationships using :meth:"
"`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>`. If "
"you need to execute some custom logic when a relationship is created, listen "
"to the :data:`~django.db.models.signals.m2m_changed` signal."
msgstr ""

# 5a8c9e67833748b3bf10f5ef499b32b6
#: ../../ref/models/relations.txt:57
msgid ""
"Creates a new object, saves it and puts it in the related object set. "
"Returns the newly created object::"
msgstr ""

# 2defb8f0b8774312bc431610b3914a58
#: ../../ref/models/relations.txt:61
msgid "This is equivalent to (but much simpler than)::"
msgstr ""

# 896dc5449fff4a009d240a0b84b531f3
#: ../../ref/models/relations.txt:72
msgid ""
"Note that there's no need to specify the keyword argument of the model that "
"defines the relationship. In the above example, we don't pass the parameter "
"``blog`` to ``create()``. Django figures out that the new ``Entry`` object's "
"``blog`` field should be set to ``b``."
msgstr ""

# 046be9712cb4429595b14559b69f35c1
#: ../../ref/models/relations.txt:79
msgid "Removes the specified model objects from the related object set::"
msgstr ""

# 25c4d890b0e64da99f071138ea93ae2b
#: ../../ref/models/relations.txt:93
msgid ""
"Similar to :meth:`add()`, ``e.save()`` is called in the example above to "
"perform the update. Using ``remove()`` with a many-to-many relationship, "
"however, will delete the relationships using :meth:`QuerySet.delete()<django."
"db.models.query.QuerySet.delete>` which means no model ``save()`` methods "
"are called; listen to the :data:`~django.db.models.signals.m2m_changed` "
"signal if you wish to execute custom code when a relationship is deleted."
msgstr ""

# 09fca46efc744419a1d03597b7659f8c
#: ../../ref/models/relations.txt:101
msgid ""
"For :class:`~django.db.models.ForeignKey` objects, this method only exists "
"if ``null=True``. If the related field can't be set to ``None`` (``NULL``), "
"then an object can't be removed from a relation without being added to "
"another. In the above example, removing ``e`` from ``b.entry_set()`` is "
"equivalent to doing ``e.blog = None``, and because the ``blog`` :class:"
"`~django.db.models.ForeignKey` doesn't have ``null=True``, this is invalid."
msgstr ""

# f4615ed90a8a40f787256d540450e64f
#: ../../ref/models/relations.txt:95
msgid "Removes all objects from the related object set::"
msgstr ""

# 2613759f3d3244cea698a5cb9048ec70
#: ../../ref/models/relations.txt:100
msgid ""
"Note this doesn't delete the related objects -- it just disassociates them."
msgstr ""

# 92ec16bbe4584700b9163c81787018c9
#: ../../ref/models/relations.txt:103
msgid ""
"Just like ``remove()``, ``clear()`` is only available on :class:`~django.db."
"models.ForeignKey`\\s where ``null=True``."
msgstr ""

# 25330d0df04a4521b9cee5aa2297cf1e
#: ../../ref/request-response.txt:3
msgid "Request and response objects"
msgstr ""

# ae6aefb5f69249809039807ac6b2d691
#: ../../ref/request-response.txt:9
msgid "Quick overview"
msgstr ""

# 906b875fee084c139904cba4815e30fa
#: ../../ref/request-response.txt:11
msgid ""
"Django uses request and response objects to pass state through the system."
msgstr ""

# b0eb4de3a4164d05a74ca3b8c426fdc7
#: ../../ref/request-response.txt:13
msgid ""
"When a page is requested, Django creates an :class:`HttpRequest` object that "
"contains metadata about the request. Then Django loads the appropriate view, "
"passing the :class:`HttpRequest` as the first argument to the view function. "
"Each view is responsible for returning an :class:`HttpResponse` object."
msgstr ""

# 8f31c1a4c02f46dc952b494e01071dae
#: ../../ref/request-response.txt:18
msgid ""
"This document explains the APIs for :class:`HttpRequest` and :class:"
"`HttpResponse` objects, which are defined in the :mod:`django.http` module."
msgstr ""

# ca04f2c30f634f01953a0c1d6c047e4d
#: ../../ref/request-response.txt:23
msgid "HttpRequest objects"
msgstr ""

# d7811d63a93b41319a59154dcf1ef537
# a97d3b0631074ffa9f50aa827ec68a0a
# b94ccde1a2504a1abd3c982482cc0b50
# d71997cf1f1844e7ba53e70996ba3169
# 784160467aff468d860319da85315f26
#: ../../ref/request-response.txt:30 ../../ref/request-response.txt:345
#: ../../ref/request-response.txt:621 ../../ref/request-response.txt:852
#: ../../ref/template-response.txt:30
msgid "Attributes"
msgstr ""

# 3735bfd4ef804885bcc2d8b3578d6c49
#: ../../ref/request-response.txt:32
msgid ""
"All attributes should be considered read-only, unless stated otherwise "
"below. ``session`` is a notable exception."
msgstr ""

# eb9db1a179e545e0938d4263fc7b0384
#: ../../ref/request-response.txt:39
msgid ""
"Before Django 1.4, ``HttpRequest.body`` was named ``HttpRequest."
"raw_post_data``."
msgstr ""

# 9d6204f3e64f4b8eb6160d9665686f53
#: ../../ref/request-response.txt:42
msgid ""
"The raw HTTP request body as a byte string. This is useful for processing "
"data in different ways than conventional HTML forms: binary images, XML "
"payload etc. For processing conventional form data, use ``HttpRequest.POST``."
msgstr ""

# 4ae3246c132a40d396999dca0c8b2c9e
#: ../../ref/request-response.txt:46
msgid ""
"You can also read from an HttpRequest using a file-like interface. See :meth:"
"`HttpRequest.read()`."
msgstr ""

# 35e1c449749c4994aa4340fdc589ee7e
#: ../../ref/request-response.txt:51
msgid ""
"A string representing the full path to the requested page, not including the "
"domain."
msgstr ""

# df6b0db5d81942d2ad308fa503f0a221
#: ../../ref/request-response.txt:54
msgid "Example: ``\"/music/bands/the_beatles/\"``"
msgstr ""

# f8b5eaa73c7e44c486ec5854536ca277
#: ../../ref/request-response.txt:58
msgid ""
"Under some Web server configurations, the portion of the URL after the host "
"name is split up into a script prefix portion and a path info portion. The "
"``path_info`` attribute always contains the path info portion of the path, "
"no matter what Web server is being used. Using this instead of :attr:"
"`~HttpRequest.path` can make your code easier to move between test and "
"deployment servers."
msgstr ""

# f1fda6d9240b4d7981c3aa6b752aef1f
#: ../../ref/request-response.txt:65
msgid ""
"For example, if the ``WSGIScriptAlias`` for your application is set to ``\"/"
"minfo\"``, then ``path`` might be ``\"/minfo/music/bands/the_beatles/\"`` "
"and ``path_info`` would be ``\"/music/bands/the_beatles/\"``."
msgstr ""

# 7a45e8e10be44597953f183957d6c85f
#: ../../ref/request-response.txt:71
msgid ""
"A string representing the HTTP method used in the request. This is "
"guaranteed to be uppercase. Example::"
msgstr ""

# e3baba41fb544c10b1ca0da44fcdcb57
#: ../../ref/request-response.txt:81
msgid ""
"A string representing the current encoding used to decode form submission "
"data (or ``None``, which means the :setting:`DEFAULT_CHARSET` setting is "
"used). You can write to this attribute to change the encoding used when "
"accessing the form data. Any subsequent attribute accesses (such as reading "
"from ``GET`` or ``POST``) will use the new ``encoding`` value.  Useful if "
"you know the form data is not in the :setting:`DEFAULT_CHARSET` encoding."
msgstr ""

# d0f97f30244f45bdb3091dd1c714d66f
#: ../../ref/request-response.txt:90
msgid ""
"A dictionary-like object containing all given HTTP GET parameters. See the :"
"class:`QueryDict` documentation below."
msgstr ""

# b3c274fbd4f24e8d80845e2cdf126dde
#: ../../ref/request-response.txt:95
msgid ""
"A dictionary-like object containing all given HTTP POST parameters, "
"providing that the request contains form data. See the :class:`QueryDict` "
"documentation below. If you need to access raw or non-form data posted in "
"the request, access this through the :attr:`HttpRequest.body` attribute "
"instead."
msgstr ""

# c90ad9c340c947e594cb6289d4252939
#: ../../ref/request-response.txt:104
msgid ""
"It's possible that a request can come in via POST with an empty ``POST`` "
"dictionary -- if, say, a form is requested via the POST HTTP method but does "
"not include form data. Therefore, you shouldn't use ``if request.POST`` to "
"check for use of the POST method; instead, use ``if request.method == \"POST"
"\"`` (see above)."
msgstr ""

# f1c8fe18b1fc46449164b73d6748d704
#: ../../ref/request-response.txt:110
msgid ""
"Note: ``POST`` does *not* include file-upload information. See ``FILES``."
msgstr ""

# 9907939ab40f422884cae1b50e56bc39
#: ../../ref/request-response.txt:114
msgid ""
"For convenience, a dictionary-like object that searches ``POST`` first, then "
"``GET``. Inspired by PHP's ``$_REQUEST``."
msgstr ""

# 8f82fd2842094bc4b9f42e878f5174ce
#: ../../ref/request-response.txt:117
msgid ""
"For example, if ``GET = {\"name\": \"john\"}`` and ``POST = {\"age\": '34'}"
"``, ``REQUEST[\"name\"]`` would be ``\"john\"``, and ``REQUEST[\"age\"]`` "
"would be ``\"34\"``."
msgstr ""

# 807c3a7f49d34e6885877d689c5d49b7
#: ../../ref/request-response.txt:121
msgid ""
"It's strongly suggested that you use ``GET`` and ``POST`` instead of "
"``REQUEST``, because the former are more explicit."
msgstr ""

# 65a08bab679b40048f2f3cdf5547bcf7
#: ../../ref/request-response.txt:126
msgid ""
"A standard Python dictionary containing all cookies. Keys and values are "
"strings."
msgstr ""

# 203256fc5f41480b9f68ccd34888c7a7
#: ../../ref/request-response.txt:131
msgid ""
"A dictionary-like object containing all uploaded files. Each key in "
"``FILES`` is the ``name`` from the ``<input type=\"file\" name=\"\" />``. "
"Each value in ``FILES`` is an :class:`UploadedFile` as described below."
msgstr ""

# ff8e7828f95c4ae3aac29720ad835c1d
#: ../../ref/request-response.txt:135
msgid "See :doc:`/topics/files` for more information."
msgstr ""

# 255aba44ad0347f69012c6dcb36e8da5
#: ../../ref/request-response.txt:137
msgid ""
"Note that ``FILES`` will only contain data if the request method was POST "
"and the ``<form>`` that posted to the request had ``enctype=\"multipart/form-"
"data\"``. Otherwise, ``FILES`` will be a blank dictionary-like object."
msgstr ""

# a0bfc92e1ec349b5b575e689f95ebd64
#: ../../ref/request-response.txt:144
msgid ""
"A standard Python dictionary containing all available HTTP headers. "
"Available headers depend on the client and server, but here are some "
"examples:"
msgstr ""

# a3f2fae38a7948cda9fd078b8fbb572e
#: ../../ref/request-response.txt:148
msgid "``CONTENT_LENGTH`` -- the length of the request body (as a string)."
msgstr ""

# b7d99d864b54466ba5858eeaf3451ffa
#: ../../ref/request-response.txt:149
msgid "``CONTENT_TYPE`` -- the MIME type of the request body."
msgstr ""

# 85ad15bcc5564c6db4b45c6079680deb
#: ../../ref/request-response.txt:150
msgid "``HTTP_ACCEPT_ENCODING`` -- Acceptable encodings for the response."
msgstr ""

# 1ccaa6b5cdcc4657bb43595b05996677
#: ../../ref/request-response.txt:151
msgid "``HTTP_ACCEPT_LANGUAGE`` -- Acceptable languages for the response."
msgstr ""

# ab3449597d564362addce37fa2dbb8fb
#: ../../ref/request-response.txt:152
msgid "``HTTP_HOST`` -- The HTTP Host header sent by the client."
msgstr ""

# 9e9e71f25e6a4528b01db6daa133cba3
#: ../../ref/request-response.txt:153
msgid "``HTTP_REFERER`` -- The referring page, if any."
msgstr ""

# 424440f6242941deb00f06e2e0ca53e3
#: ../../ref/request-response.txt:154
msgid "``HTTP_USER_AGENT`` -- The client's user-agent string."
msgstr ""

# 2bb7ff5e51a84f6b915f8996d26d6581
#: ../../ref/request-response.txt:155
msgid "``QUERY_STRING`` -- The query string, as a single (unparsed) string."
msgstr ""

# fe0cd6d085494c5bb5b76e4f67698eec
#: ../../ref/request-response.txt:156
msgid "``REMOTE_ADDR`` -- The IP address of the client."
msgstr ""

# e3996a2bd8424c35b4a6f9d19a78c50c
#: ../../ref/request-response.txt:157
msgid "``REMOTE_HOST`` -- The hostname of the client."
msgstr ""

# edded7ed251c4643b7fb3fee7ffc467e
#: ../../ref/request-response.txt:158
msgid "``REMOTE_USER`` -- The user authenticated by the Web server, if any."
msgstr ""

# f349404f44f1402f89ab3f991de51236
#: ../../ref/request-response.txt:159
msgid "``REQUEST_METHOD`` -- A string such as ``\"GET\"`` or ``\"POST\"``."
msgstr ""

# 44d012dbf13e472c958629f647442aa1
#: ../../ref/request-response.txt:160
msgid "``SERVER_NAME`` -- The hostname of the server."
msgstr ""

# f3c6ca8bb66241d0a9fd9c97fd49d66d
#: ../../ref/request-response.txt:161
msgid "``SERVER_PORT`` -- The port of the server (as a string)."
msgstr ""

# cc6befc602744106b6eca1754166f4d1
#: ../../ref/request-response.txt:163
msgid ""
"With the exception of ``CONTENT_LENGTH`` and ``CONTENT_TYPE``, as given "
"above, any HTTP headers in the request are converted to ``META`` keys by "
"converting all characters to uppercase, replacing any hyphens with "
"underscores and adding an ``HTTP_`` prefix to the name. So, for example, a "
"header called ``X-Bender`` would be mapped to the ``META`` key "
"``HTTP_X_BENDER``."
msgstr ""

# d04d03e4a2f14f3991bba1e4eb76f827
#: ../../ref/request-response.txt:172
msgid ""
"An object of type :setting:`AUTH_USER_MODEL` representing the currently "
"logged-in user. If the user isn't currently logged in, ``user`` will be set "
"to an instance of :class:`django.contrib.auth.models.AnonymousUser`. You can "
"tell them apart with :meth:`~django.contrib.auth.models.User."
"is_authenticated`, like so::"
msgstr ""

# da4c5c2bca0c4fca8a66d9a8db21728f
#: ../../ref/request-response.txt:183
msgid ""
"``user`` is only available if your Django installation has the :class:"
"`~django.contrib.auth.middleware.AuthenticationMiddleware` activated. For "
"more, see :doc:`/topics/auth/index`."
msgstr ""

# 348205d2e6a840f49372b02a4d8c9fe6
#: ../../ref/request-response.txt:188
msgid ""
"A readable-and-writable, dictionary-like object that represents the current "
"session. This is only available if your Django installation has session "
"support activated. See the :doc:`session documentation </topics/http/"
"sessions>` for full details."
msgstr ""

# dbb74e695da240f2ad768ba1b5d95b86
#: ../../ref/request-response.txt:195
msgid ""
"Not defined by Django itself, but will be read if other code (e.g., a custom "
"middleware class) sets it. When present, this will be used as the root "
"URLconf for the current request, overriding the :setting:`ROOT_URLCONF` "
"setting. See :ref:`how-django-processes-a-request` for details."
msgstr ""

# 53e58d42956240fe9fc0fec101adec2c
#: ../../ref/request-response.txt:204
msgid ""
"An instance of :class:`~django.core.urlresolvers.ResolverMatch` representing "
"the resolved url. This attribute is only set after url resolving took place, "
"which means it's available in all views but not in middleware methods which "
"are executed before url resolving takes place (like ``process_request``, you "
"can use ``process_view`` instead)."
msgstr ""

# e91bcaff9add4e39bf3f2f62ef822a6d
#: ../../ref/request-response.txt:216
msgid ""
"Returns the originating host of the request using information from the "
"``HTTP_X_FORWARDED_HOST`` (if :setting:`USE_X_FORWARDED_HOST` is enabled) "
"and ``HTTP_HOST`` headers, in that order. If they don't provide a value, the "
"method uses a combination of ``SERVER_NAME`` and ``SERVER_PORT`` as detailed "
"in :pep:`3333`."
msgstr ""

# 19cefa5c28ca45d49756ef0f2ca988e5
#: ../../ref/request-response.txt:222
msgid "Example: ``\"127.0.0.1:8000\"``"
msgstr ""

# bcf11bc29746424fb4eb113997ea9417
#: ../../ref/request-response.txt:224
msgid ""
"The :meth:`~HttpRequest.get_host()` method fails when the host is behind "
"multiple proxies. One solution is to use middleware to rewrite the proxy "
"headers, as in the following example::"
msgstr ""

# a96f33d1acf1466f8c3763d548c846e9
#: ../../ref/request-response.txt:246
msgid ""
"This middleware should be positioned before any other middleware that relies "
"on the value of :meth:`~HttpRequest.get_host()` -- for instance, :class:"
"`~django.middleware.common.CommonMiddleware` or :class:`~django.middleware."
"csrf.CsrfViewMiddleware`."
msgstr ""

# f43970e0ccd24b7f93a0efef36413691
#: ../../ref/request-response.txt:253
msgid "Returns the ``path``, plus an appended query string, if applicable."
msgstr ""

# efdb0593bee44f1fa382e33a9f864553
#: ../../ref/request-response.txt:255
msgid "Example: ``\"/music/bands/the_beatles/?print=true\"``"
msgstr ""

# ee5d065c616b42cc957dbd05667dc113
#: ../../ref/request-response.txt:259
msgid ""
"Returns the absolute URI form of ``location``. If no location is provided, "
"the location will be set to ``request.get_full_path()``."
msgstr ""

# 37e147bba64a4039a1cccbe211b7b9f8
#: ../../ref/request-response.txt:262
msgid ""
"If the location is already an absolute URI, it will not be altered. "
"Otherwise the absolute URI is built using the server variables available in "
"this request."
msgstr ""

# 537790b718524c67b567c690b614ede8
#: ../../ref/request-response.txt:266
msgid "Example: ``\"http://example.com/music/bands/the_beatles/?print=true\"``"
msgstr ""

# e4af64b921f24e1bbe83d836e7d10db7
#: ../../ref/request-response.txt:272
msgid ""
"Returns a cookie value for a signed cookie, or raises a ``django.core."
"signing.BadSignature`` exception if the signature is no longer valid. If you "
"provide the ``default`` argument the exception will be suppressed and that "
"default value will be returned instead."
msgstr ""

# 58a812a48b2a4504b8380f8e1380c2a8
#: ../../ref/request-response.txt:277
msgid ""
"The optional ``salt`` argument can be used to provide extra protection "
"against brute force attacks on your secret key. If supplied, the ``max_age`` "
"argument will be checked against the signed timestamp attached to the cookie "
"value to ensure the cookie is not older than ``max_age`` seconds."
msgstr ""

# 0be81f9077374ac293c78ec0dc405e47
#: ../../ref/request-response.txt:303
msgid ""
"See :doc:`cryptographic signing </topics/signing>` for more information."
msgstr ""

# 3cccc0496ed8403e8696cae80a7466b6
#: ../../ref/request-response.txt:307
msgid ""
"Returns ``True`` if the request is secure; that is, if it was made with "
"HTTPS."
msgstr ""

# abcc5ed849a24248a4671bd6dce17ecf
#: ../../ref/request-response.txt:312
msgid ""
"Returns ``True`` if the request was made via an ``XMLHttpRequest``, by "
"checking the ``HTTP_X_REQUESTED_WITH`` header for the string "
"``'XMLHttpRequest'``. Most modern JavaScript libraries send this header. If "
"you write your own XMLHttpRequest call (on the browser side), you'll have to "
"set this header manually if you want ``is_ajax()`` to work."
msgstr ""

# 9149e5d0115e4a088d553e3a922ecd2d
#: ../../ref/request-response.txt:324
msgid ""
"Methods implementing a file-like interface for reading from an HttpRequest "
"instance. This makes it possible to consume an incoming request in a "
"streaming fashion. A common use-case would be to process a big XML payload "
"with iterative parser without constructing a whole XML tree in memory."
msgstr ""

# 689f3c0a977c4456b9e7897721db513e
#: ../../ref/request-response.txt:330
msgid ""
"Given this standard interface, an HttpRequest instance can be passed "
"directly to an XML parser such as ElementTree::"
msgstr ""

# f82573fb9e724832aef335f4b08f5923
#: ../../ref/request-response.txt:339
msgid "UploadedFile objects"
msgstr ""

# 2e5f9a82faaa439995137cd0fbf38682
#: ../../ref/request-response.txt:349
msgid "The name of the uploaded file."
msgstr ""

# 04db473a701e429cb301280038a03356
#: ../../ref/request-response.txt:353
msgid "The size, in bytes, of the uploaded file."
msgstr ""

# d50301b17a304ccaba7ac5afaec16693
#: ../../ref/request-response.txt:360
msgid "Returns a generator that yields sequential chunks of data."
msgstr ""

# b2d501903d1f4e2d964e0c1912594368
#: ../../ref/request-response.txt:364
msgid "Read a number of bytes from the file."
msgstr ""

# 6fb467def31c4c3abb42f4a5c38982ca
#: ../../ref/request-response.txt:369
msgid "QueryDict objects"
msgstr ""

# e9a856d68c3d4ddb95a44a1de6504d8b
#: ../../ref/request-response.txt:373
msgid ""
"In an :class:`HttpRequest` object, the ``GET`` and ``POST`` attributes are "
"instances of ``django.http.QueryDict``. :class:`QueryDict` is a dictionary-"
"like class customized to deal with multiple values for the same key. This is "
"necessary because some HTML form elements, notably ``<select multiple="
"\"multiple\">``, pass multiple values for the same key."
msgstr ""

# 1f9476feed9a4d90bfa32b765feaf5b0
#: ../../ref/request-response.txt:379
msgid ""
"``QueryDict`` instances are immutable, unless you create a ``copy()`` of "
"them. That means you can't change attributes of ``request.POST`` and "
"``request.GET`` directly."
msgstr ""

# b9e915ed6f284116beda47f4d95c8046
#: ../../ref/request-response.txt:386
msgid ""
":class:`QueryDict` implements all the standard dictionary methods, because "
"it's a subclass of dictionary. Exceptions are outlined here:"
msgstr ""

# 64298ec74463404392de353c8e1a39cd
#: ../../ref/request-response.txt:391
msgid ""
"Returns the value for the given key. If the key has more than one value, "
"``__getitem__()`` returns the last value. Raises ``django.utils."
"datastructures.MultiValueDictKeyError`` if the key does not exist. (This is "
"a subclass of Python's standard ``KeyError``, so you can stick to catching "
"``KeyError``.)"
msgstr ""

# ab48628b72f64d3286f361b5660df8d9
#: ../../ref/request-response.txt:399
msgid ""
"Sets the given key to ``[value]`` (a Python list whose single element is "
"``value``). Note that this, as other dictionary functions that have side "
"effects, can only be called on a mutable ``QueryDict`` (one that was created "
"via ``copy()``)."
msgstr ""

# a2c70552019346a397f5a19bd3299c82
#: ../../ref/request-response.txt:406
msgid ""
"Returns ``True`` if the given key is set. This lets you do, e.g., ``if \"foo"
"\" in request.GET``."
msgstr ""

# 9b585016bebe4bd3b082b3112f167a1f
#: ../../ref/request-response.txt:411
msgid ""
"Uses the same logic as ``__getitem__()`` above, with a hook for returning a "
"default value if the key doesn't exist."
msgstr ""

# d2bb35cbad4c4da798af78738732d85c
#: ../../ref/request-response.txt:416
msgid ""
"Just like the standard dictionary ``setdefault()`` method, except it uses "
"``__setitem__()`` internally."
msgstr ""

# b1f036ce453547eaaed628c6f14f0925
#: ../../ref/request-response.txt:421
msgid ""
"Takes either a ``QueryDict`` or standard dictionary. Just like the standard "
"dictionary ``update()`` method, except it *appends* to the current "
"dictionary items rather than replacing them. For example::"
msgstr ""

# 5a23c45352034097bd96c79cc63791f0
#: ../../ref/request-response.txt:435
msgid ""
"Just like the standard dictionary ``items()`` method, except this uses the "
"same last-value logic as ``__getitem__()``. For example::"
msgstr ""

# 6cb31c3d66d8444ab71b6ae51d8060ac
#: ../../ref/request-response.txt:444
msgid ""
"Just like the standard dictionary ``iteritems()`` method. Like :meth:"
"`QueryDict.items()` this uses the same last-value logic as :meth:`QueryDict."
"__getitem__()`."
msgstr ""

# c92b0cb2cd654f32919cf533a73f053b
#: ../../ref/request-response.txt:450
msgid ""
"Like :meth:`QueryDict.iteritems()` except it includes all values, as a list, "
"for each member of the dictionary."
msgstr ""

# 5874dee147354cef8e2996a3c6d0395e
#: ../../ref/request-response.txt:455
msgid ""
"Just like the standard dictionary ``values()`` method, except this uses the "
"same last-value logic as ``__getitem__()``. For example::"
msgstr ""

# 7c9b1e2a10134c169bbaf695b47e3469
#: ../../ref/request-response.txt:464
msgid "Just like :meth:`QueryDict.values()`, except an iterator."
msgstr ""

# be432b76391744708295a54710298cde
#: ../../ref/request-response.txt:466
msgid "In addition, ``QueryDict`` has the following methods:"
msgstr ""

# 4bf9e24a69d7451bbdb3b1ba5428dccd
#: ../../ref/request-response.txt:470
msgid ""
"Returns a copy of the object, using ``copy.deepcopy()`` from the Python "
"standard library. The copy will be mutable -- that is, you can change its "
"values."
msgstr ""

# aedb438349d84b8ca5e2ce1324d1061a
#: ../../ref/request-response.txt:476
msgid ""
"Returns the data with the requested key, as a Python list. Returns an empty "
"list if the key doesn't exist and no default value was provided. It's "
"guaranteed to return a list of some sort unless the default value was no "
"list."
msgstr ""

# 1946fa40ca4c4e219df2735fc6446fd6
#: ../../ref/request-response.txt:486
msgid "Sets the given key to ``list_`` (unlike ``__setitem__()``)."
msgstr ""

# 8b44432beb7a4e949f32572d13529b4f
#: ../../ref/request-response.txt:490
msgid "Appends an item to the internal list associated with key."
msgstr ""

# 48151997663f43048c957f4a1ead5208
#: ../../ref/request-response.txt:494
msgid ""
"Just like ``setdefault``, except it takes a list of values instead of a "
"single value."
msgstr ""

# 2cbe5bc229ba4013a313d9da7fd6acbf
#: ../../ref/request-response.txt:499
msgid ""
"Like :meth:`items()`, except it includes all values, as a list, for each "
"member of the dictionary. For example::"
msgstr ""

# fadfc4aa6c2d4807bfb393f98fb17af2
#: ../../ref/request-response.txt:509
msgid ""
"Returns a list of values for the given key and removes them from the "
"dictionary. Raises ``KeyError`` if the key does not exist. For example::"
msgstr ""

# ebef76d764e346888e644004bbc85e34
#: ../../ref/request-response.txt:518
msgid ""
"Removes an arbitrary member of the dictionary (since there's no concept of "
"ordering), and returns a two value tuple containing the key and a list of "
"all values for the key. Raises ``KeyError`` when called on an empty "
"dictionary. For example::"
msgstr ""

# f40a1be102614c8399fd1cc0b942912e
#: ../../ref/request-response.txt:531
msgid ""
"Returns ``dict`` representation of ``QueryDict``. For every (key, list) pair "
"in ``QueryDict``, ``dict`` will have (key, item), where item is one element "
"of the list, using same logic as :meth:`QueryDict.__getitem__()`::"
msgstr ""

# 5318effa2f544ed8a4afa83d016e85b7
#: ../../ref/request-response.txt:520
msgid "Returns a string of the data in query-string format. Example::"
msgstr ""

# 2cd70b33921e4a3b80d755957670799d
#: ../../ref/request-response.txt:526
msgid ""
"Optionally, urlencode can be passed characters which do not require "
"encoding. For example::"
msgstr ""

# 2312d9c7939b4356aae0c28587e0119e
#: ../../ref/request-response.txt:535
msgid "HttpResponse objects"
msgstr ""

# 81683d8c014a4321b956438e1ca1d818
#: ../../ref/request-response.txt:539
msgid ""
"In contrast to :class:`HttpRequest` objects, which are created automatically "
"by Django, :class:`HttpResponse` objects are your responsibility. Each view "
"you write is responsible for instantiating, populating and returning an :"
"class:`HttpResponse`."
msgstr ""

# 07e5f050ec7e4e9c9c95f1251c52b33a
#: ../../ref/request-response.txt:544
msgid "The :class:`HttpResponse` class lives in the :mod:`django.http` module."
msgstr ""

# 3f5a8b12e0af4a5ebe4a247dac6c464e
#: ../../ref/request-response.txt:550
msgid "Passing strings"
msgstr ""

# 2924a29c9a234c15b93223da0c198dbf
#: ../../ref/request-response.txt:552
msgid ""
"Typical usage is to pass the contents of the page, as a string, to the :"
"class:`HttpResponse` constructor::"
msgstr ""

# 619b60b6d8db44daa204cd948dbacdc5
#: ../../ref/request-response.txt:559
msgid ""
"But if you want to add content incrementally, you can use ``response`` as a "
"file-like object::"
msgstr ""

# 815239bc5e8c4ec9aab518375b35051b
#: ../../ref/request-response.txt:567
msgid "Passing iterators"
msgstr ""

# 78811f3762df41e99a9402841c47f94c
#: ../../ref/request-response.txt:569
msgid ""
"Finally, you can pass ``HttpResponse`` an iterator rather than strings. If "
"you use this technique, the iterator should return strings."
msgstr ""

# e96cf231a673477bba3aabb86d7ff93c
#: ../../ref/request-response.txt:572
msgid ""
"Passing an iterator as content to :class:`HttpResponse` creates a streaming "
"response if (and only if) no middleware accesses the :attr:`HttpResponse."
"content` attribute before the response is returned."
msgstr ""

# 36b38ee91f2e4235b23bd3a5dc1be4bc
#: ../../ref/request-response.txt:578
msgid ""
"This technique is fragile and was deprecated in Django 1.5. If you need the "
"response to be streamed from the iterator to the client, you should use the :"
"class:`StreamingHttpResponse` class instead."
msgstr ""

# 8ca8807e93bb4db98e791ae81a84baa7
#: ../../ref/request-response.txt:582
msgid ""
"As of Django 1.7, when :class:`HttpResponse` is instantiated with an "
"iterator, it will consume it immediately, store the response content as a "
"string, and discard the iterator."
msgstr ""

# f22b9491829d4571967fed9dd5472ea6
#: ../../ref/request-response.txt:588
msgid ""
"You can now use :class:`HttpResponse` as a file-like object even if it was "
"instantiated with an iterator. Django will consume and save the content of "
"the iterator on first access."
msgstr ""

# 7cef6429cefd4327874e10bdc9b416cd
#: ../../ref/request-response.txt:593
msgid "Setting headers"
msgstr ""

# 844223a559b4441483792c94130d6d8e
#: ../../ref/request-response.txt:595
msgid ""
"To set or remove a header in your response, treat it like a dictionary::"
msgstr ""

# 360862005ba84a6cb0746e00b049a294
#: ../../ref/request-response.txt:601
msgid ""
"Note that unlike a dictionary, ``del`` doesn't raise ``KeyError`` if the "
"header doesn't exist."
msgstr ""

# dabd06a3f1a444329bef5c5297444e5d
#: ../../ref/request-response.txt:604
msgid ""
"HTTP headers cannot contain newlines. An attempt to set a header containing "
"a newline character (CR or LF) will raise ``BadHeaderError``"
msgstr ""

# a3824d30131d494384da0a60b6a964ac
#: ../../ref/request-response.txt:608
msgid "Telling the browser to treat the response as a file attachment"
msgstr ""

# 3905d7d85aaa4e9792bf79dc118ee165
#: ../../ref/request-response.txt:610
msgid ""
"To tell the browser to treat the response as a file attachment, use the "
"``content_type`` argument and set the ``Content-Disposition`` header. For "
"example, this is how you might return a Microsoft Excel spreadsheet::"
msgstr ""

# 16f42c8e79eb4e0896b374ee72d47038
#: ../../ref/request-response.txt:617
msgid ""
"There's nothing Django-specific about the ``Content-Disposition`` header, "
"but it's easy to forget the syntax, so we've included it here."
msgstr ""

# 818f2adce4724789aeee1616ccca5733
#: ../../ref/request-response.txt:625
msgid ""
"A string representing the content, encoded from a Unicode object if "
"necessary."
msgstr ""

# f2ba3f3a0f1640cca8c134e1a6e1f695
# 6e79d3eee74b44d6a6d940102d0cd98a
#: ../../ref/request-response.txt:630 ../../ref/request-response.txt:860
msgid "The `HTTP Status code`_ for the response."
msgstr ""

# dcd390e3c8af4db1a398556f6b63af4c
#: ../../ref/request-response.txt:634
msgid "This is always ``False``."
msgstr ""

# 0f00f6057adb45c5af52cb793105d5d6
#: ../../ref/request-response.txt:636
msgid ""
"This attribute exists so middleware can treat streaming responses "
"differently from regular responses."
msgstr ""

# fecfa7d384d5467ca1ee39a338eb3924
#: ../../ref/request-response.txt:644
msgid ""
"Instantiates an ``HttpResponse`` object with the given page content and "
"content type."
msgstr ""

# 7a491d22348c44f083ef9027a8f78eca
#: ../../ref/request-response.txt:647
msgid ""
"``content`` should be an iterator or a string. If it's an iterator, it "
"should return strings, and those strings will be joined together to form the "
"content of the response. If it is not an iterator or a string, it will be "
"converted to a string when accessed."
msgstr ""

# e0b907f3461148278746d420395aca3a
#: ../../ref/request-response.txt:653
msgid ""
"``content_type`` is the MIME type optionally completed by a character set "
"encoding and is used to fill the HTTP ``Content-Type`` header. If not "
"specified, it is formed by the :setting:`DEFAULT_CONTENT_TYPE` and :setting:"
"`DEFAULT_CHARSET` settings, by default: \"`text/html; charset=utf-8`\"."
msgstr ""

# edc182df3cd245febb1812512821b386
#: ../../ref/request-response.txt:658
msgid "Historically, this parameter was called ``mimetype`` (now deprecated)."
msgstr ""

# 6837e6a389c146cbbeed96b3d7284c9b
#: ../../ref/request-response.txt:660
msgid "``status`` is the `HTTP Status code`_ for the response."
msgstr ""

# 7bb26715b4124d4c9c4033b5e05f37ec
#: ../../ref/request-response.txt:665
msgid ""
"Sets the given header name to the given value. Both ``header`` and ``value`` "
"should be strings."
msgstr ""

# 07e27ae92f0141ecb2b99a9563615f09
#: ../../ref/request-response.txt:670
msgid ""
"Deletes the header with the given name. Fails silently if the header doesn't "
"exist. Case-insensitive."
msgstr ""

# 2e0911534f2045d08237a99f164a1330
#: ../../ref/request-response.txt:675
msgid "Returns the value for the given header name. Case-insensitive."
msgstr ""

# c8954dd6bf304953933bad35c0dec30a
#: ../../ref/request-response.txt:679
msgid ""
"Returns ``True`` or ``False`` based on a case-insensitive check for a header "
"with the given name."
msgstr ""

# 4942abf255af4e879b35a63d0f210757
#: ../../ref/request-response.txt:684
msgid ""
"Sets a cookie. The parameters are the same as in the :class:`Cookie.Morsel` "
"object in the Python standard library."
msgstr ""

# 9a24d3c0c3b34ab28e45a52ddb9b38dd
#: ../../ref/request-response.txt:687
msgid ""
"``max_age`` should be a number of seconds, or ``None`` (default) if the "
"cookie should last only as long as the client's browser session. If "
"``expires`` is not specified, it will be calculated."
msgstr ""

# 2ac9504b2aeb431da3afc85bf0b07922
#: ../../ref/request-response.txt:690
msgid ""
"``expires`` should either be a string in the format ``\"Wdy, DD-Mon-YY HH:MM:"
"SS GMT\"`` or a ``datetime.datetime`` object in UTC. If ``expires`` is a "
"``datetime`` object, the ``max_age`` will be calculated."
msgstr ""

# d3e82b0a1fda45eeb1be284119bf79fa
#: ../../ref/request-response.txt:694
msgid ""
"Use ``domain`` if you want to set a cross-domain cookie. For example, "
"``domain=\".lawrence.com\"`` will set a cookie that is readable by the "
"domains www.lawrence.com, blogs.lawrence.com and calendars.lawrence.com. "
"Otherwise, a cookie will only be readable by the domain that set it."
msgstr ""

# 4df4c6350ad84bdaab3d7ced1b7c4322
#: ../../ref/request-response.txt:699
msgid ""
"Use ``httponly=True`` if you want to prevent client-side JavaScript from "
"having access to the cookie."
msgstr ""

# 51acfb3a3f7a42cfb93733aeb37002ba
# 0174d2f197044fb2890513519973f3a6
#: ../../ref/request-response.txt:702 ../../ref/settings.txt:1737
msgid ""
"HTTPOnly_ is a flag included in a Set-Cookie HTTP response header. It is not "
"part of the :rfc:`2109` standard for cookies, and it isn't honored "
"consistently by all browsers. However, when it is honored, it can be a "
"useful way to mitigate the risk of client side script accessing the "
"protected cookie data."
msgstr ""

# e60d4583837243b28aa193ad3ffecf8d
#: ../../ref/request-response.txt:715
msgid ""
"Like :meth:`~HttpResponse.set_cookie()`, but :doc:`cryptographic signing </"
"topics/signing>` the cookie before setting it. Use in conjunction with :meth:"
"`HttpRequest.get_signed_cookie`. You can use the optional ``salt`` argument "
"for added key strength, but you will need to remember to pass it to the "
"corresponding :meth:`HttpRequest.get_signed_cookie` call."
msgstr ""

# 369f8e22a87e4db79c6b063400594e59
#: ../../ref/request-response.txt:724
msgid ""
"Deletes the cookie with the given key. Fails silently if the key doesn't "
"exist."
msgstr ""

# de00a2503b4148aeb9502cab79539236
#: ../../ref/request-response.txt:727
msgid ""
"Due to the way cookies work, ``path`` and ``domain`` should be the same "
"values you used in ``set_cookie()`` -- otherwise the cookie may not be "
"deleted."
msgstr ""

# 3ff14221b113439287aa6bd45a4765eb
# d6eceee404c446b5ace459f4d6048604
# 060dc7d54a3b4e248292a90220f75ec4
#: ../../ref/request-response.txt:733 ../../ref/request-response.txt:737
#: ../../ref/request-response.txt:741
msgid "This method makes an :class:`HttpResponse` instance a file-like object."
msgstr ""

# a72091a2a18b42279e965e6499fac1c6
#: ../../ref/request-response.txt:749
msgid "HttpResponse subclasses"
msgstr ""

# 9783fc7dee2549a080cc1b9af9d76daf
#: ../../ref/request-response.txt:751
msgid ""
"Django includes a number of ``HttpResponse`` subclasses that handle "
"different types of HTTP responses. Like ``HttpResponse``, these subclasses "
"live in :mod:`django.http`."
msgstr ""

# b94d98b5447e4e31b3538cce1c13d2eb
#: ../../ref/request-response.txt:757
msgid ""
"The first argument to the constructor is required -- the path to redirect "
"to. This can be a fully qualified URL (e.g. ``'http://www.yahoo.com/"
"search/'``) or an absolute path with no domain (e.g. ``'/search/'``). See :"
"class:`HttpResponse` for other optional constructor arguments. Note that "
"this returns an HTTP status code 302."
msgstr ""

# 141e886b7d1b478d98e007076e0f232f
#: ../../ref/request-response.txt:765
msgid ""
"Like :class:`HttpResponseRedirect`, but it returns a permanent redirect "
"(HTTP status code 301) instead of a \"found\" redirect (status code 302)."
msgstr ""

# 828a703741034b6b8c1359a7184fb57d
#: ../../ref/request-response.txt:770
msgid ""
"The constructor doesn't take any arguments and no content should be added to "
"this response. Use this to designate that a page hasn't been modified since "
"the user's last request (status code 304)."
msgstr ""

# 956c94bb0834497cb1e991b18073ea75
#: ../../ref/request-response.txt:776
msgid "Acts just like :class:`HttpResponse` but uses a 400 status code."
msgstr ""

# a013ab4ccdfd4302badd8221bd138c31
#: ../../ref/request-response.txt:780
msgid "Acts just like :class:`HttpResponse` but uses a 404 status code."
msgstr ""

# 8741a3a6ea82401b9059cde15254771e
#: ../../ref/request-response.txt:784
msgid "Acts just like :class:`HttpResponse` but uses a 403 status code."
msgstr ""

# a30d7f95be0448a0a105309dc63e7017
#: ../../ref/request-response.txt:788
msgid ""
"Like :class:`HttpResponse`, but uses a 405 status code. The first argument "
"to the constructor is required: a list of permitted methods (e.g. ``['GET', "
"'POST']``)."
msgstr ""

# b4d2946551474b3893cfcfc540432e60
#: ../../ref/request-response.txt:794
msgid "Acts just like :class:`HttpResponse` but uses a 410 status code."
msgstr ""

# 17d2940d8e014a2eae88a2e61d3225bc
#: ../../ref/request-response.txt:798
msgid "Acts just like :class:`HttpResponse` but uses a 500 status code."
msgstr ""

# c8d3c7783d1d44dcbac7a0a5a83e2ac7
#: ../../ref/request-response.txt:802
msgid ""
"If a custom subclass of :class:`HttpResponse` implements a ``render`` "
"method, Django will treat it as emulating a :class:`~django.template."
"response.SimpleTemplateResponse`, and the ``render`` method must itself "
"return a valid response object."
msgstr ""

# bca6f90ea31b40b7956ea285418b656b
#: ../../ref/request-response.txt:810
msgid "StreamingHttpResponse objects"
msgstr ""

# 8b3505d7ee574fd7867b753b2b02bfef
#: ../../ref/request-response.txt:816
msgid ""
"The :class:`StreamingHttpResponse` class is used to stream a response from "
"Django to the browser. You might want to do this if generating the response "
"takes too long or uses too much memory. For instance, it's useful for "
"generating large CSV files."
msgstr ""

# 956cf3560dfa4d8b8ed79f6268a460a0
#: ../../ref/request-response.txt:823
msgid ""
"Django is designed for short-lived requests. Streaming responses will tie a "
"worker process and keep a database connection idle in transaction for the "
"entire duration of the response. This may result in poor performance."
msgstr ""

# 3e59d72bcba34267a162e0f4fc206ce3
#: ../../ref/request-response.txt:827
msgid ""
"Generally speaking, you should perform expensive tasks outside of the "
"request-response cycle, rather than resorting to a streamed response."
msgstr ""

# ffff95bdf83a4931856ee2f48bf6e367
#: ../../ref/request-response.txt:830
msgid ""
"The :class:`StreamingHttpResponse` is not a subclass of :class:"
"`HttpResponse`, because it features a slightly different API. However, it is "
"almost identical, with the following notable differences:"
msgstr ""

# d7610ee785c04ba8b97c67877c90fe1e
#: ../../ref/request-response.txt:834
msgid "It should be given an iterator that yields strings as content."
msgstr ""

# e9469d322a6c4f6f98abdb073f69393e
#: ../../ref/request-response.txt:836
msgid ""
"You cannot access its content, except by iterating the response object "
"itself. This should only occur when the response is returned to the client."
msgstr ""

# 0795f155c454440b88a4a4fc3509d373
#: ../../ref/request-response.txt:839
msgid ""
"It has no ``content`` attribute. Instead, it has a :attr:"
"`~StreamingHttpResponse.streaming_content` attribute."
msgstr ""

# 5e7abb1411df4b57aec0dca91284ae2c
#: ../../ref/request-response.txt:842
msgid ""
"You cannot use the file-like object ``tell()`` or ``write()`` methods. Doing "
"so will raise an exception."
msgstr ""

# ae104bd43714413f9b0098f0a7685d0f
#: ../../ref/request-response.txt:845
msgid ""
":class:`StreamingHttpResponse` should only be used in situations where it is "
"absolutely required that the whole content isn't iterated before "
"transferring the data to the client. Because the content can't be accessed, "
"many middlewares can't function normally. For example the ``ETag`` and "
"``Content- Length`` headers can't be generated for streaming responses."
msgstr ""

# 909f891e705746e88ce4a1d94c6bad8e
#: ../../ref/request-response.txt:856
msgid "An iterator of strings representing the content."
msgstr ""

# 3a5e2bd0e136420ca9b17269159890aa
#: ../../ref/request-response.txt:864
msgid "This is always ``True``."
msgstr ""

# 5009eb1d46a24486bcdf4a88fe1d1295
#: ../../ref/settings.txt:11
msgid ""
"Be careful when you override settings, especially when the default value is "
"a non-empty tuple or dictionary, such as :setting:`MIDDLEWARE_CLASSES` and :"
"setting:`TEMPLATE_CONTEXT_PROCESSORS`. Make sure you keep the components "
"required by the features of Django you wish to use."
msgstr ""

# 520187490e6640a5ada137a740e15423
#: ../../ref/settings.txt:17
msgid "Available settings"
msgstr ""

# 05e4a348635b4024bbc6e8389979fcaa
#: ../../ref/settings.txt:19
msgid ""
"Here's a full list of all available settings, in alphabetical order, and "
"their default values."
msgstr ""

# 8dbd0343102e4ca28c5fb1788e9524e5
#: ../../ref/settings.txt:25
msgid "ABSOLUTE_URL_OVERRIDES"
msgstr ""

# 7b750deff6bc4a5bba4ba99473a875c5
# 63c78b9b9d6e4bcabe3e952a59345ddf
# c56d829066494d798850167e2ff34627
#: ../../ref/settings.txt:27 ../../ref/settings.txt:410
#: ../../ref/settings.txt:493
msgid "Default: ``{}`` (Empty dictionary)"
msgstr ""

# e8dc63b370524d40ac8a78890dbfc939
#: ../../ref/settings.txt:29
msgid ""
"A dictionary mapping ``\"app_label.model_name\"`` strings to functions that "
"take a model object and return its URL. This is a way of overriding "
"``get_absolute_url()`` methods on a per-installation basis. Example::"
msgstr ""

# 48b99a1e2bc6492d9afd320e864fe186
#: ../../ref/settings.txt:38
msgid ""
"Note that the model name used in this setting should be all lower-case, "
"regardless of the case of the actual model class name."
msgstr ""

# 90a7745117b841728f3e31c7241145cd
#: ../../ref/settings.txt:44
msgid "ADMIN_FOR"
msgstr ""

# 2239d6ee595348e5991c551908fed203
# 62c40e8cc82c499881d5708d8a39fb42
# 70c13af200a84177bccca74fff886422
# b9ff01c2d4fe4e44a2f467023beb35cb
# 253f6f85b7d346bd855f59475ab9a339
# 5897e50568714097aa7bbe187faf386c
# 04b8e35f903b40da84e788390df0e11f
# 25119f442303445cbe3c4453805a6e20
# 9356d347e39a4e258a45e80fb852a965
# 8a6adcdc435d426895146a1c59d423dd
# 5a50ed90398f443a93b940717e0e2977
#: ../../ref/settings.txt:46 ../../ref/settings.txt:59
#: ../../ref/settings.txt:112 ../../ref/settings.txt:932
#: ../../ref/settings.txt:1115 ../../ref/settings.txt:1191
#: ../../ref/settings.txt:1211 ../../ref/settings.txt:1290
#: ../../ref/settings.txt:1388 ../../ref/settings.txt:1551
#: ../../ref/settings.txt:1995
msgid "Default: ``()`` (Empty tuple)"
msgstr ""

# 587ac91e939e426b99058b404090acab
#: ../../ref/settings.txt:48
msgid ""
"Used for admin-site settings modules, this should be a tuple of settings "
"modules (in the format ``'foo.bar.baz'``) for which this site is an admin."
msgstr ""

# 7ae36ed09251455f9b88fb1321393516
#: ../../ref/settings.txt:51
msgid ""
"The admin site uses this in its automatically-introspected documentation of "
"models, views and template tags."
msgstr ""

# 5768b2d1f1e7488d82e46cc15c7c9e80
#: ../../ref/settings.txt:57
msgid "ADMINS"
msgstr ""

# 7c09efdf9fd6460fb09ffbb60108f6d8
#: ../../ref/settings.txt:61
msgid ""
"A tuple that lists people who get code error notifications. When "
"``DEBUG=False`` and a view raises an exception, Django will email these "
"people with the full exception information. Each member of the tuple should "
"be a tuple of (Full name, email address). Example::"
msgstr ""

# a047f844c3524fe9a9a5eb7e6677429e
#: ../../ref/settings.txt:68
msgid ""
"Note that Django will email *all* of these people whenever an error happens. "
"See :doc:`/howto/error-reporting` for more information."
msgstr ""

# 4993b2f892a84ba79c7e320594160d89
#: ../../ref/settings.txt:74
msgid "ALLOWED_HOSTS"
msgstr ""

# e733cc2116a74ffe9366f952d823fbc2
# 5d75398dc80e46a9a38b1124c5772ea4
#: ../../ref/settings.txt:76 ../../ref/settings.txt:680
msgid "Default: ``[]`` (Empty list)"
msgstr ""

# eb1b93c2a80c4ad3a066acc9f5104c6b
#: ../../ref/settings.txt:78
msgid ""
"A list of strings representing the host/domain names that this Django site "
"can serve. This is a security measure to prevent an attacker from poisoning "
"caches and password reset emails with links to malicious hosts by submitting "
"requests with a fake HTTP ``Host`` header, which is possible even under many "
"seemingly-safe webserver configurations."
msgstr ""

# 3d19a21a78ac4bd397043e8cdbb03737
#: ../../ref/settings.txt:84
msgid ""
"Values in this list can be fully qualified names (e.g. ``'www.example."
"com'``), in which case they will be matched against the request's ``Host`` "
"header exactly (case-insensitive, not including port). A value beginning "
"with a period can be used as a subdomain wildcard: ``'.example.com'`` will "
"match ``example.com``, ``www.example.com``, and any other subdomain of "
"``example.com``. A value of ``'*'`` will match anything; in this case you "
"are responsible to provide your own validation of the ``Host`` header "
"(perhaps in a middleware; if so this middleware must be listed first in :"
"setting:`MIDDLEWARE_CLASSES`)."
msgstr ""

# 55eb1eb62895469fac19ca75da3e1a37
#: ../../ref/settings.txt:94
msgid ""
"If the ``Host`` header (or ``X-Forwarded-Host`` if :setting:"
"`USE_X_FORWARDED_HOST` is enabled) does not match any value in this list, "
"the :meth:`django.http.HttpRequest.get_host()` method will raise :exc:"
"`~django.core.exceptions.SuspiciousOperation`."
msgstr ""

# 7cb9584c1f374740919fe87cdcb17a0e
#: ../../ref/settings.txt:99
msgid ""
"When :setting:`DEBUG` is ``True`` or when running tests, host validation is "
"disabled; any host will be accepted. Thus it's usually only necessary to set "
"it in production."
msgstr ""

# 9c2a5dfba2d14e41b33c237f5bcb2a7c
#: ../../ref/settings.txt:103
msgid ""
"This validation only applies via :meth:`~django.http.HttpRequest."
"get_host()`; if your code accesses the ``Host`` header directly from "
"``request.META`` you are bypassing this security protection."
msgstr ""

# 6576ab2d6c3243c09cccce1761148dbd
#: ../../ref/settings.txt:110
msgid "ALLOWED_INCLUDE_ROOTS"
msgstr ""

# 163ff05dc69b46d98e236a0094d25d4e
#: ../../ref/settings.txt:114
msgid ""
"A tuple of strings representing allowed prefixes for the ``{% ssi %}`` "
"template tag. This is a security measure, so that template authors can't "
"access files that they shouldn't be accessing."
msgstr ""

# a69613ba415b4ad7990e9776339eeba1
#: ../../ref/settings.txt:118
msgid ""
"For example, if :setting:`ALLOWED_INCLUDE_ROOTS` is ``('/home/html', '/var/"
"www')``, then ``{% ssi /home/html/foo.txt %}`` would work, but ``{% ssi /etc/"
"passwd %}`` wouldn't."
msgstr ""

# 305dc6823b5347dcbcb1608cfcbed94e
#: ../../ref/settings.txt:125
msgid "APPEND_SLASH"
msgstr ""

# badc48643c25447599026e94304a3af4
# 710484e7c31446468163db7ba891c9fc
# 9ff1b602351c41dfbcb929a672603083
# c2be143f5f2849e592234c552d32a3ff
# cc573794f560488d919095eb5b6d002a
#: ../../ref/settings.txt:127 ../../ref/settings.txt:608
#: ../../ref/settings.txt:632 ../../ref/settings.txt:1731
#: ../../ref/settings.txt:2174
msgid "Default: ``True``"
msgstr ""

# 193371b7836943488f0dc4022e9f5221
#: ../../ref/settings.txt:129
msgid ""
"When set to ``True``, if the request URL does not match any of the patterns "
"in the URLconf and it doesn't end in a slash, an HTTP redirect is issued to "
"the same URL with a slash appended. Note that the redirect may cause any "
"data submitted in a POST request to be lost."
msgstr ""

# 729eb81bfe0f43cb9c18419d2bb795cc
#: ../../ref/settings.txt:134
msgid ""
"The :setting:`APPEND_SLASH` setting is only used if :class:`~django."
"middleware.common.CommonMiddleware` is installed (see :doc:`/topics/http/"
"middleware`). See also :setting:`PREPEND_WWW`."
msgstr ""

# 206b83de14cf4b1d935ea01a5603fd7f
#: ../../ref/settings.txt:141
msgid "AUTHENTICATION_BACKENDS"
msgstr ""

# 9bee71fd3f52426899116729a87e990c
#: ../../ref/settings.txt:143
msgid "Default: ``('django.contrib.auth.backends.ModelBackend',)``"
msgstr ""

# 7dc18cb785d7419b8c95d1216ca467d1
#: ../../ref/settings.txt:145
msgid ""
"A tuple of authentication backend classes (as strings) to use when "
"attempting to authenticate a user. See the :ref:`authentication backends "
"documentation <authentication-backends>` for details."
msgstr ""

# 35034d82b01f4a9e90ac7971a8980a10
#: ../../ref/settings.txt:152
msgid "AUTH_USER_MODEL"
msgstr ""

# e64bfc8ef80c4bda8b65acc4c069f269
#: ../../ref/settings.txt:154
msgid "Default: 'auth.User'"
msgstr ""

# d1ca708c540b43d281b40c859e810987
#: ../../ref/settings.txt:156
msgid "The model to use to represent a User. See :ref:`auth-custom-user`."
msgstr ""

# c5e1c1f9ade340828226029cfe5bcb49
#: ../../ref/settings.txt:161
msgid "CACHES"
msgstr ""

# 35394fcaad2546e785bdfd9f053dba9d
#: ../../ref/settings.txt:171
msgid ""
"A dictionary containing the settings for all caches to be used with Django. "
"It is a nested dictionary whose contents maps cache aliases to a dictionary "
"containing the options for an individual cache."
msgstr ""

# 545fb2574a274c829e2de4d854ec3e9e
#: ../../ref/settings.txt:175
msgid ""
"The :setting:`CACHES` setting must configure a ``default`` cache; any number "
"of additional caches may also be specified. If you are using a cache backend "
"other than the local memory cache, or you need to define multiple caches, "
"other options will be required. The following cache options are available."
msgstr ""

# b3e243404b7e4459805c042a81e63c05
#: ../../ref/settings.txt:184
msgid "BACKEND"
msgstr ""

# 6feeaaff738b49d2939559abff185ed5
# 9447f12f97ef483b84e228b227bc149f
# 700fe273b3e64386ae477a36d8540245
# 9658fa78f578480b8fad4a4d4e6d501d
# 00214c21b337402f94ad6d7cbe78d8f3
# c3031f3385c946b9b0e011691e14735c
# bc0a29c8da2e47178714334b89398b6c
# 46054d2c55c34e78bdce8251a90d28b7
# c7d28e45e497477e91e318110bf987b6
# e0f1ac55ffc442b4861e4d1634bf2669
# 413a11d5c1294e81838c7c0cab4b2eaf
# 64082c4052764cbc8940610b02436e9b
# 73613f15be884c34b0057764bc0f0348
# a6735930f6d94d1480458e282f24e2f6
# 07f4282de97644998b4d600334c9e70f
# d37a9f0bfaed4039958de8b34cd80f42
# 3c37f8cde5a14ac6ae2d43127297cc5e
# 502e3c4e4ccf417eb8de4a2fe64994ab
# 8ba6ad19106f492582a5a932c54e9bcb
#: ../../ref/settings.txt:186 ../../ref/settings.txt:225
#: ../../ref/settings.txt:237 ../../ref/settings.txt:314
#: ../../ref/settings.txt:437 ../../ref/settings.txt:457
#: ../../ref/settings.txt:482 ../../ref/settings.txt:507
#: ../../ref/settings.txt:516 ../../ref/settings.txt:526
#: ../../ref/settings.txt:912 ../../ref/settings.txt:922
#: ../../ref/settings.txt:974 ../../ref/settings.txt:988
#: ../../ref/settings.txt:1398 ../../ref/settings.txt:1412
#: ../../ref/settings.txt:1587 ../../ref/settings.txt:1905
#: ../../ref/settings.txt:2025
msgid "Default: ``''`` (Empty string)"
msgstr ""

# 17a40f693c33488e93cd613e7a6425f5
#: ../../ref/settings.txt:188
msgid "The cache backend to use. The built-in cache backends are:"
msgstr ""

# e9bc3a5dbef847f494cff0edc5b5dfdb
#: ../../ref/settings.txt:190
msgid "``'django.core.cache.backends.db.DatabaseCache'``"
msgstr ""

# d10b85e0164d4e43b56c8211d9d34766
#: ../../ref/settings.txt:191
msgid "``'django.core.cache.backends.dummy.DummyCache'``"
msgstr ""

# 5a69bb21a000495e871ae38316e18d41
#: ../../ref/settings.txt:192
msgid "``'django.core.cache.backends.filebased.FileBasedCache'``"
msgstr ""

# 489b371d797d4df6be7b9a807e82fa43
#: ../../ref/settings.txt:193
msgid "``'django.core.cache.backends.locmem.LocMemCache'``"
msgstr ""

# abac4ece9e18407787da724a2b5e54a1
#: ../../ref/settings.txt:194
msgid "``'django.core.cache.backends.memcached.MemcachedCache'``"
msgstr ""

# c5e7b1129a5a4a7b8531ca9be5c73550
#: ../../ref/settings.txt:195
msgid "``'django.core.cache.backends.memcached.PyLibMCCache'``"
msgstr ""

# d4b91032568f4c99a710ec339eee70a5
#: ../../ref/settings.txt:197
msgid ""
"You can use a cache backend that doesn't ship with Django by setting :"
"setting:`BACKEND <CACHES-BACKEND>` to a fully-qualified path of a cache "
"backend class (i.e. ``mypackage.backends.whatever.WhateverCache``). Writing "
"a whole new cache backend from scratch is left as an exercise to the reader; "
"see the other backends for examples."
msgstr ""

# 41b191e194644fd8b9bd100d3dffafdf
#: ../../ref/settings.txt:206
msgid "KEY_FUNCTION"
msgstr ""

# 3c3b0029dcb84a4fa569220e937ae8bb
#: ../../ref/settings.txt:208
msgid ""
"A string containing a dotted path to a function that defines how to compose "
"a prefix, version and key into a final cache key. The default implementation "
"is equivalent to the function::"
msgstr ""

# 1feddfa5d88042f7a8feb48c823f14dc
#: ../../ref/settings.txt:215
msgid ""
"You may use any key function you want, as long as it has the same argument "
"signature."
msgstr ""

# e4b5cab4c90644a097fbe00808a1fa8a
#: ../../ref/settings.txt:218
msgid ""
"See the :ref:`cache documentation <cache_key_transformation>` for more "
"information."
msgstr ""

# a86f3fa77e8146b48adad2d0ad2f84d5
#: ../../ref/settings.txt:223
msgid "KEY_PREFIX"
msgstr ""

# b8d750bcfef041ee9b6ffeb1ba5e32bc
#: ../../ref/settings.txt:227
msgid ""
"A string that will be automatically included (prepended by default) to all "
"cache keys used by the Django server."
msgstr ""

# e67aa5c988654a5dbdd24cfc24e7d75d
#: ../../ref/settings.txt:230
msgid ""
"See the :ref:`cache documentation <cache_key_prefixing>` for more "
"information."
msgstr ""

# 44a8d8b7eeea478ea5502746291f8af4
#: ../../ref/settings.txt:235
msgid "LOCATION"
msgstr ""

# 81dfdefb9a1d4548874aee70e1327f61
#: ../../ref/settings.txt:239
msgid ""
"The location of the cache to use. This might be the directory for a file "
"system cache, a host and port for a memcache server, or simply an "
"identifying name for a local memory cache. e.g.::"
msgstr ""

# c6a237fbb02e426a87e6b396d6b7106e
# abed3923660842db98d9dd86353b4598
#: ../../ref/settings.txt:253 ../../ref/settings.txt:491
msgid "OPTIONS"
msgstr ""

# aecad8cbb5584c5e86e11443482c59a0
#: ../../ref/settings.txt:255
msgid "Default: None"
msgstr ""

# 43b33c909317462fb36fc8b47d4e5385
#: ../../ref/settings.txt:257
msgid ""
"Extra parameters to pass to the cache backend. Available parameters vary "
"depending on your cache backend."
msgstr ""

# da6a42e58d144a85870a3abc05b27a82
#: ../../ref/settings.txt:260
msgid ""
"Some information on available parameters can be found in the :doc:`Cache "
"Backends </topics/cache>` documentation. For more information, consult your "
"backend module's own documentation."
msgstr ""

# 30015624742e4df9815a8b3b300cc25a
#: ../../ref/settings.txt:267
msgid "TIMEOUT"
msgstr ""

# 2d16c4ba29fb4468b95740c6d2f70646
#: ../../ref/settings.txt:269
msgid "Default: 300"
msgstr ""

# b5c5725a93b34aaaa5896fc5e5e8c556
#: ../../ref/settings.txt:271
msgid "The number of seconds before a cache entry is considered stale."
msgstr ""

# cb82b3c25e6848358c8e922626df5c13
#: ../../ref/settings.txt:276
msgid "VERSION"
msgstr ""

# 47dbadd85fe841d6ab8eca9ebde8874d
#: ../../ref/settings.txt:278
msgid "Default: ``1``"
msgstr ""

# 984eaf4685624f6980eb52fbf8b55bf2
#: ../../ref/settings.txt:280
msgid ""
"The default version number for cache keys generated by the Django server."
msgstr ""

# 69af3e352e954dc8aa384c5753d6782b
#: ../../ref/settings.txt:282
msgid ""
"See the :ref:`cache documentation <cache_versioning>` for more information."
msgstr ""

# a69441a990394f6ab01066b5857ac778
#: ../../ref/settings.txt:287
msgid "CACHE_MIDDLEWARE_ALIAS"
msgstr ""

# 09750464adbf4aac985f5c6110749be6
# c93be5512a784a0e9c74a931e03c1d8f
#: ../../ref/settings.txt:289 ../../ref/settings.txt:1778
msgid "Default: ``default``"
msgstr ""

# c84efca6f49a4a529b7b73f12d8f7a1c
#: ../../ref/settings.txt:291
msgid "The cache connection to use for the cache middleware."
msgstr ""

# 184a49cb50b84bb1b3aa3920ace9b5c1
#: ../../ref/settings.txt:296
msgid "CACHE_MIDDLEWARE_ANONYMOUS_ONLY"
msgstr ""

# ac0e51b717e44e698ed1746d3a6c60ec
#: ../../ref/settings.txt:300
msgid ""
"If the value of this setting is ``True``, only anonymous requests (i.e., not "
"those made by a logged-in user) will be cached.  Otherwise, the middleware "
"caches every page that doesn't have GET or POST parameters."
msgstr ""

# 936250aefeba45fd8aaf38e4aaf6cfd3
#: ../../ref/settings.txt:304
msgid ""
"If you set the value of this setting to ``True``, you should make sure "
"you've activated ``AuthenticationMiddleware``."
msgstr ""

# fb75f554c9d04e9a9c9d504fa99e9789
# c93592458e6547aabbf3cc213192db2a
# 72c8ccc47cad47129e01e5e469f0c6ab
#: ../../ref/settings.txt:307 ../../ref/settings.txt:318
#: ../../ref/settings.txt:330
msgid "See :doc:`/topics/cache`."
msgstr ""

# 41bbfbcf49f642b8a43f8492175b8e83
#: ../../ref/settings.txt:312
msgid "CACHE_MIDDLEWARE_KEY_PREFIX"
msgstr ""

# bffcff556fc94a6b8182658acbf82eac
#: ../../ref/settings.txt:316
msgid "The cache key prefix that the cache middleware should use."
msgstr ""

# abb05b89cab3405f91dc0a88c3bb2b5d
#: ../../ref/settings.txt:323
msgid "CACHE_MIDDLEWARE_SECONDS"
msgstr ""

# d3cc281f0fcd403891c4ed9de816e0a3
#: ../../ref/settings.txt:325
msgid "Default: ``600``"
msgstr ""

# eaad0df15fc241d6901a9a234eb6a63e
#: ../../ref/settings.txt:327
msgid ""
"The default number of seconds to cache a page when the caching middleware or "
"``cache_page()`` decorator is used."
msgstr ""

# dad178a22c8c453697cd9ce881f055a9
#: ../../ref/settings.txt:339
msgid ""
"The domain to be used when setting the CSRF cookie.  This can be useful for "
"easily allowing cross-subdomain requests to be excluded from the normal "
"cross site request forgery protection.  It should be set to a string such as "
"``\".example.com\"`` to allow a POST request from a form on one subdomain to "
"be accepted by accepted by a view served from another subdomain."
msgstr ""

# 2fc6c1b3cf7548a5939861e92bf097d4
#: ../../ref/settings.txt:345
msgid ""
"Please note that the presence of this setting does not imply that Django's "
"CSRF protection is safe from cross-subdomain attacks by default - please see "
"the :ref:`CSRF limitations <csrf-limitations>` section."
msgstr ""

# 4976ff496782419e845ed10f904a11f1
#: ../../ref/settings.txt:356
msgid ""
"The name of the cookie to use for the CSRF authentication token. This can be "
"whatever you want.  See :doc:`/ref/contrib/csrf`."
msgstr ""

# 18e0f0d39bc7441192843056fee85919
#: ../../ref/settings.txt:400
msgid ""
"where ``reason`` is a short message (intended for developers or logging, not "
"for end users) indicating the reason the request was rejected.  See :doc:`/"
"ref/contrib/csrf`."
msgstr ""

# 87cb2e60d0204365b57c8e4e71dfc583
#: ../../ref/settings.txt:408
msgid "DATABASES"
msgstr ""

# e442d1c12e894f5493afbea8982d0961
#: ../../ref/settings.txt:412
msgid ""
"A dictionary containing the settings for all databases to be used with "
"Django. It is a nested dictionary whose contents maps database aliases to a "
"dictionary containing the options for an individual database."
msgstr ""

# c27eb256c7164ad095e2c291d81a242b
#: ../../ref/settings.txt:416
msgid ""
"The :setting:`DATABASES` setting must configure a ``default`` database; any "
"number of additional databases may also be specified."
msgstr ""

# 0496bf64291246d0aa89b124213a77a5
#: ../../ref/settings.txt:419
msgid ""
"The simplest possible settings file is for a single-database setup using "
"SQLite. This can be configured using the following::"
msgstr ""

# 29d9394ead1f44a38cada13ae253e5ed
#: ../../ref/settings.txt:429
msgid ""
"For other database backends, or more complex SQLite configurations, other "
"options will be required. The following inner options are available."
msgstr ""

# 20e9b209679746beb4b74d6f40673f92
#: ../../ref/settings.txt:435
msgid "ENGINE"
msgstr ""

# 77867f33b6a94fceb6379e2e34de8bc1
#: ../../ref/settings.txt:439
msgid "The database backend to use. The built-in database backends are:"
msgstr ""

# b180aa4445d643c7a3cb636c1ec951b9
#: ../../ref/settings.txt:441
msgid "``'django.db.backends.postgresql_psycopg2'``"
msgstr ""

# 359ae87bf02540ffa1091ecbf9bc4e3e
#: ../../ref/settings.txt:442
msgid "``'django.db.backends.mysql'``"
msgstr ""

# 5ff14c67572a4b09a401cdce96f82eee
#: ../../ref/settings.txt:443
msgid "``'django.db.backends.sqlite3'``"
msgstr ""

# 04eeeb25e38a4d2ca18cce8c9ac68315
#: ../../ref/settings.txt:444
msgid "``'django.db.backends.oracle'``"
msgstr ""

# c63453f9d9404dcfac5a08ede8c82370
#: ../../ref/settings.txt:446
msgid ""
"You can use a database backend that doesn't ship with Django by setting "
"``ENGINE`` to a fully-qualified path (i.e. ``mypackage.backends.whatever``). "
"Writing a whole new database backend from scratch is left as an exercise to "
"the reader; see the other backends for examples."
msgstr ""

# 2ad3bf4dd338458d9969ee8df74907e3
#: ../../ref/settings.txt:455
msgid "HOST"
msgstr ""

# b9bd88b39e2141c394bc5b46bfdab7e5
#: ../../ref/settings.txt:459
msgid ""
"Which host to use when connecting to the database. An empty string means "
"localhost. Not used with SQLite."
msgstr ""

# c3de3cf4cb82406eae6daf19732c9282
#: ../../ref/settings.txt:462
msgid ""
"If this value starts with a forward slash (``'/'``) and you're using MySQL, "
"MySQL will connect via a Unix socket to the specified socket. For example::"
msgstr ""

# 9fe256440c4c4740b631c5291e0c0078
#: ../../ref/settings.txt:467
msgid ""
"If you're using MySQL and this value *doesn't* start with a forward slash, "
"then this value is assumed to be the host."
msgstr ""

# 0931bcd2f457443bbe02ac804cd415cc
#: ../../ref/settings.txt:470
msgid ""
"If you're using PostgreSQL, by default (empty :setting:`HOST`), the "
"connection to the database is done through UNIX domain sockets ('local' "
"lines in ``pg_hba.conf``). If you want to connect through TCP sockets, set :"
"setting:`HOST` to 'localhost' or '127.0.0.1' ('host' lines in ``pg_hba."
"conf``). On Windows, you should always define :setting:`HOST`, as UNIX "
"domain sockets are not available."
msgstr ""

# 5022727153e442c4871995135d4f4d09
#: ../../ref/settings.txt:480
msgid "NAME"
msgstr ""

# dc73dc4bb70148f18f3de69727524561
#: ../../ref/settings.txt:484
msgid ""
"The name of the database to use. For SQLite, it's the full path to the "
"database file. When specifying the path, always use forward slashes, even on "
"Windows (e.g. ``C:/homes/user/mysite/sqlite3.db``)."
msgstr ""

# 9fa2a14ef01e4e25ae1364269614e06b
#: ../../ref/settings.txt:495
msgid ""
"Extra parameters to use when connecting to the database. Available "
"parameters vary depending on your database backend."
msgstr ""

# 919dd7147dc84c1f9a5838ad58d81362
#: ../../ref/settings.txt:498
msgid ""
"Some information on available parameters can be found in the :doc:`Database "
"Backends </ref/databases>` documentation. For more information, consult your "
"backend module's own documentation."
msgstr ""

# 1fe86b32483e4a61a96b085005703404
#: ../../ref/settings.txt:505
msgid "PASSWORD"
msgstr ""

# 178df7a2894b4a788b3cbe7b11d7834b
#: ../../ref/settings.txt:509
msgid ""
"The password to use when connecting to the database. Not used with SQLite."
msgstr ""

# 4b9d186fd4694304b37ce8663c4a7d65
#: ../../ref/settings.txt:514
msgid "PORT"
msgstr ""

# f4d82c5429fe413391dff3e2e686c51d
#: ../../ref/settings.txt:518
msgid ""
"The port to use when connecting to the database. An empty string means the "
"default port. Not used with SQLite."
msgstr ""

# fc17608d5f7d4f93911171420dba2a21
#: ../../ref/settings.txt:524
msgid "USER"
msgstr ""

# 1ae2a51b5d664fff856171464d626bd1
#: ../../ref/settings.txt:528
msgid ""
"The username to use when connecting to the database. Not used with SQLite."
msgstr ""

# e7f4a8e535b249efb91a5580589825ca
#: ../../ref/settings.txt:533
msgid "TEST_CHARSET"
msgstr ""

# a831c18bab1349d8ae22a33205840ad7
#: ../../ref/settings.txt:537
msgid ""
"The character set encoding used to create the test database. The value of "
"this string is passed directly through to the database, so its format is "
"backend-specific."
msgstr ""

# 9ee3f9811117433a86dbe7fd0ad12f58
#: ../../ref/settings.txt:541
msgid ""
"Supported for the PostgreSQL_ (``postgresql_psycopg2``) and MySQL_ "
"(``mysql``) backends."
msgstr ""

# 9d3a79133b944a488a95d620850d179a
#: ../../ref/settings.txt:550
msgid "TEST_COLLATION"
msgstr ""

# 53688799aba74e448599c97c74f88470
#: ../../ref/settings.txt:554
msgid ""
"The collation order to use when creating the test database. This value is "
"passed directly to the backend, so its format is backend-specific."
msgstr ""

# b987a10e3fc2482d889a0f764743e359
#: ../../ref/settings.txt:557
msgid ""
"Only supported for the ``mysql`` backend (see the `MySQL manual`_ for "
"details)."
msgstr ""

# 24bed88dae544f71b685ef60d76a7d53
#: ../../ref/settings.txt:564
msgid "TEST_DEPENDENCIES"
msgstr ""

# 669da9ae2d724a88afdda164ffc332cf
#: ../../ref/settings.txt:566
msgid ""
"Default: ``['default']``, for all databases other than ``default``, which "
"has no dependencies."
msgstr ""

# 6792297602044cf9b54d3bdcdf098ce9
#: ../../ref/settings.txt:569
msgid ""
"The creation-order dependencies of the database. See the documentation on :"
"ref:`controlling the creation order of test databases <topics-testing-"
"creation-dependencies>` for details."
msgstr ""

# 98c5ec878cdd43619d7b49528963b524
#: ../../ref/settings.txt:576
msgid "TEST_MIRROR"
msgstr ""

# 2b6f4f70d59a4405af794e46d75bacbe
#: ../../ref/settings.txt:580
msgid ""
"The alias of the database that this database should mirror during testing."
msgstr ""

# 5507e644019344be9eecdc544753733b
#: ../../ref/settings.txt:583
msgid ""
"This setting exists to allow for testing of master/slave configurations of "
"multiple databases. See the documentation on :ref:`testing master/slave "
"configurations <topics-testing-masterslave>` for details."
msgstr ""

# da4a8a45f27747e7b94b81a23eae7a0c
#: ../../ref/settings.txt:591
msgid "TEST_NAME"
msgstr ""

# 14a01966ad984d4893977bf93023d537
#: ../../ref/settings.txt:595
msgid "The name of database to use when running the test suite."
msgstr ""

# a91ba0a8e5f9409d9016b88607fc7451
#: ../../ref/settings.txt:597
msgid ""
"If the default value (``None``) is used with the SQLite database engine, the "
"tests will use a memory resident database. For all other database engines "
"the test database will use the name ``'test_' + DATABASE_NAME``."
msgstr ""

# 483362ef1e4f401ba4d163fa9aa064b3
#: ../../ref/settings.txt:601
msgid "See :ref:`the-test-database`."
msgstr ""

# 87ad79623971499caef0a3b953f48e7e
#: ../../ref/settings.txt:606
msgid "TEST_CREATE"
msgstr ""

# 090622a5933b4b2a917d2c50a8b95d27
# 6ca97beb88c7425c94b243c55a1c31dd
# f633ce425f4f4289ab786f98c7b6bcc9
# b9e9a70c700e4b77ac6cdc497ffb9c01
# a4407cd044104f068c99e1cc457df459
# 8cedad69eb1e442f8d254aa6fad1136d
#: ../../ref/settings.txt:610 ../../ref/settings.txt:622
#: ../../ref/settings.txt:634 ../../ref/settings.txt:646
#: ../../ref/settings.txt:658 ../../ref/settings.txt:670
msgid "This is an Oracle-specific setting."
msgstr ""

# 5425b51f23b04b889fa8716a58c6bb37
#: ../../ref/settings.txt:612
msgid ""
"If it is set to ``False``, the test tablespaces won't be automatically "
"created at the beginning of the tests and dropped at the end."
msgstr ""

# 5c1001d69ca044d59e103e9818118a66
#: ../../ref/settings.txt:618
msgid "TEST_USER"
msgstr ""

# 681b4915d1a34a8396aaaea27731c45b
#: ../../ref/settings.txt:624
msgid ""
"The username to use when connecting to the Oracle database that will be used "
"when running tests. If not provided, Django will use ``'test_' + USER``."
msgstr ""

# 266da85a94f94b739ed7b24eaa348a7c
#: ../../ref/settings.txt:630
msgid "TEST_USER_CREATE"
msgstr ""

# d50ba0fac8c045f094adf0301fd405ca
#: ../../ref/settings.txt:636
msgid ""
"If it is set to ``False``, the test user won't be automatically created at "
"the beginning of the tests and dropped at the end."
msgstr ""

# dd3053b94b1745da817c0de741eebf4e
#: ../../ref/settings.txt:642
msgid "TEST_PASSWD"
msgstr ""

# 657e452cb37d42d99313396956aab7ca
#: ../../ref/settings.txt:648
msgid ""
"The password to use when connecting to the Oracle database that will be used "
"when running tests. If not provided, Django will use a hardcoded default "
"value."
msgstr ""

# e2ac04efa4cf4fc7b53a0250e377afe1
#: ../../ref/settings.txt:654
msgid "TEST_TBLSPACE"
msgstr ""

# ed26d883dd4b4116964264d17ebdc00b
#: ../../ref/settings.txt:660
msgid ""
"The name of the tablespace that will be used when running tests. If not "
"provided, Django will use ``'test_' + NAME``."
msgstr ""

# 045f53e5d0b54235b0b3a2eb8e2645de
#: ../../ref/settings.txt:666
msgid "TEST_TBLSPACE_TMP"
msgstr ""

# 2d7a6427475c454ca3b4cfb2770f00a9
#: ../../ref/settings.txt:672
msgid ""
"The name of the temporary tablespace that will be used when running tests. "
"If not provided, Django will use ``'test_' + NAME + '_temp'``."
msgstr ""

# e9c69f4e5e6d4fef905dba6953b83b23
#: ../../ref/settings.txt:678
msgid "DATABASE_ROUTERS"
msgstr ""

# 3144a251b3284b949f3645a779808d62
#: ../../ref/settings.txt:682
msgid ""
"The list of routers that will be used to determine which database to use "
"when performing a database queries."
msgstr ""

# 232ffc37781b4a4580aaa9b0385a7e88
#: ../../ref/settings.txt:685
msgid ""
"See the documentation on :ref:`automatic database routing in multi database "
"configurations <topics-db-multi-db-routing>`."
msgstr ""

# ac149f915b6c4f05867b86d893a136a9
#: ../../ref/settings.txt:691
msgid "DATE_FORMAT"
msgstr ""

# a4e7f8c2a2374fa4bc67d95f0545da29
#: ../../ref/settings.txt:693
msgid "Default: ``'N j, Y'`` (e.g. ``Feb. 4, 2003``)"
msgstr ""

# b98b3d02a77a4cd996c501e94d649945
#: ../../ref/settings.txt:695
msgid ""
"The default formatting to use for displaying date fields in any part of the "
"system. Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead. See :"
"tfilter:`allowed date format strings <date>`."
msgstr ""

# 96480c7c50844b5287e1d90503536550
#: ../../ref/settings.txt:700
msgid ""
"See also :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :setting:"
"`SHORT_DATE_FORMAT`."
msgstr ""

# ea3623d159644c2da4bc3eb46606d5d5
#: ../../ref/settings.txt:705
msgid "DATE_INPUT_FORMATS"
msgstr ""

# 69121c8df1e94a0bb3a146f41e7903ac
#: ../../ref/settings.txt:717
msgid ""
"A tuple of formats that will be accepted when inputting data on a date "
"field. Formats will be tried in order, using the first valid one. Note that "
"these format strings use Python's datetime_ module syntax, not the format "
"strings from the ``date`` Django template tag."
msgstr ""

# d46c091cb6b94477b90c51c6c34e69fb
# 487492dc50d141aabafb2ce02108dde4
# 0543383389d94395bfcc2d354570528e
#: ../../ref/settings.txt:722 ../../ref/settings.txt:770
#: ../../ref/settings.txt:2088
msgid ""
"When :setting:`USE_L10N` is ``True``, the locale-dictated format has higher "
"precedence and will be applied instead."
msgstr ""

# cf87c13fe7ff49008c4da0b28bd5e8ba
#: ../../ref/settings.txt:725
msgid ""
"See also :setting:`DATETIME_INPUT_FORMATS` and :setting:`TIME_INPUT_FORMATS`."
msgstr ""

# 4ec4e578f5e8414c86479af0532113c4
#: ../../ref/settings.txt:732
msgid "DATETIME_FORMAT"
msgstr ""

# 1e94313e622b4225a3a4ea666f675ab8
#: ../../ref/settings.txt:734
msgid "Default: ``'N j, Y, P'`` (e.g. ``Feb. 4, 2003, 4 p.m.``)"
msgstr ""

# 6f4061bd09cb408ea7922a9bf98cf040
#: ../../ref/settings.txt:736
msgid ""
"The default formatting to use for displaying datetime fields in any part of "
"the system. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"locale-dictated format has higher precedence and will be applied instead. "
"See :tfilter:`allowed date format strings <date>`."
msgstr ""

# b7319538ea93484d8e4c933fc6a6c616
#: ../../ref/settings.txt:741
msgid ""
"See also :setting:`DATE_FORMAT`, :setting:`TIME_FORMAT` and :setting:"
"`SHORT_DATETIME_FORMAT`."
msgstr ""

# 72a37461821944289db6a4433db04b9e
#: ../../ref/settings.txt:746
msgid "DATETIME_INPUT_FORMATS"
msgstr ""

# 998da16d93d745c784c30839b9ea21ec
#: ../../ref/settings.txt:765
msgid ""
"A tuple of formats that will be accepted when inputting data on a datetime "
"field. Formats will be tried in order, using the first valid one. Note that "
"these format strings use Python's datetime_ module syntax, not the format "
"strings from the ``date`` Django template tag."
msgstr ""

# fdf2c710811c44fa82e87489968c06fd
#: ../../ref/settings.txt:773
msgid ""
"See also :setting:`DATE_INPUT_FORMATS` and :setting:`TIME_INPUT_FORMATS`."
msgstr ""

# 3eb4509554264b7186887b7347a45c0a
#: ../../ref/settings.txt:780
msgid "DEBUG"
msgstr ""

# af21d03eeb394786a0f1f6ba7a49832a
#: ../../ref/settings.txt:784
msgid "A boolean that turns on/off debug mode."
msgstr ""

# 6c4b507836be428fbd06659a06a889cd
#: ../../ref/settings.txt:786
msgid "Never deploy a site into production with :setting:`DEBUG` turned on."
msgstr ""

# 6175b889656c4f13b27408d5c1bcf278
#: ../../ref/settings.txt:788
msgid ""
"Did you catch that? NEVER deploy a site into production with :setting:"
"`DEBUG` turned on."
msgstr ""

# c60050b0946a4f67bc8ab7e580cec54e
#: ../../ref/settings.txt:791
msgid ""
"One of the main features of debug mode is the display of detailed error "
"pages. If your app raises an exception when :setting:`DEBUG` is ``True``, "
"Django will display a detailed traceback, including a lot of metadata about "
"your environment, such as all the currently defined Django settings (from "
"``settings.py``)."
msgstr ""

# eac72deb5ffa4c1a84a72af721d9c877
#: ../../ref/settings.txt:797
msgid ""
"As a security measure, Django will *not* include settings that might be "
"sensitive (or offensive), such as :setting:`SECRET_KEY` or :setting:"
"`PROFANITIES_LIST`. Specifically, it will exclude any setting whose name "
"includes any of the following:"
msgstr ""

# 61cdad5c922843f4a20e858fa05c8980
#: ../../ref/settings.txt:802
msgid "``'API'``"
msgstr ""

# 74abcd23ca394ca094344eb8f025d0ae
#: ../../ref/settings.txt:803
msgid "``'KEY'``"
msgstr ""

# 546d333a39fb4d9997a06dcfd5f8a868
#: ../../ref/settings.txt:804
msgid "``'PASS'``"
msgstr ""

# fe3a6caf48a24421a6b980ee3c23a532
#: ../../ref/settings.txt:805
msgid "``'PROFANITIES_LIST'``"
msgstr ""

# 49d32bccf9f54407804f064249b7549c
#: ../../ref/settings.txt:806
msgid "``'SECRET'``"
msgstr ""

# 37f1d0b9f34c466ea984c07cc4a21794
#: ../../ref/settings.txt:807
msgid "``'SIGNATURE'``"
msgstr ""

# 6fc61f8de8834e1e91df19f2c21a7fd9
#: ../../ref/settings.txt:808
msgid "``'TOKEN'``"
msgstr ""

# 2592e69d0337429e9608e5c53752a359
#: ../../ref/settings.txt:815
msgid ""
"Note that these are *partial* matches. ``'PASS'`` will also match PASSWORD, "
"just as ``'TOKEN'`` will also match TOKENIZED and so on."
msgstr ""

# 013861d9600c493db6ef8b13571e1d57
#: ../../ref/settings.txt:818
msgid ""
"Still, note that there are always going to be sections of your debug output "
"that are inappropriate for public consumption. File paths, configuration "
"options and the like all give attackers extra information about your server."
msgstr ""

# f3a9e136f0c348aabf999a58bcac902d
#: ../../ref/settings.txt:822
msgid ""
"It is also important to remember that when running with :setting:`DEBUG` "
"turned on, Django will remember every SQL query it executes. This is useful "
"when you're debugging, but it'll rapidly consume memory on a production "
"server."
msgstr ""

# 1142b94a7cae4998b934485f0285eba2
#: ../../ref/settings.txt:826
msgid ""
"Finally, if :setting:`DEBUG` is ``False``, you also need to properly set "
"the :setting:`ALLOWED_HOSTS` setting. Failing to do so will result in all "
"requests being returned as \"Bad Request (400)\"."
msgstr ""

# 84fd49d3182b485ca105764d1cbd17a9
#: ../../ref/settings.txt:833
msgid "DEBUG_PROPAGATE_EXCEPTIONS"
msgstr ""

# 3b23fd5d54904c108c05b11cf4a5c86e
#: ../../ref/settings.txt:837
msgid ""
"If set to True, Django's normal exception handling of view functions will be "
"suppressed, and exceptions will propagate upwards.  This can be useful for "
"some test setups, and should never be used on a live site."
msgstr ""

# c70c730989d54398993a9af65f4a4eec
#: ../../ref/settings.txt:841
msgid "DECIMAL_SEPARATOR"
msgstr ""

# 40c9efe7289840e6aae91914c0d88ed6
#: ../../ref/settings.txt:843
msgid "Default: ``'.'`` (Dot)"
msgstr ""

# 180f0b4556c54e2198fc698ee792d036
#: ../../ref/settings.txt:845
msgid "Default decimal separator used when formatting decimal numbers."
msgstr ""

# 8b52926b11544093aa21cd8d9f64a2f7
# e57fc4856f494c068a227630cbba7889
# 384fbd60378d46cca5b8cae0e59d6590
#: ../../ref/settings.txt:847 ../../ref/settings.txt:1500
#: ../../ref/settings.txt:2051
msgid ""
"Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead."
msgstr ""

# c0ddfe7c9a4c4df3b358c36f5708ff61
#: ../../ref/settings.txt:850
msgid ""
"See also :setting:`NUMBER_GROUPING`, :setting:`THOUSAND_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

# 1ec0746e35df4bcaaa7e6071d3e1b294
#: ../../ref/settings.txt:857
msgid "DEFAULT_CHARSET"
msgstr ""

# 45498bfacb8146edab6f9d635d47874e
# 6fbe4d4b3f524a29bc53bb5d5ae49b6c
#: ../../ref/settings.txt:859 ../../ref/settings.txt:1029
msgid "Default: ``'utf-8'``"
msgstr ""

# 57f438ced0b3487193fc1bf052e1fe34
#: ../../ref/settings.txt:861
msgid ""
"Default charset to use for all ``HttpResponse`` objects, if a MIME type "
"isn't manually specified. Used with :setting:`DEFAULT_CONTENT_TYPE` to "
"construct the ``Content-Type`` header."
msgstr ""

# 6ff41b62f172485ab1faf9f788d56f7a
#: ../../ref/settings.txt:868
msgid "DEFAULT_CONTENT_TYPE"
msgstr ""

# 3ddedede914b4a8e9eb152e0361f878f
#: ../../ref/settings.txt:870
msgid "Default: ``'text/html'``"
msgstr ""

# b840ef65e39d4207817d0f2ba514f637
#: ../../ref/settings.txt:872
msgid ""
"Default content type to use for all ``HttpResponse`` objects, if a MIME type "
"isn't manually specified. Used with :setting:`DEFAULT_CHARSET` to construct "
"the ``Content-Type`` header."
msgstr ""

# b0e8f197dc824a4a8b4d92253b612dae
#: ../../ref/settings.txt:879
msgid "DEFAULT_EXCEPTION_REPORTER_FILTER"
msgstr ""

# 5e838f7fc36a49adbd928daf5b90c809
#: ../../ref/settings.txt:881
msgid "Default: :class:`django.views.debug.SafeExceptionReporterFilter`"
msgstr ""

# e1c255b14cfa4483a12ff0993b3357a8
#: ../../ref/settings.txt:883
msgid ""
"Default exception reporter filter class to be used if none has been assigned "
"to the :class:`~django.http.HttpRequest` instance yet. See :ref:`Filtering "
"error reports<filtering-error-reports>`."
msgstr ""

# 2569f1fb930c4686ae9573e4fea4e3fb
#: ../../ref/settings.txt:890
msgid "DEFAULT_FILE_STORAGE"
msgstr ""

# ed9150fc9195425aa5fadf92bd0398d0
#: ../../ref/settings.txt:892
msgid "Default: :class:`django.core.files.storage.FileSystemStorage`"
msgstr ""

# c2f3db67c96a4c1282f2df0317d56466
#: ../../ref/settings.txt:894
msgid ""
"Default file storage class to be used for any file-related operations that "
"don't specify a particular storage system. See :doc:`/topics/files`."
msgstr ""

# feaa95d5712c414f8085aacd84c46fdd
#: ../../ref/settings.txt:900
msgid "DEFAULT_FROM_EMAIL"
msgstr ""

# b8db31999dfb483bad32961e29ae22f9
#: ../../ref/settings.txt:902
msgid "Default: ``'webmaster@localhost'``"
msgstr ""

# faa9b3c8328f430a9a50da87a6eebc96
#: ../../ref/settings.txt:904
msgid ""
"Default email address to use for various automated correspondence from the "
"site manager(s)."
msgstr ""

# 2ad70f8e7efe41db85923347dbc8e9f4
#: ../../ref/settings.txt:910
msgid "DEFAULT_INDEX_TABLESPACE"
msgstr ""

# e367ab9b549c43759b402759f183ec83
#: ../../ref/settings.txt:914
msgid ""
"Default tablespace to use for indexes on fields that don't specify one, if "
"the backend supports it (see :doc:`/topics/db/tablespaces`)."
msgstr ""

# 53694bb3166b4414b6e2e6932b79e2e3
#: ../../ref/settings.txt:920
msgid "DEFAULT_TABLESPACE"
msgstr ""

# 40ac3b593c714011870b96482e7d91aa
#: ../../ref/settings.txt:924
msgid ""
"Default tablespace to use for models that don't specify one, if the backend "
"supports it (see :doc:`/topics/db/tablespaces`)."
msgstr ""

# c1a053bb06f74d5bbb4003bd8bd80f82
#: ../../ref/settings.txt:930
msgid "DISALLOWED_USER_AGENTS"
msgstr ""

# 9d081b0899134a739ee7553cdfbd610e
#: ../../ref/settings.txt:934
msgid ""
"List of compiled regular expression objects representing User-Agent strings "
"that are not allowed to visit any page, systemwide. Use this for bad robots/"
"crawlers. This is only used if ``CommonMiddleware`` is installed (see :doc:`/"
"topics/http/middleware`)."
msgstr ""

# 0e07f41f41bd4898bacf1892674f043a
#: ../../ref/settings.txt:942
msgid "EMAIL_BACKEND"
msgstr ""

# 32f96b6df0644157b9332c09f1a3618e
#: ../../ref/settings.txt:944
msgid "Default: ``'django.core.mail.backends.smtp.EmailBackend'``"
msgstr ""

# 18f265e2b78d40afac0fbf2cc7977c80
#: ../../ref/settings.txt:946
msgid ""
"The backend to use for sending emails. For the list of available backends "
"see :doc:`/topics/email`."
msgstr ""

# d86e5c3859dc4a5086123923024861a5
#: ../../ref/settings.txt:952
msgid "EMAIL_FILE_PATH"
msgstr ""

# 131b40991b2a4bbe912659175d25ef2a
# ef72585b496c4e14b2bd91a9ef616d0c
# 359156cb4bf74d37a3a682c2fec8c2da
# 9505911e296049da91f0ff55111c5cb4
#: ../../ref/settings.txt:954 ../../ref/settings.txt:1575
#: ../../ref/settings.txt:1890 ../../ref/settings.txt:2312
msgid "Default: Not defined"
msgstr ""

# 01be5df5fcf1447d94ee72b85bf0af69
#: ../../ref/settings.txt:956
msgid "The directory used by the ``file`` email backend to store output files."
msgstr ""

# 449c153832fa464692adc2ae5fd7c0cc
#: ../../ref/settings.txt:961
msgid "EMAIL_HOST"
msgstr ""

# 0779fe2d7c774b699f7baa7298ea06d0
#: ../../ref/settings.txt:963
msgid "Default: ``'localhost'``"
msgstr ""

# 59fe5cabead9428eb01aa156b2144239
#: ../../ref/settings.txt:965
msgid "The host to use for sending email."
msgstr ""

# b66fa711bb0949dc91f3b883217ab7c2
#: ../../ref/settings.txt:967
msgid "See also :setting:`EMAIL_PORT`."
msgstr ""

# 43a10114b6bd499197ce4cee6b22af92
#: ../../ref/settings.txt:972
msgid "EMAIL_HOST_PASSWORD"
msgstr ""

# 5f2bef94e9504d3e8f43129ef9c60626
#: ../../ref/settings.txt:976
msgid ""
"Password to use for the SMTP server defined in :setting:`EMAIL_HOST`. This "
"setting is used in conjunction with :setting:`EMAIL_HOST_USER` when "
"authenticating to the SMTP server. If either of these settings is empty, "
"Django won't attempt authentication."
msgstr ""

# 7e3bd430db994343a2fdba74bad62cc8
#: ../../ref/settings.txt:981
msgid "See also :setting:`EMAIL_HOST_USER`."
msgstr ""

# 769d9ca217824126aded6a2baf699acf
#: ../../ref/settings.txt:986
msgid "EMAIL_HOST_USER"
msgstr ""

# b296772b99c6478e970439a1f2555073
#: ../../ref/settings.txt:990
msgid ""
"Username to use for the SMTP server defined in :setting:`EMAIL_HOST`. If "
"empty, Django won't attempt authentication."
msgstr ""

# 04b82872aec5440aa670c4025b713a4f
#: ../../ref/settings.txt:993
msgid "See also :setting:`EMAIL_HOST_PASSWORD`."
msgstr ""

# dfd15d8c7f9644e791c86b334f0d6bec
#: ../../ref/settings.txt:998
msgid "EMAIL_PORT"
msgstr ""

# cd38c428d1694e2287c514d45b0439fa
#: ../../ref/settings.txt:1000
msgid "Default: ``25``"
msgstr ""

# feb1b2f2eb6e4d75a45e8e6516ec2541
#: ../../ref/settings.txt:1002
msgid "Port to use for the SMTP server defined in :setting:`EMAIL_HOST`."
msgstr ""

# faaed73ec7144d4984c2968d229e9190
#: ../../ref/settings.txt:1007
msgid "EMAIL_SUBJECT_PREFIX"
msgstr ""

# 603578f4473449aeba105f97250d6945
#: ../../ref/settings.txt:1009
msgid "Default: ``'[Django] '``"
msgstr ""

# 6c1a98b7d121477e86430d1a7bcc80ad
#: ../../ref/settings.txt:1011
msgid ""
"Subject-line prefix for email messages sent with ``django.core.mail."
"mail_admins`` or ``django.core.mail.mail_managers``. You'll probably want to "
"include the trailing space."
msgstr ""

# 7da489e5b7d84b9297550e8367690de9
#: ../../ref/settings.txt:1018
msgid "EMAIL_USE_TLS"
msgstr ""

# fcae68ac41cd47ba9e51a71b8958f0f8
#: ../../ref/settings.txt:1022
msgid ""
"Whether to use a TLS (secure) connection when talking to the SMTP server."
msgstr ""

# 20c664ee1e6f40aa95abc50615dfb16d
#: ../../ref/settings.txt:1027
msgid "FILE_CHARSET"
msgstr ""

# 82e14200922146a4bfcd60768812255b
#: ../../ref/settings.txt:1031
msgid ""
"The character encoding used to decode any files read from disk. This "
"includes template files and initial SQL data files."
msgstr ""

# f5f8e8c4d43241a6baf870dd06402c57
#: ../../ref/settings.txt:1037
msgid "FILE_UPLOAD_HANDLERS"
msgstr ""

# 4679094d24ba4f188bcee15c05c33b55
#: ../../ref/settings.txt:1044
msgid ""
"A tuple of handlers to use for uploading. See :doc:`/topics/files` for "
"details."
msgstr ""

# 2dca863d5f694a0d9cc8ab90a0ddae74
#: ../../ref/settings.txt:1049
msgid "FILE_UPLOAD_MAX_MEMORY_SIZE"
msgstr ""

# 818ad673fe2b4b3b982017923a80df08
#: ../../ref/settings.txt:1051
msgid "Default: ``2621440`` (i.e. 2.5 MB)."
msgstr ""

# ff6cde9d09ad4fb5ae1e674ef9bc7683
#: ../../ref/settings.txt:1053
msgid ""
"The maximum size (in bytes) that an upload will be before it gets streamed "
"to the file system. See :doc:`/topics/files` for details."
msgstr ""

# b770888c47074459ab5d8c3df46de477
#: ../../ref/settings.txt:1059
msgid "FILE_UPLOAD_PERMISSIONS"
msgstr ""

# 064469f203ec4bea8f1b00c32d7dd0f1
#: ../../ref/settings.txt:1063
msgid ""
"The numeric mode (i.e. ``0644``) to set newly uploaded files to. For more "
"information about what these modes mean, see the documentation for :func:`os."
"chmod`."
msgstr ""

# 998e041226fc47819bea2d89eb4afb8a
#: ../../ref/settings.txt:1067
msgid ""
"If this isn't given or is ``None``, you'll get operating-system dependent "
"behavior. On most platforms, temporary files will have a mode of ``0600``, "
"and files saved from memory will be saved using the system's standard umask."
msgstr ""

# 058c77923390407c99a3963a0d34e43f
#: ../../ref/settings.txt:1074
msgid "**Always prefix the mode with a 0.**"
msgstr ""

# 05f188a4cccb46d5be4dd692ed573744
#: ../../ref/settings.txt:1076
msgid ""
"If you're not familiar with file modes, please note that the leading ``0`` "
"is very important: it indicates an octal number, which is the way that modes "
"must be specified. If you try to use ``644``, you'll get totally incorrect "
"behavior."
msgstr ""

# 4b52f5f3afb742e98ddcf5e44f584eb2
#: ../../ref/settings.txt:1085
msgid "FILE_UPLOAD_TEMP_DIR"
msgstr ""

# b1499a8e87314d9bbf4f424adda60a9d
#: ../../ref/settings.txt:1089
msgid ""
"The directory to store data temporarily while uploading files. If ``None``, "
"Django will use the standard temporary directory for the operating system. "
"For example, this will default to '/tmp' on \\*nix-style operating systems."
msgstr ""

# 373f271aafc046ad8650164ac217de77
#: ../../ref/settings.txt:1093
msgid "See :doc:`/topics/files` for details."
msgstr ""

# b92f828c0d784e2aae0f607b459150fb
#: ../../ref/settings.txt:1098
msgid "FIRST_DAY_OF_WEEK"
msgstr ""

# 4b6d3baf50df4e04b16f894494723414
#: ../../ref/settings.txt:1100
msgid "Default: ``0`` (Sunday)"
msgstr ""

# 78dc02f2090448f6a5673eeb287067d6
#: ../../ref/settings.txt:1102
msgid ""
"Number representing the first day of the week. This is especially useful "
"when displaying a calendar. This value is only used when not using format "
"internationalization, or when a format cannot be found for the current "
"locale."
msgstr ""

# 2694850c3ba341d58095354ef533db55
#: ../../ref/settings.txt:1107
msgid ""
"The value must be an integer from 0 to 6, where 0 means Sunday, 1 means "
"Monday and so on."
msgstr ""

# 4ac35fec69e94562bd378ec842da2bcc
#: ../../ref/settings.txt:1113
msgid "FIXTURE_DIRS"
msgstr ""

# c4e297cb6d48426bb542a6ab40751d26
#: ../../ref/settings.txt:1117
msgid ""
"List of directories searched for fixture files, in addition to the "
"``fixtures`` directory of each application, in search order."
msgstr ""

# df364f84d6fc43ce9e14a25d76c19ba9
# ff2f09e8994a4d55b941cac0e8a0b0c1
# 0ef57d68f16a4a3d8cd1ed2bc75d5777
#: ../../ref/settings.txt:1120 ../../ref/settings.txt:2000
#: ../../ref/templates/api.txt:554
msgid ""
"Note that these paths should use Unix-style forward slashes, even on Windows."
msgstr ""

# 94abbf947f154f50aa77b6ce3a160ebc
#: ../../ref/settings.txt:1122
msgid ""
"See :ref:`initial-data-via-fixtures` and :ref:`topics-testing-fixtures`."
msgstr ""

# 70fd9655282e4f468db574216f3bf02d
#: ../../ref/settings.txt:1127
msgid "FORCE_SCRIPT_NAME"
msgstr ""

# d4dc909304e54d01bf58160aaa5645c3
#: ../../ref/settings.txt:1131
msgid ""
"If not ``None``, this will be used as the value of the ``SCRIPT_NAME`` "
"environment variable in any HTTP request. This setting can be used to "
"override the server-provided value of ``SCRIPT_NAME``, which may be a "
"rewritten version of the preferred value or not supplied at all."
msgstr ""

# c28eb137dd52478f902f7a142f4f2917
#: ../../ref/settings.txt:1139
msgid "FORMAT_MODULE_PATH"
msgstr ""

# 8299a85a8b7e49ff9fde824dd1fd7428
#: ../../ref/settings.txt:1143
msgid ""
"A full Python path to a Python package that contains format definitions for "
"project locales. If not ``None``, Django will check for a ``formats.py`` "
"file, under the directory named as the current locale, and will use the "
"formats defined on this file."
msgstr ""

# a2cc899dfc9d4a2fa4b5c1a0c2b2e071
#: ../../ref/settings.txt:1148
msgid ""
"For example, if :setting:`FORMAT_MODULE_PATH` is set to ``mysite.formats``, "
"and current language is ``en`` (English), Django will expect a directory "
"tree like::"
msgstr ""

# 90a8ed1c6ba84574b5023a47b090ad5f
#: ../../ref/settings.txt:1159
msgid ""
"Available formats are :setting:`DATE_FORMAT`, :setting:`TIME_FORMAT`, :"
"setting:`DATETIME_FORMAT`, :setting:`YEAR_MONTH_FORMAT`, :setting:"
"`MONTH_DAY_FORMAT`, :setting:`SHORT_DATE_FORMAT`, :setting:"
"`SHORT_DATETIME_FORMAT`, :setting:`FIRST_DAY_OF_WEEK`, :setting:"
"`DECIMAL_SEPARATOR`, :setting:`THOUSAND_SEPARATOR` and :setting:"
"`NUMBER_GROUPING`."
msgstr ""

# 475ae47384a14449984ce03c3f3823ab
#: ../../ref/settings.txt:1169
msgid "IGNORABLE_404_URLS"
msgstr ""

# 3dc9f562e6c84f8b87ef6cbdcf3ab724
#: ../../ref/settings.txt:1173
msgid "Default: ``()``"
msgstr ""

# c04b8d95eaf5412583a1b84b246b3121
#: ../../ref/settings.txt:1175
msgid ""
"List of compiled regular expression objects describing URLs that should be "
"ignored when reporting HTTP 404 errors via email (see :doc:`/howto/error-"
"reporting`). Regular expressions are matched against :meth:`request's full "
"paths <django.http.HttpRequest.get_full_path>` (including query string, if "
"any). Use this if your site does not provide a commonly requested file such "
"as ``favicon.ico`` or ``robots.txt``, or if it gets hammered by script "
"kiddies."
msgstr ""

# 22377c83d17a4ed8b1713d51137a5a53
#: ../../ref/settings.txt:1183
msgid ""
"This is only used if :setting:`SEND_BROKEN_LINK_EMAILS` is set to ``True`` "
"and ``CommonMiddleware`` is installed (see :doc:`/topics/http/middleware`)."
msgstr ""

# d7c5740126224181b0fdc45f421f46ed
#: ../../ref/settings.txt:1189
msgid "INSTALLED_APPS"
msgstr ""

# 88dda05efbb1458f9e221c1920519b93
#: ../../ref/settings.txt:1193
msgid ""
"A tuple of strings designating all applications that are enabled in this "
"Django installation. Each string should be a full Python path to a Python "
"package that contains a Django application, as created by :djadmin:`django-"
"admin.py startapp <startapp>`."
msgstr ""

# 6bba8bd963f944588e390f4fba677cad
#: ../../ref/settings.txt:1202
msgid "App names must be unique"
msgstr ""

# d3eb61c3a9d14f33b21b2194a29632e9
#: ../../ref/settings.txt:1204
msgid ""
"The application names (that is, the final dotted part of the path to the "
"module containing ``models.py``) defined in :setting:`INSTALLED_APPS` *must* "
"be unique. For example, you can't include both ``django.contrib.auth`` and "
"``myproject.auth`` in INSTALLED_APPS."
msgstr ""

# 5bc51fc226224df4b70228fd5d204171
#: ../../ref/settings.txt:1209
msgid "INTERNAL_IPS"
msgstr ""

# 30031903f9b84e63b2e58d014795699b
#: ../../ref/settings.txt:1213
msgid "A tuple of IP addresses, as strings, that:"
msgstr ""

# cf942b5c0e814e18ae70f9af8673233c
#: ../../ref/settings.txt:1215
msgid "See debug comments, when :setting:`DEBUG` is ``True``"
msgstr ""

# 5a6cbbf3468b40f18723680a6abe9f8a
#: ../../ref/settings.txt:1216
msgid ""
"Receive X headers if the ``XViewMiddleware`` is installed (see :doc:`/topics/"
"http/middleware`)"
msgstr ""

# f732226ca0b34fa09e3e6127cb5920e2
#: ../../ref/settings.txt:1222
msgid "LANGUAGE_CODE"
msgstr ""

# f6af8f83ff884d84842a4a8cba066809
#: ../../ref/settings.txt:1224
msgid "Default: ``'en-us'``"
msgstr ""

# 9a16aa386825413dafcfa6f38bfd2801
#: ../../ref/settings.txt:1230
msgid ""
"A string representing the language code for this installation. This should "
"be in standard :term:`language ID format <language code>`. For example, U.S. "
"English is ``\"en-us\"``. See also the `list of language identifiers`_ and :"
"doc:`/topics/i18n/index`."
msgstr ""

# 47f445fec8ba4feaadfa130fd33838e5
#: ../../ref/settings.txt:1235
msgid ":setting:`USE_I18N` must be active for this setting to have any effect."
msgstr ""

# 57c6f0bb088d44ab84e4cd82f9cd6181
#: ../../ref/settings.txt:1237
msgid "It serves two purposes:"
msgstr ""

# 48d1d66eef24486ab29a24e0ad9051a6
#: ../../ref/settings.txt:1239
msgid ""
"If the locale middleware isn't in use, it decides which translation is "
"served to all users."
msgstr ""

# 7d3f822204f449b8a7d9053a08b6e127
#: ../../ref/settings.txt:1241
msgid ""
"If the locale middleware is active, it provides the fallback translation "
"when no translation exist for a given literal to the user's preferred "
"language."
msgstr ""

# c6e530ea562049d1b1ccc53bedb7bfc2
#: ../../ref/settings.txt:1244
msgid "See :ref:`how-django-discovers-language-preference` for more details."
msgstr ""

# 45c113016b834b7f92bc5b84650c122d
#: ../../ref/settings.txt:1251
msgid "LANGUAGE_COOKIE_NAME"
msgstr ""

# 6cb45c7b5b554f0480ea9530129cbba8
#: ../../ref/settings.txt:1235
msgid "Default: ``'django_language'``"
msgstr ""

# 2108d51ec253479cacea1875a90885e0
#: ../../ref/settings.txt:1237
msgid ""
"The name of the cookie to use for the language cookie. This can be whatever "
"you want (but should be different from :setting:`SESSION_COOKIE_NAME`). See :"
"doc:`/topics/i18n/index`."
msgstr ""

# 117e79e60f13466ab6d523d952bcaee5
#: ../../ref/settings.txt:1244
msgid "LANGUAGES"
msgstr ""

# 48d66fbd2911431a91e50d49cafc732c
#: ../../ref/settings.txt:1246
msgid ""
"Default: A tuple of all available languages. This list is continually "
"growing and including a copy here would inevitably become rapidly out of "
"date. You can see the current list of translated languages by looking in "
"``django/conf/global_settings.py`` (or view the `online source`_)."
msgstr ""

# 87fad9c35b71498ab614dd7cb9792f77
#: ../../ref/settings.txt:1253
msgid ""
"The list is a tuple of two-tuples in the format (:term:`language "
"code<language code>`, ``language name``) -- for example, ``('ja', "
"'Japanese')``. This specifies which languages are available for language "
"selection. See :doc:`/topics/i18n/index`."
msgstr ""

# 2f70c71a1eca43968425fbf36dd59282
#: ../../ref/settings.txt:1259
msgid ""
"Generally, the default value should suffice. Only set this setting if you "
"want to restrict language selection to a subset of the Django-provided "
"languages."
msgstr ""

# 88f6945e5fe34bccb184fa4c481d212e
#: ../../ref/settings.txt:1262
msgid ""
"If you define a custom :setting:`LANGUAGES` setting, it's OK to mark the "
"languages as translation strings (as in the default value referred to above) "
"-- but use a \"dummy\" ``gettext()`` function, not the one in ``django.utils."
"translation``. You should *never* import ``django.utils.translation`` from "
"within your settings file, because that module in itself depends on the "
"settings, and that would cause a circular import."
msgstr ""

# c996a344ace542d4858d5a95a3054521
#: ../../ref/settings.txt:1270
msgid ""
"The solution is to use a \"dummy\" ``gettext()`` function. Here's a sample "
"settings file::"
msgstr ""

# 4c29c58f38ec447a83a7567a9c9e066f
#: ../../ref/settings.txt:1280
msgid ""
"With this arrangement, ``django-admin.py makemessages`` will still find and "
"mark these strings for translation, but the translation won't happen at "
"runtime -- so you'll have to remember to wrap the languages in the *real* "
"``gettext()`` in any code that uses :setting:`LANGUAGES` at runtime."
msgstr ""

# 27582d2d373948d1991fb77a9626abe7
#: ../../ref/settings.txt:1288
msgid "LOCALE_PATHS"
msgstr ""

# 82c4141260b64a05805146457908b225
#: ../../ref/settings.txt:1292
msgid ""
"A tuple of directories where Django looks for translation files. See :ref:"
"`how-django-discovers-translations`."
msgstr ""

# 2fa5667f18794a21b231b855de90fc62
#: ../../ref/settings.txt:1302
msgid ""
"Django will look within each of these paths for the ``<locale_code>/"
"LC_MESSAGES`` directories containing the actual translation files."
msgstr ""

# a7b2e454bfc449bfb35c5f61803b1ac6
#: ../../ref/settings.txt:1308
msgid "LOGGING"
msgstr ""

# 59c0f014c91e46b6b82b2e5db4e29eee
#: ../../ref/settings.txt:1310
msgid "Default: A logging configuration dictionary."
msgstr ""

# d53d73e87f31469990960530c33ea892
#: ../../ref/settings.txt:1312
msgid ""
"A data structure containing configuration information. The contents of this "
"data structure will be passed as the argument to the configuration method "
"described in :setting:`LOGGING_CONFIG`."
msgstr ""

# 77684f5904e840baac0002ffaf478651
#: ../../ref/settings.txt:1316
msgid ""
"The default logging configuration passes HTTP 500 server errors to an email "
"log handler; all other log messages are given to a NullHandler."
msgstr ""

# e3c4079f45e945b691612587088815b1
#: ../../ref/settings.txt:1322
msgid "LOGGING_CONFIG"
msgstr ""

# 9bdff667d26546b79b6aa1ea940e1bb4
#: ../../ref/settings.txt:1324
msgid "Default: ``'django.utils.log.dictConfig'``"
msgstr ""

# f414e2ac6f354ff391b6bd3796cf62e3
#: ../../ref/settings.txt:1326
msgid ""
"A path to a callable that will be used to configure logging in the Django "
"project. Points at a instance of Python's `dictConfig`_ configuration method "
"by default."
msgstr ""

# 6ce63c756f0d415ab722ddc569f53bc2
#: ../../ref/settings.txt:1330
msgid ""
"If you set :setting:`LOGGING_CONFIG` to ``None``, the logging configuration "
"process will be skipped."
msgstr ""

# fc5202e23fb34c27a0f7b03a26123e62
#: ../../ref/settings.txt:1338
msgid "LOGIN_REDIRECT_URL"
msgstr ""

# 4fb21ebccfe54ff2aac1e50b05a9a297
#: ../../ref/settings.txt:1340
msgid "Default: ``'/accounts/profile/'``"
msgstr ""

# 67640b42675b40139f885bdfa9a7e7de
#: ../../ref/settings.txt:1342
msgid ""
"The URL where requests are redirected after login when the ``contrib.auth."
"login`` view gets no ``next`` parameter."
msgstr ""

# b6f23dea80db4e0b81bb90701ded0731
#: ../../ref/settings.txt:1345
msgid ""
"This is used by the :func:`~django.contrib.auth.decorators.login_required` "
"decorator, for example."
msgstr ""

# 0a6f1f193e1f4f139484436ffbbcf129
# beca36e51aca45ee8ed9e1362ff4ae33
#: ../../ref/settings.txt:1350 ../../ref/settings.txt:1368
msgid ""
"This setting now also accepts view function names and :ref:`named URL "
"patterns <naming-url-patterns>` which can be used to reduce configuration "
"duplication since you no longer have to define the URL in two places "
"(``settings`` and URLconf). For backward compatibility reasons the default "
"remains unchanged."
msgstr ""

# c59f52e4e6d2464fb2e25dac6fa7d47f
#: ../../ref/settings.txt:1359
msgid "LOGIN_URL"
msgstr ""

# a8df43c492d545e0b993acb30690cdf0
#: ../../ref/settings.txt:1361
msgid "Default: ``'/accounts/login/'``"
msgstr ""

# a74d6e8854b649d89e804992eb847e3b
#: ../../ref/settings.txt:1363
msgid ""
"The URL where requests are redirected for login, especially when using the :"
"func:`~django.contrib.auth.decorators.login_required` decorator."
msgstr ""

# bbadc7ea82f54c86b9b94aab810eb5de
#: ../../ref/settings.txt:1377
msgid "LOGOUT_URL"
msgstr ""

# ce71789338f34e399c88eb887952ac87
#: ../../ref/settings.txt:1379
msgid "Default: ``'/accounts/logout/'``"
msgstr ""

# d97fec732ef94b44801c298cc56d37b0
#: ../../ref/settings.txt:1381
msgid "LOGIN_URL counterpart."
msgstr ""

# 4cea4f9ccbc345248289e41893cf0f29
#: ../../ref/settings.txt:1386
msgid "MANAGERS"
msgstr ""

# 2bf2e117b8be4ce99a4399bb464c6382
#: ../../ref/settings.txt:1390
msgid ""
"A tuple in the same format as :setting:`ADMINS` that specifies who should "
"get broken-link notifications when :setting:`SEND_BROKEN_LINK_EMAILS` is "
"``True``."
msgstr ""

# 1891aa5c3d0b471eb29f82860967e15a
#: ../../ref/settings.txt:1396
msgid "MEDIA_ROOT"
msgstr ""

# b1993ae71ada42119d7d90a3d0edcb45
#: ../../ref/settings.txt:1400
msgid ""
"Absolute filesystem path to the directory that will hold :doc:`user-uploaded "
"files </topics/files>`."
msgstr ""

# d555a2d63e0c4c448d009d5a0f119d41
#: ../../ref/settings.txt:1403
msgid "Example: ``\"/var/www/example.com/media/\"``"
msgstr ""

# cda9106e6f4443728459777fc68b2088
#: ../../ref/settings.txt:1405
msgid "See also :setting:`MEDIA_URL`."
msgstr ""

# 022930997c984e6db90d605c26419c87
#: ../../ref/settings.txt:1410
msgid "MEDIA_URL"
msgstr ""

# 26273972aa024cd58d9ab1f627c53516
#: ../../ref/settings.txt:1414
msgid ""
"URL that handles the media served from :setting:`MEDIA_ROOT`, used for :doc:"
"`managing stored files </topics/files>`. It must end in a slash if set to a "
"non-empty value."
msgstr ""

# 3e683952d47f4fbdb37822ca1c4fce10
#: ../../ref/settings.txt:1418
msgid "Example: ``\"http://media.example.com/\"``"
msgstr ""

# 12078894b5784b908e7a89e79b561720
#: ../../ref/settings.txt:1425
msgid ""
"Sets the minimum message level that will be recorded by the messages "
"framework. See the :doc:`messages documentation </ref/contrib/messages>` for "
"more details."
msgstr ""

# 52349424eabc4d2594108a6dad9ba192
#: ../../ref/settings.txt:1434
msgid ""
"Controls where Django stores message data.  See the :doc:`messages "
"documentation </ref/contrib/messages>` for more details."
msgstr ""

# 38392eac0b524709af216186ae64c5d2
#: ../../ref/settings.txt:1448
msgid ""
"Sets the mapping of message levels to message tags. See the :doc:`messages "
"documentation </ref/contrib/messages>` for more details."
msgstr ""

# 3ad14b7e174b459ca25f986b211df044
#: ../../ref/settings.txt:1454
msgid "MIDDLEWARE_CLASSES"
msgstr ""

# fcfca19b812d43988cc7e5022597e60e
#: ../../ref/settings.txt:1464
msgid ""
"A tuple of middleware classes to use. See :doc:`/topics/http/middleware`."
msgstr ""

# 351a9ea4b1b34e048bd9745ddbcb4699
#: ../../ref/settings.txt:1469
msgid "MONTH_DAY_FORMAT"
msgstr ""

# 619cd8b21b81494bb406fd301ffce04f
#: ../../ref/settings.txt:1471
msgid "Default: ``'F j'``"
msgstr ""

# e765140943d040d39fb0cf3ae4333bf1
#: ../../ref/settings.txt:1473
msgid ""
"The default formatting to use for date fields on Django admin change-list "
"pages -- and, possibly, by other parts of the system -- in cases when only "
"the month and day are displayed."
msgstr ""

# 7e367c77cdea4d67ba881d8f145c62f7
#: ../../ref/settings.txt:1477
msgid ""
"For example, when a Django admin change-list page is being filtered by a "
"date drilldown, the header for a given day displays the day and month. "
"Different locales have different formats. For example, U.S. English would "
"say \"January 1,\" whereas Spanish might say \"1 Enero.\""
msgstr ""

# 2ed21c1a679f4dfdbb5ca152b16d3467
#: ../../ref/settings.txt:1482
msgid ""
"See :tfilter:`allowed date format strings <date>`. See also :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :"
"setting:`YEAR_MONTH_FORMAT`."
msgstr ""

# b6c1d1537e484cbfb7d6d8e316382751
#: ../../ref/settings.txt:1489
msgid "NUMBER_GROUPING"
msgstr ""

# 1be656f4a3b4471ab6a9c8bea604707a
#: ../../ref/settings.txt:1491
msgid "Default: ``0``"
msgstr ""

# 3cfc7813ed964d668328b92cc3eddf87
#: ../../ref/settings.txt:1493
msgid "Number of digits grouped together on the integer part of a number."
msgstr ""

# 1ed2640984c44b37aae26ed30df3ae1f
#: ../../ref/settings.txt:1495
msgid ""
"Common use is to display a thousand separator. If this setting is ``0``, "
"then no grouping will be applied to the number. If this setting is greater "
"than ``0``, then :setting:`THOUSAND_SEPARATOR` will be used as the separator "
"between those groups."
msgstr ""

# 33b244b5b36b4777a9807119613523fb
#: ../../ref/settings.txt:1503
msgid ""
"See also :setting:`DECIMAL_SEPARATOR`, :setting:`THOUSAND_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

# 43f6cc7aa6dd4668a96bb41fe3b0c600
#: ../../ref/settings.txt:1509
msgid "PASSWORD_HASHERS"
msgstr ""

# c6da8610f45946b19d045bb732bb63fa
#: ../../ref/settings.txt:1513
msgid "See :ref:`auth_password_storage`."
msgstr ""

# f3577872cad64531a9a2d99bd383fda7
#: ../../ref/settings.txt:1528
msgid "PASSWORD_RESET_TIMEOUT_DAYS"
msgstr ""

# 20385192a3ba4cd79433311f1d0e6b03
#: ../../ref/settings.txt:1530
msgid "Default: ``3``"
msgstr ""

# 42d0a3596310449c9472650f82aed36d
#: ../../ref/settings.txt:1532
msgid ""
"The number of days a password reset link is valid for. Used by the :mod:"
"`django.contrib.auth` password reset mechanism."
msgstr ""

# d9e7f337e0e64111aecd272467c2ed78
#: ../../ref/settings.txt:1538
msgid "PREPEND_WWW"
msgstr ""

# 5de8adb145644d11bab5c7122b189eff
#: ../../ref/settings.txt:1542
msgid ""
"Whether to prepend the \"www.\" subdomain to URLs that don't have it. This "
"is only used if :class:`~django.middleware.common.CommonMiddleware` is "
"installed (see :doc:`/topics/http/middleware`). See also :setting:"
"`APPEND_SLASH`."
msgstr ""

# 6dd1cedbd23343719ed6218a17a1eef3
#: ../../ref/settings.txt:1549
msgid "PROFANITIES_LIST"
msgstr ""

# 73991f839d52414db1a5a87c467824b8
#: ../../ref/settings.txt:1553
msgid ""
"A tuple of profanities, as strings, that will be forbidden in comments when "
"``COMMENTS_ALLOW_PROFANITIES`` is ``False``."
msgstr ""

# 65b5f8f6b0c64bf9a32041b53835b6bf
#: ../../ref/settings.txt:1559
msgid "RESTRUCTUREDTEXT_FILTER_SETTINGS"
msgstr ""

# 97233a7b285f48078c94dbb67352a575
#: ../../ref/settings.txt:1561
msgid "Default: ``{}``"
msgstr ""

# de18a198edea4b8dbea83e682b060f1a
#: ../../ref/settings.txt:1563
msgid ""
"A dictionary containing settings for the ``restructuredtext`` markup filter "
"from the :doc:`django.contrib.markup application </ref/contrib/markup>`. "
"They override the default writer settings. See the Docutils restructuredtext "
"`writer settings docs`_ for details."
msgstr ""

# 9f8c42ed3e7344cf8f2da39f52480189
#: ../../ref/settings.txt:1573
msgid "ROOT_URLCONF"
msgstr ""

# 087b85d674c44eb28d4ba58d53b643a9
#: ../../ref/settings.txt:1577
msgid ""
"A string representing the full Python import path to your root URLconf. For "
"example: ``\"mydjangoapps.urls\"``. Can be overridden on a per-request basis "
"by setting the attribute ``urlconf`` on the incoming ``HttpRequest`` object. "
"See :ref:`how-django-processes-a-request` for details."
msgstr ""

# 8ac36b583eb049abb56b27bf9c12ff2f
#: ../../ref/settings.txt:1585
msgid "SECRET_KEY"
msgstr ""

# a5e653bff1ee41e38e5766e2fa28c9d9
#: ../../ref/settings.txt:1589
msgid ""
"A secret key for a particular Django installation. This is used to provide :"
"doc:`cryptographic signing </topics/signing>`, and should be set to a "
"unique, unpredictable value."
msgstr ""

# b082b63eb36f448abde8f4a770810f1f
#: ../../ref/settings.txt:1593
msgid ""
":djadmin:`django-admin.py startproject <startproject>` automatically adds a "
"randomly-generated ``SECRET_KEY`` to each new project."
msgstr ""

# 84a46885ca104a54998099e89bba4606
#: ../../ref/settings.txt:1598
msgid "**Keep this value secret.**"
msgstr ""

# b9b942781be14396bf36290262cfcab0
#: ../../ref/settings.txt:1600
msgid ""
"Running Django with a known :setting:`SECRET_KEY` defeats many of Django's "
"security protections, and can lead to privilege escalation and remote code "
"execution vulnerabilities."
msgstr ""

# 89eed2050115410d9b336561ec13137b
#: ../../ref/settings.txt:1610
msgid "SECURE_PROXY_SSL_HEADER"
msgstr ""

# 5cc856db8f114b0d94a2f2ca172074c6
#: ../../ref/settings.txt:1616
msgid ""
"A tuple representing a HTTP header/value combination that signifies a "
"request is secure. This controls the behavior of the request object's "
"``is_secure()`` method."
msgstr ""

# 5e2dd2401f824901b215eb412b8011a7
#: ../../ref/settings.txt:1620
msgid ""
"This takes some explanation. By default, ``is_secure()`` is able to "
"determine whether a request is secure by looking at whether the requested "
"URL uses \"https://\". This is important for Django's CSRF protection, and "
"may be used by your own code or third-party apps."
msgstr ""

# 94e4cc2950184410ba50eae9c576b43b
#: ../../ref/settings.txt:1625
msgid ""
"If your Django app is behind a proxy, though, the proxy may be \"swallowing"
"\" the fact that a request is HTTPS, using a non-HTTPS connection between "
"the proxy and Django. In this case, ``is_secure()`` would always return "
"``False`` -- even for requests that were made via HTTPS by the end user."
msgstr ""

# ed3f456f95b34ac4a7cefbec9a247679
#: ../../ref/settings.txt:1630
msgid ""
"In this situation, you'll want to configure your proxy to set a custom HTTP "
"header that tells Django whether the request came in via HTTPS, and you'll "
"want to set ``SECURE_PROXY_SSL_HEADER`` so that Django knows what header to "
"look for."
msgstr ""

# 6e83a0b379db4fe3ae8069f2ef6b8956
#: ../../ref/settings.txt:1635
msgid ""
"You'll need to set a tuple with two elements -- the name of the header to "
"look for and the required value. For example::"
msgstr ""

# 97e2274e47464621824ccc671500f13f
#: ../../ref/settings.txt:1640
msgid ""
"Here, we're telling Django that we trust the ``X-Forwarded-Proto`` header "
"that comes from our proxy, and any time its value is ``'https'``, then the "
"request is guaranteed to be secure (i.e., it originally came in via HTTPS). "
"Obviously, you should *only* set this setting if you control your proxy or "
"have some other guarantee that it sets/strips this header appropriately."
msgstr ""

# 52aedfb4633748748fead5469c1093d5
#: ../../ref/settings.txt:1646
msgid ""
"Note that the header needs to be in the format as used by ``request.META`` "
"-- all caps and likely starting with ``HTTP_``. (Remember, Django "
"automatically adds ``'HTTP_'`` to the start of x-header names before making "
"the header available in ``request.META``.)"
msgstr ""

# eb3ac1c333ab4789814bdbdf42a4cf95
#: ../../ref/settings.txt:1653
msgid ""
"**You will probably open security holes in your site if you set this without "
"knowing what you're doing. And if you fail to set it when you should. "
"Seriously.**"
msgstr ""

# 133e55a3256d4ead97dbfd6be7334036
#: ../../ref/settings.txt:1657
msgid ""
"Make sure ALL of the following are true before setting this (assuming the "
"values from the example above):"
msgstr ""

# 60b867c895ce407f95d2122ad2cb80ee
#: ../../ref/settings.txt:1660
msgid "Your Django app is behind a proxy."
msgstr ""

# de326b2f814e4e459b0fe78e67a50ad4
#: ../../ref/settings.txt:1661
msgid ""
"Your proxy strips the ``X-Forwarded-Proto`` header from all incoming "
"requests. In other words, if end users include that header in their "
"requests, the proxy will discard it."
msgstr ""

# 11a68d11f19145c3ae60871a51acd420
#: ../../ref/settings.txt:1664
msgid ""
"Your proxy sets the ``X-Forwarded-Proto`` header and sends it to Django, but "
"only for requests that originally come in via HTTPS."
msgstr ""

# 9ac39b301cbb4636a2c2d9e8225c828e
#: ../../ref/settings.txt:1667
msgid ""
"If any of those are not true, you should keep this setting set to ``None`` "
"and find another way of determining HTTPS, perhaps via custom middleware."
msgstr ""

# 8a1ca1469fc943318811278a2d076880
#: ../../ref/settings.txt:1673
msgid "SEND_BROKEN_LINK_EMAILS"
msgstr ""

# 2b43494886b842d1812bb242ad609a80
#: ../../ref/settings.txt:1677
msgid ""
"Whether to send an email to the :setting:`MANAGERS` each time somebody "
"visits a Django-powered page that is 404ed with a non-empty referer (i.e., a "
"broken link). This is only used if ``CommonMiddleware`` is installed (see :"
"doc:`/topics/http/middleware`). See also :setting:`IGNORABLE_404_URLS` and :"
"doc:`/howto/error-reporting`."
msgstr ""

# 41c71f4f13cf4b9482761674175f370b
#: ../../ref/settings.txt:1686
msgid "SERIALIZATION_MODULES"
msgstr ""

# 1edf7d5fc70a48d2aea92d58d2091645
#: ../../ref/settings.txt:1688
msgid "Default: Not defined."
msgstr ""

# c684a2a6b383467a92aa2d8e1f63ab64
#: ../../ref/settings.txt:1690
msgid ""
"A dictionary of modules containing serializer definitions (provided as "
"strings), keyed by a string identifier for that serialization type. For "
"example, to define a YAML serializer, use::"
msgstr ""

# 486b0dc2fe1c4f048a4692bfc3958c08
#: ../../ref/settings.txt:1699
msgid "SERVER_EMAIL"
msgstr ""

# f354c374bc2c40bf92666897832ba95f
#: ../../ref/settings.txt:1701
msgid "Default: ``'root@localhost'``"
msgstr ""

# b0f3fbf51c5d4fb5907fffa485effd64
#: ../../ref/settings.txt:1703
msgid ""
"The email address that error messages come from, such as those sent to :"
"setting:`ADMINS` and :setting:`MANAGERS`."
msgstr ""

# 12b373dc786345359564fc896822465b
#: ../../ref/settings.txt:1709
msgid "SESSION_COOKIE_AGE"
msgstr ""

# c53373bff87f4b5b88815aea4fc23d5b
#: ../../ref/settings.txt:1711
msgid "Default: ``1209600`` (2 weeks, in seconds)"
msgstr ""

# e6b9f08ddbba437f8727eeaad216d001
#: ../../ref/settings.txt:1713
msgid ""
"The age of session cookies, in seconds. See :doc:`/topics/http/sessions`."
msgstr ""

# c26afce8688c411cb8cb76201c020365
#: ../../ref/settings.txt:1722
msgid ""
"The domain to use for session cookies. Set this to a string such as ``\"."
"example.com\"`` for cross-domain cookies, or use ``None`` for a standard "
"domain cookie. See the :doc:`/topics/http/sessions`."
msgstr ""

# 421242ab00714b2e8a966b63edce8d9a
#: ../../ref/settings.txt:1729
msgid "SESSION_COOKIE_HTTPONLY"
msgstr ""

# de27e53195434939b2bcdcaf8f660d2f
#: ../../ref/settings.txt:1733
msgid ""
"Whether to use HTTPOnly flag on the session cookie. If this is set to "
"``True``, client-side JavaScript will not to be able to access the session "
"cookie."
msgstr ""

# 107519abf015478f96b99d319243107e
#: ../../ref/settings.txt:1751
msgid "SESSION_COOKIE_NAME"
msgstr ""

# d72aca2dbfa14c33a1df74cefb397206
#: ../../ref/settings.txt:1753
msgid "Default: ``'sessionid'``"
msgstr ""

# d488b582a89b4a8ab95a79f61f5f9e21
#: ../../ref/settings.txt:1755
msgid ""
"The name of the cookie to use for sessions. This can be whatever you want "
"(but should be different from :setting:`LANGUAGE_COOKIE_NAME`). See the :doc:"
"`/topics/http/sessions`."
msgstr ""

# 56f54c63957f4f25b17041a3befdac15
#: ../../ref/settings.txt:1762
msgid "SESSION_COOKIE_PATH"
msgstr ""

# 85c875ef9d7a41b79972ad63bb32a6e8
#: ../../ref/settings.txt:1766
msgid ""
"The path set on the session cookie. This should either match the URL path of "
"your Django installation or be parent of that path."
msgstr ""

# 5514451624694f52924d2e7a0f2ea924
#: ../../ref/settings.txt:1769
msgid ""
"This is useful if you have multiple Django instances running under the same "
"hostname. They can use different cookie paths, and each instance will only "
"see its own session cookie."
msgstr ""

# 6410e88f072243e3bb24a40c470a33cd
#: ../../ref/settings.txt:1776
msgid "SESSION_CACHE_ALIAS"
msgstr ""

# e733c32536ee4c30961c58d21007d31c
#: ../../ref/settings.txt:1780
msgid ""
"If you're using :ref:`cache-based session storage <cached-sessions-"
"backend>`, this selects the cache to use."
msgstr ""

# 2280fe78ceeb4a9e945644e4225f7978
#: ../../ref/settings.txt:1786
msgid "SESSION_COOKIE_SECURE"
msgstr ""

# 737a7704b3fb478bb662a48f30d086bb
#: ../../ref/settings.txt:1790
msgid ""
"Whether to use a secure cookie for the session cookie. If this is set to "
"``True``, the cookie will be marked as \"secure,\" which means browsers may "
"ensure that the cookie is only sent under an HTTPS connection. See the :doc:"
"`/topics/http/sessions`."
msgstr ""

# c933dde171284468951da595e5e77ad0
#: ../../ref/settings.txt:1798
msgid "SESSION_ENGINE"
msgstr ""

# ae068fb4909444fbb331a4e0f9aeb1f8
#: ../../ref/settings.txt:1800
msgid "Default: ``django.contrib.sessions.backends.db``"
msgstr ""

# 52605c3616124534b7b2ca33217d6624
#: ../../ref/settings.txt:1822
msgid "Controls where Django stores session data. Included engines are:"
msgstr ""

# a497897caaa3464ba473b124dea6f347
#: ../../ref/settings.txt:1804
msgid "``'django.contrib.sessions.backends.db'``"
msgstr ""

# 7f420687152c4a96b43074c822d101e0
#: ../../ref/settings.txt:1805
msgid "``'django.contrib.sessions.backends.file'``"
msgstr ""

# 153152d939dd4c6485d4c4e580ba39dc
#: ../../ref/settings.txt:1806
msgid "``'django.contrib.sessions.backends.cache'``"
msgstr ""

# 9288cc655cfb4cb289766b60d7aef3d6
#: ../../ref/settings.txt:1807
msgid "``'django.contrib.sessions.backends.cached_db'``"
msgstr ""

# 96ca07e95489415ca97daaeeeaeeb16d
#: ../../ref/settings.txt:1808
msgid "``'django.contrib.sessions.backends.signed_cookies'``"
msgstr ""

# 85617efef4a04436ac03878d8f3b92d6
#: ../../ref/settings.txt:1810
msgid "See :doc:`/topics/http/sessions`."
msgstr ""

# abaad62b9f4f47f68090d1e2c82c8777
#: ../../ref/settings.txt:1815
msgid "SESSION_EXPIRE_AT_BROWSER_CLOSE"
msgstr ""

# b95e311ca9d54547bc458e9a1023559e
#: ../../ref/settings.txt:1819
msgid ""
"Whether to expire the session when the user closes his or her browser. See "
"the :doc:`/topics/http/sessions`."
msgstr ""

# 8f651c67814843f9931c490a39970115
#: ../../ref/settings.txt:1825
msgid "SESSION_FILE_PATH"
msgstr ""

# 329854f9646048478a6933d50207beb8
#: ../../ref/settings.txt:1829
msgid ""
"If you're using file-based session storage, this sets the directory in which "
"Django will store session data. See :doc:`/topics/http/sessions`. When the "
"default value (``None``) is used, Django will use the standard temporary "
"directory for the system."
msgstr ""

# 1cc63f9f820a45e2ada00d7782c8d010
#: ../../ref/settings.txt:1837
msgid "SESSION_SAVE_EVERY_REQUEST"
msgstr ""

# c85e0fa9e01243ec8b0d45650d277a1d
#: ../../ref/settings.txt:1841
msgid ""
"Whether to save the session data on every request. See :doc:`/topics/http/"
"sessions`."
msgstr ""

# a2c7b4e4e8d743f68d4320baecf1a5e5
#: ../../ref/settings.txt:1867
msgid "SESSION_SERIALIZER"
msgstr ""

# 317ad47873624e0a8ee92bd3bf2abcf3
#: ../../ref/settings.txt:1871
msgid "Default: ``'django.contrib.sessions.serializers.PickleSerializer'``"
msgstr ""

# 46ea5f6d1b8f4c22a73131dedd761585
#: ../../ref/settings.txt:1873
msgid ""
"Full import path of a serializer class to use for serializing session data. "
"Included serializers are:"
msgstr ""

# caf38816fad74636bca265bcc156ce8e
#: ../../ref/settings.txt:1876
msgid "``'django.contrib.sessions.serializers.PickleSerializer'``"
msgstr ""

# 7a63fdae728c4fe483ae66414c60c7c9
#: ../../ref/settings.txt:1877
msgid "``'django.contrib.sessions.serializers.JSONSerializer'``"
msgstr ""

# 774b81523cdf4153947d00125b694efb
#: ../../ref/settings.txt:1879
msgid ""
"See :ref:`session_serialization` for details, including a warning regarding "
"possible remote code execution when using :class:`~django.contrib.sessions."
"serializers.PickleSerializer`."
msgstr ""

# 303018e6250c44909fda6b820a6cc7a1
#: ../../ref/settings.txt:1883
msgid ""
"In Django 1.5.3, the default in newly created projects using :djadmin:"
"`django-admin.py startproject <startproject>` is :class:`django.contrib."
"sessions.serializers.JSONSerializer`, and the global default will switch to "
"this class in Django 1.6."
msgstr ""

# 041e581459a84d2490355b6e278ca3e7
#: ../../ref/settings.txt:1891
msgid "SHORT_DATE_FORMAT"
msgstr ""

# d50837cbb1ee494693facc1a1df6c1a0
#: ../../ref/settings.txt:1849
msgid "Default: ``m/d/Y`` (e.g. ``12/31/2003``)"
msgstr ""

# 1c7cda0079514beeac82da7a8c649e63
#: ../../ref/settings.txt:1851
msgid ""
"An available formatting that can be used for displaying date fields on "
"templates. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"corresponding locale-dictated format has higher precedence and will be "
"applied. See :tfilter:`allowed date format strings <date>`."
msgstr ""

# 1bfcd3ee76fc43349c631c3875a4d877
#: ../../ref/settings.txt:1856
msgid "See also :setting:`DATE_FORMAT` and :setting:`SHORT_DATETIME_FORMAT`."
msgstr ""

# 4e14027714ba4ac1a8b30f38e1f71f1b
#: ../../ref/settings.txt:1861
msgid "SHORT_DATETIME_FORMAT"
msgstr ""

# f190bb7a8cd44fe8966e9087a2f11c96
#: ../../ref/settings.txt:1863
msgid "Default: ``m/d/Y P`` (e.g. ``12/31/2003 4 p.m.``)"
msgstr ""

# 708489ed7faf44748fb9828f29bce959
#: ../../ref/settings.txt:1865
msgid ""
"An available formatting that can be used for displaying datetime fields on "
"templates. Note that if :setting:`USE_L10N` is set to ``True``, then the "
"corresponding locale-dictated format has higher precedence and will be "
"applied. See :tfilter:`allowed date format strings <date>`."
msgstr ""

# ea5bf59081ac48da80d99ce5a1c6ba4a
#: ../../ref/settings.txt:1870
msgid "See also :setting:`DATE_FORMAT` and :setting:`SHORT_DATE_FORMAT`."
msgstr ""

# 6ab508b58850481d96b576cdd7d5333d
#: ../../ref/settings.txt:1875
msgid "SIGNING_BACKEND"
msgstr ""

# 6e3dafbfd5624bd0be4c8b9dc2539a33
#: ../../ref/settings.txt:1879
msgid "Default: 'django.core.signing.TimestampSigner'"
msgstr ""

# eb280d6c2059418db4cc029846ddc016
#: ../../ref/settings.txt:1881
msgid "The backend used for signing cookies and other data."
msgstr ""

# 59e9aa7d631148fe805c6e4ef9abd72b
#: ../../ref/settings.txt:1883
msgid "See also the :doc:`/topics/signing` documentation."
msgstr ""

# f721d2660c1e4517a89646880867ac4a
#: ../../ref/settings.txt:1888
msgid "SITE_ID"
msgstr ""

# 44acdeb903da4fc8a04c16ab10ebcfda
#: ../../ref/settings.txt:1892
msgid ""
"The ID, as an integer, of the current site in the ``django_site`` database "
"table. This is used so that application data can hook into specific site(s) "
"and a single database can manage content for multiple sites."
msgstr ""

# 4e61c3ceaec44f248691b1640bf835c1
#: ../../ref/settings.txt:1896
msgid "See :doc:`/ref/contrib/sites`."
msgstr ""

# 36e36ef13db049b09be01ddd1e4020dd
#: ../../ref/settings.txt:1903
msgid "STATIC_ROOT"
msgstr ""

# 5f7234203bee466b8e04501be4acf563
#: ../../ref/settings.txt:1907
msgid ""
"The absolute path to the directory where :djadmin:`collectstatic` will "
"collect static files for deployment."
msgstr ""

# a3b762f7bb904429b8e059b827f6a0ea
#: ../../ref/settings.txt:1910
msgid "Example: ``\"/var/www/example.com/static/\"``"
msgstr ""

# e974cfa220fc4c3db80696d03d900667
#: ../../ref/settings.txt:1912
msgid ""
"If the :doc:`staticfiles</ref/contrib/staticfiles>` contrib app is enabled "
"(default) the :djadmin:`collectstatic` management command will collect "
"static files into this directory. See the howto on :doc:`managing static "
"files</howto/static-files/index>` for more details about usage."
msgstr ""

# 91bae9da90af4577a67cdaf7b752344f
#: ../../ref/settings.txt:1919
msgid ""
"This should be an (initially empty) destination directory for collecting "
"your static files from their permanent locations into one directory for ease "
"of deployment; it is **not** a place to store your static files permanently. "
"You should do that in directories that will be found by :doc:`staticfiles</"
"ref/contrib/staticfiles>`'s :setting:`finders<STATICFILES_FINDERS>`, which "
"by default, are ``'static/'`` app sub-directories and any directories you "
"include in :setting:`STATICFILES_DIRS`)."
msgstr ""

# 47e3bfd1e6fe48c6b739e207476612bb
#: ../../ref/settings.txt:1928
msgid ""
"See :doc:`staticfiles reference</ref/contrib/staticfiles>` and :setting:"
"`STATIC_URL`."
msgstr ""

# 81e004d759a7470b996f7767a8e1894b
#: ../../ref/settings.txt:1934
msgid "STATIC_URL"
msgstr ""

# fe475330364146928fd298ca30c96798
#: ../../ref/settings.txt:1938
msgid ""
"URL to use when referring to static files located in :setting:`STATIC_ROOT`."
msgstr ""

# 52d53fe729d3444bbc0a4ff3d852f28a
#: ../../ref/settings.txt:1940
msgid "Example: ``\"/static/\"`` or ``\"http://static.example.com/\"``"
msgstr ""

# e78aeadd7da7496bba7cb535895192c4
#: ../../ref/settings.txt:1942
msgid ""
"If not ``None``, this will be used as the base path for :ref:`media "
"definitions<form-media-paths>` and the :doc:`staticfiles app</ref/contrib/"
"staticfiles>`."
msgstr ""

# 3a66cc41147944aaa52c1b254ddb7b00
#: ../../ref/settings.txt:1946
msgid "It must end in a slash if set to a non-empty value."
msgstr ""

# 6ddbbb1080d8457aa9dc7c68d3027ba1
#: ../../ref/settings.txt:1948
msgid "See :setting:`STATIC_ROOT`."
msgstr ""

# 07a33d03849a474882e0a5769b5ca1ac
#: ../../ref/settings.txt:1953
msgid "TEMPLATE_CONTEXT_PROCESSORS"
msgstr ""

# 770c125e422745369711762004728886
#: ../../ref/settings.txt:1965
msgid ""
"A tuple of callables that are used to populate the context in "
"``RequestContext``. These callables take a request object as their argument "
"and return a dictionary of items to be merged into the context."
msgstr ""

# d1c130e5070d428d857da56b8863f320
#: ../../ref/settings.txt:1976
msgid "TEMPLATE_DEBUG"
msgstr ""

# c324456ea317471b89f59e13838941a2
#: ../../ref/settings.txt:1980
msgid ""
"A boolean that turns on/off template debug mode. If this is ``True``, the "
"fancy error page will display a detailed report for any exception raised "
"during template rendering. This report contains the relevant snippet of the "
"template, with the appropriate line highlighted."
msgstr ""

# e2690dbb9ff1471cb236b54789790225
#: ../../ref/settings.txt:1985
msgid ""
"Note that Django only displays fancy error pages if :setting:`DEBUG` is "
"``True``, so you'll want to set that to take advantage of this setting."
msgstr ""

# fdab23dff6a14ad8aa62cdfb24b7b699
#: ../../ref/settings.txt:1988
msgid "See also :setting:`DEBUG`."
msgstr ""

# bb7f3dd906844bcf8ec4acd065e9ff3e
#: ../../ref/settings.txt:1993
msgid "TEMPLATE_DIRS"
msgstr ""

# cec13e49848a4e2ab3e2a38bf6ca49fb
#: ../../ref/settings.txt:1997
msgid ""
"List of locations of the template source files searched by :class:`django."
"template.loaders.filesystem.Loader`, in search order."
msgstr ""

# 2d0450dfde4645d1ac1bbdf50c65c086
#: ../../ref/settings.txt:2002
msgid "See :doc:`/topics/templates`."
msgstr ""

# 6add573892664020ac8ebb09ac5df9c8
#: ../../ref/settings.txt:2007
msgid "TEMPLATE_LOADERS"
msgstr ""

# 7eca60458bb5482e9550cdc5e9ebcca1
#: ../../ref/settings.txt:2014
msgid ""
"A tuple of template loader classes, specified as strings. Each ``Loader`` "
"class knows how to import templates from a particular source. Optionally, a "
"tuple can be used instead of a string. The first item in the tuple should be "
"the ``Loader``'s module, subsequent items are passed to the ``Loader`` "
"during initialization. See :doc:`/ref/templates/api`."
msgstr ""

# a3dfde5106044f9198a9c61b79782dbd
#: ../../ref/settings.txt:2023
msgid "TEMPLATE_STRING_IF_INVALID"
msgstr ""

# 886eecbd9ab54f27a91a51a69ad7b54e
#: ../../ref/settings.txt:2027
msgid ""
"Output, as a string, that the template system should use for invalid (e.g. "
"misspelled) variables. See :ref:`invalid-template-variables`.."
msgstr ""

# c3ae0f448a7145eb8258b53dae2619f3
#: ../../ref/settings.txt:2033
msgid "TEST_RUNNER"
msgstr ""

# a4f89d48e6b644be8125e0ba361d725b
#: ../../ref/settings.txt:2035
msgid "Default: ``'django.test.simple.DjangoTestSuiteRunner'``"
msgstr ""

# 6f073efcd63f475a921698b3a25b7e41
#: ../../ref/settings.txt:2037
msgid ""
"The name of the class to use for starting the test suite. See :ref:`other-"
"testing-frameworks`."
msgstr ""

# 021f076fd7484fae995a0a3f463f2d7d
#: ../../ref/settings.txt:2043
msgid "THOUSAND_SEPARATOR"
msgstr ""

# e88d63f0399d46b5a97ad86cc8b975b8
#: ../../ref/settings.txt:2045
msgid "Default: ``,`` (Comma)"
msgstr ""

# de1f1ca3e79746ec84bf833e54ea797f
#: ../../ref/settings.txt:2047
msgid ""
"Default thousand separator used when formatting numbers. This setting is "
"used only when :setting:`USE_THOUSAND_SEPARATOR` is ``True`` and :setting:"
"`NUMBER_GROUPING` is greater than ``0``."
msgstr ""

# f248a5601f4e49eaa5c3d4bd3cf82d6b
#: ../../ref/settings.txt:2054
msgid ""
"See also :setting:`NUMBER_GROUPING`, :setting:`DECIMAL_SEPARATOR` and :"
"setting:`USE_THOUSAND_SEPARATOR`."
msgstr ""

# 92a085bbe2594cf698fa300f5c58de37
#: ../../ref/settings.txt:2060
msgid "TIME_FORMAT"
msgstr ""

# c78e702b35384a319dcdf4504b6bf080
#: ../../ref/settings.txt:2062
msgid "Default: ``'P'`` (e.g. ``4 p.m.``)"
msgstr ""

# ef9a404359cb42dfb1c9c1cf3809cd60
#: ../../ref/settings.txt:2064
msgid ""
"The default formatting to use for displaying time fields in any part of the "
"system. Note that if :setting:`USE_L10N` is set to ``True``, then the locale-"
"dictated format has higher precedence and will be applied instead. See :"
"tfilter:`allowed date format strings <date>`."
msgstr ""

# ad1e421b857d4208b90b76594d26d33d
#: ../../ref/settings.txt:2069
msgid "See also :setting:`DATE_FORMAT` and :setting:`DATETIME_FORMAT`."
msgstr ""

# 544664db422c48c6bf11e78b43c5c4ad
#: ../../ref/settings.txt:2074
msgid "TIME_INPUT_FORMATS"
msgstr ""

# eb7d17ec4fc14401814964f278d7f2b4
#: ../../ref/settings.txt:2083
msgid ""
"A tuple of formats that will be accepted when inputting data on a time "
"field. Formats will be tried in order, using the first valid one. Note that "
"these format strings use Python's datetime_ module syntax, not the format "
"strings from the ``date`` Django template tag."
msgstr ""

# b868421963114ade95a2e073b191fc19
#: ../../ref/settings.txt:2091
msgid ""
"See also :setting:`DATE_INPUT_FORMATS` and :setting:`DATETIME_INPUT_FORMATS`."
msgstr ""

# 3666faa50b974b538481daf239af45f0
#: ../../ref/settings.txt:2098
msgid "TIME_ZONE"
msgstr ""

# 44678572ccaa488aa59758f38f273be6
#: ../../ref/settings.txt:2100
msgid "Default: ``'America/Chicago'``"
msgstr ""

# f9fc11eb4fc64e60bef028f4c3af4414
#: ../../ref/settings.txt:2105
msgid ""
"A string representing the time zone for this installation, or ``None``. `See "
"available choices`_. (Note that list of available choices lists more than "
"one on the same line; you'll want to use just one of the choices for a given "
"time zone. For instance, one line says ``'Europe/London GB GB-Eire'``, but "
"you should use the first bit of that -- ``'Europe/London'`` -- as your :"
"setting:`TIME_ZONE` setting.)"
msgstr ""

# 0c9772e51aff4596888fed28b2eaba5e
#: ../../ref/settings.txt:2112
msgid ""
"Note that this isn't necessarily the time zone of the server. For example, "
"one server may serve multiple Django-powered sites, each with a separate "
"time zone setting."
msgstr ""

# 9377632312644b1480fa9d83d29de860
#: ../../ref/settings.txt:2116
msgid ""
"When :setting:`USE_TZ` is ``False``, this is the time zone in which Django "
"will store all datetimes. When :setting:`USE_TZ` is ``True``, this is the "
"default time zone that Django will use to display datetimes in templates and "
"to interpret datetimes entered in forms."
msgstr ""

# 3ff6a5e9feab43e6af9ae3e6ae77e3ac
#: ../../ref/settings.txt:2121
msgid ""
"Django sets the ``os.environ['TZ']`` variable to the time zone you specify "
"in the :setting:`TIME_ZONE` setting. Thus, all your views and models will "
"automatically operate in this time zone. However, Django won't set the "
"``TZ`` environment variable under the following conditions:"
msgstr ""

# acf3797cb4154c65bc5cd34548a09125
#: ../../ref/settings.txt:2126
msgid ""
"If you're using the manual configuration option as described in :ref:"
"`manually configuring settings <settings-without-django-settings-module>`, or"
msgstr ""

# 7e3b6897c33549dda70245eae59b7595
#: ../../ref/settings.txt:2130
msgid ""
"If you specify ``TIME_ZONE = None``. This will cause Django to fall back to "
"using the system timezone. However, this is discouraged when :setting:"
"`USE_TZ = True <USE_TZ>`, because it makes conversions between local time "
"and UTC less reliable."
msgstr ""

# 65026d763553490eb652b60ed00262e6
#: ../../ref/settings.txt:2135
msgid ""
"If Django doesn't set the ``TZ`` environment variable, it's up to you to "
"ensure your processes are running in the correct environment."
msgstr ""

# 3c1b2835d47d4e7a83aeef1eccd10893
#: ../../ref/settings.txt:2139
msgid ""
"Django cannot reliably use alternate time zones in a Windows environment. If "
"you're running Django on Windows, :setting:`TIME_ZONE` must be set to match "
"the system time zone."
msgstr ""

# ecceb78d7d4d43299a918ca77057829b
#: ../../ref/settings.txt:2150
msgid "TRANSACTIONS_MANAGED"
msgstr ""

# d665021eeeb842efac1fdf208e527b8f
#: ../../ref/settings.txt:2154
msgid ""
"Set this to ``True`` if you want to :ref:`disable Django's transaction "
"management <deactivate-transaction-management>` and implement your own."
msgstr ""

# 0847bfecdb36459d8aff55a59520ee77
#: ../../ref/settings.txt:2160
msgid "USE_ETAGS"
msgstr ""

# f3d3b0ec5d6c430a8645caa8f2132a40
#: ../../ref/settings.txt:2164
msgid ""
"A boolean that specifies whether to output the \"Etag\" header. This saves "
"bandwidth but slows down performance. This is used by the "
"``CommonMiddleware`` (see :doc:`/topics/http/middleware`) and in the``Cache "
"Framework`` (see :doc:`/topics/cache`)."
msgstr ""

# a7b08666e3084945bcb886984e3e0ec0
#: ../../ref/settings.txt:2172
msgid "USE_I18N"
msgstr ""

# 2dc5975e23e54814a44b53c841eb3af3
#: ../../ref/settings.txt:2176
msgid ""
"A boolean that specifies whether Django's translation system should be "
"enabled. This provides an easy way to turn it off, for performance. If this "
"is set to ``False``, Django will make some optimizations so as not to load "
"the translation machinery."
msgstr ""

# c97a5bac09cc48d0836fa4b762789bb9
#: ../../ref/settings.txt:2181
msgid ""
"See also :setting:`LANGUAGE_CODE`, :setting:`USE_L10N` and :setting:`USE_TZ`."
msgstr ""

# cd5687bcc1d445c7bfa979a23554eec0
#: ../../ref/settings.txt:2186
msgid "USE_L10N"
msgstr ""

# 5a2dfcc8629d4ee587143d7eaf8c892e
#: ../../ref/settings.txt:2190
msgid ""
"A boolean that specifies if localized formatting of data will be enabled by "
"default or not. If this is set to ``True``, e.g. Django will display numbers "
"and dates using the format of the current locale."
msgstr ""

# d47679032bda4aefa2af98f59b29fce8
#: ../../ref/settings.txt:2194
msgid ""
"See also :setting:`LANGUAGE_CODE`, :setting:`USE_I18N` and :setting:`USE_TZ`."
msgstr ""

# 7a8037fe326d46c4b63e661088d19e60
#: ../../ref/settings.txt:2198
msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin.py "
"startproject <startproject>` includes ``USE_L10N = True`` for convenience."
msgstr ""

# f4150a9d3bdf468ba68c4174026f21ee
#: ../../ref/settings.txt:2204
msgid "USE_THOUSAND_SEPARATOR"
msgstr ""

# 384f400f8e3e4b84b425f63333a546ac
#: ../../ref/settings.txt:2208
msgid ""
"A boolean that specifies whether to display numbers using a thousand "
"separator. When :setting:`USE_L10N` is set to ``True`` and if this is also "
"set to ``True``, Django will use the values of :setting:`THOUSAND_SEPARATOR` "
"and :setting:`NUMBER_GROUPING` to format numbers."
msgstr ""

# 1e38ff497e604e0d82a1728729aa6ae0
#: ../../ref/settings.txt:2213
msgid ""
"See also :setting:`DECIMAL_SEPARATOR`, :setting:`NUMBER_GROUPING` and :"
"setting:`THOUSAND_SEPARATOR`."
msgstr ""

# bb73e374b800477a88b0948cf019c082
#: ../../ref/settings.txt:2219
msgid "USE_TZ"
msgstr ""

# 783d96a4fb1541a6a83401a201e33b14
#: ../../ref/settings.txt:2225
msgid ""
"A boolean that specifies if datetimes will be timezone-aware by default or "
"not. If this is set to ``True``, Django will use timezone-aware datetimes "
"internally. Otherwise, Django will use naive datetimes in local time."
msgstr ""

# b6de7ce272784aabb66a99808ddfad53
#: ../../ref/settings.txt:2229
msgid ""
"See also :setting:`TIME_ZONE`, :setting:`USE_I18N` and :setting:`USE_L10N`."
msgstr ""

# 2844c8d6f39f4e6d86acd30ed7923e8e
#: ../../ref/settings.txt:2233
msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin.py "
"startproject <startproject>` includes ``USE_TZ = True`` for convenience."
msgstr ""

# 8423197483bd4da9a172647399ebabe7
#: ../../ref/settings.txt:2240
msgid "USE_X_FORWARDED_HOST"
msgstr ""

# 1d07c7599d4345f6adb2aaa45d6c4a51
#: ../../ref/settings.txt:2244
msgid ""
"A boolean that specifies whether to use the X-Forwarded-Host header in "
"preference to the Host header. This should only be enabled if a proxy which "
"sets this header is in use."
msgstr ""

# d17643c35172472aaeb30ab5bf80ce08
#: ../../ref/settings.txt:2251
msgid "WSGI_APPLICATION"
msgstr ""

# 65726a9675a2414fbfab3a82120bff0f
#: ../../ref/settings.txt:2257
msgid ""
"The full Python path of the WSGI application object that Django's built-in "
"servers (e.g. :djadmin:`runserver`) will use. The :djadmin:`django-admin.py "
"startproject <startproject>` management command will create a simple ``wsgi."
"py`` file with an ``application`` callable in it, and point this setting to "
"that ``application``."
msgstr ""

# a05b53a976714f38b2d408ed9d998565
#: ../../ref/settings.txt:2263
msgid ""
"If not set, the return value of ``django.core.wsgi.get_wsgi_application()`` "
"will be used. In this case, the behavior of :djadmin:`runserver` will be "
"identical to previous Django versions."
msgstr ""

# 7511944f6f584fbba50e72804c5ccf23
#: ../../ref/settings.txt:2270
msgid "YEAR_MONTH_FORMAT"
msgstr ""

# bfd64deb013c4ebab9be1f74491e88d0
#: ../../ref/settings.txt:2272
msgid "Default: ``'F Y'``"
msgstr ""

# 066778a83e3749fd980311e653c6cd0f
#: ../../ref/settings.txt:2274
msgid ""
"The default formatting to use for date fields on Django admin change-list "
"pages -- and, possibly, by other parts of the system -- in cases when only "
"the year and month are displayed."
msgstr ""

# a4dfd941c1dd49caadb05462e13562af
#: ../../ref/settings.txt:2278
msgid ""
"For example, when a Django admin change-list page is being filtered by a "
"date drilldown, the header for a given month displays the month and the "
"year. Different locales have different formats. For example, U.S. English "
"would say \"January 2006,\" whereas another locale might say \"2006/January."
"\""
msgstr ""

# addfbe4c3ed543d591af234417743b30
#: ../../ref/settings.txt:2283
msgid ""
"See :tfilter:`allowed date format strings <date>`. See also :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`TIME_FORMAT` and :"
"setting:`MONTH_DAY_FORMAT`."
msgstr ""

# efa5124c2d77489cafad0be901a1fe63
#: ../../ref/settings.txt:2290
msgid "X_FRAME_OPTIONS"
msgstr ""

# d9ace7b8e50c4454961b373ac0cbfeaa
#: ../../ref/settings.txt:2292
msgid "Default: ``'SAMEORIGIN'``"
msgstr ""

# 8080e6a7af164acc980a2fdb110eee78
#: ../../ref/settings.txt:2294
msgid ""
"The default value for the X-Frame-Options header used by :class:`~django."
"middleware.clickjacking.XFrameOptionsMiddleware`. See the :doc:`clickjacking "
"protection </ref/clickjacking/>` documentation."
msgstr ""

# b27ce5b73988475686fdd87d53b4c56d
#: ../../ref/settings.txt:2299
msgid "Deprecated settings"
msgstr ""

# 2d6c03dfb48a486ca382989d82f40959
#: ../../ref/settings.txt:2304
msgid "AUTH_PROFILE_MODULE"
msgstr ""

# 88d5b3f89bfb4401a3af8d1a93f9b495
#: ../../ref/settings.txt:2314
msgid ""
"The site-specific user profile model used by this site. See :ref:`User "
"profiles <auth-profiles>`."
msgstr ""

# ee9c242d87114966992e78b56c158259
#: ../../ref/settings.txt:2320
msgid "IGNORABLE_404_ENDS"
msgstr ""

# 63c3bdc807a14e4aa9294dbf7643a915
# 589d93c18a8444499f16295bf355e6c1
#: ../../ref/settings.txt:2322 ../../ref/settings.txt:2330
msgid "This setting has been superseded by :setting:`IGNORABLE_404_URLS`."
msgstr ""

# 95795ac4808b494fbaf76d71729d21c2
#: ../../ref/settings.txt:2328
msgid "IGNORABLE_404_STARTS"
msgstr ""

# ff960f7d67c74cdaa8e2cead0907489b
#: ../../ref/signals.txt:3
msgid "Signals"
msgstr ""

# 29d2718cd67c47c790a94c168bd280ec
#: ../../ref/signals.txt:5
msgid "A list of all the signals that Django sends."
msgstr ""

# 9a01b8346fa8476bab53a5b889a4050f
#: ../../ref/signals.txt:9
msgid ""
"See the documentation on the :doc:`signal dispatcher </topics/signals>` for "
"information regarding how to register for and receive signals."
msgstr ""

# 29ae6aa49e124bd88490557fc1f7a671
#: ../../ref/signals.txt:12
msgid ""
"The :doc:`comment framework </ref/contrib/comments/index>` sends a :doc:`set "
"of comment-related signals </ref/contrib/comments/signals>`."
msgstr ""

# 424c7a03b0ed4d75a34d2cb9e99dbfaf
#: ../../ref/signals.txt:15
msgid ""
"The :doc:`authentication framework </topics/auth/index>` sends :ref:`signals "
"when a user is logged in / out <topics-auth-signals>`."
msgstr ""

# a76f7d8910114b708983c4533f04df88
#: ../../ref/signals.txt:19
msgid "Model signals"
msgstr ""

# 3f74a079d5f147f88f2bc065c651dc7b
#: ../../ref/signals.txt:24
msgid ""
"The :mod:`django.db.models.signals` module defines a set of signals sent by "
"the module system."
msgstr ""

# e448410c42e44176b3293d0e8b83e932
#: ../../ref/signals.txt:29
msgid ""
"Many of these signals are sent by various model methods like ``__init__()`` "
"or :meth:`~django.db.models.Model.save` that you can override in your own "
"code."
msgstr ""

# 8afb1aff86cb4887b756adf3af6c041b
#: ../../ref/signals.txt:33
msgid ""
"If you override these methods on your model, you must call the parent class' "
"methods for this signals to be sent."
msgstr ""

# f6b4068e8428493092e343e645472591
#: ../../ref/signals.txt:36
msgid ""
"Note also that Django stores signal handlers as weak references by default, "
"so if your handler is a local function, it may be garbage collected.  To "
"prevent this, pass ``weak=False`` when you call the signal's :meth:`~django."
"dispatch.Signal.connect`."
msgstr ""

# a54d0c4181b144d4afedd481688a7e70
#: ../../ref/signals.txt:41
msgid "pre_init"
msgstr ""

# cd13b2c94c9f4eb48cd3ec8b5e4bc7c7
#: ../../ref/signals.txt:48
msgid ""
"Whenever you instantiate a Django model, this signal is sent at the "
"beginning of the model's ``__init__()`` method."
msgstr ""

# ed882135e53247ccb418797eb24878ad
#: ../../ref/signals.txt:54
msgid "The model class that just had an instance created."
msgstr ""

# 0f8a582a10a34fa0a1e3e1e048efbe28
# c05ba36a03cf4c628de82aafc8b2dee2
#: ../../ref/signals.txt:57 ../../ref/signals.txt:73
msgid "``args``"
msgstr ""

# 4a8a8b138b9f423398765f32f0bc4970
#: ../../ref/signals.txt:57
msgid "A list of positional arguments passed to ``__init__()``:"
msgstr ""

# a41d1d4d47d84b15b0583c8e6ca91ad9
# 1b454cb0a20b44f8a88adb239f5a52da
#: ../../ref/signals.txt:60 ../../ref/signals.txt:76
msgid "``kwargs``"
msgstr ""

# 86ea244c9b9d4739a2abb177e5a26d6c
#: ../../ref/signals.txt:60
msgid "A dictionary of keyword arguments passed to ``__init__()``:"
msgstr ""

# 390cd87e61904222850275763e22ce74
#: ../../ref/signals.txt:62
msgid "For example, the :doc:`tutorial </intro/tutorial01>` has this line::"
msgstr ""

# 4a5429af70634c6c8d7c87bf806f67c2
#: ../../ref/signals.txt:66
msgid "The arguments sent to a :data:`pre_init` handler would be:"
msgstr ""

# 26d6134031dc493a8819d3f04b3fc2ca
#: ../../ref/signals.txt:71
msgid "``Poll`` (the class itself)"
msgstr ""

# 72a58ebbb11445d5810feb5a7c520ff7
#: ../../ref/signals.txt:73
msgid ""
"``[]`` (an empty list because there were no positional arguments passed to "
"``__init__()``.)"
msgstr ""

# 23797adedbb04f03b9b8dbda65a144e7
#: ../../ref/signals.txt:76
msgid "``{'question': \"What's up?\", 'pub_date': datetime.now()}``"
msgstr ""

# 5767decc15dc437fb995a8eec6c9c0ee
#: ../../ref/signals.txt:80
msgid "post_init"
msgstr ""

# c6acf183decd46eea83de8a5f9cfcdcf
#: ../../ref/signals.txt:85
msgid ""
"Like pre_init, but this one is sent when the ``__init__()`` method finishes."
msgstr ""

# c63c55848f6f452e8e50ee8850c8620f
#: ../../ref/signals.txt:90
msgid "As above: the model class that just had an instance created."
msgstr ""

# ad430cbe3af94523a7eeb3b818eaa870
#: ../../ref/signals.txt:93
msgid "The actual instance of the model that's just been created."
msgstr ""

# 588f7fc69e444855b8ab544cb157643c
#: ../../ref/signals.txt:96
msgid "pre_save"
msgstr ""

# 0a6f50e392d843ad994f1c900701f0b2
#: ../../ref/signals.txt:101
msgid ""
"This is sent at the beginning of a model's :meth:`~django.db.models.Model."
"save` method."
msgstr ""

# a184d4ad8b6c446da35c65cb5d6c5de1
# f566f0ea96ee4c1e83984a0b7bdaddb9
# 0e052b92b1c44a52b60b994ef121ebf5
# 8142ae4fdbe54c11bce9e2ec4cd13493
#: ../../ref/signals.txt:107 ../../ref/signals.txt:139
#: ../../ref/signals.txt:174 ../../ref/signals.txt:195
msgid "The model class."
msgstr ""

# d4296b3b96ba45c7ba24b430939e9e2f
# 3c2bcd3722d4467587018e10846ec062
#: ../../ref/signals.txt:110 ../../ref/signals.txt:142
msgid "The actual instance being saved."
msgstr ""

# 346e457522ba48bf8834d987fa054151
# 042fdd4624c04bedbc581a223aa9e68e
#: ../../ref/signals.txt:116 ../../ref/signals.txt:151
msgid "``raw``"
msgstr ""

# 26e9e78c01d644af8a60be5b0cc8d6b1
# dfbe18199e1947c69872e8d8ee9c6bb3
#: ../../ref/signals.txt:113 ../../ref/signals.txt:148
msgid ""
"A boolean; ``True`` if the model is saved exactly as presented (i.e. when "
"loading a fixture). One should not query/modify other records in the "
"database as the database might not be in a consistent state yet."
msgstr ""

# 7dfece9a830d41d683697b635b478b02
# 0cac662af4b346189e1b5226016b8ba9
# cbc673d083be4df8bc4b43f3442a5be2
# 88b6f226dd82482e87f6e7e89cfd935a
# 7bfada9eed124fe6ae8cff82d0922d98
#: ../../ref/signals.txt:119 ../../ref/signals.txt:154
#: ../../ref/signals.txt:180 ../../ref/signals.txt:204
#: ../../ref/signals.txt:264
msgid "The database alias being used."
msgstr ""

# 3023f8ac23ff422694033aed8f1eb52e
# 3f334738e669468da4d05eee69e85ae8
#: ../../ref/signals.txt:125 ../../ref/signals.txt:160
msgid "``update_fields``"
msgstr ""

# 3d6e10bcbec74a97baf2f90b44277435
# 615363c0fd1449248e921563c359876d
#: ../../ref/signals.txt:124 ../../ref/signals.txt:159
msgid ""
"The set of fields to update explicitly specified in the ``save()`` method. "
"``None`` if this argument was not used in the ``save()`` call."
msgstr ""

# bd8b63bfa37c48bdaeeb16c6a6f8f1e5
#: ../../ref/signals.txt:128
msgid "post_save"
msgstr ""

# dac118ba187a423f85c053168d0cd561
#: ../../ref/signals.txt:133
msgid ""
"Like :data:`pre_save`, but sent at the end of the :meth:`~django.db.models."
"Model.save` method."
msgstr ""

# 1d65385a138846da8cb0d5eeb2796396
#: ../../ref/signals.txt:145
msgid "A boolean; ``True`` if a new record was created."
msgstr ""

# 214aef456c7f4927a4ad06804d45bf80
#: ../../ref/signals.txt:163
msgid "pre_delete"
msgstr ""

# f49d82bd1f4a4dc29f14c4cfead20322
#: ../../ref/signals.txt:168
msgid ""
"Sent at the beginning of a model's :meth:`~django.db.models.Model.delete` "
"method and a queryset's :meth:`~django.db.models.query.QuerySet.delete` "
"method."
msgstr ""

# 8687e4c149f24a29b6897ec89f2cd085
# 0b377932cc9e4014945eaf4e452bc933
#: ../../ref/signals.txt:177 ../../ref/signals.txt:198
msgid "The actual instance being deleted."
msgstr ""

# 1a66d4c57a1642e1b1bc522787800a8e
#: ../../ref/signals.txt:183
msgid "post_delete"
msgstr ""

# 745b949f80a04f9aa24754ebaca43cd4
#: ../../ref/signals.txt:188
msgid ""
"Like :data:`pre_delete`, but sent at the end of a model's :meth:`~django.db."
"models.Model.delete` method and a queryset's :meth:`~django.db.models.query."
"QuerySet.delete` method."
msgstr ""

# 045391dff4b74a0ba40f59991e3abcf9
#: ../../ref/signals.txt:200
msgid ""
"Note that the object will no longer be in the database, so be very careful "
"what you do with this instance."
msgstr ""

# 74d1acfc30e042919d19c4e1677253ef
#: ../../ref/signals.txt:207
msgid "m2m_changed"
msgstr ""

# 4417eee436e041f3b39b62f6af738acb
#: ../../ref/signals.txt:212
msgid ""
"Sent when a :class:`~django.db.models.ManyToManyField` is changed on a model "
"instance. Strictly speaking, this is not a model signal since it is sent by "
"the :class:`~django.db.models.ManyToManyField`, but since it complements "
"the :data:`pre_save`/:data:`post_save` and :data:`pre_delete`/:data:"
"`post_delete` when it comes to tracking changes to models, it is included "
"here."
msgstr ""

# 16d3d42d2754436693a5ffe0800a06cc
#: ../../ref/signals.txt:221
msgid ""
"The intermediate model class describing the :class:`~django.db.models."
"ManyToManyField`. This class is automatically created when a many-to-many "
"field is defined; you can access it using the ``through`` attribute on the "
"many-to-many field."
msgstr ""

# e18c0d56e09048faa7d84214908f5c30
#: ../../ref/signals.txt:227
msgid ""
"The instance whose many-to-many relation is updated. This can be an instance "
"of the ``sender``, or of the class the :class:`~django.db.models."
"ManyToManyField` is related to."
msgstr ""

# 236554652c5a4507aa31c91c0a8b82c1
# 9aef9e9aba5b445ea3a76112fd668948
# 1cb34360c69744dda2731bee5ef95fda
#: ../../ref/signals.txt:246 ../../ref/signals.txt:301
#: ../../ref/signals.txt:328
msgid "``action``"
msgstr ""

# 6afaeb5a250a44f583b81abc61318f85
#: ../../ref/signals.txt:232
msgid ""
"A string indicating the type of update that is done on the relation. This "
"can be one of the following:"
msgstr ""

# 865cf1ca4a17427e8c4eca353d24985c
#: ../../ref/signals.txt:235
msgid "``\"pre_add\"``"
msgstr ""

# f6e57258a222430eba571fd3f2bb2d47
#: ../../ref/signals.txt:236
msgid "Sent *before* one or more objects are added to the relation."
msgstr ""

# 2d5bdd6a221b45359bc32740d9bf1c79
#: ../../ref/signals.txt:237
msgid "``\"post_add\"``"
msgstr ""

# 600969418e4b41ab810de92fed329383
#: ../../ref/signals.txt:238
msgid "Sent *after* one or more objects are added to the relation."
msgstr ""

# f7906a27b71a43f5ab7aef4f6010accf
#: ../../ref/signals.txt:239
msgid "``\"pre_remove\"``"
msgstr ""

# ab8873b30a794a5488c3d54ef85e6fa9
#: ../../ref/signals.txt:240
msgid "Sent *before* one or more objects are removed from the relation."
msgstr ""

# af107ac289844d4c8f6f173fef77b87c
#: ../../ref/signals.txt:241
msgid "``\"post_remove\"``"
msgstr ""

# 29815e5706344afcbf8d7729aa573dd7
#: ../../ref/signals.txt:242
msgid "Sent *after* one or more objects are removed from the relation."
msgstr ""

# 6471fe591de9484aae3750c1b8ffb6f1
#: ../../ref/signals.txt:243
msgid "``\"pre_clear\"``"
msgstr ""

# 0d5e3ed0a86a4f419589e394c131d07f
#: ../../ref/signals.txt:244
msgid "Sent *before* the relation is cleared."
msgstr ""

# 9a1f902d35c44d03a2feefcc95095f86
#: ../../ref/signals.txt:246
msgid "``\"post_clear\"``"
msgstr ""

# 50b10d029169411c9b145d2f9f748388
#: ../../ref/signals.txt:246
msgid "Sent *after* the relation is cleared."
msgstr ""

# 200bae1b8e4048af92889c8d7997088d
#: ../../ref/signals.txt:249
msgid ""
"Indicates which side of the relation is updated (i.e., if it is the forward "
"or reverse relation that is being modified)."
msgstr ""

# 5865550ee52d4ca9b67c039d71d47627
#: ../../ref/signals.txt:253
msgid ""
"The class of the objects that are added to, removed from or cleared from the "
"relation."
msgstr ""

# 5c99fa5182c4436383ca6fcd38a208ed
# 636bd063f5ad406fa6b4a067a4704224
# a23d352afd5a4d108ef91b221d262e50
#: ../../ref/signals.txt:261 ../../ref/signals.txt:310
#: ../../ref/signals.txt:337
msgid "``pk_set``"
msgstr ""

# b0435f1bbaab4815913ae174c478b958
#: ../../ref/signals.txt:257
msgid ""
"For the ``pre_add``, ``post_add``, ``pre_remove`` and ``post_remove`` "
"actions, this is a set of primary key values that have been added to or "
"removed from the relation."
msgstr ""

# 0629439725be438d9e4cc52ca8adbba2
#: ../../ref/signals.txt:261
msgid "For the ``pre_clear`` and ``post_clear`` actions, this is ``None``."
msgstr ""

# 4b301834a47b42c3840a652046fdaf9c
#: ../../ref/signals.txt:266
msgid ""
"For example, if a ``Pizza`` can have multiple ``Topping`` objects, modeled "
"like this::"
msgstr ""

# 70a552fcf3ac470792df0135a2b6e78b
#: ../../ref/signals.txt:277
msgid "If we connected a handler like this::"
msgstr ""

# ce3d909521dd4db3b448ac1552f210b4
#: ../../ref/signals.txt:285
msgid "and then did something like this::"
msgstr ""

# 2591cf424dd142cd83f715e3d71d9fa3
#: ../../ref/signals.txt:291
msgid ""
"the arguments sent to a :data:`m2m_changed` handler (``toppings_changed`` in "
"the example above) would be:"
msgstr ""

# 6f04c4fce2fc4f9cbb1c677bc72fd3ff
# 454d213c1236434691a51caaa8d8e6e6
#: ../../ref/signals.txt:297 ../../ref/signals.txt:324
msgid "``Pizza.toppings.through`` (the intermediate m2m class)"
msgstr ""

# cebe7ffd23104e949048271bc05582bf
#: ../../ref/signals.txt:299
msgid "``p`` (the ``Pizza`` instance being modified)"
msgstr ""

# 8f2a03a92f5746aebe292b3b813abfd5
#: ../../ref/signals.txt:301
msgid "``\"pre_add\"`` (followed by a separate signal with ``\"post_add\"``)"
msgstr ""

# 897c78fc59ae49b0854756220003d083
#: ../../ref/signals.txt:303
msgid ""
"``False`` (``Pizza`` contains the :class:`~django.db.models."
"ManyToManyField`, so this call modifies the forward relation)"
msgstr ""

# f078af317af24e0796fe14cf0ef5d5eb
#: ../../ref/signals.txt:307
msgid "``Topping`` (the class of the objects added to the ``Pizza``)"
msgstr ""

# ce617bf199db42cb9625a6f611494633
#: ../../ref/signals.txt:310
msgid "``set([t.id])`` (since only ``Topping t`` was added to the relation)"
msgstr ""

# 9da93c2bc39640debb4cc58ad6593d3e
# 503532971b95441b96d5a21ff6f3eb2a
#: ../../ref/signals.txt:312 ../../ref/signals.txt:340
msgid "``\"default\"`` (since the default router sends writes here)"
msgstr ""

# 558d672b2d174c8a96abfc22a46d5740
#: ../../ref/signals.txt:315
msgid "And if we would then do something like this::"
msgstr ""

# d5969a1badc14c1195f4901a45e560e1
#: ../../ref/signals.txt:319
msgid "the arguments sent to a :data:`m2m_changed` handler would be:"
msgstr ""

# 6dd677ef7f3b449ba3c9796e4752cd8b
#: ../../ref/signals.txt:326
msgid "``t`` (the ``Topping`` instance being modified)"
msgstr ""

# 40bca6b8632748edb73b9f9f66ca62f0
#: ../../ref/signals.txt:328
msgid ""
"``\"pre_remove\"`` (followed by a separate signal with ``\"post_remove\"``)"
msgstr ""

# 616e6d254ddc4396b8a2ee46aec454ef
#: ../../ref/signals.txt:330
msgid ""
"``True`` (``Pizza`` contains the :class:`~django.db.models.ManyToManyField`, "
"so this call modifies the reverse relation)"
msgstr ""

# a9f0ccc23dd24a108aad724971bd46ad
#: ../../ref/signals.txt:334
msgid "``Pizza`` (the class of the objects removed from the ``Topping``)"
msgstr ""

# 55785a3f11a34b0cbac44da84bd5a728
#: ../../ref/signals.txt:337
msgid "``set([p.id])`` (since only ``Pizza p`` was removed from the relation)"
msgstr ""

# 6cabd1a3a3cb4cd3b577de8e45236ba3
#: ../../ref/signals.txt:344
msgid "class_prepared"
msgstr ""

# 032b613b4aad4b50804670080bf78149
#: ../../ref/signals.txt:349
msgid ""
"Sent whenever a model class has been \"prepared\" -- that is, once model has "
"been defined and registered with Django's model system. Django uses this "
"signal internally; it's not generally used in third-party applications."
msgstr ""

# 423f01010d1e4ffe9cea561ea20909d3
#: ../../ref/signals.txt:353
msgid "Arguments that are sent with this signal:"
msgstr ""

# 8a08b2b55ef94b7b9c5f1ce2a6cb7ce1
#: ../../ref/signals.txt:356
msgid "The model class which was just prepared."
msgstr ""

# 5b79612cd38f4d5998cf10e2f97319ea
#: ../../ref/signals.txt:359
msgid "Management signals"
msgstr ""

# 1d129a45c8fa4ababd26dcfdd619ddb6
#: ../../ref/signals.txt:361
msgid "Signals sent by :doc:`django-admin </ref/django-admin>`."
msgstr ""

# 1e1d825624744ce9809ed4d6e9bebf50
#: ../../ref/signals.txt:364
msgid "post_syncdb"
msgstr ""

# 08997c408ba74783bddc7100e493dbd3
#: ../../ref/signals.txt:369
msgid ""
"Sent by the :djadmin:`syncdb` command after it installs an application, and "
"the :djadmin:`flush` command."
msgstr ""

# d453e736bcda4f54b38fe75bdc8f971f
#: ../../ref/signals.txt:372
msgid ""
"Any handlers that listen to this signal need to be written in a particular "
"place: a ``management`` module in one of your :setting:`INSTALLED_APPS`. If "
"handlers are registered anywhere else they may not be loaded by :djadmin:"
"`syncdb`. It is important that handlers of this signal perform idempotent "
"changes (e.g. no database alterations) as this may cause the :djadmin:"
"`flush` management command to fail if it also ran during the :djadmin:"
"`syncdb` command."
msgstr ""

# 9c65759f30ca44198cd5ce5f9ad45216
#: ../../ref/signals.txt:383
msgid ""
"The ``models`` module that was just installed. That is, if :djadmin:`syncdb` "
"just installed an app called ``\"foo.bar.myapp\"``, ``sender`` will be the "
"``foo.bar.myapp.models`` module."
msgstr ""

# f47ee0210eb7439bbb67d5189f1ce3af
#: ../../ref/signals.txt:388
msgid "``app``"
msgstr ""

# d327af5f242743feb2bcd54c1c128d09
#: ../../ref/signals.txt:388
msgid "Same as ``sender``."
msgstr ""

# 0cc940fdcb5c41d9b7d8adf5dbe79f7d
#: ../../ref/signals.txt:392
msgid "``created_models``"
msgstr ""

# b873e14c7760412ea73b076d57f942c0
#: ../../ref/signals.txt:391
msgid ""
"A list of the model classes from any app which :djadmin:`syncdb` has created "
"so far."
msgstr ""

# c1e7ae0749ff4f7ca257871ac3cce66a
#: ../../ref/signals.txt:399
msgid "``verbosity``"
msgstr ""

# 764ec473f59048999f9f4933d3114127
#: ../../ref/signals.txt:395
msgid ""
"Indicates how much information manage.py is printing on screen. See the :"
"djadminopt:`--verbosity` flag for details."
msgstr ""

# f7dbb17aebc04c35b3a92cc842555afc
#: ../../ref/signals.txt:398
msgid ""
"Functions which listen for :data:`post_syncdb` should adjust what they "
"output to the screen based on the value of this argument."
msgstr ""

# 1ea62ec9968a45da9d6660ee2e7e7597
#: ../../ref/signals.txt:407
msgid "``interactive``"
msgstr ""

# 14c59c8c5eb84f4b9340c8c13b1f81ac
#: ../../ref/signals.txt:402
msgid ""
"If ``interactive`` is ``True``, it's safe to prompt the user to input things "
"on the command line. If ``interactive`` is ``False``, functions which listen "
"for this signal should not try to prompt for anything."
msgstr ""

# 0131c82499a240c0b6f31826ec35b93a
#: ../../ref/signals.txt:406
msgid ""
"For example, the :mod:`django.contrib.auth` app only prompts to create a "
"superuser when ``interactive`` is ``True``."
msgstr ""

# 26411b4ac96c495dad31dffd4d8d3b90
#: ../../ref/signals.txt:409
msgid "For example, ``yourapp/management/__init__.py`` could be written like::"
msgstr ""

# fa695ffa66cd4f6e98cdda838f3252fb
#: ../../ref/signals.txt:421
msgid "Request/response signals"
msgstr ""

# d1459941693547d198badee6e4cd2567
#: ../../ref/signals.txt:426
msgid "Signals sent by the core framework when processing a request."
msgstr ""

# f816a803d26c4398abf84a13646ff334
#: ../../ref/signals.txt:429
msgid "request_started"
msgstr ""

# 97aa4d1269104525b7fdb14a8fd277aa
#: ../../ref/signals.txt:434
msgid "Sent when Django begins processing an HTTP request."
msgstr ""

# 1a0efecfe7d24ef0bd79f6b88321b375
#: ../../ref/signals.txt:439
msgid ""
"The handler class -- e.g. ``django.core.handlers.wsgi.WsgiHandler`` -- that "
"handled the request."
msgstr ""

# a9ee99b4bf1543f9a6f629e88dcff086
#: ../../ref/signals.txt:443
msgid "request_finished"
msgstr ""

# 2813439344834dc3ad1bbb1346f8463d
#: ../../ref/signals.txt:448
msgid "Sent when Django finishes processing an HTTP request."
msgstr ""

# 347cc2a9acb1458fac0edacb8edbd205
#: ../../ref/signals.txt:459
msgid ""
"Some WSGI servers and middleware do not always call ``close`` on the "
"response object after handling a request, most notably uWSGI prior to 1.2.6 "
"and Sentry's error reporting middleware up to 2.0.7. In those cases this "
"signal isn't sent at all. This can result in idle connections to database "
"and memcache servers."
msgstr ""

# 1ec6ab9308c7492fb2f71263aab87bd8
# 8046a95b983b4a8c9b486e55d035bd8d
#: ../../ref/signals.txt:465 ../../ref/signals.txt:478
msgid "The handler class, as above."
msgstr ""

# 55c343724fc54471878383743412ac2e
#: ../../ref/signals.txt:468
msgid "got_request_exception"
msgstr ""

# 130722db36d948d0b0b7f5fe75a98d96
#: ../../ref/signals.txt:473
msgid ""
"This signal is sent whenever Django encounters an exception while processing "
"an incoming HTTP request."
msgstr ""

# 0334848bf88b4bfcb14de8bc0f3fa81b
#: ../../ref/signals.txt:481
msgid "The :class:`~django.http.HttpRequest` object."
msgstr ""

# 27dcbf4c3623425b89f4781f07360c1b
#: ../../ref/signals.txt:484
msgid "Test signals"
msgstr ""

# 128e9d3c76ef45d183288f7c4b5d6e15
#: ../../ref/signals.txt:489
msgid "Signals only sent when :ref:`running tests <running-tests>`."
msgstr ""

# 18e66d4871564f13bfc6d52795223e82
#: ../../ref/signals.txt:492
msgid "setting_changed"
msgstr ""

# 1dcf096fd36b451987169a72fb5dc398
#: ../../ref/signals.txt:499
msgid ""
"This signal is sent when the value of a setting is changed through the "
"``django.test.TestCase.settings()`` context manager or the :func:`django."
"test.utils.override_settings` decorator/context manager."
msgstr ""

# 34e3f7db87ba408489f15445d46142b3
#: ../../ref/signals.txt:503
msgid ""
"It's actually sent twice: when the new value is applied (\"setup\") and when "
"the original value is restored (\"teardown\")."
msgstr ""

# 0602138b2a934e87aabb6948761be94e
#: ../../ref/signals.txt:509
msgid "The settings handler."
msgstr ""

# 062f644c0ed442118a9b0262d72d94f5
#: ../../ref/signals.txt:512
msgid "``setting``"
msgstr ""

# 870d97259b3249279743a31023ea9f78
#: ../../ref/signals.txt:512
msgid "The name of the setting."
msgstr ""

# 7245bd128fd24a75bf2ddfb71b78bba3
# 801e66ed77304685aa917c6a080aa09d
# 31ed658b8e4b47dfaa5544b7fe93d732
# 12cae7d4c00e4a829c3ff9e4fdfef310
# d2a632162e8b44368a1cfc358300dfe3
#: ../../ref/signals.txt:516 ../../ref/templates/builtins.txt:1510
#: ../../ref/templates/builtins.txt:1521 ../../ref/templates/builtins.txt:1532
#: ../../ref/templates/builtins.txt:1544
msgid "``value``"
msgstr ""

# 064d38162c964154890e44a5797dea42
#: ../../ref/signals.txt:515
msgid ""
"The value of the setting after the change. For settings that initially don't "
"exist, in the \"teardown\" phase, ``value`` is ``None``."
msgstr ""

# bb5527a755fe41cea9f7c0b0b5c87a03
#: ../../ref/signals.txt:519
msgid "template_rendered"
msgstr ""

# ae1542ab7c5645c8b4b9bdbef8dc90b7
#: ../../ref/signals.txt:524
msgid ""
"Sent when the test system renders a template. This signal is not emitted "
"during normal operation of a Django server -- it is only available during "
"testing."
msgstr ""

# 926329cc7fea4614891a6b625bcbc5db
#: ../../ref/signals.txt:530
msgid "The :class:`~django.template.Template` object which was rendered."
msgstr ""

# dcc0e06bf9ef49918dbfb987ca0d7c95
# 84adf87d6916439aad0c656783ce74d9
# 6225e14182d84c199c122dd00ab89d10
#: ../../ref/signals.txt:533 ../../ref/template-response.txt:67
#: ../../ref/template-response.txt:160
msgid "``template``"
msgstr ""

# e203a2f284c848ea8ef6afe8321e46dc
#: ../../ref/signals.txt:533
msgid "Same as sender"
msgstr ""

# 353204219f354caca3a9df5533a0b020
# 9a5cf80e885344858a385d77e184f9f9
# 581903eb89f9468788dd65ca4ab2036f
#: ../../ref/signals.txt:537 ../../ref/template-response.txt:72
#: ../../ref/template-response.txt:165
msgid "``context``"
msgstr ""

# 7e90a415970946c381309550357a0081
#: ../../ref/signals.txt:536
msgid ""
"The :class:`~django.template.Context` with which the template was rendered."
msgstr ""

# 4992befd1de34c73905da36a07a5b027
#: ../../ref/signals.txt:540
msgid "Database Wrappers"
msgstr ""

# 4254064930354d52bfdc25b8fc9b82af
#: ../../ref/signals.txt:545
msgid ""
"Signals sent by the database wrapper when a database connection is initiated."
msgstr ""

# 3f466ddb2c334d30b5e9df50882be1ee
#: ../../ref/signals.txt:549
msgid "connection_created"
msgstr ""

# 1eb24312e8d44e0999587664b3ac631a
#: ../../ref/signals.txt:554
msgid ""
"Sent when the database wrapper makes the initial connection to the "
"database.  This is particularly useful if you'd like to send any post "
"connection commands to the SQL backend."
msgstr ""

# 5832a367ec064565bf3913f5dc53bec4
#: ../../ref/signals.txt:561
msgid ""
"The database wrapper class -- i.e. ``django.db.backends.postgresql_psycopg2."
"DatabaseWrapper`` or ``django.db.backends.mysql.DatabaseWrapper``, etc."
msgstr ""

# 8434fc9c14354baf951088f5803b4ece
#: ../../ref/signals.txt:567
msgid "``connection``"
msgstr ""

# f936f419c52f438583d7298aff7cb6b8
#: ../../ref/signals.txt:566
msgid ""
"The database connection that was opened. This can be used in a multiple-"
"database configuration to differentiate connection signals from different "
"databases."
msgstr ""

# da8d2d345fa24a16a589e1e4c3f544fa
#: ../../ref/template-response.txt:3
msgid "TemplateResponse and SimpleTemplateResponse"
msgstr ""

# af453970eda44459aba37e0549a10daa
#: ../../ref/template-response.txt:8
msgid ""
"Standard :class:`~django.http.HttpResponse` objects are static structures. "
"They are provided with a block of pre-rendered content at time of "
"construction, and while that content can be modified, it isn't in a form "
"that makes it easy to perform modifications."
msgstr ""

# 4e2342a0595b442e9f481d86e011d0cc
#: ../../ref/template-response.txt:13
msgid ""
"However, it can sometimes be beneficial to allow decorators or middleware to "
"modify a response *after* it has been constructed by the view. For example, "
"you may want to change the template that is used, or put additional data "
"into the context."
msgstr ""

# a019522746ee4c1caa363dc0e75eaa57
#: ../../ref/template-response.txt:18
msgid ""
"TemplateResponse provides a way to do just that. Unlike basic :class:"
"`~django.http.HttpResponse` objects, TemplateResponse objects retain the "
"details of the template and context that was provided by the view to compute "
"the response. The final output of the response is not computed until it is "
"needed, later in the response process."
msgstr ""

# 4465c365603446cd96b084decfe9a583
#: ../../ref/template-response.txt:25
msgid "SimpleTemplateResponse objects"
msgstr ""

# f774698c18a24a91b6a1251d9205fe39
#: ../../ref/template-response.txt:34
msgid ""
"The name of the template to be rendered. Accepts a :class:`~django.template."
"Template` object, a path to a template or list of template paths."
msgstr ""

# f38dc6afeb3543ccbcf36032c5dce653
#: ../../ref/template-response.txt:38
msgid "Example: ``['foo.html', 'path/to/bar.html']``"
msgstr ""

# b2b766b0756d436a9a379cb0b445afcb
#: ../../ref/template-response.txt:42
msgid ""
"The context data to be used when rendering the template. It can be a "
"dictionary or a context object."
msgstr ""

# 95a2d3bd9ea14f14b3547d64a914d35f
#: ../../ref/template-response.txt:45
msgid "Example: ``{'foo': 123}``"
msgstr ""

# 68410e6383b84dada00afcbb635c106d
#: ../../ref/template-response.txt:49
msgid ""
"The current rendered value of the response content, using the current "
"template and context data."
msgstr ""

# 1409bb1597894b28b9651e7a0a11872c
#: ../../ref/template-response.txt:54
msgid "A boolean indicating whether the response content has been rendered."
msgstr ""

# 5c82e3da11ff4cd995a97d4abd5b895a
#: ../../ref/template-response.txt:61
msgid ""
"Instantiates a :class:`~django.template.response.SimpleTemplateResponse` "
"object with the given template, context, content type, and HTTP status."
msgstr ""

# 7918ecbbb123434d8cf8560ddca6cc25
# 0eb8f3fa5a9e4409869d677fc671f8a7
#: ../../ref/template-response.txt:66 ../../ref/template-response.txt:159
msgid ""
"The full name of a template, or a sequence of template names. :class:"
"`~django.template.Template` instances can also be used."
msgstr ""

# 7e4c749761834693bb94444c34438384
# a2b4c95c4d684eed99cf32f33ceac47b
#: ../../ref/template-response.txt:70 ../../ref/template-response.txt:163
msgid ""
"A dictionary of values to add to the template context. By default, this is "
"an empty dictionary. :class:`~django.template.Context` objects are also "
"accepted as ``context`` values."
msgstr ""

# 658c3c8d5b6e4c8dba19cd4bcce9bdfe
# beb5bc4a1121472fabee8c213dae8d55
#: ../../ref/template-response.txt:75 ../../ref/template-response.txt:168
msgid "``status``"
msgstr ""

# fac3dc329a574bcd9784f53159e03103
# c551a78ed0664abbaaf7594ec43ec725
#: ../../ref/template-response.txt:75 ../../ref/template-response.txt:168
msgid "The HTTP Status code for the response."
msgstr ""

# c50e2e548fa94441a6ff067a27b13a9c
# a759807a65324ee583c2a6cbe3f88c83
#: ../../ref/template-response.txt:77 ../../ref/template-response.txt:170
msgid "``content_type``"
msgstr ""

# 9a530643a9eb469dae203679f0ecea7e
# ff5a25b5e2394aad8d5b3cfd67efd660
#: ../../ref/template-response.txt:81 ../../ref/template-response.txt:174
msgid ""
"Historically, this parameter was only called ``mimetype`` (now deprecated), "
"but since this is actually the value included in the HTTP ``Content-Type`` "
"header, it can also include the character set encoding, which makes it more "
"than just a MIME type specification. If ``mimetype`` is specified (not "
"``None``), that value is used. Otherwise, ``content_type`` is used. If "
"neither is given, :setting:`DEFAULT_CONTENT_TYPE` is used."
msgstr ""

# d68e9acba532459e9e70d15e52cea161
#: ../../ref/template-response.txt:92
msgid ""
"Converts context data into a context instance that can be used for rendering "
"a template. Accepts a dictionary of context data or a context object. "
"Returns a :class:`~django.template.Context` instance containing the provided "
"data."
msgstr ""

# c78ba890e74c4a9ea57be94df0d2e9db
#: ../../ref/template-response.txt:97
msgid "Override this method in order to customize context instantiation."
msgstr ""

# 9568a3493c7249dea766687689b656c4
#: ../../ref/template-response.txt:101
msgid ""
"Resolves the template instance to use for rendering. Accepts a path of a "
"template to use, or a sequence of template paths. :class:`~django.template."
"Template` instances may also be provided. Returns the :class:`~django."
"template.Template` instance to be rendered."
msgstr ""

# b5a63e5750474af085985885a011d554
#: ../../ref/template-response.txt:107
msgid "Override this method in order to customize template rendering."
msgstr ""

# 12a3c08487804e2cbb2a8e96f3f36ca7
#: ../../ref/template-response.txt:111
msgid ""
"Add a callback that will be invoked after rendering has taken place. This "
"hook can be used to defer certain processing operations (such as caching) "
"until after rendering has occurred."
msgstr ""

# 79d10698f92c4cd58b2327b2e06795dc
#: ../../ref/template-response.txt:115
msgid ""
"If the :class:`~django.template.response.SimpleTemplateResponse` has already "
"been rendered, the callback will be invoked immediately."
msgstr ""

# 7fbdd284d9dd4eb2a0d906d424a0cdd6
#: ../../ref/template-response.txt:119
msgid ""
"When called, callbacks will be passed a single argument -- the rendered :"
"class:`~django.template.response.SimpleTemplateResponse` instance."
msgstr ""

# f375eae508b146c1b984aa82def2bb4a
#: ../../ref/template-response.txt:123
msgid ""
"If the callback returns a value that is not ``None``, this will be used as "
"the response instead of the original response object (and will be passed to "
"the next post rendering callback etc.)"
msgstr ""

# 292061228a0c449c9a24eaba6bbcf103
#: ../../ref/template-response.txt:129
msgid ""
"Sets ``response.content`` to the result obtained by :attr:"
"`SimpleTemplateResponse.rendered_content`, runs all post-rendering "
"callbacks, and returns the resulting response object."
msgstr ""

# 7e06ec9d1bc14dbf9d9790319ebf812a
#: ../../ref/template-response.txt:133
msgid ""
"``render()`` will only have an effect the first time it is called. On "
"subsequent calls, it will return the result obtained from the first call."
msgstr ""

# b63358d8fe9345e9a7b1cf6055615045
#: ../../ref/template-response.txt:138
msgid "TemplateResponse objects"
msgstr ""

# 199c165452164a91be9e0eaa44402b5a
#: ../../ref/template-response.txt:142
msgid ""
"``TemplateResponse`` is a subclass of :class:`~django.template.response."
"SimpleTemplateResponse` that uses a :class:`~django.template.RequestContext` "
"instead of a :class:`~django.template.Context`."
msgstr ""

# b3043ba18ad540788d86af518e7827f4
#: ../../ref/template-response.txt:152
msgid ""
"Instantiates an ``TemplateResponse`` object with the given template, "
"context, MIME type and HTTP status."
msgstr ""

# ce7e506109274a2b97e404726ea7e726
#: ../../ref/template-response.txt:156
msgid "An :class:`~django.http.HttpRequest` instance."
msgstr ""

# c2e9601028384032b811caa37ea9c407
#: ../../ref/template-response.txt:163
msgid ""
"A dictionary of values to add to the template context. By default, this is "
"an empty dictionary. :class:`~django.template.Context` objects are also "
"accepted as ``context`` values. If you pass a :class:`~django.template."
"Context` instance or subclass, it will be used instead of creating a new :"
"class:`~django.template.RequestContext`."
msgstr ""

# 025db46f5bb94f9eb6ec866f8160dba5
#: ../../ref/template-response.txt:186
msgid "``current_app``"
msgstr ""

# 0d2d7233c3ad4b13b064ec9c422a60ef
#: ../../ref/template-response.txt:183
msgid ""
"A hint indicating which application contains the current view. See the :ref:"
"`namespaced URL resolution strategy <topics-http-reversing-url-namespaces>` "
"for more information."
msgstr ""

# 9739f80f2cae4ce09aabaa52cf8b3c86
#: ../../ref/template-response.txt:189
msgid "The rendering process"
msgstr ""

# 84ac586da8474249989997e027fe40c7
#: ../../ref/template-response.txt:191
msgid ""
"Before a :class:`~django.template.response.TemplateResponse` instance can be "
"returned to the client, it must be rendered. The rendering process takes the "
"intermediate representation of template and context, and turns it into the "
"final byte stream that can be served to the client."
msgstr ""

# 34bdf7715c854c888a6599bec003e404
#: ../../ref/template-response.txt:196
msgid ""
"There are three circumstances under which a ``TemplateResponse`` will be "
"rendered:"
msgstr ""

# 2f08b63dbffa4eb2853e8546c128b6ad
#: ../../ref/template-response.txt:199
msgid ""
"When the ``TemplateResponse`` instance is explicitly rendered, using the :"
"meth:`SimpleTemplateResponse.render()` method."
msgstr ""

# 31da9e4f49ea43e0b22a13ce5b3ac8ef
#: ../../ref/template-response.txt:202
msgid ""
"When the content of the response is explicitly set by assigning ``response."
"content``."
msgstr ""

# 541992f667854d76b7900b03b6f92340
#: ../../ref/template-response.txt:205
msgid ""
"After passing through template response middleware, but before passing "
"through response middleware."
msgstr ""

# 152ac010b4b649bfb504983cb436c93c
#: ../../ref/template-response.txt:208
msgid ""
"A ``TemplateResponse`` can only be rendered once. The first call to :meth:"
"`SimpleTemplateResponse.render` sets the content of the response; subsequent "
"rendering calls do not change the response content."
msgstr ""

# 68433b811d8e47dd809f609cc7c78418
#: ../../ref/template-response.txt:212
msgid ""
"However, when ``response.content`` is explicitly assigned, the change is "
"always applied. If you want to force the content to be re-rendered, you can "
"re-evaluate the rendered content, and assign the content of the response "
"manually::"
msgstr ""

# c7f96d8e846844caa422abef35bbb2a7
#: ../../ref/template-response.txt:235
msgid "Post-render callbacks"
msgstr ""

# d1c4ee42a3184217a239d8c7fc0d3fb8
#: ../../ref/template-response.txt:237
msgid ""
"Some operations -- such as caching -- cannot be performed on an unrendered "
"template. They must be performed on a fully complete and rendered response."
msgstr ""

# cdea62103b844540ad260fa0eec6861b
#: ../../ref/template-response.txt:241
msgid ""
"If you're using middleware, the solution is easy. Middleware provides "
"multiple opportunities to process a response on exit from a view. If you put "
"behavior in the Response middleware is guaranteed to execute after template "
"rendering has taken place."
msgstr ""

# 8e2f3d1097e94329bff8934165a01267
#: ../../ref/template-response.txt:246
msgid ""
"However, if you're using a decorator, the same opportunities do not exist. "
"Any behavior defined in a decorator is handled immediately."
msgstr ""

# 0312c41dec8e46afa6479bae7e205860
#: ../../ref/template-response.txt:249
msgid ""
"To compensate for this (and any other analogous use cases), :class:"
"`TemplateResponse` allows you to register callbacks that will be invoked "
"when rendering has completed. Using this callback, you can defer critical "
"processing until a point where you can guarantee that rendered content will "
"be available."
msgstr ""

# d388c1fd76a24f2d8c5165629c9e9212
#: ../../ref/template-response.txt:255
msgid ""
"To define a post-render callback, just define a function that takes a single "
"argument -- response -- and register that function with the template "
"response::"
msgstr ""

# 20ce3903d9fd4b53bbc61a67b4e1ead8
#: ../../ref/template-response.txt:271
msgid ""
"``my_render_callback()`` will be invoked after the ``mytemplate.html`` has "
"been rendered, and will be provided the fully rendered :class:"
"`TemplateResponse` instance as an argument."
msgstr ""

# 371ee85dc2c9462682dcacd1df0c8783
#: ../../ref/template-response.txt:275
msgid ""
"If the template has already been rendered, the callback will be invoked "
"immediately."
msgstr ""

# 7f3cf456b9884291afc1e6ba1f1c99b1
#: ../../ref/template-response.txt:279
msgid "Using TemplateResponse and SimpleTemplateResponse"
msgstr ""

# 81afc4f7a00a418f9b319359d1337723
#: ../../ref/template-response.txt:281
msgid ""
"A TemplateResponse object can be used anywhere that a normal HttpResponse "
"can be used. It can also be used as an alternative to calling :func:`~django."
"shortcuts.render_to_response()`."
msgstr ""

# 4321e70ee316495ab620289f0bae3302
#: ../../ref/template-response.txt:285
msgid ""
"For example, the following simple view returns a :class:`TemplateResponse()` "
"with a simple template, and a context containing a queryset::"
msgstr ""

# 4b2794691ecd4d469c4557e8986205a6
#: ../../ref/templates/api.txt:3
msgid "The Django template language: For Python programmers"
msgstr ""

# 9bdb2e96588940049754518a951e8d91
#: ../../ref/templates/api.txt:5
msgid ""
"This document explains the Django template system from a technical "
"perspective -- how it works and how to extend it. If you're just looking for "
"reference on the language syntax, see :doc:`/topics/templates`."
msgstr ""

# b35e5e940ce24eb482668e92b4887c99
#: ../../ref/templates/api.txt:9
msgid ""
"If you're looking to use the Django template system as part of another "
"application -- i.e., without the rest of the framework -- make sure to read "
"the `configuration`_ section later in this document."
msgstr ""

# 6fd5c2eef01a4941888a3e5de0b097c7
#: ../../ref/templates/api.txt:18
msgid ""
"A **template** is a text document, or a normal Python string, that is marked-"
"up using the Django template language. A template can contain **block tags** "
"or **variables**."
msgstr ""

# b4e903ae733649158e24d5778b77f663
#: ../../ref/templates/api.txt:22
msgid "A **block tag** is a symbol within a template that does something."
msgstr ""

# e1d2cf6edf06427d95d5ffe3ec08de2c
#: ../../ref/templates/api.txt:24
msgid ""
"This definition is deliberately vague. For example, a block tag can output "
"content, serve as a control structure (an \"if\" statement or \"for\" loop), "
"grab content from a database or enable access to other template tags."
msgstr ""

# d94323ddd12c425880293d1ffe1d0446
#: ../../ref/templates/api.txt:28
msgid "Block tags are surrounded by ``\"{%\"`` and ``\"%}\"``."
msgstr ""

# 6a9b0aa078f24ad08e691c6b17fc207c
#: ../../ref/templates/api.txt:30
msgid "Example template with block tags:"
msgstr ""

# 70b02bff4d4c4e4393dad22a09814d96
#: ../../ref/templates/api.txt:36
msgid "A **variable** is a symbol within a template that outputs a value."
msgstr ""

# ff722d4ac8d8424c8318e4be38fc1bfb
#: ../../ref/templates/api.txt:38
msgid "Variable tags are surrounded by ``\"{{\"`` and ``\"}}\"``."
msgstr ""

# 52a6b82cea554db39064617807267aed
#: ../../ref/templates/api.txt:40
msgid "Example template with variables:"
msgstr ""

# b721578140f94d8294262de54893897b
#: ../../ref/templates/api.txt:46
msgid ""
"A **context** is a \"variable name\" -> \"variable value\" mapping that is "
"passed to a template."
msgstr ""

# e4369cb2bcca47ccacfbaf8a91ca61e5
#: ../../ref/templates/api.txt:49
msgid ""
"A template **renders** a context by replacing the variable \"holes\" with "
"values from the context and executing all block tags."
msgstr ""

# 326aa6a5800d4b47b0f230ee149a3b41
#: ../../ref/templates/api.txt:53
msgid "Using the template system"
msgstr ""

# 0628ebff20ca48819c4f6f24ed125856
#: ../../ref/templates/api.txt:57
msgid "Using the template system in Python is a two-step process:"
msgstr ""

# d2c2ac10824e482ba1524a8731fc2f9a
#: ../../ref/templates/api.txt:59
msgid "First, you compile the raw template code into a ``Template`` object."
msgstr ""

# b917efc86e724b9e8ab47ecdbc5f2394
#: ../../ref/templates/api.txt:60
msgid ""
"Then, you call the ``render()`` method of the ``Template`` object with a "
"given context."
msgstr ""

# 10d3466f0fbf44ebbb8155185d294d37
#: ../../ref/templates/api.txt:64
msgid "Compiling a string"
msgstr ""

# 86c289f2c0944ff68876cc7b0b835b73
#: ../../ref/templates/api.txt:66
msgid ""
"The easiest way to create a ``Template`` object is by instantiating it "
"directly. The class lives at :class:`django.template.Template`. The "
"constructor takes one argument -- the raw template code::"
msgstr ""

# db59a004d35d4601a58ba973067a9897
#: ../../ref/templates/api.txt:78
msgid "Behind the scenes"
msgstr ""

# 6261cd75337d48c48d302974a296837c
#: ../../ref/templates/api.txt:80
msgid ""
"The system only parses your raw template code once -- when you create the "
"``Template`` object. From then on, it's stored internally as a \"node\" "
"structure for performance."
msgstr ""

# 9b9cf800cef44ff8bcd123dd2d6cd339
#: ../../ref/templates/api.txt:81
msgid ""
"Even the parsing itself is quite fast. Most of the parsing happens via a "
"single call to a single, short, regular expression."
msgstr ""

# 21858c2cceb24d6cb6e5aa3aae21fb37
#: ../../ref/templates/api.txt:85
msgid "Rendering a context"
msgstr ""

# e7f077d379e54e7f9e9fccb52d83fba0
#: ../../ref/templates/api.txt:89
msgid ""
"Once you have a compiled ``Template`` object, you can render a context -- or "
"multiple contexts -- with it. The ``Context`` class lives at :class:`django."
"template.Context`, and the constructor takes two (optional) arguments:"
msgstr ""

# f5113c391f994d389b02a27cbdcefe4f
#: ../../ref/templates/api.txt:94
msgid "A dictionary mapping variable names to variable values."
msgstr ""

# 365c31bb01b84104a2ecd5204710d8b4
#: ../../ref/templates/api.txt:96
msgid ""
"The name of the current application. This application name is used to help :"
"ref:`resolve namespaced URLs<topics-http-reversing-url-namespaces>`. If "
"you're not using namespaced URLs, you can ignore this argument."
msgstr ""

# 3502cf2f6a254b42bb4e7e36eae64742
#: ../../ref/templates/api.txt:100
msgid ""
"Call the ``Template`` object's ``render()`` method with the context to \"fill"
"\" the template::"
msgstr ""

# 78e2630070054aa19fda3195fce1e0e9
#: ../../ref/templates/api.txt:115
msgid "Variables and lookups"
msgstr ""

# 477ef540b2c84c659a5641832cc6363a
#: ../../ref/templates/api.txt:117
msgid ""
"Variable names must consist of any letter (A-Z), any digit (0-9), an "
"underscore (but they must not start with an underscore) or a dot."
msgstr ""

# 468909986c3349ecad89e87f11eabb27
#: ../../ref/templates/api.txt:120
msgid ""
"Dots have a special meaning in template rendering. A dot in a variable name "
"signifies a **lookup**. Specifically, when the template system encounters a "
"dot in a variable name, it tries the following lookups, in this order:"
msgstr ""

# 51be6b9789e34b0c8f9bb10e22b462ca
#: ../../ref/templates/api.txt:124
msgid "Dictionary lookup. Example: ``foo[\"bar\"]``"
msgstr ""

# 7ceb57c1dff94e608c4e7d59e516206b
#: ../../ref/templates/api.txt:125
msgid "Attribute lookup. Example: ``foo.bar``"
msgstr ""

# 1b4d9a17d7624faba0f7b50240626feb
#: ../../ref/templates/api.txt:126
msgid "List-index lookup. Example: ``foo[bar]``"
msgstr ""

# ecde525b58cb4dee94fde7b9562d666e
#: ../../ref/templates/api.txt:128
msgid ""
"Note that \"bar\" in a template expression like ``{{ foo.bar }}`` will be "
"interpreted as a literal string and not using the value of the variable \"bar"
"\", if one exists in the template context."
msgstr ""

# 9f6bbb44ae1f40adbc5d3e4d574d906a
#: ../../ref/templates/api.txt:132
msgid ""
"The template system uses the first lookup type that works. It's short-"
"circuit logic. Here are a few examples::"
msgstr ""

# 1f2bc9d0bbd14fc7b4d63b40c312153f
#: ../../ref/templates/api.txt:153
msgid ""
"If any part of the variable is callable, the template system will try "
"calling it. Example::"
msgstr ""

# f12f910c691a4c88bf4db170e8b3e645
#: ../../ref/templates/api.txt:163
msgid ""
"Callable variables are slightly more complex than variables which only "
"require straight lookups. Here are some things to keep in mind:"
msgstr ""

# d1f09a250b044457a2b4d7e616e62859
#: ../../ref/templates/api.txt:166
msgid ""
"If the variable raises an exception when called, the exception will be "
"propagated, unless the exception has an attribute "
"``silent_variable_failure`` whose value is ``True``. If the exception *does* "
"have a ``silent_variable_failure`` attribute whose value is ``True``, the "
"variable will render as an empty string. Example::"
msgstr ""

# 58b788d233174deebea5fb91784a0acf
#: ../../ref/templates/api.txt:191
msgid ""
"Note that :exc:`django.core.exceptions.ObjectDoesNotExist`, which is the "
"base class for all Django database API ``DoesNotExist`` exceptions, has "
"``silent_variable_failure = True``. So if you're using Django templates with "
"Django model objects, any ``DoesNotExist`` exception will fail silently."
msgstr ""

# 25b29e9b21474402b8c97cfc6fc946b2
#: ../../ref/templates/api.txt:197
msgid ""
"A variable can only be called if it has no required arguments. Otherwise, "
"the system will return an empty string."
msgstr ""

# cc7daa6c990542aba63a0e5cc23305ed
#: ../../ref/templates/api.txt:202
msgid ""
"Obviously, there can be side effects when calling some variables, and it'd "
"be either foolish or a security hole to allow the template system to access "
"them."
msgstr ""

# 9ba88c543b1048ec97170cb8188720f4
#: ../../ref/templates/api.txt:206
msgid ""
"A good example is the :meth:`~django.db.models.Model.delete` method on each "
"Django model object. The template system shouldn't be allowed to do "
"something like this::"
msgstr ""

# 9931475c75374023a3476a8954dfa543
#: ../../ref/templates/api.txt:212
msgid ""
"To prevent this, set an ``alters_data`` attribute on the callable variable. "
"The template system won't call a variable if it has ``alters_data=True`` "
"set, and will instead replace the variable with :setting:"
"`TEMPLATE_STRING_IF_INVALID`, unconditionally.  The dynamically-generated :"
"meth:`~django.db.models.Model.delete` and :meth:`~django.db.models.Model."
"save` methods on Django model objects get ``alters_data=True`` "
"automatically. Example::"
msgstr ""

# ba2dde7c46f744369393a1b009a036cb
#: ../../ref/templates/api.txt:235
msgid "How invalid variables are handled"
msgstr ""

# 407382ec063e42ddab7d3d945390cd1d
#: ../../ref/templates/api.txt:237
msgid ""
"Generally, if a variable doesn't exist, the template system inserts the "
"value of the :setting:`TEMPLATE_STRING_IF_INVALID` setting, which is set to "
"``''`` (the empty string) by default."
msgstr ""

# e9b840c1d23649b099ea6bce806921f5
#: ../../ref/templates/api.txt:241
msgid ""
"Filters that are applied to an invalid variable will only be applied if :"
"setting:`TEMPLATE_STRING_IF_INVALID` is set to ``''`` (the empty string). "
"If :setting:`TEMPLATE_STRING_IF_INVALID` is set to any other value, variable "
"filters will be ignored."
msgstr ""

# b782b9bdf8234a82848fbf96689d7cb2
#: ../../ref/templates/api.txt:246
msgid ""
"This behavior is slightly different for the ``if``, ``for`` and ``regroup`` "
"template tags. If an invalid variable is provided to one of these template "
"tags, the variable will be interpreted as ``None``. Filters are always "
"applied to invalid variables within these template tags."
msgstr ""

# aac93a74d2fd48e3ab01338f818674f1
#: ../../ref/templates/api.txt:251
msgid ""
"If :setting:`TEMPLATE_STRING_IF_INVALID` contains a ``'%s'``, the format "
"marker will be replaced with the name of the invalid variable."
msgstr ""

# 877b4700da744dabbf8e4431b3bb79c9
#: ../../ref/templates/api.txt:257
msgid "For debug purposes only!"
msgstr ""

# 73d4a0ba4c0f4be48e7b31aef3adcff9
#: ../../ref/templates/api.txt:259
msgid ""
"While :setting:`TEMPLATE_STRING_IF_INVALID` can be a useful debugging tool, "
"it is a bad idea to turn it on as a 'development default'."
msgstr ""

# 6b22a8113a054c15a1952129bb6c977e
#: ../../ref/templates/api.txt:262
msgid ""
"Many templates, including those in the Admin site, rely upon the silence of "
"the template system when a non-existent variable is encountered. If you "
"assign a value other than ``''`` to :setting:`TEMPLATE_STRING_IF_INVALID`, "
"you will experience rendering problems with these templates and sites."
msgstr ""

# fd5b66ceaac345ed914e18136f455fe3
#: ../../ref/templates/api.txt:265
msgid ""
"Generally, :setting:`TEMPLATE_STRING_IF_INVALID` should only be enabled in "
"order to debug a specific template problem, then cleared once debugging is "
"complete."
msgstr ""

# fc88aca647f84380a457cb010b0d8b73
#: ../../ref/templates/api.txt:270
msgid "Builtin variables"
msgstr ""

# 5ac5abfe3d8747ef8da3f9a8d7139f22
#: ../../ref/templates/api.txt:272
msgid ""
"Every context contains ``True``, ``False`` and ``None``. As you would "
"expect, these variables resolve to the corresponding Python objects."
msgstr ""

# f0a4d39b0304422b87f975e71978c9d6
#: ../../ref/templates/api.txt:280
msgid "Playing with Context objects"
msgstr ""

# 0c9cff23cf784c178798fca5af523d4c
#: ../../ref/templates/api.txt:284
msgid ""
"Most of the time, you'll instantiate ``Context`` objects by passing in a "
"fully-populated dictionary to ``Context()``. But you can add and delete "
"items from a ``Context`` object once it's been instantiated, too, using "
"standard dictionary syntax::"
msgstr ""

# 6bf6404347394a9fbec888106874f87e
#: ../../ref/templates/api.txt:303
msgid ""
"A ``Context`` object is a stack. That is, you can ``push()`` and ``pop()`` "
"it. If you ``pop()`` too much, it'll raise ``django.template."
"ContextPopException``::"
msgstr ""

# 5749d72bf058455888b1b8340a9cecd4
#: ../../ref/templates/api.txt:326
msgid ""
"In addition to ``push()`` and ``pop()``, the ``Context`` object also defines "
"an ``update()`` method. This works like ``push()`` but takes a dictionary as "
"an argument and pushes that dictionary onto the stack instead of an empty "
"one."
msgstr ""

# 6c27b3980bda4ea09aba2fcb928f6a4c
#: ../../ref/templates/api.txt:342
msgid ""
"Using a ``Context`` as a stack comes in handy in some custom template tags, "
"as you'll see below."
msgstr ""

# 0f2a830f8c1147e7891209ab1a864342
#: ../../ref/templates/api.txt:348
msgid "Subclassing Context: RequestContext"
msgstr ""

# 6f1f805abf6d48839df0825da0a3d4a7
#: ../../ref/templates/api.txt:352
msgid ""
"Django comes with a special ``Context`` class, ``django.template."
"RequestContext``, that acts slightly differently than the normal ``django."
"template.Context``. The first difference is that it takes an :class:`~django."
"http.HttpRequest` as its first argument. For example::"
msgstr ""

# ee63e70c3a38474cb936256cc7525e63
#: ../../ref/templates/api.txt:361
msgid ""
"The second difference is that it automatically populates the context with a "
"few variables, according to your :setting:`TEMPLATE_CONTEXT_PROCESSORS` "
"setting."
msgstr ""

# a5eaba340d9140658f14df0520060048
#: ../../ref/templates/api.txt:364
msgid ""
"The :setting:`TEMPLATE_CONTEXT_PROCESSORS` setting is a tuple of callables "
"-- called **context processors** -- that take a request object as their "
"argument and return a dictionary of items to be merged into the context. By "
"default, :setting:`TEMPLATE_CONTEXT_PROCESSORS` is set to::"
msgstr ""

# 6aa0108679be4b67a01c7d285b248659
#: ../../ref/templates/api.txt:377
msgid ""
"In addition to these, ``RequestContext`` always uses ``django.core."
"context_processors.csrf``.  This is a security related context processor "
"required by the admin and other contrib apps, and, in case of accidental "
"misconfiguration, it is deliberately hardcoded in and cannot be turned off "
"by the :setting:`TEMPLATE_CONTEXT_PROCESSORS` setting."
msgstr ""

# f908cc749ef44519ab7bd17d4508787d
#: ../../ref/templates/api.txt:383
msgid ""
"Each processor is applied in order. That means, if one processor adds a "
"variable to the context and a second processor adds a variable with the same "
"name, the second will override the first. The default processors are "
"explained below."
msgstr ""

# 7cf8937619804013a15e47a46fdb10f3
#: ../../ref/templates/api.txt:391
msgid "When context processors are applied"
msgstr ""

# 7d080bf941aa4848b9359657b7db24dd
#: ../../ref/templates/api.txt:393
msgid ""
"When you use ``RequestContext``, the variables you supply directly are added "
"first, followed any variables supplied by context processors. This means "
"that a context processor may overwrite a variable you've supplied, so take "
"care to avoid variable names which overlap with those supplied by your "
"context processors."
msgstr ""

# 11b855a7699b40fe906a3cf0836d5fbd
#: ../../ref/templates/api.txt:396
msgid ""
"Also, you can give ``RequestContext`` a list of additional processors, using "
"the optional, third positional argument, ``processors``. In this example, "
"the ``RequestContext`` instance gets a ``ip_address`` variable::"
msgstr ""

# 099863759ccf430cac73b614e565a514
#: ../../ref/templates/api.txt:412
msgid ""
"If you're using Django's :func:`~django.shortcuts.render_to_response()` "
"shortcut to populate a template with the contents of a dictionary, your "
"template will be passed a ``Context`` instance by default (not a "
"``RequestContext``). To use a ``RequestContext`` in your template rendering, "
"pass an optional third argument to :func:`~django.shortcuts."
"render_to_response()`: a ``RequestContext`` instance. Your code might look "
"like this::"
msgstr ""

# b739926a3a6342dc998a486d6d58428a
#: ../../ref/templates/api.txt:426
msgid ""
"Alternatively, use the :meth:`~django.shortcuts.render()` shortcut which is "
"the same as a call to :func:`~django.shortcuts.render_to_response()` with a "
"context_instance argument that forces the use of a ``RequestContext``."
msgstr ""

# d6f50dedf3e441d5ac6a432336f3e955
#: ../../ref/templates/api.txt:430
msgid "Here's what each of the default processors does:"
msgstr ""

# b6190b75f7f941f283552b10d4997e6c
#: ../../ref/templates/api.txt:433
msgid "django.contrib.auth.context_processors.auth"
msgstr ""

# d86a5d473b6642c98976123afd079d54
#: ../../ref/templates/api.txt:435
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain these variables:"
msgstr ""

# febaf2e82f244caa81e74b784c345521
#: ../../ref/templates/api.txt:438
msgid ""
"``user`` -- An ``auth.User`` instance representing the currently logged-in "
"user (or an ``AnonymousUser`` instance, if the client isn't logged in)."
msgstr ""

# 037ba74b39464f35997ca0d5de3c9b1b
#: ../../ref/templates/api.txt:442
msgid ""
"``perms`` -- An instance of ``django.contrib.auth.context_processors."
"PermWrapper``, representing the permissions that the currently logged-in "
"user has."
msgstr ""

# 55c0a3f8629347d6887b113bafac45b6
#: ../../ref/templates/api.txt:447
msgid "django.core.context_processors.debug"
msgstr ""

# 018107392c3641029d08f0d1ba9646ad
#: ../../ref/templates/api.txt:449
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain these two variables -- but only if your :"
"setting:`DEBUG` setting is set to ``True`` and the request's IP address "
"(``request.META['REMOTE_ADDR']``) is in the :setting:`INTERNAL_IPS` setting:"
msgstr ""

# 3b7dd21eec42481c91d8957fc3056ccb
#: ../../ref/templates/api.txt:454
msgid ""
"``debug`` -- ``True``. You can use this in templates to test whether you're "
"in :setting:`DEBUG` mode."
msgstr ""

# 67a387fd9efb4bd2bc1941bf86745969
#: ../../ref/templates/api.txt:456
msgid ""
"``sql_queries`` -- A list of ``{'sql': ..., 'time': ...}`` dictionaries, "
"representing every SQL query that has happened so far during the request and "
"how long it took. The list is in order by query."
msgstr ""

# 2a6d0b8754ef4accb0d0601d1273a21b
#: ../../ref/templates/api.txt:461
msgid "django.core.context_processors.i18n"
msgstr ""

# b4584690d166476e9da33d3269a45352
#: ../../ref/templates/api.txt:463
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain these two variables:"
msgstr ""

# 98e2e1a825354031af741f9aecb76c22
#: ../../ref/templates/api.txt:466
msgid "``LANGUAGES`` -- The value of the :setting:`LANGUAGES` setting."
msgstr ""

# c857453505284373a970245e024a682a
#: ../../ref/templates/api.txt:467
msgid ""
"``LANGUAGE_CODE`` -- ``request.LANGUAGE_CODE``, if it exists. Otherwise, the "
"value of the :setting:`LANGUAGE_CODE` setting."
msgstr ""

# 7905f2006b664006b081a860d0d1cf72
#: ../../ref/templates/api.txt:470
msgid "See :doc:`/topics/i18n/index` for more."
msgstr ""

# 105abeb7ab9a4edabf8cd15d67302db2
#: ../../ref/templates/api.txt:473
msgid "django.core.context_processors.media"
msgstr ""

# df29fa89b87e4b23bb84b8b7f98a8383
#: ../../ref/templates/api.txt:475
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a variable ``MEDIA_URL``, providing the "
"value of the :setting:`MEDIA_URL` setting."
msgstr ""

# 38db54e63148496fa9bad864f7b142b0
#: ../../ref/templates/api.txt:480
msgid "django.core.context_processors.static"
msgstr ""

# 1c64c9e7eccb4feb9aab82ed29f4e644
#: ../../ref/templates/api.txt:484
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a variable ``STATIC_URL``, providing the "
"value of the :setting:`STATIC_URL` setting."
msgstr ""

# f8e1efde4c0f4a9aa8eaeeb058ff6c16
#: ../../ref/templates/api.txt:489
msgid "django.core.context_processors.csrf"
msgstr ""

# 5b6bc63e437743f0a422a234bc54cb74
#: ../../ref/templates/api.txt:491
msgid ""
"This processor adds a token that is needed by the :ttag:`csrf_token` "
"template tag for protection against :doc:`Cross Site Request Forgeries </ref/"
"contrib/csrf>`."
msgstr ""

# d2d5a03bd890439ebf3fe14bb508bc51
#: ../../ref/templates/api.txt:496
msgid "django.core.context_processors.request"
msgstr ""

# cb42421a38084c8a8e59f7805c761f40
#: ../../ref/templates/api.txt:498
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a variable ``request``, which is the "
"current :class:`~django.http.HttpRequest`. Note that this processor is not "
"enabled by default; you'll have to activate it."
msgstr ""

# f02e1fe36fa44959ac455f909ab5b161
#: ../../ref/templates/api.txt:504
msgid "django.contrib.messages.context_processors.messages"
msgstr ""

# eb64451eca734cf695594af3f4401f16
#: ../../ref/templates/api.txt:506
msgid ""
"If :setting:`TEMPLATE_CONTEXT_PROCESSORS` contains this processor, every "
"``RequestContext`` will contain a single additional variable:"
msgstr ""

# ad16f599727342ebb796f38d0a06b4bc
#: ../../ref/templates/api.txt:509
msgid ""
"``messages`` -- A list of messages (as strings) that have been set via the "
"user model (using ``user.message_set.create``) or through the :doc:`messages "
"framework </ref/contrib/messages>`."
msgstr ""

# 66cdc3cc6c1043cbadb6bc030256c147
#: ../../ref/templates/api.txt:514
msgid "Writing your own context processors"
msgstr ""

# 04022e7de02449119b0e5ccbe4d5ed11
#: ../../ref/templates/api.txt:516
msgid ""
"A context processor has a very simple interface: It's just a Python function "
"that takes one argument, an :class:`~django.http.HttpRequest` object, and "
"returns a dictionary that gets added to the template context. Each context "
"processor *must* return a dictionary."
msgstr ""

# d263507b6f0e4573b197f32b0ddf0bdf
#: ../../ref/templates/api.txt:521
msgid ""
"Custom context processors can live anywhere in your code base. All Django "
"cares about is that your custom context processors are pointed-to by your :"
"setting:`TEMPLATE_CONTEXT_PROCESSORS` setting."
msgstr ""

# 4871ee6ceae9447ea74b88051fa01190
#: ../../ref/templates/api.txt:526
msgid "Loading templates"
msgstr ""

# 8f5934d2cdbc43e0a2afc6780ab26875
#: ../../ref/templates/api.txt:528
msgid ""
"Generally, you'll store templates in files on your filesystem rather than "
"using the low-level ``Template`` API yourself. Save templates in a directory "
"specified as a **template directory**."
msgstr ""

# eb597d42930442edb9e802b1d47e1b26
#: ../../ref/templates/api.txt:532
msgid ""
"Django searches for template directories in a number of places, depending on "
"your template-loader settings (see \"Loader types\" below), but the most "
"basic way of specifying template directories is by using the :setting:"
"`TEMPLATE_DIRS` setting."
msgstr ""

# 7f8e9cb07a724a06aa45918ca7e42326
#: ../../ref/templates/api.txt:538
msgid "The TEMPLATE_DIRS setting"
msgstr ""

# ea2a7281fbbe499392e612a06a546148
#: ../../ref/templates/api.txt:540
msgid ""
"Tell Django what your template directories are by using the :setting:"
"`TEMPLATE_DIRS` setting in your settings file. This should be set to a list "
"or tuple of strings that contain full paths to your template directory(ies). "
"Example::"
msgstr ""

# d16f7fd415984ac1aeb1285f5c6d1e19
#: ../../ref/templates/api.txt:550
msgid ""
"Your templates can go anywhere you want, as long as the directories and "
"templates are readable by the Web server. They can have any extension you "
"want, such as ``.html`` or ``.txt``, or they can have no extension at all."
msgstr ""

# 70301e3b736a42768b7ab8749952db34
#: ../../ref/templates/api.txt:559
msgid "The Python API"
msgstr ""

# 7f2970e9d1034fda83b2398fb4520694
#: ../../ref/templates/api.txt:563
msgid ""
"``django.template.loader`` has two functions to load templates from files:"
msgstr ""

# a6e4bd2d84ac4d39ad6218f1fb0ba3ad
#: ../../ref/templates/api.txt:567
msgid ""
"``get_template`` returns the compiled template (a ``Template`` object) for "
"the template with the given name. If the template doesn't exist, it raises "
"``django.template.TemplateDoesNotExist``."
msgstr ""

# d3fe4066d7174bcea43ae092c5a71743
#: ../../ref/templates/api.txt:573
msgid ""
"``select_template`` is just like ``get_template``, except it takes a list of "
"template names. Of the list, it returns the first template that exists."
msgstr ""

# 1fb8118f0a54454f90b674e4700ace4c
#: ../../ref/templates/api.txt:576
msgid ""
"For example, if you call ``get_template('story_detail.html')`` and have the "
"above :setting:`TEMPLATE_DIRS` setting, here are the files Django will look "
"for, in order:"
msgstr ""

# 73b94231aff546bd89731711ad45563c
# db45179b8c8046e1955ceda43e7fc874
#: ../../ref/templates/api.txt:580 ../../ref/templates/api.txt:588
msgid "``/home/html/templates/lawrence.com/story_detail.html``"
msgstr ""

# f8e1c1acd7904dc0a65a54efb7d85ae3
# ebcdc6aa2c2e4bbab38cb532e8061d9c
#: ../../ref/templates/api.txt:581 ../../ref/templates/api.txt:589
msgid "``/home/html/templates/default/story_detail.html``"
msgstr ""

# d6650139a2bb4348b5616c664469a94f
#: ../../ref/templates/api.txt:583
msgid ""
"If you call ``select_template(['story_253_detail.html', 'story_detail."
"html'])``, here's what Django will look for:"
msgstr ""

# 6aee6b60f2e745e6956982b2263ea9e7
#: ../../ref/templates/api.txt:586
msgid "``/home/html/templates/lawrence.com/story_253_detail.html``"
msgstr ""

# 46d2c3707f034299a5a5456dfe94f002
#: ../../ref/templates/api.txt:587
msgid "``/home/html/templates/default/story_253_detail.html``"
msgstr ""

# 647b8fb3b9e849aab4f0d500e61da0ff
#: ../../ref/templates/api.txt:591
msgid "When Django finds a template that exists, it stops looking."
msgstr ""

# a292d2965d364fcca25566465728b138
#: ../../ref/templates/api.txt:598
msgid "Tip"
msgstr ""

# 3e6f8a0e72ff4769ac090db05cf5c982
#: ../../ref/templates/api.txt:600
msgid ""
"You can use ``select_template()`` for super-flexible \"templatability.\" For "
"example, if you've written a news story and want some stories to have custom "
"templates, use something like ``select_template(['story_%s_detail.html' % "
"story.id, 'story_detail.html'])``. That'll allow you to use a custom "
"template for an individual story, with a fallback template for stories that "
"don't have custom templates."
msgstr ""

# 216002cf77e0421086e54a1418059a55
#: ../../ref/templates/api.txt:603
msgid "Using subdirectories"
msgstr ""

# 979261ec334c48dc969bbfe993cf40ec
#: ../../ref/templates/api.txt:605
msgid ""
"It's possible -- and preferable -- to organize templates in subdirectories "
"of the template directory. The convention is to make a subdirectory for each "
"Django app, with subdirectories within those subdirectories as needed."
msgstr ""

# 186804ce94524a33813efc91101a7a16
#: ../../ref/templates/api.txt:609
msgid ""
"Do this for your own sanity. Storing all templates in the root level of a "
"single directory gets messy."
msgstr ""

# 90adeb5daafc42b0a7089c039b2dd176
#: ../../ref/templates/api.txt:612
msgid ""
"To load a template that's within a subdirectory, just use a slash, like so::"
msgstr ""

# 768a5529e88a44ff95fd31703f82fabc
#: ../../ref/templates/api.txt:616
msgid ""
"Using the same :setting:`TEMPLATE_DIRS` setting from above, this example "
"``get_template()`` call will attempt to load the following templates:"
msgstr ""

# fa6efe80b9db43c7aeb4eba684360e51
#: ../../ref/templates/api.txt:619
msgid "``/home/html/templates/lawrence.com/news/story_detail.html``"
msgstr ""

# e748622f30774153970b86d82fbfa0d5
#: ../../ref/templates/api.txt:620
msgid "``/home/html/templates/default/news/story_detail.html``"
msgstr ""

# 35c78c8c65dd4e2daf26302209ec2b0f
#: ../../ref/templates/api.txt:625
msgid "Loader types"
msgstr ""

# 8c65e0fb4c984472a39d97bb6f09a75c
#: ../../ref/templates/api.txt:627
msgid ""
"By default, Django uses a filesystem-based template loader, but Django comes "
"with a few other template loaders, which know how to load templates from "
"other sources."
msgstr ""

# 2575014431554d10995118c7688a216b
#: ../../ref/templates/api.txt:631
msgid ""
"Some of these other loaders are disabled by default, but you can activate "
"them by editing your :setting:`TEMPLATE_LOADERS` setting. :setting:"
"`TEMPLATE_LOADERS` should be a tuple of strings, where each string "
"represents a template loader class. Here are the template loaders that come "
"with Django:"
msgstr ""

# 24af0c19c7f246e08edf1b735f3bcc03
#: ../../ref/templates/api.txt:638
msgid "``django.template.loaders.filesystem.Loader``"
msgstr ""

# 98762c4464e34a798605f29d1a7a96b1
#: ../../ref/templates/api.txt:642
msgid ""
"Loads templates from the filesystem, according to :setting:`TEMPLATE_DIRS`. "
"This loader is enabled by default."
msgstr ""

# 93acfc1ed9be4f4e9e9b9a963d7e6fff
#: ../../ref/templates/api.txt:645
msgid "``django.template.loaders.app_directories.Loader``"
msgstr ""

# abcf4ad72b604f6caee6b9bd6ff3fea7
#: ../../ref/templates/api.txt:649
msgid ""
"Loads templates from Django apps on the filesystem. For each app in :setting:"
"`INSTALLED_APPS`, the loader looks for a ``templates`` subdirectory. If the "
"directory exists, Django looks for templates in there."
msgstr ""

# fe64e1ce434b47218dab1d4dc3eaf8c4
#: ../../ref/templates/api.txt:653
msgid ""
"This means you can store templates with your individual apps. This also "
"makes it easy to distribute Django apps with default templates."
msgstr ""

# 5f0215095f2b49ec8f9b2a17f0e61bfe
#: ../../ref/templates/api.txt:656
msgid "For example, for this setting::"
msgstr ""

# d6565dcbb22d4a409d24e8048d29fbf9
#: ../../ref/templates/api.txt:660
msgid ""
"...then ``get_template('foo.html')`` will look for ``foo.html`` in these "
"directories, in this order:"
msgstr ""

# d5051b9a022048fca9ae5cbb526780c1
#: ../../ref/templates/api.txt:663
msgid "``/path/to/myproject/polls/templates/``"
msgstr ""

# 973cc35716314f2291c3d43c707a77fb
#: ../../ref/templates/api.txt:664
msgid "``/path/to/myproject/music/templates/``"
msgstr ""

# 0b64eb926e50482ebd4d3b7a6bac0585
#: ../../ref/templates/api.txt:666
msgid "... and will use the one it finds first."
msgstr ""

# 8ea2becf062446e99c071dd5f82e90a2
#: ../../ref/templates/api.txt:668
msgid ""
"The order of :setting:`INSTALLED_APPS` is significant! For example, if you "
"want to customize the Django admin, you might choose to override the "
"standard ``admin/base_site.html`` template, from ``django.contrib.admin``, "
"with your own ``admin/base_site.html`` in ``myproject.polls``. You must then "
"make sure that your ``myproject.polls`` comes *before* ``django.contrib."
"admin`` in :setting:`INSTALLED_APPS`, otherwise ``django.contrib.admin``'s "
"will be loaded first and yours will be ignored."
msgstr ""

# 4c929ffad530483eb727a8e9bda2abe3
#: ../../ref/templates/api.txt:676
msgid ""
"Note that the loader performs an optimization when it is first imported: it "
"caches a list of which :setting:`INSTALLED_APPS` packages have a "
"``templates`` subdirectory."
msgstr ""

# 45cb2187d5294253b4196f2f3ba85751
#: ../../ref/templates/api.txt:680
msgid "This loader is enabled by default."
msgstr ""

# cc73af7fe050436ca58a659ced07d775
#: ../../ref/templates/api.txt:682
msgid "``django.template.loaders.eggs.Loader``"
msgstr ""

# 6ef971526c3448cabf9fb4524e21f920
#: ../../ref/templates/api.txt:686
msgid ""
"Just like ``app_directories`` above, but it loads templates from Python eggs "
"rather than from the filesystem."
msgstr ""

# d56ed25d93a04f6b81eb71ad21083e2c
# 42a0536a153c4e21bd788a258732c10a
#: ../../ref/templates/api.txt:689 ../../ref/templates/api.txt:724
msgid "This loader is disabled by default."
msgstr ""

# b002a72594d44b64b735141cc5b79a7a
#: ../../ref/templates/api.txt:691
msgid "``django.template.loaders.cached.Loader``"
msgstr ""

# 952fb0b59d5b44d1bc620072f439225c
#: ../../ref/templates/api.txt:695
msgid ""
"By default, the templating system will read and compile your templates every "
"time they need to be rendered. While the Django templating system is quite "
"fast, the overhead from reading and compiling templates can add up."
msgstr ""

# 5c887d7911c94ad7aa849a59f1f64ec0
#: ../../ref/templates/api.txt:699
msgid ""
"The cached template loader is a class-based loader that you configure with a "
"list of other loaders that it should wrap. The wrapped loaders are used to "
"locate unknown templates when they are first encountered. The cached loader "
"then stores the compiled ``Template`` in memory. The cached ``Template`` "
"instance is returned for subsequent requests to load the same template."
msgstr ""

# 0aa224e5656f48f884b6e0144fb46a8c
#: ../../ref/templates/api.txt:705
msgid ""
"For example, to enable template caching with the ``filesystem`` and "
"``app_directories`` template loaders you might use the following settings::"
msgstr ""

# 3c434fc7c2eb425cb730033207cb2046
#: ../../ref/templates/api.txt:717
msgid ""
"All of the built-in Django template tags are safe to use with the cached "
"loader, but if you're using custom template tags that come from third party "
"packages, or that you wrote yourself, you should ensure that the ``Node`` "
"implementation for each tag is thread-safe. For more information, see :ref:"
"`template tag thread safety considerations<template_tag_thread_safety>`."
msgstr ""

# 6a891b2fc3d842c28d0040590ed1f901
#: ../../ref/templates/api.txt:726
msgid ""
"Django uses the template loaders in order according to the :setting:"
"`TEMPLATE_LOADERS` setting. It uses each loader until a loader finds a match."
msgstr ""

# 1909fbc8515c41d8bd2ae6b1bbe6e3b7
#: ../../ref/templates/api.txt:731
msgid "The ``render_to_string`` shortcut"
msgstr ""

# 0379ed1e37534ab89f69afcb56bd8fab
#: ../../ref/templates/api.txt:735
msgid ""
"To cut down on the repetitive nature of loading and rendering templates, "
"Django provides a shortcut function which largely automates the process: "
"``render_to_string()`` in :mod:`django.template.loader`, which loads a "
"template, renders it and returns the resulting string::"
msgstr ""

# d25ed7cfcc9d4b3384d940cde8274caa
#: ../../ref/templates/api.txt:744
msgid ""
"The ``render_to_string`` shortcut takes one required argument -- "
"``template_name``, which should be the name of the template to load and "
"render (or a list of template names, in which case Django will use the first "
"template in the list that exists) -- and two optional arguments:"
msgstr ""

# e7534c70980d4cb3b606ef57ee34c2ad
#: ../../ref/templates/api.txt:752
msgid "dictionary"
msgstr ""

# a8cc7db55bf340879f84571af6262759
#: ../../ref/templates/api.txt:750
msgid ""
"A dictionary to be used as variables and values for the template's context. "
"This can also be passed as the second positional argument."
msgstr ""

# 2a3a8bc81b60483dbc7ea543e20694b7
#: ../../ref/templates/api.txt:757
msgid "context_instance"
msgstr ""

# baf95cc48945488ab4e7501ee1c96746
#: ../../ref/templates/api.txt:755
msgid ""
"An instance of ``Context`` or a subclass (e.g., an instance of "
"``RequestContext``) to use as the template's context. This can also be "
"passed as the third positional argument."
msgstr ""

# fc9df2a6bd0947f291711edd561a84fb
#: ../../ref/templates/api.txt:759
msgid ""
"See also the :func:`~django.shortcuts.render_to_response()` shortcut, which "
"calls ``render_to_string`` and feeds the result into an :class:`~django.http."
"HttpResponse` suitable for returning directly from a view."
msgstr ""

# 5ff585eee4614b3eb353cf10f77e2d02
#: ../../ref/templates/api.txt:764
msgid "Configuring the template system in standalone mode"
msgstr ""

# add4939675e9444f960933c7db9f25dc
#: ../../ref/templates/api.txt:768
msgid ""
"This section is only of interest to people trying to use the template system "
"as an output component in another application. If you're using the template "
"system as part of a Django application, nothing here applies to you."
msgstr ""

# 960330d993a545f0b8182a94910e45ea
#: ../../ref/templates/api.txt:773
msgid ""
"Normally, Django will load all the configuration information it needs from "
"its own default configuration file, combined with the settings in the module "
"given in the :envvar:`DJANGO_SETTINGS_MODULE` environment variable. But if "
"you're using the template system independently of the rest of Django, the "
"environment variable approach isn't very convenient, because you probably "
"want to configure the template system in line with the rest of your "
"application rather than dealing with settings files and pointing to them via "
"environment variables."
msgstr ""

# a2fc4af66bc34b89a06999e6ed3fc51b
#: ../../ref/templates/api.txt:781
msgid ""
"To solve this problem, you need to use the manual configuration option "
"described in :ref:`settings-without-django-settings-module`. Simply import "
"the appropriate pieces of the templating system and then, *before* you call "
"any of the templating functions, call :func:`django.conf.settings."
"configure()` with any settings you wish to specify. You might want to "
"consider setting at least :setting:`TEMPLATE_DIRS` (if you're going to use "
"template loaders), :setting:`DEFAULT_CHARSET` (although the default of "
"``utf-8`` is probably fine) and :setting:`TEMPLATE_DEBUG`. If you plan to "
"use the :ttag:`url` template tag, you will also need to set the :setting:"
"`ROOT_URLCONF` setting. All available settings are described in the :doc:"
"`settings documentation </ref/settings>`, and any setting starting with "
"``TEMPLATE_`` is of obvious interest."
msgstr ""

# 8d28821c38584fb9a4794d5565da8e30
#: ../../ref/templates/api.txt:796
msgid "Using an alternative template language"
msgstr ""

# d9ec37763303401dad25eb478609c3e6
#: ../../ref/templates/api.txt:798
msgid ""
"The Django ``Template`` and ``Loader`` classes implement a simple API for "
"loading and rendering templates. By providing some simple wrapper classes "
"that implement this API we can use third party template systems like `Jinja2 "
"<http://jinja.pocoo.org/docs/>`_ or `Cheetah <http://www.cheetahtemplate.org/"
">`_. This allows us to use third-party template libraries without giving up "
"useful Django features like the Django ``Context`` object and handy "
"shortcuts like :func:`~django.shortcuts.render_to_response()`."
msgstr ""

# adfa2f42c8384381a9b412f885d54ffd
#: ../../ref/templates/api.txt:806
msgid ""
"The core component of the Django templating system is the ``Template`` "
"class. This class has a very simple interface: it has a constructor that "
"takes a single positional argument specifying the template string, and a "
"``render()`` method that takes a :class:`~django.template.Context` object "
"and returns a string containing the rendered response."
msgstr ""

# 1566df3fcf414b4fba2f80cba84333d2
#: ../../ref/templates/api.txt:812
msgid ""
"Suppose we're using a template language that defines a ``Template`` object "
"with a ``render()`` method that takes a dictionary rather than a ``Context`` "
"object. We can write a simple wrapper that implements the Django "
"``Template`` interface::"
msgstr ""

# dffe9337c6f64bf19a14fd4aa2395b00
#: ../../ref/templates/api.txt:825
msgid ""
"That's all that's required to make our fictional ``Template`` class "
"compatible with the Django loading and rendering system!"
msgstr ""

# 46752d2cfacc44cf8a2fbca8f78f2057
#: ../../ref/templates/api.txt:828
msgid ""
"The next step is to write a ``Loader`` class that returns instances of our "
"custom template class instead of the default :class:`~django.template."
"Template`. Custom ``Loader`` classes should inherit from ``django.template."
"loader.BaseLoader`` and override the ``load_template_source()`` method, "
"which takes a ``template_name`` argument, loads the template from disk (or "
"elsewhere), and returns a tuple: ``(template_string, template_origin)``."
msgstr ""

# eef6f2c9eb984b729f61183c774b2125
#: ../../ref/templates/api.txt:835
msgid ""
"The ``load_template()`` method of the ``Loader`` class retrieves the "
"template string by calling ``load_template_source()``, instantiates a "
"``Template`` from the template source, and returns a tuple: ``(template, "
"template_origin)``. Since this is the method that actually instantiates the "
"``Template``, we'll need to override it to use our custom template class "
"instead. We can inherit from the builtin :class:`django.template.loaders."
"app_directories.Loader` to take advantage of the ``load_template_source()`` "
"method implemented there::"
msgstr ""

# 3928cf99c1654e32a8b54b3b07673a36
#: ../../ref/templates/api.txt:852
msgid ""
"Finally, we need to modify our project settings, telling Django to use our "
"custom loader. Now we can write all of our templates in our alternative "
"template language while continuing to use the rest of the Django templating "
"system."
msgstr ""

# 70a9a57bb04e487d909febc0994b6bbd
#: ../../ref/templates/builtins.txt:3
msgid "Built-in template tags and filters"
msgstr ""

# 426c0f78afee40a2857c2004fd026955
#: ../../ref/templates/builtins.txt:5
msgid ""
"This document describes Django's built-in template tags and filters. It is "
"recommended that you use the :doc:`automatic documentation </ref/contrib/"
"admin/admindocs>`, if available, as this will also include documentation for "
"any custom tags or filters installed."
msgstr ""

# f1291f3221764b428b1bc8797152ce68
#: ../../ref/templates/builtins.txt:13
msgid "Built-in tag reference"
msgstr ""

# 0de28028bb504b96bf45f6268e7b269f
#: ../../ref/templates/builtins.txt:20
msgid "autoescape"
msgstr ""

# 9cf7184c836e42fbad41b5aefe3f30cf
#: ../../ref/templates/builtins.txt:22
msgid ""
"Controls the current auto-escaping behavior. This tag takes either ``on`` or "
"``off`` as an argument and that determines whether auto-escaping is in "
"effect inside the block. The block is closed with an ``endautoescape`` "
"ending tag."
msgstr ""

# fe65402a3f4446dba8fbf3b19f1f30ed
#: ../../ref/templates/builtins.txt:26
msgid ""
"When auto-escaping is in effect, all variable content has HTML escaping "
"applied to it before placing the result into the output (but after any "
"filters have been applied). This is equivalent to manually applying the :"
"tfilter:`escape` filter to each variable."
msgstr ""

# c81128808bb445daa69e9aa1ef13ac86
#: ../../ref/templates/builtins.txt:31
msgid ""
"The only exceptions are variables that are already marked as \"safe\" from "
"escaping, either by the code that populated the variable, or because it has "
"had the :tfilter:`safe` or :tfilter:`escape` filters applied."
msgstr ""

# 4b971d92f908486a9ecf8f887b71ba08
# ce4cad85a57f4742807448329e1f8902
# da679c6e348b4676a400a6f2132a19d8
# b0fc5e23396f454a994dff34497d0c5d
#: ../../ref/templates/builtins.txt:35 ../../ref/templates/builtins.txt:223
#: ../../ref/templates/builtins.txt:245 ../../ref/utils.txt:325
msgid "Sample usage::"
msgstr ""

# b2eb875d9f9546b999ac43234ecab31a
#: ../../ref/templates/builtins.txt:44
msgid "block"
msgstr ""

# b9847e085d5a46bcaabd6f39bd9093cf
#: ../../ref/templates/builtins.txt:46
msgid ""
"Defines a block that can be overridden by child templates. See :ref:"
"`Template inheritance <template-inheritance>` for more information."
msgstr ""

# e9c9875924e4454688a3cf9acfe78dcd
#: ../../ref/templates/builtins.txt:52
msgid "comment"
msgstr ""

# 00779ba87cfe462683fbdc9cd0781861
#: ../../ref/templates/builtins.txt:54
msgid "Ignores everything between ``{% comment %}`` and ``{% endcomment %}``."
msgstr ""

# 209ece4767e3453f90b140f334382247
#: ../../ref/templates/builtins.txt:59
msgid "csrf_token"
msgstr ""

# 8322b40bd89647718c0fcde6c4f66061
#: ../../ref/templates/builtins.txt:61
msgid ""
"This tag is used for CSRF protection, as described in the documentation for :"
"doc:`Cross Site Request Forgeries </ref/contrib/csrf>`."
msgstr ""

# bfaadcaabb6043c6afd4b59c618ee2d9
#: ../../ref/templates/builtins.txt:67
msgid "cycle"
msgstr ""

# 422f4c9c1c244c5fb4ead2f8155ab800
#: ../../ref/templates/builtins.txt:69
msgid ""
"Cycles among the given strings or variables each time this tag is "
"encountered."
msgstr ""

# ea0ad68d3fcf4d90b193e9f1b1898419
#: ../../ref/templates/builtins.txt:71
msgid ""
"Within a loop, cycles among the given strings each time through the loop::"
msgstr ""

# fec56c7c142b4f6fa72829d12e4db0b5
#: ../../ref/templates/builtins.txt:80
msgid ""
"You can use variables, too. For example, if you have two template variables, "
"``rowvalue1`` and ``rowvalue2``, you can cycle between their values like "
"this::"
msgstr ""

# 24704453225042e0923e03d9d59c2b79
#: ../../ref/templates/builtins.txt:89
msgid ""
"Note that variable arguments (``rowvalue1`` and ``rowvalue2`` above) are NOT "
"auto-escaped! So either make sure that you trust their values, or use "
"explicit escaping, like this::"
msgstr ""

# e86f12c4fefd45388efb0eaab81e087c
#: ../../ref/templates/builtins.txt:99
msgid "You can mix variables and strings::"
msgstr ""

# e3eab8bca5314d1da98e713a3c9579c1
#: ../../ref/templates/builtins.txt:107
msgid ""
"In some cases you might want to refer to the next value of a cycle from "
"outside of a loop. To do this, just give the ``{% cycle %}`` tag a name, "
"using \"as\", like this::"
msgstr ""

# 96f3ace9d1ea4d2a8ca6bedad4142850
#: ../../ref/templates/builtins.txt:113
msgid ""
"From then on, you can insert the current value of the cycle wherever you'd "
"like in your template by referencing the cycle name as a context variable. "
"If you want to move the cycle onto the next value, you use the cycle tag "
"again, using the name of the variable. So, the following template::"
msgstr ""

# 7869d3928e7a4349b448ebfdc7f2a0b3
#: ../../ref/templates/builtins.txt:128
msgid "would output::"
msgstr ""

# 67432086df9d44eb96efdbf7a46956bc
#: ../../ref/templates/builtins.txt:139
msgid ""
"You can use any number of values in a ``{% cycle %}`` tag, separated by "
"spaces. Values enclosed in single (``'``) or double quotes (``\"``) are "
"treated as string literals, while values without quotes are treated as "
"template variables."
msgstr ""

# 3827cca86ec640dba011244bffd855fc
#: ../../ref/templates/builtins.txt:143
msgid ""
"Note that the variables included in the cycle will not be escaped. This is "
"because template tags do not escape their content. Any HTML or Javascript "
"code contained in the printed variable will be rendered as-is, which could "
"potentially lead to security issues."
msgstr ""

# f5e2d604303644488d15c500f91454fe
#: ../../ref/templates/builtins.txt:148
msgid ""
"For backwards compatibility, the ``{% cycle %}`` tag supports the much "
"inferior old syntax from previous Django versions. You shouldn't use this in "
"any new projects, but for the sake of the people who are still using it, "
"here's what it looks like::"
msgstr ""

# e3bff11ed5cb417385a43ed1c1f145c5
#: ../../ref/templates/builtins.txt:155
msgid ""
"In this syntax, each value gets interpreted as a literal string, and there's "
"no way to specify variable values. Or literal commas. Or spaces. Did we "
"mention you shouldn't use this syntax in any new projects?"
msgstr ""

# c8b54f3ab416494ea95eb1c0b4544001
#: ../../ref/templates/builtins.txt:159
msgid ""
"By default, when you use the ``as`` keyword with the cycle tag, the usage of "
"``{% cycle %}`` that declares the cycle will itself output the first value "
"in the cycle. This could be a problem if you want to use the value in a "
"nested loop or an included template. If you want to just declare the cycle, "
"but not output the first value, you can add a ``silent`` keyword as the last "
"keyword in the tag. For example::"
msgstr ""

# 908369b23b0f480abebe9f2bf1c15541
#: ../../ref/templates/builtins.txt:171
msgid ""
"This will output a list of ``<tr>`` elements with ``class`` alternating "
"between ``row1`` and ``row2``; the subtemplate will have access to "
"``rowcolors`` in it's context that matches the class of the ``<tr>`` that "
"encloses it. If the ``silent`` keyword were to be omitted, ``row1`` would be "
"emitted as normal text, outside the ``<tr>`` element."
msgstr ""

# d09a7fb620c84a10944997bbd1e62168
#: ../../ref/templates/builtins.txt:178
msgid ""
"When the silent keyword is used on a cycle definition, the silence "
"automatically applies to all subsequent uses of the cycle tag. In, the "
"following template would output *nothing*, even though the second call to "
"``{% cycle %}`` doesn't specify silent::"
msgstr ""

# 3360dc1d3ef74dc5b6e129993d8799ef
#: ../../ref/templates/builtins.txt:189
msgid "debug"
msgstr ""

# b6be07e371c348ccb69c9c8ab15afa3d
#: ../../ref/templates/builtins.txt:191
msgid ""
"Outputs a whole load of debugging information, including the current context "
"and imported modules."
msgstr ""

# eabf99a922b64f94ba437249f14c1996
#: ../../ref/templates/builtins.txt:197
msgid "extends"
msgstr ""

# c720f96082cb4ba8b9475fb7c2b576a5
#: ../../ref/templates/builtins.txt:199
msgid "Signals that this template extends a parent template."
msgstr ""

# 19d4839a156348caa7675964bba0b10f
#: ../../ref/templates/builtins.txt:201
msgid "This tag can be used in two ways:"
msgstr ""

# 4c6cdee439924b7fa25e2f379573589d
#: ../../ref/templates/builtins.txt:203
msgid ""
"``{% extends \"base.html\" %}`` (with quotes) uses the literal value ``"
"\"base.html\"`` as the name of the parent template to extend."
msgstr ""

# 84856ceac7e2458695819c6a0398decc
#: ../../ref/templates/builtins.txt:206
msgid ""
"``{% extends variable %}`` uses the value of ``variable``. If the variable "
"evaluates to a string, Django will use that string as the name of the parent "
"template. If the variable evaluates to a ``Template`` object, Django will "
"use that object as the parent template."
msgstr ""

# 404f7501fd094b1986e27dc45c073cbd
#: ../../ref/templates/builtins.txt:211
msgid "See :ref:`template-inheritance` for more information."
msgstr ""

# c2c937fc3d42428aaadca587b27c808a
#: ../../ref/templates/builtins.txt:218
msgid "Filters the contents of the variable through variable filters."
msgstr ""

# d3b78f914f3e4c8c8aea08ee33589d97
#: ../../ref/templates/builtins.txt:220
msgid ""
"Filters can also be piped through each other, and they can have arguments -- "
"just like in variable syntax."
msgstr ""

# aa68d33e69f24d78aab6c845bdcaa6cd
#: ../../ref/templates/builtins.txt:231
msgid ""
"The :tfilter:`escape` and :tfilter:`safe` filters are not acceptable "
"arguments. Instead, use the :ttag:`autoescape` tag to manage autoescaping "
"for blocks of template code."
msgstr ""

# 7384df16765e46109c82617b906d2b60
#: ../../ref/templates/builtins.txt:238
msgid "firstof"
msgstr ""

# d4e6f55e478248a8b120b15c69c4aa35
#: ../../ref/templates/builtins.txt:240
msgid ""
"Outputs the first variable passed that is not False. Does NOT auto-escape "
"variable values."
msgstr ""

# 9c393a3954be418e986915f88f0497a4
#: ../../ref/templates/builtins.txt:243
msgid "Outputs nothing if all the passed variables are False."
msgstr ""

# 04fd217396864583b6b83f42c0e360ca
#: ../../ref/templates/builtins.txt:249
msgid "This is equivalent to::"
msgstr ""

# 4e329035a56a4d05a771da9d606c01e7
#: ../../ref/templates/builtins.txt:259
msgid ""
"You can also use a literal string as a fallback value in case all passed "
"variables are False::"
msgstr ""

# c45da652699f4f94b49046013fcaa2be
#: ../../ref/templates/builtins.txt:264
msgid ""
"Note that the variables included in the firstof tag will not be escaped. "
"This is because template tags do not escape their content. Any HTML or "
"Javascript code contained in the printed variable will be rendered as-is, "
"which could potentially lead to security issues. If you need to escape the "
"variables in the firstof tag, you must do so explicitly::"
msgstr ""

# 3ad6f9db04c9491887afca5c36676959
#: ../../ref/templates/builtins.txt:278
msgid "for"
msgstr ""

# 54febd3022304de2b8321cb9d8dbbbee
#: ../../ref/templates/builtins.txt:280
msgid ""
"Loop over each item in an array.  For example, to display a list of athletes "
"provided in ``athlete_list``::"
msgstr ""

# a24050faccbd4837b7ce4bc9542f6dde
#: ../../ref/templates/builtins.txt:289
msgid ""
"You can loop over a list in reverse by using ``{% for obj in list reversed %}"
"``."
msgstr ""

# 33baf976bf1646fdbd8bbae67bd422de
#: ../../ref/templates/builtins.txt:292
msgid ""
"If you need to loop over a list of lists, you can unpack the values in each "
"sub-list into individual variables. For example, if your context contains a "
"list of (x,y) coordinates called ``points``, you could use the following to "
"output the list of points::"
msgstr ""

# d1ae78d12034447bbfee708e826eeff1
#: ../../ref/templates/builtins.txt:301
msgid ""
"This can also be useful if you need to access the items in a dictionary. For "
"example, if your context contained a dictionary ``data``, the following "
"would display the keys and values of the dictionary::"
msgstr ""

# 4dcd4270d56744e492f3a6e8d078953a
#: ../../ref/templates/builtins.txt:309
msgid "The for loop sets a number of variables available within the loop:"
msgstr ""

# f024f2be13a74e11a36df1053dc158f0
#: ../../ref/templates/builtins.txt:312
msgid "Variable"
msgstr ""

# b6ef8f4b80374feebf558c47eac1b587
#: ../../ref/templates/builtins.txt:314
msgid "``forloop.counter``"
msgstr ""

# 0644a76ba7d9449cbb64fa6d6770ef88
#: ../../ref/templates/builtins.txt:314
msgid "The current iteration of the loop (1-indexed)"
msgstr ""

# ae261addddf540c48734f105e54c1b1b
#: ../../ref/templates/builtins.txt:315
msgid "``forloop.counter0``"
msgstr ""

# 3803c24afe2a465bb86e4da1e49de578
#: ../../ref/templates/builtins.txt:315
msgid "The current iteration of the loop (0-indexed)"
msgstr ""

# c6c1adc2e4404a108ffd99223647fd12
#: ../../ref/templates/builtins.txt:316
msgid "``forloop.revcounter``"
msgstr ""

# d6e8967c61cd42329f8a7256976e66e6
#: ../../ref/templates/builtins.txt:316
msgid "The number of iterations from the end of the loop (1-indexed)"
msgstr ""

# 6e45ee40a22d45598027e903398d541f
#: ../../ref/templates/builtins.txt:318
msgid "``forloop.revcounter0``"
msgstr ""

# 49a054b8b99e470480f4b1462ad09210
#: ../../ref/templates/builtins.txt:318
msgid "The number of iterations from the end of the loop (0-indexed)"
msgstr ""

# 848b22a8e1ad48a29e1abc97c72096c6
#: ../../ref/templates/builtins.txt:320
msgid "``forloop.first``"
msgstr ""

# f7bb2c2b9bec48bdb5cd18c5c1c2ccb2
#: ../../ref/templates/builtins.txt:320
msgid "True if this is the first time through the loop"
msgstr ""

# b00a1a3644954c679f3c41f960fa7c39
#: ../../ref/templates/builtins.txt:321
msgid "``forloop.last``"
msgstr ""

# ccb560bd8e5d42f895e53d2c5be93622
#: ../../ref/templates/builtins.txt:321
msgid "True if this is the last time through the loop"
msgstr ""

# 4407d04ef1584979985172ded0812226
#: ../../ref/templates/builtins.txt:322
msgid "``forloop.parentloop``"
msgstr ""

# 5306f11cbfa84b4386bf3fd1b6efb38e
#: ../../ref/templates/builtins.txt:322
msgid "For nested loops, this is the loop \"above\" the current one"
msgstr ""

# 8cbe6b0543c84e8aaf4b6ba46be30112
#: ../../ref/templates/builtins.txt:327
msgid "for ... empty"
msgstr ""

# ff0d8a4b623244b6aaff5bd988cc37f8
#: ../../ref/templates/builtins.txt:329
msgid ""
"The ``for`` tag can take an optional ``{% empty %}`` clause that will be "
"displayed if the given array is empty or could not be found::"
msgstr ""

# c33ff114399b417db7fcac24a775af23
#: ../../ref/templates/builtins.txt:340
msgid ""
"The above is equivalent to -- but shorter, cleaner, and possibly faster than "
"-- the following::"
msgstr ""

# 2bc3ad4d161b44d28dd37f1d1a6c3989
#: ../../ref/templates/builtins.txt:356
msgid "if"
msgstr ""

# 8fe46592416a49ca9116528a6021fec4
#: ../../ref/templates/builtins.txt:358
msgid ""
"The ``{% if %}`` tag evaluates a variable, and if that variable is \"true"
"\" (i.e. exists, is not empty, and is not a false boolean value) the "
"contents of the block are output::"
msgstr ""

# 3d437816be9e4c0db3529ef597ff9693
#: ../../ref/templates/builtins.txt:370
msgid ""
"In the above, if ``athlete_list`` is not empty, the number of athletes will "
"be displayed by the ``{{ athlete_list|length }}`` variable."
msgstr ""

# 73b7af48ab7744b999a809ae634e3398
#: ../../ref/templates/builtins.txt:373
msgid ""
"As you can see, the ``if`` tag may take one or several ``{% elif %}`` "
"clauses, as well as an ``{% else %}`` clause that will be displayed if all "
"previous conditions fail. These clauses are optional."
msgstr ""

# 6f41aa6b8e5a458283e655b9d4d8447c
#: ../../ref/templates/builtins.txt:379
msgid "The ``if`` tag now supports ``{% elif %}`` clauses."
msgstr ""

# 710ebc653004433b8eed7b626f034735
#: ../../ref/templates/builtins.txt:382
msgid "Boolean operators"
msgstr ""

# d6299107887a44a69106d1d8bf9178c9
#: ../../ref/templates/builtins.txt:384
msgid ""
":ttag:`if` tags may use ``and``, ``or`` or ``not`` to test a number of "
"variables or to negate a given variable::"
msgstr ""

# cbe9c157ebb243a5aee893e97e350a99
#: ../../ref/templates/builtins.txt:409
msgid ""
"Use of both ``and`` and ``or`` clauses within the same tag is allowed, with "
"``and`` having higher precedence than ``or`` e.g.::"
msgstr ""

# 5c891b2f17c64ba19cf510b6196d2d12
#: ../../ref/templates/builtins.txt:414
msgid "will be interpreted like:"
msgstr ""

# 09749e091e38452fa2f4b8ee3e4b9657
#: ../../ref/templates/builtins.txt:420
msgid ""
"Use of actual parentheses in the :ttag:`if` tag is invalid syntax.  If you "
"need them to indicate precedence, you should use nested :ttag:`if` tags."
msgstr ""

# 31b06ad7ca81462497a70e37d7f35f97
#: ../../ref/templates/builtins.txt:423
msgid ""
":ttag:`if` tags may also use the operators ``==``, ``!=``, ``<``, ``>``, "
"``<=``, ``>=`` and ``in`` which work as follows:"
msgstr ""

# 23a14353e6bf491abf5effca72853f11
#: ../../ref/templates/builtins.txt:428
msgid "``==`` operator"
msgstr ""

# 861d69a37c474eb99bc97f00a06e6b8e
#: ../../ref/templates/builtins.txt:430
msgid "Equality. Example::"
msgstr ""

# 9a6ef0a7b6fb45a79d6e00ed57024264
#: ../../ref/templates/builtins.txt:437
msgid "``!=`` operator"
msgstr ""

# 73b816c7c06b484f806a46c002541f55
#: ../../ref/templates/builtins.txt:439
msgid "Inequality. Example::"
msgstr ""

# 3208b8b972724fdbade53b05b7750ea0
#: ../../ref/templates/builtins.txt:447
msgid "``<`` operator"
msgstr ""

# 05d9f905d1254b5db932c929c0850e65
#: ../../ref/templates/builtins.txt:449
msgid "Less than. Example::"
msgstr ""

# 185f4206d1604b89a939ff04753f2895
#: ../../ref/templates/builtins.txt:456
msgid "``>`` operator"
msgstr ""

# 7df1b70566ae4307bf813c439de5b2fa
#: ../../ref/templates/builtins.txt:458
msgid "Greater than. Example::"
msgstr ""

# 144936d99ec9497c85947882b03bc947
#: ../../ref/templates/builtins.txt:465
msgid "``<=`` operator"
msgstr ""

# caa82238ccbc41ee86e4d9c264dcf637
#: ../../ref/templates/builtins.txt:467
msgid "Less than or equal to. Example::"
msgstr ""

# d3dfd31946db46e3bd16d4bbcc8df81f
#: ../../ref/templates/builtins.txt:474
msgid "``>=`` operator"
msgstr ""

# 308bbea0997e42f891a3607941a99937
#: ../../ref/templates/builtins.txt:476
msgid "Greater than or equal to. Example::"
msgstr ""

# 10602476145e4f26bb3457981fa71967
#: ../../ref/templates/builtins.txt:483
msgid "``in`` operator"
msgstr ""

# 8770141176574d9d8be4bb25f25d24e1
#: ../../ref/templates/builtins.txt:485
msgid ""
"Contained within. This operator is supported by many Python containers to "
"test whether the given value is in the container.  The following are some "
"examples of how ``x in y`` will be interpreted::"
msgstr ""

# 1290656bc50d4a1c860f04d41baad193
#: ../../ref/templates/builtins.txt:504
msgid "``not in`` operator"
msgstr ""

# 703cdc86a8bf47ffbe14fafc3a3a4f4f
#: ../../ref/templates/builtins.txt:506
msgid "Not contained within.  This is the negation of the ``in`` operator."
msgstr ""

# baac2546c81f41fd8cddd910416b9d21
#: ../../ref/templates/builtins.txt:509
msgid ""
"The comparison operators cannot be 'chained' like in Python or in "
"mathematical notation. For example, instead of using::"
msgstr ""

# effb302e507948ae9a1892dee636f579
#: ../../ref/templates/builtins.txt:514
msgid "you should use::"
msgstr ""

# 489cca793af9430ba12f9e1039d91a3b
#: ../../ref/templates/builtins.txt:520
msgid "Filters"
msgstr ""

# 70326c0849b548cca86753772d5ae7cd
#: ../../ref/templates/builtins.txt:522
msgid "You can also use filters in the :ttag:`if` expression. For example::"
msgstr ""

# 0df67f8407524c76b5d80fc17ecdb460
#: ../../ref/templates/builtins.txt:529
msgid "Complex expressions"
msgstr ""

# 3d3ef6146d1c4c65aa2addd0d7da9d4d
#: ../../ref/templates/builtins.txt:531
msgid ""
"All of the above can be combined to form complex expressions. For such "
"expressions, it can be important to know how the operators are grouped when "
"the expression is evaluated - that is, the precedence rules.  The precedence "
"of the operators, from lowest to highest, is as follows:"
msgstr ""

# 7c8a27b6861b49438c571e9916974b80
#: ../../ref/templates/builtins.txt:536
msgid "``or``"
msgstr ""

# 4b98aa7bdf65415893bdaaa9fcd9ea8f
#: ../../ref/templates/builtins.txt:537
msgid "``and``"
msgstr ""

# f51a44cf11b545bb9ba64eece95ceccc
#: ../../ref/templates/builtins.txt:538
msgid "``not``"
msgstr ""

# 7b3f43c05b234820ac4760215a79180e
#: ../../ref/templates/builtins.txt:539
msgid "``in``"
msgstr ""

# c9e01e10aa2b4be8a827f8466f83c6c4
#: ../../ref/templates/builtins.txt:540
msgid "``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=``"
msgstr ""

# 05431102d211479b8c5ed3ac861dc6c2
#: ../../ref/templates/builtins.txt:542
msgid ""
"(This follows Python exactly). So, for example, the following complex :ttag:"
"`if` tag:"
msgstr ""

# 19c25e1710574fddbfb4d5cdc4ad4593
#: ../../ref/templates/builtins.txt:549
msgid "...will be interpreted as:"
msgstr ""

# a4de00e151de467f8f6cfe4dec195565
#: ../../ref/templates/builtins.txt:555
msgid ""
"If you need different precedence, you will need to use nested :ttag:`if` "
"tags. Sometimes that is better for clarity anyway, for the sake of those who "
"do not know the precedence rules."
msgstr ""

# 4586541d275d413ab78174be8d9f2c5f
#: ../../ref/templates/builtins.txt:563
msgid "ifchanged"
msgstr ""

# 858431871f5441efbc0f0cdd59cd9d12
#: ../../ref/templates/builtins.txt:565
msgid "Check if a value has changed from the last iteration of a loop."
msgstr ""

# df67d0cc119148dd9646de3b5bc2b4ca
#: ../../ref/templates/builtins.txt:567
msgid ""
"The ``{% ifchanged %}`` block tag is used within a loop. It has two possible "
"uses."
msgstr ""

# b0534fb7410c451ea518f3b7255863d3
#: ../../ref/templates/builtins.txt:570
msgid ""
"Checks its own rendered contents against its previous state and only "
"displays the content if it has changed. For example, this displays a list of "
"days, only displaying the month if it changes::"
msgstr ""

# 4ff2e90c43a340fe8ae12e158d16e573
#: ../../ref/templates/builtins.txt:581
msgid ""
"If given one or more variables, check whether any variable has changed. For "
"example, the following shows the date every time it changes, while showing "
"the hour if either the hour or the date has changed::"
msgstr ""

# 7915d5d8546b447686bd9c77e6c19077
#: ../../ref/templates/builtins.txt:592
msgid ""
"The ``ifchanged`` tag can also take an optional ``{% else %}`` clause that "
"will be displayed if the value has not changed::"
msgstr ""

# 065838247f7248248a17dc6f29c4428b
#: ../../ref/templates/builtins.txt:608
msgid "ifequal"
msgstr ""

# e1d80095a58647658920062eb6943195
#: ../../ref/templates/builtins.txt:610
msgid "Output the contents of the block if the two arguments equal each other."
msgstr ""

# 51bbda70240a47189676e2496156bb24
#: ../../ref/templates/builtins.txt:618
msgid "As in the :ttag:`if` tag, an ``{% else %}`` clause is optional."
msgstr ""

# 6f1854fef5e44d8297a8157cb64c993c
#: ../../ref/templates/builtins.txt:620
msgid "The arguments can be hard-coded strings, so the following is valid::"
msgstr ""

# a321c05240d04b198c18b206bd97816c
#: ../../ref/templates/builtins.txt:626
msgid ""
"It is only possible to compare an argument to template variables or strings. "
"You cannot check for equality with Python objects such as ``True`` or "
"``False``.  If you need to test if something is true or false, use the :ttag:"
"`if` tag instead."
msgstr ""

# 9c6dd20e267d449da7b8fa3f22b893b0
#: ../../ref/templates/builtins.txt:631
msgid ""
"An alternative to the ``ifequal`` tag is to use the :ttag:`if` tag and the "
"``==`` operator."
msgstr ""

# 2fe6e31628f941b1a0e03f6b52af6398
#: ../../ref/templates/builtins.txt:637
msgid "ifnotequal"
msgstr ""

# 6e71a8e84cc8473388703dbc34e540fa
#: ../../ref/templates/builtins.txt:639
msgid ""
"Just like :ttag:`ifequal`, except it tests that the two arguments are not "
"equal."
msgstr ""

# 8b833cb3e4b84d60a7d16f0854d02c5d
#: ../../ref/templates/builtins.txt:642
msgid ""
"An alternative to the ``ifnotequal`` tag is to use the :ttag:`if` tag and "
"the ``!=`` operator."
msgstr ""

# 192fb9c1e83e464aaa7d06017628a088
#: ../../ref/templates/builtins.txt:648
msgid "include"
msgstr ""

# a560158278a242e5997ac5e431938645
#: ../../ref/templates/builtins.txt:650
msgid ""
"Loads a template and renders it with the current context. This is a way of "
"\"including\" other templates within a template."
msgstr ""

# 6ec20931822342ebae5dcd1173c1847e
#: ../../ref/templates/builtins.txt:653
msgid ""
"The template name can either be a variable or a hard-coded (quoted) string, "
"in either single or double quotes."
msgstr ""

# 90e5def1c78e49d6a1a7d09b202e0689
#: ../../ref/templates/builtins.txt:656
msgid ""
"This example includes the contents of the template ``\"foo/bar.html\"``::"
msgstr ""

# 4e944e0542ef42d194a5756a223c3267
#: ../../ref/templates/builtins.txt:660
msgid ""
"This example includes the contents of the template whose name is contained "
"in the variable ``template_name``::"
msgstr ""

# 1e047f9b089b43acb7561737360076f7
#: ../../ref/templates/builtins.txt:665
msgid ""
"An included template is rendered with the context of the template that's "
"including it. This example produces the output ``\"Hello, John\"``:"
msgstr ""

# fa11c987a4f94649a48f296101cf7207
#: ../../ref/templates/builtins.txt:668
msgid "Context: variable ``person`` is set to ``\"john\"``."
msgstr ""

# df20ce5b8f8e4670b0ce70a858d0ef34
#: ../../ref/templates/builtins.txt:669
msgid "Template::"
msgstr ""

# 8f858812e6184c47900089ac3d0fc4db
#: ../../ref/templates/builtins.txt:673
msgid "The ``name_snippet.html`` template::"
msgstr ""

# 6bf4318fd6184b2ca52f3ae3e8c5ac99
#: ../../ref/templates/builtins.txt:677
msgid ""
"You can pass additional context to the template using keyword arguments::"
msgstr ""

# 095bcacc19e74b179ae3ebc561ef6dd4
#: ../../ref/templates/builtins.txt:681
msgid ""
"If you want to only render the context with the variables provided (or even "
"no variables at all), use the ``only`` option::"
msgstr ""

# 6a3cdb0deef549eeaa65b2a0bd8616d7
#: ../../ref/templates/builtins.txt:687
msgid ""
"The :ttag:`include` tag should be considered as an implementation of "
"\"render this subtemplate and include the HTML\", not as \"parse this "
"subtemplate and include its contents as if it were part of the parent\". "
"This means that there is no shared state between included templates -- each "
"include is a completely independent rendering process."
msgstr ""

# 017d20541e094addb732a1dfac90ffb8
#: ../../ref/templates/builtins.txt:693
msgid "See also: :ttag:`{% ssi %}<ssi>`."
msgstr ""

# 24cfc9476ecc4aeaa0fa91749ed67032
#: ../../ref/templates/builtins.txt:698
msgid "load"
msgstr ""

# 7f8f7bf9e03b400b85b0528466eadd2d
#: ../../ref/templates/builtins.txt:700
msgid "Loads a custom template tag set."
msgstr ""

# 7896cbe5d0e14baa949895f911ed6fb4
#: ../../ref/templates/builtins.txt:702
msgid ""
"For example, the following template would load all the tags and filters "
"registered in ``somelibrary`` and ``otherlibrary`` located in package "
"``package``::"
msgstr ""

# fa74e8965b5a4bb58a21fb3c8055932d
#: ../../ref/templates/builtins.txt:708
msgid ""
"You can also selectively load individual filters or tags from a library, "
"using the ``from`` argument. In this example, the template tags/filters "
"named ``foo`` and ``bar`` will be loaded from ``somelibrary``::"
msgstr ""

# fbb09e25703d49929636a667a4a174dc
#: ../../ref/templates/builtins.txt:714
msgid ""
"See :doc:`Custom tag and filter libraries </howto/custom-template-tags>` for "
"more information."
msgstr ""

# c2565444f93e4a658b7d455021812fae
#: ../../ref/templates/builtins.txt:720
msgid "now"
msgstr ""

# 2b30267c44fc4e1e97bfb005999096f2
#: ../../ref/templates/builtins.txt:722
msgid ""
"Displays the current date and/or time, using a format according to the given "
"string. Such string can contain format specifiers characters as described in "
"the :tfilter:`date` filter section."
msgstr ""

# 83578cc4bb8348b08e6c7d7608ba4085
#: ../../ref/templates/builtins.txt:730
msgid ""
"Note that you can backslash-escape a format string if you want to use the "
"\"raw\" value. In this example, \"f\" is backslash-escaped, because "
"otherwise \"f\" is a format string that displays the time. The \"o\" doesn't "
"need to be escaped, because it's not a format character::"
msgstr ""

# 5e9df892169f4e7383aeceeedb14d716
#: ../../ref/templates/builtins.txt:737
msgid "This would display as \"It is the 4th of September\"."
msgstr ""

# 432ab7c2cb574404bb0099cd7a9f580a
#: ../../ref/templates/builtins.txt:743
msgid ""
"The format passed can also be one of the predefined ones :setting:"
"`DATE_FORMAT`, :setting:`DATETIME_FORMAT`, :setting:`SHORT_DATE_FORMAT` or :"
"setting:`SHORT_DATETIME_FORMAT`. The predefined formats may vary depending "
"on the current locale and if :ref:`format-localization` is enabled, e.g.::"
msgstr ""

# 4f5682cf8cf14a8398c73061e3f5d5e3
#: ../../ref/templates/builtins.txt:754
msgid "regroup"
msgstr ""

# 65ddde961d7d42ffb0fce0e49a9f8f0e
#: ../../ref/templates/builtins.txt:756
msgid "Regroups a list of alike objects by a common attribute."
msgstr ""

# 9b188d4b57f646cd9697532c02e19a68
#: ../../ref/templates/builtins.txt:758
msgid ""
"This complex tag is best illustrated by way of an example: say that \"places"
"\" is a list of cities represented by dictionaries containing ``\"name\"``, "
"``\"population\"``, and ``\"country\"`` keys:"
msgstr ""

# 3649c791a6a0471c9bc7f0e1e5da3ea0
#: ../../ref/templates/builtins.txt:770
msgid ""
"...and you'd like to display a hierarchical list that is ordered by country, "
"like this:"
msgstr ""

# fb9480b58f1b48cd8e8d12f6919e0582
# d888970903274e80a09e239e5b9e72fd
# ccc9ef19589b4175b522cac1b69c3c03
#: ../../ref/templates/builtins.txt:773 ../../ref/templates/builtins.txt:832
#: ../../ref/templates/builtins.txt:836
msgid "India"
msgstr ""

# 7a8be34331e949e9874b018ebe579544
# 65a651a5270d4de99476d08af9fca524
#: ../../ref/templates/builtins.txt:773 ../../ref/templates/builtins.txt:833
msgid "Mumbai: 19,000,000"
msgstr ""

# bdce8fe720d14c80b0882d044427ac1b
# 8c3cd99b9e1f440abe69426c5f62bd1d
#: ../../ref/templates/builtins.txt:774 ../../ref/templates/builtins.txt:837
msgid "Calcutta: 15,000,000"
msgstr ""

# b19cd30e19e74298814b30f2fcacdbd6
# 3ea4a5c697c94a6bab5877d16a629d75
# 1131d57b7c0d4eb9894bdec167c03afc
#: ../../ref/templates/builtins.txt:776 ../../ref/templates/builtins.txt:834
#: ../../ref/templates/builtins.txt:838
msgid "USA"
msgstr ""

# ac3652b3fbfd414e9a7d9abbf81f1426
# eda38af043074c9d92c2ddf677c0e4af
#: ../../ref/templates/builtins.txt:776 ../../ref/templates/builtins.txt:835
msgid "New York: 20,000,000"
msgstr ""

# 273d7f88447c44c98b51dfe25b649552
# bbc8a85c3c9c45fd934c593988651f4e
#: ../../ref/templates/builtins.txt:777 ../../ref/templates/builtins.txt:839
msgid "Chicago: 7,000,000"
msgstr ""

# b5e3b5a9d1554131964276b790e93e6c
# 69e6061c467b4a1991ff272f469a886a
#: ../../ref/templates/builtins.txt:780 ../../ref/templates/builtins.txt:841
msgid "Japan"
msgstr ""

# b4fe59e57cf748dabaa728586e0058af
# 7f13b16605474421acaf9ca080063128
#: ../../ref/templates/builtins.txt:779 ../../ref/templates/builtins.txt:841
msgid "Tokyo: 33,000,000"
msgstr ""

# 75ceec934d7f415c8268e0d9a21c0482
#: ../../ref/templates/builtins.txt:782
msgid ""
"You can use the ``{% regroup %}`` tag to group the list of cities by "
"country. The following snippet of template code would accomplish this::"
msgstr ""

# 99f6ef153cf044109122c9b9a31213e9
#: ../../ref/templates/builtins.txt:799
msgid ""
"Let's walk through this example. ``{% regroup %}`` takes three arguments: "
"the list you want to regroup, the attribute to group by, and the name of the "
"resulting list. Here, we're regrouping the ``cities`` list by the "
"``country`` attribute and calling the result ``country_list``."
msgstr ""

# a5dc5a2548de4f658a7718df27686dee
#: ../../ref/templates/builtins.txt:804
msgid ""
"``{% regroup %}`` produces a list (in this case, ``country_list``) of "
"**group objects**. Each group object has two attributes:"
msgstr ""

# e379019fa4b94374ba125186b011f578
#: ../../ref/templates/builtins.txt:807
msgid ""
"``grouper`` -- the item that was grouped by (e.g., the string \"India\" or "
"\"Japan\")."
msgstr ""

# 7931ce400c80435c8c11bef272ec8957
#: ../../ref/templates/builtins.txt:809
msgid ""
"``list`` -- a list of all items in this group (e.g., a list of all cities "
"with country='India')."
msgstr ""

# 00a2843446c84fcbaa336c29c3494f98
#: ../../ref/templates/builtins.txt:812
msgid ""
"Note that ``{% regroup %}`` does not order its input! Our example relies on "
"the fact that the ``cities`` list was ordered by ``country`` in the first "
"place. If the ``cities`` list did *not* order its members by ``country``, "
"the regrouping would naively display more than one group for a single "
"country. For example, say the ``cities`` list was set to this (note that the "
"countries are not grouped together):"
msgstr ""

# 120704e943264366be22c20ecf7cb785
#: ../../ref/templates/builtins.txt:829
msgid ""
"With this input for ``cities``, the example ``{% regroup %}`` template code "
"above would result in the following output:"
msgstr ""

# 81fe4e9042804187bdcfe9dfff798dcb
#: ../../ref/templates/builtins.txt:843
msgid ""
"The easiest solution to this gotcha is to make sure in your view code that "
"the data is ordered according to how you want to display it."
msgstr ""

# fc949ff3ff6c40a98b8893da48ba7ff4
#: ../../ref/templates/builtins.txt:846
msgid ""
"Another solution is to sort the data in the template using the :tfilter:"
"`dictsort` filter, if your data is in a list of dictionaries::"
msgstr ""

# 6a29cfa43b1e463a88c65b335934bf85
#: ../../ref/templates/builtins.txt:852
msgid "Grouping on other properties"
msgstr ""

# b052db7b2f6a4330a99aa3b25050ad5c
#: ../../ref/templates/builtins.txt:854
msgid ""
"Any valid template lookup is a legal grouping attribute for the regroup tag, "
"including methods, attributes, dictionary keys and list items. For example, "
"if the \"country\" field is a foreign key to a class with an attribute "
"\"description,\" you could use::"
msgstr ""

# df348b98d4c442c4b95aa5059bf84aeb
#: ../../ref/templates/builtins.txt:861
msgid ""
"Or, if ``country`` is a field with ``choices``, it will have a :meth:"
"`~django.db.models.Model.get_FOO_display` method available as an attribute, "
"allowing  you to group on the display string rather than the ``choices`` "
"key::"
msgstr ""

# e67b897c26d44285a85be87119257306
#: ../../ref/templates/builtins.txt:868
msgid ""
"``{{ country.grouper }}`` will now display the value fields from the "
"``choices`` set rather than the keys."
msgstr ""

# 5c17bcfc40d94fa58a92887f8a780bd1
#: ../../ref/templates/builtins.txt:874
msgid "spaceless"
msgstr ""

# 8f5f1e433a6b41ffb23578f29f29e71b
#: ../../ref/templates/builtins.txt:876
msgid ""
"Removes whitespace between HTML tags. This includes tab characters and "
"newlines."
msgstr ""

# 76cf6c43a7b3496ba0d96436878f72b2
#: ../../ref/templates/builtins.txt:887
msgid "This example would return this HTML::"
msgstr ""

# c320859d0d514691b4eff704cebfcab8
#: ../../ref/templates/builtins.txt:891
msgid ""
"Only space between *tags* is removed -- not space between tags and text. In "
"this example, the space around ``Hello`` won't be stripped::"
msgstr ""

# 76e9994fbf794e70ae25fc2e37f2ebdd
#: ../../ref/templates/builtins.txt:903
msgid "ssi"
msgstr ""

# e4e7c00322ec4a6ebfd802a274343d20
#: ../../ref/templates/builtins.txt:905
msgid "Outputs the contents of a given file into the page."
msgstr ""

# 6b2b5ba065d94fcea54ec51fd8947510
#: ../../ref/templates/builtins.txt:907
msgid ""
"Like a simple :ttag:`include` tag, ``{% ssi %}`` includes the contents of "
"another file -- which must be specified using an absolute path -- in the "
"current page::"
msgstr ""

# 65b847ead7994856842fdcf8b96dfddd
#: ../../ref/templates/builtins.txt:913
msgid ""
"The first parameter of ``ssi`` can be a quoted literal or any other context "
"variable."
msgstr ""

# 6c0dfca5560e4b12b5344f30fcfbe7c5
#: ../../ref/templates/builtins.txt:916
msgid ""
"If the optional \"parsed\" parameter is given, the contents of the included "
"file are evaluated as template code, within the current context::"
msgstr ""

# cf7489620d744421b5daa4490a25eaa9
#: ../../ref/templates/builtins.txt:921
msgid ""
"Note that if you use ``{% ssi %}``, you'll need to define :setting:"
"`ALLOWED_INCLUDE_ROOTS` in your Django settings, as a security measure."
msgstr ""

# 0cdd7056a3574fdc97cc59292cfe11c7
#: ../../ref/templates/builtins.txt:925
msgid "See also: :ttag:`{% include %}<include>`."
msgstr ""

# 4d9ac597c95c464f987d203ebd14ed52
#: ../../ref/templates/builtins.txt:930
msgid "templatetag"
msgstr ""

# 5aa2c0e768ec4cfcb058c16c6d0fe97e
#: ../../ref/templates/builtins.txt:932
msgid "Outputs one of the syntax characters used to compose template tags."
msgstr ""

# f223ee9a263b46799c853a93ff0ec220
#: ../../ref/templates/builtins.txt:934
msgid ""
"Since the template system has no concept of \"escaping\", to display one of "
"the bits used in template tags, you must use the ``{% templatetag %}`` tag."
msgstr ""

# c072550c0e4546b0a7c5145615372480
#: ../../ref/templates/builtins.txt:937
msgid "The argument tells which template bit to output:"
msgstr ""

# 8aa4710af85947e495399b94ca400f60
# b7cc9c5040854e8488b8b25df939343e
#: ../../ref/templates/builtins.txt:940 ../../ref/templates/builtins.txt:2273
msgid "Outputs"
msgstr ""

# 8e75b7fb9ed74f5b85fbe166bc051aa8
#: ../../ref/templates/builtins.txt:942
msgid "``openblock``"
msgstr ""

# 8fc6369b90894008bbdadc3b91a87440
#: ../../ref/templates/builtins.txt:942
msgid "``{%``"
msgstr ""

# 201251e6fc8040f0b252574007001145
#: ../../ref/templates/builtins.txt:943
msgid "``closeblock``"
msgstr ""

# e08ab3825ca848a886b42e027949bd29
#: ../../ref/templates/builtins.txt:943
msgid "``%}``"
msgstr ""

# 903a285c4c814d4bb8fd9f81afa18b7e
#: ../../ref/templates/builtins.txt:944
msgid "``openvariable``"
msgstr ""

# 3fccee1fc3f14756bda82726d7fac41a
#: ../../ref/templates/builtins.txt:944
msgid "``{{``"
msgstr ""

# 3998621545724fe692ec4df8e6d3d0cb
#: ../../ref/templates/builtins.txt:945
msgid "``closevariable``"
msgstr ""

# 4dd6b3d85ad24659a0f0958c83b3e21d
#: ../../ref/templates/builtins.txt:945
msgid "``}}``"
msgstr ""

# c38b99a63a5e42ec92ef7728e5d384dd
#: ../../ref/templates/builtins.txt:946
msgid "``openbrace``"
msgstr ""

# f148eb8cbb52440cb7c5074e63d27de0
#: ../../ref/templates/builtins.txt:946
msgid "``{``"
msgstr ""

# f20e86fbac6c4cfb8c40ab8f5934fc82
#: ../../ref/templates/builtins.txt:947
msgid "``closebrace``"
msgstr ""

# 7e3704d6b76e417b9fe8b758ca381fb1
#: ../../ref/templates/builtins.txt:947
msgid "``}``"
msgstr ""

# 847955192eb246e0a3d1bd7d92dc3496
#: ../../ref/templates/builtins.txt:948
msgid "``opencomment``"
msgstr ""

# b8138e6cf9d447b386eef447b7df5161
#: ../../ref/templates/builtins.txt:948
msgid "``{#``"
msgstr ""

# 4349d16546dc4e6b857a3039f7f081b4
#: ../../ref/templates/builtins.txt:949
msgid "``closecomment``"
msgstr ""

# 71a86cd0da894321963a16475efa0ca1
#: ../../ref/templates/builtins.txt:949
msgid "``#}``"
msgstr ""

# e6bad765440543b0badd14ae8f78a5ac
#: ../../ref/templates/builtins.txt:955
msgid "url"
msgstr ""

# 968e6b5fc04a42b39b081fb731d0f478
#: ../../ref/templates/builtins.txt:957
msgid ""
"Returns an absolute path reference (a URL without the domain name) matching "
"a given view function and optional parameters. This is a way to output links "
"without violating the DRY principle by having to hard-code URLs in your "
"templates::"
msgstr ""

# 70cdd9d1b96149f9a6f2c0156a502fb2
#: ../../ref/templates/builtins.txt:964
msgid ""
"The first argument is a path to a view function in the format ``package."
"package.module.function``. It can be a quoted literal or any other context "
"variable. Additional arguments are optional and should be space-separated "
"values that will be used as arguments in the URL. The example above shows "
"passing positional arguments. Alternatively you may use keyword syntax::"
msgstr ""

# 88a4f657bba24f32954640d9296d6ae8
#: ../../ref/templates/builtins.txt:973
msgid ""
"Do not mix both positional and keyword syntax in a single call. All "
"arguments required by the URLconf should be present."
msgstr ""

# a3cab88e88294c2799d068317bee8ee1
#: ../../ref/templates/builtins.txt:976
msgid ""
"For example, suppose you have a view, ``app_views.client``, whose URLconf "
"takes a client ID (here, ``client()`` is a method inside the views file "
"``app_views.py``). The URLconf line might look like this:"
msgstr ""

# ec7f68643e43483795f3974f058237d1
#: ../../ref/templates/builtins.txt:984
msgid ""
"If this app's URLconf is included into the project's URLconf under a path "
"such as this:"
msgstr ""

# e32c02dae269494c8d50c7426015a966
#: ../../ref/templates/builtins.txt:991
msgid "...then, in a template, you can create a link to this view like this::"
msgstr ""

# 3cc405dcdee348f4bb859a6160660b1e
#: ../../ref/templates/builtins.txt:995
msgid "The template tag will output the string ``/clients/client/123/``."
msgstr ""

# 769b5648b0f0456eac5ff86118014fb9
#: ../../ref/templates/builtins.txt:997
msgid ""
"If you're using :ref:`named URL patterns <naming-url-patterns>`, you can "
"refer to the name of the pattern in the ``url`` tag instead of using the "
"path to the view."
msgstr ""

# e2a59a1d7d1647849ecebae54ecd2a24
#: ../../ref/templates/builtins.txt:1001
msgid ""
"Note that if the URL you're reversing doesn't exist, you'll get an :exc:"
"`~django.core.urlresolvers.NoReverseMatch` exception raised, which will "
"cause your site to display an error page."
msgstr ""

# 4a475301e2a94215972d9b3a4359af4b
#: ../../ref/templates/builtins.txt:1005
msgid ""
"If you'd like to retrieve a URL without displaying it, you can use a "
"slightly different call::"
msgstr ""

# e01a3ebb673f4df49c0099d61da52c5c
#: ../../ref/templates/builtins.txt:1013
msgid ""
"This ``{% url ... as var %}`` syntax will *not* cause an error if the view "
"is missing. In practice you'll use this to link to views that are optional::"
msgstr ""

# 966c11fba725423a8a40fa03aba90da4
#: ../../ref/templates/builtins.txt:1021
msgid ""
"If you'd like to retrieve a namespaced URL, specify the fully qualified "
"name::"
msgstr ""

# fe628a905b024e32b7ad1f28e9144a59
#: ../../ref/templates/builtins.txt:1025
msgid ""
"This will follow the normal :ref:`namespaced URL resolution strategy <topics-"
"http-reversing-url-namespaces>`, including using any hints provided by the "
"context as to the current application."
msgstr ""

# 17460ee257184bb586ede3abbf4ec9d4
#: ../../ref/templates/builtins.txt:1031
msgid "Don't forget to put quotes around the function path or pattern name!"
msgstr ""

# 3fc175ebeda04ddfb3e09001a977c7be
#: ../../ref/templates/builtins.txt:1042
msgid "verbatim"
msgstr ""

# bc52f8233d8840ffa05af8176d5ab5aa
#: ../../ref/templates/builtins.txt:1046
msgid ""
"Stops the template engine from rendering the contents of this block tag."
msgstr ""

# dc8433b18d2748a9b0adebab14de05d5
#: ../../ref/templates/builtins.txt:1048
msgid ""
"A common use is to allow a Javascript template layer that collides with "
"Django's syntax. For example::"
msgstr ""

# 7013bed1ed6b415782792cf63d464073
#: ../../ref/templates/builtins.txt:1055
msgid ""
"You can also designate a specific closing tag, allowing the use of ``{% "
"endverbatim %}`` as part of the unrendered contents::"
msgstr ""

# 3769beb20bd44f69a71535dd90dba78b
#: ../../ref/templates/builtins.txt:1065
msgid "widthratio"
msgstr ""

# 9b408cf004fb4efa8edbc4f760f4d8fc
#: ../../ref/templates/builtins.txt:1067
msgid ""
"For creating bar charts and such, this tag calculates the ratio of a given "
"value to a maximum value, and then applies that ratio to a constant."
msgstr ""

# b977ae7497e94f779cc620172d9fb876
#: ../../ref/templates/builtins.txt:1075
msgid ""
"If ``this_value`` is 175, ``max_value`` is 200, and ``max_width`` is 100, "
"the image in the above example will be 88 pixels wide (because 175/200 "
"= .875; .875 * 100 = 87.5 which is rounded up to 88)."
msgstr ""

# fdff30a857844cc3b30259e03b5c0014
#: ../../ref/templates/builtins.txt:1082
msgid "with"
msgstr ""

# 2442e677a4d84ed2b184593e5d85dfe3
#: ../../ref/templates/builtins.txt:1084
msgid ""
"Caches a complex variable under a simpler name. This is useful when "
"accessing an \"expensive\" method (e.g., one that hits the database) "
"multiple times."
msgstr ""

# 4d5afd67bca344af8792ca1692a79bc7
#: ../../ref/templates/builtins.txt:1093
msgid ""
"The populated variable (in the example above, ``total``) is only available "
"between the ``{% with %}`` and ``{% endwith %}`` tags."
msgstr ""

# 4d0b659027e44c579900e02bc136d902
#: ../../ref/templates/builtins.txt:1096
msgid "You can assign more than one context variable::"
msgstr ""

# f3496d3bee7f4b7f915ad86be5380e11
#: ../../ref/templates/builtins.txt:1102
msgid ""
"The previous more verbose format is still supported: ``{% with business."
"employees.count as total %}``"
msgstr ""

# eb52fac84676452bbef2dc3844e86c35
#: ../../ref/templates/builtins.txt:1108
msgid "Built-in filter reference"
msgstr ""

# b52e33f02fa8417a890396d7d8092dbc
#: ../../ref/templates/builtins.txt:1113
msgid "add"
msgstr ""

# 9898fb872a404ec095768dfd75899eda
#: ../../ref/templates/builtins.txt:1115
msgid "Adds the argument to the value."
msgstr ""

# 2b8b171056824dd68eaa24fee01aa889
#: ../../ref/templates/builtins.txt:1121
msgid "If ``value`` is ``4``, then the output will be ``6``."
msgstr ""

# c212c19c93e84bcb95d5dd08d668acf7
#: ../../ref/templates/builtins.txt:1123
msgid ""
"This filter will first try to coerce both values to integers. If this fails, "
"it'll attempt to add the values together anyway. This will work on some data "
"types (strings, list, etc.) and fail on others. If it fails, the result will "
"be an empty string."
msgstr ""

# bf1853f910664b03a94a94396b26061d
#: ../../ref/templates/builtins.txt:1128
msgid "For example, if we have::"
msgstr ""

# c1784176da2441a4b99baa165fc94fcb
#: ../../ref/templates/builtins.txt:1132
msgid ""
"and ``first`` is ``[1, 2, 3]`` and ``second`` is ``[4, 5, 6]``, then the "
"output will be ``[1, 2, 3, 4, 5, 6]``."
msgstr ""

# 710edd1654ea4096aabc1ace991eeceb
#: ../../ref/templates/builtins.txt:1137
msgid ""
"Strings that can be coerced to integers will be **summed**, not "
"concatenated, as in the first example above."
msgstr ""

# 9d7b1675df6b43a99f1a63793e193d5b
#: ../../ref/templates/builtins.txt:1143
msgid "addslashes"
msgstr ""

# b46d2ccf90f845b4a177e43859999af0
#: ../../ref/templates/builtins.txt:1145
msgid ""
"Adds slashes before quotes. Useful for escaping strings in CSV, for example."
msgstr ""

# 807c15a7553c4a4c853615254975ed05
#: ../../ref/templates/builtins.txt:1151
msgid ""
"If ``value`` is ``\"I'm using Django\"``, the output will be ``\"I\\'m using "
"Django\"``."
msgstr ""

# f59e4311f71646d9a3f12f046b657b76
#: ../../ref/templates/builtins.txt:1157
msgid "capfirst"
msgstr ""

# c5732ea7e4004390a9260f478d110643
#: ../../ref/templates/builtins.txt:1159
msgid "Capitalizes the first character of the value."
msgstr ""

# b4bd3f2fc09d4fb496e20f86cbb51599
#: ../../ref/templates/builtins.txt:1165
msgid "If ``value`` is ``\"django\"``, the output will be ``\"Django\"``."
msgstr ""

# c5b7866806494c939839ed8dd7cc8f01
#: ../../ref/templates/builtins.txt:1170
msgid "center"
msgstr ""

# 5fb283f9165a4f2783af5fd8492c3ff1
#: ../../ref/templates/builtins.txt:1172
msgid "Centers the value in a field of a given width."
msgstr ""

# 1ef29aa3deef43bcbb22aa6af6d7daec
#: ../../ref/templates/builtins.txt:1178
msgid ""
"If ``value`` is ``\"Django\"``, the output will be ``\"     Django    \"``."
msgstr ""

# 1152ec466f744de59851c3cf105b9f05
#: ../../ref/templates/builtins.txt:1183
msgid "cut"
msgstr ""

# efcded8c7c6d4214a05e17d3962e5020
#: ../../ref/templates/builtins.txt:1185
msgid "Removes all values of arg from the given string."
msgstr ""

# bbd588b0b55b4d35882d98bc44258b41
#: ../../ref/templates/builtins.txt:1191
msgid ""
"If ``value`` is ``\"String with spaces\"``, the output will be ``"
"\"Stringwithspaces\"``."
msgstr ""

# 091932e070be407b90a7471f2294f9a4
#: ../../ref/templates/builtins.txt:1197
msgid "date"
msgstr ""

# 23a1f30ac966457da57aca4ba115cd39
#: ../../ref/templates/builtins.txt:1199
msgid "Formats a date according to the given format."
msgstr ""

# f1af500221444033bd710c6bbc9a617c
#: ../../ref/templates/builtins.txt:1201
msgid ""
"Uses a similar format as PHP's ``date()`` function (http://php.net/date) "
"with some differences."
msgstr ""

# 11020ed38b0d42e19daea458d4d7be90
#: ../../ref/templates/builtins.txt:1205
msgid ""
"These format characters are not used in Django outside of templates. They "
"were designed to be compatible with PHP to ease transitioning for designers."
msgstr ""

# 9a7f764c26a647e8abd44adabde6faa3
#: ../../ref/templates/builtins.txt:1208
msgid "Available format strings:"
msgstr ""

# 26cf5f7ac4ed47fc8a71ecbae3cefb81
#: ../../ref/templates/builtins.txt:1207
msgid "Format character"
msgstr ""

# a24086c75f98420294518690b848cbfc
#: ../../ref/templates/builtins.txt:1207
msgid "Example output"
msgstr ""

# 41c694ddadf6403fa7691897f9532c4a
#: ../../ref/templates/builtins.txt:1209
msgid "a"
msgstr ""

# d70170dd5f6147a08002fb7a6dd548ec
#: ../../ref/templates/builtins.txt:1209
msgid ""
"``'a.m.'`` or ``'p.m.'`` (Note that this is slightly different than PHP's "
"output, because this includes periods to match Associated Press style.)"
msgstr ""

# e86852c0962642ce895da61c1414c199
#: ../../ref/templates/builtins.txt:1209
msgid "``'a.m.'``"
msgstr ""

# 6e83c750346e4005bd8a4b6754af8151
#: ../../ref/templates/builtins.txt:1213
msgid "A"
msgstr ""

# e3cef136c21a496a87c6e2a7151e6c98
#: ../../ref/templates/builtins.txt:1213
msgid "``'AM'`` or ``'PM'``."
msgstr ""

# 64c76fa6a5bd4592b8d85e15ff7d6ce2
#: ../../ref/templates/builtins.txt:1213
msgid "``'AM'``"
msgstr ""

# 8316579943854a3b85218adea093c525
#: ../../ref/templates/builtins.txt:1214
msgid "b"
msgstr ""

# 064668caee8c4af4915c008df1231a70
#: ../../ref/templates/builtins.txt:1214
msgid "Month, textual, 3 letters, lowercase."
msgstr ""

# 3b4431b2b0a34d8980b68cee796879fb
#: ../../ref/templates/builtins.txt:1214
msgid "``'jan'``"
msgstr ""

# a721fa2298d4485099c6e04204c2d392
#: ../../ref/templates/builtins.txt:1215
msgid "B"
msgstr ""

# 683199ab844a4c43907ccd43e96ab935
#: ../../ref/templates/builtins.txt:1215
msgid "Not implemented."
msgstr ""

# 4f0f54675e8440d0985c3bfae87b95fd
#: ../../ref/templates/builtins.txt:1216
msgid "c"
msgstr ""

# 9a0303bdd1b74ddd9911852edb79f39e
#: ../../ref/templates/builtins.txt:1216
msgid ""
"ISO 8601 format. (Note: unlike others formatters, such as \"Z\", \"O\" or \"r"
"\", the \"c\" formatter will not add timezone offset if value is a naive "
"datetime (see :class:`datetime.tzinfo`)."
msgstr ""

# 8032288243ef4995b2d8d207c3137d83
#: ../../ref/templates/builtins.txt:1216
msgid ""
"``2008-01-02T10:30:00.000123+02:00``, or ``2008-01-02T10:30:00.000123`` if "
"the datetime is naive"
msgstr ""

# ea30ed63ef7349ae8eec85ca6fe77218
#: ../../ref/templates/builtins.txt:1221
msgid "d"
msgstr ""

# c6842d050ef749a8830033bad687cba2
#: ../../ref/templates/builtins.txt:1221
msgid "Day of the month, 2 digits with leading zeros."
msgstr ""

# 591418b92274499e966b5fb8ca493d56
#: ../../ref/templates/builtins.txt:1221
msgid "``'01'`` to ``'31'``"
msgstr ""

# 5c7af208120943cead64fce39160ab9f
#: ../../ref/templates/builtins.txt:1223
msgid "D"
msgstr ""

# 7e987e718a4541d88c2a875c8a158544
#: ../../ref/templates/builtins.txt:1223
msgid "Day of the week, textual, 3 letters."
msgstr ""

# 5fa7d839e5a14cfc9cdbd972f2b53c9c
#: ../../ref/templates/builtins.txt:1223
msgid "``'Fri'``"
msgstr ""

# b6cc29ec422c402e932812fc00dbeb80
#: ../../ref/templates/builtins.txt:1224
msgid "e"
msgstr ""

# 89e8d32abc4d458ba2a3caa1df5bae32
#: ../../ref/templates/builtins.txt:1224
msgid ""
"Timezone name. Could be in any format, or might return an empty string, "
"depending on the datetime."
msgstr ""

# ffe2dc4bca5b461bb245f2db109b2195
#: ../../ref/templates/builtins.txt:1225
msgid "``''``, ``'GMT'``, ``'-500'``, ``'US/Eastern'``, etc."
msgstr ""

# 94a6deb1c95547f981220604ab51fe68
#: ../../ref/templates/builtins.txt:1227
msgid "E"
msgstr ""

# 2c6637f4ad2a457695b353d02646e0e5
#: ../../ref/templates/builtins.txt:1227
msgid ""
"Month, locale specific alternative representation usually used for long date "
"representation."
msgstr ""

# 354c52c4223446d8bc20deb4e3aebf9b
#: ../../ref/templates/builtins.txt:1229
msgid "``'listopada'`` (for Polish locale, as opposed to ``'Listopad'``)"
msgstr ""

# 7d4c36e6e58c49ec8b0665585053ea1c
#: ../../ref/templates/builtins.txt:1230
msgid "f"
msgstr ""

# 7afb4dc27e3941d5b969689a4c3db182
#: ../../ref/templates/builtins.txt:1230
msgid ""
"Time, in 12-hour hours and minutes, with minutes left off if they're zero. "
"Proprietary extension."
msgstr ""

# 5052e1bcc54e4401b59343ba2d4fdc6b
#: ../../ref/templates/builtins.txt:1230
msgid "``'1'``, ``'1:30'``"
msgstr ""

# cd78f732486f426c91d1443056b8f72b
#: ../../ref/templates/builtins.txt:1233
msgid "F"
msgstr ""

# b452c0f2d65f48ccad2badee3d801d32
#: ../../ref/templates/builtins.txt:1233
msgid "Month, textual, long."
msgstr ""

# 4bffaa8b10bb4949b4dec3f581cf538c
#: ../../ref/templates/builtins.txt:1233
msgid "``'January'``"
msgstr ""

# 884db6112ad94b358d935a95b22ffbaf
#: ../../ref/templates/builtins.txt:1234
msgid "g"
msgstr ""

# aee6bdfcd8824ea0b7725dd854615b52
#: ../../ref/templates/builtins.txt:1234
msgid "Hour, 12-hour format without leading zeros."
msgstr ""

# 256a1bfcccc448dea5b6dfd3587b8f2b
# e089f39bfcdc4db981479e135c13440f
#: ../../ref/templates/builtins.txt:1234 ../../ref/templates/builtins.txt:1249
msgid "``'1'`` to ``'12'``"
msgstr ""

# 7a0aefe79bdc447f93a77d440e00d105
#: ../../ref/templates/builtins.txt:1236
msgid "G"
msgstr ""

# 68faba4d166541a3bb18f1d9d621e756
#: ../../ref/templates/builtins.txt:1236
msgid "Hour, 24-hour format without leading zeros."
msgstr ""

# 33a3e40a2e974035b4b0ef58a2e15123
#: ../../ref/templates/builtins.txt:1236
msgid "``'0'`` to ``'23'``"
msgstr ""

# 9d11b4e6e33e47638d449bb49c60a36c
#: ../../ref/templates/builtins.txt:1238
msgid "h"
msgstr ""

# 0faf8b205a4b4dfbb534d2cb27c1e880
#: ../../ref/templates/builtins.txt:1238
msgid "Hour, 12-hour format."
msgstr ""

# 6ea0fcee77784ee283dd8d05cf2d7e34
# 3ad307443ee1444daa10ae00706da5f0
#: ../../ref/templates/builtins.txt:1238 ../../ref/templates/builtins.txt:1247
msgid "``'01'`` to ``'12'``"
msgstr ""

# 473e0d44a65f453a9256f50d1f214741
#: ../../ref/templates/builtins.txt:1239
msgid "H"
msgstr ""

# 316529b499774a86a889b19502471df2
#: ../../ref/templates/builtins.txt:1239
msgid "Hour, 24-hour format."
msgstr ""

# c2f01cadd06840d9998355488ee4f4e0
#: ../../ref/templates/builtins.txt:1239
msgid "``'00'`` to ``'23'``"
msgstr ""

# 1ebd42751b6a4df9b93301deddd22971
#: ../../ref/templates/builtins.txt:1240
msgid "i"
msgstr ""

# f72f8e7c39bd41c4b20c1355f233193a
#: ../../ref/templates/builtins.txt:1240
msgid "Minutes."
msgstr ""

# 725dda92f13f494e95438053b58bc8c3
# 537d74b89e1b4a7bb3d276b5ed9d5694
#: ../../ref/templates/builtins.txt:1240 ../../ref/templates/builtins.txt:1262
msgid "``'00'`` to ``'59'``"
msgstr ""

# 1a010aac99d04f1c94cf0e3f9a4b2e58
#: ../../ref/templates/builtins.txt:1241
msgid "I"
msgstr ""

# e2b9b2d4e00f4e1b851af42eb96db447
#: ../../ref/templates/builtins.txt:1241
msgid "Daylight Savings Time, whether it's in effect or not."
msgstr ""

# 3be2588945404f0396bb346f61bb5538
#: ../../ref/templates/builtins.txt:1241
msgid "``'1'`` or ``'0'``"
msgstr ""

# 543170c76295483f8ade2071d09be59f
#: ../../ref/templates/builtins.txt:1243
msgid "j"
msgstr ""

# 26e0dbab26c64154af1e38dfa03d7223
#: ../../ref/templates/builtins.txt:1243
msgid "Day of the month without leading zeros."
msgstr ""

# 8a3f217784da4236a0cca435508e66f0
#: ../../ref/templates/builtins.txt:1243
msgid "``'1'`` to ``'31'``"
msgstr ""

# e61008afce4a4bb7968583c4368f7c7e
#: ../../ref/templates/builtins.txt:1245
msgid "l"
msgstr ""

# 2aa8faa7f21f4f1f88f8f32a3b5045b8
#: ../../ref/templates/builtins.txt:1245
msgid "Day of the week, textual, long."
msgstr ""

# cf3c8d9cb69a423d8ffbe880c90d7e37
#: ../../ref/templates/builtins.txt:1245
msgid "``'Friday'``"
msgstr ""

# fa9cd9d8009a45d0a6e25482a8e3534c
#: ../../ref/templates/builtins.txt:1246
msgid "L"
msgstr ""

# 0ae04e486c5041c1aa423704e456e9e2
#: ../../ref/templates/builtins.txt:1246
msgid "Boolean for whether it's a leap year."
msgstr ""

# ec385ed835c84d23ab28d3ff3720f779
#: ../../ref/templates/builtins.txt:1246
msgid "``True`` or ``False``"
msgstr ""

# 638fa43784d1407daf5be8d079987843
#: ../../ref/templates/builtins.txt:1247
msgid "m"
msgstr ""

# 622a37e255bf49999cb8b4af3e77dc12
#: ../../ref/templates/builtins.txt:1247
msgid "Month, 2 digits with leading zeros."
msgstr ""

# 7797c3e13aa14eab92dad41b53dab400
#: ../../ref/templates/builtins.txt:1248
msgid "M"
msgstr ""

# 7849c4c058134bd7af63abafecfa1a0d
#: ../../ref/templates/builtins.txt:1248
msgid "Month, textual, 3 letters."
msgstr ""

# a671c7b2ae284a4daa45c2584df0464f
#: ../../ref/templates/builtins.txt:1248
msgid "``'Jan'``"
msgstr ""

# ad526d1ffb404d5e8df8e044ea2f35cf
#: ../../ref/templates/builtins.txt:1249
msgid "n"
msgstr ""

# c8bdc56f23e34b5088bedcacb2bbb885
#: ../../ref/templates/builtins.txt:1249
msgid "Month without leading zeros."
msgstr ""

# bc3b1ba04bbb493bbe34e266f22bce1d
#: ../../ref/templates/builtins.txt:1250
msgid "N"
msgstr ""

# 6fb078fec1fe487ab60b982b1c031dc4
#: ../../ref/templates/builtins.txt:1250
msgid "Month abbreviation in Associated Press style. Proprietary extension."
msgstr ""

# 612a0552ca684918a91267d36326f015
#: ../../ref/templates/builtins.txt:1250
msgid "``'Jan.'``, ``'Feb.'``, ``'March'``, ``'May'``"
msgstr ""

# aca91390e8f248f2b3b859eaed44df25
#: ../../ref/templates/builtins.txt:1252
msgid "o"
msgstr ""

# baa6e16cebfe4718b89e50ab1f2c7f20
#: ../../ref/templates/builtins.txt:1252
msgid ""
"ISO-8601 week-numbering year, corresponding to the ISO-8601 week number (W)"
msgstr ""

# 6f56782aa191417982acdc65055555ed
# 1de11d5592334836911cb57fa1b37726
#: ../../ref/templates/builtins.txt:1252 ../../ref/templates/builtins.txt:1275
msgid "``'1999'``"
msgstr ""

# 9982ba766b5c4bc484cfdf7de24ea8c6
#: ../../ref/templates/builtins.txt:1255
msgid "O"
msgstr ""

# 476b456614c3436f8a3ea945d3de244b
#: ../../ref/templates/builtins.txt:1255
msgid "Difference to Greenwich time in hours."
msgstr ""

# ad7645cb4f924ff39c58c2f6b1c79469
#: ../../ref/templates/builtins.txt:1255
msgid "``'+0200'``"
msgstr ""

# 81d15f20b39c4dc2baf535e797c878f7
#: ../../ref/templates/builtins.txt:1256
msgid "P"
msgstr ""

# fcebb67a0ebd4a059c4d2aa94b571bff
#: ../../ref/templates/builtins.txt:1256
msgid ""
"Time, in 12-hour hours, minutes and 'a.m.'/'p.m.', with minutes left off if "
"they're zero and the special-case strings 'midnight' and 'noon' if "
"appropriate. Proprietary extension."
msgstr ""

# fa63fb87830042a7921e4fc074658b03
#: ../../ref/templates/builtins.txt:1256
msgid ""
"``'1 a.m.'``, ``'1:30 p.m.'``, ``'midnight'``, ``'noon'``, ``'12:30 p.m.'``"
msgstr ""

# 05f89f1a49874970a771a0c4b9fdc551
#: ../../ref/templates/builtins.txt:1261
msgid "r"
msgstr ""

# 3defd690266c4ef2b4a550332341f56f
#: ../../ref/templates/builtins.txt:1261
msgid ":rfc:`2822` formatted date."
msgstr ""

# a8b6cab444cc4d73925e87ac52c8e131
#: ../../ref/templates/builtins.txt:1261
msgid "``'Thu, 21 Dec 2000 16:01:07 +0200'``"
msgstr ""

# f4ac3a1e1e9945a98c45c192ae1ee2ac
#: ../../ref/templates/builtins.txt:1262
msgid "s"
msgstr ""

# b0f7ad4cf5ef4fd0bf0d789af3f3a4da
#: ../../ref/templates/builtins.txt:1262
msgid "Seconds, 2 digits with leading zeros."
msgstr ""

# c309c488d97b415dac60c852dea0cd9f
#: ../../ref/templates/builtins.txt:1263
msgid "S"
msgstr ""

# 636b38e867624a579a6e7f71b561f838
#: ../../ref/templates/builtins.txt:1263
msgid "English ordinal suffix for day of the month, 2 characters."
msgstr ""

# 5e3e8cf3b89f4c9d961f8626f9dfb9ef
#: ../../ref/templates/builtins.txt:1263
msgid "``'st'``, ``'nd'``, ``'rd'`` or ``'th'``"
msgstr ""

# 8c81d2bd378d41ce86845e7c2d262058
#: ../../ref/templates/builtins.txt:1265
msgid "t"
msgstr ""

# dbb6e8c4ed604132b810ff95d5f79b3a
#: ../../ref/templates/builtins.txt:1265
msgid "Number of days in the given month."
msgstr ""

# cdff9d8d392a4738a951052c9ed1c972
#: ../../ref/templates/builtins.txt:1265
msgid "``28`` to ``31``"
msgstr ""

# 1c608d8df7624347a82a2f2ce0690cd3
#: ../../ref/templates/builtins.txt:1266
msgid "T"
msgstr ""

# ebd24f728b4546e8a91031aaf165c7c1
#: ../../ref/templates/builtins.txt:1266
msgid "Time zone of this machine."
msgstr ""

# 7322ed2ac9b4400fb99cdcf4c2b947cb
#: ../../ref/templates/builtins.txt:1266
msgid "``'EST'``, ``'MDT'``"
msgstr ""

# 62bca7983ab7463f80fdf0599e587056
#: ../../ref/templates/builtins.txt:1267
msgid "u"
msgstr ""

# d7aab096746a40dbadeaf08250cc0e8e
#: ../../ref/templates/builtins.txt:1267
msgid "Microseconds."
msgstr ""

# 5170ff92aa89422aab6e85dcc7648030
#: ../../ref/templates/builtins.txt:1267
msgid "``000000`` to ``999999``"
msgstr ""

# 75dad4d4d5494c9fa716562a585e1a28
#: ../../ref/templates/builtins.txt:1268
msgid "U"
msgstr ""

# ecf7071ef8954100a56f73e0410f7f2f
#: ../../ref/templates/builtins.txt:1268
msgid "Seconds since the Unix Epoch (January 1 1970 00:00:00 UTC)."
msgstr ""

# 54290838c9ed4984bfeac8fee45564a9
#: ../../ref/templates/builtins.txt:1270
msgid "w"
msgstr ""

# 5f63597ca3b6445fb002a964868de182
#: ../../ref/templates/builtins.txt:1270
msgid "Day of the week, digits without leading zeros."
msgstr ""

# 65c29f28223e4e96b2a3df657a8f7e2a
#: ../../ref/templates/builtins.txt:1270
msgid "``'0'`` (Sunday) to ``'6'`` (Saturday)"
msgstr ""

# 8397e34df84d4ca2ba63e55d4c2e5b16
#: ../../ref/templates/builtins.txt:1272
msgid "W"
msgstr ""

# d49c57cbc6824101bd5f234e240548c4
#: ../../ref/templates/builtins.txt:1272
msgid "ISO-8601 week number of year, with weeks starting on Monday."
msgstr ""

# 31f2b32256c1486fa2bf7c7d26018b6e
#: ../../ref/templates/builtins.txt:1272
msgid "``1``, ``53``"
msgstr ""

# c36162f807ca463191881f228afa3f2a
#: ../../ref/templates/builtins.txt:1274
msgid "y"
msgstr ""

# 997979cb3fa1464f9fe0d091c9fcdd27
#: ../../ref/templates/builtins.txt:1274
msgid "Year, 2 digits."
msgstr ""

# af13e38731a54e26aaa5c88ab40cdd55
#: ../../ref/templates/builtins.txt:1274
msgid "``'99'``"
msgstr ""

# e3c911071b724705a4bccf23275ebd88
#: ../../ref/templates/builtins.txt:1275
msgid "Y"
msgstr ""

# c47bd48afa2b45f3862be384eda15b3b
#: ../../ref/templates/builtins.txt:1275
msgid "Year, 4 digits."
msgstr ""

# 77c55f5d82a346b59fb272624b45e42b
#: ../../ref/templates/builtins.txt:1276
msgid "z"
msgstr ""

# 2979a2794b544fa7b54dcaee7d2dd74e
#: ../../ref/templates/builtins.txt:1276
msgid "Day of the year."
msgstr ""

# 6b54ecef9f6b4e9c87a8e676a16fdedd
#: ../../ref/templates/builtins.txt:1276
msgid "``0`` to ``365``"
msgstr ""

# 6d6e790a5472452e9b3fd7034b82ba77
#: ../../ref/templates/builtins.txt:1277
msgid "Z"
msgstr ""

# 07913370991d43df9a7ada22fed82112
#: ../../ref/templates/builtins.txt:1277
msgid ""
"Time zone offset in seconds. The offset for timezones west of UTC is always "
"negative, and for those east of UTC is always positive."
msgstr ""

# f309265c35ec407195ae6ce471185eaa
#: ../../ref/templates/builtins.txt:1277
msgid "``-43200`` to ``43200``"
msgstr ""

# 17b3257717ba4648a40632d52ca8ce24
#: ../../ref/templates/builtins.txt:1285
msgid ""
"The ``e`` and ``o`` format specification characters were added in Django 1.4."
msgstr ""

# 1a9ce4e2f9f54784bedcc0955ea50511
#: ../../ref/templates/builtins.txt:1291
msgid ""
"If ``value`` is a ``datetime`` object (e.g., the result of ``datetime."
"datetime.now()``), the output will be the string ``'Wed 09 Jan 2008'``."
msgstr ""

# 6868b1e81b67443dac46e3e75f2dd42d
#: ../../ref/templates/builtins.txt:1295
msgid ""
"The format passed can be one of the predefined ones :setting:`DATE_FORMAT`, :"
"setting:`DATETIME_FORMAT`, :setting:`SHORT_DATE_FORMAT` or :setting:"
"`SHORT_DATETIME_FORMAT`, or a custom format that uses the format specifiers "
"shown in the table above. Note that predefined formats may vary depending on "
"the current locale."
msgstr ""

# 77c78e7f88ff427a828785d323a5dd21
#: ../../ref/templates/builtins.txt:1301
msgid ""
"Assuming that :setting:`USE_L10N` is ``True`` and :setting:`LANGUAGE_CODE` "
"is, for example, ``\"es\"``, then for::"
msgstr ""

# 941c959b4b1848fcb9a84eb3939d4ecf
#: ../../ref/templates/builtins.txt:1306
msgid ""
"the output would be the string ``\"09/01/2008\"`` (the ``\"SHORT_DATE_FORMAT"
"\"`` format specifier for the ``es`` locale as shipped with Django is ``\"d/"
"m/Y\"``)."
msgstr ""

# da934d316b34466bb2771546d85cc83e
# 95fb771283644a23a1729530a066fb4b
#: ../../ref/templates/builtins.txt:1309 ../../ref/templates/builtins.txt:1984
msgid "When used without a format string::"
msgstr ""

# dd11d25ecee642b7af8d35f02b9956bf
#: ../../ref/templates/builtins.txt:1313
msgid ""
"...the formatting string defined in the :setting:`DATE_FORMAT` setting will "
"be used, without applying any localization."
msgstr ""

# 962054d2be9240748ac72951f0389ebe
#: ../../ref/templates/builtins.txt:1319
msgid "default"
msgstr ""

# 7ed1988c31664ad982bd973b88554cf7
#: ../../ref/templates/builtins.txt:1321
msgid ""
"If value evaluates to ``False``, uses the given default. Otherwise, uses the "
"value."
msgstr ""

# 097fce32b4634fe18f5ab4b21716feb2
#: ../../ref/templates/builtins.txt:1328
msgid ""
"If ``value`` is ``\"\"`` (the empty string), the output will be ``nothing``."
msgstr ""

# b005983f45a4412e825feb96ce7d6f2a
#: ../../ref/templates/builtins.txt:1333
msgid "default_if_none"
msgstr ""

# c6dfde76ebce43cfa4b3de8e6c5368d9
#: ../../ref/templates/builtins.txt:1335
msgid ""
"If (and only if) value is ``None``, uses the given default. Otherwise, uses "
"the value."
msgstr ""

# 843c8038773b431b8751b9f49b668902
#: ../../ref/templates/builtins.txt:1338
msgid ""
"Note that if an empty string is given, the default value will *not* be used. "
"Use the :tfilter:`default` filter if you want to fallback for empty strings."
msgstr ""

# 45545fab0c9e42318fd0cbc8abad790c
#: ../../ref/templates/builtins.txt:1345
msgid ""
"If ``value`` is ``None``, the output will be the string ``\"nothing\"``."
msgstr ""

# 85008932bc894dac8a25bea30b07e9d0
#: ../../ref/templates/builtins.txt:1350
msgid "dictsort"
msgstr ""

# db06f9cfdbaa4be798aba8495d645075
#: ../../ref/templates/builtins.txt:1352
msgid ""
"Takes a list of dictionaries and returns that list sorted by the key given "
"in the argument."
msgstr ""

# f8233d0ee9494a43b5d8aa8707f26536
#: ../../ref/templates/builtins.txt:1359
msgid "If ``value`` is:"
msgstr ""

# 4bcb7a19961c47bbb31b82a8d5d51ffa
#: ../../ref/templates/builtins.txt:1369
msgid "then the output would be:"
msgstr ""

# f798693ada004b42b72a3ca126339c49
#: ../../ref/templates/builtins.txt:1382
msgid "dictsortreversed"
msgstr ""

# 1713f09cb2e14d7a8724ac4e961530a0
#: ../../ref/templates/builtins.txt:1384
msgid ""
"Takes a list of dictionaries and returns that list sorted in reverse order "
"by the key given in the argument. This works exactly the same as the above "
"filter, but the returned value will be in reverse order."
msgstr ""

# 74606577d1bd44559fc4cf27526a3633
#: ../../ref/templates/builtins.txt:1391
msgid "divisibleby"
msgstr ""

# 6bdf60a15e57402b917482b59c6bb560
#: ../../ref/templates/builtins.txt:1393
msgid "Returns ``True`` if the value is divisible by the argument."
msgstr ""

# d8f0fe530ec64c8c84cc50a0aa6a530d
#: ../../ref/templates/builtins.txt:1399
msgid "If ``value`` is ``21``, the output would be ``True``."
msgstr ""

# a5ff99fd149a4f90907d46c9cdcbf73b
#: ../../ref/templates/builtins.txt:1404
msgid "escape"
msgstr ""

# 9ea6972b4b0c484b93880f217eb20c62
#: ../../ref/templates/builtins.txt:1406
msgid "Escapes a string's HTML. Specifically, it makes these replacements:"
msgstr ""

# 30c980f36f1f49d48638914f60ae3773
#: ../../ref/templates/builtins.txt:1408
msgid "``<`` is converted to ``&lt;``"
msgstr ""

# 3e55b9c76d1444e0a04708d91880da9b
#: ../../ref/templates/builtins.txt:1409
msgid "``>`` is converted to ``&gt;``"
msgstr ""

# 45f2178058ed484c957898769f1b9df0
#: ../../ref/templates/builtins.txt:1410
msgid "``'`` (single quote) is converted to ``&#39;``"
msgstr ""

# 719f12f0859a41c493896ef36ec30334
#: ../../ref/templates/builtins.txt:1411
msgid "``\"`` (double quote) is converted to ``&quot;``"
msgstr ""

# 50b2979bc4ac44efb14128dc82d521f3
#: ../../ref/templates/builtins.txt:1412
msgid "``&`` is converted to ``&amp;``"
msgstr ""

# 8eaedb8cbc134581ba63b0a843a40ace
#: ../../ref/templates/builtins.txt:1414
msgid ""
"The escaping is only applied when the string is output, so it does not "
"matter where in a chained sequence of filters you put ``escape``: it will "
"always be applied as though it were the last filter. If you want escaping to "
"be applied immediately, use the :tfilter:`force_escape` filter."
msgstr ""

# f652321ffdfd471aa25fa717a87a2802
#: ../../ref/templates/builtins.txt:1419
msgid ""
"Applying ``escape`` to a variable that would normally have auto-escaping "
"applied to the result will only result in one round of escaping being done. "
"So it is safe to use this function even in auto-escaping environments. If "
"you want multiple escaping passes to be applied, use the :tfilter:"
"`force_escape` filter."
msgstr ""

# 2540fd379ab54579920eba6900b0ebc6
#: ../../ref/templates/builtins.txt:1427
msgid "escapejs"
msgstr ""

# 4ad248ba66a54a0b9d5dc29d06c0faa0
#: ../../ref/templates/builtins.txt:1429
msgid ""
"Escapes characters for use in JavaScript strings. This does *not* make the "
"string safe for use in HTML, but does protect you from syntax errors when "
"using templates to generate JavaScript/JSON."
msgstr ""

# 0d78938207ed4460bede81e733a78857
#: ../../ref/templates/builtins.txt:1437
msgid ""
"If ``value`` is ``\"testing\\r\\njavascript \\'string\" <b>escaping</b>\"``, "
"the output will be ``\"testing\\\\u000D\\\\u000Ajavascript \\\\u0027string\\"
"\\u0022 \\\\u003Cb\\\\u003Eescaping\\\\u003C/b\\\\u003E\"``."
msgstr ""

# 0b26abadd8d849e7964c79d8f3054b10
#: ../../ref/templates/builtins.txt:1443
msgid "filesizeformat"
msgstr ""

# 816c0fa7892a489a8259af398cde06ed
#: ../../ref/templates/builtins.txt:1445
msgid ""
"Formats the value like a 'human-readable' file size (i.e. ``'13 KB'``, "
"``'4.1 MB'``, ``'102 bytes'``, etc)."
msgstr ""

# 53deca5fd64e4044a467bb0ece6987e5
#: ../../ref/templates/builtins.txt:1452
msgid "If ``value`` is 123456789, the output would be ``117.7 MB``."
msgstr ""

# 60b0ae2daa6440f8a6017fcc353a5f82
#: ../../ref/templates/builtins.txt:1458
msgid "File sizes and SI units"
msgstr ""

# 601dd0283a7545aba08e13556f27da1b
#: ../../ref/templates/builtins.txt:1460
msgid ""
"Strictly speaking, ``filesizeformat`` does not conform to the International "
"System of Units which recommends using KiB, MiB, GiB, etc. when byte sizes "
"are calculated in powers of 1024 (which is the case here). Instead, Django "
"uses traditional unit names (KB, MB, GB, etc.) corresponding to names that "
"are more commonly used."
msgstr ""

# f9d8968ffe4f4d00b6a8f83db4718d13
#: ../../ref/templates/builtins.txt:1465
msgid "first"
msgstr ""

# 2196f15d922d4a2d9d5209ee48fbb1ca
#: ../../ref/templates/builtins.txt:1467
msgid "Returns the first item in a list."
msgstr ""

# e038a0096ffb4b7a8abd07b7f8ad49a2
#: ../../ref/templates/builtins.txt:1473
msgid ""
"If ``value`` is the list ``['a', 'b', 'c']``, the output will be ``'a'``."
msgstr ""

# c8e3257e501f440a9b712a237e0e3167
#: ../../ref/templates/builtins.txt:1478
msgid "fix_ampersands"
msgstr ""

# 414f4511dfc343e1b24cf24375909122
#: ../../ref/templates/builtins.txt:1482
msgid ""
"This is rarely useful as ampersands are automatically escaped. See :tfilter:"
"`escape` for more information."
msgstr ""

# 536685495b634d8fa144543860bf4a3c
#: ../../ref/templates/builtins.txt:1485
msgid "Replaces ampersands with ``&amp;`` entities."
msgstr ""

# 0f4f5c5151b04b7295fbee409959ea63
#: ../../ref/templates/builtins.txt:1491
msgid ""
"If ``value`` is ``Tom & Jerry``, the output will be ``Tom &amp; Jerry``."
msgstr ""

# c81dc5c0421b44408405e6dd3a9c583a
#: ../../ref/templates/builtins.txt:1493
msgid ""
"However, ampersands used in named entities and numeric character references "
"will not be replaced. For example, if ``value`` is ``Caf&eacute;``, the "
"output will *not* be ``Caf&amp;eacute;`` but remain ``Caf&eacute;``. This "
"means that in some edge cases, such as acronyms followed by semicolons, this "
"filter will not replace ampersands that need replacing. For example, if "
"``value`` is ``Contact the R&D;``, the output will remain unchanged because "
"``&D;`` resembles a named entity."
msgstr ""

# 297a0a696cd547afaaadde91f5d83ef3
#: ../../ref/templates/builtins.txt:1504
msgid "floatformat"
msgstr ""

# 5426c36f211e4e5ab255a0f058091856
#: ../../ref/templates/builtins.txt:1506
msgid ""
"When used without an argument, rounds a floating-point number to one decimal "
"place -- but only if there's a decimal part to be displayed. For example:"
msgstr ""

# 439bfbee99534741b61dbc42f48fbbe3
# e21857eb92574b4eb113dc0fc9e9ece2
# b1ce388e8af54f9298a9fcbb2df54378
# a530ff504e7b4617a76279d4190fbbaa
#: ../../ref/templates/builtins.txt:1510 ../../ref/templates/builtins.txt:1521
#: ../../ref/templates/builtins.txt:1532 ../../ref/templates/builtins.txt:1544
msgid "Output"
msgstr ""

# ff770cf70dbe441ca603c6c333597994
# f8695b208abe4aaa944ba617ce7c5d9f
# 087d3c45daf849c68045fc44e716e25a
# 1c142557805346ae88b10d68a1ed3d49
#: ../../ref/templates/builtins.txt:1512 ../../ref/templates/builtins.txt:1523
#: ../../ref/templates/builtins.txt:1534 ../../ref/templates/builtins.txt:1546
msgid "``34.23234``"
msgstr ""

# 78e869ebf78e454a9b1b34fbea5b0440
# 3107676e4a66493c8bbf4da069887a30
# c1e1304ceffe451997ed95489d442722
#: ../../ref/templates/builtins.txt:1512 ../../ref/templates/builtins.txt:1513
#: ../../ref/templates/builtins.txt:1514
msgid "``{{ value|floatformat }}``"
msgstr ""

# b0e616429b8b4011a541c69d0f42877c
#: ../../ref/templates/builtins.txt:1512
msgid "``34.2``"
msgstr ""

# 343b0438aea24cb3ab6b7a2c9799ae8f
# c9c7a967db8f4e14af19f9fe77a1a7ab
# 7c9187d6d35440ba9ca828e32c39ec9f
# 3ecedf2f69454518b06725d40dc9cada
#: ../../ref/templates/builtins.txt:1513 ../../ref/templates/builtins.txt:1524
#: ../../ref/templates/builtins.txt:1535 ../../ref/templates/builtins.txt:1547
msgid "``34.00000``"
msgstr ""

# c6ef60c81ddd4f9083994ba604ea46ab
# adaed790432745a696b8821ac2981f31
# 1a97ec3162104b568d06d498ecbe6558
# d3e9c958893f48d1b778c9db8642ca15
#: ../../ref/templates/builtins.txt:1513 ../../ref/templates/builtins.txt:1534
#: ../../ref/templates/builtins.txt:1535 ../../ref/templates/builtins.txt:1547
msgid "``34``"
msgstr ""

# b09c4bbb27af4a759bf5266ae274c250
# cb44bdc09e7e40a49c276ce98f9b43d1
# 837c5f1b399c4e7b87f033d3d1433673
#: ../../ref/templates/builtins.txt:1514 ../../ref/templates/builtins.txt:1525
#: ../../ref/templates/builtins.txt:1548
msgid "``34.26000``"
msgstr ""

# 57f463457ff548bfacb7877971d8e556
#: ../../ref/templates/builtins.txt:1514
msgid "``34.3``"
msgstr ""

# edf852769ba942d7a27de91f0fb3931e
#: ../../ref/templates/builtins.txt:1517
msgid ""
"If used with a numeric integer argument, ``floatformat`` rounds a number to "
"that many decimal places. For example:"
msgstr ""

# e8b8b60a0b4f4dbb892b03b901d2b0b9
# 36401a56726c4184a762f6267cee67d5
# 8b9a3458d8d446409fc07b598ae7524e
#: ../../ref/templates/builtins.txt:1523 ../../ref/templates/builtins.txt:1524
#: ../../ref/templates/builtins.txt:1525
msgid "``{{ value|floatformat:3 }}``"
msgstr ""

# eef5622018484f3b8ecce9721e4fc4ff
# bf0dc23bc9d743ffa7d8f606f7768cf0
#: ../../ref/templates/builtins.txt:1523 ../../ref/templates/builtins.txt:1546
msgid "``34.232``"
msgstr ""

# 59bca1b7a96f46bdb9e01d4b5088986a
#: ../../ref/templates/builtins.txt:1524
msgid "``34.000``"
msgstr ""

# 9ba25b3d69a349d0b3df5d07d45e2dab
# 3d10edc0bd384050a1cb6705eff6fa5a
#: ../../ref/templates/builtins.txt:1525 ../../ref/templates/builtins.txt:1548
msgid "``34.260``"
msgstr ""

# e836ee4222694d7ab2140c6bd376e6fc
#: ../../ref/templates/builtins.txt:1528
msgid ""
"Particularly useful is passing 0 (zero) as the argument which will round the "
"float to the nearest integer."
msgstr ""

# 2df17cb70c0f4b3ba451612e91c0fd82
# 9b8ea97c3bfc4759b5aad0b5244c3208
# 7b85af8844844e658cd055508622de22
#: ../../ref/templates/builtins.txt:1534 ../../ref/templates/builtins.txt:1535
#: ../../ref/templates/builtins.txt:1536
msgid "``{{ value|floatformat:\"0\" }}``"
msgstr ""

# 2a34d0f894354c598c485017a60e2dc1
#: ../../ref/templates/builtins.txt:1536
msgid "``39.56000``"
msgstr ""

# b769262ab3cd4230b567f389cb085992
#: ../../ref/templates/builtins.txt:1536
msgid "``40``"
msgstr ""

# e02bfd78bada4ef9b74e2ea4bbdc6d26
#: ../../ref/templates/builtins.txt:1539
msgid ""
"If the argument passed to ``floatformat`` is negative, it will round a "
"number to that many decimal places -- but only if there's a decimal part to "
"be displayed. For example:"
msgstr ""

# 421a653e4517424f9febb86e365ed6b7
# 46585336eb65430882b26d8a90b64661
# 96e34eb55b554b15ae0b969b13b9a371
#: ../../ref/templates/builtins.txt:1546 ../../ref/templates/builtins.txt:1547
#: ../../ref/templates/builtins.txt:1548
msgid "``{{ value|floatformat:\"-3\" }}``"
msgstr ""

# e1250afecfe3440a9864c02d167ebe62
#: ../../ref/templates/builtins.txt:1551
msgid ""
"Using ``floatformat`` with no argument is equivalent to using "
"``floatformat`` with an argument of ``-1``."
msgstr ""

# 8aa9bf201fc248709b0c4217aa0bcbe7
#: ../../ref/templates/builtins.txt:1557
msgid "force_escape"
msgstr ""

# d7bdbd9c341f4ecfb92fb224bc3c5e94
#: ../../ref/templates/builtins.txt:1559
msgid ""
"Applies HTML escaping to a string (see the :tfilter:`escape` filter for "
"details). This filter is applied *immediately* and returns a new, escaped "
"string. This is useful in the rare cases where you need multiple escaping or "
"want to apply other filters to the escaped results. Normally, you want to "
"use the :tfilter:`escape` filter."
msgstr ""

# 9cb9b92e793543d6bf08476728dce08a
#: ../../ref/templates/builtins.txt:1568
msgid "get_digit"
msgstr ""

# e88e50b9635d45faaec91af584dcb701
#: ../../ref/templates/builtins.txt:1570
msgid ""
"Given a whole number, returns the requested digit, where 1 is the right-most "
"digit, 2 is the second-right-most digit, etc. Returns the original value for "
"invalid input (if input or argument is not an integer, or if argument is "
"less than 1). Otherwise, output is always an integer."
msgstr ""

# 60c929ef7c1d41ba9fcaffef7329c10c
#: ../../ref/templates/builtins.txt:1579
msgid "If ``value`` is ``123456789``, the output will be ``8``."
msgstr ""

# db243463151c420db2e5e54114bb175f
#: ../../ref/templates/builtins.txt:1584
msgid "iriencode"
msgstr ""

# 524939abc78f4df09bc4f2b3cf2d3945
#: ../../ref/templates/builtins.txt:1586
msgid ""
"Converts an IRI (Internationalized Resource Identifier) to a string that is "
"suitable for including in a URL. This is necessary if you're trying to use "
"strings containing non-ASCII characters in a URL."
msgstr ""

# 9d7224a51b0a4726874f0665cb4ff259
#: ../../ref/templates/builtins.txt:1590
msgid ""
"It's safe to use this filter on a string that has already gone through the :"
"tfilter:`urlencode` filter."
msgstr ""

# babd1a36c4c9404f9fe2d1a67651d842
#: ../../ref/templates/builtins.txt:1597
msgid ""
"If ``value`` is ``\"?test=1&me=2\"``, the output will be ``\"?test=1&amp;"
"me=2\"``."
msgstr ""

# 70637dc7bb784a458bbc9ab3b5d882c3
#: ../../ref/templates/builtins.txt:1602
msgid "join"
msgstr ""

# 17bac6f47e9541d7954f87eabb394f53
#: ../../ref/templates/builtins.txt:1604
msgid "Joins a list with a string, like Python's ``str.join(list)``"
msgstr ""

# 16263e19706a4654be9713b9832b7357
#: ../../ref/templates/builtins.txt:1610
msgid ""
"If ``value`` is the list ``['a', 'b', 'c']``, the output will be the string "
"``\"a // b // c\"``."
msgstr ""

# 25ac8dbc1c85411ea1b781ab769ef44b
#: ../../ref/templates/builtins.txt:1616
msgid "last"
msgstr ""

# 74887b6a59ca4486b6162184b6b7b4f5
#: ../../ref/templates/builtins.txt:1618
msgid "Returns the last item in a list."
msgstr ""

# 318d68d46b3e447f8aa82097392a466f
#: ../../ref/templates/builtins.txt:1624
msgid ""
"If ``value`` is the list ``['a', 'b', 'c', 'd']``, the output will be the "
"string ``\"d\"``."
msgstr ""

# 974af39614634cbda5caccd19bd508a2
#: ../../ref/templates/builtins.txt:1630
msgid "length"
msgstr ""

# f8259389df8a4ba292793dde5a737b8a
#: ../../ref/templates/builtins.txt:1632
msgid "Returns the length of the value. This works for both strings and lists."
msgstr ""

# 2112c15487ee4cffbdb284c878eb18c9
#: ../../ref/templates/builtins.txt:1638
msgid "If ``value`` is ``['a', 'b', 'c', 'd']``, the output will be ``4``."
msgstr ""

# 9d7a8c256d1a4bb3b7ebf5c15774fd50
#: ../../ref/templates/builtins.txt:1643
msgid "length_is"
msgstr ""

# c7079af962f1400a9e54b6a88848d160
#: ../../ref/templates/builtins.txt:1645
msgid ""
"Returns ``True`` if the value's length is the argument, or ``False`` "
"otherwise."
msgstr ""

# 38f933bf3fd0444d885dd8400e11b7cb
#: ../../ref/templates/builtins.txt:1651
msgid "If ``value`` is ``['a', 'b', 'c', 'd']``, the output will be ``True``."
msgstr ""

# e0815819bc304e11b988d09125639c10
#: ../../ref/templates/builtins.txt:1656
msgid "linebreaks"
msgstr ""

# f69cda5fa0094c62947987806d3f5120
#: ../../ref/templates/builtins.txt:1658
msgid ""
"Replaces line breaks in plain text with appropriate HTML; a single newline "
"becomes an HTML line break (``<br />``) and a new line followed by a blank "
"line becomes a paragraph break (``</p>``)."
msgstr ""

# 4a91d535140141558ea61ab171c17070
#: ../../ref/templates/builtins.txt:1666
msgid ""
"If ``value`` is ``Joel\\nis a slug``, the output will be ``<p>Joel<br />is a "
"slug</p>``."
msgstr ""

# 8ab16cfdc4994120a4bc2eec83f7c59e
#: ../../ref/templates/builtins.txt:1672
msgid "linebreaksbr"
msgstr ""

# 0ca1635bc22847e78964e0636a1cd5d4
#: ../../ref/templates/builtins.txt:1674
msgid ""
"Converts all newlines in a piece of plain text to HTML line breaks (``<br /"
">``)."
msgstr ""

# 1024a7e68af84e4db11fd612d4f8d49e
#: ../../ref/templates/builtins.txt:1681
msgid ""
"If ``value`` is ``Joel\\nis a slug``, the output will be ``Joel<br />is a "
"slug``."
msgstr ""

# e29244edde04444a86f7547a3e8ae8e1
#: ../../ref/templates/builtins.txt:1687
msgid "linenumbers"
msgstr ""

# 47292d0830fb455c96e9b99b0e1dbe2e
#: ../../ref/templates/builtins.txt:1689
msgid "Displays text with line numbers."
msgstr ""

# f8fd35cf893342b5af46b02027843b33
#: ../../ref/templates/builtins.txt:1695
msgid "If ``value`` is::"
msgstr ""

# 47c57f8d7af746e3b53f02a0343b5b79
#: ../../ref/templates/builtins.txt:1701
msgid "the output will be::"
msgstr ""

# 098ec2fc5a0e49498825b9ed7da7e85c
#: ../../ref/templates/builtins.txt:1710
msgid "ljust"
msgstr ""

# 8db482fe3f2942eaa84c01f484d2581c
#: ../../ref/templates/builtins.txt:1712
msgid "Left-aligns the value in a field of a given width."
msgstr ""

# 3f3d1b243ce44cb0bcd6f25a3a778858
# 0bd4dcabc1a1476aa80cface50a97c6e
#: ../../ref/templates/builtins.txt:1714 ../../ref/templates/builtins.txt:1847
msgid "**Argument:** field size"
msgstr ""

# 091f98c926574014b633e3cfeaa63ed5
#: ../../ref/templates/builtins.txt:1720
msgid "If ``value`` is ``Django``, the output will be ``\"Django    \"``."
msgstr ""

# 97cd5f1ef95e45a6a9a40d7a4fedf1a7
#: ../../ref/templates/builtins.txt:1725
msgid "lower"
msgstr ""

# 8aeb3e514d0e471ea1361393bc852a85
#: ../../ref/templates/builtins.txt:1727
msgid "Converts a string into all lowercase."
msgstr ""

# 9702d7d9dd8b407cbcfed9a5ca998e97
#: ../../ref/templates/builtins.txt:1733
msgid ""
"If ``value`` is ``Still MAD At Yoko``, the output will be ``still mad at "
"yoko``."
msgstr ""

# 70834c43e46f4df2a3312b68bb1b1427
#: ../../ref/templates/builtins.txt:1739
msgid "make_list"
msgstr ""

# 9151492cb95649138aaa904a0b9fe09c
#: ../../ref/templates/builtins.txt:1741
msgid ""
"Returns the value turned into a list. For a string, it's a list of "
"characters. For an integer, the argument is cast into an unicode string "
"before creating a list."
msgstr ""

# 8433210d1521493d934f126fb31c2c5a
#: ../../ref/templates/builtins.txt:1749
msgid ""
"If ``value`` is the string ``\"Joel\"``, the output would be the list "
"``[u'J', u'o', u'e', u'l']``. If ``value`` is ``123``, the output will be "
"the list ``[u'1', u'2', u'3']``."
msgstr ""

# 043bb617673d4b4a9a7e1556976bb647
#: ../../ref/templates/builtins.txt:1756
msgid "phone2numeric"
msgstr ""

# ff80670e8f714f11a1700d7699566610
#: ../../ref/templates/builtins.txt:1758
msgid ""
"Converts a phone number (possibly containing letters) to its numerical "
"equivalent."
msgstr ""

# 2d4202d1159e407590c6c3711de18210
#: ../../ref/templates/builtins.txt:1761
msgid ""
"The input doesn't have to be a valid phone number. This will happily convert "
"any string."
msgstr ""

# 23ed68d4052d40478f8d0a09ad89a653
#: ../../ref/templates/builtins.txt:1768
msgid "If ``value`` is ``800-COLLECT``, the output will be ``800-2655328``."
msgstr ""

# 0f932d2fb19842b28b862f38e7c694fe
#: ../../ref/templates/builtins.txt:1773
msgid "pluralize"
msgstr ""

# 022967654ae04c579e00eaf35aca3ab2
#: ../../ref/templates/builtins.txt:1775
msgid ""
"Returns a plural suffix if the value is not 1. By default, this suffix is "
"``'s'``."
msgstr ""

# e3afc0e1e609456892e4afcf158e4bb3
#: ../../ref/templates/builtins.txt:1782
msgid ""
"If ``num_messages`` is ``1``, the output will be ``You have 1 message.`` If "
"``num_messages`` is ``2``  the output will be ``You have 2 messages.``"
msgstr ""

# 264f1dc9ea614fe598a3249030826deb
#: ../../ref/templates/builtins.txt:1785
msgid ""
"For words that require a suffix other than ``'s'``, you can provide an "
"alternate suffix as a parameter to the filter."
msgstr ""

# 21804b7d023c40b18107670c0f773566
#: ../../ref/templates/builtins.txt:1792
msgid ""
"For words that don't pluralize by simple suffix, you can specify both a "
"singular and plural suffix, separated by a comma."
msgstr ""

# e303292a445d4df18c5c57a73a236fc6
#: ../../ref/templates/builtins.txt:1799
msgid "Use :ttag:`blocktrans` to pluralize translated strings."
msgstr ""

# 1a5ef99a53754646b0e1433acf122c8d
#: ../../ref/templates/builtins.txt:1804
msgid "pprint"
msgstr ""

# 6b1d865b53bf4956b9ab9414dc996bbb
#: ../../ref/templates/builtins.txt:1806
msgid "A wrapper around :func:`pprint.pprint` -- for debugging, really."
msgstr ""

# 7fff3361e0734795b52d712c0bc8998f
#: ../../ref/templates/builtins.txt:1811
msgid "random"
msgstr ""

# f009a934fb444518a704bda035f601b3
#: ../../ref/templates/builtins.txt:1813
msgid "Returns a random item from the given list."
msgstr ""

# 5fa4830bc7d44449b8f90c93203c5dfd
#: ../../ref/templates/builtins.txt:1819
msgid ""
"If ``value`` is the list ``['a', 'b', 'c', 'd']``, the output could be ``\"b"
"\"``."
msgstr ""

# 0e8752328ce848e3811c773d2c14ed0a
#: ../../ref/templates/builtins.txt:1824
msgid "removetags"
msgstr ""

# 433865e0af5949aaae35dd95db905049
#: ../../ref/templates/builtins.txt:1826
msgid "Removes a space-separated list of [X]HTML tags from the output."
msgstr ""

# 8fce60c5e9ed48afa8b90faaf3b30f47
#: ../../ref/templates/builtins.txt:1832
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"`` "
"the output will be ``\"Joel <button>is</button> a slug\"``."
msgstr ""

# e9a6173c76854b2083c4b1f713b06b48
# 766cac3ee8964aaeaa60c700dc44b6a6
#: ../../ref/templates/builtins.txt:1835 ../../ref/utils.txt:582
msgid "Note that this filter is case-sensitive."
msgstr ""

# 610a3d9e237b49d19d375749f25a2e3c
#: ../../ref/templates/builtins.txt:1837
msgid ""
"If ``value`` is ``\"<B>Joel</B> <button>is</button> a <span>slug</span>\"`` "
"the output will be ``\"<B>Joel</B> <button>is</button> a slug\"``."
msgstr ""

# 8fbf3788434549c4b5fb04a162f7dfa7
#: ../../ref/templates/builtins.txt:1843
msgid "rjust"
msgstr ""

# 2c0fdf5f88714d219a31e2c29f6af977
#: ../../ref/templates/builtins.txt:1845
msgid "Right-aligns the value in a field of a given width."
msgstr ""

# 27135655a2e84397a703accb3bcaf275
#: ../../ref/templates/builtins.txt:1853
msgid "If ``value`` is ``Django``, the output will be ``\"    Django\"``."
msgstr ""

# 98920a82febf491094aa657f206ad96c
#: ../../ref/templates/builtins.txt:1858
msgid "safe"
msgstr ""

# cb269b818783414cb010f320ebd52ae1
#: ../../ref/templates/builtins.txt:1860
msgid ""
"Marks a string as not requiring further HTML escaping prior to output. When "
"autoescaping is off, this filter has no effect."
msgstr ""

# b0eac7aa960840588bce500fd88a959c
#: ../../ref/templates/builtins.txt:1865
msgid ""
"If you are chaining filters, a filter applied after ``safe`` can make the "
"contents unsafe again. For example, the following code prints the variable "
"as is, unescaped:"
msgstr ""

# 604f612d49f543df9a7645f37f5f0386
#: ../../ref/templates/builtins.txt:1876
msgid "safeseq"
msgstr ""

# e4f0770f770048f4a92918ebd7da04b4
#: ../../ref/templates/builtins.txt:1878
msgid ""
"Applies the :tfilter:`safe` filter to each element of a sequence.  Useful in "
"conjunction with other filters that operate on sequences, such as :tfilter:"
"`join`.  For example::"
msgstr ""

# eb8162c8950848dd866f3bd06465052e
#: ../../ref/templates/builtins.txt:1884
msgid ""
"You couldn't use the :tfilter:`safe` filter directly in this case, as it "
"would first convert the variable into a string, rather than working with the "
"individual elements of the sequence."
msgstr ""

# 22be81ceaaf941e6994791d3176d3d24
#: ../../ref/templates/builtins.txt:1891
msgid "slice"
msgstr ""

# 7542352979874327af4ac2386b47d945
#: ../../ref/templates/builtins.txt:1893
msgid "Returns a slice of the list."
msgstr ""

# 1c2a34574d724d159404089cb9811a46
#: ../../ref/templates/builtins.txt:1895
msgid ""
"Uses the same syntax as Python's list slicing. See http://diveintopython.net/"
"native_data_types/lists.html#odbchelper.list.slice for an introduction."
msgstr ""

# 8f14b3a76a7b42899b94213b1cdd9241
#: ../../ref/templates/builtins.txt:1903
msgid ""
"If ``some_list`` is ``['a', 'b', 'c']``, the output will be ``['a', 'b']``."
msgstr ""

# 4a170a5efa494f4cb0c79c560ac8e45b
#: ../../ref/templates/builtins.txt:1908
msgid "slugify"
msgstr ""

# 7e9b6c310421469ea61924667efbb993
# 5ad3c24561804626a76bc78e043a32d5
#: ../../ref/templates/builtins.txt:1910 ../../ref/utils.txt:707
msgid ""
"Converts to lowercase, removes non-word characters (alphanumerics and "
"underscores) and converts spaces to hyphens. Also strips leading and "
"trailing whitespace."
msgstr ""

# 27d1f234f6594e70a1166e8a79b30cde
# 1b6382de214b45cfa4e75b8efb90eb72
#: ../../ref/templates/builtins.txt:1918 ../../ref/utils.txt:715
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"joel-is-a-slug"
"\"``."
msgstr ""

# 240b15ec796b4af3a7fd99a0ef432dec
#: ../../ref/templates/builtins.txt:1923
msgid "stringformat"
msgstr ""

# f443d6a098d942b7b5f72e43131c293b
#: ../../ref/templates/builtins.txt:1925
msgid ""
"Formats the variable according to the argument, a string formatting "
"specifier. This specifier uses Python string formatting syntax, with the "
"exception that the leading \"%\" is dropped."
msgstr ""

# 52a2dd5a799b46a9960feaff5cd230ca
#: ../../ref/templates/builtins.txt:1929
msgid ""
"See http://docs.python.org/library/stdtypes.html#string-formatting-"
"operations for documentation of Python string formatting"
msgstr ""

# 3bf6ddc34e79489780cc18246a7ae791
#: ../../ref/templates/builtins.txt:1936
msgid "If ``value`` is ``10``, the output will be ``1.000000E+01``."
msgstr ""

# 767b17247363459bb50a7d8707b41d6c
#: ../../ref/templates/builtins.txt:1941
msgid "striptags"
msgstr ""

# cc7c2389778c4ffca205361f598629e9
#: ../../ref/templates/builtins.txt:1943
msgid "Strips all [X]HTML tags."
msgstr ""

# b377ed0c0b584d928b4f552beebf6f85
#: ../../ref/templates/builtins.txt:1949
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"``, "
"the output will be ``\"Joel is a slug\"``."
msgstr ""

# baa1085f74e14bb6bd283f173b755006
#: ../../ref/templates/builtins.txt:1955
msgid "time"
msgstr ""

# 56a1307386194ea491b64cf65afcda8c
#: ../../ref/templates/builtins.txt:1957
msgid "Formats a time according to the given format."
msgstr ""

# 5eb2bae689ad4cf6abf2303f3329bf19
#: ../../ref/templates/builtins.txt:1959
msgid ""
"Given format can be the predefined one :setting:`TIME_FORMAT`, or a custom "
"format, same as the :tfilter:`date` filter. Note that the predefined format "
"is locale-dependant."
msgstr ""

# ec603b0094b7404990012253a161596d
#: ../../ref/templates/builtins.txt:1963
msgid ""
"The time filter will only accept parameters in the format string that relate "
"to the time of day, not the date (for obvious reasons). If you need to "
"format a date, use the :tfilter:`date` filter."
msgstr ""

# ed52e523c520478ba606bdfdc96783aa
#: ../../ref/templates/builtins.txt:1971
msgid ""
"If ``value`` is equivalent to ``datetime.datetime.now()``, the output will "
"be the string ``\"01:23\"``."
msgstr ""

# a816b95677fd4d05b01f71d8093df160
#: ../../ref/templates/builtins.txt:1974
msgid "Another example:"
msgstr ""

# c3cf4c62b3934078a31ad6a1fcda578d
#: ../../ref/templates/builtins.txt:1976
msgid ""
"Assuming that :setting:`USE_L10N` is ``True`` and :setting:`LANGUAGE_CODE` "
"is, for example, ``\"de\"``, then for::"
msgstr ""

# c13546eb39b44c1894239c5d1c0af856
#: ../../ref/templates/builtins.txt:1981
msgid ""
"the output will be the string ``\"01:23:00\"`` (The ``\"TIME_FORMAT\"`` "
"format specifier for the ``de`` locale as shipped with Django is ``\"H:i:s"
"\"``)."
msgstr ""

# 033a061b98e5473399beb65f26772578
#: ../../ref/templates/builtins.txt:1988
msgid ""
"...the formatting string defined in the :setting:`TIME_FORMAT` setting will "
"be used, without applying any localization."
msgstr ""

# ac599ed850c2446e8792c8977c37c1d4
#: ../../ref/templates/builtins.txt:1994
msgid "timesince"
msgstr ""

# 1c4989c1f8d340c4bb9a6193a4bbc569
#: ../../ref/templates/builtins.txt:1996
msgid "Formats a date as the time since that date (e.g., \"4 days, 6 hours\")."
msgstr ""

# 18c3000d678d4e9bacff40e0dc8b62d0
#: ../../ref/templates/builtins.txt:1998
msgid ""
"Takes an optional argument that is a variable containing the date to use as "
"the comparison point (without the argument, the comparison point is *now*). "
"For example, if ``blog_date`` is a date instance representing midnight on 1 "
"June 2006, and ``comment_date`` is a date instance for 08:00 on 1 June 2006, "
"then ``{{ blog_date|timesince:comment_date }}`` would return \"8 hours\"."
msgstr ""

# a4233ee8a42e4d2993982b1b289e24d0
# 34cfc30b9f1f486688f2d227f54fbe47
#: ../../ref/templates/builtins.txt:2004 ../../ref/templates/builtins.txt:2023
msgid ""
"Comparing offset-naive and offset-aware datetimes will return an empty "
"string."
msgstr ""

# fd54f4bfaebd466aa8bb218cee2e76d6
#: ../../ref/templates/builtins.txt:2006
msgid ""
"Minutes is the smallest unit used, and \"0 minutes\" will be returned for "
"any date that is in the future relative to the comparison point."
msgstr ""

# 6c15709f8bd14c849484cc1017178e0c
#: ../../ref/templates/builtins.txt:2012
msgid "timeuntil"
msgstr ""

# a8b4b5ae7d784d40960035ad02132ffa
#: ../../ref/templates/builtins.txt:2014
msgid ""
"Similar to ``timesince``, except that it measures the time from now until "
"the given date or datetime. For example, if today is 1 June 2006 and "
"``conference_date`` is a date instance holding 29 June 2006, then "
"``{{ conference_date|timeuntil }}`` will return \"4 weeks\"."
msgstr ""

# cf418e7245c34955b6fe49917bf3bcfc
#: ../../ref/templates/builtins.txt:2019
msgid ""
"Takes an optional argument that is a variable containing the date to use as "
"the comparison point (instead of *now*). If ``from_date`` contains 22 June "
"2006, then ``{{ conference_date|timeuntil:from_date }}`` will return \"1 week"
"\"."
msgstr ""

# 83bbaaf9c4f643868eab52480f65b3e9
#: ../../ref/templates/builtins.txt:2025
msgid ""
"Minutes is the smallest unit used, and \"0 minutes\" will be returned for "
"any date that is in the past relative to the comparison point."
msgstr ""

# 84febd040d754a4e8ceb65e7500c8de0
#: ../../ref/templates/builtins.txt:2031
msgid "title"
msgstr ""

# 1a0a4595c8ae4d50a5e42ebbcb077232
#: ../../ref/templates/builtins.txt:2033
msgid "Converts a string into titlecase."
msgstr ""

# 2742d09d40244080ac79737c93d32f55
#: ../../ref/templates/builtins.txt:2039
msgid ""
"If ``value`` is ``\"my first post\"``, the output will be ``\"My First Post"
"\"``."
msgstr ""

# 728c3876f3c94bd1b2239f81c39a8ddd
#: ../../ref/templates/builtins.txt:2044
msgid "truncatechars"
msgstr ""

# 0d59824ebd8e43a786fbed195b728ef7
#: ../../ref/templates/builtins.txt:2048
msgid ""
"Truncates a string if it is longer than the specified number of characters. "
"Truncated strings will end with a translatable ellipsis sequence (\"...\")."
msgstr ""

# 24a65393637c43009cb18375391cb4d2
#: ../../ref/templates/builtins.txt:2051
msgid "**Argument:** Number of characters to truncate to"
msgstr ""

# 56a26a296aea4d41a6d2b85926cd8ff7
#: ../../ref/templates/builtins.txt:2057
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"Joel i...\"``."
msgstr ""

# fa36cc5539264d918077078c9ee953f3
#: ../../ref/templates/builtins.txt:2062
msgid "truncatewords"
msgstr ""

# 57e6589b0a5b48079ef4087e5c683fc2
#: ../../ref/templates/builtins.txt:2064
msgid "Truncates a string after a certain number of words."
msgstr ""

# 466bff2197444f38a67c6d15399e02f9
#: ../../ref/templates/builtins.txt:2066
msgid "**Argument:** Number of words to truncate after"
msgstr ""

# 879962e513314e5c8ae9b03a4ad5ded7
#: ../../ref/templates/builtins.txt:2072
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"Joel is ..."
"\"``."
msgstr ""

# fbba6a4e6ae9412fa10d98fa85c47c12
#: ../../ref/templates/builtins.txt:2074
msgid "Newlines within the string will be removed."
msgstr ""

# 02ef6449d1964c358ca95f20028fab9a
#: ../../ref/templates/builtins.txt:2079
msgid "truncatewords_html"
msgstr ""

# 255de1c1cfb54252bc44d1b3fa88bc41
#: ../../ref/templates/builtins.txt:2081
msgid ""
"Similar to :tfilter:`truncatewords`, except that it is aware of HTML tags. "
"Any tags that are opened in the string and not closed before the truncation "
"point, are closed immediately after the truncation."
msgstr ""

# 68066d04d1a347c0b11b8e85c9692302
#: ../../ref/templates/builtins.txt:2085
msgid ""
"This is less efficient than :tfilter:`truncatewords`, so should only be used "
"when it is being passed HTML text."
msgstr ""

# 9bcbb79e34954b8cb0b0527424618899
#: ../../ref/templates/builtins.txt:2092
msgid ""
"If ``value`` is ``\"<p>Joel is a slug</p>\"``, the output will be ``"
"\"<p>Joel is ...</p>\"``."
msgstr ""

# 0f16b2db249a4e519ff6890bdcc478af
#: ../../ref/templates/builtins.txt:2095
msgid "Newlines in the HTML content will be preserved."
msgstr ""

# 9f1f376dead0448c988503f8a4194c4a
#: ../../ref/templates/builtins.txt:2100
msgid "unordered_list"
msgstr ""

# 8c5369bd8fd042be9a8739cc409a8799
#: ../../ref/templates/builtins.txt:2102
msgid ""
"Recursively takes a self-nested list and returns an HTML unordered list -- "
"WITHOUT opening and closing <ul> tags."
msgstr ""

# c75154ed73f14e4dae36a52b22a43b05
#: ../../ref/templates/builtins.txt:2105
msgid ""
"The list is assumed to be in the proper format. For example, if ``var`` "
"contains ``['States', ['Kansas', ['Lawrence', 'Topeka'], 'Illinois']]``, "
"then ``{{ var|unordered_list }}`` would return::"
msgstr ""

# b915863e51e241519959e6bf98f5f2fe
#: ../../ref/templates/builtins.txt:2121
msgid ""
"Note: An older, more restrictive and verbose input format is also supported: "
"``['States', [['Kansas', [['Lawrence', []], ['Topeka', []]]], ['Illinois', "
"[]]]]``,"
msgstr ""

# 109e0a517b314ee7999a951f5076c556
#: ../../ref/templates/builtins.txt:2127
msgid "upper"
msgstr ""

# 165ef38aff984ad7b45757171febef40
#: ../../ref/templates/builtins.txt:2129
msgid "Converts a string into all uppercase."
msgstr ""

# 4a2d02fa272d474c9d034d1a1f3d68d9
#: ../../ref/templates/builtins.txt:2135
msgid ""
"If ``value`` is ``\"Joel is a slug\"``, the output will be ``\"JOEL IS A SLUG"
"\"``."
msgstr ""

# 3eafcf8ef9ad4489b07b1299a661989d
#: ../../ref/templates/builtins.txt:2140
msgid "urlencode"
msgstr ""

# 5587b5466d9842a28f821b85153b2557
#: ../../ref/templates/builtins.txt:2142
msgid "Escapes a value for use in a URL."
msgstr ""

# 79fd792c090847b8bf4e6a2581779d9d
#: ../../ref/templates/builtins.txt:2148
msgid ""
"If ``value`` is ``\"http://www.example.org/foo?a=b&c=d\"``, the output will "
"be ``\"http%3A//www.example.org/foo%3Fa%3Db%26c%3Dd\"``."
msgstr ""

# 48c29b8eb94d4a5ca26b96c438fe8d1d
#: ../../ref/templates/builtins.txt:2151
msgid ""
"An optional argument containing the characters which should not be escaped "
"can be provided."
msgstr ""

# e22014c91e584a468317c526afea66d8
#: ../../ref/templates/builtins.txt:2154
msgid ""
"If not provided, the '/' character is assumed safe. An empty string can be "
"provided when *all* characters should be escaped. For example::"
msgstr ""

# 3f8c169e44434adba77d169c2d5f1db2
#: ../../ref/templates/builtins.txt:2159
msgid ""
"If ``value`` is ``\"http://www.example.org/\"``, the output will be ``\"http"
"%3A%2F%2Fwww.example.org%2F\"``."
msgstr ""

# faaa166a7baa4ead91bd7946153ca957
#: ../../ref/templates/builtins.txt:2165
msgid "urlize"
msgstr ""

# 67e6648d82ad4827b4e184102dd3e481
#: ../../ref/templates/builtins.txt:2171
msgid "Converts URLs and email addresses in text into clickable links."
msgstr ""

# 098bb9e4852f4988aa59f8f1bbbc55ad
#: ../../ref/templates/builtins.txt:2169
msgid ""
"This template tag works on links prefixed with ``http://``, ``https://``, or "
"``www.``. For example, ``http://goo.gl/aia1t`` will get converted but ``goo."
"gl/aia1t`` won't."
msgstr ""

# 1ffe19ad7f1f4eb09818c57feee7e4b0
#: ../../ref/templates/builtins.txt:2173
msgid ""
"It also supports domain-only links ending in one of the original top level "
"domains (``.com``, ``.edu``, ``.gov``, ``.int``, ``.mil``, ``.net``, and ``."
"org``). For example, ``djangoproject.com`` gets converted."
msgstr ""

# 105db62d733a4402b5efc56da057f861
#: ../../ref/templates/builtins.txt:2179
msgid ""
"Until Django 1.4, only the ``.com``, ``.net`` and ``.org`` suffixes were "
"supported for domain-only links."
msgstr ""

# 5c1f23e034cf4ab0980ed9cb907c8407
#: ../../ref/templates/builtins.txt:2182
msgid ""
"Links can have trailing punctuation (periods, commas, close-parens) and "
"leading punctuation (opening parens), and ``urlize`` will still do the right "
"thing."
msgstr ""

# 20470b6b0da54507b7cf712a20773a6b
#: ../../ref/templates/builtins.txt:2185
msgid ""
"Links generated by ``urlize`` have a ``rel=\"nofollow\"`` attribute added to "
"them."
msgstr ""

# 8aa0bfb67205469aa46b317707717baa
#: ../../ref/templates/builtins.txt:2192
msgid ""
"If ``value`` is ``\"Check out www.djangoproject.com\"``, the output will be "
"``\"Check out <a href=\"http://www.djangoproject.com\" rel=\"nofollow\">www."
"djangoproject.com</a>\"``."
msgstr ""

# daf9bb76a8ad4adda64a0b6d5df888b5
#: ../../ref/templates/builtins.txt:2200
msgid ""
"In addition to web links, ``urlize`` also converts email addresses into "
"``mailto:`` links. If ``value`` is ``\"Send questions to foo@example.com"
"\"``, the output will be ``\"Send questions to <a href=\"mailto:foo@example."
"com\">foo@example</a>\"``."
msgstr ""

# be542174ce12458ababbc6f8239773a2
#: ../../ref/templates/builtins.txt:2205
msgid ""
"The ``urlize`` filter also takes an optional parameter ``autoescape``. If "
"``autoescape`` is ``True``, the link text and URLs will be escaped using "
"Django's built-in :tfilter:`escape` filter. The default value for "
"``autoescape`` is ``True``."
msgstr ""

# 8d33c5c9f5b743fd8ed268487d8a0fea
#: ../../ref/templates/builtins.txt:2203
msgid ""
"If ``urlize`` is applied to text that already contains HTML markup, things "
"won't work as expected. Apply this filter only to plain text."
msgstr ""

# d80c25b908ca4886ba4fdcb9af96a0c9
#: ../../ref/templates/builtins.txt:2209
msgid "urlizetrunc"
msgstr ""

# ae7556003c804786b171d5cfae9efdff
#: ../../ref/templates/builtins.txt:2220
msgid ""
"Converts URLs and email addresses into clickable links just like urlize_, "
"but truncates URLs longer than the given character limit."
msgstr ""

# 3cf1b430b87343499dcc94c1060a6be8
#: ../../ref/templates/builtins.txt:2214
msgid ""
"**Argument:** Number of characters that link text should be truncated to, "
"including the ellipsis that's added if truncation is necessary."
msgstr ""

# 07c5e018f2aa4e458c65f90091ae05f0
#: ../../ref/templates/builtins.txt:2221
msgid ""
"If ``value`` is ``\"Check out www.djangoproject.com\"``, the output would be "
"``'Check out <a href=\"http://www.djangoproject.com\" rel=\"nofollow\">www."
"djangopr...</a>'``."
msgstr ""

# bcb4ea3fa8bc4fb8a3a4d27eae1e742e
#: ../../ref/templates/builtins.txt:2225
msgid "As with urlize_, this filter should only be applied to plain text."
msgstr ""

# e801709c151040c4bde1cfad2e3dbf76
#: ../../ref/templates/builtins.txt:2230
msgid "wordcount"
msgstr ""

# 0b8585bb3963496895f6c5d58d02b785
#: ../../ref/templates/builtins.txt:2232
msgid "Returns the number of words."
msgstr ""

# 7df5d5ba60ab4a65a11d21ab05c64603
#: ../../ref/templates/builtins.txt:2238
msgid "If ``value`` is ``\"Joel is a slug\"``, the output will be ``4``."
msgstr ""

# 6095a0a4d5894fd9bc09c75cdd54283b
#: ../../ref/templates/builtins.txt:2243
msgid "wordwrap"
msgstr ""

# 3b9ee83cae97495583df455bf1287d66
#: ../../ref/templates/builtins.txt:2245
msgid "Wraps words at specified line length."
msgstr ""

# 5c1ec7dfcf5546a6838f3d978b0fc32b
#: ../../ref/templates/builtins.txt:2247
msgid "**Argument:** number of characters at which to wrap the text"
msgstr ""

# 30d87a9d5ce94a809dd4cd96f398b7e4
#: ../../ref/templates/builtins.txt:2253
msgid "If ``value`` is ``Joel is a slug``, the output would be::"
msgstr ""

# 1344f5c10e484ca4b31f719efae3f851
#: ../../ref/templates/builtins.txt:2262
msgid "yesno"
msgstr ""

# 60f8bc99968f44cba4c39d16bcd08950
#: ../../ref/templates/builtins.txt:2264
msgid ""
"Maps values for true, false and (optionally) None, to the strings \"yes\", "
"\"no\", \"maybe\", or a custom mapping passed as a comma-separated list, and "
"returns one of those strings according to the value:"
msgstr ""

# 089a3e5708c34c1ba0c7bdc34dbbc397
# 0b4eb2f06e2444b29a413fe7fb65ad52
#: ../../ref/templates/builtins.txt:2275 ../../ref/templates/builtins.txt:2276
msgid "``True``"
msgstr ""

# 2833479f91c6479db9c016d64ae08668
#: ../../ref/templates/builtins.txt:2275
msgid "``yes``"
msgstr ""

# dba74bb1037747b2a2653370bb9b4cb4
# d3129a76f9a74b4aa6540013fc01d60b
# 155d89277e7f4b909226fcf80a66aac3
#: ../../ref/templates/builtins.txt:2276 ../../ref/templates/builtins.txt:2277
#: ../../ref/templates/builtins.txt:2278
msgid "``\"yeah,no,maybe\"``"
msgstr ""

# a604f743de3446909eb9c0aa9c5770c4
#: ../../ref/templates/builtins.txt:2276
msgid "``yeah``"
msgstr ""

# f73eab2ef9714309919fe5d4fae15f42
#: ../../ref/templates/builtins.txt:2277
msgid "``False``"
msgstr ""

# cdb6db091dcb4d3f9dd1c858f4c6a85a
#: ../../ref/templates/builtins.txt:2277
msgid "``no``"
msgstr ""

# 5cab18ad1fd043118ef07b6ca0710ec7
# 972f4968da304ca3ac2cb64c225895e2
#: ../../ref/templates/builtins.txt:2278 ../../ref/templates/builtins.txt:2279
msgid "``None``"
msgstr ""

# c6eea602036b4b248fd52f222c089c60
#: ../../ref/templates/builtins.txt:2278
msgid "``maybe``"
msgstr ""

# 1794d3dedaad4295aac4975f904a8ffd
#: ../../ref/templates/builtins.txt:2279
msgid "``\"yeah,no\"``"
msgstr ""

# c81a5c0b30f2445db80accec230bc24f
#: ../../ref/templates/builtins.txt:2279
msgid "``\"no\"`` (converts None to False if no mapping for None is given)"
msgstr ""

# 140aefcc957f4c24a9deb4d2f94e1c8b
#: ../../ref/templates/builtins.txt:2284
msgid "Internationalization tags and filters"
msgstr ""

# faaf2b760581489abeeabb48de44418c
#: ../../ref/templates/builtins.txt:2286
msgid ""
"Django provides template tags and filters to control each aspect of :doc:"
"`internationalization </topics/i18n/index>` in templates. They allow for "
"granular control of translations, formatting, and time zone conversions."
msgstr ""

# a73a4aa798ca44b3b744dba8e5e148bb
#: ../../ref/templates/builtins.txt:2291
msgid "i18n"
msgstr ""

# 8602cf03602949db8feee5842a3f38cf
#: ../../ref/templates/builtins.txt:2293
msgid ""
"This library allows specifying translatable text in templates. To enable it, "
"set :setting:`USE_I18N` to ``True``, then load it with ``{% load i18n %}``."
msgstr ""

# bea1a3a3185e43dea727a13d775cd90e
#: ../../ref/templates/builtins.txt:2297
msgid "See :ref:`specifying-translation-strings-in-template-code`."
msgstr ""

# 0ae306c5a8154441b293d5cd78a5b295
#: ../../ref/templates/builtins.txt:2300
msgid "l10n"
msgstr ""

# 8783f72961744119b23a0638b0af9119
#: ../../ref/templates/builtins.txt:2302
msgid ""
"This library provides control over the localization of values in templates. "
"You only need to load the library using ``{% load l10n %}``, but you'll "
"often set :setting:`USE_L10N` to ``True`` so that localization is active by "
"default."
msgstr ""

# b34e766d1d844cc48f4121dfa5d5e6bd
#: ../../ref/templates/builtins.txt:2306
msgid "See :ref:`topic-l10n-templates`."
msgstr ""

# 418246f7610d40b698d927a5f0fd044f
#: ../../ref/templates/builtins.txt:2309
msgid "tz"
msgstr ""

# cadb13485e0f46a08a1a34bd5418f99b
#: ../../ref/templates/builtins.txt:2313
msgid ""
"This library provides control over time zone conversions in templates. Like "
"``l10n``, you only need to load the library using ``{% load tz %}``, but "
"you'll usually also set :setting:`USE_TZ` to ``True`` so that conversion to "
"local time happens by default."
msgstr ""

# d4b0964fe959403bb90dff2d4df30865
#: ../../ref/templates/builtins.txt:2318
msgid "See :ref:`time-zones-in-templates`."
msgstr ""

# ffd636f2523d49069ff4b4dc1a8ae32f
#: ../../ref/templates/builtins.txt:2321
msgid "Other tags and filters libraries"
msgstr ""

# 04059808eee54ab9aa069218d423d2b7
#: ../../ref/templates/builtins.txt:2323
msgid ""
"Django comes with a couple of other template-tag libraries that you have to "
"enable explicitly in your :setting:`INSTALLED_APPS` setting and enable in "
"your template with the :ttag:`{% load %}<load>` tag."
msgstr ""

# 3658f6afb62e49b0931304c9f8999fd1
#: ../../ref/templates/builtins.txt:2330
msgid ""
"A set of Django template filters useful for adding a \"human touch\" to "
"data. See :doc:`/ref/contrib/humanize`."
msgstr ""

# d44a8234b3064ad8b88beb9f408fb7bd
#: ../../ref/templates/builtins.txt:2336
msgid ""
"A collection of template filters that implement these common markup "
"languages:"
msgstr ""

# 69b280c934d74533b2a2c8cddd4073ac
#: ../../ref/templates/builtins.txt:2338
msgid "Textile"
msgstr ""

# ec26d3f9896244b696c2baf5b5de9d1a
#: ../../ref/templates/builtins.txt:2340
msgid "reST (reStructuredText)"
msgstr ""

# 63503a67ed9e4094a129abcd725b08f7
#: ../../ref/templates/builtins.txt:2347
msgid ""
"A collection of template tags that can be useful while designing a Web site, "
"such as a generator of Lorem Ipsum text. See :doc:`/ref/contrib/webdesign`."
msgstr ""

# 5be25b5c4ccf4e41939c26209b475aa7
#: ../../ref/templates/builtins.txt:2360
msgid ""
"To link to static files that are saved in :setting:`STATIC_ROOT` Django "
"ships with a :ttag:`static` template tag. You can use this regardless if "
"you're using :class:`~django.template.RequestContext` or not."
msgstr ""

# 25438e0af92e4f928c4e5af27c6379ac
#: ../../ref/templates/builtins.txt:2369
msgid ""
"It is also able to consume standard context variables, e.g. assuming a "
"``user_stylesheet`` variable is passed to the template:"
msgstr ""

# fd7f412dbba945ea9c87802ba7dd918d
#: ../../ref/templates/builtins.txt:2390
msgid ""
"The :mod:`staticfiles<django.contrib.staticfiles>` contrib app also ships "
"with a :ttag:`static template tag<staticfiles-static>` which uses "
"``staticfiles'`` :setting:`STATICFILES_STORAGE` to build the URL of the "
"given path (rather than simply using :func:`urlparse.urljoin` with the :"
"setting:`STATIC_URL` setting and the given path). Use that instead if you "
"have an advanced use case such as :ref:`using a cloud service to serve "
"static files<staticfiles-from-cdn>`::"
msgstr ""

# 179594ff4c1c4a46b5ca2a017bffebc7
#: ../../ref/templates/builtins.txt:2404
msgid "get_static_prefix"
msgstr ""

# 0308f61b46b847c58469f4cb116c3c40
#: ../../ref/templates/builtins.txt:2408
msgid ""
"If you're not using :class:`~django.template.RequestContext`, or if you need "
"more control over exactly where and how :setting:`STATIC_URL` is injected "
"into the template, you can use the :ttag:`get_static_prefix` template tag "
"instead::"
msgstr ""

# 4fbbe2d0c1ee46668975d24ed41abe5b
#: ../../ref/templates/builtins.txt:2416
msgid ""
"There's also a second form you can use to avoid extra processing if you need "
"the value multiple times::"
msgstr ""

# 03b3b54fc9c947bd8dd77da52255dd46
#: ../../ref/templates/builtins.txt:2428
msgid "get_media_prefix"
msgstr ""

# 3fae9183c36a4c0baef93eda5190f364
#: ../../ref/templates/builtins.txt:2432
msgid ""
"Similar to the :ttag:`get_static_prefix`, ``get_media_prefix`` populates a "
"template variable with the media prefix :setting:`MEDIA_URL`, e.g.::"
msgstr ""

# 0d6ac287e63746df9cfabb56efa6f435
#: ../../ref/templates/index.txt:5
msgid ""
"Django's template engine provides a powerful mini-language for defining the "
"user-facing layer of your application, encouraging a clean separation of "
"application and presentation logic. Templates can be maintained by anyone "
"with an understanding of HTML; no knowledge of Python is required."
msgstr ""

# 2ce970d4af7848d790d9aaa5a76b9d22
#: ../../ref/templates/index.txt:18
msgid ""
"For information on writing your own custom tags and filters, see :doc:`/"
"howto/custom-template-tags`."
msgstr ""

# 100c7d8d306b4596a17c8b394708fbfa
#: ../../ref/unicode.txt:3
msgid "Unicode data"
msgstr ""

# ee867c14db6842ccae95023b4db1156c
#: ../../ref/unicode.txt:5
msgid ""
"Django natively supports Unicode data everywhere. Providing your database "
"can somehow store the data, you can safely pass around Unicode strings to "
"templates, models and the database."
msgstr ""

# 377f5da4a0334042b78202d4debe6974
#: ../../ref/unicode.txt:9
msgid ""
"This document tells you what you need to know if you're writing applications "
"that use data or templates that are encoded in something other than ASCII."
msgstr ""

# 52a4bfc5621041f4a69cba0cdc8d07f8
#: ../../ref/unicode.txt:13
msgid "Creating the database"
msgstr ""

# 9a89467a08704a2b9bf3308863818093
#: ../../ref/unicode.txt:15
msgid ""
"Make sure your database is configured to be able to store arbitrary string "
"data. Normally, this means giving it an encoding of UTF-8 or UTF-16. If you "
"use a more restrictive encoding -- for example, latin1 (iso8859-1) -- you "
"won't be able to store certain characters in the database, and information "
"will be lost."
msgstr ""

# 57a03a077d3342458aea31f350cc752d
#: ../../ref/unicode.txt:20
msgid ""
"MySQL users, refer to the `MySQL manual`_ (section 9.1.3.2 for MySQL 5.1) "
"for details on how to set or alter the database character set encoding."
msgstr ""

# 7547a36b5e2d40afb3f97f1120677874
#: ../../ref/unicode.txt:23
msgid ""
"PostgreSQL users, refer to the `PostgreSQL manual`_ (section 21.2.2 in "
"PostgreSQL 8) for details on creating databases with the correct encoding."
msgstr ""

# 59ff1c88d731443581f16ed2bd57b5a6
#: ../../ref/unicode.txt:26
msgid ""
"SQLite users, there is nothing you need to do. SQLite always uses UTF-8 for "
"internal encoding."
msgstr ""

# 59bc17a81e054d31a69d5549959582c2
#: ../../ref/unicode.txt:32
msgid ""
"All of Django's database backends automatically convert Unicode strings into "
"the appropriate encoding for talking to the database. They also "
"automatically convert strings retrieved from the database into Python "
"Unicode strings. You don't even need to tell Django what encoding your "
"database uses: that is handled transparently."
msgstr ""

# 949ef8ae13754b838387adbca362891a
#: ../../ref/unicode.txt:38
msgid "For more, see the section \"The database API\" below."
msgstr ""

# a871378873b4466499c302adcfea694f
#: ../../ref/unicode.txt:41
msgid "General string handling"
msgstr ""

# b57f74832d5f49ac9de1b50f2f7179b0
#: ../../ref/unicode.txt:43
msgid ""
"Whenever you use strings with Django -- e.g., in database lookups, template "
"rendering or anywhere else -- you have two choices for encoding those "
"strings. You can use Unicode strings, or you can use normal strings "
"(sometimes called \"bytestrings\") that are encoded using UTF-8."
msgstr ""

# 818b3640a95e4a0085ba861ab19b8f64
#: ../../ref/unicode.txt:50
msgid ""
"In Python 3, the logic is reversed, that is normal strings are Unicode, and "
"when you want to specifically create a bytestring, you have to prefix the "
"string with a 'b'. As we are doing in Django code from version 1.5, we "
"recommend that you import ``unicode_literals`` from the __future__ library "
"in your code. Then, when you specifically want to create a bytestring "
"literal, prefix the string with 'b'."
msgstr ""

# 2f72bb3f48dd477482151398d4f8701d
#: ../../ref/unicode.txt:57
msgid "Python 2 legacy::"
msgstr ""

# 972e6c3bf7534e2b8485cf6e5017b4ea
#: ../../ref/unicode.txt:62
msgid "Python 2 with unicode literals or Python 3::"
msgstr ""

# 92411aaf6ce44e2bbbf9e6c9d8433654
#: ../../ref/unicode.txt:69
msgid "See also :doc:`Python 3 compatibility </topics/python3>`."
msgstr ""

# 6613a0c8cf5448598e62543a993ef6d4
#: ../../ref/unicode.txt:71
msgid "Warning"
msgstr ""

# 445a8a133be8498d8992b2c4f1fb3943
#: ../../ref/unicode.txt:73
msgid ""
"A bytestring does not carry any information with it about its encoding. For "
"that reason, we have to make an assumption, and Django assumes that all "
"bytestrings are in UTF-8."
msgstr ""

# 65dc336f84aa4de59c63d2e5f6d029f1
#: ../../ref/unicode.txt:77
msgid ""
"If you pass a string to Django that has been encoded in some other format, "
"things will go wrong in interesting ways. Usually, Django will raise a "
"``UnicodeDecodeError`` at some point."
msgstr ""

# ed94f1a9e4e74b4f92306fd8133b5685
#: ../../ref/unicode.txt:81
msgid ""
"If your code only uses ASCII data, it's safe to use your normal strings, "
"passing them around at will, because ASCII is a subset of UTF-8."
msgstr ""

# faf4196872424ec882870a896eefd06d
#: ../../ref/unicode.txt:84
msgid ""
"Don't be fooled into thinking that if your :setting:`DEFAULT_CHARSET` "
"setting is set to something other than ``'utf-8'`` you can use that other "
"encoding in your bytestrings! :setting:`DEFAULT_CHARSET` only applies to the "
"strings generated as the result of template rendering (and email). Django "
"will always assume UTF-8 encoding for internal bytestrings. The reason for "
"this is that the :setting:`DEFAULT_CHARSET` setting is not actually under "
"your control (if you are the application developer). It's under the control "
"of the person installing and using your application -- and if that person "
"chooses a different setting, your code must still continue to work. Ergo, it "
"cannot rely on that setting."
msgstr ""

# 8d390b8d4ab742649825b797dd5b75e2
#: ../../ref/unicode.txt:94
msgid ""
"In most cases when Django is dealing with strings, it will convert them to "
"Unicode strings before doing anything else. So, as a general rule, if you "
"pass in a bytestring, be prepared to receive a Unicode string back in the "
"result."
msgstr ""

# cfb2e07ea10540668000a74033f2ef4d
#: ../../ref/unicode.txt:99
msgid "Translated strings"
msgstr ""

# 7374ed5e6b7b44348c740d6a74000676
#: ../../ref/unicode.txt:101
msgid ""
"Aside from Unicode strings and bytestrings, there's a third type of string-"
"like object you may encounter when using Django. The framework's "
"internationalization features introduce the concept of a \"lazy translation"
"\" -- a string that has been marked as translated but whose actual "
"translation result isn't determined until the object is used in a string. "
"This feature is useful in cases where the translation locale is unknown "
"until the string is used, even though the string might have originally been "
"created when the code was first imported."
msgstr ""

# 2b7cc7039e9d461fae99d0070307cb35
#: ../../ref/unicode.txt:110
msgid ""
"Normally, you won't have to worry about lazy translations. Just be aware "
"that if you examine an object and it claims to be a ``django.utils."
"functional.__proxy__`` object, it is a lazy translation. Calling "
"``unicode()`` with the lazy translation as the argument will generate a "
"Unicode string in the current locale."
msgstr ""

# 84b0793852ca47d9a34ef0bc40a7372f
#: ../../ref/unicode.txt:116
msgid ""
"For more details about lazy translation objects, refer to the :doc:"
"`internationalization </topics/i18n/index>` documentation."
msgstr ""

# bb07ab7b04af4838bc7c7901787037bf
#: ../../ref/unicode.txt:120
msgid "Useful utility functions"
msgstr ""

# eebda23486214c2d88f64e57329b4409
#: ../../ref/unicode.txt:122
msgid ""
"Because some string operations come up again and again, Django ships with a "
"few useful functions that should make working with Unicode and bytestring "
"objects a bit easier."
msgstr ""

# 8a082c3d01694c5ba1e5fd6f3366dd24
#: ../../ref/unicode.txt:127
msgid "Conversion functions"
msgstr ""

# 517acadea2064aa184f7c7ab5d7a89fd
#: ../../ref/unicode.txt:129
msgid ""
"The ``django.utils.encoding`` module contains a few functions that are handy "
"for converting back and forth between Unicode and bytestrings."
msgstr ""

# 40fcefccc8ce45ed8df3cb469ccb1bee
#: ../../ref/unicode.txt:132
msgid ""
"``smart_text(s, encoding='utf-8', strings_only=False, errors='strict')`` "
"converts its input to a Unicode string. The ``encoding`` parameter specifies "
"the input encoding. (For example, Django uses this internally when "
"processing form input data, which might not be UTF-8 encoded.) The "
"``strings_only`` parameter, if set to True, will result in Python numbers, "
"booleans and ``None`` not being converted to a string (they keep their "
"original types). The ``errors`` parameter takes any of the values that are "
"accepted by Python's ``unicode()`` function for its error handling."
msgstr ""

# cb842e3206b14b7fa4287055b551c02b
#: ../../ref/unicode.txt:142
msgid ""
"If you pass ``smart_text()`` an object that has a ``__unicode__`` method, it "
"will use that method to do the conversion."
msgstr ""

# fe7e1904dab743939dd78b3f074488b7
#: ../../ref/unicode.txt:145
msgid ""
"``force_text(s, encoding='utf-8', strings_only=False, errors='strict')`` is "
"identical to ``smart_text()`` in almost all cases. The difference is when "
"the first argument is a :ref:`lazy translation <lazy-translations>` "
"instance. While ``smart_text()`` preserves lazy translations, "
"``force_text()`` forces those objects to a Unicode string (causing the "
"translation to occur). Normally, you'll want to use ``smart_text()``. "
"However, ``force_text()`` is useful in template tags and filters that "
"absolutely *must* have a string to work with, not just something that can be "
"converted to a string."
msgstr ""

# 543ca379580144baa2141ee62cf0b8ff
#: ../../ref/unicode.txt:155
msgid ""
"``smart_bytes(s, encoding='utf-8', strings_only=False, errors='strict')`` is "
"essentially the opposite of ``smart_text()``. It forces the first argument "
"to a bytestring. The ``strings_only`` parameter has the same behavior as for "
"``smart_text()`` and ``force_text()``. This is slightly different semantics "
"from Python's builtin ``str()`` function, but the difference is needed in a "
"few places within Django's internals."
msgstr ""

# e69c31c4750442b9b71ea419108d9225
#: ../../ref/unicode.txt:162
msgid ""
"Normally, you'll only need to use ``smart_text()``. Call it as early as "
"possible on any input data that might be either Unicode or a bytestring, and "
"from then on, you can treat the result as always being Unicode."
msgstr ""

# 6238027b32b2459fa6dd1514191bdd11
#: ../../ref/unicode.txt:169
msgid "URI and IRI handling"
msgstr ""

# 0955e029981147c28d60bea649136e13
#: ../../ref/unicode.txt:171
msgid ""
"Web frameworks have to deal with URLs (which are a type of IRI_). One "
"requirement of URLs is that they are encoded using only ASCII characters. "
"However, in an international environment, you might need to construct a URL "
"from an IRI_ -- very loosely speaking, a URI_ that can contain Unicode "
"characters. Quoting and converting an IRI to URI can be a little tricky, so "
"Django provides some assistance."
msgstr ""

# 9f4517543bc14c20943d0dc3b5a94ea7
#: ../../ref/unicode.txt:178
msgid ""
"The function ``django.utils.encoding.iri_to_uri()`` implements the "
"conversion from IRI to URI as required by the specification (:rfc:`3987`)."
msgstr ""

# 73f58b124fca41a49707a08b2f499f6e
#: ../../ref/unicode.txt:181
msgid ""
"The functions ``django.utils.http.urlquote()`` and ``django.utils.http."
"urlquote_plus()`` are versions of Python's standard ``urllib.quote()`` and "
"``urllib.quote_plus()`` that work with non-ASCII characters. (The data is "
"converted to UTF-8 prior to encoding.)"
msgstr ""

# 52bc9b796ac94712a7044f2b209d68cb
#: ../../ref/unicode.txt:186
msgid ""
"These two groups of functions have slightly different purposes, and it's "
"important to keep them straight. Normally, you would use ``urlquote()`` on "
"the individual portions of the IRI or URI path so that any reserved "
"characters such as '&' or '%' are correctly encoded. Then, you apply "
"``iri_to_uri()`` to the full IRI and it converts any non-ASCII characters to "
"the correct encoded values."
msgstr ""

# bde766e34dbe4a908dcae8716a92ba30
#: ../../ref/unicode.txt:194
msgid ""
"Technically, it isn't correct to say that ``iri_to_uri()`` implements the "
"full algorithm in the IRI specification. It doesn't (yet) perform the "
"international domain name encoding portion of the algorithm."
msgstr ""

# 3f0729543f2c44199d4f92946735a844
#: ../../ref/unicode.txt:198
msgid ""
"The ``iri_to_uri()`` function will not change ASCII characters that are "
"otherwise permitted in a URL. So, for example, the character '%' is not "
"further encoded when passed to ``iri_to_uri()``. This means you can pass a "
"full URL to this function and it will not mess up the query string or "
"anything like that."
msgstr ""

# f223f88114154bd0b3f4498fb15890f7
#: ../../ref/unicode.txt:204
msgid "An example might clarify things here::"
msgstr ""

# a4f636cdf00c4142a5cfb91133d006e3
#: ../../ref/unicode.txt:211
msgid ""
"If you look carefully, you can see that the portion that was generated by "
"``urlquote()`` in the second example was not double-quoted when passed to "
"``iri_to_uri()``. This is a very important and useful feature. It means that "
"you can construct your IRI without worrying about whether it contains non-"
"ASCII characters and then, right at the end, call ``iri_to_uri()`` on the "
"result."
msgstr ""

# 08772d6d648a4b009bdfdcdf8a0cb641
#: ../../ref/unicode.txt:218
msgid ""
"The ``iri_to_uri()`` function is also idempotent, which means the following "
"is always true::"
msgstr ""

# 44cad03351df4bc5ab2f21e0a1d86669
#: ../../ref/unicode.txt:223
msgid ""
"So you can safely call it multiple times on the same IRI without risking "
"double-quoting problems."
msgstr ""

# 9555b523e6e0443ba21dc47740ae250b
#: ../../ref/unicode.txt:232
msgid ""
"Because all strings are returned from the database as Unicode strings, model "
"fields that are character based (CharField, TextField, URLField, etc) will "
"contain Unicode values when Django retrieves data from the database. This is "
"*always* the case, even if the data could fit into an ASCII bytestring."
msgstr ""

# d4ac67565db24b6ba8ff509407b2d7a1
#: ../../ref/unicode.txt:237
msgid ""
"You can pass in bytestrings when creating a model or populating a field, and "
"Django will convert it to Unicode when it needs to."
msgstr ""

# 6a3b28bf0e9a4e389b78ebe78239b8f4
#: ../../ref/unicode.txt:241
msgid "Choosing between ``__str__()`` and ``__unicode__()``"
msgstr ""

# efd05309ce8841db8afb8ea8f8c7b328
#: ../../ref/unicode.txt:245
msgid ""
"If you are on Python 3, you can skip this section because you'll always "
"create ``__str__()`` rather than ``__unicode__()``. If you'd like "
"compatibility with Python 2, you can decorate your model class with :func:"
"`~django.utils.encoding.python_2_unicode_compatible`."
msgstr ""

# 687eeebc5df1469fa0581f7a2b6e3013
#: ../../ref/unicode.txt:250
msgid ""
"One consequence of using Unicode by default is that you have to take some "
"care when printing data from the model."
msgstr ""

# 6379e9f248014bbca0e9cd5bdc4f9b65
#: ../../ref/unicode.txt:246
msgid ""
"In particular, rather than giving your model a ``__str__()`` method, we "
"recommended you implement a ``__unicode__()`` method. In the "
"``__unicode__()`` method, you can quite safely return the values of all your "
"fields without having to worry about whether they fit into a bytestring or "
"not. (The way Python works, the result of ``__str__()`` is *always* a "
"bytestring, even if you accidentally try to return a Unicode object)."
msgstr ""

# 8ddf6698b9384b0ca1da48c0098be1f7
#: ../../ref/unicode.txt:253
msgid ""
"You can still create a ``__str__()`` method on your models if you want, of "
"course, but you shouldn't need to do this unless you have a good reason. "
"Django's ``Model`` base class automatically provides a ``__str__()`` "
"implementation that calls ``__unicode__()`` and encodes the result into "
"UTF-8. This means you'll normally only need to implement a ``__unicode__()`` "
"method and let Django handle the coercion to a bytestring when required."
msgstr ""

# 7db7a463cd8040d58cafa61910be65ab
#: ../../ref/unicode.txt:261
msgid "Taking care in ``get_absolute_url()``"
msgstr ""

# 6597f49269d242e390f190b5812e82b6
#: ../../ref/unicode.txt:263
msgid ""
"URLs can only contain ASCII characters. If you're constructing a URL from "
"pieces of data that might be non-ASCII, be careful to encode the results in "
"a way that is suitable for a URL. The :func:`~django.core.urlresolvers."
"reverse` function handles this for you automatically."
msgstr ""

# 01a77153a34e4ae8982b2546dad42dc3
#: ../../ref/unicode.txt:268
msgid ""
"If you're constructing a URL manually (i.e., *not* using the ``reverse()`` "
"function), you'll need to take care of the encoding yourself. In this case, "
"use the ``iri_to_uri()`` and ``urlquote()`` functions that were documented "
"above_. For example::"
msgstr ""

# e0e404d087404e20b9d54e0e17bac90a
#: ../../ref/unicode.txt:280
msgid ""
"This function returns a correctly encoded URL even if ``self.location`` is "
"something like \"Jack visited Paris & Orléans\". (In fact, the "
"``iri_to_uri()`` call isn't strictly necessary in the above example, because "
"all the non-ASCII characters would have been removed in quoting in the first "
"line.)"
msgstr ""

# 17eaaec6a82d428a9221d6fde244a558
#: ../../ref/unicode.txt:288
msgid "The database API"
msgstr ""

# 928cfc1f9fae4dd08f01030545d6f21b
#: ../../ref/unicode.txt:290
msgid ""
"You can pass either Unicode strings or UTF-8 bytestrings as arguments to "
"``filter()`` methods and the like in the database API. The following two "
"querysets are identical::"
msgstr ""

# da291d043d7c4453bb44999ac1872ea2
#: ../../ref/unicode.txt:302
msgid ""
"You can use either Unicode or bytestrings when creating templates manually::"
msgstr ""

# 6ea272acdf6f4ccaba376ebc25116e0c
#: ../../ref/unicode.txt:309
msgid ""
"But the common case is to read templates from the filesystem, and this "
"creates a slight complication: not all filesystems store their data encoded "
"as UTF-8. If your template files are not stored with a UTF-8 encoding, set "
"the :setting:`FILE_CHARSET` setting to the encoding of the files on disk. "
"When Django reads in a template file, it will convert the data from this "
"encoding to Unicode. (:setting:`FILE_CHARSET` is set to ``'utf-8'`` by "
"default.)"
msgstr ""

# 89a57146b7244c71882e44e1a238ee97
#: ../../ref/unicode.txt:316
msgid ""
"The :setting:`DEFAULT_CHARSET` setting controls the encoding of rendered "
"templates. This is set to UTF-8 by default."
msgstr ""

# 520a475577b14e7991b9683ab4f69da4
#: ../../ref/unicode.txt:320
msgid "Template tags and filters"
msgstr ""

# 923d893e0a444d1ab17b42645dae5e8d
#: ../../ref/unicode.txt:322
msgid ""
"A couple of tips to remember when writing your own template tags and filters:"
msgstr ""

# beff9acb8b924e1aac14d9f5d0254d0b
#: ../../ref/unicode.txt:324
msgid ""
"Always return Unicode strings from a template tag's ``render()`` method and "
"from template filters."
msgstr ""

# 55017a96670249f1995c630c0c747742
#: ../../ref/unicode.txt:327
msgid ""
"Use ``force_text()`` in preference to ``smart_text()`` in these places. Tag "
"rendering and filter calls occur as the template is being rendered, so there "
"is no advantage to postponing the conversion of lazy translation objects "
"into strings. It's easier to work solely with Unicode strings at that point."
msgstr ""

# dd1f12eddf414b8fa4a4778eb7f3f86a
#: ../../ref/unicode.txt:334
msgid "Email"
msgstr ""

# fac8cffc8f744b25a246ec6644914ac7
#: ../../ref/unicode.txt:336
msgid ""
"Django's email framework (in ``django.core.mail``) supports Unicode "
"transparently. You can use Unicode data in the message bodies and any "
"headers. However, you're still obligated to respect the requirements of the "
"email specifications, so, for example, email addresses should use only ASCII "
"characters."
msgstr ""

# 535bb5abb4b94cf79923d10e421de5c6
#: ../../ref/unicode.txt:342
msgid ""
"The following code example demonstrates that everything except email "
"addresses can be non-ASCII::"
msgstr ""

# 789afa3b660645459b41226fb75e1193
#: ../../ref/unicode.txt:357
msgid "Form submission"
msgstr ""

# 518ce774d5174e708dbe236befa0d125
#: ../../ref/unicode.txt:359
msgid ""
"HTML form submission is a tricky area. There's no guarantee that the "
"submission will include encoding information, which means the framework "
"might have to guess at the encoding of submitted data."
msgstr ""

# 4c100a5dda464b8da1a0d3c6ea3812f5
#: ../../ref/unicode.txt:363
msgid ""
"Django adopts a \"lazy\" approach to decoding form data. The data in an "
"``HttpRequest`` object is only decoded when you access it. In fact, most of "
"the data is not decoded at all. Only the ``HttpRequest.GET`` and "
"``HttpRequest.POST`` data structures have any decoding applied to them. "
"Those two fields will return their members as Unicode data. All other "
"attributes and methods of ``HttpRequest`` return data exactly as it was "
"submitted by the client."
msgstr ""

# b0e235b999d241a3a3e21c7681f515b6
#: ../../ref/unicode.txt:371
msgid ""
"By default, the :setting:`DEFAULT_CHARSET` setting is used as the assumed "
"encoding for form data. If you need to change this for a particular form, "
"you can set the ``encoding`` attribute on an ``HttpRequest`` instance. For "
"example::"
msgstr ""

# b7ef53b7c24c4335b77e8348a29ab4b2
#: ../../ref/unicode.txt:380
msgid ""
"You can even change the encoding after having accessed ``request.GET`` or "
"``request.POST``, and all subsequent accesses will use the new encoding."
msgstr ""

# 55fa46b67cc3453784958490ce63b511
#: ../../ref/unicode.txt:383
msgid ""
"Most developers won't need to worry about changing form encoding, but this "
"is a useful feature for applications that talk to legacy systems whose "
"encoding you cannot control."
msgstr ""

# f1c326d039fe462399e3ddffa22f66ad
#: ../../ref/unicode.txt:387
msgid ""
"Django does not decode the data of file uploads, because that data is "
"normally treated as collections of bytes, rather than strings. Any automatic "
"decoding there would alter the meaning of the stream of bytes."
msgstr ""

# 74638a4c2bba4133b55cd65cb3a774d5
#: ../../ref/urlresolvers.txt:3
msgid "``django.core.urlresolvers`` utility functions"
msgstr ""

# c2950d60a23146b3bc6b06a371dc3e74
#: ../../ref/urlresolvers.txt:8
msgid "reverse()"
msgstr ""

# ad2b65f69f774b70b69ad7197558228b
#: ../../ref/urlresolvers.txt:10
msgid ""
"If you need to use something similar to the :ttag:`url` template tag in your "
"code, Django provides the following function:"
msgstr ""

# 628e6ed0b4864bc3be355b1a9fb34e55
#: ../../ref/urlresolvers.txt:15
msgid ""
"``viewname`` is either the function name (either a function reference, or "
"the string version of the name, if you used that form in ``urlpatterns``) or "
"the :ref:`URL pattern name <naming-url-patterns>`.  Normally, you won't need "
"to worry about the ``urlconf`` parameter and will only pass in the "
"positional and keyword arguments to use in the URL matching. For example::"
msgstr ""

# cbeb8de9aa23470c9e03bf9cffc18ea7
#: ../../ref/urlresolvers.txt:26
msgid ""
"The ``reverse()`` function can reverse a large variety of regular expression "
"patterns for URLs, but not every possible one. The main restriction at the "
"moment is that the pattern cannot contain alternative choices using the "
"vertical bar (``\"|\"``) character. You can quite happily use such patterns "
"for matching against incoming URLs and sending them off to views, but you "
"cannot reverse such patterns."
msgstr ""

# 2eb6e55998054a26830689500bd1a9b5
#: ../../ref/urlresolvers.txt:33
msgid ""
"The ``current_app`` argument allows you to provide a hint to the resolver "
"indicating the application to which the currently executing view belongs. "
"This ``current_app`` argument is used as a hint to resolve application "
"namespaces into URLs on specific application instances, according to the :"
"ref:`namespaced URL resolution strategy <topics-http-reversing-url-"
"namespaces>`."
msgstr ""

# 0d8b7a982ab742f49712f6c7d28f1b84
#: ../../ref/urlresolvers.txt:39
msgid "You can use ``kwargs`` instead of ``args``. For example::"
msgstr ""

# 2cde1e1a77e5419d8d98ca15a7cc4a6b
#: ../../ref/urlresolvers.txt:44
msgid ""
"``args`` and ``kwargs`` cannot be passed to ``reverse()`` at the same time."
msgstr ""

# 27f33258825b4a1ea7f2234356b8c07d
#: ../../ref/urlresolvers.txt:46
msgid "Make sure your views are all correct."
msgstr ""

# e3fb503501a340b0abff4698cbf074de
#: ../../ref/urlresolvers.txt:48
msgid ""
"As part of working out which URL names map to which patterns, the "
"``reverse()`` function has to import all of your URLconf files and examine "
"the name of each view. This involves importing each view function. If there "
"are *any* errors whilst importing any of your view functions, it will cause "
"``reverse()`` to raise an error, even if that view function is not the one "
"you are trying to reverse."
msgstr ""

# 5ef03aa3a69b411286cf0abf5be63a9c
#: ../../ref/urlresolvers.txt:55
msgid ""
"Make sure that any views you reference in your URLconf files exist and can "
"be imported correctly. Do not include lines that reference views you haven't "
"written yet, because those views will not be importable."
msgstr ""

# 3ed8e039a1f34ac5af30bde24cc354ff
#: ../../ref/urlresolvers.txt:61
msgid ""
"The string returned by ``reverse()`` is already :ref:`urlquoted <uri-and-iri-"
"handling>`. For example::"
msgstr ""

# 2dacc827deb44baf8bab5fda1bfe3b59
#: ../../ref/urlresolvers.txt:67
msgid ""
"Applying further encoding (such as :meth:`~django.utils.http.urlquote` or "
"``urllib.quote``) to the output of ``reverse()`` may produce undesirable "
"results."
msgstr ""

# 0b7f7b6df146463984a35e8aaa9325fa
#: ../../ref/urlresolvers.txt:72
msgid "reverse_lazy()"
msgstr ""

# fa55587efc5440deb2fbd611e5ea8a90
#: ../../ref/urlresolvers.txt:76
msgid "A lazily evaluated version of `reverse()`_."
msgstr ""

# 2d01d499f7ef4be5bcc9a78d41c3ea98
#: ../../ref/urlresolvers.txt:80
msgid ""
"It is useful for when you need to use a URL reversal before your project's "
"URLConf is loaded. Some common cases where this function is necessary are:"
msgstr ""

# ce550fa84160458c91a83aa2057c94d8
#: ../../ref/urlresolvers.txt:83
msgid ""
"providing a reversed URL as the ``url`` attribute of a generic class-based "
"view."
msgstr ""

# 217e1f833067477f93710c0372ab97f9
#: ../../ref/urlresolvers.txt:86
msgid ""
"providing a reversed URL to a decorator (such as the ``login_url`` argument "
"for the :func:`django.contrib.auth.decorators.permission_required` "
"decorator)."
msgstr ""

# e09fadce9f6c4b369914e617821dd016
#: ../../ref/urlresolvers.txt:90
msgid ""
"providing a reversed URL as a default value for a parameter in a function's "
"signature."
msgstr ""

# c39ef7a6eb6147b19940f90a0f22055c
#: ../../ref/urlresolvers.txt:94
msgid "resolve()"
msgstr ""

# 6dccc41197f144629c282ad7383d24a3
#: ../../ref/urlresolvers.txt:96
msgid ""
"The ``resolve()`` function can be used for resolving URL paths to the "
"corresponding view functions. It has the following signature:"
msgstr ""

# 89ed65c3402f45d5976f847b77431780
#: ../../ref/urlresolvers.txt:101
msgid ""
"``path`` is the URL path you want to resolve. As with :func:`~django.core."
"urlresolvers.reverse`, you don't need to worry about the ``urlconf`` "
"parameter. The function returns a :class:`ResolverMatch` object that allows "
"you to access various meta-data about the resolved URL."
msgstr ""

# eca67dc7609043df912759171539b3e7
#: ../../ref/urlresolvers.txt:107
msgid ""
"If the URL does not resolve, the function raises an :class:`~django.http."
"Http404` exception."
msgstr ""

# d84978640aab4ab6b0c0637f7667172e
#: ../../ref/urlresolvers.txt:114
msgid "The view function that would be used to serve the URL"
msgstr ""

# 3bbb1ed2bc664b73a073363b74b11e8c
#: ../../ref/urlresolvers.txt:118
msgid ""
"The arguments that would be passed to the view function, as parsed from the "
"URL."
msgstr ""

# 8c8006c94f6c43238c9f4168bf29d5f9
#: ../../ref/urlresolvers.txt:123
msgid ""
"The keyword arguments that would be passed to the view function, as parsed "
"from the URL."
msgstr ""

# 03a76560cab04cc7b87d7ab125beb67a
#: ../../ref/urlresolvers.txt:128
msgid "The name of the URL pattern that matches the URL."
msgstr ""

# a36f0ac14eac43a1bf155d4cc093ac18
#: ../../ref/urlresolvers.txt:132
msgid "The application namespace for the URL pattern that matches the URL."
msgstr ""

# 9c1b61b15280476d9fa4c6ec3124dbe4
#: ../../ref/urlresolvers.txt:137
msgid "The instance namespace for the URL pattern that matches the URL."
msgstr ""

# 9901f8ae271941f1ab89e94c5a25e91e
#: ../../ref/urlresolvers.txt:142
msgid ""
"The list of individual namespace components in the full instance namespace "
"for the URL pattern that matches the URL. i.e., if the namespace is ``foo:"
"bar``, then namespaces will be ``['foo', 'bar']``."
msgstr ""

# a38bd6fc0e7049b8b7c769dd2825abad
#: ../../ref/urlresolvers.txt:147
msgid ""
"A :class:`ResolverMatch` object can then be interrogated to provide "
"information about the URL pattern that matches a URL::"
msgstr ""

# 9ec08fb0b56146108a5cdcf4cfc0c708
#: ../../ref/urlresolvers.txt:155
msgid "A :class:`ResolverMatch` object can also be assigned to a triple::"
msgstr ""

# 5d220de984aa4241a92ca383c8a14851
#: ../../ref/urlresolvers.txt:159
msgid ""
"One possible use of :func:`~django.core.urlresolvers.resolve` would be to "
"test whether a view would raise a ``Http404`` error before redirecting to "
"it::"
msgstr ""

# cdabd560ce6446098f92c76c3aab84fd
#: ../../ref/urlresolvers.txt:182
msgid "get_script_prefix()"
msgstr ""

# 74aca53a3c2b4a0caf0fb87ad072cf94
#: ../../ref/urlresolvers.txt:186
msgid ""
"Normally, you should always use :func:`~django.core.urlresolvers.reverse` to "
"define URLs within your application. However, if your application constructs "
"part of the URL hierarchy itself, you may occasionally need to generate "
"URLs. In that case, you need to be able to find the base URL of the Django "
"project within its Web server (normally, :func:`~django.core.urlresolvers."
"reverse` takes care of this for you). In that case, you can call "
"``get_script_prefix()``, which will return the script prefix portion of the "
"URL for your Django project. If your Django project is at the root of its "
"web server, this is always ``\"/\"``."
msgstr ""

# 7f685f4683c744f1b56730c17612cb30
#: ../../ref/urls.txt:3
msgid "``django.conf.urls`` utility functions"
msgstr ""

# bc19e470b4a7481dafd485df244f40d8
#: ../../ref/urls.txt:12
msgid ""
"Until Django 1.3 they were located in ``django.conf.urls.defaults``. You "
"still can import them from there but it will be removed in Django 1.6."
msgstr ""

# a6b9328e37474f9aaa92103ef19610ea
#: ../../ref/urls.txt:16
msgid "patterns()"
msgstr ""

# e55543e3cab2433d8cfb423035eb28f7
#: ../../ref/urls.txt:20
msgid ""
"A function that takes a prefix, and an arbitrary number of URL patterns, and "
"returns a list of URL patterns in the format Django needs."
msgstr ""

# c72d4c97ccca44678bbe990895f7bc66
#: ../../ref/urls.txt:23
msgid ""
"The first argument to ``patterns()`` is a string ``prefix``. See :ref:`The "
"view prefix <urlpatterns-view-prefix>`."
msgstr ""

# c99a533a49104e439dfc0c496abb123f
#: ../../ref/urls.txt:26
msgid "The remaining arguments should be tuples in this format::"
msgstr ""

# 5d6fb28b5c9040e892f631f0c034682b
#: ../../ref/urls.txt:30
msgid ""
"The ``optional_dictionary`` and ``optional_name`` parameters are described "
"in :ref:`Passing extra options to view functions <views-extra-options>`."
msgstr ""

# 45717ac011e6458f92a3807434f7da2f
#: ../../ref/urls.txt:34
msgid ""
"Because ``patterns()`` is a function call, it accepts a maximum of 255 "
"arguments (URL patterns, in this case). This is a limit for all Python "
"function calls. This is rarely a problem in practice, because you'll "
"typically structure your URL patterns modularly by using ``include()`` "
"sections. However, on the off-chance you do hit the 255-argument limit, "
"realize that ``patterns()`` returns a Python list, so you can split up the "
"construction of the list."
msgstr ""

# ba1865457cf7457aaf8c79e83c3522d7
#: ../../ref/urls.txt:51
msgid ""
"Python lists have unlimited size, so there's no limit to how many URL "
"patterns you can construct. The only limit is that you can only create 254 "
"at a time (the 255th argument is the initial prefix argument)."
msgstr ""

# e2919d4d9c21407fbb720ef7cebae64a
#: ../../ref/urls.txt:56
msgid "static()"
msgstr ""

# 9e9dd0041a624579957afa08b630ffa2
#: ../../ref/urls.txt:60
msgid ""
"Helper function to return a URL pattern for serving files in debug mode::"
msgstr ""

# 49e28e35e0574938819b3c5865de5b8b
#: ../../ref/urls.txt:70
msgid "url()"
msgstr ""

# d7ef93443ec548ab8aa4fd1cc8574de4
#: ../../ref/urls.txt:74
msgid ""
"You can use the ``url()`` function, instead of a tuple, as an argument to "
"``patterns()``. This is convenient if you want to specify a name without the "
"optional extra arguments dictionary. For example::"
msgstr ""

# a6269a9aa0dd42d2bfce9fd9c33eb01c
#: ../../ref/urls.txt:83
msgid "This function takes five arguments, most of which are optional::"
msgstr ""

# 516a53c4e0e644f1a70b0036ddc19217
#: ../../ref/urls.txt:87
msgid ""
"See :ref:`Naming URL patterns <naming-url-patterns>` for why the ``name`` "
"parameter is useful."
msgstr ""

# cdc355adfc3246ccaf0d6eef6183b95a
#: ../../ref/urls.txt:90
msgid ""
"The ``prefix`` parameter has the same meaning as the first argument to "
"``patterns()`` and is only relevant when you're passing a string as the "
"``view`` parameter."
msgstr ""

# 340509860a0b4333848558ff425e3975
#: ../../ref/urls.txt:95
msgid "include()"
msgstr ""

# 9d4351f4f7d04f3c8094e8b9a16c5383
#: ../../ref/urls.txt:101
msgid ""
"A function that takes a full Python import path to another URLconf module "
"that should be \"included\" in this place. Optionally, the :term:"
"`application namespace` and :term:`instance namespace` where the entries "
"will be included into can also be specified."
msgstr ""

# f63b96d3f4c54422b1a4c9463abb3a19
#: ../../ref/urls.txt:106
msgid ""
"``include()`` also accepts as an argument either an iterable that returns "
"URL patterns or a 3-tuple containing such iterable plus the names of the "
"application and instance namespaces."
msgstr ""

# 3afcca30215347f2bb38797ae042b001
#: ../../ref/urls.txt:110
msgid "URLconf module (or module name)"
msgstr ""

# 36a52c599b094afbbb89625dae05da37
# e2cc357679624173af8ccff2a3a696ad
#: ../../ref/urls.txt:111 ../../ref/urls.txt:118
msgid "Instance namespace for the URL entries being included"
msgstr ""

# d6b879fa68ef4c95ae63a039236e96e3
# f8b0193e2f5b4643b1a2d2f95e50b8be
#: ../../ref/urls.txt:113 ../../ref/urls.txt:116
msgid "Application namespace for the URL entries being included"
msgstr ""

# ab648c80475c452f8e324f5a0ba9c0f7
#: ../../ref/urls.txt:115
msgid "Iterable of URL entries as returned by :func:`patterns`"
msgstr ""

# 7baaac5d503a49de990c7210f4241567
#: ../../ref/urls.txt:121
msgid "See :ref:`including-other-urlconfs` and :ref:`namespaces-and-include`."
msgstr ""

# a4756d1dffca48218f8318dc68f18ddf
#: ../../ref/urls.txt:124
msgid "handler403"
msgstr ""

# 264ed796f74148e990afb72a09c8a4d8
#: ../../ref/urls.txt:128
msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if the user doesn't have the permissions required to "
"access a resource."
msgstr ""

# ec5310a88ac34e06860fb457b0e7b6f4
#: ../../ref/urls.txt:132
msgid ""
"By default, this is ``'django.views.defaults.permission_denied'``. That "
"default value should suffice."
msgstr ""

# 70f3da913e844717afc5cbf0f01607e1
#: ../../ref/urls.txt:135
msgid ""
"See the documentation about :ref:`the 403 (HTTP Forbidden) view "
"<http_forbidden_view>` for more information."
msgstr ""

# f1eee76cba48480b9d547d970ae194a0
#: ../../ref/urls.txt:142
msgid "handler404"
msgstr ""

# d27bf4e007b7426ebcbabffefed0285f
#: ../../ref/urls.txt:146
msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if none of the URL patterns match."
msgstr ""

# d7832744e7d04d67b32bb6cb9e6b09cd
#: ../../ref/urls.txt:149
msgid ""
"By default, this is ``'django.views.defaults.page_not_found'``. That default "
"value should suffice."
msgstr ""

# 748e87809626492083e7778e5b4df8a8
#: ../../ref/urls.txt:152
msgid ""
"See the documentation about :ref:`the 404 (HTTP Not Found) view "
"<http_not_found_view>` for more information."
msgstr ""

# 4815802a8c154a02a739d2fffd2da4df
#: ../../ref/urls.txt:156
msgid "handler500"
msgstr ""

# b6462f93342d403c9d0c3fb8b765f905
#: ../../ref/urls.txt:160
msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called in case of server errors. Server errors happen when "
"you have runtime errors in view code."
msgstr ""

# dcf3dc9f9c794ffbb1cf28a63100437c
#: ../../ref/urls.txt:164
msgid ""
"By default, this is ``'django.views.defaults.server_error'``. That default "
"value should suffice."
msgstr ""

# f5c6e6c775064ed3befa71ce1d48f04c
#: ../../ref/urls.txt:167
msgid ""
"See the documentation about :ref:`the 500 (HTTP Internal Server Error) view "
"<http_internal_server_error_view>` for more information."
msgstr ""

# 4b6670c96d4b4021b53c3b541e57542e
#: ../../ref/utils.txt:3
msgid "Django Utils"
msgstr ""

# e4509de97733497a81c92e389a2e9d00
#: ../../ref/utils.txt:8
msgid ""
"This document covers all stable modules in ``django.utils``. Most of the "
"modules in ``django.utils`` are designed for internal use and only the "
"following parts can be considered stable and thus backwards compatible as "
"per the :ref:`internal release deprecation policy <internal-release-"
"deprecation-policy>`."
msgstr ""

# ba997372e8a44854bb1b315e7f19189d
#: ../../ref/utils.txt:14
msgid "``django.utils.cache``"
msgstr ""

# e902656f2a5548cdba9f8ce43d65588e
#: ../../ref/utils.txt:19
msgid ""
"This module contains helper functions for controlling caching. It does so by "
"managing the ``Vary`` header of responses. It includes functions to patch "
"the header of response objects directly and decorators that change functions "
"to do that header-patching themselves."
msgstr ""

# 5a954a47084a4cafac9335372de7533c
#: ../../ref/utils.txt:24
msgid ""
"For information on the ``Vary`` header, see :rfc:`2616#section-14.44` "
"section 14.44."
msgstr ""

# 609e6a969b0b4b5ea4dae28a6aa59266
#: ../../ref/utils.txt:27
msgid ""
"Essentially, the ``Vary`` HTTP header defines which headers a cache should "
"take into account when building its cache key. Requests with the same path "
"but different header content for headers named in ``Vary`` need to get "
"different cache keys to prevent delivery of wrong content."
msgstr ""

# c0c710849c7740ec80750d3c42128664
#: ../../ref/utils.txt:32
msgid ""
"For example, :doc:`internationalization </topics/i18n/index>` middleware "
"would need to distinguish caches by the ``Accept-language`` header."
msgstr ""

# 4d48224df7884633bc957576762bf1ea
#: ../../ref/utils.txt:37
msgid ""
"This function patches the ``Cache-Control`` header by adding all keyword "
"arguments to it. The transformation is as follows:"
msgstr ""

# 1c4264fa6f1b4d4693fe5048a0b72e48
#: ../../ref/utils.txt:40
msgid ""
"All keyword parameter names are turned to lowercase, and underscores are "
"converted to hyphens."
msgstr ""

# d5eaf50aeafb4b41be2bc4c2a8581aa3
#: ../../ref/utils.txt:42
msgid ""
"If the value of a parameter is ``True`` (exactly ``True``, not just a true "
"value), only the parameter name is added to the header."
msgstr ""

# ed91d9c4fa1d4dab870e1baf03150007
#: ../../ref/utils.txt:44
msgid ""
"All other parameters are added with their value, after applying ``str()`` to "
"it."
msgstr ""

# faa6ddee20af4f1683dcbaf78e2a970c
#: ../../ref/utils.txt:49
msgid ""
"Returns the max-age from the response Cache-Control header as an integer (or "
"``None`` if it wasn't found or wasn't an integer)."
msgstr ""

# cbc9820928914568b30a69bcf74c9614
#: ../../ref/utils.txt:54
msgid "Adds some useful headers to the given ``HttpResponse`` object:"
msgstr ""

# 929bc8e91fc745a5961ef846963e826c
#: ../../ref/utils.txt:56
msgid "``ETag``"
msgstr ""

# f0cd401919e24fcba392634893ff7d6d
#: ../../ref/utils.txt:57
msgid "``Last-Modified``"
msgstr ""

# 029b3a28056f4d0fbd3107365254b80c
#: ../../ref/utils.txt:58
msgid "``Expires``"
msgstr ""

# 61c04891720c4efebb64eb8133e86c9d
#: ../../ref/utils.txt:59
msgid "``Cache-Control``"
msgstr ""

# c1ef654308e84c88a5e3942cebe6d422
#: ../../ref/utils.txt:61
msgid "Each header is only added if it isn't already set."
msgstr ""

# 149f5793b8524dcf9fe1156e153d6b7b
#: ../../ref/utils.txt:63
msgid ""
"``cache_timeout`` is in seconds. The :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting is used by default."
msgstr ""

# 7bb814cece0148a5959baba42f610882
#: ../../ref/utils.txt:68
msgid ""
"Adds headers to a response to indicate that a page should never be cached."
msgstr ""

# fe667fd7df09460392f92a44aa9bc246
#: ../../ref/utils.txt:72
msgid ""
"Adds (or updates) the ``Vary`` header in the given ``HttpResponse`` object. "
"``newheaders`` is a list of header names that should be in ``Vary``. "
"Existing headers in ``Vary`` aren't removed."
msgstr ""

# 4dacfd1f056d4a35ba608a58887479d6
#: ../../ref/utils.txt:78
msgid ""
"Returns a cache key based on the request path. It can be used in the request "
"phase because it pulls the list of headers to take into account from the "
"global path registry and uses those to build a cache key to check against."
msgstr ""

# acd4cb00ba3b41ca8894ef9b519e4c9a
#: ../../ref/utils.txt:83
msgid ""
"If there is no headerlist stored, the page needs to be rebuilt, so this "
"function returns ``None``."
msgstr ""

# b62756b19195481eb5407fef401f1cf1
#: ../../ref/utils.txt:88
msgid ""
"Learns what headers to take into account for some request path from the "
"response object. It stores those headers in a global path registry so that "
"later access to that path will know what headers to take into account "
"without building the response object itself. The headers are named in the "
"``Vary`` header of the response, but we want to prevent response generation."
msgstr ""

# c88ffdf5ea1a429e99551b11570f9098
#: ../../ref/utils.txt:95
msgid ""
"The list of headers to use for cache key generation is stored in the same "
"cache as the pages themselves. If the cache ages some data out of the cache, "
"this just means that we have to build the response once to get at the Vary "
"header and so at the list of headers to use for the cache key."
msgstr ""

# 682804d254344255a759e9fe1e832ffb
#: ../../ref/utils.txt:101
msgid "``django.utils.datastructures``"
msgstr ""

# 5c5b077371ce4a25b15e91c78f7af29c
#: ../../ref/utils.txt:108
msgid ""
"The :class:`django.utils.datastructures.SortedDict` class is a dictionary "
"that keeps its keys in the order in which they're inserted. ``SortedDict`` "
"adds two additional methods to the standard Python ``dict`` class:"
msgstr ""

# c28ba5ac1ad945ffbcce8ed7798b1815
#: ../../ref/utils.txt:117
msgid "Inserts the key, value pair before the item with the given index."
msgstr ""

# dbc3340b1136411a849b552286ccf868
#: ../../ref/utils.txt:123
msgid "Returns the value of the item at the given zero-based index."
msgstr ""

# fb8372cd3e8740eaad7580d257ffe41b
#: ../../ref/utils.txt:126
msgid "Creating a new SortedDict"
msgstr ""

# 67e1313923ef48d8828a21b28e8706d8
#: ../../ref/utils.txt:128
msgid ""
"Creating a new ``SortedDict`` must be done in a way where ordering is "
"guaranteed. For example::"
msgstr ""

# 3a452fce12d54d80a14a6dbad8616f19
#: ../../ref/utils.txt:133
msgid ""
"will not work. Passing in a basic Python ``dict`` could produce unreliable "
"results. Instead do::"
msgstr ""

# 0c0541f155284534ba261334d4a18971
#: ../../ref/utils.txt:139
msgid "``django.utils.dateparse``"
msgstr ""

# 801f5cd0ddcb4472b6ae900d540ae739
#: ../../ref/utils.txt:146
msgid "The functions defined in this module share the following properties:"
msgstr ""

# 5173e84d47ca42e7baa46d365049bf95
#: ../../ref/utils.txt:148
msgid ""
"They raise :exc:`~exceptions.ValueError` if their input is well formatted "
"but isn't a valid date or time."
msgstr ""

# 974d3cdb19684714a769f137217907aa
#: ../../ref/utils.txt:150
msgid "They return ``None`` if it isn't well formatted at all."
msgstr ""

# 0d1612959f3f4954913a558157d7268d
#: ../../ref/utils.txt:151
msgid ""
"They accept up to picosecond resolution in input, but they truncate it to "
"microseconds, since that's what Python supports."
msgstr ""

# dde23388092c4f09a755ab535222d9f6
#: ../../ref/utils.txt:156
msgid "Parses a string and returns a :class:`datetime.date`."
msgstr ""

# 1a9e9287c3fe4a8baab056c45878ede7
#: ../../ref/utils.txt:160
msgid "Parses a string and returns a :class:`datetime.time`."
msgstr ""

# f703eba167cb41e09da575b5623a010e
#: ../../ref/utils.txt:162
msgid ""
"UTC offsets aren't supported; if ``value`` describes one, the result is "
"``None``."
msgstr ""

# 8bde805d86f74207bc9c9e9ca1bff321
#: ../../ref/utils.txt:167
msgid "Parses a string and returns a :class:`datetime.datetime`."
msgstr ""

# 73340ad999374448818659445879182f
#: ../../ref/utils.txt:169
msgid ""
"UTC offsets are supported; if ``value`` describes one, the result's "
"``tzinfo`` attribute is a :class:`~django.utils.tzinfo.FixedOffset` instance."
msgstr ""

# 2b0cdcf1599a4423bfed90550fdcd968
#: ../../ref/utils.txt:174
msgid "``django.utils.decorators``"
msgstr ""

# 4de722df434747ed9490ffd6243f72fe
#: ../../ref/utils.txt:181
msgid ""
"Converts a function decorator into a method decorator. See :ref:`decorating "
"class based views<decorating-class-based-views>` for example usage."
msgstr ""

# aaf1a1104f1b4e059e2851a87610ce05
#: ../../ref/utils.txt:186
msgid ""
"Given a middleware class, returns a view decorator. This lets you use "
"middleware functionality on a per-view basis. The middleware is created with "
"no params passed."
msgstr ""

# 548ee1ad93e741d7ac49af90742af85e
#: ../../ref/utils.txt:192
msgid ""
"Like ``decorator_from_middleware``, but returns a function that accepts the "
"arguments to be passed to the middleware_class. For example, the :func:"
"`~django.views.decorators.cache.cache_page` decorator is created from the "
"``CacheMiddleware`` like this::"
msgstr ""

# 5be02ca3a0544423af5818a30fb99f95
#: ../../ref/utils.txt:204
msgid "``django.utils.encoding``"
msgstr ""

# 8d77ab69008843e5ac92da5917c87545
#: ../../ref/utils.txt:211
msgid "A class that derives ``__str__`` from ``__unicode__``."
msgstr ""

# 0125cc3db3964a35851012c1726a3a03
#: ../../ref/utils.txt:213
msgid ""
"On Python 2, ``__str__`` returns the output of ``__unicode__`` encoded as a "
"UTF-8 bytestring. On Python 3, ``__str__`` returns the output of "
"``__unicode__``."
msgstr ""

# e8ede5e099b6478d9d95b17df775c7de
#: ../../ref/utils.txt:217
msgid ""
"Useful as a mix-in. If you support Python 2 and 3 with a single code base, "
"you can inherit this mix-in and just define ``__unicode__``."
msgstr ""

# 496b7ea02ddc4f0e98de3a665fe55720
#: ../../ref/utils.txt:222
msgid ""
"A decorator that defines ``__unicode__`` and ``__str__`` methods under "
"Python 2. Under Python 3 it does nothing."
msgstr ""

# 166d36f72b2e4d17a6036aa94ac509fb
#: ../../ref/utils.txt:225
msgid ""
"To support Python 2 and 3 with a single code base, define a ``__str__`` "
"method returning text and apply this decorator to the class."
msgstr ""

# c8c1ce319c16460eb2be173e65d3ce04
#: ../../ref/utils.txt:232
msgid ""
"Returns a text object representing ``s`` -- ``unicode`` on Python 2 and "
"``str`` on Python 3. Treats bytestrings using the ``encoding`` codec."
msgstr ""

# 8d6da9f9eb484a29b923dd0cbbca7e63
# 42d0df4eff9b45e1bbcfee41c440dd47
# b6394a26c1f54adbbbf4681d5f1f900c
# e22eb73102ab42e78c1cc10a562cea2d
#: ../../ref/utils.txt:235 ../../ref/utils.txt:256 ../../ref/utils.txt:270
#: ../../ref/utils.txt:280
msgid ""
"If ``strings_only`` is ``True``, don't convert (some) non-string-like "
"objects."
msgstr ""

# f55d37374da3419196ba3026ee0c003d
#: ../../ref/utils.txt:240
msgid "Historical name of :func:`smart_text`. Only available under Python 2."
msgstr ""

# 7b300f33ca014ab7b0394fb91df329ff
#: ../../ref/utils.txt:244
msgid "Determine if the object instance is of a protected type."
msgstr ""

# 597336dec1ec420a92884c1d5c62dcc7
#: ../../ref/utils.txt:246
msgid ""
"Objects of protected types are preserved as-is when passed to "
"``force_text(strings_only=True)``."
msgstr ""

# 6a8bad48630d445082f6d0e91dd04840
#: ../../ref/utils.txt:253
msgid ""
"Similar to ``smart_text``, except that lazy instances are resolved to "
"strings, rather than kept as lazy objects."
msgstr ""

# ce792338aa324e758413ee1a5d4ea930
#: ../../ref/utils.txt:261
msgid "Historical name of :func:`force_text`. Only available under Python 2."
msgstr ""

# d8c5d4adfb6d4789895fb2170ba96b3d
#: ../../ref/utils.txt:267
msgid ""
"Returns a bytestring version of ``s``, encoded as specified in ``encoding``."
msgstr ""

# 059e186da63e4cd5b070a930e4ba33a4
#: ../../ref/utils.txt:277
msgid ""
"Similar to ``smart_bytes``, except that lazy instances are resolved to "
"bytestrings, rather than kept as lazy objects."
msgstr ""

# 6db71c22c5fd4b6a9c5124a40f2ef786
#: ../../ref/utils.txt:285
msgid ""
"Alias of :func:`smart_bytes` on Python 2 and :func:`smart_text` on Python 3. "
"This function returns a ``str`` or a lazy string."
msgstr ""

# a967c1f9dd2b4e00885e815b4b35b49f
#: ../../ref/utils.txt:288
msgid ""
"For instance, this is  suitable for writing to :data:`sys.stdout` on Python "
"2 and 3."
msgstr ""

# 9d28f2d194734b5ea352acbcaaac9cb3
#: ../../ref/utils.txt:293
msgid ""
"Alias of :func:`force_bytes` on Python 2 and :func:`force_text` on Python 3. "
"This function always returns a ``str``."
msgstr ""

# 8f73bcbb7d004ff6b47ed1e98f45d42c
#: ../../ref/utils.txt:298
msgid ""
"Convert an Internationalized Resource Identifier (IRI) portion to a URI "
"portion that is suitable for inclusion in a URL."
msgstr ""

# 7a620d1549424a23854238faf2b471f7
#: ../../ref/utils.txt:301
msgid ""
"This is the algorithm from section 3.1 of :rfc:`3987#section-3.1`. However, "
"since we are assuming input is either UTF-8 or unicode already, we can "
"simplify things a little from the full method."
msgstr ""

# ebcf1a44a96c47d59cb619210c856860
# db64d9ef21244fe9a0558b9374c38021
#: ../../ref/utils.txt:305 ../../ref/utils.txt:317
msgid "Returns an ASCII string containing the encoded result."
msgstr ""

# 84b2084600a44d3983d108abbdd89dae
#: ../../ref/utils.txt:309
msgid ""
"Convert a file system path to a URI portion that is suitable for inclusion "
"in a URL. The path is assumed to be either UTF-8 or unicode."
msgstr ""

# 0fcc1b98433c4382b2dc0236418aeff4
#: ../../ref/utils.txt:312
msgid ""
"This method will encode certain characters that would normally be recognized "
"as special characters for URIs.  Note that this method does not encode the ' "
"character, as it is a valid character within URIs. See "
"``encodeURIComponent()`` JavaScript function for more details."
msgstr ""

# 68ba1ae277374e4b906ef4779f0e6c01
#: ../../ref/utils.txt:320
msgid "``django.utils.feedgenerator``"
msgstr ""

# d94c3ce41b7b44f8aed115924495059e
#: ../../ref/utils.txt:342
msgid ""
"For simplifying the selection of a generator use ``feedgenerator."
"DefaultFeed`` which is currently ``Rss201rev2Feed``"
msgstr ""

# 031f6feac1e64a01a9c8d3cf7f773c61
#: ../../ref/utils.txt:345
msgid ""
"For definitions of the different versions of RSS, see: http://web.archive."
"org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/"
"incompatible-rss"
msgstr ""

# d695e90168c946e382824d6ddc876a42
#: ../../ref/utils.txt:350
msgid "Creates a TagURI."
msgstr ""

# b124a95628f44274b98e840c95ebc422
#: ../../ref/utils.txt:352
msgid ""
"See http://web.archive.org/web/20110514113830/http://diveintomark.org/"
"archives/2004/05/28/howto-atom-id"
msgstr ""

# fccec9d1c63946d785e902bae62e611d
#: ../../ref/utils.txt:355
msgid "SyndicationFeed"
msgstr ""

# 72d63feba8d148099512eae0b81deed1
#: ../../ref/utils.txt:359
msgid ""
"Base class for all syndication feeds. Subclasses should provide write()."
msgstr ""

# a45705507ba7472491a77b3c7112d27a
#: ../../ref/utils.txt:363
msgid ""
"Initialize the feed with the given dictionary of metadata, which applies to "
"the entire feed."
msgstr ""

# 6b49929b01ec4d3d9180ce11e31fc399
#: ../../ref/utils.txt:366
msgid ""
"Any extra keyword arguments you pass to ``__init__`` will be stored in "
"``self.feed``."
msgstr ""

# eea3a946fa4b4437a82b8d635c4e7c4a
#: ../../ref/utils.txt:374
msgid ""
"Adds an item to the feed. All args are expected to be Python ``unicode`` "
"objects except ``pubdate``, which is a ``datetime.datetime`` object, and "
"``enclosure``, which is an instance of the ``Enclosure`` class."
msgstr ""

# 3a68c464d846462ea4ecb62067f67bdd
#: ../../ref/utils.txt:382
msgid ""
"Return extra attributes to place on the root (i.e. feed/channel) element. "
"Called from ``write()``."
msgstr ""

# e00ef82e19804fb5abea682ace9a0826
#: ../../ref/utils.txt:387
msgid ""
"Add elements in the root (i.e. feed/channel) element. Called from "
"``write()``."
msgstr ""

# 341db8a65f2942f8aac713bf144aa6ba
#: ../../ref/utils.txt:392
msgid ""
"Return extra attributes to place on each item (i.e. item/entry) element."
msgstr ""

# 577d263ac3d34161a608c475a4395bc3
#: ../../ref/utils.txt:397
msgid "Add elements on each item (i.e. item/entry) element."
msgstr ""

# aa23895dfb604616b12f312ccb2ef4cb
#: ../../ref/utils.txt:401
msgid ""
"Outputs the feed in the given encoding to ``outfile``, which is a file-like "
"object. Subclasses should override this."
msgstr ""

# 8fd3e73eb43a4778bbc886827b9bc993
#: ../../ref/utils.txt:406
msgid "Returns the feed in the given encoding as a string."
msgstr ""

# 400feb5901e941ae9fbc497a3390c308
#: ../../ref/utils.txt:410
msgid ""
"Returns the latest item's ``pubdate``. If none of them have a ``pubdate``, "
"this returns the current date/time."
msgstr ""

# e918faaf06a8407bafc94b60dae9fd34
#: ../../ref/utils.txt:414
msgid "Enclosure"
msgstr ""

# 3c93f2d077dd4359b1351d3ba1a206ca
#: ../../ref/utils.txt:418
msgid "Represents an RSS enclosure"
msgstr ""

# 8054a27f0bea42a6b513033f0b448c96
#: ../../ref/utils.txt:421
msgid "RssFeed"
msgstr ""

# d208bfeedc8f4d5c8044f40ecbbe8e9f
#: ../../ref/utils.txt:426
msgid "Rss201rev2Feed"
msgstr ""

# a1e72c20074e48e2a201db2af66ea94e
#: ../../ref/utils.txt:430
msgid "Spec: http://cyber.law.harvard.edu/rss/rss.html"
msgstr ""

# 9e65e5cde9f0491f962445cdb7bf2739
#: ../../ref/utils.txt:433
msgid "RssUserland091Feed"
msgstr ""

# df14d751ba944a5ca536daf1f287009e
#: ../../ref/utils.txt:437
msgid "Spec: http://backend.userland.com/rss091"
msgstr ""

# f2e00d3405b44a118ae074ec6cbfdbb8
#: ../../ref/utils.txt:440
msgid "Atom1Feed"
msgstr ""

# 370e942753b04faab66fa093cc4e320e
#: ../../ref/utils.txt:444
msgid "Spec: http://tools.ietf.org/html/rfc4287"
msgstr ""

# 980815d45695438fb1d2c83754367a3b
#: ../../ref/utils.txt:447
msgid "``django.utils.functional``"
msgstr ""

# 88902497243745ee91c46ec1dd5d8236
#: ../../ref/utils.txt:454
msgid ""
"The ``@cached_property`` decorator caches the result of a method with a "
"single ``self`` argument as a property. The cached result will persist as "
"long as the instance does, so if the instance is passed around and the "
"function subsequently invoked, the cached result will be returned."
msgstr ""

# f8ddc2c9db41473a857ec81a8f3776cc
#: ../../ref/utils.txt:459
msgid ""
"Consider a typical case, where a view might need to call a model's method to "
"perform some computation, before placing the model instance into the "
"context, where the template might invoke the method once more::"
msgstr ""

# 29feff216ff34ea1a5b9dd830f0a58b5
#: ../../ref/utils.txt:477
msgid ""
"Here, ``friends()`` will be called twice. Since the instance ``person`` in "
"the view and the template are the same, ``@cached_property`` can avoid that::"
msgstr ""

# 780dd374d8b2442387ccecaae3e7e400
#: ../../ref/utils.txt:489
msgid ""
"Note that as the method is now a property, in Python code it will need to be "
"invoked appropriately::"
msgstr ""

# f3e2adaec4394710879e4ea32fd3ae81
#: ../../ref/utils.txt:495
msgid ""
"The cached value can be treated like an ordinary attribute of the instance::"
msgstr ""

# 051589c1cfd54e9f90133f2b8a324908
#: ../../ref/utils.txt:503
msgid ""
"As well as offering potential performance advantages, ``@cached_property`` "
"can ensure that an attribute's value does not change unexpectedly over the "
"life of an instance. This could occur with a method whose computation is "
"based on ``datetime.now()``, or simply if a change were saved to the "
"database by some other process in the brief interval between subsequent "
"invocations of a method on the same instance."
msgstr ""

# e00781aaae9e40e39b969fcf0678132d
#: ../../ref/utils.txt:512
msgid ""
"Django offers many utility functions (particularly in ``django.utils``) that "
"take a string as their first argument and do something to that string. These "
"functions are used by template filters as well as directly in other code."
msgstr ""

# f6f3c82e1ab8469bb020a8b9507c177b
#: ../../ref/utils.txt:458
msgid ""
"If you write your own similar functions and deal with translations, you'll "
"face the problem of what to do when the first argument is a lazy translation "
"object. You don't want to convert it to a string immediately, because you "
"might be using this function outside of a view (and hence the current "
"thread's locale setting will not be correct)."
msgstr ""

# ff4f39fb175e4348b914d0b56c989329
#: ../../ref/utils.txt:464
msgid ""
"For cases like this, use the ``django.utils.functional.allow_lazy()`` "
"decorator. It modifies the function so that *if* it's called with a lazy "
"translation as the first argument, the function evaluation is delayed until "
"it needs to be converted to a string."
msgstr ""

# 346964f1ecf34516a9bfa9b5848072ef
#: ../../ref/utils.txt:478
msgid ""
"The ``allow_lazy()`` decorator takes, in addition to the function to "
"decorate, a number of extra arguments (``*args``) specifying the type(s) "
"that the original function can return. Usually, it's enough to include "
"``unicode`` here and ensure that your function returns only Unicode strings."
msgstr ""

# 7dd86f3e177c40de98b5443be91dfb45
#: ../../ref/utils.txt:483
msgid ""
"Using this decorator means you can write your function and assume that the "
"input is a proper string, then add support for lazy translation objects at "
"the end."
msgstr ""

# 98ef913bb0c54c17ae3a0a610c725c3e
#: ../../ref/utils.txt:488
msgid "``django.utils.html``"
msgstr ""

# 22a30bfeafd6496692c4f3647bcd4ef8
#: ../../ref/utils.txt:493
msgid ""
"Usually you should build up HTML using Django's templates to make use of its "
"autoescape mechanism, using the utilities in :mod:`django.utils.safestring` "
"where appropriate. This module provides some additional low level "
"utilitiesfor escaping HTML."
msgstr ""

# a9fa9aca2cc84ffb92996c1db858956e
#: ../../ref/utils.txt:500
msgid ""
"Returns the given text with ampersands, quotes and angle brackets encoded "
"for use in HTML. The input is first passed through :func:`~django.utils."
"encoding.force_text` and the output has :func:`~django.utils.safestring."
"mark_safe` applied."
msgstr ""

# 8c38619ba9344c47aefce37d3a909f0e
#: ../../ref/utils.txt:507
msgid ""
"Similar to ``escape()``, except that it doesn't operate on pre-escaped "
"strings, so it will not double escape."
msgstr ""

# 404877efc80645baadb8493277b6ef28
#: ../../ref/utils.txt:512
msgid ""
"This is similar to `str.format`_, except that it is appropriate for building "
"up HTML fragments. All args and kwargs are passed through :func:"
"`conditional_escape` before being passed to ``str.format``."
msgstr ""

# 63652c56bc7c4382b920d4c99fa58390
#: ../../ref/utils.txt:516
msgid ""
"For the case of building up small HTML fragments, this function is to be "
"preferred over string interpolation using ``%`` or ``str.format`` directly, "
"because it applies escaping to all arguments - just like the Template system "
"applies escaping by default."
msgstr ""

# 6dee3b986af94b78b469ffce5bc10fe6
#: ../../ref/utils.txt:521
msgid "So, instead of writing:"
msgstr ""

# e69707ad3b124a74b8890128a4f879e2
#: ../../ref/utils.txt:530
msgid "you should instead use:"
msgstr ""

# 59fd0d1935fa433593dc60507163a34b
#: ../../ref/utils.txt:537
msgid ""
"This has the advantage that you don't need to apply :func:`escape` to each "
"argument and risk a bug and an XSS vulnerability if you forget one."
msgstr ""

# a269038d27a54976b876d28493375e61
#: ../../ref/utils.txt:540
msgid ""
"Note that although this function uses ``str.format`` to do the "
"interpolation, some of the formatting options provided by `str.format`_ (e."
"g. number formatting) will not work, since all arguments are passed through :"
"func:`conditional_escape` which (ultimately) calls :func:`~django.utils."
"encoding.force_text` on the values."
msgstr ""

# 9f2db374beb74d3f90bf59d7ef29b05f
#: ../../ref/utils.txt:548
msgid ""
"A wrapper of :func:`format_html`, for the common case of a group of "
"arguments that need to be formatted using the same format string, and then "
"joined using ``sep``. ``sep`` is also passed through :func:"
"`conditional_escape`."
msgstr ""

# f7b7ff4847b441f3840fab19eb37400f
#: ../../ref/utils.txt:553
msgid ""
"``args_generator`` should be an iterator that returns the sequence of "
"``args`` that will be passed to :func:`format_html`. For example::"
msgstr ""

# 34092b6003aa47e79749981d235defa7
#: ../../ref/utils.txt:561
msgid ""
"Removes anything that looks like an html tag from the string, that is "
"anything contained within ``<>``."
msgstr ""

# 4a8392ba28b84ed48ab8eb2bb76374bf
#: ../../ref/utils.txt:568
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"`` "
"the return value will be ``\"Joel is a slug\"``."
msgstr ""

# 09ea6d5995a44267ab0160bc1ace2b6a
#: ../../ref/utils.txt:573
msgid "Removes a space-separated list of [X]HTML tag names from the output."
msgstr ""

# 12f58a9d8d484af3880975bcf32b8a41
#: ../../ref/utils.txt:579
msgid ""
"If ``value`` is ``\"<b>Joel</b> <button>is</button> a <span>slug</span>\"`` "
"the return value will be ``\"Joel <button>is</button> a slug\"``."
msgstr ""

# 3310724b30af4258ace62dad62d4110f
#: ../../ref/utils.txt:584
msgid ""
"If ``value`` is ``\"<B>Joel</B> <button>is</button> a <span>slug</span>\"`` "
"the return value will be ``\"<B>Joel</B> <button>is</button> a slug\"``."
msgstr ""

# ec2cfeb623714c11a9179730e372dea5
#: ../../ref/utils.txt:590
msgid "``django.utils.http``"
msgstr ""

# edfdffaa88444331bff082309a19a2ca
#: ../../ref/utils.txt:597
msgid ""
"A version of Python's ``urllib.quote()`` function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent "
"``iri_to_uri()`` call without double-quoting occurring. Employs lazy "
"execution."
msgstr ""

# 91d7d6a18efd4091b26e05c6c0260539
#: ../../ref/utils.txt:605
msgid ""
"A version of Python's urllib.quote_plus() function that can operate on "
"unicode strings. The url is first UTF-8 encoded before quoting. The returned "
"string can safely be used as part of an argument to a subsequent "
"``iri_to_uri()`` call without double-quoting occurring. Employs lazy "
"execution."
msgstr ""

# c59faf6600ba4ffa97c44b711a5d526e
#: ../../ref/utils.txt:613
msgid ""
"A version of Python's urllib.urlencode() function that can operate on "
"unicode strings. The parameters are first case to UTF-8 encoded strings and "
"then encoded as per normal."
msgstr ""

# 87b1b953f6a5437f848f6f6f2ab257da
#: ../../ref/utils.txt:619
msgid ""
"Formats the time to ensure compatibility with Netscape's cookie standard."
msgstr ""

# a557e11b64b14002a0d556a4799958d8
# 3d20f0c136bc48a987d3cbe1469ba015
#: ../../ref/utils.txt:621 ../../ref/utils.txt:632
msgid ""
"Accepts a floating point number expressed in seconds since the epoch in UTC--"
"such as that outputted by ``time.time()``. If set to ``None``, defaults to "
"the current time."
msgstr ""

# f5483391de2c483090691af47f75a66b
#: ../../ref/utils.txt:625
msgid "Outputs a string in the format ``Wdy, DD-Mon-YYYY HH:MM:SS GMT``."
msgstr ""

# b7811641c9f0499c96ce75ef3f0667ca
#: ../../ref/utils.txt:629
msgid ""
"Formats the time to match the :rfc:`1123` date format as specified by HTTP :"
"rfc:`2616#section-3.3.1` section 3.3.1."
msgstr ""

# 3b15e3edc52945eda15f0dce6769fd6e
#: ../../ref/utils.txt:636
msgid "Outputs a string in the format ``Wdy, DD Mon YYYY HH:MM:SS GMT``."
msgstr ""

# 0454f4ff9a904117b18b6b341a85fa3c
#: ../../ref/utils.txt:640
msgid ""
"Converts a base 36 string to an integer. On Python 2 the output is "
"guaranteed to be an ``int`` and not a ``long``."
msgstr ""

# 445ae707305743e88c81a4ec90e88e19
#: ../../ref/utils.txt:645
msgid ""
"Converts a positive integer to a base 36 string. On Python 2 ``i`` must be "
"smaller than :data:`sys.maxint`."
msgstr ""

# 80c2b94e0c3f40e2a13b6bc82f4967da
#: ../../ref/utils.txt:649
msgid "``django.utils.safestring``"
msgstr ""

# 9d32eebfbe1c47d1a521c0e5759dc848
#: ../../ref/utils.txt:654
msgid ""
"Functions and classes for working with \"safe strings\": strings that can be "
"displayed safely without further escaping in HTML. Marking something as a "
"\"safe string\" means that the producer of the string has already turned "
"characters that should not be interpreted by the HTML engine (e.g. '<') into "
"the appropriate entities."
msgstr ""

# d43c1854d9c54ab490aa3556fecf6b3d
#: ../../ref/utils.txt:664
msgid ""
"A ``bytes`` subclass that has been specifically marked as \"safe\" (requires "
"no further escaping) for HTML output purposes."
msgstr ""

# d701c3998e414604a7a9af23d1e0a39a
#: ../../ref/utils.txt:669
msgid ""
"A ``str`` subclass that has been specifically marked as \"safe\" (requires "
"no further escaping) for HTML output purposes. This is :class:`SafeBytes` on "
"Python 2 and :class:`SafeText` on Python 3."
msgstr ""

# 07d0193ee5734f39bbdd517d56a38b7b
#: ../../ref/utils.txt:677
msgid ""
"A ``str`` (in Python 3) or ``unicode`` (in Python 2) subclass that has been "
"specifically marked as \"safe\" for HTML output purposes."
msgstr ""

# fc68429c6c6343ba815d567e1e26b0ad
#: ../../ref/utils.txt:682
msgid "Historical name of :class:`SafeText`. Only available under Python 2."
msgstr ""

# 2ab3311a7753489c81044795d6904e42
#: ../../ref/utils.txt:686
msgid ""
"Explicitly mark a string as safe for (HTML) output purposes. The returned "
"object can be used everywhere a string or unicode object is appropriate."
msgstr ""

# 922a390ee4fa4c76b6281fd47856d932
#: ../../ref/utils.txt:689
msgid "Can be called multiple times on a single string."
msgstr ""

# 71cb90fab3704f1f81d2fae5de9b9b84
#: ../../ref/utils.txt:693
msgid ""
"Explicitly mark a string as requiring HTML escaping upon output. Has no "
"effect on ``SafeData`` subclasses."
msgstr ""

# e4175cc967a24a46ae9bc06b3b56edf5
#: ../../ref/utils.txt:696
msgid ""
"Can be called multiple times on a single string (the resulting escaping is "
"only applied once)."
msgstr ""

# 8ca00452e9df47b195ebd47f1e457f04
#: ../../ref/utils.txt:700
msgid "``django.utils.text``"
msgstr ""

# b724c4727c7749d1876fe84e6b85207a
#: ../../ref/utils.txt:718
msgid "``django.utils.translation``"
msgstr ""

# 5ff8204aad1a43ca9239555fa21a624a
#: ../../ref/utils.txt:723
msgid ""
"For a complete discussion on the usage of the following see the :doc:"
"`translation documentation </topics/i18n/translation>`."
msgstr ""

# 725261753454465c99553e2c270611e0
#: ../../ref/utils.txt:728
msgid "Translates ``message`` and returns it in a UTF-8 bytestring"
msgstr ""

# 9031229177014bd794baf58f06e4ca1d
#: ../../ref/utils.txt:732
msgid "Translates ``message`` and returns it in a unicode string"
msgstr ""

# 0b7b77f3276a4df69f675ab7febaf762
#: ../../ref/utils.txt:736
msgid ""
"Translates ``message`` given the ``context`` and returns it in a unicode "
"string."
msgstr ""

# 891ddd8efba3457487c2aed95989149d
#: ../../ref/utils.txt:739
msgid "For more information, see :ref:`contextual-markers`."
msgstr ""

# c17b47bf30e34fbf98b8774e4adfecd3
# 429a033b2d71484e8012c50de4f3cd3b
#: ../../ref/utils.txt:745 ../../ref/utils.txt:776
msgid "Same as the non-lazy versions above, but using lazy execution."
msgstr ""

# b125cb6137c74dc48e65e66d23439b9d
# 6b2b63f826aa4fa5bb41b7e538b9d635
#: ../../ref/utils.txt:747 ../../ref/utils.txt:778
msgid "See :ref:`lazy translations documentation <lazy-translations>`."
msgstr ""

# 305293e234794d7891f21298da796595
#: ../../ref/utils.txt:752
msgid ""
"Marks strings for translation but doesn't translate them now. This can be "
"used to store strings in global variables that should stay in the base "
"language (because they might be used externally) and will be translated "
"later."
msgstr ""

# dde9b5fdbcf146b8aa728d6c10212a2c
#: ../../ref/utils.txt:759
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a UTF-8 bytestring."
msgstr ""

# 9214157d556343a7a5df6d72a5f252bd
#: ../../ref/utils.txt:764
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` in a unicode string."
msgstr ""

# 21a339924c1e47c4b2a0fd12a99ce913
#: ../../ref/utils.txt:769
msgid ""
"Translates ``singular`` and ``plural`` and returns the appropriate string "
"based on ``number`` and the ``context`` in a unicode string."
msgstr ""

# c7e5a9b1e9e24e7b8f5812f0b4280856
#: ../../ref/utils.txt:782
msgid ""
"Lazy variant of string concatenation, needed for translations that are "
"constructed from multiple parts."
msgstr ""

# 657003e532e84ba1ac64b9810a124e8f
#: ../../ref/utils.txt:787
msgid ""
"Fetches the translation object for a given language and installs it as the "
"current translation object for the current thread."
msgstr ""

# 8e24c89a05644209afbe35ca28b6abec
#: ../../ref/utils.txt:792
msgid ""
"De-installs the currently active translation object so that further _ calls "
"will resolve against the default translation object, again."
msgstr ""

# dadbe28dc3f44479a9fc61b32085eeb9
#: ../../ref/utils.txt:797
msgid ""
"Makes the active translation object a NullTranslations() instance. This is "
"useful when we want delayed translations to appear as the original string "
"for some reason."
msgstr ""

# 02704aa458f944dcbe6ac6fbf6736524
#: ../../ref/utils.txt:805
msgid ""
"A Python context manager that uses :func:`django.utils.translation.activate` "
"to fetch the translation object for a given language, installing it as the "
"translation object for the current thread and reinstall the previous active "
"language on exit. Optionally it can simply deinstall the temporary "
"translation on exit with :func:`django.utils.translation.deactivate` if the "
"deactivate argument is True. If you pass None as the language argument, a "
"NullTranslations() instance is installed while the context is active."
msgstr ""

# ed82109bf97e4ef4b257e6548641cece
#: ../../ref/utils.txt:816
msgid "Returns the currently selected language code."
msgstr ""

# ed0f152da7814baaaf51227ad3b595b6
#: ../../ref/utils.txt:820
msgid "Returns selected language's BiDi layout:"
msgstr ""

# aeb14b64645b43cba0084a8e6dfd1eba
#: ../../ref/utils.txt:822
msgid "``False`` = left-to-right layout"
msgstr ""

# 7c12a51fb0df464e8a0cd7d834a32827
#: ../../ref/utils.txt:823
msgid "``True`` = right-to-left layout"
msgstr ""

# 3dc2a5659dae476ba0006323c23dbbe0
#: ../../ref/utils.txt:829
msgid ""
"Analyzes the request to find what language the user wants the system to "
"show. Only languages listed in settings.LANGUAGES are taken into account. If "
"the user requests a sublanguage where we have a main language, we send out "
"the main language."
msgstr ""

# 20ddeccd48d34d5faa9c0e92cb915fb9
#: ../../ref/utils.txt:834
msgid ""
"If ``check_path`` is ``True``, the function first checks the requested URL "
"for whether its path begins with a language code listed in the :setting:"
"`LANGUAGES` setting."
msgstr ""

# 056ff3f139a6407dba2b2713b1c6993c
#: ../../ref/utils.txt:840
msgid "Turns a language name (en-us) into a locale name (en_US)."
msgstr ""

# 51682e95e841482286e8990cc127a2eb
#: ../../ref/utils.txt:844
msgid ""
"Turns a Django template into something that is understood by xgettext. It "
"does so by translating the Django translation tags into standard gettext "
"function invocations."
msgstr ""

# 479f1705fcec4cc8854f558bf3254a75
#: ../../ref/utils.txt:851
msgid "``django.utils.timezone``"
msgstr ""

# eb911a80d6fd479a99b9f8ca0628e25e
#: ../../ref/utils.txt:860
msgid ":class:`~datetime.tzinfo` instance that represents UTC."
msgstr ""

# 104a83a2a0cc456c882b5d7970adf963
#: ../../ref/utils.txt:864
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`default time zone <default-current-time-zone>`."
msgstr ""

# 65a7912c1e3c48a885b7f0100ecd15bf
#: ../../ref/utils.txt:869
msgid ""
"Returns the name of the :ref:`default time zone <default-current-time-zone>`."
msgstr ""

# bbd802e400614303bea06cbd7790f591
#: ../../ref/utils.txt:874
msgid ""
"Returns a :class:`~datetime.tzinfo` instance that represents the :ref:"
"`current time zone <default-current-time-zone>`."
msgstr ""

# 21ce206bf15e4df38cd6795586399a4e
#: ../../ref/utils.txt:879
msgid ""
"Returns the name of the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# 945e1e02fdb04380a580f54951108c75
#: ../../ref/utils.txt:884
msgid ""
"Sets the :ref:`current time zone <default-current-time-zone>`. The "
"``timezone`` argument must be an instance of a :class:`~datetime.tzinfo` "
"subclass or, if pytz_ is available, a time zone name."
msgstr ""

# 76439a44c184414e9c3593f61ccd39fb
#: ../../ref/utils.txt:890
msgid "Unsets the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# bbfc3e9cc66f4d8fa08dd9b3bae0d9eb
#: ../../ref/utils.txt:894
msgid ""
"This is a Python context manager that sets the :ref:`current time zone "
"<default-current-time-zone>` on entry with :func:`activate()`, and restores "
"the previously active time zone on exit. If the ``timezone`` argument is "
"``None``, the :ref:`current time zone <default-current-time-zone>` is unset "
"on entry with :func:`deactivate()` instead."
msgstr ""

# b1112469139a484e996d9a16c78dcb83
#: ../../ref/utils.txt:904
msgid ""
"Converts an aware :class:`~datetime.datetime` to a different time zone, by "
"default the :ref:`current time zone <default-current-time-zone>`."
msgstr ""

# c556a6cf82cf46489131b180469acfdb
#: ../../ref/utils.txt:907
msgid ""
"This function doesn't work on naive datetimes; use :func:`make_aware` "
"instead."
msgstr ""

# 241163440b6d41d082e2d0846c1f8dc8
#: ../../ref/utils.txt:912
msgid ""
"Returns an aware or naive :class:`~datetime.datetime` that represents the "
"current point in time when :setting:`USE_TZ` is ``True`` or ``False`` "
"respectively."
msgstr ""

# 101c2e51f2a7497cb14646e2786e9e71
#: ../../ref/utils.txt:918
msgid ""
"Returns ``True`` if ``value`` is aware, ``False`` if it is naive. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# 08f6da7344ab4a1aa7dcd9c360fac8d4
#: ../../ref/utils.txt:923
msgid ""
"Returns ``True`` if ``value`` is naive, ``False`` if it is aware. This "
"function assumes that ``value`` is a :class:`~datetime.datetime`."
msgstr ""

# 70929cdc6c0745df806e582009eb269a
#: ../../ref/utils.txt:928
msgid ""
"Returns an aware :class:`~datetime.datetime` that represents the same point "
"in time as ``value`` in ``timezone``, ``value`` being a naive :class:"
"`~datetime.datetime`."
msgstr ""

# 1af39e7d848e461ea76a606adcbb0f4b
#: ../../ref/utils.txt:932
msgid ""
"This function can raise an exception if ``value`` doesn't exist or is "
"ambiguous because of DST transitions."
msgstr ""

# ae6fdd45700045809d2ffdcd1ea3ccab
#: ../../ref/utils.txt:937
msgid ""
"Returns an naive :class:`~datetime.datetime` that represents in "
"``timezone``  the same point in time as ``value``, ``value`` being an aware :"
"class:`~datetime.datetime`"
msgstr ""

# f1b3f4c876d34ec88ab3a6dc35453980
#: ../../ref/utils.txt:944
msgid "``django.utils.tzinfo``"
msgstr ""

# 958b9adece6346668edbc59ea29a3dbf
#: ../../ref/utils.txt:951
msgid "Fixed offset in minutes east from UTC."
msgstr ""

# 76c779c05bc64a2cafc6b67747b5644a
#: ../../ref/utils.txt:955
msgid "Proxy timezone information from time module."
msgstr ""

# 32b57780d03544e797f3ae2384b60761
#: ../../ref/validators.txt:3
msgid "Validators"
msgstr ""

# 09ad60c914af4b46bf92b09e8385ff55
#: ../../ref/validators.txt:9
msgid "Writing validators"
msgstr ""

# 3b903fc646a740de8ddd37ad0380afe4
#: ../../ref/validators.txt:11
msgid ""
"A validator is a callable that takes a value and raises a :exc:`~django.core."
"exceptions.ValidationError` if it doesn't meet some criteria. Validators can "
"be useful for re-using validation logic between different types of fields."
msgstr ""

# 98f87cd6e2164add9d33b9e40fc83c8b
#: ../../ref/validators.txt:16
msgid "For example, here's a validator that only allows even numbers::"
msgstr ""

# fc6e1617cf9e42cd97afa6ca69e7aabc
#: ../../ref/validators.txt:24
msgid ""
"You can add this to a model field via the field's :attr:`~django.db.models."
"Field.validators` argument::"
msgstr ""

# 7823699bc842453396e8be22689462ad
#: ../../ref/validators.txt:32
msgid ""
"Because values are converted to Python before validators are run, you can "
"even use the same validator with forms::"
msgstr ""

# cbeaa0f723b64c968721cdee0b6234c7
#: ../../ref/validators.txt:41
msgid "How validators are run"
msgstr ""

# 5f5462cbefa74d609927e57523ea08a0
#: ../../ref/validators.txt:43
msgid ""
"See the :doc:`form validation </ref/forms/validation>` for more information "
"on how validators are run in forms, and :ref:`Validating objects <validating-"
"objects>` for how they're run in models. Note that validators will not be "
"run automatically when you save a model, but if you are using a :class:"
"`~django.forms.ModelForm`, it will run your validators on any fields that "
"are included in your form. See the :doc:`ModelForm documentation </topics/"
"forms/modelforms>` for information on how model validation interacts with "
"forms."
msgstr ""

# 76aab42326664ea6b217e7908bd88292
#: ../../ref/validators.txt:53
msgid "Built-in validators"
msgstr ""

# cf544d9bcf874665a488e17da7a51108
#: ../../ref/validators.txt:55
msgid ""
"The :mod:`django.core.validators` module contains a collection of callable "
"validators for use with model and form fields. They're used internally but "
"are available for use with your own fields, too. They can be used in "
"addition to, or in lieu of custom ``field.clean()`` methods."
msgstr ""

# d77be838adcf434a9d58d3be9147adbf
#: ../../ref/validators.txt:61
msgid "``RegexValidator``"
msgstr ""

# 385481674f2e4da884c21a9f5ef8b89d
#: ../../ref/validators.txt:64
msgid ""
"If not ``None``, overrides :attr:`regex`. Can be a regular expression string "
"or a pre-compiled regular expression."
msgstr ""

# 655de38de41445b784df5c5f4b7d7cbb
#: ../../ref/validators.txt:66
msgid "If not ``None``, overrides :attr:`.message`."
msgstr ""

# 7b38c2af9b994dca80b07e29532d036f
#: ../../ref/validators.txt:67
msgid "If not ``None``, overrides :attr:`code`."
msgstr ""

# afff49806d5046c596fd28a1945bfc56
#: ../../ref/validators.txt:71
msgid ""
"The regular expression pattern to search for the provided ``value``, or a "
"pre-compiled regular expression. Raises a :exc:`~django.core.exceptions."
"ValidationError` with :attr:`message` and :attr:`code` if no match is found. "
"By default, matches any string (including an empty string)."
msgstr ""

# d3150643f9394a2f9486f327d2a2dce5
#: ../../ref/validators.txt:79
msgid ""
"The error message used by :exc:`~django.core.exceptions.ValidationError` if "
"validation fails. Defaults to ``\"Enter a valid value\"``."
msgstr ""

# e78b825342a146f8bad2ab119ea5347e
#: ../../ref/validators.txt:85
msgid ""
"The error code used by :exc:`~django.core.exceptions.ValidationError` if "
"validation fails. Defaults to ``\"invalid\"``."
msgstr ""

# 692a288070424740b7f51187318d3e73
#: ../../ref/validators.txt:89
msgid "``URLValidator``"
msgstr ""

# 1b6a28f82ee64d648acd6f22653a7edb
#: ../../ref/validators.txt:92
msgid ""
"A :class:`RegexValidator` that ensures a value looks like a URL, and raises "
"an error code of ``'invalid'`` if it doesn't."
msgstr ""

# 8f051988847e46bba2869c277a5abd4b
#: ../../ref/validators.txt:96
msgid "``validate_email``"
msgstr ""

# f3b8bdd1d31e4c3d8e72d78861a33404
#: ../../ref/validators.txt:99
msgid ""
"A :class:`RegexValidator` instance that ensures a value looks like an email "
"address."
msgstr ""

# 4b3d47ace923449ab86a6d3878fddd6b
#: ../../ref/validators.txt:103
msgid "``validate_slug``"
msgstr ""

# dd2f05af63c047f39ffab93f9c8c7f8f
#: ../../ref/validators.txt:106
msgid ""
"A :class:`RegexValidator` instance that ensures a value consists of only "
"letters, numbers, underscores or hyphens."
msgstr ""

# 5d66ea188b5d4e2dae737fd0311d3018
#: ../../ref/validators.txt:110
msgid "``validate_ipv4_address``"
msgstr ""

# 92e40be353fa40049afda7a99503e3c9
#: ../../ref/validators.txt:113
msgid ""
"A :class:`RegexValidator` instance that ensures a value looks like an IPv4 "
"address."
msgstr ""

# cd512987ddb74be5b3960befe24bb75e
#: ../../ref/validators.txt:117
msgid "``validate_ipv6_address``"
msgstr ""

# cb475d727c454e5989f27688985fdd55
#: ../../ref/validators.txt:122
msgid "Uses ``django.utils.ipv6`` to check the validity of an IPv6 address."
msgstr ""

# d27e90dd9255465fbd594d50e3117231
#: ../../ref/validators.txt:125
msgid "``validate_ipv46_address``"
msgstr ""

# 64d14d9e889d420fa93b7ed9ebb63856
#: ../../ref/validators.txt:130
msgid ""
"Uses both ``validate_ipv4_address`` and ``validate_ipv6_address`` to ensure "
"a value is either a valid IPv4 or IPv6 address."
msgstr ""

# 3993baffbf4f4eb1b5ee310f8de236d8
#: ../../ref/validators.txt:134
msgid "``validate_comma_separated_integer_list``"
msgstr ""

# 87f087f90eb6492ca6718fc8b8194011
#: ../../ref/validators.txt:137
msgid ""
"A :class:`RegexValidator` instance that ensures a value is a comma-separated "
"list of integers."
msgstr ""

# 4337f54e0c6b471db1763e522cbd4fe0
#: ../../ref/validators.txt:141
msgid "``MaxValueValidator``"
msgstr ""

# b8938aa60611469bac17a0f841e131f3
#: ../../ref/validators.txt:144
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'max_value'`` if ``value`` is greater than ``max_value``."
msgstr ""

# 66ce15209add4e7aa1e32cbd0f06de7a
#: ../../ref/validators.txt:148
msgid "``MinValueValidator``"
msgstr ""

# 3210fa4edac54103ba2a38f9290334f7
#: ../../ref/validators.txt:151
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'min_value'`` if ``value`` is less than ``min_value``."
msgstr ""

# a75f50c438c94a43b172f7b52980dc96
#: ../../ref/validators.txt:155
msgid "``MaxLengthValidator``"
msgstr ""

# 57135d1990ba43bda820f9458632a0c8
#: ../../ref/validators.txt:158
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'max_length'`` if the length of ``value`` is greater than ``max_length``."
msgstr ""

# 637fb0500913422d9ded0197ec3c3fd4
#: ../../ref/validators.txt:162
msgid "``MinLengthValidator``"
msgstr ""

# 8d1f60bed39f4f7fbc97766bd46044e4
#: ../../ref/validators.txt:165
msgid ""
"Raises a :exc:`~django.core.exceptions.ValidationError` with a code of "
"``'min_length'`` if the length of ``value`` is less than ``min_length``."
msgstr ""

# b5c33dfb02f84073a58a7cff715ba171
#: ../../ref/views.txt:3
msgid "Built-in Views"
msgstr ""

# 158b3721493f4559b566de1a16a3b7be
#: ../../ref/views.txt:8
msgid ""
"Several of Django's built-in views are documented in :doc:`/topics/http/"
"views` as well as elsewhere in the documentation."
msgstr ""

# 3d0f026810b7427db09c1f4c9f588e73
#: ../../ref/views.txt:12
msgid "Serving files in development"
msgstr ""

# 23b671c980af44dab402b888e4d40aeb
#: ../../ref/views.txt:16
msgid ""
"There may be files other than your project's static assets that, for "
"convenience, you'd like to have Django serve for you in local development. "
"The :func:`~django.views.static.serve` view can be used to serve any "
"directory you give it. (This view is **not** hardened for production use and "
"should be used only as a development aid; you should serve these files in "
"production using a real front-end webserver)."
msgstr ""

# c95c817e9db9448abd173cd6b0eeec01
#: ../../ref/views.txt:23
msgid ""
"The most likely example is user-uploaded content in :setting:`MEDIA_ROOT`. "
"``django.contrib.staticfiles`` is intended for static assets and has no "
"built-in handling for user-uploaded files, but you can have Django serve "
"your :setting:`MEDIA_ROOT` by appending something like this to your URLconf::"
msgstr ""

# bca5621d19974ff6b93b7c606e3f8636
#: ../../ref/views.txt:39
msgid ""
"Note, the snippet assumes your :setting:`MEDIA_URL` has a value of ``'/"
"media/'``. This will call the :func:`~django.views.static.serve` view, "
"passing in the path from the URLconf and the (required) ``document_root`` "
"parameter."
msgstr ""

# 69bdf5c760d14a42a25f4325280a7157
#: ../../ref/views.txt:44
msgid ""
"Since it can become a bit cumbersome to define this URL pattern, Django "
"ships with a small URL helper function :func:`~django.conf.urls.static."
"static` that takes as parameters the prefix such as :setting:`MEDIA_URL` and "
"a dotted path to a view, such as ``'django.views.static.serve'``. Any other "
"function parameter will be transparently passed to the view."
msgstr ""
