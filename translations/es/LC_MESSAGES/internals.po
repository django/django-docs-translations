# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# e4db27214f7e7544f2022c647b585925_bb0e321, 2015
# Joaquín T <joaquintita@gmail.com>, 2014
# Samuel David Ramirez Mantione <venezuelapoliglota@hotmail.com>, 2015-2016
# Uriel Medina <urimeba511@gmail.com>, 2021
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-04 12:41-0500\n"
"PO-Revision-Date: 2013-04-02 19:59+0000\n"
"Last-Translator: Uriel Medina <urimeba511@gmail.com>, 2021\n"
"Language-Team: Spanish (http://app.transifex.com/django/django-docs/language/"
"es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? "
"1 : 2;\n"

msgid "Reporting bugs and requesting features"
msgstr "Cómo informar de errores y solicitar funcionalidades"

msgid ""
"Please report security issues **only** to security@djangoproject.com.  This "
"is a private list only open to long-time, highly trusted Django developers, "
"and its archives are not public. For further details, please see :doc:`our "
"security policies </internals/security>`."
msgstr ""
"Por favor, informe los problemas de seguridad **solo** a "
"security@djangoproject.com. Esta es una lista privada solo disponible para "
"desarrolladores de Django altamente confiables y de conocida trayectoria, y "
"sus archivos no son de dominio público. Para más información, por favor "
"consulte :doc:`nuestra política de seguridad </internals/security>`."

msgid ""
"Otherwise, before reporting a bug or requesting a new feature on the `ticket "
"tracker <https://code.djangoproject.com/>`_, consider these points:"
msgstr ""

msgid ""
"Check that someone hasn't already filed the bug or feature request by "
"`searching`_ or running `custom queries`_ in the ticket tracker."
msgstr ""
"Compruebe que alguien no haya presentado todavía el error o la solicitud de "
"la funcionalidad mediante la `búsqueda` o ejecución de `peticiones "
"personalizadas` en el rastreador de tickets."

msgid ""
"Don't use the ticket system to ask support questions. Use the |django-users| "
"list or the `#django`_ IRC channel for that."
msgstr ""
"No utilice el sistema de tickets para realizar preguntas de soporte. Utilice "
"la lista  |django-users| o el canal #`django`_ IRC para eso."

msgid ""
"Don't reopen issues that have been marked \"wontfix\" without finding "
"consensus to do so on the `Django Forum`_ or |django-developers| list."
msgstr ""

msgid ""
"Don't use the ticket tracker for lengthy discussions, because they're likely "
"to get lost. If a particular ticket is controversial, please move the "
"discussion to the `Django Forum`_ or |django-developers| list."
msgstr ""

msgid "Reporting bugs"
msgstr "Informe de errores"

msgid ""
"Well-written bug reports are *incredibly* helpful. However, there's a "
"certain amount of overhead involved in working with any bug tracking system "
"so your help in keeping our ticket tracker as useful as possible is "
"appreciated. In particular:"
msgstr ""
"Los informes de errores bien escritos son *muy* útiles. Sin embargo, hay una "
"cierta cantidad de sobrecarga involucrada en trabajar con cualquier sistema "
"de seguimiento de errores, de modo que su ayuda para mantener nuestro "
"rastreador de tickets tan útil como sea posible es apreciada. En particular:"

msgid ""
"**Do** read the :doc:`FAQ </faq/index>` to see if your issue might be a well-"
"known question."
msgstr ""
"**Lea** las :doc:`FAQ </faq/index>` para ver si su problema puede ser una "
"pregunta frecuente."

msgid ""
"**Do** ask on |django-users| or `#django`_ *first* if you're not sure if "
"what you're seeing is a bug."
msgstr ""
"*Primero* **pregunte** en |django-users| or `#django`_ si no está seguro de "
"que lo que ve es un bug."

msgid ""
"**Do** write complete, reproducible, specific bug reports. You must include "
"a clear, concise description of the problem, and a set of instructions for "
"replicating it. Add as much debug information as you can: code snippets, "
"test cases, exception backtraces, screenshots, etc. A nice small test case "
"is the best way to report a bug, as it gives us a helpful way to confirm the "
"bug quickly."
msgstr ""

msgid ""
"**Don't** post to |django-developers| only to announce that you have filed a "
"bug report. All the tickets are mailed to another list, |django-updates|, "
"which is tracked by developers and interested community members; we see them "
"as they are filed."
msgstr ""

msgid ""
"To understand the lifecycle of your ticket once you have created it, refer "
"to :doc:`triaging-tickets`."
msgstr ""
"Para entender el ciclo de vida de su ticket una vez que lo ha creado, "
"consulte: doc: `Priorización de tickets`."

msgid "Reporting user interface bugs and features"
msgstr "Reporte de fallos de interfaz de usuario y funcionalidades"

msgid ""
"If your bug or feature request touches on anything visual in nature, there "
"are a few additional guidelines to follow:"
msgstr ""
"Si su informe de error o solicitud de funcionalidad se refiere a algo de "
"caracter visual, hay algunas pautas adicionales a seguir:"

msgid ""
"Include screenshots in your ticket which are the visual equivalent of a "
"minimal test case. Show off the issue, not the crazy customizations you've "
"made to your browser."
msgstr ""

msgid ""
"If the issue is difficult to show off using a still image, consider "
"capturing a *brief* screencast. If your software permits it, capture only "
"the relevant area of the screen."
msgstr ""
"Si el problema es difícil de mostrar utilizando una imagen fija, considere "
"la captura de un video de tipo screencast *de corta duración*. Si el "
"software lo permite, capture sólo el área correspondiente de la pantalla."

msgid ""
"If you're offering a patch that changes the look or behavior of Django's UI, "
"you **must** attach before *and* after screenshots/screencasts. Tickets "
"lacking these are difficult for triagers to assess quickly."
msgstr ""

msgid ""
"Screenshots don't absolve you of other good reporting practices. Make sure "
"to include URLs, code snippets, and step-by-step instructions on how to "
"reproduce the behavior visible in the screenshots."
msgstr ""
"Las capturas de pantalla no lo eximen de utilizar otras buenas prácticas de "
"presentación de informes. Asegúrese de incluir direcciones URL, fragmentos "
"de código e instrucciones paso a paso sobre cómo reproducir el "
"comportamiento que se observa en las capturas de pantalla."

msgid ""
"Make sure to set the UI/UX flag on the ticket so interested parties can find "
"your ticket."
msgstr ""
"Asegúrese de fijar el marcador de UI / UX en el reporte de tickets de manera "
"que  los interesados ​​puedan encontrar su reporte."

msgid "Requesting features"
msgstr "Solicitando funcionalidades"

msgid ""
"We're always trying to make Django better, and your feature requests are a "
"key part of that. Here are some tips on how to make a request most "
"effectively:"
msgstr ""
"Siempre estamos tratando de mejorar Django, y sus solicitudes de "
"funcionalidades son una parte de crucial importancia para ello. Estos son "
"algunos consejos sobre cómo hacer una solicitud de forma más eficaz:"

msgid ""
"Make sure the feature actually requires changes in Django's core. If your "
"idea can be developed as an independent application or module — for "
"instance, you want to support another database engine — we'll probably "
"suggest that you develop it independently. Then, if your project gathers "
"sufficient community support, we may consider it for inclusion in Django."
msgstr ""

msgid ""
"First request the feature on the `Django Forum`_ or |django-developers| "
"list, not in the ticket tracker. It'll get read more closely if it's on the "
"mailing list. This is even more important for large-scale feature requests. "
"We like to discuss any big changes to Django's core before actually working "
"on them."
msgstr ""

msgid ""
"Describe clearly and concisely what the missing feature is and how you'd "
"like to see it implemented. Include example code (non-functional is OK) if "
"possible."
msgstr ""
"Describa de forma clara y concisa cuál es  la funcionalidad que falta y cómo "
"le gustaría que fuera implementada. Incluya ejemplo de código (si es no "
"funcional está bien) si es posible."

msgid ""
"Explain *why* you'd like the feature. Explaining a minimal use case will "
"help others understand where it fits in, and if there are already other ways "
"of achieving the same thing."
msgstr ""

msgid ""
"If there's a consensus agreement on the feature, then it's appropriate to "
"create a ticket. Include a link to the discussion in the ticket description."
msgstr ""

msgid ""
"As with most open-source projects, code talks. If you are willing to write "
"the code for the feature yourself or, even better, if you've already written "
"it, it's much more likely to be accepted. Fork Django on GitHub, create a "
"feature branch, and show us your work!"
msgstr ""

msgid "See also: :ref:`documenting-new-features`."
msgstr "Consulte también: :ref: `documentando nuevas funcionalidades`."

msgid "How we make decisions"
msgstr "Cómo tomamos decisiones"

msgid ""
"Whenever possible, we strive for a rough consensus. To that end, we'll often "
"have informal votes on |django-developers| or the Django Forum about a "
"feature. In these votes we follow the voting style invented by Apache and "
"used on Python itself, where votes are given as +1, +0, -0, or -1. Roughly "
"translated, these votes mean:"
msgstr ""

msgid "+1: \"I love the idea and I'm strongly committed to it.\""
msgstr "+1: \"Me encanta la idea y estoy firmemente comprometido con ella.\""

msgid "+0: \"Sounds OK to me.\""
msgstr "+0: \"Me parece bien.\""

msgid "-0: \"I'm not thrilled, but I won't stand in the way.\""
msgstr "-0: \"No me gusta, pero no me interpondré en el camino.\""

msgid ""
"-1: \"I strongly disagree and would be very unhappy to see the idea turn "
"into reality.\""
msgstr ""
"-1: \"Estoy totalmente en desacuerdo y estaría muy descontento de ver que la "
"idea se haga realidad.\""

msgid ""
"Although these votes are informal, they'll be taken very seriously. After a "
"suitable voting period, if an obvious consensus arises we'll follow the "
"votes."
msgstr ""

msgid ""
"However, consensus is not always possible. If consensus cannot be reached, "
"or if the discussion toward a consensus fizzles out without a concrete "
"decision, the decision may be deferred to the :ref:`steering council "
"<steering-council>`."
msgstr ""

msgid ""
"Internally, the steering council will use the same voting mechanism. A "
"proposition will be considered carried if:"
msgstr ""

msgid ""
"There are at least three \"+1\" votes from members of the steering council."
msgstr ""

msgid "There is no \"-1\" vote from any member of the steering council."
msgstr ""

msgid "Votes should be submitted within a week."
msgstr "Los votos deberían ser presentados dentro de una semana."

msgid ""
"Since this process allows any steering council member to veto a proposal, a "
"\"-1\" vote should be accompanied by an explanation of what it would take to "
"convert that \"-1\" into at least a \"+0\"."
msgstr ""

msgid ""
"Votes on technical matters should be announced and held in public on the |"
"django-developers| mailing list or on the `Django Forum`_."
msgstr ""

msgid "Committing code"
msgstr "Confirmando código"

msgid ""
"This section is addressed to the mergers and to anyone interested in knowing "
"how code gets committed into Django. If you're a community member who wants "
"to contribute code to Django, look at :doc:`writing-code/working-with-git` "
"instead."
msgstr ""

msgid "Handling pull requests"
msgstr "Gestionando las pull requests"

msgid ""
"Since Django is hosted on GitHub, patches are provided in the form of pull "
"requests."
msgstr ""

msgid ""
"When committing a pull request, make sure each individual commit matches the "
"commit guidelines described below. Contributors are expected to provide the "
"best pull requests possible. In practice mergers - who will likely be more "
"familiar with the commit guidelines - may decide to bring a commit up to "
"standard themselves."
msgstr ""

msgid ""
"You may want to have Jenkins or GitHub actions test the pull request with "
"one of the pull request builders that doesn't run automatically, such as "
"Oracle or Selenium. See the `CI wiki page`_ for instructions."
msgstr ""

msgid ""
"If you find yourself checking out pull requests locally more often, this git "
"alias will be helpful:"
msgstr ""

msgid ""
"Add it to your ``~/.gitconfig``, and set ``upstream`` to be ``django/"
"django``. Then you can run ``git pr ####`` to checkout the corresponding "
"pull request."
msgstr ""

msgid ""
"At this point, you can work on the code. Use ``git rebase -i`` and ``git "
"commit --amend`` to make sure the commits have the expected level of "
"quality. Once you're ready:"
msgstr ""

msgid ""
"Force push to the branch after rebasing on main but before merging and "
"pushing to upstream. This allows the commit hashes on main and the branch to "
"match which automatically closes the pull request."
msgstr ""

msgid ""
"If a pull request doesn't need to be merged as multiple commits, you can use "
"GitHub's \"Squash and merge\" button on the website. Edit the commit message "
"as needed to conform to :ref:`the guidelines <committing-guidelines>` and "
"remove the pull request number that's automatically appended to the "
"message's first line."
msgstr ""

msgid ""
"When rewriting the commit history of a pull request, the goal is to make "
"Django's commit history as usable as possible:"
msgstr ""

msgid ""
"If a patch contains back-and-forth commits, then rewrite those into one. For "
"example, if a commit adds some code and a second commit fixes stylistic "
"issues introduced in the first commit, those commits should be squashed "
"before merging."
msgstr ""

msgid ""
"Separate changes to different commits by logical grouping: if you do a "
"stylistic cleanup at the same time as you do other changes to a file, "
"separating the changes into two different commits will make reviewing "
"history easier."
msgstr ""

msgid "Beware of merges of upstream branches in the pull requests."
msgstr ""

msgid ""
"Tests should pass and docs should build after each commit. Neither the tests "
"nor the docs should emit warnings."
msgstr ""

msgid ""
"Trivial and small patches usually are best done in one commit. Medium to "
"large work may be split into multiple commits if it makes sense."
msgstr ""

msgid ""
"Practicality beats purity, so it is up to each merger to decide how much "
"history mangling to do for a pull request. The main points are engaging the "
"community, getting work done, and having a usable commit history."
msgstr ""

msgid "Committing guidelines"
msgstr ""

msgid ""
"In addition, please follow the following guidelines when committing code to "
"Django's Git repository:"
msgstr ""

msgid ""
"Never change the published history of ``django/django`` branches by force "
"pushing. If you absolutely must (for security reasons for example), first "
"discuss the situation with the team."
msgstr ""

msgid ""
"For any medium-to-big changes, where \"medium-to-big\" is according to your "
"judgment, please bring things up on the `Django Forum`_ or |django-"
"developers| mailing list before making the change."
msgstr ""

msgid ""
"If you bring something up and nobody responds, please don't take that to "
"mean your idea is great and should be implemented immediately because nobody "
"contested it. Everyone doesn't always have a lot of time to read mailing "
"list discussions immediately, so you may have to wait a couple of days "
"before getting a response."
msgstr ""

msgid "Write detailed commit messages in the past tense, not present tense."
msgstr ""

msgid "Good: \"Fixed Unicode bug in RSS API.\""
msgstr ""

msgid "Bad: \"Fixes Unicode bug in RSS API.\""
msgstr ""

msgid "Bad: \"Fixing Unicode bug in RSS API.\""
msgstr ""

msgid ""
"The commit message should be in lines of 72 chars maximum. There should be a "
"subject line, separated by a blank line and then paragraphs of 72 char "
"lines. The limits are soft. For the subject line, shorter is better. In the "
"body of the commit message more detail is better than less:"
msgstr ""

msgid ""
"Credit the contributors in the commit message: \"Thanks A for the report and "
"B for review.\" Use git's `Co-Authored-By`_ as appropriate."
msgstr ""

msgid ""
"For commits to a branch, prefix the commit message with the branch name. For "
"example: \"[1.4.x] Fixed #xxxxx -- Added support for mind reading.\""
msgstr ""

msgid ""
"Limit commits to the most granular change that makes sense. This means, use "
"frequent small commits rather than infrequent large commits. For example, if "
"implementing feature X requires a small change to library Y, first commit "
"the change to library Y, then commit feature X in a separate commit. This "
"goes a *long way* in helping everyone follow your changes."
msgstr ""

msgid ""
"Separate bug fixes from feature changes. Bugfixes may need to be backported "
"to the stable branch, according to :ref:`supported-versions-policy`."
msgstr ""

msgid ""
"If your commit closes a ticket in the Django `ticket tracker`_, begin your "
"commit message with the text \"Fixed #xxxxx\", where \"xxxxx\" is the number "
"of the ticket your commit fixes. Example: \"Fixed #123 -- Added whizbang "
"feature.\". We've rigged Trac so that any commit message in that format will "
"automatically close the referenced ticket and post a comment to it with the "
"full commit message."
msgstr ""

msgid "For the curious, we're using a `Trac plugin`_ for this."
msgstr ""

msgid ""
"Note that the Trac integration doesn't know anything about pull requests. So "
"if you try to close a pull request with the phrase \"closes #400\" in your "
"commit message, GitHub will close the pull request, but the Trac plugin will "
"not close the same numbered ticket in Trac."
msgstr ""

msgid ""
"If your commit references a ticket in the Django `ticket tracker`_ but does "
"*not* close the ticket, include the phrase \"Refs #xxxxx\", where \"xxxxx\" "
"is the number of the ticket your commit references. This will automatically "
"post a comment to the appropriate ticket."
msgstr ""

msgid "Write commit messages for backports using this pattern:"
msgstr ""

msgid "For example:"
msgstr ""

msgid ""
"There's a `script on the wiki <https://code.djangoproject.com/wiki/"
"MergerTips#AutomatingBackports>`_ to automate this."
msgstr ""

msgid "If the commit fixes a regression, include this in the commit message:"
msgstr ""

msgid "(use the commit hash where the regression was introduced)."
msgstr ""

msgid "Reverting commits"
msgstr ""

msgid "Nobody's perfect; mistakes will be committed."
msgstr ""

msgid ""
"But try very hard to ensure that mistakes don't happen. Just because we have "
"a reversion policy doesn't relax your responsibility to aim for the highest "
"quality possible. Really: double-check your work, or have it checked by "
"another merger **before** you commit it in the first place!"
msgstr ""

msgid "When a mistaken commit is discovered, please follow these guidelines:"
msgstr ""

msgid "If possible, have the original author revert their own commit."
msgstr ""

msgid ""
"Don't revert another author's changes without permission from the original "
"author."
msgstr ""

msgid ""
"Use git revert -- this will make a reverse commit, but the original commit "
"will still be part of the commit history."
msgstr ""

msgid ""
"If the original author can't be reached (within a reasonable amount of time "
"-- a day or so) and the problem is severe -- crashing bug, major test "
"failures, etc. -- then ask for objections on the `Django Forum`_ or |django-"
"developers| mailing list then revert if there are none."
msgstr ""

msgid ""
"If the problem is small (a feature commit after feature freeze, say), wait "
"it out."
msgstr ""

msgid ""
"If there's a disagreement between the merger and the reverter-to-be then try "
"to work it out on the `Django Forum`_ or |django-developers| mailing list. "
"If an agreement can't be reached then it should be put to a vote."
msgstr ""

msgid ""
"If the commit introduced a confirmed, disclosed security vulnerability then "
"the commit may be reverted immediately without permission from anyone."
msgstr ""

msgid ""
"The release branch maintainer may back out commits to the release branch "
"without permission if the commit breaks the release branch."
msgstr ""

msgid ""
"If you mistakenly push a topic branch to ``django/django``, delete it. For "
"instance, if you did: ``git push upstream feature_antigravity``, do a "
"reverse push: ``git push upstream :feature_antigravity``."
msgstr ""

msgid "Contributing to Django"
msgstr "Contribuyendo con Django"

msgid ""
"Django is a community that lives on its volunteers. As it keeps growing, we "
"always need more people to help others. You can contribute in many ways, "
"either on the framework itself or in the wider ecosystem."
msgstr ""

msgid "Work on the Django framework"
msgstr ""

msgid "The work on Django itself falls into three major areas:"
msgstr ""

msgid "**Writing code** 💻"
msgstr ""

msgid ""
"Fix a bug, or add a new feature. You can make a pull request and see **your "
"code** in the next version of Django!"
msgstr ""

msgid "Start from the :doc:`writing-code/index` docs."
msgstr ""

msgid "**Writing documentation** ✍️"
msgstr ""

msgid ""
"Django's documentation is one of its key strengths. It's informative and "
"thorough. You can help to improve the documentation and keep it relevant as "
"the framework evolves."
msgstr ""

msgid "See :doc:`writing-documentation` for more."
msgstr ""

msgid "**Localizing Django** 🗺️"
msgstr ""

msgid ""
"Django is translated into over 100 languages - There's even some translation "
"for Klingon?! The i18n team is always looking for translators to help "
"maintain and increase language reach."
msgstr ""

msgid "See :doc:`localizing` to help translate Django."
msgstr ""

msgid ""
"If you think working *with* Django is fun, wait until you start working *on* "
"it. Really, **ANYONE** can do something to help make Django better and "
"greater!"
msgstr ""

msgid ""
"This contributing guide contains everything you need to know to help build "
"the Django web framework. Browse the following sections to find out how:"
msgstr ""

msgid "Join the Django community ❤️"
msgstr ""

msgid ""
"We're passionate about helping Django users make the jump to contributing "
"members of the community. There are several other ways you can help the "
"Django community and others to maintain a great ecosystem to work in:"
msgstr ""

msgid ""
"Join the `Django forum`_. This forum is a place for discussing the Django "
"framework and applications and projects that use it. This is also a good "
"place to ask and answer any questions related to installing, using, or "
"contributing to Django."
msgstr ""

msgid ""
"Join the |django-users| mailing list and answer questions. This mailing list "
"has a huge audience, and we really want to maintain a friendly and helpful "
"atmosphere. If you're new to the Django community, you should read the "
"`posting guidelines`_."
msgstr ""

msgid ""
"Join the `Django Discord server`_ or the `#django IRC channel`_ on Libera."
"Chat to discuss and answer questions. By explaining Django to other users, "
"you're going to learn a lot about the framework yourself."
msgstr ""

msgid ""
"Blog about Django. We syndicate all the Django blogs we know about on the "
"`community page`_; if you'd like to see your blog on that page you can "
"`register it here`_."
msgstr ""

msgid ""
"Contribute to open-source Django projects, write some documentation, or "
"release your own code as an open-source pluggable application. The ecosystem "
"of pluggable applications is a big strength of Django, help us build it!"
msgstr ""

msgid "We're looking forward to working with you. Welcome aboard! ⛵️"
msgstr ""

msgid "Localizing Django"
msgstr "Localización de Django"

msgid ""
"Various parts of Django, such as the admin site and validation error "
"messages, are internationalized. This means they display differently "
"depending on each user's language or country. For this, Django uses the same "
"internationalization and localization infrastructure available to Django "
"applications, described in the :doc:`i18n documentation </topics/i18n/"
"index>`."
msgstr ""
"Diversas partes de Django, tales como el sitio administrativo y los mensajes "
"de error de validación, están internacionalizadas. Esto significa que se "
"muestran de forma diferente dependiendo del idioma o el país de cada "
"usuario. Por esta razón, Django utiliza la misma infraestructura de "
"internacionalización y localización disponible para las aplicaciones Django "
"descritas en la :doc:`documentación de i18n</topics/i18n/index>`."

msgid "Translations"
msgstr "Traducciones"

msgid ""
"Translations are contributed by Django users worldwide. The translation work "
"is coordinated at `Transifex`_."
msgstr ""
"Los usuarios de Django a nivel mundial aportan las traducciones. El trabajo "
"de traducción se coordina en `Transifex`."

msgid ""
"If you find an incorrect translation or want to discuss specific "
"translations, go to the `Django project page`_. If you would like to help "
"out with translating or adding a language that isn't yet translated, here's "
"what to do:"
msgstr ""

msgid "Introduce yourself on the `Django internationalization forum`_."
msgstr ""

msgid "Make sure you read the notes about :ref:`specialties-of-django-i18n`."
msgstr ""
"Asegúrese de leer las notas sobre: ​​ref: `Especialidades i18n en django`."

msgid "Sign up at `Transifex`_ and visit the `Django project page`_."
msgstr "Regístrese en `Transifex` y visite la `página del proyecto Django`."

msgid ""
"On the `Django project page`_, choose the language you want to work on, "
"**or** -- in case the language doesn't exist yet -- request a new language "
"team by clicking on the \"Request language\" link and selecting the "
"appropriate language."
msgstr ""
"En la `página del proyecto Django`, escoja un idioma al que quiera traducir, "
"**o**, en caso de que no exista todavía el mismo, solicitelo haciendo clic "
"en el enlace  “Solicitar idioma” y seleccionando el idioma correspondiente."

msgid ""
"Then, click the \"Join this Team\" button to become a member of this team. "
"Every team has at least one coordinator who is responsible to review your "
"membership request. You can also contact the team coordinator to clarify "
"procedural problems and handle the actual translation process."
msgstr ""

msgid ""
"Once you are a member of a team choose the translation resource you want to "
"update on the team page. For example, the \"core\" resource refers to the "
"translation catalog that contains all non-contrib translations. Each of the "
"contrib apps also has a resource (prefixed with \"contrib\")."
msgstr ""

msgid ""
"For more information about how to use Transifex, read the `Transifex User "
"Guide`_."
msgstr ""
"Para obtener más información acerca de cómo utilizar Transifex, lea el "
"`Manual de usuario de Transifex`."

msgid ""
"Translations from Transifex are only integrated into the Django repository "
"at the time of a new :term:`feature release <Feature release>`. We try to "
"update them a second time during one of the following :term:`patch release "
"<Patch release>`\\s, but that depends on the translation manager's "
"availability. So don't miss the string freeze period (between the release "
"candidate and the feature release) to take the opportunity to complete and "
"fix the translations for your language!"
msgstr ""

msgid "Formats"
msgstr "Formatos"

msgid ""
"You can also review ``conf/locale/<locale>/formats.py``. This file describes "
"the date, time and numbers formatting particularities of your locale. See :"
"doc:`/topics/i18n/formatting` for details."
msgstr ""
"También puede revisar ``conf/locale/<locale>/ formats.py``. Este archivo "
"describe la fecha, hora y las particularidades del formato de números de su "
"configuración regional. Consulte :doc: `/topics/i18n/formatting` para más "
"información."

msgid ""
"The format files aren't managed by the use of Transifex. To change them, you "
"must :doc:`create a patch<writing-code/submitting-patches>` against the "
"Django source tree, as for any code change:"
msgstr ""
"Los archivos de formato no se gestionan mediante el uso de Transifex. Para "
"modificarlos, debe :doc: `crear un parche <writing-code/submitting-patches> "
"`contra el árbol fuente  de Django, como para cualquier cambio de código:"

msgid "Create a diff against the current Git main branch."
msgstr ""

msgid ""
"Open a ticket in Django's ticket system, set its ``Component`` field to "
"``Translations``, and attach the patch to it."
msgstr ""
"Abra un ticket en el sistema de tickets de Django, establezca su campo "
"``Component`` a    `` Translations`` y añádale el parche al mismo."

msgid "Documentation"
msgstr "Documentación"

msgid ""
"There is also an opportunity to translate the documentation, though this is "
"a huge undertaking to complete entirely (you have been warned!). We use the "
"same `Transifex tool <https://app.transifex.com/django/django-docs/>`_. The "
"translations will appear at ``https://docs.djangoproject.com/<language_code>/"
"`` when at least the ``docs/intro/*`` files are fully translated in your "
"language."
msgstr ""

msgid ""
"Once translations are published, updated versions from Transifex will be "
"irregularly ported to the `django/django-docs-translations <https://github."
"com/django/django-docs-translations>`_ repository and to the documentation "
"website. Only translations for the latest stable Django release are updated."
msgstr ""

msgid "Advice for new contributors"
msgstr "Consejos para los nuevos colaboradores"

msgid ""
"New contributor and not sure what to do? Want to help but just don't know "
"how to get started? This is the section for you."
msgstr ""
"¿Es un nuevo colaborador y no sabe qué hacer? ¿Quiere  ayudar pero "
"simplemente no sabe cómo empezar? Esta sección es para usted."

msgid "Get up and running!"
msgstr ""

msgid ""
"If you are new to contributing to Django, the :doc:`/intro/contributing` "
"tutorial will give you an introduction to the tools and the workflow."
msgstr ""
"Si es un nuevo colaborador de Django, el :doc: tutorial `/intro/"
"contributing`  le dará una introducción a las herramientas y el flujo de "
"trabajo."

msgid ""
"This page contains more general advice on ways you can contribute to Django, "
"and how to approach that."
msgstr ""

msgid ""
"If you are looking for a reference on the details of making code "
"contributions, see the :doc:`/internals/contributing/writing-code/index` "
"documentation."
msgstr ""
"Si usted está buscando una referencia sobre cómo hacer contribuciones, "
"consulte la documentación :doc:`/internals/contributing/writing-code/"
"submitting-patches`."

msgid "First steps"
msgstr "Primeros pasos"

msgid "Start with these steps to discover Django's development process."
msgstr ""

msgid "**Triage tickets**"
msgstr "**Clasificación de tickets**"

msgid ""
"If an `unreviewed ticket`_ reports a bug, try and reproduce it. If you can "
"reproduce it and it seems valid, make a note that you confirmed the bug and "
"accept the ticket. Make sure the ticket is filed under the correct component "
"area. Consider writing a patch that adds a test for the bug's behavior, even "
"if you don't fix the bug itself. See more at :ref:`how-can-i-help-with-"
"triaging`"
msgstr ""
"Si un ‘ticket no revisado’ informa de un bug, intente reproducirlo. Si puede "
"reproducirlo y si parece válido, indique que usted corroboró el bug y acepta "
"el ticket. Asegúrese de que el ticket se archive en el área del componente "
"correcto. Considere escribir un parche que añada una prueba para el "
"comportamiento del bug, incluso si usted no corrige el bug. Vea más en :ref: "
"‘Cómo puedo ayudar con la clasificación’ para más información."

msgid ""
"**Look for tickets that are accepted and review patches to build familiarity "
"with the codebase and the process**"
msgstr ""
"** Busque tickets aceptados y revise los parches para familiarizarse con la "
"base de código y el proceso**"

msgid ""
"Mark the appropriate flags if a patch needs docs or tests. Look through the "
"changes a patch makes, and keep an eye out for syntax that is incompatible "
"with older but still supported versions of Python. :doc:`Run the tests </"
"internals/contributing/writing-code/unit-tests>` and make sure they pass. "
"Where possible and relevant, try them out on a database other than SQLite. "
"Leave comments and feedback!"
msgstr ""
"Seleccione las banderas apropiadas si un parche necesita documentación o "
"pruebas. Revise los cambios que realiza un parche, y esté pendiente de la "
"sintaxis que no sea compatible con versiones anteriores, pero aún soportadas "
"de Python. : doc: `Ejecute las pruebas </internals/contributing/writing-code/"
"unit-tests> ` y asegúrese de que pasen. Siempre que sea posible y "
"pertinente, pruébelas en una base de datos distinta de SQLite. ¡Deje "
"comentarios y sugerencias!"

msgid "**Keep old patches up to date**"
msgstr "** Mantenga actualizados los parches anteriores**"

msgid ""
"Oftentimes the codebase will change between a patch being submitted and the "
"time it gets reviewed. Make sure it still applies cleanly and functions as "
"expected. Updating a patch is both useful and important! See more on :doc:"
"`writing-code/submitting-patches`."
msgstr ""

msgid "**Write some documentation**"
msgstr "** Escriba algo de documentación **"

msgid ""
"Django's documentation is great but it can always be improved. Did you find "
"a typo? Do you think that something should be clarified? Go ahead and "
"suggest a documentation patch! See also the guide on :doc:`writing-"
"documentation`."
msgstr ""

msgid ""
"The `reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""
"La `página de informes` contiene enlaces a muchas consultas Trac útiles, "
"incluyendo varias que son útiles para clasificar tickets y revisar parches "
"como se sugirió anteriormente."

msgid "**Sign the Contributor License Agreement**"
msgstr "** Firme el Acuerdo de Licencia del Colaborador**"

msgid ""
"The code that you write belongs to you or your employer. If your "
"contribution is more than one or two lines of code, you need to sign the "
"`CLA`_. See the `Contributor License Agreement FAQ`_ for a more thorough "
"explanation."
msgstr ""
"El código que escribe pertenece a usted o su jefe. Si su contribución es más "
"de una o dos líneas de código, es necesario firmar el `ALC`. Consulte las "
"'preguntas frecuentes sobre el Acuerdo de Licencia del Colaborador' para una "
"explicación más detallada."

msgid "Guidelines"
msgstr "Directrices"

msgid ""
"As a newcomer on a large project, it's easy to experience frustration. "
"Here's some advice to make your work on Django more useful and rewarding."
msgstr ""
"Como principiante en un proyecto grande, es fácil experimentar frustración. "
"Estos son algunos consejos para hacer su trabajo en Django más útil y "
"gratificante."

msgid ""
"**Pick a subject area that you care about, that you are familiar with, or "
"that you want to learn about**"
msgstr ""
"** Elija un área temática que le interese, con la que esté familiarizado o "
"sobre la que usted quiera aprender**"

msgid ""
"You don't already have to be an expert on the area you want to work on; you "
"become an expert through your ongoing contributions to the code."
msgstr ""
"Usted todavía no tiene que ser un experto en el área que desea trabajar; "
"usted se convierte en un experto a través de sus constantes contribuciones "
"al código."

msgid "**Analyze tickets' context and history**"
msgstr "**Analice el contexto y el historial de los tickets**"

msgid ""
"Trac isn't an absolute; the context is just as important as the words. When "
"reading Trac, you need to take into account who says things, and when they "
"were said. Support for an idea two years ago doesn't necessarily mean that "
"the idea will still have support. You also need to pay attention to who "
"*hasn't* spoken -- for example, if an experienced contributor hasn't been "
"recently involved in a discussion, then a ticket may not have the support "
"required to get into Django."
msgstr ""

msgid "**Start small**"
msgstr "**Empiece de a poco**"

msgid ""
"It's easier to get feedback on a little issue than on a big one. See the "
"`easy pickings`_."
msgstr ""
"Es más fácil recibir comentarios y sugerencias sobre un  problema pequeño "
"que sobre uno grande. Vea los tickets `presa fácil`."

msgid ""
"**If you're going to engage in a big task, make sure that your idea has "
"support first**"
msgstr ""
"** Si usted va a participar en una gran tarea, asegúrese primero de que su "
"idea tenga apoyo**"

msgid ""
"This means getting someone else to confirm that a bug is real before you fix "
"the issue, and ensuring that there's consensus on a proposed feature before "
"you go implementing it."
msgstr ""

msgid "**Be bold! Leave feedback!**"
msgstr "** ¡Sea valiente! ¡Deje un comentario!**"

msgid ""
"Sometimes it can be scary to put your opinion out to the world and say "
"\"this ticket is correct\" or \"this patch needs work\", but it's the only "
"way the project moves forward. The contributions of the broad Django "
"community ultimately have a much greater impact than that of any one person. "
"We can't do it without **you**!"
msgstr ""

msgid "**Err on the side of caution when marking things Ready For Check-in**"
msgstr "**Peque de precavido al marcar cosas Listas para Registrar**"

msgid ""
"If you're really not certain if a ticket is ready, don't mark it as such. "
"Leave a comment instead, letting others know your thoughts.  If you're "
"mostly certain, but not completely certain, you might also try asking on IRC "
"to see if someone else can confirm your suspicions."
msgstr ""
"Si realmente no está seguro si un ticket está listo, no la marque como tal. "
"En cambio deje un comentario, informándole a los demás lo que piensa. Si "
"usted está casi seguro, pero no del todo, también podría intentar preguntar "
"en el IRC para ver si alguien más puede confirmar sus sospechas."

msgid "**Wait for feedback, and respond to feedback that you receive**"
msgstr ""
"**Espere por retroalimentación y responda a los comentarios que reciba**"

msgid ""
"Focus on one or two tickets, see them through from start to finish, and "
"repeat. The shotgun approach of taking on lots of tickets and letting some "
"fall by the wayside ends up doing more harm than good."
msgstr ""
"Concéntrese en uno o dos tickets, analícelos de principio a fin y repita el "
"proceso. La táctica de la escopeta consistente en aceptar muchos tickets y "
"dejar de lado algunos termina haciendo más daño que bien."

msgid "**Be rigorous**"
msgstr "** Sea riguroso **"

msgid ""
"When we say \":pep:`8`, and must have docs and tests\", we mean it. If a "
"patch doesn't have docs and tests, there had better be a good reason. "
"Arguments like \"I couldn't find any existing tests of this feature\" don't "
"carry much weight--while it may be true, that means you have the extra-"
"important job of writing the very first tests for that feature, not that you "
"get a pass from writing tests altogether."
msgstr ""
"Cuando decimos \":pep:` 8`, y debe tener documentación y pruebas \", lo "
"decimos en serio. Si el parche no tiene documentación y pruebas, debe haber "
"una buena razón. Argumentos como \"No pude encontrar ninguna prueba "
"existente de esta funcionalidad\" no tienen mucho peso, ya que si bien puede "
"ser cierto, eso significa que tiene el trabajo extra importante de escribir "
"las primeras pruebas para esa funcionalidad, no es que está exento del todo "
"de escribir las mismas."

msgid "**Be patient**"
msgstr ""

msgid ""
"It's not always easy for your ticket or your patch to be reviewed quickly. "
"This isn't personal. There are a lot of tickets and pull requests to get "
"through."
msgstr ""

msgid ""
"Keeping your patch up to date is important. Review the ticket on Trac to "
"ensure that the *Needs tests*, *Needs documentation*, and *Patch needs "
"improvement* flags are unchecked once you've addressed all review comments."
msgstr ""

msgid ""
"Remember that Django has an eight-month release cycle, so there's plenty of "
"time for your patch to be reviewed."
msgstr ""

msgid ""
"Finally, a well-timed reminder can help. See :ref:`contributing code FAQ "
"<new-contributors-faq>` for ideas here."
msgstr ""

msgid "Triaging tickets"
msgstr "Clasificando tickets"

msgid ""
"Django uses Trac_ for managing the work on the code base. Trac is a "
"community-tended garden of the bugs people have found and the features "
"people would like to see added. As in any garden, sometimes there are weeds "
"to be pulled and sometimes there are flowers and vegetables that need "
"picking. We need your help to sort out one from the other, and in the end, "
"we all benefit together."
msgstr ""

msgid ""
"Like all gardens, we can aspire to perfection, but in reality there's no "
"such thing. Even in the most pristine garden there are still snails and "
"insects. In a community garden there are also helpful people who -- with the "
"best of intentions -- fertilize the weeds and poison the roses. It's the job "
"of the community as a whole to self-manage, keep the problems to a minimum, "
"and educate those coming into the community so that they can become valuable "
"contributing members."
msgstr ""

msgid ""
"Similarly, while we aim for Trac to be a perfect representation of the state "
"of Django's progress, we acknowledge that this will not happen. By "
"distributing the load of Trac maintenance to the community, we accept that "
"there will be mistakes. Trac is \"mostly accurate\", and we give allowances "
"for the fact that sometimes it will be wrong. That's okay. We're "
"perfectionists with deadlines."
msgstr ""

msgid ""
"We rely on the community to keep participating, keep tickets as accurate as "
"possible, and raise issues for discussion on our mailing lists when there is "
"confusion or disagreement."
msgstr ""
"Confiamos en que la comunidad siga participando, mantenga los tickets lo más "
"exactos posibles, y presente temas de discusión en nuestras listas de correo "
"cuando haya confusión o desacuerdo."

msgid ""
"Django is a community project, and every contribution helps. We can't do "
"this without **you**!"
msgstr ""
"Django es un proyecto comunitario y cualquier contribución  es de ayuda. ¡No "
"podemos hacer esto sin **usted**!"

msgid "Triage workflow"
msgstr "Flujo de trabajo de clasificación"

msgid ""
"Unfortunately, not all bug reports and feature requests in the ticket "
"tracker provide all the :doc:`required details<bugs-and-features>`. A number "
"of tickets have patches, but those patches don't meet all the requirements "
"of a :ref:`good patch<patch-style>`."
msgstr ""
"Desafortunadamente, no todos los informes de errores y solicitudes de "
"funcionalidades en el rastreador de tickets proporcionan todos los :doc: "
"`detalles necesarios <bugs-and-features>`. Varios  tickets podrían tener "
"parches, pero dichos parches podrían no cumplircon todos los requisitos de "
"un :ref:  buen parche <patch-style>`."

msgid ""
"One way to help out is to *triage* tickets that have been created by other "
"users."
msgstr ""

msgid ""
"Most of the workflow is based around the concept of a ticket's :ref:`triage "
"stages <triage-stages>`. Each stage describes where in its lifetime a given "
"ticket is at any time. Along with a handful of flags, this attribute easily "
"tells us what and who each ticket is waiting on."
msgstr ""
"La mayor parte del flujo de trabajo se basa en el concepto de :ref: `las "
"etapas de clasificación de un ticket <triage-stages>`. Cada etapa describe "
"en que período de su ciclo de vida se encuentra un determinado ticket. Junto "
"con un puñado de marcadores, este atributo fácilmente nos indica qué y por "
"quién espera cada ticket."

msgid "Since a picture is worth a thousand words, let's start there:"
msgstr "Ya que una imagen vale más que mil palabras, vamos a empezar por ahí:"

msgid "Django's ticket triage workflow"
msgstr ""

msgid "We've got two roles in this diagram:"
msgstr "Tenemos dos roles en este esquema:"

msgid ""
"Mergers: people with commit access who are responsible for making the final "
"decision to merge a patch."
msgstr ""

msgid ""
"Ticket triagers: anyone in the Django community who chooses to become "
"involved in Django's development process. Our Trac installation is "
"intentionally left open to the public, and anyone can triage tickets. Django "
"is a community project, and we encourage :ref:`triage by the community<how-"
"can-i-help-with-triaging>`."
msgstr ""
"Clasificadores de tickets: cualquier persona en la comunidad Django que "
"elije involucrarse en el proceso de desarrollo de Django. Nuestra "
"instalación de Trac se deja intencionalmente abierta al público y a "
"cualquier persona que pueda clasificar tickets. Django es un proyecto "
"comunitario y promovemos la :ref: clasificación por parte de la comunidad "
"<how-can-i-help-with-triaging>`."

msgid "By way of example, here we see the lifecycle of an average ticket:"
msgstr "A modo de ejemplo, aquí vemos el ciclo de vida de un ticket promedio:"

msgid ""
"Alice creates a ticket and sends an incomplete pull request (no tests, "
"incorrect implementation)."
msgstr ""

msgid ""
"Bob reviews the pull request, marks the ticket as \"Accepted\", \"needs "
"tests\", and \"patch needs improvement\", and leaves a comment telling Alice "
"how the patch could be improved."
msgstr ""

msgid ""
"Alice updates the pull request, adding tests (but not changing the "
"implementation). She removes the two flags."
msgstr ""

msgid ""
"Charlie reviews the pull request and resets the \"patch needs improvement\" "
"flag with another comment about improving the implementation."
msgstr ""

msgid ""
"Alice updates the pull request, fixing the implementation. She removes the "
"\"patch needs improvement\" flag."
msgstr ""

msgid ""
"Daisy reviews the pull request and marks the ticket as \"Ready for checkin\"."
msgstr ""

msgid ""
"Jacob, a :ref:`merger <mergers-team>`, reviews the pull request and merges "
"it."
msgstr ""

msgid ""
"Some tickets require much less feedback than this, but then again some "
"tickets require much much more."
msgstr ""
"Algunos tickets necesitan mucha menos retroalimentación que este, pero, por "
"otro lado, algunos tickets necesitan muchísima más."

msgid "Triage stages"
msgstr "Etapas de clasificación"

msgid ""
"Below we describe in more detail the various stages that a ticket may flow "
"through during its lifetime."
msgstr ""
"A continuación, describimos con más detalles las diferentes etapas por las "
"que tiene que pasar un ticket durante su ciclo de vida."

msgid "Unreviewed"
msgstr "No revisado"

msgid ""
"The ticket has not been reviewed by anyone who felt qualified to make a "
"judgment about whether the ticket contained a valid issue, a viable feature, "
"or ought to be closed for any of the various reasons."
msgstr ""
"El ticket no ha sido revisado por alguien que se sintiera calificado para "
"evaluar si el mismo contiene un tema válido, una funcionalidad viable o si "
"se debe cerrar por cualquiera de los diversos motivos."

msgid "Accepted"
msgstr "Aceptado"

msgid ""
"The big gray area! The absolute meaning of \"accepted\" is that the issue "
"described in the ticket is valid and is in some stage of being worked on. "
"Beyond that there are several considerations:"
msgstr ""
"¡La gran zona gris! El significado absoluto de \"aceptado\" es que el "
"problema descrito en el ticket es válido y está en alguna etapa en la  que "
"se puede trabajar. Además de eso existen varias consideraciones: "

msgid "**Accepted + No Flags**"
msgstr "**Aceptado + Sin Marcadores**"

msgid ""
"The ticket is valid, but no one has submitted a patch for it yet. Often this "
"means you could safely start writing a patch for it. This is generally more "
"true for the case of accepted bugs than accepted features. A ticket for a "
"bug that has been accepted means that the issue has been verified by at "
"least one triager as a legitimate bug - and should probably be fixed if "
"possible. An accepted new feature may only mean that one triager thought the "
"feature would be good to have, but this alone does not represent a consensus "
"view or imply with any certainty that a patch will be accepted for that "
"feature. Seek more feedback before writing an extensive patch if you are in "
"doubt."
msgstr ""

msgid "**Accepted + Has Patch**"
msgstr "**Aceptado + Tiene Parche**"

msgid ""
"The ticket is waiting for people to review the supplied patch. This means "
"downloading the patch and trying it out, verifying that it contains tests "
"and docs, running the test suite with the included patch, and leaving "
"feedback on the ticket."
msgstr ""

msgid "**Accepted + Has Patch + Needs ...**"
msgstr "**Aceptado + Tiene Parche + Necesita ...**"

msgid ""
"This means the ticket has been reviewed, and has been found to need further "
"work. \"Needs tests\" and \"Needs documentation\" are self-explanatory. "
"\"Patch needs improvement\" will generally be accompanied by a comment on "
"the ticket explaining what is needed to improve the code."
msgstr ""

msgid "Ready For Checkin"
msgstr "Listo Para Revisar"

msgid ""
"The ticket was reviewed by any member of the community other than the person "
"who supplied the patch and found to meet all the requirements for a commit-"
"ready patch. A :ref:`merger <mergers-team>` now needs to give the patch a "
"final review prior to being committed."
msgstr ""

msgid ""
"There are a lot of pull requests. It can take a while for your patch to get "
"reviewed. See the :ref:`contributing code FAQ<new-contributors-faq>` for "
"some ideas here."
msgstr ""

msgid "Someday/Maybe"
msgstr "Algún día/Tal vez"

msgid ""
"This stage isn't shown on the diagram. It's used sparingly to keep track of "
"high-level ideas or long-term feature requests."
msgstr ""

msgid ""
"These tickets are uncommon and overall less useful since they don't describe "
"concrete actionable issues. They are enhancement requests that we might "
"consider adding someday to the framework if an excellent patch is submitted. "
"They are not a high priority."
msgstr ""

msgid "Other triage attributes"
msgstr "Otros atributos de clasificación"

msgid ""
"A number of flags, appearing as checkboxes in Trac, can be set on a ticket:"
msgstr ""

msgid "Has patch"
msgstr "Tiene parche"

msgid ""
"This means the ticket has an associated :doc:`patch<writing-code/submitting-"
"patches>`. These will be reviewed to see if the patch is \"good\"."
msgstr ""

msgid ""
"The following three fields (Needs documentation, Needs tests, Patch needs "
"improvement) apply only if a patch has been supplied."
msgstr ""

msgid "Needs documentation"
msgstr "Necesita documentación"

msgid ""
"This flag is used for tickets with patches that need associated "
"documentation. Complete documentation of features is a prerequisite before "
"we can check them into the codebase."
msgstr ""

msgid "Needs tests"
msgstr "Necesita pruebas"

msgid ""
"This flags the patch as needing associated unit tests. Again, this is a "
"required part of a valid patch."
msgstr ""

msgid "Patch needs improvement"
msgstr "El parche necesita mejoras"

msgid ""
"This flag means that although the ticket *has* a patch, it's not quite ready "
"for checkin. This could mean the patch no longer applies cleanly, there is a "
"flaw in the implementation, or that the code doesn't meet our standards."
msgstr ""

msgid "Easy pickings"
msgstr "Presa fácil"

msgid "Tickets that would require small, easy, patches."
msgstr "Tickets que requerirían parches pequeños y fáciles."

msgid "Type"
msgstr "Tipo"

msgid "Tickets should be categorized by *type* between:"
msgstr "Los tickets deberían ser clasificados por *tipos* entre:"

msgid "New Feature"
msgstr "Nueva funcionalidad"

msgid "For adding something new."
msgstr "Para añadir algo nuevo."

msgid "Bug"
msgstr "Bug"

msgid "For when an existing thing is broken or not behaving as expected."
msgstr ""

msgid "Cleanup/optimization"
msgstr "Limpieza y optimización"

msgid ""
"For when nothing is broken but something could be made cleaner, better, "
"faster, stronger."
msgstr ""

msgid "Component"
msgstr "Componente"

msgid ""
"Tickets should be classified into *components* indicating which area of the "
"Django codebase they belong to. This makes tickets better organized and "
"easier to find."
msgstr ""
"Los tickets se deben clasificar en componentes que indican a que área de la "
"base del código Django pertenecen. Esto hace que los tickets estén mejor "
"organizados y sean más fáciles de encontrar."

msgid "Severity"
msgstr "Gravedad"

msgid ""
"The *severity* attribute is used to identify blockers, that is, issues that "
"should get fixed before releasing the next version of Django. Typically "
"those issues are bugs causing regressions from earlier versions or "
"potentially causing severe data losses. This attribute is quite rarely used "
"and the vast majority of tickets have a severity of \"Normal\"."
msgstr ""

msgid "Version"
msgstr "Versión"

msgid ""
"It is possible to use the *version* attribute to indicate in which version "
"the reported bug was identified."
msgstr ""
"Es posible utilizar el  atributo *versión* para indicar en qué versión se "
"identificó el error reportado."

msgid "UI/UX"
msgstr "UI/UX"

msgid ""
"This flag is used for tickets that relate to User Interface and User "
"Experiences questions. For example, this flag would be appropriate for user-"
"facing features in forms or the admin interface."
msgstr ""

msgid "Cc"
msgstr "Cc"

msgid ""
"You may add your username or email address to this field to be notified when "
"new contributions are made to the ticket."
msgstr ""

msgid "Keywords"
msgstr "Palabras clave"

msgid ""
"With this field you may label a ticket with multiple keywords. This can be "
"useful, for example, to group several tickets on the same theme. Keywords "
"can either be comma or space separated. Keyword search finds the keyword "
"string anywhere in the keywords. For example, clicking on a ticket with the "
"keyword \"form\" will yield similar tickets tagged with keywords containing "
"strings such as \"formset\", \"modelformset\", and \"ManagementForm\"."
msgstr ""

msgid "Closing Tickets"
msgstr "Cerrando tickets"

msgid ""
"When a ticket has completed its useful lifecycle, it's time for it to be "
"closed. Closing a ticket is a big responsibility, though. You have to be "
"sure that the issue is really resolved, and you need to keep in mind that "
"the reporter of the ticket may not be happy to have their ticket closed "
"(unless it's fixed!). If you're not certain about closing a ticket, leave a "
"comment with your thoughts instead."
msgstr ""

msgid "If you do close a ticket, you should always make sure of the following:"
msgstr "Si cierra un ticket, usted siempre debería asegurarse de lo siguiente:"

msgid "Be certain that the issue is resolved."
msgstr "Asegúrese de que el problema ha sido resuelto."

msgid "Leave a comment explaining the decision to close the ticket."
msgstr "Deje un comentario explicando la decisión de cerrar el ticket."

msgid ""
"If there is a way they can improve the ticket to reopen it, let them know."
msgstr ""
"Si hay una manera de que puedan mejorar el ticket para volver a abrirlo, "
"hágaselos saber."

msgid ""
"If the ticket is a duplicate, reference the original ticket. Also cross-"
"reference the closed ticket by leaving a comment in the original one -- this "
"allows to access more related information about the reported bug or "
"requested feature."
msgstr ""

msgid ""
"**Be polite.** No one likes having their ticket closed. It can be "
"frustrating or even discouraging. The best way to avoid turning people off "
"from contributing to Django is to be polite and friendly and to offer "
"suggestions for how they could improve this ticket and other tickets in the "
"future."
msgstr ""

msgid "A ticket can be resolved in a number of ways:"
msgstr "Un ticket se puede solucionar de varias maneras:"

msgid "fixed"
msgstr "solucionado"

msgid "Used once a patch has been rolled into Django and the issue is fixed."
msgstr ""

msgid "invalid"
msgstr "no válido"

msgid ""
"Used if the ticket is found to be incorrect. This means that the issue in "
"the ticket is actually the result of a user error, or describes a problem "
"with something other than Django, or isn't a bug report or feature request "
"at all (for example, some new users submit support queries as tickets)."
msgstr ""

msgid "wontfix"
msgstr "No se solucionará"

msgid ""
"Used when someone decides that the request isn't appropriate for "
"consideration in Django. Sometimes a ticket is closed as \"wontfix\" with a "
"request for the reporter to start a discussion on the `Django Forum`_ or |"
"django-developers| mailing list if they feel differently from the rationale "
"provided by the person who closed the ticket. Other times, a discussion "
"precedes the decision to close a ticket. Always use the forum or mailing "
"list to get a consensus before reopening tickets closed as \"wontfix\"."
msgstr ""

msgid "duplicate"
msgstr ""

msgid ""
"Used when another ticket covers the same issue. By closing duplicate "
"tickets, we keep all the discussion in one place, which helps everyone."
msgstr ""

msgid "worksforme"
msgstr ""

msgid ""
"Used when the ticket doesn't contain enough detail to replicate the original "
"bug."
msgstr ""

msgid "needsinfo"
msgstr ""

msgid ""
"Used when the ticket does not contain enough information to replicate the "
"reported issue but is potentially still valid. The ticket should be reopened "
"when more information is supplied."
msgstr ""

msgid ""
"If you believe that the ticket was closed in error -- because you're still "
"having the issue, or it's popped up somewhere else, or the triagers have "
"made a mistake -- please reopen the ticket and provide further information. "
"Again, please do not reopen tickets that have been marked as \"wontfix\" and "
"bring the issue to the `Django Forum`_ or |django-developers| instead."
msgstr ""

msgid "How can I help with triaging?"
msgstr ""

msgid ""
"The triage process is primarily driven by community members. Really, "
"**ANYONE** can help."
msgstr ""

msgid ""
"To get involved, start by `creating an account on Trac`_. If you have an "
"account but have forgotten your password, you can reset it using the "
"`password reset page`_."
msgstr ""

msgid "Then, you can help out by:"
msgstr ""

msgid ""
"Closing \"Unreviewed\" tickets as \"invalid\", \"worksforme\", or "
"\"duplicate\", or \"wontfix\"."
msgstr ""

msgid ""
"Closing \"Unreviewed\" tickets as \"needsinfo\" when the description is too "
"sparse to be actionable, or when they're feature requests requiring a "
"discussion on the `Django Forum`_ or |django-developers|."
msgstr ""

msgid ""
"Correcting the \"Needs tests\", \"Needs documentation\", or \"Has patch\" "
"flags for tickets where they are incorrectly set."
msgstr ""

msgid ""
"Setting the \"`Easy pickings`_\" flag for tickets that are small and "
"relatively straightforward."
msgstr ""

msgid "Set the *type* of tickets that are still uncategorized."
msgstr ""

msgid ""
"Checking that old tickets are still valid. If a ticket hasn't seen any "
"activity in a long time, it's possible that the problem has been fixed but "
"the ticket hasn't yet been closed."
msgstr ""

msgid ""
"Identifying trends and themes in the tickets. If there are a lot of bug "
"reports about a particular part of Django, it may indicate we should "
"consider refactoring that part of the code. If a trend is emerging, you "
"should raise it for discussion (referencing the relevant tickets) on the "
"`Django Forum`_ or |django-developers|."
msgstr ""

msgid ""
"Verify if patches submitted by other users are correct. If they are correct "
"and also contain appropriate documentation and tests then move them to the "
"\"Ready for Checkin\" stage. If they are not correct then leave a comment to "
"explain why and set the corresponding flags (\"Patch needs improvement\", "
"\"Needs tests\" etc.)."
msgstr ""

msgid ""
"The `Reports page`_ contains links to many useful Trac queries, including "
"several that are useful for triaging tickets and reviewing patches as "
"suggested above."
msgstr ""

msgid "You can also find more :doc:`new-contributors`."
msgstr ""

msgid ""
"However, we do ask the following of all general community members working in "
"the ticket database:"
msgstr ""

msgid ""
"Please **don't** promote your own tickets to \"Ready for checkin\". You may "
"mark other people's tickets that you've reviewed as \"Ready for checkin\", "
"but you should get at minimum one other community member to review a patch "
"that you submit."
msgstr ""

msgid ""
"Please **don't** reverse a decision without posting a message to the `Django "
"Forum`_ or |django-developers| to find consensus."
msgstr ""

msgid ""
"If you're unsure if you should be making a change, don't make the change but "
"instead leave a comment with your concerns on the ticket, or post a message "
"to the `Django Forum`_ or |django-developers|. It's okay to be unsure, but "
"your input is still valuable."
msgstr ""

msgid "Bisecting a regression"
msgstr ""

msgid ""
"A regression is a bug that's present in some newer version of Django but not "
"in an older one. An extremely helpful piece of information is the commit "
"that introduced the regression. Knowing the commit that caused the change in "
"behavior helps identify if the change was intentional or if it was an "
"inadvertent side-effect. Here's how you can determine this."
msgstr ""

msgid ""
"Begin by writing a regression test for Django's test suite for the issue. "
"For example, we'll pretend we're debugging a regression in migrations. After "
"you've written the test and confirmed that it fails on the latest main "
"branch, put it in a separate file that you can run standalone. For our "
"example, we'll pretend we created ``tests/migrations/test_regression.py``, "
"which can be run with:"
msgstr ""

msgid ""
"Next, we mark the current point in history as being \"bad\" since the test "
"fails:"
msgstr ""

msgid ""
"Now, we need to find a point in git history before the regression was "
"introduced (i.e. a point where the test passes). Use something like ``git "
"checkout HEAD~100`` to check out an earlier revision (100 commits earlier, "
"in this case). Check if the test fails. If so, mark that point as "
"\"bad\" (``git bisect bad``), then check out an earlier revision and "
"recheck. Once you find a revision where your test passes, mark it as "
"\"good\":"
msgstr ""

msgid ""
"Now we're ready for the fun part: using ``git bisect run`` to automate the "
"rest of the process:"
msgstr ""

msgid ""
"You should see ``git bisect`` use a binary search to automatically checkout "
"revisions between the good and bad commits until it finds the first \"bad\" "
"commit where the test fails."
msgstr ""

msgid ""
"Now, report your results on the Trac ticket, and please include the "
"regression test as an attachment. When someone writes a fix for the bug, "
"they'll already have your test as a starting point."
msgstr ""

msgid "Coding style"
msgstr ""

msgid ""
"Please follow these coding standards when writing code for inclusion in "
"Django."
msgstr ""

msgid "Pre-commit checks"
msgstr ""

msgid ""
"`pre-commit <https://pre-commit.com>`_ is a framework for managing pre-"
"commit hooks. These hooks help to identify simple issues before committing "
"code for review. By checking for these issues before code review it allows "
"the reviewer to focus on the change itself, and it can also help to reduce "
"the number of CI runs."
msgstr ""

msgid "To use the tool, first install ``pre-commit`` and then the git hooks:"
msgstr ""

msgid ""
"On the first commit ``pre-commit`` will install the hooks, these are "
"installed in their own environments and will take a short while to install "
"on the first run. Subsequent checks will be significantly faster. If an "
"error is found an appropriate error message will be displayed. If the error "
"was with ``black`` or ``isort`` then the tool will go ahead and fix them for "
"you. Review the changes and re-stage for commit if you are happy with them."
msgstr ""

msgid "Python style"
msgstr ""

msgid ""
"All files should be formatted using the `black`_ auto-formatter. This will "
"be run by ``pre-commit`` if that is configured."
msgstr ""

msgid ""
"The project repository includes an ``.editorconfig`` file. We recommend "
"using a text editor with `EditorConfig`_ support to avoid indentation and "
"whitespace issues. The Python files use 4 spaces for indentation and the "
"HTML files use 2 spaces."
msgstr ""

msgid "Unless otherwise specified, follow :pep:`8`."
msgstr ""

msgid ""
"Use :pypi:`flake8` to check for problems in this area. Note that our ``setup."
"cfg`` file contains some excluded files (deprecated modules we don't care "
"about cleaning up and some third-party code that Django vendors) as well as "
"some excluded errors that we don't consider as gross violations. Remember "
"that :pep:`8` is only a guide, so respect the style of the surrounding code "
"as a primary goal."
msgstr ""

msgid ""
"An exception to :pep:`8` is our rules on line lengths. Don't limit lines of "
"code to 79 characters if it means the code looks significantly uglier or is "
"harder to read. We allow up to 88 characters as this is the line length used "
"by ``black``. This check is included when you run ``flake8``. Documentation, "
"comments, and docstrings should be wrapped at 79 characters, even though :"
"pep:`8` suggests 72."
msgstr ""

msgid ""
"String variable interpolation may use :py:ref:`%-formatting <old-string-"
"formatting>`, :py:ref:`f-strings <f-strings>`, or :py:meth:`str.format` as "
"appropriate, with the goal of maximizing code readability."
msgstr ""

msgid ""
"Final judgments of readability are left to the Merger's discretion. As a "
"guide, f-strings should use only plain variable and property access, with "
"prior local variable assignment for more complex cases::"
msgstr ""

msgid ""
"f-strings should not be used for any string that may require translation, "
"including error and logging messages. In general ``format()`` is more "
"verbose, so the other formatting methods are preferred."
msgstr ""

msgid ""
"Don't waste time doing unrelated refactoring of existing code to adjust the "
"formatting method."
msgstr ""

msgid ""
"Avoid use of \"we\" in comments, e.g. \"Loop over\" rather than \"We loop "
"over\"."
msgstr ""

msgid ""
"Use underscores, not camelCase, for variable, function and method names (i."
"e. ``poll.get_unique_voters()``, not ``poll.getUniqueVoters()``)."
msgstr ""

msgid ""
"Use ``InitialCaps`` for class names (or for factory functions that return "
"classes)."
msgstr ""

msgid "In docstrings, follow the style of existing docstrings and :pep:`257`."
msgstr ""

msgid ""
"In tests, use :meth:`~django.test.SimpleTestCase.assertRaisesMessage` and :"
"meth:`~django.test.SimpleTestCase.assertWarnsMessage` instead of :meth:"
"`~unittest.TestCase.assertRaises` and :meth:`~unittest.TestCase.assertWarns` "
"so you can check the exception or warning message. Use :meth:`~unittest."
"TestCase.assertRaisesRegex` and :meth:`~unittest.TestCase.assertWarnsRegex` "
"only if you need regular expression matching."
msgstr ""

msgid ""
"Use :meth:`assertIs(…, True/False)<unittest.TestCase.assertIs>` for testing "
"boolean values, rather than :meth:`~unittest.TestCase.assertTrue` and :meth:"
"`~unittest.TestCase.assertFalse`, so you can check the actual boolean value, "
"not the truthiness of the expression."
msgstr ""

msgid ""
"In test docstrings, state the expected behavior that each test demonstrates. "
"Don't include preambles such as \"Tests that\" or \"Ensures that\"."
msgstr ""

msgid ""
"Reserve ticket references for obscure issues where the ticket has additional "
"details that can't be easily described in docstrings or comments. Include "
"the ticket number at the end of a sentence like this::"
msgstr ""

msgid "Imports"
msgstr ""

msgid ""
"Use `isort <https://github.com/PyCQA/isort#readme>`_ to automate import "
"sorting using the guidelines below."
msgstr ""

msgid "Quick start:"
msgstr ""

msgid ""
"This runs ``isort`` recursively from your current directory, modifying any "
"files that don't conform to the guidelines. If you need to have imports out "
"of order (to avoid a circular import, for example) use a comment like this::"
msgstr ""

msgid ""
"Put imports in these groups: future, standard library, third-party "
"libraries, other Django components, local Django component, try/excepts. "
"Sort lines in each group alphabetically by the full module name. Place all "
"``import module`` statements before ``from module import objects`` in each "
"section. Use absolute imports for other Django components and relative "
"imports for local components."
msgstr ""

msgid ""
"On each line, alphabetize the items with the upper case items grouped before "
"the lowercase items."
msgstr ""

msgid ""
"Break long lines using parentheses and indent continuation lines by 4 "
"spaces. Include a trailing comma after the last import and put the closing "
"parenthesis on its own line."
msgstr ""

msgid ""
"Use a single blank line between the last import and any module level code, "
"and use two blank lines above the first function or class."
msgstr ""

msgid "For example (comments are for explanatory purposes only):"
msgstr ""

msgid "``django/contrib/admin/example.py``"
msgstr ""

msgid "Use convenience imports whenever available. For example, do this ::"
msgstr ""

msgid "instead of::"
msgstr ""

msgid "Template style"
msgstr ""

msgid ""
"In Django template code, put one (and only one) space between the curly "
"brackets and the tag contents."
msgstr ""

msgid "Do this:"
msgstr ""

msgid "Don't do this:"
msgstr ""

msgid "View style"
msgstr ""

msgid ""
"In Django views, the first parameter in a view function should be called "
"``request``."
msgstr ""

msgid "Do this::"
msgstr ""

msgid "Don't do this::"
msgstr ""

msgid "Model style"
msgstr ""

msgid ""
"Field names should be all lowercase, using underscores instead of camelCase."
msgstr ""

msgid ""
"The ``class Meta`` should appear *after* the fields are defined, with a "
"single blank line separating the fields and the class definition."
msgstr ""

msgid ""
"The order of model inner classes and standard methods should be as follows "
"(noting that these are not all required):"
msgstr ""

msgid "All database fields"
msgstr ""

msgid "Custom manager attributes"
msgstr ""

msgid "``class Meta``"
msgstr ""

msgid "``def __str__()``"
msgstr ""

msgid "``def save()``"
msgstr ""

msgid "``def get_absolute_url()``"
msgstr ""

msgid "Any custom methods"
msgstr ""

msgid ""
"If ``choices`` is defined for a given model field, define each choice as a "
"list of tuples, with an all-uppercase name as a class attribute on the "
"model. Example::"
msgstr ""

msgid "Use of ``django.conf.settings``"
msgstr ""

msgid ""
"Modules should not in general use settings stored in ``django.conf."
"settings`` at the top level (i.e. evaluated when the module is imported). "
"The explanation for this is as follows:"
msgstr ""

msgid ""
"Manual configuration of settings (i.e. not relying on the :envvar:"
"`DJANGO_SETTINGS_MODULE` environment variable) is allowed and possible as "
"follows::"
msgstr ""

msgid ""
"However, if any setting is accessed before the ``settings.configure`` line, "
"this will not work. (Internally, ``settings`` is a ``LazyObject`` which "
"configures itself automatically when the settings are accessed if it has not "
"already been configured)."
msgstr ""

msgid "So, if there is a module containing some code as follows::"
msgstr ""

msgid ""
"...then importing this module will cause the settings object to be "
"configured. That means that the ability for third parties to import the "
"module at the top level is incompatible with the ability to configure the "
"settings object manually, or makes it very difficult in some circumstances."
msgstr ""

msgid ""
"Instead of the above code, a level of laziness or indirection must be used, "
"such as ``django.utils.functional.LazyObject``, ``django.utils.functional."
"lazy()`` or ``lambda``."
msgstr ""

msgid "Miscellaneous"
msgstr "Miscelánea"

msgid ""
"Mark all strings for internationalization; see the :doc:`i18n documentation "
"</topics/i18n/index>` for details."
msgstr ""

msgid ""
"Remove ``import`` statements that are no longer used when you change code. :"
"pypi:`flake8` will identify these imports for you. If an unused import needs "
"to remain for backwards-compatibility, mark the end of with ``# NOQA`` to "
"silence the flake8 warning."
msgstr ""

msgid ""
"Systematically remove all trailing whitespaces from your code as those add "
"unnecessary bytes, add visual clutter to the patches and can also "
"occasionally cause unnecessary merge conflicts. Some IDE's can be configured "
"to automatically remove them and most VCS tools can be set to highlight them "
"in diff outputs."
msgstr ""

msgid ""
"Please don't put your name in the code you contribute. Our policy is to keep "
"contributors' names in the ``AUTHORS`` file distributed with Django -- not "
"scattered throughout the codebase itself. Feel free to include a change to "
"the ``AUTHORS`` file in your patch if you make more than a single trivial "
"change."
msgstr ""

msgid "JavaScript style"
msgstr ""

msgid ""
"For details about the JavaScript code style used by Django, see :doc:"
"`javascript`."
msgstr ""

msgid "Writing code"
msgstr ""

msgid ""
"So you'd like to write some code to improve Django? Awesome! There are "
"several ways you can help Django's development:"
msgstr ""

msgid ":doc:`Report bugs <../bugs-and-features>` in our `ticket tracker`_."
msgstr ""

msgid ""
"Join the |django-developers| mailing list and share your ideas for how to "
"improve Django. We're always open to suggestions. You can also interact on "
"the `Django forum`_ and the `#django-dev IRC channel`_."
msgstr ""

msgid ""
":doc:`Submit patches <submitting-patches>` for new and/or fixed behavior. If "
"you're looking for a way to get started contributing to Django read the :doc:"
"`/intro/contributing` tutorial and have a look at the `easy pickings`_ "
"tickets. The :ref:`patch-review-checklist` will also be helpful."
msgstr ""

msgid ""
":doc:`Improve the documentation <../writing-documentation>` or :doc:`write "
"unit tests <unit-tests>`."
msgstr ""

msgid ""
":doc:`Triage tickets and review patches <../triaging-tickets>` created by "
"other users."
msgstr ""

msgid ""
"Read the :doc:`../new-contributors` to help you get orientated in the "
"development process."
msgstr ""

msgid ""
"Browse the following sections to find out how to give your code patches the "
"best chances to be included in Django core:"
msgstr ""

msgid "JavaScript"
msgstr ""

msgid ""
"While most of Django core is Python, the ``admin`` and ``gis`` contrib apps "
"contain JavaScript code."
msgstr ""

msgid ""
"Please follow these coding standards when writing JavaScript code for "
"inclusion in Django."
msgstr ""

msgid "Code style"
msgstr ""

msgid ""
"Please conform to the indentation style dictated in the ``.editorconfig`` "
"file. We recommend using a text editor with `EditorConfig`_ support to avoid "
"indentation and whitespace issues. Most of the JavaScript files use 4 spaces "
"for indentation, but there are some exceptions."
msgstr ""

msgid ""
"When naming variables, use ``camelCase`` instead of ``underscore_case``. "
"Different JavaScript files sometimes use a different code style. Please try "
"to conform to the code style of each file."
msgstr ""

msgid ""
"Use the `ESLint`_ code linter to check your code for bugs and style errors. "
"ESLint will be run when you run the JavaScript tests. We also recommended "
"installing a ESLint plugin in your text editor."
msgstr ""

msgid ""
"Where possible, write code that will work even if the page structure is "
"later changed with JavaScript. For instance, when binding a click handler, "
"use ``$('body').on('click', selector, func)`` instead of ``$(selector)."
"click(func)``. This makes it easier for projects to extend Django's default "
"behavior with JavaScript."
msgstr ""

msgid "JavaScript patches"
msgstr ""

msgid ""
"Django's admin system leverages the jQuery framework to increase the "
"capabilities of the admin interface. In conjunction, there is an emphasis on "
"admin JavaScript performance and minimizing overall admin media file size."
msgstr ""

msgid "JavaScript tests"
msgstr ""

msgid ""
"Django's JavaScript tests can be run in a browser or from the command line. "
"The tests are located in a top level :source:`js_tests` directory."
msgstr ""

msgid "Writing tests"
msgstr ""

msgid "Django's JavaScript tests use `QUnit`_. Here is an example test module:"
msgstr ""

msgid ""
"Please consult the ``QUnit`` documentation for information on the types of "
"`assertions supported by QUnit <https://api.qunitjs.com/assert/>`_."
msgstr ""

msgid "Running tests"
msgstr "Ejecutando las pruebas"

msgid ""
"The JavaScript tests may be run from a web browser or from the command line."
msgstr ""

msgid "Testing from a web browser"
msgstr ""

msgid ""
"To run the tests from a web browser, open up :source:`js_tests/tests.html` "
"in your browser."
msgstr ""

msgid ""
"To measure code coverage when running the tests, you need to view that file "
"over HTTP. To view code coverage:"
msgstr ""

msgid ""
"Execute ``python -m http.server`` from the root directory (not from inside "
"``js_tests``)."
msgstr ""

msgid "Open http://localhost:8000/js_tests/tests.html in your web browser."
msgstr ""

msgid "Testing from the command line"
msgstr ""

msgid ""
"To run the tests from the command line, you need to have `Node.js`_ "
"installed."
msgstr ""

msgid ""
"After installing ``Node.js``, install the JavaScript test dependencies by "
"running the following from the root of your Django checkout:"
msgstr ""

msgid "Then run the tests with:"
msgstr ""

msgid "Submitting patches"
msgstr ""

msgid ""
"We're always grateful for patches to Django's code. Indeed, bug reports with "
"associated patches will get fixed *far* more quickly than those without "
"patches."
msgstr ""

msgid "Typo fixes and trivial documentation changes"
msgstr ""

msgid ""
"If you are fixing a really trivial issue, for example changing a word in the "
"documentation, the preferred way to provide the patch is using GitHub pull "
"requests without a Trac ticket."
msgstr ""

msgid ""
"See the :doc:`working-with-git` for more details on how to use pull requests."
msgstr ""

msgid "\"Claiming\" tickets"
msgstr ""

msgid ""
"In an open-source project with hundreds of contributors around the world, "
"it's important to manage communication efficiently so that work doesn't get "
"duplicated and contributors can be as effective as possible."
msgstr ""

msgid ""
"Hence, our policy is for contributors to \"claim\" tickets in order to let "
"other developers know that a particular bug or feature is being worked on."
msgstr ""

msgid ""
"If you have identified a contribution you want to make and you're capable of "
"fixing it (as measured by your coding ability, knowledge of Django internals "
"and time availability), claim it by following these steps:"
msgstr ""

msgid ""
"`Login using your GitHub account`_ or `create an account`_ in our ticket "
"system. If you have an account but have forgotten your password, you can "
"reset it using the `password reset page`_."
msgstr ""

msgid ""
"If a ticket for this issue doesn't exist yet, create one in our `ticket "
"tracker`_."
msgstr ""

msgid ""
"If a ticket for this issue already exists, make sure nobody else has claimed "
"it. To do this, look at the \"Owned by\" section of the ticket. If it's "
"assigned to \"nobody,\" then it's available to be claimed. Otherwise, "
"somebody else may be working on this ticket. Either find another bug/feature "
"to work on, or contact the developer working on the ticket to offer your "
"help. If a ticket has been assigned for weeks or months without any "
"activity, it's probably safe to reassign it to yourself."
msgstr ""

msgid ""
"Log into your account, if you haven't already, by clicking \"GitHub Login\" "
"or \"DjangoProject Login\" in the upper left of the ticket page."
msgstr ""

msgid ""
"Claim the ticket by clicking the \"assign to myself\" radio button under "
"\"Action\" near the bottom of the page, then click \"Submit changes.\""
msgstr ""

msgid ""
"The Django software foundation requests that anyone contributing more than a "
"trivial patch to Django sign and submit a `Contributor License Agreement`_, "
"this ensures that the Django Software Foundation has clear license to all "
"contributions allowing for a clear license for all users."
msgstr ""

msgid "Ticket claimers' responsibility"
msgstr ""

msgid ""
"Once you've claimed a ticket, you have a responsibility to work on that "
"ticket in a reasonably timely fashion. If you don't have time to work on it, "
"either unclaim it or don't claim it in the first place!"
msgstr ""

msgid ""
"If there's no sign of progress on a particular claimed ticket for a week or "
"two, another developer may ask you to relinquish the ticket claim so that "
"it's no longer monopolized and somebody else can claim it."
msgstr ""

msgid ""
"If you've claimed a ticket and it's taking a long time (days or weeks) to "
"code, keep everybody updated by posting comments on the ticket. If you don't "
"provide regular updates, and you don't respond to a request for a progress "
"report, your claim on the ticket may be revoked."
msgstr ""

msgid "As always, more communication is better than less communication!"
msgstr ""

msgid "Which tickets should be claimed?"
msgstr ""

msgid "Going through the steps of claiming tickets is overkill in some cases."
msgstr ""

msgid ""
"In the case of small changes, such as typos in the documentation or small "
"bugs that will only take a few minutes to fix, you don't need to jump "
"through the hoops of claiming tickets. Submit your patch directly and you're "
"done!"
msgstr ""

msgid ""
"It is *always* acceptable, regardless whether someone has claimed it or not, "
"to submit patches to a ticket if you happen to have a patch ready."
msgstr ""

msgid "Patch style"
msgstr ""

msgid ""
"Make sure that any contribution you do fulfills at least the following "
"requirements:"
msgstr ""

msgid ""
"The code required to fix a problem or add a feature is an essential part of "
"a patch, but it is not the only part. A good patch should also include a :"
"doc:`regression test <unit-tests>` to validate the behavior that has been "
"fixed and to prevent the problem from arising again. Also, if some tickets "
"are relevant to the code that you've written, mention the ticket numbers in "
"some comments in the test so that one can easily trace back the relevant "
"discussions after your patch gets committed, and the tickets get closed."
msgstr ""

msgid ""
"If the code associated with a patch adds a new feature, or modifies behavior "
"of an existing feature, the patch should also contain documentation."
msgstr ""

msgid ""
"When you think your work is ready to be reviewed, send :doc:`a GitHub pull "
"request <working-with-git>`. Please review the patch yourself using our :ref:"
"`patch review checklist <patch-review-checklist>` first."
msgstr ""

msgid ""
"If you can't send a pull request for some reason, you can also use patches "
"in Trac. When using this style, follow these guidelines."
msgstr ""

msgid "Submit patches in the format returned by the ``git diff`` command."
msgstr ""

msgid ""
"Attach patches to a ticket in the `ticket tracker`_, using the \"attach "
"file\" button. Please *don't* put the patch in the ticket description or "
"comment unless it's a single line patch."
msgstr ""

msgid ""
"Name the patch file with a ``.diff`` extension; this will let the ticket "
"tracker apply correct syntax highlighting, which is quite helpful."
msgstr ""

msgid "Regardless of the way you submit your work, follow these steps."
msgstr ""

msgid ""
"Make sure your code fulfills the requirements in our :ref:`patch review "
"checklist <patch-review-checklist>`."
msgstr ""

msgid ""
"Check the \"Has patch\" box on the ticket and make sure the \"Needs "
"documentation\", \"Needs tests\", and \"Patch needs improvement\" boxes "
"aren't checked. This makes the ticket appear in the \"Patches needing "
"review\" queue on the `Development dashboard`_."
msgstr ""

msgid "Non-trivial patches"
msgstr ""

msgid ""
"A \"non-trivial\" patch is one that is more than a small bug fix. It's a "
"patch that introduces Django functionality and makes some sort of design "
"decision."
msgstr ""

msgid ""
"If you provide a non-trivial patch, include evidence that alternatives have "
"been discussed on the `Django Forum`_ or |django-developers| list."
msgstr ""

msgid ""
"If you're not sure whether your patch should be considered non-trivial, ask "
"on the ticket for opinions."
msgstr ""

msgid "Deprecating a feature"
msgstr ""

msgid "There are a couple of reasons that code in Django might be deprecated:"
msgstr ""

msgid ""
"If a feature has been improved or modified in a backwards-incompatible way, "
"the old feature or behavior will be deprecated."
msgstr ""

msgid ""
"Sometimes Django will include a backport of a Python library that's not "
"included in a version of Python that Django currently supports. When Django "
"no longer needs to support the older version of Python that doesn't include "
"the library, the library will be deprecated in Django."
msgstr ""

msgid ""
"As the :ref:`deprecation policy<internal-release-deprecation-policy>` "
"describes, the first release of Django that deprecates a feature (``A.B``) "
"should raise a ``RemovedInDjangoXXWarning`` (where XX is the Django version "
"where the feature will be removed) when the deprecated feature is invoked. "
"Assuming we have good test coverage, these warnings are converted to errors "
"when :ref:`running the test suite <running-unit-tests>` with warnings "
"enabled: ``python -Wa runtests.py``. Thus, when adding a "
"``RemovedInDjangoXXWarning`` you need to eliminate or silence any warnings "
"generated when running the tests."
msgstr ""

msgid ""
"The first step is to remove any use of the deprecated behavior by Django "
"itself. Next you can silence warnings in tests that actually test the "
"deprecated behavior by using the ``ignore_warnings`` decorator, either at "
"the test or class level:"
msgstr ""

msgid "In a particular test::"
msgstr ""

msgid "For an entire test case::"
msgstr ""

msgid "You should also add a test for the deprecation warning::"
msgstr ""

msgid ""
"It's important to include a ``RemovedInDjangoXXWarning`` comment above code "
"which has no warning reference, but will need to be changed or removed when "
"the deprecation ends. This could include hooks which have been added to keep "
"the previous behavior, or standalone items that are unnecessary or unused "
"when the deprecation ends. For example::"
msgstr ""

msgid ""
"Finally, there are a couple of updates to Django's documentation to make:"
msgstr ""

msgid ""
"If the existing feature is documented, mark it deprecated in documentation "
"using the ``.. deprecated:: A.B`` annotation. Include a short description "
"and a note about the upgrade path if applicable."
msgstr ""

msgid ""
"Add a description of the deprecated behavior, and the upgrade path if "
"applicable, to the current release notes (``docs/releases/A.B.txt``) under "
"the \"Features deprecated in A.B\" heading."
msgstr ""

msgid ""
"Add an entry in the deprecation timeline (``docs/internals/deprecation."
"txt``) under the appropriate version describing what code will be removed."
msgstr ""

msgid ""
"Once you have completed these steps, you are finished with the deprecation. "
"In each :term:`feature release <Feature release>`, all "
"``RemovedInDjangoXXWarning``\\s matching the new version are removed."
msgstr ""

msgid ""
"For information on JavaScript patches, see the :ref:`javascript-patches` "
"documentation."
msgstr ""

msgid "Patch review checklist"
msgstr ""

msgid ""
"Use this checklist to review a pull request. If you are reviewing a pull "
"request that is not your own and it passes all the criteria below, please "
"set the \"Triage Stage\" on the corresponding Trac ticket to \"Ready for "
"checkin\". If you've left comments for improvement on the pull request, "
"please tick the appropriate flags on the Trac ticket based on the results of "
"your review: \"Patch needs improvement\", \"Needs documentation\", and/or "
"\"Needs tests\". As time and interest permits, mergers do final reviews of "
"\"Ready for checkin\" tickets and will either commit the patch or bump it "
"back to \"Accepted\" if further works need to be done. If you're looking to "
"become a merger, doing thorough reviews of patches is a great way to earn "
"trust."
msgstr ""

msgid ""
"Looking for a patch to review? Check out the \"Patches needing review\" "
"section of the `Django Development Dashboard <https://dashboard."
"djangoproject.com/>`_. Looking to get your patch reviewed? Ensure the Trac "
"flags on the ticket are set so that the ticket appears in that queue."
msgstr ""

msgid ""
"Does the documentation build without any errors (``make html``, or ``make."
"bat html`` on Windows, from the ``docs`` directory)?"
msgstr ""

msgid ""
"Does the documentation follow the writing style guidelines in :doc:`/"
"internals/contributing/writing-documentation`?"
msgstr ""

msgid "Are there any :ref:`spelling errors <documentation-spelling-check>`?"
msgstr ""

msgid "Bugs"
msgstr ""

msgid ""
"Is there a proper regression test (the test should fail before the fix is "
"applied)?"
msgstr ""

msgid ""
"If it's a bug that :ref:`qualifies for a backport <supported-versions-"
"policy>` to the stable version of Django, is there a release note in ``docs/"
"releases/A.B.C.txt``? Bug fixes that will be applied only to the main branch "
"don't need a release note."
msgstr ""

msgid "New Features"
msgstr ""

msgid "Are there tests to \"exercise\" all of the new code?"
msgstr ""

msgid "Is there a release note in ``docs/releases/A.B.txt``?"
msgstr ""

msgid ""
"Is there documentation for the feature and is it :ref:`annotated "
"appropriately <documenting-new-features>` with ``.. versionadded:: A.B`` or "
"``.. versionchanged:: A.B``?"
msgstr ""

msgid "See the :ref:`deprecating-a-feature` guide."
msgstr ""

msgid "All code changes"
msgstr ""

msgid ""
"Does the :doc:`coding style </internals/contributing/writing-code/coding-"
"style>` conform to our guidelines? Are there any  ``black``, ``blacken-"
"docs``, ``flake8``, or ``isort`` errors? You can install the :ref:`pre-"
"commit <coding-style-pre-commit>` hooks to automatically catch these errors."
msgstr ""

msgid ""
"If the change is backwards incompatible in any way, is there a note in the "
"release notes (``docs/releases/A.B.txt``)?"
msgstr ""

msgid "Is Django's test suite passing?"
msgstr ""

msgid "All tickets"
msgstr ""

msgid ""
"Is the pull request a single squashed commit with a message that follows "
"our :ref:`commit message format <committing-guidelines>`?"
msgstr ""

msgid ""
"Are you the patch author and a new contributor? Please add yourself to the :"
"source:`AUTHORS` file and submit a `Contributor License Agreement`_."
msgstr ""

msgid "Unit tests"
msgstr ""

msgid ""
"Django comes with a test suite of its own, in the ``tests`` directory of the "
"code base. It's our policy to make sure all tests pass at all times."
msgstr ""

msgid "We appreciate any and all contributions to the test suite!"
msgstr ""

msgid ""
"The Django tests all use the testing infrastructure that ships with Django "
"for testing applications. See :doc:`/topics/testing/overview` for an "
"explanation of how to write new tests."
msgstr ""

msgid "Running the unit tests"
msgstr ""

msgid "Quickstart"
msgstr ""

msgid ""
"First, `fork Django on GitHub <https://github.com/django/django/fork>`__."
msgstr ""

msgid ""
"Second, create and activate a virtual environment. If you're not familiar "
"with how to do that, read our :doc:`contributing tutorial </intro/"
"contributing>`."
msgstr ""

msgid "Next, clone your fork, install some requirements, and run the tests:"
msgstr ""

msgid ""
"Installing the requirements will likely require some operating system "
"packages that your computer doesn't have installed. You can usually figure "
"out which package to install by doing a web search for the last line or so "
"of the error message. Try adding your operating system to the search query "
"if needed."
msgstr ""

msgid ""
"If you have trouble installing the requirements, you can skip that step. "
"See :ref:`running-unit-tests-dependencies` for details on installing the "
"optional test dependencies. If you don't have an optional dependency "
"installed, the tests that require it will be skipped."
msgstr ""

msgid ""
"Running the tests requires a Django settings module that defines the "
"databases to use. To help you get started, Django provides and uses a sample "
"settings module that uses the SQLite database. See :ref:`running-unit-tests-"
"settings` to learn how to use a different settings module to run the tests "
"with a different database."
msgstr ""

msgid ""
"Having problems? See :ref:`troubleshooting-unit-tests` for some common "
"issues."
msgstr ""

msgid "Running tests using ``tox``"
msgstr ""

msgid ""
"`Tox <https://tox.wiki/>`_ is a tool for running tests in different virtual "
"environments. Django includes a basic ``tox.ini`` that automates some checks "
"that our build server performs on pull requests. To run the unit tests and "
"other checks (such as :ref:`import sorting <coding-style-imports>`, the :ref:"
"`documentation spelling checker <documentation-spelling-check>`, and :ref:"
"`code formatting <coding-style-python>`), install and run the ``tox`` "
"command from any place in the Django source tree:"
msgstr ""

msgid ""
"By default, ``tox`` runs the test suite with the bundled test settings file "
"for SQLite, ``black``, ``blacken-docs``, ``flake8``, ``isort``, and the "
"documentation spelling checker. In addition to the system dependencies noted "
"elsewhere in this documentation, the command ``python3`` must be on your "
"path and linked to the appropriate version of Python. A list of default "
"environments can be seen as follows:"
msgstr ""

msgid "Testing other Python versions and database backends"
msgstr ""

msgid ""
"In addition to the default environments, ``tox`` supports running unit tests "
"for other versions of Python and other database backends. Since Django's "
"test suite doesn't bundle a settings file for database backends other than "
"SQLite, however, you must :ref:`create and provide your own test settings "
"<running-unit-tests-settings>`. For example, to run the tests on Python 3.9 "
"using PostgreSQL:"
msgstr ""

msgid ""
"This command sets up a Python 3.9 virtual environment, installs Django's "
"test suite dependencies (including those for PostgreSQL), and calls "
"``runtests.py`` with the supplied arguments (in this case, ``--"
"settings=my_postgres_settings``)."
msgstr ""

msgid ""
"The remainder of this documentation shows commands for running tests without "
"``tox``, however, any option passed to ``runtests.py`` can also be passed to "
"``tox`` by prefixing the argument list with ``--``, as above."
msgstr ""

msgid ""
"``Tox`` also respects the :envvar:`DJANGO_SETTINGS_MODULE` environment "
"variable, if set. For example, the following is equivalent to the command "
"above:"
msgstr ""

msgid "Windows users should use:"
msgstr ""

msgid "Running the JavaScript tests"
msgstr ""

msgid ""
"Django includes a set of :ref:`JavaScript unit tests <javascript-tests>` for "
"functions in certain contrib apps. The JavaScript tests aren't run by "
"default using ``tox`` because they require ``Node.js`` to be installed and "
"aren't necessary for the majority of patches. To run the JavaScript tests "
"using ``tox``:"
msgstr ""

msgid ""
"This command runs ``npm install`` to ensure test requirements are up to date "
"and then runs ``npm test``."
msgstr ""

msgid "Running tests using ``django-docker-box``"
msgstr ""

msgid ""
"`django-docker-box`_ allows you to run the Django's test suite across all "
"supported databases and python versions. See the `django-docker-box`_ "
"project page for installation and usage instructions."
msgstr ""

msgid "Using another ``settings`` module"
msgstr ""

msgid ""
"The included settings module (``tests/test_sqlite.py``) allows you to run "
"the test suite using SQLite. If you want to run the tests using a different "
"database, you'll need to define your own settings file. Some tests, such as "
"those for ``contrib.postgres``, are specific to a particular database "
"backend and will be skipped if run with a different backend. Some tests are "
"skipped or expected failures on a particular database backend (see "
"``DatabaseFeatures.django_test_skips`` and ``DatabaseFeatures."
"django_test_expected_failures`` on each backend)."
msgstr ""

msgid ""
"To run the tests with different settings, ensure that the module is on your :"
"envvar:`PYTHONPATH` and pass the module with ``--settings``."
msgstr ""

msgid ""
"The :setting:`DATABASES` setting in any test settings module needs to define "
"two databases:"
msgstr ""

msgid ""
"A ``default`` database. This database should use the backend that you want "
"to use for primary testing."
msgstr ""

msgid ""
"A database with the alias ``other``. The ``other`` database is used to test "
"that queries can be directed to different databases. This database should "
"use the same backend as the ``default``, and it must have a different name."
msgstr ""

msgid ""
"If you're using a backend that isn't SQLite, you will need to provide other "
"details for each database:"
msgstr ""

msgid ""
"The :setting:`USER` option needs to specify an existing user account for the "
"database. That user needs permission to execute ``CREATE DATABASE`` so that "
"the test database can be created."
msgstr ""

msgid ""
"The :setting:`PASSWORD` option needs to provide the password for the :"
"setting:`USER` that has been specified."
msgstr ""

msgid ""
"Test databases get their names by prepending ``test_`` to the value of the :"
"setting:`NAME` settings for the databases defined in :setting:`DATABASES`. "
"These test databases are deleted when the tests are finished."
msgstr ""

msgid ""
"You will also need to ensure that your database uses UTF-8 as the default "
"character set. If your database server doesn't use UTF-8 as a default "
"charset, you will need to include a value for :setting:`CHARSET "
"<TEST_CHARSET>` in the test settings dictionary for the applicable database."
msgstr ""

msgid "Running only some of the tests"
msgstr ""

msgid ""
"Django's entire test suite takes a while to run, and running every single "
"test could be redundant if, say, you just added a test to Django that you "
"want to run quickly without running everything else. You can run a subset of "
"the unit tests by appending the names of the test modules to ``runtests.py`` "
"on the command line."
msgstr ""

msgid ""
"For example, if you'd like to run tests only for generic relations and "
"internationalization, type:"
msgstr ""

msgid ""
"How do you find out the names of individual tests? Look in ``tests/`` — each "
"directory name there is the name of a test."
msgstr ""

msgid ""
"If you want to run only a particular class of tests, you can specify a list "
"of paths to individual test classes. For example, to run the "
"``TranslationTests`` of the ``i18n`` module, type:"
msgstr ""

msgid "Going beyond that, you can specify an individual test method like this:"
msgstr ""

msgid ""
"You can run tests starting at a specified top-level module with ``--start-"
"at`` option. For example:"
msgstr ""

msgid ""
"You can also run tests starting after a specified top-level module with ``--"
"start-after`` option. For example:"
msgstr ""

msgid ""
"Note that the ``--reverse`` option doesn't impact on ``--start-at`` or ``--"
"start-after`` options. Moreover these options cannot be used with test "
"labels."
msgstr ""

msgid "Running the Selenium tests"
msgstr ""

msgid ""
"Some tests require Selenium and a web browser. To run these tests, you must "
"install the :pypi:`selenium` package and run the tests with the ``--"
"selenium=<BROWSERS>`` option. For example, if you have Firefox and Google "
"Chrome installed:"
msgstr ""

msgid ""
"See the `selenium.webdriver`_ package for the list of available browsers."
msgstr ""

msgid ""
"Specifying ``--selenium`` automatically sets ``--tags=selenium`` to run only "
"the tests that require selenium."
msgstr ""

msgid ""
"Some browsers (e.g. Chrome or Firefox) support headless testing, which can "
"be faster and more stable. Add the ``--headless`` option to enable this mode."
msgstr ""

msgid "Running all the tests"
msgstr ""

msgid ""
"If you want to run the full suite of tests, you'll need to install a number "
"of dependencies:"
msgstr ""

msgid ":pypi:`aiosmtpd`"
msgstr ""

msgid ":pypi:`argon2-cffi` 19.2.0+"
msgstr ""

msgid ":pypi:`asgiref` 3.6.0+ (required)"
msgstr ""

msgid ":pypi:`bcrypt`"
msgstr ""

msgid ":pypi:`colorama`"
msgstr ""

msgid ":pypi:`docutils`"
msgstr ""

msgid ":pypi:`geoip2`"
msgstr ""

msgid ":pypi:`Jinja2` 2.11+"
msgstr ""

msgid ":pypi:`numpy`"
msgstr ""

msgid ":pypi:`Pillow` 6.2.1+"
msgstr ""

msgid ":pypi:`PyYAML`"
msgstr ""

msgid ":pypi:`pytz` (required)"
msgstr ""

msgid ":pypi:`pywatchman`"
msgstr ""

msgid ":pypi:`redis` 3.4+"
msgstr ""

msgid ":pypi:`setuptools`"
msgstr ""

msgid ""
":pypi:`python-memcached`, plus a `supported Python binding <https://"
"memcached.org/>`_"
msgstr ""

msgid ""
"`gettext <https://www.gnu.org/software/gettext/manual/gettext.html>`_ (:ref:"
"`gettext_on_windows`)"
msgstr ""

msgid ":pypi:`selenium` 3.8.0+"
msgstr ""

msgid ":pypi:`sqlparse` 0.3.1+ (required)"
msgstr ""

msgid ":pypi:`tblib` 1.5.0+"
msgstr ""

msgid ""
"You can find these dependencies in `pip requirements files <https://pip.pypa."
"io/en/latest/user_guide/#requirements-files>`_ inside the ``tests/"
"requirements`` directory of the Django source tree and install them like so:"
msgstr ""

msgid ""
"If you encounter an error during the installation, your system might be "
"missing a dependency for one or more of the Python packages. Consult the "
"failing package's documentation or search the web with the error message "
"that you encounter."
msgstr ""
"Si encuentras un error durante la instalación, es posible que a tu sistema "
"le falte una dependencia para uno o más de los paquetes de Python. Consulta "
"la documentación del paquete que falla o busca en la web el mensaje de error "
"que encuentres."

msgid ""
"You can also install the database adapter(s) of your choice using ``oracle."
"txt``, ``mysql.txt``, or ``postgres.txt``."
msgstr ""

msgid ""
"If you want to test the memcached or Redis cache backends, you'll also need "
"to define a :setting:`CACHES` setting that points at your memcached or Redis "
"instance respectively."
msgstr ""

msgid ""
"To run the GeoDjango tests, you will need to :doc:`set up a spatial database "
"and install the Geospatial libraries</ref/contrib/gis/install/index>`."
msgstr ""

msgid ""
"Each of these dependencies is optional. If you're missing any of them, the "
"associated tests will be skipped."
msgstr ""

msgid ""
"To run some of the autoreload tests, you'll need to install the `Watchman "
"<https://facebook.github.io/watchman/>`_ service."
msgstr ""

msgid "Code coverage"
msgstr ""

msgid ""
"Contributors are encouraged to run coverage on the test suite to identify "
"areas that need additional tests. The coverage tool installation and use is "
"described in :ref:`testing code coverage<topics-testing-code-coverage>`."
msgstr ""

msgid ""
"Coverage should be run in a single process to obtain accurate statistics. To "
"run coverage on the Django test suite using the standard test settings:"
msgstr ""

msgid "After running coverage, generate the html report by running:"
msgstr ""

msgid ""
"When running coverage for the Django tests, the included ``.coveragerc`` "
"settings file  defines ``coverage_html`` as the output directory for the "
"report and also excludes several directories not relevant to the results "
"(test code or external code included in Django)."
msgstr ""

msgid "Contrib apps"
msgstr ""

msgid ""
"Tests for contrib apps can be found in the :source:`tests/` directory, "
"typically under ``<app_name>_tests``. For example, tests for ``contrib."
"auth`` are located in :source:`tests/auth_tests`."
msgstr ""

msgid "Troubleshooting"
msgstr "Solución de problemas"

msgid "Test suite hangs or shows failures on ``main`` branch"
msgstr ""

msgid ""
"Ensure you have the latest point release of a :ref:`supported Python version "
"<faq-python-version-support>`, since there are often bugs in earlier "
"versions that may cause the test suite to fail or hang."
msgstr ""

msgid ""
"On **macOS** (High Sierra and newer versions), you might see this message "
"logged, after which the tests hang:"
msgstr ""

msgid ""
"To avoid this set a ``OBJC_DISABLE_INITIALIZE_FORK_SAFETY`` environment "
"variable, for example:"
msgstr ""

msgid ""
"Or add ``export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES`` to your shell's "
"startup file (e.g. ``~/.profile``)."
msgstr ""

msgid "Many test failures with ``UnicodeEncodeError``"
msgstr ""

msgid ""
"If the ``locales`` package is not installed, some tests will fail with a "
"``UnicodeEncodeError``."
msgstr ""

msgid "You can resolve this on Debian-based systems, for example, by running:"
msgstr ""

msgid ""
"You can resolve this for macOS systems by configuring your shell's locale:"
msgstr ""

msgid ""
"Run the ``locale`` command to confirm the change. Optionally, add those "
"export commands to your shell's startup file (e.g. ``~/.bashrc`` for Bash) "
"to avoid having to retype them."
msgstr ""

msgid "Tests that only fail in combination"
msgstr ""

msgid ""
"In case a test passes when run in isolation but fails within the whole "
"suite, we have some tools to help analyze the problem."
msgstr ""

msgid ""
"The ``--bisect`` option of ``runtests.py`` will run the failing test while "
"halving the test set it is run together with on each iteration, often making "
"it possible to identify a small number of tests that may be related to the "
"failure."
msgstr ""

msgid ""
"For example, suppose that the failing test that works on its own is "
"``ModelTest.test_eq``, then using:"
msgstr ""

msgid ""
"will try to determine a test that interferes with the given one. First, the "
"test is run with the first half of the test suite. If a failure occurs, the "
"first half of the test suite is split in two groups and each group is then "
"run with the specified test. If there is no failure with the first half of "
"the test suite, the second half of the test suite is run with the specified "
"test and split appropriately as described earlier. The process repeats until "
"the set of failing tests is minimized."
msgstr ""

msgid ""
"The ``--pair`` option runs the given test alongside every other test from "
"the suite, letting you check if another test has side-effects that cause the "
"failure. So:"
msgstr ""

msgid "will pair ``test_eq`` with every test label."
msgstr ""

msgid ""
"With both ``--bisect`` and ``--pair``, if you already suspect which cases "
"might be responsible for the failure, you may limit tests to be cross-"
"analyzed by :ref:`specifying further test labels <runtests-specifying-"
"labels>` after the first one:"
msgstr ""

msgid ""
"You can also try running any set of tests in a random or reverse order using "
"the ``--shuffle`` and ``--reverse`` options. This can help verify that "
"executing tests in a different order does not cause any trouble:"
msgstr ""

msgid "Seeing the SQL queries run during a test"
msgstr ""

msgid ""
"If you wish to examine the SQL being run in failing tests, you can turn on :"
"ref:`SQL logging <django-db-logger>` using the ``--debug-sql`` option. If "
"you combine this with ``--verbosity=2``, all SQL queries will be output:"
msgstr ""

msgid "Seeing the full traceback of a test failure"
msgstr ""

msgid ""
"By default tests are run in parallel with one process per core. When the "
"tests are run in parallel, however, you'll only see a truncated traceback "
"for any test failures. You can adjust this behavior with the ``--parallel`` "
"option:"
msgstr ""

msgid ""
"You can also use the :envvar:`DJANGO_TEST_PROCESSES` environment variable "
"for this purpose."
msgstr ""

msgid "Tips for writing tests"
msgstr ""

msgid "Isolating model registration"
msgstr ""

msgid ""
"To avoid polluting the global :attr:`~django.apps.apps` registry and prevent "
"unnecessary table creation, models defined in a test method should be bound "
"to a temporary ``Apps`` instance. To do this, use the :func:`~django.test."
"utils.isolate_apps` decorator::"
msgstr ""

msgid "Setting ``app_label``"
msgstr ""

msgid ""
"Models defined in a test method with no explicit :attr:`~django.db.models."
"Options.app_label` are automatically assigned the label of the app in which "
"their test class is located."
msgstr ""

msgid ""
"In order to make sure the models defined within the context of :func:"
"`~django.test.utils.isolate_apps` instances are correctly installed, you "
"should pass the set of targeted ``app_label`` as arguments:"
msgstr ""

msgid "``tests/app_label/tests.py``"
msgstr ""

msgid "Working with Git and GitHub"
msgstr ""

msgid ""
"This section explains how the community can contribute code to Django via "
"pull requests. If you're interested in how :ref:`mergers <mergers-team>` "
"handle them, see :doc:`../committing-code`."
msgstr ""

msgid ""
"Below, we are going to show how to create a GitHub pull request containing "
"the changes for Trac ticket #xxxxx. By creating a fully-ready pull request, "
"you will make the reviewer's job easier, meaning that your work is more "
"likely to be merged into Django."
msgstr ""

msgid ""
"You could also upload a traditional patch to Trac, but it's less practical "
"for reviews."
msgstr ""

msgid "Installing Git"
msgstr "Instalando Git"

msgid ""
"Django uses `Git`_ for its source control. You can `download <https://git-"
"scm.com/download>`_ Git, but it's often easier to install with your "
"operating system's package manager."
msgstr ""

msgid ""
"Django's `Git repository`_ is hosted on `GitHub`_, and it is recommended "
"that you also work using GitHub."
msgstr ""

msgid ""
"After installing Git, the first thing you should do is set up your name and "
"email:"
msgstr ""

msgid ""
"Note that ``user.name`` should be your real name, not your GitHub nick. "
"GitHub should know the email you use in the ``user.email`` field, as this "
"will be used to associate your commits with your GitHub account."
msgstr ""

msgid "Setting up local repository"
msgstr ""

msgid ""
"When you have created your GitHub account, with the nick \"GitHub_nick\", "
"and `forked Django's repository <https://github.com/django/django/fork>`__, "
"create a local copy of your fork:"
msgstr ""

msgid ""
"This will create a new directory \"django\", containing a clone of your "
"GitHub repository. The rest of the git commands on this page need to be run "
"within the cloned directory, so switch to it now:"
msgstr ""

msgid "Your GitHub repository will be called \"origin\" in Git."
msgstr ""

msgid ""
"You should also set up ``django/django`` as an \"upstream\" remote (that is, "
"tell git that the reference Django repository was the source of your fork of "
"it):"
msgstr ""

msgid "You can add other remotes similarly, for example:"
msgstr ""

msgid "Working on a ticket"
msgstr ""

msgid ""
"When working on a ticket, create a new branch for the work, and base that "
"work on ``upstream/main``:"
msgstr ""

msgid ""
"The -b flag creates a new branch for you locally. Don't hesitate to create "
"new branches even for the smallest things - that's what they are there for."
msgstr ""

msgid "If instead you were working for a fix on the 1.4 branch, you would do:"
msgstr ""

msgid ""
"Assume the work is carried on the ticket_xxxxx branch. Make some changes and "
"commit them:"
msgstr ""

msgid ""
"When writing the commit message, follow the :ref:`commit message guidelines "
"<committing-guidelines>` to ease the work of the merger. If you're "
"uncomfortable with English, try at least to describe precisely what the "
"commit does."
msgstr ""

msgid ""
"If you need to do additional work on your branch, commit as often as "
"necessary:"
msgstr ""

msgid "Publishing work"
msgstr ""

msgid "You can publish your work on GitHub by running:"
msgstr ""

msgid ""
"When you go to your GitHub page, you will notice a new branch has been "
"created."
msgstr ""

msgid ""
"If you are working on a Trac ticket, you should mention in the ticket that "
"your work is available from branch ticket_xxxxx of your GitHub repo. Include "
"a link to your branch."
msgstr ""

msgid ""
"Note that the above branch is called a \"topic branch\" in Git parlance. You "
"are free to rewrite the history of this branch, by using ``git rebase`` for "
"example. Other people shouldn't base their work on such a branch, because "
"their clone would become corrupt when you edit commits."
msgstr ""

msgid ""
"There are also \"public branches\". These are branches other people are "
"supposed to fork, so the history of these branches should never change. Good "
"examples of public branches are the ``main`` and ``stable/A.B.x`` branches "
"in the ``django/django`` repository."
msgstr ""

msgid ""
"When you think your work is ready to be pulled into Django, you should "
"create a pull request at GitHub. A good pull request means:"
msgstr ""

msgid ""
"commits with one logical change in each, following the :doc:`coding style "
"<coding-style>`,"
msgstr ""

msgid ""
"well-formed messages for each commit: a summary line and then paragraphs "
"wrapped at 72 characters thereafter -- see the :ref:`committing guidelines "
"<committing-guidelines>` for more details,"
msgstr ""

msgid ""
"documentation and tests, if needed -- actually tests are always needed, "
"except for documentation changes."
msgstr ""

msgid ""
"The test suite must pass and the documentation must build without warnings."
msgstr ""

msgid ""
"Once you have created your pull request, you should add a comment in the "
"related Trac ticket explaining what you've done. In particular, you should "
"note the environment in which you ran the tests, for instance: \"all tests "
"pass under SQLite and MySQL\"."
msgstr ""

msgid ""
"Pull requests at GitHub have only two states: open and closed. The merger "
"who will deal with your pull request has only two options: merge it or close "
"it. For this reason, it isn't useful to make a pull request until the code "
"is ready for merging -- or sufficiently close that a merger will finish it "
"themselves."
msgstr ""

msgid "Rebasing branches"
msgstr ""

msgid ""
"In the example above, you created two commits, the \"Fixed ticket_xxxxx\" "
"commit and \"Added two more tests\" commit."
msgstr ""

msgid ""
"We do not want to have the entire history of your working process in your "
"repository. Your commit \"Added two more tests\" would be unhelpful noise. "
"Instead, we would rather only have one commit containing all your work."
msgstr ""

msgid ""
"To rework the history of your branch you can squash the commits into one by "
"using interactive rebase:"
msgstr ""

msgid ""
"The HEAD~2 above is shorthand for two latest commits. The above command will "
"open an editor showing the two commits, prefixed with the word \"pick\"."
msgstr ""

msgid ""
"Change \"pick\" on the second line to \"squash\" instead. This will keep the "
"first commit, and squash the second commit into the first one. Save and quit "
"the editor. A second editor window should open, so you can reword the commit "
"message for the commit now that it includes both your steps."
msgstr ""

msgid ""
"You can also use the \"edit\" option in rebase. This way you can change a "
"single commit, for example to fix a typo in a docstring:"
msgstr ""

msgid ""
"If your topic branch is already published at GitHub, for example if you're "
"making minor changes to take into account a review, you will need to force-"
"push the changes:"
msgstr ""

msgid ""
"Note that this will rewrite history of ticket_xxxxx - if you check the "
"commit hashes before and after the operation at GitHub you will notice that "
"the commit hashes do not match anymore. This is acceptable, as the branch is "
"a topic branch, and nobody should be basing their work on it."
msgstr ""

msgid "After upstream has changed"
msgstr ""

msgid ""
"When upstream (``django/django``) has changed, you should rebase your work. "
"To do this, use:"
msgstr ""

msgid ""
"The work is automatically rebased using the branch you forked on, in the "
"example case using ``upstream/main``."
msgstr ""

msgid ""
"The rebase command removes all your local commits temporarily, applies the "
"upstream commits, and then applies your local commits again on the work."
msgstr ""

msgid ""
"If there are merge conflicts, you will need to resolve them and then use "
"``git rebase --continue``. At any point you can use ``git rebase --abort`` "
"to return to the original state."
msgstr ""

msgid "Note that you want to *rebase* on upstream, not *merge* the upstream."
msgstr ""

msgid ""
"The reason for this is that by rebasing, your commits will always be *on top "
"of* the upstream's work, not *mixed in with* the changes in the upstream. "
"This way your branch will contain only commits related to its topic, which "
"makes squashing easier."
msgstr ""

msgid "After review"
msgstr ""

msgid ""
"It is unusual to get any non-trivial amount of code into core without "
"changes requested by reviewers. In this case, it is often a good idea to add "
"the changes as one incremental commit to your work. This allows the reviewer "
"to easily check what changes you have done."
msgstr ""

msgid ""
"In this case, do the changes required by the reviewer. Commit as often as "
"necessary. Before publishing the changes, rebase your work. If you added two "
"commits, you would run:"
msgstr ""

msgid ""
"Squash the second commit into the first. Write a commit message along the "
"lines of:"
msgstr ""

msgid ""
"Finally, push your work back to your GitHub repository. Since you didn't "
"touch the public commits during the rebase, you should not need to force-"
"push:"
msgstr ""

msgid "Your pull request should now contain the new commit too."
msgstr ""

msgid ""
"Note that the merger is likely to squash the review commit into the previous "
"commit when committing the code."
msgstr ""

msgid "Working on a patch"
msgstr ""

msgid ""
"One of the ways that developers can contribute to Django is by reviewing "
"patches. Those patches will typically exist as pull requests on GitHub and "
"can be easily integrated into your local repository:"
msgstr ""

msgid ""
"This will create a new branch and then apply the changes from the pull "
"request to it. At this point you can run the tests or do anything else you "
"need to do to investigate the quality of the patch."
msgstr ""

msgid ""
"For more detail on working with pull requests see the :ref:`guidelines for "
"mergers <handling-pull-requests>`."
msgstr ""

msgid "Summary"
msgstr "Resumen"

msgid "Work on GitHub if you can."
msgstr ""

msgid "Announce your work on the Trac ticket by linking to your GitHub branch."
msgstr ""

msgid "When you have something ready, make a pull request."
msgstr ""

msgid "Make your pull requests as good as you can."
msgstr ""

msgid ""
"When doing fixes to your work, use ``git rebase -i`` to squash the commits."
msgstr ""

msgid "When upstream has changed, do ``git fetch upstream; git rebase``."
msgstr ""

msgid "Writing documentation"
msgstr ""

msgid ""
"We place high importance on the consistency and readability of "
"documentation. After all, Django was created in a journalism environment! So "
"we treat our documentation like we treat our code: we aim to improve it as "
"often as possible."
msgstr ""

msgid "Documentation changes generally come in two forms:"
msgstr ""

msgid ""
"General improvements: typo corrections, error fixes and better explanations "
"through clearer writing and more examples."
msgstr ""

msgid ""
"New features: documentation of features that have been added to the "
"framework since the last release."
msgstr ""

msgid ""
"This section explains how writers can craft their documentation changes in "
"the most useful and least error-prone ways."
msgstr ""

msgid "Getting the raw documentation"
msgstr ""

msgid ""
"Though Django's documentation is intended to be read as HTML at https://docs."
"djangoproject.com/, we edit it as a collection of text files for maximum "
"flexibility. These files live in the top-level :source:`docs/` directory of "
"a Django release."
msgstr ""

msgid ""
"If you'd like to start contributing to our docs, get the development version "
"of Django from the source code repository (see :ref:`installing-development-"
"version`). The development version has the latest-and-greatest "
"documentation, just as it has the latest-and-greatest code. We also backport "
"documentation fixes and improvements, at the discretion of the merger, to "
"the last release branch. That's because it's highly advantageous to have the "
"docs for the last release be up-to-date and correct (see :ref:`differences-"
"between-doc-versions`)."
msgstr ""

msgid "Getting started with Sphinx"
msgstr ""

msgid ""
"Django's documentation uses the Sphinx__ documentation system, which in turn "
"is based on docutils__. The basic idea is that lightly-formatted plain-text "
"documentation is transformed into HTML, PDF, and any other output format."
msgstr ""

msgid "To build the documentation locally, install Sphinx:"
msgstr ""

msgid "Then from the ``docs`` directory, build the HTML:"
msgstr ""

msgid ""
"To get started contributing, you'll want to read the :ref:`reStructuredText "
"reference <sphinx:rst-index>`."
msgstr ""

msgid ""
"Your locally-built documentation will be accessible at ``docs/_build/html/"
"index.html`` and it can be viewed in any web browser, though it will be "
"themed differently than the documentation at `docs.djangoproject.com "
"<https://docs.djangoproject.com/>`_. This is OK! If your changes look good "
"on your local machine, they'll look good on the website."
msgstr ""

msgid "How the documentation is organized"
msgstr "Como se organiza la documentación"

msgid "The documentation is organized into several categories:"
msgstr ""

msgid ""
":doc:`Tutorials </intro/index>` take the reader by the hand through a series "
"of steps to create something."
msgstr ""

msgid ""
"The important thing in a tutorial is to help the reader achieve something "
"useful, preferably as early as possible, in order to give them confidence."
msgstr ""

msgid ""
"Explain the nature of the problem we're solving, so that the reader "
"understands what we're trying to achieve. Don't feel that you need to begin "
"with explanations of how things work - what matters is what the reader does, "
"not what you explain. It can be helpful to refer back to what you've done "
"and explain afterward."
msgstr ""

msgid ""
":doc:`Topic guides </topics/index>` aim to explain a concept or subject at a "
"fairly high level."
msgstr ""

msgid ""
"Link to reference material rather than repeat it. Use examples and don't be "
"reluctant to explain things that seem very basic to you - it might be the "
"explanation someone else needs."
msgstr ""

msgid ""
"Providing background context helps a newcomer connect the topic to things "
"that they already know."
msgstr ""

msgid ""
":doc:`Reference guides </ref/index>` contain technical references for APIs. "
"They describe the functioning of Django's internal machinery and instruct in "
"its use."
msgstr ""

msgid ""
"Keep reference material tightly focused on the subject. Assume that the "
"reader already understands the basic concepts involved but needs to know or "
"be reminded of how Django does it."
msgstr ""

msgid ""
"Reference guides aren't the place for general explanation. If you find "
"yourself explaining basic concepts, you may want to move that material to a "
"topic guide."
msgstr ""

msgid ""
":doc:`How-to guides </howto/index>` are recipes that take the reader through "
"steps in key subjects."
msgstr ""

msgid ""
"What matters most in a how-to guide is what a user wants to achieve. A how-"
"to should always be result-oriented rather than focused on internal details "
"of how Django implements whatever is being discussed."
msgstr ""

msgid ""
"These guides are more advanced than tutorials and assume some knowledge "
"about how Django works. Assume that the reader has followed the tutorials "
"and don't hesitate to refer the reader back to the appropriate tutorial "
"rather than repeat the same material."
msgstr ""

msgid "Writing style"
msgstr ""

msgid ""
"When using pronouns in reference to a hypothetical person, such as \"a user "
"with a session cookie\", gender-neutral pronouns (they/their/them) should be "
"used. Instead of:"
msgstr ""

msgid "he or she... use they."
msgstr ""

msgid "him or her... use them."
msgstr ""

msgid "his or her... use their."
msgstr ""

msgid "his or hers... use theirs."
msgstr ""

msgid "himself or herself... use themselves."
msgstr ""

msgid ""
"Try to avoid using words that minimize the difficulty involved in a task or "
"operation, such as \"easily\", \"simply\", \"just\", \"merely\", "
"\"straightforward\", and so on. People's experience may not match your "
"expectations, and they may become frustrated when they do not find a step as "
"\"straightforward\" or \"simple\" as it is implied to be."
msgstr ""

msgid "Commonly used terms"
msgstr ""

msgid ""
"Here are some style guidelines on commonly used terms throughout the "
"documentation:"
msgstr ""

msgid ""
"**Django** -- when referring to the framework, capitalize Django. It is "
"lowercase only in Python code and in the djangoproject.com logo."
msgstr ""

msgid "**email** -- no hyphen."
msgstr ""

msgid ""
"**HTTP** -- the expected pronunciation is \"Aitch Tee Tee Pee\" and "
"therefore should be preceded by \"an\" and not \"a\"."
msgstr ""

msgid "**MySQL**, **PostgreSQL**, **SQLite**"
msgstr ""

msgid ""
"**SQL** -- when referring to SQL, the expected pronunciation should be \"Ess "
"Queue Ell\" and not \"sequel\". Thus in a phrase like \"Returns an SQL "
"expression\", \"SQL\" should be preceded by \"an\" and not \"a\"."
msgstr ""

msgid "**Python** -- when referring to the language, capitalize Python."
msgstr ""

msgid ""
"**realize**, **customize**, **initialize**, etc. -- use the American \"ize\" "
"suffix, not \"ise.\""
msgstr ""

msgid ""
"**subclass** -- it's a single word without a hyphen, both as a verb "
"(\"subclass that model\") and as a noun (\"create a subclass\")."
msgstr ""

msgid "**the web**, **web framework** -- it's not capitalized."
msgstr ""

msgid "**website** -- use one word, without capitalization."
msgstr ""

msgid "Django-specific terminology"
msgstr ""

msgid "**model** -- it's not capitalized."
msgstr ""

msgid "**template** -- it's not capitalized."
msgstr ""

msgid ""
"**URLconf** -- use three capitalized letters, with no space before \"conf.\""
msgstr ""

msgid "**view** -- it's not capitalized."
msgstr ""

msgid "Guidelines for reStructuredText files"
msgstr ""

msgid ""
"These guidelines regulate the format of our reST (reStructuredText) "
"documentation:"
msgstr ""

msgid "In section titles, capitalize only initial words and proper nouns."
msgstr ""

msgid ""
"Wrap the documentation at 80 characters wide, unless a code example is "
"significantly less readable when split over two lines, or for another good "
"reason."
msgstr ""

msgid ""
"The main thing to keep in mind as you write and edit docs is that the more "
"semantic markup you can add the better. So:"
msgstr ""

msgid "Isn't nearly as helpful as:"
msgstr ""

msgid ""
"This is because Sphinx will generate proper links for the latter, which "
"greatly helps readers."
msgstr ""

msgid ""
"You can prefix the target with a ``~`` (that's a tilde) to get only the "
"\"last bit\" of that path. So ``:mod:`~django.contrib.auth``` will display a "
"link with the title \"auth\"."
msgstr ""

msgid ""
"All Python code blocks should be formatted using the :pypi:`blacken-docs` "
"auto-formatter. This will be run by ``pre-commit`` if that is configured."
msgstr ""

msgid ""
"Use :mod:`~sphinx.ext.intersphinx` to reference Python's and Sphinx' "
"documentation."
msgstr ""

msgid ""
"Add ``.. code-block:: <lang>`` to literal blocks so that they get "
"highlighted. Prefer relying on automatic highlighting using ``::`` (two "
"colons). This has the benefit that if the code contains some invalid syntax, "
"it won't be highlighted. Adding ``.. code-block:: python``, for example, "
"will force highlighting despite invalid syntax."
msgstr ""

msgid ""
"To improve readability, use ``.. admonition:: Descriptive title`` rather "
"than ``.. note::``. Use these boxes sparingly."
msgstr ""

msgid "Use these heading styles:"
msgstr ""

msgid ""
"Use :rst:role:`:rfc:<rfc>` to reference RFC and try to link to the relevant "
"section if possible. For example, use ``:rfc:`2324#section-2.3.2``` or ``:"
"rfc:`Custom link text <2324#section-2.3.2>```."
msgstr ""

msgid ""
"Use :rst:role:`:pep:<pep>` to reference a Python Enhancement Proposal (PEP) "
"and try to link to the relevant section if possible. For example, use ``:pep:"
"`20#easter-egg``` or ``:pep:`Easter Egg <20#easter-egg>```."
msgstr ""

msgid ""
"Use :rst:role:`:mimetype:<mimetype>` to refer to a MIME Type unless the "
"value is quoted for a code example."
msgstr ""

msgid ""
"Use :rst:role:`:envvar:<envvar>` to refer to an environment variable. You "
"may also need to define a reference to the documentation for that "
"environment variable using :rst:dir:`.. envvar:: <envvar>`."
msgstr ""

msgid ""
"All Python code blocks in the Django documentation were reformatted with :"
"pypi:`blacken-docs`."
msgstr ""

msgid "Django-specific markup"
msgstr ""

msgid ""
"Besides :ref:`Sphinx's built-in markup <sphinx:rst-index>`, Django's docs "
"define some extra description units:"
msgstr ""

msgid "Settings:"
msgstr ""

msgid "To link to a setting, use ``:setting:`INSTALLED_APPS```."
msgstr ""

msgid "Template tags:"
msgstr ""

msgid "To link, use ``:ttag:`regroup```."
msgstr ""

msgid "Template filters:"
msgstr ""

msgid "To link, use ``:tfilter:`linebreaksbr```."
msgstr ""

msgid "Field lookups (i.e. ``Foo.objects.filter(bar__exact=whatever)``):"
msgstr ""

msgid "To link, use ``:lookup:`exact```."
msgstr ""

msgid "``django-admin`` commands:"
msgstr ""

msgid "To link, use ``:djadmin:`migrate```."
msgstr ""

msgid "``django-admin`` command-line options:"
msgstr ""

msgid ""
"To link, use ``:option:`command_name --traceback``` (or omit "
"``command_name`` for the options shared by all commands like ``--"
"verbosity``)."
msgstr ""

msgid "Links to Trac tickets (typically reserved for patch release notes):"
msgstr ""

msgid ""
"Django's documentation uses a custom ``console`` directive for documenting "
"command-line examples involving ``django-admin``, ``manage.py``, ``python``, "
"etc.). In the HTML documentation, it renders a two-tab UI, with one tab "
"showing a Unix-style command prompt and a second tab showing a Windows "
"prompt."
msgstr ""

msgid "For example, you can replace this fragment:"
msgstr ""

msgid "with this one:"
msgstr ""

msgid "Notice two things:"
msgstr ""

msgid ""
"You usually will replace occurrences of the ``.. code-block:: console`` "
"directive."
msgstr ""

msgid ""
"You don't need to change the actual content of the code example. You still "
"write it assuming a Unix-y environment (i.e. a ``'$'`` prompt symbol, "
"``'/'`` as filesystem path components separator, etc.)"
msgstr ""

msgid ""
"The example above will render a code example block with two tabs. The first "
"one will show:"
msgstr ""

msgid "(No changes from what ``.. code-block:: console`` would have rendered)."
msgstr ""

msgid "The second one will show:"
msgstr ""

msgid "Documenting new features"
msgstr ""

msgid "Our policy for new features is:"
msgstr ""

msgid ""
"All documentation of new features should be written in a way that clearly "
"designates the features that are only available in the Django development "
"version. Assume documentation readers are using the latest release, not the "
"development version."
msgstr ""

msgid ""
"Our preferred way for marking new features is by prefacing the features' "
"documentation with: \"``.. versionadded:: X.Y``\", followed by a mandatory "
"blank line and an optional description (indented)."
msgstr ""

msgid ""
"General improvements or other changes to the APIs that should be emphasized "
"should use the \"``.. versionchanged:: X.Y``\" directive (with the same "
"format as the ``versionadded`` mentioned above."
msgstr ""

msgid ""
"These ``versionadded`` and ``versionchanged`` blocks should be \"self-"
"contained.\" In other words, since we only keep these annotations around for "
"two releases, it's nice to be able to remove the annotation and its contents "
"without having to reflow, reindent, or edit the surrounding text. For "
"example, instead of putting the entire description of a new or changed "
"feature in a block, do something like this:"
msgstr ""

msgid ""
"Put the changed annotation notes at the bottom of a section, not the top."
msgstr ""

msgid ""
"Also, avoid referring to a specific version of Django outside a "
"``versionadded`` or ``versionchanged`` block. Even inside a block, it's "
"often redundant to do so as these annotations render as \"New in Django A.B:"
"\" and \"Changed in Django A.B\", respectively."
msgstr ""

msgid ""
"If a function, attribute, etc. is added, it's also okay to use a "
"``versionadded`` annotation like this:"
msgstr ""

msgid ""
"We can remove the ``.. versionadded:: A.B`` annotation without any "
"indentation changes when the time comes."
msgstr ""

msgid "Minimizing images"
msgstr ""

msgid ""
"Optimize image compression where possible. For PNG files, use OptiPNG and "
"AdvanceCOMP's ``advpng``:"
msgstr ""

msgid ""
"This is based on OptiPNG version 0.7.5. Older versions may complain about "
"the ``-strip all`` option being lossy."
msgstr ""

msgid "An example"
msgstr ""

msgid ""
"For a quick example of how it all fits together, consider this hypothetical "
"example:"
msgstr ""

msgid ""
"First, the ``ref/settings.txt`` document could have an overall layout like "
"this:"
msgstr ""

msgid ""
"Next, the ``topics/settings.txt`` document could contain something like this:"
msgstr ""

msgid ""
"We use the Sphinx :rst:role:`doc` cross-reference element when we want to "
"link to another document as a whole and the :rst:role:`ref` element when we "
"want to link to an arbitrary location in a document."
msgstr ""

msgid "Next, notice how the settings are annotated:"
msgstr ""

msgid ""
"This marks up the following header as the \"canonical\" target for the "
"setting ``ADMINS``. This means any time I talk about ``ADMINS``, I can "
"reference it using ``:setting:`ADMINS```."
msgstr ""

msgid "That's basically how everything fits together."
msgstr ""

msgid "Spelling check"
msgstr ""

msgid ""
"Before you commit your docs, it's a good idea to run the spelling checker. "
"You'll need to install :pypi:`sphinxcontrib-spelling` first. Then from the "
"``docs`` directory, run ``make spelling``. Wrong words (if any) along with "
"the file and line number where they occur will be saved to ``_build/spelling/"
"output.txt``."
msgstr ""

msgid ""
"If you encounter false-positives (error output that actually is correct), do "
"one of the following:"
msgstr ""

msgid "Surround inline code or brand/technology names with grave accents (`)."
msgstr ""

msgid "Find synonyms that the spell checker recognizes."
msgstr ""

msgid ""
"If, and only if, you are sure the word you are using is correct - add it to "
"``docs/spelling_wordlist`` (please keep the list in alphabetical order)."
msgstr ""

msgid "Link check"
msgstr ""

msgid ""
"Links in documentation can become broken or changed such that they are no "
"longer the canonical link. Sphinx provides a builder that can check whether "
"the links in the documentation are working. From the ``docs`` directory, run "
"``make linkcheck``. Output is printed to the terminal, but can also be found "
"in ``_build/linkcheck/output.txt`` and ``_build/linkcheck/output.json``."
msgstr ""

msgid ""
"Entries that have a status of \"working\" are fine, those that are "
"\"unchecked\" or \"ignored\" have been skipped because they either cannot be "
"checked or have matched ignore rules in the configuration."
msgstr ""

msgid ""
"Entries that have a status of \"broken\" need to be fixed. Those that have a "
"status of \"redirected\" may need to be updated to point to the canonical "
"location, e.g. the scheme has changed ``http://`` → ``https://``. In certain "
"cases, we do not want to update a \"redirected\" link, e.g. a rewrite to "
"always point to the latest or stable version of the documentation, e.g. ``/"
"en/stable/`` → ``/en/3.2/``."
msgstr ""

msgid "Translating documentation"
msgstr ""

msgid ""
"See :ref:`Localizing the Django documentation <translating-documentation>` "
"if you'd like to help translate the documentation into another language."
msgstr ""

msgid "``django-admin`` man page"
msgstr ""

msgid ""
"Sphinx can generate a manual page for the :doc:`django-admin </ref/django-"
"admin>` command. This is configured in ``docs/conf.py``. Unlike other "
"documentation output, this man page should be included in the Django "
"repository and the releases as ``docs/man/django-admin.1``. There isn't a "
"need to update this file when updating the documentation, as it's updated "
"once as part of the release process."
msgstr ""

msgid ""
"To generate an updated version of the man page, run ``make man`` in the "
"``docs`` directory. The new man page will be written in ``docs/_build/man/"
"django-admin.1``."
msgstr ""

msgid "Django Deprecation Timeline"
msgstr ""

msgid ""
"This document outlines when various pieces of Django will be removed or "
"altered in a backward incompatible way, following their deprecation, as per "
"the :ref:`deprecation policy <internal-release-deprecation-policy>`. More "
"details about each item can often be found in the release notes of two "
"versions prior."
msgstr ""

msgid "5.1"
msgstr ""

msgid ""
"See the :ref:`Django 4.2 release notes <deprecated-features-4.2>` for more "
"details on these changes."
msgstr ""

msgid "The ``BaseUserManager.make_random_password()`` method will be removed."
msgstr ""

msgid "The model's ``Meta.index_together`` option will be removed."
msgstr ""

msgid "The ``length_is`` template filter will be removed."
msgstr ""

msgid ""
"The ``django.contrib.auth.hashers.SHA1PasswordHasher``, ``django.contrib."
"auth.hashers.UnsaltedSHA1PasswordHasher``, and ``django.contrib.auth.hashers."
"UnsaltedMD5PasswordHasher`` will be removed."
msgstr ""

msgid ""
"The model ``django.contrib.postgres.fields.CICharField``, ``django.contrib."
"postgres.fields.CIEmailField``, and ``django.contrib.postgres.fields."
"CITextField`` will be removed. Stub fields will remain for compatibility "
"with historical migrations."
msgstr ""

msgid "The ``django.contrib.postgres.fields.CIText`` mixin will be removed."
msgstr ""

msgid ""
"The ``map_width`` and ``map_height`` attributes of ``BaseGeometryWidget`` "
"will be removed."
msgstr ""

msgid "The ``SimpleTestCase.assertFormsetError()`` method will be removed."
msgstr ""

msgid ""
"The ``TransactionTestCase.assertQuerysetEqual()`` method will be removed."
msgstr ""

msgid ""
"Support for passing encoded JSON string literals to ``JSONField`` and "
"associated lookups and expressions will be removed."
msgstr ""

msgid ""
"Support for passing positional arguments to ``Signer`` and "
"``TimestampSigner`` will be removed."
msgstr ""

msgid ""
"The ``DEFAULT_FILE_STORAGE`` and ``STATICFILES_STORAGE`` settings will be "
"removed."
msgstr ""

msgid ""
"The ``django.core.files.storage.get_storage_class()`` function will be "
"removed."
msgstr ""

msgid "5.0"
msgstr ""

msgid ""
"See the :ref:`Django 4.0 release notes <deprecated-features-4.0>` for more "
"details on these changes."
msgstr ""

msgid "The ``SERIALIZE`` test setting will be removed."
msgstr ""

msgid "The undocumented ``django.utils.baseconv`` module will be removed."
msgstr ""

msgid "The undocumented ``django.utils.datetime_safe`` module will be removed."
msgstr ""

msgid ""
"The default value of the ``USE_TZ`` setting will change from ``False`` to "
"``True``."
msgstr ""

msgid ""
"The default sitemap protocol for sitemaps built outside the context of a "
"request will change from ``'http'`` to ``'https'``."
msgstr ""

msgid ""
"The ``extra_tests`` argument for ``DiscoverRunner.build_suite()`` and "
"``DiscoverRunner.run_tests()`` will be removed."
msgstr ""

msgid ""
"The ``django.contrib.postgres.aggregates.ArrayAgg``, ``JSONBAgg``, and "
"``StringAgg`` aggregates will return ``None`` when there are no rows instead "
"of ``[]``, ``[]``, and ``''`` respectively."
msgstr ""

msgid "The ``USE_L10N`` setting will be removed."
msgstr ""

msgid "The ``USE_DEPRECATED_PYTZ`` transitional setting will be removed."
msgstr ""

msgid "Support for ``pytz`` timezones will be removed."
msgstr ""

msgid "The ``is_dst`` argument will be removed from:"
msgstr ""

msgid "``QuerySet.datetimes()``"
msgstr ""

msgid "``django.utils.timezone.make_aware()``"
msgstr ""

msgid "``django.db.models.functions.Trunc()``"
msgstr ""

msgid "``django.db.models.functions.TruncSecond()``"
msgstr ""

msgid "``django.db.models.functions.TruncMinute()``"
msgstr ""

msgid "``django.db.models.functions.TruncHour()``"
msgstr ""

msgid "``django.db.models.functions.TruncDay()``"
msgstr ""

msgid "``django.db.models.functions.TruncWeek()``"
msgstr ""

msgid "``django.db.models.functions.TruncMonth()``"
msgstr ""

msgid "``django.db.models.functions.TruncQuarter()``"
msgstr ""

msgid "``django.db.models.functions.TruncYear()``"
msgstr ""

msgid ""
"The ``django.contrib.gis.admin.GeoModelAdmin`` and ``OSMGeoAdmin`` classes "
"will be removed."
msgstr ""

msgid "The undocumented ``BaseForm._html_output()`` method will be removed."
msgstr ""

msgid ""
"The ability to return a ``str``, rather than a ``SafeString``, when "
"rendering an ``ErrorDict`` and ``ErrorList`` will be removed."
msgstr ""

msgid ""
"See the :ref:`Django 4.1 release notes <deprecated-features-4.1>` for more "
"details on these changes."
msgstr ""

msgid "The ``SitemapIndexItem.__str__()`` method will be removed."
msgstr ""

msgid "The ``CSRF_COOKIE_MASKED`` transitional setting will be removed."
msgstr ""

msgid ""
"The ``name`` argument of ``django.utils.functional.cached_property()`` will "
"be removed."
msgstr ""

msgid ""
"The ``opclasses`` argument of ``django.contrib.postgres.constraints."
"ExclusionConstraint`` will be removed."
msgstr ""

msgid ""
"The undocumented ability to pass ``errors=None`` to ``SimpleTestCase."
"assertFormError()`` and ``assertFormsetError()`` will be removed."
msgstr ""

msgid ""
"``django.contrib.sessions.serializers.PickleSerializer`` will be removed."
msgstr ""

msgid ""
"The usage of ``QuerySet.iterator()`` on a queryset that prefetches related "
"objects without providing the ``chunk_size`` argument will no longer be "
"allowed."
msgstr ""

msgid ""
"Passing unsaved model instances to related filters will no longer be allowed."
msgstr ""

msgid ""
"``created=True`` will be required in the signature of ``RemoteUserBackend."
"configure_user()`` subclasses."
msgstr ""

msgid ""
"Support for logging out via ``GET`` requests in the ``django.contrib.auth."
"views.LogoutView`` and ``django.contrib.auth.views.logout_then_login()`` "
"will be removed."
msgstr ""

msgid ""
"The ``django.utils.timezone.utc`` alias to ``datetime.timezone.utc`` will be "
"removed."
msgstr ""

msgid ""
"Passing a response object and a form/formset name to ``SimpleTestCase."
"assertFormError()`` and ``assertFormsetError()`` will no longer be allowed."
msgstr ""

msgid "The ``django.contrib.gis.admin.OpenLayersWidget`` will be removed."
msgstr ""

msgid ""
"The ``django.contrib.auth.hashers.CryptPasswordHasher`` will be removed."
msgstr ""

msgid ""
"The ``\"django/forms/default.html\"`` and ``\"django/forms/formsets/default."
"html\"`` templates will be removed."
msgstr ""

msgid ""
"The ability to pass ``nulls_first=False`` or ``nulls_last=False`` to "
"``Expression.asc()`` and ``Expression.desc()`` methods, and the ``OrderBy`` "
"expression will be removed."
msgstr ""

msgid "4.1"
msgstr "4.1"

msgid ""
"See the :ref:`Django 3.2 release notes <deprecated-features-3.2>` for more "
"details on these changes."
msgstr ""

msgid ""
"Support for assigning objects which don't support creating deep copies with "
"``copy.deepcopy()`` to class attributes in ``TestCase.setUpTestData()`` will "
"be removed."
msgstr ""

msgid "``BaseCommand.requires_system_checks`` won't support boolean values."
msgstr ""

msgid ""
"The ``whitelist`` argument and ``domain_whitelist`` attribute of ``django."
"core.validators.EmailValidator`` will be removed."
msgstr ""

msgid "The ``default_app_config`` module variable will be removed."
msgstr ""

msgid ""
"``TransactionTestCase.assertQuerysetEqual()`` will no longer automatically "
"call ``repr()`` on a queryset when compared to string values."
msgstr ""

msgid ""
"``django.core.cache.backends.memcached.MemcachedCache`` will be removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.2 format of messages used by ``django.contrib."
"messages.storage.cookie.CookieStorage`` will be removed."
msgstr ""

msgid "4.0"
msgstr "4.0"

msgid ""
"See the :ref:`Django 3.0 release notes <deprecated-features-3.0>` for more "
"details on these changes."
msgstr ""

msgid ""
"``django.utils.http.urlquote()``, ``urlquote_plus()``, ``urlunquote()``, and "
"``urlunquote_plus()`` will be removed."
msgstr ""

msgid ""
"``django.utils.encoding.force_text()`` and ``smart_text()`` will be removed."
msgstr ""

msgid ""
"``django.utils.translation.ugettext()``, ``ugettext_lazy()``, "
"``ugettext_noop()``, ``ungettext()``, and ``ungettext_lazy()`` will be "
"removed."
msgstr ""

msgid ""
"``django.views.i18n.set_language()`` will no longer set the user language in "
"``request.session`` (key ``django.utils.translation.LANGUAGE_SESSION_KEY``)."
msgstr ""

msgid ""
"``alias=None`` will be required in the signature of ``django.db.models."
"Expression.get_group_by_cols()`` subclasses."
msgstr ""

msgid "``django.utils.text.unescape_entities()`` will be removed."
msgstr ""

msgid "``django.utils.http.is_safe_url()`` will be removed."
msgstr ""

msgid ""
"See the :ref:`Django 3.1 release notes <deprecated-features-3.1>` for more "
"details on these changes."
msgstr ""

msgid "The ``PASSWORD_RESET_TIMEOUT_DAYS`` setting will be removed."
msgstr ""

msgid ""
"The undocumented usage of the :lookup:`isnull` lookup with non-boolean "
"values as the right-hand side will no longer be allowed."
msgstr ""

msgid ""
"The ``django.db.models.query_utils.InvalidQuery`` exception class will be "
"removed."
msgstr ""

msgid "The ``django-admin.py`` entry point will be removed."
msgstr ""

msgid "The ``HttpRequest.is_ajax()`` method will be removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 encoding format of cookies values used by "
"``django.contrib.messages.storage.cookie.CookieStorage`` will be removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 password reset tokens in the admin site (that "
"use the SHA-1 hashing algorithm) will be removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 encoding format of sessions will be removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 ``django.core.signing.Signer`` signatures "
"(encoded with the SHA-1 algorithm) will be removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 ``django.core.signing.dumps()`` signatures "
"(encoded with the SHA-1 algorithm) in ``django.core.signing.loads()`` will "
"be removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 user sessions (that use the SHA-1 algorithm) "
"will be removed."
msgstr ""

msgid ""
"The ``get_response`` argument for ``django.utils.deprecation.MiddlewareMixin."
"__init__()`` will be required and won't accept ``None``."
msgstr ""

msgid ""
"The ``providing_args`` argument for ``django.dispatch.Signal`` will be "
"removed."
msgstr ""

msgid ""
"The ``length`` argument for ``django.utils.crypto.get_random_string()`` will "
"be required."
msgstr ""

msgid "The ``list`` message for ``ModelMultipleChoiceField`` will be removed."
msgstr ""

msgid ""
"Support for passing raw column aliases to ``QuerySet.order_by()`` will be "
"removed."
msgstr ""

msgid ""
"The model ``NullBooleanField`` will be removed. A stub field will remain for "
"compatibility with historical migrations."
msgstr ""

msgid "``django.conf.urls.url()`` will be removed."
msgstr ""

msgid ""
"The model ``django.contrib.postgres.fields.JSONField`` will be removed. A "
"stub field will remain for compatibility with historical migrations."
msgstr ""

msgid ""
"``django.contrib.postgres.forms.JSONField``, ``django.contrib.postgres."
"fields.jsonb.KeyTransform``, and ``django.contrib.postgres.fields.jsonb."
"KeyTextTransform`` will be removed."
msgstr ""

msgid ""
"The ``{% ifequal %}`` and ``{% ifnotequal %}`` template tags will be removed."
msgstr ""

msgid "The ``DEFAULT_HASHING_ALGORITHM`` transitional setting will be removed."
msgstr ""

msgid "3.1"
msgstr ""

msgid ""
"See the :ref:`Django 2.2 release notes <deprecated-features-2.2>` for more "
"details on these changes."
msgstr ""

msgid "``django.utils.timezone.FixedOffset`` will be removed."
msgstr ""

msgid "``django.core.paginator.QuerySetPaginator`` will be removed."
msgstr ""

msgid "A model's ``Meta.ordering`` will no longer affect ``GROUP BY`` queries."
msgstr ""

msgid ""
"``django.contrib.postgres.fields.FloatRangeField`` and ``django.contrib."
"postgres.forms.FloatRangeField`` will be removed."
msgstr ""

msgid "The ``FILE_CHARSET`` setting will be removed."
msgstr ""

msgid ""
"``django.contrib.staticfiles.storage.CachedStaticFilesStorage`` will be "
"removed."
msgstr ""

msgid ""
"``RemoteUserBackend.configure_user()`` will require ``request`` as the first "
"positional argument."
msgstr ""

msgid ""
"Support for ``SimpleTestCase.allow_database_queries`` and "
"``TransactionTestCase.multi_db`` will be removed."
msgstr ""

msgid "3.0"
msgstr ""

msgid ""
"See the :ref:`Django 2.0 release notes<deprecated-features-2.0>` for more "
"details on these changes."
msgstr ""

msgid "The ``django.db.backends.postgresql_psycopg2`` module will be removed."
msgstr ""

msgid "``django.shortcuts.render_to_response()`` will be removed."
msgstr ""

msgid "The ``DEFAULT_CONTENT_TYPE`` setting will be removed."
msgstr ""

msgid "``HttpRequest.xreadlines()`` will be removed."
msgstr ""

msgid ""
"Support for the ``context`` argument of ``Field.from_db_value()`` and "
"``Expression.convert_value()`` will be removed."
msgstr ""

msgid ""
"The ``field_name`` keyword argument of ``QuerySet.earliest()`` and "
"``latest()`` will be removed."
msgstr ""

msgid ""
"See the :ref:`Django 2.1 release notes <deprecated-features-2.1>` for more "
"details on these changes."
msgstr ""

msgid "``django.contrib.gis.db.models.functions.ForceRHR`` will be removed."
msgstr ""

msgid "``django.utils.http.cookie_date()`` will be removed."
msgstr ""

msgid ""
"The ``staticfiles`` and ``admin_static`` template tag libraries will be "
"removed."
msgstr ""

msgid "``django.contrib.staticfiles.templatetags.static()`` will be removed."
msgstr ""

msgid ""
"The shim to allow ``InlineModelAdmin.has_add_permission()`` to be defined "
"without an ``obj`` argument will be removed."
msgstr ""

msgid "2.1"
msgstr "2.1"

msgid ""
"See the :ref:`Django 1.11 release notes<deprecated-features-1.11>` for more "
"details on these changes."
msgstr ""

msgid ""
"``contrib.auth.views.login()``, ``logout()``, ``password_change()``, "
"``password_change_done()``, ``password_reset()``, ``password_reset_done()``, "
"``password_reset_confirm()``, and ``password_reset_complete()`` will be "
"removed."
msgstr ""

msgid ""
"The ``extra_context`` parameter of ``contrib.auth.views."
"logout_then_login()`` will be removed."
msgstr ""

msgid "``django.test.runner.setup_databases()`` will be removed."
msgstr ""

msgid "``django.utils.translation.string_concat()`` will be removed."
msgstr ""

msgid ""
"``django.core.cache.backends.memcached.PyLibMCCache`` will no longer support "
"passing ``pylibmc`` behavior settings as top-level attributes of ``OPTIONS``."
msgstr ""

msgid ""
"The ``host`` parameter of ``django.utils.http.is_safe_url()`` will be "
"removed."
msgstr ""

msgid ""
"Silencing of exceptions raised while rendering the ``{% include %}`` "
"template tag will be removed."
msgstr ""

msgid "``DatabaseIntrospection.get_indexes()`` will be removed."
msgstr ""

msgid ""
"The ``authenticate()`` method of authentication backends will require "
"``request`` as the first positional argument."
msgstr ""

msgid "The ``django.db.models.permalink()`` decorator will be removed."
msgstr ""

msgid ""
"The ``USE_ETAGS`` setting will be removed. ``CommonMiddleware`` and ``django."
"utils.cache.patch_response_headers()`` will no longer set ETags."
msgstr ""

msgid "The ``Model._meta.has_auto_field`` attribute will be removed."
msgstr ""

msgid ""
"``url()``'s support for inline flags in regular expression groups (``(?i)``, "
"``(?L)``, ``(?m)``, ``(?s)``, and ``(?u)``) will be removed."
msgstr ""

msgid ""
"Support for ``Widget.render()`` methods without the ``renderer`` argument "
"will be removed."
msgstr ""

msgid "2.0"
msgstr "2.0"

msgid ""
"See the :ref:`Django 1.9 release notes<deprecated-features-1.9>` for more "
"details on these changes."
msgstr ""

msgid ""
"The ``weak`` argument to ``django.dispatch.signals.Signal.disconnect()`` "
"will be removed."
msgstr ""

msgid ""
"``django.db.backends.base.BaseDatabaseOperations.check_aggregate_support()`` "
"will be removed."
msgstr ""

msgid "The ``django.forms.extras`` package will be removed."
msgstr ""

msgid "The ``assignment_tag`` helper will be removed."
msgstr ""

msgid ""
"The ``host`` argument to ``assertsRedirects`` will be removed. The "
"compatibility layer which allows absolute URLs to be considered equal to "
"relative ones when the path is identical will also be removed."
msgstr ""

msgid "``Field.rel`` will be removed."
msgstr ""

msgid "``Field.remote_field.to`` attribute will be removed."
msgstr ""

msgid ""
"The ``on_delete`` argument for ``ForeignKey`` and ``OneToOneField``  will be "
"required."
msgstr ""

msgid "``django.db.models.fields.add_lazy_relation()`` will be removed."
msgstr ""

msgid ""
"When time zone support is enabled, database backends that don't support time "
"zones won't convert aware datetimes to naive values in UTC anymore when such "
"values are passed as parameters to SQL queries executed outside of the ORM, "
"e.g. with ``cursor.execute()``."
msgstr ""

msgid ""
"The ``django.contrib.auth.tests.utils.skipIfCustomUser()`` decorator will be "
"removed."
msgstr ""

msgid "The ``GeoManager`` and ``GeoQuerySet`` classes will be removed."
msgstr ""

msgid "The ``django.contrib.gis.geoip`` module will be removed."
msgstr ""

msgid ""
"The ``supports_recursion`` check for template loaders will be removed from:"
msgstr ""

msgid "``django.template.engine.Engine.find_template()``"
msgstr ""

msgid "``django.template.loader_tags.ExtendsNode.find_template()``"
msgstr ""

msgid "``django.template.loaders.base.Loader.supports_recursion()``"
msgstr ""

msgid "``django.template.loaders.cached.Loader.supports_recursion()``"
msgstr ""

msgid ""
"The ``load_template()`` and ``load_template_sources()`` template loader "
"methods will be removed."
msgstr ""

msgid "The ``template_dirs`` argument for template loaders will be removed:"
msgstr ""

msgid "``django.template.loaders.base.Loader.get_template()``"
msgstr ""

msgid "``django.template.loaders.cached.Loader.cache_key()``"
msgstr ""

msgid "``django.template.loaders.cached.Loader.get_template()``"
msgstr ""

msgid "``django.template.loaders.cached.Loader.get_template_sources()``"
msgstr ""

msgid "``django.template.loaders.filesystem.Loader.get_template_sources()``"
msgstr ""

msgid ""
"The ``django.template.loaders.base.Loader.__call__()`` method will be "
"removed."
msgstr ""

msgid ""
"Support for custom error views with a single positional parameter will be "
"dropped."
msgstr ""

msgid ""
"The ``mime_type`` attribute of ``django.utils.feedgenerator.Atom1Feed`` and "
"``django.utils.feedgenerator.RssFeed`` will be removed in favor of "
"``content_type``."
msgstr ""

msgid ""
"The ``app_name`` argument to ``django.conf.urls.include()`` will be removed."
msgstr ""

msgid ""
"Support for passing a 3-tuple as the first argument to ``include()`` will be "
"removed."
msgstr ""

msgid ""
"Support for setting a URL instance namespace without an application "
"namespace will be removed."
msgstr ""

msgid ""
"``Field._get_val_from_obj()`` will be removed in favor of ``Field."
"value_from_object()``."
msgstr ""

msgid "``django.template.loaders.eggs.Loader`` will be removed."
msgstr ""

msgid ""
"The ``current_app`` parameter to the ``contrib.auth`` views will be removed."
msgstr ""

msgid ""
"The ``callable_obj`` keyword argument to ``SimpleTestCase."
"assertRaisesMessage()`` will be removed."
msgstr ""

msgid ""
"Support for the ``allow_tags`` attribute on ``ModelAdmin`` methods will be "
"removed."
msgstr ""

msgid ""
"The ``enclosure`` keyword argument to ``SyndicationFeed.add_item()`` will be "
"removed."
msgstr ""

msgid ""
"The ``django.template.loader.LoaderOrigin`` and ``django.template.base."
"StringOrigin`` aliases for ``django.template.base.Origin`` will be removed."
msgstr ""

msgid ""
"See the :ref:`Django 1.10 release notes <deprecated-features-1.10>` for more "
"details on these changes."
msgstr ""

msgid "The ``makemigrations --exit`` option will be removed."
msgstr ""

msgid ""
"Support for direct assignment to a reverse foreign key or many-to-many "
"relation will be removed."
msgstr ""

msgid ""
"The ``get_srid()`` and ``set_srid()`` methods of ``django.contrib.gis.geos."
"GEOSGeometry`` will be removed."
msgstr ""

msgid ""
"The ``get_x()``, ``set_x()``, ``get_y()``, ``set_y()``, ``get_z()``, and "
"``set_z()`` methods of ``django.contrib.gis.geos.Point`` will be removed."
msgstr ""

msgid ""
"The ``get_coords()`` and ``set_coords()`` methods of ``django.contrib.gis."
"geos.Point`` will be removed."
msgstr ""

msgid ""
"The ``cascaded_union`` property of ``django.contrib.gis.geos.MultiPolygon`` "
"will be removed."
msgstr ""

msgid "``django.utils.functional.allow_lazy()`` will be removed."
msgstr ""

msgid "The ``shell --plain`` option will be removed."
msgstr ""

msgid "The ``django.core.urlresolvers`` module will be removed."
msgstr ""

msgid ""
"The model ``CommaSeparatedIntegerField`` will be removed. A stub field will "
"remain for compatibility with historical migrations."
msgstr ""

msgid "Support for the template ``Context.has_key()`` method will be removed."
msgstr ""

msgid ""
"Support for the ``django.core.files.storage.Storage.accessed_time()``, "
"``created_time()``, and ``modified_time()`` methods will be removed."
msgstr ""

msgid ""
"Support for query lookups using the model name when ``Meta."
"default_related_name`` is set will be removed."
msgstr ""

msgid ""
"The ``__search`` query lookup and the ``DatabaseOperations."
"fulltext_search_sql()`` method will be removed."
msgstr ""

msgid ""
"The shim for supporting custom related manager classes without a "
"``_apply_rel_filters()`` method will be removed."
msgstr ""

msgid ""
"Using ``User.is_authenticated()`` and ``User.is_anonymous()`` as methods "
"will no longer be supported."
msgstr ""

msgid ""
"The private attribute ``virtual_fields`` of ``Model._meta`` will be removed."
msgstr ""

msgid ""
"The private keyword arguments ``virtual_only`` in ``Field."
"contribute_to_class()`` and ``virtual`` in ``Model._meta.add_field()`` will "
"be removed."
msgstr ""

msgid ""
"The ``javascript_catalog()`` and ``json_catalog()`` views will be removed."
msgstr ""

msgid ""
"The ``django.contrib.gis.utils.precision_wkt()`` function will be removed."
msgstr ""

msgid ""
"In multi-table inheritance, implicit promotion of a ``OneToOneField`` to a "
"``parent_link`` will be removed."
msgstr ""

msgid "Support for ``Widget._format_value()`` will be removed."
msgstr ""

msgid ""
"``FileField`` methods ``get_directory_name()`` and ``get_filename()`` will "
"be removed."
msgstr ""

msgid ""
"The ``mark_for_escaping()`` function and the classes it uses: "
"``EscapeData``, ``EscapeBytes``, ``EscapeText``, ``EscapeString``, and "
"``EscapeUnicode`` will be removed."
msgstr ""

msgid ""
"The ``escape`` filter will change to use ``django.utils.html."
"conditional_escape()``."
msgstr ""

msgid "``Manager.use_for_related_fields`` will be removed."
msgstr ""

msgid ""
"Model ``Manager`` inheritance will follow MRO inheritance rules and the "
"``Meta.manager_inheritance_from_future`` to opt-in to this behavior will be "
"removed."
msgstr ""

msgid ""
"Support for old-style middleware using ``settings.MIDDLEWARE_CLASSES`` will "
"be removed."
msgstr ""

msgid "1.10"
msgstr ""

msgid ""
"See the :ref:`Django 1.8 release notes<deprecated-features-1.8>` for more "
"details on these changes."
msgstr ""

msgid ""
"Support for calling a ``SQLCompiler`` directly as an alias for calling its "
"``quote_name_unless_alias`` method will be removed."
msgstr ""

msgid ""
"``cycle`` and ``firstof`` template tags will be removed from the ``future`` "
"template tag library (used during the 1.6/1.7 deprecation period)."
msgstr ""

msgid "``django.conf.urls.patterns()`` will be removed."
msgstr ""

msgid ""
"Support for the ``prefix`` argument to ``django.conf.urls.i18n."
"i18n_patterns()`` will be removed."
msgstr ""

msgid "``SimpleTestCase.urls`` will be removed."
msgstr ""

msgid ""
"Using an incorrect count of unpacked values in the ``for`` template tag will "
"raise an exception rather than fail silently."
msgstr ""

msgid "The ability to reverse URLs using a dotted Python path will be removed."
msgstr ""

msgid ""
"The ability to use a dotted Python path for the ``LOGIN_URL`` and "
"``LOGIN_REDIRECT_URL`` settings will be removed."
msgstr ""

msgid ""
"Support for :py:mod:`optparse` will be dropped for custom management "
"commands (replaced by :py:mod:`argparse`)."
msgstr ""

msgid ""
"The class ``django.core.management.NoArgsCommand`` will be removed. Use :"
"class:`~django.core.management.BaseCommand` instead, which takes no "
"arguments by default."
msgstr ""

msgid "``django.core.context_processors`` module will be removed."
msgstr ""

msgid "``django.db.models.sql.aggregates`` module will be removed."
msgstr ""

msgid "``django.contrib.gis.db.models.sql.aggregates`` module will be removed."
msgstr ""

msgid ""
"The following methods and properties of ``django.db.sql.query.Query`` will "
"be removed:"
msgstr ""

msgid "Properties: ``aggregates`` and ``aggregate_select``"
msgstr ""

msgid ""
"Methods: ``add_aggregate``, ``set_aggregate_mask``, and "
"``append_aggregate_mask``."
msgstr ""

msgid "``django.template.resolve_variable`` will be removed."
msgstr ""

msgid ""
"The following private APIs will be removed from :class:`django.db.models."
"options.Options` (``Model._meta``):"
msgstr ""

msgid "``get_field_by_name()``"
msgstr ""

msgid "``get_all_field_names()``"
msgstr ""

msgid "``get_fields_with_model()``"
msgstr ""

msgid "``get_concrete_fields_with_model()``"
msgstr ""

msgid "``get_m2m_with_model()``"
msgstr ""

msgid "``get_all_related_objects()``"
msgstr ""

msgid "``get_all_related_objects_with_model()``"
msgstr ""

msgid "``get_all_related_many_to_many_objects()``"
msgstr ""

msgid "``get_all_related_m2m_objects_with_model()``"
msgstr ""

msgid ""
"The ``error_message`` argument of ``django.forms.RegexField`` will be "
"removed."
msgstr ""

msgid "The ``unordered_list`` filter will no longer support old style lists."
msgstr ""

msgid "Support for string ``view`` arguments to ``url()`` will be removed."
msgstr ""

msgid ""
"The backward compatible shim  to rename ``django.forms.Form._has_changed()`` "
"to ``has_changed()`` will be removed."
msgstr ""

msgid "The ``removetags`` template filter will be removed."
msgstr ""

msgid ""
"The ``remove_tags()`` and ``strip_entities()`` functions in ``django.utils."
"html`` will be removed."
msgstr ""

msgid ""
"The ``is_admin_site`` argument to ``django.contrib.auth.views."
"password_reset()`` will be removed."
msgstr ""

msgid "``django.db.models.field.subclassing.SubfieldBase`` will be removed."
msgstr ""

msgid ""
"``django.utils.checksums`` will be removed; its functionality is included in "
"``django-localflavor`` 1.1+."
msgstr ""

msgid ""
"The ``original_content_type_id`` attribute on ``django.contrib.admin.helpers."
"InlineAdminForm`` will be removed."
msgstr ""

msgid ""
"The backwards compatibility shim to allow ``FormMixin.get_form()`` to be "
"defined with no default value for its ``form_class`` argument will be "
"removed."
msgstr ""

msgid "The following settings will be removed:"
msgstr ""

msgid "``ALLOWED_INCLUDE_ROOTS``"
msgstr ""

msgid "``TEMPLATE_CONTEXT_PROCESSORS``"
msgstr ""

msgid "``TEMPLATE_DEBUG``"
msgstr ""

msgid "``TEMPLATE_DIRS``"
msgstr ""

msgid "``TEMPLATE_LOADERS``"
msgstr ""

msgid "``TEMPLATE_STRING_IF_INVALID``"
msgstr ""

msgid ""
"The backwards compatibility alias ``django.template.loader.BaseLoader`` will "
"be removed."
msgstr ""

msgid ""
"Django template objects returned by :func:`~django.template.loader."
"get_template` and :func:`~django.template.loader.select_template` won't "
"accept a :class:`~django.template.Context` in their :meth:`~django.template."
"backends.base.Template.render()` method anymore."
msgstr ""

msgid ""
":doc:`Template response APIs </ref/template-response>` will enforce the use "
"of :class:`dict` and backend-dependent template objects instead of :class:"
"`~django.template.Context` and :class:`~django.template.Template` "
"respectively."
msgstr ""

msgid ""
"The ``current_app`` parameter for the following function and classes will be "
"removed:"
msgstr ""

msgid "``django.shortcuts.render()``"
msgstr ""

msgid "``django.template.Context()``"
msgstr ""

msgid "``django.template.RequestContext()``"
msgstr ""

msgid "``django.template.response.TemplateResponse()``"
msgstr ""

msgid ""
"The ``dictionary`` and ``context_instance`` parameters for the following "
"functions will be removed:"
msgstr ""

msgid "``django.shortcuts.render_to_response()``"
msgstr ""

msgid "``django.template.loader.render_to_string()``"
msgstr ""

msgid "The ``dirs`` parameter for the following functions will be removed:"
msgstr ""

msgid "``django.template.loader.get_template()``"
msgstr ""

msgid "``django.template.loader.select_template()``"
msgstr ""

msgid ""
"Session verification will be enabled regardless of whether or not ``'django."
"contrib.auth.middleware.SessionAuthenticationMiddleware'`` is in "
"``MIDDLEWARE_CLASSES``."
msgstr ""

msgid "Private attribute ``django.db.models.Field.related`` will be removed."
msgstr ""

msgid ""
"The ``--list`` option of the ``migrate`` management command will be removed."
msgstr ""

msgid "The ``ssi`` template tag will be removed."
msgstr ""

msgid ""
"Support for the ``=`` comparison operator in the ``if`` template tag will be "
"removed."
msgstr ""

msgid ""
"The backwards compatibility shims to allow ``Storage.get_available_name()`` "
"and ``Storage.save()`` to be defined without a ``max_length`` argument will "
"be removed."
msgstr ""

msgid ""
"Support for the legacy ``%(<foo>)s`` syntax in ``ModelFormMixin."
"success_url`` will be removed."
msgstr ""

msgid ""
"``GeoQuerySet`` aggregate methods ``collect()``, ``extent()``, "
"``extent3d()``, ``make_line()``, and ``unionagg()`` will be removed."
msgstr ""

msgid ""
"Ability to specify ``ContentType.name`` when creating a content type "
"instance will be removed."
msgstr ""

msgid ""
"Support for the old signature of ``allow_migrate`` will be removed. It "
"changed from ``allow_migrate(self, db, model)`` to ``allow_migrate(self, db, "
"app_label, model_name=None, **hints)``."
msgstr ""

msgid ""
"Support for the syntax of ``{% cycle %}`` that uses comma-separated "
"arguments will be removed."
msgstr ""

msgid ""
"The warning that :class:`~django.core.signing.Signer` issues when given an "
"invalid separator will become an exception."
msgstr ""

msgid "1.9"
msgstr "1.9"

msgid ""
"See the :ref:`Django 1.7 release notes<deprecated-features-1.7>` for more "
"details on these changes."
msgstr ""

msgid "``django.utils.dictconfig`` will be removed."
msgstr ""

msgid "``django.utils.importlib`` will be removed."
msgstr ""

msgid "``django.utils.tzinfo`` will be removed."
msgstr ""

msgid "``django.utils.unittest`` will be removed."
msgstr ""

msgid "The ``syncdb`` command will be removed."
msgstr ""

msgid ""
"``django.db.models.signals.pre_syncdb`` and ``django.db.models.signals."
"post_syncdb`` will be removed."
msgstr ""

msgid ""
"``allow_syncdb`` on database routers will no longer automatically become "
"``allow_migrate``."
msgstr ""

msgid ""
"Automatic syncing of apps without migrations will be removed. Migrations "
"will become compulsory for all apps unless you pass the ``--run-syncdb`` "
"option to ``migrate``."
msgstr ""

msgid ""
"The SQL management commands for apps without migrations, ``sql``, "
"``sqlall``, ``sqlclear``, ``sqldropindexes``, and ``sqlindexes``, will be "
"removed."
msgstr ""

msgid ""
"Support for automatic loading of ``initial_data`` fixtures and initial SQL "
"data will be removed."
msgstr ""

msgid ""
"All models will need to be defined inside an installed application or "
"declare an explicit :attr:`~django.db.models.Options.app_label`. "
"Furthermore, it won't be possible to import them before their application is "
"loaded. In particular, it won't be possible to import models inside the root "
"package of their application."
msgstr ""

msgid ""
"The model and form ``IPAddressField`` will be removed. A stub field will "
"remain for compatibility with historical migrations."
msgstr ""

msgid "``AppCommand.handle_app()`` will no longer be supported."
msgstr ""

msgid ""
"``RequestSite`` and ``get_current_site()`` will no longer be importable from "
"``django.contrib.sites.models``."
msgstr ""

msgid ""
"FastCGI support via the ``runfcgi`` management command will be removed. "
"Please deploy your project using WSGI."
msgstr ""

msgid ""
"``django.utils.datastructures.SortedDict`` will be removed. Use :class:"
"`collections.OrderedDict` from the Python standard library instead."
msgstr ""

msgid "``ModelAdmin.declared_fieldsets`` will be removed."
msgstr ""

msgid ""
"Instances of ``util.py`` in the Django codebase have been renamed to ``utils."
"py`` in an effort to unify all util and utils references. The modules that "
"provided backwards compatibility will be removed:"
msgstr ""

msgid "``django.contrib.admin.util``"
msgstr ""

msgid "``django.contrib.gis.db.backends.util``"
msgstr ""

msgid "``django.db.backends.util``"
msgstr ""

msgid "``django.forms.util``"
msgstr ""

msgid "``ModelAdmin.get_formsets`` will be removed."
msgstr ""

msgid ""
"The backward compatibility shim introduced to rename the "
"``BaseMemcachedCache._get_memcache_timeout()`` method to "
"``get_backend_timeout()`` will be removed."
msgstr ""

msgid ""
"The ``--natural`` and ``-n`` options for :djadmin:`dumpdata` will be removed."
msgstr ""

msgid ""
"The ``use_natural_keys`` argument for ``serializers.serialize()`` will be "
"removed."
msgstr ""

msgid ""
"Private API ``django.forms.forms.get_declared_fields()`` will be removed."
msgstr ""

msgid ""
"The ability to use a ``SplitDateTimeWidget`` with ``DateTimeField`` will be "
"removed."
msgstr ""

msgid "The ``WSGIRequest.REQUEST`` property will be removed."
msgstr ""

msgid "The class ``django.utils.datastructures.MergeDict`` will be removed."
msgstr ""

msgid ""
"The ``zh-cn`` and ``zh-tw`` language codes will be removed and have been "
"replaced by the ``zh-hans`` and ``zh-hant`` language code respectively."
msgstr ""

msgid "The internal ``django.utils.functional.memoize`` will be removed."
msgstr ""

msgid ""
"``django.core.cache.get_cache`` will be removed. Add suitable entries to :"
"setting:`CACHES` and use :data:`django.core.cache.caches` instead."
msgstr ""

msgid "``django.db.models.loading`` will be removed."
msgstr ""

msgid "Passing callable arguments to querysets will no longer be possible."
msgstr ""

msgid ""
"``BaseCommand.requires_model_validation`` will be removed in favor of "
"``requires_system_checks``. Admin validators will be replaced by admin "
"checks."
msgstr ""

msgid ""
"The ``ModelAdmin.validator_class`` and ``default_validator_class`` "
"attributes will be removed."
msgstr ""

msgid "``ModelAdmin.validate()`` will be removed."
msgstr ""

msgid ""
"``django.db.backends.DatabaseValidation.validate_field`` will be removed in "
"favor of the ``check_field`` method."
msgstr ""

msgid "The ``validate`` management command will be removed."
msgstr ""

msgid ""
"``django.utils.module_loading.import_by_path`` will be removed in favor of "
"``django.utils.module_loading.import_string``."
msgstr ""

msgid ""
"``ssi`` and ``url`` template tags will be removed from the ``future`` "
"template tag library (used during the 1.3/1.4 deprecation period)."
msgstr ""

msgid "``django.utils.text.javascript_quote`` will be removed."
msgstr ""

msgid ""
"Database test settings as independent entries in the database settings, "
"prefixed by ``TEST_``, will no longer be supported."
msgstr ""

msgid ""
"The ``cache_choices`` option to :class:`~django.forms.ModelChoiceField` and :"
"class:`~django.forms.ModelMultipleChoiceField` will be removed."
msgstr ""

msgid ""
"The default value of the :attr:`RedirectView.permanent <django.views.generic."
"base.RedirectView.permanent>` attribute will change from ``True`` to "
"``False``."
msgstr ""

msgid ""
"``django.contrib.sitemaps.FlatPageSitemap`` will be removed in favor of "
"``django.contrib.flatpages.sitemaps.FlatPageSitemap``."
msgstr ""

msgid "Private API ``django.test.utils.TestTemplateLoader`` will be removed."
msgstr ""

msgid "The ``django.contrib.contenttypes.generic`` module will be removed."
msgstr ""

msgid ""
"Private APIs ``django.db.models.sql.where.WhereNode.make_atom()`` and "
"``django.db.models.sql.where.Constraint`` will be removed."
msgstr ""

msgid "1.8"
msgstr "1.8"

msgid ""
"See the :ref:`Django 1.6 release notes<deprecated-features-1.6>` for more "
"details on these changes."
msgstr ""

msgid "``django.contrib.comments`` will be removed."
msgstr ""

msgid "The following transaction management APIs will be removed:"
msgstr ""

msgid "``TransactionMiddleware``,"
msgstr ""

msgid ""
"the decorators and context managers ``autocommit``, ``commit_on_success``, "
"and ``commit_manually``, defined in ``django.db.transaction``,"
msgstr ""

msgid ""
"the functions ``commit_unless_managed`` and ``rollback_unless_managed``, "
"also defined in ``django.db.transaction``,"
msgstr ""

msgid "the ``TRANSACTIONS_MANAGED`` setting."
msgstr ""

msgid ""
"The :ttag:`cycle` and :ttag:`firstof` template tags will auto-escape their "
"arguments. In 1.6 and 1.7, this behavior is provided by the version of these "
"tags in the ``future`` template tag library."
msgstr ""

msgid ""
"The ``SEND_BROKEN_LINK_EMAILS`` setting will be removed. Add the :class:"
"`django.middleware.common.BrokenLinkEmailsMiddleware` middleware to your "
"``MIDDLEWARE_CLASSES`` setting instead."
msgstr ""

msgid ""
"``django.middleware.doc.XViewMiddleware`` will be removed. Use ``django."
"contrib.admindocs.middleware.XViewMiddleware`` instead."
msgstr ""

msgid "``Model._meta.module_name`` was renamed to ``model_name``."
msgstr ""

msgid ""
"Remove the backward compatible shims introduced to rename ``get_query_set`` "
"and similar queryset methods. This affects the following classes: "
"``BaseModelAdmin``, ``ChangeList``, ``BaseCommentNode``, "
"``GenericForeignKey``, ``Manager``, ``SingleRelatedObjectDescriptor`` and "
"``ReverseSingleRelatedObjectDescriptor``."
msgstr ""

msgid ""
"Remove the backward compatible shims introduced to rename the attributes "
"``ChangeList.root_query_set`` and ``ChangeList.query_set``."
msgstr ""

msgid ""
"``django.views.defaults.shortcut`` will be removed, as part of the goal of "
"removing all ``django.contrib`` references from the core Django codebase. "
"Instead use ``django.contrib.contenttypes.views.shortcut``. ``django.conf."
"urls.shortcut`` will also be removed."
msgstr ""

msgid ""
"Support for the Python Imaging Library (PIL) module will be removed, as it "
"no longer appears to be actively maintained & does not work on Python 3."
msgstr ""

msgid "The following private APIs will be removed:"
msgstr ""

msgid "``django.db.backend``"
msgstr ""

msgid "``django.db.close_connection()``"
msgstr ""

msgid "``django.db.backends.creation.BaseDatabaseCreation.set_autocommit()``"
msgstr ""

msgid "``django.db.transaction.is_managed()``"
msgstr ""

msgid "``django.db.transaction.managed()``"
msgstr ""

msgid ""
"``django.forms.widgets.RadioInput`` will be removed in favor of ``django."
"forms.widgets.RadioChoiceInput``."
msgstr ""

msgid ""
"The module ``django.test.simple`` and the class ``django.test.simple."
"DjangoTestSuiteRunner`` will be removed. Instead use ``django.test.runner."
"DiscoverRunner``."
msgstr ""

msgid ""
"The module ``django.test._doctest`` will be removed. Instead use the doctest "
"module from the Python standard library."
msgstr ""

msgid "The ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY`` setting will be removed."
msgstr ""

msgid ""
"Usage of the hard-coded *Hold down \"Control\", or \"Command\" on a Mac, to "
"select more than one.* string to override or append to user-provided "
"``help_text`` in forms for ManyToMany model fields will not be performed by "
"Django anymore either at the model or forms layer."
msgstr ""

msgid ""
"The ``Model._meta.get_(add|change|delete)_permission`` methods will be "
"removed."
msgstr ""

msgid ""
"The session key ``django_language`` will no longer be read for backwards "
"compatibility."
msgstr ""

msgid ""
"Geographic Sitemaps will be removed (``django.contrib.gis.sitemaps.views."
"index`` and ``django.contrib.gis.sitemaps.views.sitemap``)."
msgstr ""

msgid ""
"``django.utils.html.fix_ampersands``, the ``fix_ampersands`` template filter "
"and ``django.utils.html.clean_html`` will be removed following an "
"accelerated deprecation."
msgstr ""

msgid "1.7"
msgstr ""

msgid ""
"See the :ref:`Django 1.5 release notes<deprecated-features-1.5>` for more "
"details on these changes."
msgstr ""

msgid ""
"The module ``django.utils.simplejson`` will be removed. The standard library "
"provides :mod:`json` which should be used instead."
msgstr ""

msgid ""
"The function ``django.utils.itercompat.product`` will be removed. The Python "
"builtin version should be used instead."
msgstr ""

msgid ""
"Auto-correction of INSTALLED_APPS and TEMPLATE_DIRS settings when they are "
"specified as a plain string instead of a tuple will be removed and raise an "
"exception."
msgstr ""

msgid ""
"The ``mimetype`` argument to the ``__init__`` methods of :class:`~django."
"http.HttpResponse`, :class:`~django.template.response."
"SimpleTemplateResponse`, and :class:`~django.template.response."
"TemplateResponse`, will be removed. ``content_type`` should be used instead. "
"This also applies to the ``render_to_response()`` shortcut and the sitemap "
"views, :func:`~django.contrib.sitemaps.views.index` and :func:`~django."
"contrib.sitemaps.views.sitemap`."
msgstr ""

msgid ""
"When :class:`~django.http.HttpResponse` is instantiated with an iterator, or "
"when :attr:`~django.http.HttpResponse.content` is set to an iterator, that "
"iterator will be immediately consumed."
msgstr ""

msgid ""
"The ``AUTH_PROFILE_MODULE`` setting, and the ``get_profile()`` method on the "
"User model, will be removed."
msgstr ""

msgid ""
"The ``cleanup`` management command will be removed. It's replaced by "
"``clearsessions``."
msgstr ""

msgid "The ``daily_cleanup.py`` script will be removed."
msgstr ""

msgid ""
"The ``depth`` keyword argument will be removed from :meth:`~django.db.models."
"query.QuerySet.select_related`."
msgstr ""

msgid ""
"The undocumented ``get_warnings_state()``/``restore_warnings_state()`` "
"functions from :mod:`django.test.utils` and the ``save_warnings_state()``/ "
"``restore_warnings_state()`` :ref:`django.test.*TestCase <django-testcase-"
"subclasses>` methods are deprecated. Use the :class:`warnings."
"catch_warnings` context manager available starting with Python 2.6 instead."
msgstr ""

msgid ""
"The undocumented ``check_for_test_cookie`` method in :class:`~django.contrib."
"auth.forms.AuthenticationForm` will be removed following an accelerated "
"deprecation. Users subclassing this form should remove calls to this method, "
"and instead ensure that their auth related views are CSRF protected, which "
"ensures that cookies are enabled."
msgstr ""

msgid ""
"The version of ``django.contrib.auth.views.password_reset_confirm()`` that "
"supports base36 encoded user IDs (``django.contrib.auth.views."
"password_reset_confirm_uidb36``) will be removed. If your site has been "
"running Django 1.6 for more than ``PASSWORD_RESET_TIMEOUT_DAYS``, this "
"change will have no effect. If not, then any password reset links generated "
"before you upgrade to Django 1.7 won't work after the upgrade."
msgstr ""

msgid "The ``django.utils.encoding.StrAndUnicode`` mix-in will be removed."
msgstr ""

msgid "1.6"
msgstr ""

msgid ""
"See the :ref:`Django 1.4 release notes<deprecated-features-1.4>` for more "
"details on these changes."
msgstr ""

msgid "``django.contrib.databrowse`` will be removed."
msgstr ""

msgid ""
"``django.contrib.localflavor`` will be removed following an accelerated "
"deprecation."
msgstr ""

msgid ""
"``django.contrib.markup`` will be removed following an accelerated "
"deprecation."
msgstr ""

msgid ""
"The compatibility modules ``django.utils.copycompat`` and ``django.utils."
"hashcompat`` as well as the functions ``django.utils.itercompat.all`` and "
"``django.utils.itercompat.any`` will be removed. The Python builtin versions "
"should be used instead."
msgstr ""

msgid ""
"The ``csrf_response_exempt`` and ``csrf_view_exempt`` decorators will be "
"removed. Since 1.4 ``csrf_response_exempt`` has been a no-op (it returns the "
"same function), and ``csrf_view_exempt`` has been a synonym for ``django."
"views.decorators.csrf.csrf_exempt``, which should be used to replace it."
msgstr ""

msgid ""
"The ``django.core.cache.backends.memcached.CacheClass`` backend was split "
"into two in Django 1.3 in order to introduce support for PyLibMC. The "
"historical ``CacheClass`` will be removed in favor of ``django.core.cache."
"backends.memcached.MemcachedCache``."
msgstr ""

msgid ""
"The UK-prefixed objects of ``django.contrib.localflavor.uk`` will only be "
"accessible through their GB-prefixed names (GB is the correct ISO 3166 code "
"for United Kingdom)."
msgstr ""

msgid ""
"The ``IGNORABLE_404_STARTS`` and ``IGNORABLE_404_ENDS`` settings have been "
"superseded by :setting:`IGNORABLE_404_URLS` in the 1.4 release. They will be "
"removed."
msgstr ""

msgid ""
"The form wizard has been refactored to use class-based views with pluggable "
"backends in 1.4. The previous implementation will be removed."
msgstr ""

msgid ""
"Legacy ways of calling :func:`~django.views.decorators.cache.cache_page` "
"will be removed."
msgstr ""

msgid ""
"The backward-compatibility shim to automatically add a debug-false filter to "
"the ``'mail_admins'`` logging handler will be removed. The :setting:"
"`LOGGING` setting should include this filter explicitly if it is desired."
msgstr ""

msgid ""
"The builtin truncation functions ``django.utils.text.truncate_words()`` and "
"``django.utils.text.truncate_html_words()`` will be removed in favor of the "
"``django.utils.text.Truncator`` class."
msgstr ""

msgid ""
"The ``django.contrib.gis.geoip.GeoIP`` class was moved to ``django.contrib."
"gis.geoip`` in 1.4 -- the shortcut in ``django.contrib.gis.utils`` will be "
"removed."
msgstr ""

msgid ""
"``django.conf.urls.defaults`` will be removed. The functions ``include()``, "
"``patterns()``, and ``url()``, plus :data:`~django.conf.urls.handler404` "
"and :data:`~django.conf.urls.handler500` are now available through ``django."
"conf.urls``."
msgstr ""

msgid ""
"The functions ``setup_environ()`` and ``execute_manager()`` will be removed "
"from :mod:`django.core.management`. This also means that the old (pre-1.4) "
"style of :file:`manage.py` file will no longer work."
msgstr ""

msgid ""
"Setting the ``is_safe`` and ``needs_autoescape`` flags as attributes of "
"template filter functions will no longer be supported."
msgstr ""

msgid ""
"The attribute ``HttpRequest.raw_post_data`` was renamed to ``HttpRequest."
"body`` in 1.4. The backward compatibility will be removed -- ``HttpRequest."
"raw_post_data`` will no longer work."
msgstr ""

msgid ""
"The value for the ``post_url_continue`` parameter in ``ModelAdmin."
"response_add()`` will have to be either ``None`` (to redirect to the newly "
"created object's edit page) or a pre-formatted url. String formats, such as "
"the previous default ``'../%s/'``, will not be accepted any more."
msgstr ""

msgid "1.5"
msgstr "1.5"

msgid ""
"See the :ref:`Django 1.3 release notes<deprecated-features-1.3>` for more "
"details on these changes."
msgstr ""

msgid ""
"Starting Django without a :setting:`SECRET_KEY` will result in an exception "
"rather than a ``DeprecationWarning``. (This is accelerated from the usual "
"deprecation path; see the :doc:`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

msgid ""
"The ``mod_python`` request handler will be removed. The ``mod_wsgi`` handler "
"should be used instead."
msgstr ""

msgid ""
"The ``template`` attribute on ``django.test.client.Response`` objects "
"returned by the :ref:`test client <test-client>` will be removed. The :attr:"
"`~django.test.Response.templates` attribute should be used instead."
msgstr ""

msgid ""
"The ``django.test.simple.DjangoTestRunner`` will be removed. Instead use a "
"``unittest``-native class. The features of the ``django.test.simple."
"DjangoTestRunner`` (including fail-fast and Ctrl-C test termination) can be "
"provided by :class:`unittest.TextTestRunner`."
msgstr ""

msgid ""
"The undocumented function ``django.contrib.formtools.utils.security_hash`` "
"will be removed, instead use ``django.contrib.formtools.utils.form_hmac``"
msgstr ""

msgid ""
"The function-based generic view modules will be removed in favor of their "
"class-based equivalents, outlined :doc:`here </topics/class-based-views/"
"index>`."
msgstr ""

msgid ""
"The ``django.core.servers.basehttp.AdminMediaHandler`` will be removed.  In "
"its place use ``django.contrib.staticfiles.handlers.StaticFilesHandler``."
msgstr ""

msgid ""
"The template tags library ``adminmedia`` and the template tag ``{% "
"admin_media_prefix %}`` will be removed in favor of the generic static files "
"handling. (This is faster than the usual deprecation path; see the :doc:"
"`Django 1.4 release notes</releases/1.4>`.)"
msgstr ""

msgid ""
"The ``url`` and ``ssi`` template tags will be modified so that the first "
"argument to each tag is a template variable, not an implied string. In 1.4, "
"this behavior is provided by a version of the tag in the ``future`` template "
"tag library."
msgstr ""

msgid "The ``reset`` and ``sqlreset`` management commands will be removed."
msgstr ""

msgid ""
"Authentication backends will need to support an inactive user being passed "
"to all methods dealing with permissions. The ``supports_inactive_user`` "
"attribute will no longer be checked and can be removed from custom backends."
msgstr ""

msgid ""
":meth:`~django.contrib.gis.geos.GEOSGeometry.transform` will raise a :class:"
"`~django.contrib.gis.geos.GEOSException` when called on a geometry with no "
"SRID value."
msgstr ""

msgid ""
"``django.http.CompatCookie`` will be removed in favor of ``django.http."
"SimpleCookie``."
msgstr ""

msgid ""
"``django.core.context_processors.PermWrapper`` and ``django.core."
"context_processors.PermLookupDict`` will be removed in favor of the "
"corresponding ``django.contrib.auth.context_processors.PermWrapper`` and "
"``django.contrib.auth.context_processors.PermLookupDict``, respectively."
msgstr ""

msgid ""
"The :setting:`MEDIA_URL` or :setting:`STATIC_URL` settings will be required "
"to end with a trailing slash to ensure there is a consistent way to combine "
"paths in templates."
msgstr ""

msgid ""
"``django.db.models.fields.URLField.verify_exists`` will be removed. The "
"feature was deprecated in 1.3.1 due to intractable security and performance "
"issues and will follow a slightly accelerated deprecation timeframe."
msgstr ""

msgid ""
"Translations located under the so-called *project path* will be ignored "
"during the translation building process performed at runtime. The :setting:"
"`LOCALE_PATHS` setting can be used for the same task by including the "
"filesystem path to a ``locale`` directory containing non-app-specific "
"translations in its value."
msgstr ""

msgid ""
"The Markup contrib app will no longer support versions of Python-Markdown "
"library earlier than 2.1. An accelerated timeline was used as this was a "
"security related deprecation."
msgstr ""

msgid ""
"The ``CACHE_BACKEND`` setting will be removed. The cache backend(s) should "
"be specified in the :setting:`CACHES` setting."
msgstr ""

msgid "1.4"
msgstr "1.4"

msgid ""
"See the :ref:`Django 1.2 release notes<deprecated-features-1.2>` for more "
"details on these changes."
msgstr ""

msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` will be removed.  Use the "
"``{% csrf_token %}`` template tag inside forms to enable CSRF protection. "
"``CsrfViewMiddleware`` remains and is enabled by default."
msgstr ""

msgid ""
"The old imports for CSRF functionality (``django.contrib.csrf.*``), which "
"moved to core in 1.2, will be removed."
msgstr ""

msgid ""
"The ``django.contrib.gis.db.backend`` module will be removed in favor of the "
"specific backends."
msgstr ""

msgid ""
"``SMTPConnection`` will be removed in favor of a generic email backend API."
msgstr ""

msgid ""
"The many to many SQL generation functions on the database backends will be "
"removed."
msgstr ""

msgid ""
"The ability to use the ``DATABASE_*`` family of top-level settings to define "
"database connections will be removed."
msgstr ""

msgid ""
"The ability to use shorthand notation to specify a database backend (i.e., "
"``sqlite3`` instead of ``django.db.backends.sqlite3``) will be removed."
msgstr ""

msgid ""
"The ``get_db_prep_save``, ``get_db_prep_value`` and ``get_db_prep_lookup`` "
"methods will have to support multiple databases."
msgstr ""

msgid ""
"The ``Message`` model (in ``django.contrib.auth``), its related manager in "
"the ``User`` model (``user.message_set``), and the associated methods "
"(``user.message_set.create()`` and ``user.get_and_delete_messages()``), will "
"be removed.  The :doc:`messages framework </ref/contrib/messages>` should be "
"used instead. The related ``messages`` variable returned by the auth context "
"processor will also be removed. Note that this means that the admin "
"application will depend on the messages context processor."
msgstr ""

msgid ""
"Authentication backends will need to support the ``obj`` parameter for "
"permission checking. The ``supports_object_permissions`` attribute will no "
"longer be checked and can be removed from custom backends."
msgstr ""

msgid ""
"Authentication backends will need to support the ``AnonymousUser`` class "
"being passed to all methods dealing with permissions.  The "
"``supports_anonymous_user`` variable will no longer be checked and can be "
"removed from custom backends."
msgstr ""

msgid ""
"The ability to specify a callable template loader rather than a ``Loader`` "
"class will be removed, as will the ``load_template_source`` functions that "
"are included with the built in template loaders for backwards compatibility."
msgstr ""

msgid ""
"``django.utils.translation.get_date_formats()`` and ``django.utils."
"translation.get_partial_date_formats()``. These functions will be removed; "
"use the locale-aware ``django.utils.formats.get_format()`` to get the "
"appropriate formats."
msgstr ""

msgid ""
"In ``django.forms.fields``, the constants: ``DEFAULT_DATE_INPUT_FORMATS``, "
"``DEFAULT_TIME_INPUT_FORMATS`` and ``DEFAULT_DATETIME_INPUT_FORMATS`` will "
"be removed. Use ``django.utils.formats.get_format()`` to get the appropriate "
"formats."
msgstr ""

msgid ""
"The ability to use a function-based test runner will be removed, along with "
"the ``django.test.simple.run_tests()`` test runner."
msgstr ""

msgid ""
"The ``views.feed()`` view and ``feeds.Feed`` class in ``django.contrib."
"syndication`` will be removed. The class-based view ``views.Feed`` should be "
"used instead."
msgstr ""

msgid ""
"``django.core.context_processors.auth``.  This release will remove the old "
"method in favor of the new method in ``django.contrib.auth."
"context_processors.auth``."
msgstr ""

msgid ""
"The ``postgresql`` database backend will be removed, use the "
"``postgresql_psycopg2`` backend instead."
msgstr ""

msgid ""
"The ``no`` language code will be removed and has been replaced by the ``nb`` "
"language code."
msgstr ""

msgid ""
"Authentication backends will need to define the boolean attribute "
"``supports_inactive_user`` until version 1.5 when it will be assumed that "
"all backends will handle inactive users."
msgstr ""

msgid ""
"``django.db.models.fields.XMLField`` will be removed. This was deprecated as "
"part of the 1.3 release. An accelerated deprecation schedule has been used "
"because the field hasn't performed any role beyond that of a simple "
"``TextField`` since the removal of ``oldforms``. All uses of ``XMLField`` "
"can be replaced with ``TextField``."
msgstr ""

msgid ""
"The undocumented ``mixin`` parameter to the ``open()`` method of ``django."
"core.files.storage.Storage`` (and subclasses) will be removed."
msgstr ""

msgid "1.3"
msgstr "1.3"

msgid ""
"See the :ref:`Django 1.1 release notes<deprecated-features-1.1>` for more "
"details on these changes."
msgstr ""

msgid ""
"``AdminSite.root()``.  This method of hooking up the admin URLs will be "
"removed in favor of including ``admin.site.urls``."
msgstr ""

msgid ""
"Authentication backends need to define the boolean attributes "
"``supports_object_permissions`` and ``supports_anonymous_user`` until "
"version 1.4, at which point it will be assumed that all backends will "
"support these options."
msgstr ""

msgid "The Django source code repository"
msgstr ""

msgid ""
"When deploying a Django application into a real production environment, you "
"will almost always want to use `an official packaged release of Django`_."
msgstr ""

msgid ""
"However, if you'd like to try out in-development code from an upcoming "
"release or contribute to the development of Django, you'll need to obtain a "
"clone of Django's source code repository."
msgstr ""

msgid ""
"This document covers the way the code repository is laid out and how to work "
"with and find things in it."
msgstr ""

msgid "High-level overview"
msgstr ""

msgid ""
"The Django source code repository uses `Git`_ to track changes to the code "
"over time, so you'll need a copy of the Git client (a program called "
"``git``) on your computer, and you'll want to familiarize yourself with the "
"basics of how Git works."
msgstr ""

msgid ""
"Git's website offers downloads for various operating systems. The site also "
"contains vast amounts of `documentation`_."
msgstr ""

msgid ""
"The Django Git repository is located online at `github.com/django/django "
"<https://github.com/django/django>`_. It contains the full source code for "
"all Django releases, which you can browse online."
msgstr ""

msgid "The Git repository includes several `branches`_:"
msgstr ""

msgid ""
"``main`` contains the main in-development code which will become the next "
"packaged release of Django. This is where most development activity is "
"focused."
msgstr ""

msgid ""
"``stable/A.B.x`` are the branches where release preparation work happens. "
"They are also used for bugfix and security releases which occur as necessary "
"after the initial release of a feature version."
msgstr ""

msgid ""
"The Git repository also contains `tags`_. These are the exact revisions from "
"which packaged Django releases were produced, since version 1.0."
msgstr ""

msgid ""
"A number of tags also exist under the ``archive/`` prefix for :ref:`archived "
"work<archived-feature-development-work>`."
msgstr ""

msgid ""
"The source code for the `Djangoproject.com <https://www.djangoproject.com/"
">`_ website can be found at `github.com/django/djangoproject.com <https://"
"github.com/django/djangoproject.com>`_."
msgstr ""

msgid "The main branch"
msgstr ""

msgid ""
"If you'd like to try out the in-development code for the next release of "
"Django, or if you'd like to contribute to Django by fixing bugs or "
"developing new features, you'll want to get the code from the main branch."
msgstr ""

msgid "Prior to March 2021, the main branch was called ``master``."
msgstr ""

msgid ""
"Note that this will get *all* of Django: in addition to the top-level "
"``django`` module containing Python code, you'll also get a copy of Django's "
"documentation, test suite, packaging scripts and other miscellaneous bits. "
"Django's code will be present in your clone as a directory named ``django``."
msgstr ""

msgid ""
"To try out the in-development code with your own applications, place the "
"directory containing your clone on your Python import path. Then ``import`` "
"statements which look for Django will find the ``django`` module within your "
"clone."
msgstr ""

msgid ""
"If you're going to be working on Django's code (say, to fix a bug or develop "
"a new feature), you can probably stop reading here and move over to :doc:"
"`the documentation for contributing to Django </internals/contributing/"
"index>`, which covers things like the preferred coding style and how to "
"generate and submit a patch."
msgstr ""

msgid "Stable branches"
msgstr ""

msgid ""
"Django uses branches to prepare for releases of Django. Each major release "
"series has its own stable branch."
msgstr ""

msgid ""
"These branches can be found in the repository as ``stable/A.B.x`` branches "
"and will be created right after the first alpha is tagged."
msgstr ""

msgid ""
"For example, immediately after *Django 1.5 alpha 1* was tagged, the branch "
"``stable/1.5.x`` was created and all further work on preparing the code for "
"the final 1.5 release was done there."
msgstr ""

msgid ""
"These branches also provide bugfix and security support as described in :ref:"
"`supported-versions-policy`."
msgstr ""

msgid ""
"For example, after the release of Django 1.5, the branch ``stable/1.5.x`` "
"receives only fixes for security and critical stability bugs, which are "
"eventually released as Django 1.5.1 and so on, ``stable/1.4.x`` receives "
"only security and data loss fixes, and ``stable/1.3.x`` no longer receives "
"any updates."
msgstr ""

msgid "Historical information"
msgstr ""

msgid ""
"This policy for handling ``stable/A.B.x`` branches was adopted starting with "
"the Django 1.5 release cycle."
msgstr ""

msgid ""
"Previously, these branches weren't created until right after the releases "
"and the stabilization work occurred on the main repository branch. Thus, no "
"new feature development work for the next release of Django could be "
"committed until the final release happened."
msgstr ""

msgid ""
"For example, shortly after the release of Django 1.3 the branch ``stable/1.3."
"x`` was created. Official support for that release has expired, and so it no "
"longer receives direct maintenance from the Django project. However, that "
"and all other similarly named branches continue to exist, and interested "
"community members have occasionally used them to provide unofficial support "
"for old Django releases."
msgstr ""

msgid "Tags"
msgstr "Etiquetas"

msgid "Each Django release is tagged and signed by the releaser."
msgstr ""

msgid "The tags can be found on GitHub's `tags`_ page."
msgstr ""

msgid "Archived feature-development work"
msgstr ""

msgid ""
"Since Django moved to Git in 2012, anyone can clone the repository and "
"create their own branches, alleviating the need for official branches in the "
"source code repository."
msgstr ""

msgid ""
"The following section is mostly useful if you're exploring the repository's "
"history, for example if you're trying to understand how some features were "
"designed."
msgstr ""

msgid ""
"Feature-development branches tend by their nature to be temporary. Some "
"produce successful features which are merged back into Django's main branch "
"to become part of an official release, but others do not; in either case, "
"there comes a time when the branch is no longer being actively worked on by "
"any developer. At this point the branch is considered closed."
msgstr ""

msgid ""
"Django used to be maintained with the Subversion revision control system, "
"that has no standard way of indicating this. As a workaround, branches of "
"Django which are closed and no longer maintained were moved into ``attic``."
msgstr ""

msgid ""
"A number of tags exist under the ``archive/`` prefix to maintain a reference "
"to this and other work of historical interest."
msgstr ""

msgid ""
"The following tags under the ``archive/attic/`` prefix reference the tip of "
"branches whose code eventually became part of Django itself:"
msgstr ""

msgid ""
"``boulder-oracle-sprint``: Added support for Oracle databases to Django's "
"object-relational mapper. This has been part of Django since the 1.0 release."
msgstr ""

msgid ""
"``gis``: Added support for geographic/spatial queries to Django's object-"
"relational mapper. This has been part of Django since the 1.0 release, as "
"the bundled application ``django.contrib.gis``."
msgstr ""

msgid ""
"``i18n``: Added :doc:`internationalization support </topics/i18n/index>` to "
"Django. This has been part of Django since the 0.90 release."
msgstr ""

msgid ""
"``magic-removal``: A major refactoring of both the internals and public APIs "
"of Django's object-relational mapper. This has been part of Django since the "
"0.95 release."
msgstr ""

msgid ""
"``multi-auth``: A refactoring of :doc:`Django's bundled authentication "
"framework </topics/auth/index>` which added support for :ref:`authentication "
"backends <authentication-backends>`. This has been part of Django since the "
"0.95 release."
msgstr ""

msgid ""
"``new-admin``: A refactoring of :doc:`Django's bundled administrative "
"application </ref/contrib/admin/index>`. This became part of Django as of "
"the 0.91 release, but was superseded by another refactoring (see next "
"listing) prior to the Django 1.0 release."
msgstr ""

msgid ""
"``newforms-admin``: The second refactoring of Django's bundled "
"administrative application. This became part of Django as of the 1.0 "
"release, and is the basis of the current incarnation of ``django.contrib."
"admin``."
msgstr ""

msgid ""
"``queryset-refactor``: A refactoring of the internals of Django's object-"
"relational mapper. This became part of Django as of the 1.0 release."
msgstr ""

msgid ""
"``unicode``: A refactoring of Django's internals to consistently use Unicode-"
"based strings in most places within Django and Django applications. This "
"became part of Django as of the 1.0 release."
msgstr ""

msgid ""
"Additionally, the following tags under the ``archive/attic/`` prefix "
"reference the tips of branches that were closed, but whose code was never "
"merged into Django, and the features they aimed to implement were never "
"finished:"
msgstr ""

msgid "``full-history``"
msgstr ""

msgid "``generic-auth``"
msgstr ""

msgid "``multiple-db-support``"
msgstr ""

msgid "``per-object-permissions``"
msgstr ""

msgid "``schema-evolution``"
msgstr ""

msgid "``schema-evolution-ng``"
msgstr ""

msgid "``search-api``"
msgstr ""

msgid "``sqlalchemy``"
msgstr ""

msgid ""
"Finally, under the ``archive/`` prefix, the repository contains ``soc20XX/"
"<project>`` tags referencing the tip of branches that were used by students "
"who worked on Django during the 2009 and 2010 Google Summer of Code programs."
msgstr ""

msgid "How is Django Formed?"
msgstr ""

msgid "This document explains how to release Django."
msgstr ""

msgid ""
"**Please, keep these instructions up-to-date if you make changes!** The "
"point here is to be descriptive, not prescriptive, so feel free to "
"streamline or otherwise make changes, but **update this document accordingly!"
"**"
msgstr ""

msgid "Overview"
msgstr "Información general"

msgid "There are three types of releases that you might need to make:"
msgstr ""

msgid ""
"Security releases: disclosing and fixing a vulnerability. This'll generally "
"involve two or three simultaneous releases -- e.g. 3.2.x, 4.0.x, and, "
"depending on timing, perhaps a 4.1.x."
msgstr ""

msgid ""
"Regular version releases: either a final release (e.g. 4.1) or a bugfix "
"update (e.g. 4.1.1)."
msgstr ""

msgid "Pre-releases: e.g. 4.2 alpha, beta, or rc."
msgstr ""

msgid "The short version of the steps involved is:"
msgstr ""

msgid ""
"If this is a security release, pre-notify the security distribution list one "
"week before the actual release."
msgstr ""

msgid ""
"Proofread the release notes, looking for organization and writing errors. "
"Draft a blog post and email announcement."
msgstr ""

msgid "Update version numbers and create the release package(s)."
msgstr ""

msgid "Upload the package(s) to the ``djangoproject.com`` server."
msgstr ""

msgid "Upload the new version(s) to PyPI."
msgstr ""

msgid "Declare the new version in the admin on ``djangoproject.com``."
msgstr ""

msgid "Post the blog entry and send out the email announcements."
msgstr ""

msgid "Update version numbers post-release."
msgstr ""

msgid "There are a lot of details, so please read on."
msgstr ""

msgid "Prerequisites"
msgstr ""

msgid "You'll need a few things before getting started:"
msgstr ""

msgid ""
"A GPG key. If the key you want to use is not your default signing key, "
"you'll need to add ``-u you@example.com`` to every GPG signing command "
"below, where ``you@example.com`` is the email address associated with the "
"key you want to use."
msgstr ""

msgid "An install of some required Python packages:"
msgstr ""

msgid "Access to Django's record on PyPI. Create a file with your credentials:"
msgstr ""

msgid "``~/.pypirc``"
msgstr ""

msgid "Access to the ``djangoproject.com`` server to upload files."
msgstr ""

msgid "Access to the admin on ``djangoproject.com`` as a \"Site maintainer\"."
msgstr ""

msgid "Access to post to ``django-announce``."
msgstr ""

msgid ""
"If this is a security release, access to the pre-notification distribution "
"list."
msgstr ""

msgid ""
"If this is your first release, you'll need to coordinate with another "
"releaser to get all these things lined up."
msgstr ""

msgid "Pre-release tasks"
msgstr ""

msgid ""
"A few items need to be taken care of before even beginning the release "
"process. This stuff starts about a week before the release; most of it can "
"be done any time leading up to the actual release:"
msgstr ""

msgid ""
"If this is a security release, send out pre-notification **one week** before "
"the release. The template for that email and a list of the recipients are in "
"the private ``django-security`` GitHub wiki. BCC the pre-notification "
"recipients. Sign the email with the key you'll use for the release and "
"include `CVE IDs <https://cveform.mitre.org/>`_ (requested with Vendor: "
"djangoproject, Product: django) and patches for each issue being fixed. "
"Also, :ref:`notify django-announce <security-disclosure>` of the upcoming "
"security release."
msgstr ""

msgid ""
"As the release approaches, watch Trac to make sure no release blockers are "
"left for the upcoming release."
msgstr ""

msgid ""
"Check with the other mergers to make sure they don't have any uncommitted "
"changes for the release."
msgstr ""

msgid ""
"Proofread the release notes, including looking at the online version to :ref:"
"`catch any broken links <documentation-link-check>` or reST errors, and make "
"sure the release notes contain the correct date."
msgstr ""

msgid ""
"Double-check that the release notes mention deprecation timelines for any "
"APIs noted as deprecated, and that they mention any changes in Python "
"version support."
msgstr ""

msgid ""
"Double-check that the release notes index has a link to the notes for the "
"new release; this will be in ``docs/releases/index.txt``."
msgstr ""

msgid ""
"If this is a feature release, ensure translations from Transifex have been "
"integrated. This is typically done by a separate translation's manager "
"rather than the releaser, but here are the steps. Provided you have an "
"account on Transifex:"
msgstr ""

msgid ""
"and then commit the changed/added files (both ``.po`` and ``.mo``). "
"Sometimes there are validation errors which need to be debugged, so avoid "
"doing this task immediately before a release is needed."
msgstr ""

msgid ":ref:`Update the django-admin manual page <django-admin-manpage>`:"
msgstr ""

msgid "and then commit the changed man page."
msgstr ""

msgid ""
"If this is the alpha release of a new series, create a new stable branch "
"from main. For example, when releasing Django 4.2:"
msgstr ""

msgid ""
"At the same time, update the ``django_next_version`` variable in ``docs/conf."
"py`` on the stable release branch to point to the new development version. "
"For example, when creating ``stable/4.2.x``, set ``django_next_version`` to "
"``'5.0'`` on the new branch."
msgstr ""

msgid ""
"If this is the \"dot zero\" release of a new series, create a new branch "
"from the current stable branch in the `django-docs-translations <https://"
"github.com/django/django-docs-translations>`_ repository. For example, when "
"releasing Django 4.2:"
msgstr ""

msgid "Preparing for release"
msgstr ""

msgid ""
"Write the announcement blog post for the release. You can enter it into the "
"admin at any time and mark it as inactive. Here are a few examples: `example "
"security release announcement`__, `example regular release announcement`__, "
"`example pre-release announcement`__."
msgstr ""

msgid "Actually rolling the release"
msgstr ""

msgid "OK, this is the fun part, where we actually push out a release!"
msgstr ""

msgid ""
"Check `Jenkins`__ is green for the version(s) you're putting out. You "
"probably shouldn't issue a release until it's green."
msgstr ""

msgid ""
"A release always begins from a release branch, so you should make sure "
"you're on a stable branch and up-to-date. For example:"
msgstr ""

msgid ""
"If this is a security release, merge the appropriate patches from ``django-"
"security``. Rebase these patches as necessary to make each one a plain "
"commit on the release branch rather than a merge commit. To ensure this, "
"merge them with the ``--ff-only`` flag; for example:"
msgstr ""

msgid ""
"(This assumes ``security/4.1.x`` is a branch in the ``django-security`` repo "
"containing the necessary security patches for the next release in the 4.1 "
"series.)"
msgstr ""

msgid ""
"If git refuses to merge with ``--ff-only``, switch to the security-patch "
"branch and rebase it on the branch you are about to merge it into (``git "
"checkout security/4.1.x; git rebase stable/4.1.x``) and then switch back and "
"do the merge. Make sure the commit message for each security fix explains "
"that the commit is a security fix and that an announcement will follow (:"
"commit:`example security commit <bf39978a53f117ca02e9a0c78b76664a41a54745>`)."
msgstr ""

msgid ""
"For a feature release, remove the ``UNDER DEVELOPMENT`` header at the top of "
"the release notes and add the release date on the next line. For a patch "
"release, remove the ``Expected`` prefix and update the release date, if "
"necessary. Make this change on all branches where the release notes for a "
"particular version are located."
msgstr ""

msgid ""
"Update the version number in ``django/__init__.py`` for the release. Please "
"see `notes on setting the VERSION tuple`_ below for details on ``VERSION``."
msgstr ""

msgid ""
"If this is a pre-release package, update the \"Development Status\" trove "
"classifier in ``setup.cfg`` to reflect this. Otherwise, make sure the "
"classifier is set to ``Development Status :: 5 - Production/Stable``."
msgstr ""

msgid "Tag the release using ``git tag``. For example:"
msgstr ""

msgid "You can check your work by running ``git tag --verify <tag>``."
msgstr ""

msgid "Push your work, including the tag: ``git push --tags``."
msgstr ""

msgid ""
"Make sure you have an absolutely clean tree by running ``git clean -dfx``."
msgstr ""

msgid ""
"Run ``make -f extras/Makefile`` to generate the release packages. This will "
"create the release packages in a ``dist/`` directory."
msgstr ""

msgid "Generate the hashes of the release packages:"
msgstr ""

msgid ""
"Create a \"checksums\" file, ``Django-<<VERSION>>.checksum.txt`` containing "
"the hashes and release information. Start with this template and insert the "
"correct version, date, GPG key ID (from ``gpg --list-keys --keyid-format "
"LONG``), release manager's GitHub username, release URL, and checksums:"
msgstr ""

msgid ""
"Sign the checksum file (``gpg --clearsign --digest-algo SHA256 Django-"
"<version>.checksum.txt``). This generates a signed document, ``Django-"
"<version>.checksum.txt.asc`` which you can then verify using ``gpg --verify "
"Django-<version>.checksum.txt.asc``."
msgstr ""

msgid ""
"If you're issuing multiple releases, repeat these steps for each release."
msgstr ""

msgid "Making the release(s) available to the public"
msgstr ""

msgid "Now you're ready to actually put the release out there. To do this:"
msgstr ""

msgid ""
"Upload the release package(s) to the djangoproject server, replacing A.B. "
"with the appropriate version number, e.g. 4.1 for a 4.1.x release:"
msgstr ""

msgid ""
"If this is the alpha release of a new series, you will need to create the "
"directory A.B."
msgstr ""

msgid "Upload the checksum file(s):"
msgstr ""

msgid ""
"Test that the release packages install correctly using ``pip``. Here's one "
"method:"
msgstr ""

msgid ""
"This just tests that the tarballs are available (i.e. redirects are up) and "
"that they install correctly, but it'll catch silly mistakes."
msgstr ""

msgid ""
"Run the `confirm-release`__ build on Jenkins to verify the checksum file(s) "
"(e.g. use ``4.2rc1`` for https://media.djangoproject.com/pgp/Django-4.2rc1."
"checksum.txt)."
msgstr ""

msgid ""
"Upload the release packages to PyPI (for pre-releases, only upload the wheel "
"file):"
msgstr ""

msgid ""
"Go to the `Add release page in the admin`__, enter the new release number "
"exactly as it appears in the name of the tarball (``Django-<version>.tar."
"gz``). So for example enter \"4.1.1\" or \"4.2rc1\", etc. If the release is "
"part of an LTS branch, mark it so."
msgstr ""

msgid ""
"If this is the alpha release of a new series, also create a Release object "
"for the *final* release, ensuring that the *Release date* field is blank, "
"thus marking it as *unreleased*. For example, when creating the Release "
"object for ``4.2a1``, also create ``4.2`` with the Release date field blank."
msgstr ""

msgid "Make the blog post announcing the release live."
msgstr ""

msgid ""
"For a new version release (e.g. 4.1, 4.2), update the default stable version "
"of the docs by flipping the ``is_default`` flag to ``True`` on the "
"appropriate ``DocumentRelease`` object in the ``docs.djangoproject.com`` "
"database (this will automatically flip it to ``False`` for all others); you "
"can do this using the site's admin."
msgstr ""

msgid ""
"Create new ``DocumentRelease`` objects for each language that has an entry "
"for the previous release. Update djangoproject.com's `robots.docs.txt`__ "
"file by copying entries from ``manage_translations.py robots_txt`` from the "
"current stable branch in the ``django-docs-translations`` repository. For "
"example, when releasing Django 4.2:"
msgstr ""

msgid ""
"Post the release announcement to the |django-announce|, |django-developers|, "
"|django-users| mailing lists, and the Django Forum. This should include a "
"link to the announcement blog post."
msgstr ""

msgid ""
"If this is a security release, send a separate email to oss-security@lists."
"openwall.com. Provide a descriptive subject, for example, \"Django\" plus "
"the issue title from the release notes (including CVE ID). The message body "
"should include the vulnerability details, for example, the announcement blog "
"post text. Include a link to the announcement blog post."
msgstr ""

msgid ""
"Add a link to the blog post in the topic of the ``#django`` IRC channel: ``/"
"msg chanserv TOPIC #django new topic goes here``."
msgstr ""

msgid "Post-release"
msgstr ""

msgid "You're almost done! All that's left to do now is:"
msgstr ""

msgid ""
"Update the ``VERSION`` tuple in ``django/__init__.py`` again, incrementing "
"to whatever the next expected release will be. For example, after releasing "
"4.1.1, update ``VERSION`` to ``VERSION = (4, 1, 2, 'alpha', 0)``."
msgstr ""

msgid ""
"Add the release in `Trac's versions list`_ if necessary (and make it the "
"default by changing the ``default_version`` setting in the code."
"djangoproject.com's `trac.ini`__, if it's a final release). The new X.Y "
"version should be added after the alpha release and the default version "
"should be updated after \"dot zero\" release."
msgstr ""

msgid ""
"If this was a security release, update :doc:`/releases/security` with "
"details of the issues addressed."
msgstr ""

msgid "New stable branch tasks"
msgstr ""

msgid ""
"There are several items to do in the time following the creation of a new "
"stable branch (often following an alpha release). Some of these tasks don't "
"need to be done by the releaser."
msgstr ""

msgid ""
"Create a new ``DocumentRelease`` object in the ``docs.djangoproject.com`` "
"database for the new version's docs, and update the ``docs/fixtures/"
"doc_releases.json`` JSON fixture, so people without access to the production "
"DB can still run an up-to-date copy of the docs site."
msgstr ""

msgid ""
"Create a stub release note for the new feature version. Use the stub from "
"the previous feature release version or copy the contents from the previous "
"feature version and delete most of the contents leaving only the headings."
msgstr ""

msgid ""
"Increase the default PBKDF2 iterations in ``django.contrib.auth.hashers."
"PBKDF2PasswordHasher`` by about 20% (pick a round number). Run the tests, "
"and update the 3 failing hasher tests with the new values. Make sure this "
"gets noted in the release notes (see the 4.1 release notes for an example)."
msgstr ""

msgid ""
"Remove features that have reached the end of their deprecation cycle. Each "
"removal should be done in a separate commit for clarity. In the commit "
"message, add a \"refs #XXXX\" to the original ticket where the deprecation "
"began if possible."
msgstr ""

msgid ""
"Remove ``.. versionadded::``, ``.. versionadded::``, and ``.. deprecated::`` "
"annotations in the documentation from two releases ago. For example, in "
"Django 4.2, notes for 4.0 will be removed."
msgstr ""

msgid ""
"Add the new branch to `Read the Docs <https://readthedocs.org/projects/"
"django/>`_. Since the automatically generated version names (\"stable-A.B."
"x\") differ from the version names used in Read the Docs (\"A.B.x\"), "
"`create a ticket <https://github.com/readthedocs/readthedocs.org/"
"issues/5537>`_ requesting the new version."
msgstr ""

msgid ""
"`Request the new classifier on PyPI <https://github.com/pypa/trove-"
"classifiers/issues/29>`_. For example ``Framework :: Django :: 3.1``."
msgstr ""

msgid "Notes on setting the VERSION tuple"
msgstr ""

msgid ""
"Django's version reporting is controlled by the ``VERSION`` tuple in "
"``django/__init__.py``. This is a five-element tuple, whose elements are:"
msgstr ""

msgid "Major version."
msgstr ""

msgid "Minor version."
msgstr ""

msgid "Micro version."
msgstr ""

msgid "Status -- can be one of \"alpha\", \"beta\", \"rc\" or \"final\"."
msgstr ""

msgid ""
"Series number, for alpha/beta/RC packages which run in sequence (allowing, "
"for example, \"beta 1\", \"beta 2\", etc.)."
msgstr ""

msgid ""
"For a final release, the status is always \"final\" and the series number is "
"always 0. A series number of 0 with an \"alpha\" status will be reported as "
"\"pre-alpha\"."
msgstr ""

msgid "Some examples:"
msgstr ""

msgid "``(4, 1, 1, \"final\", 0)`` → \"4.1.1\""
msgstr ""

msgid "``(4, 2, 0, \"alpha\", 0)`` → \"4.2 pre-alpha\""
msgstr ""

msgid "``(4, 2, 0, \"beta\", 1)`` → \"4.2 beta 1\""
msgstr ""

msgid "Django internals"
msgstr ""

msgid ""
"Documentation for people hacking on Django itself. This is the place to go "
"if you'd like to help improve Django or learn about how Django is managed."
msgstr ""

msgid "Mailing lists and Forum"
msgstr ""

msgid "Django Forum"
msgstr ""

msgid "Django has an `official Forum`_ where you can input and ask questions."
msgstr ""

msgid "There are several categories of discussion including:"
msgstr ""

msgid ""
"`Using Django`_: to ask any question regarding the installation, usage, or "
"debugging of Django."
msgstr ""

msgid "`Internals`_: for discussion of the development of Django itself."
msgstr ""

msgid ""
"In addition, Django has several official mailing lists on Google Groups that "
"are open to anyone."
msgstr ""

msgid "``django-users``"
msgstr ""

msgid ""
"The `Using Django`_ category of the `official Forum`_ is now the preferred "
"venue for asking usage questions."
msgstr ""

msgid ""
"This is the right place if you are looking to ask any question regarding the "
"installation, usage, or debugging of Django."
msgstr ""

msgid ""
"If it's the first time you send an email to this list, your email must be "
"accepted first so don't worry if :ref:`your message does not appear <message-"
"does-not-appear-on-django-users>` instantly."
msgstr ""

msgid "`django-users mailing archive`_"
msgstr ""

msgid "`django-users subscription email address`_"
msgstr ""

msgid "`django-users posting email`_"
msgstr ""

msgid "``django-developers``"
msgstr ""

msgid ""
"The `Internals`_ category of the `official Forum`_ is now the preferred "
"venue for discussing the development of Django."
msgstr ""

msgid "The discussion about the development of Django itself takes place here."
msgstr ""

msgid ""
"Before asking a question about how to contribute, read :doc:`/internals/"
"contributing/index`. Many frequently asked questions are answered there."
msgstr ""

msgid ""
"Please make use of :ref:`django-users mailing list <django-users-mailing-"
"list>` if you want to ask for tech support, doing so in this list is "
"inappropriate."
msgstr ""

msgid "`django-developers mailing archive`_"
msgstr ""

msgid "`django-developers subscription email address`_"
msgstr ""

msgid "`django-developers posting email`_"
msgstr ""

msgid "``django-announce``"
msgstr ""

msgid ""
"A (very) low-traffic list for announcing :ref:`upcoming security releases "
"<security-disclosure>`, new releases of Django, and security advisories."
msgstr ""

msgid "`django-announce mailing archive`_"
msgstr ""

msgid "`django-announce subscription email address`_"
msgstr ""

msgid "`django-announce posting email`_"
msgstr ""

msgid "``django-updates``"
msgstr ""

msgid ""
"All the ticket updates are mailed automatically to this list, which is "
"tracked by developers and interested community members."
msgstr ""

msgid "`django-updates mailing archive`_"
msgstr ""

msgid "`django-updates subscription email address`_"
msgstr ""

msgid "`django-updates posting email`_"
msgstr ""

msgid "Organization of the Django Project"
msgstr ""

msgid "Principles"
msgstr ""

msgid ""
"The Django Project is managed by a team of volunteers pursuing three goals:"
msgstr ""

msgid "Driving the development of the Django web framework,"
msgstr ""

msgid "Fostering the ecosystem of Django-related software,"
msgstr ""

msgid ""
"Leading the Django community in accordance with the values described in the "
"`Django Code of Conduct`_."
msgstr ""

msgid ""
"The Django Project isn't a legal entity. The `Django Software Foundation`_, "
"a non-profit organization, handles financial and legal matters related to "
"the Django Project. Other than that, the Django Software Foundation lets the "
"Django Project manage the development of the Django framework, its ecosystem "
"and its community."
msgstr ""

msgid "Mergers"
msgstr ""

msgid "Role"
msgstr ""

msgid ""
"Mergers_ are a small set of people who merge pull requests to the `Django "
"Git repository`_."
msgstr ""

msgid "Prerogatives"
msgstr ""

msgid "Mergers hold the following prerogatives:"
msgstr ""

msgid ""
"Merging any pull request which constitutes a `minor change`_ (small enough "
"not to require the use of the `DEP process`_). A Merger must not merge a "
"change primarily authored by that Merger, unless the pull request has been "
"approved by:"
msgstr ""

msgid "another Merger,"
msgstr ""

msgid "a steering council member,"
msgstr ""

msgid "a member of the `triage & review team`_, or"
msgstr ""

msgid "a member of the `security team`_."
msgstr ""

msgid ""
"Initiating discussion of a minor change in the appropriate venue, and "
"request that other Mergers refrain from merging it while discussion proceeds."
msgstr ""

msgid ""
"Requesting a vote of the steering council regarding any minor change if, in "
"the Merger's opinion, discussion has failed to reach a consensus."
msgstr ""

msgid ""
"Requesting a vote of the steering council when a `major change`_ "
"(significant enough to require the use of the `DEP process`_) reaches one of "
"its implementation milestones and is intended to merge."
msgstr ""

msgid "Membership"
msgstr ""

msgid ""
"`The steering council`_ selects Mergers_ as necessary to maintain their "
"number at a minimum of three, in order to spread the workload and avoid over-"
"burdening or burning out any individual Merger. There is no upper limit to "
"the number of Mergers."
msgstr ""

msgid ""
"It's not a requirement that a Merger is also a Django Fellow, but the Django "
"Software Foundation has the power to use funding of Fellow positions as a "
"way to make the role of Merger sustainable."
msgstr ""

msgid "The following restrictions apply to the role of Merger:"
msgstr ""

msgid ""
"A person must not simultaneously serve as a member of the steering council. "
"If a Merger is elected to the steering council, they shall cease to be a "
"Merger immediately upon taking up membership in the steering council."
msgstr ""

msgid "A person may serve in the roles of Releaser and Merger simultaneously."
msgstr ""

msgid ""
"The selection process, when a vacancy occurs or when the steering council "
"deems it necessary to select additional persons for such a role, occur as "
"follows:"
msgstr ""

msgid ""
"Any member in good standing of an appropriate discussion venue, or the "
"Django Software Foundation board acting with the input of the DSF's "
"Fellowship committee, may suggest a person for consideration."
msgstr ""

msgid ""
"The steering council considers the suggestions put forth, and then any "
"member of the steering council formally nominates a candidate for the role."
msgstr ""

msgid "The steering council votes on nominees."
msgstr ""

msgid ""
"Mergers may resign their role at any time, but should endeavor to provide "
"some advance notice in order to allow the selection of a replacement. "
"Termination of the contract of a Django Fellow by the Django Software "
"Foundation temporarily suspends that person's Merger role until such time as "
"the steering council can vote on their nomination."
msgstr ""

msgid "Otherwise, a Merger may be removed by:"
msgstr ""

msgid "Becoming disqualified due to election to the steering council."
msgstr ""

msgid ""
"Becoming disqualified due to actions taken by the Code of Conduct committee "
"of the Django Software Foundation."
msgstr ""

msgid "A vote of the steering council."
msgstr ""

msgid "Releasers"
msgstr ""

msgid ""
"Releasers_ are a small set of people who have the authority to upload "
"packaged releases of Django to the :pypi:`Python Package Index <Django>` and "
"to the `djangoproject.com`_ website."
msgstr ""

msgid ""
"Releasers_ :doc:`build Django releases </internals/howto-release-django>` "
"and upload them to the :pypi:`Python Package Index <Django>` and to the "
"`djangoproject.com`_ website."
msgstr ""

msgid ""
"`The steering council`_ selects Releasers_ as necessary to maintain their "
"number at a minimum of three, in order to spread the workload and avoid over-"
"burdening or burning out any individual Releaser. There is no upper limit to "
"the number of Releasers."
msgstr ""

msgid ""
"It's not a requirement that a Releaser is also a Django Fellow, but the "
"Django Software Foundation has the power to use funding of Fellow positions "
"as a way to make the role of Releaser sustainable."
msgstr ""

msgid ""
"Releasers may resign their role at any time, but should endeavor to provide "
"some advance notice in order to allow the selection of a replacement. "
"Termination of the contract of a Django Fellow by the Django Software "
"Foundation temporarily suspends that person's Releaser role until such time "
"as the steering council can vote on their nomination."
msgstr ""

msgid "Otherwise, a Releaser may be removed by:"
msgstr ""

msgid "Steering council"
msgstr ""

msgid "The steering council is a group of experienced contributors who:"
msgstr ""

msgid "provide oversight of Django's development and release process,"
msgstr ""

msgid "assist in setting the direction of feature development and releases,"
msgstr ""

msgid "take part in filling certain roles, and"
msgstr ""

msgid "have a tie-breaking vote when other decision-making processes fail."
msgstr ""

msgid ""
"Their main concern is to maintain the quality and stability of the Django "
"Web Framework."
msgstr ""

msgid "The steering council holds the following prerogatives:"
msgstr ""

msgid ""
"Making a binding decision regarding any question of a technical change to "
"Django."
msgstr ""

msgid ""
"Vetoing the merging of any particular piece of code into Django or ordering "
"the reversion of any particular merge or commit."
msgstr ""

msgid ""
"Announcing calls for proposals and ideas for the future technical direction "
"of Django."
msgstr ""

msgid "Setting and adjusting the schedule of releases of Django."
msgstr ""

msgid "Selecting and removing mergers and releasers."
msgstr ""

msgid ""
"Participating in the removal of members of the steering council, when deemed "
"appropriate."
msgstr ""

msgid ""
"Calling elections of the steering council outside of those which are "
"automatically triggered, at times when the steering council deems an "
"election is appropriate."
msgstr ""

msgid ""
"Participating in modifying Django's governance (see :ref:`organization-"
"change`)."
msgstr ""

msgid ""
"Declining to vote on a matter the steering council feels is unripe for a "
"binding decision, or which the steering council feels is outside the scope "
"of its powers."
msgstr ""

msgid ""
"Taking charge of the governance of other technical teams within the Django "
"open-source project, and governing those teams accordingly."
msgstr ""

msgid ""
"`The steering council`_ is an elected group of five experienced contributors "
"who demonstrate:"
msgstr ""

msgid ""
"A history of substantive contributions to Django or the Django ecosystem. "
"This history must begin at least 18 months prior to the individual's "
"candidacy for the Steering Council, and include substantive contributions in "
"at least two of these bullet points: - Code contributions on Django projects "
"or major third-party packages in the Django ecosystem - Reviewing pull "
"requests and/or triaging Django project tickets - Documentation, tutorials "
"or blog posts - Discussions about Django on the django-developers mailing "
"list or the Django Forum - Running Django-related events or user groups"
msgstr ""

msgid ""
"A history of engagement with the direction and future of Django. This does "
"not need to be recent, but candidates who have not engaged in the past three "
"years must still demonstrate an understanding of Django's changes and "
"direction within those three years."
msgstr ""

msgid ""
"A new council is elected after each release cycle of Django. The election "
"process works as follows:"
msgstr ""

msgid ""
"The steering council directs one of its members to notify the Secretary of "
"the Django Software Foundation, in writing, of the triggering of the "
"election, and the condition which triggered it. The Secretary post to the "
"appropriate venue -- the |django-developers| mailing list and the `Django "
"forum`_ to announce the election and its timeline."
msgstr ""

msgid ""
"As soon as the election is announced, the `DSF Board`_ begin a period of "
"voter registration. All `individual members of the DSF`_ are automatically "
"registered and need not explicitly register. All other persons who believe "
"themselves eligible to vote, but who have not yet registered to vote, may "
"make an application to the DSF Board for voting privileges. The voter "
"registration form and roll of voters is maintained by the DSF Board. The DSF "
"Board may challenge and reject the registration of voters it believes are "
"registering in bad faith or who it believes have falsified their "
"qualifications or are otherwise unqualified."
msgstr ""

msgid ""
"Registration of voters close one week after the announcement of the "
"election. At that point, registration of candidates begin. Any qualified "
"person may register as a candidate. The candidate registration form and "
"roster of candidates are maintained by the DSF Board, and candidates must "
"provide evidence of their qualifications as part of registration. The DSF "
"Board may challenge and reject the registration of candidates it believes do "
"not meet the qualifications of members of the Steering Council, or who it "
"believes are registering in bad faith."
msgstr ""

msgid ""
"Registration of candidates close one week after it has opened. One week "
"after registration of candidates closes, the Secretary of the DSF publish "
"the roster of candidates to the |django-developers| mailing list and the "
"`Django forum`_, and the election begin. The DSF Board provide a voting form "
"accessible to registered voters, and is the custodian of the votes."
msgstr ""

msgid ""
"Voting is by secret ballot containing the roster of candidates, and any "
"relevant materials regarding the candidates, in a randomized order. Each "
"voter may vote for up to five candidates on the ballot."
msgstr ""

msgid ""
"The election conclude one week after it begins. The DSF Board then tally the "
"votes and produce a summary, including the total number of votes cast and "
"the number received by each candidate. This summary is ratified by a "
"majority vote of the DSF Board, then posted by the Secretary of the DSF to "
"the |django-developers| mailing list and the Django Forum. The five "
"candidates with the highest vote totals are immediately become the new "
"steering council."
msgstr ""

msgid "A member of the steering council may be removed by:"
msgstr ""

msgid ""
"Determining that they did not possess the qualifications of a member of the "
"steering council. This determination must be made jointly by the other "
"members of the steering council, and the `DSF Board`_. A valid determination "
"of ineligibility requires that all other members of the steering council and "
"all members of the DSF Board vote who can vote on the issue (the affected "
"person, if a DSF Board member, must not vote) vote \"yes\" on a motion that "
"the person in question is ineligible."
msgstr ""

msgid "Changing the organization"
msgstr ""

msgid ""
"Changes to this document require the use of the `DEP process`_, with "
"modifications described in `DEP 0010`_."
msgstr ""

msgid "Django's release process"
msgstr ""

msgid "Official releases"
msgstr ""

msgid "Since version 1.0, Django's release numbering works as follows:"
msgstr ""

msgid "Versions are numbered in the form ``A.B`` or ``A.B.C``."
msgstr ""

msgid ""
"``A.B`` is the *feature release* version number. Each version will be mostly "
"backwards compatible with the previous release. Exceptions to this rule will "
"be listed in the release notes."
msgstr ""

msgid ""
"``C`` is the *patch release* version number, which is incremented for bugfix "
"and security releases. These releases will be 100% backwards-compatible with "
"the previous patch release. The only exception is when a security or data "
"loss issue can't be fixed without breaking backwards-compatibility. If this "
"happens, the release notes will provide detailed upgrade instructions."
msgstr ""

msgid ""
"Before a new feature release, we'll make alpha, beta, and release candidate "
"releases. These are of the form ``A.B alpha/beta/rc N``, which means the "
"``Nth`` alpha/beta/release candidate of version ``A.B``."
msgstr ""

msgid ""
"In git, each Django release will have a tag indicating its version number, "
"signed with the Django release key. Additionally, each release series has "
"its own branch, called ``stable/A.B.x``, and bugfix/security releases will "
"be issued from those branches."
msgstr ""

msgid ""
"For more information about how the Django project issues new releases for "
"security purposes, please see :doc:`our security policies <security>`."
msgstr ""

msgid "Feature release"
msgstr ""

msgid ""
"Feature releases (A.B, A.B+1, etc.) will happen roughly every eight months "
"-- see `release process`_ for details. These releases will contain new "
"features, improvements to existing features, and such."
msgstr ""

msgid "Patch release"
msgstr ""

msgid ""
"Patch releases (A.B.C, A.B.C+1, etc.) will be issued as needed, to fix bugs "
"and/or security issues."
msgstr ""

msgid ""
"These releases will be 100% compatible with the associated feature release, "
"unless this is impossible for security reasons or to prevent data loss. So "
"the answer to \"should I upgrade to the latest patch release?\" will always "
"be \"yes.\""
msgstr ""

msgid "Long-term support release"
msgstr ""

msgid ""
"Certain feature releases will be designated as long-term support (LTS) "
"releases. These releases will get security and data loss fixes applied for a "
"guaranteed period of time, typically three years."
msgstr ""

msgid ""
"See `the download page`_ for the releases that have been designated for long-"
"term support."
msgstr ""

msgid "Release cadence"
msgstr ""

msgid ""
"Starting with Django 2.0, version numbers will use a loose form of `semantic "
"versioning <https://semver.org/>`_ such that each version following an LTS "
"will bump to the next \"dot zero\" version. For example: 2.0, 2.1, 2.2 "
"(LTS), 3.0, 3.1, 3.2 (LTS), etc."
msgstr ""

msgid ""
"SemVer makes it easier to see at a glance how compatible releases are with "
"each other. It also helps to anticipate when compatibility shims will be "
"removed. It's not a pure form of SemVer as each feature release will "
"continue to have a few documented backwards incompatibilities where a "
"deprecation path isn't possible or not worth the cost. Also, deprecations "
"started in an LTS release (X.2) will be dropped in a non-dot-zero release "
"(Y.1) to accommodate our policy of keeping deprecation shims for at least "
"two feature releases. Read on to the next section for an example."
msgstr ""

msgid "Deprecation policy"
msgstr ""

msgid ""
"A feature release may deprecate certain features from previous releases. If "
"a feature is deprecated in feature release A.x, it will continue to work in "
"all A.x versions (for all versions of x) but raise warnings. Deprecated "
"features will be removed in the B.0 release, or B.1 for features deprecated "
"in the last A.x feature release to ensure deprecations are done over at "
"least 2 feature releases."
msgstr ""

msgid ""
"So, for example, if we decided to start the deprecation of a function in "
"Django 4.2:"
msgstr ""

msgid ""
"Django 4.2 will contain a backwards-compatible replica of the function which "
"will raise a ``RemovedInDjango51Warning``."
msgstr ""

msgid ""
"Django 5.0 (the version that follows 4.2) will still contain the backwards-"
"compatible replica."
msgstr ""

msgid "Django 5.1 will remove the feature outright."
msgstr ""

msgid ""
"The warnings are silent by default. You can turn on display of these "
"warnings with the ``python -Wd`` option."
msgstr ""

msgid "A more generic example:"
msgstr ""

msgid "X.0"
msgstr ""

msgid "X.1"
msgstr ""

msgid "X.2 LTS"
msgstr ""

msgid "Y.0: Drop deprecation shims added in X.0 and X.1."
msgstr ""

msgid "Y.1: Drop deprecation shims added in X.2."
msgstr ""

msgid ""
"Y.2 LTS: No deprecation shims dropped (while Y.0 is no longer supported, "
"third-party apps need to maintain compatibility back to X.2 LTS to ease LTS "
"to LTS upgrades)."
msgstr ""

msgid "Z.0: Drop deprecation shims added in Y.0 and Y.1."
msgstr ""

msgid "See also the :ref:`deprecating-a-feature` guide."
msgstr ""

msgid "Supported versions"
msgstr ""

msgid ""
"At any moment in time, Django's developer team will support a set of "
"releases to varying levels. See `the supported versions section <https://www."
"djangoproject.com/download/#supported-versions>`_ of the download page for "
"the current state of support for each version."
msgstr ""

msgid ""
"The current development branch ``main`` will get new features and bug fixes "
"requiring non-trivial refactoring."
msgstr ""

msgid ""
"Patches applied to the main branch must also be applied to the last feature "
"release branch, to be released in the next patch release of that feature "
"series, when they fix critical problems:"
msgstr ""

msgid "Security issues."
msgstr ""

msgid "Data loss bugs."
msgstr ""

msgid "Crashing bugs."
msgstr ""

msgid "Major functionality bugs in new features of the latest stable release."
msgstr ""

msgid ""
"Regressions from older versions of Django introduced in the current release "
"series."
msgstr ""

msgid ""
"The rule of thumb is that fixes will be backported to the last feature "
"release for bugs that would have prevented a release in the first place "
"(release blockers)."
msgstr ""

msgid ""
"Security fixes and data loss bugs will be applied to the current main "
"branch, the last two feature release branches, and any other supported long-"
"term support release branches."
msgstr ""

msgid ""
"Documentation fixes generally will be more freely backported to the last "
"release branch. That's because it's highly advantageous to have the docs for "
"the last release be up-to-date and correct, and the risk of introducing "
"regressions is much less of a concern."
msgstr ""

msgid ""
"As a concrete example, consider a moment in time halfway between the release "
"of Django 5.1 and 5.2. At this point in time:"
msgstr ""

msgid ""
"Features will be added to the development main branch, to be released as "
"Django 5.2."
msgstr ""

msgid ""
"Critical bug fixes will be applied to the ``stable/5.1.x`` branch, and "
"released as 5.1.1, 5.1.2, etc."
msgstr ""

msgid ""
"Security fixes and bug fixes for data loss issues will be applied to "
"``main`` and to the ``stable/5.1.x``, ``stable/5.0.x``, and ``stable/4.2.x`` "
"(LTS) branches. They will trigger the release of ``5.1.1``, ``5.0.5``, "
"``4.2.8``, etc."
msgstr ""

msgid ""
"Documentation fixes will be applied to main, and, if easily backported, to "
"the latest stable branch, ``5.1.x``."
msgstr ""

msgid "Release process"
msgstr ""

msgid ""
"Django uses a time-based release schedule, with feature releases every eight "
"months or so."
msgstr ""

msgid ""
"After each feature release, the release manager will announce a timeline for "
"the next feature release."
msgstr ""

msgid "Release cycle"
msgstr ""

msgid "Each release cycle consists of three parts:"
msgstr ""

msgid "Phase one: feature proposal"
msgstr ""

msgid ""
"The first phase of the release process will include figuring out what major "
"features to include in the next version. This should include a good deal of "
"preliminary work on those features -- working code trumps grand design."
msgstr ""

msgid ""
"Major features for an upcoming release will be added to the wiki roadmap "
"page, e.g. https://code.djangoproject.com/wiki/Version1.11Roadmap."
msgstr ""

msgid "Phase two: development"
msgstr ""

msgid ""
"The second part of the release schedule is the \"heads-down\" working "
"period. Using the roadmap produced at the end of phase one, we'll all work "
"very hard to get everything on it done."
msgstr ""

msgid ""
"At the end of phase two, any unfinished features will be postponed until the "
"next release."
msgstr ""

msgid ""
"Phase two will culminate with an alpha release. At this point, the ``stable/"
"A.B.x`` branch will be forked from ``main``."
msgstr ""

msgid "Phase three: bugfixes"
msgstr ""

msgid ""
"The last part of a release cycle is spent fixing bugs -- no new features "
"will be accepted during this time. We'll try to release a beta release one "
"month after the alpha and a release candidate one month after the beta."
msgstr ""

msgid ""
"The release candidate marks the string freeze, and it happens at least two "
"weeks before the final release. After this point, new translatable strings "
"must not be added."
msgstr ""

msgid ""
"During this phase, mergers will be more and more conservative with "
"backports, to avoid introducing regressions. After the release candidate, "
"only release blockers and documentation fixes should be backported."
msgstr ""

msgid ""
"In parallel to this phase, ``main`` can receive new features, to be released "
"in the ``A.B+1`` cycle."
msgstr ""

msgid "Bug-fix releases"
msgstr ""

msgid ""
"After a feature release (e.g. A.B), the previous release will go into bugfix "
"mode."
msgstr ""

msgid ""
"The branch for the previous feature release (e.g. ``stable/A.B-1.x``) will "
"include bugfixes. Critical bugs fixed on main must *also* be fixed on the "
"bugfix branch; this means that commits need to cleanly separate bug fixes "
"from feature additions. The developer who commits a fix to main will be "
"responsible for also applying the fix to the current bugfix branch."
msgstr ""

msgid "Django's security policies"
msgstr ""

msgid ""
"Django's development team is strongly committed to responsible reporting and "
"disclosure of security-related issues. As such, we've adopted and follow a "
"set of policies which conform to that ideal and are geared toward allowing "
"us to deliver timely security updates to the official distribution of "
"Django, as well as to third-party distributions."
msgstr ""

msgid "Reporting security issues"
msgstr ""

msgid ""
"**Short version: please report security issues by emailing "
"security@djangoproject.com**."
msgstr ""

msgid ""
"Most normal bugs in Django are reported to `our public Trac instance`_, but "
"due to the sensitive nature of security issues, we ask that they **not** be "
"publicly reported in this fashion."
msgstr ""

msgid ""
"Instead, if you believe you've found something in Django which has security "
"implications, please send a description of the issue via email to "
"``security@djangoproject.com``. Mail sent to that address reaches the "
"`security team <https://www.djangoproject.com/foundation/teams/#security-"
"team>`_."
msgstr ""

msgid ""
"Once you've submitted an issue via email, you should receive an "
"acknowledgment from a member of the security team within 48 hours, and "
"depending on the action to be taken, you may receive further followup emails."
msgstr ""

msgid "Sending encrypted reports"
msgstr ""

msgid ""
"If you want to send an encrypted email (*optional*), the public key ID for "
"``security@djangoproject.com`` is ``0xfcb84b8d1d17f80b``, and this public "
"key is available from most commonly-used keyservers."
msgstr ""

msgid ""
"At any given time, the Django team provides official security support for "
"several versions of Django:"
msgstr ""

msgid ""
"The `main development branch`_, hosted on GitHub, which will become the next "
"major release of Django, receives security support. Security issues that "
"only affect the main development branch and not any stable released versions "
"are fixed in public without going through the :ref:`disclosure process "
"<security-disclosure>`."
msgstr ""

msgid ""
"The two most recent Django release series receive security support. For "
"example, during the development cycle leading to the release of Django 1.5, "
"support will be provided for Django 1.4 and Django 1.3. Upon the release of "
"Django 1.5, Django 1.3's security support will end."
msgstr ""

msgid ""
":term:`Long-term support release`\\s will receive security updates for a "
"specified period."
msgstr ""

msgid ""
"When new releases are issued for security reasons, the accompanying notice "
"will include a list of affected versions. This list is comprised solely of "
"*supported* versions of Django: older versions may also be affected, but we "
"do not investigate to determine that, and will not issue patches or new "
"releases for those versions."
msgstr ""

msgid "How Django discloses security issues"
msgstr ""

msgid ""
"Our process for taking a security issue from private discussion to public "
"disclosure involves multiple steps."
msgstr ""

msgid ""
"Approximately one week before public disclosure, we send two notifications:"
msgstr ""

msgid ""
"First, we notify |django-announce| of the date and approximate time of the "
"upcoming security release, as well as the severity of the issues. This is to "
"aid organizations that need to ensure they have staff available to handle "
"triaging our announcement and upgrade Django as needed. Severity levels are:"
msgstr ""

msgid "**High**:"
msgstr ""

msgid "Remote code execution"
msgstr ""

msgid "SQL injection"
msgstr ""

msgid "**Moderate**:"
msgstr ""

msgid "Cross site scripting (XSS)"
msgstr ""

msgid "Cross site request forgery (CSRF)"
msgstr ""

msgid "Denial-of-service attacks"
msgstr ""

msgid "Broken authentication"
msgstr ""

msgid "**Low**:"
msgstr ""

msgid "Sensitive data exposure"
msgstr ""

msgid "Broken session management"
msgstr ""

msgid "Unvalidated redirects/forwards"
msgstr ""

msgid "Issues requiring an uncommon configuration option"
msgstr ""

msgid ""
"Second, we notify a list of :ref:`people and organizations <security-"
"notifications>`, primarily composed of operating-system vendors and other "
"distributors of Django. This email is signed with the PGP key of someone "
"from `Django's release team`_ and consists of:"
msgstr ""

msgid "A full description of the issue and the affected versions of Django."
msgstr ""

msgid "The steps we will be taking to remedy the issue."
msgstr ""

msgid "The patch(es), if any, that will be applied to Django."
msgstr ""

msgid ""
"The date on which the Django team will apply these patches, issue new "
"releases and publicly disclose the issue."
msgstr ""

msgid "On the day of disclosure, we will take the following steps:"
msgstr ""

msgid "Apply the relevant patch(es) to Django's codebase."
msgstr ""

msgid ""
"Issue the relevant release(s), by placing new packages on the :pypi:`Python "
"Package Index <Django>` and on the `djangoproject.com website <https://www."
"djangoproject.com/download/>`_, and tagging the new release(s) in Django's "
"git repository."
msgstr ""

msgid ""
"Post a public entry on `the official Django development blog`_, describing "
"the issue and its resolution in detail, pointing to the relevant patches and "
"new releases, and crediting the reporter of the issue (if the reporter "
"wishes to be publicly identified)."
msgstr ""

msgid ""
"Post a notice to the |django-announce| and oss-security@lists.openwall.com "
"mailing lists that links to the blog post."
msgstr ""

msgid ""
"If a reported issue is believed to be particularly time-sensitive -- due to "
"a known exploit in the wild, for example -- the time between advance "
"notification and public disclosure may be shortened considerably."
msgstr ""

msgid ""
"Additionally, if we have reason to believe that an issue reported to us "
"affects other frameworks or tools in the Python/web ecosystem, we may "
"privately contact and discuss those issues with the appropriate maintainers, "
"and coordinate our own disclosure and resolution with theirs."
msgstr ""

msgid ""
"The Django team also maintains an :doc:`archive of security issues disclosed "
"in Django</releases/security>`."
msgstr ""

msgid "Who receives advance notification"
msgstr ""

msgid ""
"The full list of people and organizations who receive advance notification "
"of security issues is not and will not be made public."
msgstr ""

msgid ""
"We also aim to keep this list as small as effectively possible, in order to "
"better manage the flow of confidential information prior to disclosure. As "
"such, our notification list is *not* simply a list of users of Django, and "
"being a user of Django is not sufficient reason to be placed on the "
"notification list."
msgstr ""

msgid ""
"In broad terms, recipients of security notifications fall into three groups:"
msgstr ""

msgid ""
"Operating-system vendors and other distributors of Django who provide a "
"suitably-generic (i.e., *not* an individual's personal email address) "
"contact address for reporting issues with their Django package, or for "
"general security reporting. In either case, such addresses **must not** "
"forward to public mailing lists or bug trackers. Addresses which forward to "
"the private email of an individual maintainer or security-response contact "
"are acceptable, although private security trackers or security-response "
"groups are strongly preferred."
msgstr ""

msgid ""
"On a case-by-case basis, individual package maintainers who have "
"demonstrated a commitment to responding to and responsibly acting on these "
"notifications."
msgstr ""

msgid ""
"On a case-by-case basis, other entities who, in the judgment of the Django "
"development team, need to be made aware of a pending security issue. "
"Typically, membership in this group will consist of some of the largest and/"
"or most likely to be severely impacted known users or distributors of "
"Django, and will require a demonstrated ability to responsibly receive, keep "
"confidential and act on these notifications."
msgstr ""

msgid "Security audit and scanning entities"
msgstr ""

msgid ""
"As a policy, we do not add these types of entities to the notification list."
msgstr ""

msgid "Requesting notifications"
msgstr ""

msgid ""
"If you believe that you, or an organization you are authorized to represent, "
"fall into one of the groups listed above, you can ask to be added to "
"Django's notification list by emailing ``security@djangoproject.com``. "
"Please use the subject line \"Security notification request\"."
msgstr ""

msgid "Your request **must** include the following information:"
msgstr ""

msgid ""
"Your full, real name and the name of the organization you represent, if "
"applicable, as well as your role within that organization."
msgstr ""

msgid ""
"A detailed explanation of how you or your organization fit at least one set "
"of criteria listed above."
msgstr ""

msgid ""
"A detailed explanation of why you are requesting security notifications. "
"Again, please keep in mind that this is *not* simply a list for users of "
"Django, and the overwhelming majority of users should subscribe to |django-"
"announce| to receive advanced notice of when a security release will happen, "
"without the details of the issues, rather than request detailed "
"notifications."
msgstr ""

msgid ""
"The email address you would like to have added to our notification list."
msgstr ""

msgid ""
"An explanation of who will be receiving/reviewing mail sent to that address, "
"as well as information regarding any automated actions that will be taken (i."
"e., filing of a confidential issue in a bug tracker)."
msgstr ""

msgid ""
"For individuals, the ID of a public key associated with your address which "
"can be used to verify email received from you and encrypt email sent to you, "
"as needed."
msgstr ""

msgid ""
"Once submitted, your request will be considered by the Django development "
"team; you will receive a reply notifying you of the result of your request "
"within 30 days."
msgstr ""

msgid ""
"Please also bear in mind that for any individual or organization, receiving "
"security notifications is a privilege granted at the sole discretion of the "
"Django development team, and that this privilege can be revoked at any time, "
"with or without explanation."
msgstr ""

msgid "Provide all required information"
msgstr ""

msgid ""
"A failure to provide the required information in your initial contact will "
"count against you when making the decision on whether or not to approve your "
"request."
msgstr ""
