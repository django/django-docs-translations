# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# Adrien Brunet <abrunet@centrale-marseille.fr>, 2017
# Bruno Brouard <annoa.b@gmail.com>, 2014,2016
# Anthony SKORSKI <skorski.anthony@gmail.com>, 2019
# Baptiste Mispelon <bmispelon@gmail.com>, 2014
# Claude Paroz <claude@2xlibre.net>, 2013-2024
# Laville Augustin <augustin.laville@gustavi.net>, 2019
# b0d756377bb6551ae3df331b1e178e59, 2013
# Marie-Cécile Gohier <mariececile.gohier@gmail.com>, 2014-2015
# mlorant <maxime.lorant@gmail.com>, 2021
# Sam Stewart <sam@sapient.com.au>, 2013
# Sébastien Corbin <seb.corbin@gmail.com>, 2020-2021
# Sébastien Fievet <_@sebastien-fievet.fr>, 2014
# chrisglass <tribaal@gmail.com>, 2013
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-13 05:19-0500\n"
"PO-Revision-Date: 2013-04-02 20:02+0000\n"
"Last-Translator: Claude Paroz <claude@2xlibre.net>, 2013-2024\n"
"Language-Team: French (http://app.transifex.com/django/django-docs/language/"
"fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

msgid "Asynchronous support"
msgstr "Gestion du code asynchrone"

msgid ""
"Django has support for writing asynchronous (\"async\") views, along with an "
"entirely async-enabled request stack if you are running under :doc:`ASGI </"
"howto/deployment/asgi/index>`. Async views will still work under WSGI, but "
"with performance penalties, and without the ability to have efficient long-"
"running requests."
msgstr ""
"Django prend en charge l'écriture de vues asynchrones (« async »), en "
"conjonction avec une pile de requête adaptée pour l'asynchrone, pour autant "
"que vous fonctionniez avec :doc:`ASGI </howto/deployment/asgi/index>`. Les "
"vues asynchrones fonctionnent aussi avec WSGI, mais avec des performances "
"moindres et sans possibilité de bénéficier de requêtes de longue durée "
"efficaces."

msgid ""
"We're still working on async support for the ORM and other parts of Django. "
"You can expect to see this in future releases. For now, you can use the :"
"func:`sync_to_async` adapter to interact with the sync parts of Django. "
"There is also a whole range of async-native Python libraries that you can "
"integrate with."
msgstr ""
"Le travail sur la prise en charge de l'asynchrone est toujours en cours sur "
"l'ORM et d'autres parties de Django. Nous espérons en voir le fruit dans de "
"futures publications de Django. Pour le moment, vous pouvez utiliser "
"l'adaptateur :func:`sync_to_async` pour interagir avec les parties "
"synchrones de Django. Il existe aussi un vaste choix de bibliothèques Python "
"nativement asynchrones avec lesquelles vous pouvez intégrer votre code."

msgid "Async views"
msgstr "Vues asynchrones"

msgid ""
"Any view can be declared async by making the callable part of it return a "
"coroutine - commonly, this is done using ``async def``. For a function-based "
"view, this means declaring the whole view using ``async def``. For a class-"
"based view, this means declaring the HTTP method handlers, such as ``get()`` "
"and ``post()`` as ``async def`` (not its ``__init__()``, or ``as_view()``)."
msgstr ""
"Toute vue peut être déclarée asynchrone en faisant renvoyer une coroutine de "
"sa partie exécutable ; ceci se fait en principe avec ``async def``. Pour une "
"vue basée sur une fonction, cela signifie déclarer la vue entière comme "
"``async def``. Pour une vue basée sur une classe, cela signifie définir les "
"gestionnaires de méthodes tels que  ``get()`` et ``post()`` comme ``async "
"def`` (pas la méthode ``__init__()`` ni ``as_view()``)."

msgid ""
"Django uses ``asgiref.sync.iscoroutinefunction`` to test if your view is "
"asynchronous or not. If you implement your own method of returning a "
"coroutine, ensure you use ``asgiref.sync.markcoroutinefunction`` so this "
"function returns ``True``."
msgstr ""
"Django utilise ``asgiref.sync.iscoroutinefunction`` pour tester si la vue "
"est asynchrone ou pas. Si vous implémentez votre propre méthode pour "
"renvoyer une coroutine, prenez soin d'utiliser ``asgiref.sync."
"markcoroutinefunction`` pour que cette fonction renvoie ``True``."

msgid ""
"Under a WSGI server, async views will run in their own, one-off event loop. "
"This means you can use async features, like concurrent async HTTP requests, "
"without any issues, but you will not get the benefits of an async stack."
msgstr ""
"Avec un serveur WSGI, les vues asynchrones tournent dans leur propre boucle "
"événementielle unique. Cela veut dire que vous pouvez utiliser sans problème "
"des fonctionnalités asynchrones, telles que des requêtes HTTP asynchrones et "
"concurrentes, mais vous ne bénéficierez pas des avantages d'une pile "
"asynchrone."

msgid ""
"The main benefits are the ability to service hundreds of connections without "
"using Python threads. This allows you to use slow streaming, long-polling, "
"and other exciting response types."
msgstr ""
"Les bénéfices principaux sont de pouvoir servir des centaines de connexions "
"sans faire appel aux files d'exécutions (threads) Python. Cela vous permet "
"d'utiliser les flux lents et les interrogations lentes (slow streaming, long-"
"polling), et autres techniques semblables pour les réponses."

msgid ""
"If you want to use these, you will need to deploy Django using :doc:`ASGI </"
"howto/deployment/asgi/index>` instead."
msgstr ""
"Si vous souhaitez exploiter ces possibilités, vous devrez déployer Django en "
"utilisant plutôt un serveur :doc:`ASGI </howto/deployment/asgi/index>`."

msgid ""
"You will only get the benefits of a fully-asynchronous request stack if you "
"have *no synchronous middleware* loaded into your site. If there is a piece "
"of synchronous middleware, then Django must use a thread per request to "
"safely emulate a synchronous environment for it."
msgstr ""
"Vous ne pourrez obtenir les bénéfices d'une pile de requête pleinement "
"asynchrone que si *aucun intergiciel synchrone* n'est chargé dans votre "
"site. Si un intergiciel synchrone est chargé, Django est obligé d'employer "
"un fil d'exécution par requête pour émuler un environnement synchrone de "
"manière sûre. "

msgid ""
"Middleware can be built to support :ref:`both sync and async <async-"
"middleware>` contexts. Some of Django's middleware is built like this, but "
"not all. To see what middleware Django has to adapt for, you can turn on "
"debug logging for the ``django.request`` logger and look for log messages "
"about *\"Asynchronous handler adapted for middleware ...\"*."
msgstr ""
"Un intergiciel peut être conçu pour prendre en charge à la fois des "
"contextes :ref:`synchrones et asynchrones <async-middleware>`. Certains "
"intergiciels de Django sont conçus de cette manière, mais pas tous. Pour "
"voir quels sont les intergiciels que Django doit adapter, vous pouvez "
"activer la journalisation de débogage pour le journaliseur ``django."
"request`` et observer les messages mentionnant *« Asynchronous handler "
"adapted for middleware … »*."

msgid ""
"In both ASGI and WSGI mode, you can still safely use asynchronous support to "
"run code concurrently rather than serially. This is especially handy when "
"dealing with external APIs or data stores."
msgstr ""
"Que ce soit en mode ASGI ou WSGI, vous pouvez toujours exploiter la prise en "
"charge asynchrone de manière sûre pour exécuter du code de manière "
"concurrente plutôt qu'en série. C'est particulièrement pratique lorsqu'on "
"interagit avec des API externes ou des stockages de données."

msgid ""
"If you want to call a part of Django that is still synchronous, you will "
"need to wrap it in a :func:`sync_to_async` call. For example::"
msgstr ""
"Si vous souhaitez appeler une partie de Django qui est encore synchrone, il "
"vous faut l'envelopper dans un appel à :func:`sync_to_async`. Par exemple ::"

msgid ""
"If you accidentally try to call a part of Django that is synchronous-only "
"from an async view, you will trigger Django's :ref:`asynchronous safety "
"protection <async-safety>` to protect your data from corruption."
msgstr ""
"Si par accident vous essayez d'appeler une partie de Django qui est purement "
"synchrone à partir d'une vue asynchrone, vous déclencherez la :ref:"
"`protection de sécurité asynchrone <async-safety>` de Django qui vise à "
"protéger vos données d'une éventuelle corruption."

msgid "Decorators"
msgstr "Décorateurs"

msgid ""
"The following decorators can be used with both synchronous and asynchronous "
"view functions:"
msgstr ""
"Les décorateurs suivants peuvent être utilisés avec des fonctions de vues à "
"la fois synchrones et asynchrones :"

msgid ":func:`~django.views.decorators.cache.cache_control`"
msgstr ":func:`~django.views.decorators.cache.cache_control`"

msgid ":func:`~django.views.decorators.cache.never_cache`"
msgstr ":func:`~django.views.decorators.cache.never_cache`"

msgid ":func:`~django.views.decorators.common.no_append_slash`"
msgstr ":func:`~django.views.decorators.common.no_append_slash`"

msgid ":func:`~django.views.decorators.csrf.csrf_exempt`"
msgstr ":func:`~django.views.decorators.csrf.csrf_exempt`"

msgid ":func:`~django.views.decorators.csrf.csrf_protect`"
msgstr ":func:`~django.views.decorators.csrf.csrf_protect`"

msgid ":func:`~django.views.decorators.csrf.ensure_csrf_cookie`"
msgstr ":func:`~django.views.decorators.csrf.ensure_csrf_cookie`"

msgid ":func:`~django.views.decorators.csrf.requires_csrf_token`"
msgstr ":func:`~django.views.decorators.csrf.requires_csrf_token`"

msgid ":func:`~django.views.decorators.debug.sensitive_variables`"
msgstr ":func:`~django.views.decorators.debug.sensitive_variables`"

msgid ":func:`~django.views.decorators.debug.sensitive_post_parameters`"
msgstr ":func:`~django.views.decorators.debug.sensitive_post_parameters`"

msgid ":func:`~django.views.decorators.gzip.gzip_page`"
msgstr ":func:`~django.views.decorators.gzip.gzip_page`"

msgid ":func:`~django.views.decorators.http.condition`"
msgstr ":func:`~django.views.decorators.http.condition`"

msgid "``conditional_page()``"
msgstr "``conditional_page()``"

msgid ":func:`~django.views.decorators.http.etag`"
msgstr ":func:`~django.views.decorators.http.etag`"

msgid ":func:`~django.views.decorators.http.last_modified`"
msgstr ":func:`~django.views.decorators.http.last_modified`"

msgid ":func:`~django.views.decorators.http.require_http_methods`"
msgstr ":func:`~django.views.decorators.http.require_http_methods`"

msgid ":func:`~django.views.decorators.http.require_GET`"
msgstr ":func:`~django.views.decorators.http.require_GET`"

msgid ":func:`~django.views.decorators.http.require_POST`"
msgstr ":func:`~django.views.decorators.http.require_POST`"

msgid ":func:`~django.views.decorators.http.require_safe`"
msgstr ":func:`~django.views.decorators.http.require_safe`"

msgid ":func:`~django.views.decorators.vary.vary_on_cookie`"
msgstr ":func:`~django.views.decorators.vary.vary_on_cookie`"

msgid ":func:`~django.views.decorators.vary.vary_on_headers`"
msgstr ":func:`~django.views.decorators.vary.vary_on_headers`"

msgid "``xframe_options_deny()``"
msgstr "``xframe_options_deny()``"

msgid "``xframe_options_sameorigin()``"
msgstr "``xframe_options_sameorigin()``"

msgid "``xframe_options_exempt()``"
msgstr "``xframe_options_exempt()``"

msgid "For example::"
msgstr "Par exemple ::"

msgid "Queries & the ORM"
msgstr "Requêtes et ORM"

msgid ""
"With some exceptions, Django can run ORM queries asynchronously as well::"
msgstr ""
"À part quelques exceptions, Django peut aussi lancer des requêtes d'ORM de "
"manière asynchrone ::"

msgid "Detailed notes can be found in :ref:`async-queries`, but in short:"
msgstr ""
"Des notes détaillées peuvent être consultées dans :ref:`async-queries`, mais "
"en résumé :"

msgid ""
"All ``QuerySet`` methods that cause an SQL query to occur have an ``a``-"
"prefixed asynchronous variant."
msgstr ""
"Toutes les méthodes ``QuerySet`` générant une requête SQL possèdent une "
"variante asynchrone dotée du préfixe ``a``."

msgid ""
"``async for`` is supported on all QuerySets (including the output of "
"``values()`` and ``values_list()``.)"
msgstr ""
"``async for`` est pris en charge pour tous les QuerySets (y compris les "
"résultats de ``values()`` et ``values_list()``)."

msgid ""
"Django also supports some asynchronous model methods that use the database::"
msgstr ""
"Django prend également en charge certaines méthodes de modèles asynchrones "
"qui utilisent la base de données ::"

msgid ""
"Transactions do not yet work in async mode. If you have a piece of code that "
"needs transactions behavior, we recommend you write that piece as a single "
"synchronous function and call it using :func:`sync_to_async`."
msgstr ""
"Les transactions ne fonctionnent pas encore en mode asynchrone. Si vous "
"écrivez un bout de code nécessitant un comportement transactionnel, nous "
"vous recommandons de l'écrire sous forme d'une seule fonction synchrone et "
"de l'appeler avec :func:`sync_to_async`."

msgid "Performance"
msgstr "Performance"

msgid ""
"When running in a mode that does not match the view (e.g. an async view "
"under WSGI, or a traditional sync view under ASGI), Django must emulate the "
"other call style to allow your code to run. This context-switch causes a "
"small performance penalty of around a millisecond."
msgstr ""
"Lorsque vous fonctionnez dans un mode qui ne correspond pas à celui de la "
"vue (par ex. une vue asynchrone avec WSGI ou une vue synchrone "
"traditionnelle avec ASGI), Django doit émuler l'autre style d'appel pour "
"permettre au code de s'exécuter. Cette bascule de contexte provoque une "
"petite pénalité de performance d'environ une milliseconde."

msgid ""
"This is also true of middleware. Django will attempt to minimize the number "
"of context-switches between sync and async. If you have an ASGI server, but "
"all your middleware and views are synchronous, it will switch just once, "
"before it enters the middleware stack."
msgstr ""
"Ceci vaut aussi pour les intergiciels. Django essaie de minimiser le nombre "
"de bascules de contexte entre code synchrone et asynchrone. Si vous "
"fonctionnez avec un serveur ASGI mais que tous vos intergiciels et vues sont "
"synchrones, la bascule ne se fait qu'une fois, avant d'entrer dans la pile "
"des intergiciels."

msgid ""
"However, if you put synchronous middleware between an ASGI server and an "
"asynchronous view, it will have to switch into sync mode for the middleware "
"and then back to async mode for the view. Django will also hold the sync "
"thread open for middleware exception propagation. This may not be noticeable "
"at first, but adding this penalty of one thread per request can remove any "
"async performance advantage."
msgstr ""
"Cependant, si vous placez un intergiciel synchrone entre un serveur ASGI et "
"une vue asynchrone, Django devra basculer en mode synchrone pour "
"l'intergiciel puis revenir en mode asynchrone pour la vue. Il devra aussi "
"laisser le fil d'exécution synchrone ouvert pour la propagation des "
"exceptions d'intergiciel. Cela peut être d'abord à peine perceptible, mais "
"cet handicap d'un fil d'exécution par requête peut potentiellement supprimer "
"les avantages de la performance asynchrone."

msgid ""
"You should do your own performance testing to see what effect ASGI versus "
"WSGI has on your code. In some cases, there may be a performance increase "
"even for a purely synchronous codebase under ASGI because the request-"
"handling code is still all running asynchronously. In general you will only "
"want to enable ASGI mode if you have asynchronous code in your project."
msgstr ""
"Nous suggérons de faire vos propres tests de performance pour observer les "
"différences entre ASGI et WSGI avec votre code. Dans certains cas, les "
"performances peuvent être meilleures avec ASGI même pour une base de code "
"purement synchrone car le code de traitement des requêtes fonctionne "
"toujours de manière asynchrone. Mais en général, l'activation du mode ASGI "
"n'est profitable que si votre code contient du code asynchrone."

msgid "Handling disconnects"
msgstr "Gestion des déconnexions"

msgid ""
"For long-lived requests, a client may disconnect before the view returns a "
"response. In this case, an ``asyncio.CancelledError`` will be raised in the "
"view. You can catch this error and handle it if you need to perform any "
"cleanup::"
msgstr ""
"Pour les requêtes de longue durée, un client peut se déconnecter avant que "
"la vue renvoie une réponse. Dans ce cas, ``asyncio.CancelledError`` sera "
"générée dans la vue. Vous pouvez intercepter cette erreur et la traiter si "
"vous avez besoin d'effectuer un quelconque nettoyage ::"

msgid ""
"You can also :ref:`handle client disconnects in streaming responses <request-"
"response-streaming-disconnect>`."
msgstr ""
"Vous pouvez aussi :ref:`traiter les déconnexions de client dans les réponses "
"en flux <request-response-streaming-disconnect>`."

msgid "Async safety"
msgstr "Isolation de code asynchrone"

msgid ""
"Certain key parts of Django are not able to operate safely in an async "
"environment, as they have global state that is not coroutine-aware. These "
"parts of Django are classified as \"async-unsafe\", and are protected from "
"execution in an async environment. The ORM is the main example, but there "
"are other parts that are also protected in this way."
msgstr ""
"Certaines parties essentielles de Django ne sont pas capables d'opération de "
"manière sûre dans un environnement asynchrone, car elles se basent sur un "
"état global qui n'est pas compatible avec les coroutines. Ces parties de "
"Django sont classées comme non sûres pour l'asynchrone (« async-unsafe ») et "
"sont protégées contre l'exécution dans un environnement asynchrone. "
"L'exemple principal est l'ORM (dialogue avec les bases de données), mais "
"d'autres parties sont protégées de la même manière."

msgid ""
"If you try to run any of these parts from a thread where there is a *running "
"event loop*, you will get a :exc:`~django.core.exceptions."
"SynchronousOnlyOperation` error. Note that you don't have to be inside an "
"async function directly to have this error occur. If you have called a sync "
"function directly from an async function, without using :func:"
"`sync_to_async` or similar, then it can also occur. This is because your "
"code is still running in a thread with an active event loop, even though it "
"may not be declared as async code."
msgstr ""
"Si vous essayez d'exécuter l'une de ces parties depuis un fil d'exécution où "
"une *boucle événementielle s'exécute*, vous obtiendrez une erreur :exc:"
"`~django.core.exceptions.SynchronousOnlyOperation`. Notez que vous n'avez "
"pas besoin d'être directement dans une fonction asynchrone pour déclencher "
"cette erreur. Si vous avez appelé une fonction synchrone directement depuis "
"une fonction asynchrone sans utiliser :func:`sync_to_async` ou un "
"équivalent, cela peut alors aussi arriver, car votre code se trouve encore "
"dans un fil d'exécution avec une boucle événementielle active, même s'il "
"n'est pas déclaré comme code asynchrone."

msgid ""
"If you encounter this error, you should fix your code to not call the "
"offending code from an async context. Instead, write your code that talks to "
"async-unsafe functions in its own, sync function, and call that using :func:"
"`asgiref.sync.sync_to_async` (or any other way of running sync code in its "
"own thread)."
msgstr ""
"Si vous obtenez cette erreur, vous devriez corriger votre code pour qu'il "
"n'appelle pas le code de manière fautive depuis un contexte asynchrone. Au "
"lieu de cela, écrivez le code communiquant avec des fonctions non adaptées à "
"l'asynchrone dans sa propre fonction synchrone et en l'appelant par :func:"
"`asgiref.sync.sync_to_async` (ou toute autre méthode d'exécution de code "
"synchrone dans son propre fil d'exécution)."

msgid ""
"The async context can be imposed upon you by the environment in which you "
"are running your Django code. For example, Jupyter_ notebooks and IPython_ "
"interactive shells both transparently provide an active event loop so that "
"it is easier to interact with asynchronous APIs."
msgstr ""
"Le contexte asynchrone peut vous être imposé par l'environnement dans lequel "
"s'exécute le code Django. Par exemple, les carnets Jupyter_ et les shells "
"interactifs IPython_ fournissent tous deux de manière transparente une "
"boucle évènementielle active pour qu'il soit plus facile d'interagir avec "
"des API asynchrones."

msgid ""
"If you're using an IPython shell, you can disable this event loop by running:"
msgstr ""
"Si vous utilisez un shell IPython, vous pouvez désactiver cette boucle "
"évènementielle en exécutant :"

msgid ""
"as a command at the IPython prompt. This will allow you to run synchronous "
"code without generating :exc:`~django.core.exceptions."
"SynchronousOnlyOperation` errors; however, you also won't be able to "
"``await`` asynchronous APIs. To turn the event loop back on, run:"
msgstr ""
"comme commande à l'invite IPython. Cela permet d'exécuter du code synchrone "
"sans que des erreurs :exc:`~django.core.exceptions.SynchronousOnlyOperation` "
"se produisent ; cependant, vous ne serez pas non plus capable d'appeler des "
"API asynchrones par ``await``. Pour réactiver la boucle évènementielle, "
"exécutez :"

msgid ""
"If you're in an environment other than IPython (or you can't turn off "
"``autoawait`` in IPython for some reason), you are *certain* there is no "
"chance of your code being run concurrently, and you *absolutely* need to run "
"your sync code from an async context, then you can disable the warning by "
"setting the :envvar:`DJANGO_ALLOW_ASYNC_UNSAFE` environment variable to any "
"value."
msgstr ""
"Si vous vous trouvez dans un environnement autre que IPython (ou que vous ne "
"pouvez pas désactiver ``autoawait`` dans IPython pour une raison "
"quelconque), que vous êtes *certain* qu'il n'y a aucun risque que le code "
"soit lancé de manière concurrente et que vous avez *absolument* besoin de "
"lancer ce code synchrone à partir d'un contexte asynchrone, vous pouvez "
"alors désactiver l'avertissement en définissant la variable d'environnement :"
"envvar:`DJANGO_ALLOW_ASYNC_UNSAFE` à une valeur quelconque."

msgid ""
"If you enable this option and there is concurrent access to the async-unsafe "
"parts of Django, you may suffer data loss or corruption. Be very careful and "
"do not use this in production environments."
msgstr ""
"Si vous activez cette option et qu'un accès concurrent se produit sur des "
"parties de Django non adaptées à l'asynchrone, vous pourriez expérimenter "
"des pertes ou des corruptions de données. Soyez très prudent et n'utilisez "
"pas cela dans des environnements de production."

msgid ""
"If you need to do this from within Python, do that with ``os.environ``::"
msgstr ""
"Si vous devez faire cela depuis du code Python, faites-le avec ``os."
"environ``::"

msgid "Async adapter functions"
msgstr "Fonctions d'adaptation asynchrone"

msgid ""
"It is necessary to adapt the calling style when calling sync code from an "
"async context, or vice-versa. For this there are two adapter functions, from "
"the ``asgiref.sync`` module: :func:`async_to_sync` and :func:"
"`sync_to_async`. They are used to transition between the calling styles "
"while preserving compatibility."
msgstr ""
"Il est nécessaire d'adapter le style d'appel lors des appels de code "
"synchrone depuis un contexte asynchrone ou vice versa. Il existe pour cela "
"deux fonctions d'adaptation dans le module ``asgiref.sync``: :func:"
"`async_to_sync` et :func:`sync_to_async`. Elles sont utiles pour faire le "
"passage entre les styles d'appel tout en préservant la compatibilité."

msgid ""
"These adapter functions are widely used in Django. The :pypi:`asgiref` "
"package itself is part of the Django project, and it is automatically "
"installed as a dependency when you install Django with ``pip``."
msgstr ""
"Ces fonctions d'adaptation sont largement utilisées dans Django. Le paquet :"
"pypi:`asgiref` lui-même fait partie du projet Django et il est "
"automatiquement installé comme dépendance lorsqu'on installe Django avec "
"``pip``."

msgid "``async_to_sync()``"
msgstr "``async_to_sync()``"

msgid ""
"Takes an async function and returns a sync function that wraps it. Can be "
"used as either a direct wrapper or a decorator::"
msgstr ""
"Accepte une fonction asynchrone et renvoie une fonction synchrone qui "
"l'enveloppe. Peut être utilisée sous forme directe ou comme décorateur ::"

msgid ""
"The async function is run in the event loop for the current thread, if one "
"is present. If there is no current event loop, a new event loop is spun up "
"specifically for the single async invocation and shut down again once it "
"completes. In either situation, the async function will execute on a "
"different thread to the calling code."
msgstr ""
"La fonction asynchrone est exécutée dans la boucle événementielle du fil "
"d'exécution actuel, le cas échéant. S'il n'y a pas de boucle événementielle, "
"une nouvelle boucle est générée spécifiquement pour cette invocation "
"asynchrone unique et arrêtée dès que la fonction est terminée. Quelle que "
"soit la situation, la fonction asynchrone s'exécutera dans un fil "
"d'exécution différent de celui du code appelant."

msgid ""
"Threadlocals and contextvars values are preserved across the boundary in "
"both directions."
msgstr ""
"Les valeurs « threadlocals » et « contextvars » sont préservées de part et "
"d'autres des exécutions."

msgid ""
":func:`async_to_sync` is essentially a more powerful version of the :py:func:"
"`asyncio.run` function in Python's standard library. As well as ensuring "
"threadlocals work, it also enables the ``thread_sensitive`` mode of :func:"
"`sync_to_async` when that wrapper is used below it."
msgstr ""
":func:`async_to_sync` est fondamentalement une version plus puissante de la "
"fonction :py:func:`asyncio.run` de la bibliothèque Python standard. En plus "
"de s'assurer du fonctionnement de « threadlocals », elle active aussi le "
"mode ``thread_sensitive`` de :func:`sync_to_async` lorsque cette dernière "
"est utilisée en dessous d'elle."

msgid "``sync_to_async()``"
msgstr "``sync_to_async()``"

msgid ""
"Takes a sync function and returns an async function that wraps it. Can be "
"used as either a direct wrapper or a decorator::"
msgstr ""
"Accepte une fonction synchrone et renvoie une fonction asynchrone qui "
"l'enveloppe. Peut être utilisée sous forme directe ou comme décorateur ::"

msgid ""
"Sync functions tend to be written assuming they all run in the main thread, "
"so :func:`sync_to_async` has two threading modes:"
msgstr ""
"Les fonctions synchrones ont tendances à être écrites en partant du principe "
"qu'elles s'exécutent toutes dans le fil d'exécution principal, ce qui fait "
"que :func:`sync_to_async` dispose de deux modes d'exécution :"

msgid ""
"``thread_sensitive=True`` (the default): the sync function will run in the "
"same thread as all other ``thread_sensitive`` functions. This will be the "
"main thread, if the main thread is synchronous and you are using the :func:"
"`async_to_sync` wrapper."
msgstr ""
"``thread_sensitive=True`` (valeur par défaut) : la fonction synchrone sera "
"exécutée dans le même fil d'exécution que toutes les autres fonctions "
"``thread_sensitive``. Ce fil sera le fil principal si celui-ci est synchrone "
"et que vous utilisez la fonction enveloppeuse :func:`async_to_sync`."

msgid ""
"``thread_sensitive=False``: the sync function will run in a brand new thread "
"which is then closed once the invocation completes."
msgstr ""
"``thread_sensitive=False``: la fonction synchrone sera exécutée dans un tout "
"nouveau fil d'exécution qui sera ensuite détruit lorsque l'invocation sera "
"terminée."

msgid ""
"``asgiref`` version 3.3.0 changed the default value of the "
"``thread_sensitive`` parameter to ``True``. This is a safer default, and in "
"many cases interacting with Django the correct value, but be sure to "
"evaluate uses of ``sync_to_async()`` if updating ``asgiref`` from a prior "
"version."
msgstr ""
"La version 3.3.0 de ``asgiref`` a modifié la valeur par défaut du paramètre "
"``thread_sensitive`` à ``True``. Il s'agit d'une valeur par défaut plus sûre "
"et la bonne valeur dans de nombreuses situations d'interaction avec Django, "
"mais prenez soin d'évaluer les utilisations de ``sync_to_async()`` si vous "
"mettez à jour ``asgiref`` à partir d'une version plus ancienne."

msgid ""
"Thread-sensitive mode is quite special, and does a lot of work to run all "
"functions in the same thread. Note, though, that it *relies on usage of* :"
"func:`async_to_sync` *above it in the stack* to correctly run things on the "
"main thread. If you use ``asyncio.run()`` or similar, it will fall back to "
"running thread-sensitive functions in a single, shared thread, but this will "
"not be the main thread."
msgstr ""
"Le mode « thread-sensitive » est très spécial et fait beaucoup d'efforts "
"pour exécuter toutes les fonctions dans le même fil d'exécution. Notez "
"toutefois qu'il *compte sur l'utilisation de* :func:`async_to_sync` *au-"
"dessus de lui dans la pile d'appels* pour lancer les choses correctement "
"dans le fil d'exécution principal. Si vous utilisez ``asyncio.run()`` ou une "
"méthode semblable, il se limite à exécuter les fonctions dépendantes du fil "
"d'exécution dans un seul fil partagé, mais il ne s'agira pas du fil "
"d'exécution principal."

msgid ""
"The reason this is needed in Django is that many libraries, specifically "
"database adapters, require that they are accessed in the same thread that "
"they were created in. Also a lot of existing Django code assumes it all runs "
"in the same thread, e.g. middleware adding things to a request for later use "
"in views."
msgstr ""
"La raison de sa présence dans Django est que de nombreuses bibliothèques, "
"particulièrement les adaptateurs de base de données, exigent que leur accès "
"se fasse dans le même fil d'exécution dans lequel elles ont été créées. De "
"même, une grande quantité de code existant dans Django présuppose qu'il "
"s'exécute entièrement dans le même fil d'exécution, par ex. un intergiciel "
"ajoutant des éléments à une requête pour utilisation ultérieure dans les "
"vues."

msgid ""
"Rather than introduce potential compatibility issues with this code, we "
"instead opted to add this mode so that all existing Django sync code runs in "
"the same thread and thus is fully compatible with async mode. Note that sync "
"code will always be in a *different* thread to any async code that is "
"calling it, so you should avoid passing raw database handles or other thread-"
"sensitive references around."
msgstr ""
"Plutôt que d'introduire des problèmes potentiels de compatibilité avec ce "
"code, nous avons choisi d'ajouter ce mode afin que tout code synchrone "
"existant dans Django soit exécuté dans le même fil d'exécution et reste donc "
"pleinement compatible avec le mode asynchrone. Notez que le code synchrone "
"sera toujours exécuté dans un fil d'exécution *différent* du code asynchrone "
"appelant, ce qui implique que vous devez éviter de passer des pointeurs "
"bruts de base de données ou d'autres références sensibles au fil d'exécution."

msgid ""
"In practice this restriction means that you should not pass features of the "
"database ``connection`` object when calling ``sync_to_async()``. Doing so "
"will trigger the thread safety checks:"
msgstr ""
"En pratique, cette restriction signifie que vous ne devriez pas transmettre "
"des fonctionnalités de l'objet de base de données ``connection`` lors de "
"l'appel à ``sync_to_async()``. Si vous le faites, cela déclenchera les "
"contrôles de sécurité des fils d'exécution : "

msgid ""
"Rather, you should encapsulate all database access within a helper function "
"that can be called with ``sync_to_async()`` without relying on the "
"connection object in the calling code."
msgstr ""
"Au lieu de cela, vous devriez encapsuler tous les accès à la base de données "
"dans une fonction utilitaire pouvant être appelée par ``sync_to_async()`` "
"sans vous baser sur l'objet de connexion dans le code appelant."

msgid "Customizing authentication in Django"
msgstr "Personnalisation de l'authentification dans Django"

msgid ""
"The authentication that comes with Django is good enough for most common "
"cases, but you may have needs not met by the out-of-the-box defaults. "
"Customizing authentication in your projects requires understanding what "
"points of the provided system are extensible or replaceable. This document "
"provides details about how the auth system can be customized."
msgstr ""
"L'authentification livrée avec Django est suffisante dans la plupart des "
"cas, mais vous pouvez rencontrez des besoins qui ne sont pas couverts par la "
"solution proposée par défaut. Afin de personnaliser l'authentification pour "
"les besoins de vos projets, vous devez comprendre quels sont les points "
"d'ancrage permettant d'étendre et de remplacer les composants du système de "
"Django. Ce document fournit des détails sur la façon dont le système "
"d'authentification peut être adapté."

msgid ""
":ref:`Authentication backends <authentication-backends>` provide an "
"extensible system for when a username and password stored with the user "
"model need to be authenticated against a different service than Django's "
"default."
msgstr ""
"Les :ref:`moteurs d'authentification <authentication-backends>` permettent "
"d'adapter le système lorsque un nom d'utilisateur et un mot de passe stockés "
"dans le modèle d'utilisateur doivent servir à authentifier l'utilisateur "
"avec un autre service que celui par défaut de Django."

msgid ""
"You can give your models :ref:`custom permissions <custom-permissions>` that "
"can be checked through Django's authorization system."
msgstr ""
"Vous pouvez donner des :ref:`permissions personnalisées <custom-"
"permissions>` à vos modèles qui peuvent être vérifiées à travers le système "
"d'autorisation de Django."

msgid ""
"You can :ref:`extend <extending-user>` the default ``User`` model, or :ref:"
"`substitute <auth-custom-user>` a completely customized model."
msgstr ""
"Vous pouvez :ref:`étendre <extending-user>` le modèle ``User`` par défaut ou "
"le :ref:`substituer <auth-custom-user>` par un tout autre modèle "
"personnalisé. "

msgid "Other authentication sources"
msgstr "Autres sources d'authentification"

msgid ""
"There may be times you have the need to hook into another authentication "
"source -- that is, another source of usernames and passwords or "
"authentication methods."
msgstr ""
"Dans certaines situations, il peut être nécessaire de se connecter à une "
"autre source d'authentification, c'est-à-dire une autre source de noms "
"d'utilisateur et de mots de passe ou d'autres méthodes d'authentification."

msgid ""
"For example, your company may already have an LDAP setup that stores a "
"username and password for every employee. It'd be a hassle for both the "
"network administrator and the users themselves if users had separate "
"accounts in LDAP and the Django-based applications."
msgstr ""
"Par exemple, votre entreprise possède peut-être déjà une infrastructure LDAP "
"stockant les noms d'utilisateur et mots de passe pour tous ses employés. Il "
"serait fastidieux aussi bien pour l'administrateur réseau que pour les "
"utilisateurs eux-mêmes de devoir gérer des comptes séparés dans LDAP et dans "
"les applications basées sur Django."

msgid ""
"So, to handle situations like this, the Django authentication system lets "
"you plug in other authentication sources. You can override Django's default "
"database-based scheme, or you can use the default system in tandem with "
"other systems."
msgstr ""
"Ainsi, pour faire face à ce genre de situations, le système "
"d'authentification de Django vous permet de brancher d'autres sources "
"d'authentification. Vous pouvez surcharger le système par défaut de Django "
"basé sur la base de données ou vous pouvez utiliser le système par défaut en "
"parallèle avec d'autres systèmes."

msgid ""
"See the :ref:`authentication backend reference <authentication-backends-"
"reference>` for information on the authentication backends included with "
"Django."
msgstr ""
"Consultez la :ref:`référence sur les moteurs d'authentification "
"<authentication-backends-reference>` pour plus d'informations sur les "
"moteurs d'authentification intégrés à Django."

msgid "Specifying authentication backends"
msgstr "Définition de moteurs d'authentification"

msgid ""
"Behind the scenes, Django maintains a list of \"authentication backends\" "
"that it checks for authentication. When somebody calls :func:`django.contrib."
"auth.authenticate()` -- as described in :ref:`How to log a user in <how-to-"
"log-a-user-in>` -- Django tries authenticating across all of its "
"authentication backends. If the first authentication method fails, Django "
"tries the second one, and so on, until all backends have been attempted."
msgstr ""
"En arrière-plan, Django maintient une liste de « moteurs "
"d'authentification » qu'il sollicite lors de l'authentification. Lorsque "
"quelqu'un appelle :func:`django.contrib.auth.authenticate()` comme expliqué "
"ci-dessus dans :ref:`Comment connecter un utilisateur <how-to-log-a-user-"
"in>`, Django tente une authentification avec chaque moteur "
"d'authentification. Si la première méthode d'authentification échoue, Django "
"essaie avec la deuxième et ainsi de suite jusqu'à ce que tous les moteurs "
"aient été sollicités."

msgid ""
"The list of authentication backends to use is specified in the :setting:"
"`AUTHENTICATION_BACKENDS` setting. This should be a list of Python path "
"names that point to Python classes that know how to authenticate. These "
"classes can be anywhere on your Python path."
msgstr ""
"La liste des moteurs d'authentification à utiliser est définie dans le "
"réglage :setting:`AUTHENTICATION_BACKENDS`. Il doit s'agir d'une liste de "
"chemins Python vers des classes Python qui sont capables d'authentifier des "
"utilisateurs. Ces classes peuvent se trouver n'importe où dans votre chemin "
"Python."

msgid "By default, :setting:`AUTHENTICATION_BACKENDS` is set to::"
msgstr "Par défaut, :setting:`AUTHENTICATION_BACKENDS` contient ::"

msgid ""
"That's the basic authentication backend that checks the Django users "
"database and queries the built-in permissions. It does not provide "
"protection against brute force attacks via any rate limiting mechanism. You "
"may either implement your own rate limiting mechanism in a custom auth "
"backend, or use the mechanisms provided by most web servers."
msgstr ""
"Il s'agit du moteur d'authentification de base qui vérifie la base de "
"données Django des utilisateurs et interroge les permissions intégrées. Il "
"ne protège pas contre les attaques de force brute et n'utilise pas de "
"mécanisme de « rate limiting » (restriction du nombre de tentatives dans le "
"temps). Vous pouvez soit écrire votre propre mécanisme de restriction dans "
"un moteur d'authentification personnalisé ou utiliser les mécanismes offerts "
"par la plupart des serveurs Web."

msgid ""
"The order of :setting:`AUTHENTICATION_BACKENDS` matters, so if the same "
"username and password is valid in multiple backends, Django will stop "
"processing at the first positive match."
msgstr ""
"L'ordre dans la liste :setting:`AUTHENTICATION_BACKENDS` a son importance ; "
"si le même nom d'utilisateur et mot de passe est valable dans plusieurs "
"moteurs, Django s'arrête dès qu'un moteur a accepté les données "
"d'authentification."

msgid ""
"If a backend raises a :class:`~django.core.exceptions.PermissionDenied` "
"exception, authentication will immediately fail. Django won't check the "
"backends that follow."
msgstr ""
"Si un moteur génère une exception :class:`~django.core.exceptions."
"PermissionDenied`, l'authentification échouera immédiatement. Django ne "
"continue pas avec les moteurs suivants."

msgid ""
"Once a user has authenticated, Django stores which backend was used to "
"authenticate the user in the user's session, and reuses the same backend for "
"the duration of that session whenever access to the currently authenticated "
"user is needed. This effectively means that authentication sources are "
"cached on a per-session basis, so if you change :setting:"
"`AUTHENTICATION_BACKENDS`, you'll need to clear out session data if you need "
"to force users to re-authenticate using different methods. A simple way to "
"do that is to execute ``Session.objects.all().delete()``."
msgstr ""
"Dès qu'un utilisateur s'est authentifié, Django mémorise le moteur utilisé "
"pour authentifier cet utilisateur dans sa session ; il réutilise ensuite ce "
"même moteur pour toute la durée de la session chaque fois qu'il est "
"nécessaire d'accéder à l'utilisateur actuellement authentifié. Cela signifie "
"en pratique que les sources d'authentification sont mises en cache par "
"session et que si vous modifiez :setting:`AUTHENTICATION_BACKENDS`, vous "
"devrez réinitialiser les données de sessions dans le cas où vous voulez "
"forcer les utilisateurs à s'authentifier à nouveau en utilisant une autre "
"méthode. Une façon simple de faire cela est d'exécuter ``Session.objects."
"all().delete()``."

msgid "Writing an authentication backend"
msgstr "Écriture d'un moteur d'authentification"

msgid ""
"An authentication backend is a class that implements two required methods: "
"``get_user(user_id)`` and ``authenticate(request, **credentials)``, as well "
"as a set of optional permission related :ref:`authorization methods "
"<authorization_methods>`."
msgstr ""
"Un moteur d'authentification est une classe qui implémente obligatoirement "
"deux méthodes : ``get_user(user_id)`` et ``authenticate(request, "
"**credentials)``. Facultativement, elle peut aussi implémenter un ensemble "
"de :ref:`méthodes d'autorisation <authorization_methods>` liées aux "
"permissions."

msgid ""
"The ``get_user`` method takes a ``user_id`` -- which could be a username, "
"database ID or whatever, but has to be the primary key of your user object "
"-- and returns a user object or ``None``."
msgstr ""
"La méthode ``get_user`` accepte un paramètre ``user_id``, qui peut être un "
"nom d'utilisateur, un identifiant de base de données ou toute autre valeur, "
"mais qui doit représenter la clé primaire de votre objet utilisateur. Elle "
"renvoie un objet utilisateur ou ``None``."

msgid ""
"The ``authenticate`` method takes a ``request`` argument and credentials as "
"keyword arguments. Most of the time, it'll look like this::"
msgstr ""
"La méthode ``authenticate`` accepte un objet ``request`` et des données "
"d'authentification en paramètre. La plupart du temps, elle ressemblera à "
"ceci ::"

msgid "But it could also authenticate a token, like so::"
msgstr "Mais elle pourrait aussi authentifier avec un jeton, comme ceci ::"

msgid ""
"Either way, ``authenticate()`` should check the credentials it gets and "
"return a user object that matches those credentials if the credentials are "
"valid. If they're not valid, it should return ``None``."
msgstr ""
"D'une manière ou d'une autre, ``authenticate()`` doit vérifier les données "
"d'authentification qu'elle reçoit et, dans le cas où ces données sont "
"valides, elle doit renvoyer un objet utilisateur correspondant à ces "
"données. Dans le cas contraire, elle doit renvoyer ``None``."

msgid ""
"``request`` is an :class:`~django.http.HttpRequest` and may be ``None`` if "
"it wasn't provided to :func:`~django.contrib.auth.authenticate` (which "
"passes it on to the backend)."
msgstr ""
"``request`` est un objet :class:`~django.http.HttpRequest` et peut valoir "
"``None`` s'il n'a pas été fourni à :func:`~django.contrib.auth.authenticate` "
"(laquelle le transmet au moteur d'authentification)."

msgid ""
"The Django admin is tightly coupled to the Django :ref:`User object <user-"
"objects>`. The best way to deal with this is to create a Django ``User`` "
"object for each user that exists for your backend (e.g., in your LDAP "
"directory, your external SQL database, etc.) You can either write a script "
"to do this in advance, or your ``authenticate`` method can do it the first "
"time a user logs in."
msgstr ""
"Le site d'administration de Django est étroitement couplé à :ref:`l'objet "
"User <user-objects>` de Django. La meilleure façon de gérer cela est de "
"créer un objet Django ``User`` pour chaque utilisateur existant dans votre "
"moteur (par ex. dans votre annuaire LDAP, votre base de données SQL externe, "
"etc.). Vous pouvez soit écrire un script pour le faire de manière anticipée, "
"soit déléguer à votre méthode ``authenticate`` la création de l'objet "
"``User`` lors de chaque première connexion."

msgid ""
"Here's an example backend that authenticates against a username and password "
"variable defined in your ``settings.py`` file and creates a Django ``User`` "
"object the first time a user authenticates::"
msgstr ""
"Voici un exemple de moteur qui s'authentifie en fonction de variables nom "
"d'utilisateur et mot de passe définies dans votre fichier ``settings.py`` et "
"crée un objet ``User`` de Django lors de la première authentification de "
"l'utilisateur ::"

msgid "Handling authorization in custom backends"
msgstr "Gestion des autorisations dans les moteurs personnalisés"

msgid "Custom auth backends can provide their own permissions."
msgstr ""
"Les moteurs d'authentification personnalisés peuvent fournir leurs propres "
"permissions."

msgid ""
"The user model and its manager will delegate permission lookup functions (:"
"meth:`~django.contrib.auth.models.User.get_user_permissions()`, :meth:"
"`~django.contrib.auth.models.User.get_group_permissions()`, :meth:`~django."
"contrib.auth.models.User.get_all_permissions()`, :meth:`~django.contrib.auth."
"models.User.has_perm()`, :meth:`~django.contrib.auth.models.User."
"has_module_perms()`, and :meth:`~django.contrib.auth.models.UserManager."
"with_perm()`) to any authentication backend that implements these functions."
msgstr ""
"Le modèle utilisateur et son gestionnaire délèguent les fonctions de "
"consultation des permissions (:meth:`~django.contrib.auth.models.User."
"get_user_permissions()`, :meth:`~django.contrib.auth.models.User."
"get_group_permissions()`, :meth:`~django.contrib.auth.models.User."
"get_all_permissions()`, :meth:`~django.contrib.auth.models.User."
"has_perm()`, :meth:`~django.contrib.auth.models.User.has_module_perms()` et :"
"meth:`~django.contrib.auth.models.UserManager.with_perm()`) à tout moteur "
"d'authentification qui implémente ces fonctions."

msgid ""
"The permissions given to the user will be the superset of all permissions "
"returned by all backends. That is, Django grants a permission to a user that "
"any one backend grants."
msgstr ""
"Les permissions données à l'utilisateur sera un surensemble de toutes les "
"permissions renvoyées par tous les moteurs. Cela signifie que Django accorde "
"une permission à un utilisateur pour autant qu'au moins un moteur le "
"permette."

msgid ""
"If a backend raises a :class:`~django.core.exceptions.PermissionDenied` "
"exception in :meth:`~django.contrib.auth.models.User.has_perm()` or :meth:"
"`~django.contrib.auth.models.User.has_module_perms()`, the authorization "
"will immediately fail and Django won't check the backends that follow."
msgstr ""
"Si un moteur génère une exception :class:`~django.core.exceptions."
"PermissionDenied` dans :meth:`~django.contrib.auth.models.User.has_perm()` "
"ou :meth:`~django.contrib.auth.models.User.has_module_perms()`, "
"l'autorisation échouera immédiatement et Django ne continuera pas avec les "
"moteurs suivants."

msgid "A backend could implement permissions for the magic admin like this::"
msgstr ""
"Un moteur pourrait implémenter les permissions pour l'administrateur "
"« magique » comme ceci ::"

msgid ""
"This gives full permissions to the user granted access in the above example. "
"Notice that in addition to the same arguments given to the associated :class:"
"`django.contrib.auth.models.User` functions, the backend auth functions all "
"take the user object, which may be an anonymous user, as an argument."
msgstr ""
"Cela accorde toutes les permissions à l'utilisateur dont l'accès a été "
"accordé dans l'exemple précédent. Notez qu'en plus des mêmes paramètres "
"passés aux fonctions associées à :class:`django.contrib.auth.models.User`, "
"les fonctions du moteur d'authentification acceptent toutes en paramètre "
"l'objet utilisateur, qui pourrait être l'utilisateur anonyme."

msgid ""
"A full authorization implementation can be found in the ``ModelBackend`` "
"class in :source:`django/contrib/auth/backends.py`, which is the default "
"backend and queries the ``auth_permission`` table most of the time."
msgstr ""
"Une implémentation complète des autorisations se trouve dans la classe "
"``ModelBackend`` dans :source:`django/contrib/auth/backends.py`, qui "
"constitue le moteur par défaut et interroge la plupart du temps la table "
"``auth_permission``."

msgid "Authorization for anonymous users"
msgstr "Autorisation pour les utilisateurs anonymes"

msgid ""
"An anonymous user is one that is not authenticated i.e. they have provided "
"no valid authentication details. However, that does not necessarily mean "
"they are not authorized to do anything. At the most basic level, most "
"websites authorize anonymous users to browse most of the site, and many "
"allow anonymous posting of comments etc."
msgstr ""
"Un utilisateur anonyme est un utilisateur que ne s'est pas authentifié, "
"c'est-à-dire qu'il n'a fourni aucun détail d'authentification valide. "
"Cependant, cela ne signifie pas forcément qu'il ne reçoit aucune "
"autorisation. Au niveau le plus élémentaire, la plupart des sites Web "
"autorisent les utilisateurs anonymes à naviguer sur la plupart des pages du "
"site, et certains autorisent également l'envoi de commentaires, etc."

msgid ""
"Django's permission framework does not have a place to store permissions for "
"anonymous users. However, the user object passed to an authentication "
"backend may be an :class:`django.contrib.auth.models.AnonymousUser` object, "
"allowing the backend to specify custom authorization behavior for anonymous "
"users. This is especially useful for the authors of reusable apps, who can "
"delegate all questions of authorization to the auth backend, rather than "
"needing settings, for example, to control anonymous access."
msgstr ""
"Le système de permissions de Django ne prévoit pas d'endroit où stocker des "
"permissions pour les utilisateurs anonymes. Cependant, l'objet utilisateur "
"transmis au moteur d'authentification peut être un objet :class:`django."
"contrib.auth.models.AnonymousUser` permettant au moteur de définir un "
"comportement d'autorisation spécifique aux utilisateurs anonymes. C'est "
"particulièrement utile pour les auteurs d'applications réutilisables qui "
"peuvent déléguer toutes les questions d'autorisations au moteur "
"d'authentification, plutôt que, par exemple, d'exiger des réglages pour "
"contrôler les droits d'accès anonymes."

msgid "Authorization for inactive users"
msgstr "Autorisation pour les utilisateurs inactifs"

msgid ""
"An inactive user is one that has its :attr:`~django.contrib.auth.models.User."
"is_active` field set to ``False``. The :class:`~django.contrib.auth.backends."
"ModelBackend` and :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"authentication backends prohibits these users from authenticating. If a "
"custom user model doesn't have an :attr:`~django.contrib.auth.models."
"CustomUser.is_active` field, all users will be allowed to authenticate."
msgstr ""
"Un utilisateur inactif est un utilisateur dont le champ :attr:`~django."
"contrib.auth.models.User.is_active` est défini à ``False``. Les moteurs "
"d'authentification :class:`~django.contrib.auth.backends.ModelBackend` and :"
"class:`~django.contrib.auth.backends.RemoteUserBackend` interdisent à ces "
"utilisateurs de s'authentifier. Si un modèle d'utilisateur personnalisé ne "
"possède pas de champ :attr:`~django.contrib.auth.models.CustomUser."
"is_active`, tous les utilisateurs seront autorisés à s'authentifier."

msgid ""
"You can use :class:`~django.contrib.auth.backends.AllowAllUsersModelBackend` "
"or :class:`~django.contrib.auth.backends.AllowAllUsersRemoteUserBackend` if "
"you want to allow inactive users to authenticate."
msgstr ""
"Vous pouvez utiliser :class:`~django.contrib.auth.backends."
"AllowAllUsersModelBackend` ou :class:`~django.contrib.auth.backends."
"AllowAllUsersRemoteUserBackend` si vous souhaitez permettre aux utilisateurs "
"inactifs de s'authentifier."

msgid ""
"The support for anonymous users in the permission system allows for a "
"scenario where anonymous users have permissions to do something while "
"inactive authenticated users do not."
msgstr ""
"La prise en charge des utilisateurs anonymes dans le système des permissions "
"permet d'imaginer un scénario où les utilisateurs anonymes ont certaines "
"permissions que les utilisateurs authentifiés inactifs n'ont pas."

msgid ""
"Do not forget to test for the ``is_active`` attribute of the user in your "
"own backend permission methods."
msgstr ""
"N'oubliez pas de tester l'attribut ``is_active`` de l'utilisateur dans les "
"méthodes de votre propre moteur de permissions."

msgid "Handling object permissions"
msgstr "Gestion des permissions sur les objets"

msgid ""
"Django's permission framework has a foundation for object permissions, "
"though there is no implementation for it in the core. That means that "
"checking for object permissions will always return ``False`` or an empty "
"list (depending on the check performed). An authentication backend will "
"receive the keyword parameters ``obj`` and ``user_obj`` for each object "
"related authorization method and can return the object level permission as "
"appropriate."
msgstr ""
"Le système de permissions de Django pose les fondations pour des permissions "
"sur les objets, même s'il n'existe pas d'implémentation concrète dans le "
"cœur de Django. Cela signifie que le contrôle des permissions sur les objets "
"renvoie toujours ``False`` ou une liste vide (selon le contrôle effectué). "
"Un moteur d'authentification reçoit les paramètres nommés ``obj`` et "
"``user_obj`` pour chaque méthode d'autorisation liée aux objets et peut "
"renvoyer les permissions au niveau des objets comme il convient."

msgid "Custom permissions"
msgstr "Permissions personnalisées"

msgid ""
"To create custom permissions for a given model object, use the "
"``permissions`` :ref:`model Meta attribute <meta-options>`."
msgstr ""
"Pour créer des permissions personnalisées pour un objet modèle donné, "
"utilisez l’:ref:`attribut Meta <meta-options>` ``permissions`` du modèle`."

msgid ""
"This example ``Task`` model creates two custom permissions, i.e., actions "
"users can or cannot do with ``Task`` instances, specific to your "
"application::"
msgstr ""
"Ce modèle d'exemple ``Task`` crée deux permissions personnalisées, c'est-à-"
"dire des actions que les utilisateurs peuvent effectuer ou non avec les "
"instances ``Task``, spécifiquement à votre application ::"

msgid ""
"The only thing this does is create those extra permissions when you run :"
"djadmin:`manage.py migrate <migrate>` (the function that creates permissions "
"is connected to the :data:`~django.db.models.signals.post_migrate` signal). "
"Your code is in charge of checking the value of these permissions when a "
"user is trying to access the functionality provided by the application "
"(changing the status of tasks or closing tasks.) Continuing the above "
"example, the following checks if a user may close tasks::"
msgstr ""
"La seule conséquence de ce code est la création de ces permissions "
"supplémentaires lors du lancement de :djadmin:`manage.py migrate <migrate>` "
"(la fonction qui crée les permissions est connectée au signal :data:`~django."
"db.models.signals.post_migrate`). Votre code a ensuite la charge de "
"contrôler la valeur de ces permissions lorsqu'un utilisateur essaie "
"d'accéder à la fonctionnalité fournie par l'application (modification de "
"l'état des tâches ou fermeture des tâches). En poursuivant sur l'exemple "
"précédent, le code suivant contrôle si un utilisateur peut fermer les "
"tâches ::"

msgid "Extending the existing ``User`` model"
msgstr "Extension du modèle ``User`` existant"

msgid ""
"There are two ways to extend the default :class:`~django.contrib.auth.models."
"User` model without substituting your own model. If the changes you need are "
"purely behavioral, and don't require any change to what is stored in the "
"database, you can create a :ref:`proxy model <proxy-models>` based on :class:"
"`~django.contrib.auth.models.User`. This allows for any of the features "
"offered by proxy models including default ordering, custom managers, or "
"custom model methods."
msgstr ""
"Il existe deux manières d'étendre le modèle :class:`~django.contrib.auth."
"models.User` par défaut sans le substituer par votre propre modèle. Si les "
"modifications requises sont purement comportementales et ne nécessitent pas "
"de modifier ce qui est stocké dans la base de données, vous pouvez créer un :"
"ref:`modèle mandataire <proxy-models>` basé sur :class:`~django.contrib.auth."
"models.User`. Ceci expose toutes les fonctionnalités offertes par les "
"modèles mandataires, y compris l'ordre de tri par défaut, les gestionnaires "
"personnalisés ou les méthodes de modèle personnalisées."

msgid ""
"If you wish to store information related to ``User``, you can use a :class:"
"`~django.db.models.OneToOneField` to a model containing the fields for "
"additional information. This one-to-one model is often called a profile "
"model, as it might store non-auth related information about a site user. For "
"example you might create an Employee model::"
msgstr ""
"Si vous souhaitez stocker des informations liées au modèle ``User``, vous "
"pouvez utiliser une relation :class:`~django.db.models.OneToOneField` vers "
"un modèle contenant les champs correspondant aux informations "
"supplémentaires. Ce modèle un-à-un est souvent appelé un modèle de profil, "
"car il peut stocker des informations non liées à l'authentification au sujet "
"d'un utilisateur du site. Par exemple, vous pouvez créer un modèle "
"``Employee``::"

msgid ""
"Assuming an existing Employee Fred Smith who has both a User and Employee "
"model, you can access the related information using Django's standard "
"related model conventions:"
msgstr ""
"En supposant qu'il existe un employé Fred Smith référencé à la fois par un "
"modèle ``User`` et un modèle ``Employee``, vous pouvez accéder aux "
"informations liées en utilisant les conventions standards des modèles liés "
"de Django :"

msgid ""
"To add a profile model's fields to the user page in the admin, define an :"
"class:`~django.contrib.admin.InlineModelAdmin` (for this example, we'll use "
"a :class:`~django.contrib.admin.StackedInline`) in your app's ``admin.py`` "
"and add it to a ``UserAdmin`` class which is registered with the :class:"
"`~django.contrib.auth.models.User` class::"
msgstr ""
"Pour ajouter les champs du modèle de profil à la page de l'utilisateur dans "
"l'interface d'administration, définissez un :class:`~django.contrib.admin."
"InlineModelAdmin` (pour cet exemple, nous utiliserons un :class:`~django."
"contrib.admin.StackedInline`) dans le fichier ``admin.py`` de votre "
"application et ajoutez-le à une classe ``UserAdmin`` qui sera enregistrée "
"avec la classe :class:`~django.contrib.auth.models.User`::"

msgid ""
"These profile models are not special in any way - they are just Django "
"models that happen to have a one-to-one link with a user model. As such, "
"they aren't auto created when a user is created, but a :attr:`django.db."
"models.signals.post_save` could be used to create or update related models "
"as appropriate."
msgstr ""
"Ces modèles de profil n'ont aucune particularité, ce ne sont que des modèles "
"Django qui possèdent un lien un-à-un avec un modèle d'utilisateur. En tant "
"que tels, ils ne sont pas automatiquement créés lorsqu'un utilisateur est "
"créé, mais il est possible de profiter du signal :attr:`django.db.models."
"signals.post_save` pour créer ou mettre à jour les modèles liés selon les "
"besoins."

msgid ""
"Using related models results in additional queries or joins to retrieve the "
"related data. Depending on your needs, a custom user model that includes the "
"related fields may be your better option, however, existing relations to the "
"default user model within your project's apps may justify the extra database "
"load."
msgstr ""
"L'utilisation de modèles liés provoque des requêtes ou des jointures "
"supplémentaires pour récupérer les données liées. En fonction de vos "
"besoins, il peut être préférable d'utiliser un modèle d'utilisateur "
"personnalisé possédant les champs liés supplémentaires. Cependant, des liens "
"existants vers le modèle d'utilisateur par défaut dans les applications de "
"votre projet pourraient justifier la charge supplémentaire sur la base de "
"données."

msgid "Substituting a custom ``User`` model"
msgstr "Substitution par un modèle ``User`` personnalisé"

msgid ""
"Some kinds of projects may have authentication requirements for which "
"Django's built-in :class:`~django.contrib.auth.models.User` model is not "
"always appropriate. For instance, on some sites it makes more sense to use "
"an email address as your identification token instead of a username."
msgstr ""
"Certains types de projets ont des exigences en terme d'authentification pour "
"lesquelles le modèle :class:`~django.contrib.auth.models.User` intégré de "
"Django ne convient pas toujours. Par exemple, certains sites préfèrent "
"utiliser l'adresse électronique comme identifiant d'identification plutôt "
"qu'un nom d'utilisateur."

msgid ""
"Django allows you to override the default user model by providing a value "
"for the :setting:`AUTH_USER_MODEL` setting that references a custom model::"
msgstr ""
"Django permet de surcharger le modèle d'utilisateur par défaut en attribuant "
"une valeur au réglage :setting:`AUTH_USER_MODEL` se référant à un modèle "
"personnalisé ::"

msgid ""
"This dotted pair describes the :attr:`~django.apps.AppConfig.label` of the "
"Django app (which must be in your :setting:`INSTALLED_APPS`), and the name "
"of the Django model that you wish to use as your user model."
msgstr ""
"Cette syntaxe pointée spécifie le attr:`~django.apps.AppConfig.label` de "
"l'application Django (qui doit figurer dans :setting:`INSTALLED_APPS`) et le "
"nom du modèle Django que vous souhaitez utiliser comme modèle d'utilisateur."

msgid "Using a custom user model when starting a project"
msgstr ""
"Utilisation d'un modèle d'utilisateur personnalisé au départ d'un projet"

msgid ""
"If you're starting a new project, it's highly recommended to set up a custom "
"user model, even if the default :class:`~django.contrib.auth.models.User` "
"model is sufficient for you. This model behaves identically to the default "
"user model, but you'll be able to customize it in the future if the need "
"arises::"
msgstr ""
"Si vous démarrez un nouveau projet, il est fortement recommandé de définir "
"un modèle d'utilisateur personnalisé, même si le modèle :class:`~django."
"contrib.auth.models.User` par défaut convient à vos besoins. Ce modèle se "
"comportera comme le modèle d'utilisateur par défaut, mais vous serez en "
"mesure de le personnaliser plus tard si le besoin devait se présenter ::"

msgid ""
"Don't forget to point :setting:`AUTH_USER_MODEL` to it. Do this before "
"creating any migrations or running ``manage.py migrate`` for the first time."
msgstr ""
"N'oubliez pas de faire pointer :setting:`AUTH_USER_MODEL` vers ce modèle. "
"Faites-le avant de créer les premières migrations ou de lancer ``manage.py "
"migrate`` pour la première fois."

msgid "Also, register the model in the app's ``admin.py``::"
msgstr ""
"De plus, inscrivez le modèle dans le fichier ``admin.py`` de l'application ::"

msgid "Changing to a custom user model mid-project"
msgstr ""
"Conversion vers un modèle d'utilisateur personnalisé en cours de projet"

msgid ""
"Changing :setting:`AUTH_USER_MODEL` after you've created database tables is "
"significantly more difficult since it affects foreign keys and many-to-many "
"relationships, for example."
msgstr ""
"La modification de :setting:`AUTH_USER_MODEL` après avoir créé les tables de "
"base de données est notoirement plus difficile car cela affecte les clés "
"étrangères et les relations plusieurs-à-plusieurs, par exemple."

msgid ""
"This change can't be done automatically and requires manually fixing your "
"schema, moving your data from the old user table, and possibly manually "
"reapplying some migrations. See :ticket:`25313` for an outline of the steps."
msgstr ""
"Cette modification ne peut pas être automatisée et nécessite une "
"intervention manuelle sur le schéma, en déplaçant les données depuis "
"l'ancienne table des utilisateurs et peut-être même en réappliquant "
"manuellement certaines migrations. Voir :ticket:`25313` pour un aperçu des "
"étapes à suivre."

msgid ""
"Due to limitations of Django's dynamic dependency feature for swappable "
"models, the model referenced by :setting:`AUTH_USER_MODEL` must be created "
"in the first migration of its app (usually called ``0001_initial``); "
"otherwise, you'll have dependency issues."
msgstr ""
"En raison des limites de Django liées à la fonctionnalité de dépendance "
"dynamique pour les modèles remplaçables à chaud, le modèle référencé par :"
"setting:`AUTH_USER_MODEL` doit être créé lors de la première migration de "
"son application (généralement appelée ``0001_initial``) ; sinon, vous aurez "
"des problèmes de dépendances."

msgid ""
"In addition, you may run into a ``CircularDependencyError`` when running "
"your migrations as Django won't be able to automatically break the "
"dependency loop due to the dynamic dependency. If you see this error, you "
"should break the loop by moving the models depended on by your user model "
"into a second migration. (You can try making two normal models that have a "
"``ForeignKey`` to each other and seeing how ``makemigrations`` resolves that "
"circular dependency if you want to see how it's usually done.)"
msgstr ""
"En outre, vous pouvez rencontrer une erreur ``CircularDependencyError`` lors "
"de l'exécution des migrations lorsque Django n'est pas en mesure de briser "
"automatiquement la boucle de dépendance en raison de la dépendance "
"dynamique. Si vous rencontrez cette erreur, vous devez rompre la boucle en "
"déplaçant les modèles dont dépend votre modèle d'utilisateur dans une "
"deuxième migration (vous pouvez essayer de faire deux modèles normaux qui "
"ont une clé ``ForeignKey`` l'un vers l'autre et voir comment "
"``makemigrations`` résout la dépendance circulaire si vous voulez voir "
"comment cela se passe habituellement)."

msgid "Reusable apps and ``AUTH_USER_MODEL``"
msgstr "Applications réutilisables et ``AUTH_USER_MODEL``"

msgid ""
"Reusable apps shouldn't implement a custom user model. A project may use "
"many apps, and two reusable apps that implemented a custom user model "
"couldn't be used together. If you need to store per user information in your "
"app, use a :class:`~django.db.models.ForeignKey` or :class:`~django.db."
"models.OneToOneField` to ``settings.AUTH_USER_MODEL`` as described below."
msgstr ""
"Les applications réutilisables ne devraient pas implémenter de modèle "
"d'utilisateur personnalisé. Un projet peut utiliser beaucoup d'applications, "
"et deux applications réutilisables qui implémenteraient chacune un modèle "
"d'utilisateur personnalisé ne pourraient pas être utilisées conjointement. "
"Si vous avez besoin de stocker des informations liées aux utilisateurs dans "
"une application, utilisez une liaison :class:`~django.db.models.ForeignKey` "
"ou :class:`~django.db.models.OneToOneField` vers ``settings."
"AUTH_USER_MODEL`` comme expliqué ci-dessous."

msgid "Referencing the ``User`` model"
msgstr "Références au modèle ``User``"

msgid ""
"If you reference :class:`~django.contrib.auth.models.User` directly (for "
"example, by referring to it in a foreign key), your code will not work in "
"projects where the :setting:`AUTH_USER_MODEL` setting has been changed to a "
"different user model."
msgstr ""
"Si vous référencez directement :class:`~django.contrib.auth.models.User` "
"(par exemple dans une clé étrangère), votre code ne fonctionnera pas dans "
"des projets où le réglage :setting:`AUTH_USER_MODEL` a été défini à un autre "
"modèle d'utilisateur."

msgid ""
"Instead of referring to :class:`~django.contrib.auth.models.User` directly, "
"you should reference the user model using ``django.contrib.auth."
"get_user_model()``. This method will return the currently active user model "
"-- the custom user model if one is specified, or :class:`~django.contrib."
"auth.models.User` otherwise."
msgstr ""
"Au lieu de faire directement référence à  :class:`~django.contrib.auth."
"models.User`, il est préférable de référencer le modèle d'utilisateur en "
"utilisant ``django.contrib.auth.get_user_model()``. Cette méthode renvoie le "
"modèle d'utilisateur actuellement actif, soit le modèle personnalisé s'il a "
"été défini, soit :class:`~django.contrib.auth.models.User`."

msgid ""
"When you define a foreign key or many-to-many relations to the user model, "
"you should specify the custom model using the :setting:`AUTH_USER_MODEL` "
"setting. For example::"
msgstr ""
"Lorsque vous définissez une clé étrangère ou des relations plusieurs-à-"
"plusieurs vers le modèle d'utilisateur, vous devriez indiquer le modèle "
"personnalisé au moyen du réglage :setting:`AUTH_USER_MODEL`. Par exemple ::"

msgid ""
"When connecting to signals sent by the user model, you should specify the "
"custom model using the :setting:`AUTH_USER_MODEL` setting. For example::"
msgstr ""
"Lorsque vous vous connectez aux signaux envoyés par le modèle d'utilisateur, "
"vous devriez indiquer le modèle personnalisé au moyen du réglage :setting:"
"`AUTH_USER_MODEL`. Par exemple ::"

msgid ""
"Generally speaking, it's easiest to refer to the user model with the :"
"setting:`AUTH_USER_MODEL` setting in code that's executed at import time, "
"however, it's also possible to call ``get_user_model()`` while Django is "
"importing models, so you could use ``models."
"ForeignKey(get_user_model(), ...)``."
msgstr ""
"En règle générale, il est plus facile de se référer au modèle d'utilisateur "
"avec le réglage :setting:`AUTH_USER_MODEL` dans tout code exécuté au moment "
"de l'importation. Cependant, il est aussi possible d'appeler "
"``get_user_model()`` pendant que Django est en train d'importer les modèles. "
"Il est donc possible d'écrire ``models.ForeignKey(get_user_model(), ...)``."

msgid ""
"If your app is tested with multiple user models, using "
"``@override_settings(AUTH_USER_MODEL=...)`` for example, and you cache the "
"result of ``get_user_model()`` in a module-level variable, you may need to "
"listen to the  :data:`~django.test.signals.setting_changed` signal to clear "
"the cache. For example::"
msgstr ""
"Si votre application est testée avec plusieurs modèles d'utilisateur, par "
"exemple en utilisant ``@override_settings(AUTH_USER_MODEL=...)``, et que "
"vous conserviez en cache le résultat de ``get_user_model()`` dans une "
"variable au niveau du module, il serait alors nécessaire d'écouter le "
"signal  :data:`~django.test.signals.setting_changed` pour réinitialiser le "
"cache. Par exemple ::"

msgid "Specifying a custom user model"
msgstr "Indication d'une modèle d'utilisateur personnalisé"

msgid ""
"When you start your project with a custom user model, stop to consider if "
"this is the right choice for your project."
msgstr ""
"Lorsque vous démarrez votre projet avec votre propre modèle d'utilisateur, "
"prenez le temps de considérer s'il s'agit du bon choix pour votre projet."

msgid ""
"Keeping all user related information in one model removes the need for "
"additional or more complex database queries to retrieve related models. On "
"the other hand, it may be more suitable to store app-specific user "
"information in a model that has a relation with your custom user model. That "
"allows each app to specify its own user data requirements without "
"potentially conflicting or breaking assumptions by other apps. It also means "
"that you would keep your user model as simple as possible, focused on "
"authentication, and following the minimum requirements Django expects custom "
"user models to meet."
msgstr ""
"En conservant toutes les informations liées à un utilisateur dans un seul "
"modèle, on évite de devoir faire recours à des requêtes de base de données "
"supplémentaires ou plus complexes pour récupérer d'éventuels modèles liés. "
"D'un autre côté, il peut être plus adéquat de stocker les informations "
"utilisateurs spécifiques à une application dans un modèle ayant une relation "
"avec le modèle utilisateur personnalisé. Cela permet à chaque application de "
"définir ses propres exigences en terme de données utilisateurs sans risquer "
"de potentiels conflits ou de casser des comportements attendus par d'autres "
"applications. Cela permet aussi de conserver le modèle utilisateur aussi "
"simple que possible, ciblé sur l'authentification et se limitant aux "
"exigences minimales que Django attend des modèles utilisateurs personnalisés."

msgid ""
"If you use the default authentication backend, then your model must have a "
"single unique field that can be used for identification purposes. This can "
"be a username, an email address, or any other unique attribute. A non-unique "
"username field is allowed if you use a custom authentication backend that "
"can support it."
msgstr ""
"Si vous utilisez le moteur d'authentification par défaut, le modèle doit "
"alors comporter un seul champ unique pouvant être utilisé pour "
"l'identification. Cela peut être un nom d'utilisateur, une adresse "
"électronique ou tout autre attribut unique. Un champ de nom d'utilisateur "
"non unique est autorisé si vous utilisez un moteur d'authentification "
"personnalisé qui le prend en charge."

msgid ""
"The easiest way to construct a compliant custom user model is to inherit "
"from :class:`~django.contrib.auth.models.AbstractBaseUser`. :class:`~django."
"contrib.auth.models.AbstractBaseUser` provides the core implementation of a "
"user model, including hashed passwords and tokenized password resets. You "
"must then provide some key implementation details:"
msgstr ""
"La manière la plus simple de construire un modèle d'utilisateur personnalisé "
"en respectant les contraintes est d'hériter de :class:`~django.contrib.auth."
"models.AbstractBaseUser`. La classe :class:`~django.contrib.auth.models."
"AbstractBaseUser` fournit l'implémentation de base d'un modèle "
"d'utilisateur, y compris les mots de passe hachés et les jetons de "
"réinitialisation des mots de passe. Vous devez ensuite fournir les détails "
"d'implémentation critiques :"

msgid ""
"A string describing the name of the field on the user model that is used as "
"the unique identifier. This will usually be a username of some kind, but it "
"can also be an email address, or any other unique identifier. The field "
"*must* be unique (e.g. have ``unique=True`` set in its definition), unless "
"you use a custom authentication backend that can support non-unique "
"usernames."
msgstr ""
"Une chaîne contenant le nom du champ du modèle d'utilisateur utilisé comme "
"identifiant unique. C'est normalement quelque chose comme un nom "
"d'utilisateur ou une adresse électronique, ou encore tout autre identifiant "
"unique. Ce champ *doit* être unique (par ex. avoir ``unique=True`` dans sa "
"définition), sauf dans le cas où vous utilisez un moteur d'authentification "
"personnalisé qui sait gérer les noms d'utilisateur non uniques."

msgid ""
"In the following example, the field ``identifier`` is used as the "
"identifying field::"
msgstr ""
"Dans l'exemple suivant, le champ ``identifier`` est utilisé comme champ "
"d'identification ::"

msgid ""
"A string describing the name of the email field on the ``User`` model. This "
"value is returned by :meth:`~models.AbstractBaseUser.get_email_field_name`."
msgstr ""
"Une chaîne décrivant le nom du champ courriel du modèle ``User``. Cette "
"valeur est renvoyée par :meth:`~models.AbstractBaseUser."
"get_email_field_name`."

msgid ""
"A list of the field names that will be prompted for when creating a user via "
"the :djadmin:`createsuperuser` management command. The user will be prompted "
"to supply a value for each of these fields. It must include any field for "
"which :attr:`~django.db.models.Field.blank` is ``False`` or undefined and "
"may include additional fields you want prompted for when a user is created "
"interactively. ``REQUIRED_FIELDS`` has no effect in other parts of Django, "
"like creating a user in the admin."
msgstr ""
"Une liste de noms de champs qui devront être renseignés lors de la création "
"d'un utilisateur par la commande de gestion :djadmin:`createsuperuser`. La "
"commande demandera de fournir une valeur pour chacun de ces champs. Cette "
"liste doit contenir tous les champs pour lesquels l'attribut  :attr:`~django."
"db.models.Field.blank` est ``False`` ou non défini, et peut inclure des "
"champs supplémentaires pour lesquels vous souhaitez que l'utilisateur donne "
"une valeur lorsqu'un utilisateur est créé de manière interactive. "
"``REQUIRED_FIELDS`` n'a aucun effet dans d'autres parties de Django, comme "
"lors de la création d'un utilisateur par l'interface d'administration."

msgid ""
"For example, here is the partial definition for a user model that defines "
"two required fields - a date of birth and height::"
msgstr ""
"Par exemple, voici la définition partielle d'un modèle d'utilisateur "
"définissant deux champs obligatoires, une date de naissance et une hauteur ::"

msgid ""
"``REQUIRED_FIELDS`` must contain all required fields on your user model, but "
"should *not* contain the ``USERNAME_FIELD`` or ``password`` as these fields "
"will always be prompted for."
msgstr ""
"``REQUIRED_FIELDS`` doit contenir tous les champs obligatoires de votre "
"modèle d'utilisateur, mais ne doit *pas* contenir le champ "
"``USERNAME_FIELD`` ni le champ ``password`` car de toute façon, il faudra "
"fournir des valeurs pour ces champs."

msgid ""
"A boolean attribute that indicates whether the user is considered "
"\"active\".  This attribute is provided as an attribute on "
"``AbstractBaseUser`` defaulting to ``True``. How you choose to implement it "
"will depend on the details of your chosen auth backends. See the "
"documentation of the :attr:`is_active attribute on the built-in user model "
"<django.contrib.auth.models.User.is_active>` for details."
msgstr ""
"Un attribut booléen indiquant si l'utilisateur est considéré comme "
"« actif ». Cet attribut est fournit comme attribut de ``AbstractBaseUser`` "
"et valant ``True`` par défaut. La manière dont vous allez l'implémenter "
"dépendra des détails des moteurs d'authentification choisis. Consultez la "
"documentation de l’:attr:`attribut is_active <django.contrib.auth.models."
"User.is_active>` du modèle d'utilisateur intégré pour plus de détails."

msgid ""
"Optional. A longer formal identifier for the user such as their full name. "
"If implemented, this appears alongside the username in an object's history "
"in :mod:`django.contrib.admin`."
msgstr ""
"Facultatif. Un identifiant formel plus long pour l'utilisateur comme par "
"exemple son nom complet. Si implémenté, il apparaît avec le nom "
"d'utilisateur dans l'historique d'objets dans :mod:`django.contrib.admin`."

msgid ""
"Optional. A short, informal identifier for the user such as their first "
"name. If implemented, this replaces the username in the greeting to the user "
"in the header of :mod:`django.contrib.admin`."
msgstr ""
"Facultatif. Un identifiant informel court pour l'utilisateur comme par "
"exemple son prénom. Si implémenté, il remplace le nom d'utilisateur dans la "
"salutation de l'utilisateur dans l'en-tête du site :mod:`django.contrib."
"admin`."

msgid "Importing ``AbstractBaseUser``"
msgstr "Importation de ``AbstractBaseUser``"

msgid ""
"``AbstractBaseUser`` and ``BaseUserManager`` are importable from ``django."
"contrib.auth.base_user`` so that they can be imported without including "
"``django.contrib.auth`` in :setting:`INSTALLED_APPS`."
msgstr ""
"``AbstractBaseUser`` et ``BaseUserManager`` peuvent être importés à partir "
"de ``django.contrib.auth.base_user`` afin qu'ils puissent être importés sans "
"devoir inclure ``django.contrib.auth`` dans :setting:`INSTALLED_APPS`."

msgid ""
"The following attributes and methods are available on any subclass of :class:"
"`~django.contrib.auth.models.AbstractBaseUser`:"
msgstr ""
"Les méthodes et attributs suivants sont disponibles pour chaque sous-classe "
"de :class:`~django.contrib.auth.models.AbstractBaseUser`:"

msgid "Returns the value of the field nominated by ``USERNAME_FIELD``."
msgstr "Renvoie la valeur du champ spécifié dans ``USERNAME_FIELD``."

msgid ""
"Normalizes the username by calling :meth:`normalize_username`. If you "
"override this method, be sure to call ``super()`` to retain the "
"normalization."
msgstr ""
"Normalise le nom d'utilisateur en appelant :meth:`normalize_username`. Si "
"vous surchargez cette méthode, prenez soin d'appeler ``super()`` pour "
"conserver la normalisation."

msgid ""
"Returns the name of the email field specified by the :attr:`~models."
"CustomUser.EMAIL_FIELD` attribute. Defaults to ``'email'`` if "
"``EMAIL_FIELD`` isn't specified."
msgstr ""
"Renvoie le nom du champ courriel désigné par l'attribut :attr:`~models."
"CustomUser.EMAIL_FIELD`. Si ``EMAIL_FIELD`` n'est pas renseigné, renvoie "
"``'email'`` par défaut."

msgid ""
"Applies NFKC Unicode normalization to usernames so that visually identical "
"characters with different Unicode code points are considered identical."
msgstr ""
"Applique la normalisation Unicode NFKC aux noms d'utilisateurs afin que des "
"caractères visuellement identiques avec des points de code Unicode "
"différents soient considérés identiques."

msgid ""
"Read-only attribute which is always ``True`` (as opposed to ``AnonymousUser."
"is_authenticated`` which is always ``False``). This is a way to tell if the "
"user has been authenticated. This does not imply any permissions and doesn't "
"check if the user is active or has a valid session. Even though normally you "
"will check this attribute on ``request.user`` to find out whether it has "
"been populated by the :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware` (representing the currently logged-in user), you "
"should know this attribute is ``True`` for any :class:`~models.User` "
"instance."
msgstr ""
"Attribut en lecture seule qui vaut toujours ``True`` (contrairement à "
"``AnonymousUser.is_authenticated`` qui vaut toujours ``False``). C'est une "
"façon de savoir si l'utilisateur a été authentifié. Aucune permission n'est "
"prise en compte et il n'y a pas de contrôle sur le drapeau ``is_active`` de "
"l'utilisateur ou sur la validité de la session. Même si cet attribut est "
"généralement consulté pour ``request.user`` afin de déterminer s'il a été "
"défini par :class:`~django.contrib.auth.middleware.AuthenticationMiddleware` "
"(représentant l'utilisateur actuellement connecté), vous devez savoir que "
"cet attribut vaut ``True`` pour toute instance de :class:`~models.User`."

msgid ""
"Read-only attribute which is always ``False``. This is a way of "
"differentiating :class:`~models.User` and :class:`~models.AnonymousUser` "
"objects. Generally, you should prefer using :attr:`~models.User."
"is_authenticated` to this attribute."
msgstr ""
"Attribut en lecture seule qui vaut toujours ``False``. C'est une façon de "
"différencier les objets :class:`~models.User` des objets :class:`~models."
"AnonymousUser`. Généralement, il vaut mieux utiliser :attr:`~models.User."
"is_authenticated` que cet attribut."

msgid ""
"Sets the user's password to the given raw string, taking care of the "
"password hashing. Doesn't save the :class:`~django.contrib.auth.models."
"AbstractBaseUser` object."
msgstr ""
"Définit le mot de passe de l'utilisateur à la chaîne brute indiquée, en se "
"chargeant du hachage du mot de passe. L'objet :class:`~django.contrib.auth."
"models.AbstractBaseUser` n'est pas enregistré par cette méthode."

msgid ""
"When the raw_password is ``None``, the password will be set to an unusable "
"password, as if :meth:`~django.contrib.auth.models.AbstractBaseUser."
"set_unusable_password()` were used."
msgstr ""
"Lorsque ``raw_password`` vaut ``None``, le mot de passe sera défini comme "
"non utilisable, comme si on avait appelé :meth:`~django.contrib.auth.models."
"AbstractBaseUser.set_unusable_password()`."

msgid "*Asynchronous version*: ``acheck_password()``"
msgstr "*Version asynchrone*: ``acheck_password()``"

msgid ""
"Returns ``True`` if the given raw string is the correct password for the "
"user. (This takes care of the password hashing in making the comparison.)"
msgstr ""
"Renvoie ``True`` si la chaîne brute transmise est le mot de passe correct de "
"cet utilisateur (cette méthode se charge du hachage du mot de passe en vue "
"de la comparaison)."

msgid "``acheck_password()`` method was added."
msgstr "La méthode ``acheck_password()`` a été ajoutée."

msgid ""
"Marks the user as having no password set.  This isn't the same as having a "
"blank string for a password. :meth:`~django.contrib.auth.models."
"AbstractBaseUser.check_password()` for this user will never return ``True``. "
"Doesn't save the :class:`~django.contrib.auth.models.AbstractBaseUser` "
"object."
msgstr ""
"Marque l'utilisateur comme n'ayant pas de mot de passe défini. Ce n'est pas "
"la même chose que de définir une chaîne vide comme mot de passe. :meth:"
"`~django.contrib.auth.models.AbstractBaseUser.check_password()` ne renvoie "
"jamais ``True`` pour cet utilisateur. L'objet :class:`~django.contrib.auth."
"models.AbstractBaseUser` n'est pas enregistré par cette méthode."

msgid ""
"You may need this if authentication for your application takes place against "
"an existing external source such as an LDAP directory."
msgstr ""
"Cela peut être utile si le processus d'authentification de votre application "
"se fait par une source externe existante telle qu'un annuaire LDAP."

msgid ""
"Returns ``False`` if :meth:`~django.contrib.auth.models.AbstractBaseUser."
"set_unusable_password()` has been called for this user."
msgstr ""
"Renvoie ``False`` si :meth:`~django.contrib.auth.models.AbstractBaseUser."
"set_unusable_password()` a été appelée pour cet utilisateur."

msgid ""
"Returns an HMAC of the password field. Used for :ref:`session-invalidation-"
"on-password-change`."
msgstr ""
"Renvoie une empreinte HMAC du champ de mot de passe. Utilisé pour :ref:"
"`session-invalidation-on-password-change`."

msgid ""
"Yields the HMAC of the password field using :setting:`SECRET_KEY_FALLBACKS`. "
"Used by ``get_user()``."
msgstr ""
"Produit l'empreinte HMAC du champ mot de passe en utilisant :setting:"
"`SECRET_KEY_FALLBACKS`. Utilisé par ``get_user()``."

msgid ""
":class:`~models.AbstractUser` subclasses :class:`~models.AbstractBaseUser`:"
msgstr ""
":class:`~models.AbstractUser` hérite de :class:`~models.AbstractBaseUser`:"

msgid ""
"Normalizes the email by calling :meth:`.BaseUserManager.normalize_email`. If "
"you override this method, be sure to call ``super()`` to retain the "
"normalization."
msgstr ""
"Normalise l'adresse électronique en appelant :meth:`BaseUserManager."
"normalize_email`. Si vous surchargez cette méthode, prenez soin d'appeler "
"``super()`` pour conserver la normalisation."

msgid "Writing a manager for a custom user model"
msgstr "Écriture d'un gestionnaire pour un modèle d'utilisateur personnalisé"

msgid ""
"You should also define a custom manager for your user model. If your user "
"model defines ``username``, ``email``, ``is_staff``, ``is_active``, "
"``is_superuser``, ``last_login``, and ``date_joined`` fields the same as "
"Django's default user, you can install Django's :class:`~django.contrib.auth."
"models.UserManager`; however, if your user model defines different fields, "
"you'll need to define a custom manager that extends :class:`~django.contrib."
"auth.models.BaseUserManager` providing two additional methods:"
msgstr ""
"Il faudrait aussi définir un gestionnaire personnalisé pour votre modèle "
"d'utilisateur. Si ce dernier définit les champs ``username``, ``email``, "
"``is_staff``, ``is_active``, ``is_superuser``, ``last_login`` et "
"``date_joined`` comparables au modèle d'utilisateur par défaut de Django, "
"vous pouvez utiliser le gestionnaire :class:`~django.contrib.auth.models."
"UserManager` de Django. Cependant, si votre modèle d'utilisateur définit des "
"champs différents, vous devrez définir un gestionnaire personnalisé héritant "
"de :class:`~django.contrib.auth.models.BaseUserManager` et fournissant deux "
"méthodes supplémentaires :"

msgid ""
"The prototype of ``create_user()`` should accept the username field, plus "
"all required fields as arguments. For example, if your user model uses "
"``email`` as the username field, and has ``date_of_birth`` as a required "
"field, then ``create_user`` should be defined as::"
msgstr ""
"Le prototype de ``create_user()`` doit accepter en paramètre le champ nom "
"d'utilisateur ainsi que tous les champs obligatoires. Par exemple, si votre "
"modèle d'utilisateur utilise ``email`` comme champ nom d'utilisateur et que "
"``date_of_birth`` est un champ obligatoire, ``create_user`` devrait être "
"définie ainsi ::"

msgid ""
"The prototype of ``create_superuser()`` should accept the username field, "
"plus all required fields as arguments. For example, if your user model uses "
"``email`` as the username field, and has ``date_of_birth`` as a required "
"field, then ``create_superuser`` should be defined as::"
msgstr ""
"Le prototype de ``create_superuser()`` doit accepter en paramètre le champ "
"nom d'utilisateur ainsi que tous les champs obligatoires. Par exemple, si "
"votre modèle d'utilisateur utilise ``email`` comme champ nom d'utilisateur "
"et que ``date_of_birth`` est un champ obligatoire, ``create_superuser`` "
"devrait être définie ainsi ::"

msgid ""
"For a :class:`~.ForeignKey` in :attr:`.USERNAME_FIELD` or :attr:`."
"REQUIRED_FIELDS`, these methods receive the value of the :attr:`~.ForeignKey."
"to_field` (the :attr:`~django.db.models.Field.primary_key` by default) of an "
"existing instance."
msgstr ""
"Pour une clé étrangère :class:`~.ForeignKey` dans :attr:`.USERNAME_FIELD` "
"ou :attr:`.REQUIRED_FIELDS`, ces méthodes reçoivent la valeur de :attr:`~."
"ForeignKey.to_field` (la clé primaire :attr:`~django.db.models.Field."
"primary_key` par défaut) d'une instance existante."

msgid ""
":class:`~django.contrib.auth.models.BaseUserManager` provides the following "
"utility methods:"
msgstr ""
":class:`~django.contrib.auth.models.BaseUserManager` fournit les méthodes "
"utilitaires suivantes :"

msgid ""
"Normalizes email addresses by lowercasing the domain portion of the email "
"address."
msgstr ""
"Normalise les adresses électroniques en transformant en minuscules la partie "
"nom de domaine de l'adresse."

msgid ""
"Retrieves a user instance using the contents of the field nominated by "
"``USERNAME_FIELD``."
msgstr ""
"Récupère une instance utilisateur en utilisant le contenu du champ spécifié "
"dans ``USERNAME_FIELD``."

msgid "Extending Django's default ``User``"
msgstr "Extension du modèle ``User`` par défaut de Django"

msgid ""
"If you're entirely happy with Django's :class:`~django.contrib.auth.models."
"User` model, but you want to add some additional profile information, you "
"could subclass :class:`django.contrib.auth.models.AbstractUser` and add your "
"custom profile fields, although we'd recommend a separate model as described "
"in :ref:`specifying-custom-user-model`. ``AbstractUser`` provides the full "
"implementation of the default :class:`~django.contrib.auth.models.User` as "
"an :ref:`abstract model <abstract-base-classes>`."
msgstr ""
"Si le modèle :class:`~django.contrib.auth.models.User` de Django vous "
"convient entièrement mais que vous voulez ajouter quelques informations de "
"profil supplémentaires, créez une sous-classe de :class:`django.contrib.auth."
"models.AbstractUser` et ajoutez vos propres champs de profil. Il est "
"toutefois conseillé de créer un modèle séparé, comme indiqué dans :ref:"
"`specifying-custom-user-model`. ``AbstractUser`` fournit une implémentation "
"complète du modèle :class:`~django.contrib.auth.models.User` par défaut sous "
"forme de :ref:`modèle abstrait <abstract-base-classes>`."

msgid "Custom users and the built-in auth forms"
msgstr "Utilisateurs personnalisés et formulaires d'authentification intégrés"

msgid ""
"Django's built-in :ref:`forms <built-in-auth-forms>` and :ref:`views <built-"
"in-auth-views>` make certain assumptions about the user model that they are "
"working with."
msgstr ""
"Les :ref:`formulaires <built-in-auth-forms>` et les :ref:`vues <built-in-"
"auth-views>` intégrés de Django ont certaines attentes à propos du modèle "
"utilisateur avec lequel ils fonctionnent."

msgid ""
"The following forms are compatible with any subclass of :class:`~django."
"contrib.auth.models.AbstractBaseUser`:"
msgstr ""
"Les formulaires suivants sont compatibles avec toutes les sous-classes de :"
"class:`~django.contrib.auth.models.AbstractBaseUser`:"

msgid ""
":class:`~django.contrib.auth.forms.AuthenticationForm`: Uses the username "
"field specified by :attr:`~models.CustomUser.USERNAME_FIELD`."
msgstr ""
":class:`~django.contrib.auth.forms.AuthenticationForm`: utilise le champ de "
"nom d'utilisateur indiqué par :attr:`~models.CustomUser.USERNAME_FIELD`."

msgid ":class:`~django.contrib.auth.forms.SetPasswordForm`"
msgstr ":class:`~django.contrib.auth.forms.SetPasswordForm`"

msgid ":class:`~django.contrib.auth.forms.PasswordChangeForm`"
msgstr ":class:`~django.contrib.auth.forms.PasswordChangeForm`"

msgid ":class:`~django.contrib.auth.forms.AdminPasswordChangeForm`"
msgstr ":class:`~django.contrib.auth.forms.AdminPasswordChangeForm`"

msgid ""
"The following forms make assumptions about the user model and can be used as-"
"is if those assumptions are met:"
msgstr ""
"Les formulaires suivants ont certaines attentes à propos du modèle "
"d'utilisateur et peuvent être utilisés tels quels si ces attentes sont "
"remplies :"

msgid ""
":class:`~django.contrib.auth.forms.PasswordResetForm`: Assumes that the user "
"model has a field that stores the user's email address with the name "
"returned by :meth:`~models.AbstractBaseUser.get_email_field_name` (``email`` "
"by default) that can be used to identify the user and a boolean field named "
"``is_active`` to prevent password resets for inactive users."
msgstr ""
":class:`~django.contrib.auth.forms.PasswordResetForm`: s'attend à ce que le "
"modèle utilisateur possède un champ qui stocke l'adresse électronique de "
"l'utilisateur et nommé selon la valeur renvoyée par :meth:`~models."
"AbstractBaseUser.get_email_field_name` (``email`` par défaut). Ce champ doit "
"pouvoir être utilisé pour identifier l'utilisateur. Le formulaire compte "
"aussi sur la présence du champ booléen ``is_active`` pour empêcher les "
"utilisateurs inactifs de réinitialiser leur mot de passe."

msgid ""
"Finally, the following forms are tied to :class:`~django.contrib.auth.models."
"User` and need to be rewritten or extended to work with a custom user model:"
msgstr ""
"Pour finir, les formulaires suivants sont liés à la classe :class:`~django."
"contrib.auth.models.User` et doivent être réécrits ou étendus pour "
"fonctionner avec un modèle d'utilisateur personnalisé :"

msgid ":class:`~django.contrib.auth.forms.UserCreationForm`"
msgstr ":class:`~django.contrib.auth.forms.UserCreationForm`"

msgid ":class:`~django.contrib.auth.forms.UserChangeForm`"
msgstr ":class:`~django.contrib.auth.forms.UserChangeForm`"

msgid ""
"If your custom user model is a subclass of ``AbstractUser``, then you can "
"extend these forms in this manner::"
msgstr ""
"Si votre modèle d'utilisateur personnalisé est une sous-classe de "
"``AbstractUser``, vous pouvez alors étendre ces formulaires de cette façon ::"

msgid "Custom users and :mod:`django.contrib.admin`"
msgstr "Utilisateurs personnalisés et  :mod:`django.contrib.admin`"

msgid ""
"If you want your custom user model to also work with the admin, your user "
"model must define some additional attributes and methods. These methods "
"allow the admin to control access of the user to admin content:"
msgstr ""
"Si vous souhaitez que votre modèle d'utilisateur personnalisé fonctionne "
"également dans l'interface d'administration, celui-ci doit définir certains "
"attributs et méthodes supplémentaires. Ces méthodes permettent au site "
"d'administration de contrôler l'accès de l'utilisateur à son contenu :"

msgid ""
"Returns ``True`` if the user is allowed to have access to the admin site."
msgstr ""
"Renvoie ``True`` si l'utilisateur est autorisé à accéder au site "
"d'administration."

msgid "Returns ``True`` if the user account is currently active."
msgstr "Renvoie ``True`` si le compte utilisateur est actuellement actif."

msgid ""
"Returns ``True`` if the user has the named permission. If ``obj`` is "
"provided, the permission needs to be checked against a specific object "
"instance."
msgstr ""
"Renvoie ``True`` si l'utilisateur possède la permission indiquée. Si ``obj`` "
"est transmis, la permission doit être vérifiée en relation avec une instance "
"d'objet spécifique."

msgid ""
"Returns ``True`` if the user has permission to access models in the given "
"app."
msgstr ""
"Renvoie ``True`` si l'utilisateur possède la permission d'accéder aux "
"modèles de l'application indiquée."

msgid ""
"You will also need to register your custom user model with the admin. If "
"your custom user model extends ``django.contrib.auth.models.AbstractUser``, "
"you can use Django's existing ``django.contrib.auth.admin.UserAdmin`` class. "
"However, if your user model extends :class:`~django.contrib.auth.models."
"AbstractBaseUser`, you'll need to define a custom ``ModelAdmin`` class. It "
"may be possible to subclass the default ``django.contrib.auth.admin."
"UserAdmin``; however, you'll need to override any of the definitions that "
"refer to fields on ``django.contrib.auth.models.AbstractUser`` that aren't "
"on your custom user class."
msgstr ""
"Il sera aussi nécessaire d'inscrire le modèle d'utilisateur personnalisé à "
"l'interface d'administration. Si votre modèle hérite de ``django.contrib."
"auth.models.AbstractUser``, vous pouvez utiliser la classe existante de "
"Django ``django.contrib.auth.admin.UserAdmin``. Cependant, si votre modèle "
"hérite de :class:`~django.contrib.auth.models.AbstractBaseUser`, vous devrez "
"définir une classe ``ModelAdmin`` personnalisée. Il est possible d'hériter "
"de la classe ``django.contrib.auth.admin.UserAdmin``, mais il faudra alors "
"surcharger toutes les définitions qui se référent à des champs de ``django."
"contrib.auth.models.AbstractUser`` et qui ne se trouvent pas dans votre "
"classe d'utilisateur personnalisée."

msgid ""
"If you are using a custom ``ModelAdmin`` which is a subclass of ``django."
"contrib.auth.admin.UserAdmin``, then you need to add your custom fields to "
"``fieldsets`` (for fields to be used in editing users) and to "
"``add_fieldsets`` (for fields to be used when creating a user). For example::"
msgstr ""
"Si vous utilisez une classe ``ModelAdmin`` personnalisée qui hérite de "
"``django.contrib.auth.admin.UserAdmin``, vous devez alors ajouter vos champs "
"personnalisés à ``fieldsets`` (pour les champs qui doivent faire partie de "
"l'édition des utilisateurs) et à ``add_fieldsets`` (pour les champs qui "
"doivent faire partie de la création des utilisateurs). Par exemple ::"

msgid ""
"See :ref:`a full example <custom-users-admin-full-example>` for more details."
msgstr ""
"Voir :ref:`un exemple complet <custom-users-admin-full-example>` pour plus "
"de détails."

msgid "Custom users and permissions"
msgstr "Utilisateurs personnalisés et permissions"

msgid ""
"To make it easy to include Django's permission framework into your own user "
"class, Django provides :class:`~django.contrib.auth.models."
"PermissionsMixin`. This is an abstract model you can include in the class "
"hierarchy for your user model, giving you all the methods and database "
"fields necessary to support Django's permission model."
msgstr ""
"Pour faciliter l'intégration du système des permissions de Django à votre "
"propre classe d'utilisateur, Django propose :class:`~django.contrib.auth."
"models.PermissionsMixin`. Il s'agit d'un modèle abstrait que vous pouvez "
"ajouter à la hiérarchie de classes de votre modèle d'utilisateur et qui vous "
"offre ainsi toutes les méthodes et les champs de base de données nécessaires "
"pour la prise en charge du modèle des permissions de Django."

msgid ""
":class:`~django.contrib.auth.models.PermissionsMixin` provides the following "
"methods and attributes:"
msgstr ""
":class:`~django.contrib.auth.models.PermissionsMixin` contient les méthodes "
"et attributs suivants :"

msgid ""
"Boolean. Designates that this user has all permissions without explicitly "
"assigning them."
msgstr ""
"Valeur booléenne. Indique que cet utilisateur possède toutes les permissions "
"sans avoir besoin de les lui attribuer explicitement."

msgid "Returns a set of permission strings that the user has directly."
msgstr ""
"Renvoie l'ensemble des permissions (chaînes) que l'utilisateur obtient "
"directement. "

msgid ""
"If ``obj`` is passed in, only returns the user permissions for this specific "
"object."
msgstr ""
"Si ``obj`` est transmis, ne renvoie que les permissions d'utilisateur liées "
"à cet objet spécifique."

msgid ""
"Returns a set of permission strings that the user has, through their groups."
msgstr ""
"Renvoie l'ensemble des permissions (chaînes) que l'utilisateur obtient au "
"travers des groupes auxquels il/elle appartient. "

msgid ""
"If ``obj`` is passed in, only returns the group permissions for this "
"specific object."
msgstr ""
"Si ``obj`` est transmis, ne renvoie que les permissions de groupe liées à "
"cet objet spécifique."

msgid ""
"Returns a set of permission strings that the user has, both through group "
"and user permissions."
msgstr ""
"Renvoie l'ensemble des permissions (chaînes) que l'utilisateur obtient "
"directement ou au travers des groupes auxquels il appartient. "

msgid ""
"If ``obj`` is passed in, only returns the permissions for this specific "
"object."
msgstr ""
"Si ``obj`` est transmis, ne renvoie que les permissions liées à cet objet "
"spécifique."

msgid ""
"Returns ``True`` if the user has the specified permission, where ``perm`` is "
"in the format ``\"<app label>.<permission codename>\"`` (see :ref:"
"`permissions <topic-authorization>`). If :attr:`.User.is_active` and :attr:"
"`~.User.is_superuser` are both ``True``, this method always returns ``True``."
msgstr ""
"Renvoie ``True`` si l'utilisateur possède la permission indiquée, où "
"``perm`` est au format ``\"<étiquette application>.<code permission>\"`` "
"(voir :ref:`permissions <topic-authorization>`). Si :attr:`.User.is_active` "
"et :attr:`~.User.is_superuser` sont tous deux à ``True``, cette méthode "
"renvoie toujours ``True``."

msgid ""
"If ``obj`` is passed in, this method won't check for a permission for the "
"model, but for this specific object."
msgstr ""
"Si ``obj`` est transmis, cette méthode ne contrôle pas la permission au "
"niveau du modèle, mais pour l'objet indiqué."

msgid ""
"Returns ``True`` if the user has each of the specified permissions, where "
"each perm is in the format ``\"<app label>.<permission codename>\"``. If :"
"attr:`.User.is_active` and :attr:`~.User.is_superuser` are both ``True``, "
"this method always returns ``True``."
msgstr ""
"Renvoie ``True`` si l'utilisateur possède toutes les permissions indiquées, "
"où chaque permission est au format ``\"<étiquette application>.<code "
"permission>\"``. Si :attr:`.User.is_active` et :attr:`~.User.is_superuser` "
"sont tous deux à ``True``, cette méthode renvoie toujours ``True``."

msgid ""
"If ``obj`` is passed in, this method won't check for permissions for the "
"model, but for the specific object."
msgstr ""
"Si ``obj`` est transmis, cette méthode ne contrôle pas les permissions au "
"niveau du modèle, mais pour l'objet indiqué."

msgid ""
"Returns ``True`` if the user has any permissions in the given package (the "
"Django app label). If :attr:`.User.is_active` and :attr:`~.User."
"is_superuser` are both ``True``, this method always returns ``True``."
msgstr ""
"Renvoie ``True`` si l'utilisateur possède au moins une permission dans le "
"paquet donné (l'étiquette d'application Django). Si :attr:`.User.is_active` "
"et :attr:`~.User.is_superuser` sont tous deux à ``True``, cette méthode "
"renvoie toujours ``True``."

msgid "``PermissionsMixin`` and ``ModelBackend``"
msgstr "``PermissionsMixin`` et ``ModelBackend``"

msgid ""
"If you don't include the :class:`~django.contrib.auth.models."
"PermissionsMixin`, you must ensure you don't invoke the permissions methods "
"on ``ModelBackend``. ``ModelBackend`` assumes that certain fields are "
"available on your user model. If your user model doesn't provide  those "
"fields, you'll receive database errors when you check permissions."
msgstr ""
"Si vous n'intégrez pas :class:`~django.contrib.auth.models.PermissionsMixin` "
"vous devez vous assurer de ne pas appeler les méthodes de permissions sur "
"``ModelBackend``. ``ModelBackend`` s'attend à ce que certains champs soient "
"disponibles dans votre modèle d'utilisateur. Si ce dernier ne fournit pas "
"ces champs, vous obtiendrez des erreurs de base de données lorsque vous "
"contrôlez les permissions."

msgid "Custom users and proxy models"
msgstr "Utilisateurs personnalisés et modèles mandataires"

msgid ""
"One limitation of custom user models is that installing a custom user model "
"will break any proxy model extending :class:`~django.contrib.auth.models."
"User`. Proxy models must be based on a concrete base class; by defining a "
"custom user model, you remove the ability of Django to reliably identify the "
"base class."
msgstr ""
"Une limite connue des modèles d'utilisateur personnalisés est que leur "
"installation casse tout modèle mandataire étendant le modèle :class:`~django."
"contrib.auth.models.User`. Les modèles mandataires doivent hériter d'une "
"classe de base concrète ; en définissant un modèle d'utilisateur "
"personnalisé, vous supprimez la capacité de Django à identifier de manière "
"fiable la classe de base."

msgid ""
"If your project uses proxy models, you must either modify the proxy to "
"extend the user model that's in use in your project, or merge your proxy's "
"behavior into your :class:`~django.contrib.auth.models.User` subclass."
msgstr ""
"Si votre projet utilise des modèles mandataires, vous devez soit modifier "
"ces modèles afin qu'ils étendent le modèle d'utilisateur utilisé dans votre "
"projet, soit fusionner le comportement du modèle mandataire dans votre sous-"
"classe de :class:`~django.contrib.auth.models.User`."

msgid "A full example"
msgstr "Un exemple complet"

msgid ""
"Here is an example of an admin-compliant custom user app. This user model "
"uses an email address as the username, and has a required date of birth; it "
"provides no permission checking beyond an ``admin`` flag on the user "
"account. This model would be compatible with all the built-in auth forms and "
"views, except for the user creation forms. This example illustrates how most "
"of the components work together, but is not intended to be copied directly "
"into projects for production use."
msgstr ""
"Voici un exemple d'application d'utilisateur personnalisé compatible avec "
"l'interface d'administration. Ce modèle d'utilisateur utilise une adresse "
"électronique comme nom d'utilisateur et possède un champ date de naissance "
"obligatoire ; il ne fournit aucun contrôle de permission, excepté un drapeau "
"``admin`` sur le compte utilisateur. Ce modèle est compatible avec tous les "
"formulaires et les vues d'authentification intégrés, à l'exception des "
"formulaires de création d'utilisateur. Cet exemple illustre la façon dont la "
"plupart des composants interagissent, mais il ne s'agit pas de code pouvant "
"être directement copié dans des projets en production."

msgid ""
"This code would all live in a ``models.py`` file for a custom authentication "
"app::"
msgstr ""
"Ce code pourrait être entièrement placé dans un fichier ``models.py`` d'une "
"application d'authentification personnalisée ::"

msgid ""
"Then, to register this custom user model with Django's admin, the following "
"code would be required in the app's ``admin.py`` file::"
msgstr ""
"Puis, pour inscrire ce modèle d'utilisateur personnalisé dans "
"l'administration de Django, le code suivant doit se trouver dans le fichier "
"``admin.py`` de l'application ::"

msgid ""
"Finally, specify the custom model as the default user model for your project "
"using the :setting:`AUTH_USER_MODEL` setting in your ``settings.py``::"
msgstr ""
"Finalement, définissez le modèle personnalisé comme modèle d'utilisateur par "
"défaut dans votre projet au moyen du réglage :setting:`AUTH_USER_MODEL` dans "
"votre fichier ``settings.py``::"

msgid "Using the Django authentication system"
msgstr "Utilisation du système d'authentification de Django"

msgid ""
"This document explains the usage of Django's authentication system in its "
"default configuration. This configuration has evolved to serve the most "
"common project needs, handling a reasonably wide range of tasks, and has a "
"careful implementation of passwords and permissions. For projects where "
"authentication needs differ from the default, Django supports extensive :doc:"
"`extension and customization </topics/auth/customizing>` of authentication."
msgstr ""
"Ce document présente l'utilisation du système d'authentification de Django "
"dans sa configuration par défaut. Cette configuration a évolué afin de "
"pouvoir répondre aux besoins les plus courants des projets, elle est capable "
"de gérer une large palette de tâches, et elle possède une implémentation "
"soigneuse des mots de passe et des permissions. Pour les projets où les "
"besoins en terme d'authentification divergent de la configuration par "
"défaut, Django permet d’:doc:`étendre et de personnaliser </topics/auth/"
"customizing>` l'authentification de manière approfondie."

msgid ""
"Django authentication provides both authentication and authorization "
"together and is generally referred to as the authentication system, as these "
"features are somewhat coupled."
msgstr ""
"L'authentification de Django fournit à la fois l'authentification et "
"l'autorisation, regroupés sous le terme général de système "
"d'authentification, dans la mesure où ces fonctions sont assez étroitement "
"liées."

msgid "``User`` objects"
msgstr "Objets utilisateurs"

msgid ""
":class:`~django.contrib.auth.models.User` objects are the core of the "
"authentication system. They typically represent the people interacting with "
"your site and are used to enable things like restricting access, registering "
"user profiles, associating content with creators etc. Only one class of user "
"exists in Django's authentication framework, i.e., :attr:`'superusers' "
"<django.contrib.auth.models.User.is_superuser>` or admin :attr:`'staff' "
"<django.contrib.auth.models.User.is_staff>` users are just user objects with "
"special attributes set, not different classes of user objects."
msgstr ""
"Les objets :class:`~django.contrib.auth.models.User` se trouvent au cœur du "
"système d'authentification. Ils représentent typiquement les personnes qui "
"interagissent avec votre site et sont utilisés pour activer des "
"fonctionnalités comme la restriction d'accès, l'enregistrement de profils "
"utilisateurs, l'association de contenus avec leur créateur, etc. Une seule "
"classe d'utilisateurs existe dans le système d'authentification de Django ; "
"cela signifie donc que les « super-utilisateurs » (:attr:`'superusers' "
"<django.contrib.auth.models.User.is_superuser>`) ou les membres des équipes "
"d'administration du site ( :attr:`'staff' <django.contrib.auth.models.User."
"is_staff>`) ne sont que des objets utilisateur normaux ayant certains "
"attributs définis, et non pas une classe différente d'objet utilisateur."

msgid "The primary attributes of the default user are:"
msgstr "Les attributs principaux de l'utilisateur par défaut sont :"

msgid ":attr:`~django.contrib.auth.models.User.username`"
msgstr ":attr:`~django.contrib.auth.models.User.username`"

msgid ":attr:`~django.contrib.auth.models.User.password`"
msgstr ":attr:`~django.contrib.auth.models.User.password`"

msgid ":attr:`~django.contrib.auth.models.User.email`"
msgstr ":attr:`~django.contrib.auth.models.User.email`"

msgid ":attr:`~django.contrib.auth.models.User.first_name`"
msgstr ":attr:`~django.contrib.auth.models.User.first_name`"

msgid ":attr:`~django.contrib.auth.models.User.last_name`"
msgstr ":attr:`~django.contrib.auth.models.User.last_name`"

msgid ""
"See the :class:`full API documentation <django.contrib.auth.models.User>` "
"for full reference, the documentation that follows is more task oriented."
msgstr ""
"Consultez la :class:`documentation complète de l'API <django.contrib.auth."
"models.User>` pour une référence exhaustive ; la documentation ci-après est "
"plus orientée sur les tâches."

msgid "Creating users"
msgstr "Création d'utilisateurs"

msgid ""
"The most direct way to create users is to use the included :meth:`~django."
"contrib.auth.models.UserManager.create_user` helper function:"
msgstr ""
"La manière la plus directe de créer des utilisateurs est d'utiliser la "
"fonction utilitaire :meth:`~django.contrib.auth.models.UserManager."
"create_user`:"

msgid ""
"If you have the Django admin installed, you can also :ref:`create users "
"interactively <auth-admin>`."
msgstr ""
"Si vous avez installé l'interface d'administration de Django, vous pouvez "
"aussi  :ref:`créer des utilisateurs interactivement <auth-admin>`."

msgid "Creating superusers"
msgstr "Création de superutilisateurs"

msgid "Create superusers using the :djadmin:`createsuperuser` command:"
msgstr ""
"Les superutilisateurs peuvent être créés à l'aide de la commande :djadmin:"
"`createsuperuser`:"

msgid ""
"You will be prompted for a password. After you enter one, the user will be "
"created immediately. If you leave off the :option:`--username "
"<createsuperuser --username>` or :option:`--email <createsuperuser --email>` "
"options, it will prompt you for those values."
msgstr ""
"Vous devrez saisir un mot de passe. Après l'avoir fait, l'utilisateur sera "
"immédiatement créé. Si vous omettez les options :option:`--username "
"<createsuperuser --username>` ou :option:`--email <createsuperuser --"
"email>`, vous devrez aussi renseigner ces valeurs."

msgid "Changing passwords"
msgstr "Modification des mots de passe"

msgid ""
"Django does not store raw (clear text) passwords on the user model, but only "
"a hash (see :doc:`documentation of how passwords are managed </topics/auth/"
"passwords>` for full details). Because of this, do not attempt to manipulate "
"the password attribute of the user directly. This is why a helper function "
"is used when creating a user."
msgstr ""
"Django ne stocke pas de mots de passe bruts (en clair) dans le modèle "
"d'utilisateur, mais uniquement une empreinte hachée (voir la  :doc:"
"`documentation sur la façon dont sont gérés les mots de passe </topics/auth/"
"passwords>` pour des détails plus complets). C'est pourquoi il faut éviter "
"de manipuler directement l'attribut ``password`` de l'utilisateur et qu'une "
"fonction utilitaire est employée pour créer un utilisateur."

msgid "To change a user's password, you have several options:"
msgstr ""
"Pour changer le mot de passe d'un utilisateur, vous disposez de plusieurs "
"options :"

msgid ""
":djadmin:`manage.py changepassword *username* <changepassword>` offers a "
"method of changing a user's password from the command line. It prompts you "
"to change the password of a given user which you must enter twice. If they "
"both match, the new password will be changed immediately. If you do not "
"supply a user, the command will attempt to change the password whose "
"username matches the current system user."
msgstr ""
":djadmin:`manage.py changepassword *nom d'utilisateur* <changepassword>` "
"offre une méthode permettant de changer le mot de passe d'un utilisateur "
"dans une ligne de commande. Vous serez invité à changer le mot de passe de "
"l'utilisateur indiqué en le saisissant deux fois. Si les deux saisies "
"correspondent, le nouveau mot de passe sera immédiatement défini. Si vous "
"n'indiquez pas de nom d'utilisateur, la commande essaie de changer le mot de "
"passe de l'utilisateur dont le nom correspond à l'utilisateur système en "
"cours."

msgid ""
"You can also change a password programmatically, using :meth:`~django."
"contrib.auth.models.User.set_password()`:"
msgstr ""
"Il est aussi possible de changer un mot de passe de façon programmatique, en "
"utilisant :meth:`~django.contrib.auth.models.User.set_password()`:"

msgid ""
"If you have the Django admin installed, you can also change user's passwords "
"on the :ref:`authentication system's admin pages <auth-admin>`."
msgstr ""
"Si l'interface d'administration de Django est installée, vous pouvez aussi "
"changer les mots de passe des utilisateurs dans les :ref:`pages "
"d'administration du système d'authentification <auth-admin>`."

msgid ""
"Django also provides :ref:`views <built-in-auth-views>` and :ref:`forms "
"<built-in-auth-forms>` that may be used to allow users to change their own "
"passwords."
msgstr ""
"Django fournit également des :ref:`vues <built-in-auth-views>` et des :ref:"
"`formulaires <built-in-auth-forms>` permettant aux utilisateurs de changer "
"leur propre mot de passe."

msgid ""
"Changing a user's password will log out all their sessions. See :ref:"
"`session-invalidation-on-password-change` for details."
msgstr ""
"Le changement de mot de passe d'un utilisateur déconnecte toutes ses "
"sessions. Voir :ref:`session-invalidation-on-password-change` pour plus de "
"détails."

msgid "Authenticating users"
msgstr "Authentification des utilisateurs"

msgid "*Asynchronous version*: ``aauthenticate()``"
msgstr "*Version asynchrone*: ``aauthenticate()``"

msgid ""
"Use :func:`~django.contrib.auth.authenticate()` to verify a set of "
"credentials. It takes credentials as keyword arguments, ``username`` and "
"``password`` for the default case, checks them against each :ref:"
"`authentication backend <authentication-backends>`, and returns a :class:"
"`~django.contrib.auth.models.User` object if the credentials are valid for a "
"backend. If the credentials aren't valid for any backend or if a backend "
"raises :class:`~django.core.exceptions.PermissionDenied`, it returns "
"``None``. For example::"
msgstr ""
"Utilisez :func:`~django.contrib.auth.authenticate()` pour vérifier un jeu de "
"données d'authentification. Cette méthode accepte les données "
"d'authentification sous forme de paramètres nommés, ``username`` et "
"``password`` pour la configuration par défaut, vérifie ces données avec "
"chaque :ref:`moteur d'authentification <authentication-backends>` et renvoie "
"un objet :class:`~django.contrib.auth.models.User` si l'authentification est "
"valide pour un des moteurs. Si aucun moteur n'accepte l'authentification ou "
"si un moteur génère :class:`~django.core.exceptions.PermissionDenied`, la "
"méthode renvoie ``None``. Par exemple ::"

msgid ""
"``request`` is an optional :class:`~django.http.HttpRequest` which is passed "
"on the ``authenticate()`` method of the authentication backends."
msgstr ""
"``request`` est un objet :class:`~django.http.HttpRequest` facultatif qui "
"est transmis à la méthode ``authenticate()`` des moteurs d'authentification."

msgid ""
"This is a low level way to authenticate a set of credentials; for example, "
"it's used by the :class:`~django.contrib.auth.middleware."
"RemoteUserMiddleware`. Unless you are writing your own authentication "
"system, you probably won't use this. Rather if you're looking for a way to "
"login a user, use the :class:`~django.contrib.auth.views.LoginView`."
msgstr ""
"Ceci est une manière d'authentifier un jeu de données d'authentification à "
"un bas niveau ; par exemple, c'est ce qui est utilisé par :class:`~django."
"contrib.auth.middleware.RemoteUserMiddleware`. Vous n'aurez probablement pas "
"l'usage de cette méthode, sauf si vous écrivez votre propre système "
"d'authentification. Si vous recherchez un moyen de connecter un utilisateur, "
"utilisez plutôt la classe :class:`~django.contrib.auth.views.LoginView`."

msgid "``aauthenticate()`` function was added."
msgstr "La méthode ``aauthenticate()`` a été ajoutée."

msgid "Permissions and Authorization"
msgstr "Permissions et autorisations"

msgid ""
"Django comes with a built-in permissions system. It provides a way to assign "
"permissions to specific users and groups of users."
msgstr ""
"Django contient un système intégré de permissions. Il permet d'attribuer des "
"permissions à des utilisateurs ou des groupes d'utilisateurs particuliers."

msgid ""
"It's used by the Django admin site, but you're welcome to use it in your own "
"code."
msgstr ""
"Ce système est utilisé par le site d'administration de Django, mais vous "
"avez tout loisir de l'utiliser dans votre propre code."

msgid "The Django admin site uses permissions as follows:"
msgstr "Le site d'administration de Django utilise les permissions ainsi :"

msgid ""
"Access to view objects is limited to users with the \"view\" or \"change\" "
"permission for that type of object."
msgstr ""
"L'accès à l'affichage d'un objet est limité aux utilisateurs possédant la "
"permission « view » ou « change » pour ce type d'objet."

msgid ""
"Access to view the \"add\" form and add an object is limited to users with "
"the \"add\" permission for that type of object."
msgstr ""
"L'accès au formulaire d'ajout et l'ajout d'objet sont limités aux "
"utilisateurs possédant la permission « add » pour ce type d'objet."

msgid ""
"Access to view the change list, view the \"change\" form and change an "
"object is limited to users with the \"change\" permission for that type of "
"object."
msgstr ""
"L'accès à la liste des objets pour modification, au formulaire de "
"modification et la modification d'un objet sont limités aux utilisateurs "
"possédant la permission « change » pour ce type d'objet. "

msgid ""
"Access to delete an object is limited to users with the \"delete\" "
"permission for that type of object."
msgstr ""
"L'accès à la suppression d'un objet est limité aux utilisateurs possédant la "
"permission « delete » pour ce type d'objet."

msgid ""
"Permissions can be set not only per type of object, but also per specific "
"object instance. By using the :meth:`~django.contrib.admin.ModelAdmin."
"has_view_permission`, :meth:`~django.contrib.admin.ModelAdmin."
"has_add_permission`, :meth:`~django.contrib.admin.ModelAdmin."
"has_change_permission` and :meth:`~django.contrib.admin.ModelAdmin."
"has_delete_permission` methods provided by the :class:`~django.contrib.admin."
"ModelAdmin` class, it is possible to customize permissions for different "
"object instances of the same type."
msgstr ""
"Les permissions peuvent non seulement être attribuées par type d'objet, mais "
"aussi par instance d'objet spécifique. En utilisant les méthodes :meth:"
"`~django.contrib.admin.ModelAdmin.has_view_permission`, :meth:`~django."
"contrib.admin.ModelAdmin.has_add_permission`, :meth:`~django.contrib.admin."
"ModelAdmin.has_change_permission` et :meth:`~django.contrib.admin.ModelAdmin."
"has_delete_permission` fournies par la classe :class:`~django.contrib.admin."
"ModelAdmin`, il est possible de personnaliser les permissions pour "
"différentes instances d'objets du même type."

msgid ""
":class:`~django.contrib.auth.models.User` objects have two many-to-many "
"fields: ``groups`` and ``user_permissions``. :class:`~django.contrib.auth."
"models.User` objects can access their related objects in the same way as any "
"other :doc:`Django model </topics/db/models>`::"
msgstr ""
"Les objets :class:`~django.contrib.auth.models.User` possèdent deux champs "
"plusieurs-à-plusieurs : ``groups`` et ``user_permissions``. Les objets :"
"class:`~django.contrib.auth.models.User` peuvent accéder à leurs objets liés "
"de la même façon que pour tout autre :doc:`modèle Django </topics/db/"
"models>`::"

msgid "Default permissions"
msgstr "Permissions par défaut"

msgid ""
"When ``django.contrib.auth`` is listed in your :setting:`INSTALLED_APPS` "
"setting, it will ensure that four default permissions -- add, change, "
"delete, and view -- are created for each Django model defined in one of your "
"installed applications."
msgstr ""
"Quand l'application ``django.contrib.auth`` figure dans le réglage :setting:"
"`INSTALLED_APPS`, elle s'assure que les quatre permissions par défaut "
"(« add », « change », « delete » et « view ») soient créées pour chaque "
"modèle Django défini dans toutes les applications installées."

msgid ""
"These permissions will be created when you run :djadmin:`manage.py migrate "
"<migrate>`; the first time you run ``migrate`` after adding ``django.contrib."
"auth`` to :setting:`INSTALLED_APPS`, the default permissions will be created "
"for all previously-installed models, as well as for any new models being "
"installed at that time. Afterward, it will create default permissions for "
"new models each time you run :djadmin:`manage.py migrate <migrate>` (the "
"function that creates permissions is connected to the :data:`~django.db."
"models.signals.post_migrate` signal)."
msgstr ""
"Ces permissions seront créées lorsque vous lancez :djadmin:`manage.py "
"migrate <migrate>`; au premier lancement de ``migrate`` après l'ajout de "
"``django.contrib.auth`` à :setting:`INSTALLED_APPS`, les permissions par "
"défaut seront créées pour tous les modèles précédemment installés de même "
"que pour tout nouveau modèle installé à ce moment-là. Par la suite, chaque "
"nouvelle exécution de :djadmin:`manage.py migrate <migrate>` crée les "
"permissions par défaut pour les nouveaux modèles (la fonction qui crée les "
"permissions est connectée au signal :data:`~django.db.models.signals."
"post_migrate`)."

msgid ""
"Assuming you have an application with an :attr:`~django.db.models.Options."
"app_label` ``foo`` and a model named ``Bar``, to test for basic permissions "
"you should use:"
msgstr ""
"En supposant qu'une application ait l'attribut :attr:`~django.db.models."
"Options.app_label` ``foo`` et qu'un modèle soit nommé ``Bar``, voici comment "
"il faut tester les permissions de base :"

msgid "add: ``user.has_perm('foo.add_bar')``"
msgstr "ajout : ``user.has_perm('foo.add_bar')``"

msgid "change: ``user.has_perm('foo.change_bar')``"
msgstr "modification : ``user.has_perm('foo.change_bar')``"

msgid "delete: ``user.has_perm('foo.delete_bar')``"
msgstr "suppression : ``user.has_perm('foo.delete_bar')``"

msgid "view: ``user.has_perm('foo.view_bar')``"
msgstr "affichage  : ``user.has_perm('foo.view_bar')``"

msgid ""
"The :class:`~django.contrib.auth.models.Permission` model is rarely accessed "
"directly."
msgstr ""
"Le modèle :class:`~django.contrib.auth.models.Permission` est rarement "
"accédé directement."

msgid "Groups"
msgstr "Groupes"

msgid ""
":class:`django.contrib.auth.models.Group` models are a generic way of "
"categorizing users so you can apply permissions, or some other label, to "
"those users. A user can belong to any number of groups."
msgstr ""
"Les modèles :class:`django.contrib.auth.models.Group` sont une manière "
"générique de segmenter les utilisateurs afin de pouvoir leur attribuer des "
"permissions ou de les désigner par un nom défini. Un utilisateur peut "
"appartenir à autant de groupes que nécessaire."

msgid ""
"A user in a group automatically has the permissions granted to that group. "
"For example, if the group ``Site editors`` has the permission "
"``can_edit_home_page``, any user in that group will have that permission."
msgstr ""
"Un utilisateur d'un groupe reçoit automatiquement les permissions attribuées "
"à ce groupe. Par exemple, si le groupe ``Éditeurs du site`` possède la "
"permission ``can_edit_home_page``, tout utilisateur membre du groupe "
"possédera cette permission."

msgid ""
"Beyond permissions, groups are a convenient way to categorize users to give "
"them some label, or extended functionality. For example, you could create a "
"group ``'Special users'``, and you could write code that could, say, give "
"them access to a members-only portion of your site, or send them members-"
"only email messages."
msgstr ""
"Au-delà des permissions, les groupes sont un bon moyen de regrouper les "
"utilisateurs sous un nom défini, afin de leur attribuer certaines "
"fonctionnalités particulières. Par exemple, vous pourriez créer un groupe "
"``Utilisateurs spéciaux`` et écrire ensuite du code qui leur donne accès à "
"une section réservée aux membres sur le site, ou leur envoyer des courriels "
"s'adressant uniquement aux membres."

msgid "Programmatically creating permissions"
msgstr "Création programmatique de permissions"

msgid ""
"While :ref:`custom permissions <custom-permissions>` can be defined within a "
"model's ``Meta`` class, you can also create permissions directly. For "
"example, you can create the ``can_publish`` permission for a ``BlogPost`` "
"model in ``myapp``::"
msgstr ""
"Bien que des :ref:`permissions personnalisées <custom-permissions>` puissent "
"être définies dans la classe ``Meta`` d'un modèle, il est aussi possible de "
"créer directement des permissions. Par exemple, vous pouvez créer la "
"permission ``can_publish`` d'un modèle ``BlogPost`` dans ``myapp``::"

msgid ""
"The permission can then be assigned to a :class:`~django.contrib.auth.models."
"User` via its ``user_permissions`` attribute or to a :class:`~django.contrib."
"auth.models.Group` via its ``permissions`` attribute."
msgstr ""
"La permission peut ensuite être attribuée à un :class:`~django.contrib.auth."
"models.User` par son attribut ``user_permissions`` ou à un :class:`~django."
"contrib.auth.models.Group` par son attribut ``permissions``."

msgid "Proxy models need their own content type"
msgstr "Les modèles mandataires ont besoin de leur propre type de contenu"

msgid ""
"If you want to create :ref:`permissions for a proxy model <proxy-models-"
"permissions-topic>`, pass ``for_concrete_model=False`` to :meth:`."
"ContentTypeManager.get_for_model` to get the appropriate ``ContentType``::"
msgstr ""
"Si vous souhaitez créer des :ref:`permission pour un modèle mandataire "
"<proxy-models-permissions-topic>`, passez ``for_concrete_model=False`` à :"
"meth:`.ContentTypeManager.get_for_model` pour obtenir le type "
"``ContentType`` approprié ::"

msgid "Permission caching"
msgstr "Mise en cache des permissions"

msgid ""
"The :class:`~django.contrib.auth.backends.ModelBackend` caches permissions "
"on the user object after the first time they need to be fetched for a "
"permissions check. This is typically fine for the request-response cycle "
"since permissions aren't typically checked immediately after they are added "
"(in the admin, for example). If you are adding permissions and checking them "
"immediately afterward, in a test or view for example, the easiest solution "
"is to re-fetch the user from the database. For example::"
msgstr ""
"Le moteur :class:`~django.contrib.auth.backends.ModelBackend` met en cache "
"les permissions de l'objet utilisateur la première fois que ces permissions "
"doivent être consultées. Cela convient généralement bien au cycle requête-"
"réponse car en principe les permissions ne sont pas consultées immédiatement "
"après avoir été ajoutées (dans l'interface d'administration par exemple). Si "
"vous ajoutez des permissions et que vous les consultez immédiatement après, "
"par exemple dans un test ou une vue, la solution la plus simple est de "
"récupérer une nouvelle fois l'objet utilisateur à partir de la base de "
"données. Par exemple ::"

msgid "Proxy models"
msgstr "Modèles mandataires"

msgid ""
"Proxy models work exactly the same way as concrete models. Permissions are "
"created using the own content type of the proxy model. Proxy models don't "
"inherit the permissions of the concrete model they subclass::"
msgstr ""
"Les modèles mandataires fonctionnent exactement de la même manière que les "
"modèles concrets. Les permissions sont créées en utilisant le type de "
"contenu propre au modèle mandataire. Les modèles mandataires n'héritent pas "
"des permissions du modèle concret qu'ils étendent ::"

msgid "Authentication in web requests"
msgstr "Authentification dans les requêtes web"

msgid ""
"Django uses :doc:`sessions </topics/http/sessions>` and middleware to hook "
"the authentication system into :class:`request objects <django.http."
"HttpRequest>`."
msgstr ""
"Django utilise les :doc:`sessions </topics/http/sessions>` et le système de "
"middleware pour brancher le système d'authentification dans les :class:"
"`objets requête <django.http.HttpRequest>`."

msgid ""
"These provide a :attr:`request.user <django.http.HttpRequest.user>`  "
"attribute and a :meth:`request.auser <django.http.HttpRequest.auser>` async "
"method on every request which represents the current user. If the current "
"user has not logged in, this attribute will be set to an instance of :class:"
"`~django.contrib.auth.models.AnonymousUser`, otherwise it will be an "
"instance of :class:`~django.contrib.auth.models.User`."
msgstr ""
"Un attribut :attr:`request.user <django.http.HttpRequest.user>` et une "
"méthode asynchrone :meth:`request.auser <django.http.HttpRequest.auser>` "
"sont définis sur chaque objet requête pour représenter l'utilisateur actuel. "
"Si cet utilisateur ne s'est pas connecté, cet attribut sera constitué d'une "
"instance de :class:`~django.contrib.auth.models.AnonymousUser`, sinon il "
"s'agira d'une instance de :class:`~django.contrib.auth.models.User`."

msgid ""
"You can tell them apart with :attr:`~django.contrib.auth.models.User."
"is_authenticated`, like so::"
msgstr ""
"Vous pouvez les différencier par la méthode :attr:`~django.contrib.auth."
"models.User.is_authenticated`, comme ceci ::"

msgid "Or in an asynchronous view::"
msgstr "Ou dans une vue asynchrone ::"

msgid "The :meth:`.HttpRequest.auser` method was added."
msgstr "La méthode :meth:`.HttpRequest.auser` a été ajoutée."

msgid "How to log a user in"
msgstr "Connexion d'un utilisateur"

msgid ""
"If you have an authenticated user you want to attach to the current session "
"- this is done with a :func:`~django.contrib.auth.login` function."
msgstr ""
"Si vous disposez d'un utilisateur authentifié que vous voulez faire "
"correspondre à la session en cours, utilisez la fonction :func:`~django."
"contrib.auth.login`."

msgid "*Asynchronous version*: ``alogin()``"
msgstr "*Version asynchrone* : ``alogin()``"

msgid ""
"To log a user in, from a view, use :func:`~django.contrib.auth.login()`. It "
"takes an :class:`~django.http.HttpRequest` object and a :class:`~django."
"contrib.auth.models.User` object. :func:`~django.contrib.auth.login()` saves "
"the user's ID in the session, using Django's session framework."
msgstr ""
"Pour connecter un utilisateur à partir d'une vue, utilisez  :func:`~django."
"contrib.auth.login()`. Cette fonction accepte un objet :class:`~django.http."
"HttpRequest` et un objet :class:`~django.contrib.auth.models.User`. :func:"
"`~django.contrib.auth.login()` enregistre l'identifiant de l'utilisateur "
"dans la session en employant l'infrastructure des sessions de Django."

msgid ""
"Note that any data set during the anonymous session is retained in the "
"session after a user logs in."
msgstr ""
"Notez que toute information définie durant la session anonyme d'un "
"utilisateur est conservée dans la session à la suite du processus de "
"connexion."

msgid ""
"This example shows how you might use both :func:`~django.contrib.auth."
"authenticate()` and :func:`~django.contrib.auth.login()`::"
msgstr ""
"Cet exemple montre comment utiliser à la fois :func:`~django.contrib.auth."
"authenticate()` et :func:`~django.contrib.auth.login()`::"

msgid "``alogin()`` function was added."
msgstr "La fonction ``alogin()`` a été ajoutée."

msgid "Selecting the authentication backend"
msgstr "Choix du moteur d'authentification"

msgid ""
"When a user logs in, the user's ID and the backend that was used for "
"authentication are saved in the user's session. This allows the same :ref:"
"`authentication backend <authentication-backends>` to fetch the user's "
"details on a future request. The authentication backend to save in the "
"session is selected as follows:"
msgstr ""
"Lorsqu'un utilisateur se connecte, son identifiant et le moteur utilisé pour "
"son authentification sont enregistrés dans la session de l'utilisateur. Cela "
"permet au même :ref:`moteur d'authentification <authentication-backends>` de "
"récupérer les détails de l'utilisateur lors d'une prochaine requête. Le "
"moteur d'authentification qui sera enregistré dans la session est choisi "
"comme ceci :"

msgid "Use the value of the optional ``backend`` argument, if provided."
msgstr ""
"Si le paramètre ``backend`` factultatif est fourni, c'est celui-là qui est "
"utilisé."

msgid ""
"Use the value of the ``user.backend`` attribute, if present. This allows "
"pairing :func:`~django.contrib.auth.authenticate()` and :func:`~django."
"contrib.auth.login()`: :func:`~django.contrib.auth.authenticate()` sets the "
"``user.backend`` attribute on the user object it returns."
msgstr ""
"Si un attribut ``user.backend`` existe, c'est celui-là qui est utilisé. Cela "
"permet de combiner :func:`~django.contrib.auth.authenticate()` et :func:"
"`~django.contrib.auth.login()`: :func:`~django.contrib.auth.authenticate()` "
"définit l'attribut ``user.backend`` sur l'objet utilisateur qu'il renvoie."

msgid ""
"Use the ``backend`` in :setting:`AUTHENTICATION_BACKENDS`, if there is only "
"one."
msgstr ""
"S'il n'y a qu'un seul moteur dans :setting:`AUTHENTICATION_BACKENDS`, c'est "
"celui-là qui est utilisé."

msgid "Otherwise, raise an exception."
msgstr "Sinon, une exception est produite."

msgid ""
"In cases 1 and 2, the value of the ``backend`` argument or the ``user."
"backend`` attribute should be a dotted import path string (like that found "
"in :setting:`AUTHENTICATION_BACKENDS`), not the actual backend class."
msgstr ""
"Dans les deux premiers cas, la valeur du paramètre ``backend`` ou l'attribut "
"``user.backend`` doit correspondre à une chaîne de chemin pointé (comme la "
"syntaxe dans :setting:`AUTHENTICATION_BACKENDS`), et non pas la classe de "
"moteur réelle."

msgid "How to log a user out"
msgstr "Déconnexion d'un utilisateur"

msgid "*Asynchronous version*: ``alogout()``"
msgstr "*Version asynchrone* : ``alogout()``"

msgid ""
"To log out a user who has been logged in via :func:`django.contrib.auth."
"login()`, use :func:`django.contrib.auth.logout()` within your view. It "
"takes an :class:`~django.http.HttpRequest` object and has no return value. "
"Example::"
msgstr ""
"Pour déconnecter un utilisateur qui a été connecté par :func:`django.contrib."
"auth.login()`, utilisez :func:`django.contrib.auth.logout()` depuis la vue. "
"Cette fonction accepte un objet :class:`~django.http.HttpRequest` et ne "
"renvoie aucune valeur. Exemple ::"

msgid ""
"Note that :func:`~django.contrib.auth.logout()` doesn't throw any errors if "
"the user wasn't logged in."
msgstr ""
"Notez que :func:`~django.contrib.auth.logout()` ne signale pas d'erreur si "
"l'utilisateur n'était pas connecté."

msgid ""
"When you call :func:`~django.contrib.auth.logout()`, the session data for "
"the current request is completely cleaned out. All existing data is removed. "
"This is to prevent another person from using the same web browser to log in "
"and have access to the previous user's session data. If you want to put "
"anything into the session that will be available to the user immediately "
"after logging out, do that *after* calling :func:`django.contrib.auth."
"logout()`."
msgstr ""
"Lorsque vous appelez :func:`~django.contrib.auth.logout()`, les données de "
"session de la requête en cours sont complètement effacées. Ce comportement "
"empêche une autre personne d'utiliser le même navigateur Web pour se "
"connecter et obtenir accès aux données de session de l'utilisateur "
"précédent. Si vous souhaitez placer des informations dans la session qui "
"doivent être disponibles pour l'utilisateur immédiatement après une "
"déconnexion, faites-le *après* avoir appelé :func:`django.contrib.auth."
"logout()`."

msgid "``alogout()`` function was added."
msgstr "La fonction ``alogout()`` a été ajoutée."

msgid "Limiting access to logged-in users"
msgstr "Restriction d'accès aux utilisateurs connectés"

msgid "The raw way"
msgstr "La manière brute"

msgid ""
"The raw way to limit access to pages is to check :attr:`request.user."
"is_authenticated <django.contrib.auth.models.User.is_authenticated>` and "
"either redirect to a login page::"
msgstr ""
"La manière directe de limiter l'accès à certaines pages est de vérifier :"
"attr:`request.user.is_authenticated <django.contrib.auth.models.User."
"is_authenticated>` et de rediriger l'utilisateur vers la page de connexion "
"le cas échéant ::"

msgid "...or display an error message::"
msgstr "…ou d'afficher un message d'erreur ::"

msgid "The ``login_required`` decorator"
msgstr "Le décorateur ``login_required``"

msgid ""
"As a shortcut, you can use the convenient :func:`~django.contrib.auth."
"decorators.login_required` decorator::"
msgstr ""
"Comme raccourci, vous pouvez utiliser le décorateur :func:`~django.contrib."
"auth.decorators.login_required` bien pratique ::"

msgid ""
":func:`~django.contrib.auth.decorators.login_required` does the following:"
msgstr ":func:`~django.contrib.auth.decorators.login_required` effectue ceci :"

msgid ""
"If the user isn't logged in, redirect to :setting:`settings.LOGIN_URL "
"<LOGIN_URL>`, passing the current absolute path in the query string. "
"Example: ``/accounts/login/?next=/polls/3/``."
msgstr ""
"Si l'utilisateur n'est pas connecté, il redirige vers :setting:`settings."
"LOGIN_URL <LOGIN_URL>` en transmettant le chemin absolu dans la chaîne de "
"requête. Exemple : ``/accounts/login/?next=/polls/3/``."

msgid ""
"If the user is logged in, execute the view normally. The view code is free "
"to assume the user is logged in."
msgstr ""
"Si l'utilisateur est connecté, il exécute la vue normalement. Le code de la "
"vue peut légitimement considérer l'utilisateur comme connecté."

msgid ""
"By default, the path that the user should be redirected to upon successful "
"authentication is stored in a query string parameter called ``\"next\"``. If "
"you would prefer to use a different name for this parameter, :func:`~django."
"contrib.auth.decorators.login_required` takes an optional "
"``redirect_field_name`` parameter::"
msgstr ""
"Par défaut, le chemin vers lequel l'utilisateur doit être redirigé après un "
"processus de connexion réussi est stocké dans le paramètre de chaîne de "
"requête nommé ``\"next\"``. Si vous préférez que ce paramètre soit nommé "
"différemment, :func:`~django.contrib.auth.decorators.login_required` accepte "
"un paramètre facultatif ``redirect_field_name``::"

msgid ""
"Note that if you provide a value to ``redirect_field_name``, you will most "
"likely need to customize your login template as well, since the template "
"context variable which stores the redirect path will use the value of "
"``redirect_field_name`` as its key rather than ``\"next\"`` (the default)."
msgstr ""
"Notez que si vous indiquez une valeur pour ``redirect_field_name``, il "
"faudra très probablement aussi personnaliser le gabarit de connexion, dans "
"la mesure où la variable de contexte du gabarit qui stocke le chemin de "
"redirection utilise la valeur de ``redirect_field_name`` comme clé à la "
"place de ``\"next\"`` (la valeur par défaut)."

msgid ""
":func:`~django.contrib.auth.decorators.login_required` also takes an "
"optional ``login_url`` parameter. Example::"
msgstr ""
":func:`~django.contrib.auth.decorators.login_required` accepte également un "
"paramètre facultatif ``login_url``. Exemple ::"

msgid ""
"Note that if you don't specify the ``login_url`` parameter, you'll need to "
"ensure that the :setting:`settings.LOGIN_URL <LOGIN_URL>` and your login "
"view are properly associated. For example, using the defaults, add the "
"following lines to your URLconf::"
msgstr ""
"Notez que si vous ne renseignez pas le paramètre ``login_url``, vous devez "
"vous assurer que le réglage :setting:`settings.LOGIN_URL <LOGIN_URL>` et "
"votre vue de connexion sont correctement liés. Par exemple, en utilisant les "
"paramètres par défaut, ajoutez les lignes suivantes dans votre configuration "
"d'URL ::"

msgid ""
"The :setting:`settings.LOGIN_URL <LOGIN_URL>` also accepts view function "
"names and :ref:`named URL patterns <naming-url-patterns>`. This allows you "
"to freely remap your login view within your URLconf without having to update "
"the setting."
msgstr ""
"Le réglage :setting:`settings.LOGIN_URL <LOGIN_URL>` accepte également des "
"noms de fonction vue et des :ref:`motifs d'URL nommés <naming-url-"
"patterns>`. Cela permet de déplacer librement la vue de connexion dans la "
"configuration d'URL sans avoir besoin de mettre à jour le réglage."

msgid ""
"The ``login_required`` decorator does NOT check the ``is_active`` flag on a "
"user, but the default :setting:`AUTHENTICATION_BACKENDS` reject inactive "
"users."
msgstr ""
"Le décorateur ``login_required`` ne vérifie PAS le drapeau ``is_active`` "
"d'un utilisateur, mais le moteur :setting:`AUTHENTICATION_BACKENDS` par "
"défaut rejette les utilisateurs inactifs."

msgid ""
"If you are writing custom views for Django's admin (or need the same "
"authorization check that the built-in views use), you may find the :func:"
"`django.contrib.admin.views.decorators.staff_member_required` decorator a "
"useful alternative to ``login_required()``."
msgstr ""
"Si vous écrivez des vues personnalisées pour le site d'administration de "
"Django (ou que vous avez besoin des mêmes contrôles d'autorisation que les "
"vues intégrées utilisent), le décorateur :func:`django.contrib.admin.views."
"decorators.staff_member_required` pourrait vous être encore plus utile que "
"``login_required()``."

msgid "Support for wrapping asynchronous view functions was added."
msgstr ""
"La prise en charge de l'enveloppement des fonctions de vue asynchrones a été "
"ajoutée."

msgid "The ``LoginRequiredMixin`` mixin"
msgstr "La classe mixin ``LoginRequiredMixin``"

msgid ""
"When using :doc:`class-based views </topics/class-based-views/index>`, you "
"can achieve the same behavior as with ``login_required`` by using the "
"``LoginRequiredMixin``. This mixin should be at the leftmost position in the "
"inheritance list."
msgstr ""
"Lors de l'utilisation des :doc:`vues fondées sur les classes </topics/class-"
"based-views/index>`, vous pouvez obtenir le même comportement qu'avec "
"``login_required`` en utilisant ``LoginRequiredMixin``. Cette classe mixin "
"doit se trouver à la position la plus à gauche de la chaîne d'héritage."

msgid ""
"If a view is using this mixin, all requests by non-authenticated users will "
"be redirected to the login page or shown an HTTP 403 Forbidden error, "
"depending on the :attr:`~django.contrib.auth.mixins.AccessMixin."
"raise_exception` parameter."
msgstr ""
"Si une vue utilise cette classe mixin, toutes les requêtes par des "
"utilisateurs non authentifiés seront redirigées vers la page de connexion ou "
"traitées comme des erreurs HTTP 403 Forbidden, selon le paramètre :attr:"
"`~django.contrib.auth.mixins.AccessMixin.raise_exception`."

msgid ""
"You can set any of the parameters of :class:`~django.contrib.auth.mixins."
"AccessMixin` to customize the handling of unauthorized users::"
msgstr ""
"Vous pouvez définir n'importe lequel des paramètres de :class:`~django."
"contrib.auth.mixins.AccessMixin` pour personnaliser le traitement des "
"utilisateurs non authentifiés ::"

msgid ""
"Just as the ``login_required`` decorator, this mixin does NOT check the "
"``is_active`` flag on a user, but the default :setting:"
"`AUTHENTICATION_BACKENDS` reject inactive users."
msgstr ""
"Comme pour le décorateur ``login_required``, cette classe mixin ne vérifie "
"PAS le drapeau ``is_active`` d'un utilisateur, mais le moteur :setting:"
"`AUTHENTICATION_BACKENDS` par défaut rejette les utilisateurs inactifs."

msgid "The ``login_not_required`` decorator"
msgstr "Le décorateur ``login_not_required``"

msgid ""
"When :class:`~django.contrib.auth.middleware.LoginRequiredMiddleware` is "
"installed, all views require authentication by default. Some views, such as "
"the login view, may need to disable this behavior."
msgstr ""
"Lorsque :class:`~django.contrib.auth.middleware.LoginRequiredMiddleware` est "
"installé, toutes les vues nécessitent une authentification par défaut. "
"Certaines vues, telle que la vue de connexion, ont besoin de désactiver ce "
"comportement."

msgid ""
"Allows unauthenticated requests to this view when :class:`~django.contrib."
"auth.middleware.LoginRequiredMiddleware` is installed."
msgstr ""
"Permet des requêtes non authentifiées à cette vue lorsque :class:`~django."
"contrib.auth.middleware.LoginRequiredMiddleware` est installé."

msgid "Limiting access to logged-in users that pass a test"
msgstr "Restriction d'accès aux utilisateurs connectés passant un test"

msgid ""
"To limit access based on certain permissions or some other test, you'd do "
"essentially the same thing as described in the previous section."
msgstr ""
"Pour limiter l'accès en fonction d'une certaine permission ou d'un test "
"quelconque, le procédé est presque identique à celui décrit dans la section "
"précédente."

msgid ""
"You can run your test on :attr:`request.user <django.http.HttpRequest.user>` "
"in the view directly. For example, this view checks to make sure the user "
"has an email in the desired domain and if not, redirects to the login page::"
msgstr ""
"Vous pouvez effectuer le test sur :attr:`request.user <django.http."
"HttpRequest.user>` directement dans la vue. Par exemple, cette vue vérifie "
"que l'utilisateur possède bien une adresse électronique dans le domaine "
"prévu et, dans le cas contraire, redirige vers la page de connexion ::"

msgid ""
"As a shortcut, you can use the convenient ``user_passes_test`` decorator "
"which performs a redirect when the callable returns ``False``::"
msgstr ""
"Comme raccourci, vous pouvez utiliser le décorateur ``user_passes_test`` qui "
"procède à une redirection lorsque la fonction décorée renvoie ``False``::"

msgid ""
":func:`~django.contrib.auth.decorators.user_passes_test` takes a required "
"argument: a callable that takes a :class:`~django.contrib.auth.models.User` "
"object and returns ``True`` if the user is allowed to view the page. Note "
"that :func:`~django.contrib.auth.decorators.user_passes_test` does not "
"automatically check that the :class:`~django.contrib.auth.models.User` is "
"not anonymous."
msgstr ""
":func:`~django.contrib.auth.decorators.user_passes_test` requiert un "
"paramètre : un exécutable acceptant un objet :class:`~django.contrib.auth."
"models.User` et renvoyant ``True`` si l'utilisateur est autorisé à voir la "
"page. Notez que  :func:`~django.contrib.auth.decorators.user_passes_test` ne "
"contrôle pas d'office que l'objet :class:`~django.contrib.auth.models.User` "
"n'est pas anonyme."

msgid ""
":func:`~django.contrib.auth.decorators.user_passes_test` takes two optional "
"arguments:"
msgstr ""
":func:`~django.contrib.auth.decorators.user_passes_test` accepte deux "
"paramètres facultatifs :"

msgid "``login_url``"
msgstr "``login_url``"

msgid ""
"Lets you specify the URL that users who don't pass the test will be "
"redirected to. It may be a login page and defaults to :setting:`settings."
"LOGIN_URL <LOGIN_URL>` if you don't specify one."
msgstr ""
"Permet d'indiquer l'URL vers laquelle les utilisateurs ne passant pas le "
"test seront redirigés. Cela peut être une page de connexion, la valeur par "
"défaut étant :setting:`settings.LOGIN_URL <LOGIN_URL>`."

msgid "``redirect_field_name``"
msgstr "``redirect_field_name``"

msgid ""
"Same as for :func:`~django.contrib.auth.decorators.login_required`. Setting "
"it to ``None`` removes it from the URL, which you may want to do if you are "
"redirecting users that don't pass the test to a non-login page where there's "
"no \"next page\"."
msgstr ""
"Comme pour :func:`~django.contrib.auth.decorators.login_required`. Si vous "
"définissez ce paramètre à ``None``, il ne sera pas présent dans l'URL, ce "
"qui peut être intéressant si vous redirigez des utilisateurs qui ne passent "
"pas le test vers une page ne servant pas à se connecter et où il n'y a pas "
"de concept de « page suivante »."

msgid ""
"Support for wrapping asynchronous view functions and using asynchronous test "
"callables was added."
msgstr ""
"La prise en charge de l'enveloppement des fonctions de vue asynchrones et de "
"l'utilisation d'exécutables de test asynchrones a été ajoutée."

msgid ""
"When using :doc:`class-based views </topics/class-based-views/index>`, you "
"can use the ``UserPassesTestMixin`` to do this."
msgstr ""
"Quand on utilise les :doc:`vues fondées sur les classes</topics/class-based-"
"views/index>`, on peut utiliser la classe ``UserPassesTestMixin`` pour faire "
"cela."

msgid ""
"You have to override the ``test_func()`` method of the class to provide the "
"test that is performed. Furthermore, you can set any of the parameters of :"
"class:`~django.contrib.auth.mixins.AccessMixin` to customize the handling of "
"unauthorized users::"
msgstr ""
"Vous devez surcharger la méthode ``test_func()`` de la classe pour fournir "
"le test qui sera effectué. De plus, vous pouvez définir n'importe lequel des "
"paramètres de :class:`~django.contrib.auth.mixins.AccessMixin` pour "
"personnaliser le traitement des utilisateurs non authentifiés ::"

msgid ""
"You can also override the ``get_test_func()`` method to have the mixin use a "
"differently named function for its checks (instead of :meth:`test_func`)."
msgstr ""
"Vous pouvez aussi surcharger la méthode ``get_test_func()`` si vous "
"souhaitez que la classe mixin utilise une autre méthode pour cette "
"vérification (au lieu de :meth:`test_func`)."

msgid "Stacking ``UserPassesTestMixin``"
msgstr "Accumulation de ``UserPassesTestMixin``"

msgid ""
"Due to the way ``UserPassesTestMixin`` is implemented, you cannot stack them "
"in your inheritance list. The following does NOT work::"
msgstr ""
"En raison de l'implémentation de ``UserPassesTestMixin``, il n'est pas "
"possible d'en combiner plusieurs dans la chaîne d'héritage. Le code suivant "
"ne fonctionnera PAS ::"

msgid ""
"If ``TestMixin1`` would call ``super()`` and take that result into account, "
"``TestMixin1`` wouldn't work standalone anymore."
msgstr ""
"Si ``TestMixin1`` appelait ``super()`` et prenait en compte le résultat, "
"``TestMixin1`` ne fonctionnerait plus de façon autonome."

msgid "The ``permission_required`` decorator"
msgstr "Le décorateur ``permission_required``"

msgid ""
"It's a relatively common task to check whether a user has a particular "
"permission. For that reason, Django provides a shortcut for that case: the :"
"func:`~django.contrib.auth.decorators.permission_required()` decorator::"
msgstr ""
"Il est relativement courant de devoir vérifier que l'utilisateur dispose "
"d'une certaine permission. À cet effet, Django fournit un raccourci : le "
"décorateur :func:`~django.contrib.auth.decorators.permission_required()`::"

msgid ""
"Just like the :meth:`~django.contrib.auth.models.User.has_perm` method, "
"permission names take the form ``\"<app label>.<permission codename>\"`` (i."
"e. ``polls.add_choice`` for a permission on a model in the ``polls`` "
"application)."
msgstr ""
"Comme pour la méthode :meth:`~django.contrib.auth.models.User.has_perm`, les "
"noms de permission ont la forme ``\"<étiquette application>.<code "
"permission>\"`` (par ex. ``polls.add_choice`` pour une permission d'un "
"modèle de l'application ``polls``)."

msgid ""
"The decorator may also take an iterable of permissions, in which case the "
"user must have all of the permissions in order to access the view."
msgstr ""
"Le décorateur accepte aussi une liste de permissions, auquel cas "
"l'utilisateur doit posséder toutes les permissions de la liste afin d'avoir "
"accès à la vue."

msgid ""
"Note that :func:`~django.contrib.auth.decorators.permission_required()` also "
"takes an optional ``login_url`` parameter::"
msgstr ""
"Notez que :func:`~django.contrib.auth.decorators.permission_required()` "
"accepte également un paramètre facultatif ``login_url``::"

msgid ""
"As in the :func:`~django.contrib.auth.decorators.login_required` decorator, "
"``login_url`` defaults to :setting:`settings.LOGIN_URL <LOGIN_URL>`."
msgstr ""
"Comme pour le décorateur :func:`~django.contrib.auth.decorators."
"login_required`, la valeur par défaut de ``login_url`` est :setting:"
"`settings.LOGIN_URL <LOGIN_URL>`."

msgid ""
"If the ``raise_exception`` parameter is given, the decorator will raise :exc:"
"`~django.core.exceptions.PermissionDenied`, prompting :ref:`the 403 (HTTP "
"Forbidden) view<http_forbidden_view>` instead of redirecting to the login "
"page."
msgstr ""
"Si le paramètre ``raise_exception`` est présent, le décorateur génère une "
"exception :exc:`~django.core.exceptions.PermissionDenied` (permission "
"refusée), déclenchant la  :ref:`vue 403 (HTTP "
"Forbidden)<http_forbidden_view>` au lieu de rediriger vers la page de "
"connexion."

msgid ""
"If you want to use ``raise_exception`` but also give your users a chance to "
"login first, you can add the :func:`~django.contrib.auth.decorators."
"login_required` decorator::"
msgstr ""
"Si vous souhaitez utiliser ``raise_exception`` tout en laissant aux "
"utilisateurs une chance de se connecter, vous pouvez ajouter le décorateur :"
"func:`~django.contrib.auth.decorators.login_required`::"

msgid ""
"This also avoids a redirect loop when :class:`.LoginView`'s "
"``redirect_authenticated_user=True`` and the logged-in user doesn't have all "
"of the required permissions."
msgstr ""
"Ceci évite aussi une boucle de redirection lorsque "
"``redirect_authenticated_user=True`` dans :class:`.LoginView` et que "
"l'utilisateur connecté ne possède pas toutes les permissions requises."

msgid "The ``PermissionRequiredMixin`` mixin"
msgstr "La classe mixin ``PermissionRequiredMixin``"

msgid ""
"To apply permission checks to :doc:`class-based views </ref/class-based-"
"views/index>`, you can use the ``PermissionRequiredMixin``:"
msgstr ""
"Pour appliquer des contrôles de permission aux :doc:`vues fondées sur les "
"classes </ref/class-based-views/index>`, vous pouvez utiliser la classe "
"``PermissionRequiredMixin``:"

msgid ""
"This mixin, just like the ``permission_required`` decorator, checks whether "
"the user accessing a view has all given permissions. You should specify the "
"permission (or an iterable of permissions) using the ``permission_required`` "
"parameter::"
msgstr ""
"Cette classe mixin, tout comme le décorateur ``permission_required``, "
"contrôle si l'utilisateur accédant à une vue possède toutes les permissions "
"indiquées. La permission (ou une itération de permissions) doit être "
"indiquée dans le paramètre ``permission_required``::"

msgid ""
"You can set any of the parameters of :class:`~django.contrib.auth.mixins."
"AccessMixin` to customize the handling of unauthorized users."
msgstr ""
"Vous pouvez définir n'importe lequel des paramètres de :class:`~django."
"contrib.auth.mixins.AccessMixin` pour personnaliser le traitement des "
"utilisateurs non authentifiés."

msgid "You may also override these methods:"
msgstr "Vous pouvez également surcharger ces méthodes :"

msgid ""
"Returns an iterable of permission names used by the mixin. Defaults to the "
"``permission_required`` attribute, converted to a tuple if necessary."
msgstr ""
"Renvoie une itération de noms de permissions utilisés par la classe mixin. "
"Il s'agit par défaut du contenu de l'attribut ``permission_required``, "
"converti en tuple si nécessaire."

msgid ""
"Returns a boolean denoting whether the current user has permission to "
"execute the decorated view. By default, this returns the result of calling :"
"meth:`~django.contrib.auth.models.User.has_perms()` with the list of "
"permissions returned by :meth:`get_permission_required()`."
msgstr ""
"Renvoie une valeur booléenne indiquant si l'utilisateur actuel a la "
"permission d'exécuter la vue décorée. Par défaut, ceci renvoie le résultat "
"de l'appel à :meth:`~django.contrib.auth.models.User.has_perms()` avec la "
"liste des permissions renvoyées par :meth:`get_permission_required()`."

msgid "Redirecting unauthorized requests in class-based views"
msgstr ""
"Redirection des requêtes non autorisées dans les vues fondées sur les classes"

msgid ""
"To ease the handling of access restrictions in :doc:`class-based views </ref/"
"class-based-views/index>`, the ``AccessMixin`` can be used to configure the "
"behavior of a view when access is denied. Authenticated users are denied "
"access with an HTTP 403 Forbidden response. Anonymous users are redirected "
"to the login page or shown an HTTP 403 Forbidden response, depending on the :"
"attr:`~django.contrib.auth.mixins.AccessMixin.raise_exception` attribute."
msgstr ""
"Pour faciliter la gestion des restrictions d'accès dans les :doc:`vues "
"fondées sur les classes </ref/class-based-views/index>`, la classe "
"``AccessMixin`` peut être utilisée pour configurer le comportement d'une vue "
"lorsque son accès est refusé. Les utilisateurs authentifiés reçoivent une "
"réponse HTTP 403 Forbidden. Les utilisateurs anonymes sont redirigés vers la "
"page de connexion ou reçoivent une réponse HTTP 403, en fonction de "
"l'attribut :attr:`~django.contrib.auth.mixins.AccessMixin.raise_exception`."

msgid ""
"Default return value for :meth:`get_login_url`.  Defaults to ``None`` in "
"which case :meth:`get_login_url` falls back to :setting:`settings.LOGIN_URL "
"<LOGIN_URL>`."
msgstr ""
"Valeur de renvoi par défaut de :meth:`get_login_url`. Contient ``None`` par "
"défaut auquel cas :meth:`get_login_url` se rabat sur le contenu de :setting:"
"`settings.LOGIN_URL <LOGIN_URL>`."

msgid ""
"Default return value for :meth:`get_permission_denied_message`. Defaults to "
"an empty string."
msgstr ""
"Valeur de renvoi par défaut de :meth:`get_permission_denied_message`. "
"Contient une chaîne vide par défaut."

msgid ""
"Default return value for :meth:`get_redirect_field_name`. Defaults to "
"``\"next\"``."
msgstr ""
"Valeur de renvoi par défaut de :meth:`get_redirect_field_name`. Contient "
"``\"next\"`` par défaut."

msgid ""
"If this attribute is set to ``True``, a :class:`~django.core.exceptions."
"PermissionDenied` exception is raised when the conditions are not met.  When "
"``False`` (the default), anonymous users are redirected to the login page."
msgstr ""
"Si cet attribut est défini à ``True``, une exception :class:`~django.core."
"exceptions.PermissionDenied` est produite lorsque les conditions ne sont pas "
"remplies. Si la valeur est ``False`` (par défaut), les utilisateurs anonymes "
"sont redirigés vers la page de connexion."

msgid ""
"Returns the URL that users who don't pass the test will be redirected to. "
"Returns :attr:`login_url` if set, or :setting:`settings.LOGIN_URL "
"<LOGIN_URL>` otherwise."
msgstr ""
"Renvoie l'URL vers laquelle les utilisateurs ne passant pas le test seront "
"redirigés. Renvoie :attr:`login_url` le cas échéant, sinon :setting:"
"`settings.LOGIN_URL <LOGIN_URL>`."

msgid ""
"When :attr:`raise_exception` is ``True``, this method can be used to control "
"the error message passed to the error handler for display to the user. "
"Returns the :attr:`permission_denied_message` attribute by default."
msgstr ""
"Lorsque :attr:`raise_exception` vaut ``True``, cette méthode peut être "
"utilisée pour contrôler le message d'erreur transmis au gestionnaire "
"d'erreur pour y être affiché à destination de l'utilisateur. Par défaut, "
"renvoie l'attribut :attr:`permission_denied_message`."

msgid ""
"Returns the name of the query parameter that will contain the URL the user "
"should be redirected to after a successful login. If you set this to "
"``None``, a query parameter won't be added. Returns the :attr:"
"`redirect_field_name` attribute by default."
msgstr ""
"Renvoie le nom du paramètre de requête qui contiendra l'URL vers laquelle "
"l'utilisateur sera redirigé à la suite d'une connexion réussie. Si cette "
"valeur est ``None``, aucun paramètre de requête ne sera ajouté. Renvoie par "
"défaut l'attribut :attr:`redirect_field_name`."

msgid ""
"Depending on the value of ``raise_exception``, the method either raises a :"
"exc:`~django.core.exceptions.PermissionDenied` exception or redirects the "
"user to the ``login_url``, optionally including the ``redirect_field_name`` "
"if it is set."
msgstr ""
"En fonction de la valeur de ``raise_exception``, cette méthode peut soit "
"générer une exception :exc:`~django.core.exceptions.PermissionDenied`, soit "
"rediriger l'utilisateur vers ``login_url``, incluant potentiellement "
"``redirect_field_name`` si celui-ci est défini."

msgid "Session invalidation on password change"
msgstr "Invalidation de session lors du changement de mot de passe"

msgid ""
"If your :setting:`AUTH_USER_MODEL` inherits from :class:`~django.contrib."
"auth.models.AbstractBaseUser` or implements its own :meth:`~django.contrib."
"auth.models.AbstractBaseUser.get_session_auth_hash()` method, authenticated "
"sessions will include the hash returned by this function. In the :class:"
"`~django.contrib.auth.models.AbstractBaseUser` case, this is an HMAC of the "
"password field. Django verifies that the hash in the session for each "
"request matches the one that's computed during the request. This allows a "
"user to log out all of their sessions by changing their password."
msgstr ""
"Si votre :setting:`AUTH_USER_MODEL` hérite de :class:`~django.contrib.auth."
"models.AbstractBaseUser` ou implémente sa propre méthode :meth:`~django."
"contrib.auth.models.AbstractBaseUser.get_session_auth_hash()`,  les sessions "
"authentifiées comprendront la valeur de hachage renvoyée par cette fonction. "
"Dans le cas d'un :class:`~django.contrib.auth.models.AbstractBaseUser`, il "
"s'agit d'une empreinte HMAC du champ de mot de passe. Django vérifie que la "
"valeur de hachage dans la session de chaque requête correspond à celle qui "
"est calculée durant la requête. Cela permet à un utilisateur de se "
"déconnecter de l'ensemble de ses sessions en changeant son mot de passe."

msgid ""
"The default password change views included with Django, :class:`~django."
"contrib.auth.views.PasswordChangeView` and the ``user_change_password`` view "
"in the :mod:`django.contrib.auth` admin, update the session with the new "
"password hash so that a user changing their own password won't log "
"themselves out. If you have a custom password change view and wish to have "
"similar behavior, use the :func:`update_session_auth_hash` function."
msgstr ""
"Les vues fournies par défaut avec Django pour le changement de mot de "
"passe, :class:`~django.contrib.auth.views.PasswordChangeView` et "
"``user_change_password`` du module :mod:`django.contrib.auth`, mettent à "
"jour la session avec la valeur de hachage du nouveau mot de passe pour que "
"l'utilisateur qui change son mot de passe ne soit pas déconnecté. Si vous "
"avez une vue personnalisée pour le changement de mot de passe et que vous "
"souhaitez avoir un comportement similaire, utilisez la fonction :func:"
"`update_session_auth_hash`."

msgid "*Asynchronous version*: ``aupdate_session_auth_hash()``"
msgstr "*Version asynchrone* : ``aupdate_session_auth_hash()``"

msgid ""
"This function takes the current request and the updated user object from "
"which the new session hash will be derived and updates the session hash "
"appropriately. It also rotates the session key so that a stolen session "
"cookie will be invalidated."
msgstr ""
"Cette fonction accepte en entrée la requête actuelle ainsi que l'objet "
"utilisateur mis à jour et à partir duquel la nouvelle valeur de hachage de "
"la session sera calculée ; elle met à jour la valeur de hachage de la "
"session. Elle se charge aussi d'alterner la clé de session afin qu'un cookie "
"de session volé soit invalidé ::"

msgid "Example usage::"
msgstr "Exemple d'utilisation ::"

msgid "``aupdate_session_auth_hash()`` function was added."
msgstr "La fonction ``aupdate_session_auth_hash()`` a été ajoutée."

msgid ""
"Since :meth:`~django.contrib.auth.models.AbstractBaseUser."
"get_session_auth_hash()` is based on :setting:`SECRET_KEY`, secret key "
"values must be rotated to avoid invalidating existing sessions when updating "
"your site to use a new secret. See :setting:`SECRET_KEY_FALLBACKS` for "
"details."
msgstr ""
"Comme :meth:`~django.contrib.auth.models.AbstractBaseUser."
"get_session_auth_hash()` est basée sur :setting:`SECRET_KEY`, une rotation "
"doit être appliquée aux valeurs de clés secrètes pour éviter l'invalidation "
"de sessions existantes lors de la mise à jour du site avec une nouvelle clé "
"secrète. Voir :setting:`SECRET_KEY_FALLBACKS` pour plus de détails."

msgid "Authentication Views"
msgstr "Vues d'authentification"

msgid ""
"Django provides several views that you can use for handling login, logout, "
"and password management. These make use of the :ref:`stock auth forms <built-"
"in-auth-forms>` but you can pass in your own forms as well."
msgstr ""
"Django fournit plusieurs vues permettant de gérer la connexion, la "
"déconnexion et le traitement des mots de passe. Elles font appel aux :ref:"
"`formulaires d'authentification intégrés <built-in-auth-forms>`, mais vous "
"pouvez leur transmettre aussi vos propres formulaires."

msgid ""
"Django provides no default template for the authentication views. You should "
"create your own templates for the views you want to use. The template "
"context is documented in each view, see :ref:`all-authentication-views`."
msgstr ""
"Django fournit pas de gabarit par défaut pour les vues d'authentification. "
"Vous devez créer vos propres gabarits pour les vues que vous souhaitez "
"utiliser. Le contexte de gabarit est documenté dans chaque vue, voir :ref:"
"`all-authentication-views`."

msgid "Using the views"
msgstr "Utilisation des vues"

msgid ""
"There are different methods to implement these views in your project. The "
"easiest way is to include the provided URLconf in ``django.contrib.auth."
"urls`` in your own URLconf, for example::"
msgstr ""
"Il existe différentes méthodes pour mettre en œuvre ces vues dans votre "
"projet. Le plus simple est d'inclure l'URLconf de ``django.contrib.auth."
"urls`` dans votre propre URLconf, par exemple ::"

msgid "This will include the following URL patterns:"
msgstr "Cela comprendra les modèles d'URL suivants :"

msgid ""
"The views provide a URL name for easier reference. See :doc:`the URL "
"documentation </topics/http/urls>` for details on using named URL patterns."
msgstr ""
"Les vues possèdent un nom d'URL pour les référencer plus facilement. Voir :"
"doc:`la documentation des URL </topics/http/urls>` pour plus de détails sur "
"l'utilisation de modèles d'URL nommés."

msgid ""
"If you want more control over your URLs, you can reference a specific view "
"in your URLconf::"
msgstr ""
"Si vous voulez plus de contrôle sur vos URL, vous pouvez référencer une vue "
"spécifique dans votre URLconf ::"

msgid ""
"The views have optional arguments you can use to alter the behavior of the "
"view. For example, if you want to change the template name a view uses, you "
"can provide the ``template_name`` argument. A way to do this is to provide "
"keyword arguments in the URLconf, these will be passed on to the view. For "
"example::"
msgstr ""
"Les vues ont des paramètres optionnels que vous pouvez utiliser pour "
"modifier le comportement de la vue. Par exemple, si vous voulez changer le "
"nom du modèle utilisé par une vue, vous pouvez fournir le paramètre "
"``template_name``. Une façon de le faire est de fournir des paramètres mot-"
"clé dans l'URLconf, ceux-ci seront transmis à la vue. Par exemple ::"

msgid ""
"All views are :doc:`class-based </topics/class-based-views/index>`, which "
"allows you to easily customize them by subclassing."
msgstr ""
"Toutes les vues sont :doc:`basées sur des classes </topics/class-based-views/"
"index>` ce qui permet de les personnaliser facilement par héritage."

msgid "All authentication views"
msgstr "Toutes les vues d'authentification"

msgid ""
"This is a list with all the views ``django.contrib.auth`` provides. For "
"implementation details see :ref:`using-the-views`."
msgstr ""
"Ceci est une liste de toutes les vues fournies par ``django.contrib.auth``. "
"Pour les détails de l'implémentation, voir :ref:`using-the-views`."

msgid "**URL name:** ``login``"
msgstr "**Nom d'URL :** ``login``"

msgid ""
"See :doc:`the URL documentation </topics/http/urls>` for details on using "
"named URL patterns."
msgstr ""
"Consultez la :doc:`documentation sur les URL </topics/http/urls>` pour plus "
"de détails sur l'utilisation des motifs d'URL nommés."

msgid "**Methods and Attributes**"
msgstr "**Méthodes et attributs**"

msgid ""
"The name of a template to display for the view used to log the user in. "
"Defaults to :file:`registration/login.html`."
msgstr ""
"Le nom d'un gabarit pour afficher le résultat de la vue de connexion d'un "
"utilisateur. Sa valeur par défaut est :file:`registration/login.html`."

msgid ""
"The URL to redirect to after login. Defaults to :setting:"
"`LOGIN_REDIRECT_URL`."
msgstr ""
"L'URL vers laquelle rediriger l'utilisateur après la connexion, la valeur "
"par défaut étant :setting:`LOGIN_REDIRECT_URL`."

msgid ""
"The name of a ``GET`` field containing the URL to redirect to after login. "
"Defaults to ``next``. Overrides the :meth:`get_default_redirect_url` URL if "
"the given ``GET`` parameter is passed."
msgstr ""
"Le nom d'un champ ``GET`` contenant l'URL vers laquelle rediriger après la "
"connexion. Sa valeur par défaut est ``next``. Cela surcharge l'URL :meth:"
"`get_default_redirect_url` si le paramètre ``GET`` indiqué est renseigné."

msgid ""
"A callable (typically a form class) to use for authentication. Defaults to :"
"class:`~django.contrib.auth.forms.AuthenticationForm`."
msgstr ""
"Un exécutable (typiquement une classe de formulaire) à utiliser pour "
"l'authentification. Sa valeur par défaut est :class:`~django.contrib.auth."
"forms.AuthenticationForm`."

msgid ""
"A dictionary of context data that will be added to the default context data "
"passed to the template."
msgstr ""
"Un dictionnaire de données de contexte qui sera fusionné avec les données de "
"contexte par défaut transmises au gabarit."

msgid ""
"A boolean that controls whether or not authenticated users accessing the "
"login page will be redirected as if they had just successfully logged in. "
"Defaults to ``False``."
msgstr ""
"Une valeur booléenne indiquant si les utilisateurs authentifiés accédant à "
"la page de connexion sont redirigés comme s'ils venaient de se connecter. La "
"valeur par défaut est ``False``."

msgid ""
"If you enable ``redirect_authenticated_user``, other websites will be able "
"to determine if their visitors are authenticated on your site by requesting "
"redirect URLs to image files on your website. To avoid this \"`social media "
"fingerprinting <https://robinlinus.github.io/socialmedia-leak/>`_\" "
"information leakage, host all images and your favicon on a separate domain."
msgstr ""
"Si vous activez ``redirect_authenticated_user``, d'autres sites Web seront "
"capables de déterminer si leurs visiteurs sont authentifiés sur votre site "
"en faisant des requêtes de redirection vers des fichiers images de votre "
"site. Pour éviter cette divulgation d'information par « `empreinte de médias "
"sociaux <https://robinlinus.github.io/socialmedia-leak/>`_ », servez toutes "
"les images ainsi que la favicon depuis un domaine distinct."

msgid ""
"Enabling ``redirect_authenticated_user`` can also result in a redirect loop "
"when using the :func:`.permission_required` decorator unless the "
"``raise_exception`` parameter is used."
msgstr ""
"L'activation de ``redirect_authenticated_user`` peut aussi aboutir à une "
"boucle de redirection lorsque le décorateur :func:`.permission_required` est "
"utilisé sans que le paramètre ``raise_exception`` ne soit indiqué."

msgid ""
"A :class:`set` of hosts, in addition to :meth:`request.get_host() <django."
"http.HttpRequest.get_host>`, that are safe for redirecting after login. "
"Defaults to an empty :class:`set`."
msgstr ""
"Un ensemble :class:`set` d'hôtes, en plus de :meth:`request.get_host() "
"<django.http.HttpRequest.get_host>`, qui sont sûrs comme cible de "
"redirection après la connexion. L'ensemble  :class:`set` est vide par défaut."

msgid ""
"Returns the URL to redirect to after login. The default implementation "
"resolves and returns :attr:`next_page` if set, or :setting:"
"`LOGIN_REDIRECT_URL` otherwise."
msgstr ""
"Renvoie l'URL vers laquelle rediriger après la connexion. L'implémentation "
"par défaut résout et renvoie :attr:`next_page` si l'attribut est défini ou :"
"setting:`LOGIN_REDIRECT_URL` dans le cas contraire."

msgid "Here's what ``LoginView`` does:"
msgstr "Voici ce que fait ``LoginView``:"

msgid ""
"If called via ``GET``, it displays a login form that POSTs to the same URL. "
"More on this in a bit."
msgstr ""
"Quand elle est appelée par ``GET``, elle affiche un formulaire de connexion "
"dont la cible ``POST`` envoie vers la même URL. Plus d'infos à ce sujet dans "
"un moment."

msgid ""
"If called via ``POST`` with user submitted credentials, it tries to log the "
"user in. If login is successful, the view redirects to the URL specified in "
"``next``. If ``next`` isn't provided, it redirects to :setting:`settings."
"LOGIN_REDIRECT_URL <LOGIN_REDIRECT_URL>` (which defaults to ``/accounts/"
"profile/``). If login isn't successful, it redisplays the login form."
msgstr ""
"Quand elle est appelée par ``POST`` avec les données d'authentification d'un "
"utilisateur, elle tente de connecter cet utilisateur. Si l'opération "
"réussit, la vue redirige vers l'URL indiquée dans ``next``. Si ``next`` est "
"absent, elle redirige vers :setting:`settings.LOGIN_REDIRECT_URL "
"<LOGIN_REDIRECT_URL>` (``/accounts/profile/`` par défaut). Si la connexion "
"échoue, la vue affiche à nouveau le formulaire de connexion."

msgid ""
"It's your responsibility to provide the html for the login template , called "
"``registration/login.html`` by default. This template gets passed four "
"template context variables:"
msgstr ""
"Il est de votre devoir de fournir le code HTML du gabarit de connexion, "
"nommé ``registration/login.html`` par défaut. Ce gabarit reçoit quatre "
"variables de contexte de gabarit :"

msgid ""
"``form``: A :class:`~django.forms.Form` object representing the :class:"
"`~django.contrib.auth.forms.AuthenticationForm`."
msgstr ""
"``form``: un objet :class:`~django.forms.Form` représentant le formulaire :"
"class:`~django.contrib.auth.forms.AuthenticationForm`."

msgid ""
"``next``: The URL to redirect to after successful login. This may contain a "
"query string, too."
msgstr ""
"``next``: l'URL vers laquelle rediriger après une connexion réussie. Elle "
"peut aussi contenir une chaîne de requête."

msgid ""
"``site``: The current :class:`~django.contrib.sites.models.Site`, according "
"to the :setting:`SITE_ID` setting. If you don't have the site framework "
"installed, this will be set to an instance of :class:`~django.contrib.sites."
"requests.RequestSite`, which derives the site name and domain from the "
"current :class:`~django.http.HttpRequest`."
msgstr ""
"``site``: le :class:`~django.contrib.sites.models.Site` actuel, selon le "
"réglage :setting:`SITE_ID`. Si l'application ``site`` n'est pas installée, "
"il s'agira d'une instance de :class:`~django.contrib.sites.requests."
"RequestSite` qui détecte le nom du site et son domaine à partir de l'objet :"
"class:`~django.http.HttpRequest` en cours."

msgid ""
"``site_name``: An alias for ``site.name``. If you don't have the site "
"framework installed, this will be set to the value of :attr:`request."
"META['SERVER_NAME'] <django.http.HttpRequest.META>`. For more on sites, see :"
"doc:`/ref/contrib/sites`."
msgstr ""
"``site_name``: un alias de ``site.name``. Si l'application ``site`` n'est "
"pas installée, cette variable contiendra la valeur de :attr:`request."
"META['SERVER_NAME'] <django.http.HttpRequest.META>`. Pour plus "
"d'informations sur les sites, voir :doc:`/ref/contrib/sites`."

msgid ""
"If you'd prefer not to call the template :file:`registration/login.html`, "
"you can pass the ``template_name`` parameter via the extra arguments to the "
"``as_view`` method in your URLconf. For example, this URLconf line would "
"use :file:`myapp/login.html` instead::"
msgstr ""
"Si vous préférez ne pas utiliser le gabarit :file:`registration/login.html`, "
"vous pouvez renseigner le paramètre ``template_name`` via les paramètres "
"supplémentaires de la méthode ``as_view`` dans votre configuration d'URL. "
"Par exemple, cette ligne de configuration d'URL force l'utilisation de :file:"
"`myapp/login.html`::"

msgid ""
"You can also specify the name of the ``GET`` field which contains the URL to "
"redirect to after login using ``redirect_field_name``. By default, the field "
"is called ``next``."
msgstr ""
"Vous pouvez également définir le nom du champ ``GET`` contenant l'URL vers "
"laquelle rediriger après la connexion en utiliisant ``redirect_field_name``. "
"Par défaut, ce champ s'appelle ``next``."

msgid ""
"Here's a sample :file:`registration/login.html` template you can use as a "
"starting point. It assumes you have a :file:`base.html` template that "
"defines a ``content`` block:"
msgstr ""
"Voici un exemple de gabarit  :file:`registration/login.html` comme point de "
"départ. Il compte sur la présence d'un gabarit :file:`base.html` qui définit "
"un bloc ``content``:"

msgid ""
"If you have customized authentication (see :doc:`Customizing Authentication "
"</topics/auth/customizing>`) you can use a custom authentication form by "
"setting the ``authentication_form`` attribute. This form must accept a "
"``request`` keyword argument in its ``__init__()`` method and provide a "
"``get_user()`` method which returns the authenticated user object (this "
"method is only ever called after successful form validation)."
msgstr ""
"Si vous avez personnalisé l'authentification (voir :doc:`Personnalisation de "
"l'authentification </topics/auth/customizing>`), il est possible d'utiliser "
"un formulaire d'authentification personnalisé en définissant l'attribut "
"``authentication_form``. La méthode  ``__init__()`` de ce formulaire doit "
"accepter un paramètre nommé ``request``; le formulaire doit également "
"implémenter une méthode ``get_user()`` qui renvoie l'objet utilisateur "
"authentifié (cette méthode n'est appelée qu'à la suite d'une validation de "
"formulaire réussie)."

msgid "Logs a user out on ``POST`` requests."
msgstr "Déconnecte un utilisateur avec les requêtes ``POST``."

msgid "**URL name:** ``logout``"
msgstr "**Nom d'URL :** ``logout``"

msgid "**Attributes:**"
msgstr "**Attributs :**"

msgid ""
"The URL to redirect to after logout. Defaults to :setting:"
"`LOGOUT_REDIRECT_URL`."
msgstr ""
"L'URL vers laquelle rediriger l'utilisateur après la déconnexion, la valeur "
"par défaut étant :setting:`LOGOUT_REDIRECT_URL`."

msgid ""
"The full name of a template to display after logging the user out. Defaults "
"to :file:`registration/logged_out.html`."
msgstr ""
"Le nom complet d'un gabarit à afficher après la déconnexion d'un "
"utilisateur. Sa valeur par défaut est :file:`registration/logged_out.html`."

msgid ""
"The name of a ``GET`` field containing the URL to redirect to after log out. "
"Defaults to ``'next'``. Overrides the :attr:`next_page` URL if the given "
"``GET`` parameter is passed."
msgstr ""
"Le nom d'un champ ``GET`` contenant l'URL vers laquelle rediriger après la "
"déconnexion. Sa valeur par défaut est ``'next'``. Cela surcharge l'URL :attr:"
"`next_page` si le paramètre ``GET`` indiqué est renseigné."

msgid ""
"A :class:`set` of hosts, in addition to :meth:`request.get_host() <django."
"http.HttpRequest.get_host>`, that are safe for redirecting after logout. "
"Defaults to an empty :class:`set`."
msgstr ""
"Un ensemble :class:`set` d'hôtes, en plus de :meth:`request.get_host() "
"<django.http.HttpRequest.get_host>`, qui sont sûrs comme cible de "
"redirection après la déconnexion. L'ensemble  :class:`set` est vide par "
"défaut."

msgid "**Template context:**"
msgstr "**Contexte de gabarit :**"

msgid "``title``: The string \"Logged out\", localized."
msgstr "``title``: la chaîne « Logged out », traduite."

msgid "Logs a user out on ``POST`` requests, then redirects to the login page."
msgstr ""
"Déconnecte un utilisateur par le type de requête ``POST``, puis redirige "
"vers la page de connexion."

msgid "**URL name:** No default URL provided"
msgstr "**Nom d'URL :** aucune URL par défaut"

msgid "**Optional arguments:**"
msgstr "**Paramètres facultatifs :**"

msgid ""
"``login_url``: The URL of the login page to redirect to. Defaults to :"
"setting:`settings.LOGIN_URL <LOGIN_URL>` if not supplied."
msgstr ""
"``login_url``: l'URL de la page de connexion vers laquelle rediriger. Si ce "
"paramètre n'est pas renseigné, la valeur par défaut utilisée est :setting:"
"`settings.LOGIN_URL <LOGIN_URL>`."

msgid "**URL name:** ``password_change``"
msgstr "**Nom d'URL :** ``password_change``"

msgid "Allows a user to change their password."
msgstr "Permet à un utilisateur de changer son mot de passe."

msgid ""
"The full name of a template to use for displaying the password change form. "
"Defaults to :file:`registration/password_change_form.html` if not supplied."
msgstr ""
"Le nom complet d'un gabarit à utiliser pour l'affichage du formulaire de "
"changement du mot de passe. Sa valeur par défaut est :file:`registration/"
"password_change_form.html` si le paramètre n'est pas renseigné."

msgid ""
"The URL to redirect to after a successful password change. Defaults to "
"``'password_change_done'``."
msgstr ""
"L'URL vers laquelle rediriger après un changement de mot de passe réussi. "
"Contient ``'password_change_done'`` par défaut."

msgid ""
"A custom \"change password\" form which must accept a ``user`` keyword "
"argument. The form is responsible for actually changing the user's password. "
"Defaults to :class:`~django.contrib.auth.forms.PasswordChangeForm`."
msgstr ""
"Un formulaire de changement de mot de passe personnalisé qui doit accepter "
"un paramètre nommé ``user``. Le formulaire est responsable de changer "
"réellement le mot de passe de l'utilisateur. La valeur par défaut est :class:"
"`~django.contrib.auth.forms.PasswordChangeForm`."

msgid "``form``: The password change form (see ``form_class`` above)."
msgstr ""
"``form``: le formulaire de changement de mot de passe (voir ``form_class`` "
"ci-dessus)."

msgid "**URL name:** ``password_change_done``"
msgstr "**Nom d'URL :** ``password_change_done``"

msgid "The page shown after a user has changed their password."
msgstr "La page affichée après qu'un utilisateur a changé son mot de passe."

msgid ""
"The full name of a template to use. Defaults to :file:`registration/"
"password_change_done.html` if not supplied."
msgstr ""
"Le nom complet d'un gabarit à utiliser. Sa valeur par défaut est :file:"
"`registration/password_change_done.html` si le paramètre n'est pas renseigné."

msgid "**URL name:** ``password_reset``"
msgstr "**Nom d'URL :** ``password_reset``"

msgid ""
"Allows a user to reset their password by generating a one-time use link that "
"can be used to reset the password, and sending that link to the user's "
"registered email address."
msgstr ""
"Permet à un utilisateur de réinitialiser son mot de passe en générant un "
"lien à usage unique permettant la réinitialisation du mot de passe. Ce lien "
"est envoyé à l'adresse électronique enregistrée pour cet utilisateur."

msgid "This view will send an email if the following conditions are met:"
msgstr ""
"Cette vue envoie un courriel si les conditions suivantes sont réunies :"

msgid "The email address provided exists in the system."
msgstr "L'adresse électronique fournie existe dans le système."

msgid "The requested user is active (``User.is_active`` is ``True``)."
msgstr ""
"L'utilisateur qui fait la demande est actif (``User.is_active`` vaut "
"``True``)."

msgid ""
"The requested user has a usable password. Users flagged with an unusable "
"password (see :meth:`~django.contrib.auth.models.User."
"set_unusable_password`) aren't allowed to request a password reset to "
"prevent misuse when using an external authentication source like LDAP."
msgstr ""
"L'utilisateur qui fait la demande possède un mot de passe utilisable. Les "
"utilisateurs marqués avec un mot de passe inutilisable (voir :meth:`~django."
"contrib.auth.models.User.set_unusable_password`) ne sont pas autorisés à "
"demander une réinitialisation de leur mot de passe afin d'éviter un "
"comportement inapproprié lorsqu'une source d'authentification externe est "
"configurée, comme par. ex. LDAP."

msgid ""
"If any of these conditions are *not* met, no email will be sent, but the "
"user won't receive any error message either. This prevents information "
"leaking to potential attackers. If you want to provide an error message in "
"this case, you can subclass :class:`~django.contrib.auth.forms."
"PasswordResetForm` and use the ``form_class`` attribute."
msgstr ""
"Si l'une de ces conditions n'est *pas* remplie, aucun courriel n'est envoyé, "
"mais l'utilisateur ne reçoit pas non plus de message d'erreur, ceci pour "
"empêcher une divulgation d'information à de potentiels attaquants. Si vous "
"souhaitez fournir un message d'erreur dans cette situation, vous pouvez "
"créer une classe héritant de :class:`~django.contrib.auth.forms."
"PasswordResetForm` et employer l'attribut ``form_class``."

msgid ""
"Be aware that sending an email costs extra time, hence you may be vulnerable "
"to an email address enumeration timing attack due to a difference between "
"the duration of a reset request for an existing email address and the "
"duration of a reset request for a nonexistent email address. To reduce the "
"overhead, you can use a 3rd party package that allows to send emails "
"asynchronously, e.g. :pypi:`django-mailer`."
msgstr ""
"Soyez conscients que l'envoi d'un courriel prend un peu de temps, ce qui "
"peut vous rendre vulnérable à une attaque temporelle d'énumération "
"d'adresses électroniques en raison de la différence entre la durée d'une "
"requête de réinitialisation quand l'adresse de courriel existe ou quand elle "
"n'existe pas. Pour éviter cet écart temporel, vous pouvez utiliser un module "
"tiers qui autorise l'envoi asynchrone de courriels, comme par exemple :pypi:"
"`django-mailer`."

msgid ""
"The full name of a template to use for displaying the password reset form. "
"Defaults to :file:`registration/password_reset_form.html` if not supplied."
msgstr ""
"Le nom complet d'un gabarit à utiliser pour l'affichage du formulaire de "
"réinitialisation du mot de passe. Sa valeur par défaut est :file:"
"`registration/password_reset_form.html` si le paramètre n'est pas renseigné."

msgid ""
"Form that will be used to get the email of the user to reset the password "
"for. Defaults to :class:`~django.contrib.auth.forms.PasswordResetForm`."
msgstr ""
"Formulaire utilisé pour obtenir l'adresse électronique de l'utilisateur pour "
"lequel le mot de passe doit être réinitialisé. La valeur par défaut est :"
"class:`~django.contrib.auth.forms.PasswordResetForm`."

msgid ""
"The full name of a template to use for generating the email with the reset "
"password link. Defaults to :file:`registration/password_reset_email.html` if "
"not supplied."
msgstr ""
"Le nom complet d'un gabarit à utiliser pour produire le courriel contenant "
"le lien de réinitialisation du mot de passe. Sa valeur par défaut est :file:"
"`registration/password_reset_email.html` si le paramètre n'est pas renseigné."

msgid ""
"The full name of a template to use for the subject of the email with the "
"reset password link. Defaults to :file:`registration/password_reset_subject."
"txt` if not supplied."
msgstr ""
"Le nom complet d'un gabarit à utiliser pour le sujet du courriel contenant "
"le lien de réinitialisation du mot de passe. Sa valeur par défaut est :file:"
"`registration/password_reset_subject.txt` si le paramètre n'est pas "
"renseigné."

msgid ""
"Instance of the class to check the one time link. This will default to "
"``default_token_generator``, it's an instance of ``django.contrib.auth."
"tokens.PasswordResetTokenGenerator``."
msgstr ""
"Instance de la classe qui vérifie le lien à usage unique. La valeur par "
"défaut est ``default_token_generator`` qui est une instance de ``django."
"contrib.auth.tokens.PasswordResetTokenGenerator``."

msgid ""
"The URL to redirect to after a successful password reset request. Defaults "
"to ``'password_reset_done'``."
msgstr ""
"L'URL vers laquelle rediriger après une demande de réinitialisation de mot "
"de passe réussie. Contient ``'password_reet_done'`` par défaut."

msgid ""
"A valid email address. By default Django uses the :setting:"
"`DEFAULT_FROM_EMAIL`."
msgstr ""
"Une adresse électronique valide. Par défaut, Django utilise :setting:"
"`DEFAULT_FROM_EMAIL`."

msgid ""
"The full name of a template to use for generating a :mimetype:`text/html` "
"multipart email with the password reset link. By default, HTML email is not "
"sent."
msgstr ""
"Le nom complet d'un gabarit à utiliser pour produire un courriel avec "
"plusieurs parties :mimetype:`text/html` et contenant le lien de "
"réinitialisation du mot de passe. Par défaut, le courriel n'est pas envoyé "
"au format HTML."

msgid ""
"A dictionary of context data that will be available in the email template. "
"It can be used to override default template context values listed below e.g. "
"``domain``."
msgstr ""
"Un dictionnaire de données de contexte qui sera disponible dans le gabarit "
"du courriel. Il peut être utilisé pour surcharger les valeurs de contexte de "
"gabarit par défaut énumérées ci-dessous, par ex. ``domain``."

msgid ""
"``form``: The form (see ``form_class`` above) for resetting the user's "
"password."
msgstr ""
"``form``: le formulaire de réinitialisation du mot de passe de l'utilisateur "
"(voir ``form_class`` ci-dessus)."

msgid "**Email template context:**"
msgstr "**Contexte de gabarit du courriel :**"

msgid "``email``: An alias for ``user.email``"
msgstr "``email``: un alias de ``user.email``"

msgid ""
"``user``: The current :class:`~django.contrib.auth.models.User`, according "
"to the ``email`` form field. Only active users are able to reset their "
"passwords (``User.is_active is True``)."
msgstr ""
"``user``: l'utilisateur :class:`~django.contrib.auth.models.User` actuel, en "
"accord avec le champ de formulaire ``email``. Seuls les utilisateurs actifs "
"ont la possibilité de réinitialiser leur mot de passe (``User.is_active is "
"True``)."

msgid ""
"``domain``: An alias for ``site.domain``. If you don't have the site "
"framework installed, this will be set to the value of ``request.get_host()``."
msgstr ""
"``domain``: un alias de ``site.domain``. Si l'application ``site`` n'est pas "
"installée, cette variable contiendra la valeur de ``request.get_host()``."

msgid "``protocol``: http or https"
msgstr "``protocol``: http ou https"

msgid "``uid``: The user's primary key encoded in base 64."
msgstr "``uid``: la clé primaire de l'utilisateur codée en base64."

msgid "``token``: Token to check that the reset link is valid."
msgstr ""
"``token``: jeton servant à contrôler la validité du lien de réinitialisation."

msgid ""
"Sample ``registration/password_reset_email.html`` (email body template):"
msgstr ""
"Exemple de ``registration/password_reset_email.html`` (gabarit de corps de "
"message) :"

msgid ""
"The same template context is used for subject template. Subject must be "
"single line plain text string."
msgstr ""
"Le gabarit du sujet reçoit le même contexte de gabarit. Le sujet doit être "
"une seule ligne de texte brut."

msgid "**URL name:** ``password_reset_done``"
msgstr "**Nom d'URL :** ``password_reset_done``"

msgid ""
"The page shown after a user has been emailed a link to reset their password. "
"This view is called by default if the :class:`PasswordResetView` doesn't "
"have an explicit ``success_url`` URL set."
msgstr ""
"La page affichée après qu'un utilisateur a reçu le lien pour réinitialiser "
"son mot de passe. Cette vue est appelée par défaut si la vue :class:"
"`PasswordResetView` ne possède pas une URL ``success_url`` définie "
"explicitement."

msgid ""
"If the email address provided does not exist in the system, the user is "
"inactive, or has an unusable password, the user will still be redirected to "
"this view but no email will be sent."
msgstr ""
"Si l'adresse électronique fournie n'existe pas dans le système, si "
"l'utilisateur est inactif ou si son mot de passe est inutilisable, cette vue "
"sera tout de même affichée, mais aucun message ne sera envoyé."

msgid ""
"The full name of a template to use. Defaults to :file:`registration/"
"password_reset_done.html` if not supplied."
msgstr ""
"Le nom complet d'un gabarit à utiliser. Sa valeur par défaut est :file:"
"`registration/password_reset_done.html` si le paramètre n'est pas renseigné."

msgid "**URL name:** ``password_reset_confirm``"
msgstr "**Nom d'URL :** ``password_reset_confirm``"

msgid "Presents a form for entering a new password."
msgstr "Affiche un formulaire pour saisir un nouveau mot de passe."

msgid "**Keyword arguments from the URL:**"
msgstr "**Paramètres nommés provenant de l'URL :**"

msgid "``uidb64``: The user's id encoded in base 64."
msgstr "``uidb64``: l'identifiant de l'utilisateur codé en base 64."

msgid "``token``: Token to check that the password is valid."
msgstr "``token``: jeton servant à contrôler la validité du mot de passe."

msgid ""
"The full name of a template to display the confirm password view. Default "
"value is :file:`registration/password_reset_confirm.html`."
msgstr ""
"Le nom complet d'un gabarit à utiliser pour l'affichage de la vue de "
"confirmation du mot de passe. Sa valeur par défaut est :file:`registration/"
"password_reset_confirm.html`."

msgid ""
"Instance of the class to check the password. This will default to "
"``default_token_generator``, it's an instance of ``django.contrib.auth."
"tokens.PasswordResetTokenGenerator``."
msgstr ""
"Instance de la classe qui vérifie le mot de passe. La valeur par défaut est "
"``default_token_generator`` qui est une instance de ``django.contrib.auth."
"tokens.PasswordResetTokenGenerator``."

msgid ""
"A boolean indicating if the user should be automatically authenticated after "
"a successful password reset. Defaults to ``False``."
msgstr ""
"Une valeur booléenne indiquant si l'utilisateur doit être automatiquement "
"authentifié à la suite d'une réinitialisation de mot de passe réussie. Vaut "
"``False`` par défaut."

msgid ""
"A dotted path to the authentication backend to use when authenticating a "
"user if ``post_reset_login`` is ``True``. Required only if you have "
"multiple :setting:`AUTHENTICATION_BACKENDS` configured. Defaults to ``None``."
msgstr ""
"Un chemin Python vers le moteur d'authentification à utiliser lors d'une "
"authentification si ``post_reset_login`` vaut ``True``. Obligatoire "
"seulement si plusieurs moteurs sont configurés dans :setting:"
"`AUTHENTICATION_BACKENDS`. La valeur par défaut est ``None``."

msgid ""
"Form that will be used to set the password. Defaults to :class:`~django."
"contrib.auth.forms.SetPasswordForm`."
msgstr ""
"Formulaire utilisé pour définir le mot de passe. La valeur par défaut est :"
"class:`~django.contrib.auth.forms.SetPasswordForm`."

msgid ""
"URL to redirect after the password reset done. Defaults to "
"``'password_reset_complete'``."
msgstr ""
"URL vers laquelle rediriger après une réinitialisation de mot de passe. "
"Contient ``'password_reset_complete'`` par défaut."

msgid ""
"Token parameter displayed as a component of password reset URLs. Defaults to "
"``'set-password'``."
msgstr ""
"Paramètre jeton affiché comme composant des URL de réinitialisation de mot "
"de passe. Contient ``'set-password'`` par défaut."

msgid ""
"``form``: The form (see ``form_class`` above) for setting the new user's "
"password."
msgstr ""
"``form``: le formulaire de définition du mot de passe du nouvel utilisateur "
"(voir ``form_class`` ci-dessus)."

msgid ""
"``validlink``: Boolean, True if the link (combination of ``uidb64`` and "
"``token``) is valid or unused yet."
msgstr ""
"``validlink``: valeur booléenne, ``True`` si le lien (combinaison de "
"``uidb64`` et de ``token``) est valable ou pas encore utilisé."

msgid "**URL name:** ``password_reset_complete``"
msgstr "**Nom d'URL :** ``password_reset_complete``"

msgid ""
"Presents a view which informs the user that the password has been "
"successfully changed."
msgstr ""
"Affiche une vue informant l'utilisateur que son mot de passe a été changé "
"avec succès."

msgid ""
"The full name of a template to display the view. Defaults to :file:"
"`registration/password_reset_complete.html`."
msgstr ""
"Le nom complet d'un gabarit pour afficher la vue. Sa valeur par défaut est :"
"file:`registration/password_reset_complete.html`."

msgid "Helper functions"
msgstr "Fonctions utilitaires"

msgid ""
"Redirects to the login page, and then back to another URL after a successful "
"login."
msgstr ""
"Redirige vers la page de connexion, puis vers une autre URL si la connexion "
"réussit."

msgid "**Required arguments:**"
msgstr "**Paramètres obligatoires :**"

msgid "``next``: The URL to redirect to after a successful login."
msgstr ""
"``next_page``: l'URL vers laquelle rediriger après une connexion réussie."

msgid ""
"``redirect_field_name``: The name of a ``GET`` field containing the URL to "
"redirect to after login. Overrides ``next`` if the given ``GET`` parameter "
"is passed."
msgstr ""
"``redirect_field_name``: le nom d'un champ ``GET`` contenant l'URL vers "
"laquelle rediriger après la connexion. Cela surcharge ``next`` si le "
"paramètre ``GET`` indiqué est renseigné."

msgid "Built-in forms"
msgstr "Formulaires intégrés"

msgid ""
"If you don't want to use the built-in views, but want the convenience of not "
"having to write forms for this functionality, the authentication system "
"provides several built-in forms located in :mod:`django.contrib.auth.forms`:"
msgstr ""
"Si vous ne souhaitez pas utiliser les vues intégrées mais que vous voulez "
"profiter de ne pas devoir réécrire les formulaires de cette fonctionnalité, "
"le système d'authentification fournit plusieurs formulaires intégrés se "
"trouvant dans :mod:`django.contrib.auth.forms`:"

msgid ""
"The built-in authentication forms make certain assumptions about the user "
"model that they are working with. If you're using a :ref:`custom user model "
"<auth-custom-user>`, it may be necessary to define your own forms for the "
"authentication system. For more information, refer to the documentation "
"about :ref:`using the built-in authentication forms with custom user models "
"<custom-users-and-the-built-in-auth-forms>`."
msgstr ""
"Les formulaires d'authentification intégrés comptent sur un certain nombre "
"de caractéristiques du modèle utilisateur avec lequel ils interagissent. Si "
"vous utilisez un :ref:`modèle d'utilisateur personnalisé <auth-custom-"
"user>`, il peut être nécessaire de définir vos propres formulaires pour le "
"système d'authentification. Pour plus d'informations, consultez la "
"documentation sur l’:ref:`utilisation des formulaires d'authentification "
"intégrés avec les modèles d'utilisateur personnalisés <custom-users-and-the-"
"built-in-auth-forms>`."

msgid ""
"A form used in the admin interface to change a user's password, including "
"the ability to set an :meth:`unusable password <django.contrib.auth.models."
"User.set_unusable_password>`, which blocks the user from logging in with "
"password-based authentication."
msgstr ""
"Un formulaire utilisé dans l'interface d'administration pour modifier le mot "
"de passe d'un utilisateur, y compris la possibilité de définir un :meth:`mot "
"de passe inutilisable <django.contrib.auth.models.User."
"set_unusable_password>`, ce qui empêche la personne concernée de se "
"connecter avec un mot de passe."

msgid "Takes the ``user`` as the first positional argument."
msgstr "Accepte ``user`` comme premier paramètre positionnel."

msgid ""
"Option to disable (or reenable) password-based authentication was added."
msgstr ""
"L'option de désactiver (ou réactiver) l'authentification basée sur les mots "
"de passe a été ajoutée."

msgid "A form for logging a user in."
msgstr "Un formulaire pour connecter un utilisateur."

msgid ""
"Takes ``request`` as its first positional argument, which is stored on the "
"form instance for use by sub-classes."
msgstr ""
"Accepte ``request`` comme premier paramètre positionnel, qui est ensuite "
"stocké dans l'instance de formulaire à disposition des sous-classes."

msgid ""
"By default, ``AuthenticationForm`` rejects users whose ``is_active`` flag is "
"set to ``False``. You may override this behavior with a custom policy to "
"determine which users can log in. Do this with a custom form that subclasses "
"``AuthenticationForm`` and overrides the ``confirm_login_allowed()`` method. "
"This method should raise a :exc:`~django.core.exceptions.ValidationError` if "
"the given user may not log in."
msgstr ""
"Par défaut, ``AuthenticationForm`` rejette les utilisateurs pour lesquels "
"``is_active`` est à ``False``. Vous pouvez modifier ce comportement pour "
"définir une stratégie personnalisée de détermination des utilisateurs qui "
"peuvent se connecter. Pour cela, utilisez un formulaire personnalisé qui "
"hérite de ``AuthenticationForm`` et remplace la méthode "
"``confirm_login_allowed()``. Cette méthode doit générer une exception :exc:"
"`~django.core.exceptions.ValidationError` lorsque l'utilisateur donné n'est "
"pas autorisé à se connecter."

msgid ""
"For example, to allow all users to log in regardless of \"active\" status::"
msgstr ""
"Par exemple, pour permettre à tous les utilisateurs de se connecter, "
"indépendamment de leur statut « actif » ::"

msgid ""
"(In this case, you'll also need to use an authentication backend that allows "
"inactive users, such as :class:`~django.contrib.auth.backends."
"AllowAllUsersModelBackend`.)"
msgstr ""
"(Dans ce cas, il faudra aussi utiliser un moteur d'authentification qui "
"autorise les utilisateurs inactifs, tel que :class:`~django.contrib.auth."
"backends.AllowAllUsersModelBackend`.)"

msgid "Or to allow only some active users to log in::"
msgstr ""
"Ou pour autoriser uniquement certains utilisateurs actifs à se connecter ::"

msgid "A form for allowing a user to change their password."
msgstr ""
"Un formulaire pour permettre à un utilisateur de changer son mot de passe."

msgid ""
"A form for generating and emailing a one-time use link to reset a user's "
"password."
msgstr ""
"Un formulaire pour générer et envoyer par courriel un lien à usage unique "
"pour réinitialiser le mot de passe d'un utilisateur."

msgid ""
"Uses the arguments to send an ``EmailMultiAlternatives``. Can be overridden "
"to customize how the email is sent to the user."
msgstr ""
"Utilise les paramètres pour envoyer un message ``EmailMultiAlternatives``. "
"Peut être surchargé pour personnaliser la manière dont le courriel est "
"envoyé à l'utilisateur."

msgid "Parameters"
msgstr "Paramètres"

msgid "the template for the subject."
msgstr "le gabarit pour le sujet du message."

msgid "the template for the email body."
msgstr "le gabarit pour le corps du message."

msgid ""
"context passed to the ``subject_template``, ``email_template``, and "
"``html_email_template`` (if it is not ``None``)."
msgstr ""
"contexte transmis aux gabarits ``subject_template``, ``email_template`` et "
"``html_email_template`` (s'il ne vaut pas ``None``)."

msgid "the sender's email."
msgstr "l'adresse électronique de l'expéditeur."

msgid "the email of the requester."
msgstr "l'adresse électronique du destinataire."

msgid ""
"the template for the HTML body; defaults to ``None``, in which case a plain "
"text email is sent."
msgstr ""
"le gabarit du corps du message HTML ; vaut ``None`` par défaut, auquel cas "
"un courriel en texte pur est envoyé."

msgid ""
"By default, ``save()`` populates the ``context`` with the same variables "
"that :class:`~django.contrib.auth.views.PasswordResetView` passes to its "
"email context."
msgstr ""
"Par défaut, ``save()`` remplit le ``context`` avec les mêmes variables que :"
"class:`~django.contrib.auth.views.PasswordResetView` transmet à son contexte "
"d'envoi de courriel."

msgid ""
"A form that lets a user change their password without entering the old "
"password."
msgstr ""
"Un formulaire permettant à un utilisateur de changer son mot de passe sans "
"saisir l'ancien mot de passe."

msgid ""
"A form used in the admin interface to change a user's information and "
"permissions."
msgstr ""
"Un formulaire utilisé dans l'interface d'administration pour modifier les "
"données d'un utilisateur et ses permissions."

msgid ""
"A :class:`~django.forms.ModelForm` for creating a new user. This is the "
"recommended base class if you need to customize the user creation form."
msgstr ""
"Un formulaire :class:`~django.forms.ModelForm` pour créer un nouvel "
"utilisateur. Il s'agit de la classe de base recommandée pour personnaliser "
"le formulaire de création d'utilisateur."

msgid ""
"It has four fields: ``username`` (from the user model), ``password1``, "
"``password2``, and ``usable_password`` (the latter is enabled by default). "
"If ``usable_password`` is enabled, it verifies that ``password1`` and "
"``password2`` are non empty and match, validates the password using :func:"
"`~django.contrib.auth.password_validation.validate_password`, and sets the "
"user's password using :meth:`~django.contrib.auth.models.User."
"set_password()`. If ``usable_password`` is disabled, no password validation "
"is done, and password-based authentication is disabled for the user by "
"calling :meth:`~django.contrib.auth.models.User.set_unusable_password()`."
msgstr ""
"Il possède quatre champs : ``username`` (tiré du modèle utilisateur), "
"``password1``, ``password2`` et ``usable_password`` (ce dernier est activé "
"par défaut). Quand ``usable_password`` est activé, il vérifie que "
"``password1`` et ``password2`` ne sont pas vides et qu'ils correspondent, il "
"valide le mot de passe à l'aide de :func:`~django.contrib.auth."
"password_validation.validate_password`, puis définit le mot de passe de "
"l'utilisateur avec :meth:`~django.contrib.auth.models.User.set_password()`. "
"Quand ``usable_password`` est désactivé, aucune validation de mot de passe "
"n'est effectuée, et l'authentification par mot de passe est désactivée pour "
"cette personne en appelant :meth:`~django.contrib.auth.models.User."
"set_unusable_password()`."

msgid ""
"Option to create users with disabled password-based authentication was added."
msgstr ""
"L'option de créer des utilisateurs avec authentification par mot de passe "
"désactivée a été ajoutée."

msgid ""
"Inherits from :class:`BaseUserCreationForm`. To help prevent confusion with "
"similar usernames, the form doesn't allow usernames that differ only in case."
msgstr ""
"Hérite de :class:`BaseUserCreationForm`. Pour aider à prévenir la confusion "
"avec des noms comparables, le formulaire n'autorise pas les noms "
"d'utilisateurs qui ne diffèrent que par leur casse."

msgid "Authentication data in templates"
msgstr "Données d'authentification dans les gabarits"

msgid ""
"The currently logged-in user and their permissions are made available in "
"the :doc:`template context </ref/templates/api>` when you use :class:"
"`~django.template.RequestContext`."
msgstr ""
"L'utilisateur actuellement connecté et ses permissions sont disponibles dans "
"le :doc:`contexte de gabarit </ref/templates/api>` lorsque vous utilisez :"
"class:`~django.template.RequestContext`."

msgid "Technicality"
msgstr "Détail technique"

msgid ""
"Technically, these variables are only made available in the template context "
"if you use :class:`~django.template.RequestContext` and the ``'django."
"contrib.auth.context_processors.auth'`` context processor is enabled. It is "
"in the default generated settings file. For more, see the :ref:"
"`RequestContext docs <subclassing-context-requestcontext>`."
msgstr ""
"Techniquement, ces variables ne sont disponibles dans le contexte de gabarit "
"que si vous utilisez :class:`~django.template.RequestContext` et que le "
"processeur de contexte ``\"django.contrib.auth.context_processors.auth\"`` "
"est activé. C'est le cas dans le fichier de réglages par défaut. Pour plus "
"de détails, lisez la :ref:`documentation de RequestContext <subclassing-"
"context-requestcontext>`."

msgid "Users"
msgstr "Utilisateurs"

msgid ""
"When rendering a template :class:`~django.template.RequestContext`, the "
"currently logged-in user, either a  :class:`~django.contrib.auth.models."
"User` instance or an :class:`~django.contrib.auth.models.AnonymousUser` "
"instance, is stored in the template variable ``{{ user }}``:"
msgstr ""
"Lors de la génération d'un :class:`~django.template.RequestContext` de "
"gabarit, l'utilisateur actuellement connecté, une instance de  :class:"
"`~django.contrib.auth.models.User` ou de :class:`~django.contrib.auth.models."
"AnonymousUser`, est stockée dans la variable de gabarit ``{{ user }}``:"

msgid ""
"This template context variable is not available if a ``RequestContext`` is "
"not being used."
msgstr ""
"Cette variable de contexte de gabarit n'est pas disponible si "
"``RequestContext`` n'est pas utilisé."

msgid "Permissions"
msgstr "Permissions"

msgid ""
"The currently logged-in user's permissions are stored in the template "
"variable ``{{ perms }}``. This is an instance of ``django.contrib.auth."
"context_processors.PermWrapper``, which is a template-friendly proxy of "
"permissions."
msgstr ""
"Les permissions de l'utilisateur actuellement connecté sont stockés dans la "
"variable de gabarit ``{{ perms }}``. C'est une instance de ``django.contrib."
"auth.context_processors.PermWrapper``, un objet mandataire de permissions "
"adapté aux gabarits."

msgid ""
"Evaluating a single-attribute lookup of ``{{ perms }}`` as a boolean is a "
"proxy to :meth:`User.has_module_perms() <django.contrib.auth.models.User."
"has_module_perms>`. For example, to check if the logged-in user has any "
"permissions in the ``foo`` app:"
msgstr ""
"La consultation d'attributs simples de ``{{ perms }}`` sous forme de booléen "
"est une méthode mandataire de :meth:`User.has_module_perms() <django.contrib."
"auth.models.User.has_module_perms>`. Par exemple, pour vérifier si "
"l'utilisateur connecté a au moins une permission dans l'application ``foo``:"

msgid ""
"Evaluating a two-level-attribute lookup as a boolean is a proxy to :meth:"
"`User.has_perm() <django.contrib.auth.models.User.has_perm>`. For example, "
"to check if the logged-in user has the permission ``foo.add_vote``:"
msgstr ""
"La consultation d'attributs à deux niveaux de ``{{ perms }}`` sous forme de "
"booléen est une méthode mandataire de :meth:`User.has_perm() <django.contrib."
"auth.models.User.has_perm>`. Par exemple, pour vérifier si l'utilisateur "
"connecté a la permission ``foo.add_vote``:"

msgid "Here's a more complete example of checking permissions in a template:"
msgstr ""
"Voici un exemple plus complet de contrôle de permissions dans un gabarit ::"

msgid ""
"It is possible to also look permissions up by ``{% if in %}`` statements. "
"For example:"
msgstr ""
"Il est aussi possible de consulter les permissions par des instructions ``{% "
"if in %}``. Par exemple :"

msgid "Managing users in the admin"
msgstr "Gestion des utilisateurs dans le site d'administration"

msgid ""
"When you have both ``django.contrib.admin`` and ``django.contrib.auth`` "
"installed, the admin provides a convenient way to view and manage users, "
"groups, and permissions. Users can be created and deleted like any Django "
"model. Groups can be created, and permissions can be assigned to users or "
"groups. A log of user edits to models made within the admin is also stored "
"and displayed."
msgstr ""
"Quand ``django.contrib.admin`` et ``django.contrib.auth`` sont les deux "
"installés, le site d'administration offre une interface pratique pour "
"afficher et gérer les utilisateurs, les groupes et les permissions. Les "
"utilisateurs peuvent être créés et supprimés comme tout autre modèle Django. "
"Des groupes peuvent être créés et des permissions peuvent être attribuées "
"aux utilisateurs et aux groupes. Les modifications de modèles effectuées "
"dans l'administration par les utilisateurs sont également journalisées et "
"affichées."

msgid ""
"You should see a link to \"Users\" in the \"Auth\" section of the main admin "
"index page. The \"Add user\" admin page is different than standard admin "
"pages in that it requires you to choose a username and password before "
"allowing you to edit the rest of the user's fields. Alternatively, on this "
"page, you can choose a username and disable password-based authentication "
"for the user."
msgstr ""
"Vous devriez voir un lien vers « Utilisateurs » dans la section « Auth » de "
"la page d'accueil du site d'administration. La page d'administration "
"« Ajouter un utilisateur » est différente des autres pages d'administration "
"dans la mesure où elle exige que vous saisissiez d'abord un nom "
"d'utilisateur et un mot de passe avant de pouvoir modifier les autres champs "
"de l'utilisateur. Il est aussi possible sur cette même page de choisir un "
"nom d'utilisateur et de désactiver l'authentification par mot de passe pour "
"cette personne."

msgid ""
"Also note: if you want a user account to be able to create users using the "
"Django admin site, you'll need to give them permission to add users *and* "
"change users (i.e., the \"Add user\" and \"Change user\" permissions). If an "
"account has permission to add users but not to change them, that account "
"won't be able to add users. Why? Because if you have permission to add "
"users, you have the power to create superusers, which can then, in turn, "
"change other users. So Django requires add *and* change permissions as a "
"slight security measure."
msgstr ""
"Notez également que si vous voulez qu'un utilisateur puisse créer d'autres "
"utilisateurs dans le site d'administration de Django, vous devez lui "
"attribuer la permission d'ajouter des utilisateurs *et* de modifier des "
"utilisateurs (c'est-à-dire les permissions « Can add user » et « Can change "
"user »). Si un compte utilisateur a la permission d'ajouter des utilisateurs "
"mais pas de les modifier, ce compte ne pourra pas créer d'utilisateurs. "
"Pourquoi ? Parce que si vous avez la permission d'ajouter des utilisateurs, "
"vous avez le pouvoir de créer des superutilisateurs, qui peuvent à leur tour "
"modifier d'autres utilisateurs. Django exige donc à la fois les permissions "
"« ajout » et « modification » comme légère mesure de sécurité."

msgid ""
"Be thoughtful about how you allow users to manage permissions. If you give a "
"non-superuser the ability to edit users, this is ultimately the same as "
"giving them superuser status because they will be able to elevate "
"permissions of users including themselves!"
msgstr ""
"Faites attention à la façon dont vous permettez aux utilisateurs de gérer "
"les autorisations. Si vous donnez à un non-superutilisateur la possibilité "
"d'éditer les utilisateurs, cela revient  finalement au même que de lui "
"donner un statut de super-utilisateur, car il sera en mesure d'élever les "
"autorisations des utilisateurs, y compris les siennes !"

msgid ""
"User passwords are not displayed in the admin (nor stored in the database), "
"but the :doc:`password storage details </topics/auth/passwords>` are "
"displayed. Included in the display of this information is a link to a "
"password change form that allows admins to change or unset user passwords."
msgstr ""
"Les mots de passe des utilisateurs ne sont pas affichés dans le site "
"d'administration (ni stockés dans la base de données), mais les :doc:"
"`détails de stockage des mots de passe </topics/auth/passwords>` sont "
"visibles. Ces informations contiennent un lien vers le formulaire de "
"changement de mot de passe permettant aux administrateurs de changer ou de "
"désactiver les mots de passe des utilisateurs."

msgid "User authentication in Django"
msgstr "Authentification des utilisateurs dans Django"

msgid ""
"Django comes with a user authentication system. It handles user accounts, "
"groups, permissions and cookie-based user sessions. This section of the "
"documentation explains how the default implementation works out of the box, "
"as well as how to :doc:`extend and customize </topics/auth/customizing>` it "
"to suit your project's needs."
msgstr ""
"Django contient un système d'authentification des utilisateurs. Il gère des "
"comptes utilisateur, des groupes, des permissions et des sessions "
"utilisateur basées sur les cookies. Cette section de la documentation expose "
"le fonctionnement par défaut de l'authentification et présente également la "
"manière d’:doc:`étendre et de personnaliser </topics/auth/customizing>` ce "
"système pour l'adapter aux besoins de votre projet."

msgid "Overview"
msgstr "Aperçu"

msgid ""
"The Django authentication system handles both authentication and "
"authorization. Briefly, authentication verifies a user is who they claim to "
"be, and authorization determines what an authenticated user is allowed to "
"do. Here the term authentication is used to refer to both tasks."
msgstr ""
"Le système d'authentification de Django gère aussi bien l'authentification "
"que l'autorisation. En bref, l'authentification vérifie que l'utilisateur "
"est bien celui qu'il prétend être et l'autorisation détermine ce qu'un "
"utilisateur authentifié est autorisé à faire. Ici, nous utiliserons le terme "
"authentification pour nous référer à ces deux tâches."

msgid "The auth system consists of:"
msgstr "Le système d'authentification consiste en :"

msgid ""
"Permissions: Binary (yes/no) flags designating whether a user may perform a "
"certain task."
msgstr ""
"Permissions : drapeaux binaires (oui/non) indiquant si un utilisateur a le "
"droit d'effectuer certaines tâches"

msgid ""
"Groups: A generic way of applying labels and permissions to more than one "
"user."
msgstr ""
"Groupes : une manière générique d'appliquer des étiquettes et des "
"permissions à plus d'un utilisateur"

msgid "A configurable password hashing system"
msgstr "Un système de hachage de mots de passe configurable"

msgid "Forms and view tools for logging in users, or restricting content"
msgstr ""
"Outils de formulaires et de vues pour connecter les utilisateurs ou limiter "
"l'accès au contenu"

msgid "A pluggable backend system"
msgstr "Un système de moteur d'authentification enfichable"

msgid ""
"The authentication system in Django aims to be very generic and doesn't "
"provide some features commonly found in web authentication systems. "
"Solutions for some of these common problems have been implemented in third-"
"party packages:"
msgstr ""
"Le système d'authentification de Django est conçu de manière très générique "
"et ne fournit pas certaines fonctionnalités couramment présentes dans les "
"systèmes d'authentification sur le Web. Des solutions pour certains de ces "
"problèmes courants ont été implémentées dans des paquets externes :"

msgid "Password strength checking"
msgstr "Contrôle de la force des mots de passe"

msgid "Throttling of login attempts"
msgstr "Limitation des tentatives de connexion"

msgid "Authentication against third-parties (OAuth, for example)"
msgstr "Authentification à des services externes (OAuth, par exemple)"

msgid "Object-level permissions"
msgstr "Permissions au niveau des objets"

msgid "Installation"
msgstr "Installation"

msgid ""
"Authentication support is bundled as a Django contrib module in ``django."
"contrib.auth``. By default, the required configuration is already included "
"in the :file:`settings.py` generated by :djadmin:`django-admin startproject "
"<startproject>`, these consist of two items listed in your :setting:"
"`INSTALLED_APPS` setting:"
msgstr ""
"La prise en charge de l'authentification est intégrée dans Django sous forme "
"de module contribué dans ``django.contrib.auth``. Par défaut, la "
"configuration requise est déjà incluse dans le fichier :file:`settings.py` "
"généré par la commande :djadmin:`django-admin startproject <startproject>`. "
"Cette configuration consiste en deux éléments figurant dans le réglage :"
"setting:`INSTALLED_APPS`:"

msgid ""
"``'django.contrib.auth'`` contains the core of the authentication framework, "
"and its default models."
msgstr ""
"``'django.contrib.auth'`` contient le cœur du système d'authentification et "
"ses modèles par défaut."

msgid ""
"``'django.contrib.contenttypes'`` is the Django :doc:`content type system </"
"ref/contrib/contenttypes>`, which allows permissions to be associated with "
"models you create."
msgstr ""
"``'django.contrib.contenttypes'`` est le  :doc:`système de types de contenu "
"</ref/contrib/contenttypes>` de Django qui permet d'associer des permissions "
"aux modèles que vous créez."

msgid "and these items in your :setting:`MIDDLEWARE` setting:"
msgstr "et ces lignes dans le réglage :setting:`MIDDLEWARE`:"

msgid ""
":class:`~django.contrib.sessions.middleware.SessionMiddleware` manages :doc:"
"`sessions </topics/http/sessions>` across requests."
msgstr ""
":class:`~django.contrib.sessions.middleware.SessionMiddleware` gère les :doc:"
"`sessions </topics/http/sessions>` tout au long des requêtes."

msgid ""
":class:`~django.contrib.auth.middleware.AuthenticationMiddleware` associates "
"users with requests using sessions."
msgstr ""
":class:`~django.contrib.auth.middleware.AuthenticationMiddleware` associe "
"les utilisateurs aux requêtes en utilisant les sessions."

msgid ""
"With these settings in place, running the command ``manage.py migrate`` "
"creates the necessary database tables for auth related models and "
"permissions for any models defined in your installed apps."
msgstr ""
"Avec ces réglages configurés, le lancement de la commande ``manage.py "
"migrate`` crée les tables de base de données nécessaires pour les modèles "
"liés à l'authentification et crée les permissions de tous les modèles "
"définis dans les applications installées."

msgid "Usage"
msgstr "Utilisation"

msgid ":doc:`Using Django's default implementation <default>`"
msgstr ":doc:`Utilisation de l'implémentation par défaut de Django <default>`"

msgid ":ref:`Working with User objects <user-objects>`"
msgstr ":ref:`Manipulation des objets utilisateur <user-objects>`"

msgid ":ref:`Permissions and authorization <topic-authorization>`"
msgstr ":ref:`Permissions et autorisations <topic-authorization>`"

msgid ":ref:`Authentication in web requests <auth-web-requests>`"
msgstr ":ref:`Authentification dans les requêtes Web <auth-web-requests>`"

msgid ":ref:`Managing users in the admin <auth-admin>`"
msgstr ""
":ref:`Gestion des utilisateurs dans le site d'administration <auth-admin>`"

msgid ":doc:`API reference for the default implementation </ref/contrib/auth>`"
msgstr ""
":doc:`Référence de l'API de l'implémentation par défaut </ref/contrib/auth>`"

msgid ":doc:`Customizing Users and authentication <customizing>`"
msgstr ""
":doc:`Personnalisation des utilisateurs et de l'authentification "
"<customizing>`"

msgid ":doc:`Password management in Django <passwords>`"
msgstr ":doc:`Gestion des mots de passe dans Django <passwords>`"

msgid "Password management in Django"
msgstr "Gestion des mots de passe dans Django"

msgid ""
"Password management is something that should generally not be reinvented "
"unnecessarily, and Django endeavors to provide a secure and flexible set of "
"tools for managing user passwords. This document describes how Django stores "
"passwords, how the storage hashing can be configured, and some utilities to "
"work with hashed passwords."
msgstr ""
"La gestion des mots de passe est quelque chose qui ne devrait généralement "
"pas être réinventé sans raison, et Django s'efforce de fournir un ensemble "
"d'outils sécurisés et souples pour gérer les mots de passe des utilisateurs. "
"Ce document présente la façon dont Django stocke les mots de passe, la "
"configuration possible du hachage avant stockage et certains utilitaires "
"pour manipuler les empreintes de mots de passe. "

msgid ""
"Even though users may use strong passwords, attackers might be able to "
"eavesdrop on their connections. Use :ref:`HTTPS <security-recommendation-"
"ssl>` to avoid sending passwords (or any other sensitive data) over plain "
"HTTP connections because they will be vulnerable to password sniffing."
msgstr ""
"Même si les utilisateurs utilisent des mots de passe forts, des attaquants "
"peuvent arriver à écouter leurs connexions. Utilisez :ref:`HTTPS <security-"
"recommendation-ssl>` afin d'éviter d'envoyer des mots de passe (ou d'autres "
"données sensibles) sur des connexions HTTP simples car celles-ci sont "
"vulnérables à l'interception de mots de passe."

msgid "How Django stores passwords"
msgstr "Stockage des mots de passe par Django"

msgid ""
"Django provides a flexible password storage system and uses PBKDF2 by "
"default."
msgstr ""
"Django fournit un système de stockage de mots de passe souple et emploie "
"PBKDF2 par défaut."

msgid ""
"The :attr:`~django.contrib.auth.models.User.password` attribute of a :class:"
"`~django.contrib.auth.models.User` object is a string in this format:"
msgstr ""
"L'attribut :attr:`~django.contrib.auth.models.User.password` d'un objet :"
"class:`~django.contrib.auth.models.User` est une chaîne dans ce format :"

msgid ""
"Those are the components used for storing a User's password, separated by "
"the dollar-sign character and consist of: the hashing algorithm, the number "
"of algorithm iterations (work factor), the random salt, and the resulting "
"password hash.  The algorithm is one of a number of one-way hashing or "
"password storage algorithms Django can use; see below. Iterations describe "
"the number of times the algorithm is run over the hash. Salt is the random "
"seed used and the hash is the result of the one-way function."
msgstr ""
"Il s'agit des composants utilisés pour stocker le mot de passe d'un "
"utilisateur, séparés par le caractère dollar et formés de : l'algorithme de "
"hachage, le nombre d'itérations de l'algorithme (facteur travail), le sel "
"aléatoire et l'empreinte de mot de passe résultante. L'algorithme correspond "
"à l'un des algorithmes de stockage de mot de passe ou de hachage à sens "
"unique que Django peut utiliser ; voir ci-dessous. Les itérations indiquent "
"le nombre de fois que l'algorithme traite l'empreinte numérique. Le sel est "
"la graine aléatoire utilisée et l'empreinte est le résultat de la fonction à "
"sens unique."

msgid ""
"By default, Django uses the PBKDF2_ algorithm with a SHA256 hash, a password "
"stretching mechanism recommended by NIST_. This should be sufficient for "
"most users: it's quite secure, requiring massive amounts of computing time "
"to break."
msgstr ""
"Par défaut, Django utilise l'algorithme PBKDF2_ avec une fonction de hachage "
"SHA256, un mécanisme d'étirement de mot de passe recommandé par le NIST_. "
"Cela devrait suffire pour la plupart des utilisateurs : c'est un algorithme "
"bien sécurisé et exigeant d'énormes quantités de puissance de calcul pour "
"être cassé."

msgid ""
"However, depending on your requirements, you may choose a different "
"algorithm, or even use a custom algorithm to match your specific security "
"situation. Again, most users shouldn't need to do this -- if you're not "
"sure, you probably don't.  If you do, please read on:"
msgstr ""
"Cependant, en fonction de vos exigences, vous pouvez choisir un algorithme "
"différent ou même utiliser un algorithme qui vous est propre pour répondre à "
"votre situation spécifique en matière de sécurité. Encore une fois, la "
"plupart des utilisateurs n'auront pas à le faire et si vous n'êtes pas sûr, "
"c'est que vous n'en avez probablement pas besoin. Si vous en avez besoin, "
"continuez cette lecture…"

msgid ""
"Django chooses the algorithm to use by consulting the :setting:"
"`PASSWORD_HASHERS` setting. This is a list of hashing algorithm classes that "
"this Django installation supports."
msgstr ""
"Django choisit l'algorithme à utiliser en consultant le réglage :setting:"
"`PASSWORD_HASHERS`. Il s'agit d'une liste de classes d'algorithme de hachage "
"que la présente installation de Django prend en charge."

msgid ""
"For storing passwords, Django will use the first hasher in :setting:"
"`PASSWORD_HASHERS`. To store new passwords with a different algorithm, put "
"your preferred algorithm first in :setting:`PASSWORD_HASHERS`."
msgstr ""
"Pour le stockage des mots de passe, Django utilise le premier algorithme de :"
"setting:`PASSWORD_HASHERS`. Pour stocker les nouveaux mots de passe avec un "
"algorithme différent, placez votre algorithme préféré en première position "
"dans :setting:`PASSWORD_HASHERS`."

msgid ""
"For verifying passwords, Django will find the hasher in the list that "
"matches the algorithm name in the stored password. If a stored password "
"names an algorithm not found in :setting:`PASSWORD_HASHERS`, trying to "
"verify it will raise ``ValueError``."
msgstr ""
"Pour la vérification des mots de passe, Django recherche dans la liste "
"l'algorithme de hachage qui correspond au nom d'algorithme dans le mot de "
"passe stocké. Dans le cas où un nom d'algorithme stocké dans un mot de passe "
"n'est pas trouvé dans :setting:`PASSWORD_HASHERS`, sa vérification génère "
"une exception ``ValueError``."

msgid "The default for :setting:`PASSWORD_HASHERS` is::"
msgstr "La valeur par défaut de :setting:`PASSWORD_HASHERS` est ::"

msgid ""
"This means that Django will use PBKDF2_ to store all passwords but will "
"support checking passwords stored with PBKDF2SHA1, argon2_, and bcrypt_."
msgstr ""
"Cela signifie que Django utilisera PBKDF2_ pour stocker tous les mots de "
"passe, mais qu'il acceptera de vérifier des mots de passe stockés avec les "
"algorithmes PBKDF2SHA1, argon2_ et bcrypt_."

msgid ""
"The next few sections describe a couple of common ways advanced users may "
"want to modify this setting."
msgstr ""
"Les sections qui suivent présentent quelques manières fréquentes que les "
"utilisateurs avancés peuvent utiliser pour modifier ce réglage."

msgid "Using Argon2 with Django"
msgstr "Utilisation de Argon2 avec Django"

msgid ""
"Argon2_ is the winner of the 2015 `Password Hashing Competition`_, a "
"community organized open competition to select a next generation hashing "
"algorithm. It's designed not to be easier to compute on custom hardware than "
"it is to compute on an ordinary CPU. The default variant for the Argon2 "
"password hasher is Argon2id."
msgstr ""
"Argon2_ est le gagnant du concours 2015 `Password Hashing Competition`_, une "
"compétition ouverte organisée par la communauté pour sélectionner un "
"algorithme de hachage de nouvelle génération. Il est conçu pour ne pas être "
"plus facile à calculer sur du matériel dédié qu'il ne l'est sur un "
"processeur ordinaire. La variante par défaut du hacheur de mot de passe "
"Argon2 et Argon2id."

msgid ""
"Argon2_ is not the default for Django because it requires a third-party "
"library. The Password Hashing Competition panel, however, recommends "
"immediate use of Argon2 rather than the other algorithms supported by Django."
msgstr ""
"Argon2_ n'est pas l'algorithme utilisé par défaut dans Django car il "
"nécessite une bibliothèque tierce. Les experts de Password Hashing "
"Competition recommandent cependant l'utilisation immédiate de Argon2 plutôt "
"que les autres algorithmes pris en charge par Django."

msgid "To use Argon2id as your default storage algorithm, do the following:"
msgstr ""
"Pour utiliser Argon2id comme algorithme de stockage par défaut, faites ceci :"

msgid ""
"Install the :pypi:`argon2-cffi` package. This can be done by running "
"``python -m pip install django[argon2]``, which is equivalent to ``python -m "
"pip install argon2-cffi`` (along with any version requirement from Django's "
"``pyproject.toml``)."
msgstr ""
"Installez le paquet :pypi:`argon2-cffi`. Cela peut se faire en lançant "
"``python -m pip install django[argon2]``, ce qui est équivalent à ``python -"
"m pip install argon2-cffi`` (en installant aussi toute version de paquet "
"exigée par le fichier ``pyproject.toml`` de Django)."

msgid ""
"Modify :setting:`PASSWORD_HASHERS` to list ``Argon2PasswordHasher`` first. "
"That is, in your settings file, you'd put::"
msgstr ""
"Modifiez :setting:`PASSWORD_HASHERS` pour que ``Argon2PasswordHasher`` "
"apparaisse en premier. Voici ce qui devrait apparaître dans votre fichier de "
"réglages ::"

msgid ""
"Keep and/or add any entries in this list if you need Django to :ref:`upgrade "
"passwords <password-upgrades>`."
msgstr ""
"Conservez ou ajoutez d'autres éléments dans cette liste si vous avez besoin "
"que Django puisse :ref:`mettre à jour des mots de passe <password-upgrades>`."

msgid "Using ``bcrypt`` with Django"
msgstr "Utilisation de ``bcrypt`` avec Django"

msgid ""
"Bcrypt_ is a popular password storage algorithm that's specifically designed "
"for long-term password storage. It's not the default used by Django since it "
"requires the use of third-party libraries, but since many people may want to "
"use it Django supports bcrypt with minimal effort."
msgstr ""
"Bcrypt_ est un algorithme de stockage de mot de passe répandu qui est "
"spécifiquement conçu comme stockage de mots de passe à long terme. Ce n'est "
"pas l'algorithme par défaut de Django car il dépend de l'installation de "
"bibliothèques tierces. Mais comme il y a beaucoup d'utilisateurs potentiels, "
"Django prend en charge bcrypt avec un minimum d'effort."

msgid "To use Bcrypt as your default storage algorithm, do the following:"
msgstr ""
"Pour utiliser Bcrypt comme algorithme de stockage par défaut, faites ceci :"

msgid ""
"Install the :pypi:`bcrypt` package. This can be done by running ``python -m "
"pip install django[bcrypt]``, which is equivalent to ``python -m pip install "
"bcrypt`` (along with any version requirement from Django's ``pyproject."
"toml``)."
msgstr ""
"Installez le paquet :pypi:`bcrypt`. Cela peut se faire en lançant ``python -"
"m pip install django[bcrypt]``, ce qui est équivalent à ``python -m pip "
"install bcrypt`` (en installant aussi toute version de paquet exigée par le "
"fichier ``pyproject.toml`` de Django)."

msgid ""
"Modify :setting:`PASSWORD_HASHERS` to list ``BCryptSHA256PasswordHasher`` "
"first. That is, in your settings file, you'd put::"
msgstr ""
"Modifiez :setting:`PASSWORD_HASHERS` pour que ``BCryptSHA256PasswordHasher`` "
"apparaisse en premier. Voici ce qui devrait apparaître dans votre fichier de "
"réglages ::"

msgid ""
"That's it -- now your Django install will use Bcrypt as the default storage "
"algorithm."
msgstr ""
"Et voilà, votre installation Django utilise dorénavant Bcrypt comme "
"algorithme de stockage par défaut."

msgid "Using ``scrypt`` with Django"
msgstr "Utilisation de ``scrypt`` avec Django"

msgid ""
"scrypt_ is similar to PBKDF2 and bcrypt in utilizing a set number of "
"iterations to slow down brute-force attacks. However, because PBKDF2 and "
"bcrypt do not require a lot of memory, attackers with sufficient resources "
"can launch large-scale parallel attacks in order to speed up the attacking "
"process. scrypt_ is specifically designed to use more memory compared to "
"other password-based key derivation functions in order to limit the amount "
"of parallelism an attacker can use, see :rfc:`7914` for more details."
msgstr ""
"scrypt_ est semblable à PBKDF2 et à bcrypt dans le sens où il utilise un "
"nombre d'itérations pour ralentir les attaques par force brute. Cependant, "
"comme PBKDF2 et bcrypt ne nécessitent pas beaucoup de mémoire, des "
"attaquants avec suffisamment de ressources peuvent lancer des attaques en "
"parallèle et à large échelle afin d'accélérer le processus d'attaque. "
"scrypt_ est spécifiquement conçu pour utiliser plus de mémoire en "
"comparaison d'autres fonctions de dérivation de clé basées sur des mots de "
"passe, afin de limiter la capacité de parallélisme d'un éventuel attaquant. "
"Voir :rfc:`7914` pour plus de détails."

msgid "To use scrypt_ as your default storage algorithm, do the following:"
msgstr ""
"Pour utiliser scrypt_ comme algorithme de stockage par défaut, faites ceci :"

msgid ""
"Modify :setting:`PASSWORD_HASHERS` to list ``ScryptPasswordHasher`` first. "
"That is, in your settings file::"
msgstr ""
"Modifiez :setting:`PASSWORD_HASHERS` pour que ``ScryptPasswordHasher`` "
"apparaisse en premier. Voici ce qui devrait apparaître dans votre fichier de "
"réglages ::"

msgid "``scrypt`` requires OpenSSL 1.1+."
msgstr "``scrypt`` nécessite OpenSSL 1.1+."

msgid "Increasing the salt entropy"
msgstr "Augmentation de l'entropie du sel"

msgid ""
"Most password hashes include a salt along with their password hash in order "
"to protect against rainbow table attacks. The salt itself is a random value "
"which increases the size and thus the cost of the rainbow table and is "
"currently set at 128 bits with the ``salt_entropy`` value in the "
"``BasePasswordHasher``. As computing and storage costs decrease this value "
"should be raised. When implementing your own password hasher you are free to "
"override this value in order to use a desired entropy level for your "
"password hashes. ``salt_entropy`` is measured in bits."
msgstr ""
"La plupart de hacheurs de mots de passe incluent un sel dans l'empreinte du "
"mot de passe afin de protéger contre les attaques par table arc-en-ciel. Le "
"sel est lui-même une valeur aléatoire qui augmente la taille et donc le coût "
"de la table arc-en-ciel ; elle possède actuellement 128 bits par la valeur  "
"``salt_entropy`` dans ``BasePasswordHasher``. Comme les coûts de calcul et "
"de stockage diminuent avec le temps, cette valeur doit augmenter. Si vous "
"implémentez votre propre hacheur de mots de passe, vous êtes libre de "
"surcharger cette valeur pour atteindre le niveau d'entropie souhaité pour "
"votre hacheur de mots de passe. ``salt_entropy`` est une mesure en bits."

msgid "Implementation detail"
msgstr "Détails d'implémentation"

msgid ""
"Due to the method in which salt values are stored the ``salt_entropy`` value "
"is effectively a minimum value. For instance a value of 128 would provide a "
"salt which would actually contain 131 bits of entropy."
msgstr ""
"En raison de la méthode avec laquelle les valeurs de sel sont stockées, la "
"valeur ``salt_entropy`` est effectivement une valeur minimale. Par exemple, "
"une valeur de 128 produit un sel qui contient en réalité 131 bits d'entropie."

msgid "Increasing the work factor"
msgstr "Augmentation du facteur travail"

msgid "PBKDF2 and bcrypt"
msgstr "PBKDF2 et bcrypt"

msgid ""
"The PBKDF2 and bcrypt algorithms use a number of iterations or rounds of "
"hashing. This deliberately slows down attackers, making attacks against "
"hashed passwords harder. However, as computing power increases, the number "
"of iterations needs to be increased. We've chosen a reasonable default (and "
"will increase it with each release of Django), but you may wish to tune it "
"up or down, depending on your security needs and available processing power. "
"To do so, you'll subclass the appropriate algorithm and override the "
"``iterations`` parameter (use the ``rounds`` parameter when subclassing a "
"bcrypt hasher). For example, to increase the number of iterations used by "
"the default PBKDF2 algorithm:"
msgstr ""
"Les algorithmes PBKDF2 et bcrypt utilisent un certain nombre d'itérations ou "
"de passes de hachage. Cela ralentit volontairement les attaques, rendant "
"plus difficiles les attaques contre les empreintes de mots de passe. "
"Cependant, au fur et à mesure de l'augmentation des puissances de calcul, le "
"nombre d'itérations nécessaires augmente également. Nous avons opté pour une "
"valeur par défaut raisonnable (et nous l'augmenterons avec chaque nouvelle "
"publication de Django), mais vous pouvez l'augmenter ou la réduire en "
"fonction de vos besoins de sécurité et de vos capacités en puissance de "
"calcul. Pour cela, vous pouvez créer une sous-classe de l'algorithme "
"approprié et surcharger le paramètre ``iterations`` (utilisez le paramètre "
"``rounds`` lors d'un héritage du hacheur bcrypt). Par exemple, pour "
"augmenter le nombre d'itérations utilisé par l'algorithme par défaut PBKDF2 :"

msgid ""
"Create a subclass of ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` ::"
msgstr ""
"Créez une sous-classe de ``django.contrib.auth.hashers."
"PBKDF2PasswordHasher``:"

msgid ""
"Save this somewhere in your project. For example, you might put this in a "
"file like ``myproject/hashers.py``."
msgstr ""
"Enregistrez-la quelque part dans votre projet. Par exemple, vous pourriez la "
"placer dans un fichier nommé ``myproject/hashers.py``."

msgid "Add your new hasher as the first entry in :setting:`PASSWORD_HASHERS`::"
msgstr ""
"Ajoutez votre nouvelle classe de hachage en premier dans :setting:"
"`PASSWORD_HASHERS`::"

msgid ""
"That's it -- now your Django install will use more iterations when it stores "
"passwords using PBKDF2."
msgstr ""
"Et voilà, votre installation Django utilise dorénavant plus d'itérations "
"lorsqu'elle stockera les mots de passe avec PBKDF2."

msgid ""
"bcrypt ``rounds`` is a logarithmic work factor, e.g. 12 rounds means ``2 ** "
"12`` iterations."
msgstr ""
"Le paramètre ``rounds`` de bcrypt est un facteur de travail logarithmique, "
"par ex. 12 rounds signifie ``2 ** 12`` itérations."

msgid "Argon2"
msgstr "Argon2"

msgid "Argon2 has the following attributes that can be customized:"
msgstr "Argon2 possède les attributs suivants qui peuvent être personnalisés :"

msgid "``time_cost`` controls the number of iterations within the hash."
msgstr "``time_cost`` contrôle le nombre d'itérations pour l'empreinte."

msgid ""
"``memory_cost`` controls the size of memory that must be used during the "
"computation of the hash."
msgstr ""
"``memory_cost`` contrôle la taille mémoire utilisée lors du calcul de "
"l'empreinte."

msgid ""
"``parallelism`` controls how many CPUs the computation of the hash can be "
"parallelized on."
msgstr ""
"``parallelism`` contrôle le nombre de processeurs pouvant être mis à "
"contribution pour le calcul de l'empreinte."

msgid ""
"The default values of these attributes are probably fine for you. If you "
"determine that the password hash is too fast or too slow, you can tweak it "
"as follows:"
msgstr ""
"Les valeurs par défaut de ces attributs sont probablement raisonnables. Si "
"vous déterminez que le hachage des mots de passe est trop rapide ou trop "
"lent, vous pouvez les ajuster comme suit :"

msgid ""
"Choose ``parallelism`` to be the number of threads you can spare computing "
"the hash."
msgstr ""
"Définissez ``parallelism`` au nombre de fils d'exécution à exploiter pour le "
"calcul de l'empreinte."

msgid "Choose ``memory_cost`` to be the KiB of memory you can spare."
msgstr "Définissez ``memory_cost`` au nombre de Kio de mémoire à exploiter."

msgid ""
"Adjust ``time_cost`` and measure the time hashing a password takes. Pick a "
"``time_cost`` that takes an acceptable time for you. If ``time_cost`` set to "
"1 is unacceptably slow, lower ``memory_cost``."
msgstr ""
"Ajustez ``time_cost`` et mesurez le temps passé à hacher un mot de passe. "
"Choisissez une valeur ``time_cost`` qui consomme un temps acceptable pour "
"vous. Si ``time_cost`` défini à 1 est encore trop lent, baissez la valeur "
"``memory_cost``."

msgid "``memory_cost`` interpretation"
msgstr "Interprétation de ``memory_cost``"

msgid ""
"The argon2 command-line utility and some other libraries interpret the "
"``memory_cost`` parameter differently from the value that Django uses. The "
"conversion is given by ``memory_cost == 2 ** memory_cost_commandline``."
msgstr ""
"L'utilitaire en ligne de commande argon2 et certaines autres bibliothèques "
"interprètent le paramètre ``memory_cost`` différemment de la valeur que "
"Django utilise. La conversion est donnée par ``memory_cost == 2 ** "
"memory_cost_en_ligne_de_commande``."

msgid "``scrypt``"
msgstr "``scrypt``"

msgid "scrypt_ has the following attributes that can be customized:"
msgstr ""
"scrypt_ possède les attributs suivants qui peuvent être personnalisés :"

msgid "``work_factor`` controls the number of iterations within the hash."
msgstr "``work_factor`` contrôle le nombre d'itérations pour l'empreinte."

msgid "``block_size``"
msgstr "``block_size``"

msgid "``parallelism`` controls how many threads will run in parallel."
msgstr ""
"``parallelism`` contrôle le nombre de fils d'exécution lancés en parallèle."

msgid ""
"``maxmem`` limits the maximum size of memory that can be used during the "
"computation of the hash. Defaults to ``0``, which means the default "
"limitation from the OpenSSL library."
msgstr ""
"``maxmem`` limite la taille mémoire maximale pouvant être utilisée lors du "
"calcul de l'empreinte. La velur par défaut est ``0``, ce qui indique que "
"c'est la valeur par défaut de la bibliothèque OpenSSL qui sera utilisée."

msgid ""
"We've chosen reasonable defaults, but you may wish to tune it up or down, "
"depending on your security needs and available processing power."
msgstr ""
"Nous avons choisi des valeurs par défaut raisonnable, mais vous pouvez les "
"ajuster vers le haut ou vers le bas en fonction de vox exigences de sécurité "
"et de votre puissance de calcul disponible."

msgid "Estimating memory usage"
msgstr "Estimation de l'utilisation de la mémoire"

msgid "The minimum memory requirement of scrypt_ is::"
msgstr "L'exigence minimale de mémoire pour scrypt_ est ::"

msgid ""
"so you may need to tweak ``maxmem`` when changing the ``work_factor`` or "
"``block_size`` values."
msgstr ""
"ce qui implique que vous pourriez devoir ajuster ``maxmem`` lorsque vous "
"modifiez les valeurs de ``work_factor`` ou ``block_size``."

msgid "Password upgrading"
msgstr "Mise à niveau des mots de passe"

msgid ""
"When users log in, if their passwords are stored with anything other than "
"the preferred algorithm, Django will automatically upgrade the algorithm to "
"the preferred one. This means that old installs of Django will get "
"automatically more secure as users log in, and it also means that you can "
"switch to new (and better) storage algorithms as they get invented."
msgstr ""
"Lorsque les utilisateurs se connectent, si leur mot de passe est stocké avec "
"un autre algorithme que celui qui est défini comme le principal, Django met "
"automatiquement à jour l'algorithme pour utiliser ce dernier. Cela signifie "
"que d'anciennes installations de Django deviennent automatiquement plus "
"sécurisées au fur et à mesure que les utilisateurs se connectent, et cela "
"signifie également que vous pouvez passer à de nouveaux (et meilleurs) "
"algorithmes de stockage au moment où ils deviennent disponibles."

msgid ""
"However, Django can only upgrade passwords that use algorithms mentioned in :"
"setting:`PASSWORD_HASHERS`, so as you upgrade to new systems you should make "
"sure never to *remove* entries from this list. If you do, users using "
"unmentioned algorithms won't be able to upgrade. Hashed passwords will be "
"updated when increasing (or decreasing) the number of PBKDF2 iterations, "
"bcrypt rounds, or argon2 attributes."
msgstr ""
"Cependant, Django peut uniquement mettre à jour les mots de passe utilisant "
"des algorithmes mentionnés dans :setting:`PASSWORD_HASHERS`, il est donc "
"important de ne pas *enlever* les anciens algorithmes de cette liste quand "
"vous passez à de nouveaux systèmes. Si vous le faites, les utilisateurs "
"utilisant des algorithmes non mentionnés ne pourront pas mettre à jour leur "
"mot de passe. Les mots de passe hachés sont mis à jour lorsque le nombre "
"d'itérations PBKDF2, de tours bcrypt ou d'attributs argon2 est augmenté (ou "
"réduit)."

msgid ""
"Be aware that if all the passwords in your database aren't encoded in the "
"default hasher's algorithm, you may be vulnerable to a user enumeration "
"timing attack due to a difference between the duration of a login request "
"for a user with a password encoded in a non-default algorithm and the "
"duration of a login request for a nonexistent user (which runs the default "
"hasher). You may be able to mitigate this by :ref:`upgrading older password "
"hashes <wrapping-password-hashers>`."
msgstr ""
"Soyez conscients que si tous les mots de passe de votre base de données se "
"sont pas codés avec l'algorithme de hachage par défaut, il est possible que "
"vous soyez vulnérable à une attaque de type énumération de compte basée sur "
"le temps en raison d'une différence entre la durée d'une requête de "
"connexion pour un utilisateur avec mot de passe codé dans un algorithme "
"différent et la durée d'une requête de connexion d'un utilisateur non "
"existant (qui exécute l'algorithme par défaut). Il est possible de "
"relativiser ce problème en :ref:`mettant à jour les anciennes empreintes de "
"mot de passe <wrapping-password-hashers>`."

msgid "Password upgrading without requiring a login"
msgstr "Mise à jour des mots de passe sans exiger de connexion"

msgid ""
"If you have an existing database with an older, weak hash such as MD5, you "
"might want to upgrade those hashes yourself instead of waiting for the "
"upgrade to happen when a user logs in (which may never happen if a user "
"doesn't return to your site). In this case, you can use a \"wrapped\" "
"password hasher."
msgstr ""
"Si une base de données existante comporte des empreintes de mots de passe "
"anciennes et vulnérables de type MD5, il peut être souhaitable de mettre à "
"jour ces empreintes sans devoir attendre que les utilisateurs concernés se "
"connectent (ce qui pourrait ne jamais arriver si ces utilisateurs ne "
"reviennent plus sur le site). Dans ce cas, vous pouvez utiliser un hacheur "
"de mots de passe « enveloppé »."

msgid ""
"For this example, we'll migrate a collection of MD5 hashes to use "
"PBKDF2(MD5(password)) and add the corresponding password hasher for checking "
"if a user entered the correct password on login. We assume we're using the "
"built-in ``User`` model and that our project has an ``accounts`` app. You "
"can modify the pattern to work with any algorithm or with a custom user "
"model."
msgstr ""
"Pour cet exemple, nous allons migrer une série d'empreintes MD5 afin "
"qu'elles utilisent PBKDF2(MD5(mot_de_passe)) et ajouter le hacheur de mot de "
"passe correspondant qui se chargera de vérifier le mot de passe de "
"l'utilisateur lors d'une connexion. Nous partons du principe que c'est le "
"modèle d'utilisateur par défaut qui est utilisé et que le projet possède une "
"application ``accounts``. Vous pouvez modifier cet exemple pour qu'il "
"fonctionne avec tout autre algorithme ou avec un modèle d'utilisateur "
"personnalisé."

msgid "First, we'll add the custom hasher:"
msgstr "Nous allons d'abord ajouter le hacheur personnalisé :"

msgid "``accounts/hashers.py``"
msgstr "``accounts/hashers.py``"

msgid "The data migration might look something like:"
msgstr "La migration de données pourrait ressembler à ceci :"

msgid "``accounts/migrations/0002_migrate_md5_passwords.py``"
msgstr "``accounts/migrations/0002_migrate_md5_passwords.py``"

msgid ""
"Be aware that this migration will take on the order of several minutes for "
"several thousand users, depending on the speed of your hardware."
msgstr ""
"Il faut savoir que cette migration va prendre plusieurs minutes pour "
"quelques milliers d'utilisateurs, en fonction de la performance de votre "
"matériel."

msgid "Finally, we'll add a :setting:`PASSWORD_HASHERS` setting:"
msgstr ""
"Pour terminer, nous allons ajouter un réglage :setting:`PASSWORD_HASHERS`:"

msgid "``mysite/settings.py``"
msgstr "``mysite/settings.py``"

msgid "Include any other hashers that your site uses in this list."
msgstr "Incluez tout autre hacheur utilisé par votre site dans cette liste."

msgid "Included hashers"
msgstr "Hacheurs de mots de passe intégrés"

msgid "The full list of hashers included in Django is::"
msgstr ""
"La liste complète de hacheurs de mots de passe inclus dans Django est ::"

msgid "The corresponding algorithm names are:"
msgstr "Les noms d'algorithmes correspondants sont :"

msgid "``pbkdf2_sha256``"
msgstr "``pbkdf2_sha256``"

msgid "``pbkdf2_sha1``"
msgstr "``pbkdf2_sha1``"

msgid "``argon2``"
msgstr "``argon2``"

msgid "``bcrypt_sha256``"
msgstr "``bcrypt_sha256``"

msgid "``bcrypt``"
msgstr "``bcrypt``"

msgid "``md5``"
msgstr "``md5``"

msgid "Writing your own hasher"
msgstr "Écriture de son propre algorithme de hachage"

msgid ""
"If you write your own password hasher that contains a work factor such as a "
"number of iterations, you should implement a ``harden_runtime(self, "
"password, encoded)`` method to bridge the runtime gap between the work "
"factor supplied in the ``encoded`` password and the default work factor of "
"the hasher. This prevents a user enumeration timing attack due to  "
"difference between a login request for a user with a password encoded in an "
"older number of iterations and a nonexistent user (which runs the default "
"hasher's default number of iterations)."
msgstr ""
"Si vous écrivez votre propre algorithme de hachage de mot de passe doté d'un "
"facteur de travail tel qu'un nombre d'itérations, vous devriez implémenter "
"une méthode ``harden_runtime(self, password, encoded)`` pour compenser la "
"différence de temps d'exécution entre le facteur de travail fourni dans le "
"mot de passe ``encoded`` et le facteur de travail par défaut de "
"l'algorithme. Ceci empêche les attaques de type énumération de compte basée "
"sur le temps qui utilise la différence entre les requêtes de connexion d'un "
"utilisateur dont le mot de passe est codé avec un ancien nombre d'itérations "
"et un utilisateur inexistant (qui fait appel au nombre d'itérations par "
"défaut de l'algorithme)."

msgid ""
"Taking PBKDF2 as example, if ``encoded`` contains 20,000 iterations and the "
"hasher's default ``iterations`` is 30,000, the method should run "
"``password`` through another 10,000 iterations of PBKDF2."
msgstr ""
"En prenant PBKDF2 comme exemple, si ``encoded`` contient 20'000 itérations "
"et que le nombre d'itérations par défaut de l'algorithme est de 30'000, la "
"méthode devrait faire passer ``password`` à travers 10'000 itérations "
"supplémentaires de PBKDF2."

msgid ""
"If your hasher doesn't have a work factor, implement the method as a no-op "
"(``pass``)."
msgstr ""
"Si votre algorithme de hachage ne possède pas de facteur de travail, "
"implémentez la méthode comme fictive (``pass``)."

msgid "Manually managing a user's password"
msgstr "Gestion manuelle des mots de passe"

msgid ""
"The :mod:`django.contrib.auth.hashers` module provides a set of functions to "
"create and validate hashed passwords. You can use them independently from "
"the ``User`` model."
msgstr ""
"Le module :mod:`django.contrib.auth.hashers` fournit un ensemble de "
"fonctions pour créer et valider les empreintes de mots de passe. Vous pouvez "
"les utiliser indépendamment du modèle ``User``."

msgid ""
"If you'd like to manually authenticate a user by comparing a plain-text "
"password to the hashed password in the database, use the convenience "
"function :func:`check_password`. It takes two mandatory arguments: the plain-"
"text password to check, and the full value of a user's ``password`` field in "
"the database to check against. It returns ``True`` if they match, ``False`` "
"otherwise. Optionally, you can pass a callable ``setter`` that takes the "
"password and will be called when you need to regenerate it. You can also "
"pass ``preferred`` to change a hashing algorithm if you don't want to use "
"the default (first entry of ``PASSWORD_HASHERS`` setting). See :ref:`auth-"
"included-hashers` for the algorithm name of each hasher."
msgstr ""
"Si vous souhaitez  authentifier manuellement un utilisateur en comparant un "
"mot de passe en clair à l'empreinte du mot de passe dans la base de données, "
"utilisez la fonction :func:`check_password`. Elle prend deux arguments "
"obligatoires : le mot de passe en clair à vérifier et la valeur complète du "
"champ ``password`` d'un utilisateur dans la base de données avec laquelle la "
"vérification sera faite. Si le mot de passe est correcte, la fonction "
"renvoie ``True``, sinon ``False``. Il est possible de transmettre en option "
"un objet exécutable ``setter`` qui prend un mot de passe en paramètre et qui "
"sera appelé au moment de le régénérer. Vous pouvez aussi transmettre "
"``preferred`` pour modifier l'algorithme de hachage si vous ne souhaitez pas "
"utiliser l'algorithme par défaut (première ligne du réglage "
"``PASSWORD_HASHERS``). Voir :ref:`auth-included-hashers` pour le nom "
"d'algorithme de chaque hacheur."

msgid ""
"Creates a hashed password in the format used by this application. It takes "
"one mandatory argument: the password in plain-text (string or bytes). "
"Optionally, you can provide a salt and a hashing algorithm to use, if you "
"don't want to use the defaults (first entry of ``PASSWORD_HASHERS`` "
"setting). See :ref:`auth-included-hashers` for the algorithm name of each "
"hasher. If the password argument is ``None``, an unusable password is "
"returned (one that will never be accepted by :func:`check_password`)."
msgstr ""
"Crée une empreinte de mot de passe au format utilisé par cette application. "
"Elle demande un paramètre obligatoire : le mot de passe en clair (chaîne ou "
"octets). Il est aussi possible de fournir un sel et un algorithme de hachage "
"à utiliser, si vous ne souhaitez pas utiliser les valeurs par défaut "
"(première ligne du réglage ``PASSWORD_HASHERS``). Voir :ref:`auth-included-"
"hashers` pour le nom d'algorithme de chaque hacheur de mots de passe. Si le "
"paramètre du mot de passe vaut ``None``, un mot de passe inutilisable est "
"renvoyé (un mot de passe qui fera que :func:`check_password` renvoie "
"toujours ``False``) ."

msgid ""
"Returns ``False`` if the password is a result of :meth:`.User."
"set_unusable_password`."
msgstr ""
"Renvoie ``False`` si le mot de passe a été produit par :meth:`.User."
"set_unusable_password`."

msgid "Password validation"
msgstr "Validation des mots de passe"

msgid ""
"Users often choose poor passwords. To help mitigate this problem, Django "
"offers pluggable password validation. You can configure multiple password "
"validators at the same time. A few validators are included in Django, but "
"you can write your own as well."
msgstr ""
"Les utilisateurs choisissent souvent des mots de passe faibles. Pour aider à "
"résoudre ce problème, Django offre une validation des mots de passe à "
"options. Vous pouvez configurer plusieurs validateurs de mots de passe en "
"parallèle. Quelques-uns sont inclus dans Django, mais vous pouvez aussi "
"écrire votre propre validateur."

msgid ""
"Each password validator must provide a help text to explain the requirements "
"to the user, validate a given password and return an error message if it "
"does not meet the requirements, and optionally define a callback to be "
"notified when the password for a user has been changed. Validators can also "
"have optional settings to fine tune their behavior."
msgstr ""
"Chaque validateur de mot de passe doit fournir un texte d'aide pour "
"expliquer les exigences aux utilisateurs, la validation d'un mot de passe "
"donné et un message d'erreur si le mot de passe ne respecte pas les "
"exigences. Facultativement, il peut définir une fonction de rappel afin "
"d'être averti lorsque le mot de passe d'un utilisateur a été changé. Les "
"validateurs peuvent également proposer des réglages facultatifs pour "
"spécialiser leur comportement."

msgid ""
"Validation is controlled by the :setting:`AUTH_PASSWORD_VALIDATORS` setting. "
"The default for the setting is an empty list, which means no validators are "
"applied. In new projects created with the default :djadmin:`startproject` "
"template, a set of validators is enabled by default."
msgstr ""
"La validation est contrôlée par le réglage :setting:"
"`AUTH_PASSWORD_VALIDATORS`. La liste de ce réglage est vide par défaut, ce "
"qui signifie qu'aucun validateur n'est appliqué. Dans les nouveaux projets "
"créés par le modèle :djadmin:`startproject` par défaut, un ensemble de "
"validateurs sont activés."

msgid ""
"By default, validators are used in the forms to reset or change passwords "
"and in the :djadmin:`createsuperuser` and :djadmin:`changepassword` "
"management commands. Validators aren't applied at the model level, for "
"example in ``User.objects.create_user()`` and ``create_superuser()``, "
"because we assume that developers, not users, interact with Django at that "
"level and also because model validation doesn't automatically run as part of "
"creating models."
msgstr ""
"Par défaut, les validateurs sont utilisés dans les formulaires pour "
"réinitialiser ou modifier les mots de passe, ainsi que dans les commandes "
"d'administration :djadmin:`createsuperuser` et :djadmin:`changepassword`. "
"Les validateurs ne sont pas appliqués au niveau des modèles, par exemple "
"dans ``User.objects.create_user()`` et ``create_superuser()``, parce qu'à ce "
"niveau ce sont les développeurs et non les utilisateurs qui interagissent "
"avec Django et également parce que la validation des modèles n'est pas "
"automatiquement exécutée dans le contexte de la création de modèles."

msgid ""
"Password validation can prevent the use of many types of weak passwords. "
"However, the fact that a password passes all the validators doesn't "
"guarantee that it is a strong password. There are many factors that can "
"weaken a password that are not detectable by even the most advanced password "
"validators."
msgstr ""
"La validation des mots de passe peut éviter l'emploi de différents types de "
"mots de passe faibles. Cependant, même si un mot de passe est validé par "
"tous les validateurs, cela ne garantit pas forcément un mot de passe solide. "
"Il existe de nombreux facteurs affaiblissant la solidité d'un mot de passe "
"et qui ne peuvent pas être détectés par les validateurs de mots de passe "
"même les plus avancés."

msgid "Enabling password validation"
msgstr "Activation de la validation des mots de passe"

msgid ""
"Password validation is configured in the :setting:`AUTH_PASSWORD_VALIDATORS` "
"setting::"
msgstr ""
"La validation des mots de passe est configurée par le réglage :setting:"
"`AUTH_PASSWORD_VALIDATORS`::"

msgid "This example enables all four included validators:"
msgstr "Cet exemple active les quatre validateurs intégrés :"

msgid ""
"``UserAttributeSimilarityValidator``, which checks the similarity between "
"the password and a set of attributes of the user."
msgstr ""
"``UserAttributeSimilarityValidator``, qui vérifie la similitude entre le mot "
"de passe et certains attributs de l'utilisateur."

msgid ""
"``MinimumLengthValidator``, which checks whether the password meets a "
"minimum length. This validator is configured with a custom option: it now "
"requires the minimum length to be nine characters, instead of the default "
"eight."
msgstr ""
"``MinimumLengthValidator``, qui vérifie la longueur minimale du mot de "
"passe. Ce validateur est configuré avec une option personnalisée : il exige "
"une longueur minimale de 9 caractères, au lieu des 8 par défaut."

msgid ""
"``CommonPasswordValidator``, which checks whether the password occurs in a "
"list of common passwords. By default, it compares to an included list of "
"20,000 common passwords."
msgstr ""
"``CommonPasswordValidator``, qui vérifie si le mot de passe se trouve dans "
"une liste de mots de passe courants. Par défaut, cette comparaison se fait "
"avec une liste de 20'000 mots de passe courants."

msgid ""
"``NumericPasswordValidator``, which checks whether the password isn't "
"entirely numeric."
msgstr ""
"``NumericPasswordValidator``, qui vérifie que le mot de passe n'est pas "
"entièrement numérique."

msgid ""
"For ``UserAttributeSimilarityValidator`` and ``CommonPasswordValidator``, "
"we're using the default settings in this example. "
"``NumericPasswordValidator`` has no settings."
msgstr ""
"Pour ``UserAttributeSimilarityValidator`` et ``CommonPasswordValidator``, "
"nous utilisons les réglages par défaut dans cet exemple. "
"``NumericPasswordValidator`` ne contient pas de réglages."

msgid ""
"The help texts and any errors from password validators are always returned "
"in the order they are listed in :setting:`AUTH_PASSWORD_VALIDATORS`."
msgstr ""
"Les textes d'aide et les messages d'erreur des validateurs de mots de passe "
"sont toujours renvoyés dans l'ordre de leur apparition dans :setting:"
"`AUTH_PASSWORD_VALIDATORS`."

msgid "Included validators"
msgstr "Validateurs intégrés"

msgid "Django includes four validators:"
msgstr "Django fournit quatre validateurs intégrés :"

msgid ""
"Validates that the password is of a minimum length. The minimum length can "
"be customized with the ``min_length`` parameter."
msgstr ""
"Valide une longueur minimale des mots de passe. Cette longueur minimale peut "
"être personnalisée avec le paramètre ``min_length``."

msgid ""
"Validates that the password is sufficiently different from certain "
"attributes of the user."
msgstr ""
"Valide la non-similitude du mot de passe avec plusieurs attributs de "
"l'utilisateur."

msgid ""
"The ``user_attributes`` parameter should be an iterable of names of user "
"attributes to compare to. If this argument is not provided, the default is "
"used: ``'username', 'first_name', 'last_name', 'email'``. Attributes that "
"don't exist are ignored."
msgstr ""
"Le paramètre ``user_attributes`` correspond à une itération de noms "
"d'attributs utilisateur avec lesquels la comparaison sera effectuée. Si ce "
"paramètre est omis, la liste par défaut contient : ``'username', "
"'first_name', 'last_name', 'email'``. Les attributs qui n'existent pas sont "
"ignorés."

msgid ""
"The maximum allowed similarity of passwords can be set on a scale of 0.1 to "
"1.0 with the ``max_similarity`` parameter. This is compared to the result "
"of :meth:`difflib.SequenceMatcher.quick_ratio`. A value of 0.1 rejects "
"passwords unless they are substantially different from the "
"``user_attributes``, whereas a value of 1.0 rejects only passwords that are "
"identical to an attribute's value."
msgstr ""
"La similarité maximale autorisée des mots de passe peut être définie sur une "
"échelle de 0,1 à 1,0 avec le paramètre ``max_similarity``. Cette valeur est "
"comparée au résultat de :meth:`difflib.SequenceMatcher.quick_ratio`. Une "
"valeur de 0,1 rejette les mots de passe qui ne sont pas clairement "
"différents des attributs ``user_attributes``, alors qu'une valeur de 1,0 ne "
"rejette que les mots de passe qui sont identiques à une valeur d'attribut."

msgid ""
"Validates that the password is not a common password. This converts the "
"password to lowercase (to do a case-insensitive comparison) and checks it "
"against a list of 20,000 common password created by `Royce Williams <https://"
"gist.github.com/roycewilliams/226886fd01572964e1431ac8afc999ce>`_."
msgstr ""
"Valide que le mot de passe ne correspond pas à un mot de passe courant. Le "
"mot de passe est converti en minuscules (pour effectuer une comparaison "
"insensible à la casse) puis est comparé à une liste de 20'000 mots de passe "
"courants créée par `Royce Williams <https://gist.github.com/"
"roycewilliams/226886fd01572964e1431ac8afc999ce>`_."

msgid ""
"The ``password_list_path`` can be set to the path of a custom file of common "
"passwords. This file should contain one lowercase password per line and may "
"be plain text or gzipped."
msgstr ""
"``password_list_path`` peut contenir un chemin vers un fichier personnalisé "
"de mots de passe courants. Ce fichier doit contenir un mot de passe en "
"minuscules par ligne et peut être soit compressé gzip, soit du texte pur."

msgid "Validate that the password is not entirely numeric."
msgstr "Vérifie que le mot de passe n'est pas entièrement numérique."

msgid "Integrating validation"
msgstr "Intégration de la validation"

msgid ""
"There are a few functions in ``django.contrib.auth.password_validation`` "
"that you can call from your own forms or other code to integrate password "
"validation. This can be useful if you use custom forms for password setting, "
"or if you have API calls that allow passwords to be set, for example."
msgstr ""
"Quelques fonctions dans ``django.contrib.auth.password_validation`` peuvent "
"être appelées depuis vos propres formulaires ou votre code pour intégrer la "
"validation des mots de passe. Cela peut être utile par exemple si vous "
"utilisez des formulaires personnalisés pour la définition des mots de passe "
"ou si vous écrivez des appels d'API permettant la définition de mots de "
"passe."

msgid ""
"Validates a password. If all validators find the password valid, returns "
"``None``. If one or more validators reject the password, raises a :exc:"
"`~django.core.exceptions.ValidationError` with all the error messages from "
"the validators."
msgstr ""
"Valide un mot de passe. Si tous les validateurs estiment que le mot de passe "
"est valide, ``None`` sera renvoyé. Si un ou plusieurs validateurs rejettent "
"le mot de passe, une exception :exc:`~django.core.exceptions."
"ValidationError` est produite contenant tous les messages d'erreur des "
"validateurs."

msgid ""
"The ``user`` object is optional: if it's not provided, some validators may "
"not be able to perform any validation and will accept any password."
msgstr ""
"L'objet ``user`` est facultatif : s'il n'est pas présent, certains "
"validateurs pourraient ne pas être capable de procéder à la validation et "
"accepteront donc n'importe quel mot de passe."

msgid ""
"Informs all validators that the password has been changed. This can be used "
"by validators such as one that prevents password reuse. This should be "
"called once the password has been successfully changed."
msgstr ""
"Informe tous les validateurs que le mot de passe a été changé. Cela peut "
"être utilisé par certains validateurs, par exemple pour éviter de réutiliser "
"un même mot de passe. Cette méthode doit être appelée après que le mot de "
"passe a été modifié avec succès."

msgid ""
"For subclasses of :class:`~django.contrib.auth.models.AbstractBaseUser`, the "
"password field will be marked as \"dirty\" when calling :meth:`~django."
"contrib.auth.models.AbstractBaseUser.set_password` which triggers a call to "
"``password_changed()`` after the user is saved."
msgstr ""
"Pour les sous-classes de :class:`~django.contrib.auth.models."
"AbstractBaseUser`, le champ mot de passe sera marqué « dirty » lors de "
"l'appel à :meth:`~django.contrib.auth.models.AbstractBaseUser.set_password` "
"qui déclenche un appel à ``password_changed()`` après l'enregistrement de "
"l'utilisateur."

msgid ""
"Returns a list of the help texts of all validators. These explain the "
"password requirements to the user."
msgstr ""
"Renvoie une liste des textes d'aide de tous les validateurs. Ceux-ci "
"expliquent les exigences du mot de passe aux utilisateurs."

msgid ""
"Returns an HTML string with all help texts in an ``<ul>``. This is helpful "
"when adding password validation to forms, as you can pass the output "
"directly to the ``help_text`` parameter of a form field."
msgstr ""
"Renvoie une chaîne HTML avec tous les textes d'aide dans une balise "
"``<ul>``. C'est pratique lors de l'ajout de la validation des mots de passe "
"dans les formulaires, car cela permet de passer directement ce contenu au "
"paramètre ``help_text`` d'un champ de formulaire."

msgid ""
"Returns a set of validator objects based on the ``validator_config`` "
"parameter. By default, all functions use the validators defined in :setting:"
"`AUTH_PASSWORD_VALIDATORS`, but by calling this function with an alternate "
"set of validators and then passing the result into the "
"``password_validators`` parameter of the other functions, your custom set of "
"validators will be used instead. This is useful when you have a typical set "
"of validators to use for most scenarios, but also have a special situation "
"that requires a custom set. If you always use the same set of validators, "
"there is no need to use this function, as the configuration from :setting:"
"`AUTH_PASSWORD_VALIDATORS` is used by default."
msgstr ""
"Renvoie un ensemble d'objets validateurs en fonction du paramètre "
"``validator_config``. Par défaut, toutes les fonctions utilisent les "
"validateurs définis dans :setting:`AUTH_PASSWORD_VALIDATORS`, mais en "
"appelant cette fonction avec un ensemble différent de validateurs et en "
"passant le résultat dans le paramètre ``password_validators`` des autres "
"fonctions, c'est cet ensemble de validateurs qui sera alors utilisé. C'est "
"pratique lorsqu'un certain groupe de validateurs s'applique à la majorité "
"des scénarios, mais qu'il existe certains cas qui demandent un autre "
"ensemble. Si vous utilisez toujours les mêmes validateurs, cette fonction "
"n'est pas utile car la configuration provenant de :setting:"
"`AUTH_PASSWORD_VALIDATORS` est utilisée par défaut."

msgid ""
"The structure of ``validator_config`` is identical to the structure of :"
"setting:`AUTH_PASSWORD_VALIDATORS`. The return value of this function can be "
"passed into the ``password_validators`` parameter of the functions listed "
"above."
msgstr ""
"La structure de ``validator_config`` est identique à la structure de :"
"setting:`AUTH_PASSWORD_VALIDATORS`. La valeur renvoyée par cette fonction "
"peut être transmise dans le paramètre ``password_validators`` des fonctions "
"présentées précédemment."

msgid ""
"Note that where the password is passed to one of these functions, this "
"should always be the clear text password - not a hashed password."
msgstr ""
"Notez que là où le mot de passe est passé en paramètre d'une de ces "
"fonctions, il s'agit toujours du mot de passe en clair, pas de la version "
"hachée."

msgid "Writing your own validator"
msgstr "Écriture de son propre validateur"

msgid ""
"If Django's built-in validators are not sufficient, you can write your own "
"password validators. Validators have a fairly small interface. They must "
"implement two methods:"
msgstr ""
"Si les validateurs intégrés à Django ne suffisent pas, vous pouvez écrire "
"votre propre validateur de mot de passe. Les validateurs ont une interface "
"assez restreinte. Elles doivent implémenter deux méthodes :"

msgid ""
"``validate(self, password, user=None)``: validate a password. Return "
"``None`` if the password is valid, or raise a :exc:`~django.core.exceptions."
"ValidationError` with an error message if the password is not valid. You "
"must be able to deal with ``user`` being ``None`` - if that means your "
"validator can't run, return ``None`` for no error."
msgstr ""
"``validate(self, password, user=None)``: valide un mot de passe. Renvoie "
"``None`` si le mot de passe est valide, ou génère une erreur :exc:`~django."
"core.exceptions.ValidationError` avec un message d'erreur si le mot de passe "
"n'est pas valide. La méthode doit pouvoir gérer un utilisateur ``user`` "
"valant ``None``; si cela signifie que le validateur ne peut pas s'appliquer, "
"renvoyez ``None`` pour signifier qu'il n'y a pas d'erreur."

msgid ""
"``get_help_text()``: provide a help text to explain the requirements to the "
"user."
msgstr ""
"``get_help_text()``: fournit un texte d'aide pour expliquer les exigences à "
"l'utilisateur."

msgid ""
"Any items in the ``OPTIONS`` in :setting:`AUTH_PASSWORD_VALIDATORS` for your "
"validator will be passed to the constructor. All constructor arguments "
"should have a default value."
msgstr ""
"Tout ce qui est dans ``OPTIONS`` dans :setting:`AUTH_PASSWORD_VALIDATORS` "
"pour votre validateur sera transmis au constructeur. Tous les paramètres du "
"constructeur doivent posséder une valeur par défaut."

msgid "Here's a basic example of a validator, with one optional setting::"
msgstr ""
"Voici un exemple basique d'un validateur, avec un réglage facultatif ::"

msgid ""
"You can also implement ``password_changed(password, user=None``), which will "
"be called after a successful password change. That can be used to prevent "
"password reuse, for example. However, if you decide to store a user's "
"previous passwords, you should never do so in clear text."
msgstr ""
"Vous pouvez aussi implémenter ``password_changed(password, user=None``), qui "
"sera appelée à la suite d'un changement de mot de passe réussi. Cela peut "
"être utilisé pour éviter la réutilisation de mot de passe, par exemple. "
"Cependant, si vous décidez de stocker les mots de passe passés d'un "
"utilisateur, vous ne devriez jamais le faire avec les mots de passe en clair."

msgid "Django's cache framework"
msgstr "L'infrastructure de cache dans Django"

msgid ""
"A fundamental trade-off in dynamic websites is, well, they're dynamic. Each "
"time a user requests a page, the web server makes all sorts of calculations "
"-- from database queries to template rendering to business logic -- to "
"create the page that your site's visitor sees. This is a lot more expensive, "
"from a processing-overhead perspective, than your standard read-a-file-off-"
"the-filesystem server arrangement."
msgstr ""
"Un site Web crée avec Django est dynamique. Chaque fois qu'un utilisateur "
"demande l'affichage d'une page, le serveur Web effectue toutes sortes "
"d'opérations -- des requêtes de bases de données au rendu des gabarits, en "
"plus de la logique métier de l'application -- afin de créer les pages que "
"vos visiteurs verront. Ces opérations sont bien plus chères en temps de "
"calcul qu'un site Web statique, ou des pages seraient directement lues "
"depuis le système de fichier."

msgid ""
"For most web applications, this overhead isn't a big deal. Most web "
"applications aren't ``washingtonpost.com`` or ``slashdot.org``; they're "
"small- to medium-sized sites with so-so traffic. But for medium- to high-"
"traffic sites, it's essential to cut as much overhead as possible."
msgstr ""
"Pour la plupart des applications Web, cette charge supplémentaire n'est pas "
"un problème. En effet, la plupart des sites Web n'ont pas la popularité de "
"``washingtonpost.com`` ou ``slashdot.org``, mais sont des sites petits ou "
"moyens, avec un trafic bien plus faible. En revanche, pour les sites à "
"trafic moyen ou lourd, il est essentiel de réduire la charge de travail du "
"serveur au maximum."

msgid "That's where caching comes in."
msgstr "C'est là que le cache intervient."

msgid ""
"To cache something is to save the result of an expensive calculation so that "
"you don't have to perform the calculation next time. Here's some pseudocode "
"explaining how this would work for a dynamically generated web page:"
msgstr ""
"Mettre quelque chose «en cache» est le fait de sauvegarder le résultat d'une "
"opération coûteuse en temps de calcul, afin de ne pas avoir à ré-effectuer "
"cette opération la fois suivante. Voici du pseudocode expliquant comment "
"cela fonctionnerait pour une page web générée dynamiquement :"

msgid ""
"Django comes with a robust cache system that lets you save dynamic pages so "
"they don't have to be calculated for each request. For convenience, Django "
"offers different levels of cache granularity: You can cache the output of "
"specific views, you can cache only the pieces that are difficult to produce, "
"or you can cache your entire site."
msgstr ""
"Django mets un système de cache robuste à disposition, qui permet de "
"sauvegarder les pages dynamiques afin d'éviter leur calcul pour chaque "
"requête. Pour plus de souplesse, Django propose différents niveaux de "
"granularité de cache: il est possible de mettre en cache le résultat de vues "
"spécifiques, seulement les parties difficiles à produire, ou l'intégralité "
"de votre site."

msgid ""
"Django also works well with \"downstream\" caches, such as `Squid <http://"
"www.squid-cache.org/>`_ and browser-based caches. These are the types of "
"caches that you don't directly control but to which you can provide hints "
"(via HTTP headers) about which parts of your site should be cached, and how."
msgstr ""
"Django fonctionne aussi très bien avec des caches externes tels que `Squid "
"`_, ainsi que les caches des navigateurs. Ces types de caches ne sont pas "
"contrôlés directement par l'application. Il est en revanche possible de leur "
"fournir des indices (via les en-têtes HTTP) sur quelles parties de votre "
"site mettre en cache, et comment."

msgid ""
"The :ref:`Cache Framework design philosophy <cache-design-philosophy>` "
"explains a few of the design decisions of the framework."
msgstr ""
"La  :ref:`philosophie de conception du système de cache <cache-design-"
"philosophy>` explique quelques-unes des décisions de conception de ce "
"système."

msgid "Setting up the cache"
msgstr "Mise en place du cache"

msgid ""
"The cache system requires a small amount of setup. Namely, you have to tell "
"it where your cached data should live -- whether in a database, on the "
"filesystem or directly in memory. This is an important decision that affects "
"your cache's performance; yes, some cache types are faster than others."
msgstr ""
"Le système de cache nécessite un peu de mise en place. En particulier, il "
"faut indiquer où les données mises en cache doivent être stockées -- dans "
"une base de données, dans le système de fichiers ou directement en mémoire. "
"C'est une décision importante qui influe sur les performances de votre "
"cache: oui, certains systèmes sont plus rapides que d'autres."

msgid ""
"Your cache preference goes in the :setting:`CACHES` setting in your settings "
"file. Here's an explanation of all available values for :setting:`CACHES`."
msgstr ""
"Le choix de votre lieu de stockage de données de cache s'effectue à l'aide "
"de l'entrée :setting:`CACHES` de votre fichier de réglages. Voici les "
"valeurs possibles de :setting:`CACHES`."

msgid "Memcached"
msgstr "Memcached"

msgid ""
"Memcached__ is an entirely memory-based cache server, originally developed "
"to handle high loads at LiveJournal.com and subsequently open-sourced by "
"Danga Interactive. It is used by sites such as Facebook and Wikipedia to "
"reduce database access and dramatically increase site performance."
msgstr ""
"Memcached__ est un serveur de cache entièrement basé en mémoire, développé à "
"l'origine pour soutenir la charge de travail élevée de LiveJournal.com, et "
"dont la source a été par la suite ouverte par Danga Interactive. De gros "
"sites tels que Facebook et Wikipedia l'utilisent pour réduire le nombre "
"d'accès à leurs bases de données et accroître les performances de leurs "
"sites en général."

msgid ""
"Memcached runs as a daemon and is allotted a specified amount of RAM. All it "
"does is provide a fast interface for adding, retrieving and deleting data in "
"the cache. All data is stored directly in memory, so there's no overhead of "
"database or filesystem usage."
msgstr ""
"Memcached fonctionne comme un service et reçoit une quantité de mémoire vive "
"définie. Son unique rôle est de fournir une interface rapide pour ajouter, "
"récupérer et supprimer des données dans le cache. Toutes les données sont "
"stockées directement en mémoire, il n'y a donc aucune charge induite par une "
"base de données ou par le système de fichiers."

msgid ""
"After installing Memcached itself, you'll need to install a Memcached "
"binding. There are several Python Memcached bindings available; the two "
"supported by Django are :pypi:`pylibmc` and :pypi:`pymemcache`."
msgstr ""
"Après avoir installé Memcached, il s'agit d'installer le code de liaison "
"Memcached. Il existe plusieurs codes de liaison Memcached disponibles en "
"Python ; les deux pris en charge par Django sont :pypi:`pylibmc` et :pypi:"
"`pymemcache`."

msgid "To use Memcached with Django:"
msgstr "Pour utiliser Memcached avec Django :"

msgid ""
"Set :setting:`BACKEND <CACHES-BACKEND>` to ``django.core.cache.backends."
"memcached.PyMemcacheCache`` or ``django.core.cache.backends.memcached."
"PyLibMCCache`` (depending on your chosen memcached binding)"
msgstr ""
"Définissez :setting:`BACKEND <CACHES-BACKEND>` à ``django.core.cache."
"backends.memcached.PyMemcacheCache`` ou à ``django.core.cache.backends."
"memcached.PyLibMCCache`` (selon votre choix de code de liaison memcached)"

msgid ""
"Set :setting:`LOCATION <CACHES-LOCATION>` to ``ip:port`` values, where "
"``ip`` is the IP address of the Memcached daemon and ``port`` is the port on "
"which Memcached is running, or to a ``unix:path`` value, where ``path`` is "
"the path to a Memcached Unix socket file."
msgstr ""
"Définissez :setting:`LOCATION <CACHES-LOCATION>` aux valeurs ``ip:port``, où "
"``ip`` est l'adresse IP du service Memcached  et ``port`` est le port de "
"fonctionnement de Memcached,  ou à une valeur ``unix:path``, où ``path`` est "
"le chemin vers le fichier connecteur Unix de  Memcached."

msgid ""
"In this example, Memcached is running on localhost (127.0.0.1) port 11211, "
"using the ``pymemcache`` binding::"
msgstr ""
"Dans cet exemple, Memcached tourne sur localhost (127.0.0.1) port 11211, "
"utilisant la liaison ``pymemcache``::"

msgid ""
"In this example, Memcached is available through a local Unix socket file :"
"file:`/tmp/memcached.sock` using the ``pymemcache`` binding::"
msgstr ""
"Dans cet exemple, Memcached est disponible par un connecteur Unix local :"
"file:`/tmp/memcached.sock` en utilisant la liaison ``pymemcache``::"

msgid ""
"One excellent feature of Memcached is its ability to share a cache over "
"multiple servers. This means you can run Memcached daemons on multiple "
"machines, and the program will treat the group of machines as a *single* "
"cache, without the need to duplicate cache values on each machine. To take "
"advantage of this feature, include all server addresses in :setting:"
"`LOCATION <CACHES-LOCATION>`, either as a semicolon or comma delimited "
"string, or as a list."
msgstr ""
"L'une des fonctionnalités très intéressantes de Memcached est de pouvoir "
"répartir un cache sur plusieurs serveurs. Cela signifie que vous pouvez "
"faire fonctionner des services Memcached sur plusieurs machines et le "
"programme va considérer le groupe de machines comme un *seul* cache, sans "
"devoir dupliquer les valeurs du cache sur chaque machine. Pour tirer profit "
"de cette fonctionnalité, ajoutez toutes les adresses des serveurs impliqués "
"dans :setting:`LOCATION <CACHES-LOCATION>`, soit en les séparant par des "
"virgules ou points-virgules, soit sous forme de liste."

msgid ""
"In this example, the cache is shared over Memcached instances running on IP "
"address 172.19.26.240 and 172.19.26.242, both on port 11211::"
msgstr ""
"Dans cet exemple, le cache est distribué sur des instances Memcached "
"fonctionnant aux adresses IP 172.19.26.240 et 172.19.26.242, les deux sur le "
"port 11211 ::"

msgid ""
"In the following example, the cache is shared over Memcached instances "
"running on the IP addresses 172.19.26.240 (port 11211), 172.19.26.242 (port "
"11212), and 172.19.26.244 (port 11213)::"
msgstr ""
"Dans l'exemple suivant, le cache est distribué sur des instances Memcached "
"fonctionnant aux adresses IP 172.19.26.240 (port 11211), 172.19.26.242 (port "
"11212), and 172.19.26.244 (port 11213) ::"

msgid ""
"By default, the ``PyMemcacheCache`` backend sets the following options (you "
"can override them in your :setting:`OPTIONS <CACHES-OPTIONS>`)::"
msgstr ""
"Par défaut, le moteur ``PyMemcacheCache`` définit les options suivantes "
"(vous pouvez les surcharger dans vos :setting:`OPTIONS <CACHES-OPTIONS>`)::"

msgid ""
"A final point about Memcached is that memory-based caching has a "
"disadvantage: because the cached data is stored in memory, the data will be "
"lost if your server crashes. Clearly, memory isn't intended for permanent "
"data storage, so don't rely on memory-based caching as your only data "
"storage. Without a doubt, *none* of the Django caching backends should be "
"used for permanent storage -- they're all intended to be solutions for "
"caching, not storage -- but we point this out here because memory-based "
"caching is particularly temporary."
msgstr ""
"Un dernier point au sujet de Memcached est que le cache basé sur la mémoire "
"présente un désavantage : en raison du stockage en mémoire, les données du "
"cache sont perdues si le serveur s'arrête. Il est clair que la mémoire n'est "
"pas prévue pour contenir des données de manière permanente, il ne faut donc "
"pas se baser sur du cache en mémoire comme seul stockage de données. Sans "
"aucun doute, *aucun* des moteurs de cache de Django ne devrait être utilisé "
"pour du stockage permanent, ils sont tous prévus pour être des solutions de "
"mise en cache et non pour du stockage ; mais nous signalons cela ici car le "
"cache basé sur la mémoire est particulièrement volatile."

msgid "Redis"
msgstr "Redis"

msgid ""
"Redis__ is an in-memory database that can be used for caching. To begin "
"you'll need a Redis server running either locally or on a remote machine."
msgstr ""
"Redis__ est une base de données en mémoire pouvant être utilisée pour le "
"cache. Pour commencer, il faut un serveur Redis fonctionnant soit "
"localement, soit sur une machine distante."

msgid ""
"After setting up the Redis server, you'll need to install Python bindings "
"for Redis. :pypi:`redis-py <redis>` is the binding supported natively by "
"Django. Installing the :pypi:`hiredis-py <hiredis>` package is also "
"recommended."
msgstr ""
"Après avoir configuré le serveur Redis, il est nécessaire d'installer les "
"liaisons Python pour Redis. :pypi:`redis-py <redis>` est celle qui est prise "
"en charge nativement par Django. L'installation du paquet supplémentaire :"
"pypi:`hiredis-py <hiredis>` est aussi recommandée."

msgid "To use Redis as your cache backend with Django:"
msgstr "Pour utiliser Redis comme votre moteur de cache avec Django :"

msgid ""
"Set :setting:`BACKEND <CACHES-BACKEND>` to ``django.core.cache.backends."
"redis.RedisCache``."
msgstr ""
"Définissez :setting:`BACKEND <CACHES-BACKEND>` à ``django.core.cache."
"backends.redis.RedisCache``."

msgid ""
"Set :setting:`LOCATION <CACHES-LOCATION>` to the URL pointing to your Redis "
"instance, using the appropriate scheme. See the ``redis-py`` docs for "
"`details on the available schemes <https://redis-py.readthedocs.io/en/stable/"
"connections.html#redis.connection.ConnectionPool.from_url>`_."
msgstr ""
"Placez dans :setting:`LOCATION <CACHES-LOCATION>` l'URL pointant vers votre "
"instance Redis, en utilisant le protocole approprié. Consultez la "
"documentation ``redis-py`` pour des `détails sur les protocoles disponibles "
"<https://redis-py.readthedocs.io/en/stable/connections.html#redis.connection."
"ConnectionPool.from_url>`_."

msgid "For example, if Redis is running on localhost (127.0.0.1) port 6379::"
msgstr "Par exemple, si Redis tourne sur localhost (127.0.0.1) port 6379 ::"

msgid ""
"Often Redis servers are protected with authentication. In order to supply a "
"username and password, add them in the ``LOCATION`` along with the URL::"
msgstr ""
"Les serveurs Redis sont souvent protégés par une authentification. Pour "
"indiquer un nom d'utilisateur et un mot de passe, ajoutez-les dans "
"``LOCATION`` en compagnie de l'URL ::"

msgid ""
"If you have multiple Redis servers set up in the replication mode, you can "
"specify the servers either as a semicolon or comma delimited string, or as a "
"list. While using multiple servers, write operations are performed on the "
"first server (leader). Read operations are performed on the other servers "
"(replicas) chosen at random::"
msgstr ""
"Si vous disposez de plusieurs serveurs Redis configurés en mode réplication, "
"vous pouvez définir les serveurs soit sous forme de chaîne délimitée par "
"virgule ou point-virgule, soit sous forme de liste. Lorsque plusieurs "
"serveurs sont définis, les opérations d'écriture sont appliquées au premier "
"serveur (leader). Les opérations de lecture sont effectuées sur les autres "
"serveurs (réplicas) choisis au hasard ::"

msgid "Database caching"
msgstr "Cache en base de données"

msgid ""
"Django can store its cached data in your database. This works best if you've "
"got a fast, well-indexed database server."
msgstr ""
"Django peut stocker ses données mises en cache dans votre base de données. "
"Cela fonctionne mieux si vous avez un serveur de base de données rapide et "
"bien indexé."

msgid "To use a database table as your cache backend:"
msgstr "Pour utiliser une table de base de données comme cache :"

msgid ""
"Set :setting:`BACKEND <CACHES-BACKEND>` to ``django.core.cache.backends.db."
"DatabaseCache``"
msgstr ""
"Définissez :setting:`BACKEND <CACHES-BACKEND>` à ``django.core.cache."
"backends.db.DatabaseCache``"

msgid ""
"Set :setting:`LOCATION <CACHES-LOCATION>` to ``tablename``, the name of the "
"database table. This name can be whatever you want, as long as it's a valid "
"table name that's not already being used in your database."
msgstr ""
"Pour :setting:`LOCATION <CACHES-LOCATION>`, indiquez ``tablename``, le nom "
"de la table de base de données. Ce nom peut être librement choisi, pour "
"autant qu'il corresponde à un nom de table valide qui n'est pas déjà utilisé "
"dans votre base de données."

msgid "In this example, the cache table's name is ``my_cache_table``::"
msgstr "Dans cet exemple, le nom de la table du cache est ``my_cache_table``::"

msgid ""
"Unlike other cache backends, the database cache does not support automatic "
"culling of expired entries at the database level. Instead, expired cache "
"entries are culled each time ``add()``, ``set()``, or ``touch()`` is called."
msgstr ""
"Au contraire des autres moteurs de cache, le cache de base de données ne "
"prend pas en charge la purge automatique des entrées expirées au niveau de "
"la base de données. Ces entrées de cache expirées sont toutefois purgées "
"lors de chaque appel à ``add()``, ``set()`` ou ``touch()``."

msgid "Creating the cache table"
msgstr "Création de la table du cache"

msgid ""
"Before using the database cache, you must create the cache table with this "
"command:"
msgstr ""
"Avant d'utiliser le cache en base de données, vous devez créer la table du "
"cache avec cette commande :"

msgid ""
"This creates a table in your database that is in the proper format that "
"Django's database-cache system expects. The name of the table is taken from :"
"setting:`LOCATION <CACHES-LOCATION>`."
msgstr ""
"Cela crée une table dans votre base de données qui est dans le format "
"attendu par le système de cache de Django. Le nom de la table est extrait "
"de :setting:`LOCATION <CACHES-LOCATION>`."

msgid ""
"If you are using multiple database caches, :djadmin:`createcachetable` "
"creates one table for each cache."
msgstr ""
"Si vous utilisez plusieurs caches en base de données, :djadmin:"
"`createcachetable` crée une table pour chaque cache."

msgid ""
"If you are using multiple databases, :djadmin:`createcachetable` observes "
"the ``allow_migrate()`` method of your database routers (see below)."
msgstr ""
"Si vous utilisez plusieurs bases de données, :djadmin:`createcachetable` "
"respecte la méthode ``allow_migrate ()`` de vos routeurs de base de données "
"(voir ci-dessous)."

msgid ""
"Like :djadmin:`migrate`, :djadmin:`createcachetable` won't touch an existing "
"table. It will only create missing tables."
msgstr ""
"Comme :djadmin:`migrate`, :djadmin:`createcachetable` ne touchera pas à une "
"table existante. Il ne fera que créer les tables manquantes."

msgid ""
"To print the SQL that would be run, rather than run it, use the :option:"
"`createcachetable --dry-run` option."
msgstr ""
"Pour afficher le code SQL qui serait exécuté plutôt que de l'exécuter "
"réellement, utilisez l'option :option:`createcachetable --dry-run`."

msgid "Multiple databases"
msgstr "Bases de données multiples"

msgid ""
"If you use database caching with multiple databases, you'll also need to set "
"up routing instructions for your database cache table. For the purposes of "
"routing, the database cache table appears as a model named ``CacheEntry``, "
"in an application named ``django_cache``. This model won't appear in the "
"models cache, but the model details can be used for routing purposes."
msgstr ""
"Si vous utilisez le cache en base de données avec plusieurs bases de "
"données, vous devrez également indiquer des instructions de routage pour la "
"table de base de données du cache. Dans l'optique du routage, la table de "
"base de données du cache apparaît en tant que modèle nommé ``CacheEntry`` "
"dans une application nommée ``django_cache``. Ce modèle n'est pas présent "
"dans le cache des modèles, mais il est possible d'utiliser les détails du "
"modèle dans un contexte de routage."

msgid ""
"For example, the following router would direct all cache read operations to "
"``cache_replica``, and all write operations to ``cache_primary``. The cache "
"table will only be synchronized onto ``cache_primary``::"
msgstr ""
"Par exemple, le routeur suivant redirige toutes les opérations de lecture de "
"cache vers ``cache_replica`` et toutes les opérations d'écriture en cache "
"vers ``cache_primary``. La table de cache ne sera synchronisée que vers "
"``cache_primary``::"

msgid ""
"If you don't specify routing directions for the database cache model, the "
"cache backend will use the ``default`` database."
msgstr ""
"Si vous n'indiquez aucune information de routage pour le modèle de cache en "
"base de données, le moteur de cache utilise la base de données ``default``."

msgid ""
"And if you don't use the database cache backend, you don't need to worry "
"about providing routing instructions for the database cache model."
msgstr ""
"Et si vous n'utilisez pas le moteur de cache en base de données, il n'est "
"pas nécessaire de fournir des instructions de routage pour le modèle de "
"cache en base de données."

msgid "Filesystem caching"
msgstr "Cache sur système de fichiers"

msgid ""
"The file-based backend serializes and stores each cache value as a separate "
"file. To use this backend set :setting:`BACKEND <CACHES-BACKEND>` to "
"``\"django.core.cache.backends.filebased.FileBasedCache\"`` and :setting:"
"`LOCATION <CACHES-LOCATION>` to a suitable directory. For example, to store "
"cached data in ``/var/tmp/django_cache``, use this setting::"
msgstr ""
"Le moteur de cache basé sur des fichiers sérialise et stocke chaque valeur "
"de cache dans un fichier séparé. Pour utiliser ce moteur, définissez :"
"setting:`BACKEND <CACHES-BACKEND>` à ``\"django.core.cache.backends."
"filebased.FileBasedCache\"`` et renseignez :setting:`LOCATION <CACHES-"
"LOCATION>` avec un répertoire approprié. Par exemple, pour stocker vos "
"données en mémoire cache dans ``/var/tmp/django_cache``, utilisez ce "
"paramètre ::"

msgid ""
"If you're on Windows, put the drive letter at the beginning of the path, "
"like this::"
msgstr ""
"Si vous êtes sur Windows, indiquez la lettre de lecteur au début du chemin, "
"comme ceci ::"

msgid ""
"The directory path should be absolute -- that is, it should start at the "
"root of your filesystem. It doesn't matter whether you put a slash at the "
"end of the setting."
msgstr ""
"Le chemin de répertoire doit être absolu, c'est-à-dire qu'il doit commencer "
"à la racine du système de fichiers. La barre oblique en fin de chemin est "
"facultative."

msgid ""
"Make sure the directory pointed-to by this setting either exists and is "
"readable and writable, or that it can be created by the system user under "
"which your web server runs. Continuing the above example, if your server "
"runs as the user ``apache``, make sure the directory ``/var/tmp/"
"django_cache`` exists and is readable and writable by the user ``apache``, "
"or that it can be created by the user ``apache``."
msgstr ""
"Assurez-vous que le répertoire indiqué par ce réglage existe bel et bien et "
"qu'il est accessible en lecture et écriture, ou qu'il puisse être créé par "
"l'utilisateur système avec lequel tourne votre serveur Web. Poursuivant "
"l'exemple ci-dessus, si votre serveur tourne avec l'utilisateur ``apache``, "
"vérifiez que le répertoire ``/var/tmp/django_cache`` existe et qu'il est "
"accessible en lecture et écriture par l'utilisateur ``apache`` ou qu'il "
"puisse être créé par l'utilisateur ``apache``."

msgid ""
"When the cache :setting:`LOCATION <CACHES-LOCATION>` is contained within :"
"setting:`MEDIA_ROOT`, :setting:`STATIC_ROOT`, or :setting:"
"`STATICFILES_FINDERS`, sensitive data may be exposed."
msgstr ""
"Lorsque l'emplacement :setting:`LOCATION <CACHES-LOCATION>` du cache se "
"trouve à l'intérieur de :setting:`MEDIA_ROOT`, :setting:`STATIC_ROOT` ou :"
"setting:`STATICFILES_FINDERS`, des données sensibles pourraient se trouver "
"exposées."

msgid ""
"An attacker who gains access to the cache file can not only falsify HTML "
"content, which your site will trust, but also remotely execute arbitrary "
"code, as the data is serialized using :mod:`pickle`."
msgstr ""
"Un attaquant qui obtient l'accès au fichier de cache peut non seulement "
"altérer du contenu HTML auquel votre site fait confiance, mais aussi "
"exécuter du code arbitraire à distance, dans la mesure où les données sont "
"sérialisées par :mod:`pickle`."

msgid ""
"Filesystem caching may become slow when storing a large number of files. If "
"you run into this problem, consider using a different caching mechanism. You "
"can also subclass :source:`FileBasedCache <django/core/cache/backends/"
"filebased.py>` and improve the culling strategy."
msgstr ""
"La mise en cache basée sur le système de fichiers peut devenir lente lors du "
"stockage d'un grand nombre de fichiers. Si vous rencontrez ce problème, "
"envisagez l'utilisation d'un autre mécanisme de mise en cache. Vous pouvez "
"également créer une sous-classe de :source:`FileBasedCache <django/core/"
"cache/backends/filebased.py>` et améliorer vous-même la stratégie "
"d'expiration du contenu en cache."

msgid "Local-memory caching"
msgstr "Cache en mémoire locale"

msgid ""
"This is the default cache if another is not specified in your settings file. "
"If you want the speed advantages of in-memory caching but don't have the "
"capability of running Memcached, consider the local-memory cache backend. "
"This cache is per-process (see below) and thread-safe. To use it, set :"
"setting:`BACKEND <CACHES-BACKEND>` to ``\"django.core.cache.backends.locmem."
"LocMemCache\"``. For example::"
msgstr ""
"Il s'agit du cache par défaut s'il n'y en a pas un autre défini dans votre "
"fichier de réglages. Si vous souhaitez obtenir les avantages de rapidité du "
"cache en mémoire mais que vous n'avez pas la possibilité de faire "
"fonctionner Memcached, considérez la possibilité d'utiliser le moteur de "
"cache en mémoire locale. Ce cache est par processus (voir ci-dessous) et "
"gère la concurrence entre fils d'exécution (thread-safe). Pour l'utiliser, "
"définissez :setting:`BACKEND <CACHES-BACKEND>` à ``\"django.core.cache."
"backends.locmem.LocMemCache\"``. Par exemple ::"

msgid ""
"The cache :setting:`LOCATION <CACHES-LOCATION>` is used to identify "
"individual memory stores. If you only have one ``locmem`` cache, you can "
"omit the :setting:`LOCATION <CACHES-LOCATION>`; however, if you have more "
"than one local memory cache, you will need to assign a name to at least one "
"of them in order to keep them separate."
msgstr ""
"Le réglage de cache :setting:`LOCATION <CACHES-LOCATION>` est utilisé pour "
"identifier les stockages individuels en mémoire. Si vous n'avez qu'un seul "
"cache ``locmem```, vous pouvez omettre de configurer :setting:`LOCATION "
"<CACHES-LOCATION>`; Cependant, si vous avez plus d'un stockage en mémoire "
"locale, vous devrez attribuer un nom à au moins l'un d'entre eux afin de "
"pouvoir les distinguer."

msgid "The cache uses a least-recently-used (LRU) culling strategy."
msgstr ""
"Le cache utilise une stratégie de nettoyage de type LRU (en fonction de la "
"date d'accès)."

msgid ""
"Note that each process will have its own private cache instance, which means "
"no cross-process caching is possible. This also means the local memory cache "
"isn't particularly memory-efficient, so it's probably not a good choice for "
"production environments. It's nice for development."
msgstr ""
"Notez que chaque processus aura sa propre instance de cache privée, ce qui "
"signifie qu'il n'est pas possible de faire du cache inter-processus. Cela "
"signifie aussi que le cache en mémoire locale n'est pas particulièrement "
"efficace en mémoire, ce qui n'en fait pas un très bon choix en environnement "
"de production. Mais il est pratique pour le développement."

msgid "Dummy caching (for development)"
msgstr "Pseudo-cache (pour le développement)"

msgid ""
"Finally, Django comes with a \"dummy\" cache that doesn't actually cache -- "
"it just implements the cache interface without doing anything."
msgstr ""
"Pour terminer, Django fournit un « pseudo-cache » qui ne fait pas réellement "
"de cache, mais qui ne fait qu'implémenter l'interface de cache sans action "
"réelle."

msgid ""
"This is useful if you have a production site that uses heavy-duty caching in "
"various places but a development/test environment where you don't want to "
"cache and don't want to have to change your code to special-case the latter. "
"To activate dummy caching, set :setting:`BACKEND <CACHES-BACKEND>` like so::"
msgstr ""
"Il est utile dans le cas où un site utilise intensivement le cache en "
"production dans différents endroits, mais que l'environnement de test ou de "
"développement n'est pas censé exploiter le cache et que vous ne souhaitez "
"pas changer le code pour distinguer les types d'environnement au cas par "
"cas. Pour activer le pseudo-cache, définissez :setting:`BACKEND <CACHES-"
"BACKEND>` comme ceci ::"

msgid "Using a custom cache backend"
msgstr "Utilisation d'un moteur de cache personnalisé"

msgid ""
"While Django includes support for a number of cache backends out-of-the-box, "
"sometimes you might want to use a customized cache backend. To use an "
"external cache backend with Django, use the Python import path as the :"
"setting:`BACKEND <CACHES-BACKEND>` of the :setting:`CACHES` setting, like "
"so::"
msgstr ""
"Bien que Django soit livré avec un certain nombre de moteurs de cache, il "
"peut parfois être nécessaire de créer son propre moteur de cache. Pour "
"utiliser un moteur de cache personnalisé avec Django, il s'agit d'indiquer "
"le chemin d'importation Python dans la clé :setting:`BACKEND <CACHES-"
"BACKEND>` du réglage :setting:`CACHES`, comme ceci ::"

msgid ""
"If you're building your own backend, you can use the standard cache backends "
"as reference implementations. You'll find the code in the :source:`django/"
"core/cache/backends/` directory of the Django source."
msgstr ""
"Si vous créez votre propre moteur, vous pouvez considérer les moteurs de "
"cache standards comme les implémentations de référence. Le code se trouve "
"dans le répertoire :source:`django/core/cache/backends/` du code source de "
"Django."

msgid ""
"Note: Without a really compelling reason, such as a host that doesn't "
"support them, you should stick to the cache backends included with Django. "
"They've been well-tested and are well-documented."
msgstr ""
"Note : sans raison impérieuse, comme par exemple un hôte qui ne les prend "
"pas en charge, il est recommandé de se restreindre aux moteurs de cache "
"inclus dans Django. Ils sont intensivement testés et bien documentés."

msgid "Cache arguments"
msgstr "Paramètres de cache"

msgid ""
"Each cache backend can be given additional arguments to control caching "
"behavior. These arguments are provided as additional keys in the :setting:"
"`CACHES` setting. Valid arguments are as follows:"
msgstr ""
"Chaque moteur de cache accepte des paramètres supplémentaires pour contrôler "
"le comportement du cache. Ces paramètres sont transmis sous la forme de clés "
"supplémentaires dans le réglage :setting:`CACHES`. Les paramètres valides "
"sont les suivants :"

msgid ""
":setting:`TIMEOUT <CACHES-TIMEOUT>`: The default timeout, in seconds, to use "
"for the cache. This argument defaults to ``300`` seconds (5 minutes). You "
"can set ``TIMEOUT`` to ``None`` so that, by default, cache keys never "
"expire. A value of ``0`` causes keys to immediately expire (effectively "
"\"don't cache\")."
msgstr ""
":setting:`TIMEOUT <CACHES-TIMEOUT>`: le délai d'expiration du cache par "
"défaut, en secondes. Ce paramètre contient ``300`` secondes (5 minutes) par "
"défaut. Vous pouvez définir ``TIMEOUT`` à la valeur ``None`` de sorte que, "
"par défaut, les clés de cache n'expirent jamais. Une valeur de ``0`` "
"implique que les clés expirent immédiatement (dans les faits on \"ne met pas "
"en cache\")."

msgid ""
":setting:`OPTIONS <CACHES-OPTIONS>`: Any options that should be passed to "
"the cache backend. The list of valid options will vary with each backend, "
"and cache backends backed by a third-party library will pass their options "
"directly to the underlying cache library."
msgstr ""
":setting:`OPTIONS <CACHES-OPTIONS>`: toute option devant être transmise au "
"moteur de cache. La liste des options valides dépend de chaque moteur et les "
"moteurs s'appuyant sur une bibliothèque tierce transmettent directement ces "
"options à la bibliothèque de cache sous-jacente."

msgid ""
"Cache backends that implement their own culling strategy (i.e., the "
"``locmem``, ``filesystem`` and ``database`` backends) will honor the "
"following options:"
msgstr ""
"Les moteurs de cache implémentant leur propre stratégie de purge "
"(« culling »), c'est-à-dire les moteurs ``locmem``, ``filesystem`` et "
"``database``, acceptent les options suivantes :"

msgid ""
"``MAX_ENTRIES``: The maximum number of entries allowed in the cache before "
"old values are deleted. This argument defaults to ``300``."
msgstr ""
"``MAX_ENTRIES``: le nombre maximum d'éléments autorisés dans le cache avant "
"que des valeurs plus anciennes ne soient supprimées. Ce paramètre vaut "
"``300`` par défaut."

msgid ""
"``CULL_FREQUENCY``: The fraction of entries that are culled when "
"``MAX_ENTRIES`` is reached. The actual ratio is ``1 / CULL_FREQUENCY``, so "
"set ``CULL_FREQUENCY`` to ``2`` to cull half the entries when "
"``MAX_ENTRIES`` is reached. This argument should be an integer and defaults "
"to ``3``."
msgstr ""
"``CULL_FREQUENCY``: la quantité d'éléments effacés lorsque le nombre "
"``MAX_ENTRIES`` est atteint. Le taux effectif est ``1 / CULL_FREQUENCY``, il "
"faut donc indiquer ``2`` dans ``CULL_FREQUENCY`` pour purger la moitié des "
"éléments lorsque ``MAX_ENTRIES`` est atteint. Ce paramètre doit être un "
"nombre entier, et sa valeur par défaut est ``3``."

msgid ""
"A value of ``0`` for ``CULL_FREQUENCY`` means that the entire cache will be "
"dumped when ``MAX_ENTRIES`` is reached. On some backends (``database`` in "
"particular) this makes culling *much* faster at the expense of more cache "
"misses."
msgstr ""
"Une valeur de ``CULL_FREQUENCY`` à ``0`` signifie que tout le cache est "
"effacé lorsque ``MAX_ENTRIES`` est atteint. Sur certains moteurs "
"(``database`` en particulier), cela accélère *nettement* la purge du cache "
"au dépend de davantage de défauts de cache."

msgid ""
"The Memcached and Redis backends pass the contents of :setting:`OPTIONS "
"<CACHES-OPTIONS>` as keyword arguments to the client constructors, allowing "
"for more advanced control of client behavior. For example usage, see below."
msgstr ""
"Les moteurs Memcached et Redis transmettent les contenus de :setting:"
"`OPTIONS <CACHES-OPTIONS>` comme paramètres nommés aux constructeurs "
"clients, permettant un contrôle plus fin du comportement du client. Voir ci-"
"dessous pour un exemple d'utilisation."

msgid ""
":setting:`KEY_PREFIX <CACHES-KEY_PREFIX>`: A string that will be "
"automatically included (prepended by default) to all cache keys used by the "
"Django server."
msgstr ""
":setting:`KEY_PREFIX <CACHES-KEY_PREFIX>`: une chaîne étant systématiquement "
"incluse (en préfixe par défaut) dans toutes les clés de cache utilisées par "
"le serveur Django."

msgid ""
"See the :ref:`cache documentation <cache_key_prefixing>` for more "
"information."
msgstr ""
"Consultez la :ref:`documentation du cache <cache_key_prefixing>` pour plus "
"d'informations."

msgid ""
":setting:`VERSION <CACHES-VERSION>`: The default version number for cache "
"keys generated by the Django server."
msgstr ""
":setting:`VERSION <CACHES-VERSION>`: le numéro de version par défaut des "
"clés de cache générées par le serveur Django."

msgid ""
"See the :ref:`cache documentation <cache_versioning>` for more information."
msgstr ""
"Consultez la :ref:`documentation du cache <cache_versioning>` pour plus "
"d'informations."

msgid ""
":setting:`KEY_FUNCTION <CACHES-KEY_FUNCTION>` A string containing a dotted "
"path to a function that defines how to compose a prefix, version and key "
"into a final cache key."
msgstr ""
":setting:`KEY_FUNCTION <CACHES-KEY_FUNCTION>`: une chaîne contenant un "
"chemin pointé vers une fonction qui définit la manière de composer un "
"préfixe, une version et une clé pour former une clé de cache finale."

msgid ""
"See the :ref:`cache documentation <cache_key_transformation>` for more "
"information."
msgstr ""
"Consultez la :ref:`documentation du cache <cache_key_transformation>` pour "
"plus d'informations."

msgid ""
"In this example, a filesystem backend is being configured with a timeout of "
"60 seconds, and a maximum capacity of 1000 items::"
msgstr ""
"Dans cet exemple, un moteur basé sur le système de fichiers est configuré "
"avec un délai d'expiration de 60 secondes et une capacité maximale de 1000 "
"éléments ::"

msgid ""
"Here's an example configuration for a ``pylibmc`` based backend that enables "
"the binary protocol, SASL authentication, and the ``ketama`` behavior mode::"
msgstr ""
"Voici un exemple de configuration pour un moteur basé sur ``pylibmc`` et qui "
"active le protocole binaire, l'authentification SASL et le mode de "
"comportement ``ketama``::"

msgid ""
"Here's an example configuration for a ``pymemcache`` based backend that "
"enables client pooling (which may improve performance by keeping clients "
"connected), treats memcache/network errors as cache misses, and sets the "
"``TCP_NODELAY`` flag on the connection's socket::"
msgstr ""
"Voici un exemple de configuration pour un moteur basé sur ``pymemcache`` qui "
"active le pool de clients (ce qui peut améliorer les performances en gardant "
"les clients connectés), qui traite les erreurs réseau et memcache comme des "
"défauts de cache et qui définit l'option ``TCP_NODELAY`` sur l'interface de "
"connexion ::"

msgid ""
"Here's an example configuration for a ``redis`` based backend that selects "
"database ``10`` (by default Redis ships with 16 logical databases), and sets "
"a custom `connection pool class`_ (``redis.ConnectionPool`` is used by "
"default)::"
msgstr ""
"Voici une configuration d'exemple pour un moteur basé sur ``redis`` qui "
"sélectionne la base de données ``10`` (par défaut, Redis contient 16 bases "
"de données logiques) et définit une `classe de connexions partagées`_ "
"(``redis.ConnectionPool`` est utilisée par défaut) ::"

msgid "The per-site cache"
msgstr "Le cache « par site »"

msgid ""
"Once the cache is set up, the simplest way to use caching is to cache your "
"entire site. You'll need to add ``'django.middleware.cache."
"UpdateCacheMiddleware'`` and ``'django.middleware.cache."
"FetchFromCacheMiddleware'`` to your :setting:`MIDDLEWARE` setting, as in "
"this example::"
msgstr ""
"Une fois le cache configuré, la manière la plus simple d'utiliser le cache "
"est de mettre en cache tout le site. Il s'agit alors d'ajouter ``'django."
"middleware.cache.UpdateCacheMiddleware'`` et ``'django.middleware.cache."
"FetchFromCacheMiddleware'`` au réglage :setting:`MIDDLEWARE`, comme dans cet "
"exemple ::"

msgid ""
"No, that's not a typo: the \"update\" middleware must be first in the list, "
"and the \"fetch\" middleware must be last. The details are a bit obscure, "
"but see `Order of MIDDLEWARE`_ below if you'd like the full story."
msgstr ""
"Non, il ne s'agit pas d'une erreur : l'intergiciel « update » doit bien "
"figurer en premier dans la liste, et l'intergiciel « fetch » en dernier. Les "
"détails sont quelque peu obscurs, mais vous pouvez consulter `Ordre dans "
"MIDDLEWARE`_ ci-dessous pour connaître toute l'histoire."

msgid "Then, add the following required settings to your Django settings file:"
msgstr ""
"Puis, ajoutez les réglages obligatoires suivants dans votre fichier de "
"réglages Django :"

msgid ""
":setting:`CACHE_MIDDLEWARE_ALIAS` -- The cache alias to use for storage."
msgstr ""
":setting:`CACHE_MIDDLEWARE_ALIAS` -- L'alias de cache à utiliser pour le "
"stockage."

msgid ""
":setting:`CACHE_MIDDLEWARE_SECONDS` -- The integer number of seconds each "
"page should be cached."
msgstr ""
":setting:`CACHE_MIDDLEWARE_SECONDS` -- le nombre entier de secondes durant "
"lequel chaque page doit être conservée en cache."

msgid ""
":setting:`CACHE_MIDDLEWARE_KEY_PREFIX` -- If the cache is shared across "
"multiple sites using the same Django installation, set this to the name of "
"the site, or some other string that is unique to this Django instance, to "
"prevent key collisions. Use an empty string if you don't care."
msgstr ""
":setting:`CACHE_MIDDLEWARE_KEY_PREFIX` -- Si le cache est partagé par "
"plusieurs sites utilisant la même installation de Django, définissez cette "
"valeur au nom du site ou à un nom unique de cette instance de Django, afin "
"d'éviter des collisions de clés. Indiquez une chaîne vide si cela ne vous "
"concerne pas."

msgid ""
"``FetchFromCacheMiddleware`` caches GET and HEAD responses with status 200, "
"where the request and response headers allow. Responses to requests for the "
"same URL with different query parameters are considered to be unique pages "
"and are cached separately. This middleware expects that a HEAD request is "
"answered with the same response headers as the corresponding GET request; in "
"which case it can return a cached GET response for HEAD request."
msgstr ""
"L'intergiciel ``FetchFromCacheMiddleware`` met en mémoire cache les réponses "
"GET et HEAD ayant le statut 200, pour autant que les en-têtes de requête et "
"de réponse le permettent. Les réponses aux requêtes à une même URL ayant des "
"paramètres de requête différents sont considérées comme des pages distinctes "
"et sont mises en cache séparément. Cet intergiciel s'attend à ce que la "
"réponse à une requête HEAD possède les mêmes en-têtes de réponse que la "
"requête GET équivalente ; et dans ce cas, il peut renvoyer une réponse GET à "
"partir du cache lors d'une requête HEAD."

msgid ""
"Additionally, ``UpdateCacheMiddleware`` automatically sets a few headers in "
"each :class:`~django.http.HttpResponse` which affect :ref:`downstream caches "
"<downstream-caches>`:"
msgstr ""
"De plus, l'intergiciel ``UpdateCacheMiddleware`` définit automatiquement "
"quelques en-têtes dans chaque réponse :class:`~django.http.HttpResponse`, "
"lesquels affectent les :ref:`caches amonts <downstream-caches>`:"

msgid ""
"Sets the ``Expires`` header to the current date/time plus the defined :"
"setting:`CACHE_MIDDLEWARE_SECONDS`."
msgstr ""
"L'en-tête ``Expires`` est défini à la date/heure courante additionnée de :"
"setting:`CACHE_MIDDLEWARE_SECONDS`."

msgid ""
"Sets the ``Cache-Control`` header to give a max age for the page -- again, "
"from the :setting:`CACHE_MIDDLEWARE_SECONDS` setting."
msgstr ""
"L'en-tête ``Cache-Control`` est défini à un âge maximal de la page, aussi "
"selon le réglage :setting:`CACHE_MIDDLEWARE_SECONDS`."

msgid "See :doc:`/topics/http/middleware` for more on middleware."
msgstr ""
"Voir :doc:`/topics/http/middleware` pour plus d'informations sur les "
"intergiciels."

msgid ""
"If a view sets its own cache expiry time (i.e. it has a ``max-age`` section "
"in its ``Cache-Control`` header) then the page will be cached until the "
"expiry time, rather than :setting:`CACHE_MIDDLEWARE_SECONDS`. Using the "
"decorators in ``django.views.decorators.cache`` you can easily set a view's "
"expiry time (using the :func:`~django.views.decorators.cache.cache_control` "
"decorator) or disable caching for a view (using the :func:`~django.views."
"decorators.cache.never_cache` decorator). See the `using other headers`__ "
"section for more on these decorators."
msgstr ""
"Si une vue définit son propre délai d'expiration de cache (par ex. avec une "
"section ``max-age`` dans son en-tête ``Cache-Control``), la page sera mise "
"en cache jusqu'à la fin de ce délai d'expiration, sans tenir compte du temps "
"défini dans :setting:`CACHE_MIDDLEWARE_SECONDS`. À l'aide des décorateurs de "
"``django.views.decorators.cache``, vous pouvez facilement définir le délai "
"d'expiration d'une vue (par le décorateur :func:`~django.views.decorators."
"cache.cache_control`) ou désactiver la mise en cache d'une vue (par le "
"décorateur :func:`~django.views.decorators.cache.never_cache`). Consultez la "
"section `utilisation d'autres en-têtes`__ pour en savoir plus sur ces "
"décorateurs."

msgid ""
"If :setting:`USE_I18N` is set to ``True`` then the generated cache key will "
"include the name of the active :term:`language<language code>` -- see also :"
"ref:`how-django-discovers-language-preference`). This allows you to easily "
"cache multilingual sites without having to create the cache key yourself."
msgstr ""
"Si :setting:`USE_I18N` est défini à ``True``, la clé de cache générée inclut "
"le nom de la :term:`langue<language code>` active, voir aussi :ref:`how-"
"django-discovers-language-preference`). Cela permet de facilement mettre en "
"cache des sites multilingues sans devoir créer soi-même les clés de cache."

msgid ""
"Cache keys also include the :ref:`current time zone <default-current-time-"
"zone>` when :setting:`USE_TZ` is set to ``True``."
msgstr ""
"Les clés de cache incluent également le :ref:`fuseau horaire actuel <default-"
"current-time-zone>` lorsque :setting:`USE_TZ` est défini à ``True``."

msgid "The per-view cache"
msgstr "Le cache par vue"

msgid ""
"A more granular way to use the caching framework is by caching the output of "
"individual views. ``django.views.decorators.cache`` defines a ``cache_page`` "
"decorator that will automatically cache the view's response for you::"
msgstr ""
"Une manière plus fine d'utiliser l'infrastructure de cache est de mettre en "
"cache le résultat de vues individuelles. ``django.views.decorators.cache`` "
"définit un décorateur ``cache_page`` qui se charge de mettre en cache la "
"réponse de la vue ::"

msgid ""
"``cache_page`` takes a single argument: the cache timeout, in seconds. In "
"the above example, the result of the ``my_view()`` view will be cached for "
"15 minutes. (Note that we've written it as ``60 * 15`` for the purpose of "
"readability. ``60 * 15`` will be evaluated to ``900`` -- that is, 15 minutes "
"multiplied by 60 seconds per minute.)"
msgstr ""
"``cache_page`` accepte un seul paramètre : le délai d'expiration du cache en "
"secondes. Dans l'exemple ci-dessus, le résultat de la vue ``my_view()`` "
"reste en cache pendant 15 minutes (remarquez que nous avons écrit ``60 * "
"15`` par souci de lisibilité, le résultat donne ``900``, c'est-à-dire 15 "
"minutes multipliées par 60 secondes)."

msgid ""
"The cache timeout set by ``cache_page`` takes precedence over the ``max-"
"age`` directive from the ``Cache-Control`` header."
msgstr ""
"L'expiration du cache définie par ``cache_page`` a la priorité sur la "
"directive ``max-age`` de l'en-tête ``Cache-Control``."

msgid ""
"The per-view cache, like the per-site cache, is keyed off of the URL. If "
"multiple URLs point at the same view, each URL will be cached separately. "
"Continuing the ``my_view`` example, if your URLconf looks like this::"
msgstr ""
"Le cache par vue, comme le cache par site, construit ses clés d'après les "
"URL. Si des URL différentes pointent vers la même vue, chaque URL aura son "
"propre cache. En reprenant l'exemple ``my_view``, si votre configuration "
"d'URL ressemble à ceci ::"

msgid ""
"then requests to ``/foo/1/`` and ``/foo/23/`` will be cached separately, as "
"you may expect. But once a particular URL (e.g., ``/foo/23/``) has been "
"requested, subsequent requests to that URL will use the cache."
msgstr ""
"alors les requêtes vers ``/foo/1/`` et ``/foo/23/`` seront mises en cache "
"séparément, comme prévu. Dès qu'une des URL a été accédée (par ex. ``/foo/23/"
"``), les requêtes suivantes à cette même URL utiliseront le cache."

msgid ""
"``cache_page`` can also take an optional keyword argument, ``cache``, which "
"directs the decorator to use a specific cache (from your :setting:`CACHES` "
"setting) when caching view results. By default, the ``default`` cache will "
"be used, but you can specify any cache you want::"
msgstr ""
"``cache_page`` accepte également un paramètre nommé facultatif, ``cache``, "
"qui indique au décorateur d'utiliser un cache spécifique (parmi ceux du "
"réglage :setting:`CACHES`) lors de la mise en cache des résultats de la vue. "
"Par défaut, c'est le cache ``default`` qui est utilisé, mais vous pouvez "
"indiquer le cache que vous souhaitez ::"

msgid ""
"You can also override the cache prefix on a per-view basis. ``cache_page`` "
"takes an optional keyword argument, ``key_prefix``, which works in the same "
"way as the :setting:`CACHE_MIDDLEWARE_KEY_PREFIX` setting for the "
"middleware.  It can be used like this::"
msgstr ""
"Il est aussi possible de surcharger le préfixe de cache par vue. "
"``cache_page`` accepte un paramètre nommé facultatif, ``key_prefix``, qui "
"joue le même rôle que le réglage :setting:`CACHE_MIDDLEWARE_KEY_PREFIX` pour "
"l'intergiciel. Il peut être utilisé comme suit ::"

msgid ""
"The ``key_prefix`` and ``cache`` arguments may be specified together. The "
"``key_prefix`` argument and the :setting:`KEY_PREFIX <CACHES-KEY_PREFIX>` "
"specified under :setting:`CACHES` will be concatenated."
msgstr ""
"Les paramètres ``key_prefix`` et ``cache`` peuvent être tous deux spécifiés. "
"Le paramètre ``key_prefix`` et la clé :setting:`KEY_PREFIX <CACHES-"
"KEY_PREFIX>` du réglage :setting:`CACHES` sont combinés."

msgid ""
"Additionally, ``cache_page`` automatically sets ``Cache-Control`` and "
"``Expires`` headers in the response which affect :ref:`downstream caches "
"<downstream-caches>`."
msgstr ""
"De plus, ``cache_page`` définit automatiquement les en-têtes de réponse "
"``Cache-Control`` et ``Expires`` qui affectent les :ref:`caches amonts "
"<downstream-caches>`."

msgid "Specifying per-view cache in the URLconf"
msgstr "Utilisation du cache par vue dans la configuration d'URL"

msgid ""
"The examples in the previous section have hard-coded the fact that the view "
"is cached, because ``cache_page`` alters the ``my_view`` function in place. "
"This approach couples your view to the cache system, which is not ideal for "
"several reasons. For instance, you might want to reuse the view functions on "
"another, cache-less site, or you might want to distribute the views to "
"people who might want to use them without being cached. The solution to "
"these problems is to specify the per-view cache in the URLconf rather than "
"next to the view functions themselves."
msgstr ""
"Les exemples de la section précédente ont figé dans le code le fait que la "
"vue est mise en cache, car ``cache_page`` modifie la fonction ``my_view`` "
"sur place. Cette approche lie la vue au système de cache, ce qui n'est pas "
"idéal pour plusieurs raisons. Par exemple, il est possible que les vues "
"puissent être réutilisées pour un autre site sans cache, ou peut-être qu'à "
"un moment donné les vues seront mises à disposition d'autres personnes qui "
"voudront les utiliser sans cache. La solution à ces problèmes est de définir "
"le cache par vue dans la configuration d'URL plutôt qu'autour des fonctions "
"de vue elles-mêmes."

msgid ""
"You can do so by wrapping the view function with ``cache_page`` when you "
"refer to it in the URLconf. Here's the old URLconf from earlier::"
msgstr ""
"Vous pouvez faire cela en enveloppant la fonction de vue dans ``cache_page`` "
"lorsque vous la mentionnez dans la configuration d'URL. Voici la "
"configuration que nous avons déjà vue précédemment ::"

msgid "Here's the same thing, with ``my_view`` wrapped in ``cache_page``::"
msgstr "Et la même chose, avec ``my_view`` entourée par ``cache_page``::"

msgid "Template fragment caching"
msgstr "Cache de gabarits partiels"

msgid ""
"If you're after even more control, you can also cache template fragments "
"using the ``cache`` template tag. To give your template access to this tag, "
"put ``{% load cache %}`` near the top of your template."
msgstr ""
"Si vous recherchez encore plus de contrôle, il est encore possible de mettre "
"en cache des bouts de gabarits avec la balise de gabarit ``cache``. Pour que "
"vos gabarits aient accès à cette balise, placez ``{% load cache %}`` au "
"début du gabarit."

msgid ""
"The ``{% cache %}`` template tag caches the contents of the block for a "
"given amount of time. It takes at least two arguments: the cache timeout, in "
"seconds, and the name to give the cache fragment. The fragment is cached "
"forever if timeout is ``None``. The name will be taken as is, do not use a "
"variable. For example:"
msgstr ""
"La balise de gabarit ``{% cache %}`` met en cache le contenu du bloc pour un "
"temps donné. Il accepte au moins deux paramètres : le délai d'expiration de "
"cache en secondes et le nom à donner au fragment de cache. Le fragment est "
"mis en cache indéfiniment si le délai d'expiration vaut ``None``. Le nom est "
"accepté tel quel, n'utilisez pas de variable. Par exemple :"

msgid ""
"Sometimes you might want to cache multiple copies of a fragment depending on "
"some dynamic data that appears inside the fragment. For example, you might "
"want a separate cached copy of the sidebar used in the previous example for "
"every user of your site. Do this by passing one or more additional "
"arguments, which may be variables with or without filters, to the ``{% cache "
"%}`` template tag to uniquely identify the cache fragment:"
msgstr ""
"Il peut arriver que vous souhaitiez mettre en cache plusieurs copies d'un "
"fragment en fonction de certaines données dynamiques apparaissant dans le "
"fragment. Par exemple, la barre latérale de l'exemple précédent pourrait "
"être mise en cache séparément pour chaque utilisateur du site. Cela se fait "
"en passant un ou plusieurs paramètres supplémentaires, qui peuvent être des "
"variables avec ou sans filtre, à la balise de gabarit ``{% cache %}`` afin "
"d'identifier le fragment de cache de manière unique :"

msgid ""
"If :setting:`USE_I18N` is set to ``True`` the per-site middleware cache "
"will :ref:`respect the active language<i18n-cache-key>`. For the ``cache`` "
"template tag you could use one of the :ref:`translation-specific "
"variables<template-translation-vars>` available in templates to achieve the "
"same result:"
msgstr ""
"Quand :setting:`USE_I18N` est défini à ``True``, le cache intergiciel par "
"site :ref:`respecte la langue active <i18n-cache-key>`. Pour la balise de "
"gabarit ``cache``, il est possible d'utiliser l'une des :ref:`variables "
"spécifiques aux traductions<template-translation-vars>` disponibles dans les "
"gabarits pour obtenir le même résultat :"

msgid ""
"The cache timeout can be a template variable, as long as the template "
"variable resolves to an integer value. For example, if the template variable "
"``my_timeout`` is set to the value ``600``, then the following two examples "
"are equivalent:"
msgstr ""
"Le délai d'expiration de cache peut être une variable de gabarit, pour "
"autant que la variable de gabarit corresponde à un nombre entier. Par "
"exemple, si la variable de gabarit ``my_timeout`` contient la valeur "
"``600``, les deux exemples suivants sont alors équivalents :"

msgid ""
"This feature is useful in avoiding repetition in templates. You can set the "
"timeout in a variable, in one place, and reuse that value."
msgstr ""
"Cette fonctionnalité est utile pour éviter les répétitions dans les "
"gabarits. Vous pouvez définir le délai d'expiration dans une variable à un "
"seul endroit, puis réutiliser cette valeur."

msgid ""
"By default, the cache tag will try to use the cache called "
"\"template_fragments\". If no such cache exists, it will fall back to using "
"the default cache. You may select an alternate cache backend to use with the "
"``using`` keyword argument, which must be the last argument to the tag."
msgstr ""
"Par défaut, la balise ``cache`` va essayer d'utiliser le cache appelé "
"« template_fragments ». Si aucun cache de ce type n'existe, il se replie sur "
"l'utilisation du cache par défaut. Vous pouvez définir un moteur de cache "
"alternatif à utiliser au moyen du paramètre nommé ``using``, qui doit être "
"le dernier paramètre de la balise."

msgid ""
"It is considered an error to specify a cache name that is not configured."
msgstr ""
"L'indication d'un nom de cache qui n'est pas configuré est considéré comme "
"une erreur."

msgid ""
"If you want to obtain the cache key used for a cached fragment, you can use "
"``make_template_fragment_key``. ``fragment_name`` is the same as second "
"argument to the ``cache`` template tag; ``vary_on`` is a list of all "
"additional arguments passed to the tag. This function can be useful for "
"invalidating or overwriting a cached item, for example:"
msgstr ""
"Si vous souhaitez obtenir la clé de cache utilisée pour un fragment en "
"cache, vous pouvez utiliser ``make_template_fragment_key``. "
"``fragment_name`` est comme le second paramètre de la balise de gabarit "
"``cache``. ``vary_on`` est une liste de tous les paramètres supplémentaires "
"transmis à la balise. Cette fonction peut être utile pour invalider ou "
"écraser un élément du cache, par exemple :"

msgid "The low-level cache API"
msgstr "L'API de cache de bas niveau"

msgid ""
"Sometimes, caching an entire rendered page doesn't gain you very much and "
"is, in fact, inconvenient overkill."
msgstr ""
"Dans certains cas, la mise en cache d'une page entière ne donne pas "
"d'avantage significatif et peut même se révéler totalement inutile."

msgid ""
"Perhaps, for instance, your site includes a view whose results depend on "
"several expensive queries, the results of which change at different "
"intervals. In this case, it would not be ideal to use the full-page caching "
"that the per-site or per-view cache strategies offer, because you wouldn't "
"want to cache the entire result (since some of the data changes often), but "
"you'd still want to cache the results that rarely change."
msgstr ""
"Imaginons par exemple que votre site contienne une vue dont les résultats "
"dépendent de plusieurs requêtes coûteuses dont les résultats changent à des "
"moments différents. Dans ce cas, il ne serait pas idéal d'utiliser la mise "
"en cache de pages entières telles que l'offrent les stratégies de cache par "
"site ou par vue, parce qu'il n'est pas souhaitable de mettre en cache la "
"totalité du résultat (étant donné que certaines données changent souvent), "
"mais il reste intéressant de mettre en cache les résultats qui changent "
"rarement."

msgid ""
"For cases like this, Django exposes a low-level cache API. You can use this "
"API to store objects in the cache with any level of granularity you like.  "
"You can cache any Python object that can be pickled safely: strings, "
"dictionaries, lists of model objects, and so forth. (Most common Python "
"objects can be pickled; refer to the Python documentation for more "
"information about pickling.)"
msgstr ""
"Dans de telles situations, Django expose une API de cache de bas niveau. "
"Vous pouvez utiliser cette API pour stocker des objets dans le cache avec la "
"granularité de votre choix. Vous pouvez placer dans ce cache tout objet "
"Python pouvant être sérialisée par ``pickle``: chaînes, dictionnaires, "
"listes d'objets de modèle, etc. (la plupart des objets Python courants "
"peuvent être ainsi sérialisés, référez-vous à la documentation de Python "
"pour plus d'informations sur la sérialisation ``pickle``)."

msgid "Accessing the cache"
msgstr "Accès au cache"

msgid ""
"You can access the caches configured in the :setting:`CACHES` setting "
"through a dict-like object: ``django.core.cache.caches``. Repeated requests "
"for the same alias in the same thread will return the same object."
msgstr ""
"Vous pouvez accéder aux caches configurés dans le réglage :setting:`CACHES` "
"par un objet de type dictionnaire : ``django.core.cache.caches``. Les "
"requêtes successives du même alias dans le même fil d'exécution renvoient le "
"même objet."

msgid ""
"If the named key does not exist, ``InvalidCacheBackendError`` will be raised."
msgstr ""
"Si l'alias indiqué n'existe pas, une exception ``InvalidCacheBackendError`` "
"est générée."

msgid ""
"To provide thread-safety, a different instance of the cache backend will be "
"returned for each thread."
msgstr ""
"Pour respecter la concurrence des fils d'exécution, une instance différente "
"du moteur de cache est renvoyée pour chaque fil d'exécution."

msgid ""
"As a shortcut, the default cache is available as ``django.core.cache.cache``:"
msgstr ""
"En raccourci, le cache par défaut est disponible dans ``django.core.cache."
"cache``:"

msgid "This object is equivalent to ``caches['default']``."
msgstr "Cet objet est équivalent à ``caches['default']``."

msgid "Basic usage"
msgstr "Utilisation de base"

msgid "The basic interface is:"
msgstr "L'interface de base est :"

msgid ""
"``key`` should be a ``str``, and ``value`` can be any picklable Python "
"object."
msgstr ""
"``key`` doit être de type ``str`` et ``value`` peut être n'importe quel "
"objet Python sérialisé par « pickle »."

msgid ""
"The ``timeout`` argument is optional and defaults to the ``timeout`` "
"argument of the appropriate backend in the :setting:`CACHES` setting "
"(explained above). It's the number of seconds the value should be stored in "
"the cache. Passing in ``None`` for ``timeout`` will cache the value forever. "
"A ``timeout`` of ``0`` won't cache the value."
msgstr ""
"Le paramètre ``timeout`` est optionnel et est par défaut à la même valeur "
"que le paramètre ``timeout`` du backend approprié défini dans le réglage de :"
"setting:`CACHES` (expliqué ci-dessus). Il correspond au nombre de secondes "
"pendant lesquelles la valeur doit être stockée dans le cache. Si ``timeout`` "
"a la valeur ``None`` la valeur reste en cache pour toujours. Un ``timeout`` "
"de ``0`` ne met pas en cache la valeur."

msgid ""
"If the object doesn't exist in the cache, ``cache.get()`` returns ``None``:"
msgstr ""
"Si l'objet n'existe pas dans le cache, ``cache.get()`` renvoie ``None``:"

msgid ""
"If you need to determine whether the object exists in the cache and you have "
"stored a literal value ``None``, use a sentinel object as the default:"
msgstr ""
"Si vous avez besoin de savoir si l'objet existe dans le cache avec une "
"valeur littérale ``None`` stockée, utilisez un objet sentinelle comme valeur "
"par défaut :"

msgid ""
"``cache.get()`` can take a ``default`` argument. This specifies which value "
"to return if the object doesn't exist in the cache:"
msgstr ""
"``cache.get()`` accepte un paramètre ``default``. Ceci permet d'indiquer la "
"valeur à renvoyer si l'objet n'existe pas dans le cache :"

msgid ""
"To add a key only if it doesn't already exist, use the ``add()`` method. It "
"takes the same parameters as ``set()``, but it will not attempt to update "
"the cache if the key specified is already present:"
msgstr ""
"Pour ajouter une clé dans le seul cas où elle n'existe pas encore, utilisez "
"la méthode ``add()``. Elle accepte les mêmes paramètres que ``set()``, mais "
"elle n'essaie pas de mettre à jour le cache si la clé indiquée est déjà "
"présente :"

msgid ""
"If you need to know whether ``add()`` stored a value in the cache, you can "
"check the return value. It will return ``True`` if the value was stored, "
"``False`` otherwise."
msgstr ""
"Si vous avez besoin de savoir si ``add()`` a bien stocké une valeur dans le "
"cache, vous pouvez consulter la valeur renvoyée : ``True`` si la valeur a "
"été stockée et ``False`` dans le cas contraire."

msgid ""
"If you want to get a key's value or set a value if the key isn't in the "
"cache, there is the ``get_or_set()`` method. It takes the same parameters as "
"``get()`` but the default is set as the new cache value for that key, rather "
"than returned:"
msgstr ""
"Si vous souhaitez obtenir la valeur d'une clé ou définir cette valeur si la "
"clé ne se trouve pas dans le cache, il existe une méthode ``get_or_set()``. "
"Elle accepte les mêmes paramètres que ``get()`` mais la valeur par défaut "
"est définie comme nouvelle valeur de cette clé dans le cache, plutôt que "
"d'être renvoyée :"

msgid "You can also pass any callable as a *default* value:"
msgstr ""
"Vous pouvez également passer n'importe quel objet exécutable comme valeur "
"*par défaut* :"

msgid ""
"There's also a ``get_many()`` interface that only hits the cache once. "
"``get_many()`` returns a dictionary with all the keys you asked for that "
"actually exist in the cache (and haven't expired):"
msgstr ""
"Il existe aussi une interface ``get_many()`` qui n'interroge le cache qu'une "
"seule fois. ``get_many()`` renvoie un dictionnaire contenant toutes les clés "
"demandées qui existent réellement dans le cache (et qui n'ont pas expiré) :"

msgid ""
"To set multiple values more efficiently, use ``set_many()`` to pass a "
"dictionary of key-value pairs:"
msgstr ""
"Pour définir plusieurs valeurs de manière plus efficace, utilisez "
"``set_many()`` pour transmettre un dictionnaire de paires clé-valeur :"

msgid ""
"Like ``cache.set()``, ``set_many()`` takes an optional ``timeout`` parameter."
msgstr ""
"Tout comme ``cache.set()``, ``set_many()`` accepte un paramètre facultatif "
"``timeout`` (délai d'expiration)."

msgid ""
"On supported backends (memcached), ``set_many()`` returns a list of keys "
"that failed to be inserted."
msgstr ""
"Pour les moteurs le prenant en charge (memcached), ``set_many()`` renvoie "
"une liste de clés dont l'insertion a échoué."

msgid ""
"You can delete keys explicitly with ``delete()`` to clear the cache for a "
"particular object:"
msgstr ""
"Vous pouvez supprimer explicitement des clés avec ``delete()`` pour enlever "
"du cache un objet particulier :"

msgid ""
"``delete()`` returns ``True`` if the key was successfully deleted, ``False`` "
"otherwise."
msgstr ""
"``delete()`` renvoie ``True`` si la clé à été supprimée avec succès, sinon "
"``False``."

msgid ""
"If you want to clear a bunch of keys at once, ``delete_many()`` can take a "
"list of keys to be cleared:"
msgstr ""
"Si vous voulez effacer plusieurs clés en une seule opération, "
"``delete_many()`` accepte une liste de clés à effacer :"

msgid ""
"Finally, if you want to delete all the keys in the cache, use ``cache."
"clear()``.  Be careful with this; ``clear()`` will remove *everything* from "
"the cache, not just the keys set by your application:"
msgstr ""
"Pour finir, si vous voulez effacer toutes les clés du cache, utilisez "
"``cache.clear()``. Mais soyez prudent ; ``clear()`` efface *tout* ce qui se "
"trouve dans le cache, et pas seulement les clés définies par votre "
"application :"

msgid ""
"``cache.touch()`` sets a new expiration for a key. For example, to update a "
"key to expire 10 seconds from now:"
msgstr ""
"``cache.touch()`` définit une nouvelle date d'expiration d'une clé. Par "
"exemple, pour mettre à jour une clé pour qu'elle expire dans 10 secondes :"

msgid ""
"Like other methods, the ``timeout`` argument is optional and defaults to the "
"``TIMEOUT`` option of the appropriate backend in the :setting:`CACHES` "
"setting."
msgstr ""
"Comme pour les autres méthodes, le paramètre ``timeout`` est facultatif et "
"contient par défaut l'option ``TIMEOUT`` du moteur approprié dans le "
"réglage :setting:`CACHES`."

msgid ""
"``touch()`` returns ``True`` if the key was successfully touched, ``False`` "
"otherwise."
msgstr ""
"``touch()`` renvoie ``True`` si la clé à été touchée avec succès, sinon "
"``False``."

msgid ""
"You can also increment or decrement a key that already exists using the "
"``incr()`` or ``decr()`` methods, respectively. By default, the existing "
"cache value will be incremented or decremented by 1. Other increment/"
"decrement values can be specified by providing an argument to the increment/"
"decrement call. A ValueError will be raised if you attempt to increment or "
"decrement a nonexistent cache key:"
msgstr ""
"Vous pouvez aussi incrémenter ou décrémenter une clé existante au moyen des "
"méthodes ``incr()`` et ``decr()``, respectivement. Par défaut, l'incrément "
"des valeurs de cache existantes est de 1. D'autre valeurs d'incrément "
"peuvent être fournies en indiquant un paramètre lors de l'appel aux méthodes "
"correspondantes. Une exception ``ValueError`` est générée si vous essayez "
"d'incrémenter ou de décrémenter une clé de cache non existante :"

msgid ""
"``incr()``/``decr()`` methods are not guaranteed to be atomic. On those "
"backends that support atomic increment/decrement (most notably, the "
"memcached backend), increment and decrement operations will be atomic. "
"However, if the backend doesn't natively provide an increment/decrement "
"operation, it will be implemented using a two-step retrieve/update."
msgstr ""
"L'atomicité des méthodes ``incr()``/``decr()`` n'est pas garantie. Pour les "
"moteurs qui peuvent garantir l'atomicité de l'incrémentation ou de la "
"décrémentation (en particulier le moteur ``memcached``), les opérations "
"seront effectivement atomiques. Cependant, si le moteur ne contient pas "
"d'opération d'incrémentation ou de décrémentation native, la fonctionnalité "
"sera implémentée en deux temps par une opération de lecture suivie d'une "
"opération de mise à jour."

msgid ""
"You can close the connection to your cache with ``close()`` if implemented "
"by the cache backend."
msgstr ""
"Vous pouvez fermer la connexion au cache avec ``close()`` si le moteur de "
"cache prend en charge cette opération."

msgid "For caches that don't implement ``close`` methods it is a no-op."
msgstr ""
"Pour les caches qui n'implémentent pas la méthode ``close``, il s'agit d'une "
"opération blanche."

msgid ""
"The async variants of base methods are prefixed with ``a``, e.g. ``cache."
"aadd()`` or ``cache.adelete_many()``. See `Asynchronous support`_ for more "
"details."
msgstr ""
"Les variantes asynchrones des méthodes de base sont préfixées par ``a``, par "
"ex. ``cache.aadd()`` ou ``cache.adelete_many()``. Lisez `Prise en charge "
"asynchrone`_ pour plus de détails."

msgid "Cache key prefixing"
msgstr "Préfixe de clés de cache"

msgid ""
"If you are sharing a cache instance between servers, or between your "
"production and development environments, it's possible for data cached by "
"one server to be used by another server. If the format of cached data is "
"different between servers, this can lead to some very hard to diagnose "
"problems."
msgstr ""
"Si une instance de cache est partagée entre plusieurs serveurs ou entre "
"l'environnement de production et de développement, il est possible que des "
"données mises en cache par un serveur soient lues par un autre serveur. Si "
"le format des données mises en cache est différent d'un serveur à l'autre, "
"cela peut conduire à des problèmes très difficiles à diagnostiquer."

msgid ""
"To prevent this, Django provides the ability to prefix all cache keys used "
"by a server. When a particular cache key is saved or retrieved, Django will "
"automatically prefix the cache key with the value of the :setting:"
"`KEY_PREFIX <CACHES-KEY_PREFIX>` cache setting."
msgstr ""
"Pour éviter cela, Django offre la possibilité de préfixer toutes les clés de "
"cache utilisées par un serveur. Pour chaque clé de cache enregistrée ou lue, "
"Django préfixe automatiquement la clé de cache par la valeur du réglage de "
"cache :setting:`KEY_PREFIX <CACHES-KEY_PREFIX>`."

msgid ""
"By ensuring each Django instance has a different :setting:`KEY_PREFIX "
"<CACHES-KEY_PREFIX>`, you can ensure that there will be no collisions in "
"cache values."
msgstr ""
"En prenant soin de définir des valeurs :setting:`KEY_PREFIX <CACHES-"
"KEY_PREFIX>` différentes pour chaque instance de Django, vous pouvez vous "
"assurer qu'il n'y aura pas de collisions de valeurs de cache."

msgid "Cache versioning"
msgstr "Versions dans le cache"

msgid ""
"When you change running code that uses cached values, you may need to purge "
"any existing cached values. The easiest way to do this is to flush the "
"entire cache, but this can lead to the loss of cache values that are still "
"valid and useful."
msgstr ""
"Lorsque vous modifiez du code utilisant des valeurs en cache, il peut être "
"nécessaire de purger toutes les valeurs en cache. La manière la plus simple "
"de le faire est d'effacer tout le cache, mais cela peut aussi effacer des "
"valeurs en cache qui resteraient valides et utiles."

msgid ""
"Django provides a better way to target individual cache values. Django's "
"cache framework has a system-wide version identifier, specified using the :"
"setting:`VERSION <CACHES-VERSION>` cache setting. The value of this setting "
"is automatically combined with the cache prefix and the user-provided cache "
"key to obtain the final cache key."
msgstr ""
"Django met à disposition une façon plus subtile de cibler certaines valeurs "
"de cache. Le système de cache de Django dispose d'un identifiant de version "
"global défini dans le réglage de cache :setting:`VERSION <CACHES-VERSION>`. "
"La valeur de ce réglage est automatiquement combinée au préfixe de cache et "
"à la clé de cache fournie par l'utilisateur pour obtenir la clé de cache "
"finale."

msgid ""
"By default, any key request will automatically include the site default "
"cache key version. However, the primitive cache functions all include a "
"``version`` argument, so you can specify a particular cache key version to "
"set or get. For example:"
msgstr ""
"Par défaut, toute lecture de clé inclut automatiquement la version de clé de "
"cache par défaut du site. Cependant, les fonctions de cache primitives "
"proposent toutes un paramètre ``version``, afin de pouvoir indiquer une "
"version de clé de cache particulière, que ce soit en lecture ou en écriture. "
"Par exemple :"

msgid ""
"The version of a specific key can be incremented and decremented using the "
"``incr_version()`` and ``decr_version()`` methods. This enables specific "
"keys to be bumped to a new version, leaving other keys unaffected. "
"Continuing our previous example:"
msgstr ""
"La version d'une clé particulière peut être incrémentée ou décrémentée par "
"les méthodes ``incr_version()`` et ``decr_version()``. Cela permet de mettre "
"à jour des clés spécifiques à une nouvelle version sans toucher aux autres "
"clés. En poursuivant l'exemple précédent :"

msgid "Cache key transformation"
msgstr "Transformation de clé de cache"

msgid ""
"As described in the previous two sections, the cache key provided by a user "
"is not used verbatim -- it is combined with the cache prefix and key version "
"to provide a final cache key. By default, the three parts are joined using "
"colons to produce a final string::"
msgstr ""
"Comme expliqué dans les deux précédentes sections, la clé de cache indiquée "
"par un utilisateur n'est pas employée telle quelle -- elle est combinée au "
"préfixe de cache et à la version de clé pour composer une clé de cache "
"finale. Par défaut, les trois parties sont combinées par des deux-points "
"pour produire la clé finale ::"

msgid ""
"If you want to combine the parts in different ways, or apply other "
"processing to the final key (e.g., taking a hash digest of the key parts), "
"you can provide a custom key function."
msgstr ""
"Si vous souhaitez combiner les parties d'une autre manière ou appliquer un "
"autre traitement à la clé finale (par ex. en produisant une empreinte "
"numérique des parties de la clé), vous pouvez définir une fonction de clé "
"personnalisée."

msgid ""
"The :setting:`KEY_FUNCTION <CACHES-KEY_FUNCTION>` cache setting specifies a "
"dotted-path to a function matching the prototype of ``make_key()`` above. If "
"provided, this custom key function will be used instead of the default key "
"combining function."
msgstr ""
"Le réglage de cache :setting:`KEY_FUNCTION <CACHES-KEY_FUNCTION>` indique un "
"chemin en syntaxe pointée vers une fonction correspondant au prototype de "
"``make_key()`` (voir ci-dessus). Lorsqu'elle est définie, cette fonction de "
"clé personnalisée sera utilisée en lieu et place de la fonction par défaut "
"de combinaison de clé."

msgid "Cache key warnings"
msgstr "Avertissements de clé de cache"

msgid ""
"Memcached, the most commonly-used production cache backend, does not allow "
"cache keys longer than 250 characters or containing whitespace or control "
"characters, and using such keys will cause an exception. To encourage cache-"
"portable code and minimize unpleasant surprises, the other built-in cache "
"backends issue a warning (``django.core.cache.backends.base."
"CacheKeyWarning``) if a key is used that would cause an error on memcached."
msgstr ""
"Memcached, le moteur de cache le plus souvent utilisé en production, "
"n'autorise pas de clés de cache plus longues que 250 caractères ou qui "
"contient des espaces ou des caractères de contrôle. De telles clés génèrent "
"des exceptions. Pour promouvoir du code compatible entre caches et minimiser "
"les mauvaises surprises, les autres moteurs de cache intégrés génèrent un "
"avertissement (``django.core.cache.backends.base.CacheKeyWarning``) si un "
"nom de clé produirait une erreur avec ``memcached``."

msgid ""
"If you are using a production backend that can accept a wider range of keys "
"(a custom backend, or one of the non-memcached built-in backends), and want "
"to use this wider range without warnings, you can silence "
"``CacheKeyWarning`` with this code in the ``management`` module of one of "
"your :setting:`INSTALLED_APPS`::"
msgstr ""
"Si vous utilisez un moteur de cache en production qui accepte un plus large "
"éventail de clés (moteur personnalisé ou l'un des moteurs intégrés autres "
"que memcached) et que vous ne voulez par être dérangé par les avertissements "
"``CacheKeyWarning``, vous pouvez les masquer par ce code placé dans le "
"module ``management`` de l'une des applications dans :setting:"
"`INSTALLED_APPS`::"

msgid ""
"If you want to instead provide custom key validation logic for one of the "
"built-in backends, you can subclass it, override just the ``validate_key`` "
"method, and follow the instructions for `using a custom cache backend`_. For "
"instance, to do this for the ``locmem`` backend, put this code in a module::"
msgstr ""
"Si vous préférez plutôt définir une logique de validation de clé "
"personnalisée pour l'un des moteurs intégrés, vous pouvez créer une sous-"
"classe qui ne surcharge que la méthode ``validate_key`` et suivre les "
"instructions données dans `utilisation d'un moteur de cache personnalisé`_. "
"Par exemple, pour faire cela avec le moteur ``locmem``, placez ce code dans "
"un module ::"

msgid ""
"...and use the dotted Python path to this class in the :setting:`BACKEND "
"<CACHES-BACKEND>` portion of your :setting:`CACHES` setting."
msgstr ""
"…et utilisez le chemin Python pointé vers cette classe dans la partie :"
"setting:`BACKEND <CACHES-BACKEND>` de votre réglage :setting:`CACHES`."

msgid ""
"Django has developing support for asynchronous cache backends, but does not "
"yet support asynchronous caching. It will be coming in a future release."
msgstr ""
"Django a développé une prise en charge des moteurs de cache asynchrones, "
"mais ne propose pas encore de cache asynchrone. Cela devrait arriver dans "
"les prochaines versions."

msgid ""
"``django.core.cache.backends.base.BaseCache`` has async variants of :ref:"
"`all base methods <cache-basic-interface>`. By convention, the asynchronous "
"versions of all methods are prefixed with ``a``. By default, the arguments "
"for both variants are the same:"
msgstr ""
"``django.core.cache.backends.base.BaseCache`` possède des variantes "
"asynchrones de :ref:`toutes les méthodes de base <cache-basic-interface>`. "
"Par convention, les versions asynchrones de toutes les méthodes sont "
"préfixées par ``a``. Par défaut, les arguments des deux variantes sont "
"identiques :"

msgid "Downstream caches"
msgstr "Caches amonts"

msgid ""
"So far, this document has focused on caching your *own* data. But another "
"type of caching is relevant to web development, too: caching performed by "
"\"downstream\" caches. These are systems that cache pages for users even "
"before the request reaches your website."
msgstr ""
"Jusqu'ici, ce document s'est concentré sur le cache de vos *propres* "
"données. Mais dans le cadre du développement Web, un autre type de cache "
"doit être considéré : le cache effectué par des caches « amonts ». Ce sont "
"des systèmes qui mettent des pages en cache pour les utilisateurs avant même "
"que les requêtes n'atteignent votre serveur Web."

msgid "Here are a few examples of downstream caches:"
msgstr "Voici quelques exemples de caches amonts :"

msgid ""
"When using HTTP, your :abbr:`ISP (Internet Service Provider)` may cache "
"certain pages, so if you requested a page from ``http://example.com/``, your "
"ISP would send you the page without having to access example.com directly. "
"The maintainers of example.com have no knowledge of this caching; the ISP "
"sits between example.com and your web browser, handling all of the caching "
"transparently. Such caching is not possible under HTTPS as it would "
"constitute a man-in-the-middle attack."
msgstr ""
"En utilisant HTTP, votre fournisseur de services Internet (:abbr:`ISP`) peut "
"mettre certaines pages en cache, donc en demandant une page à l'adresse "
"``http://example.com/``, vous recevez la page de la part de votre "
"fournisseur sans que la requête n'ait atteint directement example.com. Les "
"mainteneurs de example.com n'ont pas conscience de ce processus de cache. Le "
"fournisseur se place entre votre navigateur Web et le serveur example.com et "
"se charge du cache de manière transparente. Un tel cache n'est pas possible "
"avec HTTPS car cela constituerait une attaque « de l'homme du milieu "
"» (MITM)."

msgid ""
"Your Django website may sit behind a *proxy cache*, such as Squid Web Proxy "
"Cache (http://www.squid-cache.org/), that caches pages for performance. In "
"this case, each request first would be handled by the proxy, and it would be "
"passed to your application only if needed."
msgstr ""
"Votre site Web Django peut se trouver derrière un *cache mandataire* tel que "
"Squid (http://www.squid-cache.org/), qui met des pages en cache pour "
"améliorer les performances du réseau. Dans ce cas, chaque requête est "
"d'abord traitée par le serveur mandataire et n'est transmise à votre "
"application que s'il le juge nécessaire."

msgid ""
"Your web browser caches pages, too. If a web page sends out the appropriate "
"headers, your browser will use the local cached copy for subsequent requests "
"to that page, without even contacting the web page again to see whether it "
"has changed."
msgstr ""
"Votre navigateur Web met aussi des pages en cache. Si une page Web envoie "
"des en-têtes appropriés, le navigateur utilise la copie d'une page dans le "
"cache local pour toute nouvelle requête vers cette même page, sans même "
"redemander la page Web au serveur pour savoir si elle a changé."

msgid ""
"Downstream caching is a nice efficiency boost, but there's a danger to it: "
"Many web pages' contents differ based on authentication and a host of other "
"variables, and cache systems that blindly save pages based purely on URLs "
"could expose incorrect or sensitive data to subsequent visitors to those "
"pages."
msgstr ""
"Les caches amonts améliorent bien les performances, mais il y a un risque : "
"de nombreuses pages Web produisent du contenu différent selon la personne "
"authentifiée ou selon d'autres paramètres, et donc des systèmes qui mettent "
"aveuglément des pages en cache en ne se basant que sur l'URL pourraient "
"exposer des données incorrectes ou sensibles à tout visiteur consultant ces "
"pages."

msgid ""
"For example, if you operate a web email system, then the contents of the "
"\"inbox\" page depend on which user is logged in. If an ISP blindly cached "
"your site, then the first user who logged in through that ISP would have "
"their user-specific inbox page cached for subsequent visitors to the site.  "
"That's not cool."
msgstr ""
"Par exemple, si vous gérez un système de messagerie Web, le contenu de la "
"page « boîte de réception » dépend de l'utilisateur connecté. Si un "
"fournisseur d'accès se met à mettre en cache votre site sans précaution, le "
"premier utilisateur se connectant par l'intermédiaire de ce fournisseur "
"verrait sa propre page de la boîte de réception placée dans le cache et à "
"disposition des visiteurs suivants du site. Ce n'est pas sympa du tout."

msgid ""
"Fortunately, HTTP provides a solution to this problem. A number of HTTP "
"headers exist to instruct downstream caches to differ their cache contents "
"depending on designated variables, and to tell caching mechanisms not to "
"cache particular pages. We'll look at some of these headers in the sections "
"that follow."
msgstr ""
"Heureusement, HTTP fournit une solution à ce problème. Il existe un certain "
"nombre d'en-têtes HTTP indiquant aux caches amonts de différencier les "
"contenus en cache selon certaines variables précises et d'indiquer aux "
"mécanismes de cache de ne pas mettre en cache certaines pages. Nous allons "
"examiner certains de ces en-têtes dans les sections qui suivent."

msgid "Using ``Vary`` headers"
msgstr "Utilisation des en-têtes ``Vary``"

msgid ""
"The ``Vary`` header defines which request headers a cache mechanism should "
"take into account when building its cache key. For example, if the contents "
"of a web page depend on a user's language preference, the page is said to "
"\"vary on language.\""
msgstr ""
"L'en-tête ``Vary`` définit quels en-têtes de requête un cache doit prendre "
"en considération pour générer sa clé de cache. Par exemple, si le contenu "
"d'une page Web dépend de la préférence de langue d'un utilisateur, on dit "
"que la page « varie en fonction de la langue » (vary on language)."

msgid ""
"By default, Django's cache system creates its cache keys using the requested "
"fully-qualified URL -- e.g., ``\"https://www.example.com/stories/2005/?"
"order_by=author\"``. This means every request to that URL will use the same "
"cached version, regardless of user-agent differences such as cookies or "
"language preferences. However, if this page produces different content based "
"on some difference in request headers -- such as a cookie, or a language, or "
"a user-agent -- you'll need to use the ``Vary`` header to tell caching "
"mechanisms that the page output depends on those things."
msgstr ""
"Par défaut, le système de cache de Django crée ses clés de cache en "
"utilisant l'URL complète de la requête, par exemple ``\"https://www.example."
"com/stories/2005/?order_by=author\"``. Cela signifie que chaque requête vers "
"cette URL utilisera la même version en cache, quels que soient les "
"différences du client (« user-agent ») tels que ses cookies ou préférences "
"de langue. Cependant, si cette page produit du contenu différent en fonction "
"de certaines différences dans les en-têtes de la requête, tels qu'un cookie, "
"une langue, une signature de client, etc. il est alors nécessaire d'utiliser "
"l'en-tête ``Vary`` pour signifier aux mécanismes de cache que le contenu de "
"la page dépend de ces éléments."

msgid ""
"To do this in Django, use the convenient :func:`django.views.decorators.vary."
"vary_on_headers` view decorator, like so::"
msgstr ""
"Pour faire cela avec Django, utilisez le décorateur de vue bien pratique :"
"func:`django.views.decorators.vary.vary_on_headers`, comme ceci ::"

msgid ""
"In this case, a caching mechanism (such as Django's own cache middleware) "
"will cache a separate version of the page for each unique user-agent."
msgstr ""
"Dans ce cas, un mécanisme de cache (tel que le propre intergiciel de cache "
"de Django) mettra en cache des versions séparées de la page pour chaque type "
"de client (« user-agent ») différent."

msgid ""
"The advantage to using the ``vary_on_headers`` decorator rather than "
"manually setting the ``Vary`` header (using something like ``response."
"headers['Vary'] = 'user-agent'``) is that the decorator *adds* to the "
"``Vary`` header (which may already exist), rather than setting it from "
"scratch and potentially overriding anything that was already in there."
msgstr ""
"L'avantage d'utiliser le décorateur ``vary_on_headers`` plutôt que de "
"définir manuellement l'en-tête ``Vary`` (en écrivant quelque chose comme "
"``response.headers['Vary'] = 'user-agent'``) est que le décorateur "
"*complète* l'en-tête ``Vary`` (qui peut déjà exister) au lieu de le "
"redéfinir complètement ce qui pourrait écraser un éventuel contenu d'en-tête "
"existant."

msgid "You can pass multiple headers to ``vary_on_headers()``::"
msgstr ""
"Il est possible de transmettre plusieurs en-têtes à ``vary_on_headers()``::"

msgid ""
"This tells downstream caches to vary on *both*, which means each combination "
"of user-agent and cookie will get its own cache value. For example, a "
"request with the user-agent ``Mozilla`` and the cookie value ``foo=bar`` "
"will be considered different from a request with the user-agent ``Mozilla`` "
"and the cookie value ``foo=ham``."
msgstr ""
"Cela indique aux caches amonts de différencier *les deux*, ce qui signifie "
"qu'à chaque combinaison de type de client et de cookie correspondra une "
"valeur de cache propre. Par exemple, une requête avec le type de client "
"``Mozilla`` et la valeur de cookie ``foo=bar`` sera considérée différente "
"d'une requête avec le type de client ``Mozilla`` et la valeur de cookie "
"``foo=ham``."

msgid ""
"Because varying on cookie is so common, there's a :func:`django.views."
"decorators.vary.vary_on_cookie` decorator. These two views are equivalent::"
msgstr ""
"Comme la variation selon les cookies est très courante, il existe un "
"décorateur :func:`django.views.decorators.vary.vary_on_cookie`. Ces deux "
"vues sont équivalentes ::"

msgid ""
"The headers you pass to ``vary_on_headers`` are not case sensitive; ``\"User-"
"Agent\"`` is the same thing as ``\"user-agent\"``."
msgstr ""
"Les en-têtes transmis à ``vary_on_headers`` ne sont pas sensibles à la "
"casse ; ``\"User-Agent\"`` est équivalent à ``\"user-agent\"``."

msgid ""
"You can also use a helper function, :func:`django.utils.cache."
"patch_vary_headers`, directly. This function sets, or adds to, the ``Vary "
"header``. For example::"
msgstr ""
"Vous pouvez aussi utiliser directement une fonction utilitaire :func:`django."
"utils.cache.patch_vary_headers`. Celle-ci définit ou complète l'en-tête "
"``Vary``. Par exemple ::"

msgid ""
"``patch_vary_headers`` takes an :class:`~django.http.HttpResponse` instance "
"as its first argument and a list/tuple of case-insensitive header names as "
"its second argument."
msgstr ""
"``patch_vary_headers`` accepte une instance :class:`~django.http."
"HttpResponse` comme premier paramètre et une liste de noms d'en-têtes "
"insensibles à la casse comme second paramètre."

msgid ""
"For more on Vary headers, see the :rfc:`official Vary spec "
"<9110#section-12.5.5>`."
msgstr ""
"Pour plus de détails sur les en-têtes ``Vary``, consultez la :rfc:"
"`spécification officielle de Vary <9110#section-12.5.5>`."

msgid "Controlling cache: Using other headers"
msgstr "Contrôle du cache : utilisation d'autres en-têtes"

msgid ""
"Other problems with caching are the privacy of data and the question of "
"where data should be stored in a cascade of caches."
msgstr ""
"D'autres problèmes de cache incluent la confidentialité des données et la "
"problématique de l'emplacement de stockage des données en cas de caches en "
"cascade."

msgid ""
"A user usually faces two kinds of caches: their own browser cache (a private "
"cache) and their provider's cache (a public cache). A public cache is used "
"by multiple users and controlled by someone else. This poses problems with "
"sensitive data--you don't want, say, your bank account number stored in a "
"public cache. So web applications need a way to tell caches which data is "
"private and which is public."
msgstr ""
"Un utilisateur est généralement confronté à deux sortes de caches : son "
"propre cache de navigateur (cache privé) et le cache de son fournisseur "
"d'accès (cache public). Un cache public est partagé par de nombreux "
"utilisateurs et contrôlé de manière externe. Cela pose des problèmes avec "
"les données sensibles ; vous ne souhaitez probablement pas que votre numéro "
"de compte bancaire soit stocké dans un cache public. Les applications Web "
"doivent donc pouvoir indiquer aux caches quelles sont les données privées et "
"celles qui sont publiques."

msgid ""
"The solution is to indicate a page's cache should be \"private.\" To do this "
"in Django, use the :func:`~django.views.decorators.cache.cache_control` view "
"decorator. Example::"
msgstr ""
"La solution est d'indiquer que le contenu d'une page en cache devrait être "
"« privé ». Pour faire cela avec Django, utilisez le décorateur de vue :func:"
"`~django.views.decorators.cache.cache_control`. Exemple ::"

msgid ""
"This decorator takes care of sending out the appropriate HTTP header behind "
"the scenes."
msgstr ""
"Ce décorateur se charge d'envoyer les en-têtes HTTP appropriés en arrière-"
"plan."

msgid ""
"Note that the cache control settings \"private\" and \"public\" are mutually "
"exclusive. The decorator ensures that the \"public\" directive is removed if "
"\"private\" should be set (and vice versa). An example use of the two "
"directives would be a blog site that offers both private and public entries. "
"Public entries may be cached on any shared cache. The following code uses :"
"func:`~django.utils.cache.patch_cache_control`, the manual way to modify the "
"cache control header (it is internally called by the :func:`~django.views."
"decorators.cache.cache_control` decorator)::"
msgstr ""
"Signalons que les réglages de contrôle de cache « private » et « public » "
"sont mutuellement exclusifs. Le décorateur s'assure que la directive "
"« public » est enlevée si « private » doit être défini (et vice versa). Un "
"exemple d'utilisation de ces deux directives pourrait être un site de blog "
"qui propose à la fois des articles privés et publics. Les articles publics "
"peuvent être mis en cache dans n'importe quel cache partagé. Le code suivant "
"utilise :func:`django.utils.cache.patch_cache_control`, la façon manuelle de "
"modifier l'en-tête de contrôle de cache (elle est appelée en interne par le "
"décorateur :func:`~django.views.decorators.cache.cache_control`) ::"

msgid ""
"You can control downstream caches in other ways as well (see :rfc:`9111` for "
"details on HTTP caching). For example, even if you don't use Django's server-"
"side cache framework, you can still tell clients to cache a view for a "
"certain amount of time with the :rfc:`max-age <9111#section-5.2.2.1>` "
"directive::"
msgstr ""
"Il est aussi possible de contrôler les caches amonts par d'autres moyens "
"(voir :rfc:`9111` pour des détails sur le cache HTTP). Par exemple, même si "
"vous n'exploitez pas l'infrastructure de cache du côté serveur Django, il "
"est tout de même possible de demander aux clients de mettre en cache une vue "
"pour un certain temps à l'aide de la directive :rfc:`max-age "
"<9111#section-5.2.2.1>`::"

msgid ""
"(If you *do* use the caching middleware, it already sets the ``max-age`` "
"with the value of the :setting:`CACHE_MIDDLEWARE_SECONDS` setting. In that "
"case, the custom ``max_age`` from the :func:`~django.views.decorators.cache."
"cache_control` decorator will take precedence, and the header values will be "
"merged correctly.)"
msgstr ""
"Si vous utilisez l'intergiciel de cache, celui-ci définit déjà l'en-tête "
"``max-age`` avec la valeur du réglage :setting:`CACHE_MIDDLEWARE_SECONDS`. "
"Dans ce cas, la valeur ``max_age`` personnalisée par le décorateur :func:"
"`~django.views.decorators.cache.cache_control` est prioritaire et les "
"valeurs d'en-têtes seront fusionnées correctement."

msgid ""
"Any valid ``Cache-Control`` response directive is valid in "
"``cache_control()``. Here are some more examples:"
msgstr ""
"Toute directive de réponse ``Cache-Control`` valide est acceptée dans "
"``cache_control()``. Voici quelques exemples supplémentaires :"

msgid "``no_transform=True``"
msgstr "``no_transform=True``"

msgid "``must_revalidate=True``"
msgstr "``must_revalidate=True``"

msgid "``stale_while_revalidate=num_seconds``"
msgstr "``stale_while_revalidate=nombre_secondes``"

msgid "``no_cache=True``"
msgstr "``no_cache=True``"

msgid ""
"The full list of known directives can be found in the `IANA registry`_ (note "
"that not all of them apply to responses)."
msgstr ""
"La liste complète des directives connues se trouve dans le `registre IANA`_ "
"(notez que toutes ne s'appliquent pas aux réponses)."

msgid ""
"If you want to use headers to disable caching altogether, :func:`~django."
"views.decorators.cache.never_cache` is a view decorator that adds headers to "
"ensure the response won't be cached by browsers or other caches. Example::"
msgstr ""
"Si vous souhaitez utiliser des en-têtes pour désactiver totalement le "
"cache, :func:`~django.views.decorators.cache.never_cache` est un décorateur "
"de vue qui ajoute les en-têtes nécessaires pour s'assurer que la réponse ne "
"sera pas mise en cache par les navigateurs ou d'autres caches. Exemple ::"

msgid "Order of ``MIDDLEWARE``"
msgstr "Ordre dans ``MIDDLEWARE``"

msgid ""
"If you use caching middleware, it's important to put each half in the right "
"place within the :setting:`MIDDLEWARE` setting. That's because the cache "
"middleware needs to know which headers by which to vary the cache storage. "
"Middleware always adds something to the ``Vary`` response header when it can."
msgstr ""
"Si vous utilisez l'intergiciel de cache, il est important de placer chacun "
"des deux éléments au bon endroit dans le réglage :setting:`MIDDLEWARE`. Ceci "
"parce que l'intergiciel de cache a besoin de savoir à partir de quels en-"
"têtes le stockage de cache doit varier. L'intergiciel ajoute toujours "
"quelque chose à l'en-tête de réponse ``Vary`` autant qu'il le peut."

msgid ""
"``UpdateCacheMiddleware`` runs during the response phase, where middleware "
"is run in reverse order, so an item at the top of the list runs *last* "
"during the response phase. Thus, you need to make sure that "
"``UpdateCacheMiddleware`` appears *before* any other middleware that might "
"add something to the ``Vary`` header. The following middleware modules do so:"
msgstr ""
"``UpdateCacheMiddleware`` s'exécute durant la phase de réponse, lorsque les "
"intergiciels sont exécutés en ordre inverse, et qu'un élément en haut de "
"liste s'exécute *en dernier* pendant la phase de réponse. Ainsi donc, vous "
"devez prendre soin de placer ``UpdateCacheMiddleware`` *avant* tout autre "
"intergiciel susceptible d'ajouter quelque chose à l'en-tête ``Vary``. Les "
"modules d'intergiciel suivants sont concernés :"

msgid "``SessionMiddleware`` adds ``Cookie``"
msgstr "``SessionMiddleware`` ajoute ``Cookie``"

msgid "``GZipMiddleware`` adds ``Accept-Encoding``"
msgstr "``GZipMiddleware`` ajoute ``Accept-Encoding``"

msgid "``LocaleMiddleware`` adds ``Accept-Language``"
msgstr "``LocaleMiddleware`` ajoute ``Accept-Language``"

msgid ""
"``FetchFromCacheMiddleware``, on the other hand, runs during the request "
"phase, where middleware is applied first-to-last, so an item at the top of "
"the list runs *first* during the request phase. The "
"``FetchFromCacheMiddleware`` also needs to run after other middleware "
"updates the ``Vary`` header, so ``FetchFromCacheMiddleware`` must be *after* "
"any item that does so."
msgstr ""
"``FetchFromCacheMiddleware``, de son côté, s'exécute durant la phase de "
"requête, lorsque les intergiciels sont exécutés de haut en bas, et qu'un "
"élément en haut de liste s'exécute *en premier* pendant la phase de requête. "
"L'intergiciel ``FetchFromCacheMiddleware`` doit également être exécuté après "
"que tout autre intergiciel ne modifie l'en-tête ``Vary``, c'est pourquoi il "
"doit figurer dans la liste *après* ceux qui effectuent une telle "
"modification."

msgid "System check framework"
msgstr "Infrastructure de contrôle du système"

msgid ""
"The system check framework is a set of static checks for validating Django "
"projects. It detects common problems and provides hints for how to fix them. "
"The framework is extensible so you can easily add your own checks."
msgstr ""
"L'infrastructure de contrôle du système est un ensemble de contrôles "
"statiques pour valider les projets Django. Elle détecte les problèmes "
"courants et fournit des conseils sur la façon de les corriger. "
"L'infrastructure est extensible de sorte que vous pouvez facilement ajouter "
"vos propres contrôles."

msgid ""
"Checks can be triggered explicitly via the :djadmin:`check` command. Checks "
"are triggered implicitly before most commands, including :djadmin:"
"`runserver` and :djadmin:`migrate`. For performance reasons, checks are not "
"run as part of the WSGI stack that is used in deployment. If you need to run "
"system checks on your deployment server, trigger them explicitly using :"
"djadmin:`check`."
msgstr ""
"Les contrôles peuvent être déclenchées de manière explicite par la commande :"
"djadmin:`check`. Les contrôles sont déclenchés implicitement avant la "
"plupart des commandes, y compris :djadmin:`runserver` et :djadmin:`migrate`. "
"Pour des raisons de performance, les contrôles ne sont pas effectués dans le "
"contexte de la pile WSGI utilisée en mode déployé. Si vous avez besoin "
"d'effectuer les contrôles systèmes sur le serveur de déploiement, appelez "
"explicitement la commande :djadmin:`check`."

msgid ""
"Serious errors will prevent Django commands (such as :djadmin:`runserver`) "
"from running at all. Minor problems are reported to the console. If you have "
"inspected the cause of a warning and are happy to ignore it, you can hide "
"specific warnings using the :setting:`SILENCED_SYSTEM_CHECKS` setting in "
"your project settings file."
msgstr ""
"Les erreurs graves empêcheront les commandes de Django (comme :djadmin:"
"`runserver`) de fonctionner, tout court. Les problèmes mineurs sont signalés "
"dans la console. Si vous avez inspecté la cause d'un avertissement et que "
"vous êtes content de l'ignorer, vous pouvez masquer des avertissements "
"spécifiques en utilisant le réglage :setting:`SILENCED_SYSTEM_CHECKS` dans "
"votre fichier de réglages du projet."

msgid ""
"A full list of all checks that can be raised by Django can be found in the :"
"doc:`System check reference </ref/checks>`."
msgstr ""
"Une liste complète de tous les contrôles pouvant être levées par Django "
"peuvent être trouvés dans la :doc:`référence des contrôles système </ref/"
"checks>`."

msgid "Writing your own checks"
msgstr "Écrire vos propres contrôles"

msgid ""
"The framework is flexible and allows you to write functions that perform any "
"other kind of check you may require. The following is an example stub check "
"function::"
msgstr ""
"Le système est souple et vous permet d'écrire des fonctions qui effectuent "
"tout autre type de contrôle dont vous auriez besoin. Ce qui suit est un "
"exemple de squelette d'une fonction de contrôle ::"

msgid ""
"The check function *must* accept an ``app_configs`` argument; this argument "
"is the list of applications that should be inspected. If ``None``, the check "
"must be run on *all* installed apps in the project."
msgstr ""
"La fonction de contrôle *doit* accepter un argument ``app_configs``; cet "
"argument est la liste des applications qui doivent être inspectés. Si "
"``None``, la vérification doit être effectué sur *toutes* les applications "
"installées du projet."

msgid ""
"The check will receive a ``databases`` keyword argument. This is a list of "
"database aliases whose connections may be used to inspect database level "
"configuration. If ``databases`` is ``None``, the check must not use any "
"database connections."
msgstr ""
"Le contrôle recevra un paramètre nommé ``databases``. Il s'agit d'une liste "
"des alias de bases de données dont les connexions peuvent être utilisées "
"pour inspecter la configuration au niveau base de données. Si ``databases`` "
"vaut ``None``, le contrôle ne doit utiliser aucune connexion de base de "
"données."

msgid "The ``**kwargs`` argument is required for future expansion."
msgstr ""
"Le paramètre ``**kwargs`` est nécessaire pour prendre en compte de futures "
"modifications."

msgid "Messages"
msgstr "Messages"

msgid ""
"The function must return a list of messages. If no problems are found as a "
"result of the check, the check function must return an empty list."
msgstr ""
"La fonction doit renvoyer une liste de messages. Si aucun problème n'est "
"détecté suite à la vérification, la fonction de contrôle doit renvoyer une "
"liste vide."

msgid ""
"The warnings and errors raised by the check method must be instances of :"
"class:`~django.core.checks.CheckMessage`. An instance of :class:`~django."
"core.checks.CheckMessage` encapsulates a single reportable error or warning. "
"It also provides context and hints applicable to the message, and a unique "
"identifier that is used for filtering purposes."
msgstr ""
"Les avertissements et les erreurs levés par la méthode de contrôle doivent "
"être des instances de :class:`~django.core.checks.CheckMessage`. Une "
"instance de :class:`~django.core.checks.CheckMessage` encapsule une seule "
"erreur à signaler ou un seul avertissement. Elle fournit également des "
"conseils et le contexte applicable au message, et un identifiant unique qui "
"est utilisé à des fins de filtrage."

msgid ""
"The concept is very similar to messages from the :doc:`message framework </"
"ref/contrib/messages>` or the :doc:`logging framework </topics/logging>`. "
"Messages are tagged with a ``level`` indicating the severity of the message."
msgstr ""
"Le concept est très similaire aux messages du :doc:`système de message </ref/"
"contrib/messages>` ou de la :doc:`journalisation </topics/logging>`. Les "
"messages sont étiquettés avec un ``level`` indiquant la gravité du message."

msgid ""
"There are also shortcuts to make creating messages with common levels "
"easier. When using these classes you can omit the ``level`` argument because "
"it is implied by the class name."
msgstr ""
"Il existe également des raccourcis pour faciliter la création des messages "
"avec les niveaux de base. Lorsque vous utilisez ces classes, vous pouvez "
"omettre le paramètre ``level`` car il est sous-entendu par le nom de la "
"classe."

msgid ":class:`Debug`"
msgstr ":class:`Debug`"

msgid ":class:`Info`"
msgstr ":class:`Info`"

msgid ":class:`Warning`"
msgstr ":class:`Warning`"

msgid ":class:`Error`"
msgstr ":class:`Error`"

msgid ":class:`Critical`"
msgstr ":class:`Critical`"

msgid "Registering and labeling checks"
msgstr "Enregistrement et étiquetage des contrôles"

msgid ""
"Lastly, your check function must be registered explicitly with system check "
"registry. Checks should be registered in a file that's loaded when your "
"application is loaded; for example, in the :meth:`AppConfig.ready() <django."
"apps.AppConfig.ready>` method."
msgstr ""
"Finalement, votre fonction de contrôle doit être explicitement inscrite dans "
"le registre des contrôles systèmes. Les contrôles doivent être inscrits dans "
"un fichier qui est chargé au moment du chargement de l'application. Par "
"exemple, dans la méthode :meth:`AppConfig.ready() <django.apps.AppConfig."
"ready>`."

msgid ""
"You can pass as many tags to ``register`` as you want in order to label your "
"check. Tagging checks is useful since it allows you to run only a certain "
"group of checks. For example, to register a compatibility check, you would "
"make the following call::"
msgstr ""
"Vous pouvez passer autant d'étiquettes que vous le souhaitez à ``register`` "
"pour labeliser votre contrôle. L'étiquetage des contrôles est utile car elle "
"vous permet de n'exécuter qu'un certain groupe de contrôles. Par exemple, "
"pour enregistrer un contrôle de compatibilité, vous feriez l'appel suivant ::"

msgid ""
"You can register \"deployment checks\" that are only relevant to a "
"production settings file like this::"
msgstr ""
"Vous pouvez inscrire des « contrôles de déploiement » qui ne sont "
"applicables qu'à un fichier de réglages de production de la manière "
"suivante ::"

msgid ""
"These checks will only be run if the :option:`check --deploy` option is used."
msgstr ""
"Ces contrôles ne seront exécutés que si l'option :option:`check --deploy` "
"est utilisée."

msgid ""
"You can also use ``register`` as a function rather than a decorator by "
"passing a callable object (usually a function) as the first argument to "
"``register``."
msgstr ""
"Vous pouvez aussi employer ``register`` comme une fonction au lieu d'un "
"décorateur en lui transmettant un objet exécutable (habituellement une "
"fonction) comme premier paramètre."

msgid "The code below is equivalent to the code above::"
msgstr "Le code ci-dessous est équivalent au code ci-dessus ::"

msgid "Field, model, manager, template engine, and database checks"
msgstr ""
"Contrôles sur les champs, modèles, gestionnaires, moteurs de gabarits et "
"bases de données"

msgid ""
"In some cases, you won't need to register your check function -- you can "
"piggyback on an existing registration."
msgstr ""
"Dans certains cas, vous n'aurez pas besoin d'enregistrer votre fonction de "
"contrôle -- vous pouvez la greffer sur un enregistrement existant."

msgid ""
"Fields, models, model managers, template engines, and database backends all "
"implement a ``check()`` method that is already registered with the check "
"framework. If you want to add extra checks, you can extend the "
"implementation on the base class, perform any extra checks you need, and "
"append any messages to those generated by the base class. It's recommended "
"that you delegate each check to separate methods."
msgstr ""
"Les champs, les modèles, les gestionnaires de modèle, les moteurs de "
"gabarits et les moteurs de base de données implémentent tous une méthode "
"``check()`` qui est déjà enregistrée auprès du système de vérification. Si "
"vous souhaitez ajouter des contrôles supplémentaires, vous pouvez étendre "
"l'implémentation de la classe de base, effectuer tous contrôles "
"supplémentaires nécessaires, et ajouter tous les messages à ceux générés par "
"la classe de base. Il est recommandé que vous déléguiez chaque contrôle à "
"des méthodes distinctes."

msgid ""
"Consider an example where you are implementing a custom field named "
"``RangedIntegerField``. This field adds ``min`` and ``max`` arguments to the "
"constructor of ``IntegerField``. You may want to add a check to ensure that "
"users provide a min value that is less than or equal to the max value. The "
"following code snippet shows how you can implement this check::"
msgstr ""
"Prenons un exemple où vous implémentez un champ personnalisé nommé "
"``RangedIntegerField``. Ce champ ajoute les arguments ``min`` et ``max`` au "
"constructeur d'``IntegerField``. Vous pourriez ajouter une vérification afin "
"de vous assurer que les utilisateurs fournissent une valeur min qui est "
"inférieur ou égale à la valeur max. Le code suivant montre comment vous "
"pouvez mettre en œuvre ce contrôle ::"

msgid ""
"If you wanted to add checks to a model manager, you would take the same "
"approach on your subclass of :class:`~django.db.models.Manager`."
msgstr ""
"Si vous vouliez ajouter des contrôles à un gestionnaire de modèle, vous "
"prendriez la même approche avec votre sous-classe de :class:`~django.db."
"models.Manager`."

msgid ""
"If you want to add a check to a model class, the approach is *almost* the "
"same: the only difference is that the check is a classmethod, not an "
"instance method::"
msgstr ""
"Si vous souhaitez ajouter un contrôle à une classe de modèle, l'approche est "
"*presque* la même : la seule différence est que le contrôle est une méthode "
"de classe, pas une méthode d'instance ::"

msgid ""
"In older versions, template engines didn't implement a ``check()`` method."
msgstr ""
"Dans les versions précédentes, les moteurs de gabarits n'implémentaient pas "
"de méthode ``check()``."

msgid "Writing tests"
msgstr "Écriture de tests"

msgid "Messages are comparable. That allows you to easily write tests::"
msgstr ""
"Les messages sont comparables. Cela vous permet d'écrire facilement des "
"tests ::"

msgid "Writing integration tests"
msgstr "Écriture de tests d'intégration"

msgid ""
"Given the need to register certain checks when the application loads, it can "
"be useful to test their integration within the system checks framework. This "
"can be accomplished by using the :func:`~django.core.management."
"call_command` function."
msgstr ""
"Étant donné le besoin d'inscrire certains contrôles au chargement de "
"l'application, il peut être utile de tester leur intégration dans "
"l'infrastructure des contrôles systèmes. Cela peut être fait en appelant la "
"fonction :func:`~django.core.management.call_command`."

msgid ""
"For example, this test demonstrates that the :setting:`SITE_ID` setting must "
"be an integer, a built-in :ref:`check from the sites framework <sites-system-"
"checks>`::"
msgstr ""
"Par exemple, ce test démontre que le réglage :setting:`SITE_ID` doit être un "
"nombre entier, ce qui est fait par un :ref:`contrôle intégré au système des "
"sites <sites-system-checks>`::"

msgid ""
"Consider the following check which issues a warning on deployment if a "
"custom setting named ``ENABLE_ANALYTICS`` is not set to ``True``::"
msgstr ""
"Considérez le contrôle suivant qui émet un avertissement lors du déploiement "
"si un réglage personnalisé nommé ``ENABLE_ANALYTICS`` n'est pas défini à "
"``True``::"

msgid ""
"Given that this check will not raise a ``SystemCheckError``, the presence of "
"the warning message in the ``stderr`` output can be asserted like so::"
msgstr ""
"Sachant que ce contrôle ne produira pas de ``SystemCheckError``, la présence "
"du message d'avertissement dans la sortie ``stderr`` peut être testée comme "
"ceci ::"

msgid "Built-in class-based generic views"
msgstr "Vues génériques fondées sur les classes, fournies par Django"

msgid ""
"Writing web applications can be monotonous, because we repeat certain "
"patterns again and again. Django tries to take away some of that monotony at "
"the model and template layers, but web developers also experience this "
"boredom at the view level."
msgstr ""
"L'écriture d'applications Web peut être une tâche monotone, car certains "
"motifs se répètent encore et encore. Django essaie d'enlever une partie de "
"cette monotonie au niveau des modèles et des gabarits, mais les développeurs "
"Web font également face à ces répétitions au niveau des vues."

msgid ""
"Django's *generic views* were developed to ease that pain. They take certain "
"common idioms and patterns found in view development and abstract them so "
"that you can quickly write common views of data without having to write too "
"much code."
msgstr ""
"Les *vues génériques* de Django ont été développées pour résoudre ce "
"problème. Elles s'attachent à trouver des motifs ou idiomes courants dans le "
"développement des vues et à les abstraire de façon à ce qu'on puisse "
"rapidement écrire des vues courantes sans devoir écrire trop de code. "

msgid ""
"We can recognize certain common tasks, like displaying a list of objects, "
"and write code that displays a list of *any* object. Then the model in "
"question can be passed as an extra argument to the URLconf."
msgstr ""
"Il est possible d'identifier certaines tâches courantes, comme l'affichage "
"d'une liste d'objets, et d'écrire du code qui affiche une liste de "
"*n'importe quel* objet. Puis, le modèle concerné peut être transmis comme "
"paramètre supplémentaire dans la configuration d'URL."

msgid "Django ships with generic views to do the following:"
msgstr ""
"Django est livré avec des vues génériques pour accomplir les choses "
"suivantes :"

msgid ""
"Display list and detail pages for a single object. If we were creating an "
"application to manage conferences then a ``TalkListView`` and a "
"``RegisteredUserListView`` would be examples of list views. A single talk "
"page is an example of what we call a \"detail\" view."
msgstr ""
"Afficher des pages de liste et de détail pour un seul type d'objet. Si nous "
"devions créer une application pour gérer des conférences, une vue "
"``TalkListView`` et une vue ``RegisteredUserListView`` seraient des exemples "
"de vues de listes. Une page d'une seule conférence pourrait être un exemple "
"de ce que nous appelons une vue de « détail »."

msgid ""
"Present date-based objects in year/month/day archive pages, associated "
"detail, and \"latest\" pages."
msgstr ""
"Présenter des objets datés dans des pages d'archive par année/mois/jour, "
"avec les détails associés et des pages « éléments récents »."

msgid ""
"Allow users to create, update, and delete objects -- with or without "
"authorization."
msgstr ""
"Permettre à des utilisateurs de créer, mettre à jour et supprimer des "
"objets, avec ou sans gestion des autorisations."

msgid ""
"Taken together, these views provide interfaces to perform the most common "
"tasks developers encounter."
msgstr ""
"Considérées globalement, ces vues offrent des interfaces pour effectuer les "
"tâches les plus courantes que rencontrent les développeurs."

msgid "Extending generic views"
msgstr "Extension des vues génériques"

msgid ""
"There's no question that using generic views can speed up development "
"substantially. In most projects, however, there comes a moment when the "
"generic views no longer suffice. Indeed, the most common question asked by "
"new Django developers is how to make generic views handle a wider array of "
"situations."
msgstr ""
"Il est indiscutable que l'utilisation des vues génériques peut "
"considérablement accélérer le développement. Dans la plupart des projets, "
"cependant, on atteint souvent un stade où les vue génériques ne suffisent "
"plus. En fait, la question la plus fréquemment posée par les nouveaux "
"développeurs Django est de savoir comment il est possible de gérer plus de "
"variétés de situations avec les vues génériques."

msgid ""
"This is one of the reasons generic views were redesigned for the 1.3 release "
"- previously, they were view functions with a bewildering array of options; "
"now, rather than passing in a large amount of configuration in the URLconf, "
"the recommended way to extend generic views is to subclass them, and "
"override their attributes or methods."
msgstr ""
"C'est l'une des raisons pour lesquelles les vues génériques ont été revues "
"pour la version 1.3 ; précédemment, il s'agissait de fonctions de vue avec "
"une très large diversité d'options. Maintenant, au lieu de transmettre une "
"grosse partie de configuration dans la configuration d'URL, la manière "
"recommandée d'étendre les vues génériques est d'en faire des sous-classes et "
"de surcharger leurs attributs et méthodes."

msgid ""
"That said, generic views will have a limit. If you find you're struggling to "
"implement your view as a subclass of a generic view, then you may find it "
"more effective to write just the code you need, using your own class-based "
"or functional views."
msgstr ""
"Ceci dit, les vues génériques ont leurs limites. Si vous vous retrouvez à "
"vous battre pour implémenter vos vues comme des sous-classes de vues "
"génériques, il se pourrait qu'il soit plus efficace d'écrire simplement le "
"code dont vous avez besoin dans vos vues, que ce soit par des fonctions ou "
"des classes."

msgid ""
"More examples of generic views are available in some third party "
"applications, or you could write your own as needed."
msgstr ""
"Vous trouverez davantage d'exemples de vues génériques dans certaines "
"applications tierces, mais n'hésitez pas à écrire vos propres vues selon vos "
"besoins."

msgid "Generic views of objects"
msgstr "Vues génériques d'objets"

msgid ""
":class:`~django.views.generic.base.TemplateView` certainly is useful, but "
"Django's generic views really shine when it comes to presenting views of "
"your database content. Because it's such a common task, Django comes with a "
"handful of built-in generic views to help generate list and detail views of "
"objects."
msgstr ""
":class:`~django.views.generic.base.TemplateView` est certainement utile, "
"mais les vues génériques de Django exposent tout leur potentiel lorsqu'il "
"s'agit de présenter des vues de contenu de la base de données. Dans la "
"mesure où c'est une tâche très courante, Django contient un ensemble de vues "
"génériques intégrées pour aider à générer des vues de liste et de détail "
"pour les objets."

msgid ""
"Let's start by looking at some examples of showing a list of objects or an "
"individual object."
msgstr ""
"Commençons par examiner quelques exemples d'affichage d'une liste d'objets "
"ou d'un objet individuel."

msgid "We'll be using these models::"
msgstr "Nous allons utiliser ces modèles ::"

msgid "Now we need to define a view::"
msgstr "Nous devons maintenant définir une vue ::"

msgid "Finally hook that view into your urls::"
msgstr "Et finalement connecter cette vue à une URL ::"

msgid ""
"That's all the Python code we need to write. We still need to write a "
"template, however. We could explicitly tell the view which template to use "
"by adding a ``template_name`` attribute to the view, but in the absence of "
"an explicit template Django will infer one from the object's name. In this "
"case, the inferred template will be ``\"books/publisher_list.html\"`` -- the "
"\"books\" part comes from the name of the app that defines the model, while "
"the \"publisher\" bit is the lowercased version of the model's name."
msgstr ""
"Voilà tout le code Python qu'il suffit d'écrire. Il faut cependant encore "
"écrire un gabarit. Nous pourrions indiquer explicitement à la vue le gabarit "
"à utiliser en lui ajoutant un attribut ``template_name``, mais en l'absence "
"d'un gabarit explicite, Django déduit un nom de gabarit à partir du nom de "
"l'objet. Dans ce cas, le gabarit « automatique » sera ``\"books/"
"publisher_list.html\"``, la partie « books » provient du nom de "
"l'application contenant ce modèle alors que « publisher » provient du nom du "
"modèle en minuscules."

msgid ""
"Thus, when (for example) the ``APP_DIRS`` option of a ``DjangoTemplates`` "
"backend is set to True in :setting:`TEMPLATES`, a template location could "
"be: /path/to/project/books/templates/books/publisher_list.html"
msgstr ""
"Ainsi, lorsque (par exemple) l'option ``APP_DIRS`` d'un moteur "
"``DjangoTemplates`` est définie à ``True`` dans :setting:`TEMPLATES`, un "
"emplacement de gabarit pourrait être : ``/chemin/vers/projet/books/templates/"
"books/publisher_list.html``."

msgid ""
"This template will be rendered against a context containing a variable "
"called ``object_list`` that contains all the publisher objects. A template "
"might look like this:"
msgstr ""
"Ce gabarit sera rendu avec un contexte contenant une variable appelée "
"``object_list`` contenant elle-même les objets ``Publisher``. Un gabarit "
"pourrait ressembler à ceci :"

msgid ""
"That's really all there is to it. All the cool features of generic views "
"come from changing the attributes set on the generic view. The :doc:`generic "
"views reference</ref/class-based-views/index>` documents all the generic "
"views and their options in detail; the rest of this document will consider "
"some of the common ways you might customize and extend generic views."
msgstr ""
"Et voilà, tout est là. Toutes les fonctionnalités sympathiques des vues "
"génériques proviennent des modifications d'attributs définis dans la vue "
"générique. La :doc:`référence des vues génériques</ref/class-based-views/"
"index>` documente en détails toutes les vues génériques et leurs options. La "
"suite de de document s'attelle à décrire certaines manières fréquentes de "
"personnaliser et étendre les vues génériques."

msgid "Making \"friendly\" template contexts"
msgstr "Construction de contextes de gabarits « astucieux »"

msgid ""
"You might have noticed that our sample publisher list template stores all "
"the publishers in a variable named ``object_list``. While this works just "
"fine, it isn't all that \"friendly\" to template authors: they have to "
"\"just know\" that they're dealing with publishers here."
msgstr ""
"Vous avez peut-être constaté que notre exemple de gabarit de liste "
"d'éditeurs stocke tous les éditeurs dans une variable nommée "
"``object_list``. Même si cela fonctionne très bien, ce n'est pas très "
"« sympa » pour les auteurs de gabarits : ils doivent simplement savoir "
"qu'ils manipulent ici des éditeurs."

msgid ""
"Well, if you're dealing with a model object, this is already done for you. "
"When you are dealing with an object or queryset, Django is able to populate "
"the context using the lowercased version of the model class' name. This is "
"provided in addition to the default ``object_list`` entry, but contains "
"exactly the same data, i.e. ``publisher_list``."
msgstr ""
"Si vous avez affaire à un objet de modèle, c'est déjà fait pour vous. "
"Lorsque vous avez affaire à un objet ou un jeu de requête, Django est "
"capable de renseigner le contexte en utilisant la version en minuscules du "
"nom de la classe de modèle. Ceci s'ajoute à l'élément ``object_list`` par "
"défaut, mais contient exactement les mêmes données, c'est-à-dire "
"``publisher_list``."

msgid ""
"If this still isn't a good match, you can manually set the name of the "
"context variable. The ``context_object_name`` attribute on a generic view "
"specifies the context variable to use::"
msgstr ""
"Si ce n'est toujours pas un bon nom, vous pouvez indiquer explicitement le "
"nom de la variable de contexte. L'attribut ``context_object_name`` d'une vue "
"générique indique le nom de variable de contexte à utiliser ::"

msgid ""
"Providing a useful ``context_object_name`` is always a good idea. Your "
"coworkers who design templates will thank you."
msgstr ""
"La mise à disposition d'un nom ``context_object_name`` signifiant est "
"toujours une bonne idée. Vos collaborateurs rédacteurs de gabarits vous "
"remercieront."

msgid "Adding extra context"
msgstr "Ajout de contexte supplémentaire"

msgid ""
"Often you need to present some extra information beyond that provided by the "
"generic view. For example, think of showing a list of all the books on each "
"publisher detail page. The :class:`~django.views.generic.detail.DetailView` "
"generic view provides the publisher to the context, but how do we get "
"additional information in that template?"
msgstr ""
"Il est souvent nécessaire de compléter par quelques informations "
"supplémentaires au-delà de ce que la vue générique fournit. Par exemple, on "
"peut penser à afficher une liste de livres sur la page de détail des "
"éditeurs. La vue générique :class:`~django.views.generic.detail.DetailView` "
"place l'éditeur dans le contexte, mais comment ajouter d'autres informations "
"dans le gabarit ?"

msgid ""
"The answer is to subclass :class:`~django.views.generic.detail.DetailView` "
"and provide your own implementation of the ``get_context_data`` method. The "
"default implementation adds the object being displayed to the template, but "
"you can override it to send more::"
msgstr ""
"La réponse consiste à créer une sous-classe de :class:`~django.views.generic."
"detail.DetailView` et d'y placer votre propre implémentation de la méthode "
"``get_context_data``. L'implémentation par défaut ajoute l'objet à afficher "
"dans le gabarit, mais en la surchargeant, vous pouvez l'enrichir ::"

msgid ""
"Generally, ``get_context_data`` will merge the context data of all parent "
"classes with those of the current class. To preserve this behavior in your "
"own classes where you want to alter the context, you should be sure to call "
"``get_context_data`` on the super class. When no two classes try to define "
"the same key, this will give the expected results. However if any class "
"attempts to override a key after parent classes have set it (after the call "
"to super), any children of that class will also need to explicitly set it "
"after super if they want to be sure to override all parents. If you're "
"having trouble, review the method resolution order of your view."
msgstr ""
"Généralement, ``get_context_data`` fusionne les données de contexte de "
"toutes les classes parentes avec celles de la classe actuelle. Pour "
"préserver ce comportement dans vos propres classes où vous souhaitez "
"modifier le contexte, il faut prendre soin d'appeler ``get_context_data`` de "
"la classe parente (``super``). Pour autant qu'il n'y ait pas deux classes "
"essayant de modifier la même clé, le résultat sera correct. Cependant, si "
"l'une des classes tente de surcharger une clé après qu'une classe parente "
"l'a définie (après l'appel à ``super``), toute classe enfant de cette classe "
"devra aussi définir explicitement cette clé après ``super`` pour être "
"certain de surcharger tous les parents. Si cela vous cause des ennuis, "
"analysez l'ordre de résolution des méthodes de votre vue."

msgid ""
"Another consideration is that the context data from class-based generic "
"views will override data provided by context processors; see :meth:`~django."
"views.generic.detail.SingleObjectMixin.get_context_data` for an example."
msgstr ""
"Un autre élément à signaler est que les données de contexte provenant des "
"vues génériques basées sur les classes vont écraser les données fournies par "
"les processeurs de contexte ; voir :meth:`~django.views.generic.detail."
"SingleObjectMixin.get_context_data` comme exemple."

msgid "Viewing subsets of objects"
msgstr "Affichage de sous-ensembles d'objets"

msgid ""
"Now let's take a closer look at the ``model`` argument we've been using all "
"along. The ``model`` argument, which specifies the database model that the "
"view will operate upon, is available on all the generic views that operate "
"on a single object or a collection of objects. However, the ``model`` "
"argument is not the only way to specify the objects that the view will "
"operate upon -- you can also specify the list of objects using the "
"``queryset`` argument::"
msgstr ""
"Examinons maintenant un peu plus attentivement le paramètre ``model`` que "
"nous avons toujours utilisé. Ce paramètre, qui définit le modèle de base de "
"données sur lequel la vue va porter, est disponible pour toutes les vues "
"génériques qui opèrent sur un seul objet ou une liste d'objets. Cependant, "
"le paramètre ``model`` n'est pas le seul moyen de définir le type d'objet "
"d'une vue, il est aussi possible de définir la liste des objets par le "
"paramètre ``queryset``::"

msgid ""
"Specifying ``model = Publisher`` is shorthand for saying ``queryset = "
"Publisher.objects.all()``. However, by using ``queryset`` to define a "
"filtered list of objects you can be more specific about the objects that "
"will be visible in the view (see :doc:`/topics/db/queries` for more "
"information about :class:`~django.db.models.query.QuerySet` objects, and see "
"the :doc:`class-based views reference </ref/class-based-views/index>` for "
"the complete details)."
msgstr ""
"L'indication de ``model = Publisher`` est un raccourci pour dire ``queryset "
"= Publisher.objects.all()``. Cependant, en utilisant ``queryset`` pour "
"définir une liste d'objets filtrée, vous pouvez spécifier plus finement les "
"objets qui seront visibles dans la vue (voir :doc:`/topics/db/queries` pour "
"plus d'informations à propos des objets :class:`~django.db.models.query."
"QuerySet`, et consultez la :doc:`référence des vues fondées sur les classes "
"</ref/class-based-views/index>` pour obtenir tous les détails)."

msgid ""
"To pick an example, we might want to order a list of books by publication "
"date, with the most recent first::"
msgstr ""
"Comme exemple, essayons de trier une liste de livres par date de "
"publication, les plus récents en premier ::"

msgid ""
"That's a pretty minimal example, but it illustrates the idea nicely. You'll "
"usually want to do more than just reorder objects. If you want to present a "
"list of books by a particular publisher, you can use the same technique::"
msgstr ""
"Il s'agit d'un exemple très minimal, mais qui montre bien le principe de "
"fonctionnement. Le but est généralement de faire plus que de simplement "
"trier les objets. Si vous souhaitez présenter une liste de livres provenant "
"d'un éditeur particulier, la même technique peut être utilisée ::"

msgid ""
"Notice that along with a filtered ``queryset``, we're also using a custom "
"template name. If we didn't, the generic view would use the same template as "
"the \"vanilla\" object list, which might not be what we want."
msgstr ""
"Remarquez qu'en plus d'un paramètre ``queryset`` filtré, nous indiquons "
"également un nom de gabarit personnalisé. Sans cela, la vue générique "
"utiliserait le même gabarit que la liste d'objets « standard », ce qui ne "
"correspondrait pas au but recherché."

msgid ""
"Also notice that this isn't a very elegant way of doing publisher-specific "
"books. If we want to add another publisher page, we'd need another handful "
"of lines in the URLconf, and more than a few publishers would get "
"unreasonable. We'll deal with this problem in the next section."
msgstr ""
"Remarquez également que ce n'est pas une façon très élégante d'afficher les "
"livres d'un éditeur particulier. Si nous voulions ensuite ajouter une page "
"pour un autre éditeur, nous devrions ajouter des lignes supplémentaires dans "
"la configuration d'URL et nous serions pratiquement limités à quelques "
"éditeurs. Nous aborderons ce problème dans la section suivante."

msgid ""
"If you get a 404 when requesting ``/books/acme/``, check to ensure you "
"actually have a Publisher with the name 'ACME Publishing'.  Generic views "
"have an ``allow_empty`` parameter for this case.  See the :doc:`class-based-"
"views reference</ref/class-based-views/index>` for more details."
msgstr ""
"Si vous obtenez une erreur 404 en accédant à ``/books/acme/``, vérifiez que "
"vous possédez bien un objet ``Publisher`` dont le nom est « ACME "
"Publishing ». Les vues génériques ont un paramètre ``allow_empty`` pour "
"cette situation. Consultez la :doc:`référence des vues fondées sur les "
"classes</ref/class-based-views/index>` pour plus de détails."

msgid "Dynamic filtering"
msgstr "Filtrage dynamique"

msgid ""
"Another common need is to filter down the objects given in a list page by "
"some key in the URL. Earlier we hard-coded the publisher's name in the "
"URLconf, but what if we wanted to write a view that displayed all the books "
"by some arbitrary publisher?"
msgstr ""
"Un autre besoin fréquent est de filtrer les objets d'une liste selon un "
"critère de l'URL. Plus haut, nous avons figé le nom de l'éditeur dans la "
"configuration d'URL, mais comment faire si nous voulions écrire une vue "
"affichant tous les livres d'un éditeur librement choisi ?"

msgid ""
"Handily, the ``ListView`` has a :meth:`~django.views.generic.list."
"MultipleObjectMixin.get_queryset` method we can override. By default, it "
"returns the value of the ``queryset`` attribute, but we can use it to add "
"more logic."
msgstr ""
"Heureusement, la classe ``ListView`` possède une méthode :meth:`~django."
"views.generic.list.MultipleObjectMixin.get_queryset` que nous pouvons "
"surcharger. Par défaut, elle renvoie la valeur du paramètre ``queryset``, "
"mais on peut l'utiliser pour ajouter de la logique supplémentaire."

msgid ""
"The key part to making this work is that when class-based views are called, "
"various useful things are stored on ``self``; as well as the request (``self."
"request``) this includes the positional (``self.args``) and name-based "
"(``self.kwargs``) arguments captured according to the URLconf."
msgstr ""
"L'élément clé pour que cela fonctionne est qu'au moment où les vues fondées "
"sur les classes sont appelées, divers attributs utiles sont créés pour "
"``self``. En plus de la requête elle-même (``self.request``), il y a aussi "
"les paramètres positionnels (``self.args``) et nommés (``self.kwargs``) "
"capturés en fonction de la configuration d'URL."

msgid "Here, we have a URLconf with a single captured group::"
msgstr ""
"Ici, nous avons une configuration d'URL comportant un seul groupe capturé ::"

msgid "Next, we'll write the ``PublisherBookListView`` view itself::"
msgstr "Puis, nous allons écrire la vue ``PublisherBookListView``::"

msgid ""
"Using ``get_queryset`` to add logic to the queryset selection is as "
"convenient as it is powerful. For instance, if we wanted, we could use "
"``self.request.user`` to filter using the current user, or other more "
"complex logic."
msgstr ""
"Utiliser ``get_queryset`` pour ajouter de la logique à la sélection du jeu "
"de requête est aussi pratique que puissant. Nous pourrions par exemple "
"filtrer en se basant sur l'utilisateur connecté (``self.request.user``) ou "
"toute autre logique plus complexe."

msgid ""
"We can also add the publisher into the context at the same time, so we can "
"use it in the template::"
msgstr ""
"Nous pouvons aussi ajouter en même temps l'éditeur dans le contexte, afin de "
"pouvoir l'utiliser dans le gabarit ::"

msgid "Performing extra work"
msgstr "Autres opérations supplémentaires"

msgid ""
"The last common pattern we'll look at involves doing some extra work before "
"or after calling the generic view."
msgstr ""
"Le dernier usage que nous examinerons concerne les opérations "
"supplémentaires effectuées avant ou après l'appel à la vue générique."

msgid ""
"Imagine we had a ``last_accessed`` field on our ``Author`` model that we "
"were using to keep track of the last time anybody looked at that author::"
msgstr ""
"Imaginez que nous ayons un champ ``last_accessed`` dans le modèle ``Author`` "
"qui nous sert à garder la trace du moment le plus récent où quelqu'un a "
"consulté la page de cet auteur ::"

msgid ""
"The generic ``DetailView`` class wouldn't know anything about this field, "
"but once again we could write a custom view to keep that field updated."
msgstr ""
"La classe générique ``DetailView`` n'a aucune conscience de la présence de "
"ce champ, mais nous pouvons une nouvelle fois écrire une vue personnalisée "
"pour maintenir ce champ à jour."

msgid ""
"First, we'd need to add an author detail bit in the URLconf to point to a "
"custom view::"
msgstr ""
"Tout d'abord, nous devons ajouter une ligne de détail d'auteur dans la "
"configuration d'URL pour faire le lien avec une vue personnalisée ::"

msgid ""
"Then we'd write our new view -- ``get_object`` is the method that retrieves "
"the object -- so we override it and wrap the call::"
msgstr ""
"Puis il s'agit d'écrire la nouvelle vue. ``get_object`` étant la méthode qui "
"récupère l'objet, nous la surchargeons en « enveloppant » l'appel par "
"défaut ::"

msgid ""
"The URLconf here uses the named group ``pk`` - this name is the default name "
"that ``DetailView`` uses to find the value of the primary key used to filter "
"the queryset."
msgstr ""
"Cette configuration d'URL emploie le group nommé ``pk``, il s'agit là du nom "
"par défaut utilisé par ``DetailView`` pour trouver la valeur de clé primaire "
"à utiliser pour filtrer le jeu de requête."

msgid ""
"If you want to call the group something else, you can set :attr:`~django."
"views.generic.detail.SingleObjectMixin.pk_url_kwarg` on the view."
msgstr ""
"Si vous aimeriez nommer différemment le groupe, vous pouvez définir :attr:"
"`~django.views.generic.detail.SingleObjectMixin.pk_url_kwarg` dans la vue."

msgid "Form handling with class-based views"
msgstr "Gestion de formulaires avec les vues fondées sur les classes"

msgid "Form processing generally has 3 paths:"
msgstr "Le traitement de formulaires utilise généralement trois parcours :"

msgid "Initial GET (blank or prepopulated form)"
msgstr "Affichage initial GET (vierge ou contenu pré-rempli)"

msgid "POST with invalid data (typically redisplay form with errors)"
msgstr ""
"Envoi POST avec données non valides (réaffiche normalement le formulaire "
"avec indication des erreurs)"

msgid "POST with valid data (process the data and typically redirect)"
msgstr ""
"Envoi POST avec données valides (traitement des données normalement suivi "
"par une redirection)"

msgid ""
"Implementing this yourself often results in a lot of repeated boilerplate "
"code (see :ref:`Using a form in a view<using-a-form-in-a-view>`). To help "
"avoid this, Django provides a collection of generic class-based views for "
"form processing."
msgstr ""
"Lorsqu'on implémente soi-même ces étapes, il en résulte souvent beaucoup de "
"code répétitif (voir :ref:`Utilisation d'un formulaire dans une vue<using-a-"
"form-in-a-view>`). Pour l'éviter, Django fournit un ensemble de vues "
"génériques fondées sur les classes dédiées au traitement des vues."

msgid "Basic forms"
msgstr "Formulaires élémentaires"

msgid "Given a contact form:"
msgstr "Étant donné un formulaire de contact :"

msgid "``forms.py``"
msgstr "``forms.py``"

msgid "The view can be constructed using a ``FormView``:"
msgstr "La vue peut être construite en utilisant une classe ``FormView``:"

msgid "``views.py``"
msgstr "``views.py``"

msgid "Notes:"
msgstr "Notes :"

msgid ""
"FormView inherits :class:`~django.views.generic.base.TemplateResponseMixin` "
"so :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"can be used here."
msgstr ""
"``FormView`` hérite de :class:`~django.views.generic.base."
"TemplateResponseMixin`, ce qui fait qu'on peut utiliser :attr:`~django.views."
"generic.base.TemplateResponseMixin.template_name` à cet endroit."

msgid ""
"The default implementation for :meth:`~django.views.generic.edit.FormMixin."
"form_valid` simply redirects to the :attr:`~django.views.generic.edit."
"FormMixin.success_url`."
msgstr ""
"L'implémentation par défaut de :meth:`~django.views.generic.edit.FormMixin."
"form_valid` redirige simplement vers :attr:`~django.views.generic.edit."
"FormMixin.success_url`."

msgid "Model forms"
msgstr "Formulaires de modèles"

msgid ""
"Generic views really shine when working with models.  These generic views "
"will automatically create a :class:`~django.forms.ModelForm`, so long as "
"they can work out which model class to use:"
msgstr ""
"Les vues génériques brillent particulièrement lorsqu'elles interagissent "
"avec des modèles. Ces vues génériques vont automatiquement créer un "
"formulaire :class:`~django.forms.ModelForm`, pour autant qu'elles puissent "
"déterminer la classe de modèle à utiliser :"

msgid ""
"If the :attr:`~django.views.generic.edit.ModelFormMixin.model` attribute is "
"given, that model class will be used."
msgstr ""
"Si l'attribut :attr:`~django.views.generic.edit.ModelFormMixin.model` est "
"présent, c'est cette classe de modèle qui sera utilisée."

msgid ""
"If :meth:`~django.views.generic.detail.SingleObjectMixin.get_object()` "
"returns an object, the class of that object will be used."
msgstr ""
"Si :meth:`~django.views.generic.detail.SingleObjectMixin.get_object()` "
"renvoie un objet, c'est la classe de cet objet qui sera utilisée."

msgid ""
"If a :attr:`~django.views.generic.detail.SingleObjectMixin.queryset` is "
"given, the model for that queryset will be used."
msgstr ""
"Si un attribut :attr:`~django.views.generic.detail.SingleObjectMixin."
"queryset` est présent, c'est le modèle correspondant à ce jeu de requête qui "
"sera utilisé."

msgid ""
"Model form views provide a :meth:`~django.views.generic.edit.ModelFormMixin."
"form_valid()` implementation that saves the model automatically.  You can "
"override this if you have any special requirements; see below for examples."
msgstr ""
"Les vues de formulaire de modèle contiennent une implémentation de :meth:"
"`~django.views.generic.edit.ModelFormMixin.form_valid()` qui enregistre "
"automatiquement le modèle. Vous pouvez surcharger cela si vous avez des "
"exigences particulières ; voir ci-dessous pour des exemples."

msgid ""
"You don't even need to provide a ``success_url`` for :class:`~django.views."
"generic.edit.CreateView` or :class:`~django.views.generic.edit.UpdateView` - "
"they will use :meth:`~django.db.models.Model.get_absolute_url()` on the "
"model object if available."
msgstr ""
"Vous n'avez même pas besoin d'indiquer un attribut ``success_url`` pour :"
"class:`~django.views.generic.edit.CreateView` ou :class:`~django.views."
"generic.edit.UpdateView`, elles vont utiliser :meth:`~django.db.models.Model."
"get_absolute_url()` sur l'objet de modèle le cas échéant."

msgid ""
"If you want to use a custom :class:`~django.forms.ModelForm` (for instance "
"to add extra validation), set :attr:`~django.views.generic.edit.FormMixin."
"form_class` on your view."
msgstr ""
"Si vous souhaitez utiliser un formulaire :class:`~django.forms.ModelForm` "
"personnalisé (par exemple pour ajouter de la validation en plus), "
"définissez :attr:`~django.views.generic.edit.FormMixin.form_class` dans la "
"vue."

msgid ""
"When specifying a custom form class, you must still specify the model, even "
"though the :attr:`~django.views.generic.edit.FormMixin.form_class` may be a :"
"class:`~django.forms.ModelForm`."
msgstr ""
"Lorsqu'une classe de formulaire personnalisée est présente, il est toujours "
"nécessaire de définir le modèle, même si la classe :attr:`~django.views."
"generic.edit.FormMixin.form_class` est une classe :class:`~django.forms."
"ModelForm`."

msgid ""
"First we need to add :meth:`~django.db.models.Model.get_absolute_url()` to "
"our ``Author`` class:"
msgstr ""
"Nous devons d'abord ajouter une méthode :meth:`~django.db.models.Model."
"get_absolute_url()` à notre classe ``Author``:"

msgid "``models.py``"
msgstr "``models.py``"

msgid ""
"Then we can use :class:`CreateView` and friends to do the actual work. "
"Notice how we're just configuring the generic class-based views here; we "
"don't have to write any logic ourselves:"
msgstr ""
"Puis nous pouvons utiliser :class:`CreateView` et compagnie pour faire le "
"travail. Remarquez que nous avons ici juste à configurer les vues génériques "
"fondées sur les classes ; nous n'avons pas à écrire nous-même de logique de "
"vue :"

msgid ""
"We have to use :func:`~django.urls.reverse_lazy` instead of ``reverse()``, "
"as the urls are not loaded when the file is imported."
msgstr ""
"Nous devons utiliser :func:`~django.urls.reverse_lazy` au lieu de "
"``reverse()`` car la configuration d'URL n'est pas encore chargée au moment "
"où le fichier est importé."

msgid ""
"The ``fields`` attribute works the same way as the ``fields`` attribute on "
"the inner ``Meta`` class on :class:`~django.forms.ModelForm`. Unless you "
"define the form class in another way, the attribute is required and the view "
"will raise an :exc:`~django.core.exceptions.ImproperlyConfigured` exception "
"if it's not."
msgstr ""
"L'attribut ``fields`` fonctionne de la même manière que l'attribut "
"``fields`` de la classe interne ``Meta`` de :class:`~django.forms."
"ModelForm`. Sauf dans les cas où la classe de formulaire est définie d'une "
"autre manière, cet attribut est obligatoire et la vue génère une exception :"
"exc:`~django.core.exceptions.ImproperlyConfigured` s'il est absent."

msgid ""
"If you specify both the :attr:`~django.views.generic.edit.ModelFormMixin."
"fields` and :attr:`~django.views.generic.edit.FormMixin.form_class` "
"attributes, an :exc:`~django.core.exceptions.ImproperlyConfigured` exception "
"will be raised."
msgstr ""
"Si vous définissez à la fois les attributs :attr:`~django.views.generic.edit."
"ModelFormMixin.fields` et :attr:`~django.views.generic.edit.FormMixin."
"form_class`, une exception :exc:`~django.core.exceptions."
"ImproperlyConfigured` est générée."

msgid "Finally, we hook these new views into the URLconf:"
msgstr ""
"Finalement, nous connectons ces nouvelles vues dans la configuration d'URL :"

msgid "``urls.py``"
msgstr "``urls.py``"

msgid ""
"These views inherit :class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin` which uses :attr:`~django.views.generic."
"detail.SingleObjectTemplateResponseMixin.template_name_suffix` to construct "
"the :attr:`~django.views.generic.base.TemplateResponseMixin.template_name` "
"based on the model."
msgstr ""
"Ces vues héritent de :class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin` qui utilise :attr:`~django.views.generic."
"detail.SingleObjectTemplateResponseMixin.template_name_suffix` pour "
"construire :attr:`~django.views.generic.base.TemplateResponseMixin."
"template_name` en fonction du modèle."

msgid "In this example:"
msgstr "Dans cet exemple :"

msgid ""
":class:`CreateView` and :class:`UpdateView` use ``myapp/author_form.html``"
msgstr ""
":class:`CreateView` et :class:`UpdateView` utilisent ``myapp/author_form."
"html``"

msgid ":class:`DeleteView` uses ``myapp/author_confirm_delete.html``"
msgstr ":class:`DeleteView` utilise ``myapp/author_confirm_delete.html``"

msgid ""
"If you wish to have separate templates for :class:`CreateView` and :class:"
"`UpdateView`, you can set either :attr:`~django.views.generic.base."
"TemplateResponseMixin.template_name` or :attr:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin.template_name_suffix` on your view class."
msgstr ""
"Si vous aimeriez avoir des gabarits séparés pour  :class:`CreateView` et :"
"class:`UpdateView`, vous pouvez définir :attr:`~django.views.generic.base."
"TemplateResponseMixin.template_name` ou :attr:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin.template_name_suffix` dans votre classe de "
"vue."

msgid "Models and ``request.user``"
msgstr "Modèles et ``request.user``"

msgid ""
"To track the user that created an object using a :class:`CreateView`, you "
"can use a custom :class:`~django.forms.ModelForm` to do this. First, add the "
"foreign key relation to the model:"
msgstr ""
"Pour garder trace de l'utilisateur ayant créé un objet en utilisant :class:"
"`CreateView`, vous pouvez utiliser un formulaire :class:`~django.forms."
"ModelForm` personnalisé. Premièrement, ajoutez la relation de clé étrangère "
"dans le modèle :"

msgid ""
"In the view, ensure that you don't include ``created_by`` in the list of "
"fields to edit, and override :meth:`~django.views.generic.edit."
"ModelFormMixin.form_valid()` to add the user:"
msgstr ""
"Dans la vue, prenez soin de ne pas inclure ``created_by`` dans la liste des "
"champs modifiables et surchargez :meth:`~django.views.generic.edit."
"ModelFormMixin.form_valid()` afin d'ajouter l'utilisateur :"

msgid ""
":class:`~django.contrib.auth.mixins.LoginRequiredMixin` prevents users who "
"aren't logged in from accessing the form. If you omit that, you'll need to "
"handle unauthorized users in :meth:`~.ModelFormMixin.form_valid()`."
msgstr ""
":class:`~django.contrib.auth.mixins.LoginRequiredMixin` empêche les "
"utilisateurs qui ne sont pas authentifiés d'accéder au formulaire. Si vous "
"omettez ça, il sera de votre responsabilité de gérer les utilisateurs non "
"autorisés dans :meth:`~.ModelFormMixin.form_valid()`."

msgid "Content negotiation example"
msgstr "Exemple de négociation de contenu"

msgid ""
"Here is an example showing how you might go about implementing a form that "
"works with an API-based workflow as well as 'normal' form POSTs::"
msgstr ""
"Voici un exemple montrant une possible implémentation d'un formulaire "
"fonctionnant aussi bien pour un flux basé sur une API que pour des envois de "
"formulaire POST « normaux » ::"

msgid "Class-based views"
msgstr "Vues fondées sur les classes "

msgid ""
"A view is a callable which takes a request and returns a response. This can "
"be more than just a function, and Django provides an example of some classes "
"which can be used as views. These allow you to structure your views and "
"reuse code by harnessing inheritance and mixins. There are also some generic "
"views for tasks which we'll get to later, but you may want to design your "
"own structure of reusable views which suits your use case. For full details, "
"see the :doc:`class-based views reference documentation</ref/class-based-"
"views/index>`."
msgstr ""
"Une vue est un exécutable acceptant une requête et renvoyant une réponse. Ce "
"n'est pas forcément une simple fonction et Django fournit des exemples de "
"classes qui peuvent être utilisées comme des vues. Celles-ci vous permettent "
"de structurer vos vues et de réutiliser du code en exploitant l'héritage et "
"les « mixins ». Il existe également des vues génériques pour certaines "
"tâches (nous y reviendrons plus tard), mais vous pouvez tout à fait "
"concevoir votre propre structure de vues réutilisables en fonction de votre "
"cas d'utilisation. Pour des détails plus complets, consultez la :doc:"
"`documentation de référence des vues fondées sur les classes</ref/class-"
"based-views/index>`."

msgid "Basic examples"
msgstr "Exemples de base"

msgid ""
"Django provides base view classes which will suit a wide range of "
"applications. All views inherit from the :class:`~django.views.generic.base."
"View` class, which handles linking the view into the URLs, HTTP method "
"dispatching and other common features. :class:`~django.views.generic.base."
"RedirectView` provides a HTTP redirect, and :class:`~django.views.generic."
"base.TemplateView` extends the base class to make it also render a template."
msgstr ""
"Django fournit des classes de vues basiques qui conviennent à une large "
"palette d'applications. Toutes ces vues héritent de la classe :class:"
"`~django.views.generic.base.View`, qui gère la liaison de la vue aux URL, la "
"distribution en fonction de la méthode HTTP et d'autres fonctionnalités de "
"base. :class:`~django.views.generic.base.RedirectView` sert pour les "
"redirections HTTP alors que :class:`~django.views.generic.base.TemplateView` "
"étend la classe de base afin d'être capable d'afficher un gabarit."

msgid "Usage in your URLconf"
msgstr "Utilisation dans une configuration d'URL"

msgid ""
"The most direct way to use generic views is to create them directly in your "
"URLconf. If you're only changing a few attributes on a class-based view, you "
"can pass them into the :meth:`~django.views.generic.base.View.as_view` "
"method call itself::"
msgstr ""
"La manière la plus directe d'utiliser des vues génériques est de les créer "
"directement dans votre configuration d'URL. Si vous ne devez changer qu'un "
"nombre restreint d'attributs d'une vue fondée sur une classe, vous pouvez "
"les transmettre directement dans l'appel de méthode :meth:`~django.views."
"generic.base.View.as_view`::"

msgid ""
"Any arguments passed to :meth:`~django.views.generic.base.View.as_view` will "
"override attributes set on the class. In this example, we set "
"``template_name`` on the ``TemplateView``. A similar overriding pattern can "
"be used for the ``url`` attribute on :class:`~django.views.generic.base."
"RedirectView`."
msgstr ""
"Tout paramètre transmis à :meth:`~django.views.generic.base.View.as_view` "
"surcharge l'attribut de même nom de la classe. Dans cet exemple, nous "
"définissons ``template_name`` de la vue ``TemplateView``. Le même système de "
"surcharge peut être utilisé pour l'attribut ``url`` de :class:`~django.views."
"generic.base.RedirectView`."

msgid "Subclassing generic views"
msgstr "Héritage des vues génériques"

msgid ""
"The second, more powerful way to use generic views is to inherit from an "
"existing view and override attributes (such as the ``template_name``) or "
"methods (such as ``get_context_data``) in your subclass to provide new "
"values or methods. Consider, for example, a view that just displays one "
"template, ``about.html``. Django has a generic view to do this - :class:"
"`~django.views.generic.base.TemplateView` - so we can subclass it, and "
"override the template name::"
msgstr ""
"L'autre façon, plus puissante, d'utiliser les vues génériques est d'hériter "
"d'une vue existante et de surcharger ses attributs (comme ``template_name``) "
"ou ses méthodes (comme ``get_context_data``) dans votre sous-classe pour "
"fournir d'autres valeurs ou méthodes. Considérez par exemple une vue qui ne "
"fait qu'afficher un gabarit, ``about.html``. Django possède une vue "
"générique pour faire cela, :class:`~django.views.generic.base.TemplateView`, "
"on peut donc en hériter et surcharger la variable du nom du gabarit ::"

msgid ""
"Then we need to add this new view into our URLconf. :class:`~django.views."
"generic.base.TemplateView` is a class, not a function, so we point the URL "
"to the :meth:`~django.views.generic.base.View.as_view` class method instead, "
"which provides a function-like entry to class-based views::"
msgstr ""
"Puis, il faut ajouter cette nouvelle vue dans la configuration d'URL. Comme :"
"class:`~django.views.generic.base.TemplateView` est une classe, pas une "
"fonction, il est nécessaire de faire correspondre l'URL avec la méthode de "
"classe :meth:`~django.views.generic.base.View.as_view` qui constitue un "
"point d'entrée de type fonction pour les vues fondées sur les classes ::"

msgid ""
"For more information on how to use the built in generic views, consult the "
"next topic on :doc:`generic class-based views</topics/class-based-views/"
"generic-display>`."
msgstr ""
"Pour plus d'informations sur la façon d'utiliser les vues génériques "
"intégrées dans Django, consultez le prochain thème sur les :doc:`vues "
"génériques fondées sur les classes</topics/class-based-views/generic-"
"display>`."

msgid "Supporting other HTTP methods"
msgstr "Prise en charge de méthodes HTTP alternatives"

msgid ""
"Suppose somebody wants to access our book library over HTTP using the views "
"as an API. The API client would connect every now and then and download book "
"data for the books published since last visit. But if no new books appeared "
"since then, it is a waste of CPU time and bandwidth to fetch the books from "
"the database, render a full response and send it to the client. It might be "
"preferable to ask the API when the most recent book was published."
msgstr ""
"Supposons que quelqu'un veuille accéder à notre bibliothèque de livres par "
"HTTP en utilisant les vues comme API. Le client de cette API se connecte de "
"temps à autre et télécharge les données des livres publiés depuis sa "
"dernière visite. Mais si aucune publication n'a eu lieu dans l'intervalle, "
"ce serait une perte de temps processeur et de bande passante que de "
"récupérer les livres de la base de données, de produire une réponse complète "
"et de l'envoyer au client. Il pourrait être préférable d'interroger l'API au "
"sujet de la date de publication la plus récente."

msgid "We map the URL to book list view in the URLconf::"
msgstr ""
"Nous faisons correspondre l'URL à la vue de la liste des livres dans la "
"configuration d'URL ::"

msgid "And the view::"
msgstr "Et la vue ::"

msgid ""
"If the view is accessed from a ``GET`` request, an object list is returned "
"in the response (using the ``book_list.html`` template). But if the client "
"issues a ``HEAD`` request, the response has an empty body and the ``Last-"
"Modified`` header indicates when the most recent book was published.  Based "
"on this information, the client may or may not download the full object list."
msgstr ""
"Si on accède à la vue par une requête ``GET``, une liste d'objets est "
"renvoyée dans la réponse (en utilisant le gabarit ``book_list.html``). Mais "
"si le client lance une requête ``HEAD``, le corps de la réponse sera vide et "
"l'en-tête ``Last-Modified`` indiquera la date de publication de livre la "
"plus récente. Sur la base de cette information, le client peut décider de "
"charger ou non la liste complète des objets."

msgid "Asynchronous class-based views"
msgstr "Vues asynchrones fondées sur les classes"

msgid ""
"As well as the synchronous (``def``) method handlers already shown, ``View`` "
"subclasses may define asynchronous (``async def``) method handlers to "
"leverage asynchronous code using ``await``::"
msgstr ""
"Tout comme les méthodes synchrones (``def``) déjà présentées, les sous-"
"classes de ``View`` peuvent définir des méthodes asynchrones (``async def``) "
"pour profiter du code asynchrone en utilisant ``await``:: "

msgid ""
"Within a single view-class, all user-defined method handlers must be either "
"synchronous, using ``def``, or all asynchronous, using ``async def``. An "
"``ImproperlyConfigured`` exception will be raised in ``as_view()`` if "
"``def`` and ``async def`` declarations are mixed."
msgstr ""
"Dans une classe de vue définie, tous les gestionnaires de méthodes que vous "
"définissez doivent être définies soit tous synchrones avec ``def``, soit "
"tous asynchrones avec ``async def``. Une exception ``ImproperlyConfigured`` "
"sera produite dans ``as_view()`` si des déclarations ``def`` et ``async "
"def`` sont mélangées. "

msgid ""
"Django will automatically detect asynchronous views and run them in an "
"asynchronous context. You can read more about Django's asynchronous support, "
"and how to best use async views, in :doc:`/topics/async`."
msgstr ""
"Django détecte automatiquement les vues asynchrones et les exécute dans un "
"contexte asynchrone. Vous pouvez lire davantage de détails sur la prise en "
"charge de l'asynchrone par Django et sur la meilleure manière d'utiliser les "
"vues asynchrones dans :doc:`/topics/async`."

msgid "Introduction to class-based views"
msgstr "Introduction aux vues fondées sur les classes"

msgid ""
"Class-based views provide an alternative way to implement views as Python "
"objects instead of functions. They do not replace function-based views, but "
"have certain differences and advantages when compared to function-based "
"views:"
msgstr ""
"Les vues fondées sur les classes sont une autre manière d'implémenter les "
"vues par des objets Python au lieu de fonctions. Elles ne remplacent pas les "
"vues fondées sur les fonction, mais présentent certaines différences et "
"avantages comparées aux vues fondées sur les fonctions :"

msgid ""
"Organization of code related to specific HTTP methods (``GET``, ``POST``, "
"etc.) can be addressed by separate methods instead of conditional branching."
msgstr ""
"L'organisation du code en lien avec les méthodes HTTP spécifiques (``GET``, "
"``POST``, etc.) peut se faire par des méthodes séparées au lieu d'utiliser "
"un branchement conditionnel."

msgid ""
"Object oriented techniques such as mixins (multiple inheritance) can be used "
"to factor code into reusable components."
msgstr ""
"Des techniques orientées objet comme les « mixins » (héritage multiple) "
"peuvent être utilisées pour factoriser le code en composants réutilisables."

msgid ""
"The relationship and history of generic views, class-based views, and class-"
"based generic views"
msgstr ""
"Liaisons et historique des vues génériques, des vues fondées sur les classes "
"et de celles fondées sur les fonctions"

msgid ""
"In the beginning there was only the view function contract, Django passed "
"your function an :class:`~django.http.HttpRequest` and expected back an :"
"class:`~django.http.HttpResponse`. This was the extent of what Django "
"provided."
msgstr ""
"Au départ, il n'y avait que le contrat de la vue fonction à laquelle Django "
"transmet un requête :class:`~django.http.HttpRequest` et de laquelle il "
"s'attend à recevoir une réponse :class:`~django.http.HttpResponse`. C'était "
"ce que Django lui-même pratiquait."

msgid ""
"Early on it was recognized that there were common idioms and patterns found "
"in view development. Function-based generic views were introduced to "
"abstract these patterns and ease view development for the common cases."
msgstr ""
"Assez rapidement, on a reconnu des idiomes et des modèles courants dans le "
"développement des vues. Les vues génériques fondées sur les fonctions ont "
"été introduites pour abstraire ces pratiques et faciliter le développement "
"de vues pour ces cas courants."

msgid ""
"The problem with function-based generic views is that while they covered the "
"simple cases well, there was no way to extend or customize them beyond some "
"configuration options, limiting their usefulness in many real-world "
"applications."
msgstr ""
"Le problème avec les vues génériques fondées sur les fonctions, c'est "
"qu'elles recouvrent bien les cas simples, mais qu'il n'est pas possible de "
"les étendre ou de les personnaliser au-delà de certaines options de "
"configurations, limitant ainsi leur utilité dans bien des applications du "
"monde réel."

msgid ""
"Class-based generic views were created with the same objective as function-"
"based generic views, to make view development easier. However, the way the "
"solution is implemented, through the use of mixins, provides a toolkit that "
"results in class-based generic views being more extensible and flexible than "
"their function-based counterparts."
msgstr ""
"Les vues génériques fondées sur les classes ont été crées avec les mêmes "
"objectifs que celles fondées sur les fonctions, pour faciliter le "
"développement de vues. Cependant, la manière d'implémenter cette solution "
"par l'utilisation de mixins fournit un ensemble d'outils aboutissant à des "
"vues génériques fondées sur les classes bien plus souples et extensibles que "
"leur contrepartie fondées sur les fonctions."

msgid ""
"If you have tried function based generic views in the past and found them "
"lacking, you should not think of class-based generic views as a class-based "
"equivalent, but rather as a fresh approach to solving the original problems "
"that generic views were meant to solve."
msgstr ""
"Si vous avez essayé d'utiliser les vues génériques fondées sur les fonctions "
"par le passé et que vous les avez trouvées trop limitées, vous ne devriez "
"pas considérer les vues génériques fondées sur les classes comme des "
"équivalents, mais plutôt comme une nouvelle approche pour résoudre les "
"problèmes d'origine que les vues génériques étaient censées résoudre."

msgid ""
"The toolkit of base classes and mixins that Django uses to build class-based "
"generic views are built for maximum flexibility, and as such have many hooks "
"in the form of default method implementations and attributes that you are "
"unlikely to be concerned with in the simplest use cases. For example, "
"instead of limiting you to a class-based attribute for ``form_class``, the "
"implementation uses a ``get_form`` method, which calls a ``get_form_class`` "
"method, which in its default implementation returns the ``form_class`` "
"attribute of the class. This gives you several options for specifying what "
"form to use, from an attribute, to a fully dynamic, callable hook. These "
"options seem to add hollow complexity for simple situations, but without "
"them, more advanced designs would be limited."
msgstr ""
"L'ensemble des classes de base et des mixins que Django utilise pour "
"construire les vues génériques fondées sur les classes sont conçues pour une "
"souplesse maximale, et présentent ainsi de nombreux points d'accrochage sous "
"les forme d'implémentation de méthodes par défaut et d'attributs qui ne vous "
"concerneront probablement pas dans les cas d'utilisation les plus simples. "
"Par exemple, au lieu de se limiter à un attribut de classe pour "
"``form_class``, l'implémentation utilise une méthode ``get_form`` appelant à "
"son tour la méthode ``get_form_class`` qui dans son implémentation par "
"défaut renvoie l'attribut ``form_class`` de la classe. Cela vous donne "
"plusieurs options pour indiquer le formulaire à utiliser, que ce soit par un "
"attribut ou par l'appel dynamique à une méthode que l'on peut surcharger. "
"Ces options paraissent ajouter une complexité un peu absurde dans des "
"situations simples, mais sans elles, les scénarios plus compliqués seraient "
"limités."

msgid "Using class-based views"
msgstr "Utilisation des vues fondées sur les classes"

msgid ""
"At its core, a class-based view allows you to respond to different HTTP "
"request methods with different class instance methods, instead of with "
"conditionally branching code inside a single view function."
msgstr ""
"À la base, une vue fondée sur les classes permet de répondre à différentes "
"méthodes de requête HTTP par différentes méthodes d'une classe plutôt que de "
"faire appel à des branchements conditionnels dans une unique vue de type "
"fonction."

msgid ""
"So where the code to handle HTTP ``GET`` in a view function would look "
"something like::"
msgstr ""
"Alors que le code pour gérer la méthode HTTP ``GET`` dans une fonction de "
"vue ressemble à quelque chose comme cela ::"

msgid "In a class-based view, this would become::"
msgstr "Dans une vue fondée sur les classes, cela devient ::"

msgid ""
"Because Django's URL resolver expects to send the request and associated "
"arguments to a callable function, not a class, class-based views have an :"
"meth:`~django.views.generic.base.View.as_view` class method which returns a "
"function that can be called when a request arrives for a URL matching the "
"associated pattern. The function creates an instance of the class, calls :"
"meth:`~django.views.generic.base.View.setup` to initialize its attributes, "
"and then calls its :meth:`~django.views.generic.base.View.dispatch` method. "
"``dispatch`` looks at the request to determine whether it is a ``GET``, "
"``POST``, etc, and relays the request to a matching method if one is "
"defined, or raises :class:`~django.http.HttpResponseNotAllowed` if not::"
msgstr ""
"Comme le résolveur d'URL de Django est conçu pour envoyer la requête et ses "
"paramètres associés à une fonction exécutable et non pas à une classe, les "
"vues fondées sur les classes possèdent une méthode de classe :meth:`~django."
"views.generic.base.View.as_view` qui renvoie une fonction pouvant être "
"appelée lorsqu'une requête arrive avec une URL correspondant au motif "
"associé. La fonction crée une instance de la classe, appelle  :meth:`~django."
"views.generic.base.View.setup` pour initialiser ses attributs, puis appelle "
"sa méthode :meth:`~django.views.generic.base.View.dispatch`. ``dispatch`` "
"examine la requête pour déterminer s'il s'agit d'un ``GET``, d'un ``POST``, "
"etc. et relaie la requête à une méthode correspondante si elle existe, ou "
"génère l'erreur :class:`~django.http.HttpResponseNotAllowed` dans le cas "
"contraire ::"

msgid ""
"It is worth noting that what your method returns is identical to what you "
"return from a function-based view, namely some form of :class:`~django.http."
"HttpResponse`. This means that :doc:`http shortcuts </topics/http/"
"shortcuts>` or :class:`~django.template.response.TemplateResponse` objects "
"are valid to use inside a class-based view."
msgstr ""
"Il vaut la peine de relever que ce qui est renvoyé par la méthode est "
"identique à ce qui est renvoyé par une vue de type fonction, en l'occurrence "
"une instance de :class:`~django.http.HttpResponse`. Cela signifie que les :"
"doc:`raccourcis http </topics/http/shortcuts>` ou les objets :class:`~django."
"template.response.TemplateResponse` peuvent tout à fait être utilisés dans "
"une vue fondée sur les classes."

msgid ""
"While a minimal class-based view does not require any class attributes to "
"perform its job, class attributes are useful in many class-based designs, "
"and there are two ways to configure or set class attributes."
msgstr ""
"Même si une vue fondée sur les classes minimale ne nécessite aucun attribut "
"de classe pour faire son travail, les attributs de classe sont utiles dans "
"beaucoup d'architectures basées sur les classes et il existe deux façons de "
"configurer ou de définir des attributs de classe."

msgid ""
"The first is the standard Python way of subclassing and overriding "
"attributes and methods in the subclass. So that if your parent class had an "
"attribute ``greeting`` like this::"
msgstr ""
"La première est la manière standard de Python d'hériter ou de surcharger des "
"attributs et des méthodes dans les sous-classes. Ainsi si la classe parente "
"avait un attribut ``greeting`` comme ceci ::"

msgid "You can override that in a subclass::"
msgstr "Vous pouvez surcharger cela dans une sous-classe ::"

msgid ""
"Another option is to configure class attributes as keyword arguments to the :"
"meth:`~django.views.generic.base.View.as_view` call in the URLconf::"
msgstr ""
"Une autre option est de configurer des attributs de classe comme paramètres "
"nommés dans l'appel à :meth:`~django.views.generic.base.View.as_view` dans "
"la configuration d'URL ::"

msgid ""
"While your class is instantiated for each request dispatched to it, class "
"attributes set through the :meth:`~django.views.generic.base.View.as_view` "
"entry point are configured only once at the time your URLs are imported."
msgstr ""
"Alors qu'une instance de classe est créée pour chaque requête qu'elle doit "
"traiter, les attributs de classe définis par le point d'entrée :meth:"
"`~django.views.generic.base.View.as_view` ne sont configurés qu'une seule "
"fois au moment de l'importation de la configuration d'URL."

msgid "Using mixins"
msgstr "Utilisation de mixins"

msgid ""
"Mixins are a form of multiple inheritance where behaviors and attributes of "
"multiple parent classes can be combined."
msgstr ""
"Les mixins sont une forme d'héritage multiple où les comportements et les "
"attributs de plusieurs classes parentes peuvent être combinés."

msgid ""
"For example, in the generic class-based views there is a mixin called :class:"
"`~django.views.generic.base.TemplateResponseMixin` whose primary purpose is "
"to define the method :meth:`~django.views.generic.base.TemplateResponseMixin."
"render_to_response`. When combined with the behavior of the :class:`~django."
"views.generic.base.View` base class, the result is a :class:`~django.views."
"generic.base.TemplateView` class that will dispatch requests to the "
"appropriate matching methods (a behavior defined in the ``View`` base "
"class), and that has a :meth:`~django.views.generic.base."
"TemplateResponseMixin.render_to_response` method that uses a :attr:`~django."
"views.generic.base.TemplateResponseMixin.template_name` attribute to return "
"a :class:`~django.template.response.TemplateResponse` object (a behavior "
"defined in the ``TemplateResponseMixin``)."
msgstr ""
"Par exemple, dans les vues génériques fondées sur les classes, il existe un "
"mixin nommé :class:`~django.views.generic.base.TemplateResponseMixin` dont "
"le rôle principal est de définir la méthode :meth:`~django.views.generic."
"base.TemplateResponseMixin.render_to_response`. Lorsqu'il est combiné avec "
"le comportement de la classe de base :class:`~django.views.generic.base."
"View`, le résultat est une classe :class:`~django.views.generic.base."
"TemplateView` qui distribue les requêtes vers les méthodes correspondantes "
"(un comportement défini dans la classe de base ``View``), et qui possède une "
"méthode :meth:`~django.views.generic.base.TemplateResponseMixin."
"render_to_response` utilisant un attribut :attr:`~django.views.generic.base."
"TemplateResponseMixin.template_name` pour renvoyer un objet :class:`~django."
"template.response.TemplateResponse` (comportement défini dans "
"``TemplateResponseMixin``)."

msgid ""
"Mixins are an excellent way of reusing code across multiple classes, but "
"they come with some cost. The more your code is scattered among mixins, the "
"harder it will be to read a child class and know what exactly it is doing, "
"and the harder it will be to know which methods from which mixins to "
"override if you are subclassing something that has a deep inheritance tree."
msgstr ""
"Les mixins sont une très bonne façon de réutiliser du code entre plusieurs "
"classes, mais il y a aussi un revers de médaille. Plus votre code est "
"réparti entre des mixins, plus il sera difficile de lire une classe enfant "
"et de comprendre exactement ce qu'elle fait, et plus il sera difficile de "
"savoir quelle méthode de quel mixin surcharger si vous héritez d'une "
"structure avec une profonde arborescence d'héritage."

msgid ""
"Note also that you can only inherit from one generic view - that is, only "
"one parent class may inherit from :class:`~django.views.generic.base.View` "
"and the rest (if any) should be mixins. Trying to inherit from more than one "
"class that inherits from ``View`` - for example, trying to use a form at the "
"top of a list and combining :class:`~django.views.generic.edit."
"ProcessFormView` and :class:`~django.views.generic.list.ListView` - won't "
"work as expected."
msgstr ""
"Notez également que vous ne pouvez hériter que d'une vue générique, c'est-à-"
"dire qu'une seule classe parente peut hériter de :class:`~django.views."
"generic.base.View` et toutes les autres classes (le cas échéant) doivent "
"être des mixins. Si vous essayez d'hériter de plus d'une classe héritant de "
"``View``, par exemple pour utiliser un formulaire au sommet d'une liste et "
"combiner  :class:`~django.views.generic.edit.ProcessFormView` avec :class:"
"`~django.views.generic.list.ListView`, cela ne marchera pas comme espéré."

msgid "Handling forms with class-based views"
msgstr "Gestion de formulaires avec les vues fondées sur les classes"

msgid ""
"A basic function-based view that handles forms may look something like this::"
msgstr ""
"Une vue de type fonction qui gère des formulaires peut ressembler à ceci ::"

msgid "A similar class-based view might look like::"
msgstr ""
"Une vue équivalente fondée sur les classes pourrait ressembler à ceci ::"

msgid ""
"This is a minimal case, but you can see that you would then have the option "
"of customizing this view by overriding any of the class attributes, e.g. "
"``form_class``, via URLconf configuration, or subclassing and overriding one "
"or more of the methods (or both!)."
msgstr ""
"Il s'agit d'un cas minimal, mais vous pouvez voir que vous aurez ensuite "
"l'option de personnaliser cette vue en surchargeant l'un des ses attributs "
"de classe, par ex. ``form_class``, à travers la configuration d'URL ou par "
"l'héritage et la surcharge de l'une ou plusieurs de ses méthodes (les deux "
"pouvant être combinés)."

msgid "Decorating class-based views"
msgstr "Décoration des vues fondées sur les classes"

msgid ""
"The extension of class-based views isn't limited to using mixins. You can "
"also use decorators. Since class-based views aren't functions, decorating "
"them works differently depending on if you're using ``as_view()`` or "
"creating a subclass."
msgstr ""
"L’extension des vues fondées sur les classes n’est pas limitée aux mixins. "
"Il est aussi possible d’utiliser des décorateurs. Comme les vues fondées sur "
"les classes ne sont pas des fonctions, leur décoration fonctionne "
"différemment selon que vous utilisez ``as_view()`` ou que vous créez une "
"sous-classe."

msgid "Decorating in URLconf"
msgstr "Décoration dans la configuration d'URL"

msgid ""
"You can adjust class-based views by decorating the result of the :meth:"
"`~django.views.generic.base.View.as_view` method. The easiest place to do "
"this is in the URLconf where you deploy your view::"
msgstr ""
"Il est possible d'adapter les vues fondées sur les classes en décorant le "
"résultat de la méthode :meth:`~django.views.generic.base.View.as_view`. "
"L'endroit le plus commode pour le faire est la configuration d'URL dans "
"laquelle la vue est déployée :"

msgid ""
"This approach applies the decorator on a per-instance basis. If you want "
"every instance of a view to be decorated, you need to take a different "
"approach."
msgstr ""
"Cette approche applique le décorateur au niveau de l'instance. Si vous "
"souhaitez que chaque instance d'une vue soit systématiquement décorée, vous "
"devez suivre une autre approche."

msgid "Decorating the class"
msgstr "Décoration de la classe"

msgid ""
"To decorate every instance of a class-based view, you need to decorate the "
"class definition itself. To do this you apply the decorator to the :meth:"
"`~django.views.generic.base.View.dispatch` method of the class."
msgstr ""
"Pour décorer toutes les instances d'une vue fondée sur les classes, vous "
"devez décorer la définition de classe elle-même. À cet effet, appliquez le "
"décorateur à la méthode :meth:`~django.views.generic.base.View.dispatch` de "
"la classe."

msgid ""
"A method on a class isn't quite the same as a standalone function, so you "
"can't just apply a function decorator to the method -- you need to transform "
"it into a method decorator first. The ``method_decorator`` decorator "
"transforms a function decorator into a method decorator so that it can be "
"used on an instance method. For example::"
msgstr ""
"Une méthode de classe n'est pas totalement identique à une fonction "
"autonome, il n'est donc pas possible de simplement appliquer un décorateur "
"de fonction à la méthode, il faut préalablement le transformer en un "
"décorateur de méthode. Le décorateur ``method_decorator`` transforme un "
"décorateur de fonction en un décorateur de méthode afin qu'il puisse être "
"utilisé sur une méthode d'instance. Par exemple ::"

msgid ""
"Or, more succinctly, you can decorate the class instead and pass the name of "
"the method to be decorated as the keyword argument ``name``::"
msgstr ""
"Ou plus succintement, vous pouvez plutôt décorer la classe et passer le nom "
"de la méthode à décorer dans le paramètre nommé ``name``::"

msgid ""
"If you have a set of common decorators used in several places, you can "
"define a list or tuple of decorators and use this instead of invoking "
"``method_decorator()`` multiple times. These two classes are equivalent::"
msgstr ""
"Si un ensemble de décorateurs sont utilisés à plusieurs endroits, vous "
"pouvez définir une liste ou un tuple de décorateurs et l'utiliser au lieu "
"d'appeler plusieurs fois ``method_decorator()``. Ces deux classes sont "
"équivalentes ::"

msgid ""
"The decorators will process a request in the order they are passed to the "
"decorator. In the example, ``never_cache()`` will process the request before "
"``login_required()``."
msgstr ""
"Les décorateurs traitent une requête dans l'ordre où ils sont placés comme "
"décorateurs. Dans l'exemple, ``never_cache()`` traitera la requête avant "
"``login_required()``."

msgid ""
"In this example, every instance of ``ProtectedView`` will have login "
"protection. These examples use ``login_required``, however, the same "
"behavior can be obtained by using :class:`~django.contrib.auth.mixins."
"LoginRequiredMixin`."
msgstr ""
"Dans cet exemple, chaque instance de ``ProtectedView`` recevra une "
"protection de connexion. Ces exemples utilisent ``login_required``, mais le "
"même comportement peut être obtenu en utilisant :class:`~django.contrib.auth."
"mixins.LoginRequiredMixin`."

msgid ""
"``method_decorator`` passes ``*args`` and ``**kwargs`` as parameters to the "
"decorated method on the class. If your method does not accept a compatible "
"set of parameters it will raise a ``TypeError`` exception."
msgstr ""
"``method_decorator`` transmet ``*args`` et ``**kwargs`` comme paramètres à "
"la méthode décorée de la classe. Si votre méthode n'accepte pas un jeu de "
"paramètres compatible, cela générera une exception ``TypeError``."

msgid "Using mixins with class-based views"
msgstr "Utilisation de mixins avec les vues fondées sur les classes"

msgid ""
"This is an advanced topic. A working knowledge of :doc:`Django's class-based "
"views<index>` is advised before exploring these techniques."
msgstr ""
"Ceci est un sujet avancé. Nous suggérons d'avoir une bonne connaissance "
"préalable des :doc:`vues Django fondées sur les classes<index>` avant "
"d'explorer ces techniques."

msgid ""
"Django's built-in class-based views provide a lot of functionality, but some "
"of it you may want to use separately. For instance, you may want to write a "
"view that renders a template to make the HTTP response, but you can't use :"
"class:`~django.views.generic.base.TemplateView`; perhaps you need to render "
"a template only on ``POST``, with ``GET`` doing something else entirely. "
"While you could use :class:`~django.template.response.TemplateResponse` "
"directly, this will likely result in duplicate code."
msgstr ""
"Les vues fondées sur les classes intégrées dans Django fournissent de "
"nombreuses fonctionnalités, mais certaines d'entre elles pourraient être "
"utiles de manière indépendante. Par exemple, si l'on écrit une vue qui "
"utilise un gabarit pour produire une réponse HTTP, mais sans utiliser :class:"
"`~django.views.generic.base.TemplateView`; ou encore si l'on veut utiliser "
"un gabarit seulement pour une requête ``POST`` et faire quelque chose de "
"totalement différent pour les requêtes ``GET``. Même si on pourrait utiliser "
"directement :class:`~django.template.response.TemplateResponse`, on se "
"retrouverait avec pas mal de code dupliqué."

msgid ""
"For this reason, Django also provides a number of mixins that provide more "
"discrete functionality. Template rendering, for instance, is encapsulated in "
"the :class:`~django.views.generic.base.TemplateResponseMixin`. The Django "
"reference documentation contains :doc:`full documentation of all the mixins</"
"ref/class-based-views/mixins>`."
msgstr ""
"C'est pour cette raison que Django fournit aussi un certain nombre de mixins "
"englobant des fonctionnalités de manière distincte. Le rendu de gabarits, "
"par exemple, est isolé dans la classe :class:`~django.views.generic.base."
"TemplateResponseMixin`. La documentation de référence de Django contient "
"une :doc:`documentation complète de toutes les classes mixins</ref/class-"
"based-views/mixins>`."

msgid "Context and template responses"
msgstr "Contexte et réponses par gabarit"

msgid ""
"Two central mixins are provided that help in providing a consistent "
"interface to working with templates in class-based views."
msgstr ""
"Deux classes mixins centrales sont à disposition pour aider à présenter une "
"interface cohérente pour travailler avec les gabarits dans les vues fondées "
"sur les classes."

msgid ":class:`~django.views.generic.base.TemplateResponseMixin`"
msgstr ":class:`~django.views.generic.base.TemplateResponseMixin`"

msgid ""
"Every built in view which returns a :class:`~django.template.response."
"TemplateResponse` will call the :meth:`~django.views.generic.base."
"TemplateResponseMixin.render_to_response()` method that "
"``TemplateResponseMixin`` provides. Most of the time this will be called for "
"you (for instance, it is called by the ``get()`` method implemented by both :"
"class:`~django.views.generic.base.TemplateView` and :class:`~django.views."
"generic.detail.DetailView`); similarly, it's unlikely that you'll need to "
"override it, although if you want your response to return something not "
"rendered via a Django template then you'll want to do it. For an example of "
"this, see the :ref:`JSONResponseMixin example <jsonresponsemixin-example>`."
msgstr ""
"Chaque vue intégrée renvoyant une réponse :class:`~django.template.response."
"TemplateResponse` appelle la méthode :meth:`~django.views.generic.base."
"TemplateResponseMixin.render_to_response()` fournie par "
"``TemplateResponseMixin``. Dans la plupart des cas, cet appel se fait "
"automatiquement (par exemple, elle est appelée par la méthode ``get()`` "
"aussi bien de :class:`~django.views.generic.base.TemplateView` que de :class:"
"`~django.views.generic.detail.DetailView`). De même, il est peu probable que "
"vous ayez besoin de la surcharger, bien que cela peut se révéler utile si "
"vous voulez que la réponse renvoie du contenu non rendu par un gabarit "
"Django. Vous pouvez trouver un exemple d'un tel usage dans :ref:`l'exemple "
"JSONResponseMixin <jsonresponsemixin-example>`."

msgid ""
"``render_to_response()`` itself calls :meth:`~django.views.generic.base."
"TemplateResponseMixin.get_template_names`, which by default will look up :"
"attr:`~django.views.generic.base.TemplateResponseMixin.template_name` on the "
"class-based view; two other mixins (:class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin` and :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`) override this to provide more flexible "
"defaults when dealing with actual objects."
msgstr ""
"``render_to_response()`` appelle elle-même :meth:`~django.views.generic.base."
"TemplateResponseMixin.get_template_names` qui consulte l'attribut :attr:"
"`~django.views.generic.base.TemplateResponseMixin.template_name` de la vue, "
"par défaut. Deux autres mixins (:class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin` et :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`) surchargent cette méthode pour offrir "
"des valeurs par défaut plus souples lorsqu'il s'agit de manipuler des objets "
"réels."

msgid ":class:`~django.views.generic.base.ContextMixin`"
msgstr ":class:`~django.views.generic.base.ContextMixin`"

msgid ""
"Every built in view which needs context data, such as for rendering a "
"template (including ``TemplateResponseMixin`` above), should call :meth:"
"`~django.views.generic.base.ContextMixin.get_context_data()` passing any "
"data they want to ensure is in there as keyword arguments. "
"``get_context_data()`` returns a dictionary; in ``ContextMixin`` it returns "
"its keyword arguments, but it is common to override this to add more members "
"to the dictionary. You can also use the :attr:`~django.views.generic.base."
"ContextMixin.extra_context` attribute."
msgstr ""
"Chaque vue intégrée nécessitant des données de contexte, comme pour "
"effectuer le rendu d'un gabarit (y compris ``TemplateResponseMixin`` ci-"
"dessus), doit appeler :meth:`~django.views.generic.base.ContextMixin."
"get_context_data()` en transmettant sous forme de paramètres nommés les "
"données qu'elle souhaite y placer. ``get_context_data()`` renvoie un "
"dictionnaire ; dans ``ContextMixin``, elle renvoie ses paramètres nommés, "
"mais il est fréquent de surcharger cela pour ajouter davantage de contenu "
"dans ce dictionnaire. Vous pouvez également utiliser l'attribut :attr:"
"`~django.views.generic.base.ContextMixin.extra_context`."

msgid "Building up Django's generic class-based views"
msgstr "Construction des vues fondées sur les classes de Django"

msgid ""
"Let's look at how two of Django's generic class-based views are built out of "
"mixins providing discrete functionality. We'll consider :class:`~django."
"views.generic.detail.DetailView`, which renders a \"detail\" view of an "
"object, and :class:`~django.views.generic.list.ListView`, which will render "
"a list of objects, typically from a queryset, and optionally paginate them. "
"This will introduce us to four mixins which between them provide useful "
"functionality when working with either a single Django object, or multiple "
"objects."
msgstr ""
"Voyons comment deux des vues fondées sur les classes de Django sont "
"construites à partir de mixins fournissant des fonctionnalités isolées. Nous "
"examinerons :class:`~django.views.generic.detail.DetailView` qui produit une "
"vue de détail d'un objet et :class:`~django.views.generic.list.ListView` qui "
"produit une liste d'objets, généralement à partir d'un jeu de requête, avec "
"pagination facultative. Ceci nous amènera à étudier quatre mixins qui, "
"combinées entre elles, fournissent des fonctionnalités utiles lors du "
"traitement d'un objet Django unique ou d'un ensemble d'objets."

msgid ""
"There are also mixins involved in the generic edit views (:class:`~django."
"views.generic.edit.FormView`, and the model-specific views :class:`~django."
"views.generic.edit.CreateView`, :class:`~django.views.generic.edit."
"UpdateView` and :class:`~django.views.generic.edit.DeleteView`), and in the "
"date-based generic views. These are covered in the :doc:`mixin reference "
"documentation</ref/class-based-views/mixins>`."
msgstr ""
"Il existe également des classes mixins dans les vues génériques d'édition (:"
"class:`~django.views.generic.edit.FormView` et les vues spécifiques aux "
"modèles :class:`~django.views.generic.edit.CreateView`, :class:`~django."
"views.generic.edit.UpdateView` et :class:`~django.views.generic.edit."
"DeleteView`), ainsi que dans les vues génériques centrées sur les dates. Ces "
"classes sont décrites dans la :doc:`documentation de référence des mixins</"
"ref/class-based-views/mixins>`."

msgid "``DetailView``: working with a single Django object"
msgstr "``DetailView``: traitement d'un seul objet Django"

msgid ""
"To show the detail of an object, we basically need to do two things: we need "
"to look up the object and then we need to make a :class:`~django.template."
"response.TemplateResponse` with a suitable template, and that object as "
"context."
msgstr ""
"Pour afficher le détail d'un objet, il y a fondamentalement deux choses à "
"faire : récupérer l'objet, puis produire une réponse :class:`~django."
"template.response.TemplateResponse` à l'aide du gabarit adéquat, en "
"transmettant l'objet dans le contexte. "

msgid ""
"To get the object, :class:`~django.views.generic.detail.DetailView` relies "
"on :class:`~django.views.generic.detail.SingleObjectMixin`, which provides "
"a :meth:`~django.views.generic.detail.SingleObjectMixin.get_object` method "
"that figures out the object based on the URL of the request (it looks for "
"``pk`` and ``slug`` keyword arguments as declared in the URLConf, and looks "
"the object up either from the :attr:`~django.views.generic.detail."
"SingleObjectMixin.model` attribute on the view, or the :attr:`~django.views."
"generic.detail.SingleObjectMixin.queryset` attribute if that's provided). "
"``SingleObjectMixin`` also overrides :meth:`~django.views.generic.base."
"ContextMixin.get_context_data()`, which is used across all Django's built in "
"class-based views to supply context data for template renders."
msgstr ""
"Pour obtenir l'objet, :class:`~django.views.generic.detail.DetailView` se "
"base sur :class:`~django.views.generic.detail.SingleObjectMixin` qui fournit "
"une méthode :meth:`~django.views.generic.detail.SingleObjectMixin."
"get_object` qui va rechercher l'objet en se basant sur l'URL de la requête "
"(elle cherche les paramètres nommés ``pk`` et ``slug`` tels que déclarés "
"dans la configuration d'URL et sélectionne l'objet en utilisant soit "
"l'attribut :attr:`~django.views.generic.detail.SingleObjectMixin.model` de "
"la vue, soit l'attribut :attr:`~django.views.generic.detail."
"SingleObjectMixin.queryset` si celui-ci est présent). ``SingleObjectMixin`` "
"surcharge aussi :meth:`~django.views.generic.base.ContextMixin."
"get_context_data()`, qui est utilisée dans toutes les vues fondées sur les "
"classes de Django pour fournir les données de contexte servant au rendu des "
"gabarits."

msgid ""
"To then make a :class:`~django.template.response.TemplateResponse`, :class:"
"`DetailView` uses :class:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin`, which extends :class:`~django.views."
"generic.base.TemplateResponseMixin`, overriding :meth:`~django.views.generic."
"base.TemplateResponseMixin.get_template_names()` as discussed above. It "
"actually provides a fairly sophisticated set of options, but the main one "
"that most people are going to use is ``<app_label>/<model_name>_detail."
"html``. The ``_detail`` part can be changed by setting :attr:`~django.views."
"generic.detail.SingleObjectTemplateResponseMixin.template_name_suffix` on a "
"subclass to something else. (For instance, the :doc:`generic edit "
"views<generic-editing>` use ``_form`` for create and update views, and "
"``_confirm_delete`` for delete views.)"
msgstr ""
"Pour produire la réponse :class:`~django.template.response."
"TemplateResponse`, :class:`DetailView` utilise :class:`~django.views.generic."
"detail.SingleObjectTemplateResponseMixin`, qui étend :class:`~django.views."
"generic.base.TemplateResponseMixin`, surchargeant :meth:`~django.views."
"generic.base.TemplateResponseMixin.get_template_names()` comme expliqué plus "
"haut. Il fournit en réalité un bon nombre d'options élaborées, mais le nom "
"que la plupart des gens vont utiliser est ``<étiquette_application>/"
"<nom_modèle>_detail.html``. La partie ``_detail`` peut être modifiée en "
"définissant un attribut :attr:`~django.views.generic.detail."
"SingleObjectTemplateResponseMixin.template_name_suffix` différent dans une "
"sous-classe (par exemple, les :doc:`vues génériques d'édition<generic-"
"editing>` emploient ``_form`` pour les vues de création et de mise à jour et "
"``_confirm_delete`` pour les vues de suppression)."

msgid "``ListView``: working with many Django objects"
msgstr "``ListView``: traitement de plusieurs objets Django"

msgid ""
"Lists of objects follow roughly the same pattern: we need a (possibly "
"paginated) list of objects, typically a :class:`~django.db.models.query."
"QuerySet`, and then we need to make a :class:`~django.template.response."
"TemplateResponse` with a suitable template using that list of objects."
msgstr ""
"Les listes d'objets suivent grosso modo le même modèle : récupérer d'abord "
"une liste d'objets (potentiellement paginés), typiquement un objet :class:"
"`~django.db.models.query.QuerySet`, puis produire une réponse :class:"
"`~django.template.response.TemplateResponse` avec le gabarit adéquat pour "
"exploiter cette liste d'objets."

msgid ""
"To get the objects, :class:`~django.views.generic.list.ListView` uses :class:"
"`~django.views.generic.list.MultipleObjectMixin`, which provides both :meth:"
"`~django.views.generic.list.MultipleObjectMixin.get_queryset` and :meth:"
"`~django.views.generic.list.MultipleObjectMixin.paginate_queryset`. Unlike "
"with :class:`~django.views.generic.detail.SingleObjectMixin`, there's no "
"need to key off parts of the URL to figure out the queryset to work with, so "
"the default uses the :attr:`~django.views.generic.list.MultipleObjectMixin."
"queryset` or :attr:`~django.views.generic.list.MultipleObjectMixin.model` "
"attribute on the view class. A common reason to override :meth:`~django."
"views.generic.list.MultipleObjectMixin.get_queryset` here would be to "
"dynamically vary the objects, such as depending on the current user or to "
"exclude posts in the future for a blog."
msgstr ""
"Pour obtenir les objets, :class:`~django.views.generic.list.ListView` "
"utilise :class:`~django.views.generic.list.MultipleObjectMixin` qui offre à "
"la fois :meth:`~django.views.generic.list.MultipleObjectMixin.get_queryset` "
"et :meth:`~django.views.generic.list.MultipleObjectMixin.paginate_queryset`. "
"Au contraire de :class:`~django.views.generic.detail.SingleObjectMixin`, il "
"n'est pas nécessaire d'identifier des éléments d'URL pour déterminer le jeu "
"de requête à traiter ; le comportement par défaut est d'utiliser l'attribut :"
"attr:`~django.views.generic.list.MultipleObjectMixin.queryset` ou :attr:"
"`~django.views.generic.list.MultipleObjectMixin.model` de la classe de vue. "
"Une raison fréquente de vouloir surcharger ici :meth:`~django.views.generic."
"list.MultipleObjectMixin.get_queryset` est d'adapter la liste d'objets de "
"manière dynamique, par exemple en fonction de l'utilisateur actuel ou pour "
"exclure des articles dont la date est dans le futur dans un blog."

msgid ""
":class:`~django.views.generic.list.MultipleObjectMixin` also overrides :meth:"
"`~django.views.generic.base.ContextMixin.get_context_data()` to include "
"appropriate context variables for pagination (providing dummies if "
"pagination is disabled). It relies on ``object_list`` being passed in as a "
"keyword argument, which :class:`ListView` arranges for it."
msgstr ""
":class:`~django.views.generic.list.MultipleObjectMixin` surcharge aussi :"
"meth:`~django.views.generic.base.ContextMixin.get_context_data()` pour "
"inclure les variables de contexte appropriées à la pagination (indiquant des "
"valeurs vides si la pagination est désactivée). Elle compte sur la présence "
"de ``object_list`` dans les paramètres nommés transmis, ce dont se charge  :"
"class:`ListView`."

msgid ""
"To make a :class:`~django.template.response.TemplateResponse`, :class:"
"`ListView` then uses :class:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin`; as with :class:`~django.views.generic."
"detail.SingleObjectTemplateResponseMixin` above, this overrides "
"``get_template_names()`` to provide :meth:`a range of options <django.views."
"generic.list.MultipleObjectTemplateResponseMixin>`, with the most commonly-"
"used being ``<app_label>/<model_name>_list.html``, with the ``_list`` part "
"again being taken from the :attr:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin.template_name_suffix` attribute. (The "
"date based generic views use suffixes such as ``_archive``, "
"``_archive_year`` and so on to use different templates for the various "
"specialized date-based list views.)"
msgstr ""
"Pour produire une réponse :class:`~django.template.response."
"TemplateResponse`, :class:`ListView` utilise ensuite :class:`~django.views."
"generic.list.MultipleObjectTemplateResponseMixin`; comme pour :class:"
"`~django.views.generic.detail.SingleObjectTemplateResponseMixin` ci-dessus, "
"``get_template_names()`` est surchargée pour fournir une :meth:`série "
"d'options <django.views.generic.list.MultipleObjectTemplateResponseMixin>` "
"dont la plus utilisée est le nom de gabarit ``<étiquette_application>/"
"<nom_modèle>_list.html`` où la partie ``_list`` provient aussi de "
"l'attribut :attr:`~django.views.generic.list."
"MultipleObjectTemplateResponseMixin.template_name_suffix` (les vues "
"génériques centrées sur les dates utilisent des suffixes tels que "
"``_archive``, ``_archive_year``, etc. pour utiliser différents gabarits "
"correspondant aux différentes vues de listes spécialisées pour les dates)."

msgid "Using Django's class-based view mixins"
msgstr "Utilisation des mixins de vues fondées sur les classes de Django"

msgid ""
"Now we've seen how Django's generic class-based views use the provided "
"mixins, let's look at other ways we can combine them. We're still going to "
"be combining them with either built-in class-based views, or other generic "
"class-based views, but there are a range of rarer problems you can solve "
"than are provided for by Django out of the box."
msgstr ""
"Maintenant que nous avons vu comment les classes génériques fondées sur les "
"classes de Django utilisent les mixins à disposition, examinons d'autres "
"façons de les combiner. Nous allons toujours les combiner avec d'autres vues "
"intégrées ou génériques fondées sur les classes, mais les cas d'utilisation "
"auxquels Django répond ne recouvrent pas toutes les situations plus rares "
"auxquelles on peut être confronté. "

msgid ""
"Not all mixins can be used together, and not all generic class based views "
"can be used with all other mixins. Here we present a few examples that do "
"work; if you want to bring together other functionality then you'll have to "
"consider interactions between attributes and methods that overlap between "
"the different classes you're using, and how `method resolution order`_ will "
"affect which versions of the methods will be called in what order."
msgstr ""
"On ne peut pas combiner tous les mixins, ni combiner n'importe quel mixin "
"avec toutes les vues génériques fondées sur les classes. Nous présentons ici "
"quelques exemples qui fonctionnent ; si vous souhaitez construire d'autres "
"fonctionnalités, vous devrez étudier les interactions entre les attributs et "
"les méthodes qui se chevauchent entre les différentes classes utilisées, "
"ainsi que la façon dont `l'ordre de résolution des méthodes`_ affecte la "
"version des méthodes appelée et l'ordre de ces appels."

msgid ""
"The reference documentation for Django's :doc:`class-based views</ref/class-"
"based-views/index>` and :doc:`class-based view mixins</ref/class-based-views/"
"mixins>` will help you in understanding which attributes and methods are "
"likely to cause conflict between different classes and mixins."
msgstr ""
"La documentation de référence des  :doc:`vues fondées sur les classes</ref/"
"class-based-views/index>` et des  :doc:`mixins de vues fondées sur les "
"classes</ref/class-based-views/mixins>` de Django vous aidera à comprendre "
"quels attributs et méthodes peuvent être la source de conflits entre les "
"différentes classes et mixins."

msgid ""
"If in doubt, it's often better to back off and base your work on :class:"
"`View` or :class:`TemplateView`, perhaps with :class:`~django.views.generic."
"detail.SingleObjectMixin` and :class:`~django.views.generic.list."
"MultipleObjectMixin`. Although you will probably end up writing more code, "
"it is more likely to be clearly understandable to someone else coming to it "
"later, and with fewer interactions to worry about you will save yourself "
"some thinking. (Of course, you can always dip into Django's implementation "
"of the generic class-based views for inspiration on how to tackle problems.)"
msgstr ""
"Dans le doute, il est souvent préférable de simplifier les choses en se "
"basant sur :class:`View` ou :class:`TemplateView`, peut-être avec :class:"
"`~django.views.generic.detail.SingleObjectMixin` ou :class:`~django.views."
"generic.list.MultipleObjectMixin`. Même si vous devez finalement écrire un "
"peu plus de code, il sera probablement plus compréhensible pour quelqu'un "
"devant s'y atteler plus tard, et en réduisant les interactions à surveiller, "
"vous vous économiserez un peu de temps de réflexion (il est bien sûr "
"toujours possible de se plonger dans l'implémentation de Django des vues "
"génériques fondées sur les classes pour y chercher de l'inspiration sur la "
"façon de traiter les problèmes)."

msgid "Using ``SingleObjectMixin`` with View"
msgstr "Utilisation de ``SingleObjectMixin`` avec ``View``"

msgid ""
"If we want to write a class-based view that responds only to ``POST``, we'll "
"subclass :class:`~django.views.generic.base.View` and write a ``post()`` "
"method in the subclass. However if we want our processing to work on a "
"particular object, identified from the URL, we'll want the functionality "
"provided by :class:`~django.views.generic.detail.SingleObjectMixin`."
msgstr ""
"Si nous voulons écrire une classe de vue ne répondant qu'aux requêtes "
"``POST``, nous héritons de :class:`~django.views.generic.base.View` et "
"écrivons une méthode ``post()`` dans la sous-classe. Cependant, si le "
"traitement doit porter sur un objet particulier identifié par l'URL, il est "
"souhaitable de profiter de la fonctionnalité offerte par :class:`~django."
"views.generic.detail.SingleObjectMixin`."

msgid ""
"We'll demonstrate this with the ``Author`` model we used in the :doc:"
"`generic class-based views introduction<generic-display>`."
msgstr ""
"Nous allons démontrer cela avec le modèle ``Author`` que nous avons utilisé "
"dans :doc:`l'introduction aux vues génériques basées sur les classes "
"<generic-display>`."

msgid ""
"In practice you'd probably want to record the interest in a key-value store "
"rather than in a relational database, so we've left that bit out. The only "
"bit of the view that needs to worry about using :class:`~django.views."
"generic.detail.SingleObjectMixin` is where we want to look up the author "
"we're interested in, which it does with a call to ``self.get_object()``. "
"Everything else is taken care of for us by the mixin."
msgstr ""
"En pratique, l'intérêt devrait probablement être enregistré dans un stockage "
"clé-valeur plutôt que dans une base de données relationnelle, nous avons "
"donc laissé cet aspect de côté. La seule partie de la vue qui peut profiter "
"de l'utilisation de :class:`~django.views.generic.detail.SingleObjectMixin` "
"est l'endroit où il s'agit de récupérer l'auteur concerné par l'intérêt, ce "
"qui est fait en appelant ``self.get_object()``. Tout le reste est pris en "
"charge pour nous par le mixin."

msgid "We can hook this into our URLs easily enough:"
msgstr "Nous pouvons assez facilement brancher cette vue dans nos URL :"

msgid ""
"Note the ``pk`` named group, which :meth:`~django.views.generic.detail."
"SingleObjectMixin.get_object` uses to look up the ``Author`` instance. You "
"could also use a slug, or any of the other features of :class:`~django.views."
"generic.detail.SingleObjectMixin`."
msgstr ""
"Remarquez le groupe nommé ``pk`` qui sera utilisé par :meth:`~django.views."
"generic.detail.SingleObjectMixin.get_object` pour rechercher l'instance "
"``Author``. Il est aussi possible d'utiliser un « slug » ou toute autre "
"fonctionnalité de :class:`~django.views.generic.detail.SingleObjectMixin`."

msgid "Using ``SingleObjectMixin`` with ``ListView``"
msgstr "Utilisation de ``SingleObjectMixin`` avec ``ListView``"

msgid ""
":class:`~django.views.generic.list.ListView` provides built-in pagination, "
"but you might want to paginate a list of objects that are all linked (by a "
"foreign key) to another object. In our publishing example, you might want to "
"paginate through all the books by a particular publisher."
msgstr ""
":class:`~django.views.generic.list.ListView` intègre la pagination, mais il "
"peut être par exemple souhatiable de paginer une liste d'objets qui sont "
"tous liés (par clé étrangère) à un autre objet. Dans notre exemple de "
"publication, on pourrait vouloir paginer tous les livres d'un éditeur "
"particulier."

msgid ""
"One way to do this is to combine :class:`ListView` with :class:`~django."
"views.generic.detail.SingleObjectMixin`, so that the queryset for the "
"paginated list of books can hang off the publisher found as the single "
"object. In order to do this, we need to have two different querysets:"
msgstr ""
"Une façon de faire cela serait de combiner :class:`ListView` avec :class:"
"`~django.views.generic.detail.SingleObjectMixin`, afin que le jeu de requête "
"de la liste de livres paginée puisse dépendre de l'éditeur trouvé comme "
"objet unique. Afin de faire cela, il est nécessaire d'avoir deux jeux de "
"requête différents :"

msgid ""
"``Book`` queryset for use by :class:`~django.views.generic.list.ListView`"
msgstr ""
"Le jeu de requête ``Book`` utilisé par :class:`~django.views.generic.list."
"ListView`"

msgid ""
"Since we have access to the ``Publisher`` whose books we want to list, we "
"override ``get_queryset()`` and use the ``Publisher``’s :ref:`reverse "
"foreign key manager<backwards-related-objects>`."
msgstr ""
"Comme nous avons accès à l'éditeur ``Publisher`` des livres que nous "
"souhaitons afficher, nous surchargeons ``get_queryset()`` et utilisons le :"
"ref:`gestionnaire inverse de clé étrangère<backwards-related-objects>` de "
"l'objet ``Publisher``."

msgid ""
"``Publisher`` queryset for use in :meth:`~django.views.generic.detail."
"SingleObjectMixin.get_object()`"
msgstr ""
"Le jeu de requête ``Publisher`` utilisé par :meth:`~django.views.generic."
"detail.SingleObjectMixin.get_object()`"

msgid ""
"We'll rely on the default implementation of ``get_object()`` to fetch the "
"correct ``Publisher`` object. However, we need to explicitly pass a "
"``queryset`` argument because otherwise the default implementation of "
"``get_object()`` would call ``get_queryset()`` which we have overridden to "
"return ``Book`` objects instead of ``Publisher`` ones."
msgstr ""
"Nous comptons sur l'implémentation par défaut de ``get_object()`` pour "
"récupérer le bon objet ``Publisher``. Cependant, nous devons explicitement "
"transmettre un paramètre ``queryset`` car sinon, l'implémentation par défaut "
"de ``get_object()``  appellerait ``get_queryset()`` que nous avons "
"surchargée pour renvoyer des objets ``Book`` au lieu d'objets ``Publisher``."

msgid ""
"We have to think carefully about ``get_context_data()``. Since both :class:"
"`~django.views.generic.detail.SingleObjectMixin` and :class:`ListView` will "
"put things in the context data under the value of ``context_object_name`` if "
"it's set, we'll instead explicitly ensure the ``Publisher`` is in the "
"context data. :class:`ListView` will add in the suitable ``page_obj`` and "
"``paginator`` for us providing we remember to call ``super()``."
msgstr ""
"Il faut être prudent avec ``get_context_data()``. Comme les deux classes :"
"class:`~django.views.generic.detail.SingleObjectMixin` et :class:`ListView` "
"vont placer des éléments dans les données de contexte sous la valeur "
"``context_object_name``, si elle est définie, nous allons plutôt nous "
"assurer de manière explicite que l'objet ``Publisher`` se trouve bien dans "
"les données de contexte. :class:`ListView` se chargera d'ajouter les "
"contenus ``page_obj`` et ``paginator`` adéquats pour autant que nous "
"n'oubliions pas d'appeler ``super()``."

msgid "Now we can write a new ``PublisherDetailView``::"
msgstr ""
"Nous pouvons maintenant écrire une nouvelle vue ``PublisherDetailView``::"

msgid ""
"Notice how we set ``self.object`` within ``get()`` so we can use it again "
"later in ``get_context_data()`` and ``get_queryset()``. If you don't set "
"``template_name``, the template will default to the normal :class:`ListView` "
"choice, which in this case would be ``\"books/book_list.html\"`` because "
"it's a list of books; :class:`ListView` knows nothing about :class:`~django."
"views.generic.detail.SingleObjectMixin`, so it doesn't have any clue this "
"view is anything to do with a ``Publisher``."
msgstr ""
"Remarquez notre manière de définir ``self.object`` dans ``get()`` afin que "
"nous puissions ensuite l'utiliser dans ``get_context_data()`` et "
"``get_queryset()``. Si vous ne définissez pas ``template_name``, le nom du "
"gabarit prendra la valeur par défaut choisie par :class:`ListView`, ce qui "
"donnera dans ce cas ``\"books/book_list.html\"`` car il s'agit d'une liste "
"de livres. :class:`ListView` n'a pas conscience de la présence de :class:"
"`~django.views.generic.detail.SingleObjectMixin`, elle ne sait donc pas du "
"tout que cette vue a quelque chose à voir avec un objet ``Publisher``."

msgid ""
"The ``paginate_by`` is deliberately small in the example so you don't have "
"to create lots of books to see the pagination working! Here's the template "
"you'd want to use:"
msgstr ""
"Nous avons délibérément défini ``paginate_by`` à un petit nombre dans "
"l'exemple afin que vous n'ayez pas à créer beaucoup de livres pour voir la "
"pagination à l'œuvre ! Voici le gabarit que vous pourriez utiliser :"

msgid "Avoid anything more complex"
msgstr "Risque de trop grande complexité"

msgid ""
"Generally you can use :class:`~django.views.generic.base."
"TemplateResponseMixin` and :class:`~django.views.generic.detail."
"SingleObjectMixin` when you need their functionality. As shown above, with a "
"bit of care you can even combine ``SingleObjectMixin`` with :class:`~django."
"views.generic.list.ListView`. However things get increasingly complex as you "
"try to do so, and a good rule of thumb is:"
msgstr ""
"Généralement, il est possible d'utiliser :class:`~django.views.generic.base."
"TemplateResponseMixin` et :class:`~django.views.generic.detail."
"SingleObjectMixin` lorsque leurs fonctionnalités sont nécessaires. Comme "
"montré plus haut, en prenant certaines précautions, on peut même combiner "
"``SingleObjectMixin`` avec :class:`~django.views.generic.list.ListView`. "
"Cependant, les choses deviennent de plus en plus complexes avec ces "
"combinaisons ; voici une bonne règle générale :"

msgid ""
"Each of your views should use only mixins or views from one of the groups of "
"generic class-based views: :doc:`detail, list<generic-display>`, :doc:"
"`editing<generic-editing>` and date. For example it's fine to combine :class:"
"`TemplateView` (built in view) with :class:`~django.views.generic.list."
"MultipleObjectMixin` (generic list), but you're likely to have problems "
"combining ``SingleObjectMixin`` (generic detail) with "
"``MultipleObjectMixin`` (generic list)."
msgstr ""
"Chacune de vos vues ne devrait utiliser que des mixins ou des vues en "
"provenance de l'un des groupes de vues génériques fondées sur les classes : :"
"doc:`détail, liste<generic-display>`, :doc:`édition<generic-editing>` et "
"date. Par exemple, il est convenable de combiner :class:`TemplateView` (vue "
"intégrée) avec :class:`~django.views.generic.list.MultipleObjectMixin` "
"(liste générique), mais vous rencontrerez sûrement des problèmes si vous "
"combinez ``SingleObjectMixin`` (détail générique) avec "
"``MultipleObjectMixin`` (liste générique)."

msgid ""
"To show what happens when you try to get more sophisticated, we show an "
"example that sacrifices readability and maintainability when there is a "
"simpler solution. First, let's look at a naive attempt to combine :class:"
"`~django.views.generic.detail.DetailView` with :class:`~django.views.generic."
"edit.FormMixin` to enable us to ``POST`` a Django :class:`~django.forms."
"Form` to the same URL as we're displaying an object using :class:"
"`DetailView`."
msgstr ""
"Pour montrer ce qui arrive quand on essaie de trop compliquer, nous "
"présentons un exemple qui sacrifie la lisibilité et la maintenabilité alors "
"qu'il existe une solution plus simple. Examinons d'abord une tentative naïve "
"de combiner :class:`~django.views.generic.detail.DetailView` avec :class:"
"`~django.views.generic.edit.FormMixin` pour permettre l'envoi ``POST`` par "
"un formulaire :class:`~django.forms.Form` Django vers la même URL qui est "
"utilisée pour afficher un objet avec :class:`DetailView`."

msgid "Using ``FormMixin`` with ``DetailView``"
msgstr "Utilisation de ``FormMixin`` avec ``DetailView``"

msgid ""
"Think back to our earlier example of using :class:`View` and :class:`~django."
"views.generic.detail.SingleObjectMixin` together. We were recording a user's "
"interest in a particular author; say now that we want to let them leave a "
"message saying why they like them. Again, let's assume we're not going to "
"store this in a relational database but instead in something more esoteric "
"that we won't worry about here."
msgstr ""
"Rappelez-vous notre exemple précédent qui combinait :class:`View` et :class:"
"`~django.views.generic.detail.SingleObjectMixin`. Nous enregistrions "
"l'intérêt d'un utilisateur pour un auteur particulier. Admettons que nous "
"voulions maintenant donner la possibilité d'écrire un message motivant leur "
"intérêt. Nous partons encore une fois du principe que nous ne stockerons pas "
"cela dans une base de données relationnelle, mais plutôt dans quelque chose "
"de plus exotique dont nous ne nous soucierons pas dans cet exemple."

msgid ""
"At this point it's natural to reach for a :class:`~django.forms.Form` to "
"encapsulate the information sent from the user's browser to Django. Say also "
"that we're heavily invested in `REST`_, so we want to use the same URL for "
"displaying the author as for capturing the message from the user. Let's "
"rewrite our ``AuthorDetailView`` to do that."
msgstr ""
"À ce stade, il est naturel de faire appel à un formulaire :class:`~django."
"forms.Form` pour englober les informations envoyées par le navigateur de "
"l'utilisateur vers Django. En admettant que nous adhérons aussi aux "
"principes de `REST`_, nous aimerions utiliser la même URL pour l'affichage "
"de l'auteur que pour la capture du message en provenance de l'utilisateur. "
"Réécrivons notre vue ``AuthorDetailView`` dans cette optique."

msgid ""
"We'll keep the ``GET`` handling from :class:`DetailView`, although we'll "
"have to add a :class:`~django.forms.Form` into the context data so we can "
"render it in the template. We'll also want to pull in form processing from :"
"class:`~django.views.generic.edit.FormMixin`, and write a bit of code so "
"that on ``POST`` the form gets called appropriately."
msgstr ""
"Nous conserverons le traitement ``GET`` de la classe :class:`DetailView`, "
"même s'il faudra rajouter un formulaire :class:`~django.forms.Form` dans les "
"données de contexte pour pouvoir l'afficher dans le gabarit. Nous allons "
"aussi profiter du traitement de formulaire de :class:`~django.views.generic."
"edit.FormMixin` et écrire un peu de code afin qu'en cas d'envoi ``POST``, le "
"formulaire soit instancié de manière appropriée."

msgid ""
"We use :class:`~django.views.generic.edit.FormMixin` and implement "
"``post()`` ourselves rather than try to mix :class:`DetailView` with :class:"
"`FormView` (which provides a suitable ``post()`` already) because both of "
"the views implement ``get()``, and things would get much more confusing."
msgstr ""
"Nous utilisons :class:`~django.views.generic.edit.FormMixin` et implémentons "
"nous-même la méthode ``post()`` plutôt que d'essayer de mélanger :class:"
"`DetailView` avec :class:`FormView` (qui fournit déjà une méthode ``post()`` "
"exploitable), parce que ces deux vues implémentent ``get()`` et que cela "
"risquerait d'ajouter de la confusion."

msgid "Our new ``AuthorDetailView`` looks like this::"
msgstr "Voici à quoi ressemble notre nouvelle vue ``AuthorDetailView``::"

msgid ""
"``get_success_url()`` provides somewhere to redirect to, which gets used in "
"the default implementation of ``form_valid()``. We have to provide our own "
"``post()`` as noted earlier."
msgstr ""
"``get_success_url()`` sert à indiquer une destination de redirection, ce qui "
"est utilisé dans l'implémentation par défaut de ``form_valid()``. Nous "
"devons fournir notre propre méthode ``post()``, comme expliqué précédemment."

msgid "A better solution"
msgstr "Une meilleure solution"

msgid ""
"The number of subtle interactions between :class:`~django.views.generic.edit."
"FormMixin` and :class:`DetailView` is already testing our ability to manage "
"things. It's unlikely you'd want to write this kind of class yourself."
msgstr ""
"Le nombre d'interactions subtiles entre :class:`~django.views.generic.edit."
"FormMixin` et :class:`DetailView` éprouve déjà nos capacités conceptuelles. "
"Il est improbable que vous ayez envie d'écrire vous-même ce genre de classe."

msgid ""
"In this case, you could write the ``post()`` method yourself, keeping :class:"
"`DetailView` as the only generic functionality, although writing :class:"
"`~django.forms.Form` handling code involves a lot of duplication."
msgstr ""
"Dans ce cas, vous pourriez écrire vous-même la méthode ``post()``, en "
"conservant :class:`DetailView` comme seule fonctionnalité générique, même si "
"l'écriture du code de gestion des formulaires implique beaucoup de "
"duplication."

msgid ""
"Alternatively, it would still be less work than the above approach to have a "
"separate view for processing the form, which could use :class:`~django.views."
"generic.edit.FormView` distinct from :class:`DetailView` without concerns."
msgstr ""
"Sinon, une approche certainement plus économique que ci-dessus serait "
"d'avoir une vue séparée pour le traitement du formulaire, ce qui permettrait "
"d'utiliser sans problème :class:`~django.views.generic.edit.FormView` "
"séparément de :class:`DetailView`."

msgid "An alternative better solution"
msgstr "Une meilleure solution alternative"

msgid ""
"What we're really trying to do here is to use two different class based "
"views from the same URL. So why not do just that? We have a very clear "
"division here: ``GET`` requests should get the :class:`DetailView` (with "
"the :class:`~django.forms.Form` added to the context data), and ``POST`` "
"requests should get the :class:`FormView`. Let's set up those views first."
msgstr ""
"En réalité, ce que nous essayons de faire ici est d'utiliser deux vues "
"classes différentes pour la même URL. Pourquoi donc ne pas simplement faire "
"cela ? La division est ici très claire : les requêtes ``GET`` devraient "
"aboutir à la vue :class:`DetailView` (avec en plus le formulaire dans les "
"données de contexte) et les requêtes ``POST`` à la vue :class:`FormView`.  "
"Mettons d'abord en place ces deux vues."

msgid ""
"The ``AuthorDetailView`` view is almost the same as :ref:`when we first "
"introduced AuthorDetailView<generic-views-extra-work>`; we have to write our "
"own ``get_context_data()`` to make the ``AuthorInterestForm`` available to "
"the template. We'll skip the ``get_object()`` override from before for "
"clarity::"
msgstr ""
"La vue ``AuthorDetailView`` est presque la même que :ref:`celle que nous "
"avons présentée en introduction<generic-views-extra-work>`. Nous devons "
"écrire notre propre méthode ``get_context_data()`` pour mettre à disposition "
"``AuthorInterestForm`` dans le gabarit. Nous omettons la surcharge de "
"``get_object()`` de la version précédente par souci de clarté ::"

msgid ""
"Then the ``AuthorInterestFormView`` is a :class:`FormView`, but we have to "
"bring in :class:`~django.views.generic.detail.SingleObjectMixin` so we can "
"find the author we're talking about, and we have to remember to set "
"``template_name`` to ensure that form errors will render the same template "
"as ``AuthorDetailView`` is using on ``GET``::"
msgstr ""
"Puis pour ``AuthorInterestFormView``, il s'agit d'une sous-classe de :class:"
"`FormView`, mais nous devons y adjoindre :class:`~django.views.generic."
"detail.SingleObjectMixin` pour pouvoir obtenir l'auteur concerné par "
"l'action en cours et ne pas oublier de définir ``template_name`` pour "
"s'assurer que les erreurs de formulaires soient affichées dans le même "
"gabarit que ``AuthorDetailView`` utilise lors de la requête ``GET``::"

msgid ""
"Finally we bring this together in a new ``AuthorView`` view. We already know "
"that calling :meth:`~django.views.generic.base.View.as_view()` on a class-"
"based view gives us something that behaves exactly like a function based "
"view, so we can do that at the point we choose between the two subviews."
msgstr ""
"Pour terminer, nous lions le tout en créant une nouvelle vue ``AuthorView``. "
"Nous savons déjà que l'appel à :meth:`~django.views.generic.base.View."
"as_view()` sur une vue fondée sur les classes nous renvoie un objet se "
"comportant exactement comme une vue de type fonction. Nous pouvons donc "
"effectuer cet appel au moment où il faut choisir entre les deux « sous-"
"vues »."

msgid ""
"You can pass through keyword arguments to :meth:`~django.views.generic.base."
"View.as_view()` in the same way you would in your URLconf, such as if you "
"wanted the ``AuthorInterestFormView`` behavior to also appear at another URL "
"but using a different template::"
msgstr ""
"Vous pouvez transmettre des paramètres nommés à :meth:`~django.views.generic."
"base.View.as_view()` comme vous le feriez dans la configuration d'URL, par "
"exemple si vous vouliez que le comportement de ``AuthorInterestFormView`` "
"puisse aussi être utilisé avec une autre URL mais en affichant un gabarit "
"différent ::"

msgid ""
"This approach can also be used with any other generic class-based views or "
"your own class-based views inheriting directly from :class:`View` or :class:"
"`TemplateView`, as it keeps the different views as separate as possible."
msgstr ""
"Cette approche peut également être employée avec toute autre vue fondée sur "
"les classes, générique ou créée par vos soins, héritant directement de :"
"class:`View` ou de :class:`TemplateView`, car elle conserve les différentes "
"vues aussi distinctes que possible."

msgid "More than just HTML"
msgstr "Plus que du simple code HTML"

msgid ""
"Where class-based views shine is when you want to do the same thing many "
"times. Suppose you're writing an API, and every view should return JSON "
"instead of rendered HTML."
msgstr ""
"Les vues fondées sur les classes se révèlent particulièrement utiles au "
"moment où l'on a besoin de répéter plusieurs fois un processus semblable. "
"Imaginez qu'il faille écrire une API et que chaque vue doive renvoyer du "
"JSON au lieu de produire une page HTML."

msgid ""
"We can create a mixin class to use in all of our views, handling the "
"conversion to JSON once."
msgstr ""
"Il est alors possible de créer une classe mixin afin de l'utiliser dans "
"chaque vue, gérant ainsi à un seul endroit la conversion vers le format JSON."

msgid "For example, a JSON mixin might look something like this::"
msgstr "Par exemple, une classe mixin pour JSON pourrait ressembler à ceci ::"

msgid ""
"Check out the :doc:`/topics/serialization` documentation for more "
"information on how to correctly transform Django models and querysets into "
"JSON."
msgstr ""
"Consultez la documentation :doc:`/topics/serialization` pour plus "
"d'informations sur la façon de transformer correctement des modèles Django "
"et des jeux de requête au format JSON."

msgid ""
"This mixin provides a ``render_to_json_response()`` method with the same "
"signature as :func:`~django.views.generic.base.TemplateResponseMixin."
"render_to_response()`. To use it, we need to mix it into a ``TemplateView`` "
"for example, and override ``render_to_response()`` to call "
"``render_to_json_response()`` instead::"
msgstr ""
"Ce mixin fournit une méthode ``render_to_json_response()`` ayant la même "
"signature que :func:`~django.views.generic.base.TemplateResponseMixin."
"render_to_response()`. Pour l'utiliser, nous devons la combiner par exemple "
"à une classe ``TemplateView`` et surcharger ``render_to_response()`` afin "
"d'appeler ``render_to_json_response()`` à la place ::"

msgid ""
"Equally we could use our mixin with one of the generic views. We can make "
"our own version of :class:`~django.views.generic.detail.DetailView` by "
"mixing ``JSONResponseMixin`` with the :class:`~django.views.generic.detail."
"BaseDetailView` -- (the :class:`~django.views.generic.detail.DetailView` "
"before template rendering behavior has been mixed in)::"
msgstr ""
"Il serait aussi possible d'utiliser cette classe mixin avec l'une des vues "
"génériques. On peut composer sa propre version de :class:`~django.views."
"generic.detail.DetailView` en combinant ``JSONResponseMixin`` avec :class:"
"`~django.views.generic.detail.BaseDetailView` (celle-ci contenant le "
"comportement de :class:`~django.views.generic.detail.DetailView` avant le "
"rendu du gabarit) ::"

msgid ""
"This view can then be deployed in the same way as any other :class:`~django."
"views.generic.detail.DetailView`, with exactly the same behavior -- except "
"for the format of the response."
msgstr ""
"Cette vue peut ensuite être déployée de la même façon que pour n'importe "
"quelle vue :class:`~django.views.generic.detail.DetailView`, reproduisant le "
"même comportement à l'exception du format de la réponse."

msgid ""
"If you want to be really adventurous, you could even mix a :class:`~django."
"views.generic.detail.DetailView` subclass that is able to return *both* HTML "
"and JSON content, depending on some property of the HTTP request, such as a "
"query argument or an HTTP header. Mix in both the ``JSONResponseMixin`` and "
"a :class:`~django.views.generic.detail.SingleObjectTemplateResponseMixin`, "
"and override the implementation of :func:`~django.views.generic.base."
"TemplateResponseMixin.render_to_response()` to defer to the appropriate "
"rendering method depending on the type of response that the user requested::"
msgstr ""
"Si vous avez de réels goûts d'aventure, vous pourriez même tenter de "
"combiner avec une sous-classe de   :class:`~django.views.generic.detail."
"DetailView` capable de renvoyer *à la fois* du contenu HTML et JSON en "
"fonction d'une propriété de la requête HTTP, telle qu'un paramètre de "
"requête ou un en-tête HTTP. Combinez ``JSONResponseMixin`` avec :class:"
"`~django.views.generic.detail.SingleObjectTemplateResponseMixin` et "
"surchargez l'implémentation de :func:`~django.views.generic.base."
"TemplateResponseMixin.render_to_response()` pour déléguer le rendu à la "
"méthode appropriée en fonction du type de réponse demandée par "
"l'utilisateur ::"

msgid ""
"Because of the way that Python resolves method overloading, the call to "
"``super().render_to_response(context)`` ends up calling the :meth:`~django."
"views.generic.base.TemplateResponseMixin.render_to_response()` "
"implementation of :class:`~django.views.generic.base.TemplateResponseMixin`."
msgstr ""
"En raison de la façon dont Python résout la surcharge des méthodes, l'appel "
"à ``super().render_to_response(context)`` fait en réalité appel à "
"l'implémentation :meth:`~django.views.generic.base.TemplateResponseMixin."
"render_to_response()` de :class:`~django.views.generic.base."
"TemplateResponseMixin`."

msgid "Conditional View Processing"
msgstr "Traitement conditionnel de vue"

msgid ""
"HTTP clients can send a number of headers to tell the server about copies of "
"a resource that they have already seen. This is commonly used when "
"retrieving a web page (using an HTTP ``GET`` request) to avoid sending all "
"the data for something the client has already retrieved. However, the same "
"headers can be used for all HTTP methods (``POST``, ``PUT``, ``DELETE``, "
"etc.)."
msgstr ""
"Les clients HTTP peuvent envoyer plusieurs en-têtes pour signaler au serveur "
"des copies de ressources qu'ils ont déjà rencontrées. C'est fréquemment "
"employé lors de l'obtention d'une page Web (par une requête HTTP ``GET``) "
"pour éviter d'envoyer toutes les données quand le client en a déjà récupéré "
"une partie. Cependant, les mêmes en-têtes peuvent être utilisés par toutes "
"les méthodes HTTP (``POST``, ``PUT``, ``DELETE``, etc.)."

msgid ""
"For each page (response) that Django sends back from a view, it might "
"provide two HTTP headers: the ``ETag`` header and the ``Last-Modified`` "
"header. These headers are optional on HTTP responses. They can be set by "
"your view function, or you can rely on the :class:`~django.middleware.http."
"ConditionalGetMiddleware` middleware to set the ``ETag`` header."
msgstr ""
"Pour chaque page (réponse) que Django renvoie depuis une vue, il est "
"susceptible de définir deux en-têtes HTTP : l'en-tête ``ETag`` et l'en-tête "
"``Last-Modified``. Ces en-têtes sont facultatifs dans les réponses HTTP. Ils "
"peuvent être définis par la fonction de vue ou il est possible de compter "
"sur l'intergiciel :class:`~django.middleware.http.ConditionalGetMiddleware` "
"pour définir l'en-tête ``ETag``."

msgid ""
"When the client next requests the same resource, it might send along a "
"header such as either :rfc:`If-Modified-Since <9110#section-13.1.3>` or :rfc:"
"`If-Unmodified-Since <9110#section-13.1.4>`, containing the date of the last "
"modification time it was sent, or either :rfc:`If-Match "
"<9110#section-13.1.1>` or :rfc:`If-None-Match <9110#section-13.1.2>`, "
"containing the last ``ETag`` it was sent. If the current version of the page "
"matches the ``ETag`` sent by the client, or if the resource has not been "
"modified, a 304 status code can be sent back, instead of a full response, "
"telling the client that nothing has changed.  Depending on the header, if "
"the page has been modified or does not match the ``ETag`` sent by the "
"client, a 412 status code (Precondition Failed) may be returned."
msgstr ""
"Lorsqu'un client demande une nouvelle fois la même ressource, il peut "
"envoyer avec la requête un en-tête tel que :rfc:`If-Modified-Since "
"<9110#section-13.1.3>` ou :rfc:`If-Unmodified-Since <9110#section-13.1.4>` "
"contenant la date de dernière modification qu'il a reçue, ou :rfc:`If-Match "
"<9110#section-13.1.1>` ou :rfc:`If-None-Match <9110#section-13.1.2>` "
"contenant la dernière valeur ``ETag`` qu'il a reçue. Si la version actuelle "
"de la page correspond à la valeur ``ETag`` envoyée par le client ou que la "
"ressource n'a pas été modifiée entre temps, le serveur peut renvoyer un code "
"de statut 304 au lieu d'une réponse complète, indiquant par là au client que "
"rien n'a changé. En fonction de l'en-tête, si la page a été modifiée ou ne "
"correspond pas au contenu ``ETag`` envoyé par le client, un code de statut "
"412 (Precondition Failed) peut être renvoyé."

msgid ""
"When you need more fine-grained control you may use per-view conditional "
"processing functions."
msgstr ""
"Dans les cas où vous avez besoin d'un contrôle plus fin, vous pouvez "
"utiliser les fonctions de traitement conditionnel par vue."

msgid "The ``condition`` decorator"
msgstr "Le décorateur ``condition``"

msgid ""
"Sometimes (in fact, quite often) you can create functions to rapidly compute "
"the :rfc:`ETag <9110#section-8.8.3>` value or the last-modified time for a "
"resource, **without** needing to do all the computations needed to construct "
"the full view. Django can then use these functions to provide an \"early "
"bailout\" option for the view processing. Telling the client that the "
"content has not been modified since the last request, perhaps."
msgstr ""
"Parfois (et assez souvent en réalité), vous pouvez créer des fonctions pour "
"calculer rapidement la valeur :rfc:`ETag <9110#section-8.8.3>` ou la date de "
"dernière modification d'une ressource, **sans** devoir procéder à toutes les "
"opérations nécessaires à la construction complète de la vue. Django peut "
"ensuite utiliser ces fonctions pour fournir une option de « court-circuitage "
"rapide » du traitement de la vue. Par exemple pour indiquer au client que le "
"contenu n'a pas été modifié depuis la requête précédente."

msgid ""
"These two functions are passed as parameters to the ``django.views."
"decorators.http.condition`` decorator. This decorator uses the two functions "
"(you only need to supply one, if you can't compute both quantities easily "
"and quickly) to work out if the headers in the HTTP request match those on "
"the resource. If they don't match, a new copy of the resource must be "
"computed and your normal view is called."
msgstr ""
"Ces deux fonctions sont transmises comme paramètres au décorateur ``django."
"views.decorators.http.condition``. Ce décorateur les exploite (vous pouvez "
"n'en fournir qu'une s'il n'est pas possible de calculer facilement et "
"rapidement les deux éléments) pour savoir si les en-têtes de la requête HTTP "
"correspondent à ceux de la ressource. Lorsque ce n'est pas le cas, une "
"nouvelle copie de la ressource doit être calculée et donc la vue normale est "
"appelée."

msgid "The ``condition`` decorator's signature looks like this::"
msgstr "La signature du décorateur ``condition`` correspond à ceci ::"

msgid ""
"The two functions, to compute the ETag and the last modified time, will be "
"passed the incoming ``request`` object and the same parameters, in the same "
"order, as the view function they are helping to wrap. The function passed "
"``last_modified_func`` should return a standard datetime value specifying "
"the last time the resource was modified, or ``None`` if the resource doesn't "
"exist. The function passed to the ``etag`` decorator should return a string "
"representing the :rfc:`ETag <9110#section-8.8.3>` for the resource, or "
"``None`` if it doesn't exist."
msgstr ""
"Les deux fonctions, celle pour calculer la valeur ``ETag`` et celle pour la "
"date de dernière modification, reçoivent l'objet ``request`` entrant ainsi "
"que les mêmes paramètres, dans le même ordre, que la fonction de vue "
"qu'elles enveloppent. La fonction de rappel ``last_modified_func`` doit "
"renvoyer une valeur date/heure standard indiquant la date de dernière "
"modification de la ressource ou ``None`` si la ressource n'existe pas. La "
"fonction de rappel du décorateur ``etag`` doit renvoyer une chaîne "
"représentant la valeur :rfc:`ETag <9110#section-8.8.3>` de la ressource, ou "
"``None`` si la ressource n'existe pas."

msgid ""
"The decorator sets the ``ETag`` and ``Last-Modified`` headers on the "
"response if they are not already set by the view and if the request's method "
"is safe (``GET`` or ``HEAD``)."
msgstr ""
"Le décorateur définit les en-têtes ``ETag`` et ``Last-Modified`` de la "
"réponse s'ils ne sont pas déjà définis par la vue et si la méthode de la "
"requête est sûre (``GET`` ou ``HEAD``)."

msgid ""
"Using this feature usefully is probably best explained with an example. "
"Suppose you have this pair of models, representing a small blog system::"
msgstr ""
"Il est probablement plus adéquat d'expliquer la façon d'utiliser cette "
"fonctionnalité par un exemple. Admettons que vous ayez ces deux modèles "
"représentant un petit système de blog ::"

msgid ""
"If the front page, displaying the latest blog entries, only changes when you "
"add a new blog entry, you can compute the last modified time very quickly. "
"You need the latest ``published`` date for every entry associated with that "
"blog. One way to do this would be::"
msgstr ""
"Si la page d'accueil affichant les derniers articles de blog ne change que "
"lorsque vous ajoutez un nouvel article, vous pouvez calculer très rapidement "
"la date de dernière modification. Vous avez besoin de la date ``published`` "
"la plus récente de chaque article associé à ce blog. Une façon de le faire "
"serait ::"

msgid ""
"You can then use this function to provide early detection of an unchanged "
"page for your front page view::"
msgstr ""
"Vous pouvez dès lors utiliser cette fonction pour fournir une détection "
"rapide d'une page d'accueil inchangée ::"

msgid "Be careful with the order of decorators"
msgstr "Attention à l'ordre des décorateurs"

msgid ""
"When ``condition()`` returns a conditional response, any decorators below it "
"will be skipped and won't apply to the response. Therefore, any decorators "
"that need to apply to both the regular view response and a conditional "
"response must be above ``condition()``. In particular, :func:`~django.views."
"decorators.vary.vary_on_cookie`, :func:`~django.views.decorators.vary."
"vary_on_headers`, and :func:`~django.views.decorators.cache.cache_control` "
"should come first because :rfc:`RFC 9110 <9110#section-15.4.5>` requires "
"that the headers they set be present on 304 responses."
msgstr ""
"Lorsque ``condition()`` renvoie une réponse conditionnelle, tout décorateur "
"qui le suit sera ignoré et ne s'appliquera pas à la réponse. Ainsi, tout "
"décorateur devant s'appliquer à la fois à la réponse de vue normale et à la "
"réponse conditionnelle doit se trouver au-dessus de ``condition()``. En "
"particulier, :func:`~django.views.decorators.vary.vary_on_cookie`, :func:"
"`~django.views.decorators.vary.vary_on_headers` et :func:`~django.views."
"decorators.cache.cache_control` doivent figurer en premier car la :rfc:`RFC "
"9110 <9110#section-15.4.5>` exige que les en-têtes qu'ils définissent soient "
"présents dans les réponses 304."

msgid "Shortcuts for only computing one value"
msgstr "Raccourcis pour le calcul d'une seule valeur"

msgid ""
"As a general rule, if you can provide functions to compute *both* the ETag "
"and the last modified time, you should do so. You don't know which headers "
"any given HTTP client will send you, so be prepared to handle both. However, "
"sometimes only one value is easy to compute and Django provides decorators "
"that handle only ETag or only last-modified computations."
msgstr ""
"En règle générale, si vous pouvez fournir des fonctions à la fois pour le "
"calcul de la valeur ``ETag`` et la date de dernière modification, il est "
"bien de le faire. On ne connaît pas à l'avance les en-têtes qu'un client "
"HTTP donné va envoyer, on peut donc s'attendre à devoir gérer les deux cas "
"de figure. Cependant, il peut arriver qu'une seule des deux valeurs soit "
"facile à calculer et Django fournit donc des décorateurs qui ne gèrent que "
"la valeur ``ETag`` ou que la date de dernière modification."

msgid ""
"The ``django.views.decorators.http.etag`` and ``django.views.decorators.http."
"last_modified`` decorators are passed the same type of functions as the "
"``condition`` decorator. Their signatures are::"
msgstr ""
"Les décorateurs ``django.views.decorators.http.etag`` et ``django.views."
"decorators.http.last_modified`` reçoivent le même type de fonction que le "
"décorateur ``condition``. Leur signature est ::"

msgid ""
"We could write the earlier example, which only uses a last-modified "
"function, using one of these decorators::"
msgstr ""
"Nous pourrions écrire l'exemple précédent qui n'utilisait que la fonction de "
"dernière modification en choisissant l'un de ces décorateurs ::"

msgid "...or::"
msgstr "…ou ::"

msgid "Use ``condition`` when testing both conditions"
msgstr "Test des deux conditions avec ``condition``"

msgid ""
"It might look nicer to some people to try and chain the ``etag`` and "
"``last_modified`` decorators if you want to test both preconditions. "
"However, this would lead to incorrect behavior."
msgstr ""
"Il pourrait paraître plus élégant pour certaines personnes d'essayer "
"d'enchaîner les décorateurs ``etag`` et ``last_modified`` pour tester les "
"deux pré-conditions. Cependant, l'effet produit serait faux."

msgid ""
"The first decorator doesn't know anything about the second and might answer "
"that the response is not modified even if the second decorators would "
"determine otherwise. The ``condition`` decorator uses both callback "
"functions simultaneously to work out the right action to take."
msgstr ""
"Le premier décorateur n'a aucune conscience du second et pourrait répondre "
"que la réponse n'a pas été modifiée même quand le second décorateur en "
"déciderait autrement. Le décorateur ``condition`` utilise les deux fonctions "
"de rappel de concert pour prendre la bonne décision."

msgid "Using the decorators with other HTTP methods"
msgstr "Utilisation des décorateurs avec d'autres méthodes HTTP"

msgid ""
"The ``condition`` decorator is useful for more than only ``GET`` and "
"``HEAD`` requests (``HEAD`` requests are the same as ``GET`` in this "
"situation). It can also be used to provide checking for ``POST``, ``PUT`` "
"and ``DELETE`` requests. In these situations, the idea isn't to return a "
"\"not modified\" response, but to tell the client that the resource they are "
"trying to change has been altered in the meantime."
msgstr ""
"Le décorateur ``condition`` est utile au-delà des requêtes ``GET`` et "
"``HEAD`` (les requêtes ``HEAD`` sont similaires aux requêtes ``GET`` dans "
"cette optique). Il peut aussi être utilisé pour faire les vérifications "
"nécessaires pour les requêtes ``POST``, ``PUT`` et ``DELETE``. Dans ces cas "
"de figure, l'idée n'est pas de renvoyer une réponse « non modifiée », mais "
"d'indiquer au client que la ressource qu'ils tentent de modifier a subi des "
"modifications dans l'intervalle."

msgid ""
"For example, consider the following exchange between the client and server:"
msgstr ""
"Par exemple, considérez l'échange suivant entre un client et un serveur :"

msgid "Client requests ``/foo/``."
msgstr "Le client demande ``/foo/``."

msgid "Server responds with some content with an ETag of ``\"abcd1234\"``."
msgstr ""
"Le serveur répond avec un contenu dont la valeur ``ETag`` vaut "
"``\"abcd1234\"``."

msgid ""
"Client sends an HTTP ``PUT`` request to ``/foo/`` to update the resource. It "
"also sends an ``If-Match: \"abcd1234\"`` header to specify the version it is "
"trying to update."
msgstr ""
"Le client envoie une requête HTTP ``PUT`` vers ``/foo/`` pour mettre à jour "
"la ressource. Il envoie également un en-tête ``If-Match: \"abcd1234\"`` pour "
"indiquer la version qu'il tente de mettre à jour."

msgid ""
"Server checks to see if the resource has changed, by computing the ETag the "
"same way it does for a ``GET`` request (using the same function). If the "
"resource *has* changed, it will return a 412 status code, meaning "
"\"precondition failed\"."
msgstr ""
"Le serveur vérifie si la ressource a changé en calculant la valeur ``ETag`` "
"comme il l'a fait pour la requête ``GET`` (en utilisant la même fonction). "
"Si la ressource a *effectivement* changé, il renvoie un code de statut 412 "
"signifiant « Échec de condition préalable » (precondition failed)."

msgid ""
"Client sends a ``GET`` request to ``/foo/``, after receiving a 412 response, "
"to retrieve an updated version of the content before updating it."
msgstr ""
"Le client envoie une requête ``GET`` vers ``/foo/`` après la réception de la "
"réponse 412 afin de récupérer une version mise à jour du contenu avant de le "
"mettre à jour."

msgid ""
"The important thing this example shows is that the same functions can be "
"used to compute the ETag and last modification values in all situations. In "
"fact, you **should** use the same functions, so that the same values are "
"returned every time."
msgstr ""
"La chose importante démontrée par cet exemple est que les mêmes fonctions "
"peuvent être utilisées pour calculer les valeurs ``ETag`` et date de "
"dernière modification dans toutes les situations. En fait, vous **devez** "
"utiliser les mêmes fonctions afin que les mêmes valeurs soient renvoyées à "
"chaque fois."

msgid "Validator headers with non-safe request methods"
msgstr "En-têtes de validation avec les méthodes de requête non sûres"

msgid ""
"The ``condition`` decorator only sets validator headers (``ETag`` and ``Last-"
"Modified``) for safe HTTP methods, i.e. ``GET`` and ``HEAD``. If you wish to "
"return them in other cases, set them in your view. See :rfc:"
"`9110#section-9.3.4` to learn about the distinction between setting a "
"validator header in response to requests made with ``PUT`` versus ``POST``."
msgstr ""
"Le décorateur  ``condition`` ne définit les en-têtes de validation (``ETag`` "
"et ``Last-Modified``) que pour les méthodes HTTP sûres, c'est-à-dire ``GET`` "
"et ``HEAD``. SI vous souhaitez les avoir avec d'autres méthodes, vous devez "
"les définir dans la vue. Voir :rfc:`9110#section-9.3.4` pour connaître la "
"distinction entre la définition d'un en-tête de validation dans les réponses "
"aux requêtes envoyées par ``PUT`` en comparaison de ``POST``."

msgid "Comparison with middleware conditional processing"
msgstr "Comparaison avec l'intergiciel de traitement conditionnel"

msgid ""
"Django provides conditional ``GET`` handling via :class:`django.middleware."
"http.ConditionalGetMiddleware`. While being suitable for many situations, "
"the middleware has limitations for advanced usage:"
msgstr ""
"Django fournit une gestion conditionnelle de ``GET`` via l'intergiciel :"
"class:`django.middleware.http.ConditionalGetMiddleware`. Bien qu'il soit "
"adapté à de nombreuses situations, les fonctionnalités de cet intergiciel "
"présentent des limites quant à un usage avancé ::"

msgid "It's applied globally to all views in your project."
msgstr "Il est appliqué globalement à toutes les vues d'un projet."

msgid ""
"It doesn't save you from generating the response, which may be expensive."
msgstr ""
"Il ne vous économise pas le travail de génération de la réponse, ce qui peut "
"être coûteux."

msgid "It's only appropriate for HTTP ``GET`` requests."
msgstr "Il n'est adapté qu'aux requêtes HTTP ``GET``."

msgid ""
"You should choose the most appropriate tool for your particular problem "
"here. If you have a way to compute ETags and modification times quickly and "
"if some view takes a while to generate the content, you should consider "
"using the ``condition`` decorator described in this document. If everything "
"already runs fairly quickly, stick to using the middleware and the amount of "
"network traffic sent back to the clients will still be reduced if the view "
"hasn't changed."
msgstr ""
"Vous devriez choisir ici l'outil le plus approprié à votre problème "
"particulier. Si vous arrivez à calculer rapidement les valeurs ``ETag`` et "
"de date de dernière modification et que certaines vues prennent du temps à "
"produire leur contenu, vous devriez envisager d'utiliser le décorateur "
"``condition`` présenté dans ce document. Par contre, si tout fonctionne déjà "
"de manière assez fluide, restez-en à la solution des intergiciels et vous "
"continuerez de réduire la quantité de trafic réseau en direction des clients "
"dans les cas où les contenus des vues n'ont pas changé."

msgid "Aggregation"
msgstr "Agrégation"

msgid ""
"The topic guide on :doc:`Django's database-abstraction API </topics/db/"
"queries>` described the way that you can use Django queries that create, "
"retrieve, update and delete individual objects. However, sometimes you will "
"need to retrieve values that are derived by summarizing or *aggregating* a "
"collection of objects. This topic guide describes the ways that aggregate "
"values can be generated and returned using Django queries."
msgstr ""
"Le guide thématique sur l’:doc:`API d'abstraction de base de données de "
"Django </topics/db/queries>` décrit la façon dont les requêtes Django "
"peuvent être utilisées pour créer, récupérer, mettre à jour et supprimer des "
"objets individuels. Il est cependant parfois nécessaire de récupérer des "
"valeurs dérivées du résumé ou de l'*agrégation* d'une collection d'objets. "
"Ce guide thématique décrit la manière dont des valeurs agrégées peuvent être "
"générées et renvoyées en utilisant des requêtes Django."

msgid ""
"Throughout this guide, we'll refer to the following models. These models are "
"used to track the inventory for a series of online bookstores:"
msgstr ""
"Tout au long de ce guide, nous nous référerons aux modèles suivants. Ces "
"modèles sont utilisés pour gérer l'inventaire d'une série de bibliothèques "
"en ligne :"

msgid "Cheat sheet"
msgstr "Antisèche"

msgid ""
"In a hurry? Here's how to do common aggregate queries, assuming the models "
"above:"
msgstr ""
"Vous êtes pressé ? Voici comment effectuer des requêtes avec agrégation, sur "
"la base des modèles ci-dessus :"

msgid "Generating aggregates over a ``QuerySet``"
msgstr "Génération de requêtes d'agrégation sur un objet ``QuerySet``"

msgid ""
"Django provides two ways to generate aggregates. The first way is to "
"generate summary values over an entire ``QuerySet``. For example, say you "
"wanted to calculate the average price of all books available for sale. "
"Django's query syntax provides a means for describing the set of all books:"
msgstr ""
"Django propose deux manières de générer des agrégations. La première est de "
"générer un résumé des valeurs d'un ``QuerySet`` entier. Par exemple, "
"admettons que vous vouliez calculer le prix moyen de tous les livres "
"disponibles à la vente. La syntaxe de requêtes de Django fournit une façon "
"de décrire l'ensemble de tous les livres :"

msgid ""
"What we need is a way to calculate summary values over the objects that "
"belong to this ``QuerySet``. This is done by appending an ``aggregate()`` "
"clause onto the ``QuerySet``:"
msgstr ""
"Ce dont nous avons besoin, c'est d'une manière de calculer un résumé des "
"valeurs de tous les objets appartenant à ce ``QuerySet``. Cela se fait en "
"ajoutant une clause ``aggregate()`` à la suite de l'objet ``QuerySet``:"

msgid ""
"The ``all()`` is redundant in this example, so this could be simplified to:"
msgstr ""
"Dans cet exemple, ``all()`` est redondant, cela pourrait donc être simplifié "
"en écrivant :"

msgid ""
"The argument to the ``aggregate()`` clause describes the aggregate value "
"that we want to compute - in this case, the average of the ``price`` field "
"on the ``Book`` model. A list of the aggregate functions that are available "
"can be found in the :ref:`QuerySet reference <aggregation-functions>`."
msgstr ""
"Le paramètre de la clause ``aggregate()`` décrit la valeur d'agrégation que "
"vous souhaitez calculer, dans ce cas la moyenne du champ ``price`` du modèle "
"``Book``. Une liste des fonctions d'agrégation disponibles se trouve dans "
"la :ref:`référence de QuerySet <aggregation-functions>`."

msgid ""
"``aggregate()`` is a terminal clause for a ``QuerySet`` that, when invoked, "
"returns a dictionary of name-value pairs. The name is an identifier for the "
"aggregate value; the value is the computed aggregate. The name is "
"automatically generated from the name of the field and the aggregate "
"function. If you want to manually specify a name for the aggregate value, "
"you can do so by providing that name when you specify the aggregate clause:"
msgstr ""
"``aggregate()`` est la clause terminale d'un objet ``QuerySet`` qui, "
"lorsqu'il est évalué, renvoie un dictionnaire de paires nom-valeur. Le nom "
"est un identifiant de la valeur agrégée ; la valeur est le résultat du "
"calcul d'agrégation. Le nom est généré automatiquement à partir du nom du "
"champ et de la fonction d'agrégation. Si vous voulez indiquer manuellement "
"le nom de la valeur agrégée, vous pouvez le faire en précisant ce nom dans "
"la clause d'agrégation :"

msgid ""
"If you want to generate more than one aggregate, you add another argument to "
"the ``aggregate()`` clause. So, if we also wanted to know the maximum and "
"minimum price of all books, we would issue the query:"
msgstr ""
"Si vous voulez générer plus d'une valeur agrégée, ajoutez un autre paramètre "
"dans la clause ``aggregate()``. Ainsi, si nous voulions aussi connaître les "
"prix maximaux et minimaux de tous les livres, nous écririons la requête "
"suivante :"

msgid "Generating aggregates for each item in a ``QuerySet``"
msgstr "Génération de valeurs agrégées pour chaque élément d'un ``QuerySet``"

msgid ""
"The second way to generate summary values is to generate an independent "
"summary for each object in a :class:`.QuerySet`. For example, if you are "
"retrieving a list of books, you may want to know how many authors "
"contributed to each book. Each Book has a many-to-many relationship with the "
"Author; we want to summarize this relationship for each book in the "
"``QuerySet``."
msgstr ""
"La deuxième manière de générer des valeurs récapitulatives est de générer un "
"récapitulatif individuel pour chaque objet d'un :class:`.QuerySet`. Par "
"exemple, si vous récupérez une liste de livres, il peut être utile de "
"connaître le nombre d'auteurs ayant contribué à chaque livre. Chaque objet "
"``Book`` possède une relation plusieurs-à-plusieurs vers le modèle "
"``Author``; nous voulons récapituler cette relation pour chaque livre de la "
"requête."

msgid ""
"Per-object summaries can be generated using the :meth:`~.QuerySet.annotate` "
"clause. When an ``annotate()`` clause is specified, each object in the "
"``QuerySet`` will be annotated with the specified values."
msgstr ""
"Les récapitulatifs par objet peuvent être générés par la clause :meth:`~."
"QuerySet.annotate`. Lorsque celle-ci est mentionnée, chaque objet de la "
"requête est annoté avec les valeurs indiquées."

msgid ""
"The syntax for these annotations is identical to that used for the :meth:`~."
"QuerySet.aggregate` clause. Each argument to ``annotate()`` describes an "
"aggregate that is to be calculated. For example, to annotate books with the "
"number of authors:"
msgstr ""
"La syntaxe de ces annotations est identique à celle utilisée pour les "
"clauses :meth:`~.QuerySet.aggregate`. Chaque paramètre d'``annotate()`` "
"décrit une valeur agrégée à calculer. Par exemple, pour annoter les livres "
"avec le nombre de leurs auteurs :"

msgid ""
"As with ``aggregate()``, the name for the annotation is automatically "
"derived from the name of the aggregate function and the name of the field "
"being aggregated. You can override this default name by providing an alias "
"when you specify the annotation:"
msgstr ""
"Comme pour ``aggregate()``, le nom de l'annotation est automatiquement "
"dérivé du nom de la fonction d'agrégation et du nom du champ sur lequel se "
"fait le calcul. Vous pouvez surcharger ce nom par défaut en fournissant un "
"alias lors de la définition de l'annotation :"

msgid ""
"Unlike ``aggregate()``, ``annotate()`` is *not* a terminal clause. The "
"output of the ``annotate()`` clause is a ``QuerySet``; this ``QuerySet`` can "
"be modified using any other ``QuerySet`` operation, including ``filter()``, "
"``order_by()``, or even additional calls to ``annotate()``."
msgstr ""
"Au contraire de ``aggregate()``, ``annotate()`` n'est *pas* une clause "
"terminale. Le résultat de la clause ``annotate()`` est un objet "
"``QuerySet``. Cet objet peut très bien être modifié par une autre opération "
"de type ``QuerySet``, comme par exemple ``filter()``, ``order_by()`` ou même "
"d'autres appels à ``annotate()``."

msgid "Combining multiple aggregations"
msgstr "Combinaison de plusieurs agrégations"

msgid ""
"Combining multiple aggregations with ``annotate()`` will :ticket:`yield the "
"wrong results <10060>` because joins are used instead of subqueries:"
msgstr ""
"La combinaison de plusieurs agrégations avec ``annotate()`` produit un :"
"ticket:`mauvais résultat <10060>`, car des jointures sont utilisées à la "
"place de sous-requêtes :"

msgid ""
"For most aggregates, there is no way to avoid this problem, however, the :"
"class:`~django.db.models.Count` aggregate has a ``distinct`` parameter that "
"may help:"
msgstr ""
"Pour la plupart des agrégations, il n'existe pas de solution à ce problème. "
"Cependant, l'agrégation :class:`~django.db.models.Count` possède un "
"paramètre ``distinct`` qui peut être utile :"

msgid "If in doubt, inspect the SQL query!"
msgstr "En cas de doute, inspectez la requête SQL !"

msgid ""
"In order to understand what happens in your query, consider inspecting the "
"``query`` property of your ``QuerySet``."
msgstr ""
"Afin de comprendre ce qui se produit dans la requête, il est possible "
"d'examiner la propriété ``query`` de l'objet ``QuerySet``."

msgid "Joins and aggregates"
msgstr "Jointures et agrégations"

msgid ""
"So far, we have dealt with aggregates over fields that belong to the model "
"being queried. However, sometimes the value you want to aggregate will "
"belong to a model that is related to the model you are querying."
msgstr ""
"Jusqu'ici, nous avons eu affaire à des agrégations sur des champs "
"appartenant au modèle sur lequel portait la requête. Cependant, la valeur à "
"agréger peut parfois appartenir à un modèle qui est lié au modèle sur lequel "
"porte la requête."

msgid ""
"When specifying the field to be aggregated in an aggregate function, Django "
"will allow you to use the same :ref:`double underscore notation <field-"
"lookups-intro>` that is used when referring to related fields in filters. "
"Django will then handle any table joins that are required to retrieve and "
"aggregate the related value."
msgstr ""
"Lors de la définition du champ à agréger dans une fonction d'agrégation, "
"Django permet d'utiliser la même :ref:`notation de double soulignement "
"<field-lookups-intro>` qui est utilisée pour se référer aux champs liés dans "
"les filtres. Django se charge ensuite des jointures de tables nécessaires "
"pour récupérer et agréger la valeur liée."

msgid ""
"For example, to find the price range of books offered in each store, you "
"could use the annotation:"
msgstr ""
"Par exemple, pour trouver l'intervalle des prix pratiqués dans chaque "
"magasin, vous pourriez utiliser l'annotation :"

msgid ""
"This tells Django to retrieve the ``Store`` model, join (through the many-to-"
"many relationship) with the ``Book`` model, and aggregate on the price field "
"of the book model to produce a minimum and maximum value."
msgstr ""
"Ceci indique à Django de récupérer le modèle ``Store``, de faire la jointure "
"avec le modèle ``Book`` (par la relation plusieurs-à-plusieurs) et d'agréger "
"sur le champ du prix du modèle ``Book`` pour produire les valeurs du minimum "
"et du maximum."

msgid ""
"The same rules apply to the ``aggregate()`` clause. If you wanted to know "
"the lowest and highest price of any book that is available for sale in any "
"of the stores, you could use the aggregate:"
msgstr ""
"Les mêmes règles s'appliquent à la clause ``aggregate()``. Si vous vouliez "
"connaître le prix le plus bas et le prix le plus haut de tous les livres mis "
"en vente dans n'importe quel magasin, vous pourriez utiliser la fonction "
"d'agrégation :"

msgid ""
"Join chains can be as deep as you require. For example, to extract the age "
"of the youngest author of any book available for sale, you could issue the "
"query:"
msgstr ""
"Les chaînes de jointure peuvent être aussi profondes que nécessaire. Par "
"exemple, pour extraire l'âge du plus jeune auteur de tous les livres mis en "
"vente, vous pourriez effectuer la requête :"

msgid "Following relationships backwards"
msgstr "Suivi des relations inverses"

msgid ""
"In a way similar to :ref:`lookups-that-span-relationships`, aggregations and "
"annotations on fields of models or models that are related to the one you "
"are querying can include traversing \"reverse\" relationships. The lowercase "
"name of related models and double-underscores are used here too."
msgstr ""
"D'une manière similaire aux :ref:`lookups-that-span-relationships`, les "
"agrégations et les annotations sur les champs de modèles ou sur les modèles "
"liés à celui sur lequel porte la requête peuvent contenir des relations "
"« inverses » traversantes. Ici également, il est possible d'utiliser la "
"syntaxe des noms en minuscules des modèles liés et des doubles soulignements."

msgid ""
"For example, we can ask for all publishers, annotated with their respective "
"total book stock counters (note how we use ``'book'`` to specify the "
"``Publisher`` -> ``Book`` reverse foreign key hop):"
msgstr ""
"Par exemple, il est possible d'extraire tous les éditeurs annotés avec leur "
"décompte respectif de tous leurs livres publiés (notez la manière d'utiliser "
"``'book'`` pour définir la relation de clé étrangère inversée) :"

msgid ""
"(Every ``Publisher`` in the resulting ``QuerySet`` will have an extra "
"attribute called ``book__count``.)"
msgstr ""
"(chaque ``Publisher`` du jeu de requête résultant possédera un attribut "
"supplémentaire nommé ``book__count``)"

msgid ""
"We can also ask for the oldest book of any of those managed by every "
"publisher:"
msgstr ""
"Une autre requête pourrait porter sur le plus ancien livre publié par chaque "
"éditeur :"

msgid ""
"(The resulting dictionary will have a key called ``'oldest_pubdate'``. If no "
"such alias were specified, it would be the rather long "
"``'book__pubdate__min'``.)"
msgstr ""
"Le dictionnaire résultant possédera une clé nommée ``'oldest_pubdate'``. Si "
"l'alias n'avait pas été précisé, cette clé se serait appelée "
"``'book__pubdate__min'``, ce qui est plutôt long."

msgid ""
"This doesn't apply just to foreign keys. It also works with many-to-many "
"relations. For example, we can ask for every author, annotated with the "
"total number of pages considering all the books the author has (co-)authored "
"(note how we use ``'book'`` to specify the ``Author`` -> ``Book`` reverse "
"many-to-many hop):"
msgstr ""
"Cela ne s'applique pas seulement aux clés étrangères, mais fonctionne aussi "
"avec les relations plusieurs-à-plusieurs. Par exemple, nous pouvons "
"rechercher tous les auteurs annotés avec le nombre total de pages de tous "
"les livres pour lesquels ils ont été (co-)auteurs (notez la manière "
"d'utiliser ``'book'`` pour définir la relation plusieurs-à-plusieurs "
"inversée de ``Author`` vers ``Book``) :"

msgid ""
"(Every ``Author`` in the resulting ``QuerySet`` will have an extra attribute "
"called ``total_pages``. If no such alias were specified, it would be the "
"rather long ``book__pages__sum``.)"
msgstr ""
"Chaque ``Author`` du jeu de requête résultant possédera un attribut "
"supplémentaire nommé ``total_pages``. Si l'alias n'avait pas été précisé, "
"cette clé se serait appelée ``'book__pages__sum'``, ce qui est plutôt long."

msgid ""
"Or ask for the average rating of all the books written by author(s) we have "
"on file:"
msgstr ""
"Nous pourrions encore extraire la moyenne des notes de tous les livres "
"écrits par les auteurs enregistrés :"

msgid ""
"(The resulting dictionary will have a key called ``'average_rating'``. If no "
"such alias were specified, it would be the rather long "
"``'book__rating__avg'``.)"
msgstr ""
"Le dictionnaire résultant possédera une clé nommée ``'average_rating'``. Si "
"l'alias n'avait pas été précisé, cette clé se serait appelée "
"``'book__rating__avg'``, ce qui est plutôt long."

msgid "Aggregations and other ``QuerySet`` clauses"
msgstr "Agrégations et autres clauses de ``QuerySet``"

msgid "``filter()`` and ``exclude()``"
msgstr "``filter()`` et ``exclude()``"

msgid ""
"Aggregates can also participate in filters. Any ``filter()`` (or "
"``exclude()``) applied to normal model fields will have the effect of "
"constraining the objects that are considered for aggregation."
msgstr ""
"Les agrégations peuvent aussi intervenir dans les filtres. Toute méthode "
"``filter()`` (ou ``exclude()``) appliquée à des champs de modèle normaux "
"fera l'effet de restreindre les objets concernés par l'agrégation."

msgid ""
"When used with an ``annotate()`` clause, a filter has the effect of "
"constraining the objects for which an annotation is calculated. For example, "
"you can generate an annotated list of all books that have a title starting "
"with \"Django\" using the query:"
msgstr ""
"Lorsqu'il est combiné à une clause ``annotate()``, un filtre fait l'effet de "
"restreindre les objets sur lesquels l'annotation est calculée. Par exemple, "
"vous pouvez générer une liste annotée de tous les livres ayant leur titre "
"commençant par « Django » à l'aide de la requête :"

msgid ""
"When used with an ``aggregate()`` clause, a filter has the effect of "
"constraining the objects over which the aggregate is calculated. For "
"example, you can generate the average price of all books with a title that "
"starts with \"Django\" using the query:"
msgstr ""
"Lorsqu'il est combiné à une clause ``aggregate()``, un filtre fait l'effet "
"de restreindre les objets sur lesquels l'agrégation est calculée. Par "
"exemple, vous pouvez générer le prix moyen de tous les livres ayant leur "
"titre commençant par « Django » à l'aide de la requête :"

msgid "Filtering on annotations"
msgstr "Filtrage sur les annotations"

msgid ""
"Annotated values can also be filtered. The alias for the annotation can be "
"used in ``filter()`` and ``exclude()`` clauses in the same way as any other "
"model field."
msgstr ""
"Les valeurs annotées peuvent également être filtrées. L'alias de "
"l'annotation peut être utilisé dans les clauses ``filter()`` et "
"``exclude()`` de la même manière que pour n'importe quel autre champ de "
"modèle."

msgid ""
"For example, to generate a list of books that have more than one author, you "
"can issue the query:"
msgstr ""
"Par exemple, pour générer une liste de livres ayant plus d'un auteur, vous "
"pouvez écrire la requête :"

msgid ""
"This query generates an annotated result set, and then generates a filter "
"based upon that annotation."
msgstr ""
"Cette requête génère un jeu de requête annoté, puis filtre le résultat sur "
"la base de l'annotation."

msgid ""
"If you need two annotations with two separate filters you can use the "
"``filter`` argument with any aggregate. For example, to generate a list of "
"authors with a count of highly rated books:"
msgstr ""
"Si vous avez besoin de deux annotations avec deux filtres séparés, vous "
"pouvez utiliser le paramètre ``filter`` avec n'importe quel agrégat. Par "
"exemple, pour générer une liste d'auteurs avec le décompte des livres bien "
"notés :"

msgid ""
"Each ``Author`` in the result set will have the ``num_books`` and "
"``highly_rated_books`` attributes. See also :ref:`conditional-aggregation`."
msgstr ""
"Chaque ``Author`` dans le jeu de résultats possédera les deux attributs "
"``num_books`` et ``highly_rated_books``. Voir aussi :ref:`conditional-"
"aggregation`."

msgid "Choosing between ``filter`` and ``QuerySet.filter()``"
msgstr "Choix entre ``filter`` et ``QuerySet.filter()``"

msgid ""
"Avoid using the ``filter`` argument with a single annotation or aggregation. "
"It's more efficient to use ``QuerySet.filter()`` to exclude rows. The "
"aggregation ``filter`` argument is only useful when using two or more "
"aggregations over the same relations with different conditionals."
msgstr ""
"Évitez d'utiliser le paramètre ``filter`` avec une seule annotation ou "
"agrégation. Il est plus efficace d'utiliser ``QuerySet.filter()`` pour "
"exclure des lignes. Le paramètre d'agrégation ``filter`` n'est utile que "
"lorsqu'on utilise au moins deux agrégations sur les mêmes relations avec des "
"conditions différentes."

msgid "Order of ``annotate()`` and ``filter()`` clauses"
msgstr "Ordre des clauses ``annotate()`` et ``filter()``"

msgid ""
"When developing a complex query that involves both ``annotate()`` and "
"``filter()`` clauses, pay particular attention to the order in which the "
"clauses are applied to the ``QuerySet``."
msgstr ""
"Lors de la rédaction de requête complexe impliquant à la fois des clauses "
"``annotate()`` et ``filter()``, une attention particulière doit être donnée "
"à l'ordre dans lequel les clauses sont appliquées à l'objet ``QuerySet``."

msgid ""
"When an ``annotate()`` clause is applied to a query, the annotation is "
"computed over the state of the query up to the point where the annotation is "
"requested. The practical implication of this is that ``filter()`` and "
"``annotate()`` are not commutative operations."
msgstr ""
"Lorsqu'une clause ``annotate()`` est appliquée à une requête, l'annotation "
"est calculée sur l'état de la requête au point exact où l'annotation est "
"demandée. L'implication pratique de ceci est que ``filter()`` et "
"``annotate()`` ne sont pas des opérations commutatives."

msgid "Given:"
msgstr "Étant donné :"

msgid "Publisher A has two books with ratings 4 and 5."
msgstr "Un « Publisher » A possède deux livres avec notations 4 et 5."

msgid "Publisher B has two books with ratings 1 and 4."
msgstr "Un « Publisher » B possède deux livres avec notations 1 et 4."

msgid "Publisher C has one book with rating 1."
msgstr "Un « Publisher » A possède un livre avec notation 1."

msgid "Here's an example with the ``Count`` aggregate:"
msgstr "Voici un exemple avec l'agrégation ``Count``:"

msgid ""
"Both queries return a list of publishers that have at least one book with a "
"rating exceeding 3.0, hence publisher C is excluded."
msgstr ""
"Les deux requêtes renvoient une liste d'objets « Publisher » ayant au moins "
"un livre avec une note dépassant 3.0, ce qui fait que Publisher C est exclu."

msgid ""
"In the first query, the annotation precedes the filter, so the filter has no "
"effect on the annotation. ``distinct=True`` is required to avoid a :ref:"
"`query bug <combining-multiple-aggregations>`."
msgstr ""
"Dans la première requête, l'annotation précède le filtre, ce qui fait que le "
"filtre n'a aucun effet sur l'annotation. ``distinct=True`` est obligatoire "
"pour éviter une :ref:`anomalie de requête <combining-multiple-aggregations>`."

msgid ""
"The second query counts the number of books that have a rating exceeding 3.0 "
"for each publisher. The filter precedes the annotation, so the filter "
"constrains the objects considered when calculating the annotation."
msgstr ""
"La seconde requête compte le nombre de livres ayant une note dépassant 3.0 "
"pour chaque Publisher. Le filtre précède l'annotation, ce qui fait que le "
"filtre limite les objets pris en compte lors du calcul de l'annotation."

msgid "Here's another example with the ``Avg`` aggregate:"
msgstr "Voici un autre exemple avec l'agrégation ``Avg``:"

msgid ""
"The first query asks for the average rating of all a publisher's books for "
"publisher's that have at least one book with a rating exceeding 3.0. The "
"second query asks for the average of a publisher's book's ratings for only "
"those ratings exceeding 3.0."
msgstr ""
"La première requête calcule la note moyenne de tous les livres de chaque "
"éditeur pour les éditeurs ayant au moins un livre avec une note dépassant "
"3.0. La seconde requête calcule la moyenne des notes des livres d'un éditeur "
"pour tous les livres dont la note dépasse 3.0."

msgid ""
"It's difficult to intuit how the ORM will translate complex querysets into "
"SQL queries so when in doubt, inspect the SQL with ``str(queryset.query)`` "
"and write plenty of tests."
msgstr ""
"Il est difficile de deviner comment l'ORM va traduire des jeux de requêtes "
"complexes en instructions SQL ; en cas de doute, inspectez le code SQL "
"produit avec ``str(queryset.query)`` et écrivez de nombreux tests."

msgid "``order_by()``"
msgstr "``order_by()``"

msgid ""
"Annotations can be used as a basis for ordering. When you define an "
"``order_by()`` clause, the aggregates you provide can reference any alias "
"defined as part of an ``annotate()`` clause in the query."
msgstr ""
"Les annotations peuvent être utilisées comme base de tri. Lorsque vous "
"définissez une clause ``order_by()``, les agrégations que vous indiquez "
"peuvent référencer n'importe quel alias défini dans le cadre d'une clause "
"``annotate()`` de la requête."

msgid ""
"For example, to order a ``QuerySet`` of books by the number of authors that "
"have contributed to the book, you could use the following query:"
msgstr ""
"Par exemple, pour trier un jeu de requête de livres par le nombre d'auteurs "
"ayant contribué au livre, vous pourriez écrire la requête suivante :"

msgid "``values()``"
msgstr "``values()``"

msgid ""
"Ordinarily, annotations are generated on a per-object basis - an annotated "
"``QuerySet`` will return one result for each object in the original "
"``QuerySet``. However, when a ``values()`` clause is used to constrain the "
"columns that are returned in the result set, the method for evaluating "
"annotations is slightly different. Instead of returning an annotated result "
"for each result in the original ``QuerySet``, the original results are "
"grouped according to the unique combinations of the fields specified in the "
"``values()`` clause. An annotation is then provided for each unique group; "
"the annotation is computed over all members of the group."
msgstr ""
"En principe, les annotations sont générées pour chaque objet ; un jeu de "
"requête annoté renvoie un résultat par objet du jeu de requête original. "
"Cependant, lorsqu'une clause ``values()`` est utilisée pour restreindre les "
"colonnes renvoyées dans le jeu de requête, la méthode d'évaluation des "
"annotations est légèrement différente. Au lieu de renvoyer un résultat "
"annoté pour chaque résultat du jeu de requête original, les résultats "
"d'origine sont groupés selon les combinaisons uniques des champs indiqués "
"dans la clause ``values()``. Puis l'annotation est fournie pour chaque "
"groupe unique ; l'annotation est donc calculée sur tous les membres du "
"groupe."

msgid ""
"For example, consider an author query that attempts to find out the average "
"rating of books written by each author:"
msgstr ""
"Par exemple, considérons une requête sur les auteurs cherchant à trouver la "
"moyenne des notes des livres écrits par chaque auteur :"

msgid ""
"This will return one result for each author in the database, annotated with "
"their average book rating."
msgstr ""
"Ceci renvoie un résultat pour chaque auteur de la base de données, annoté "
"par la note moyenne de leurs livres."

msgid ""
"However, the result will be slightly different if you use a ``values()`` "
"clause:"
msgstr ""
"Cependant, le résultat sera légèrement différent si vous utilisez une clause "
"``values()``:"

msgid ""
"In this example, the authors will be grouped by name, so you will only get "
"an annotated result for each *unique* author name. This means if you have "
"two authors with the same name, their results will be merged into a single "
"result in the output of the query; the average will be computed as the "
"average over the books written by both authors."
msgstr ""
"Dans cet exemple, les auteurs sont groupés par nom, vous allez donc obtenir "
"un résultat annoté pour chaque nom d'auteur *unique*. Cela signifie que si "
"vous avez deux auteurs de même nom, leurs résultats seront fusionnés en un "
"seul dans la requête résultante ; la moyenne sera calculée sur tous les "
"livres écrits par les deux auteurs."

msgid "Order of ``annotate()`` and ``values()`` clauses"
msgstr "Ordre des clauses ``annotate()`` et ``values()``"

msgid ""
"As with the ``filter()`` clause, the order in which ``annotate()`` and "
"``values()`` clauses are applied to a query is significant. If the "
"``values()`` clause precedes the ``annotate()``, the annotation will be "
"computed using the grouping described by the ``values()`` clause."
msgstr ""
"Comme pour la clause ``filter()``, l'ordre d'apparition des clauses "
"``annotate()`` et ``values()`` dans une requête est important. Si la clause "
"``values()`` précède ``annotate()``, l'annotation est calculée par rapport "
"aux groupements définis par la clause ``values()``."

msgid ""
"However, if the ``annotate()`` clause precedes the ``values()`` clause, the "
"annotations will be generated over the entire query set. In this case, the "
"``values()`` clause only constrains the fields that are generated on output."
msgstr ""
"Cependant, si la clause ``annotate()`` précède la clause ``values()``, les "
"annotations sont générées sur la totalité du jeu de requête. Dans ce cas, la "
"clause ``values()`` ne restreint que les champs dans le résultat final."

msgid ""
"For example, if we reverse the order of the ``values()`` and ``annotate()`` "
"clause from our previous example:"
msgstr ""
"Par exemple, si nous inversons l'ordre des clauses ``values()`` et "
"``annotate()`` dans notre exemple précédent :"

msgid ""
"This will now yield one unique result for each author; however, only the "
"author's name and the ``average_rating`` annotation will be returned in the "
"output data."
msgstr ""
"Cela produit maintenant un résultat unique pour chaque auteur ; cependant, "
"seuls le nom de l'auteur et l'annotation ``average_rating`` sont renvoyés "
"dans les données de résultat."

msgid ""
"You should also note that ``average_rating`` has been explicitly included in "
"the list of values to be returned. This is required because of the ordering "
"of the ``values()`` and ``annotate()`` clause."
msgstr ""
"Remarquez également que ``average_rating`` a été explicitement inclus dans "
"la liste des valeurs à renvoyer. C'est obligatoire à cause de l'ordre des "
"clauses ``values()`` et ``annotate()``."

msgid ""
"If the ``values()`` clause precedes the ``annotate()`` clause, any "
"annotations will be automatically added to the result set. However, if the "
"``values()`` clause is applied after the ``annotate()`` clause, you need to "
"explicitly include the aggregate column."
msgstr ""
"Si la clause ``values()`` précède la clause ``annotate()``, toute annotation "
"sera automatiquement ajoutée au résultat de la requête. Toutefois, si la "
"clause ``values()`` est appliquée après la clause ``annotate()``, vous devez "
"inclure explicitement la colonne agrégée."

msgid "Interaction with ``order_by()``"
msgstr "Interaction avec ``order_by()``"

msgid ""
"Fields that are mentioned in the ``order_by()`` part of a queryset are used "
"when selecting the output data, even if they are not otherwise specified in "
"the ``values()`` call. These extra fields are used to group \"like\" results "
"together and they can make otherwise identical result rows appear to be "
"separate. This shows up, particularly, when counting things."
msgstr ""
"Les champs mentionnés dans la partie ``order_by()`` d'une requête sont "
"utilisés lors de la sélection des données du résultat, même s'ils ne sont "
"pas spécifiés explicitement dans l'appel à ``values()``. Ces champs "
"supplémentaires sont aussi pris en compte pour regrouper les résultats "
"similaires et peuvent faire apparaître de manière distincte des lignes qui "
"seraient regroupées sans la présence de ces champs. C'est particulièrement "
"flagrant lorsqu'il s'agit de compter des objets."

msgid "By way of example, suppose you have a model like this::"
msgstr ""
"Pour fournir un exemple, supposons que vous ayez un modèle comme celui-ci ::"

msgid ""
"If you want to count how many times each distinct ``data`` value appears in "
"an ordered queryset, you might try this::"
msgstr ""
"Si vous souhaitez compter le nombre d'apparitions distinctes de la valeur "
"``data`` dans une requête triée, vous pourriez écrire ceci ::"

msgid ""
"...which will group the ``Item`` objects by their common ``data`` values and "
"then count the number of ``id`` values in each group. Except that it won't "
"quite work. The ordering by ``name`` will also play a part in the grouping, "
"so this query will group by distinct ``(data, name)`` pairs, which isn't "
"what you want. Instead, you should construct this queryset::"
msgstr ""
"…ce qui regroupe les objets ``Item`` par leurs valeurs ``data`` communes, "
"puis compte le nombre de valeurs ``id`` dans chaque groupe. Sauf que ça ne "
"marchera pas comme prévu. Le tri selon ``name`` intervient aussi dans le "
"regroupement, ce qui fait que la requête regroupe sur les paires distinctes "
"``(data, name)``, ce qui ne correspond pas à l'intention de départ. Voici en "
"réalité ce qu'il faut écrire pour obtenir la requête espérée ::"

msgid ""
"...clearing any ordering in the query. You could also order by, say, "
"``data`` without any harmful effects, since that is already playing a role "
"in the query."
msgstr ""
"…effaçant ainsi tout ordre de tri dans la requête. Il serait aussi possible "
"de trier sur le champ ``data`` sans conséquence néfaste, dans la mesure où "
"ce champ est déjà impliqué dans la requête."

msgid ""
"This behavior is the same as that noted in the queryset documentation for :"
"meth:`~django.db.models.query.QuerySet.distinct` and the general rule is the "
"same: normally you won't want extra columns playing a part in the result, so "
"clear out the ordering, or at least make sure it's restricted only to those "
"fields you also select in a ``values()`` call."
msgstr ""
"Ce comportement est le même que ce qui est noté dans la documentation des "
"requêtes concernant :meth:`~django.db.models.query.QuerySet.distinct`, la "
"règle générale étant identique : il n'est normalement pas souhaité que des "
"colonnes supplémentaires soient inclues dans le résultat, il faut donc "
"effacer l'ordre de tri ou en tout cas s'assurer que les champs de tri sont "
"déjà impliqués dans l'appel à ``values()``."

msgid ""
"You might reasonably ask why Django doesn't remove the extraneous columns "
"for you. The main reason is consistency with ``distinct()`` and other "
"places: Django **never** removes ordering constraints that you have "
"specified (and we can't change those other methods' behavior, as that would "
"violate our :doc:`/misc/api-stability` policy)."
msgstr ""
"Vous pourriez raisonnablement vous demander pourquoi Django ne supprime pas "
"ces colonnes parasites à notre place. La raison principale est de conserver "
"la cohérence avec ``distinct()`` et d'autres endroits : Django ne supprime "
"**jamais** les contraintes de tri que vous avez indiquées (et nous ne "
"pouvons pas modifier le comportement de ces autres méthodes car cela "
"trahirait notre politique de :doc:`/misc/api-stability`)."

msgid "Aggregating annotations"
msgstr "Agrégation des annotations"

msgid ""
"You can also generate an aggregate on the result of an annotation. When you "
"define an ``aggregate()`` clause, the aggregates you provide can reference "
"any alias defined as part of an ``annotate()`` clause in the query."
msgstr ""
"Vous pouvez aussi générer une agrégation des résultats d'une annotation. "
"Lorsque vous définissez une clause ``aggregate()``, cette agrégation peut se "
"référer à n'importe quel alias défini dans une clause ``annotate()`` de la "
"même requête."

msgid ""
"For example, if you wanted to calculate the average number of authors per "
"book you first annotate the set of books with the author count, then "
"aggregate that author count, referencing the annotation field:"
msgstr ""
"Par exemple, si vous souhaitiez calculer le nombre moyen d'auteurs par "
"livre, vous annoteriez premièrement les livres avec le nombre d'auteurs, "
"puis vous agrégeriez ce nombre en vous référant au champ annoté :"

msgid "Aggregating on empty querysets or groups"
msgstr "Agrégation sur les jeux de requête ou groupes vides"

msgid ""
"When an aggregation is applied to an empty queryset or grouping, the result "
"defaults to its :ref:`default <aggregate-default>` parameter, typically "
"``None``. This behavior occurs because aggregate functions return ``NULL`` "
"when the executed query returns no rows."
msgstr ""
"Lorsqu'un agrégat est appliqué à un jeu de requête ou à un groupe vide, le "
"résultat correspond par défaut à son paramètre :ref:`default <aggregate-"
"default>`, typiquement ``None``. Ce comportement est dû au fait que les "
"fonctions d'agrégat renvoient ``NULL`` lorsque la requête exécutée ne "
"renvoie aucune ligne."

msgid ""
"You can specify a return value by providing the :ref:`default <aggregate-"
"default>` argument for most aggregations. However, since :class:`~django.db."
"models.Count` does not support the :ref:`default <aggregate-default>` "
"argument, it will always return ``0`` for empty querysets or groups."
msgstr ""
"Vous pouvez indiquer une valeur de renvoi en indiquant un argument :ref:"
"`default <aggregate-default>` pour la plupart des agrégats. Cependant, "
"comme :class:`~django.db.models.Count` n'accepte pas l'argument :ref:"
"`default <aggregate-default>`, il renverra toujours ``0`` pour les jeux de "
"requête ou les groupes vides. "

msgid ""
"For example, assuming that no book contains *web* in its name, calculating "
"the total price for this book set would return ``None`` since there are no "
"matching rows to compute the :class:`~django.db.models.Sum` aggregation on:"
msgstr ""
"Par exemple, en supposant qu'aucun livre ne contienne *web* dans son nom, le "
"calcul du prix total de cet ensemble de livres renverra ``None`` du moment "
"où il n'existe aucune ligne pour servir de calcul à l'agrégat  :class:"
"`~django.db.models.Sum`:"

msgid ""
"However, the :ref:`default <aggregate-default>` argument can be set when "
"calling :class:`~django.db.models.Sum` to return a different default value "
"if no books can be found:"
msgstr ""
"Cependant, l'argument :ref:`default <aggregate-default>` peut être défini "
"lors de l'appel à :class:`~django.db.models.Sum` pour renvoyer une valeur "
"différente si aucun livre n'est trouvé :"

msgid ""
"Under the hood, the :ref:`default <aggregate-default>` argument is "
"implemented by wrapping the aggregate function with :class:`~django.db."
"models.functions.Coalesce`."
msgstr ""
"En arrière-plan, l'argument :ref:`default <aggregate-default>` est "
"implémenté en enveloppant la fonction d'agrégat dans la fonction :class:"
"`~django.db.models.functions.Coalesce`."

msgid "Examples of model relationship API usage"
msgstr "Exemples d'utilisation de l'API de relations entre modèles"

msgid "Many-to-many relationships"
msgstr "Relations plusieurs-à-plusieurs"

msgid ""
"To define a many-to-many relationship, use :class:`~django.db.models."
"ManyToManyField`."
msgstr ""
"Pour définir une relation plusieurs-à-plusieurs, utilisez un champ :class:"
"`~django.db.models.ManyToManyField`."

msgid ""
"In this example, an ``Article`` can be published in multiple ``Publication`` "
"objects, and a ``Publication`` has multiple ``Article`` objects:"
msgstr ""
"Dans cet exemple, un ``Article`` peut être publié dans plusieurs objets "
"``Publication`` et une ``Publication`` possède plusieurs objets ``Article``:"

msgid ""
"What follows are examples of operations that can be performed using the "
"Python API facilities."
msgstr ""
"Dans ce qui suit, vous trouverez des exemples d'opérations pouvant être "
"effectuées en utilisant les possibilités de l'API Python."

msgid "Create a few ``Publications``:"
msgstr "Créez quelques ``Publications``:"

msgid "Create an ``Article``:"
msgstr "Créez un ``Article``:"

msgid "You can't associate it with a ``Publication`` until it's been saved:"
msgstr ""
"Vous ne pouvez pas le lier à une ``Publication`` avant qu'il ait été "
"enregistré :"

msgid "Save it!"
msgstr "Enregistrez-le !"

msgid "Associate the ``Article`` with a ``Publication``:"
msgstr "Associez l'``Article`` à une ``Publication``:"

msgid ""
"Create another ``Article``, and set it to appear in the ``Publications``:"
msgstr ""
"Créez un autre ``Article`` et faites-le paraître dans les ``Publications``:"

msgid "Adding a second time is OK, it will not duplicate the relation:"
msgstr ""
"Ajouter une seconde fois ne pose pas problème, la relation ne sera pas "
"dupliquée :"

msgid "Adding an object of the wrong type raises :exc:`TypeError`:"
msgstr ""
"L'ajout d'un objet du mauvais type génère une exception :exc:`TypeError`:"

msgid ""
"Create and add a ``Publication`` to an ``Article`` in one step using :meth:"
"`~django.db.models.fields.related.RelatedManager.create`:"
msgstr ""
"Créez et ajoutez une ``Publication`` à un ``Article`` en une seule étape en "
"utilisant :meth:`~django.db.models.fields.related.RelatedManager.create`:"

msgid ""
"``Article`` objects have access to their related ``Publication`` objects:"
msgstr "Les objets Article ont accès à leurs objets ``Publication`` liés :"

msgid ""
"``Publication`` objects have access to their related ``Article`` objects:"
msgstr "Les objets ``Publication`` ont accès à leurs objets ``Article`` liés :"

msgid ""
"Many-to-many relationships can be queried using :ref:`lookups across "
"relationships <lookups-that-span-relationships>`:"
msgstr ""
"Il est possible d'interroger les relations plusieurs-à-plusieurs en "
"utilisant des :ref:`recherches traversant les relations <lookups-that-span-"
"relationships>`:"

msgid ""
"The :meth:`~django.db.models.query.QuerySet.count` function respects :meth:"
"`~django.db.models.query.QuerySet.distinct` as well:"
msgstr ""
"La fonction :meth:`~django.db.models.query.QuerySet.count` respecte aussi :"
"meth:`~django.db.models.query.QuerySet.distinct`:"

msgid ""
"Reverse m2m queries are supported (i.e., starting at the table that doesn't "
"have a :class:`~django.db.models.ManyToManyField`):"
msgstr ""
"Les requêtes plusieurs-à-plusieurs inverses sont possibles (c'est-à-dire des "
"requêtes commençant par la table qui ne possède pas le champ :class:`~django."
"db.models.ManyToManyField`) :"

msgid ""
"Excluding a related item works as you would expect, too (although the SQL "
"involved is a little complex):"
msgstr ""
"L'exclusion d'un élément lié fonctionne aussi tel qu'on pourrait le prévoir "
"(même si le code SQL sous-jacent est un peu complexe) :"

msgid ""
"If we delete a ``Publication``, its ``Articles`` won't be able to access it:"
msgstr ""
"Si nous supprimons une ``Publication``, ses ``Articles`` ne pourront plus y "
"accéder :"

msgid ""
"If we delete an ``Article``, its ``Publications`` won't be able to access it:"
msgstr ""
"Si nous supprimons un ``Article``, ses ``Publications`` ne pourront plus y "
"accéder :"

msgid "Adding via the 'other' end of an m2m:"
msgstr ""
"Ajout à partir de l'« autre côté » de la relation plusieurs-à-plusieurs :"

msgid "Adding via the other end using keywords:"
msgstr "Ajout à partir de l'autre côté en utilisant des mots-clés :"

msgid "Removing ``Publication`` from an ``Article``:"
msgstr "Suppression d'une ``Publication`` à partir d'un ``Article``:"

msgid "And from the other end:"
msgstr "Et depuis l'autre côté :"

msgid "Relation sets can be set:"
msgstr "Les jeux de relations peuvent être définis :"

msgid "Relation sets can be cleared:"
msgstr "Les jeux de relations peuvent être effacés :"

msgid "And you can clear from the other end:"
msgstr "Et l'effacement peut se faire depuis l'autre côté :"

msgid "Recreate the ``Article`` and ``Publication`` we have deleted:"
msgstr "Recréez l'``Article`` et la ``Publication`` que nous avons supprimés :"

msgid ""
"Bulk delete some ``Publications`` - references to deleted publications "
"should go:"
msgstr ""
"Supprimez en vrac certaines ``Publications``; les références aux "
"publications supprimées ne sont plus présentes :"

msgid "Bulk delete some articles - references to deleted objects should go:"
msgstr ""
"Supprimez en vrac certains articles ; les références aux objets supprimés ne "
"sont plus présentes :"

msgid ""
"After the :meth:`~django.db.models.query.QuerySet.delete`, the :class:"
"`~django.db.models.query.QuerySet` cache needs to be cleared, and the "
"referenced objects should be gone:"
msgstr ""
"Après la suppression avec :meth:`~django.db.models.query.QuerySet.delete`, "
"le cache de :class:`~django.db.models.query.QuerySet` doit être effacé et "
"les objets référencés ne sont plus présents :"

msgid "Many-to-one relationships"
msgstr "Relations plusieurs-à-un"

msgid ""
"To define a many-to-one relationship, use :class:`~django.db.models."
"ForeignKey`."
msgstr ""
"Pour définir une relation plusieurs-à-un, utilisez :class:`~django.db.models."
"ForeignKey`."

msgid ""
"In this example, a ``Reporter`` can be associated with many ``Article`` "
"objects, but an ``Article`` can only have one ``Reporter`` object::"
msgstr ""
"Dans cet exemple, un ``Reporter`` peut être associé avec plusieurs objets "
"``Article``, mais un ``Article`` ne peut avoir qu'un seul objet ``Reporter`` "
"lié ::"

msgid "Create a few Reporters:"
msgstr "Créez quelques objets Reporter :"

msgid "Create an Article:"
msgstr "Créez un objet Article :"

msgid ""
"Note that you must save an object before it can be assigned to a foreign key "
"relationship. For example, creating an ``Article`` with unsaved ``Reporter`` "
"raises ``ValueError``:"
msgstr ""
"Notez que vous devez enregistrer un objet avant de pouvoir l'attribuer à une "
"relation de clé étrangère. Par exemple, la création d'un ``Article`` avec "
"une instance ``Reporter`` non enregistrée produit une erreur ``ValueError``:"

msgid "Article objects have access to their related Reporter objects:"
msgstr "Les objets Article ont accès à leurs objets Reporter liés :"

msgid "Create an Article via the Reporter object:"
msgstr "Créez un objet Article au travers de l'objet Reporter :"

msgid "Create a new article:"
msgstr "Créez un nouvel article :"

msgid "Add the same article to a different article set - check that it moves:"
msgstr ""
"Ajoutez le même article à un autre jeu d'articles et vérifiez qu'il a bien "
"été déplacé :"

msgid "Adding an object of the wrong type raises TypeError:"
msgstr "L'ajout d'un objet du mauvais type lève une exception ``TypeError``:"

msgid "Note that in the last example the article has moved from John to Paul."
msgstr ""
"Notez que dans l'exemple précédent, l'article a été déplacé de John à Paul."

msgid ""
"Related managers support field lookups as well. The API automatically "
"follows relationships as far as you need. Use double underscores to separate "
"relationships. This works as many levels deep as you want. There's no limit. "
"For example:"
msgstr ""
"Les gestionnaires de relations acceptent aussi les recherches par champ. "
"L'API suit automatiquement les relations à la profondeur nécessaire. "
"Utilisez les doubles soulignements pour séparer les relations. Cela "
"fonctionne à autant de niveaux que nécessaire, sans limite. Par exemple :"

msgid "Exact match is implied here:"
msgstr "Une correspondance exacte est sous-entendue ici :"

msgid ""
"Query twice over the related field. This translates to an AND condition in "
"the WHERE clause:"
msgstr ""
"Double requête sur le champ lié. Cela se traduit par une condition AND dans "
"la clause WHERE :"

msgid ""
"For the related lookup you can supply a primary key value or pass the "
"related object explicitly:"
msgstr ""
"Pour la recherche sur la liaison, il est possible d'indiquer une clé "
"primaire ou de transmettre explicitement l'objet lié :"

msgid "You can also use a queryset instead of a literal list of instances:"
msgstr ""
"Vous pouvez aussi utiliser un résultat de requête (queryset) au lieu d'une "
"liste explicite d'instances :"

msgid "Querying in the opposite direction:"
msgstr "Requêtes dans la direction inverse :"

msgid ""
"Counting in the opposite direction works in conjunction with ``distinct()``:"
msgstr ""
"Le comptage dans la direction inverse fonctionne en combinant avec "
"``distinct()``:"

msgid "Queries can go round in circles:"
msgstr "Les requêtes en boucle sont possibles :"

msgid ""
"If you delete a reporter, their articles will be deleted (assuming that the "
"ForeignKey was defined with :attr:`django.db.models.ForeignKey.on_delete` "
"set to ``CASCADE``, which is the default):"
msgstr ""
"Si vous supprimez un reporter, ses articles seront supprimés (en supposant "
"que la clé étrangère a été créée avec l'attribut :attr:`django.db.models."
"ForeignKey.on_delete` défini à ``CASCADE``, ce qui est la valeur par "
"défaut) :"

msgid "You can delete using a JOIN in the query:"
msgstr ""
"Vous pouvez effectuer une suppression en utilisant une jointure (JOIN) dans "
"la requête :"

msgid "One-to-one relationships"
msgstr "Relations un-à-un"

msgid ""
"To define a one-to-one relationship, use :class:`~django.db.models."
"OneToOneField`."
msgstr ""
"Pour définir une relation un-à-un, utilisez un champ :class:`~django.db."
"models.OneToOneField`."

msgid "In this example, a ``Place`` optionally can be a ``Restaurant``::"
msgstr ""
"Dans cet exemple, un objet ``Place`` peut être un ``Restaurant`` dans "
"certains cas ::"

msgid "Create a couple of Places:"
msgstr "Créez quelques objets ``Places``:"

msgid ""
"Create a Restaurant. Pass the \"parent\" object as this object's primary key:"
msgstr ""
"Créez un ``Restaurant``. Passez l'objet « parent » comme clé primaire de cet "
"objet :"

msgid "A Restaurant can access its place:"
msgstr "Un ``Restaurant`` a accès à son objet ``Place``:"

msgid "A Place can access its restaurant, if available:"
msgstr ""
"Un objet ``Place`` peut accéder à son objet ``Restaurant``, s'il existe :"

msgid "p2 doesn't have an associated restaurant:"
msgstr "p2 ne possède pas d'objet ``Restaurant`` associé :"

msgid "You can also use ``hasattr`` to avoid the need for exception catching:"
msgstr ""
"Vous pouvez aussi utiliser ``hasattr`` pour éviter de devoir intercepter une "
"exception :"

msgid ""
"Set the place using assignment notation. Because place is the primary key on "
"Restaurant, the save will create a new restaurant:"
msgstr ""
"Définissez l'objet ``Place`` en utilisant la notation d'assignation. Comme "
"``place`` est la clé primaire de ``Restaurant``, l'enregistrement crée un "
"nouvel objet ``Restaurant``:"

msgid "Set the place back again, using assignment in the reverse direction:"
msgstr ""
"Redéfinissez ``place`` en utilisant l'assignation dans la direction inverse :"

msgid ""
"Note that you must save an object before it can be assigned to a one-to-one "
"relationship. For example, creating a ``Restaurant`` with unsaved ``Place`` "
"raises ``ValueError``:"
msgstr ""
"Notez que vous devez enregistrer un objet avant de pouvoir l'attribuer à une "
"relation un-à-un. Par exemple, la création d'un ``Restaurant`` avec une "
"instance ``Place`` non enregistrée produit une erreur ``ValueError``:"

msgid ""
"Restaurant.objects.all() returns the Restaurants, not the Places. Note that "
"there are two restaurants - Ace Hardware the Restaurant was created in the "
"call to r.place = p2:"
msgstr ""
"``Restaurant.objects.all()`` renvoie les objets ``Restaurant``, pas les "
"objets ``Places``. Notez qu'il y a maintenant deux restaurants, « Ace "
"Hardware » ayant été créé lors de l'instruction ``r.place = p2``:"

msgid ""
"Place.objects.all() returns all Places, regardless of whether they have "
"Restaurants:"
msgstr ""
"``Place.objects.all()`` renvoie tous les objets ``Place``, qu'ils aient un "
"objet ``Restaurant`` ou non :"

msgid ""
"You can query the models using :ref:`lookups across relationships <lookups-"
"that-span-relationships>`:"
msgstr ""
"Vous pouvez interroger les modèles en utilisant les  :ref:`recherches "
"traversant les relations <lookups-that-span-relationships>`:"

msgid "This also works in reverse:"
msgstr "Ceci fonctionne aussi dans le sens inverse :"

msgid ""
"If you delete a place, its restaurant will be deleted (assuming that the "
"``OneToOneField`` was defined with :attr:`~django.db.models.ForeignKey."
"on_delete` set to ``CASCADE``, which is the default):"
msgstr ""
"Si vous supprimez un objet ``Place``, son restaurant sera supprimé (en "
"supposant que l'attribut :attr:`~django.db.models.ForeignKey.on_delete` du "
"champ ``OneToOneField`` a été défini à ``CASCADE``, ce qui est la valeur par "
"défaut) :"

msgid "Add a Waiter to the Restaurant:"
msgstr "Ajoutez un objet ``Waiter`` à un ``Restaurant``:"

msgid "Query the waiters:"
msgstr "Interrogez les objets ``Waiter``:"

msgid "Fixtures"
msgstr "Instantanés"

msgid ":doc:`/howto/initial-data`"
msgstr ":doc:`/howto/initial-data`"

msgid "What is a fixture?"
msgstr "Qu'est-ce qu'un instantané (fixture en anglais) ?"

msgid ""
"A *fixture* is a collection of files that contain the serialized contents of "
"the database. Each fixture has a unique name, and the files that comprise "
"the fixture can be distributed over multiple directories, in multiple "
"applications."
msgstr ""
"Un *instantané* est un ensemble de fichiers contenant du contenu sérialisé "
"de base de données. Chaque instantané possède un nom unique et les fichiers "
"composant l'instantané peuvent être distribués dans plusieurs répertoires et "
"plusieurs applications."

msgid "How to produce a fixture?"
msgstr "Comment produire un instantané"

msgid ""
"Fixtures can be generated by :djadmin:`manage.py dumpdata <dumpdata>`. It's "
"also possible to generate custom fixtures by directly using :doc:"
"`serialization tools </topics/serialization>` or even by handwriting them."
msgstr ""
"Les instantanés peuvent être générés par la commande  :djadmin:`manage.py "
"dumpdata <dumpdata>`. Il est aussi possible de produire des instantanés "
"personnalisés en utilisant directement  les :doc:`outils de sérialisation </"
"topics/serialization>` ou même en les écrivant à la main."

msgid "How to use a fixture?"
msgstr "Comment utiliser un instantané"

msgid ""
"Fixtures can be used to pre-populate database with data for :ref:`tests "
"<topics-testing-fixtures>`:"
msgstr ""
"Les instantanés peuvent être utilisés pour préremplir la base de données "
"avec des données pour les :ref:`tests <topics-testing-fixtures>`:"

msgid ""
"or to provide some :ref:`initial data <initial-data-via-fixtures>` using "
"the :djadmin:`loaddata` command:"
msgstr ""
"ou pour fournir des :ref:`données initiales <initial-data-via-fixtures>` en "
"utilisant la commande :djadmin:`loaddata`:"

msgid "Where Django looks for fixtures?"
msgstr "Emplacements de recherche des instantanés"

msgid "Django will search in these locations for fixtures:"
msgstr "Django recherche les instantanés à ces emplacements :"

msgid "In the ``fixtures`` directory of every installed application"
msgstr "Dans le répertoire ``fixtures`` de chaque application installée"

msgid "In any directory listed in the :setting:`FIXTURE_DIRS` setting"
msgstr "Dans tout répertoire mentionné dans le réglage :setting:`FIXTURE_DIRS`"

msgid "In the literal path named by the fixture"
msgstr "Dans le chemin explicitement contenu dans le nom de l'instantané"

msgid ""
"Django will load any and all fixtures it finds in these locations that match "
"the provided fixture names. If the named fixture has a file extension, only "
"fixtures of that type will be loaded. For example:"
msgstr ""
"Django va charger tous les instantanés qu'il trouve aux emplacements "
"indiqués par les noms d'instantanés. Si un nom d'instantané indiqué possède "
"une extension de fichier, seuls des instantanés de ce type seront chargés. "
"Par exemple :"

msgid ""
"would only load JSON fixtures called ``mydata``. The fixture extension must "
"correspond to the registered name of a :ref:`serializer <serialization-"
"formats>` (e.g., ``json`` or ``xml``)."
msgstr ""
"ne charge que les instantanés JSON nommés ``mydata``. L'extension "
"d'instantané doit correspondre au nom enregistré d'un :ref:`sérialiseur "
"<serialization-formats>` (par ex. ``json`` ou ``xml``)."

msgid ""
"If you omit the extensions, Django will search all available fixture types "
"for a matching fixture. For example:"
msgstr ""
"Si vous omettez l'extension, Django recherche tous les types d'instantané "
"disponibles pour chaque instantané trouvé. Par exemple :"

msgid ""
"would look for any fixture of any fixture type called ``mydata``. If a "
"fixture directory contained ``mydata.json``, that fixture would be loaded as "
"a JSON fixture."
msgstr ""
"recherche tout instantané ou type d'instantané nommé ``mydata``. Si un "
"répertoire d'instantané contient ``mydata.json``, cet instantané serait "
"chargé comme instantané JSON."

msgid ""
"The fixtures that are named can include directory components. These "
"directories will be included in the search path. For example:"
msgstr ""
"Les noms d'instantanés peuvent contenir une partie « chemin ». Ces "
"répertoires sont alors inclus dans le chemin de recherche. Par exemple :"

msgid ""
"would search ``<app_label>/fixtures/foo/bar/mydata.json`` for each installed "
"application, ``<dirname>/foo/bar/mydata.json`` for each directory in :"
"setting:`FIXTURE_DIRS`, and the literal path ``foo/bar/mydata.json``."
msgstr ""
"recherche ``<étiquette_app>/fixtures/foo/bar/mydata.json`` pour chaque "
"application installée, ``<nom_rép>/foo/bar/mydata.json`` pour chaque "
"répertoire dans :setting:`FIXTURE_DIRS` ainsi que le chemin littéral ``foo/"
"bar/mydata.json``."

msgid "Fixtures loading order"
msgstr "Ordre de chargement des instantanés"

msgid "Multiple fixtures can be specified in the same invocation. For example:"
msgstr ""
"Plusieurs instantanés peuvent être indiqués dans la même invocation. Par "
"exemple :"

msgid "or in a test case class:"
msgstr "ou dans une classe de cas de tests :"

msgid ""
"The order in which fixtures are loaded follows the order in which they are "
"listed, whether it's when using the management command or when listing them "
"in the test case class as shown above."
msgstr ""
"L'ordre dans lequel sont chargés les instantanés suit l'ordre dans lequel "
"ils sont indiqués, que ce soit lors de l'utilisation de la commande "
"d'administration ou quand ils sont mentionnés dans une classe de cas de "
"tests comme démontré plus haut."

msgid ""
"In these examples, all the fixtures named ``mammals`` from all applications "
"(in the order in which applications are defined in :setting:"
"`INSTALLED_APPS`) will be loaded first. Subsequently, all the ``birds`` "
"fixtures will be loaded, followed by all the ``insects`` fixtures."
msgstr ""
"Dans ces exemples, tous les instantanés nommés ``mammals`` dans toutes les "
"applications (dans l'ordre d'apparition des applications dans :setting:"
"`INSTALLED_APPS`) seront chargés en premier. Puis, tous les instantanés "
"``birds`` seront chargés, suivis par tous les instantanés ``insects``."

msgid ""
"Be aware that if the database backend supports row-level constraints, these "
"constraints will be checked at the end of the transaction. Any relationships "
"across fixtures may result in a load error if the database configuration "
"does not support deferred constraint checking (refer to the `MySQL`_ docs "
"for an example)."
msgstr ""
"Sachez que si le moteur de base de données gère les contraintes de lignes, "
"celles-ci seront vérifiées à la fin de la transaction. Toute relation "
"traversant les instantanés peut aboutir à une erreur de chargement si la "
"configuration de base de données ne prend pas en charge le contrôle différé "
"des contraintes (référez-vous à la documentation de `MySQL`_ pour un "
"exemple)."

msgid "How fixtures are saved to the database?"
msgstr "Comment les instantanés sont enregistrés en base de données"

msgid ""
"When fixture files are processed, the data is saved to the database as is. "
"Model defined :meth:`~django.db.models.Model.save` methods are not called, "
"and any :data:`~django.db.models.signals.pre_save` or :data:`~django.db."
"models.signals.post_save` signals will be called with ``raw=True`` since the "
"instance only contains attributes that are local to the model. You may, for "
"example, want to disable handlers that access related fields that aren't "
"present during fixture loading and would otherwise raise an exception::"
msgstr ""
"Lorsque des fichiers d'instantanés sont traités, les données sont "
"enregistrées telles quelles dans la base de données. Les méthodes :meth:"
"`~django.db.models.Model.save` définies dans les modèles ne sont pas "
"appelées et les éventuels signaux :data:`~django.db.models.signals.pre_save` "
"ou :data:`~django.db.models.signals.post_save` sont appelés avec "
"``raw=True`` car l'instance ne contient que les attributs locaux du modèle. "
"Il est par exemple imaginable de désactiver les gestionnaires accédant aux "
"champs liés absents lors du chargement des instantanés, car une exception "
"serait générée dans le cas contraire :"

msgid "You could also write a decorator to encapsulate this logic::"
msgstr ""
"On pourrait aussi écrire un décorateur pour encapsuler cette logique ::"

msgid ""
"Just be aware that this logic will disable the signals whenever fixtures are "
"deserialized, not just during :djadmin:`loaddata`."
msgstr ""
"Il faut cependant être conscient que cette logique désactivera les signaux "
"lors de chaque désérialisation des instantanés, pas seulement durant :"
"djadmin:`loaddata`."

msgid "Compressed fixtures"
msgstr "Instantanés compressés"

msgid ""
"Fixtures may be compressed in ``zip``, ``gz``, ``bz2``, ``lzma``, or ``xz`` "
"format. For example:"
msgstr ""
"Les instantanés peuvent être compressés dans les formats ``zip``, ``gz``, "
"``bz2``, ``lzma`` ou ``xz``. Par exemple :"

msgid ""
"would look for any of ``mydata.json``, ``mydata.json.zip``, ``mydata.json."
"gz``, ``mydata.json.bz2``, ``mydata.json.lzma``, or ``mydata.json.xz``. The "
"first file contained within a compressed archive is used."
msgstr ""
"recherche l'un des fichiers ``mydata.json``, ``mydata.json.zip``, ``mydata."
"json.gz``, ``mydata.json.bz2``, ``mydata.json.lzma`` ou ``mydata.json.xz``. "
"Le premier fichier contenu dans une archive compressée est utilisé."

msgid ""
"Note that if two fixtures with the same name but different fixture type are "
"discovered (for example, if ``mydata.json`` and ``mydata.xml.gz`` were found "
"in the same fixture directory), fixture installation will be aborted, and "
"any data installed in the call to :djadmin:`loaddata` will be removed from "
"the database."
msgstr ""
"Notez que si deux instantanés de même nom mais de type différent sont "
"trouvés (par exemple si ``mydata.json`` et ``mydata.xml.gz`` sont trouvés "
"dans le même répertoire d'instantanés), l'installation des instantanés est "
"interrompue et toute donnée déjà installée par l'appel à :djadmin:`loaddata` "
"est retirée de la base de données."

msgid "MySQL with MyISAM and fixtures"
msgstr "MySQL avec MyISAM et les instantanés"

msgid ""
"The MyISAM storage engine of MySQL doesn't support transactions or "
"constraints, so if you use MyISAM, you won't get validation of fixture data, "
"or a rollback if multiple transaction files are found."
msgstr ""
"Le moteur de stockage MyISAM de MySQL ne gère ni les transactions, ni les "
"contraintes. Si vous utilisez ce moteur, les données d'instantanés ne sont "
"pas validées et d'éventuelles données déjà chargées en base de données ne "
"sont pas effacées dans le cas où des fichiers d'instantanés conflictuels "
"sont trouvés."

msgid "Database-specific fixtures"
msgstr "Instantanés spécifiques à certaines bases de données"

msgid ""
"If you're in a multi-database setup, you might have fixture data that you "
"want to load onto one database, but not onto another. In this situation, you "
"can add a database identifier into the names of your fixtures."
msgstr ""
"Si vous vous trouvez dans une configuration avec plusieurs bases de données, "
"il se pourrait que vous vouliez charger certains instantanés dans une base "
"de données mais pas dans l'autre. Dans cette situation, vous pouvez insérer "
"des identifiants de base de données dans les noms des instantanés."

msgid ""
"For example, if your :setting:`DATABASES` setting has a ``users`` database "
"defined, name the fixture ``mydata.users.json`` or ``mydata.users.json.gz`` "
"and the fixture will only be loaded when you specify you want to load data "
"into the ``users`` database."
msgstr ""
"Par exemple, si votre réglage :setting:`DATABASES` contient une base de "
"données ``users``, nommez l'instantané ``mesdonnees.users.json`` ou "
"``mesdonnees.users.json.gz`` et cet instantané ne sera chargé que lorsque "
"vous indiquez que vous souhaitez charger des données dans la base de données "
"``users``."

msgid "Models and databases"
msgstr "Modèles et bases de données"

msgid ""
"A model is the single, definitive source of information about your data. It "
"contains the essential fields and behaviors of the data you're storing. "
"Generally, each model maps to a single database table."
msgstr ""
"Un modèle est la source d'information unique et définitive à propos de vos "
"données. Il contient les champs et le comportement essentiels des données "
"que vous stockez. Généralement, chaque modèle correspond à une seule table "
"de base de données."

msgid "Database instrumentation"
msgstr "Instrumentation de base de données"

msgid ""
"To help you understand and control the queries issued by your code, Django "
"provides a hook for installing wrapper functions around the execution of "
"database queries. For example, wrappers can count queries, measure query "
"duration, log queries, or even prevent query execution (e.g. to make sure "
"that no queries are issued while rendering a template with prefetched data)."
msgstr ""
"Pour vous aider à comprendre et à contrôler les requêtes produites par votre "
"code, Django fournit un point d'accès pour installer des fonctions "
"enveloppantes autour de l'exécution des requêtes de base de données. Par "
"exemple, ces fonctions peuvent compter les requêtes, mesurer leur durée, les "
"journaliser ou même empêcher leur exécution (par ex. pour s'assurer "
"qu'aucune requête ne soit exécutée lors du rendu d'un gabarit avec des "
"données préchargées."

msgid ""
"The wrappers are modeled after :doc:`middleware </topics/http/middleware>` "
"-- they are callables which take another callable as one of their arguments. "
"They call that callable to invoke the (possibly wrapped) database query, and "
"they can do what they want around that call. They are, however, created and "
"installed by user code, and so don't need a separate factory like middleware "
"do."
msgstr ""
"Les fonctions enveloppantes sont structurées comme pour les :doc:"
"`intergiciels </topics/http/middleware>` -- il s'agit d'objets exécutables "
"qui acceptent un autre exécutable dans l'un de leurs paramètres. Elles "
"appellent ce dernier pour invoquer la requête de base de données "
"(potentiellement enveloppée), et elles peuvent faire ce qu'elles veulent "
"autour de cet appel. Elles sont cependant créées et installées par le code "
"utilisateur, ce qui fait qu'elles n'ont pas besoin d'une fabrique distincte "
"comme pour les intergiciels."

msgid ""
"Installing a wrapper is done in a context manager -- so the wrappers are "
"temporary and specific to some flow in your code."
msgstr ""
"L'installation d'une fonction enveloppante se fait dans un gestionnaire de "
"contexte, ce qui rend ces fonctions temporaires et spécifiques à un certain "
"flux de votre code."

msgid ""
"As mentioned above, an example of a wrapper is a query execution blocker. It "
"could look like this::"
msgstr ""
"Comme mentionné ci-dessus, un exemple de fonction enveloppante est un "
"bloqueur d'exécution de requête. Voici à quoi cela pourrait ressembler ::"

msgid ""
"And it would be used in a view to block queries from the template like so::"
msgstr ""
"Et cela serait utilisé dans une vue pour bloquer les requêtes provenant d'un "
"gabarit, comme ceci ::"

msgid "The parameters sent to the wrappers are:"
msgstr "Les paramètres envoyés à la fonction enveloppante sont :"

msgid ""
"``execute`` -- a callable, which should be invoked with the rest of the "
"parameters in order to execute the query."
msgstr ""
"``execute`` -- un objet exécutable, qui devrait être appelé avec le reste "
"des paramètres afin d'exécuter la requête."

msgid "``sql`` -- a ``str``, the SQL query to be sent to the database."
msgstr ""
"``sql`` -- une chaîne ``str``, la requête SQL qui sera envoyée à la base de "
"données."

msgid ""
"``params`` -- a list/tuple of parameter values for the SQL command, or a "
"list/tuple of lists/tuples if the wrapped call is ``executemany()``."
msgstr ""
"``params`` -- une liste (ou tuple) de paramètres à destination de la "
"commande SQL, ou une liste de listes si l'appel enveloppé est "
"``executemany()``."

msgid ""
"``many`` -- a ``bool`` indicating whether the ultimately invoked call is "
"``execute()`` or ``executemany()`` (and whether ``params`` is expected to be "
"a sequence of values, or a sequence of sequences of values)."
msgstr ""
"``many`` -- une valeur booléenne indiquant si l'appel invoqué en définitive "
"sera ``execute()`` ou ``executemany()`` (et si ``params`` doit être une "
"liste de valeurs ou une liste de listes de valeurs)."

msgid ""
"``context`` -- a dictionary with further data about the context of "
"invocation. This includes the connection and cursor."
msgstr ""
"``context`` -- un dictionnaire avec des données supplémentaires sur le "
"contexte de l'invocation. Cela inclut les éléments ``connection`` et "
"``cursor``."

msgid ""
"Using the parameters, a slightly more complex version of the blocker could "
"include the connection name in the error message::"
msgstr ""
"En utilisant les paramètres, une version à peine plus complexe du bloqueur "
"pourrait inclure le nom de la connexion dans le message d'erreur ::"

msgid "For a more complete example, a query logger could look like this::"
msgstr ""
"Pour un exemple plus complet, un journaliseur de requête pourrait ressembler "
"à ceci ::"

msgid ""
"To use this, you would create a logger object and install it as a wrapper::"
msgstr ""
"Pour utiliser cela, il faut créer un objet de journalisation et l'installer "
"comme enveloppeur ::"

msgid "``connection.execute_wrapper()``"
msgstr "``connection.execute_wrapper()``"

msgid ""
"Returns a context manager which, when entered, installs a wrapper around "
"database query executions, and when exited, removes the wrapper. The wrapper "
"is installed on the thread-local connection object."
msgstr ""
"Renvoie un gestionnaire de contexte qui, en entrée, installe la fonction "
"d'enveloppement autour des exécutions de requêtes de base de données, et en "
"sortie enlève cette fonction. La fonction d'enveloppement est installée sur "
"l'objet connexion du fil d'exécution local."

msgid ""
"``wrapper`` is a callable taking five arguments.  It is called for every "
"query execution in the scope of the context manager, with arguments "
"``execute``, ``sql``, ``params``, ``many``, and ``context`` as described "
"above. It's expected to call ``execute(sql, params, many, context)`` and "
"return the return value of that call."
msgstr ""
"``wrapper`` est un objet exécutable acceptant cinq paramètres. Il est appelé "
"lors de chaque exécution de requête dans la portée du gestionnaire de "
"contexte, avec les arguments ``execute``, ``sql``, ``params``, ``many`` et "
"``context``, tels que décrits ci-dessus. Cet exécutable est censé appeler "
"``execute(sql, params, many, context)`` et renvoyer la valeur de renvoi de "
"cet appel."

msgid "Managers"
msgstr "Gestionnaires"

msgid ""
"A ``Manager`` is the interface through which database query operations are "
"provided to Django models. At least one ``Manager`` exists for every model "
"in a Django application."
msgstr ""
"Un gestionnaire (objet ``Manager``) est l'interface par laquelle les "
"opérations de requêtes de base de données sont mises à disposition des "
"modèles Django. Il existe au moins un ``Manager`` pour chaque modèle d'une "
"application Django."

msgid ""
"The way ``Manager`` classes work is documented in :doc:`/topics/db/queries`; "
"this document specifically touches on model options that customize "
"``Manager`` behavior."
msgstr ""
"Le fonctionnement des classes ``Manager`` est documenté dans :doc:`/topics/"
"db/queries`; ce document aborde spécifiquement les options de modèles qui "
"personnalisent le comportement des gestionnaires."

msgid "Manager names"
msgstr "Noms des gestionnaires"

msgid ""
"By default, Django adds a ``Manager`` with the name ``objects`` to every "
"Django model class. However, if you want to use ``objects`` as a field name, "
"or if you want to use a name other than ``objects`` for the ``Manager``, you "
"can rename it on a per-model basis. To rename the ``Manager`` for a given "
"class, define a class attribute of type ``models.Manager()`` on that model. "
"For example::"
msgstr ""
"Par défaut, Django ajoute un gestionnaire nommé ``objects`` à chaque classe "
"de modèle Django. Cependant, si vous aimeriez utiliser ``objects`` comme nom "
"de champ ou que vous aimeriez nommer le gestionnaire autrement que "
"``objects``, vous pouvez le renommer au niveau du modèle. Pour renommer le "
"gestionnaire d'une classe donnée, définissez un attribut de classe de type "
"``models.Manager()`` dans le modèle. Par exemple ::"

msgid ""
"Using this example model, ``Person.objects`` will generate an "
"``AttributeError`` exception, but ``Person.people.all()`` will provide a "
"list of all ``Person`` objects."
msgstr ""
"En utilisant cet exemple de modèle, ``Person.objects`` générera une "
"exception ``AttributeError``, mais ``Person.people.all()`` fournira "
"effectivement la liste de tous les objets ``Person``."

msgid "Custom managers"
msgstr "Gestionnaires personnalisés"

msgid ""
"You can use a custom ``Manager`` in a particular model by extending the base "
"``Manager`` class and instantiating your custom ``Manager`` in your model."
msgstr ""
"Vous pouvez utiliser un gestionnaire personnalisé dans un modèle particulier "
"en étendant la classe ``Manager`` de base et en créant votre propre instance "
"de ``Manager`` dans votre modèle."

msgid ""
"There are two reasons you might want to customize a ``Manager``: to add "
"extra ``Manager`` methods, and/or to modify the initial ``QuerySet`` the "
"``Manager`` returns."
msgstr ""
"Il y a deux raisons de vouloir personnaliser un gestionnaire : pour lui "
"ajouter des méthodes supplémentaires ou pour modifier l'objet ``QuerySet`` "
"initial que le gestionnaire renvoie."

msgid "Adding extra manager methods"
msgstr "Ajout de méthodes de gestionnaire supplémentaires"

msgid ""
"Adding extra ``Manager`` methods is the preferred way to add \"table-level\" "
"functionality to your models. (For \"row-level\" functionality -- i.e., "
"functions that act on a single instance of a model object -- use :ref:`Model "
"methods <model-methods>`, not custom ``Manager`` methods.)"
msgstr ""
"L'ajout de méthodes de gestionnaire supplémentaires est la façon privilégiée "
"d'ajouter des fonctionnalités au « niveau table » à des modèles (pour les "
"fonctionnalités au « niveau ligne », c'est-à-dire les fonctions qui agissent "
"sur une seule instance d'un objet de modèle, utilisez les :ref:`méthodes de "
"modèles <model-methods>` et non pas des méthodes de gestionnaire "
"personnalisées)."

msgid "For example, this custom ``Manager`` adds a method ``with_counts()``::"
msgstr ""
"Par exemple, ce ``Manager`` personnalisé ajoute une méthode "
"``with_counts()``::"

msgid ""
"With this example, you'd use ``OpinionPoll.objects.with_counts()`` to get a "
"``QuerySet`` of ``OpinionPoll`` objects with the extra ``num_responses`` "
"attribute attached."
msgstr ""
"Avec cet exemple, vous écririez ``OpinionPoll.objects.with_counts()`` pour "
"obtenir un jeu ``QuerySet`` d'objets ``OpinionPoll`` comportant l'attribut "
"supplémentaire ``num_responses``."

msgid ""
"A custom ``Manager`` method can return anything you want. It doesn't have to "
"return a ``QuerySet``."
msgstr ""
"Une méthode de gestionnaire personnalisée peut renvoyer tout ce qu'on veut, "
"elle n'est pas tenue de renvoyer un objet ``QuerySet``."

msgid ""
"Another thing to note is that ``Manager`` methods can access ``self.model`` "
"to get the model class to which they're attached."
msgstr ""
"Une autre chose à relever est que les méthodes de gestionnaire ont accès à "
"``self.model`` pour obtenir la classe de modèle à laquelle elles sont liées."

msgid "Modifying a manager's initial ``QuerySet``"
msgstr "Modification des ``QuerySet`` initiaux des gestionnaires"

msgid ""
"A ``Manager``’s base ``QuerySet`` returns all objects in the system. For "
"example, using this model::"
msgstr ""
"Le ``QuerySet`` de base d'un gestionnaire renvoie tous les objets du "
"système. Par exemple, en utilisant ce modèle ::"

msgid ""
"...the statement ``Book.objects.all()`` will return all books in the "
"database."
msgstr ""
"…l'instruction ``Book.objects.all()`` renvoie tous les livres de la base de "
"données."

msgid ""
"You can override a ``Manager``’s base ``QuerySet`` by overriding the "
"``Manager.get_queryset()`` method. ``get_queryset()`` should return a "
"``QuerySet`` with the properties you require."
msgstr ""
"Vous pouvez surcharger le ``QuerySet`` de base d'un gestionnaire en "
"surchargeant la méthode ``Manager.get_queryset()``. ``get_queryset()`` doit "
"renvoyer un objet ``QuerySet`` doté des propriétés nécessaires."

msgid ""
"For example, the following model has *two* ``Manager``\\s -- one that "
"returns all objects, and one that returns only the books by Roald Dahl::"
msgstr ""
"Par exemple, le modèle suivant possède *deux* gestionnaires, un qui renvoie "
"tous les objets et un autre qui ne renvoie que les livres de Roald Dahl ::"

msgid ""
"With this sample model, ``Book.objects.all()`` will return all books in the "
"database, but ``Book.dahl_objects.all()`` will only return the ones written "
"by Roald Dahl."
msgstr ""
"Avec cet exemple de modèle, ``Book.objects.all()`` renvoie tous les livres "
"de la base de données, mais ``Book.dahl_objects.all()`` ne retourne que ceux "
"qui ont été écrits par Roald Dahl."

msgid ""
"Because ``get_queryset()`` returns a ``QuerySet`` object, you can use "
"``filter()``, ``exclude()`` and all the other ``QuerySet`` methods on it. So "
"these statements are all legal::"
msgstr ""
"Comme ``get_queryset()`` renvoie un objet ``QuerySet``, vous pouvez "
"appliquer ``filter()``, ``exclude()`` et toutes les autres méthodes de "
"``QuerySet``. Ainsi, ces instructions sont toutes valables ::"

msgid ""
"This example also pointed out another interesting technique: using multiple "
"managers on the same model. You can attach as many ``Manager()`` instances "
"to a model as you'd like. This is a non-repetitive way to define common "
"\"filters\" for your models."
msgstr ""
"Cet exemple a aussi mis en évidence une autre technique intéressante : "
"l'emploi de plusieurs gestionnaires dans un même modèle. Vous pouvez lier "
"autant d'instances de gestionnaires que vous voulez à un modèle. C'est une "
"manière non répétitive de définir des « filtres » fréquemment utilisés dans "
"des modèles."

msgid ""
"This example allows you to request ``Person.authors.all()``, ``Person."
"editors.all()``, and ``Person.people.all()``, yielding predictable results."
msgstr ""
"Cet exemple permet d'effectuer les requêtes ``Person.authors.all()``, "
"``Person.editors.all()`` et ``Person.people.all()`` en sachant à quoi vous "
"attendre au niveau des résultats."

msgid "Default managers"
msgstr "Gestionnaires par défaut"

msgid ""
"If you use custom ``Manager`` objects, take note that the first ``Manager`` "
"Django encounters (in the order in which they're defined in the model) has a "
"special status. Django interprets the first ``Manager`` defined in a class "
"as the \"default\" ``Manager``, and several parts of Django (including :"
"djadmin:`dumpdata`) will use that ``Manager`` exclusively for that model. As "
"a result, it's a good idea to be careful in your choice of default manager "
"in order to avoid a situation where overriding ``get_queryset()`` results in "
"an inability to retrieve objects you'd like to work with."
msgstr ""
"Si vous utilisez des objets ``Manager`` personnalisés, sachez que le premier "
"``Manager`` que Django rencontre (dans l'ordre où ils ont été définis dans "
"le modèle) reçoit un statut spécial. Django interprète le premier "
"gestionnaire défini dans une classe comme le gestionnaire par défaut, et "
"plusieurs parties de Django (y compris :djadmin:`dumpdata`) utilisent "
"exclusivement ce gestionnaire pour le modèle en question. En conséquence, il "
"est conseillé de choisir avec prudence le gestionnaire par défaut afin "
"d'éviter une situation où la surcharge de ``get_queryset()`` aboutit à "
"l'incapacité de récupérer des objets avec lesquels vous avez besoin de "
"travailler."

msgid ""
"You can specify a custom default manager using :attr:`Meta."
"default_manager_name <django.db.models.Options.default_manager_name>`."
msgstr ""
"Vous pouvez définir un gestionnaire par défaut personnalisé en utilisant :"
"attr:`Meta.default_manager_name <django.db.models.Options."
"default_manager_name>`."

msgid ""
"If you're writing some code that must handle an unknown model, for example, "
"in a third-party app that implements a generic view, use this manager (or :"
"attr:`~Model._base_manager`) rather than assuming the model has an "
"``objects`` manager."
msgstr ""
"Si par exemple vous écrivez du code qui doit gérer un modèle inconnu dans "
"une application tierce qui implémente une vue générique, utilisez ce "
"gestionnaire (ou :attr:`~Model._base_manager`) plutôt que de supposer que le "
"modèle possède un gestionnaire ``objects``."

msgid "Base managers"
msgstr "Gestionnaires de base"

msgid "Using managers for related object access"
msgstr "Utilisation de gestionnaires pour accéder aux objets liés"

msgid ""
"By default, Django uses an instance of the ``Model._base_manager`` manager "
"class when accessing related objects (i.e. ``choice.question``), not the "
"``_default_manager`` on the related object. This is because Django needs to "
"be able to retrieve the related object, even if it would otherwise be "
"filtered out (and hence be inaccessible) by the default manager."
msgstr ""
"Par défaut, Django utilise une instance de classe de gestionnaire  ``Model."
"_base_manager`` pour accéder aux objets liés (par ex. ``choice.question``), "
"et non pas le gestionnaire ``_default_manager`` de l'objet lié. Ceci parce "
"que Django doit absolument être capable de récupérer l'objet lié, même dans "
"les cas où il serait filtré (et donc inaccessible) par son gestionnaire par "
"défaut."

msgid ""
"If the normal base manager class (:class:`django.db.models.Manager`) isn't "
"appropriate for your circumstances, you can tell Django which class to use "
"by setting :attr:`Meta.base_manager_name <django.db.models.Options."
"base_manager_name>`."
msgstr ""
"Si la classe de gestionnaire de base (:class:`django.db.models.Manager`) ne "
"convient pas dans un cas particulier, vous pouvez dire à Django quelle "
"classe utiliser en définissant :attr:`Meta.base_manager_name <django.db."
"models.Options.base_manager_name>`."

msgid ""
"Base managers aren't used when querying on related models, or when :ref:"
"`accessing a one-to-many or many-to-many relationship <backwards-related-"
"objects>`. For example, if the ``Question`` model :ref:`from the tutorial "
"<creating-models>` had a ``deleted`` field and a base manager that filters "
"out instances with ``deleted=True``, a queryset like ``Choice.objects."
"filter(question__name__startswith='What')`` would include choices related to "
"deleted questions."
msgstr ""
"Les gestionnaires de base ne sont pas utilisés lors de requêtes à partir de "
"modèles liés ou lors d'accès aux :ref:`relations un-à-un ou plusieurs-à-"
"plusieurs <backwards-related-objects>`. Par exemple, si le modèle "
"``Question`` :ref:`du tutoriel <creating-models>` avait un champ ``deleted`` "
"et un gestionnaire de base qui excluait les instances ayant "
"``deleted=True``, une requête telle que ``Choice.objects."
"filter(question__name__startswith='What')`` inclurait aussi les choix liés "
"aux questions supprimées."

msgid "Don't filter away any results in this type of manager subclass"
msgstr ""
"Ne jamais filtrer les résultats dans ce type de sous-classe de gestionnaire"

msgid ""
"This manager is used to access objects that are related to from some other "
"model. In those situations, Django has to be able to see all the objects for "
"the model it is fetching, so that *anything* which is referred to can be "
"retrieved."
msgstr ""
"Ce gestionnaire est utilisé pour accéder aux objets liés à partir d'un autre "
"modèle. Dans ces situations, Django doit être capable de voir tous les "
"objets du modèle qu'il récupère, afin que *tout* ce qui est référencé puisse "
"être récupéré."

msgid ""
"Therefore, you should not override ``get_queryset()`` to filter out any "
"rows. If you do so, Django will return incomplete results."
msgstr ""
"Pour cette raison, vous ne devez pas surcharger ``get_queryset()`` pour "
"exclure certaines lignes. Si vous le faites, Django renverra des résultats "
"incomplets."

msgid "Calling custom ``QuerySet`` methods from the manager"
msgstr "Appel personnalisé de méthodes ``QuerySet`` depuis le gestionnaire"

msgid ""
"While most methods from the standard ``QuerySet`` are accessible directly "
"from the ``Manager``, this is only the case for the extra methods defined on "
"a custom ``QuerySet`` if you also implement them on the ``Manager``::"
msgstr ""
"Alors que la plupart des méthodes d'un ``QuerySet`` standard sont "
"directement accessibles à partir d'un ``Manager``, ce n'est le cas pour les "
"méthodes supplémentaires définies sur un ``QuerySet`` personnalisé que si "
"vous les implémentez également sur le ``Manager``::"

msgid ""
"This example allows you to call both ``authors()`` and ``editors()`` "
"directly from the manager ``Person.people``."
msgstr ""
"Cet exemple permet d'appeler ``authors()`` et ``editors()`` directement "
"depuis le gestionnaire ``Person.people``."

msgid "Creating a manager with ``QuerySet`` methods"
msgstr "Création d'objet ``Manager`` avec des méthodes de ``QuerySet``"

msgid ""
"In lieu of the above approach which requires duplicating methods on both the "
"``QuerySet`` and the ``Manager``, :meth:`QuerySet.as_manager() <django.db."
"models.query.QuerySet.as_manager>` can be used to create an instance of "
"``Manager`` with a copy of a custom ``QuerySet``’s methods::"
msgstr ""
"En lieu et place de l'approche ci-dessus qui nécessite de dupliquer les "
"méthodes à la fois sur les objets ``QuerySet`` et ``Manager``,  :meth:"
"`QuerySet.as_manager() <django.db.models.query.QuerySet.as_manager>` peut "
"être utilisé pour créer une instance de ``Manager`` avec une copie des "
"méthodes d'un objet ``QuerySet`` personnalisé ::"

msgid ""
"The ``Manager`` instance created by :meth:`QuerySet.as_manager() <django.db."
"models.query.QuerySet.as_manager>` will be virtually identical to the "
"``PersonManager`` from the previous example."
msgstr ""
"L'instance de ``Manager`` créée par :meth:`QuerySet.as_manager() <django.db."
"models.query.QuerySet.as_manager>` sera pratiquement identique au "
"``PersonManager`` de l'exemple précédent."

msgid ""
"Not every ``QuerySet`` method makes sense at the ``Manager`` level; for "
"instance we intentionally prevent the :meth:`QuerySet.delete() <django.db."
"models.query.QuerySet.delete>` method from being copied onto the ``Manager`` "
"class."
msgstr ""
"Toutes les méthodes ``QuerySet`` n'ont pas forcément de sens au niveau "
"``Manager``; par exemple, nous empêchons volontairement la méthode :meth:"
"`QuerySet.delete() <django.db.models.query.QuerySet.delete>` d'être copiée "
"vers la classe ``Manager``."

msgid "Methods are copied according to the following rules:"
msgstr "Les méthodes sont copiées selon les règles suivantes :"

msgid "Public methods are copied by default."
msgstr "Les méthodes publiques sont copiées par défaut."

msgid ""
"Private methods (starting with an underscore) are not copied by default."
msgstr ""
"Les méthodes privées (commençant par un soulignement) ne sont pas copiées "
"par défaut."

msgid ""
"Methods with a ``queryset_only`` attribute set to ``False`` are always "
"copied."
msgstr ""
"Les méthodes avec un attribut ``queryset_only`` à ``False`` sont toujours "
"copiées."

msgid ""
"Methods with a ``queryset_only`` attribute set to ``True`` are never copied."
msgstr ""
"Les méthodes avec un attribut ``queryset_only`` à ``True`` ne sont jamais "
"copiées."

msgid "``from_queryset()``"
msgstr "``from_queryset()``"

msgid ""
"For advanced usage you might want both a custom ``Manager`` and a custom "
"``QuerySet``. You can do that by calling ``Manager.from_queryset()`` which "
"returns a *subclass* of your base ``Manager`` with a copy of the custom "
"``QuerySet`` methods::"
msgstr ""
"Pour une utilisation plus avancée, il peut être souhaitable d'avoir à la "
"fois un ``Manager`` personnalisé et un ``QuerySet`` personnalisé. Vous "
"pouvez le faire en appelant ``Manager.from_queryset()`` qui renvoie une "
"*sous-classe* du ``Manager`` de base avec une copie des méthodes "
"``QuerySet`` personnalisées ::"

msgid "You may also store the generated class into a variable::"
msgstr "Vous pouvez également stocker la classe générée dans une variable ::"

msgid "Custom managers and model inheritance"
msgstr "Gestionnaires personnalisés et héritage de modèle"

msgid ""
"Here's how Django handles custom managers and :ref:`model inheritance <model-"
"inheritance>`:"
msgstr ""
"Voici comment Django gère les gestionnaires personnalisés dans le contexte :"
"ref:`d'héritage des modèles <model-inheritance>`:"

msgid ""
"Managers from base classes are always inherited by the child class, using "
"Python's normal name resolution order (names on the child class override all "
"others; then come names on the first parent class, and so on)."
msgstr ""
"Les gestionnaires des classes de base sont toujours hérités par les classes "
"enfants, par le moyen Python habituel de l'ordre de résolution de nom (les "
"noms des classes enfants surchargent ceux de leurs parents)."

msgid ""
"If no managers are declared on a model and/or its parents, Django "
"automatically creates the ``objects`` manager."
msgstr ""
"Si aucun gestionnaire n'est déclaré dans un modèle ou dans ses parents, "
"Django crée automatiquement le gestionnaire ``objects``."

msgid ""
"The default manager on a class is either the one chosen with :attr:`Meta."
"default_manager_name <django.db.models.Options.default_manager_name>`, or "
"the first manager declared on the model, or the default manager of the first "
"parent model."
msgstr ""
"Le gestionnaire par défaut d'une classe est soit celui qui est choisi par :"
"attr:`Meta.default_manager_name <django.db.models.Options."
"default_manager_name>`, soit le premier gestionnaire déclaré dans le modèle, "
"soit le gestionnaire par défaut du premier modèle parent."

msgid ""
"These rules provide the necessary flexibility if you want to install a "
"collection of custom managers on a group of models, via an abstract base "
"class, but still customize the default manager. For example, suppose you "
"have this base class::"
msgstr ""
"Ces règles assurent la souplesse nécessaire permettant d'installer un "
"ensemble de gestionnaires personnalisés sur un groupe de modèles via une "
"classe de base abstraite, tout en personnalisant aussi le gestionnaire par "
"défaut. Prenons l'exemple de cette classe de base ::"

msgid ""
"If you use this directly in a child class, ``objects`` will be the default "
"manager if you declare no managers in the child class::"
msgstr ""
"Si vous l'utilisez directement dans une classe enfant, ``objects`` sera le "
"gestionnaire par défaut si aucun gestionnaire n'est déclaré dans la classe "
"enfant ::"

msgid ""
"If you want to inherit from ``AbstractBase``, but provide a different "
"default manager, you can provide the default manager on the child class::"
msgstr ""
"Si vous voulez hériter de ``AbstractBase``, mais avec un autre gestionnaire "
"par défaut, vous pouvez définir le gestionnaire par défaut dans la classe "
"enfant ::"

msgid ""
"Here, ``default_manager`` is the default. The ``objects`` manager is still "
"available, since it's inherited, but isn't used as the default."
msgstr ""
"Ici, ``default_manager`` est le gestionnaire par défaut. Le gestionnaire "
"``objects`` est toujours disponible, puisqu'il est hérité, mais il n'est "
"plus le gestionnaire par défaut."

msgid ""
"Finally for this example, suppose you want to add extra managers to the "
"child class, but still use the default from ``AbstractBase``. You can't add "
"the new manager directly in the child class, as that would override the "
"default and you would have to also explicitly include all the managers from "
"the abstract base class. The solution is to put the extra managers in "
"another base class and introduce it into the inheritance hierarchy *after* "
"the defaults::"
msgstr ""
"Pour terminer avec cet exemple, supposons que vous vouliez ajouter des "
"gestionnaires supplémentaires dans la classe enfant tout en conservant le "
"gestionnaire par défaut de ``AbstractBase``. Vous ne pouvez pas ajouter "
"directement le nouveau gestionnaire dans la classe enfant, car cela "
"surchargerait le gestionnaire par défaut et vous devriez aussi inclure "
"explicitement tous les gestionnaires de la classe de base abstraite. La "
"solution est de placer les gestionnaires supplémentaires dans une autre "
"classe de base et introduire celle-ci dans la hiérarchie d'héritage *après* "
"ceux par défaut ::"

msgid ""
"Note that while you can *define* a custom manager on the abstract model, you "
"can't *invoke* any methods using the abstract model. That is::"
msgstr ""
"Notez que même si vous pouvez *définir* un gestionnaire personnalisé dans le "
"modèle abstrait, vous ne pouvez *appeler* aucune de ses méthodes au travers "
"du modèle abstrait. C'est-à-dire ::"

msgid "is legal, but::"
msgstr "est légal, mais ::"

msgid ""
"will raise an exception. This is because managers are intended to "
"encapsulate logic for managing collections of objects. Since you can't have "
"a collection of abstract objects, it doesn't make sense to be managing them. "
"If you have functionality that applies to the abstract model, you should put "
"that functionality in a ``staticmethod`` or ``classmethod`` on the abstract "
"model."
msgstr ""
"générera une exception. C'est parce que les gestionnaires sont censés "
"intégrer la logique de gestion d'ensembles d'objets. Comme il n'est pas "
"possible d'avoir un ensemble d'objets abstraits, leur gestion n'a pas de "
"sens. Si vous gérez des fonctionnalités s'appliquant au modèle abstrait, "
"vous devriez les placer dans une méthode ``staticmethod`` ou ``classmethod`` "
"du modèle abstrait."

msgid "Implementation concerns"
msgstr "Détails d'implémentation"

msgid ""
"Whatever features you add to your custom ``Manager``, it must be possible to "
"make a shallow copy of a ``Manager`` instance; i.e., the following code must "
"work:"
msgstr ""
"Quelles que soient les fonctionnalités ajoutées à un gestionnaire "
"personnalisé, il doit toujours être possible de faire une copie légère "
"(« shallow ») d'une de ses instances ; c'est-à-dire que le code suivant doit "
"fonctionner :"

msgid ""
"Django makes shallow copies of manager objects during certain queries; if "
"your Manager cannot be copied, those queries will fail."
msgstr ""
"Django effectue des copies légères des objets de gestionnaire durant "
"certaines requêtes ; si votre gestionnaire ne peut pas être copié, ces "
"requêtes échoueront."

msgid ""
"This won't be an issue for most custom managers. If you are just adding "
"simple methods to your ``Manager``, it is unlikely that you will "
"inadvertently make instances of your ``Manager`` uncopyable. However, if "
"you're overriding ``__getattr__`` or some other private method of your "
"``Manager`` object that controls object state, you should ensure that you "
"don't affect the ability of your ``Manager`` to be copied."
msgstr ""
"Ce ne sera pas un problème pour la plupart des gestionnaires personnalisés. "
"Si vous ne faites qu'ajouter des méthodes simples à votre classe "
"``Manager``, il est improbable que vous empêchiez la copie de votre "
"gestionnaire sans le vouloir. Cependant, si vous surchargez ``__getattr__`` "
"ou d'autres méthodes privées de l'objet ``Manager`` qui contrôlent l'état de "
"l'objet, il faut vous assurer que vous n'altériez pas la capacité de votre "
"gestionnaire d'être copié."

msgid "Models"
msgstr "Modèles"

msgid "The basics:"
msgstr "Les bases :"

msgid ""
"Each model is a Python class that subclasses :class:`django.db.models.Model`."
msgstr ""
"Chaque modèle est une classe Python qui hérite de :class:`django.db.models."
"Model`."

msgid "Each attribute of the model represents a database field."
msgstr "Chaque attribut du modèle représente un champ de base de données."

msgid ""
"With all of this, Django gives you an automatically-generated database-"
"access API; see :doc:`/topics/db/queries`."
msgstr ""
"Avec tout ça, Django vous offre une API d'accès à la base de données générée "
"automatiquement ; voir :doc:`/topics/db/queries`."

msgid "Quick example"
msgstr "Exemple rapide"

msgid ""
"This example model defines a ``Person``, which has a ``first_name`` and "
"``last_name``::"
msgstr ""
"Cet exemple de modèle définit une personne (``Person``) avec un prénom "
"(``first_name``) et un nom (``last_name``) ::"

msgid ""
"``first_name`` and ``last_name`` are fields_ of the model. Each field is "
"specified as a class attribute, and each attribute maps to a database column."
msgstr ""
"``first_name`` et ``last_name`` sont des champs_ du modèle. Chaque champ est "
"défini comme un attribut de classe, et chaque attribut correspond à une "
"colonne de base de données."

msgid "The above ``Person`` model would create a database table like this:"
msgstr ""
"Le modèle ``Person`` ci-dessus va créer une table de base de données comme "
"celle-ci :"

msgid "Some technical notes:"
msgstr "Quelques notes techniques :"

msgid ""
"The name of the table, ``myapp_person``, is automatically derived from some "
"model metadata but can be overridden. See :ref:`table-names` for more "
"details."
msgstr ""
"Le nom de la table, ``myapp_person``, est automatiquement dérivé de "
"certaines métadonnées du modèle mais peut être surchargé. Consultez :ref:"
"`table-names` pour plus de détails."

msgid ""
"An ``id`` field is added automatically, but this behavior can be overridden. "
"See :ref:`automatic-primary-key-fields`."
msgstr ""
"Un champ ``id`` est ajouté automatiquement, mais ce comportement peut être "
"adapté. Voir :ref:`automatic-primary-key-fields`."

msgid ""
"The ``CREATE TABLE`` SQL in this example is formatted using PostgreSQL "
"syntax, but it's worth noting Django uses SQL tailored to the database "
"backend specified in your :doc:`settings file </topics/settings>`."
msgstr ""
"Le code SQL ``CREATE TABLE`` de cet exemple est mis en forme avec la syntaxe "
"PostgreSQL, mais il est utile de relever que Django utilise du code SQL "
"adapté au moteur de base de données indiqué dans votre :doc:`fichier de "
"réglages </topics/settings>`."

msgid "Using models"
msgstr "Utilisation des modèles"

msgid ""
"Once you have defined your models, you need to tell Django you're going to "
"*use* those models. Do this by editing your settings file and changing the :"
"setting:`INSTALLED_APPS` setting to add the name of the module that contains "
"your ``models.py``."
msgstr ""
"Après avoir défini les modèles, il faut indiquer à Django que vous souhaitez "
"*utiliser* ces modèles. Vous pouvez le faire en éditant votre fichier de "
"réglages et en modifiant le réglage :setting:`INSTALLED_APPS` pour y ajouter "
"le nom du module qui contient ``models.py``."

msgid ""
"For example, if the models for your application live in the module ``myapp."
"models`` (the package structure that is created for an application by the :"
"djadmin:`manage.py startapp <startapp>` script), :setting:`INSTALLED_APPS` "
"should read, in part::"
msgstr ""
"Par exemple, si le modèle de votre application se trouve dans le module "
"``myapp.models`` (la structure de paquet créée pour une application par le "
"script  :djadmin:`manage.py startapp <startapp>`),  :setting:"
"`INSTALLED_APPS` devrait contenir ::"

msgid ""
"When you add new apps to :setting:`INSTALLED_APPS`, be sure to run :djadmin:"
"`manage.py migrate <migrate>`, optionally making migrations for them first "
"with :djadmin:`manage.py makemigrations <makemigrations>`."
msgstr ""
"Lorsque vous ajoutez de nouvelles applications à :setting:`INSTALLED_APPS`, "
"n'oubliez pas ensuite de lancer :djadmin:`manage.py migrate <migrate>`, en "
"créant éventuellement d'abord des migrations pour ces applications avec :"
"djadmin:`manage.py makemigrations <makemigrations>`."

msgid "Fields"
msgstr "Champs"

msgid ""
"The most important part of a model -- and the only required part of a model "
"-- is the list of database fields it defines. Fields are specified by class "
"attributes. Be careful not to choose field names that conflict with the :doc:"
"`models API </ref/models/instances>` like ``clean``, ``save``, or ``delete``."
msgstr ""
"La partie la plus importante d'un modèle (et la seule qui soit obligatoire) "
"est la liste des champs de base de données qu'il définit. Les champs sont "
"définis par des attributs de classe. Faites attention à ne pas choisir des "
"noms de champs qui entrent en conflit avec l’:doc:`API des modèles </ref/"
"models/instances>` comme ``clean``, ``save`` ou ``delete``."

msgid "Example::"
msgstr "Exemple ::"

msgid "Field types"
msgstr "Types de champs"

msgid ""
"Each field in your model should be an instance of the appropriate :class:"
"`~django.db.models.Field` class. Django uses the field class types to "
"determine a few things:"
msgstr ""
"Chaque champ de votre modèle doit être une instance de la classe :class:"
"`~django.db.models.Field` appropriée. Django utilise les types des classes "
"de champs pour déterminer un certain nombre de choses :"

msgid ""
"The column type, which tells the database what kind of data to store (e.g. "
"``INTEGER``, ``VARCHAR``, ``TEXT``)."
msgstr ""
"Le type de la colonne, qui indique à la base de données le genre de données "
"à stocker (par ex. ``INTEGER``, ``VARCHAR``, ``TEXT``)."

msgid ""
"The default HTML :doc:`widget </ref/forms/widgets>` to use when rendering a "
"form field (e.g. ``<input type=\"text\">``, ``<select>``)."
msgstr ""
"Le :doc:`composant HTML </ref/forms/widgets>` par défaut à utiliser lors de "
"la création d'un champ de formulaire (par ex. : ``<input type=\"text\">``, "
"``<select>``)."

msgid ""
"The minimal validation requirements, used in Django's admin and in "
"automatically-generated forms."
msgstr ""
"Les exigences minimales de validation, utilisées dans l'administration de "
"Django et dans les formulaires générés automatiquement."

msgid ""
"Django ships with dozens of built-in field types; you can find the complete "
"list in the :ref:`model field reference <model-field-types>`. You can easily "
"write your own fields if Django's built-in ones don't do the trick; see :doc:"
"`/howto/custom-model-fields`."
msgstr ""
"Django est fourni avec des dizaines de types de champs intégrés ; vous "
"trouverez la liste complète dans la :ref:`référence des champs de modèle "
"<model-field-types>`. Vous pouvez facilement écrire vos propres champs si "
"ceux proposés par Django ne font pas l'affaire ; voir :doc:`/howto/custom-"
"model-fields`."

msgid "Field options"
msgstr "Options des champs"

msgid ""
"Each field takes a certain set of field-specific arguments (documented in "
"the :ref:`model field reference <model-field-types>`). For example, :class:"
"`~django.db.models.CharField` (and its subclasses) require a :attr:`~django."
"db.models.CharField.max_length` argument which specifies the size of the "
"``VARCHAR`` database field used to store the data."
msgstr ""
"Chaque champ accepte un certain nombre de paramètres spécifiques (documentés "
"dans la :ref:`référence des champs de modèle <model-field-types>`). Par "
"exemple, :class:`~django.db.models.CharField` (et ses sous-classes) exige un "
"paramètre :attr:`~django.db.models.CharField.max_length` indiquant la taille "
"du champ de base de données ``VARCHAR`` qui stockera les données."

msgid ""
"There's also a set of common arguments available to all field types. All are "
"optional. They're fully explained in the :ref:`reference <common-model-field-"
"options>`, but here's a quick summary of the most often-used ones:"
msgstr ""
"Il existe aussi un ensemble de paramètres communs à tous les types de "
"champs. Ils sont tous facultatifs. Ils sont décrits en détails dans la :ref:"
"`référence <common-model-field-options>`, mais voici un résumé rapide de "
"ceux qui sont le plus souvent utilisés :"

msgid ":attr:`~Field.null`"
msgstr ":attr:`~Field.null`"

msgid ""
"If ``True``, Django will store empty values as ``NULL`` in the database. "
"Default is ``False``."
msgstr ""
"Si la valeur est ``True``, Django stocke les valeurs vides avec  ``NULL`` "
"dans la base de données. La valeur par défaut est ``False``."

msgid ":attr:`~Field.blank`"
msgstr ":attr:`~Field.blank`"

msgid "If ``True``, the field is allowed to be blank. Default is ``False``."
msgstr ""
"Si la valeur est ``True``, le champ peut être vide. La valeur par défaut est "
"``False``."

msgid ""
"Note that this is different than :attr:`~Field.null`. :attr:`~Field.null` is "
"purely database-related, whereas :attr:`~Field.blank` is validation-related. "
"If a field has :attr:`blank=True <Field.blank>`, form validation will allow "
"entry of an empty value. If a field has :attr:`blank=False <Field.blank>`, "
"the field will be required."
msgstr ""
"Notez que ce n'est pas la même chose que :attr:`~Field.null`. :attr:`~Field."
"null` est purement lié à la base de données alors que :attr:`~Field.blank` "
"est lié à la validation. Si un champ possède :attr:`blank=True <Field."
"blank>`, la validation de formulaire permet la saisie d'une valeur vide. Si "
"un champ possède :attr:`blank=False <Field.blank>`, le champ est obligatoire."

msgid ":attr:`~Field.choices`"
msgstr ":attr:`~Field.choices`"

msgid ""
"A :term:`sequence` of 2-value tuples, a :term:`mapping`, an :ref:"
"`enumeration type <field-choices-enum-types>`, or a callable (that expects "
"no arguments and returns any of the previous formats), to use as choices for "
"this field. If this is given, the default form widget will be a select box "
"instead of the standard text field and will limit choices to the choices "
"given."
msgstr ""
"Une  :term:`séquence <sequence>` de tuples binaires, un :term:`dictionnaire "
"<mapping>`, un :ref:`type énumération <field-choices-enum-types>` ou un "
"exécutable (n'attendant aucun argument et renvoyant l'un des formats "
"mentionnés) pour constituer les choix de ce champ. Quand ce paramètre est "
"présent, le composant de formulaire par défaut est une liste déroulante au "
"lieu du champ de texte standard et seules les valeurs proposées dans les "
"choix indiqués seront acceptées."

msgid "A choices list looks like this::"
msgstr "Une liste de choix ressemble à ceci ::"

msgid "A new migration is created each time the order of ``choices`` changes."
msgstr ""
"Une nouvelle migration est produite chaque fois que l'ordre des choix "
"``choices`` change."

msgid ""
"The first element in each tuple is the value that will be stored in the "
"database. The second element is displayed by the field's form widget."
msgstr ""
"Le premier élément de chaque tuple est la valeur qui sera stockée en base de "
"données. Le second élément est affiché par le composant du champ de "
"formulaire."

msgid ""
"Given a model instance, the display value for a field with ``choices`` can "
"be accessed using the :meth:`~django.db.models.Model.get_FOO_display` "
"method. For example::"
msgstr ""
"Étant donné une instance de modèle, on peut accéder à la valeur d'affichage "
"d'un champ à choix en utilisant la méthode :meth:`~django.db.models.Model."
"get_FOO_display`. Par exemple ::"

msgid ""
"You can also use enumeration classes to define ``choices`` in a concise way::"
msgstr ""
"Vous pouvez aussi utiliser des classes d'énumération pour définir "
"``choices`` d'une manière concise ::"

msgid ""
"Further examples are available in the :ref:`model field reference <field-"
"choices>`."
msgstr ""
"D'autres exemples sont disponibles dans la :ref:`référence des champs de "
"modèles <field-choices>`."

msgid "Support for mappings and callables was added."
msgstr ""
"La prise en charge de dictionnaires et d'objets exécutables a été ajoutée."

msgid ":attr:`~Field.default`"
msgstr ":attr:`~Field.default`"

msgid ""
"The default value for the field. This can be a value or a callable object. "
"If callable it will be called every time a new object is created."
msgstr ""
"La valeur par défaut du champ. Cela peut être une valeur ou un objet "
"exécutable. Dans ce dernier cas, l'objet est appelé lors de chaque création "
"d'un nouvel objet."

msgid ":attr:`~Field.help_text`"
msgstr ":attr:`~Field.help_text`"

msgid ""
"Extra \"help\" text to be displayed with the form widget. It's useful for "
"documentation even if your field isn't used on a form."
msgstr ""
"Texte d'aide supplémentaire à afficher avec le composant de formulaire. "
"Utile pour la documentation même si le champ n'est pas utilisé dans un "
"formulaire."

msgid ":attr:`~Field.primary_key`"
msgstr ":attr:`~Field.primary_key`"

msgid "If ``True``, this field is the primary key for the model."
msgstr ""
"Si la valeur est ``True``, ce champ représentera la clé primaire du modèle."

msgid ""
"If you don't specify :attr:`primary_key=True <Field.primary_key>` for any "
"fields in your model, Django will automatically add an :class:`IntegerField` "
"to hold the primary key, so you don't need to set :attr:`primary_key=True "
"<Field.primary_key>` on any of your fields unless you want to override the "
"default primary-key behavior. For more, see :ref:`automatic-primary-key-"
"fields`."
msgstr ""
"Si vous n'indiquez aucun paramètre :attr:`primary_key=True <Field."
"primary_key>` dans les champs d'un modèle, Django ajoute automatiquement un "
"champ :class:`IntegerField` pour constituer une clé primaire ; il n'est donc "
"pas nécessaire de définir le paramètre :attr:`primary_key=True <Field."
"primary_key>` pour un champ sauf si vous souhaitez modifier le comportement "
"par défaut de clé primaire automatique. Pour en savoir plus, consultez :ref:"
"`automatic-primary-key-fields`."

msgid ""
"The primary key field is read-only. If you change the value of the primary "
"key on an existing object and then save it, a new object will be created "
"alongside the old one. For example::"
msgstr ""
"Le champ de clé primaire est en lecture seule. Si vous modifiez la valeur de "
"la clé primaire d'un objet existant et que vous l'enregistrez, un nouvel "
"objet est créé en parallèle à l'ancien. Par exemple ::"

msgid ":attr:`~Field.unique`"
msgstr ":attr:`~Field.unique`"

msgid "If ``True``, this field must be unique throughout the table."
msgstr ""
"Si la valeur est ``True``, ce champ doit être unique dans toute la table."

msgid ""
"Again, these are just short descriptions of the most common field options. "
"Full details can be found in the :ref:`common model field option reference "
"<common-model-field-options>`."
msgstr ""
"Répétons encore une fois que ce n'était que de courtes descriptions des "
"options de champs les plus courantes. Des détails complets peuvent être "
"obtenus dans la :ref:`référence des options communes des champs de modèle "
"<common-model-field-options>`."

msgid "Automatic primary key fields"
msgstr "Champs clé primaire automatiques"

msgid ""
"By default, Django gives each model an auto-incrementing primary key with "
"the type specified per app in :attr:`AppConfig.default_auto_field <django."
"apps.AppConfig.default_auto_field>` or globally in the :setting:"
"`DEFAULT_AUTO_FIELD` setting. For example::"
msgstr ""
"Par défaut, Django donne à chaque modèle une clé primaire autoincrémentée "
"dont le type est défini par application selon :attr:`AppConfig."
"default_auto_field <django.apps.AppConfig.default_auto_field>` ou "
"globalement dans le réglage :setting:`DEFAULT_AUTO_FIELD`. Par exemple ::"

msgid ""
"If you'd like to specify a custom primary key, specify :attr:"
"`primary_key=True <Field.primary_key>` on one of your fields. If Django sees "
"you've explicitly set :attr:`Field.primary_key`, it won't add the automatic "
"``id`` column."
msgstr ""
"Si vous souhaitez spécifier une clé primaire personnalisée, ajoutez :attr:"
"`primary_key=True <Field.primary_key>` à l'un de vos champs. Si Django voit "
"que vous avez explicitement défini  :attr:`Field.primary_key`, il n'ajoutera "
"pas de colonne ``id`` automatique."

msgid ""
"Each model requires exactly one field to have :attr:`primary_key=True <Field."
"primary_key>` (either explicitly declared or automatically added)."
msgstr ""
"Pour chaque modèle, il est obligatoire d'avoir un et un seul champ ayant le "
"paramètre :attr:`primary_key=True <Field.primary_key>` (qu'il soit déclaré "
"explicitement ou ajouté automatiquement)."

msgid "Verbose field names"
msgstr "Noms de champs verbeux"

msgid ""
"Each field type, except for :class:`~django.db.models.ForeignKey`, :class:"
"`~django.db.models.ManyToManyField` and :class:`~django.db.models."
"OneToOneField`, takes an optional first positional argument -- a verbose "
"name. If the verbose name isn't given, Django will automatically create it "
"using the field's attribute name, converting underscores to spaces."
msgstr ""
"Chaque type de champ, à l'exception de :class:`~django.db.models."
"ForeignKey`, :class:`~django.db.models.ManyToManyField` et :class:`~django."
"db.models.OneToOneField`, accepte un premier paramètre positionnel "
"facultatif, un nom verbeux. Si le nom verbeux n'est pas défini, Django le "
"crée automatiquement en se basant sur le nom d'attribut du champ, remplaçant "
"les soulignements par des espaces."

msgid "In this example, the verbose name is ``\"person's first name\"``::"
msgstr "Dans cet exemple, le nom verbeux est ``\"person's first name\"``::"

msgid "In this example, the verbose name is ``\"first name\"``::"
msgstr "Dans cet exemple, le nom verbeux est ``\"first name\"``::"

msgid ""
":class:`~django.db.models.ForeignKey`, :class:`~django.db.models."
"ManyToManyField` and :class:`~django.db.models.OneToOneField` require the "
"first argument to be a model class, so use the :attr:`~Field.verbose_name` "
"keyword argument::"
msgstr ""
":class:`~django.db.models.ForeignKey`, :class:`~django.db.models."
"ManyToManyField` et :class:`~django.db.models.OneToOneField` exigent que le "
"premier paramètre soit une classe de modèle, il est donc nécessaire "
"d'utiliser le paramètre nommé :attr:`~Field.verbose_name`::"

msgid ""
"The convention is not to capitalize the first letter of the :attr:`~Field."
"verbose_name`. Django will automatically capitalize the first letter where "
"it needs to."
msgstr ""
"La convention est de ne pas mettre en majuscule la première lettre de :attr:"
"`~Field.verbose_name`. Django le fera automatiquement là où il pense que "
"c'est nécessaire."

msgid "Relationships"
msgstr "Relations"

msgid ""
"Clearly, the power of relational databases lies in relating tables to each "
"other. Django offers ways to define the three most common types of database "
"relationships: many-to-one, many-to-many and one-to-one."
msgstr ""
"Clairement, la puissance des base de données relationnelles se trouve dans "
"les liaisons entre tables. Django propose des méthodes pour définir les "
"trois types de relations les plus courantes : plusieurs-à-un, plusieurs-à-"
"plusieurs et un-à-un."

msgid ""
"To define a many-to-one relationship, use :class:`django.db.models."
"ForeignKey`. You use it just like any other :class:`~django.db.models.Field` "
"type: by including it as a class attribute of your model."
msgstr ""
"Pour définir une relation plusieurs-à-un, utilisez :class:`django.db.models."
"ForeignKey`. Son utilisation est pareille à celle des autres types de "
"champs :class:`~django.db.models.Field` : il s'agit d'un attribut de classe "
"d'un modèle."

msgid ""
":class:`~django.db.models.ForeignKey` requires a positional argument: the "
"class to which the model is related."
msgstr ""
":class:`~django.db.models.ForeignKey` exige un paramètre positionnel : la "
"classe à laquelle le modèle est lié."

msgid ""
"For example, if a ``Car`` model has a ``Manufacturer`` -- that is, a "
"``Manufacturer`` makes multiple cars but each ``Car`` only has one "
"``Manufacturer`` -- use the following definitions::"
msgstr ""
"Par exemple, si un modèle ``Car`` (voiture) possède un ``Manufacturer`` "
"(fabriquant), c'est-à-dire qu'un ``Manufacturer`` peut produire plusieurs "
"voitures mais chaque ``Car`` n'a qu'un seul ``Manufacturer``, voici le code "
"correspondant ::"

msgid ""
"You can also create :ref:`recursive relationships <recursive-relationships>` "
"(an object with a many-to-one relationship to itself) and :ref:"
"`relationships to models not yet defined <lazy-relationships>`; see :ref:"
"`the model field reference <ref-foreignkey>` for details."
msgstr ""
"Il est aussi possible de créer des :ref:`relations récursives <recursive-"
"relationships>` (un objet avec une relation plusieurs-à-un avec lui-même) et "
"des :ref:`relations vers des modèles non encore définis <lazy-"
"relationships>` ; consultez la :ref:`référence des champs de modèle <ref-"
"foreignkey>` pour plus de détails."

msgid ""
"It's suggested, but not required, that the name of a :class:`~django.db."
"models.ForeignKey` field (``manufacturer`` in the example above) be the name "
"of the model, lowercase. You can call the field whatever you want. For "
"example::"
msgstr ""
"Il est recommandé mais non obligatoire que le nom d'un champ :class:`~django."
"db.models.ForeignKey` (``manufacturer`` dans l'exemple ci-dessus) soit égal "
"au nom du modèle en minuscules. Vous pouvez nommer le champ de la manière "
"qui vous convient. Par exemple ::"

msgid ""
":class:`~django.db.models.ForeignKey` fields accept a number of extra "
"arguments which are explained in :ref:`the model field reference <foreign-"
"key-arguments>`. These options help define how the relationship should work; "
"all are optional."
msgstr ""
"Les champs :class:`~django.db.models.ForeignKey` acceptent quelques "
"paramètres supplémentaires qui sont présentés dans la :ref:`référence des "
"champs de modèle <foreign-key-arguments>`. Ces options aident à spécifier le "
"fonctionnement de la relation ; toutes sont facultatives."

msgid ""
"For details on accessing backwards-related objects, see the :ref:`Following "
"relationships backward example <backwards-related-objects>`."
msgstr ""
"Pour plus de détails sur l'accès aux objets par référence liée inverse, "
"consultez l’:ref:`exemple de l'accès aux relations inverses <backwards-"
"related-objects>`."

msgid ""
"For sample code, see the :doc:`Many-to-one relationship model example </"
"topics/db/examples/many_to_one>`."
msgstr ""
"Pour des exemples de code, consultez les :doc:`exemples de relations "
"plusieurs-à-un entre modèles </topics/db/examples/many_to_one>`."

msgid ""
"To define a many-to-many relationship, use :class:`~django.db.models."
"ManyToManyField`. You use it just like any other :class:`~django.db.models."
"Field` type: by including it as a class attribute of your model."
msgstr ""
"Pour définir une relation plusieurs-à-plusieurs, utilisez :class:`django.db."
"models.ManyToManyField`. Son utilisation est pareille à celle des autres "
"types de champs :class:`~django.db.models.Field` : il s'agit d'un attribut "
"de classe d'un modèle."

msgid ""
":class:`~django.db.models.ManyToManyField` requires a positional argument: "
"the class to which the model is related."
msgstr ""
":class:`~django.db.models.ManyToManyField` exige un paramètre positionnel : "
"la classe à laquelle le modèle est lié."

msgid ""
"For example, if a ``Pizza`` has multiple ``Topping`` objects -- that is, a "
"``Topping`` can be on multiple pizzas and each ``Pizza`` has multiple "
"toppings -- here's how you'd represent that::"
msgstr ""
"Par exemple, si une ``Pizza`` possède plusieurs objets ``Topping`` "
"(garniture), c'est-à-dire qu'un ``Topping`` peut se trouver sur plusieurs "
"pizzas et chaque ``Pizza`` possède plusieurs garnitures, voici comment ce "
"cas de figure serait représenté ::"

msgid ""
"As with :class:`~django.db.models.ForeignKey`, you can also create :ref:"
"`recursive relationships <recursive-relationships>` (an object with a many-"
"to-many relationship to itself) and :ref:`relationships to models not yet "
"defined <lazy-relationships>`."
msgstr ""
"Comme pour :class:`~django.db.models.ForeignKey`, il est aussi possible de "
"créer des :ref:`relations récursives <recursive-relationships>` (un objet "
"avec une relation plusieurs-à-plusieurs avec lui-même) et des :ref:"
"`relations vers des modèles non encore définis <lazy-relationships>`."

msgid ""
"It's suggested, but not required, that the name of a :class:`~django.db."
"models.ManyToManyField` (``toppings`` in the example above) be a plural "
"describing the set of related model objects."
msgstr ""
"Il est recommandé mais non obligatoire que le nom d'un champ :class:`~django."
"db.models.ManyToManyField` (``toppings`` dans l'exemple ci-dessus) soit un "
"pluriel décrivant l'ensemble des objets modèles liés."

msgid ""
"It doesn't matter which model has the :class:`~django.db.models."
"ManyToManyField`, but you should only put it in one of the models -- not "
"both."
msgstr ""
"Que le champ :class:`~django.db.models.ManyToManyField` soit placé sur un "
"modèle ou l'autre ne change pas grand chose, mais il est essentiel de ne le "
"mettre que dans un des modèles, pas dans les deux."

msgid ""
"Generally, :class:`~django.db.models.ManyToManyField` instances should go in "
"the object that's going to be edited on a form. In the above example, "
"``toppings`` is in ``Pizza`` (rather than ``Topping`` having a ``pizzas`` :"
"class:`~django.db.models.ManyToManyField` ) because it's more natural to "
"think about a pizza having toppings than a topping being on multiple pizzas. "
"The way it's set up above, the ``Pizza`` form would let users select the "
"toppings."
msgstr ""
"Généralement, les instances :class:`~django.db.models.ManyToManyField` "
"devraient être placées dans l'objet qui va être modifié par un formulaire. "
"Dans l'exemple ci-dessus, les ``toppings`` sont dans ``Pizza`` (plutôt que "
"ce soit ``Topping`` qui possède un champ :class:`~django.db.models."
"ManyToManyField` de ``pizzas`` ) parce qu'il est plus logique d'imaginer une "
"pizza ayant plusieurs garnitures qu'une garniture se trouvant dans plusieurs "
"pizzas. De la manière dont les choses ont été définies ci-dessus, le "
"formulaire ``Pizza`` permettra de choisir des garnitures."

msgid ""
"See the :doc:`Many-to-many relationship model example </topics/db/examples/"
"many_to_many>` for a full example."
msgstr ""
"Consultez les :doc:`exemples de relations plusieurs-à-plusieurs entre "
"modèles </topics/db/examples/many_to_many>` pour voir un exemple complet."

msgid ""
":class:`~django.db.models.ManyToManyField` fields also accept a number of "
"extra arguments which are explained in :ref:`the model field reference "
"<manytomany-arguments>`. These options help define how the relationship "
"should work; all are optional."
msgstr ""
"Les champs :class:`~django.db.models.ManyToManyField` acceptent aussi "
"quelques paramètres supplémentaires qui sont présentés dans la :ref:"
"`référence des champs de modèle <manytomany-arguments>`. Ces options aident "
"à spécifier le fonctionnement de la relation ; toutes sont facultatives."

msgid "Extra fields on many-to-many relationships"
msgstr "Champs supplémentaires dans les relations plusieurs-à-plusieurs"

msgid ""
"When you're only dealing with many-to-many relationships such as mixing and "
"matching pizzas and toppings, a standard :class:`~django.db.models."
"ManyToManyField` is all you need. However, sometimes you may need to "
"associate data with the relationship between two models."
msgstr ""
"Lorsque vous devez gérer des relations plusieurs-à-plusieurs comme le "
"mélange et la combinaison de pizzas et de garnitures, un :class:`~django.db."
"models.ManyToManyField` standard suffit. Cependant, il est parfois "
"nécessaire d'associer des données à la relation entre deux modèles."

msgid ""
"For example, consider the case of an application tracking the musical groups "
"which musicians belong to. There is a many-to-many relationship between a "
"person and the groups of which they are a member, so you could use a :class:"
"`~django.db.models.ManyToManyField` to represent this relationship. However, "
"there is a lot of detail about the membership that you might want to "
"collect, such as the date at which the person joined the group."
msgstr ""
"Par exemple, considérez le cas d'une application faisant le lien entre des "
"musiciens et les groupes musicaux auxquels ils appartiennent. Une relation "
"plusieurs-à-plusieurs existe entre une personne et les groupes dont elle est "
"membre, il est donc possible d'utiliser un champ :class:`~django.db.models."
"ManyToManyField` pour représenter cette relation. Cependant, il y a de "
"nombreux détails au sujet de l'appartenance au groupe qu'il peut être "
"intéressant de conserver, comme par exemple la date à laquelle la personne à "
"rejoint le groupe."

msgid ""
"For these situations, Django allows you to specify the model that will be "
"used to govern the many-to-many relationship. You can then put extra fields "
"on the intermediate model. The intermediate model is associated with the :"
"class:`~django.db.models.ManyToManyField` using the :attr:`through "
"<ManyToManyField.through>` argument to point to the model that will act as "
"an intermediary. For our musician example, the code would look something "
"like this::"
msgstr ""
"Pour ces situations, Django permet d'indiquer le modèle qui sera utilisé "
"pour spécifier la relation plusieurs-à-plusieurs. Il est alors possible de "
"définir des champs supplémentaires dans le modèle intermédiaire. Ce dernier "
"est associé au champ :class:`~django.db.models.ManyToManyField` en utilisant "
"le paramètre :attr:`through <ManyToManyField.through>` qui va pointer vers "
"le modèle agissant comme intermédiaire. Dans notre exemple de musique, le "
"code pourrait ressembler à ceci ::"

msgid ""
"When you set up the intermediary model, you explicitly specify foreign keys "
"to the models that are involved in the many-to-many relationship. This "
"explicit declaration defines how the two models are related."
msgstr ""
"Lorsque vous définissez le modèle intermédiaire, vous indiquez explicitement "
"les clés étrangères vers les modèles impliqués dans la relation plusieurs-à-"
"plusieurs. Cette déclaration explicite définit comment les deux modèles sont "
"reliés."

msgid "There are a few restrictions on the intermediate model:"
msgstr "Il y a quelques restrictions concernant le modèle intermédiaire :"

msgid ""
"Your intermediate model must contain one - and *only* one - foreign key to "
"the source model (this would be ``Group`` in our example), or you must "
"explicitly specify the foreign keys Django should use for the relationship "
"using :attr:`ManyToManyField.through_fields <ManyToManyField."
"through_fields>`. If you have more than one foreign key and "
"``through_fields`` is not specified, a validation error will be raised. A "
"similar restriction applies to the foreign key to the target model (this "
"would be ``Person`` in our example)."
msgstr ""
"Le modèle intermédiaire doit contenir une et une seule clé étrangère vers le "
"modèle source (qui correspondrait à ``Group`` dans notre exemple), ou alors "
"vous devez explicitement indiquer à Django les clés étrangères à employer "
"pour les relations en utilisant :attr:`ManyToManyField.through_fields "
"<ManyToManyField.through_fields>`. S'il y a plus d'une clé étrangère et que "
"``through_fields`` n'est pas précisé, une erreur de validation est produite. "
"C'est exactement le même procédé pour la clé étrangère vers le modèle cible "
"(qui correspondrait à ``Person`` dans notre exemple)."

msgid ""
"For a model which has a many-to-many relationship to itself through an "
"intermediary model, two foreign keys to the same model are permitted, but "
"they will be treated as the two (different) sides of the many-to-many "
"relationship. If there are *more* than two foreign keys though, you must "
"also specify ``through_fields`` as above, or a validation error will be "
"raised."
msgstr ""
"Pour un modèle ayant une relation plusieurs-à-plusieurs avec lui-même au "
"travers d'un modèle intermédiaire, deux clés étrangères vers le même modèle "
"sont autorisées, mais elles seront considérées comme les deux (différentes) "
"parties de la relation plusieurs-à-plusieurs. Mais s'il y a *plus* de deux "
"clés étrangères, vous devez aussi indiquer ``through_fields`` comme ci-"
"dessus, sinon une erreur de validation sera générée."

msgid ""
"Now that you have set up your :class:`~django.db.models.ManyToManyField` to "
"use your intermediary model (``Membership``, in this case), you're ready to "
"start creating some many-to-many relationships. You do this by creating "
"instances of the intermediate model:"
msgstr ""
"Après avoir configuré le champ :class:`~django.db.models.ManyToManyField` "
"afin qu'il utilise le modèle intermédiaire (``Membership``, dans ce cas), "
"tout est prêt pour commencer à créer des relations plusieurs-à-plusieurs. "
"Cela s'effectue en créant des instances du modèle intermédiaire :"

msgid ""
"You can also use :meth:`~django.db.models.fields.related.RelatedManager."
"add`, :meth:`~django.db.models.fields.related.RelatedManager.create`, or :"
"meth:`~django.db.models.fields.related.RelatedManager.set` to create "
"relationships, as long as you specify ``through_defaults`` for any required "
"fields:"
msgstr ""
"Vous pouvez aussi utiliser :meth:`~django.db.models.fields.related."
"RelatedManager.add`, :meth:`~django.db.models.fields.related.RelatedManager."
"create` ou :meth:`~django.db.models.fields.related.RelatedManager.set` pour "
"créer des relations, tant que vous indiquez ``through_defaults`` pour tout "
"champ obligatoire :"

msgid "You may prefer to create instances of the intermediate model directly."
msgstr ""
"Il peut être préférable de créer directement des instances du modèle "
"intermédiaire."

msgid ""
"If the custom through table defined by the intermediate model does not "
"enforce uniqueness on the ``(model1, model2)`` pair, allowing multiple "
"values, the :meth:`~django.db.models.fields.related.RelatedManager.remove` "
"call will remove all intermediate model instances:"
msgstr ""
"Si la table intermédiaire personnalisée définie par le modèle intermédiaire "
"ne force pas l'unicité sur la paire ``(model1, model2)``, autorisant ainsi "
"des valeurs multiples, l'appel à :meth:`~django.db.models.fields.related."
"RelatedManager.remove` va supprimer toutes les instances de modèles "
"intermédiaires :"

msgid ""
"The :meth:`~django.db.models.fields.related.RelatedManager.clear` method can "
"be used to remove all many-to-many relationships for an instance:"
msgstr ""
"La méthode :meth:`~django.db.models.fields.related.RelatedManager.clear` "
"peut être utilisée pour enlever toutes les relations plusieurs-à-plusieurs "
"d'une instance :"

msgid ""
"Once you have established the many-to-many relationships, you can issue "
"queries. Just as with normal many-to-many relationships, you can query using "
"the attributes of the many-to-many-related model:"
msgstr ""
"Après avoir établi des relations plusieurs-à-plusieurs, il est possible "
"d'effectuer des requêtes. Comme pour une relation plusieurs-à-plusieurs "
"normale, les requêtes peuvent utiliser les attributs du modèle lié à la "
"relation plusieurs-à-plusieurs :"

msgid ""
"As you are using an intermediate model, you can also query on its attributes:"
msgstr ""
"Comme vous utilisez un modèle intermédiaire, la requête peut aussi exploiter "
"ses attributs :"

msgid ""
"If you need to access a membership's information you may do so by directly "
"querying the ``Membership`` model:"
msgstr ""
"Si vous avez besoin d'accéder aux informations d'appartenance au groupe, "
"c'est possible de le faire en interrogeant directement le modèle "
"``Membership``:"

msgid ""
"Another way to access the same information is by querying the :ref:`many-to-"
"many reverse relationship<m2m-reverse-relationships>` from a ``Person`` "
"object:"
msgstr ""
"Une autre façon d'accéder à la même information est d'interroger la :ref:"
"`relation plusieurs-à-plusieurs inverse<m2m-reverse-relationships>` à partir "
"d'un objet ``Person``:"

msgid ""
"To define a one-to-one relationship, use :class:`~django.db.models."
"OneToOneField`. You use it just like any other ``Field`` type: by including "
"it as a class attribute of your model."
msgstr ""
"Pour définir une relation un-à-un, utilisez :class:`~django.db.models."
"OneToOneField`. Son utilisation est pareille à celle des autres types de "
"champs ``Field``: il s'agit d'un attribut de classe d'un modèle."

msgid ""
"This is most useful on the primary key of an object when that object "
"\"extends\" another object in some way."
msgstr ""
"Son utilisation principale concerne la clé primaire d'un objet lorsque cet "
"objet « complète » un autre objet d'une certaine manière."

msgid ""
":class:`~django.db.models.OneToOneField` requires a positional argument: the "
"class to which the model is related."
msgstr ""
":class:`~django.db.models.OneToOneField` exige un paramètre positionnel : la "
"classe à laquelle le modèle est lié."

msgid ""
"For example, if you were building a database of \"places\", you would build "
"pretty standard stuff such as address, phone number, etc. in the database. "
"Then, if you wanted to build a database of restaurants on top of the places, "
"instead of repeating yourself and replicating those fields in the "
"``Restaurant`` model, you could make ``Restaurant`` have a :class:`~django."
"db.models.OneToOneField` to ``Place`` (because a restaurant \"is a\" place; "
"in fact, to handle this you'd typically use :ref:`inheritance <model-"
"inheritance>`, which involves an implicit one-to-one relation)."
msgstr ""
"Par exemple, si vous construisiez une base de données "
"d'« emplacements » (``Place`` dans l'exemple), il s'agirait de mettre en "
"place des éléments assez standards comme l'adresse, le numéro de téléphone, "
"etc. dans la base de données. Ensuite, si vous souhaitez construire une base "
"de données de restaurants au-dessus de la base des emplacements, au lieu de "
"vous répéter et de répliquer tous ces champs dans le modèle ``Restaurant``, "
"il serait possible de concevoir ``Restaurant`` avec un champ :class:`~django."
"db.models.OneToOneField` vers ``Place`` (parce qu'un restaurant « est un » "
"emplacement ; en fait, pour gérer cela, vous feriez probablement appel à de "
"l’:ref:`héritage <model-inheritance>`, ce qui implique une relation un-à-un "
"implicite)."

msgid ""
"As with :class:`~django.db.models.ForeignKey`, a :ref:`recursive "
"relationship <recursive-relationships>` can be defined and :ref:`references "
"to as-yet undefined models <lazy-relationships>` can be made."
msgstr ""
"Comme pour :class:`~django.db.models.ForeignKey`, il est aussi possible de "
"créer des :ref:`relations récursives <recursive-relationships>` et des :ref:"
"`relations vers des modèles non encore définis <lazy-relationships>`."

msgid ""
"See the :doc:`One-to-one relationship model example </topics/db/examples/"
"one_to_one>` for a full example."
msgstr ""
"Consultez les :doc:`exemples de relations un-à-un entre modèles </topics/db/"
"examples/one_to_one>` pour voir un exemple complet."

msgid ""
":class:`~django.db.models.OneToOneField` fields also accept an optional :"
"attr:`~django.db.models.OneToOneField.parent_link` argument."
msgstr ""
"Les champs :class:`~django.db.models.OneToOneField` acceptent aussi un "
"paramètre :attr:`~django.db.models.OneToOneField.parent_link` facultatif."

msgid ""
":class:`~django.db.models.OneToOneField` classes used to automatically "
"become the primary key on a model. This is no longer true (although you can "
"manually pass in the :attr:`~django.db.models.Field.primary_key` argument if "
"you like). Thus, it's now possible to have multiple fields of type :class:"
"`~django.db.models.OneToOneField` on a single model."
msgstr ""
"Précédemment, les classes :class:`~django.db.models.OneToOneField` "
"devenaient automatiquement la clé primaire d'un modèle. Cela n'est plus le "
"cas (même si il est toujours possible de passer manuellement le paramètre :"
"attr:`~django.db.models.Field.primary_key` si vous le voulez). Il est donc "
"possible d'avoir plusieurs champs :class:`~django.db.models.OneToOneField` "
"dans un seul modèle."

msgid "Models across files"
msgstr "Modèles dans plusieurs fichiers"

msgid ""
"It's perfectly OK to relate a model to one from another app. To do this, "
"import the related model at the top of the file where your model is defined. "
"Then, refer to the other model class wherever needed. For example::"
msgstr ""
"Il est parfaitement admis de lier un modèle à celui d'une autre application. "
"Pour cela, importez le modèle à lier au sommet du fichier où votre modèle "
"est défini. Puis, faites référence à cette autre classe de modèle là où "
"c'est nécessaire. Par exemple ::"

msgid "Field name restrictions"
msgstr "Restrictions sur les noms de champs"

msgid "Django places some restrictions on model field names:"
msgstr "Django soumet les noms de champs de modèles à quelques restrictions :"

msgid ""
"A field name cannot be a Python reserved word, because that would result in "
"a Python syntax error. For example:"
msgstr ""
"Un nom de champ ne peut pas être un mot réservé de Python, car il en "
"résulterait une erreur de syntaxe Python. Par exemple :"

msgid ""
"A field name cannot contain more than one underscore in a row, due to the "
"way Django's query lookup syntax works. For example::"
msgstr ""
"Un nom de champ ne peut pas contenir deux soulignements suivis, en raison du "
"fonctionnement de la syntaxe Django pour les requêtes. Par exemple ::"

msgid "A field name cannot end with an underscore, for similar reasons."
msgstr ""
"Un nom de champ ne peut pas se terminer par un trait de soulignement, pour "
"des raisons semblables."

msgid ""
"These limitations can be worked around, though, because your field name "
"doesn't necessarily have to match your database column name. See the :attr:"
"`~Field.db_column` option."
msgstr ""
"Ces limites peuvent être contournées, car le nom de champ n'est pas "
"nécessairement égal au nom de la colonne de base de données. Voir l'option :"
"attr:`~Field.db_column`."

msgid ""
"SQL reserved words, such as ``join``, ``where`` or ``select``, *are* allowed "
"as model field names, because Django escapes all database table names and "
"column names in every underlying SQL query. It uses the quoting syntax of "
"your particular database engine."
msgstr ""
"Les mots réservés SQL, comme ``join``, ``where`` ou ``select`` *sont* "
"autorisés comme noms de champs de modèle, car Django échappe tous les noms "
"de tables ou de colonnes de base de données dans toutes les requêtes SQL "
"sous-jacentes. Il utilise la syntaxe de guillemets propre au moteur de base "
"de données utilisé."

msgid "Custom field types"
msgstr "Types de champs personnalisés"

msgid ""
"If one of the existing model fields cannot be used to fit your purposes, or "
"if you wish to take advantage of some less common database column types, you "
"can create your own field class. Full coverage of creating your own fields "
"is provided in :doc:`/howto/custom-model-fields`."
msgstr ""
"Si aucun des champs de modèle existants ne convient à vos besoins, ou si "
"vous souhaitez tirer profit d'un type de colonne de base de données plus "
"spécialisé, vous pouvez créer votre propre classe de champ. Une "
"documentation complète sur la création de champs personnalisés se trouve "
"dans :doc:`/howto/custom-model-fields`."

msgid "``Meta`` options"
msgstr "Options de ``Meta``"

msgid "Give your model metadata by using an inner ``class Meta``, like so::"
msgstr ""
"Vous pouvez attribuer des métadonnées à votre modèle en utilisant une classe "
"``Meta`` imbriquée, comme ceci ::"

msgid ""
"Model metadata is \"anything that's not a field\", such as ordering options "
"(:attr:`~Options.ordering`), database table name (:attr:`~Options."
"db_table`), or human-readable singular and plural names (:attr:`~Options."
"verbose_name` and :attr:`~Options.verbose_name_plural`). None are required, "
"and adding ``class Meta`` to a model is completely optional."
msgstr ""
"Les métadonnées de modèles sont « tout ce qui n'est pas un champ », comme "
"les options de tri (:attr:`~Options.ordering`), le nom de la table de base "
"de données (:attr:`~Options.db_table`) ou des noms verbeux singulier et "
"pluriel (:attr:`~Options.verbose_name` et :attr:`~Options."
"verbose_name_plural`). Aucune n'est obligatoire et la présence de ``class "
"Meta`` dans un modèle est entièrement facultative."

msgid ""
"A complete list of all possible ``Meta`` options can be found in the :doc:"
"`model option reference </ref/models/options>`."
msgstr ""
"Une liste complète de toutes les options ``Meta`` possibles se trouve dans "
"la :doc:`référence des options de modèle </ref/models/options>`."

msgid "Model attributes"
msgstr "Les attributs de modèle"

msgid "``objects``"
msgstr "``objects``"

msgid ""
"The most important attribute of a model is the :class:`~django.db.models."
"Manager`. It's the interface through which database query operations are "
"provided to Django models and is used to :ref:`retrieve the instances "
"<retrieving-objects>` from the database. If no custom ``Manager`` is "
"defined, the default name is :attr:`~django.db.models.Model.objects`. "
"Managers are only accessible via model classes, not the model instances."
msgstr ""
"L'attribut le plus important d'un modèle est le :class:`~django.db.models."
"Manager`. Il s'agit de l'interface par laquelle les modèles Django ont accès "
"aux opérations de requêtes vers la base de données et par laquelle les :ref:"
"`instances de modèles sont construites <retrieving-objects>` à partir de la "
"base de données. Si aucun objet ``Manager`` (gestionnaire) personnalisé "
"n'est indiqué, le nom par défaut est :attr:`~django.db.models.Model."
"objects`. Les gestionnaires ne sont accessibles qu'au travers des classes de "
"modèle, et pas des instances de modèle."

msgid "Model methods"
msgstr "Méthodes des modèles"

msgid ""
"Define custom methods on a model to add custom \"row-level\" functionality "
"to your objects. Whereas :class:`~django.db.models.Manager` methods are "
"intended to do \"table-wide\" things, model methods should act on a "
"particular model instance."
msgstr ""
"Pour ajouter des fonctionnalités de « niveau ligne » à vos objets, "
"définissez des méthodes personnalisées dans le modèle. Alors que les "
"méthodes de :class:`~django.db.models.Manager` sont prévues pour agir au "
"niveau des tables, les méthodes de modèles agissent plutôt sur une instance "
"particulière d'un modèle."

msgid ""
"This is a valuable technique for keeping business logic in one place -- the "
"model."
msgstr ""
"C'est une technique importante pour conserver la logique métier à un seul "
"endroit, le modèle."

msgid "For example, this model has a few custom methods::"
msgstr "Par exemple, ce modèle possède quelques méthodes personnalisées ::"

msgid "The last method in this example is a :term:`property`."
msgstr "La dernière méthode de cet exemple est une :term:`propriété`."

msgid ""
"The :doc:`model instance reference </ref/models/instances>` has a complete "
"list of :ref:`methods automatically given to each model <model-instance-"
"methods>`. You can override most of these -- see `overriding predefined "
"model methods`_, below -- but there are a couple that you'll almost always "
"want to define:"
msgstr ""
"La :doc:`référence des instances de modèles </ref/models/instances>` "
"présente une liste complète des :ref:`méthodes automatiquement héritées par "
"chaque modèle <model-instance-methods>`. Vous pouvez surcharger la plupart "
"d'entre elles, voir `surcharge des méthodes de modèles prédéfinies`_ ci-"
"dessous, mais vous souhaiterez presque toujours définir certaines dans vos "
"modèles :"

msgid ":meth:`~Model.__str__`"
msgstr ":meth:`~Model.__str__`"

msgid ""
"A Python \"magic method\" that returns a string representation of any "
"object. This is what Python and Django will use whenever a model instance "
"needs to be coerced and displayed as a plain string. Most notably, this "
"happens when you display an object in an interactive console or in the admin."
msgstr ""
"Une « méthode magique » de Python qui renvoie une représentation textuelle "
"d'un objet. C'est ce que Python et Django utilisent chaque fois qu'une "
"instance de modèle doit être transformée en une simple chaîne en vue d'être "
"affichée. C'est par exemple le cas lorsqu'un objet doit être affiché dans "
"une console interactive ou dans l'interface d'administration."

msgid ""
"You'll always want to define this method; the default isn't very helpful at "
"all."
msgstr ""
"Cette méthode devrait toujours être définie ; la valeur par défaut n'est "
"vraiment pas très utile."

msgid ":meth:`~Model.get_absolute_url`"
msgstr ":meth:`~Model.get_absolute_url`"

msgid ""
"This tells Django how to calculate the URL for an object. Django uses this "
"in its admin interface, and any time it needs to figure out a URL for an "
"object."
msgstr ""
"Cette méthode indique à Django comment produire l'URL d'un objet. Django "
"l'utilise dans son interface d'administration ainsi qu'à chaque fois qu'il a "
"besoin de connaître l'URL d'un objet."

msgid ""
"Any object that has a URL that uniquely identifies it should define this "
"method."
msgstr ""
"Chaque objet possédant un URL permettant de l'identifier de manière unique "
"devrait définir cette méthode."

msgid "Overriding predefined model methods"
msgstr "Surcharge des méthodes de modèles prédéfinies"

msgid ""
"There's another set of :ref:`model methods <model-instance-methods>` that "
"encapsulate a bunch of database behavior that you'll want to customize. In "
"particular you'll often want to change the way :meth:`~Model.save` and :meth:"
"`~Model.delete` work."
msgstr ""
"Un autre groupe de :ref:`méthodes de modèles <model-instance-methods>` "
"recouvrent un ensemble de comportements liés à la base de données et sont "
"susceptibles d'être personnalisées. En particulier, il est assez fréquent de "
"vouloir modifier le fonctionnement de :meth:`~Model.save` et de :meth:"
"`~Model.delete`."

msgid ""
"You're free to override these methods (and any other model method) to alter "
"behavior."
msgstr ""
"Vous êtes libre de surcharger ces méthodes (et toute autre méthode de "
"modèle) pour modifier leur comportement."

msgid ""
"A classic use-case for overriding the built-in methods is if you want "
"something to happen whenever you save an object. For example (see :meth:"
"`~Model.save` for documentation of the parameters it accepts)::"
msgstr ""
"Un cas d'utilisation classique de surcharge des méthodes intégrées est "
"lorsque vous souhaitez effectuer une action lors de l'enregistrement d'un "
"objet. Par exemple (voir :meth:`~Model.save` pour de la documentation sur "
"les paramètres acceptés) ::"

msgid "You can also prevent saving::"
msgstr "Vous pouvez aussi empêcher l'enregistrement ::"

msgid ""
"It's important to remember to call the superclass method -- that's that "
"``super().save(**kwargs)`` business -- to ensure that the object still gets "
"saved into the database. If you forget to call the superclass method, the "
"default behavior won't happen and the database won't get touched."
msgstr ""
"Il est important de ne pas oublier d'appeler la méthode de la classe parente "
"(c'est l'affaire de ``super().save(**kwargs)``) pour s'assurer que l'objet "
"soit bien enregistré dans la base de données. Si vous omettez d'appeler la "
"méthode parente, le comportement par défaut n'est pas appliqué et la base de "
"données ne sera pas affectée."

msgid ""
"It's also important that you pass through the arguments that can be passed "
"to the model method -- that's what the ``**kwargs`` bit does. Django will, "
"from time to time, extend the capabilities of built-in model methods, adding "
"new keyword arguments. If you use ``**kwargs`` in your method definitions, "
"you are guaranteed that your code will automatically support those arguments "
"when they are added."
msgstr ""
"Il est aussi important de transmettre les paramètres qui peuvent être "
"acceptés par la méthode du modèle, c'est le rôle de ``**kwargs``. De temps à "
"autre, Django étend les possibilités des méthodes de modèles intégrées en "
"ajoutant de nouveaux paramètres nommés. Si vous utilisez ``**kwargs`` dans "
"vos définitions de méthodes, vous êtes certain que votre code gérera "
"automatiquement ces paramètres quand ils seront ajoutés."

msgid ""
"If you wish to update a field value in the :meth:`~Model.save` method, you "
"may also want to have this field added to the ``update_fields`` keyword "
"argument. This will ensure the field is saved when ``update_fields`` is "
"specified. For example::"
msgstr ""
"Si vous souhaitez mettre à jour un champ dans la méthode :meth:`~Model."
"save`, il peut être nécessaire de devoir aussi ajouter ce champ dans "
"l'argument nommé  ``update_fields``. Cela garantira que le champ sera bien "
"enregistré dans le cas où ``update_fields`` est rempli. Par exemple ::"

msgid "See :ref:`ref-models-update-fields` for more details."
msgstr "Voir :ref:`ref-models-update-fields` pour plus de détails."

msgid "Overridden model methods are not called on bulk operations"
msgstr ""
"Les méthodes de modèle surchargées ne sont pas appelées dans les opérations "
"groupées"

msgid ""
"Note that the :meth:`~Model.delete()` method for an object is not "
"necessarily called when :ref:`deleting objects in bulk using a QuerySet "
"<topics-db-queries-delete>` or as a result of a :attr:`cascading delete "
"<django.db.models.ForeignKey.on_delete>`. To ensure customized delete logic "
"gets executed, you can use :data:`~django.db.models.signals.pre_delete` and/"
"or :data:`~django.db.models.signals.post_delete` signals."
msgstr ""
"Notez que la méthode :meth:`~Model.delete()` d'un objet n'est pas "
"nécessairement appelée lorsque les :ref:`objets sont supprimés en vrac en "
"utilisant un QuerySet <topics-db-queries-delete>` ou par le truchement "
"d'une :attr:`suppression en cascade <django.db.models.ForeignKey."
"on_delete>`. Pour être certain que la logique de suppression personnalisée "
"soit exécutée, vous pouvez utiliser les signaux :data:`~django.db.models."
"signals.pre_delete` ou :data:`~django.db.models.signals.post_delete`."

msgid ""
"Unfortunately, there isn't a workaround when :meth:`creating<django.db."
"models.query.QuerySet.bulk_create>` or :meth:`updating<django.db.models."
"query.QuerySet.update>` objects in bulk, since none of :meth:`~Model."
"save()`, :data:`~django.db.models.signals.pre_save`, and :data:`~django.db."
"models.signals.post_save` are called."
msgstr ""
"Malheureusement, il n'y a pas de solution possible lors de la :meth:"
"`création<django.db.models.query.QuerySet.bulk_create>` ou de la :meth:`mise "
"à jour<django.db.models.query.QuerySet.update>` d'objets en vrac, puisque "
"ni :meth:`~Model.save()`, ni :data:`~django.db.models.signals.pre_save`, ni :"
"data:`~django.db.models.signals.post_save` ne sont appelés."

msgid "Executing custom SQL"
msgstr "Exécution de SQL personnalisé"

msgid ""
"Another common pattern is writing custom SQL statements in model methods and "
"module-level methods. For more details on using raw SQL, see the "
"documentation on :doc:`using raw SQL</topics/db/sql>`."
msgstr ""
"Un autre usage assez fréquent est d'écrire des commandes SQL personnalisées "
"dans les méthodes de modèles et les méthodes au niveau module. Pour plus de "
"détails sur l'utilisation de SQL brut, consultez la documentation sur l’:doc:"
"`utilisation de SQL brut</topics/db/sql>`."

msgid "Model inheritance"
msgstr "Héritage de modèle"

msgid ""
"Model inheritance in Django works almost identically to the way normal class "
"inheritance works in Python, but the basics at the beginning of the page "
"should still be followed. That means the base class should subclass :class:"
"`django.db.models.Model`."
msgstr ""
"Dans Django, l'héritage de modèle fonctionne de manière presque identique à "
"l'héritage des classes tel qu'il se pratique en Python, mais les éléments de "
"base présentés au début de cette page sont toujours de mise. Cela signifie "
"que la classe de base doit être une sous-classe de :class:`django.db.models."
"Model`."

msgid ""
"The only decision you have to make is whether you want the parent models to "
"be models in their own right (with their own database tables), or if the "
"parents are just holders of common information that will only be visible "
"through the child models."
msgstr ""
"La seule décision qui vous revient est de savoir si vous voulez que les "
"modèles parents soient des modèles à part entière (avec leur propre table de "
"base de données) ou si les parents ne sont que des conteneurs d'informations "
"partagées qui ne seront visibles qu'au travers de leurs modèles enfants."

msgid "There are three styles of inheritance that are possible in Django."
msgstr "Il existe trois types d'héritage possibles avec Django."

msgid ""
"Often, you will just want to use the parent class to hold information that "
"you don't want to have to type out for each child model. This class isn't "
"going to ever be used in isolation, so :ref:`abstract-base-classes` are what "
"you're after."
msgstr ""
"Souvent, vous voulez simplement que la classe parente contienne des "
"informations que vous ne souhaitez pas ressaisir dans chaque modèle enfant. "
"Cette classe ne sera jamais utilisée pour elle-même, il s'agit donc de :ref:"
"`abstract-base-classes`."

msgid ""
"If you're subclassing an existing model (perhaps something from another "
"application entirely) and want each model to have its own database table, :"
"ref:`multi-table-inheritance` is the way to go."
msgstr ""
"Si vous héritez d'un modèle existant (provenant peut-être d'une toute autre "
"application) et que vous souhaitez que chaque modèle dispose de sa propre "
"table de base de données, il s'agit de :ref:`multi-table-inheritance`."

msgid ""
"Finally, if you only want to modify the Python-level behavior of a model, "
"without changing the models fields in any way, you can use :ref:`proxy-"
"models`."
msgstr ""
"Finalement, si vous souhaitez uniquement modifier le comportement d'un "
"modèle dans son code Python sans toucher aux champs de modèle, il s'agit de :"
"ref:`proxy-models`."

msgid "Abstract base classes"
msgstr "Classes de base abstraites"

msgid ""
"Abstract base classes are useful when you want to put some common "
"information into a number of other models. You write your base class and put "
"``abstract=True`` in the :ref:`Meta <meta-options>` class. This model will "
"then not be used to create any database table. Instead, when it is used as a "
"base class for other models, its fields will be added to those of the child "
"class."
msgstr ""
"Les classes de base abstraites sont utiles lorsque vous souhaitez regrouper "
"certaines informations communes à un ensemble de modèles. Vous rédigez la "
"classe de base et indiquez ``abstract=True`` dans sa classe :ref:`Meta <meta-"
"options>`. Aucune table de base de données ne sera créée pour ce modèle. Par "
"contre, lorsqu'elle sera utilisée comme classe de base pour d'autres "
"modèles, ses champs seront ajoutés à ceux de la classe enfant."

msgid "An example::"
msgstr "Un exemple ::"

msgid ""
"The ``Student`` model will have three fields: ``name``, ``age`` and "
"``home_group``. The ``CommonInfo`` model cannot be used as a normal Django "
"model, since it is an abstract base class. It does not generate a database "
"table or have a manager, and cannot be instantiated or saved directly."
msgstr ""
"Le modèle ``Student`` aura trois champs : ``name``, ``age`` et "
"``home_group``. Le modèle ``CommonInfo`` ne peut pas être utilisé comme un "
"modèle Django normal, car c'est une classe de base abstraite. Ce modèle ne "
"génère pas de table de base de données et ne possède pas de gestionnaire ; "
"il ne peut pas être instancié ni enregistré directement."

msgid ""
"Fields inherited from abstract base classes can be overridden with another "
"field or value, or be removed with ``None``."
msgstr ""
"Les champs hérités de classes de base abstraites peuvent être remplacés par "
"un autre champ ou valeur, ou même être enlevés en définissant le nom du "
"champ à ``None``."

msgid ""
"For many uses, this type of model inheritance will be exactly what you want. "
"It provides a way to factor out common information at the Python level, "
"while still only creating one database table per child model at the database "
"level."
msgstr ""
"Dans beaucoup de situations, c'est ce type d'héritage de modèle qui "
"convient. Il offre la possibilité de regrouper les informations communes au "
"niveau Python, tout en ne créant qu'une table de base de données par modèle "
"enfant."

msgid "``Meta`` inheritance"
msgstr "Héritage de ``Meta``"

msgid ""
"When an abstract base class is created, Django makes any :ref:`Meta <meta-"
"options>` inner class you declared in the base class available as an "
"attribute. If a child class does not declare its own :ref:`Meta <meta-"
"options>` class, it will inherit the parent's :ref:`Meta <meta-options>`. If "
"the child wants to extend the parent's :ref:`Meta <meta-options>` class, it "
"can subclass it. For example::"
msgstr ""
"Lorsqu'une classe de base abstraite est créée, Django rend disponible toute "
"classe imbriquée :ref:`Meta <meta-options>` déclarée dans la classe de base "
"comme attribut. Si une classe enfant ne déclare pas sa propre classe :ref:"
"`Meta <meta-options>`, elle hérite de la classe :ref:`Meta <meta-options>` "
"de son parent. Si la classe enfant souhaite étendre la classe :ref:`Meta "
"<meta-options>` du parent, elle peut en hériter. Par exemple ::"

msgid ""
"Django does make one adjustment to the :ref:`Meta <meta-options>` class of "
"an abstract base class: before installing the :ref:`Meta <meta-options>` "
"attribute, it sets ``abstract=False``. This means that children of abstract "
"base classes don't automatically become abstract classes themselves. To make "
"an abstract base class that inherits from another abstract base class, you "
"need to explicitly set ``abstract=True`` on the child."
msgstr ""
"Django effectue une seule modification à la classe :ref:`Meta <meta-"
"options>` d'une classe de base abstraite : avant d'installer l'attribut :ref:"
"`Meta <meta-options>`, il définit ``abstract=False``. Cela signifie que les "
"enfants des classes de base abstraites ne deviennent pas automatiquement des "
"classes abstraites elles-mêmes. Pour créer une classe de base abstraite qui "
"hérite d'une autre classe abstraite, il faut définir explicitement "
"``abstract=True`` dans la classe fille."

msgid ""
"Some attributes won't make sense to include in the :ref:`Meta <meta-"
"options>` class of an abstract base class. For example, including "
"``db_table`` would mean that all the child classes (the ones that don't "
"specify their own :ref:`Meta <meta-options>`) would use the same database "
"table, which is almost certainly not what you want."
msgstr ""
"Certains attributs n'ont pas de bonne raison d'être intégrés dans la classe :"
"ref:`Meta <meta-options>` d'une classe de base abstraite. Par exemple, la "
"présence de ``db_table`` signifierait que toutes les classes enfants (celles "
"qui ne contiennent pas leur propre classe :ref:`Meta <meta-options>`) "
"utiliseraient la même table de base de données, ce qui ne serait "
"certainement pas le comportement souhaité."

msgid ""
"Due to the way Python inheritance works, if a child class inherits from "
"multiple abstract base classes, only the :ref:`Meta <meta-options>` options "
"from the first listed class will be inherited by default. To inherit :ref:"
"`Meta <meta-options>` options from multiple abstract base classes, you must "
"explicitly declare the :ref:`Meta <meta-options>` inheritance. For example::"
msgstr ""
"En raison du fonctionnement de l'héritage Python, si une classe fille hérite "
"de plusieurs classes de base abstraites, seules les options ref:`Meta <meta-"
"options>` de la première classe de la liste seront héritées par défaut. Pour "
"hériter des options ref:`Meta <meta-options>` de plusieurs classes de base "
"abstraites, vous devez déclarer explicitement l'héritage  :ref:`Meta <meta-"
"options>`. Par exemple ::"

msgid "Be careful with ``related_name`` and ``related_query_name``"
msgstr "Soyez prudent avec ``related_name`` et ``related_query_name``"

msgid ""
"If you are using :attr:`~django.db.models.ForeignKey.related_name` or :attr:"
"`~django.db.models.ForeignKey.related_query_name` on a ``ForeignKey`` or "
"``ManyToManyField``, you must always specify a *unique* reverse name and "
"query name for the field. This would normally cause a problem in abstract "
"base classes, since the fields on this class are included into each of the "
"child classes, with exactly the same values for the attributes (including :"
"attr:`~django.db.models.ForeignKey.related_name` and :attr:`~django.db."
"models.ForeignKey.related_query_name`) each time."
msgstr ""
"Si vous utilisez :attr:`~django.db.models.ForeignKey.related_name` ou :attr:"
"`~django.db.models.ForeignKey.related_query_name` d'un champ ``ForeignKey`` "
"ou ``ManyToManyField``, vous devez toujours indiquer un nom inverse ou un "
"nom de requête *unique* pour le champ. Cela produirait normalement un "
"problème dans les classes de base abstraites, puisque les champs de cette "
"classe sont inclus dans toutes les classes enfants avec exactement les mêmes "
"valeurs d'attributs (y compris :attr:`~django.db.models.ForeignKey."
"related_name` et :attr:`~django.db.models.ForeignKey.related_query_name` ) à "
"chaque fois."

msgid ""
"To work around this problem, when you are using :attr:`~django.db.models."
"ForeignKey.related_name` or :attr:`~django.db.models.ForeignKey."
"related_query_name` in an abstract base class (only), part of the value "
"should contain ``'%(app_label)s'`` and ``'%(class)s'``."
msgstr ""
"Pour contourner ce problème, lorsque vous utilisez :attr:`~django.db.models."
"ForeignKey.related_name` ou :attr:`~django.db.models.ForeignKey."
"related_query_name` dans une classe de base abstraite (et dans ce cas "
"seulement), des parties de la valeur doivent contenir ``'%(app_label)s'`` et "
"``'%(class)s'``."

msgid ""
"``'%(class)s'`` is replaced by the lowercased name of the child class that "
"the field is used in."
msgstr ""
"``'%(class)s'`` est remplacé par le nom en minuscules de la classe enfant "
"dans laquelle est utilisé le champ."

msgid ""
"``'%(app_label)s'`` is replaced by the lowercased name of the app the child "
"class is contained within. Each installed application name must be unique "
"and the model class names within each app must also be unique, therefore the "
"resulting name will end up being different."
msgstr ""
"``'%(app_label)s'`` est remplacé par le nom en minuscules de l'application "
"dans laquelle la classe enfant est contenue. Chaque nom d'application "
"installée doit être unique et les noms de classes de modèles dans chaque "
"application doivent également être uniques, il est donc garanti que le nom "
"résultant sera chaque fois différent."

msgid "For example, given an app ``common/models.py``::"
msgstr "Par exemple, étant donné une application ``common/models.py``::"

msgid "Along with another app ``rare/models.py``::"
msgstr "Accompagnée d'une autre application ``rare/models.py``::"

msgid ""
"The reverse name of the ``common.ChildA.m2m`` field will be "
"``common_childa_related`` and the reverse query name will be "
"``common_childas``. The reverse name of the ``common.ChildB.m2m`` field will "
"be ``common_childb_related`` and the reverse query name will be "
"``common_childbs``. Finally, the reverse name of the ``rare.ChildB.m2m`` "
"field will be ``rare_childb_related`` and the reverse query name will be "
"``rare_childbs``. It's up to you how you use the ``'%(class)s'`` and "
"``'%(app_label)s'`` portion to construct your related name or related query "
"name but if you forget to use it, Django will raise errors when you perform "
"system checks (or run :djadmin:`migrate`)."
msgstr ""
"Le nom inverse du champ ``common.ChildA.m2m`` sera "
"``common_childa_related``, et le nom de requête inverse sera "
"``common_childas``. Le nom inverse du champ ``common.ChildB.m2m`` sera "
"``common_childb_related`` et le nom de requête inverse sera "
"``common_childbs``. Finalement, le nom inverse du champ ``rare.ChildB.m2m`` "
"sera ``rare_childb_related`` et le nom de requête inverse sera "
"``rare_childbs``. Vous êtes libre de choisir comment utiliser les portions "
"``'%(class)s'`` et ``'%(app_label)s'`` pour construire le nom lié ou le nom "
"de requête lié, mais si vous oubliez de les inclure, Django signalera des "
"erreurs lors du lancement des vérifications systèmes (ou en lançant :djadmin:"
"`migrate`)."

msgid ""
"If you don't specify a :attr:`~django.db.models.ForeignKey.related_name` "
"attribute for a field in an abstract base class, the default reverse name "
"will be the name of the child class followed by ``'_set'``, just as it "
"normally would be if you'd declared the field directly on the child class. "
"For example, in the above code, if the :attr:`~django.db.models.ForeignKey."
"related_name` attribute was omitted, the reverse name for the ``m2m`` field "
"would be ``childa_set`` in the ``ChildA`` case and ``childb_set`` for the "
"``ChildB`` field."
msgstr ""
"Si vous n'indiquez pas d'attribut :attr:`~django.db.models.ForeignKey."
"related_name` pour un champ d'une classe de base abstraite, le nom inverse "
"par défaut sera le nom de la classe enfant suivi par ``'_set'``, comme cela "
"se serait produit si vous aviez directement déclaré le champ dans la classe "
"enfant. Par exemple, dans le code ci-dessus, si l'attribut :attr:`~django.db."
"models.ForeignKey.related_name` avait été omis, le nom inverse du champ "
"``m2m`` aurait été ``childa_set`` dans le cas ``ChildA`` et ``childb_set`` "
"pour le champ ``ChildB``."

msgid "Multi-table inheritance"
msgstr "Héritage multi-table"

msgid ""
"The second type of model inheritance supported by Django is when each model "
"in the hierarchy is a model all by itself. Each model corresponds to its own "
"database table and can be queried and created individually. The inheritance "
"relationship introduces links between the child model and each of its "
"parents (via an automatically-created :class:`~django.db.models."
"OneToOneField`). For example::"
msgstr ""
"Le deuxième type d'héritage de modèle pris en charge par Django est lorsque "
"chaque modèle d'une hiérarchie est lui-même un modèle à part entière. À "
"chaque modèle correspond une table de base de données qui peut être "
"interrogée et créée individuellement. Cette relation d'héritage introduit "
"des liens entre le modèle enfant et chacun de ses parents (via un champ :"
"class:`~django.db.models.OneToOneField` automatique). Par exemple ::"

msgid ""
"All of the fields of ``Place`` will also be available in ``Restaurant``, "
"although the data will reside in a different database table. So these are "
"both possible:"
msgstr ""
"Tous les champs de ``Place`` seront aussi disponible dans ``Restaurant``, "
"même si les données se trouveront dans des tables de base de données "
"différentes. Ainsi, ces deux formes sont possibles :"

msgid ""
"If you have a ``Place`` that is also a ``Restaurant``, you can get from the "
"``Place`` object to the ``Restaurant`` object by using the lowercase version "
"of the model name:"
msgstr ""
"Si vous avez une ``Place`` qui est aussi un ``Restaurant``, vous pouvez "
"accéder à l'objet ``Restaurant`` depuis l'objet ``Place`` en utilisant le "
"nom du modèle en minuscules :"

msgid ""
"However, if ``p`` in the above example was *not* a ``Restaurant`` (it had "
"been created directly as a ``Place`` object or was the parent of some other "
"class), referring to ``p.restaurant`` would raise a ``Restaurant."
"DoesNotExist`` exception."
msgstr ""
"Cependant, si dans l'exemple ci-dessus ``p`` n'était *pas* un ``Restaurant`` "
"(soit parce qu'il a été créé directement comme un objet ``Place`` ou qu'il "
"est le parent d'une autre classe), l'accès à ``p.restaurant`` aurait généré "
"une exception ``Restaurant.DoesNotExist``."

msgid ""
"The automatically-created :class:`~django.db.models.OneToOneField` on "
"``Restaurant`` that links it to ``Place`` looks like this::"
msgstr ""
"Le champ :class:`~django.db.models.OneToOneField` automatiquement créé pour "
"``Restaurant`` qui le lie à ``Place`` ressemble à ceci ::"

msgid ""
"You can override that field by declaring your own :class:`~django.db.models."
"OneToOneField` with :attr:`parent_link=True <django.db.models.OneToOneField."
"parent_link>` on ``Restaurant``."
msgstr ""
"Il est possible de surcharger ce champ en déclarant votre propre :class:"
"`~django.db.models.OneToOneField` avec :attr:`parent_link=True <django.db."
"models.OneToOneField.parent_link>` dans la classe ``Restaurant``."

msgid "``Meta`` and multi-table inheritance"
msgstr "``Meta`` et l'héritage multi-table"

msgid ""
"In the multi-table inheritance situation, it doesn't make sense for a child "
"class to inherit from its parent's :ref:`Meta <meta-options>` class. All "
"the :ref:`Meta <meta-options>` options have already been applied to the "
"parent class and applying them again would normally only lead to "
"contradictory behavior (this is in contrast with the abstract base class "
"case, where the base class doesn't exist in its own right)."
msgstr ""
"Dans le cas de l'héritage multi-table, l'héritage de la classe :ref:`Meta "
"<meta-options>` du parent n'a aucun intérêt pour la classe enfant. Toutes "
"les options :ref:`Meta <meta-options>` ont déjà été appliquées à la classe "
"parente et une nouvelle application n'amènerait qu'à des comportements "
"contradictoires (a contrario du cas de la classe de base abstraite où la "
"classe de base n'existe pas pour elle-même)."

msgid ""
"So a child model does not have access to its parent's :ref:`Meta <meta-"
"options>` class. However, there are a few limited cases where the child "
"inherits behavior from the parent: if the child does not specify an :attr:"
"`~django.db.models.Options.ordering` attribute or a :attr:`~django.db.models."
"Options.get_latest_by` attribute, it will inherit these from its parent."
msgstr ""
"Ainsi, un modèle enfant n'a pas accès à la classe :ref:`Meta <meta-options>` "
"de son parent. Cependant, il existe quelques cas limités où l'enfant hérite "
"du comportement de son parent : si l'enfant n'indique pas d'attribut :attr:"
"`~django.db.models.Options.ordering` ou :attr:`~django.db.models.Options."
"get_latest_by`, il hérite des attributs correspondants de son parent."

msgid ""
"If the parent has an ordering and you don't want the child to have any "
"natural ordering, you can explicitly disable it::"
msgstr ""
"Si le parent possède un ordre de tri mais que vous ne souhaitez pas que "
"l'enfant ait un ordre de tri quelconque, vous pouvez le désactiver "
"explicitement ::"

msgid "Inheritance and reverse relations"
msgstr "Héritage et relations inverses"

msgid ""
"Because multi-table inheritance uses an implicit :class:`~django.db.models."
"OneToOneField` to link the child and the parent, it's possible to move from "
"the parent down to the child, as in the above example. However, this uses up "
"the name that is the default :attr:`~django.db.models.ForeignKey."
"related_name` value for :class:`~django.db.models.ForeignKey` and :class:"
"`~django.db.models.ManyToManyField` relations.  If you are putting those "
"types of relations on a subclass of the parent model, you **must** specify "
"the :attr:`~django.db.models.ForeignKey.related_name` attribute on each such "
"field. If you forget, Django will raise a validation error."
msgstr ""
"Comme l'héritage multi-table utilise un champ :class:`~django.db.models."
"OneToOneField` implicite pour lier l'enfant à son parent, il est possible "
"d'accéder à l'enfant depuis le parent comme dans l'exemple ci-dessus. "
"Cependant, il est fait usage du nom correspondant à la valeur par défaut de :"
"attr:`~django.db.models.ForeignKey.related_name` pour les relations :class:"
"`~django.db.models.ForeignKey` and :class:`~django.db.models."
"ManyToManyField`. Si vous ajoutez ces types de relations dans la sous-classe "
"du modèle parent, vous **devez** renseigner l'attribut :attr:`~django.db."
"models.ForeignKey.related_name` pour chacun de ces champs. Si vous "
"l'oubliez, Django génère une erreur de validation."

msgid ""
"For example, using the above ``Place`` class again, let's create another "
"subclass with a :class:`~django.db.models.ManyToManyField`::"
msgstr ""
"Par exemple, en se basant toujours sur la classe ``Place`` ci-dessus, créons "
"une autre sous-classe avec un champ :class:`~django.db.models."
"ManyToManyField`::"

msgid "This results in the error:"
msgstr "Il en résulte une erreur :"

msgid ""
"Adding ``related_name`` to the ``customers`` field as follows would resolve "
"the error: ``models.ManyToManyField(Place, related_name='provider')``."
msgstr ""
"L'ajout de ``related_name`` au champ ``customers`` comme ci-après "
"permettrait de résoudre l'erreur : ``models.ManyToManyField(Place, "
"related_name='provider')``."

msgid "Specifying the parent link field"
msgstr "Indication du champ de lien vers le parent"

msgid ""
"As mentioned, Django will automatically create a :class:`~django.db.models."
"OneToOneField` linking your child class back to any non-abstract parent "
"models. If you want to control the name of the attribute linking back to the "
"parent, you can create your own :class:`~django.db.models.OneToOneField` and "
"set :attr:`parent_link=True <django.db.models.OneToOneField.parent_link>` to "
"indicate that your field is the link back to the parent class."
msgstr ""
"Comme déjà mentionné, Django crée automatiquement une relation :class:"
"`~django.db.models.OneToOneField` de la classe enfant vers tout modèle "
"parent non abstrait. Si vous souhaitez contrôler le nom du champ de liaison "
"vers le parent, vous pouvez ajouter votre propre champ :class:`~django.db."
"models.OneToOneField` et définir  :attr:`parent_link=True <django.db.models."
"OneToOneField.parent_link>` pour indiquer que ce champ est le champ de "
"liaison vers la classe parente."

msgid ""
"When using :ref:`multi-table inheritance <multi-table-inheritance>`, a new "
"database table is created for each subclass of a model. This is usually the "
"desired behavior, since the subclass needs a place to store any additional "
"data fields that are not present on the base class. Sometimes, however, you "
"only want to change the Python behavior of a model -- perhaps to change the "
"default manager, or add a new method."
msgstr ""
"Lorsqu'on utilise l’:ref:`héritage multi-table <multi-table-inheritance>`, "
"une nouvelle table de base de données est créée pour chaque sous-classe d'un "
"modèle. C'est normalement le comportement souhaité, dans la mesure où la "
"sous-classe doit pouvoir stocker les champs de données supplémentaires qui "
"ne figurent pas dans la classe de base. Cependant, dans certains cas, seul "
"le comportement Python d'un modèle a besoin d'être modifié, peut-être pour "
"changer le gestionnaire par défaut ou pour ajouter une nouvelle méthode."

msgid ""
"This is what proxy model inheritance is for: creating a *proxy* for the "
"original model. You can create, delete and update instances of the proxy "
"model and all the data will be saved as if you were using the original (non-"
"proxied) model. The difference is that you can change things like the "
"default model ordering or the default manager in the proxy, without having "
"to alter the original."
msgstr ""
"C'est l'objectif de l'héritage de modèle mandataire : créer un mandataire "
"(« proxy ») du modèle d'origine. Vous pouvez créer, supprimer et mettre à "
"jour des instances du modèle mandataire et toutes les données seront "
"enregistrées comme si vous utilisiez le modèle d'origine (non mandataire). "
"La différence est que vous pouvez modifier certaines choses dans le modèle "
"mandataire comme le tri par défaut des modèles ou le gestionnaire par "
"défaut, sans devoir toucher au modèle original."

msgid ""
"Proxy models are declared like normal models. You tell Django that it's a "
"proxy model by setting the :attr:`~django.db.models.Options.proxy` attribute "
"of the ``Meta`` class to ``True``."
msgstr ""
"Les modèles mandataires sont déclarés comme des modèles normaux. Vous "
"indiquez à Django qu'il s'agit de modèles mandataires en définissant "
"l'attribut :attr:`~django.db.models.Options.proxy` de la classe ``Meta`` à "
"``True``."

msgid ""
"For example, suppose you want to add a method to the ``Person`` model. You "
"can do it like this::"
msgstr ""
"Par exemple, supposons que vous vouliez ajouter une méthode au modèle "
"``Person``. Vous pouvez le faire de cette façon ::"

msgid ""
"The ``MyPerson`` class operates on the same database table as its parent "
"``Person`` class. In particular, any new instances of ``Person`` will also "
"be accessible through ``MyPerson``, and vice-versa:"
msgstr ""
"La classe ``MyPerson`` opère sur la même table de base de données que sa "
"classe parente ``Person``. En particulier, toute nouvelle instance de "
"``Person`` sera aussi accessible au travers de ``MyPerson`` et inversement :"

msgid ""
"You could also use a proxy model to define a different default ordering on a "
"model. You might not always want to order the ``Person`` model, but "
"regularly order by the ``last_name`` attribute when you use the proxy::"
msgstr ""
"Il est aussi possible d'utiliser un modèle mandataire pour définir un autre "
"tri par défaut sur un modèle. Par exemple, vous ne voulez pas toujours trier "
"le modèle ``Person``, mais souvent le trier par ``last_name`` lorsque que "
"vous utilisez le mandataire ::"

msgid ""
"Now normal ``Person`` queries will be unordered and ``OrderedPerson`` "
"queries will be ordered by ``last_name``."
msgstr ""
"Dorénavant les requêtes sur ``Person`` ne seront pas triées mais les "
"requêtes sur ``OrderedPerson`` seront triées par leur champ ``last_name``."

msgid ""
"Proxy models inherit ``Meta`` attributes :ref:`in the same way as regular "
"models <meta-and-multi-table-inheritance>`."
msgstr ""
"Les modèles mandataires héritent des attributs ``Meta`` :ref:`tout comme les "
"modèles normaux <meta-and-multi-table-inheritance>`."

msgid "``QuerySet``\\s still return the model that was requested"
msgstr "Les requêtes ``QuerySet`` renvoient toujours le modèle interrogé"

msgid ""
"There is no way to have Django return, say, a ``MyPerson`` object whenever "
"you query for ``Person`` objects. A queryset for ``Person`` objects will "
"return those types of objects. The whole point of proxy objects is that code "
"relying on the original ``Person`` will use those and your own code can use "
"the extensions you included (that no other code is relying on anyway). It is "
"not a way to replace the ``Person`` (or any other) model everywhere with "
"something of your own creation."
msgstr ""
"Il n'y a aucun moyen de demander à Django de renvoyer par exemple un objet "
"``MyPerson`` chaque fois que vous faites une requête sur des objets "
"``Person``. Une requête sur des objets ``Person`` renvoie toujours des "
"objets de ce même type. L'idée principale des objets mandataires est que le "
"code se basant sur l'objet ``Person`` original utilise ces objets-là et que "
"votre propre code peut utiliser les extensions que vous avez rajoutées (et "
"qu'aucun autre code ne peut utiliser de toute manière). Ce n'est pas une "
"façon de remplacer partout le modèle ``Person`` (ou un autre) par un autre "
"modèle de votre conception. "

msgid "Base class restrictions"
msgstr "Restrictions des classes de base"

msgid ""
"A proxy model must inherit from exactly one non-abstract model class. You "
"can't inherit from multiple non-abstract models as the proxy model doesn't "
"provide any connection between the rows in the different database tables. A "
"proxy model can inherit from any number of abstract model classes, providing "
"they do *not* define any model fields. A proxy model may also inherit from "
"any number of proxy models that share a common non-abstract parent class."
msgstr ""
"Un modèle mandataire ne peut hériter que d'une seule classe de modèle non "
"abstraite. Il n'est pas possible d'hériter de plusieurs modèles non "
"abstraits car le modèle mandataire ne fournit aucune connexion entre les "
"lignes de différentes tables de base de données. Un modèle mandataire peut "
"hériter d'autant de classes de modèle abstraites que nécessaire pourvu "
"qu'elles ne définissent *pas* de champ de modèle. Un modèle mandataire peut "
"aussi hériter de plusieurs autres modèles mandataires qui partagent une "
"classe parente non abstraite commune."

msgid "Proxy model managers"
msgstr "Gestionnaires des modèles mandataires"

msgid ""
"If you don't specify any model managers on a proxy model, it inherits the "
"managers from its model parents. If you define a manager on the proxy model, "
"it will become the default, although any managers defined on the parent "
"classes will still be available."
msgstr ""
"Si vous n'indiquer aucun gestionnaire de modèle pour un modèle mandataire, "
"il hérite des gestionnaires de ses modèles parents. Si vous définissez un "
"gestionnaire sur le modèle mandataire, il devient le gestionnaire par "
"défaut, bien que d'éventuels gestionnaires définis dans les classes parentes "
"seront aussi disponibles."

msgid ""
"Continuing our example from above, you could change the default manager used "
"when you query the ``Person`` model like this::"
msgstr ""
"En poursuivant l'exemple ci-dessus, vous pourriez modifier le gestionnaire "
"par défaut utilisé lors des requêtes sur le modèle ``Person`` comme ceci ::"

msgid ""
"If you wanted to add a new manager to the Proxy, without replacing the "
"existing default, you can use the techniques described in the :ref:`custom "
"manager <custom-managers-and-inheritance>` documentation: create a base "
"class containing the new managers and inherit that after the primary base "
"class::"
msgstr ""
"Si vous souhaitez ajouter un nouveau gestionnaire au modèle mandataire sans "
"remplacer celui qui est défini par défaut, vous pouvez employer les "
"techniques décrites dans la documentation des :ref:`gestionnaires "
"personnalisés <custom-managers-and-inheritance>` : créez une classe de base "
"contenant les nouveaux gestionnaires et héritez de celle-ci après la classe "
"de base principale ::"

msgid ""
"You probably won't need to do this very often, but, when you do, it's "
"possible."
msgstr ""
"Il est assez rare d'avoir besoin de le faire, mais si besoin est, c'est "
"possible."

msgid "Differences between proxy inheritance and unmanaged models"
msgstr "Différences entre l'héritage mandataire et les modèles non pilotés"

msgid ""
"Proxy model inheritance might look fairly similar to creating an unmanaged "
"model, using the :attr:`~django.db.models.Options.managed` attribute on a "
"model's ``Meta`` class."
msgstr ""
"L'héritage des modèles mandataires est en apparence très semblable à la "
"création de modèles non pilotés, utilisant l'attribut :attr:`~django.db."
"models.Options.managed` de la classe ``Meta`` d'un modèle."

msgid ""
"With careful setting of :attr:`Meta.db_table <django.db.models.Options."
"db_table>` you could create an unmanaged model that shadows an existing "
"model and adds Python methods to it. However, that would be very repetitive "
"and fragile as you need to keep both copies synchronized if you make any "
"changes."
msgstr ""
"En définissant soigneusement :attr:`Meta.db_table <django.db.models.Options."
"db_table>`, il est possible de créer un modèle non piloté masquant un modèle "
"existant et d'y ajouter des méthodes Python. Cependant, cette solution est "
"très répétitive et fragile dans la mesure où il faut manuellement "
"synchroniser les deux en cas de modifications."

msgid ""
"On the other hand, proxy models are intended to behave exactly like the "
"model they are proxying for. They are always in sync with the parent model "
"since they directly inherit its fields and managers."
msgstr ""
"D'un autre côté, les modèles mandataires sont conçus pour se comporter "
"exactement comme le modèle qu'ils étendent. Ils sont toujours synchronisés "
"avec le modèle parent car ils héritent directement de ses champs et de ses "
"gestionnaires."

msgid "The general rules are:"
msgstr "Les règles générales sont :"

msgid ""
"If you are mirroring an existing model or database table and don't want all "
"the original database table columns, use ``Meta.managed=False``. That option "
"is normally useful for modeling database views and tables not under the "
"control of Django."
msgstr ""
"Si vous reflétez un modèle ou une table de base de données existant et que "
"vous ne souhaitez pas reproduire toutes les colonnes d'origine de la table, "
"utilisez ``Meta.managed=False``. Cette option est habituellement utile pour "
"la modélisation de tables ou vues de base de données qui ne sont pas sous le "
"contrôle de Django."

msgid ""
"If you are wanting to change the Python-only behavior of a model, but keep "
"all the same fields as in the original, use ``Meta.proxy=True``. This sets "
"things up so that the proxy model is an exact copy of the storage structure "
"of the original model when data is saved."
msgstr ""
"Si votre objectif est de ne modifier que le comportement Python d'un modèle "
"tout en conservant les mêmes champs que l'original, utilisez ``Meta."
"proxy=True``. Cette configuration assure que le modèle mandataire est une "
"copie exacte de la structure de stockage du modèle de base lorsque des "
"données sont enregistrées."

msgid "Multiple inheritance"
msgstr "Héritage multiple"

msgid ""
"Just as with Python's subclassing, it's possible for a Django model to "
"inherit from multiple parent models. Keep in mind that normal Python name "
"resolution rules apply. The first base class that a particular name (e.g. :"
"ref:`Meta <meta-options>`) appears in will be the one that is used; for "
"example, this means that if multiple parents contain a :ref:`Meta <meta-"
"options>` class, only the first one is going to be used, and all others will "
"be ignored."
msgstr ""
"Tout comme l'héritage en Python, les modèles Django peuvent hériter de "
"plusieurs modèles parents. N'oubliez pas que les règles Python habituelles "
"de résolution de nom s'appliquent. La première classe de base dans laquelle "
"apparaît un nom particulier (par ex. :ref:`Meta <meta-options>`) prévaut sur "
"les autres apparitions ; par exemple, cela signifie que si plusieurs parents "
"contiennent une classe :ref:`Meta <meta-options>`, seule la première "
"occurrence sera utilisée, et toutes les autres seront ignorées."

msgid ""
"Generally, you won't need to inherit from multiple parents. The main use-"
"case where this is useful is for \"mix-in\" classes: adding a particular "
"extra field or method to every class that inherits the mix-in. Try to keep "
"your inheritance hierarchies as simple and straightforward as possible so "
"that you won't have to struggle to work out where a particular piece of "
"information is coming from."
msgstr ""
"Généralement, il ne devrait pas être nécessaire d'hériter de plusieurs "
"parents. La principale raison de le faire est dans le cas de classes « mix-"
"in » : l'ajout d'un champ supplémentaire particulier ou d'une méthode dans "
"chaque classe héritant de la classe « mix-in ». Essayez de garder votre "
"hiérarchie d'héritage aussi simple et compréhensible que possible afin de ne "
"pas devoir batailler au moment de retrouver la provenance d'une information "
"ou d'un comportement spécifique."

msgid ""
"Note that inheriting from multiple models that have a common ``id`` primary "
"key field will raise an error. To properly use multiple inheritance, you can "
"use an explicit :class:`~django.db.models.AutoField` in the base models::"
msgstr ""
"Notez qu'en héritant de plusieurs modèles possédant un champ de clé primaire "
"``id`` commun, une erreur sera signalée. Pour un héritage multiple correct, "
"vous pouvez utiliser un champ :class:`~django.db.models.AutoField` explicite "
"dans les modèles de base ::"

msgid ""
"Or use a common ancestor to hold the :class:`~django.db.models.AutoField`. "
"This requires using an explicit :class:`~django.db.models.OneToOneField` "
"from each parent model to the common ancestor to avoid a clash between the "
"fields that are automatically generated and inherited by the child::"
msgstr ""
"Ou utilisez un ancêtre commun pour contenir la classe :class:`~django.db."
"models.AutoField`. Cela nécessite l'utilisation explicite de :class:`~django."
"db.models.OneToOneField` pour chaque modèle parent vers l'ancêtre commun "
"pour éviter un conflit entre les champs générés automatiquement et hérités "
"par l'enfant ::"

msgid "Field name \"hiding\" is not permitted"
msgstr "Le masquage de nom de champ n'est pas autorisé"

msgid ""
"In normal Python class inheritance, it is permissible for a child class to "
"override any attribute from the parent class. In Django, this isn't usually "
"permitted for model fields. If a non-abstract model base class has a field "
"called ``author``, you can't create another model field or define an "
"attribute called ``author`` in any class that inherits from that base class."
msgstr ""
"Dans l'héritage habituel de classes Python, il est permis de surcharger "
"n'importe quel attribut de la classe parent par la classe enfant. Avec "
"Django, cela n'est généralement pas permis pour les champs de modèle. Si une "
"classe de base de modèle non abstraite possède un champ ``auteur``, il n'est "
"pas possible de créer un autre champ de modèle ou de définir un attribut "
"nommé ``auteur`` dans les classes qui héritent de cette classe de base."

msgid ""
"This restriction doesn't apply to model fields inherited from an abstract "
"model. Such fields may be overridden with another field or value, or be "
"removed by setting ``field_name = None``."
msgstr ""
"Cette restriction ne s'applique pas aux champs de modèle hérités d'un modèle "
"abstrait. De tels champs peuvent être remplacés avec un autre champ ou "
"valeur, ou même être enlevés en définissant ``nom_de_champ = None``."

msgid ""
"Model managers are inherited from abstract base classes. Overriding an "
"inherited field which is referenced by an inherited :class:`~django.db."
"models.Manager` may cause subtle bugs. See :ref:`custom managers and model "
"inheritance <custom-managers-and-inheritance>`."
msgstr ""
"Les gestionnaires de modèle sont hérités des classes de base abstraites. La "
"surcharge d'un champ hérité qui est référencé par un :class:`~django.db."
"models.Manager` hérité peut causer des anomalies subtiles. Voir :ref:"
"`gestionnaires personnalisés et héritage de modèles <custom-managers-and-"
"inheritance>`."

msgid ""
"Some fields define extra attributes on the model, e.g. a :class:`~django.db."
"models.ForeignKey` defines an extra attribute with ``_id`` appended to the "
"field name, as well as ``related_name`` and ``related_query_name`` on the "
"foreign model."
msgstr ""
"Certains champs définissent des attributs supplémentaires sur les modèles, "
"par ex. une clé :class:`~django.db.models.ForeignKey` définit un attribut "
"supplémentaire formé du nom de champ ajouté du suffixe ``_id``, ainsi que "
"des valeurs  ``related_name`` et ``related_query_name`` sur le modèle "
"associé."

msgid ""
"These extra attributes cannot be overridden unless the field that defines it "
"is changed or removed so that it no longer defines the extra attribute."
msgstr ""
"Ces attributs supplémentaires ne peuvent pas être remplacés sans que le "
"champ qui les définit soit modifié ou enlevé pour qu'il ne définisse plus "
"ces attributs."

msgid ""
"Overriding fields in a parent model leads to difficulties in areas such as "
"initializing new instances (specifying which field is being initialized in "
"``Model.__init__``) and serialization. These are features which normal "
"Python class inheritance doesn't have to deal with in quite the same way, so "
"the difference between Django model inheritance and Python class inheritance "
"isn't arbitrary."
msgstr ""
"La surcharge de champs de modèles parents pose des problèmes dans les "
"domaines de l'initialisation de nouvelles instances (pour indiquer quel "
"champ est initialisé dans ``Model.__init__``) et de la sérialisation. Ce "
"sont des situations qui n'affectent pas de la même manière l'héritage "
"habituel de classes Python, cette différence entre l'héritage des classes "
"Python et l'héritage des modèles Django n'est donc pas arbitraire."

msgid ""
"This restriction only applies to attributes which are :class:`~django.db."
"models.Field` instances. Normal Python attributes can be overridden if you "
"wish. It also only applies to the name of the attribute as Python sees it: "
"if you are manually specifying the database column name, you can have the "
"same column name appearing in both a child and an ancestor model for multi-"
"table inheritance (they are columns in two different database tables)."
msgstr ""
"Cette restriction ne s'applique qu'aux attributs qui sont des instances de :"
"class:`~django.db.models.Field`. Les attributs Python normaux peuvent être "
"surchargés sans problème. Cela ne s'applique aussi qu'au nom de l'attribut "
"tel que Python le voit : si vous indiquez manuellement le nom de la colonne "
"de base de données, il est possible d'avoir le même nom de colonne "
"apparaissant à la fois dans un enfant et son modèle parent dans de "
"l'héritage multi-table (ce sont finalement des colonnes appartenant à deux "
"tables de base de données différentes)."

msgid ""
"Django will raise a :exc:`~django.core.exceptions.FieldError` if you "
"override any model field in any ancestor model."
msgstr ""
"Django signale une erreur :exc:`~django.core.exceptions.FieldError` si vous "
"surchargez un champ de modèle d'une classe parente."

msgid ""
"Note that because of the way fields are resolved during class definition, "
"model fields inherited from multiple abstract parent models are resolved in "
"a strict depth-first order. This contrasts with standard Python MRO, which "
"is resolved breadth-first in cases of diamond shaped inheritance. This "
"difference only affects complex model hierarchies, which (as per the advice "
"above) you should try to avoid."
msgstr ""
"Notez qu'en raison de la manière dont les champs sont résolus durant la "
"définition de classe, les champs de modèles hérités de plusieurs modèles "
"parents abstraits sont résolus dans un ordre strict de parcours en "
"profondeur. Cela contraste avec la stratégie MRO standard de Python, qui est "
"résolue par un parcours en largeur dans les cas d'héritage en diamant. Cette "
"différence n'affecte que les hiérarchies complexes de modèles, lesquelles "
"devraient être évitées (selon le conseil ci-dessus)."

msgid "Organizing models in a package"
msgstr "Organisation des modèles en paquets"

msgid ""
"The :djadmin:`manage.py startapp <startapp>` command creates an application "
"structure that includes a ``models.py`` file. If you have many models, "
"organizing them in separate files may be useful."
msgstr ""
"La commande :djadmin:`manage.py startapp <startapp>` crée une structure "
"d'application qui inclut un fichier ``models.py``. Si vous avez beaucoup de "
"modèles, il peut être avantageux de les organiser en fichiers séparés."

msgid ""
"To do so, create a ``models`` package. Remove ``models.py`` and create a "
"``myapp/models/`` directory with an ``__init__.py`` file and the files to "
"store your models. You must import the models in the ``__init__.py`` file."
msgstr ""
"Pour ce faire, créez un paquet ``models``. Effacez ``models.py`` et créez un "
"répertoire ``mon_app/models/`` contenant un fichier  ``__init__.py`` ainsi "
"que les fichiers stockant les modèles. Vous devez importer les modèles dans "
"le fichier ``__init__.py``."

msgid ""
"For example, if you had ``organic.py`` and ``synthetic.py`` in the "
"``models`` directory:"
msgstr ""
"Par exemple, si vous avez ``organic.py`` et ``synthetic.py`` dans le "
"répertoire ``models``:"

msgid "``myapp/models/__init__.py``"
msgstr "``myapp/models/__init__.py``"

msgid ""
"Explicitly importing each model rather than using ``from .models import *`` "
"has the advantages of not cluttering the namespace, making code more "
"readable, and keeping code analysis tools useful."
msgstr ""
"L'importation explicite de chaque modèle plutôt que d'importer en vrac "
"``from .models import *`` possède les avantages de ne pas polluer l'espace "
"de noms, de rendre le code plus lisible et de faciliter le travail des "
"outils d'analyse de code."

msgid ":doc:`The Models Reference </ref/models/index>`"
msgstr ":doc:`La référence des modèles </ref/models/index>`"

msgid ""
"Covers all the model related APIs including model fields, related objects, "
"and ``QuerySet``."
msgstr ""
"Documente toutes les API liées aux modèles, y compris les champs de modèles, "
"les objets liés et les requêtes (``QuerySet``)."

msgid ""
"This topic guide describes Django's support for interacting with multiple "
"databases. Most of the rest of Django's documentation assumes you are "
"interacting with a single database. If you want to interact with multiple "
"databases, you'll need to take some additional steps."
msgstr ""
"Ce guide thématique décrit la prise en charge de plusieurs bases de données "
"par Django. La plupart de la documentation de Django suppose que vous "
"travaillez avec une seule base de données. Si vous avez besoin de travailler "
"avec plusieurs bases de données, il sera nécessaire de procéder à quelques "
"configurations supplémentaires."

msgid ""
"See :ref:`testing-multi-db` for information about testing with multiple "
"databases."
msgstr ""
"Consultez :ref:`testing-multi-db` pour des informations sur les tests avec "
"plusieurs bases de données."

msgid "Defining your databases"
msgstr "Définition des bases de données"

msgid ""
"The first step to using more than one database with Django is to tell Django "
"about the database servers you'll be using. This is done using the :setting:"
"`DATABASES` setting. This setting maps database aliases, which are a way to "
"refer to a specific database throughout Django, to a dictionary of settings "
"for that specific connection. The settings in the inner dictionaries are "
"described fully in the :setting:`DATABASES` documentation."
msgstr ""
"La première chose à faire lorsqu'on veut utiliser plus d'une base de données "
"avec Django est de le renseigner au sujet des serveurs de base de données à "
"utiliser. Cela se fait au niveau du réglage :setting:`DATABASES`. Ce réglage "
"fait correspondre des alias de bases de données, qui sont une manière de se "
"référer à des bases de données spécifiques dans le code de Django, à un "
"dictionnaire de réglages pour la connexion concernée. Les réglages du "
"dictionnaire interne sont détaillés dans la documentation de :setting:"
"`DATABASES`."

msgid ""
"Databases can have any alias you choose. However, the alias ``default`` has "
"special significance. Django uses the database with the alias of ``default`` "
"when no other database has been selected."
msgstr ""
"L'alias de base de données peut être librement choisi. Cependant, l'alias "
"``default`` a une signification spéciale. Django utilise la base de données "
"ayant l'alias ``default`` lorsqu'aucune autre base de données n'a été "
"sélectionnée."

msgid ""
"The following is an example ``settings.py`` snippet defining two databases "
"-- a default PostgreSQL database and a MySQL database called ``users``::"
msgstr ""
"L'exemple suivant est un extrait de ``settings.py`` définissant deux bases "
"de données, une base de données PostgreSQL par défaut et une base de données "
"MySQL nommée ``users``::"

msgid ""
"If the concept of a ``default`` database doesn't make sense in the context "
"of your project, you need to be careful to always specify the database that "
"you want to use. Django requires that a ``default`` database entry be "
"defined, but the parameters dictionary can be left blank if it will not be "
"used. To do this, you must set up :setting:`DATABASE_ROUTERS` for all of "
"your apps' models, including those in any contrib and third-party apps "
"you're using, so that no queries are routed to the default database. The "
"following is an example ``settings.py`` snippet defining two non-default "
"databases, with the ``default`` entry intentionally left empty::"
msgstr ""
"Si le concept d'une base de données par défaut n'a pas de sens dans le "
"contexte de votre projet, vous devez vous efforcez de systématiquement "
"indiquer la base de données à utiliser. Django exige qu'une base de données "
"nommée  ``default`` soit définie, mais le dictionnaire des paramètres peut "
"rester vierge s'il n'est pas utilisé. Pour faire cela, vous devez "
"configurer :setting:`DATABASE_ROUTERS` pour tous les modèles de vos "
"applications, y compris ceux des applications « contrib » ou d'applications "
"tierces que vous utilisez, afin qu'aucune requête ne soit dirigée vers la "
"base de données par défaut. L'exemple suivant est un extrait de ``settings."
"py`` définissant deux bases de données spécifiques, avec l'entrée "
"``default`` volontairement laissée vide ::"

msgid ""
"If you attempt to access a database that you haven't defined in your :"
"setting:`DATABASES` setting, Django will raise a ``django.utils.connection."
"ConnectionDoesNotExist`` exception."
msgstr ""
"Si vous essayez d'accéder à une base de données qui n'y pas été définie dans "
"le réglage :setting:`DATABASES`, Django génère une exception ``django.utils."
"connection.ConnectionDoesNotExist``."

msgid "Synchronizing your databases"
msgstr "Synchronisation des bases de données"

msgid ""
"The :djadmin:`migrate` management command operates on one database at a "
"time. By default, it operates on the ``default`` database, but by providing "
"the :option:`--database <migrate --database>` option, you can tell it to "
"synchronize a different database. So, to synchronize all models onto all "
"databases in the first example above, you would need to call:"
msgstr ""
"La commande de gestion :djadmin:`migrate` opère sur une seule base de "
"données à la fois. Par défaut, elle agit sur la base de données ``default``, "
"mais en renseignant l'option :option:`--database <migrate --database>`, vous "
"pouvez lui demander de synchroniser une autre base de données. Ainsi, pour "
"synchroniser tous les modèles de toutes les bases de données dans le premier "
"exemple ci-dessus, il faudrait exécuter :"

msgid ""
"If you don't want every application to be synchronized onto a particular "
"database, you can define a :ref:`database router<topics-db-multi-db-"
"routing>` that implements a policy constraining the availability of "
"particular models."
msgstr ""
"Si vous ne voulez pas que chaque application soit synchronisée vers une base "
"de données particulière, vous pouvez définir un :ref:`routeur de base de "
"données <topics-db-multi-db-routing>` implémentant une politique de "
"restriction de disponibilité de certains modèles."

msgid ""
"If, as in the second example above, you've left the ``default`` database "
"empty, you must provide a database name each time you run :djadmin:"
"`migrate`. Omitting the database name would raise an error. For the second "
"example:"
msgstr ""
"Si comme dans le second exemple ci-dessus vous avez laissé vide la base de "
"données ``default``, vous devez fournir un nom de base de données chaque "
"fois que vous lancez :djadmin:`migrate`. Sans cela, une erreur sera "
"produite. Pour le second exemple :"

msgid "Using other management commands"
msgstr "Utilisation d'autres commandes de gestion"

msgid ""
"Most other ``django-admin`` commands that interact with the database operate "
"in the same way as :djadmin:`migrate` -- they only ever operate on one "
"database at a time, using ``--database`` to control the database used."
msgstr ""
"La plupart des autres commandes ``django-admin`` interagissant avec la base "
"de données fonctionnent de la même façon que :djadmin:`migrate`, c'est-à-"
"dire qu'ils n'opèrent toujours que sur une seule base de données à la fois, "
"en se basant sur le paramètre ``--database`` pour savoir quelle base de "
"données utiliser."

msgid ""
"An exception to this rule is the :djadmin:`makemigrations` command. It "
"validates the migration history in the databases to catch problems with the "
"existing migration files (which could be caused by editing them) before "
"creating new migrations. By default, it checks only the ``default`` "
"database, but it consults the :meth:`allow_migrate` method of :ref:`routers "
"<topics-db-multi-db-routing>` if any are installed."
msgstr ""
"Une exception à cette règle est la commande :djadmin:`makemigrations`. Elle "
"valide l'historique des migrations dans la base de données pour détecter "
"d'éventuels problèmes avec les fichiers de migration existants (par exemple "
"suite à une édition manuelle) avant de créer de nouvelles migrations. Par "
"défaut, elle ne contrôle que la base de données ``default``, mais elle "
"consulte la méthode :meth:`allow_migrate` des :ref:`routeurs <topics-db-"
"multi-db-routing>` pour autant qu'il y en ait."

msgid "Automatic database routing"
msgstr "Routage automatique de base de données"

msgid ""
"The easiest way to use multiple databases is to set up a database routing "
"scheme. The default routing scheme ensures that objects remain 'sticky' to "
"their original database (i.e., an object retrieved from the ``foo`` database "
"will be saved on the same database). The default routing scheme ensures that "
"if a database isn't specified, all queries fall back to the ``default`` "
"database."
msgstr ""
"La façon la plus simple d'utiliser plusieurs bases de données est de définir "
"un plan de routage de base de données. Le plan de routage par défaut "
"garantit que les objets restent « attachés » à leur base de données "
"originale (c'est-à-dire qu'un objet extrait de la base de données ``foo`` "
"sera également enregistré dans la même base). Le plan de routage par défaut "
"garantit que sans indication particulière de base de données, toutes les "
"requêtes sont dirigées vers la base de données ``default``."

msgid ""
"You don't have to do anything to activate the default routing scheme -- it "
"is provided 'out of the box' on every Django project. However, if you want "
"to implement more interesting database allocation behaviors, you can define "
"and install your own database routers."
msgstr ""
"Vous n'avez rien à faire de particulier pour activer le plan de routage par "
"défaut, il est activé d'origine pour tout projet Django. Cependant, si vous "
"avez l'intention d'implémenter un comportement plus élaboré de distribution "
"entre bases de données, vous avez la possibilité de définir et installer vos "
"propres routeurs de base de données."

msgid "Database routers"
msgstr "Routeurs de base de données"

msgid "A database Router is a class that provides up to four methods:"
msgstr ""
"Un routeur de base de données (``Router``) est une classe fournissant "
"jusqu'à quatre méthodes :"

msgid ""
"Suggest the database that should be used for read operations for objects of "
"type ``model``."
msgstr ""
"Suggère la base de données à utiliser pour les opérations de lecture pour "
"les objets de type ``model``."

msgid ""
"If a database operation is able to provide any additional information that "
"might assist in selecting a database, it will be provided in the ``hints`` "
"dictionary. Details on valid hints are provided :ref:`below <topics-db-multi-"
"db-hints>`."
msgstr ""
"Si une opération de base de données est capable de fournir des informations "
"supplémentaires pouvant aider à choisir la base de données, celles-ci seront "
"contenues dans le dictionnaire ``hints``. Vous trouverez :ref:`ci-dessous "
"<topics-db-multi-db-hints>` plus de détails au sujet des contenus possibles "
"de ``hints``."

msgid "Returns ``None`` if there is no suggestion."
msgstr "Renvoie ``None`` s'il n'y a pas de suggestion."

msgid ""
"Suggest the database that should be used for writes of objects of type Model."
msgstr ""
"Suggère la base de données à utiliser pour les opérations d'écriture pour "
"les objets de type ``Model``."

msgid ""
"Return ``True`` if a relation between ``obj1`` and ``obj2`` should be "
"allowed, ``False`` if the relation should be prevented, or ``None`` if the "
"router has no opinion. This is purely a validation operation, used by "
"foreign key and many to many operations to determine if a relation should be "
"allowed between two objects."
msgstr ""
"Renvoie ``True`` si une relation entre ``obj1`` et ``obj2`` est autorisée, "
"``False`` si la relation est interdite ou ``None`` si le routeur n'a pas "
"d'avis. Il s'agit purement d'une opération de validation utilisée par les "
"opérations de clé étrangère et de relations plusieurs-à-plusieurs pour "
"déterminer si une relation entre deux objets doit être permise ou non."

msgid ""
"If no router has an opinion (i.e. all routers return ``None``), only "
"relations within the same database are allowed."
msgstr ""
"Si aucun routeur n'a d'opinion (c-à-d. tous les routeurs renvoient "
"``None``), seules les relations à l'intérieur d'une même base de données "
"sont acceptées."

msgid ""
"Determine if the migration operation is allowed to run on the database with "
"alias ``db``. Return ``True`` if the operation should run, ``False`` if it "
"shouldn't run, or ``None`` if the router has no opinion."
msgstr ""
"Détermine si l'opération de migration est autorisée à s'exécuter pour la "
"base de données ayant l'alias ``db``. Renvoie ``True`` si l'opération doit "
"être appliquée, ``False`` si elle ne doit pas l'être ou ``None`` si le "
"routeur n'a pas d'avis."

msgid ""
"The ``app_label`` positional argument is the label of the application being "
"migrated."
msgstr ""
"Le paramètre positionnel ``app_label`` est l'étiquette de l'application en "
"cours de migration."

msgid ""
"``model_name`` is set by most migration operations to the value of ``model."
"_meta.model_name`` (the lowercased version of the model ``__name__``) of the "
"model being migrated. Its value is ``None`` for the :class:`~django.db."
"migrations.operations.RunPython` and :class:`~django.db.migrations."
"operations.RunSQL` operations unless they provide it using hints."
msgstr ""
"``model_name`` est défini par la plupart des opérations de migration à la "
"valeur de ``model._meta.model_name`` (la version en minuscules du "
"``__name__`` du modèle) du modèle en cours de migration. Sa valeur est "
"``None`` pour les opérations :class:`~django.db.migrations.operations."
"RunPython` et :class:`~django.db.migrations.operations.RunSQL` sauf si elles "
"le fournissent par des indications (``hints``)."

msgid ""
"``hints`` are used by certain operations to communicate additional "
"information to the router."
msgstr ""
"``hints`` est utilisé par certaines opérations pour communiquer des "
"informations supplémentaires au routeur."

msgid ""
"When ``model_name`` is set, ``hints`` normally contains the model class "
"under the key ``'model'``. Note that it may be a :ref:`historical model "
"<historical-models>`, and thus not have any custom attributes, methods, or "
"managers. You should only rely on ``_meta``."
msgstr ""
"Lorsque ``model_name`` est défini, ``hints`` contient normalement la classe "
"du modèle dans la clé ``'model'``. Notez qu'il peut s'agir d'un :ref:`modèle "
"historique <historical-models>`, et de ce fait ne pas comporter d'attributs, "
"méthodes ou gestionnaires personnalisés. Vous ne pouvez compter que sur "
"``_meta``."

msgid ""
"This method can also be used to determine the availability of a model on a "
"given database."
msgstr ""
"Cette méthode peut aussi être utilisée pour déterminer la disponibilité d'un "
"modèle dans une base de données précise."

msgid ""
":djadmin:`makemigrations` always creates migrations for model changes, but "
"if ``allow_migrate()`` returns ``False``, any migration operations for the "
"``model_name`` will be silently skipped when running :djadmin:`migrate` on "
"the ``db``. Changing the behavior of ``allow_migrate()`` for models that "
"already have migrations may result in broken foreign keys, extra tables, or "
"missing tables. When :djadmin:`makemigrations` verifies the migration "
"history, it skips databases where no app is allowed to migrate."
msgstr ""
":djadmin:`makemigrations` crée toujours des migrations pour les "
"modifications de modèles, mais si ``allow_migrate()`` renvoie ``False``, "
"toute opération de migration pour ``model_name`` sera silencieusement "
"ignorée lors de l'exécution de :djadmin:`migrate` pour ``db``. La "
"modification du comportement de ``allow_migrate()`` pour des modèles qui ont "
"déjà des migrations peut aboutir à des clés étrangères cassées, des tables "
"en trop ou des tables manquantes. Lorsque :djadmin:`makemigrations` vérifie "
"l'historique des migrations, elle ignore les bases de données où aucune "
"application n'autorise les migrations."

msgid ""
"A router doesn't have to provide *all* these methods -- it may omit one or "
"more of them. If one of the methods is omitted, Django will skip that router "
"when performing the relevant check."
msgstr ""
"Un routeur ne doit pas absolument implémenter *toutes* ces méthodes, il peut "
"en omettre une ou plusieurs. Si l'une des méthode est absente, Django saute "
"ce routeur lorsqu'il effectue le contrôle correspondant."

msgid "Hints"
msgstr "Indications (``hints``)"

msgid ""
"The hints received by the database router can be used to decide which "
"database should receive a given request."
msgstr ""
"Les indications reçues par le routeur de base de données dans le "
"dictionnaire ``hints`` peuvent servir à décider quelle base de données doit "
"recevoir une requête donnée."

msgid ""
"At present, the only hint that will be provided is ``instance``, an object "
"instance that is related to the read or write operation that is underway. "
"This might be the instance that is being saved, or it might be an instance "
"that is being added in a many-to-many relation. In some cases, no instance "
"hint will be provided at all. The router checks for the existence of an "
"instance hint, and determine if that hint should be used to alter routing "
"behavior."
msgstr ""
"Actuellement, la seule indication fournie est ``instance``, une instance "
"d'objet liée à l'opération de lecture ou d'écriture en cours. Il peut s'agir "
"de l'instance en train d'être enregistrée ou d'une instance à ajouter dans "
"une relation plusieurs-à-plusieurs. Dans certains cas, aucune indication "
"d'instance n'est présente. Le routeur vérifie l'existence d'une indication "
"d'instance et détermine lui-même si cette instance doit être utilisée pour "
"modifier le comportement de routage."

msgid "Using routers"
msgstr "Utilisation des routeurs"

msgid ""
"Database routers are installed using the :setting:`DATABASE_ROUTERS` "
"setting. This setting defines a list of class names, each specifying a "
"router that should be used by the base router (``django.db.router``)."
msgstr ""
"Les routeurs de base de données sont installés par le réglage :setting:"
"`DATABASE_ROUTERS`. Ce réglage définit une liste de noms de classes, chacune "
"définissant un routeur devant être utilisé par le routeur de base (``django."
"db.router``)."

msgid ""
"The base router is used by Django's database operations to allocate database "
"usage. Whenever a query needs to know which database to use, it calls the "
"base router, providing a model and a hint (if available). The base router "
"tries each router class in turn until one returns a database suggestion. If "
"no routers return a suggestion, the base router tries the current :attr:"
"`instance._state.db <django.db.models.Model._state>` of the hint instance. "
"If no hint instance was provided, or :attr:`instance._state.db <django.db."
"models.Model._state>` is ``None``, the base router will allocate the "
"``default`` database."
msgstr ""
"Le routeur principal est utilisé par les opérations de base de données de "
"Django pour désigner les bases de données à utiliser. Chaque fois qu'une "
"requête a besoin de savoir quelle base de données utiliser, elle appelle le "
"routeur principal, en indiquant un modèle ainsi qu'un indice (si "
"disponible). Le routeur principal essaie chaque classe de routeur tour à "
"tour jusqu'à ce qu'une de ces classes renvoie une suggestion de base de "
"données. Si aucun routeur ne renvoie de suggestion, le routeur principal "
"essaie d'utiliser la propriété :attr:`instance._state.db <django.db.models."
"Model._state>` de l'instance d'indice. Si aucun indice n'a été indiqué ou "
"si :attr:`instance._state.db <django.db.models.Model._state>` contient "
"``None``, le routeur principal désigne la base de données ``default``."

msgid "An example"
msgstr "Un exemple"

msgid "Example purposes only!"
msgstr "À titre d'exemple uniquement !"

msgid ""
"This example is intended as a demonstration of how the router infrastructure "
"can be used to alter database usage. It intentionally ignores some complex "
"issues in order to demonstrate how routers are used."
msgstr ""
"Cet exemple est prévu pour démontrer la manière dont l'infrastructure de "
"routage peut être utilisée pour modifier l'utilisation des bases de données. "
"Il ignore volontairement certaines questions complexes afin de démontrer "
"comment les routeurs peuvent être utilisés."

msgid ""
"This example won't work if any of the models in ``myapp`` contain "
"relationships to models outside of the ``other`` database. :ref:`Cross-"
"database relationships <no_cross_database_relations>` introduce referential "
"integrity problems that Django can't currently handle."
msgstr ""
"Cet exemple ne fonctionnera pas si l'un des modèles de ``myapp`` contient "
"des relations vers des modèles stockés ailleurs que dans la base de données "
"``other``. :ref:`Les relations croisées entre base de données "
"<no_cross_database_relations>` induisent des problèmes d'intégrité "
"référentielle que Django ne peut actuellement pas gérer."

msgid ""
"The primary/replica (referred to as master/slave by some databases) "
"configuration described is also flawed -- it doesn't provide any solution "
"for handling replication lag (i.e., query inconsistencies introduced because "
"of the time taken for a write to propagate to the replicas). It also doesn't "
"consider the interaction of transactions with the database utilization "
"strategy."
msgstr ""
"La configuration primaire/réplique présentée ici (désignée comme maître/"
"esclave par certaines bases de données) est également biaisée, car elle ne "
"propose aucune solution pour gérer les délais de réplication (c'est-à-dire "
"les incohérences de requêtes dues au temps nécessaire à propager les "
"écritures vers les répliques). Elle ne considère pas non plus l'interaction "
"des transactions avec la stratégie d'utilisation des bases de données."

msgid ""
"So - what does this mean in practice? Let's consider another sample "
"configuration. This one will have several databases: one for the ``auth`` "
"application, and all other apps using a primary/replica setup with two read "
"replicas. Here are the settings specifying these databases::"
msgstr ""
"Mais qu'est-ce que cela signifie en pratique ? Considérons un autre exemple "
"de configuration. Celle-ci contiendra plusieurs bases de données : une pour "
"l'application ``auth`` et toutes les autres applications utiliseront une "
"configuration primaire/réplique avec deux répliques en lecture seule. Voici "
"les réglages définissant ces bases de données ::"

msgid ""
"Now we'll need to handle routing. First we want a router that knows to send "
"queries for the ``auth`` and ``contenttypes`` apps to ``auth_db`` (``auth`` "
"models are linked to ``ContentType``, so they must be stored in the same "
"database)::"
msgstr ""
"Nous devons maintenant gérer le routage. Nous désirons premièrement un "
"routeur sachant envoyer des requêtes pour les applications ``auth`` et "
"``contenttypes`` vers ``auth_db`` (les modèles ``auth`` sont liés à "
"``ContentType``, ils doivent donc être stockés dans la même base de "
"données) ::"

msgid ""
"And we also want a router that sends all other apps to the primary/replica "
"configuration, and randomly chooses a replica to read from::"
msgstr ""
"Et nous voulons également un routeur pour que toutes les autres applications "
"envoient leurs requêtes vers la configuration primaire/réplique, tout en "
"choisissant au hasard une réplique pour la lecture ::"

msgid ""
"Finally, in the settings file, we add the following (substituting ``path.to."
"`` with the actual Python path to the module(s) where the routers are "
"defined)::"
msgstr ""
"Pour terminer, nous ajoutons dans le fichier de réglages le code suivant "
"(remplaçant ``path.to.`` par le chemin Python réel vers les modules où les "
"routeurs sont définis) ::"

msgid ""
"The order in which routers are processed is significant. Routers will be "
"queried in the order they are listed in the :setting:`DATABASE_ROUTERS` "
"setting. In this example, the ``AuthRouter`` is processed before the "
"``PrimaryReplicaRouter``, and as a result, decisions concerning the models "
"in ``auth`` are processed before any other decision is made. If the :setting:"
"`DATABASE_ROUTERS` setting listed the two routers in the other order, "
"``PrimaryReplicaRouter.allow_migrate()`` would be processed first. The catch-"
"all nature of the PrimaryReplicaRouter implementation would mean that all "
"models would be available on all databases."
msgstr ""
"L'ordre dans lequel les routeurs sont traités a son importance. Les routeurs "
"sont interrogés dans leur ordre d'apparition dans le réglage  :setting:"
"`DATABASE_ROUTERS`. Dans cet exemple, ``AuthRouter`` est traité avant "
"``PrimaryReplicaRouter``, et par conséquent, les décisions concernant les "
"modèles de ``auth`` sont prises avant toute autre décision. Si le réglage :"
"setting:`DATABASE_ROUTERS` contenait les deux routeurs dans l'ordre inverse, "
"``PrimaryReplicaRouter.allow_migrate()`` serait traité en premier. La nature "
"« ramasse-tout » de l'implémentation de ``PrimaryReplicaRouter`` "
"signifierait que tous les modèles seraient accessibles dans toutes les bases "
"de données."

msgid ""
"With this setup installed, and all databases migrated as per :ref:"
"`synchronizing_multiple_databases`, lets run some Django code:"
msgstr ""
"Avec l'installation de cette configuration et toutes les bases de données "
"migrées en accord avec :ref:`synchronizing_multiple_databases`, exécutons un "
"peu de code Django :"

msgid ""
"This example defined a router to handle interaction with models from the "
"``auth`` app, and other routers to handle interaction with all other apps. "
"If you left your ``default`` database empty and don't want to define a catch-"
"all database router to handle all apps not otherwise specified, your routers "
"must handle the names of all apps in :setting:`INSTALLED_APPS` before you "
"migrate. See :ref:`contrib_app_multiple_databases` for information about "
"contrib apps that must be together in one database."
msgstr ""
"Cet exemple définissait un routeur pour gérer l'interaction avec les modèles "
"de l'application ``auth`` et d'autres routeurs pour gérer l'interaction avec "
"toutes les autres applications. Si vous avez laissé vide la base de données "
"``default`` et que vous ne vouliez pas définir un routeur de base de données "
"« fourre-tout » pour gérer toutes les applications non spécifiées "
"explicitement, les routeurs doivent gérer les noms de toutes les "
"applications dans :setting:`INSTALLED_APPS` avant d'effectuer la migration. "
"Voir :ref:`contrib_app_multiple_databases` pour plus d'informations sur les "
"applications contribuées qui doivent être ensemble dans la même base de "
"données."

msgid "Manually selecting a database"
msgstr "Sélection manuelle d'une base de données"

msgid ""
"Django also provides an API that allows you to maintain complete control "
"over database usage in your code. A manually specified database allocation "
"will take priority over a database allocated by a router."
msgstr ""
"Django offre également une API permettant de conserver un contrôle total sur "
"l'utilisation des base de données dans votre code. L'attribution manuelle "
"d'une base de données est prioritaire par rapport à l'attribution provenant "
"d'un routeur."

msgid "Manually selecting a database for a ``QuerySet``"
msgstr "Sélection manuelle d'une base de données pour un ``QuerySet``"

msgid ""
"You can select the database for a ``QuerySet`` at any point in the "
"``QuerySet`` \"chain.\" Call ``using()`` on the ``QuerySet`` to get another "
"``QuerySet`` that uses the specified database."
msgstr ""
"Vous pouvez choisir la base de données d'un ``QuerySet`` à tout moment dans "
"la « chaîne » du ``QuerySet``. Appelez ``using()`` sur le ``QuerySet`` pour "
"obtenir un autre ``QuerySet`` utilisant la base de données indiquée."

msgid ""
"``using()`` takes a single argument: the alias of the database on which you "
"want to run the query. For example:"
msgstr ""
"``using()`` accepte un seul paramètre : l'alias de la base de données devant "
"recevoir la requête à exécuter. Par exemple :"

msgid "Selecting a database for ``save()``"
msgstr "Sélection d'une base de données pour ``save()``"

msgid ""
"Use the ``using`` keyword to ``Model.save()`` to specify to which database "
"the data should be saved."
msgstr ""
"Utilisez le paramètre nommé ``using`` de ``Model.save()`` pour indiquer dans "
"quelle base de données les données doivent être enregistrées."

msgid ""
"For example, to save an object to the ``legacy_users`` database, you'd use "
"this:"
msgstr ""
"Par exemple, pour enregistrer un objet dans la base de données "
"``legacy_users``, il faut écrire ceci :"

msgid ""
"If you don't specify ``using``, the ``save()`` method will save into the "
"default database allocated by the routers."
msgstr ""
"Si vous ne renseignez pas ``using``, la méthode ``save()`` enregistre dans "
"la base de données par défaut attribuée par les routeurs."

msgid "Moving an object from one database to another"
msgstr "Déplacement d'un objet entre bases de données"

msgid ""
"If you've saved an instance to one database, it might be tempting to use "
"``save(using=...)`` as a way to migrate the instance to a new database. "
"However, if you don't take appropriate steps, this could have some "
"unexpected consequences."
msgstr ""
"Si vous avez enregistré une instance dans une base de données, il peut être "
"tentant d'utiliser ``save(using=...)`` comme astuce pour copier l'instance "
"vers une nouvelle base de données. Cependant, si vous ne prenez pas "
"certaines précautions nécessaires, cela peut amener à des conséquences "
"inattendues."

msgid "Consider the following example:"
msgstr "Considérez l'exemple suivant :"

msgid ""
"In statement 1, a new ``Person`` object is saved to the ``first`` database. "
"At this time, ``p`` doesn't have a primary key, so Django issues an SQL "
"``INSERT`` statement. This creates a primary key, and Django assigns that "
"primary key to ``p``."
msgstr ""
"Dans l'instruction 1, un nouvel objet ``Person`` est enregistré dans la base "
"de données ``first``. À ce moment, ``p`` n'a pas encore de clé primaire, ce "
"qui fait que Django génère une instruction SQL ``INSERT``. La clé primaire "
"est donc créée et Django attribue cette clé primaire à ``p``."

msgid ""
"When the save occurs in statement 2, ``p`` already has a primary key value, "
"and Django will attempt to use that primary key on the new database. If the "
"primary key value isn't in use in the ``second`` database, then you won't "
"have any problems -- the object will be copied to the new database."
msgstr ""
"Lorsque l'enregistrement est effectué à l'instruction 2, ``p`` a déjà reçu "
"une valeur de clé primaire et Django va utiliser cette clé primaire dans la "
"nouvelle base de données. Si cette valeur de clé primaire n'est pas déjà "
"utilisée dans la base de données ``second``, vous n'aurez pas de problème, "
"l'objet sera effectivement copié dans la nouvelle base de données."

msgid ""
"However, if the primary key of ``p`` is already in use on the ``second`` "
"database, the existing object in the ``second`` database will be overridden "
"when ``p`` is saved."
msgstr ""
"Cependant, si la clé primaire de ``p`` est déjà utilisée dans la base de "
"données ``second``, l'objet existant dans la base de données ``second`` sera "
"écrasé lors de l'enregistrement de ``p``."

msgid ""
"You can avoid this in two ways. First, you can clear the primary key of the "
"instance. If an object has no primary key, Django will treat it as a new "
"object, avoiding any loss of data on the ``second`` database:"
msgstr ""
"Vous pouvez empêcher cela de deux manières. Premièrement, vous pouvez "
"effacer la clé primaire de l'instance. Si un objet n'a pas de clé primaire, "
"Django le traite comme un nouvel objet, évitant ainsi toute perte de données "
"dans la base de données ``second``:"

msgid ""
"The second option is to use the ``force_insert`` option to ``save()`` to "
"ensure that Django does an SQL ``INSERT``:"
msgstr ""
"La seconde possibilité est d'utiliser l'option ``force_insert`` de "
"``save()`` pour être certain que Django produise une instruction SQL "
"``INSERT``:"

msgid ""
"This will ensure that the person named ``Fred`` will have the same primary "
"key on both databases. If that primary key is already in use when you try to "
"save onto the ``second`` database, an error will be raised."
msgstr ""
"Cela garantit que la personne nommée ``Fred`` possédera la même clé primaire "
"dans les deux bases de données. Si cette clé primaire est déjà utilisée "
"lorsque vous essayez d'enregistrer dans la base de données ``second``, une "
"erreur sera générée."

msgid "Selecting a database to delete from"
msgstr "Sélection d'une base de données pour la suppression"

msgid ""
"By default, a call to delete an existing object will be executed on the same "
"database that was used to retrieve the object in the first place:"
msgstr ""
"Par défaut, un appel à la suppression d'un objet existant sera exécuté dans "
"la même base de données qui a été utilisée pour extraire l'objet au "
"préalable :"

msgid ""
"To specify the database from which a model will be deleted, pass a ``using`` "
"keyword argument to the ``Model.delete()`` method. This argument works just "
"like the ``using`` keyword argument to ``save()``."
msgstr ""
"Pour indiquer la base de données dans laquelle un modèle sera supprimé, "
"transmettez un paramètre nommé ``using`` à la méthode ``Model.delete()``. Ce "
"paramètre joue le même rôle que le même paramètre avec ``save()``."

msgid ""
"For example, if you're migrating a user from the ``legacy_users`` database "
"to the ``new_users`` database, you might use these commands:"
msgstr ""
"Par exemple, si vous migrez un utilisateur à partir de la base de données "
"``legacy_users`` vers la base de données ``new_users``, voici les commandes "
"que vous pourriez utiliser :"

msgid "Using managers with multiple databases"
msgstr "Utilisation de gestionnaires avec plusieurs bases de données"

msgid ""
"Use the ``db_manager()`` method on managers to give managers access to a non-"
"default database."
msgstr ""
"Utilisez la méthode ``db_manager()`` des gestionnaires pour donner à ceux-ci "
"accès à une base de données autre que celle par défaut."

msgid ""
"For example, say you have a custom manager method that touches the database "
"-- ``User.objects.create_user()``. Because ``create_user()`` is a manager "
"method, not a ``QuerySet`` method, you can't do ``User.objects."
"using('new_users').create_user()``. (The ``create_user()`` method is only "
"available on ``User.objects``, the manager, not on ``QuerySet`` objects "
"derived from the manager.) The solution is to use ``db_manager()``, like "
"this::"
msgstr ""
"Par exemple, admettons que vous ayez une méthode d'un gestionnaire "
"personnalisé agissant sur la base de données, ``User.objects."
"create_user()``. Comme ``create_user()`` est une méthode de gestionnaire, et "
"non une méthode de ``QuerySet``, il n'est pas possible d'écrire ``User."
"objects.using('new_users').create_user()`` (la méthode ``create_user()`` "
"n'est disponible que sur ``User.objects``, le gestionnaire, et non pas sur "
"les objets ``QuerySet`` dérivés du gestionnaire). La solution est d'utiliser "
"``db_manager()``, comme ceci ::"

msgid ""
"``db_manager()`` returns a copy of the manager bound to the database you "
"specify."
msgstr ""
"``db_manager()`` renvoie une copie du gestionnaire lié à la base de données "
"que vous indiquez."

msgid "Using ``get_queryset()`` with multiple databases"
msgstr "Utilisation de ``get_queryset()`` avec plusieurs bases de données"

msgid ""
"If you're overriding ``get_queryset()`` on your manager, be sure to either "
"call the method on the parent (using ``super()``) or do the appropriate "
"handling of the ``_db`` attribute on the manager (a string containing the "
"name of the database to use)."
msgstr ""
"Si vous surchargez ``get_queryset()`` dans votre gestionnaire, prenez soin "
"de soit appeler la méthode du parent (en utilisant ``super()``)  ou soit de "
"gérer de manière appropriée l'attribut ``_db`` du gestionnaire (une chaîne "
"contenant le nom de la base de données à utiliser)."

msgid ""
"For example, if you want to return a custom ``QuerySet`` class from the "
"``get_queryset`` method, you could do this::"
msgstr ""
"Par exemple, si vous souhaitiez renvoyer une classe ``QuerySet`` "
"personnalisée à partir de la méthode ``get_queryset``, vous pourriez faire "
"ceci ::"

msgid "Exposing multiple databases in Django's admin interface"
msgstr ""
"Exposition de plusieurs bases de données dans l'interface d'administration"

msgid ""
"Django's admin doesn't have any explicit support for multiple databases. If "
"you want to provide an admin interface for a model on a database other than "
"that specified by your router chain, you'll need to write custom :class:"
"`~django.contrib.admin.ModelAdmin` classes that will direct the admin to use "
"a specific database for content."
msgstr ""
"L'interface d'administration de Django ne contient pas de prise en charge "
"explicite de plusieurs bases de données. Si vous souhaitez mettre à "
"disposition une interface d'administration pour un modèle sur une autre base "
"de données que celle indiquée par votre chaîne de routage, il vous faudra "
"écrire des classes :class:`~django.contrib.admin.ModelAdmin` personnalisées "
"qui vont piloter l'administration vers l'utilisation d'une base de données "
"spécifique pour le contenu."

msgid ""
"``ModelAdmin`` objects have the following methods that require customization "
"for multiple-database support::"
msgstr ""
"Les objets ``ModelAdmin`` possèdent les méthodes suivantes qui nécessitent "
"une adaptation pour la prise en charge de plusieurs bases de données ::"

msgid ""
"The implementation provided here implements a multi-database strategy where "
"all objects of a given type are stored on a specific database (e.g., all "
"``User`` objects are in the ``other`` database). If your usage of multiple "
"databases is more complex, your ``ModelAdmin`` will need to reflect that "
"strategy."
msgstr ""
"L'exemple présenté ci-dessus implémente une stratégie basée sur plusieurs "
"bases de données où tous les objets d'un type donné sont stockés dans une "
"base de données spécifique (par ex. tous les objets ``User`` se trouvent "
"dans la base de données ``other``). Si votre utilisation de plusieurs bases "
"de données est plus complexe, votre classe ``ModelAdmin`` devra refléter "
"cette stratégie."

msgid ""
":class:`~django.contrib.admin.InlineModelAdmin` objects can be handled in a "
"similar fashion. They require three customized methods::"
msgstr ""
"Les objets :class:`~django.contrib.admin.InlineModelAdmin` peuvent être "
"gérés d'une manière similaire. Ils nécessitent trois méthodes "
"personnalisées ::"

msgid ""
"Once you've written your model admin definitions, they can be registered "
"with any ``Admin`` instance::"
msgstr ""
"Après avoir écrit les définitions des classes d'administration des modèles, "
"celles-ci peuvent être inscrites dans n'importe quelle instance ``Admin``::"

msgid ""
"This example sets up two admin sites. On the first site, the ``Author`` and "
"``Publisher`` objects are exposed; ``Publisher`` objects have a tabular "
"inline showing books published by that publisher. The second site exposes "
"just publishers, without the inlines."
msgstr ""
"Cet exemple configure deux sites d'administration. Dans le premier site, les "
"objets ``Author`` et ``Publisher`` sont exposés ; les objets ``Publisher`` "
"possèdent un sous-formulaire tabulaire affichant les livres publiés par cet "
"éditeur. Le second site n'expose que les éditeurs, sans sous-formulaire."

msgid "Using raw cursors with multiple databases"
msgstr "Utilisation directe de curseurs avec plusieurs bases de données"

msgid ""
"If you are using more than one database you can use ``django.db."
"connections`` to obtain the connection (and cursor) for a specific database. "
"``django.db.connections`` is a dictionary-like object that allows you to "
"retrieve a specific connection using its alias::"
msgstr ""
"Si vous utilisez plus d'une base de données, vous pouvez utiliser ``django."
"db.connections`` pour obtenir la connexion (et le curseur) d'une base de "
"données spécifique. ``django.db.connections`` est un objet de type "
"dictionnaire permettant d'obtenir une connexion particulière au moyen de son "
"alias ::"

msgid "Limitations of multiple databases"
msgstr "Limites des bases de données multiples"

msgid "Cross-database relations"
msgstr "Relations croisées entre bases de données"

msgid ""
"Django doesn't currently provide any support for foreign key or many-to-many "
"relationships spanning multiple databases. If you have used a router to "
"partition models to different databases, any foreign key and many-to-many "
"relationships defined by those models must be internal to a single database."
msgstr ""
"Django n'offre actuellement aucune prise en charge des clés étrangères ou "
"des relations plusieurs-à-plusieurs entre différentes bases de données. Si "
"vous avez utilisé un routeur pour distribuer les modèles entre différentes "
"bases de données, toute relation de clé étrangère ou plusieurs-à-plusieurs "
"définie par ces modèles doit être interne à une seule base de données."

msgid ""
"This is because of referential integrity. In order to maintain a "
"relationship between two objects, Django needs to know that the primary key "
"of the related object is valid. If the primary key is stored on a separate "
"database, it's not possible to easily evaluate the validity of a primary key."
msgstr ""
"L'intégrité référentielle en est la cause. Afin de maintenir une relation "
"entre deux objets, Django a besoin de savoir que la clé primaire de l'objet "
"lié est valide. Si la clé primaire est stockée dans une autre base de "
"données, il n'est pas possible d'évaluer de manière simple la validité de la "
"clé primaire."

msgid ""
"If you're using Postgres, SQLite, Oracle, or MySQL with InnoDB, this is "
"enforced at the database integrity level -- database level key constraints "
"prevent the creation of relations that can't be validated."
msgstr ""
"Si vous utilisez Postgres, SQLite, Oracle ou MySQL avec InnoDB, cette "
"garantie d'intégrité est assurée au niveau de la base de données, les "
"contraintes de clés au niveau de la base de données empêchant la création de "
"relations qui ne peuvent pas être validées."

msgid ""
"However, if you're using MySQL with MyISAM tables, there is no enforced "
"referential integrity; as a result, you may be able to 'fake' cross database "
"foreign keys. However, this configuration is not officially supported by "
"Django."
msgstr ""
"Cependant, si vous utilisez MySQL avec des tables MyISAM, il n'y a pas "
"d'intégrité référentielle ; par conséquent, il est possible de créer des "
"clés étrangères « simulées » entre bases de données. Toutefois, cette "
"configuration n'est pas prise en charge officiellement par Django."

msgid "Behavior of contrib apps"
msgstr "Comportement des applications contribuées"

msgid ""
"Several contrib apps include models, and some apps depend on others. Since "
"cross-database relationships are impossible, this creates some restrictions "
"on how you can split these models across databases:"
msgstr ""
"Plusieurs applications contribuées contiennent des modèles, et certaines "
"applications ont des dépendances. Comme les relations croisées entre bases "
"de données sont impossibles, il en résulte certaines restrictions sur la "
"façon dont ces modèles peuvent être partagés entre différentes bases de "
"données :"

msgid ""
"each one of ``contenttypes.ContentType``, ``sessions.Session`` and ``sites."
"Site`` can be stored in any database, given a suitable router."
msgstr ""
"Les modèles ``contenttypes.ContentType``, ``sessions.Session`` et ``sites."
"Site`` peuvent être indépendamment stockés dans n'importe quelle base de "
"données, pour autant qu'un routeur adéquat soit utilisé."

msgid ""
"``auth`` models — ``User``, ``Group`` and ``Permission`` — are linked "
"together and linked to ``ContentType``, so they must be stored in the same "
"database as ``ContentType``."
msgstr ""
"Les modèles ``auth`` (``User``, ``Group`` et ``Permission``) sont liés les "
"uns aux autres et à ``ContentType``, ils doivent donc être stockés dans la "
"même base de données que ``ContentType``."

msgid ""
"``admin`` depends on ``auth``, so its models must be in the same database as "
"``auth``."
msgstr ""
"``admin`` dépend de ``auth``, donc ses modèles doivent se trouver dans la "
"même base de données que ``auth``."

msgid ""
"``flatpages`` and ``redirects`` depend on ``sites``, so their models must be "
"in the same database as ``sites``."
msgstr ""
"``flatpages`` et ``redirects`` dépendent de ``sites``, donc leurs modèles "
"doivent être dans la même base de données que ``sites``."

msgid ""
"In addition, some objects are automatically created just after :djadmin:"
"`migrate` creates a table to hold them in a database:"
msgstr ""
"De plus, certains objets sont automatiquement créés juste après que :djadmin:"
"`migrate` crée la table pour les stocker en base de données :"

msgid "a default ``Site``,"
msgstr "un ``Site`` par défaut,"

msgid ""
"a ``ContentType`` for each model (including those not stored in that "
"database),"
msgstr ""
"un ``ContentType`` pour chaque modèle (y compris ceux qui ne sont pas "
"stockés en base de données),"

msgid ""
"the ``Permission``\\s for each model (including those not stored in that "
"database)."
msgstr ""
"les ``Permission`` pour chaque modèle (y compris ceux qui ne sont pas "
"stockés en base de données)."

msgid ""
"For common setups with multiple databases, it isn't useful to have these "
"objects in more than one database. Common setups include primary/replica and "
"connecting to external databases. Therefore, it's recommended to write a :"
"ref:`database router<topics-db-multi-db-routing>` that allows synchronizing "
"these three models to only one database. Use the same approach for contrib "
"and third-party apps that don't need their tables in multiple databases."
msgstr ""
"Pour des configurations courantes avec plusieurs bases de données, il n'est "
"pas utile de disposer de ces objets dans plus d'une base de données. Ces "
"configurations courantes incluent les configurations maître-esclave et la "
"connexion à des bases de données externes. Il est donc recommandé d'écrire "
"un :ref:`routeur de base de données <topics-db-multi-db-routing>` autorisant "
"la synchronisation de ces trois modèles vers une seule base de données. "
"Utilisez la même approche pour les autres applications contribuées ou de "
"tierce partie dont les tables n'ont pas besoin de se trouver dans plusieurs "
"bases de données."

msgid ""
"If you're synchronizing content types to more than one database, be aware "
"that their primary keys may not match across databases. This may result in "
"data corruption or data loss."
msgstr ""
"Si vous synchronisez les types de contenus dans plus d'une base de données, "
"soyez conscient que leur clés primaires peuvent différer d'une base de "
"données à l'autre. Cela peut aboutir à des corruptions ou des pertes de "
"données."

msgid "Database access optimization"
msgstr "Optimisation de l'accès à la base de données"

msgid ""
"Django's database layer provides various ways to help developers get the "
"most out of their databases. This document gathers together links to the "
"relevant documentation, and adds various tips, organized under a number of "
"headings that outline the steps to take when attempting to optimize your "
"database usage."
msgstr ""
"La couche de base de données de Django fournit plusieurs manières d'aider "
"les développeurs à tirer le meilleur de leurs bases de données. Ce document "
"rassemble des liens vers la documentation adéquate et ajoute quelques "
"astuces, réparties dans plusieurs chapitres respectant la chronologie des "
"étapes à suivre lorsqu'on souhaite optimiser l'utilisation de la base de "
"données."

msgid "Profile first"
msgstr "Priorité au profilage"

msgid ""
"As general programming practice, this goes without saying. Find out :ref:"
"`what queries you are doing and what they are costing you <faq-see-raw-sql-"
"queries>`. Use :meth:`.QuerySet.explain` to understand how specific "
"``QuerySet``\\s are executed by your database. You may also want to use an "
"external project like :pypi:`django-debug-toolbar`, or a tool that monitors "
"your database directly."
msgstr ""
"Comme principe de programmation générale, cela va sans dire. Recherchez :ref:"
"`quelles sont les requêtes effectuées et ce qu'elles coûtent <faq-see-raw-"
"sql-queries>`. Utilisez :meth:`.QuerySet.explain` pour comprendre comment "
"les requêtes ``QuerySet`` sont exécutées par la base de données. Il est "
"aussi possible d'utiliser un projet externe comme :pypi:`django-debug-"
"toolbar` ou un outil qui surveille directement la base de données."

msgid ""
"Remember that you may be optimizing for speed or memory or both, depending "
"on your requirements. Sometimes optimizing for one will be detrimental to "
"the other, but sometimes they will help each other. Also, work that is done "
"by the database process might not have the same cost (to you) as the same "
"amount of work done in your Python process. It is up to you to decide what "
"your priorities are, where the balance must lie, and profile all of these as "
"required since this will depend on your application and server."
msgstr ""
"Rappelez-vous que l'on peut optimiser pour la rapidité, pour la mémoire ou "
"pour les deux, en fonction des besoins. Parfois, l'optimisation d'un côté va "
"péjorer la situation de l'autre, mais dans d'autres cas, les deux vont en "
"profiter ensemble. De plus, le travail effectué par le processus de la base "
"de données n'a pas toujours le même coût (pour vous) que le même travail "
"effectué dans le processus Python. C'est à vous de décider des priorités, de "
"pondérer avantages et inconvénients et de profiler tout cela selon les "
"besoins car tout dépend de votre application et du serveur."

msgid ""
"With everything that follows, remember to profile after every change to "
"ensure that the change is a benefit, and a big enough benefit given the "
"decrease in readability of your code. **All** of the suggestions below come "
"with the caveat that in your circumstances the general principle might not "
"apply, or might even be reversed."
msgstr ""
"Avec tout ce qui suit, n'oubliez pas de profiler après chaque modification "
"pour vous assurer que celle-ci est bénéfique et que le bénéfice est "
"suffisant pour compenser la perte de lisibilité du code. Pour **toutes** les "
"suggestions ci-dessous, il faut tenir compte du risque que le principe "
"général ne s'applique pas dans votre cas de figure, ou que l'effet soit même "
"inversé."

msgid "Use standard DB optimization techniques"
msgstr "Techniques standards d'optimisation de base de données"

msgid "...including:"
msgstr "Ceci comprend :"

msgid ""
"Indexes_. This is a number one priority, *after* you have determined from "
"profiling what indexes should be added. Use :attr:`Meta.indexes <django.db."
"models.Options.indexes>` or :attr:`Field.db_index <django.db.models.Field."
"db_index>` to add these from Django. Consider adding indexes to fields that "
"you frequently query using :meth:`~django.db.models.query.QuerySet."
"filter()`, :meth:`~django.db.models.query.QuerySet.exclude()`, :meth:"
"`~django.db.models.query.QuerySet.order_by()`, etc. as indexes may help to "
"speed up lookups. Note that determining the best indexes is a complex "
"database-dependent topic that will depend on your particular application. "
"The overhead of maintaining an index may outweigh any gains in query speed."
msgstr ""
"Des index_. C'est la priorité n°1, *après* avoir déterminé par analyse de "
"performance quels sont les index nécessaires. Utilisez :attr:`Meta.indexes "
"<django.db.models.Options.indexes>` ou :attr:`Field.db_index <django.db."
"models.Field.db_index>` pour en ajouter à partir de Django. Envisagez "
"l'utilisation d'index aux champs que vous interrogez fréquemment avec :meth:"
"`~django.db.models.query.QuerySet.filter()`, :meth:`~django.db.models.query."
"QuerySet.exclude()`, :meth:`~django.db.models.query.QuerySet.order_by()`, "
"etc. car les index peuvent aider à accélérer les requêtes. Notez que la "
"recherche des meilleurs index est un thème complexe et dépendant du moteur "
"de base de données, également dépendant de l'application à construire. La "
"charge induite par la maintenance d'un index peut anéantir les gains en "
"terme de vitesse de requête."

msgid "Appropriate use of field types."
msgstr "Utilisation appropriée des types de champs."

msgid ""
"We will assume you have done the things listed above. The rest of this "
"document focuses on how to use Django in such a way that you are not doing "
"unnecessary work. This document also does not address other optimization "
"techniques that apply to all expensive operations, such as :doc:`general "
"purpose caching </topics/cache>`."
msgstr ""
"Nous supposerons que vous avez effectué les opérations mentionnées ci-"
"dessus. La suite de ce document se concentre sur la façon d'utiliser Django "
"de telle manière à ne pas effectuer de travail inutile. Ce document n'aborde "
"cependant pas d'autres techniques d'optimisation qui s'appliquent à des "
"opérations lourdes, comme la :doc:`mise en cache à portée générale </topics/"
"cache>`."

msgid "Understand ``QuerySet``\\s"
msgstr "Compréhension des objets ``QuerySet``"

msgid ""
"Understanding :doc:`QuerySets </ref/models/querysets>` is vital to getting "
"good performance with simple code. In particular:"
msgstr ""
"La compréhension des :doc:`QuerySet </ref/models/querysets>` est capitale "
"pour obtenir de bonnes performances avec du code simple. En particulier :"

msgid "Understand ``QuerySet`` evaluation"
msgstr "Compréhension de l'évaluation du ``QuerySet``"

msgid "To avoid performance problems, it is important to understand:"
msgstr ""
"Pour éviter des problèmes de performance, il est important de comprendre :"

msgid "that :ref:`QuerySets are lazy <querysets-are-lazy>`."
msgstr "que les :ref:`QuerySet sont différés <querysets-are-lazy>`."

msgid "when :ref:`they are evaluated <when-querysets-are-evaluated>`."
msgstr "quand :ref:`ils sont évalués <when-querysets-are-evaluated>`."

msgid "how :ref:`the data is held in memory <caching-and-querysets>`."
msgstr ""
"comment :ref:`les données sont conservée en mémoire <caching-and-querysets>`."

msgid "Understand cached attributes"
msgstr "Compréhension des attributs mis en cache"

msgid ""
"As well as caching of the whole ``QuerySet``, there is caching of the result "
"of attributes on ORM objects. In general, attributes that are not callable "
"will be cached. For example, assuming the :ref:`example blog models "
"<queryset-model-example>`:"
msgstr ""
"Tout comme la mise en cache d'un ``QuerySet`` global, il y a mise en cache "
"du résultat des attributs dans les objets de l'ORM. En général, les "
"attributs qui ne sont pas exécutables seront mis en cache. Par exemple, à "
"partir des :ref:`modèles d'exemple du blog <queryset-model-example>`:"

msgid "But in general, callable attributes cause DB lookups every time:"
msgstr ""
"Mais généralement, les attributs exécutables provoquent des accès à la base "
"de données à chaque appel :"

msgid ""
"Be careful when reading template code - the template system does not allow "
"use of parentheses, but will call callables automatically, hiding the above "
"distinction."
msgstr ""
"Soyez prudent dans la lecture du code des gabarits, le système des gabarits "
"ne permet pas d'utiliser des parenthèses, mais les objets exécutables sont "
"appelés automatiquement, masquant la distinction ci-dessus."

msgid ""
"Be careful with your own custom properties - it is up to you to implement "
"caching when required, for example using the :class:`~django.utils."
"functional.cached_property` decorator."
msgstr ""
"Soyez prudent avec vos propres propriétés personnalisées, il vous revient "
"d'implémenter leur mise en cache au besoin, par exemple en utilisant le "
"décorateur :class:`~django.utils.functional.cached_property`."

msgid "Use the ``with`` template tag"
msgstr "Utilisation de la balise de gabarit ``with``"

msgid ""
"To make use of the caching behavior of ``QuerySet``, you may need to use "
"the :ttag:`with` template tag."
msgstr ""
"Pour faire usage du comportement de cache de ``QuerySet``, il peut être "
"nécessaire d'utiliser la balise de gabarit :ttag:`with`."

msgid "Use ``iterator()``"
msgstr "Utilisation de ``iterator()``"

msgid ""
"When you have a lot of objects, the caching behavior of the ``QuerySet`` can "
"cause a large amount of memory to be used. In this case, :meth:`~django.db."
"models.query.QuerySet.iterator()` may help."
msgstr ""
"Lorsque vous manipulez un grand nombre d'objets, le comportement de cache de "
"``QuerySet`` peut provoquer une grosse utilisation de la mémoire. Dans ce "
"cas, :meth:`~django.db.models.query.QuerySet.iterator()` peut aider."

msgid "Use ``explain()``"
msgstr "Utilisation de ``explain()``"

msgid ""
":meth:`.QuerySet.explain` gives you detailed information about how the "
"database executes a query, including indexes and joins that are used. These "
"details may help you find queries that could be rewritten more efficiently, "
"or identify indexes that could be added to improve performance."
msgstr ""
":meth:`.QuerySet.explain` apporte des informations détaillées sur la façon "
"dont la base de données exécute les requêtes, y compris les index et "
"jointures utilisées. Ces détails peuvent aider à trouver les requêtes qui "
"pourraient être réécrites plus efficacement ou à identifier des index qui "
"pourraient être ajoutés pour améliorer les performances."

msgid "Do database work in the database rather than in Python"
msgstr "Travail de base de données en base de données plutôt qu'en Python"

msgid "For instance:"
msgstr "Par exemple :"

msgid ""
"At the most basic level, use :ref:`filter and exclude <queryset-api>` to do "
"filtering in the database."
msgstr ""
"Au niveau le plus élémentaire, utilisez :ref:`filter et exclude <queryset-"
"api>` pour filtrer au niveau de la base de données."

msgid ""
"Use :class:`F expressions <django.db.models.F>` to filter based on other "
"fields within the same model."
msgstr ""
"Utilisez les :class:`expressions F <django.db.models.F>` pour filtrer en "
"rapport avec d'autres champs à l'intérieur du même modèle."

msgid ""
"Use :doc:`annotate to do aggregation in the database </topics/db/"
"aggregation>`."
msgstr ""
"Utilisez les :doc:`annotations pour effectuer le travail d'agrégation dans "
"la base de données </topics/db/aggregation>`."

msgid "If these aren't enough to generate the SQL you need:"
msgstr "Si ces outils ne suffisent pas à générer le code SQL nécessaire :"

msgid "Use ``RawSQL``"
msgstr "Utilisation de ``RawSQL``"

msgid ""
"A less portable but more powerful method is the :class:`~django.db.models."
"expressions.RawSQL` expression, which allows some SQL to be explicitly added "
"to the query. If that still isn't powerful enough:"
msgstr ""
"Une méthode moins portable mais plus puissante est d'utiliser l'expression :"
"class:`~django.db.models.expressions.RawSQL` qui permet d'ajouter "
"explicitement du code SQL dans une requête. Si cela ne suffit toujours pas :"

msgid "Use raw SQL"
msgstr "Utilisation de SQL brut"

msgid ""
"Write your own :doc:`custom SQL to retrieve data or populate models </topics/"
"db/sql>`. Use ``django.db.connection.queries`` to find out what Django is "
"writing for you and start from there."
msgstr ""
"Écrivez votre :doc:`propre code SQL pour sélectionner des données ou remplir "
"les modèles </topics/db/sql>`. Utilisez ``django.db.connection.queries`` "
"pour examiner ce que Django écrit pour vous et considérez cela comme un "
"point de départ."

msgid "Retrieve individual objects using a unique, indexed column"
msgstr ""
"Sélection d'objets individuels en utilisant une colonne unique et indexée"

msgid ""
"There are two reasons to use a column with :attr:`~django.db.models.Field."
"unique` or :attr:`~django.db.models.Field.db_index` when using :meth:"
"`~django.db.models.query.QuerySet.get` to retrieve individual objects. "
"First, the query will be quicker because of the underlying database index. "
"Also, the query could run much slower if multiple objects match the lookup; "
"having a unique constraint on the column guarantees this will never happen."
msgstr ""
"Il y a deux raisons d'utiliser une colonne avec :attr:`~django.db.models."
"Field.unique` ou :attr:`~django.db.models.Field.db_index` lorsqu'on utilise :"
"meth:`~django.db.models.query.QuerySet.get` pour récupérer des objets "
"individuels. Premièrement, la requête sera plus rapide en raison de l'index "
"de base de données. De plus, la requête pourrait s'effectuer beaucoup plus "
"lentement si plusieurs objets correspondent à la recherche ; avec une "
"contrainte d'unicité sur la colonne, vous avez la garantie que cela ne se "
"produira jamais."

msgid "So using the :ref:`example blog models <queryset-model-example>`:"
msgstr ""
"Ainsi, en se basant sur les :ref:`modèles d'exemple du blog <queryset-model-"
"example>`:"

msgid "will be quicker than:"
msgstr "sera plus rapide que :"

msgid ""
"because ``id`` is indexed by the database and is guaranteed to be unique."
msgstr ""
"parce qu'``id`` est indexé dans la base de données et que son unicité est "
"garantie."

msgid "Doing the following is potentially quite slow:"
msgstr "La ligne suivante est potentiellement très lente :"

msgid ""
"First of all, ``headline`` is not indexed, which will make the underlying "
"database fetch slower."
msgstr ""
"Tout d'abord, ``headline`` n'est pas indexé, ce qui fait que la base de "
"données sous-jacente prendra plus de temps pour trouver la ligne."

msgid ""
"Second, the lookup doesn't guarantee that only one object will be returned. "
"If the query matches more than one object, it will retrieve and transfer all "
"of them from the database. This penalty could be substantial if hundreds or "
"thousands of records are returned. The penalty will be compounded if the "
"database lives on a separate server, where network overhead and latency also "
"play a factor."
msgstr ""
"Deuxièmement, cette recherche ne garantit pas qu'un seul objet sera renvoyé. "
"Si la requête correspond à plus d'un objet, elle va tous les sélectionner et "
"les transférer depuis la base de données. Cette pénalité peut être "
"conséquente si des centaines ou des milliers d'enregistrements sont "
"renvoyés. Ce d'autant plus si la base de données est située sur un autre "
"serveur, là où la latence et le surcoût de la liaison réseau jouent aussi un "
"rôle."

msgid "Retrieve everything at once if you know you will need it"
msgstr "Tout récupérer d'un coup quand on en connaît le besoin"

msgid ""
"Hitting the database multiple times for different parts of a single 'set' of "
"data that you will need all parts of is, in general, less efficient than "
"retrieving it all in one query. This is particularly important if you have a "
"query that is executed in a loop, and could therefore end up doing many "
"database queries, when only one was needed. So:"
msgstr ""
"Il est en général moins efficace de solliciter la base de données plusieurs "
"fois pour différentes parties d'un ensemble de données que de tout récupérer "
"par une seule requête quand on sait à l'avance que l'on aura besoin du tout. "
"C'est particulièrement important lorsqu'une requête est exécutée dans une "
"boucle et risque au final d'effectuer plusieurs requêtes en base de données "
"alors qu'une seule n'est vraiment nécessaire. Ainsi :"

msgid "Use ``QuerySet.select_related()`` and ``prefetch_related()``"
msgstr "Utilisation de ``QuerySet.select_related()`` et ``prefetch_related()``"

msgid ""
"Understand :meth:`~django.db.models.query.QuerySet.select_related` and :meth:"
"`~django.db.models.query.QuerySet.prefetch_related` thoroughly, and use them:"
msgstr ""
"Il faut bien comprendre :meth:`~django.db.models.query.QuerySet."
"select_related` et :meth:`~django.db.models.query.QuerySet.prefetch_related` "
"et les utiliser :"

msgid ""
"in :doc:`managers and default managers </topics/db/managers>` where "
"appropriate. Be aware when your manager is and is not used; sometimes this "
"is tricky so don't make assumptions."
msgstr ""
"dans les :doc:`gestionnaires (par défaut ou non) </topics/db/managers>` "
"lorsque cela fait sens. Ayez conscience des endroits où les gestionnaires "
"sont (ou ne sont pas) utilisés ; ce n'est pas toujours évident de le savoir, "
"ne faites donc pas de simples suppositions."

msgid ""
"in view code or other layers, possibly making use of :func:`~django.db."
"models.prefetch_related_objects` where needed."
msgstr ""
"dans du code de vues ou d'autres couches, en faisant potentiellement appel "
"à :func:`~django.db.models.prefetch_related_objects` lorsque c'est "
"nécessaire."

msgid "Don't retrieve things you don't need"
msgstr "Ne pas récupérer des éléments inutilement"

msgid "Use ``QuerySet.values()`` and ``values_list()``"
msgstr "Utilisation de ``QuerySet.values()`` et ``values_list()``"

msgid ""
"When you only want a ``dict`` or ``list`` of values, and don't need ORM "
"model objects, make appropriate usage of :meth:`~django.db.models.query."
"QuerySet.values()`. These can be useful for replacing model objects in "
"template code - as long as the dicts you supply have the same attributes as "
"those used in the template, you are fine."
msgstr ""
"Lorsque vous ne voulez qu'obtenir un dictionnaire ou une liste de valeurs "
"sans avoir besoin d'objets modèles de l'ORM, faites bon usage de :meth:"
"`~django.db.models.query.QuerySet.values()`. Cette méthode peut être utile "
"pour remplacer des objets modèles dans le code des gabarits ; tant que les "
"dictionnaires résultants possèdent les mêmes attributs que ceux qui sont "
"utilisés dans le gabarit, tout va bien."

msgid "Use ``QuerySet.defer()`` and ``only()``"
msgstr "Utilisation de ``QuerySet.defer()`` et ``only()``"

msgid ""
"Use :meth:`~django.db.models.query.QuerySet.defer()` and :meth:`~django.db."
"models.query.QuerySet.only()` if there are database columns you know that "
"you won't need (or won't need in most cases) to avoid loading them. Note "
"that if you *do* use them, the ORM will have to go and get them in a "
"separate query, making this a pessimization if you use it inappropriately."
msgstr ""
"Utilisez :meth:`~django.db.models.query.QuerySet.defer()` et :meth:`~django."
"db.models.query.QuerySet.only()` quand vous savez à l'avance que vous "
"n'aurez pas besoin de certaines colonnes de base de données (ou non utiles "
"dans la plupart des cas) afin d'éviter de les charger. Notez que si vous les "
"utilisez quand même, l'ORM devra les charger à l'aide d'une nouvelle "
"requête, ce qui peut potentiellement aggraver la situation quand cette "
"technique n'est pas utilisée à bon escient."

msgid ""
"Don't be too aggressive in deferring fields without profiling as the "
"database has to read most of the non-text, non-``VARCHAR`` data from the "
"disk for a single row in the results, even if it ends up only using a few "
"columns. The ``defer()`` and ``only()`` methods are most useful when you can "
"avoid loading a lot of text data or for fields that might take a lot of "
"processing to convert back to Python. As always, profile first, then "
"optimize."
msgstr ""
"N'utilisez pas trop agressivement les champs différés sans profilage car la "
"base de données doit lire sur le disque la plupart des données non "
"textuelles et non ``VARCHAR`` d'un enregistrement des résultats, même "
"lorsqu'elle finit par n'exploiter que quelques colonnes. Les méthodes "
"``defer()`` et ``only()`` sont particulièrement adéquates lorsqu'on peut "
"éviter de charger de grandes quantités de données textuelles ou quand la "
"valeur de certains champs est coûteuse en terme de conversion en Python. "
"Comme toujours, profilez d'abord, optimisez ensuite."

msgid "Use ``QuerySet.contains(obj)``"
msgstr "Utilisation de ``QuerySet.contains(obj)``"

msgid ""
"...if you only want to find out if ``obj`` is in the queryset, rather than "
"``if obj in queryset``."
msgstr ""
"…si vous voulez uniquement savoir si ``obj`` est présent dans le résultat de "
"requête, au lieu de ``if obj in queryset``."

msgid "Use ``QuerySet.count()``"
msgstr "Utilisation de ``QuerySet.count()``"

msgid "...if you only want the count, rather than doing ``len(queryset)``."
msgstr ""
"…si vous n'avez besoin que du nombre de lignes, et évitez ``len(queryset)``."

msgid "Use ``QuerySet.exists()``"
msgstr "Utilisation de ``QuerySet.exists()``"

msgid ""
"...if you only want to find out if at least one result exists, rather than "
"``if queryset``."
msgstr ""
"…si vous voulez uniquement savoir qu'il y a au moins un résultat, et évitez "
"``if queryset``."

msgid "But:"
msgstr "Mais :"

msgid "Don't overuse ``contains()``, ``count()``, and ``exists()``"
msgstr "Ne pas abuser de ``contains()``, ``count()`` et ``exists()``"

msgid ""
"If you are going to need other data from the QuerySet, evaluate it "
"immediately."
msgstr ""
"Si vous allez avoir besoin de données réelles du ``QuerySet``, évaluez-le "
"immédiatement."

msgid ""
"For example, assuming a ``Group`` model that has a many-to-many relation to "
"``User``, the following code is optimal::"
msgstr ""
"Par exemple, si on dispose d'un modèle ``Group`` ayant une relation "
"plusieurs-à-plusieurs vers ``User``, le code suivant est optimal :"

msgid "It is optimal because:"
msgstr "Il est optimal car :"

msgid ""
"Since QuerySets are lazy, this does no database queries if "
"``display_group_members`` is ``False``."
msgstr ""
"Comme les objets QuerySet sont différés, aucune requête de base de données "
"n'est exécutée si ``display_group_members`` vaut ``False``."

msgid ""
"Storing ``group.members.all()`` in the ``members`` variable allows its "
"result cache to be reused."
msgstr ""
"Le stockage de ``group.members.all()`` dans la variable ``members`` permet "
"de réutiliser son résultat mis en cache."

msgid ""
"The line ``if members:`` causes ``QuerySet.__bool__()`` to be called, which "
"causes the ``group.members.all()`` query to be run on the database. If there "
"aren't any results, it will return ``False``, otherwise ``True``."
msgstr ""
"La ligne ``if members:`` provoque l'appel à ``QuerySet.__bool__()``, ce qui "
"provoque aussi l'exécution de la requête ``group.members.all()`` dans la "
"base de données. S'il n'y a pas de résultats, elle renvoie ``False``, sinon "
"``True``."

msgid ""
"The line ``if current_user in members:`` checks if the user is in the result "
"cache, so no additional database queries are issued."
msgstr ""
"La ligne ``if current_user in members:`` vérifie si l'utilisateur est dans "
"le cache de résultats, donc aucune requête de base de données supplémentaire "
"n'est effectuée."

msgid ""
"The use of ``len(members)`` calls ``QuerySet.__len__()``, reusing the result "
"cache, so again, no database queries are issued."
msgstr ""
"L'emploi de ``len(members)`` appelle ``QuerySet.__len__()``, réutilisant le "
"résultat mis en cache, donc toujours sans requête supplémentaire vers la "
"base de données."

msgid "The ``for member`` loop iterates over the result cache."
msgstr "La boucle ``for member`` utilise les données du cache."

msgid ""
"In total, this code does either one or zero database queries. The only "
"deliberate optimization performed is using the ``members`` variable. Using "
"``QuerySet.exists()`` for the ``if``, ``QuerySet.contains()`` for the "
"``in``, or ``QuerySet.count()`` for the count would each cause additional "
"queries."
msgstr ""
"Au total, le code effectue une ou zéro requête de base de données. La seule "
"optimisation explicite effectuée est l'emploi de la variable ``members``. Si "
"on avait utilisé ``QuerySet.exists()`` pour le ``if``, ``QuerySet."
"contains()`` pour le ``in`` ou ``QuerySet.count()`` pour le nombre total, "
"cela aurait généré à chaque fois des requêtes supplémentaires."

msgid "Use ``QuerySet.update()`` and ``delete()``"
msgstr "Utilisation de ``QuerySet.update()`` et ``delete()``"

msgid ""
"Rather than retrieve a load of objects, set some values, and save them "
"individual, use a bulk SQL UPDATE statement, via :ref:`QuerySet.update() "
"<topics-db-queries-update>`. Similarly, do :ref:`bulk deletes <topics-db-"
"queries-delete>` where possible."
msgstr ""
"Plutôt que de récupérer un ensemble d'objets, de définir certaines valeurs "
"et de les enregistrer individuellement, utilisez une instruction SQL UPDATE "
"groupée au moyen de :ref:`QuerySet.update() <topics-db-queries-update>`. De "
"la même façon, effectuez des :ref:`suppressions groupées <topics-db-queries-"
"delete>` chaque fois que c'est possible."

msgid ""
"Note, however, that these bulk update methods cannot call the ``save()`` or "
"``delete()`` methods of individual instances, which means that any custom "
"behavior you have added for these methods will not be executed, including "
"anything driven from the normal database object :doc:`signals </ref/"
"signals>`."
msgstr ""
"Notez cependant que des méthodes de mise à jour groupées ne peuvent pas "
"appeler les méthodes ``save()`` et ``delete()`` des instances individuelles, "
"ce qui signifie que tout comportement spécialisé que vous auriez ajouté avec "
"ces méthodes ne sera pas exécuté, y compris tout ce qui découle de "
"l'utilisation des :doc:`signaux </ref/signals>` attachés aux objets de base "
"de données."

msgid "Use foreign key values directly"
msgstr "Utilisation directe de valeurs de clé étrangère"

msgid ""
"If you only need a foreign key value, use the foreign key value that is "
"already on the object you've got, rather than getting the whole related "
"object and taking its primary key. i.e. do::"
msgstr ""
"Si vous n'avez besoin que de la valeur d'une clé étrangère, utilisez la "
"valeur qui est déjà stockée dans l'objet que vous manipulez, plutôt que de "
"récupérer tout l'objet lié pour simplement disposer de sa clé primaire. Par "
"exemple, faites ::"

msgid "instead of::"
msgstr "au lieu de ::"

msgid "Don't order results if you don't care"
msgstr "Ne pas trier les résultats sans raison"

msgid ""
"Ordering is not free; each field to order by is an operation the database "
"must perform. If a model has a default ordering (:attr:`Meta.ordering "
"<django.db.models.Options.ordering>`) and you don't need it, remove it on a "
"``QuerySet`` by calling :meth:`~django.db.models.query.QuerySet.order_by()` "
"with no parameters."
msgstr ""
"Le tri n'est pas gratuit ; chaque champ de tri est une opération que la base "
"de données doit effectuer. Si un modèle possède un ordre de tri par défaut (:"
"attr:`Meta.ordering <django.db.models.Options.ordering>`) et que vous n'en "
"avez pas besoin, vous pouvez l'enlever sur un ``QuerySet`` en appelant :meth:"
"`~django.db.models.query.QuerySet.order_by()` sans paramètre."

msgid ""
"Adding an index to your database may help to improve ordering performance."
msgstr ""
"L'ajout d'un index à votre base de données peut aider à améliorer les "
"performances de tri."

msgid "Use bulk methods"
msgstr "Utiliser les méthodes d'opérations groupées"

msgid "Use bulk methods to reduce the number of SQL statements."
msgstr ""
"Faites usage des méthodes groupées (``bulk``) pour réduire le nombre "
"d'instructions SQL."

msgid "Create in bulk"
msgstr "Création groupée"

msgid ""
"When creating objects, where possible, use the :meth:`~django.db.models."
"query.QuerySet.bulk_create()` method to reduce the number of SQL queries. "
"For example::"
msgstr ""
"Lors de la création d'objets, utilisez si possible la méthode :meth:`~django."
"db.models.query.QuerySet.bulk_create()` pour réduire le nombre de requêtes "
"SQL. Par exemple ::"

msgid "...is preferable to::"
msgstr "…est préférable à ::"

msgid ""
"Note that there are a number of :meth:`caveats to this method <django.db."
"models.query.QuerySet.bulk_create>`, so make sure it's appropriate for your "
"use case."
msgstr ""
"Notez qu'il existe un certain nombre de :meth:`restrictions à cette méthode "
"<django.db.models.query.QuerySet.bulk_create>`, il s'agit donc de s'assurer "
"qu'elle correspond à votre cas d'utilisation."

msgid "Update in bulk"
msgstr "Mise à jour groupée"

msgid ""
"When updating objects, where possible, use the :meth:`~django.db.models."
"query.QuerySet.bulk_update()` method to reduce the number of SQL queries. "
"Given a list or queryset of objects::"
msgstr ""
"Lors de la mise à jour d'objets, utilisez si possible la méthode :meth:"
"`~django.db.models.query.QuerySet.bulk_update()` pour réduire le nombre de "
"requêtes SQL. Étant donné une liste ou un résultat de requête d'objets ::"

msgid "The following example::"
msgstr "L'exemple suivant ::"

msgid ""
"Note that there are a number of :meth:`caveats to this method <django.db."
"models.query.QuerySet.bulk_update>`, so make sure it's appropriate for your "
"use case."
msgstr ""
"Notez qu'il existe un certain nombre de :meth:`restrictions à cette méthode "
"<django.db.models.query.QuerySet.bulk_update>`, il s'agit donc de s'assurer "
"qu'elle correspond à votre cas d'utilisation."

msgid "Insert in bulk"
msgstr "Insertion groupée"

msgid ""
"When inserting objects into :class:`ManyToManyFields <django.db.models."
"ManyToManyField>`, use :meth:`~django.db.models.fields.related."
"RelatedManager.add` with multiple objects to reduce the number of SQL "
"queries. For example::"
msgstr ""
"Lors de l'insertion d'objets dans des champs :class:`ManyToManyField <django."
"db.models.ManyToManyField>`, utilisez :meth:`~django.db.models.fields."
"related.RelatedManager.add` avec plusieurs objets pour réduire le nombre de "
"requêtes SQL. Par exemple ::"

msgid "...where ``Bands`` and ``Artists`` have a many-to-many relationship."
msgstr ""
"…où ``Bands`` et ``Artists`` sont liés par une relation plusieurs-à-"
"plusieurs."

msgid ""
"When inserting different pairs of objects into :class:`~django.db.models."
"ManyToManyField` or when the custom :attr:`~django.db.models.ManyToManyField."
"through` table is defined, use :meth:`~django.db.models.query.QuerySet."
"bulk_create()` method to reduce the number of SQL queries. For example::"
msgstr ""
"Lors de l'insertion de plusieurs paires d'objets dans des champs :class:"
"`~django.db.models.ManyToManyField` ou lorsque la table personnalisée :attr:"
"`~django.db.models.ManyToManyField.through` est définie, utilisez la "
"méthode :meth:`~django.db.models.query.QuerySet.bulk_create()` pour réduire "
"le nombre de requêtes SQL. Par exemple ::"

msgid ""
"...where ``Pizza`` and ``Topping`` have a many-to-many relationship. Note "
"that there are a number of :meth:`caveats to this method <django.db.models."
"query.QuerySet.bulk_create>`, so make sure it's appropriate for your use "
"case."
msgstr ""
"…où ``Pizza`` et ``Topping`` ont une relation plusieurs-à-plusieurs. Notez "
"qu'il existe un certain nombre de :meth:`restrictions à cette méthode "
"<django.db.models.query.QuerySet.bulk_create>`, il s'agit donc de s'assurer "
"qu'elle correspond à votre cas d'utilisation."

msgid "Remove in bulk"
msgstr "Suppression groupée"

msgid ""
"When removing objects from :class:`ManyToManyFields <django.db.models."
"ManyToManyField>`, use :meth:`~django.db.models.fields.related."
"RelatedManager.remove` with multiple objects to reduce the number of SQL "
"queries. For example::"
msgstr ""
"Lors de la suppression d'objets de champs :class:`ManyToManyField <django.db."
"models.ManyToManyField>`, utilisez :meth:`~django.db.models.fields.related."
"RelatedManager.remove` avec plusieurs objets pour réduire le nombre de "
"requêtes SQL. Par exemple ::"

msgid ""
"When removing different pairs of objects from :class:`ManyToManyFields "
"<django.db.models.ManyToManyField>`, use :meth:`~django.db.models.query."
"QuerySet.delete` on a :class:`~django.db.models.Q` expression with multiple :"
"attr:`~django.db.models.ManyToManyField.through`  model instances to reduce "
"the number of SQL queries. For example::"
msgstr ""
"Lors de la suppression de plusieurs paires d'objets de champs :class:"
"`ManyToManyField <django.db.models.ManyToManyField>`, utilisez :meth:"
"`~django.db.models.query.QuerySet.delete` sur une expression :class:`~django."
"db.models.Q` avec plusieurs instances de modèle :attr:`~django.db.models."
"ManyToManyField.through` pour réduire le nombre de requêtes SQL. Par "
"exemple ::"

msgid "...where ``Pizza`` and ``Topping`` have a many-to-many relationship."
msgstr ""
"…où ``Pizza`` et ``Topping`` sont liés par une relation plusieurs-à-"
"plusieurs."

msgid "Making queries"
msgstr "Création de requêtes"

msgid ""
"Once you've created your :doc:`data models </topics/db/models>`, Django "
"automatically gives you a database-abstraction API that lets you create, "
"retrieve, update and delete objects. This document explains how to use this "
"API. Refer to the :doc:`data model reference </ref/models/index>` for full "
"details of all the various model lookup options."
msgstr ""
"Une fois les :doc:`modèles de données </topics/db/models>` créés, Django "
"offre automatiquement une API d'abstraction de base de données qui permet de "
"créer, obtenir, mettre à jour et supprimer des objets. Ce document explique "
"comment utiliser cette API. Consultez la :doc:`référence des modèles de "
"données </ref/models/index>` pour des détails complets sur toutes les "
"options d'interrogation des modèles."

msgid ""
"Throughout this guide (and in the reference), we'll refer to the following "
"models, which comprise a blog application:"
msgstr ""
"À travers ce guide (et dans la référence), nous nous référons aux modèles "
"suivants, qui forment une application de blog :"

msgid "Creating objects"
msgstr "Création d'objets"

msgid ""
"To represent database-table data in Python objects, Django uses an intuitive "
"system: A model class represents a database table, and an instance of that "
"class represents a particular record in the database table."
msgstr ""
"Pour représenter des données d'une table de base de données en objets "
"Python, Django utilise un système intuitif : une classe de modèle représente "
"une table de base de données, et une instance de cette classe représente un "
"enregistrement particulier dans la table de base de données."

msgid ""
"To create an object, instantiate it using keyword arguments to the model "
"class, then call :meth:`~django.db.models.Model.save` to save it to the "
"database."
msgstr ""
"Pour créer un objet, créez une instance de la classe de modèle en utilisant "
"des paramètres nommés, puis appelez :meth:`~django.db.models.Model.save` "
"pour l'enregistrer dans la base de données."

msgid ""
"Assuming models live in a file ``mysite/blog/models.py``, here's an example:"
msgstr ""
"En supposant que les modèles se trouvent dans un fichier ``mysite/blog/"
"models.py``, voici un exemple :"

msgid ""
"This performs an ``INSERT`` SQL statement behind the scenes. Django doesn't "
"hit the database until you explicitly call :meth:`~django.db.models.Model."
"save`."
msgstr ""
"Ceci exécute une commande SQL ``INSERT`` en arrière-plan. Django ne "
"sollicite pas la base de données tant que vous n'appelez pas explicitement :"
"meth:`~django.db.models.Model.save`."

msgid "The :meth:`~django.db.models.Model.save` method has no return value."
msgstr ""
"La méthode :meth:`~django.db.models.Model.save` ne renvoie aucune valeur."

msgid ""
":meth:`~django.db.models.Model.save` takes a number of advanced options not "
"described here. See the documentation for :meth:`~django.db.models.Model."
"save` for complete details."
msgstr ""
":meth:`~django.db.models.Model.save` accepte un certain nombre d'options "
"avancées décrites ailleurs. Consultez la documentation de :meth:`~django.db."
"models.Model.save` pour les détails complets."

msgid ""
"To create and save an object in a single step, use the :meth:`~django.db."
"models.query.QuerySet.create()` method."
msgstr ""
"Pour créer et enregistrer un objet en une seule étape, utilisez la méthode :"
"meth:`~django.db.models.query.QuerySet.create()`."

msgid "Saving changes to objects"
msgstr "Enregistrement des modifications d'objets"

msgid ""
"To save changes to an object that's already in the database, use :meth:"
"`~django.db.models.Model.save`."
msgstr ""
"Pour enregistrer les modifications d'un objet existant dans la base de "
"données, utilisez :meth:`~django.db.models.Model.save`."

msgid ""
"Given a ``Blog`` instance ``b5`` that has already been saved to the "
"database, this example changes its name and updates its record in the "
"database:"
msgstr ""
"Considérant une instance ``b5`` d'un ``Blog`` ayant déjà été enregistrée "
"dans la base de données, cet exemple modifie son nom et met à jour son "
"enregistrement dans la base de données :"

msgid ""
"This performs an ``UPDATE`` SQL statement behind the scenes. Django doesn't "
"hit the database until you explicitly call :meth:`~django.db.models.Model."
"save`."
msgstr ""
"Ceci génère une commande SQL ``UPDATE`` en arrière-plan. Django ne sollicite "
"pas la base de données tant que vous n'appelez pas explicitement :meth:"
"`~django.db.models.Model.save`."

msgid "Saving ``ForeignKey`` and ``ManyToManyField`` fields"
msgstr "Enregistrement des champs ``ForeignKey`` et ``ManyToManyField``"

msgid ""
"Updating a :class:`~django.db.models.ForeignKey` field works exactly the "
"same way as saving a normal field -- assign an object of the right type to "
"the field in question. This example updates the ``blog`` attribute of an "
"``Entry`` instance ``entry``, assuming appropriate instances of ``Entry`` "
"and ``Blog`` are already saved to the database (so we can retrieve them "
"below):"
msgstr ""
"La mise à jour d'un champ :class:`~django.db.models.ForeignKey` fonctionne "
"exactement de la même façon que l'enregistrement d'un champ normal, "
"attribuez un objet du bon type au champ en question. Cet exemple met à jour "
"l'attribut ``blog`` d'une instance ``Entry`` nommée ``entry``, en supposant "
"que les instances appropriées de ``Entry`` et de ``Blog`` sont déjà "
"enregistrées dans la base de données (afin de pouvoir être récupérées ci-"
"dessous) :"

msgid ""
"Updating a :class:`~django.db.models.ManyToManyField` works a little "
"differently -- use the :meth:`~django.db.models.fields.related."
"RelatedManager.add` method on the field to add a record to the relation. "
"This example adds the ``Author`` instance ``joe`` to the ``entry`` object:"
msgstr ""
"La mise à jour d'un champ :class:`~django.db.models.ManyToManyField` "
"fonctionne un peu différemment ; utilisez la méthode :meth:`~django.db."
"models.fields.related.RelatedManager.add` du champ pour ajouter un "
"enregistrement à la relation. Cet exemple ajoute l'instance ``Author`` "
"``joe`` à l'objet ``entry``:"

msgid ""
"To add multiple records to a :class:`~django.db.models.ManyToManyField` in "
"one go, include multiple arguments in the call to :meth:`~django.db.models."
"fields.related.RelatedManager.add`, like this:"
msgstr ""
"Pour ajouter plusieurs enregistrements à un champ :class:`~django.db.models."
"ManyToManyField` d'un seul coup, indiquez plusieurs paramètres dans l'appel "
"à :meth:`~django.db.models.fields.related.RelatedManager.add`, comme ceci :"

msgid ""
"Django will complain if you try to assign or add an object of the wrong type."
msgstr ""
"Django se plaint si vous essayez d'assigner ou d'ajouter un objet de type "
"inapproprié."

msgid "Retrieving objects"
msgstr "Sélection d'objets"

msgid ""
"To retrieve objects from your database, construct a :class:`~django.db."
"models.query.QuerySet` via a :class:`~django.db.models.Manager` on your "
"model class."
msgstr ""
"Pour extraire des objets de la base de données, construisez un :class:"
"`~django.db.models.query.QuerySet` via un :class:`~django.db.models.Manager` "
"de la classe de votre modèle."

msgid ""
"A :class:`~django.db.models.query.QuerySet` represents a collection of "
"objects from your database. It can have zero, one or many *filters*. Filters "
"narrow down the query results based on the given parameters. In SQL terms, "
"a :class:`~django.db.models.query.QuerySet` equates to a ``SELECT`` "
"statement, and a filter is a limiting clause such as ``WHERE`` or ``LIMIT``."
msgstr ""
"Un :class:`~django.db.models.query.QuerySet` représente une collection "
"d'objets de la base de données. Il peut comporter zéro, un ou plusieurs "
"*filtres*. Les filtres réduisent les résultats de requêtes en fonction des "
"paramètres donnés. En termes SQL, un :class:`~django.db.models.query."
"QuerySet` équivaut à une commande ``SELECT`` et un filtre correspond à une "
"clause restrictive telle que ``WHERE`` ou ``LIMIT``."

msgid ""
"You get a :class:`~django.db.models.query.QuerySet` by using your model's :"
"class:`~django.db.models.Manager`. Each model has at least one :class:"
"`~django.db.models.Manager`, and it's called :attr:`~django.db.models.Model."
"objects` by default. Access it directly via the model class, like so:"
msgstr ""
"On obtient un :class:`~django.db.models.query.QuerySet` en utilisant le :"
"class:`~django.db.models.Manager` du modèle. Chaque modèle a au moins un :"
"class:`~django.db.models.Manager` ; il s'appelle :attr:`~django.db.models."
"Model.objects` par défaut. On y accède directement via la classe du modèle, "
"comme ceci :"

msgid ""
"``Managers`` are accessible only via model classes, rather than from model "
"instances, to enforce a separation between \"table-level\" operations and "
"\"record-level\" operations."
msgstr ""
"Les ``Managers`` ne sont accessibles que par les classes de modèle et non "
"par les instances de modèle, afin d'accentuer la séparation entre les "
"opérations sur les « tables » et les opérations sur les « enregistrements »."

msgid ""
"The :class:`~django.db.models.Manager` is the main source of ``QuerySets`` "
"for a model. For example, ``Blog.objects.all()`` returns a :class:`~django."
"db.models.query.QuerySet` that contains all ``Blog`` objects in the database."
msgstr ""
"Le :class:`~django.db.models.Manager` est la source principale des "
"``QuerySets`` d'un modèle. Par exemple, ``Blog.objects.all()`` renvoie un :"
"class:`~django.db.models.query.QuerySet` contenant tous les objets ``Blog`` "
"de la base de données."

msgid "Retrieving all objects"
msgstr "Sélection de tous les objets"

msgid ""
"The simplest way to retrieve objects from a table is to get all of them. To "
"do this, use the :meth:`~django.db.models.query.QuerySet.all` method on a :"
"class:`~django.db.models.Manager`:"
msgstr ""
"La façon la plus simple d'obtenir des objets d'une table est de tous les "
"sélectionner. Pour ce faire, utilisez la méthode :meth:`~django.db.models."
"query.QuerySet.all` d'un :class:`~django.db.models.Manager`:"

msgid ""
"The :meth:`~django.db.models.query.QuerySet.all` method returns a :class:"
"`~django.db.models.query.QuerySet` of all the objects in the database."
msgstr ""
"La méthode :meth:`~django.db.models.query.QuerySet.all` renvoie un :class:"
"`~django.db.models.query.QuerySet` de tous les objets dans la base de "
"données."

msgid "Retrieving specific objects with filters"
msgstr "Sélection d'objets spécifiques avec les filtres"

msgid ""
"The :class:`~django.db.models.query.QuerySet` returned by :meth:`~django.db."
"models.query.QuerySet.all` describes all objects in the database table. "
"Usually, though, you'll need to select only a subset of the complete set of "
"objects."
msgstr ""
"Le :class:`~django.db.models.query.QuerySet` renvoyé par :meth:`~django.db."
"models.query.QuerySet.all` contient tous les objets de la table de la base "
"de données. Mais le plus souvent, seul un sous-ensemble de tous les objets "
"devra être sélectionné."

msgid ""
"To create such a subset, you refine the initial :class:`~django.db.models."
"query.QuerySet`, adding filter conditions. The two most common ways to "
"refine a :class:`~django.db.models.query.QuerySet` are:"
msgstr ""
"Pour créer un tel sous-ensemble, vous affinez le :class:`~django.db.models."
"query.QuerySet` initial en \n"
"y ajoutant des filtres de conditions. Les deux façons les plus utilisées "
"pour affiner un :class:`~django.db.models.query.QuerySet` sont :"

msgid "``filter(**kwargs)``"
msgstr "``filter(**kwargs)``"

msgid ""
"Returns a new :class:`~django.db.models.query.QuerySet` containing objects "
"that match the given lookup parameters."
msgstr ""
"Renvoie un nouveau :class:`~django.db.models.query.QuerySet` contenant les "
"objets qui répondent aux paramètres de recherche donnés."

msgid "``exclude(**kwargs)``"
msgstr "``exclude(**kwargs)``"

msgid ""
"Returns a new :class:`~django.db.models.query.QuerySet` containing objects "
"that do *not* match the given lookup parameters."
msgstr ""
"Renvoie un nouveau :class:`~django.db.models.query.QuerySet` contenant les "
"objets qui ne répondent *pas* aux paramètres de recherche donnés."

msgid ""
"The lookup parameters (``**kwargs`` in the above function definitions) "
"should be in the format described in `Field lookups`_ below."
msgstr ""
"Les paramètres de recherche (``**kwargs`` dans les définitions de fonction "
"ci-dessus) doivent être dans le format décrit dans `Recherches dans les "
"champs`_ ci-dessous."

msgid ""
"For example, to get a :class:`~django.db.models.query.QuerySet` of blog "
"entries from the year 2006, use :meth:`~django.db.models.query.QuerySet."
"filter` like so::"
msgstr ""
"Par exemple, pour obtenir un :class:`~django.db.models.query.QuerySet` des "
"articles de blog de l'année 2006, utilisez :meth:`~django.db.models.query."
"QuerySet.filter` comme ceci ::"

msgid "With the default manager class, it is the same as::"
msgstr "Avec la classe de gestionnaire par défaut, c'est équivalent à ::"

msgid "Chaining filters"
msgstr "Enchaînement des filtres"

msgid ""
"The result of refining a :class:`~django.db.models.query.QuerySet` is itself "
"a :class:`~django.db.models.query.QuerySet`, so it's possible to chain "
"refinements together. For example:"
msgstr ""
"Le résultat de l'affinage d'un :class:`~django.db.models.query.QuerySet` est "
"lui-même un :class:`~django.db.models.query.QuerySet`, il est donc possible "
"d'enchaîner les filtrages successifs. Par exemple :"

msgid ""
"This takes the initial :class:`~django.db.models.query.QuerySet` of all "
"entries in the database, adds a filter, then an exclusion, then another "
"filter. The final result is a :class:`~django.db.models.query.QuerySet` "
"containing all entries with a headline that starts with \"What\", that were "
"published between January 30, 2005, and the current day."
msgstr ""
"À partir du :class:`~django.db.models.query.QuerySet` initial de toutes les "
"lignes dans la base de données, le code ci-dessus ajoute un filtre, puis une "
"exclusion, puis un autre filtre. Le résultat final est un :class:`~django.db."
"models.query.QuerySet` contenant tous les enregistrements ayant un titre "
"(``headline``) commençant par « What », ayant été publiés entre le 30 "
"janvier 2005 et aujourd'hui."

msgid "Filtered ``QuerySet``\\s are unique"
msgstr "Les ``QuerySet`` filtrés sont uniques"

msgid ""
"Each time you refine a :class:`~django.db.models.query.QuerySet`, you get a "
"brand-new :class:`~django.db.models.query.QuerySet` that is in no way bound "
"to the previous :class:`~django.db.models.query.QuerySet`. Each refinement "
"creates a separate and distinct :class:`~django.db.models.query.QuerySet` "
"that can be stored, used and reused."
msgstr ""
"À chaque fois que vous affinez un :class:`~django.db.models.query.QuerySet`, "
"vous obtenez un :class:`~django.db.models.query.QuerySet` tout neuf qui "
"n'est lié d'aucune manière au :class:`~django.db.models.query.QuerySet` "
"précédent. Chaque affinage crée un :class:`~django.db.models.query.QuerySet` "
"séparé et distinct qui peut être stocké, utilisé et réutilisé."

msgid "Example:"
msgstr "Exemple :"

msgid ""
"These three ``QuerySets`` are separate. The first is a base :class:`~django."
"db.models.query.QuerySet` containing all entries that contain a headline "
"starting with \"What\". The second is a subset of the first, with an "
"additional criteria that excludes records whose ``pub_date`` is today or in "
"the future. The third is a subset of the first, with an additional criteria "
"that selects only the records whose ``pub_date`` is today or in the future. "
"The initial :class:`~django.db.models.query.QuerySet` (``q1``) is unaffected "
"by the refinement process."
msgstr ""
"Ces trois ``QuerySet`` sont séparés. Le premier est un :class:`~django.db."
"models.query.QuerySet` de base contenant tous les enregistrements qui "
"contiennent un titre commençant par « What ». Le second est un sous-ensemble "
"du premier, avec un critère supplémentaire qui exclut les enregistrements "
"dont le champ ``pub_date`` est aujourd'hui ou dans le futur. Le troisième "
"est un sous-ensemble du premier, avec un critère supplémentaire qui "
"sélectionne uniquement les enregistrements dont le champ ``pub_date`` est "
"aujourd'hui ou dans le futur. Le :class:`~django.db.models.query.QuerySet` "
"initial (``q1``) n'est pas affecté par le processus d'affinage."

msgid "``QuerySet``\\s are lazy"
msgstr "Les objects ``QuerySet`` sont différés"

msgid ""
"``QuerySets`` are lazy -- the act of creating a :class:`~django.db.models."
"query.QuerySet` doesn't involve any database activity. You can stack filters "
"together all day long, and Django won't actually run the query until the :"
"class:`~django.db.models.query.QuerySet` is *evaluated*. Take a look at this "
"example:"
msgstr ""
"Les ``QuerySets`` sont différés (« lazy ») ; la création d'un :class:"
"`~django.db.models.query.QuerySet` ne génère aucune activité au niveau de la "
"base de données. Vous pouvez empiler les filtres toute la journée, Django ne "
"lance aucune requête tant \n"
"que le :class:`~django.db.models.query.QuerySet` n'est pas *évalué*. "
"Regardez cet exemple :"

msgid ""
"Though this looks like three database hits, in fact it hits the database "
"only once, at the last line (``print(q)``). In general, the results of a :"
"class:`~django.db.models.query.QuerySet` aren't fetched from the database "
"until you \"ask\" for them. When you do, the :class:`~django.db.models.query."
"QuerySet` is *evaluated* by accessing the database. For more details on "
"exactly when evaluation takes place, see :ref:`when-querysets-are-evaluated`."
msgstr ""
"Malgré le fait que ceci ressemble à trois interrogations de la base de "
"données, en réalité une seule interrogation est faite, à la dernière ligne "
"(``print(q)``). En général, les résultats d'un :class:`~django.db.models."
"query.QuerySet` ne sont récupérés de la base de données que lorsque vous les "
"« demandez ». Lorsque cela arrive, le :class:`~django.db.models.query."
"QuerySet` est *évalué* en accédant à la base de données. Pour plus de "
"détails sur le moment exact où l'évaluation a lieu, consultez :ref:`when-"
"querysets-are-evaluated`."

msgid "Retrieving a single object with ``get()``"
msgstr "Sélection d'un objet unique avec ``get()``"

msgid ""
":meth:`~django.db.models.query.QuerySet.filter` will always give you a :"
"class:`~django.db.models.query.QuerySet`, even if only a single object "
"matches the query - in this case, it will be a :class:`~django.db.models."
"query.QuerySet` containing a single element."
msgstr ""
":meth:`~django.db.models.query.QuerySet.filter` renvoie toujours un :class:"
"`~django.db.models.query.QuerySet`, même si la requête ne renvoie qu'un seul "
"objet ; dans ce cas, le :class:`~django.db.models.query.QuerySet` ne "
"contiendra simplement qu'un seul élément."

msgid ""
"If you know there is only one object that matches your query, you can use "
"the :meth:`~django.db.models.query.QuerySet.get` method on a :class:`~django."
"db.models.Manager` which returns the object directly:"
msgstr ""
"Si vous savez qu'un seul objet correspondra à votre requête, vous pouvez "
"utiliser la méthode :meth:`~django.db.models.query.QuerySet.get` d'un :class:"
"`~django.db.models.Manager` qui renvoie directement l'objet :"

msgid ""
"You can use any query expression with :meth:`~django.db.models.query."
"QuerySet.get`, just like with :meth:`~django.db.models.query.QuerySet."
"filter` - again, see `Field lookups`_ below."
msgstr ""
"N'importe quelle expression de recherche peut être utilisée avec :meth:"
"`~django.db.models.query.QuerySet.get`, comme pour :meth:`~django.db.models."
"query.QuerySet.filter`. Voir  `Recherches dans les champs`_ ci-dessous."

msgid ""
"Note that there is a difference between using :meth:`~django.db.models.query."
"QuerySet.get`, and using :meth:`~django.db.models.query.QuerySet.filter` "
"with a slice of ``[0]``. If there are no results that match the query, :meth:"
"`~django.db.models.query.QuerySet.get` will raise a ``DoesNotExist`` "
"exception. This exception is an attribute of the model class that the query "
"is being performed on - so in the code above, if there is no ``Entry`` "
"object with a primary key of 1, Django will raise ``Entry.DoesNotExist``."
msgstr ""
"Notez qu'il y a une différence entre l'utilisation de :meth:`~django.db."
"models.query.QuerySet.get` et celle de :meth:`~django.db.models.query."
"QuerySet.filter` avec le segment ``[0]``. Si aucun résultat ne correspond à "
"la requête, :meth:`~django.db.models.query.QuerySet.get` génère une "
"exception ``DoesNotExist``. Cette exception est un attribut de la classe de "
"modèle sur laquelle la requête est appliquée ; ainsi, dans le code ci-"
"dessus, s'il n'existe pas d'objet ``Entry`` avec une clé primaire de 1, "
"Django génère l'exception ``Entry.DoesNotExist``."

msgid ""
"Similarly, Django will complain if more than one item matches the :meth:"
"`~django.db.models.query.QuerySet.get` query. In this case, it will raise :"
"exc:`~django.core.exceptions.MultipleObjectsReturned`, which again is an "
"attribute of the model class itself."
msgstr ""
"De même, Django réagit si plus d'un élément correspond à la requête :meth:"
"`~django.db.models.query.QuerySet.get`. Dans ce cas, il lève l'exception :"
"exc:`~django.core.exceptions.MultipleObjectsReturned` qui est également un "
"attribut de la classe de modèle elle-même."

msgid "Other ``QuerySet`` methods"
msgstr "Autres méthodes de ``QuerySet``"

msgid ""
"Most of the time you'll use :meth:`~django.db.models.query.QuerySet.all`, :"
"meth:`~django.db.models.query.QuerySet.get`, :meth:`~django.db.models.query."
"QuerySet.filter` and :meth:`~django.db.models.query.QuerySet.exclude` when "
"you need to look up objects from the database. However, that's far from all "
"there is; see the :ref:`QuerySet API Reference <queryset-api>` for a "
"complete list of all the various :class:`~django.db.models.query.QuerySet` "
"methods."
msgstr ""
"La plupart du temps, vous utiliserez :meth:`~django.db.models.query.QuerySet."
"all`, :meth:`~django.db.models.query.QuerySet.get`, :meth:`~django.db.models."
"query.QuerySet.filter` et :meth:`~django.db.models.query.QuerySet.exclude` "
"lorsque vous aurez besoin de sélectionner des objets dans la base de "
"données. Cependant, c'est loin d'être tout ; consultez la :ref:`référence de "
"l'API QuerySet <queryset-api>` pour une liste complète des diverses méthodes "
"de :class:`~django.db.models.query.QuerySet`."

msgid "Limiting ``QuerySet``\\s"
msgstr "Limitation des ``QuerySet``"

msgid ""
"Use a subset of Python's array-slicing syntax to limit your :class:`~django."
"db.models.query.QuerySet` to a certain number of results. This is the "
"equivalent of SQL's ``LIMIT`` and ``OFFSET`` clauses."
msgstr ""
"Utilisez un sous-ensemble de la syntaxe Python de segmentation des listes "
"pour restreindre un :class:`~django.db.models.query.QuerySet` à un certain "
"nombre de résultats. C'est l'équivalent des clauses SQL ``LIMIT`` et "
"``OFFSET``."

msgid "For example, this returns the first 5 objects (``LIMIT 5``):"
msgstr "Par exemple, ceci renvoie les 5 premiers objets (``LIMIT 5``) :"

msgid "This returns the sixth through tenth objects (``OFFSET 5 LIMIT 5``):"
msgstr "Ceci renvoie du sixième au dixième objet  (``OFFSET 5 LIMIT 5``) :"

msgid "Negative indexing (i.e. ``Entry.objects.all()[-1]``) is not supported."
msgstr ""
"Les index négatifs (ex. : ``Entry.objects.all()[-1]``) ne sont pas pris en "
"charge."

msgid ""
"Generally, slicing a :class:`~django.db.models.query.QuerySet` returns a "
"new :class:`~django.db.models.query.QuerySet` -- it doesn't evaluate the "
"query. An exception is if you use the \"step\" parameter of Python slice "
"syntax. For example, this would actually execute the query in order to "
"return a list of every *second* object of the first 10:"
msgstr ""
"De manière générale, la segmentation d'un :class:`~django.db.models.query."
"QuerySet` renvoie un nouveau :class:`~django.db.models.query.QuerySet` ; la "
"requête n'est pas évaluée, sauf si vous utilisez le paramètre ``step`` de la "
"syntaxe de segmentation de Python. Par exemple, ceci exécuterait "
"effectivement la requête pour renvoyer une liste d'un objet sur 2 parmi les "
"10 premiers :"

msgid ""
"Further filtering or ordering of a sliced queryset is prohibited due to the "
"ambiguous nature of how that might work."
msgstr ""
"Tout filtre ou tri subséquent d'un jeu de requête segmenté est interdit en "
"raison de la nature ambiguë de son éventuel fonctionnement."

msgid ""
"To retrieve a *single* object rather than a list (e.g. ``SELECT foo FROM bar "
"LIMIT 1``), use an index instead of a slice. For example, this returns the "
"first ``Entry`` in the database, after ordering entries alphabetically by "
"headline:"
msgstr ""
"Pour obtenir un *seul* objet plutôt qu'une liste (ex. : ``SELECT foo FROM "
"bar LIMIT 1``), utilisez un index au lieu d'un segment. Par exemple, ceci "
"renvoie le premier objet ``Entry`` de la base de données, après avoir trié "
"les objets alphabétiquement par titre (``headline``) :"

msgid "This is roughly equivalent to:"
msgstr "C'est grossièrement équivalent à :"

msgid ""
"Note, however, that the first of these will raise ``IndexError`` while the "
"second will raise ``DoesNotExist`` if no objects match the given criteria. "
"See :meth:`~django.db.models.query.QuerySet.get` for more details."
msgstr ""
"Notez toutefois que si aucun objet ne correspond à la requête, une exception "
"``IndexError`` est générée dans le premier cas, tandis que dans le second "
"cas, c'est l'exception ``DoesNotExist`` qui sera générée. Voir :meth:"
"`~django.db.models.query.QuerySet.get` pour plus de détails."

msgid "Field lookups"
msgstr "Recherches dans les champs"

msgid ""
"Field lookups are how you specify the meat of an SQL ``WHERE`` clause. "
"They're specified as keyword arguments to the :class:`~django.db.models."
"query.QuerySet` methods :meth:`~django.db.models.query.QuerySet.filter`, :"
"meth:`~django.db.models.query.QuerySet.exclude` and :meth:`~django.db.models."
"query.QuerySet.get`."
msgstr ""
"La recherche dans les champs est ce qui constitue le cœur des clauses SQL "
"``WHERE``. La syntaxe s'exprime par des paramètres nommés dans les méthodes :"
"meth:`~django.db.models.query.QuerySet.filter`, :meth:`~django.db.models."
"query.QuerySet.exclude` et :meth:`~django.db.models.query.QuerySet.get` de :"
"class:`~django.db.models.query.QuerySet`."

msgid ""
"Basic lookups keyword arguments take the form ``field__lookuptype=value``. "
"(That's a double-underscore). For example:"
msgstr ""
"Les paramètres nommés de base de ces requêtes prennent la forme "
"``champ__typerequete=valeur`` (il s'agit d'un double soulignement). Par "
"exemple :"

msgid "translates (roughly) into the following SQL:"
msgstr "peut être grossièrement traduit en code SQL comme :"

msgid "How this is possible"
msgstr "Comment est-ce possible ?"

msgid ""
"Python has the ability to define functions that accept arbitrary name-value "
"arguments whose names and values are evaluated at runtime. For more "
"information, see :ref:`tut-keywordargs` in the official Python tutorial."
msgstr ""
"Python permet de définir des fonctions acceptant des paramètres nom-valeur "
"arbitraires dont les noms et les valeurs sont évalués au moment de "
"l'exécution. Pour plus d'informations, consultez :ref:`tut-keywordargs` dans "
"le tutoriel Python officiel."

msgid ""
"The field specified in a lookup has to be the name of a model field. There's "
"one exception though, in case of a :class:`~django.db.models.ForeignKey` you "
"can specify the field name suffixed with ``_id``. In this case, the value "
"parameter is expected to contain the raw value of the foreign model's "
"primary key. For example:"
msgstr ""
"Le champ indiqué dans une recherche doit correspondre au nom d'un champ de "
"modèle. Il existe cependant une exception ; dans le cas d'une clé étrangère :"
"class:`~django.db.models.ForeignKey`, vous pouvez indiquer le nom du champ "
"additionné du suffixe ``_id``. Dans ce cas, le paramètre valeur doit "
"contenir la valeur brute de la clé primaire du modèle étranger. Par exemple :"

msgid ""
"If you pass an invalid keyword argument, a lookup function will raise "
"``TypeError``."
msgstr ""
"Si vous fournissez un paramètre nommé non valide, une fonction de recherche "
"signalera une exception ``TypeError``."

msgid ""
"The database API supports about two dozen lookup types; a complete reference "
"can be found in the :ref:`field lookup reference <field-lookups>`. To give "
"you a taste of what's available, here's some of the more common lookups "
"you'll probably use:"
msgstr ""
"L'API de base de données gère une vingtaine de types de recherche ; une "
"référence complète se trouve dans la :ref:`référence des recherches de "
"champs <field-lookups>`. Pour vous donner une idée de ce qui est possible, "
"voici quelques recherches parmi les plus fréquemment utilisées :"

msgid ":lookup:`exact`"
msgstr ":lookup:`exact`"

msgid "An \"exact\" match. For example:"
msgstr "Une correspondance « exacte ». Par exemple :"

msgid "Would generate SQL along these lines:"
msgstr "Produit le code SQL ressemblant à :"

msgid ""
"If you don't provide a lookup type -- that is, if your keyword argument "
"doesn't contain a double underscore -- the lookup type is assumed to be "
"``exact``."
msgstr ""
"Si vous n'indiquez pas de type de recherche, c'est-à-dire si votre paramètre "
"nommé ne contient pas de double soulignement, Django considère que le type "
"de recherche est ``exact``."

msgid "For example, the following two statements are equivalent:"
msgstr "Par exemple, les deux lignes suivantes sont équivalentes :"

msgid "This is for convenience, because ``exact`` lookups are the common case."
msgstr ""
"Il s'agit d'un raccourci commode, puisque les recherches ``exact`` sont les "
"cas les plus courants."

msgid ":lookup:`iexact`"
msgstr ":lookup:`iexact`"

msgid "A case-insensitive match. So, the query:"
msgstr "Une recherche insensible à la casse. Ainsi, la requête :"

msgid ""
"Would match a ``Blog`` titled ``\"Beatles Blog\"``, ``\"beatles blog\"``, or "
"even ``\"BeAtlES blOG\"``."
msgstr ""
"Aurait pour occurrence un ``Blog`` intitulé ``\"Beatles Blog\"``, "
"``\"beatles blog\"`` ou même ``\"BeAtlES blOG\"``."

msgid ":lookup:`contains`"
msgstr ":lookup:`contains`"

msgid "Case-sensitive containment test. For example::"
msgstr "Test d'inclusion sensible à la casse. Par exemple ::"

msgid "Roughly translates to this SQL:"
msgstr "Pourrait être traduit grosso modo par ce code SQL :"

msgid ""
"Note this will match the headline ``'Today Lennon honored'`` but not "
"``'today lennon honored'``."
msgstr ""
"Notez que le titre (``headline``) ``'Today Lennon honored'`` correspondrait "
"à cette recherche, mais pas ``'today lennon honored'``."

msgid "There's also a case-insensitive version, :lookup:`icontains`."
msgstr ""
"Il existe aussi une version insensible à la casse, :lookup:`icontains`."

msgid ":lookup:`startswith`, :lookup:`endswith`"
msgstr ":lookup:`startswith`, :lookup:`endswith`"

msgid ""
"Starts-with and ends-with search, respectively. There are also case-"
"insensitive versions called :lookup:`istartswith` and :lookup:`iendswith`."
msgstr ""
"Recherche « commençant par » et « finissant par », respectivement. Il en "
"existe aussi des versions insensibles à la casse : :lookup:`istartswith` et :"
"lookup:`iendswith`."

msgid ""
"Again, this only scratches the surface. A complete reference can be found in "
"the :ref:`field lookup reference <field-lookups>`."
msgstr ""
"Encore une fois, ce n'est qu'un survol. Une référence complète est "
"disponible dans la :ref:`référence des recherches de champ <field-lookups>`."

msgid "Lookups that span relationships"
msgstr "Recherches traversant les relations"

msgid ""
"Django offers a powerful and intuitive way to \"follow\" relationships in "
"lookups, taking care of the SQL ``JOIN``\\s for you automatically, behind "
"the scenes. To span a relationship, use the field name of related fields "
"across models, separated by double underscores, until you get to the field "
"you want."
msgstr ""
"Django offre une approche puissante et intuitive pour « suivre » les "
"relations dans les recherches, se chargeant automatiquement des ``JOIN`` SQL "
"en arrière-plan. Pour atteindre une relation, utilisez les noms de champ qui "
"servent de relation vers d'autres modèles, séparés par des doubles "
"soulignements, jusqu'à atteindre le champ souhaité."

msgid ""
"This example retrieves all ``Entry`` objects with a ``Blog`` whose ``name`` "
"is ``'Beatles Blog'``:"
msgstr ""
"Cet exemple sélectionne tous les objets ``Entry`` d'un ``Blog`` ayant pour "
"``name`` la valeur ``'Beatles Blog'``:"

msgid "This spanning can be as deep as you'd like."
msgstr ""
"Ce mécanisme de traversée de relations peut être aussi profond que vous le "
"souhaitez."

msgid ""
"It works backwards, too. While it :attr:`can be customized <.ForeignKey."
"related_query_name>`, by default you refer to a \"reverse\" relationship in "
"a lookup using the lowercase name of the model."
msgstr ""
"Ceci fonctionne également dans le sens inverse. Même s'il :attr:`peut être "
"personnalisé <.ForeignKey.related_query_name>`, la manière par défaut de se "
"référer à une relation « inverse » dans une expression de requête est "
"d'utiliser le nom du modèle en minuscules."

msgid ""
"This example retrieves all ``Blog`` objects which have at least one "
"``Entry`` whose ``headline`` contains ``'Lennon'``:"
msgstr ""
"Cet exemple sélectionne tous les objets ``Blog`` ayant au moins une "
"``Entry`` ayant un ``headline`` contenant ``'Lennon'``:"

msgid ""
"If you are filtering across multiple relationships and one of the "
"intermediate models doesn't have a value that meets the filter condition, "
"Django will treat it as if there is an empty (all values are ``NULL``), but "
"valid, object there. All this means is that no error will be raised. For "
"example, in this filter::"
msgstr ""
"Si vous filtrez à travers plusieurs relations et qu'un des modèles "
"intermédiaires n'a pas de valeur répondant à la condition du filtre, Django "
"le traite comme s'il y avait là un objet vide (toutes les valeurs sont "
"``NULL``), mais valide. C'est-à-dire qu'aucune erreur ne sera signalée. Par "
"exemple, dans ce filtre ::"

msgid ""
"(if there was a related ``Author`` model), if there was no ``author`` "
"associated with an entry, it would be treated as if there was also no "
"``name`` attached, rather than raising an error because of the missing "
"``author``. Usually this is exactly what you want to have happen. The only "
"case where it might be confusing is if you are using :lookup:`isnull`. Thus::"
msgstr ""
"(partant du principe qu'il existe un modèle ``Author`` lié), s'il n'y a pas "
"de ``author`` associé à une ``entry``, ce sera traité comme s'il n'y avait "
"pas non plus de ``name``, plutôt que de signaler une erreur à cause de "
"l'``author`` manquant. Normalement, c'est bien le comportement souhaité. Le "
"seul cas où ça pourrait porter à confusion, c'est quand vous utilisez :"
"lookup:`isnull`. Ainsi ::"

msgid ""
"will return ``Blog`` objects that have an empty ``name`` on the ``author`` "
"and also those which have an empty ``author`` on the ``entry``. If you don't "
"want those latter objects, you could write::"
msgstr ""
"renvoie les objets ``Blog`` ayant un ``author`` avec le ``name`` vide ainsi "
"que tous ceux ayant un ``author`` vide dans l'``entry``. Si vous ne voulez "
"pas de cette deuxième catégorie d'objets, vous pourriez écrire ::"

msgid "Spanning multi-valued relationships"
msgstr "Traversée des relations multivaluées"

msgid ""
"When spanning a :class:`~django.db.models.ManyToManyField` or a reverse :"
"class:`~django.db.models.ForeignKey` (such as from ``Blog`` to ``Entry``), "
"filtering on multiple attributes raises the question of whether to require "
"each attribute to coincide in the same related object. We might seek blogs "
"that have an entry from 2008 with *“Lennon”* in its headline, or we might "
"seek blogs that merely have any entry from 2008 as well as some newer or "
"older entry with *“Lennon”* in its headline."
msgstr ""
"Lors de la traversée d'un champ :class:`~django.db.models.ManyToManyField` "
"ou d'un clé :class:`~django.db.models.ForeignKey` inverse (comme de ``Blog`` "
"à ``Entry``), le filtrage sur plusieurs attributs pose la question de savoir "
"si chaque attribut doit correspondre pour chaque objet lié. On pourrait "
"rechercher des blogs qui ont un article en 2008 avec *« “Lennon” »* dans son "
"titre, ou plus simplement des blogs qui ont un article en 2008 de même que "
"des articles plus vieux ou plus récentes qui contiennent *« “Lennon” »* dans "
"leur titre."

msgid ""
"To select all blogs containing at least one entry from 2008 having "
"*\"Lennon\"* in its headline (the same entry satisfying both conditions), we "
"would write::"
msgstr ""
"Pour sélectionner tous les blogs contenant au moins un article en 2008 ayant "
"*« Lennon »* dans son titre (le même article devant satisfaire les deux "
"conditions), il faudrait écrire ::"

msgid ""
"Otherwise, to perform a more permissive query selecting any blogs with "
"merely *some* entry with *\"Lennon\"* in its headline and *some* entry from "
"2008, we would write::"
msgstr ""
"Sinon, pour effectuer une requête plus permissive sélectionnant tous les "
"blogs ayant un ou plusieurs articles avec *« Lennon »* dans leur titre et un "
"ou plusieurs articles en 2008, on écrirait ::"

msgid ""
"Suppose there is only one blog that has both entries containing *\"Lennon\"* "
"and entries from 2008, but that none of the entries from 2008 contained "
"*\"Lennon\"*. The first query would not return any blogs, but the second "
"query would return that one blog. (This is because the entries selected by "
"the second filter may or may not be the same as the entries in the first "
"filter. We are filtering the ``Blog`` items with each filter statement, not "
"the ``Entry`` items.) In short, if each condition needs to match the same "
"related object, then each should be contained in a single :meth:`~django.db."
"models.query.QuerySet.filter` call."
msgstr ""
"Supposons qu'il n'y ait qu'un seul blog ayant à la fois des articles "
"contenant *« Lennon »* et des articles de 2008, mais qu'aucun des articles "
"de 2008 ne contienne *« Lennon »*. La première requête ne renverrait aucun "
"blog, mais la seconde renverrait ce blog (et cela parce que les lignes "
"sélectionnées par le second filtre ne sont pas forcément les mêmes que "
"celles du premier filtre ; chaque instruction de filtrage agit sur les "
"éléments ``Blog``, pas sur les éléments ``Entry`` ). En résumé, si toutes "
"les conditions doivent s'appliquer sur les mêmes objets liés, alors chaque "
"filtre doit être contenu dans un même appel à :meth:`~django.db.models.query."
"QuerySet.filter`."

msgid ""
"As the second (more permissive) query chains multiple filters, it performs "
"multiple joins to the primary model, potentially yielding duplicates."
msgstr ""
"Comme la seconde requête (plus permissive) enchaîne plusieurs filtres, elle "
"effectue plusieurs jointures vers le modèle principal, ce qui peut provoquer "
"des doublons."

msgid ""
"The behavior of :meth:`~django.db.models.query.QuerySet.filter` for queries "
"that span multi-value relationships, as described above, is not implemented "
"equivalently for :meth:`~django.db.models.query.QuerySet.exclude`. Instead, "
"the conditions in a single :meth:`~django.db.models.query.QuerySet.exclude` "
"call will not necessarily refer to the same item."
msgstr ""
"Le comportement de :meth:`~django.db.models.query.QuerySet.filter` pour les "
"requêtes qui couvrent des relations multi-valeurs' tel que décrit ci-dessus, "
"n'est pas implémenté de la même manière pour :meth:`~django.db.models.query."
"QuerySet.exclude`. Au contraire, les conditions de restriction indiquées "
"lors qu'un appel à  :meth:`~django.db.models.query.QuerySet.exclude` ne "
"doivent pas nécessairement s'appliquer au même élément."

msgid ""
"For example, the following query would exclude blogs that contain *both* "
"entries with *\"Lennon\"* in the headline *and* entries published in 2008::"
msgstr ""
"Par exemple, la requête ci-dessous exclurait les blogues qui contiennent **à "
"la fois** *\"Lennon\"* dans le titre *et* des entrées publiées en 2008 ::"

msgid ""
"However, unlike the behavior when using :meth:`~django.db.models.query."
"QuerySet.filter`, this will not limit blogs based on entries that satisfy "
"both conditions. In order to do that, i.e. to select all blogs that do not "
"contain entries published with *\"Lennon\"* that were published in 2008, you "
"need to make two queries::"
msgstr ""
"Cependant, contrairement au comportement lors de l'utilisation de :meth:"
"`~django.db.models.query.QuerySet.filter`, cela ne sélectionnera pas les "
"blogs basés sur des entrées qui satisfont les deux conditions en même temps. "
"Pour faire cela, c'est à dire pour sélectionner tous les blogs qui ne "
"contiennent pas d'entrées publiées avec *\"Lennon\"* et qui ont été publiées "
"en 2008, vous devez faire deux requêtes ::"

msgid "Filters can reference fields on the model"
msgstr "Les filtres peuvent référencer les champs d'un modèle"

msgid ""
"In the examples given so far, we have constructed filters that compare the "
"value of a model field with a constant. But what if you want to compare the "
"value of a model field with another field on the same model?"
msgstr ""
"Dans les exemples donnés jusqu'ici, nous avons construit des filtres "
"comparant la valeur d'un champ de modèle avec une constante. Mais qu'en est-"
"il si vous souhaitez comparer la valeur d'un champ de modèle avec un autre "
"champ du même modèle ?"

msgid ""
"Django provides :class:`F expressions <django.db.models.F>` to allow such "
"comparisons. Instances of ``F()`` act as a reference to a model field within "
"a query. These references can then be used in query filters to compare the "
"values of two different fields on the same model instance."
msgstr ""
"Django propose les :class:`expressions F <django.db.models.F>` pour "
"autoriser de telles comparaisons. Les instances de ``F()`` agissent comme "
"des références vers un champ de modèle à l'intérieur d'une requête. Ces "
"références peuvent ensuite être utilisées dans des filtres de requêtes pour "
"comparer les valeurs de deux champs différents d'une même instance de modèle."

msgid ""
"For example, to find a list of all blog entries that have had more comments "
"than pingbacks, we construct an ``F()`` object to reference the pingback "
"count, and use that ``F()`` object in the query:"
msgstr ""
"Par exemple, pour obtenir la liste de tous les articles de blogue ayant "
"reçus plus de commentaires que de « pings », nous construisons un objet "
"``F()`` pour référencer le nombre de pings afin d'utiliser cet objet ``F()`` "
"dans la requête :"

msgid ""
"Django supports the use of addition, subtraction, multiplication, division, "
"modulo, and power arithmetic with ``F()`` objects, both with constants and "
"with other ``F()`` objects. To find all the blog entries with more than "
"*twice* as many comments as pingbacks, we modify the query:"
msgstr ""
"Django prend en charge l'utilisation des opérateurs arithmétiques addition, "
"soustraction, multiplication, division, modulo et puissance avec les objets "
"``F()``, aussi bien avec des constantes qu'avec d'autres objets ``F()``. "
"Pour obtenir tous les articles de blogue avec *plus de deux fois* de "
"commentaires que de pings, nous modifions ainsi la requête :"

msgid ""
"To find all the entries where the rating of the entry is less than the sum "
"of the pingback count and comment count, we would issue the query:"
msgstr ""
"Pour trouver tous les articles où la notation de l'article est plus petite "
"que la somme des pings et des commentaires, nous pourrions effectuer cette "
"requête :"

msgid ""
"You can also use the double underscore notation to span relationships in an "
"``F()`` object. An ``F()`` object with a double underscore will introduce "
"any joins needed to access the related object. For example, to retrieve all "
"the entries where the author's name is the same as the blog name, we could "
"issue the query:"
msgstr ""
"Vous pouvez aussi employer la notation en double soulignement pour traverser "
"les relations dans un objet ``F()``. Un objet ``F()`` contenant un double "
"soulignement produira toute jointure nécessaire pour accéder aux objets "
"liés. Par exemple, pour obtenir tous les articles dont le nom de l'auteur "
"est égal au nom du blogue, nous pourrions effectuer la requête :"

msgid ""
"For date and date/time fields, you can add or subtract a :class:`~datetime."
"timedelta` object. The following would return all entries that were modified "
"more than 3 days after they were published:"
msgstr ""
"Pour les champs date et date/heure, il est possible d'ajouter ou de "
"soustraire un objet :class:`~datetime.timedelta`. L'exemple suivant renvoie "
"tous les articles modifiés plus de 3 jours après avoir été publiés :"

msgid ""
"The ``F()`` objects support bitwise operations by ``.bitand()``, ``."
"bitor()``, ``.bitxor()``, ``.bitrightshift()``, and ``.bitleftshift()``. For "
"example:"
msgstr ""
"Les objets ``F()`` prennent en charge les opérations bit à bit via ``."
"bitand()``, ``.bitor()``, ``.bitxor()``,  ``.bitrightshift()`` et ``."
"bitleftshift()``. Par exemple :"

msgid "Oracle"
msgstr "Oracle"

msgid "Oracle doesn't support bitwise XOR operation."
msgstr "Oracle ne prend pas en charge l'opération bit à bit XOR."

msgid "Expressions can reference transforms"
msgstr "Les expressions peuvent référencer des transformations"

msgid "Django supports using transforms in expressions."
msgstr ""
"Django prend en charge l'appel à des transformations dans les expressions."

msgid ""
"For example, to find all ``Entry`` objects published in the same year as "
"they were last modified:"
msgstr ""
"Par exemple, pour trouver tous les objets ``Entry`` publiés la même année "
"que leur date de dernière modification :"

msgid ""
"To find the earliest year an entry was published, we can issue the query:"
msgstr ""
"Pour trouver l'année de publication la plus ancienne d'un élément, on peut "
"lancer la requête :"

msgid ""
"This example finds the value of the highest rated entry and the total number "
"of comments on all entries for each year:"
msgstr ""
"Cette exemple cherche la valeur de l'élément le mieux noté et le nombre "
"total de commentaires de tous les éléments pour chaque année :"

msgid "The ``pk`` lookup shortcut"
msgstr "Le raccourci de recherche ``pk``"

msgid ""
"For convenience, Django provides a ``pk`` lookup shortcut, which stands for "
"\"primary key\"."
msgstr ""
"Pour des raisons pratiques, Django fournit un raccourci de recherche ``pk``, "
"signifiant « primary key » (clé primaire)."

msgid ""
"In the example ``Blog`` model, the primary key is the ``id`` field, so these "
"three statements are equivalent:"
msgstr ""
"Dans le modèle d'exemple ``Blog``, la clé primaire est le champ ``id``. "
"Ainsi, ces trois lignes sont équivalentes :"

msgid ""
"The use of ``pk`` isn't limited to ``__exact`` queries -- any query term can "
"be combined with ``pk`` to perform a query on the primary key of a model:"
msgstr ""
"L'emploi de ``pk`` n'est pas limité aux requêtes ``__exact``; toute "
"expression de requête peut être combinée avec ``pk`` pour effectuer une "
"requête sur la clé primaire d'un modèle :"

msgid ""
"``pk`` lookups also work across joins. For example, these three statements "
"are equivalent:"
msgstr ""
"Les recherches sur ``pk`` fonctionnent également en traversant les "
"relations. Par exemple, ces trois lignes sont équivalentes :"

msgid "Escaping percent signs and underscores in ``LIKE`` statements"
msgstr ""
"Échappement des signes pour cent et des soulignements dans les instructions "
"``LIKE``"

msgid ""
"The field lookups that equate to ``LIKE`` SQL statements (``iexact``, "
"``contains``, ``icontains``, ``startswith``, ``istartswith``, ``endswith`` "
"and ``iendswith``) will automatically escape the two special characters used "
"in ``LIKE`` statements -- the percent sign and the underscore. (In a "
"``LIKE`` statement, the percent sign signifies a multiple-character wildcard "
"and the underscore signifies a single-character wildcard.)"
msgstr ""
"Les recherches de champs produisant des instructions SQL ``LIKE`` "
"(``iexact``, ``contains``, ``icontains``, ``startswith``, ``istartswith``, "
"``endswith`` et ``iendswith``) échappent automatiquement les deux caractères "
"à signification spéciale des instructions ``LIKE``: le signe pour cent et le "
"soulignement (dans une instruction ``LIKE``, le signe pour cent est utilisé "
"comme caractère de remplacement multiple alors qu'un soulignement est "
"utilisé comme caractère de remplacement unique)."

msgid ""
"This means things should work intuitively, so the abstraction doesn't leak. "
"For example, to retrieve all the entries that contain a percent sign, use "
"the percent sign as any other character:"
msgstr ""
"Cela signifie que les choses devraient fonctionner intuitivement, sans "
"faille d'abstraction. Par exemple, pour obtenir la liste de tous les "
"articles contenant un signe pour cent, indiquez le signe pour cent comme "
"pour n'importe quel autre caractère :"

msgid ""
"Django takes care of the quoting for you; the resulting SQL will look "
"something like this:"
msgstr ""
"Django se charge de l'échappement à votre place ; le code SQL résultant "
"ressemblera à quelque chose comme :"

msgid ""
"Same goes for underscores. Both percentage signs and underscores are handled "
"for you transparently."
msgstr ""
"Même chose pour les soulignements. Aussi bien les signes pour cent que les "
"soulignements sont gérés pour vous de manière transparente."

msgid "Caching and ``QuerySet``\\s"
msgstr "Mise en cache et objets ``QuerySet``"

msgid ""
"Each :class:`~django.db.models.query.QuerySet` contains a cache to minimize "
"database access. Understanding how it works will allow you to write the most "
"efficient code."
msgstr ""
"Chaque :class:`~django.db.models.query.QuerySet` contient un cache pour "
"minimiser l'accès à la base de données. La compréhension de son "
"fonctionnement vous permet d'écrire le code le plus efficace possible."

msgid ""
"In a newly created :class:`~django.db.models.query.QuerySet`, the cache is "
"empty. The first time a :class:`~django.db.models.query.QuerySet` is "
"evaluated -- and, hence, a database query happens -- Django saves the query "
"results in the :class:`~django.db.models.query.QuerySet`’s cache and returns "
"the results that have been explicitly requested (e.g., the next element, if "
"the :class:`~django.db.models.query.QuerySet` is being iterated over). "
"Subsequent evaluations of the :class:`~django.db.models.query.QuerySet` "
"reuse the cached results."
msgstr ""
"Pour un nouvel objet :class:`~django.db.models.query.QuerySet`, son cache "
"est vide. À la première évaluation d'un :class:`~django.db.models.query."
"QuerySet` (et donc qu'une requête de base de données est effectuée), Django "
"enregistre les résultats de la requête dans le cache de l'objet :class:"
"`~django.db.models.query.QuerySet` et renvoie les résultats qui ont été "
"explicitement demandés (par ex. l'élément suivant dans le cas d'une "
"itération du :class:`~django.db.models.query.QuerySet`). Les évaluations "
"suivantes de l'objet :class:`~django.db.models.query.QuerySet` réutilisent "
"les résultats mis en cache."

msgid ""
"Keep this caching behavior in mind, because it may bite you if you don't use "
"your :class:`~django.db.models.query.QuerySet`\\s correctly. For example, "
"the following will create two :class:`~django.db.models.query.QuerySet`\\s, "
"evaluate them, and throw them away:"
msgstr ""
"Gardez à l'esprit ce comportement de mise en cache, car vous pourriez vous "
"faire avoir si vous n'utilisez pas correctement l'objet :class:`~django.db."
"models.query.QuerySet`. Par exemple, le code suivant crée deux objets :class:"
"`~django.db.models.query.QuerySet`, les évalue et les abandonne :"

msgid ""
"That means the same database query will be executed twice, effectively "
"doubling your database load. Also, there's a possibility the two lists may "
"not include the same database records, because an ``Entry`` may have been "
"added or deleted in the split second between the two requests."
msgstr ""
"Dans ce cas, la même requête de base de données est exécutée deux fois, ce "
"qui double en pratique la charge sur la base de données. Il est également "
"imaginable que les deux listes ne contiennent pas exactement les mêmes "
"enregistrements de base de données, car un objet ``Entry`` pourrait avoir "
"été ajouté ou supprimé dans la fraction de seconde entre les deux requêtes."

msgid ""
"To avoid this problem, save the :class:`~django.db.models.query.QuerySet` "
"and reuse it:"
msgstr ""
"Pour éviter ce problème, stockez l'objet :class:`~django.db.models.query."
"QuerySet` et réutilisez-le :"

msgid "When ``QuerySet``\\s are not cached"
msgstr "Quand les objets ``QuerySet`` ne sont pas mis en cache"

msgid ""
"Querysets do not always cache their results.  When evaluating only *part* of "
"the queryset, the cache is checked, but if it is not populated then the "
"items returned by the subsequent query are not cached. Specifically, this "
"means that :ref:`limiting the queryset <limiting-querysets>` using an array "
"slice or an index will not populate the cache."
msgstr ""
"Les objets ``QuerySet`` ne mettent pas toujours leurs résultats en cache. "
"Lorsque seule une *partie* d'un queryset est évaluée, le cache est consulté "
"mais s'il n'est pas rempli, les éléments renvoyés par la requête suivante ne "
"sont pas mis en cache. Spécifiquement, cela signifie que la :ref:"
"`restriction d'un jeu de requêtes <limiting-querysets>` en employant une "
"segmentation ou un index de liste ne remplira par le cache."

msgid ""
"For example, repeatedly getting a certain index in a queryset object will "
"query the database each time:"
msgstr ""
"Par exemple, l'interrogation répétée d'un objet ``QuerySet`` à l'aide d'un "
"index effectue une requête dans la base de données à chaque fois :"

msgid ""
"However, if the entire queryset has already been evaluated, the cache will "
"be checked instead:"
msgstr ""
"Cependant, si le jeu de requête complet a déjà été évalué, le cache sera "
"tout de même mis à contribution :"

msgid ""
"Here are some examples of other actions that will result in the entire "
"queryset being evaluated and therefore populate the cache:"
msgstr ""
"Voici quelques exemples d'autres actions qui déclenchent l'évaluation de "
"tout l'objet ``QuerySet`` et qui par conséquent remplissent le cache :"

msgid ""
"Simply printing the queryset will not populate the cache. This is because "
"the call to ``__repr__()`` only returns a slice of the entire queryset."
msgstr ""
"L'affichage simple d'un ``QuerySet`` ne remplit pas le cache. Ceci parce que "
"l'appel à ``__repr__()`` ne renvoie qu'un segment du jeu de requête complet."

msgid "Asynchronous queries"
msgstr "Requêtes asynchrones"

msgid ""
"If you are writing asynchronous views or code, you cannot use the ORM for "
"queries in quite the way we have described above, as you cannot call "
"*blocking* synchronous code from asynchronous code - it will block up the "
"event loop (or, more likely, Django will notice and raise a "
"``SynchronousOnlyOperation`` to stop that from happening)."
msgstr ""
"Si vous écrivez des vues ou du code asynchrone, vous ne pouvez pas utiliser "
"l'ORM pour des requêtes de la façon qui est décrite ci-dessus, car il n'est "
"pas possible d'appeler du code synchrone *bloquant* à partir de code "
"asynchrone, cela bloquerait la boucle événementielle (ou plus probablement "
"Django le remarquera et générera l'exception ``SynchronousOnlyOperation`` "
"pour que ce blocage ne se produise pas)."

msgid ""
"Fortunately, you can do many queries using Django's asynchronous query APIs. "
"Every method that might block - such as ``get()`` or ``delete()`` - has an "
"asynchronous variant (``aget()`` or ``adelete()``), and when you iterate "
"over results, you can use asynchronous iteration (``async for``) instead."
msgstr ""
"Heureusement, il est possible de faire de nombreuses requêtes en utilisant "
"les API de requêtes asynchrones de Django. Toute méthode susceptible de "
"bloquer, telle que ``get()`` ou ``delete()``, possède une variante "
"asynchrone (``aget()`` ou ``adelete()``), et quand vous passez en boucle sur "
"les résultats, vous pouvez alors utiliser l'itération asynchrone (``async "
"for``)."

msgid "Query iteration"
msgstr "Requêtes et itération"

msgid ""
"The default way of iterating over a query - with ``for`` - will result in a "
"blocking database query behind the scenes as Django loads the results at "
"iteration time. To fix this, you can swap to ``async for``::"
msgstr ""
"La manière par défaut de passer en boucle sur une requête - avec ``for`` - "
"aboutit à une requête de base de données bloquante en arrière-plan du moment "
"que Django charge les résultats au moment de l'itération. Pour corriger "
"cela, vous pouvez exploiter ``async for``::"

msgid ""
"Be aware that you also can't do other things that might iterate over the "
"queryset, such as wrapping ``list()`` around it to force its evaluation (you "
"can use ``async for`` in a comprehension, if you want it)."
msgstr ""
"Soyez bien conscient que vous ne pouvez pas non plus exécuter d'autres "
"opérations qui aboutiraient à une itération du jeu de requête, comme par "
"exemple le placer dans un appel à ``list()`` pour forcer son évaluation "
"(vous pouvez cependant utiliser ``async for`` dans une compréhension de "
"liste si vous le souhaitez)."

msgid ""
"Because ``QuerySet`` methods like ``filter()`` and ``exclude()`` do not "
"actually run the query - they set up the queryset to run when it's iterated "
"over - you can use those freely in asynchronous code. For a guide to which "
"methods can keep being used like this, and which have asynchronous versions, "
"read the next section."
msgstr ""
"Comme les méthodes de ``QuerySet`` telles que``filter()`` ou ``exclude()`` "
"n'exécutent pas réellement de requête (elles préparent le jeu de requête à "
"s'exécuter au moment de l'itération), vous pouvez les utiliser sans crainte "
"dans du code asynchrone. Pour savoir quelles méthodes peuvent continuer à "
"être utilisées telles quelles, et quelles sont celles qui possèdent une "
"version asynchrone, lisez la section suivante."

msgid "``QuerySet`` and manager methods"
msgstr "``QuerySet`` et méthodes de gestionnaire"

msgid ""
"Some methods on managers and querysets - like ``get()`` and ``first()`` - "
"force execution of the queryset and are blocking. Some, like ``filter()`` "
"and ``exclude()``, don't force execution and so are safe to run from "
"asynchronous code. But how are you supposed to tell the difference?"
msgstr ""
"Certaines méthodes de gestionnaires et de jeux de requêtes, comme ``get()`` "
"et ``first()``, forcent l'exécution immédiate de la requête et sont "
"bloquantes. D'autres, comme ``filter()`` et ``exclude()``, ne forcent pas "
"d'exécution et peuvent donc être utilisées à partir de code asynchrone sans "
"problème. Mais comment pouvez-vous faire cette distinction ? "

msgid ""
"While you could poke around and see if there is an ``a``-prefixed version of "
"the method (for example, we have ``aget()`` but not ``afilter()``), there is "
"a more logical way - look up what kind of method it is in the :doc:`QuerySet "
"reference </ref/models/querysets>`."
msgstr ""
"Bien qu'il soit possible de faire des recherches pour savoir s'il existe une "
"version préfixée par ``a`` de ces méthodes (par exemple, ``aget`` existe, "
"mais pas ``afilter()``), il existe une façon plus logique : examinez de "
"quelle sorte de méthode il s'agit dans la  :doc:`référence de QuerySet </ref/"
"models/querysets>`."

msgid ""
"In there, you'll find the methods on QuerySets grouped into two sections:"
msgstr ""
"Dans cette référence, vous trouverez les méthodes de ``QuerySet`` classées "
"en deux catégories :"

msgid ""
"*Methods that return new querysets*: These are the non-blocking ones, and "
"don't have asynchronous versions. You're free to use these in any situation, "
"though read the notes on ``defer()`` and ``only()`` before you use them."
msgstr ""
"*Les méthodes qui renvoient de nouveaux jeux de requête*: celles-ci sont non "
"bloquantes et ne possèdent pas de version asynchrone. Vous pouvez les "
"utiliser librement dans toute situation, bien que pour ``defer()`` et "
"``only()``, il est recommandé de lire les notes à leur sujet avant de les "
"utiliser."

msgid ""
"*Methods that do not return querysets*: These are the blocking ones, and "
"have asynchronous versions - the asynchronous name for each is noted in its "
"documentation, though our standard pattern is to add an ``a`` prefix."
msgstr ""
"*Les méthodes qui ne renvoient pas de nouveaux jeux de requête*: celles-ci "
"sont bloquantes et possèdent une version asynchrone. Le nom de la version "
"asynchrone est indiqué dans leur documentation, même si le modèle standard "
"est d'ajouter un préfixe ``a``."

msgid ""
"Using this distinction, you can work out when you need to use asynchronous "
"versions, and when you don't. For example, here's a valid asynchronous "
"query::"
msgstr ""
"Avec cette distinction, vous pouvez savoir quand vous devez utiliser les "
"versions asynchrones et quand ce n'est pas indiqué. Par exemple, voici une "
"requête asynchrone valable ::"

msgid ""
"``filter()`` returns a queryset, and so it's fine to keep chaining it inside "
"an asynchronous environment, whereas ``first()`` evaluates and returns a "
"model instance - thus, we change to ``afirst()``, and use ``await`` at the "
"front of the whole expression in order to call it in an asynchronous-"
"friendly way."
msgstr ""
"``filter()`` renvoie un jeu de requête et peut donc bien être utilisée dans "
"un environnement asynchrone, alors que ``first()`` est immédiatement évaluée "
"et renvoie une instance de modèle. Ainsi, nous la modifions en ``afirst()`` "
"et utilisons ``await`` en préambule de toute l'expression afin de l'appeler "
"d'une manière adéquate pour l'asynchrone."

msgid ""
"If you forget to put the ``await`` part in, you may see errors like "
"*\"coroutine object has no attribute x\"* or *\"<coroutine …>\"* strings in "
"place of your model instances. If you ever see these, you are missing an "
"``await`` somewhere to turn that coroutine into a real value."
msgstr ""
"Si vous oubliez le mot-clé ``await``, vous pourriez voir des erreurs du "
"genre *« coroutine object has no attribute x »* ou *« <coroutine …> »* au "
"lieu de vos instances de modèle. Lorsque vous voyez ces erreurs, c'est qu'il "
"manque un ``await`` quelque part pour transformer la coroutine en une valeur "
"réelle."

msgid "Transactions"
msgstr "Transactions"

msgid ""
"Transactions are **not** currently supported with asynchronous queries and "
"updates. You will find that trying to use one raises "
"``SynchronousOnlyOperation``."
msgstr ""
"Les transactions ne sont actuellement **pas** prises en charge pour les "
"requêtes et mises à jour asynchrones. Si vous tentez de les utiliser quand "
"même, vous obtiendrez des exceptions  ``SynchronousOnlyOperation``."

msgid ""
"If you wish to use a transaction, we suggest you write your ORM code inside "
"a separate, synchronous function and then call that using ``sync_to_async`` "
"- see :doc:`/topics/async` for more."
msgstr ""
"Si vous souhaitez utiliser une transaction, nous suggérons d'écrire le code "
"ORM à l'intérieur d'une fonction synchrone séparée, puis de l'appeler en "
"utilisant ``sync_to_async`` - voir :doc:`/topics/async` pour plus de détails."

msgid "Querying ``JSONField``"
msgstr "Interrogation de ``JSONField``"

msgid ""
"Lookups implementation is different in :class:`~django.db.models.JSONField`, "
"mainly due to the existence of key transformations. To demonstrate, we will "
"use the following example model::"
msgstr ""
"L'implémentation des interrogations est différente pour :class:`~django.db."
"models.JSONField`, principalement en raison de l'existence des "
"transformations de clés. Pour le montrer, nous allons utiliser le modèle "
"d'exemple suivant ::"

msgid "Storing and querying for ``None``"
msgstr "Stockage et requête de ``None``"

msgid ""
"As with other fields, storing ``None`` as the field's value will store it as "
"SQL ``NULL``. While not recommended, it is possible to store JSON scalar "
"``null`` instead of SQL ``NULL`` by using :class:`Value(None, JSONField()) "
"<django.db.models.Value>`."
msgstr ""
"Comme pour les autres champs, le stockage de ``None`` comme valeur de champ "
"enregistre une valeur SQL ``NULL``. Même si ce n'est pas recommandé, il est "
"possible de stocker la valeur scalaire ``null`` de JSON au lieu du ``NULL`` "
"SQL en utilisant :class:`Value(None, JSONField()) <django.db.models.Value>`."

msgid ""
"Whichever of the values is stored, when retrieved from the database, the "
"Python representation of the JSON scalar ``null`` is the same as SQL "
"``NULL``, i.e. ``None``. Therefore, it can be hard to distinguish between "
"them."
msgstr ""
"Quelle que soit la valeur stockée, lorsqu'elle est lue de la base de "
"données, la représentation Python de la valeur scalaire ``null`` de JSON est "
"la même que pour la valeur SQL ``NULL``, c'est-à-dire ``None``. Il peut donc "
"être difficile de faire la distinction entre les deux."

msgid ""
"This only applies to ``None`` as the top-level value of the field. If "
"``None`` is inside a :py:class:`list` or :py:class:`dict`, it will always be "
"interpreted as JSON ``null``."
msgstr ""
"Ceci ne s'applique qu'à ``None`` comme valeur de premier niveau du champ. Si "
"``None`` se trouve à l'intérieur d'une structure :py:class:`list` ou :py:"
"class:`dict`, elle sera toujours interprétée comme un ``null`` de JSON."

msgid ""
"When querying, ``None`` value will always be interpreted as JSON ``null``. "
"To query for SQL ``NULL``, use :lookup:`isnull`:"
msgstr ""
"Lors des requêtes, la valeur ``None`` sera toujours interprétée comme la "
"valeur ``null`` de JSON. Pour savoir si un champ possède la valeur SQL "
"``NULL``, utilisez :lookup:`isnull`:"

msgid ""
"Unless you are sure you wish to work with SQL ``NULL`` values, consider "
"setting ``null=False`` and providing a suitable default for empty values, "
"such as ``default=dict``."
msgstr ""
"Sauf dans le cas où vous souhaitez vraiment travailler avec des valeurs SQL "
"``NULL``, préférez le paramètre ``null=False`` et définissez une valeur par "
"défaut convenable pour les valeurs vides, telle que ``default=dict``."

msgid ""
"Storing JSON scalar ``null`` does not violate :attr:`null=False <django.db."
"models.Field.null>`."
msgstr ""
"Le stockage de la valeur scalaire JSON ``null`` ne viole pas :attr:"
"`null=False <django.db.models.Field.null>`."

msgid "Key, index, and path transforms"
msgstr "Transformations de clé, d'indice et de chemin"

msgid ""
"To query based on a given dictionary key, use that key as the lookup name:"
msgstr ""
"Pour rechercher en fonction d'une clé de dictionnaire donnée, utilisez cette "
"clé comme nom de requête :"

msgid "Multiple keys can be chained together to form a path lookup:"
msgstr ""
"Il est possible d'enchaîner plusieurs clés pour former une recherche de "
"chemin :"

msgid ""
"If the key is an integer, it will be interpreted as an index transform in an "
"array:"
msgstr ""
"Si la clé est un entier, elle sera interprétée comme une transformation "
"d'indice de tableau :"

msgid ""
"If the key you wish to query by clashes with the name of another lookup, use "
"the :lookup:`contains <jsonfield.contains>` lookup instead."
msgstr ""
"Si la clé avec laquelle vous souhaitez rechercher entre en conflit avec le "
"nom d'une recherche existante, utilisez la recherche :lookup:`contains "
"<jsonfield.contains>` à la place."

msgid "To query for missing keys, use the ``isnull`` lookup:"
msgstr ""
"Pour rechercher des clés manquantes, utilisez l'expression de recherche "
"``isnull``:"

msgid ""
"The lookup examples given above implicitly use the :lookup:`exact` lookup. "
"Key, index, and path transforms can also be chained with: :lookup:"
"`icontains`, :lookup:`endswith`, :lookup:`iendswith`, :lookup:`iexact`, :"
"lookup:`regex`, :lookup:`iregex`, :lookup:`startswith`, :lookup:"
"`istartswith`, :lookup:`lt`, :lookup:`lte`, :lookup:`gt`, and :lookup:`gte`, "
"as well as with :ref:`containment-and-key-lookups`."
msgstr ""
"Les exemples de requêtes ci-dessus utilisent implicitement la recherche :"
"lookup:`exact`. Les transformations de clé, d'indice et de chemin peuvent "
"aussi être chaînées avec : :lookup:`icontains`, :lookup:`endswith`, :lookup:"
"`iendswith`, :lookup:`iexact`, :lookup:`regex`, :lookup:`iregex`, :lookup:"
"`startswith`, :lookup:`istartswith`, :lookup:`lt`, :lookup:`lte`, :lookup:"
"`gt` et :lookup:`gte`, tout comme avec :ref:`containment-and-key-lookups`."

msgid "``KT()`` expressions"
msgstr "Expressions ``KT()``"

msgid ""
"Represents the text value of a key, index, or path transform of :class:"
"`~django.db.models.JSONField`. You can use the double underscore notation in "
"``lookup`` to chain dictionary key and index transforms."
msgstr ""
"Représente la valeur textuelle d'une clé, d'un index ou d'une transformation "
"de chemin de :class:`~django.db.models.JSONField`. On peut utiliser la "
"notation du double soulignement dans ``lookup`` pour enchaîner des "
"transformations de clés de dictionnaire ou d'index. "

msgid "For example:"
msgstr "Par exemple :"

msgid ""
"Due to the way in which key-path queries work, :meth:`~django.db.models."
"query.QuerySet.exclude` and :meth:`~django.db.models.query.QuerySet.filter` "
"are not guaranteed to produce exhaustive sets. If you want to include "
"objects that do not have the path, add the ``isnull`` lookup."
msgstr ""
"En raison de la façon dont les requêtes clé-chemin fonctionnent, :meth:"
"`~django.db.models.query.QuerySet.exclude` et :meth:`~django.db.models.query."
"QuerySet.filter` ne garantissent pas la production d'ensembles exhaustifs. "
"Si vous souhaitez inclure les objets pour lesquels le chemin n'existe pas, "
"ajoutez l'expression ``isnull``."

msgid ""
"Since any string could be a key in a JSON object, any lookup other than "
"those listed below will be interpreted as a key lookup. No errors are "
"raised. Be extra careful for typing mistakes, and always check your queries "
"work as you intend."
msgstr ""
"Comme n'importe quelle chaîne peut être une clé d'un objet JSON, toute "
"recherche autre que celles mentionnées ci-dessous sera interprétée comme une "
"recherche par clé. Aucune erreur n'est produite. Faites spécialement "
"attention aux erreurs de frappe et vérifiez systématiquement que vos "
"requêtes fonctionnent correctement."

msgid "MariaDB and Oracle users"
msgstr "Utilisateurs MariaDB et Oracle"

msgid ""
"Using :meth:`~django.db.models.query.QuerySet.order_by` on key, index, or "
"path transforms will sort the objects using the string representation of the "
"values. This is because MariaDB and Oracle Database do not provide a "
"function that converts JSON values into their equivalent SQL values."
msgstr ""
"Quand on utilise :meth:`~django.db.models.query.QuerySet.order_by` sur une "
"transformation de clé, d'indice ou de chemin, le tri des objets se fait sur "
"la représentation textuelle des valeurs. Ceci se produit parce que les bases "
"de données MariaDB et Oracle ne fournissent pas de fonction pour convertir "
"les valeurs JSON en leur valeur SQL équivalente."

msgid "Oracle users"
msgstr "Utilisateurs Oracle"

msgid ""
"On Oracle Database, using ``None`` as the lookup value in an :meth:`~django."
"db.models.query.QuerySet.exclude` query will return objects that do not have "
"``null`` as the value at the given path, including objects that do not have "
"the path. On other database backends, the query will return objects that "
"have the path and the value is not ``null``."
msgstr ""
"Pour les bases de données Oracle, l'utilisation de ``None`` comme valeur de "
"requête dans une requête :meth:`~django.db.models.query.QuerySet.exclude` "
"renvoie des objets qui n'ont pas ``null`` comme valeur sur le chemin "
"indiqué, incluant aussi les objets qui n'ont pas le chemin du tout. Avec les "
"autres moteurs de base de données, la requête renvoie les objets où le "
"chemin indiqué existe et la valeur n'est pas ``null``."

msgid "PostgreSQL users"
msgstr "Utilisateurs de PostgreSQL"

msgid ""
"On PostgreSQL, if only one key or index is used, the SQL operator ``->`` is "
"used. If multiple operators are used then the ``#>`` operator is used."
msgstr ""
"Avec PostgreSQL, si une seule clé ou indice est donnée, l'opérateur SQL ``-"
">`` est utilisé. Si plusieurs opérateurs sont donnés, alors c'est "
"l'opérateur ``#>`` qui est utilisé."

msgid "SQLite users"
msgstr "Utilisateurs de SQLite"

msgid ""
"On SQLite, ``\"true\"``, ``\"false\"``, and ``\"null\"`` string values will "
"always be interpreted as ``True``, ``False``, and JSON ``null`` respectively."
msgstr ""
"Avec SQLite, les valeurs de chaîne ``\"true\"``, ``\"false\"``, and "
"``\"null\"`` sont toujours interprétées respectivement comme ``True``, "
"``False``, et le ``null`` de JSON."

msgid "Containment and key lookups"
msgstr "Requêtes de contenance et de clé"

msgid "``contains``"
msgstr "``contains``"

msgid ""
"The :lookup:`contains` lookup is overridden on ``JSONField``. The returned "
"objects are those where the given ``dict`` of key-value pairs are all "
"contained in the top-level of the field. For example:"
msgstr ""
"La recherche :lookup:`contains` est surchargée pour les champs "
"``JSONField``. Les objets renvoyés sont ceux pour qui le dictionnaire de "
"paires clé-valeur est totalement contenu au premier niveau du champ. Par "
"exemple :"

msgid "Oracle and SQLite"
msgstr "Oracle et SQLite"

msgid "``contains`` is not supported on Oracle and SQLite."
msgstr "``contains`` n'est pas pris en charge avec Oracle et SQLite."

msgid "``contained_by``"
msgstr "``contained_by``"

msgid ""
"This is the inverse of the :lookup:`contains <jsonfield.contains>` lookup - "
"the objects returned will be those where the key-value pairs on the object "
"are a subset of those in the value passed. For example:"
msgstr ""
"Il s'agit de l'inverse de la recherche :lookup:`contains <jsonfield."
"contains>`, les objets renvoyés sont ceux pour qui les paires de clé-valeur "
"forment un sous-ensemble des valeurs transmises. Par exemple :"

msgid "``contained_by`` is not supported on Oracle and SQLite."
msgstr "``contained_by`` n'est pas pris en charge avec Oracle et SQLite."

msgid "``has_key``"
msgstr "``has_key``"

msgid ""
"Returns objects where the given key is in the top-level of the data. For "
"example:"
msgstr ""
"Renvoie les objets où la clé donnée se trouve au premier niveau des données. "
"Par exemple :"

msgid "``has_keys``"
msgstr "``has_keys``"

msgid ""
"Returns objects where all of the given keys are in the top-level of the "
"data. For example:"
msgstr ""
"Renvoie les objets où toutes les clés données se trouvent au premier niveau "
"des données. Par exemple :"

msgid "``has_any_keys``"
msgstr "``has_any_keys``"

msgid ""
"Returns objects where any of the given keys are in the top-level of the "
"data. For example:"
msgstr ""
"Renvoie les objets où au moins une des clés données se trouve au premier "
"niveau des données. Par exemple :"

msgid "Complex lookups with ``Q`` objects"
msgstr "Requêtes complexes avec des objets ``Q``"

msgid ""
"Keyword argument queries -- in :meth:`~django.db.models.query.QuerySet."
"filter`, etc. -- are \"AND\"ed together. If you need to execute more complex "
"queries (for example, queries with ``OR`` statements), you can use :class:`Q "
"objects <django.db.models.Q>`."
msgstr ""
"Les requêtes à paramètres nommés (dans :meth:`~django.db.models.query."
"QuerySet.filter`, etc.) sont combinées par ``AND`` (ET). Si vous avez besoin "
"d'exécuter des requêtes plus complexes (par exemple des requêtes contenant "
"des instruction avec ``OR`` (OU)), vous pouvez utiliser des :class:`objets Q "
"<django.db.models.Q>`."

msgid ""
"A :class:`Q object <django.db.models.Q>` (``django.db.models.Q``) is an "
"object used to encapsulate a collection of keyword arguments. These keyword "
"arguments are specified as in \"Field lookups\" above."
msgstr ""
"Un :class:`objet Q <django.db.models.Q>` (``django.db.models.Q``) est un "
"objet utilisé pour englober plusieurs paramètre nommés. Ces paramètre nommés "
"sont indiqués comme pour les « Recherches dans les champs » ci-dessus."

msgid "For example, this ``Q`` object encapsulates a single ``LIKE`` query::"
msgstr "Par exemple, cet objet ``Q`` représente une seule requête ``LIKE``::"

msgid ""
"``Q`` objects can be combined using the ``&``, ``|``, and ``^`` operators. "
"When an operator is used on two ``Q`` objects, it yields a new ``Q`` object."
msgstr ""
"Les objets ``Q`` peuvent être combinés à l'aide des opérateurs ``&``, ``|`` "
"et ``^``. Lorsqu'un opérateur est utilisé avec deux objets ``Q``, cela "
"produit un nouvel objet ``Q``."

msgid ""
"For example, this statement yields a single ``Q`` object that represents the "
"\"OR\" of two ``\"question__startswith\"`` queries::"
msgstr ""
"Par exemple, cette ligne produit un seul objet ``Q`` représentant la "
"combinaison par « OR » de deux requêtes ``\"question__startswith\"``::"

msgid "This is equivalent to the following SQL ``WHERE`` clause:"
msgstr "C'est équivalent à la clause SQL ``WHERE`` ci-dessous :"

msgid ""
"You can compose statements of arbitrary complexity by combining ``Q`` "
"objects with the ``&``, ``|``, and ``^`` operators and use parenthetical "
"grouping. Also, ``Q`` objects can be negated using the ``~`` operator, "
"allowing for combined lookups that combine both a normal query and a negated "
"(``NOT``) query::"
msgstr ""
"Vous pouvez composer des instructions de complexité arbitraire en combinant "
"des objets ``Q`` avec les opérateurs ``&``, ``|`` et ``^`` et en les "
"groupant par des parenthèses. De même, les objets ``Q`` peuvent être "
"inversés par l'opérateur de négation ``~``, permettant à des requêtes "
"combinées d'utiliser à la fois des requêtes normales et des requêtes "
"inversées (``NOT``) ::"

msgid ""
"Each lookup function that takes keyword-arguments (e.g. :meth:`~django.db."
"models.query.QuerySet.filter`, :meth:`~django.db.models.query.QuerySet."
"exclude`, :meth:`~django.db.models.query.QuerySet.get`) can also be passed "
"one or more ``Q`` objects as positional (not-named) arguments. If you "
"provide multiple ``Q`` object arguments to a lookup function, the arguments "
"will be \"AND\"ed together. For example::"
msgstr ""
"Chaque fonction de recherche acceptant des paramètres nommés (par ex. :meth:"
"`~django.db.models.query.QuerySet.filter`, :meth:`~django.db.models.query."
"QuerySet.exclude`, :meth:`~django.db.models.query.QuerySet.get`) peut aussi "
"recevoir un ou plusieurs objets ``Q`` comme paramètre positionnel (non "
"nommé). Si vous indiquez plusieurs objets ``Q`` comme paramètres d'une "
"fonction de recherche, les paramètres seront combinés avec « AND ». Par "
"exemple ::"

msgid "... roughly translates into the SQL:"
msgstr "... se traduit grossièrement en SQL par :"

msgid ""
"Lookup functions can mix the use of ``Q`` objects and keyword arguments. All "
"arguments provided to a lookup function (be they keyword arguments or ``Q`` "
"objects) are \"AND\"ed together. However, if a ``Q`` object is provided, it "
"must precede the definition of any keyword arguments. For example::"
msgstr ""
"Les fonctions de recherche peuvent mélanger l'utilisation d'objets ``Q`` et "
"de paramètres nommés. Tous les paramètres fournis à une fonction de "
"recherche (que ce soit des paramètres nommés ou des objets ``Q``) sont "
"combinés par l'opérateur « AND ». Cependant, si un objet ``Q`` est fourni, "
"il doit précéder toute définition de paramètre nommé. Par exemple ::"

msgid "... would be a valid query, equivalent to the previous example; but::"
msgstr ""
"... correspond à une requête valable, équivalente à l'exemple précédent ; "
"mais ::"

msgid "... would not be valid."
msgstr "... n'est pas correct."

msgid ""
"The :source:`OR lookups examples <tests/or_lookups/tests.py>` in Django's "
"unit tests show some possible uses of ``Q``."
msgstr ""
"Les :source:`exemples de requêtes OR <tests/or_lookups/tests.py>` dans les "
"tests unitaires de Django montrent quelques utilisations possibles de ``Q``."

msgid "Comparing objects"
msgstr "Comparaison d'objets"

msgid ""
"To compare two model instances, use the standard Python comparison operator, "
"the double equals sign: ``==``. Behind the scenes, that compares the primary "
"key values of two models."
msgstr ""
"Pour comparer deux instances de modèle, utilisez l'opérateur de comparaison "
"standard de Python, le double signe égal : ``==``. En arrière-plan, ce sont "
"les valeurs clés primaires des deux modèles qui sont comparées."

msgid ""
"Using the ``Entry`` example above, the following two statements are "
"equivalent:"
msgstr ""
"En utilisant l'exemple ``Entry`` ci-dessus, les deux instructions suivantes "
"sont équivalentes :"

msgid ""
"If a model's primary key isn't called ``id``, no problem. Comparisons will "
"always use the primary key, whatever it's called. For example, if a model's "
"primary key field is called ``name``, these two statements are equivalent:"
msgstr ""
"Si la clé primaire d'un modèle ne s'appelle pas ``id``, aucun problème. Les "
"comparaisons utilisent toujours la clé primaire, quel que soit son nom. Par "
"exemple, si un champ clé primaire d'un modèle s'appelle ``name``, ces deux "
"lignes sont équivalentes :"

msgid "Deleting objects"
msgstr "Suppression d'objets"

msgid ""
"The delete method, conveniently, is named :meth:`~django.db.models.Model."
"delete`. This method immediately deletes the object and returns the number "
"of objects deleted and a dictionary with the number of deletions per object "
"type. Example:"
msgstr ""
"La méthode de suppression se nomme :meth:`~django.db.models.Model.delete`. "
"Cette méthode supprime immédiatement l'objet et renvoie le nombre d'objets "
"supprimés ainsi qu'un dictionnaire avec le nombre de suppressions par type "
"d'objet. Exemple :"

msgid ""
"You can also delete objects in bulk. Every :class:`~django.db.models.query."
"QuerySet` has a :meth:`~django.db.models.query.QuerySet.delete` method, "
"which deletes all members of that :class:`~django.db.models.query.QuerySet`."
msgstr ""
"Il est aussi possible de supprimer des objets groupés. Chaque :class:"
"`~django.db.models.query.QuerySet` comporte une méthode :meth:`~django.db."
"models.query.QuerySet.delete` qui supprime tous les objets contenus dans "
"l'objet :class:`~django.db.models.query.QuerySet`."

msgid ""
"For example, this deletes all ``Entry`` objects with a ``pub_date`` year of "
"2005:"
msgstr ""
"Par exemple, cette commande supprime tous les objets ``Entry`` dont l'année "
"de ``pub_date`` est 2005 :"

msgid ""
"Keep in mind that this will, whenever possible, be executed purely in SQL, "
"and so the ``delete()`` methods of individual object instances will not "
"necessarily be called during the process. If you've provided a custom "
"``delete()`` method on a model class and want to ensure that it is called, "
"you will need to \"manually\" delete instances of that model (e.g., by "
"iterating over a :class:`~django.db.models.query.QuerySet` and calling "
"``delete()`` on each object individually) rather than using the bulk :meth:"
"`~django.db.models.query.QuerySet.delete` method of a :class:`~django.db."
"models.query.QuerySet`."
msgstr ""
"Sachez toutefois que cette opération sera autant que possible exécutée "
"purement au niveau SQL, ce qui signifie que les méthodes ``delete()`` des "
"instances individuelles ne seront pas forcément appelées durant le "
"processus. Si vous avez écrit une méthode ``delete()`` personnalisée dans "
"une classe de modèle et que vous voulez être certain qu'elle soit appelée, "
"vous devrez supprimer « manuellement » les instances de ce modèle (par ex. "
"en itérant sur un objet :class:`~django.db.models.query.QuerySet` et en "
"appelant explicitement ``delete()`` sur chaque instance) plutôt que "
"d'employer la méthode de suppression groupée :meth:`~django.db.models.query."
"QuerySet.delete` de l'objet :class:`~django.db.models.query.QuerySet`."

msgid ""
"When Django deletes an object, by default it emulates the behavior of the "
"SQL constraint ``ON DELETE CASCADE`` -- in other words, any objects which "
"had foreign keys pointing at the object to be deleted will be deleted along "
"with it. For example::"
msgstr ""
"Lorsque Django supprime un objet, il émule par défaut le comportement de la "
"contrainte SQL ``ON DELETE CASCADE``. En d'autres termes, tout objet "
"possédant des clés étrangères vers l'objet en cours de suppression seront "
"également supprimés. Par exemple ::"

msgid ""
"This cascade behavior is customizable via the :attr:`~django.db.models."
"ForeignKey.on_delete` argument to the :class:`~django.db.models.ForeignKey`."
msgstr ""
"Ce comportement en cascade peut être personnalisé au moyen du paramètre :"
"attr:`~django.db.models.ForeignKey.on_delete` de la classe :class:`~django."
"db.models.ForeignKey`."

msgid ""
"Note that :meth:`~django.db.models.query.QuerySet.delete` is the only :class:"
"`~django.db.models.query.QuerySet` method that is not exposed on a :class:"
"`~django.db.models.Manager` itself. This is a safety mechanism to prevent "
"you from accidentally requesting ``Entry.objects.delete()``, and deleting "
"*all* the entries. If you *do* want to delete all the objects, then you have "
"to explicitly request a complete query set::"
msgstr ""
"Notez que :meth:`~django.db.models.query.QuerySet.delete` est la seule "
"méthode de :class:`~django.db.models.query.QuerySet` qui n'est pas exposée "
"sur un objet :class:`~django.db.models.Manager`. Il s'agit d'un mécanisme de "
"sécurité pour vous empêcher d'exécuter accidentellement ``Entry.objects."
"delete()`` ce qui supprimerait *toutes* les lignes. Si vous souhaitez "
"*vraiment* supprimer tous les objets, vous devez alors indiquer "
"explicitement une requête contenant tous les objets ::"

msgid "Copying model instances"
msgstr "Copie des instances de modèles"

msgid ""
"Although there is no built-in method for copying model instances, it is "
"possible to easily create new instance with all fields' values copied. In "
"the simplest case, you can set ``pk`` to ``None`` and :attr:`_state.adding "
"<django.db.models.Model._state>` to ``True``. Using our blog example::"
msgstr ""
"Même s'il n'existe pas de méthode intégrée pour la copie d'instances de "
"modèles, il est possible de créer facilement de nouvelles instances en "
"copiant toutes les valeurs des champs d'une autre instance. Dans le cas le "
"plus simple, on peut définir ``pk`` à ``None`` et :attr:`_state.adding "
"<django.db.models.Model._state>` to ``True``. En utilisant notre exemple de "
"blogue ::"

msgid ""
"Things get more complicated if you use inheritance. Consider a subclass of "
"``Blog``::"
msgstr ""
"Les choses se compliquent lorsqu'il y a de l'héritage. Considérons une sous-"
"classe de ``Blog``::"

msgid ""
"Due to how inheritance works, you have to set both ``pk`` and ``id`` to "
"``None``, and ``_state.adding`` to ``True``::"
msgstr ""
"En raison du fonctionnement de l'héritage, vous devez définir à ``None`` à "
"la fois ``pk`` et ``id``, ainsi que ``_state.adding`` à ``True``::"

msgid ""
"This process doesn't copy relations that aren't part of the model's database "
"table. For example, ``Entry`` has a ``ManyToManyField`` to ``Author``. After "
"duplicating an entry, you must set the many-to-many relations for the new "
"entry::"
msgstr ""
"Ce processus ne copie pas les relations ne faisant pas partie de la table de "
"base de données du modèle. Par exemple, ``Entry`` possède un champ "
"``ManyToManyField`` vers ``Author``. Après avoir dupliqué un objet "
"« entry », vous devez définir les relations plusieurs-à-plusieurs vers le "
"nouvel objet ::"

msgid ""
"For a ``OneToOneField``, you must duplicate the related object and assign it "
"to the new object's field to avoid violating the one-to-one unique "
"constraint. For example, assuming ``entry`` is already duplicated as above::"
msgstr ""
"Pour un champ ``OneToOneField``, vous devez dupliquer l'objet lié et "
"l'attribuer au champ correspondant du nouvel objet pour éviter la rupture de "
"la contrainte unique du champ un-à-un. Par exemple, en supposant que "
"``entry`` a déjà été dupliqué comme ci-dessus ::"

msgid "Updating multiple objects at once"
msgstr "Mise à jour simultanée de plusieurs objets"

msgid ""
"Sometimes you want to set a field to a particular value for all the objects "
"in a :class:`~django.db.models.query.QuerySet`. You can do this with the :"
"meth:`~django.db.models.query.QuerySet.update` method. For example::"
msgstr ""
"Il peut arriver que vous souhaitiez définir la valeur d'un certain champ "
"pour tous les objets d'un :class:`~django.db.models.query.QuerySet`. C'est "
"faisable à l'aide de la méthode :meth:`~django.db.models.query.QuerySet."
"update`. Par exemple ::"

msgid ""
"You can only set non-relation fields and :class:`~django.db.models."
"ForeignKey` fields using this method. To update a non-relation field, "
"provide the new value as a constant. To update :class:`~django.db.models."
"ForeignKey` fields, set the new value to be the new model instance you want "
"to point to. For example:"
msgstr ""
"Seuls les champs qui ne sont pas des relations et les champs :class:`~django."
"db.models.ForeignKey` peuvent être mis à jour avec cette méthode. Pour "
"mettre à jour un champ qui ne représente pas une relation, indiquez la "
"nouvelle valeur sous forme de constante. Pour mettre à jour un champ :class:"
"`~django.db.models.ForeignKey`, indiquez la nouvelle valeur sous forme d'une "
"instance de modèle vers laquelle le champ devra pointer. Par exemple :"

msgid ""
"The ``update()`` method is applied instantly and returns the number of rows "
"matched by the query (which may not be equal to the number of rows updated "
"if some rows already have the new value). The only restriction on the :class:"
"`~django.db.models.query.QuerySet` being updated is that it can only access "
"one database table: the model's main table. You can filter based on related "
"fields, but you can only update columns in the model's main table. Example:"
msgstr ""
"La méthode ``update()`` est appliquée immédiatement et renvoie le nombre de "
"lignes correspondant à la requête (ce qui ne correspond pas toujours au "
"nombre de lignes mises à jour si certaines lignes ont déjà la bonne valeur). "
"La seule restriction sur l'objet :class:`~django.db.models.query.QuerySet` "
"mis à jour est qu'il ne peut accéder qu'à une seule table de base de "
"données, la table principale du modèle. Vous pouvez filtrer selon des champs "
"liés, mais vous ne pouvez mettre à jour des colonnes que dans la table "
"principale du modèle. Exemple :"

msgid ""
"Be aware that the ``update()`` method is converted directly to an SQL "
"statement. It is a bulk operation for direct updates. It doesn't run any :"
"meth:`~django.db.models.Model.save` methods on your models, or emit the "
"``pre_save`` or ``post_save`` signals (which are a consequence of calling :"
"meth:`~django.db.models.Model.save`), or honor the :attr:`~django.db.models."
"DateField.auto_now` field option. If you want to save every item in a :class:"
"`~django.db.models.query.QuerySet` and make sure that the :meth:`~django.db."
"models.Model.save` method is called on each instance, you don't need any "
"special function to handle that. Loop over them and call :meth:`~django.db."
"models.Model.save`::"
msgstr ""
"Soyez conscient que la méthode ``update()`` est directement convertie en "
"instruction SQL. Il s'agit d'une opération groupée pour des mises à jour "
"directes. Elle ne fait appel à aucune méthode :meth:`~django.db.models.Model."
"save` des modèles, n'émet aucun signal ``pre_save`` ou ``post_save`` (qui "
"sont des conséquences de l'appel à :meth:`~django.db.models.Model.save`) et "
"ne respecte pas l'option de champ :attr:`~django.db.models.DateField."
"auto_now`. Si vous souhaitez enregistrer chaque élément d'un objet :class:"
"`~django.db.models.query.QuerySet` tout en garantissant que la méthode :meth:"
"`~django.db.models.Model.save` de chaque instance est appelée, vous n'avez "
"pas besoin d'une fonction particulière pour cela. Effectuez une boucle et "
"appelez :meth:`~django.db.models.Model.save` pour chaque objet ::"

msgid ""
"Calls to update can also use :class:`F expressions <django.db.models.F>` to "
"update one field based on the value of another field in the model. This is "
"especially useful for incrementing counters based upon their current value. "
"For example, to increment the pingback count for every entry in the blog:"
msgstr ""
"Les appels à ``update`` peuvent aussi utiliser les :class:`expressions F "
"<django.db.models.F>` pour mettre à jour un champ en fonction de la valeur "
"d'un autre champ du modèle. C'est particulièrement utile pour incrémenter "
"des compteurs en fonction de leur valeur actuelle. Par exemple, pour "
"incrémenter le nombre de pings de chaque article d'un blogue :"

msgid ""
"However, unlike ``F()`` objects in filter and exclude clauses, you can't "
"introduce joins when you use ``F()`` objects in an update -- you can only "
"reference fields local to the model being updated. If you attempt to "
"introduce a join with an ``F()`` object, a ``FieldError`` will be raised:"
msgstr ""
"Cependant, au contraire des objets ``F()`` dans les clauses ``filter()`` et "
"``exclude()``, il n'est pas autorisé d'introduire des jointures lors de "
"l'utilisation de ``F()`` dans des mises à jour ; seuls des champs du modèle "
"en cours de mise à jour peuvent être référencés. Si vous essayez "
"d'introduire une jointure avec un objet ``F()``, une erreur ``FieldError`` "
"sera générée :"

msgid "Related objects"
msgstr "Objets liés"

msgid ""
"When you define a relationship in a model (i.e., a :class:`~django.db.models."
"ForeignKey`, :class:`~django.db.models.OneToOneField`, or :class:`~django.db."
"models.ManyToManyField`), instances of that model will have a convenient API "
"to access the related object(s)."
msgstr ""
"Lorsque vous définissez une relation dans un modèle (par ex. un champ :class:"
"`~django.db.models.ForeignKey`, :class:`~django.db.models.OneToOneField` ou :"
"class:`~django.db.models.ManyToManyField`), les instances de ce modèle "
"disposeront d'une API agréable pour accéder aux objets liés."

msgid ""
"Using the models at the top of this page, for example, an ``Entry`` object "
"``e`` can get its associated ``Blog`` object by accessing the ``blog`` "
"attribute: ``e.blog``."
msgstr ""
"En utilisant les modèles définis au sommet de cette page, par exemple, un "
"objet ``Entry`` ``e`` peut atteindre son objet ``Blog`` lié en accédant à "
"l'attribut ``blog``: ``e.blog``."

msgid ""
"(Behind the scenes, this functionality is implemented by Python :doc:"
"`descriptors <python:howto/descriptor>`. This shouldn't really matter to "
"you, but we point it out here for the curious.)"
msgstr ""
"(En arrière-plan, cette fonctionnalité est implémentée par des :doc:"
"`descripteurs <python:howto/descriptor>` Python. Cela n'a pas de conséquence "
"particulière, mais nous le mentionnons pour les curieux)."

msgid ""
"Django also creates API accessors for the \"other\" side of the relationship "
"-- the link from the related model to the model that defines the "
"relationship. For example, a ``Blog`` object ``b`` has access to a list of "
"all related ``Entry`` objects via the ``entry_set`` attribute: ``b.entry_set."
"all()``."
msgstr ""
"Django crée également une API d'accession par l'autre côté de la relation, "
"le lien depuis le modèle lié au modèle qui définit la relation. Par exemple, "
"un objet ``Blog`` ``b`` peut accéder à une liste de tous les objets "
"``Entry`` liés par l'attribut ``entry_set``: ``b.entry_set.all()``."

msgid ""
"All examples in this section use the sample ``Blog``, ``Author`` and "
"``Entry`` models defined at the top of this page."
msgstr ""
"Tous les exemples de cette section utilisent les modèles d'exemple ``Blog``, "
"``Author`` et ``Entry`` définis au sommet de cette page."

msgid "One-to-many relationships"
msgstr "Relations un-à-plusieurs"

msgid "Forward"
msgstr "Sens « descendant »"

msgid ""
"If a model has a :class:`~django.db.models.ForeignKey`, instances of that "
"model will have access to the related (foreign) object via an attribute of "
"the model."
msgstr ""
"Si un modèle possède un champ :class:`~django.db.models.ForeignKey`, les "
"instances de ce modèle ont accès à l'objet lié par un attribut du modèle."

msgid ""
"You can get and set via a foreign-key attribute. As you may expect, changes "
"to the foreign key aren't saved to the database until you call :meth:"
"`~django.db.models.Model.save`. Example:"
msgstr ""
"Un attribut d'objet lié (clé étrangère) est accessible en lecture et en "
"écriture. Comme l'on peut s'y attendre, les modifications de la clé "
"étrangère ne sont pas enregistrées en base de données tant que :meth:"
"`~django.db.models.Model.save` n'a pas été appelée. Exemple :"

msgid ""
"If a :class:`~django.db.models.ForeignKey` field has ``null=True`` set (i."
"e., it allows ``NULL`` values), you can assign ``None`` to remove the "
"relation. Example:"
msgstr ""
"Si un champ :class:`~django.db.models.ForeignKey` possède ``null=True`` "
"(c'est-à-dire qu'il autorise les valeurs ``NULL``), vous pouvez lui "
"attribuer ``None`` pour supprimer la relation. Exemple :"

msgid ""
"Forward access to one-to-many relationships is cached the first time the "
"related object is accessed. Subsequent accesses to the foreign key on the "
"same object instance are cached. Example:"
msgstr ""
"L'accès « descendant » aux relations un-à-plusieurs est mis en cache lors du "
"premier accès à l'objet lié. Les accès suivants à la clé étrangère depuis la "
"même instance d'objet se font à partir du cache. Exemple :"

msgid ""
"Note that the :meth:`~django.db.models.query.QuerySet.select_related` :class:"
"`~django.db.models.query.QuerySet` method recursively prepopulates the cache "
"of all one-to-many relationships ahead of time. Example:"
msgstr ""
"Notez que la méthode :meth:`~django.db.models.query.QuerySet.select_related` "
"de :class:`~django.db.models.query.QuerySet` peuple de manière récursive et "
"anticipée le cache de toutes les relations un-à-plusieurs. Exemple :"

msgid "Following relationships \"backward\""
msgstr "Accès aux relations inverses"

msgid ""
"If a model has a :class:`~django.db.models.ForeignKey`, instances of the "
"foreign-key model will have access to a :class:`~django.db.models.Manager` "
"that returns all instances of the first model. By default, this :class:"
"`~django.db.models.Manager` is named ``FOO_set``, where ``FOO`` is the "
"source model name, lowercased. This :class:`~django.db.models.Manager` "
"returns ``QuerySets``, which can be filtered and manipulated as described in "
"the \"Retrieving objects\" section above."
msgstr ""
"Si un modèle possède un champ :class:`~django.db.models.ForeignKey`, les "
"instances du modèle de clé étrangère auront accès à un :class:`~django.db."
"models.Manager` renvoyant toutes les instances du premier modèle. Par "
"défaut, ce :class:`~django.db.models.Manager` se nomme ``XXX_set``, où "
"``XXX`` est le nom du modèle source en minuscules. Ce :class:`~django.db."
"models.Manager` renvoie des objets ``QuerySet``, qui peuvent être filtrés et "
"manipulés comme le décrit la section « Sélection d'objets » ci-dessus."

msgid ""
"You can override the ``FOO_set`` name by setting the :attr:`~django.db."
"models.ForeignKey.related_name` parameter in the :class:`~django.db.models."
"ForeignKey` definition. For example, if the ``Entry`` model was altered to "
"``blog = ForeignKey(Blog, on_delete=models.CASCADE, "
"related_name='entries')``, the above example code would look like this:"
msgstr ""
"Il est possible de surcharger le nom ``XXX_set`` en définissant le "
"paramètre :attr:`~django.db.models.ForeignKey.related_name` dans la "
"définition du champ :class:`~django.db.models.ForeignKey`. Par exemple, si "
"le modèle ``Entry`` était modifié en définissant ``blog = ForeignKey(Blog, "
"on_delete=models.CASCADE, related_name='entries')``, l'exemple ci-dessus "
"aurait été écrit comme ceci :"

msgid "Using a custom reverse manager"
msgstr "Utilisation d'un gestionnaire inverse personnalisé"

msgid ""
"By default the :class:`~django.db.models.fields.related.RelatedManager` used "
"for reverse relations is a subclass of the :ref:`default manager <manager-"
"names>` for that model. If you would like to specify a different manager for "
"a given query you can use the following syntax::"
msgstr ""
"Par défaut, le gestionnaire :class:`~django.db.models.fields.related."
"RelatedManager` utilisé pour les relations inverses est une sous-classe du :"
"ref:`gestionnaire par défaut <manager-names>` du modèle. Si vous aimeriez "
"indiquer un autre gestionnaire pour une requête précise, vous pouvez "
"utiliser la syntaxe suivante ::"

msgid ""
"If ``EntryManager`` performed default filtering in its ``get_queryset()`` "
"method, that filtering would apply to the ``all()`` call."
msgstr ""
"Si ``EntryManager`` effectuait du filtrage par défaut dans sa méthode "
"``get_queryset()``, ce filtrage s'appliquerait à la méthode ``all()``."

msgid ""
"Specifying a custom reverse manager also enables you to call its custom "
"methods::"
msgstr ""
"En indiquant un gestionnaire inverse personnalisé, cela permet aussi "
"d'appeler ses méthodes personnalisées ::"

msgid "Interaction with prefetching"
msgstr "Interaction avec le préchargement (prefetch)"

msgid ""
"When calling :meth:`~django.db.models.query.QuerySet.prefetch_related` with "
"a reverse relation, the default manager will be used. If you want to "
"prefetch related objects using a custom reverse manager, use :class:"
"`Prefetch() <django.db.models.Prefetch>`. For example::"
msgstr ""
"Lors de l'appel à :meth:`~django.db.models.query.QuerySet.prefetch_related` "
"avec une relation inverse, le gestionnaire par défaut sera utilisé. Si vous "
"souhaitez précharger des objets liés en utilisant un gestionnaire inverse "
"personnalisé, utilisez :class:`Prefetch() <django.db.models.Prefetch>`. Par "
"exemple ::"

msgid "Additional methods to handle related objects"
msgstr "Méthodes supplémentaires pour manipuler des objets liés"

msgid ""
"In addition to the :class:`~django.db.models.query.QuerySet` methods defined "
"in \"Retrieving objects\" above, the :class:`~django.db.models.ForeignKey` :"
"class:`~django.db.models.Manager` has additional methods used to handle the "
"set of related objects. A synopsis of each is below, and complete details "
"can be found in the :doc:`related objects reference </ref/models/relations>`."
msgstr ""
"En plus des méthodes :class:`~django.db.models.query.QuerySet` présentées ci-"
"dessus dans « Sélection d'objets », l'objet :class:`~django.db.models."
"Manager` d'une :class:`~django.db.models.ForeignKey` possède des méthodes "
"supplémentaires pour gérer l'ensemble des objets liés. Vous trouverez ci-"
"dessous un résumé de ces méthodes et des détails plus complets peuvent être "
"lus dans la :doc:`référence des objets liés </ref/models/relations>`."

msgid "``add(obj1, obj2, ...)``"
msgstr "``add(obj1, obj2, ...)``"

msgid "Adds the specified model objects to the related object set."
msgstr "Ajoute les objets modèles indiqués à l'ensemble des objets liés."

msgid "``create(**kwargs)``"
msgstr "``create(**kwargs)``"

msgid ""
"Creates a new object, saves it and puts it in the related object set. "
"Returns the newly created object."
msgstr ""
"Crée un nouvel objet, l'enregistre et le place dans l'ensemble des objets "
"liés. Renvoie l'objet nouvellement créé."

msgid "``remove(obj1, obj2, ...)``"
msgstr "``remove(obj1, obj2, ...)``"

msgid "Removes the specified model objects from the related object set."
msgstr "Enlève les objets modèles indiqués de l'ensemble des objets liés."

msgid "``clear()``"
msgstr "``clear()``"

msgid "Removes all objects from the related object set."
msgstr "Enlève tous les objets de l'ensemble des objets liés."

msgid "``set(objs)``"
msgstr "``set(objs)``"

msgid "Replace the set of related objects."
msgstr "Remplace l'ensemble des objets liés."

msgid ""
"To assign the members of a related set, use the ``set()`` method with an "
"iterable of object instances. For example, if ``e1`` and ``e2`` are "
"``Entry`` instances::"
msgstr ""
"Pour définir les membres d'un ensemble d'objets liés, utilisez la méthode "
"``set()`` avec une liste d'instances d'objets. Par exemple, si ``e1`` et "
"``e2`` sont des instances ``Entry``::"

msgid ""
"If the ``clear()`` method is available, any preexisting objects will be "
"removed from the ``entry_set`` before all objects in the iterable (in this "
"case, a list) are added to the set. If the ``clear()`` method is *not* "
"available, all objects in the iterable will be added without removing any "
"existing elements."
msgstr ""
"Si la méthode ``clear()`` est disponible, tout objet pré-existant sera "
"enlevé de ``entry_set`` avant que tous les objets de la séquence itérable "
"(dans ce cas, une liste) soient ajoutés à l'ensemble. Si la méthode "
"``clear()`` *n'est pas* disponible, tous les objets de la séquence itérable "
"sont ajoutés sans que les éléments existants ne soient enlevés."

msgid ""
"Each \"reverse\" operation described in this section has an immediate effect "
"on the database. Every addition, creation and deletion is immediately and "
"automatically saved to the database."
msgstr ""
"Toute opération « inverse » décrite dans cette section prend immédiatement "
"effet au niveau de la base de données. Tout ajout, création ou suppression "
"est immédiatement et automatiquement enregistré dans la base de données."

msgid ""
"Both ends of a many-to-many relationship get automatic API access to the "
"other end. The API works similar to a \"backward\" one-to-many relationship, "
"above."
msgstr ""
"Les deux côtés d'une relation plusieurs-à-plusieurs obtiennent "
"automatiquement l'API d'accès à l'autre côté. L'API fonctionne de manière "
"identique à la relation « inverse » d'une relation un-à-plusieurs décrite ci-"
"dessus."

msgid ""
"One difference is in the attribute naming: The model that defines the :class:"
"`~django.db.models.ManyToManyField` uses the attribute name of that field "
"itself, whereas the \"reverse\" model uses the lowercased model name of the "
"original model, plus ``'_set'`` (just like reverse one-to-many "
"relationships)."
msgstr ""
"Une des différences tient dans le nommage de l'attribut : le modèle qui "
"définit le champ :class:`~django.db.models.ManyToManyField` utilise le nom "
"d'attribut du champ lui-même, alors que le modèle « inverse » utilise le nom "
"de modèle en minuscules du modèle original en y ajoutant ``'_set'`` (tout "
"comme pour les relations un-à-plusieurs inverses)."

msgid "An example makes this easier to understand::"
msgstr "Un exemple va rendre tout ceci plus compréhensible ::"

msgid ""
"Like :class:`~django.db.models.ForeignKey`, :class:`~django.db.models."
"ManyToManyField` can specify :attr:`~django.db.models.ManyToManyField."
"related_name`. In the above example, if the :class:`~django.db.models."
"ManyToManyField` in ``Entry`` had specified ``related_name='entries'``, then "
"each ``Author`` instance would have an ``entries`` attribute instead of "
"``entry_set``."
msgstr ""
"Tout comme pour :class:`~django.db.models.ForeignKey`, il est possible "
"d'indiquer une valeur :attr:`~django.db.models.ManyToManyField.related_name` "
"dans :class:`~django.db.models.ManyToManyField`. Dans l'exemple ci-dessus, "
"si le champ :class:`~django.db.models.ManyToManyField` de ``Entry`` était "
"défini avec ``related_name='entries'``, chaque instance de ``Author`` "
"posséderait un attribut ``entries`` au lieu de ``entry_set``."

msgid ""
"Another difference from one-to-many relationships is that in addition to "
"model instances,  the ``add()``, ``set()``, and ``remove()`` methods on many-"
"to-many relationships accept primary key values. For example, if ``e1`` and "
"``e2`` are ``Entry`` instances, then these ``set()`` calls work identically::"
msgstr ""
"Une autre différence par rapport aux relations un-à-plusieurs est qu'en plus "
"des instances de modèles, les méthodes ``add()``, ``set()`` et ``remove()`` "
"des relations plusieurs-à-plusieurs acceptent des valeurs de clé primaire. "
"Par exemple, si ``e1`` et ``e2`` sont des instances ``Entry``, alors ces "
"appels à ``set()`` fonctionnent de manière identique ::"

msgid ""
"One-to-one relationships are very similar to many-to-one relationships. If "
"you define a :class:`~django.db.models.OneToOneField` on your model, "
"instances of that model will have access to the related object via an "
"attribute of the model."
msgstr ""
"Les relations un-à-un sont très semblables aux relations plusieurs-à-un. Si "
"vous définissez un champ :class:`~django.db.models.OneToOneField` dans votre "
"modèle, les instances de ce modèle auront accès à l'objet lié via un "
"attribut du modèle."

msgid ""
"The difference comes in \"reverse\" queries. The related model in a one-to-"
"one relationship also has access to a :class:`~django.db.models.Manager` "
"object, but that :class:`~django.db.models.Manager` represents a single "
"object, rather than a collection of objects::"
msgstr ""
"La différence survient dans les requêtes « inverses ». Le modèle lié dans "
"une relation un-à-un a aussi accès à un objet :class:`~django.db.models."
"Manager`, mais celui-ci représente un objet unique et non pas une collection "
"d'objets ::"

msgid ""
"If no object has been assigned to this relationship, Django will raise a "
"``DoesNotExist`` exception."
msgstr ""
"Si aucun objet n'a été attribué à cette relation, Django génère une "
"exception ``DoesNotExist``."

msgid ""
"Instances can be assigned to the reverse relationship in the same way as you "
"would assign the forward relationship::"
msgstr ""
"Il est possible d'attribuer des instances à la relation inverse sur le même "
"principe que pour les relations descendantes ::"

msgid "How are the backward relationships possible?"
msgstr "Comment la relation inverse est-elle possible ?"

msgid ""
"Other object-relational mappers require you to define relationships on both "
"sides. The Django developers believe this is a violation of the DRY (Don't "
"Repeat Yourself) principle, so Django only requires you to define the "
"relationship on one end."
msgstr ""
"D'autres interfaces d'abstraction objet-relationnel exigent de définir les "
"relations des deux côtés. Les développeurs Django pensent qu'il s'agit d'une "
"violation du principe DRY (Don't Repeat Yourself, ne pas se répéter), c'est "
"pourquoi Django ne demande de définir la relation que d'un seul côté."

msgid ""
"But how is this possible, given that a model class doesn't know which other "
"model classes are related to it until those other model classes are loaded?"
msgstr ""
"Mais comment est-ce possible, dans la mesure où une classe de modèle ne sait "
"pas quelles autres classes de modèles lui sont liées avant que ces autres "
"classes soient elles-mêmes chargées ?"

msgid ""
"The answer lies in the :data:`app registry <django.apps.apps>`. When Django "
"starts, it imports each application listed in :setting:`INSTALLED_APPS`, and "
"then the ``models`` module inside each application. Whenever a new model "
"class is created, Django adds backward-relationships to any related models. "
"If the related models haven't been imported yet, Django keeps tracks of the "
"relationships and adds them when the related models eventually are imported."
msgstr ""
"La réponse se trouve dans le :data:`registre des applications <django.apps."
"apps>`. Lorsque Django démarre, il importe chaque application figurant dans :"
"setting:`INSTALLED_APPS`, puis le module ``models`` dans chaque application. "
"Chaque fois qu'une nouvelle classe est créée, Django ajoute les relations "
"inverses aux modèles liés. Si les modèles liés n'ont pas encore été "
"importés, Django garde la trace de ces relations et les complète au moment "
"où les modèles concernés sont finalement importés."

msgid ""
"For this reason, it's particularly important that all the models you're "
"using be defined in applications listed in :setting:`INSTALLED_APPS`. "
"Otherwise, backwards relations may not work properly."
msgstr ""
"C'est pour cette raison qu'il est particulièrement important que tous les "
"modèles utilisés soient définis dans des applications qui figurent dans :"
"setting:`INSTALLED_APPS`. Sinon, les relations inverses pourraient ne pas "
"fonctionner correctement."

msgid "Queries over related objects"
msgstr "Les requêtes sur les objets liés"

msgid ""
"Queries involving related objects follow the same rules as queries involving "
"normal value fields. When specifying the value for a query to match, you may "
"use either an object instance itself, or the primary key value for the "
"object."
msgstr ""
"Les requêtes impliquant des objets liés suivent les mêmes règles que les "
"requêtes contenant des valeurs de champs normales. Pour indiquer la valeur à "
"laquelle doit correspondre une requête, vous pouvez utiliser soit une "
"instance de l'objet lui-même, soit la valeur de clé primaire de l'objet."

msgid ""
"For example, if you have a Blog object ``b`` with ``id=5``, the following "
"three queries would be identical::"
msgstr ""
"Par exemple, si vous avez un objet ``Blog`` ``b`` avec ``id=5``, les trois "
"requêtes suivantes sont identiques ::"

msgid "Falling back to raw SQL"
msgstr "Recours au code SQL brut"

msgid ""
"If you find yourself needing to write an SQL query that is too complex for "
"Django's database-mapper to handle, you can fall back on writing SQL by "
"hand. Django has a couple of options for writing raw SQL queries; see :doc:`/"
"topics/db/sql`."
msgstr ""
"Si vous rencontrez le besoin de devoir écrire une requête SQL trop complexe "
"pour l'abstraction de base de données de Django, il peut être nécessaire "
"d'écrire le code SQL à la main. Django offre quelques options pour "
"l'écriture de requêtes SQL brutes ; voir :doc:`/topics/db/sql`."

msgid ""
"Finally, it's important to note that the Django database layer is merely an "
"interface to your database. You can access your database via other tools, "
"programming languages or database frameworks; there's nothing Django-"
"specific about your database."
msgstr ""
"Finalement, il est important de noter que la couche de base de données de "
"Django n'est qu'une interface vers votre base de données. Vous pouvez "
"accéder à votre base de données par d'autres outils, langages de "
"programmation ou environnements de base de données ; il n'y a rien de "
"spécifique à Django en ce qui concerne la base de données."

msgid "Search"
msgstr "Recherche"

msgid ""
"A common task for web applications is to search some data in the database "
"with user input. In a simple case, this could be filtering a list of objects "
"by a category. A more complex use case might require searching with "
"weighting, categorization, highlighting, multiple languages, and so on. This "
"document explains some of the possible use cases and the tools you can use."
msgstr ""
"Un tâche courante des applications Web est de rechercher des données dans la "
"base de données en fonction de la saisie d'utilisateurs. Dans un cas simple, "
"cela peut se limiter à filtrer une liste d'objets par catégorie. Un cas "
"d'utilisation plus complexe pourrait impliquer une recherche avec "
"pondération, catégorisation, mise en évidence, multilingue, etc. Ce document "
"présente certains cas d'utilisation possibles et les outils pouvant être "
"utilisés."

msgid "We'll refer to the same models used in :doc:`/topics/db/queries`."
msgstr ""
"Nous ferons référence aux mêmes modèles que dans :doc:`/topics/db/queries`."

msgid "Use Cases"
msgstr "Cas d'utilisation"

msgid "Standard textual queries"
msgstr "Requêtes textuelles standard"

msgid ""
"Text-based fields have a selection of matching operations. For example, you "
"may wish to allow lookup up an author like so:"
msgstr ""
"Les champs basés sur du texte offrent quelques opérations de correspondance. "
"Par exemple, vous pourriez vouloir permettre de rechercher un auteur comme "
"ceci :"

msgid ""
"This is a very fragile solution as it requires the user to know an exact "
"substring of the author's name. A better approach could be a case-"
"insensitive match (:lookup:`icontains`), but this is only marginally better."
msgstr ""
"Il s'agit d'une solution très fragile car elle exige que l'utilisateur "
"connaisse une sous-chaîne exacte du nom de l'auteur. Une meilleure approche "
"pourrait faire appel à une recherche indépendante de la casse (:lookup:"
"`icontains`), mais ce n'est qu'une petite amélioration."

msgid "A database's more advanced comparison functions"
msgstr "Des fonctions comparatives de base de données plus avancées"

msgid ""
"If you're using PostgreSQL, Django provides :doc:`a selection of database "
"specific tools </ref/contrib/postgres/search>` to allow you to leverage more "
"complex querying options. Other databases have different selections of "
"tools, possibly via plugins or user-defined functions. Django doesn't "
"include any support for them at this time. We'll use some examples from "
"PostgreSQL to demonstrate the kind of functionality databases may have."
msgstr ""
"Si vous utilisez PostgreSQL, Django fournit :doc:`une sélection d'outils "
"spécifiques à cette base de données </ref/contrib/postgres/search>` pour "
"permettre d'exploiter des options de requête plus complexes. D'autres bases "
"de données ont des outils différents, parfois via des greffons ou des "
"fonctions définies par les utilisateurs. Django ne les prend pas en charge "
"pour le moment. Nous utiliserons quelques exemples tirés de PostgreSQL pour "
"démontrer le genre de fonctionnalités que les bases de données peuvent "
"offrir."

msgid "Searching in other databases"
msgstr "Recherche avec d'autres bases de données"

msgid ""
"All of the searching tools provided by :mod:`django.contrib.postgres` are "
"constructed entirely on public APIs such as :doc:`custom lookups </ref/"
"models/lookups>` and :doc:`database functions </ref/models/database-"
"functions>`. Depending on your database, you should be able to construct "
"queries to allow similar APIs. If there are specific things which cannot be "
"achieved this way, please open a ticket."
msgstr ""
"Tous les outils de recherche proposés par :mod:`django.contrib.postgres` "
"sont construits entièrement sur des API publiques telles que les :doc:"
"`expressions de recherche personnalisées </ref/models/lookups>` et les :doc:"
"`fonctions de base de données </ref/models/database-functions>`. En fonction "
"de la base de données, vous devriez pouvoir construire des requêtes en "
"approchant des API similaires. Si des aspects spécifiques ne peuvent pas "
"être résolus de cette façon, merci de bien vouloir ouvrir un ticket."

msgid ""
"In the above example, we determined that a case insensitive lookup would be "
"more useful. When dealing with non-English names, a further improvement is "
"to use :lookup:`unaccented comparison <unaccent>`:"
msgstr ""
"Dans l'exemple ci-dessus, nous avons déterminé qu'une recherche non sensible "
"à la casse serait plus utile. Quand on est confronté à des noms sortant de "
"l'alphabet anglais, une autre amélioration possible est d'utiliser les :"
"lookup:`comparaisons sans accents <unaccent>`:"

msgid ""
"This shows another issue, where we are matching against a different spelling "
"of the name. In this case we have an asymmetry though - a search for "
"``Helen`` will pick up ``Helena`` or ``Hélène``, but not the reverse. "
"Another option would be to use a :lookup:`trigram_similar` comparison, which "
"compares sequences of letters."
msgstr ""
"Cela fait apparaître un autre problème, où nous cherchons des "
"correspondances avec une autre orthographe du nom. Dans ce cas, nous "
"obtenons toutefois une asymétrie, une recherche pour  ``Helen`` trouvera "
"``Helena`` ou ``Hélène``, mais pas l'inverse. Une autre option serait "
"d'utiliser une comparaison par :lookup:`trigram_similar` qui compare des "
"suites de lettres."

msgid ""
"Now we have a different problem - the longer name of \"Helena Bonham "
"Carter\" doesn't show up as it is much longer. Trigram searches consider all "
"combinations of three letters, and compares how many appear in both search "
"and source strings. For the longer name, there are more combinations that "
"don't appear in the source string, so it is no longer considered a close "
"match."
msgstr ""
"Nous rencontrons maintenant un problème différent : le nom plus long "
"« Helena Bonham Carter » n'apparaît pas car il est bien plus long. Les "
"recherches par trigramme envisagent toutes les combinaisons de trois lettres "
"et comparent combien apparaissent à la fois dans les chaînes source et de "
"recherche. En ce qui concerne le nom plus long, il y a plus de combinaisons "
"qui n'apparaissent pas dans la chaîne source, ce qui explique qu'il n'est "
"plus considéré comme une correspondance proche."

msgid ""
"The correct choice of comparison functions here depends on your particular "
"data set, for example the language(s) used and the type of text being "
"searched. All of the examples we've seen are on short strings where the user "
"is likely to enter something close (by varying definitions) to the source "
"data."
msgstr ""
"Le choix correct de fonctions de comparaison dépend ici du jeu de données "
"particulier, par exemple en fonction des langues utilisées et du type de "
"texte à rechercher. Tous les exemples que nous avons examinés portent sur "
"des chaînes courtes et où l'utilisateur va probablement saisir un terme "
"proche (selon plusieurs définitions) des données sources."

msgid "Document-based search"
msgstr "Recherche basée sur des documents"

msgid ""
"Standard database operations stop being a useful approach when you start "
"considering large blocks of text. Whereas the examples above can be thought "
"of as operations on a string of characters, full text search looks at the "
"actual words. Depending on the system used, it's likely to use some of the "
"following ideas:"
msgstr ""
"Les opérations de base de données standard atteignent leurs limites "
"lorsqu'on est confronté à de gros blocs de texte. Alors que les exemples "
"précédents peuvent être considérés comme des opérations sur une chaîne de "
"caractères, la recherche plein texte examine les mots réels. En fonction du "
"système utilisé, il est probable que certains des concepts suivants seront "
"utilisés :"

msgid "Ignoring \"stop words\" such as \"a\", \"the\", \"and\"."
msgstr "Ignorance des « mots vides » tels que « a », « le », « et »."

msgid "Stemming words, so that \"pony\" and \"ponies\" are considered similar."
msgstr ""
"Racines de mots, afin que « cheval » et « chevaux » soient considérés "
"identiques."

msgid ""
"Weighting words based on different criteria such as how frequently they "
"appear in the text, or the importance of the fields, such as the title or "
"keywords, that they appear in."
msgstr ""
"Pondération des mots basée sur différents critères tels que la fréquence "
"d'apparition dans le texte ou l'importance des champs (titre, mots-clés, "
"etc.) dans lesquels ils apparaissent."

msgid ""
"There are many alternatives for using searching software, some of the most "
"prominent are Elastic_ and Solr_. These are full document-based search "
"solutions. To use them with data from Django models, you'll need a layer "
"which translates your data into a textual document, including back-"
"references to the database ids. When a search using the engine returns a "
"certain document, you can then look it up in the database. There are a "
"variety of third-party libraries which are designed to help with this "
"process."
msgstr ""
"Il existe de nombreuses alternatives de logiciels spécialisés pour la "
"recherche, dont Elastic_ et Solr_ sont parmi les plus célèbres. Ce sont des "
"solutions de recherche basées sur des documents complets. Pour les utiliser "
"avec des modèles Django, il sera nécessaire d'ajouter une couche de "
"traduction des données en documents textuels, y compris des références "
"inverses contenant les identifiants de base de données. Lorsqu'une recherche "
"utilisant ces moteurs renvoie un certain document, il est alors possible de "
"l'extraire de la base de données. Plusieurs bibliothèques tierces sont "
"conçues pour vous assister dans cette tâche."

msgid "PostgreSQL support"
msgstr "Prise en charge des outils PostgreSQL"

msgid ""
"PostgreSQL has its own full text search implementation built-in. While not "
"as powerful as some other search engines, it has the advantage of being "
"inside your database and so can easily be combined with other relational "
"queries such as categorization."
msgstr ""
"PostgreSQL possède sa propre implémentation de recherche plein texte. Même "
"si elle n'est pas autant performante que certains autres moteurs de "
"recherche, elle a l'avantage de se trouver dans la base de données elle-même "
"et peut donc être facilement combinée à d'autres requêtes relationnelles "
"telles que la catégorisation."

msgid ""
"The :mod:`django.contrib.postgres` module provides some helpers to make "
"these queries. For example, a query might select all the blog entries which "
"mention \"cheese\":"
msgstr ""
"Le module :mod:`django.contrib.postgres` fournit certains utilitaires pour "
"préparer ces requêtes. Par exemple, une requête pourrait sélectionner tous "
"les articles de blog qui mentionnent « cheese »:"

msgid "You can also filter on a combination of fields and on related models:"
msgstr ""
"Il est aussi possible de filtrer sur une combinaison de champs et de modèles "
"liés :"

msgid ""
"See the ``contrib.postgres`` :doc:`/ref/contrib/postgres/search` document "
"for complete details."
msgstr ""
"Voir le document :doc:`/ref/contrib/postgres/search` de ``contrib.postgres`` "
"pour de plus amples détails."

msgid "Performing raw SQL queries"
msgstr "Lancement de requêtes SQL brutes"

msgid ""
"Django gives you two ways of performing raw SQL queries: you can use :meth:"
"`Manager.raw()` to `perform raw queries and return model instances`__, or "
"you can avoid the model layer entirely and `execute custom SQL directly`__."
msgstr ""
"Django propose deux manières d'exécuter des requêtes SQL brutes : vous "
"pouvez utiliser :meth:`Manager.raw()` pour `exécuter des requêtes brutes et "
"renvoyer des instances de modèles`__ ou vous pouvez outrepasser complètement "
"la couche des modèles et `exécuter directement du code SQL personnalisé`__."

msgid "Explore the ORM before using raw SQL!"
msgstr ""
"Explorez les possibilités de l'ORM avant d'avoir recours à du code SQL brut !"

msgid ""
"The Django ORM provides many tools to express queries without writing raw "
"SQL. For example:"
msgstr ""
"L'ORM de Django fournit de nombreux outils pour formuler des requêtes sans "
"recourir à du code SQL brut. Par exemple :"

msgid "The :doc:`QuerySet API </ref/models/querysets>` is extensive."
msgstr "L'API :doc:`QuerySet </ref/models/querysets>` est bien documentée."

msgid ""
"You can :meth:`annotate <.QuerySet.annotate>` and :doc:`aggregate </topics/"
"db/aggregation>` using many built-in :doc:`database functions </ref/models/"
"database-functions>`. Beyond those, you can create :doc:`custom query "
"expressions </ref/models/expressions/>`."
msgstr ""
"Il est possible d’:meth:`annoter <.QuerySet.annotate>` et d’:doc:`agréger </"
"topics/db/aggregation>` en utilisant de nombreuses :doc:`fonctions de base "
"de données  </ref/models/database-functions>` intégrées. Au-delà de ça, il "
"est possible de créer des :doc:`expressions de requête personnalisées </ref/"
"models/expressions/>`."

msgid ""
"Before using raw SQL, explore :doc:`the ORM </topics/db/index>`. Ask on one "
"of :doc:`the support channels </faq/help>` to see if the ORM supports your "
"use case."
msgstr ""
"Avant de recourir à du code SQL brut, explorez :doc:`l'ORM </topics/db/"
"index>`. Posez vos questions sur l'un des :doc:`canaux d'aide </faq/help>` "
"pour savoir si l'ORM peut satisfaire votre cas de figure."

msgid ""
"You should be very careful whenever you write raw SQL. Every time you use "
"it, you should properly escape any parameters that the user can control by "
"using ``params`` in order to protect against SQL injection attacks. Please "
"read more about :ref:`SQL injection protection <sql-injection-protection>`."
msgstr ""
"Vous devez être très prudent lors de l'écriture d'instructions SQL brutes. "
"Lors de chaque utilisation, vous devez échapper correctement tout paramètre "
"pouvant être contrôlé par les utilisateurs en employant ``params`` afin de "
"vous protéger contre les attaques par injection SQL. Lisez attentivement les "
"paragraphes sur la :ref:`protection contre les injections SQL <sql-injection-"
"protection>`."

msgid "Performing raw queries"
msgstr "Lancement de requêtes brutes"

msgid ""
"The ``raw()`` manager method can be used to perform raw SQL queries that "
"return model instances:"
msgstr ""
"La méthode de gestionnaire ``raw()`` peut être utilisée pour exécuter des "
"requêtes SQL brutes qui renvoient des instances de modèles :"

msgid ""
"This method takes a raw SQL query, executes it, and returns a ``django.db."
"models.query.RawQuerySet`` instance. This ``RawQuerySet`` instance can be "
"iterated over like a normal :class:`~django.db.models.query.QuerySet` to "
"provide object instances."
msgstr ""
"Cette méthode accepte une requête SQL brute, l'exécute et renvoie une "
"instance ``django.db.models.query.RawQuerySet``. Il est possible alors "
"d'effectuer une boucle sur cette instance ``RawQuerySet`` comme pour un "
"objet :class:`~django.db.models.query.QuerySet` normal afin d'accéder aux "
"instances d'objets."

msgid ""
"This is best illustrated with an example. Suppose you have the following "
"model::"
msgstr ""
"Un exemple vaut mieux que mille mots. Supposons que vous ayez créé le modèle "
"suivant ::"

msgid "You could then execute custom SQL like so:"
msgstr "Vous pouvez alors exécuter du code SQL personnalisé comme ceci :"

msgid ""
"This example isn't very exciting -- it's exactly the same as running "
"``Person.objects.all()``. However, ``raw()`` has a bunch of other options "
"that make it very powerful."
msgstr ""
"Cet exemple n'est pas des plus passionnants, car il correspond exactement à "
"l'expression ``Person.objects.all()``. Toutefois, ``raw()`` comporte "
"quelques autres options qui en font un outil très puissant."

msgid "Model table names"
msgstr "Noms de table des modèles"

msgid "Where did the name of the ``Person`` table come from in that example?"
msgstr "D'où vient le nom de la table `` Person`` dans cet exemple?"

msgid ""
"By default, Django figures out a database table name by joining the model's "
"\"app label\" -- the name you used in ``manage.py startapp`` -- to the "
"model's class name, with an underscore between them. In the example we've "
"assumed that the ``Person`` model lives in an app named ``myapp``, so its "
"table would be ``myapp_person``."
msgstr ""
"Par défaut, Django compose un nom de table de base de données en combinant "
"l'« étiquette d'application » du modèle (le nom utilisé dans ``manage.py "
"startapp``) avec le nom de classe du modèle, séparés par un soulignement. "
"Dans l'exemple, nous sommes partis du principe que le modèle ``Person`` se "
"trouvait dans une application nommée ``myapp``, et donc que le nom de la "
"table était ``myapp_person``."

msgid ""
"For more details check out the documentation for the :attr:`~Options."
"db_table` option, which also lets you manually set the database table name."
msgstr ""
"Pour plus de détails, consultez la documentation de l'option :attr:`~Options."
"db_table` qui vous permet également de définir manuellement le nom de table "
"de la base de données."

msgid ""
"No checking is done on the SQL statement that is passed in to ``.raw()``. "
"Django expects that the statement will return a set of rows from the "
"database, but does nothing to enforce that. If the query does not return "
"rows, a (possibly cryptic) error will result."
msgstr ""
"Aucune vérification n'est effectuée pour les instructions SQL transmises à "
"``.raw()``. Django s'attend à ce que la requête renvoie un ensemble de "
"lignes de la base de données, mais ne fait rien pour le vérifier a priori. "
"Si la requête ne retourne pas de ligne, une erreur (potentiellement "
"cryptique) sera générée."

msgid ""
"If you are performing queries on MySQL, note that MySQL's silent type "
"coercion may cause unexpected results when mixing types. If you query on a "
"string type column, but with an integer value, MySQL will coerce the types "
"of all values in the table to an integer before performing the comparison. "
"For example, if your table contains the values ``'abc'``, ``'def'`` and you "
"query for ``WHERE mycolumn=0``, both rows will match. To prevent this, "
"perform the correct typecasting before using the value in a query."
msgstr ""
"Si vous effectuez des requêtes vers MySQL, notez que le forçage de type "
"silencieux de MySQL peut produire des résultats inattendus lors du mélange "
"de types. Si une requête porte sur une colonne de type chaîne mais contient "
"une valeur nombre entier, MySQL transforme le type de toutes les valeurs de "
"la table en nombre entier avant d'effectuer la comparaison. Par exemple, si "
"la table contient les valeurs ``'abc'``, ``'def'`` et que la requête "
"contient ``WHERE macolonne=0``, les deux lignes seront sélectionnées. Pour "
"empêcher cela, effectuez les transformations de type avant d'utiliser une "
"valeur dans une requête."

msgid "Mapping query fields to model fields"
msgstr "Correspondance entre champs de requête et champs de modèle"

msgid ""
"``raw()`` automatically maps fields in the query to fields on the model."
msgstr ""
"``raw()`` fait automatiquement correspondre les champs de la requête avec "
"les champs du modèle."

msgid ""
"The order of fields in your query doesn't matter. In other words, both of "
"the following queries work identically:"
msgstr ""
"L'ordre des champs dans la requête n'est pas important. En d'autres termes, "
"les deux requêtes suivantes donneront le même résultat :"

msgid ""
"Matching is done by name. This means that you can use SQL's ``AS`` clauses "
"to map fields in the query to model fields. So if you had some other table "
"that had ``Person`` data in it, you could easily map it into ``Person`` "
"instances:"
msgstr ""
"La correspondance se fait sur le nom. Cela signifie que vous pouvez utiliser "
"les clauses SQL ``AS`` pour faire correspondre les champs de la requête aux "
"champs du modèle. Ainsi, si vous disposez d'une autre table contenant les "
"données de ``Person``, vous pouvez facilement faire correspondre ces données "
"avec des instances de ``Person``:"

msgid ""
"As long as the names match, the model instances will be created correctly."
msgstr ""
"Tant que les noms correspondent, les instances de modèle seront créées "
"correctement."

msgid ""
"Alternatively, you can map fields in the query to model fields using the "
"``translations`` argument to ``raw()``. This is a dictionary mapping names "
"of fields in the query to names of fields on the model. For example, the "
"above query could also be written:"
msgstr ""
"Il est aussi possible de faire correspondre les champs de requête aux champs "
"de modèle en utilisant le paramètre ``translations`` de ``raw()``. Il s'agit "
"d'un dictionnaire faisant correspondre les noms des champs de la requête aux "
"noms des champs du modèle. Par exemple, la requête ci-dessus aurait aussi pu "
"être écrite de cette manière :"

msgid "Index lookups"
msgstr "Filtrage par index"

msgid ""
"``raw()`` supports indexing, so if you need only the first result you can "
"write:"
msgstr ""
"``raw()`` autorise l'utilisation d'index ; dans le cas où vous souhaitez "
"obtenir uniquement le premier résultat, vous pouvez écrire :"

msgid ""
"However, the indexing and slicing are not performed at the database level. "
"If you have a large number of ``Person`` objects in your database, it is "
"more efficient to limit the query at the SQL level:"
msgstr ""
"Cependant, l'indexation et la segmentation ne sont pas effectuées au niveau "
"de la base de données. Si la base de données contient une grande quantité "
"d'objets ``Person``, il est plus efficace de limiter la requête au niveau "
"SQL :"

msgid "Deferring model fields"
msgstr "Report des champs de modèle"

msgid "Fields may also be left out:"
msgstr "Il est aussi possible d'ignorer certains champs :"

msgid ""
"The ``Person`` objects returned by this query will be deferred model "
"instances (see :meth:`~django.db.models.query.QuerySet.defer()`). This means "
"that the fields that are omitted from the query will be loaded on demand. "
"For example:"
msgstr ""
"Les objets ``Person`` renvoyés par cette requête constitueront des instances "
"de modèle différées (voir :meth:`~django.db.models.query.QuerySet.defer()`). "
"Cela signifie que les champs omis dans la requête seront chargés à la "
"demande. Par exemple :"

msgid ""
"From outward appearances, this looks like the query has retrieved both the "
"first name and last name. However, this example actually issued 3 queries. "
"Only the first names were retrieved by the ``raw()`` query -- the last names "
"were both retrieved on demand when they were printed."
msgstr ""
"En apparence, il semble que la requête ait récupéré à la fois le prénom et "
"le nom. Cependant, cet exemple effectue en réalité 3 requêtes. Seuls les "
"prénoms (first_name) ont été obtenus par la requête ``raw()``, les noms "
"(last_name) ont été obtenus chacun à la demande au moment où ils ont été "
"affichés."

msgid ""
"There is only one field that you can't leave out - the primary key field. "
"Django uses the primary key to identify model instances, so it must always "
"be included in a raw query. A :class:`~django.core.exceptions."
"FieldDoesNotExist` exception will be raised if you forget to include the "
"primary key."
msgstr ""
"Un seul champ ne peut pas être omis, c'est le champ clé primaire. Django "
"utilise la clé primaire pour identifier les instances de modèle, elle doit "
"donc être obligatoirement incluse dans la requête brute. Une exception :"
"class:`~django.core.exceptions.FieldDoesNotExist` est générée si vous "
"oubliez d'inclure la clé primaire."

msgid "Adding annotations"
msgstr "Ajout d'annotations"

msgid ""
"You can also execute queries containing fields that aren't defined on the "
"model. For example, we could use `PostgreSQL's age() function`__ to get a "
"list of people with their ages calculated by the database:"
msgstr ""
"Vous pouvez aussi exécuter des requêtes contenant des champs qui ne sont pas "
"définis dans le modèle. Par exemple, il serait possible d'utiliser la "
"`fonction age() de PostgreSQL`__ pour obtenir une liste de personnes avec "
"leur âge calculé par la base de données :"

msgid ""
"You can often avoid using raw SQL to compute annotations by instead using a :"
"ref:`Func() expression <func-expressions>`."
msgstr ""
"Il est souvent possible d'éviter de devoir utiliser du code SQL brut pour "
"calculer des annotations en faisant plutôt appel à une :ref:`expression "
"Func() <func-expressions>`."

msgid "Passing parameters into ``raw()``"
msgstr "Transmission de paramètres dans ``raw()``"

msgid ""
"If you need to perform parameterized queries, you can use the ``params`` "
"argument to ``raw()``:"
msgstr ""
"S'il est nécessaire d'effectuer des requêtes paramétrées, il est possible "
"d'utiliser le paramètre ``params`` de ``raw()``:"

msgid ""
"``params`` is a list or dictionary of parameters. You'll use ``%s`` "
"placeholders in the query string for a list, or ``%(key)s`` placeholders for "
"a dictionary (where ``key`` is replaced by a dictionary key), regardless of "
"your database engine. Such placeholders will be replaced with parameters "
"from the ``params`` argument."
msgstr ""
"``params`` est une liste ou un dictionnaire de paramètres. Dans la chaîne de "
"requête, il faut alors inclure des substituants ``%s`` pour une liste ou des "
"substituants``%(clé)s`` pour un dictionnaire (où ``clé`` est remplacé par "
"une clé de dictionnaire), quel que soit le moteur de base de données. Ces "
"substituants seront remplacés par le contenu du paramètre ``params``."

msgid ""
"Dictionary params are not supported with the SQLite backend; with this "
"backend, you must pass parameters as a list."
msgstr ""
"Les paramètres de type dictionnaire ne sont pas pris en charge par le moteur "
"SQLite ; avec ce moteur, vous devez transmettre les paramètres sous forme de "
"liste."

msgid ""
"**Do not use string formatting on raw queries or quote placeholders in your "
"SQL strings!**"
msgstr ""
"**N'utilisez pas de formatage de chaîne dans les requêtes brutes, ni de "
"substituants entre guillemets dans vos chaînes SQL !**"

msgid "It's tempting to write the above query as:"
msgstr "Il est tentant d'écrire la requête ci-dessus comme ceci :"

msgid ""
"You might also think you should write your query like this (with quotes "
"around ``%s``):"
msgstr ""
"Vous pourriez aussi imaginer devoir écrire votre requête comme ceci (avec "
"des guillemets autour de ``%s``) :"

msgid "**Don't make either of these mistakes.**"
msgstr "**Ne faites aucune de ces erreurs.**"

msgid ""
"As discussed in :ref:`sql-injection-protection`, using the ``params`` "
"argument and leaving the placeholders unquoted protects you from `SQL "
"injection attacks`__, a common exploit where attackers inject arbitrary SQL "
"into your database. If you use string interpolation or quote the "
"placeholder, you're at risk for SQL injection."
msgstr ""
"Comme discuté dans :ref:`sql-injection-protection`, l'utilisation du "
"paramètre ``params`` et le fait de laisser les substituants sans guillemets "
"vous protègent contre les `attaques d'injection SQL`__, une faille courante "
"où un attaquant injecte du code SQL arbitraire dans votre base de données. "
"Si vous utilisez l'interpolation de chaîne ou que vous placez les "
"substituants entre guillemets, vous êtes exposé aux injections SQL."

msgid "Executing custom SQL directly"
msgstr "Exécution directe de code SQL"

msgid ""
"Sometimes even :meth:`Manager.raw` isn't quite enough: you might need to "
"perform queries that don't map cleanly to models, or directly execute "
"``UPDATE``, ``INSERT``, or ``DELETE`` queries."
msgstr ""
"Dans certains cas, même :meth:`Manager.raw` ne suffit pas : il se peut que "
"des requêtes doivent être effectuées sans correspondre proprement à des "
"modèles ou que vous vouliez exécuter directement des requêtes ``UPDATE``, "
"``INSERT`` ou ``DELETE``."

msgid ""
"In these cases, you can always access the database directly, routing around "
"the model layer entirely."
msgstr ""
"Dans ces situations, vous pouvez toujours accéder directement à la base de "
"données, outrepassant complètement la couche des modèles."

msgid ""
"The object ``django.db.connection`` represents the default database "
"connection. To use the database connection, call ``connection.cursor()`` to "
"get a cursor object. Then, call ``cursor.execute(sql, [params])`` to execute "
"the SQL and ``cursor.fetchone()`` or ``cursor.fetchall()`` to return the "
"resulting rows."
msgstr ""
"L'objet ``django.db.connection`` représente la connexion à la base de "
"données par défaut. Pour utiliser la connexion à la base de données, appelez "
"``connection.cursor()`` pour obtenir un objet curseur. Puis, appelez "
"``cursor.execute(sql, [params])`` pour exécuter le code SQL et ``cursor."
"fetchone()`` ou ``cursor.fetchall()`` pour obtenir les lignes de résultat."

msgid ""
"To protect against SQL injection, you must not include quotes around the "
"``%s`` placeholders in the SQL string."
msgstr ""
"Pour se protéger des injections SQL, vous devez vous abstenir de placer des "
"guillemets autour des substituants ``%s`` dans la chaîne SQL."

msgid ""
"Note that if you want to include literal percent signs in the query, you "
"have to double them in the case you are passing parameters::"
msgstr ""
"Notez que si vous voulez inclure des signes « pour cent » littéraux dans la "
"requête, vous devez les doubler dans le cas où vous transmettez des "
"paramètres ::"

msgid ""
"If you are using :doc:`more than one database </topics/db/multi-db>`, you "
"can use ``django.db.connections`` to obtain the connection (and cursor) for "
"a specific database. ``django.db.connections`` is a dictionary-like object "
"that allows you to retrieve a specific connection using its alias::"
msgstr ""
"Si vous utilisez :doc:`plus d'une base de données </topics/db/multi-db>`, "
"vous pouvez utiliser ``django.db.connections`` pour obtenir la connexion (et "
"le curseur) pour une base de données spécifique. ``django.db.connections`` "
"est un objet de type dictionnaire permettant de récupérer une connexion "
"spécifique en employant son alias ::"

msgid ""
"By default, the Python DB API will return results without their field names, "
"which means you end up with a ``list`` of values, rather than a ``dict``. At "
"a small performance and memory cost, you can return results as a ``dict`` by "
"using something like this::"
msgstr ""
"Par défaut, l'API de base de données de Python renvoie les résultats sans "
"les noms de champs, ce qui signifie que vous vous retrouvez avec une liste "
"de valeurs plutôt qu'un dictionnaire. Pour un faible coût en performances et "
"en mémoire, vous pouvez obtenir les résultats sous forme de dictionnaire en "
"écrivant quelque chose comme ::"

msgid ""
"Another option is to use :func:`collections.namedtuple` from the Python "
"standard library. A ``namedtuple`` is a tuple-like object that has fields "
"accessible by attribute lookup; it's also indexable and iterable. Results "
"are immutable and accessible by field names or indices, which might be "
"useful::"
msgstr ""
"Une autre option est d'utiliser une structure :func:`collections.namedtuple` "
"de la bibliothèque Python standard. Un ``namedtuple`` est un objet de type "
"tuple dont les champs sont accessibles sous forme d'attribut ; l'accès par "
"indice est aussi possible et l'objet est itérable. Les résultats sont "
"immuables et accessibles par nom de champ ou par indice, ce qui pourrait "
"être pratique ::"

msgid ""
"The ``dictfetchall()`` and ``namedtuplefetchall()`` examples assume unique "
"column names, since a cursor cannot distinguish columns from different "
"tables."
msgstr ""
"Les exemples ``dictfetchall()`` et ``namedtuplefetchall()`` supposent que "
"les noms de colonnes sont uniques, car un curseur ne peut pas distinguer les "
"colonnes de tables différentes."

msgid "Here is an example of the difference between the three:"
msgstr "Voici un exemple de la différence entre les trois :"

msgid "Connections and cursors"
msgstr "Connexions et curseurs"

msgid ""
"``connection`` and ``cursor`` mostly implement the standard Python DB-API "
"described in :pep:`249` — except when it comes to :doc:`transaction handling "
"</topics/db/transactions>`."
msgstr ""
"``connection`` et ``cursor`` implémentent essentiellement l'API de base de "
"données standard de Python décrite dans la :pep:`249`, à l'exception de ce "
"qui concerne la :doc:`gestion des transactions </topics/db/transactions>`."

msgid ""
"If you're not familiar with the Python DB-API, note that the SQL statement "
"in ``cursor.execute()`` uses placeholders, ``\"%s\"``, rather than adding "
"parameters directly within the SQL. If you use this technique, the "
"underlying database library will automatically escape your parameters as "
"necessary."
msgstr ""
"Si cette API DB de Python ne vous est pas familière, notez que l'instruction "
"SQL dans ``cursor.execute()`` utilise des substituants, ``\"%s\"``, plutôt "
"que d'ajouter directement les paramètres dans la chaîne SQL. Si vous "
"utilisez cette technique, la bibliothèque sous-jacente de base de données "
"s'occupe automatiquement d'échapper vos paramètres au besoin."

msgid ""
"Also note that Django expects the ``\"%s\"`` placeholder, *not* the ``\"?"
"\"`` placeholder, which is used by the SQLite Python bindings. This is for "
"the sake of consistency and sanity."
msgstr ""
"Notez également que Django compte sur des substituants ``\"%s\"``, *pas* de "
"substituants ``\"?\"`` qui sont utilisés par la bibliothèque SQLite de "
"Python, pour des raisons de cohérence et de bon sens."

msgid "Using a cursor as a context manager::"
msgstr "L'utilisation d'un curseur en tant que gestionnaire de contexte ::"

msgid "is equivalent to::"
msgstr "est équivalent à ::"

msgid "Calling stored procedures"
msgstr "Appeler des procédures stockées"

msgid ""
"Calls a database stored procedure with the given name. A sequence "
"(``params``) or dictionary (``kparams``) of input parameters may be "
"provided. Most databases don't support ``kparams``. Of Django's built-in "
"backends, only Oracle supports it."
msgstr ""
"Appelle une procédure stockée de base de données ayant le nom indiqué. Une "
"liste (``params``) ou un dictionnaire (``kparams``) de paramètres d'entrée "
"peuvent être fournis. La plupart des bases de données n'acceptent pas "
"``kparams``. Parmi celles qui sont prises en charge nativement par Django, "
"seule Oracle accepte ``kparams``."

msgid "For example, given this stored procedure in an Oracle database:"
msgstr ""
"Par exemple, avec cette procédure stockée dans une base de données Oracle :"

msgid "This will call it::"
msgstr "Ceci l'appellera ::"

msgid "Tablespaces"
msgstr "Espaces de tables"

msgid ""
"A common paradigm for optimizing performance in database systems is the use "
"of `tablespaces`_ to organize disk layout."
msgstr ""
"Un paradigme courant dans l'optimisation des performances des systèmes de "
"base de données est l'utilisation des `espaces de tables`_ pour organiser "
"l'agencement sur disque."

msgid ""
"Django does not create the tablespaces for you. Please refer to your "
"database engine's documentation for details on creating and managing "
"tablespaces."
msgstr ""
"Django ne crée pas d'espace de tables pour vous. Consultez la documentation "
"de votre moteur de base de données pour plus de détails sur la création et "
"la gestion d'espaces de tables."

msgid "Declaring tablespaces for tables"
msgstr "Déclaration d'espaces de tables pour les tables"

msgid ""
"A tablespace can be specified for the table generated by a model by "
"supplying the :attr:`~django.db.models.Options.db_tablespace` option inside "
"the model's ``class Meta``. This option also affects tables automatically "
"created for :class:`~django.db.models.ManyToManyField`\\ s in the model."
msgstr ""
"Un espace de tables peut être indiqué pour une table générée par un modèle "
"en renseignant l'option :attr:`~django.db.models.Options.db_tablespace` dans "
"la ``class Meta`` du modèle. Cette option affecte aussi les tables créées "
"automatiquement pour les champs :class:`~django.db.models.ManyToManyField` "
"du modèle."

msgid ""
"You can use the :setting:`DEFAULT_TABLESPACE` setting to specify a default "
"value for :attr:`~django.db.models.Options.db_tablespace`. This is useful "
"for setting a tablespace for the built-in Django apps and other applications "
"whose code you cannot control."
msgstr ""
"Vous pouvez utiliser le réglage :setting:`DEFAULT_TABLESPACE` pour indiquer "
"une valeur par défaut pour :attr:`~django.db.models.Options.db_tablespace`. "
"C'est utile pour définir un espace de tables pour les applications Django de "
"base et pour d'autres applications dont vous ne maîtrisez pas le code."

msgid "Declaring tablespaces for indexes"
msgstr "Déclaration des espaces de tables pour les index"

msgid ""
"You can pass the :attr:`~django.db.models.Index.db_tablespace` option to an "
"``Index`` constructor to specify the name of a tablespace to use for the "
"index. For single field indexes, you can pass the :attr:`~django.db.models."
"Field.db_tablespace` option to a ``Field`` constructor to specify an "
"alternate tablespace for the field's column index. If the column doesn't "
"have an index, the option is ignored."
msgstr ""
"Vous pouvez transmettre l'option :attr:`~django.db.models.Index."
"db_tablespace` à un constructeur d'un champ ``Index`` pour indiquer le nom "
"d'un espace de table à utiliser pour l'index. Pour les index de champ "
"unique, vous pouvez transmettre l'option :attr:`~django.db.models.Field."
"db_tablespace` à un constructeur d'un champ ``Field`` pour indiquer un "
"espace de tables différent pour l'index de la colonne du champ. Si aucun "
"index n'est créé pour la colonne en question, l'option est ignorée. "

msgid ""
"You can use the :setting:`DEFAULT_INDEX_TABLESPACE` setting to specify a "
"default value for :attr:`~django.db.models.Field.db_tablespace`."
msgstr ""
"Vous pouvez utiliser le réglage :setting:`DEFAULT_INDEX_TABLESPACE` pour "
"indiquer une valeur par défaut pour :attr:`~django.db.models.Field."
"db_tablespace`."

msgid ""
"If :attr:`~django.db.models.Field.db_tablespace` isn't specified and you "
"didn't set :setting:`DEFAULT_INDEX_TABLESPACE`, the index is created in the "
"same tablespace as the tables."
msgstr ""
"Si :attr:`~django.db.models.Field.db_tablespace` n'est pas renseigné et que :"
"setting:`DEFAULT_INDEX_TABLESPACE` n'a pas été défini, l'index est créé dans "
"le même espace de table que les tables."

msgid ""
"In this example, the tables generated by the ``TablespaceExample`` model (i."
"e. the model table and the many-to-many table) would be stored in the "
"``tables`` tablespace. The index for the name field and the indexes on the "
"many-to-many table would be stored in the ``indexes`` tablespace. The "
"``data`` field would also generate an index, but no tablespace for it is "
"specified, so it would be stored in the model tablespace ``tables`` by "
"default. The index for the ``shortcut`` field would be stored in the "
"``other_indexes`` tablespace."
msgstr ""
"Dans cet exemple, les tables générées par le modèle ``TablespaceExample`` "
"(c'est-à-dire la table du modèle et la table plusieurs-à-plusieurs) seront "
"stockées dans l'espace de tables ``tables``. L'index du champ ``name`` et "
"les index de la table plusieurs-à-plusieurs seront stockés dans l'espace de "
"tables ``indexes``. Le champ ``data`` génère aussi un index, mais aucun "
"espace de tables n'est indiqué, il sera donc stocké par défaut dans l'espace "
"de tables ``tables``. L'index du champ ``shortcut`` sera stocké dans "
"l'espace de table ``other_indexes``."

msgid "Database support"
msgstr "Prise en charge des bases de données"

msgid ""
"PostgreSQL and Oracle support tablespaces. SQLite, MariaDB and MySQL don't."
msgstr ""
"PostgreSQL et Oracle prennent en charge les espaces de tables, au contraire "
"de SQLite, MariaDB et MySQL."

msgid ""
"When you use a backend that lacks support for tablespaces, Django ignores "
"all tablespace-related options."
msgstr ""
"Lorsque vous utilisez un moteur qui ne prend pas en charge les espaces de "
"tables, Django ignore toutes les options liées aux espaces de tables."

msgid "Database transactions"
msgstr "Transactions de base de données"

msgid ""
"Django gives you a few ways to control how database transactions are managed."
msgstr ""
"Django donne quelques moyens de contrôler la gestion des transactions de "
"base de données."

msgid "Managing database transactions"
msgstr "Gestion des transactions de base de données"

msgid "Django's default transaction behavior"
msgstr "Comportement de transaction par défaut de Django"

msgid ""
"Django's default behavior is to run in autocommit mode. Each query is "
"immediately committed to the database, unless a transaction is active. :ref:"
"`See below for details <autocommit-details>`."
msgstr ""
"Le comportement par défaut de Django est de fonctionner en mode de "
"validation automatique (« autocommit »). Chaque requête est immédiatement "
"validée dans la base de données, sauf si une transaction est en cours. :ref:"
"`Voir ci-dessous pour plus de détails <autocommit-details>`."

msgid ""
"Django uses transactions or savepoints automatically to guarantee the "
"integrity of ORM operations that require multiple queries, especially :ref:"
"`delete() <topics-db-queries-delete>` and :ref:`update() <topics-db-queries-"
"update>` queries."
msgstr ""
"Django utilise automatiquement des transactions ou des points de sauvegarde "
"pour garantir l'intégrité des opérations de l'ORM qui nécessitent plusieurs "
"requêtes, particulièrement les requêtes :ref:`delete() <topics-db-queries-"
"delete>` et :ref:`update() <topics-db-queries-update>`."

msgid ""
"Django's :class:`~django.test.TestCase` class also wraps each test in a "
"transaction for performance reasons."
msgstr ""
"La classe :class:`~django.test.TestCase` de Django englobe aussi chaque test "
"dans une transaction pour des raisons de performance."

msgid "Tying transactions to HTTP requests"
msgstr "Couplage des transactions aux requêtes HTTP"

msgid ""
"A common way to handle transactions on the web is to wrap each request in a "
"transaction. Set :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` to "
"``True`` in the configuration of each database for which you want to enable "
"this behavior."
msgstr ""
"Une façon fréquente de gérer les transactions sur le Web est d'envelopper "
"chaque requête dans une transaction. Définissez :setting:`ATOMIC_REQUESTS "
"<DATABASE-ATOMIC_REQUESTS>` à ``True`` dans la configuration de chaque base "
"de données pour laquelle vous souhaitez activer ce comportement."

msgid ""
"It works like this. Before calling a view function, Django starts a "
"transaction. If the response is produced without problems, Django commits "
"the transaction. If the view produces an exception, Django rolls back the "
"transaction."
msgstr ""
"Voici comment cela fonctionne. Avant d'appeler une fonction de vue, Django "
"démarre une transaction. Si la réponse est renvoyée sans problème "
"particulier, Django valide la transaction. Si la vue génère une exception, "
"Django annule la transaction."

msgid ""
"You may perform subtransactions using savepoints in your view code, "
"typically with the :func:`atomic` context manager. However, at the end of "
"the view, either all or none of the changes will be committed."
msgstr ""
"Il est possible d'effectuer des sous-transactions à l'aide de points de "
"sauvegarde dans le code de la vue, typiquement avec le gestionnaire de "
"contexte :func:`atomic`. Cependant, quand la vue se termine, soit tous les "
"changements sont validés, soit tous sont annulés. "

msgid ""
"While the simplicity of this transaction model is appealing, it also makes "
"it inefficient when traffic increases. Opening a transaction for every view "
"has some overhead. The impact on performance depends on the query patterns "
"of your application and on how well your database handles locking."
msgstr ""
"Bien que la simplicité de ce modèle de transaction est attrayant, il devient "
"inefficace lorsque le trafic augmente. L'ouverture d'une transaction pour "
"chaque vue présente un certain coût. L'impact sur la performance dépend de "
"la manière dont vos applications font usage des requêtes et de la manière "
"dont la base de données gère les verrous."

msgid "Per-request transactions and streaming responses"
msgstr "Transactions par requête et réponses en flux"

msgid ""
"When a view returns a :class:`~django.http.StreamingHttpResponse`, reading "
"the contents of the response will often execute code to generate the "
"content. Since the view has already returned, such code runs outside of the "
"transaction."
msgstr ""
"Lorsqu'une vue renvoie une réponse en flux (:class:`~django.http."
"StreamingHttpResponse`), la lecture du contenu de la réponse exécute "
"fréquemment du code pour générer le contenu. Comme la vue s'est déjà "
"terminée, ce code s'exécute en dehors de la transaction."

msgid ""
"Generally speaking, it isn't advisable to write to the database while "
"generating a streaming response, since there's no sensible way to handle "
"errors after starting to send the response."
msgstr ""
"De manière générale, il n'est pas conseillé d'écrire dans la base de données "
"durant la génération d'une réponse en flux, car il n'y a plus de méthode "
"raisonnable pour gérer les erreurs après le début de l'envoi de la réponse."

msgid ""
"In practice, this feature wraps every view function in the :func:`atomic` "
"decorator described below."
msgstr ""
"En pratique, cette fonctionnalité enveloppe chaque fonction de vue dans le "
"décorateur :func:`atomic` décrit ci-dessous."

msgid ""
"Note that only the execution of your view is enclosed in the transactions. "
"Middleware runs outside of the transaction, and so does the rendering of "
"template responses."
msgstr ""
"Notez que seule l'exécution de la vue est incluse dans la transaction. Les "
"intergiciels s'exécutent en dehors de la transaction, de même que le rendu "
"des réponses par gabarit."

msgid ""
"When :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` is enabled, it's "
"still possible to prevent views from running in a transaction."
msgstr ""
"Lorsque :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` est actif, il "
"est toujours possible d'empêcher les vues de s'exécuter dans une transaction."

msgid ""
"This decorator will negate the effect of :setting:`ATOMIC_REQUESTS <DATABASE-"
"ATOMIC_REQUESTS>` for a given view::"
msgstr ""
"Ce décorateur annule l'effet de :setting:`ATOMIC_REQUESTS <DATABASE-"
"ATOMIC_REQUESTS>` pour une vue donnée ::"

msgid "It only works if it's applied to the view itself."
msgstr ""
"Cela ne fonctionne que lorsque le décorateur est appliqué à la vue elle-même."

msgid "Controlling transactions explicitly"
msgstr "Contrôle explicite des transactions"

msgid "Django provides a single API to control database transactions."
msgstr ""
"Django fournit une API unifiée pour contrôler les transactions de base de "
"données."

msgid ""
"Atomicity is the defining property of database transactions. ``atomic`` "
"allows us to create a block of code within which the atomicity on the "
"database is guaranteed. If the block of code is successfully completed, the "
"changes are committed to the database. If there is an exception, the changes "
"are rolled back."
msgstr ""
"L'atomicité est la propriété de base des transactions de base de données. "
"``atomic`` permet de créer un bloc de code à l'intérieur duquel l'atomicité "
"est garantie au niveau de la base de données. Si le bloc de code se termine "
"avec succès, les modifications sont validées dans la base de données. Si une "
"exception apparaît, les modifications sont annulées en bloc."

msgid ""
"``atomic`` blocks can be nested. In this case, when an inner block completes "
"successfully, its effects can still be rolled back if an exception is raised "
"in the outer block at a later point."
msgstr ""
"Les blocs ``atomic`` peuvent être imbriqués. Dans ce cas, lorsqu'un bloc "
"intérieur se termine avec succès, ses effets peuvent encore être annulés si "
"une exception est générée plus loin dans le bloc englobant."

msgid ""
"It is sometimes useful to ensure an ``atomic`` block is always the outermost "
"``atomic`` block, ensuring that any database changes are committed when the "
"block is exited without errors. This is known as durability and can be "
"achieved by setting ``durable=True``. If the ``atomic`` block is nested "
"within another it raises a ``RuntimeError``."
msgstr ""
"Il est parfois utile de s'assurer qu'un bloc ``atomic`` est toujours le bloc "
"``atomic`` le plus à l'extérieur, ce qui garantit que toute modification de "
"base de données sera validée lorsque le bloc se termine sans erreur. On "
"appelle cela la durabilité et on peut l'obtenir en définissant "
"``durable=True``. Si ce bloc ``atomic`` est imbriqué à l'intérieur d'un "
"autre, cela génère une erreur ``RuntimeError``."

msgid "``atomic`` is usable both as a :py:term:`decorator`::"
msgstr "``atomic`` peut être utilisé comme :py:term:`décorateur`::"

msgid "and as a :py:term:`context manager`::"
msgstr "et comme :py:term:`gestionnaire de contexte`::"

msgid ""
"Wrapping ``atomic`` in a try/except block allows for natural handling of "
"integrity errors::"
msgstr ""
"L'insertion d'``atomic`` dans un bloc try/except est une manière naturelle "
"de gérer les erreurs d'intégrité ::"

msgid ""
"In this example, even if ``generate_relationships()`` causes a database "
"error by breaking an integrity constraint, you can execute queries in "
"``add_children()``, and the changes from ``create_parent()`` are still there "
"and bound to the same transaction. Note that any operations attempted in "
"``generate_relationships()`` will already have been rolled back safely when "
"``handle_exception()`` is called, so the exception handler can also operate "
"on the database if necessary."
msgstr ""
"Dans cet exemple, même si ``generate_relationships()`` provoque une erreur "
"de base de données en cassant une contrainte d'intégrité, vous pouvez "
"exécuter des requêtes dans ``add_children()`` et les modifications de "
"``create_parent()`` sont toujours présentes et liées à la même transaction. "
"Notez que toute opération exécutée dans ``generate_relationships()`` aura "
"déjà été annulée proprement lorsque ``handle_exception()`` est appelée, ce "
"qui fait que le gestionnaire d'exception peut très bien agir au niveau de la "
"base de données si nécessaire."

msgid "Avoid catching exceptions inside ``atomic``!"
msgstr "Évitez d'intercepter des exceptions à l'intérieur d'``atomic``!"

msgid ""
"When exiting an ``atomic`` block, Django looks at whether it's exited "
"normally or with an exception to determine whether to commit or roll back. "
"If you catch and handle exceptions inside an ``atomic`` block, you may hide "
"from Django the fact that a problem has happened. This can result in "
"unexpected behavior."
msgstr ""
"À la sortie d'un bloc ``atomic``, Django examine si la sortie se fait "
"normalement ou par une exception afin de déterminer s'il doit valider ou "
"annuler la transaction. Si vous interceptez et gérez des exceptions à "
"l'intérieur du bloc ``atomic``, vous cachez à Django le fait qu'un problème "
"est survenu. Cela peut aboutir à des comportements inattendus."

msgid ""
"This is mostly a concern for :exc:`~django.db.DatabaseError` and its "
"subclasses such as :exc:`~django.db.IntegrityError`. After such an error, "
"the transaction is broken and Django will perform a rollback at the end of "
"the ``atomic`` block. If you attempt to run database queries before the "
"rollback happens, Django will raise a :class:`~django.db.transaction."
"TransactionManagementError`. You may also encounter this behavior when an "
"ORM-related signal handler raises an exception."
msgstr ""
"Ce problème concerne plus spécifiquement les exceptions :exc:`~django.db."
"DatabaseError` et ses sous-classes telles que  :exc:`~django.db."
"IntegrityError`. Après une telle erreur, la transaction est cassée et Django "
"procédera à son annulation dès la sortie du bloc ``atomic``. Si vous essayez "
"d'exécuter des requêtes en base de données avant que l'annulation "
"intervienne, Django générera une exception :class:`~django.db.transaction."
"TransactionManagementError`. Vous pouvez également rencontrer ce "
"comportement lorsqu'un gestionnaire de signal lié à l'ORM génère une "
"exception."

msgid ""
"The correct way to catch database errors is around an ``atomic`` block as "
"shown above. If necessary, add an extra ``atomic`` block for this purpose. "
"This pattern has another advantage: it delimits explicitly which operations "
"will be rolled back if an exception occurs."
msgstr ""
"La manière correcte d'intercepter les erreurs de base de données est de le "
"faire autour du bloc ``atomic`` comme dans l'exemple ci-dessus. Si "
"nécessaire, ajoutez un bloc ``atomic`` supplémentaire à cet effet. Cette "
"stratégie présente un autre avantage : elle délimite explicitement les "
"opérations qui seront annulées si une exception se produit."

msgid ""
"If you catch exceptions raised by raw SQL queries, Django's behavior is "
"unspecified and database-dependent."
msgstr ""
"Si vous interceptez les exceptions générées par des requêtes SQL brutes, le "
"comportement de Django n'est pas défini et dépend de la base de données."

msgid ""
"You may need to manually revert app state when rolling back a transaction."
msgstr ""
"Vous devrez peut-être revenir manuellement à un précédent état de "
"l'application en cas d'annulation d'une transaction."

msgid ""
"The values of a model's fields won't be reverted when a transaction rollback "
"happens. This could lead to an inconsistent model state unless you manually "
"restore the original field values."
msgstr ""
"Les valeurs des champs d'un modèle ne seront pas réinitialisées lorsqu'une "
"rétrogradation des transactions se produit. Cela pourrait conduire à un état "
"de modèle incompatible à moins que vous ne restauriez manuellement les "
"valeurs de champ d'origine."

msgid ""
"For example, given ``MyModel`` with an ``active`` field, this snippet "
"ensures that the ``if obj.active`` check at the end uses the correct value "
"if updating ``active`` to ``True`` fails in the transaction::"
msgstr ""
"Par exemple, considérons ``MyModel`` avec un champ ``active``, cet extrait "
"garantit que la vérification à la fin ``if obj.active`` utilise la valeur "
"correcte si la mise à jour de ``active`` vers ``True`` échoue dans la "
"transaction ::"

msgid ""
"This also applies to any other mechanism that may hold app state, such as "
"caching or global variables. For example, if the code proactively updates "
"data in the cache after saving an object, it's recommended to use :ref:"
"`transaction.on_commit() <performing-actions-after-commit>` instead, to "
"defer cache alterations until the transaction is actually committed."
msgstr ""
"Ceci s'applique également à tout autre mécanisme pouvant conserver un état "
"d'application, comme le cache ou les variables globales. Par exemple, si le "
"code met à jour proactivement les données du cache après avoir enregistré un "
"objet, il est recommandé d'utiliser plutôt :ref:`transaction.on_commit() "
"<performing-actions-after-commit>` pour différer les modifications du cache "
"jusqu'à ce que la transaction soit validée."

msgid ""
"In order to guarantee atomicity, ``atomic`` disables some APIs. Attempting "
"to commit, roll back, or change the autocommit state of the database "
"connection within an ``atomic`` block will raise an exception."
msgstr ""
"Afin de garantir l'atomicité, ``atomic`` désactive certaines API. Si vous "
"tentez de valider une transaction, de l'annuler ou de modifier l'état de "
"validation automatique de la connexion de base de données à l'intérieur d'un "
"bloc ``atomic``, vous obtiendrez une exception."

msgid ""
"``atomic`` takes a ``using`` argument which should be the name of a "
"database. If this argument isn't provided, Django uses the ``\"default\"`` "
"database."
msgstr ""
"``atomic`` accepte un paramètre ``using`` devant correspondre au nom d'une "
"base de données. Si ce paramètre n'est pas présent, Django utilise la base "
"de données ``\"default\"``."

msgid "Under the hood, Django's transaction management code:"
msgstr "En arrière-plan, le code de gestion des transactions de Django :"

msgid "opens a transaction when entering the outermost ``atomic`` block;"
msgstr "ouvre une transaction lorsqu'il entre dans le premier bloc ``atomic``;"

msgid "creates a savepoint when entering an inner ``atomic`` block;"
msgstr ""
"crée un point de sauvegarde lorsqu'il entre dans un bloc ``atomic`` "
"imbriqué ;"

msgid "releases or rolls back to the savepoint when exiting an inner block;"
msgstr ""
"libère le point de sauvegarde ou annule la transaction jusqu'au point de "
"sauvegarde en quittant le bloc imbriqué ;"

msgid "commits or rolls back the transaction when exiting the outermost block."
msgstr "valide ou annule la transaction en quittant le bloc de départ."

msgid ""
"You can disable the creation of savepoints for inner blocks by setting the "
"``savepoint`` argument to ``False``. If an exception occurs, Django will "
"perform the rollback when exiting the first parent block with a savepoint if "
"there is one, and the outermost block otherwise. Atomicity is still "
"guaranteed by the outer transaction. This option should only be used if the "
"overhead of savepoints is noticeable. It has the drawback of breaking the "
"error handling described above."
msgstr ""
"Vous pouvez désactiver la création de points de sauvegarde pour les blocs "
"imbriqués en définissant le paramètre ``savepoint`` à ``False``. Si une "
"exception survient, Django procède à l'annulation de la transaction au "
"moment de quitter le premier bloc ayant un point de sauvegarde, le cas "
"échéant, ou le bloc initial sinon. L'atomicité est toujours garantie par la "
"transaction du bloc initial. Cette option ne devrait être utilisée que si la "
"création des points de sauvegarde affecte les performances de manière "
"évidente. Le désavantage est que cela casse la gestion d'erreurs telle que "
"décrite précédemment."

msgid ""
"You may use ``atomic`` when autocommit is turned off. It will only use "
"savepoints, even for the outermost block."
msgstr ""
"Il est possible d'utiliser ``atomic`` lorsque la validation automatique est "
"désactivée. Seuls des points de sauvegarde seront utilisés, même pour le "
"bloc initial."

msgid "Performance considerations"
msgstr "Considérations sur la performance"

msgid ""
"Open transactions have a performance cost for your database server. To "
"minimize this overhead, keep your transactions as short as possible. This is "
"especially important if you're using :func:`atomic` in long-running "
"processes, outside of Django's request / response cycle."
msgstr ""
"Les transactions ouvertes constituent une pénalité de performance pour votre "
"serveur de base de données. Pour minimiser cet impact, gardez vos "
"transactions aussi brèves que possible. C'est particulièrement important si "
"vous utilisez :func:`atomic` dans des processus de longue durée, en dehors "
"du cycle requête/réponse de Django."

msgid "Autocommit"
msgstr "Autocommit"

msgid "Why Django uses autocommit"
msgstr "Pourquoi Django utilise-t-il l'autocommit"

msgid ""
"In the SQL standards, each SQL query starts a transaction, unless one is "
"already active. Such transactions must then be explicitly committed or "
"rolled back."
msgstr ""
"Dans le standard SQL, chaque requête SQL démarre une transaction, sauf s'il "
"y en a déjà une en cours. De telles transactions doivent ensuite être "
"explicitement soit validées (commit), soit annulées (rollback)."

msgid ""
"This isn't always convenient for application developers. To alleviate this "
"problem, most databases provide an autocommit mode. When autocommit is "
"turned on and no transaction is active, each SQL query gets wrapped in its "
"own transaction. In other words, not only does each such query start a "
"transaction, but the transaction also gets automatically committed or rolled "
"back, depending on whether the query succeeded."
msgstr ""
"Ce n'est pas toujours très pratique pour les développeurs d'applications. "
"Pour contourner ce problème, la plupart des bases de données mettent à "
"disposition un mode « autocommit ». Lorsque ce mode est actif et qu'il n'y a "
"pas de transaction ouverte, chaque requête SQL est englobée dans sa propre "
"transaction. En d'autres termes, chacune de ces requêtes non seulement "
"démarre une transaction, mais cette transaction est aussi automatiquement "
"validée ou annulée en fonction du résultat de la requête."

msgid ""
":pep:`249`, the Python Database API Specification v2.0, requires autocommit "
"to be initially turned off. Django overrides this default and turns "
"autocommit on."
msgstr ""
":pep:`249`, la spécification d'API de base de données Python v2.0, exige que "
"le mode autocommit soit initialement désactivé. Django surcharge ce "
"comportement par défaut et active le mode autocommit."

msgid ""
"To avoid this, you can :ref:`deactivate the transaction management "
"<deactivate-transaction-management>`, but it isn't recommended."
msgstr ""
"Pour empêcher cela, vous pouvez :ref:`désactiver la gestion des transactions "
"<deactivate-transaction-management>`, mais ce n'est pas recommandé."

msgid "Deactivating transaction management"
msgstr "Désactivation de la gestion des transaction"

msgid ""
"You can totally disable Django's transaction management for a given database "
"by setting :setting:`AUTOCOMMIT <DATABASE-AUTOCOMMIT>` to ``False`` in its "
"configuration. If you do this, Django won't enable autocommit, and won't "
"perform any commits. You'll get the regular behavior of the underlying "
"database library."
msgstr ""
"Vous pouvez désactiver totalement la gestion des transactions de Django pour "
"une base de données précise en définissant :setting:`AUTOCOMMIT <DATABASE-"
"AUTOCOMMIT>` à ``False`` dans sa configuration. Si vous faites cela, Django "
"n'activera pas le mode autocommit et n'effectue aucune opération de commit. "
"Vous obtenez alors le comportement habituel de la bibliothèque de base de "
"données sous-jacente."

msgid ""
"This requires you to commit explicitly every transaction, even those started "
"by Django or by third-party libraries. Thus, this is best used in situations "
"where you want to run your own transaction-controlling middleware or do "
"something really strange."
msgstr ""
"Cela demande que vous effectuiez un commit explicite de chaque transaction, "
"même de celles initiées par Django ou par des bibliothèques tierces. Ainsi, "
"cela convient mieux à des situations où vous souhaitez mettre en place votre "
"propre intergiciel de gestion des transactions ou que vous faites des choses "
"plutôt étranges."

msgid "Performing actions after commit"
msgstr "Lancement d'actions après le commit"

msgid ""
"Sometimes you need to perform an action related to the current database "
"transaction, but only if the transaction successfully commits. Examples "
"might include a background task, an email notification, or a cache "
"invalidation."
msgstr ""
"Il peut arriver que vous ayez besoin d'effectuer une action liée à la "
"transaction de base de données en cours, mais seulement si la transaction se "
"termine par un commit réussi. On peut citer comme exemple une tâche "
"d'arrière-plan, une notification par courriel ou une invalidation de cache."

msgid ""
":func:`on_commit` allows you to register callbacks that will be executed "
"after the open transaction is successfully committed:"
msgstr ""
":func:`on_commit` permet d'inscrire des fonctions de rappel qui seront "
"exécutées après le commit réussi de la transaction ouverte :"

msgid "Pass a function, or any callable, to :func:`on_commit`::"
msgstr ""
"Passez une fonction, ou tout autre objet exécutable, à :func:`on_commit`::"

msgid ""
"Callbacks will not be passed any arguments, but you can bind them with :func:"
"`functools.partial`::"
msgstr ""
"Les fonctions de rappel ne recevront aucun paramètre, mais vous pouvez en "
"lier par la fonction :func:`functools.partial`::"

msgid ""
"Callbacks are called after the open transaction is successfully committed. "
"If the transaction is instead rolled back (typically when an unhandled "
"exception is raised in an :func:`atomic` block), the callback will be "
"discarded, and never called."
msgstr ""
"Les fonctions de rappel sont appelées après que la transaction ouverte est "
"validée avec succès. Si au contraire la transaction est annulée (rollback), "
"typiquement lorsqu'une exception non traitée est générée dans le bloc :func:"
"`atomic`, la fonction est ignorée et ne sera jamais appelée."

msgid ""
"If you call ``on_commit()`` while there isn't an open transaction, the "
"callback will be executed immediately."
msgstr ""
"Si vous appelez ``on_commit()`` alors qu'aucune transaction n'est ouverte, "
"la fonction transmise est immédiatement exécutée."

msgid ""
"It's sometimes useful to register callbacks that can fail. Passing "
"``robust=True`` allows the next callbacks to be executed even if the current "
"one throws an exception. All errors derived from Python's ``Exception`` "
"class are caught and logged to the ``django.db.backends.base`` logger."
msgstr ""
"Il peut parfois être utile d'inscrire des fonctions de rappel qui peuvent "
"échouer. En passant ``robust=True``, cela permet à la fonction de rappel "
"suivante d'être exécutée même quand la fonction en cours génère une "
"exception. Toutes les erreurs dérivées de la classe ``Exception`` de Python "
"sont interceptées et journalisées dans le journaliseur ``django.db.backends."
"base``."

msgid ""
"You can use :meth:`.TestCase.captureOnCommitCallbacks` to test callbacks "
"registered with :func:`on_commit`."
msgstr ""
"Vous pouvez utiliser :meth:`.TestCase.captureOnCommitCallbacks` pour tester "
"les fonctions de rappel inscrites avec :func:`on_commit`."

msgid "Savepoints"
msgstr "Points de sauvegarde (« savepoints »)"

msgid ""
"Savepoints (i.e. nested :func:`atomic` blocks) are handled correctly. That "
"is, an :func:`on_commit` callable registered after a savepoint (in a nested :"
"func:`atomic` block) will be called after the outer transaction is "
"committed, but not if a rollback to that savepoint or any previous savepoint "
"occurred during the transaction::"
msgstr ""
"Les points de sauvegarde (blocs :func:`atomic` imbriqués) sont gérés "
"correctement. C'est-à-dire qu'une fonction inscrite par :func:`on_commit` "
"après un point de sauvegarde (dans un bloc :func:`atomic` imbriqué) sera "
"appelée après le commit de la transaction la plus externe, mais pas dans le "
"cas où une annulation (rollback) de ce point de sauvegarde ou de tout autre "
"point de sauvegarde précédent se produit pendant la transaction ::"

msgid ""
"On the other hand, when a savepoint is rolled back (due to an exception "
"being raised), the inner callable will not be called::"
msgstr ""
"D'un autre côté, lorsqu'un point de sauvegarde est annulé (en raison de "
"l'apparition d'une exception), la fonction définie à l'intérieur de point de "
"sauvegarde ne sera pas appelée :"

msgid "Order of execution"
msgstr "Ordre d'exécution"

msgid ""
"On-commit functions for a given transaction are executed in the order they "
"were registered."
msgstr ""
"Les fonctions ``on_commit`` d'une transaction donnée sont exécutées dans "
"l'ordre de leur inscription."

msgid "Exception handling"
msgstr "Gestion des exceptions"

msgid ""
"If one on-commit function registered with ``robust=False`` within a given "
"transaction raises an uncaught exception, no later registered functions in "
"that same transaction will run. This is the same behavior as if you'd "
"executed the functions sequentially yourself without :func:`on_commit`."
msgstr ""
"Si l'une des fonctions ``on_commit`` inscrites avec ``robust=False`` dans "
"une transaction donnée génère une exception non traitée, aucune fonction "
"inscrite à la suite dans cette même transaction ne sera exécutée. Ceci "
"correspond au même comportement qui se serait produit si vous aviez exécuté "
"ces fonctions séquentiellement vous-même sans :func:`on_commit`."

msgid "Timing of execution"
msgstr "Ordre d'exécution"

msgid ""
"Your callbacks are executed *after* a successful commit, so a failure in a "
"callback will not cause the transaction to roll back. They are executed "
"conditionally upon the success of the transaction, but they are not *part* "
"of the transaction. For the intended use cases (mail notifications, "
"background tasks, etc.), this should be fine. If it's not (if your follow-up "
"action is so critical that its failure should mean the failure of the "
"transaction itself), then you don't want to use the :func:`on_commit` hook. "
"Instead, you may want `two-phase commit`_ such as the :ref:`psycopg Two-"
"Phase Commit protocol support <psycopg:two-phase-commit>` and the :pep:"
"`optional Two-Phase Commit Extensions in the Python DB-API specification "
"<249#optional-two-phase-commit-extensions>`."
msgstr ""
"Les fonctions de rappel sont exécutées *après* un commit réussi, ce qui fait "
"qu'une exception dans une fonction de rappel ne provoquera pas d'annulation "
"de transaction. Elles ne sont exécutées qu'en cas de succès de la "
"transaction, mais *sans* faire partie de la transaction. Pour les cas "
"d'utilisation visés (notifications par courriel, tâches d'arrière-plan, "
"etc.) cela devrait convenir. Dans le cas contraire (par exemple si l'action "
"à effectuer est si critique que son échec devrait aussi faire échouer la "
"transaction principale), il ne faut alors pas exploiter le point d'entrée :"
"func:`on_commit`. Une alternative possible est un `commit en deux phases`_ "
"tel que la :ref:`prise en charge du protocole de commit en deux phases de "
"psycopg<psycopg:two-phase-commit>` ou les :pep:`extensions facultatives de "
"commit en deux phases dans la spécification DB-API de Python <249#optional-"
"two-phase-commit-extensions>`."

msgid ""
"Callbacks are not run until autocommit is restored on the connection "
"following the commit (because otherwise any queries done in a callback would "
"open an implicit transaction, preventing the connection from going back into "
"autocommit mode)."
msgstr ""
"Les fonctions de rappel ne sont pas appelées avant que la connexion ne "
"repasse en mode autocommit après le commit (sinon toute requête dans une "
"fonction de rappel ouvrirait une transaction implicite empêchant la "
"connexion de repasser en mode de commit automatique)."

msgid ""
"When in autocommit mode and outside of an :func:`atomic` block, the function "
"will run immediately, not on commit."
msgstr ""
"Si l'on se trouve déjà en mode autocommit et en-dehors d'un bloc :func:"
"`atomic`, la fonction est immédiatement exécutée sans attendre de commit."

msgid ""
"On-commit functions only work with :ref:`autocommit mode <managing-"
"autocommit>` and the :func:`atomic` (or :setting:`ATOMIC_REQUESTS <DATABASE-"
"ATOMIC_REQUESTS>`) transaction API. Calling :func:`on_commit` when "
"autocommit is disabled and you are not within an atomic block will result in "
"an error."
msgstr ""
"Les fonctions ``on_commit`` ne fonctionnent qu'en :ref:`mode autocommit "
"<managing-autocommit>` et avec l'API de transaction :func:`atomic` (ou :"
"setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>`). L'appel à :func:"
"`on_commit` lorsque le mode autocommit est désactivé et en-dehors d'un bloc "
"atomique produit une erreur."

msgid "Use in tests"
msgstr "Utilisation dans les tests"

msgid ""
"Django's :class:`~django.test.TestCase` class wraps each test in a "
"transaction and rolls back that transaction after each test, in order to "
"provide test isolation. This means that no transaction is ever actually "
"committed, thus your :func:`on_commit` callbacks will never be run."
msgstr ""
"La classe :class:`~django.test.TestCase` de Django enveloppe chaque test "
"dans une transaction et annule cette transaction après chaque test, afin de "
"garantir l'isolation des tests. Cela signifie qu'aucune transaction n'est "
"réellement suivie d'un commit et donc qu'aucune des fonctions de rappel :"
"func:`on_commit` ne sera jamais exécutée."

msgid ""
"You can overcome this limitation by using :meth:`.TestCase."
"captureOnCommitCallbacks`. This captures your :func:`on_commit` callbacks in "
"a list, allowing you to make assertions on them, or emulate the transaction "
"committing by calling them."
msgstr ""
"Vous pouvez surmonter cette restriction en utilisant :meth:`.TestCase."
"captureOnCommitCallbacks`. Cette méthode capture les fonctions de rappel :"
"func:`on_commit` dans une liste, vous permettant de réaliser des assertions "
"sur celles-ci ou d'émuler la validation de la transaction en les appelant."

msgid ""
"Another way to overcome the limitation is to use :class:`~django.test."
"TransactionTestCase` instead of :class:`~django.test.TestCase`. This will "
"mean your transactions are committed, and the callbacks will run. However :"
"class:`~django.test.TransactionTestCase` flushes the database between tests, "
"which is significantly slower than :class:`~django.test.TestCase`\\'s "
"isolation."
msgstr ""
"Une autre manière de passer outre cette restriction est d'utiliser :class:"
"`~django.test.TransactionTestCase` au lieu de :class:`~django.test."
"TestCase`. Cela signifie que les transactions sont validées et que les "
"fonctions de rappel sont exécutées. Cependant, :class:`~django.test."
"TransactionTestCase` réinitialise la base de données entre les tests, ce qui "
"est clairement plus lent que l'isolation apportée par :class:`~django.test."
"TestCase`."

msgid "Why no rollback hook?"
msgstr "Pourquoi pas de point d'entrée pour les transactions annulées ?"

msgid ""
"A rollback hook is harder to implement robustly than a commit hook, since a "
"variety of things can cause an implicit rollback."
msgstr ""
"Un point d'entrée pour les transactions annulées (rollback) est plus "
"difficile à implémenter de manière solide qu'un point d'entrée de commit, "
"car plusieurs choses peuvent provoquer une annulation implicite."

msgid ""
"For instance, if your database connection is dropped because your process "
"was killed without a chance to shut down gracefully, your rollback hook will "
"never run."
msgstr ""
"Par exemple, si la connexion à la base de données s'interrompt en raison "
"d'un processus tué sans aucune chance de terminaison propre, le point "
"d'entrée d'annulation ne sera jamais exécuté."

msgid ""
"But there is a solution: instead of doing something during the atomic block "
"(transaction) and then undoing it if the transaction fails, use :func:"
"`on_commit` to delay doing it in the first place until after the transaction "
"succeeds. It's a lot easier to undo something you never did in the first "
"place!"
msgstr ""
"Mais il existe une solution : au lieu de faire quelque chose à l'intérieur "
"du bloc atomique (transaction) puis de le défaire en cas d'échec de "
"transaction, utilisez :func:`on_commit` pour déporter la tâche au moment où "
"la transaction a réussi. C'est beaucoup plus facile de défaire quelque chose "
"que l'on n'a jamais fait !"

msgid "Low-level APIs"
msgstr "API de bas niveau"

msgid ""
"Always prefer :func:`atomic` if possible at all. It accounts for the "
"idiosyncrasies of each database and prevents invalid operations."
msgstr ""
"Si possible, préférez toujours :func:`atomic`. Il prend en compte les "
"particularités de chaque base de données et évite les opérations non valides."

msgid ""
"The low level APIs are only useful if you're implementing your own "
"transaction management."
msgstr ""
"L'API de bas niveau n'est utile que si vous implémentez votre propre gestion "
"des transactions."

msgid ""
"Django provides an API in the :mod:`django.db.transaction` module to manage "
"the autocommit state of each database connection."
msgstr ""
"Django fournit une API dans le module :mod:`django.db.transaction` pour "
"gérer l'état de validation automatique de chaque connexion de base de "
"données."

msgid ""
"These functions take a ``using`` argument which should be the name of a "
"database. If it isn't provided, Django uses the ``\"default\"`` database."
msgstr ""
"Ces fonctions acceptent un paramètre ``using`` qui doit correspondre au nom "
"d'une base de données. Si ce paramètre n'est pas présent, Django utilise la "
"base de données ``\"default\"``."

msgid ""
"Autocommit is initially turned on. If you turn it off, it's your "
"responsibility to restore it."
msgstr ""
"La validation automatique (« autocommit ») est initialement activée. Si vous "
"la désactivez, il est de votre responsabilité de la restaurer ensuite."

msgid ""
"Once you turn autocommit off, you get the default behavior of your database "
"adapter, and Django won't help you. Although that behavior is specified in :"
"pep:`249`, implementations of adapters aren't always consistent with one "
"another. Review the documentation of the adapter you're using carefully."
msgstr ""
"Dès que vous désactivez la validation automatique, vous obtenez le "
"comportement par défaut de votre adaptateur de base de données et Django ne "
"vous aide plus. Même si ce comportement fait l'objet de la :pep:`249`, les "
"implémentations des adaptateurs ne sont pas toujours cohérentes entre elles. "
"Parcourez attentivement la documentation de l'adaptateur que vous utilisez."

msgid ""
"You must ensure that no transaction is active, usually by issuing a :func:"
"`commit` or a :func:`rollback`, before turning autocommit back on."
msgstr ""
"Vous devez vous assurer qu'aucune transaction n'est pendante, généralement "
"en appelant :func:`commit` ou :func:`rollback` avant de réactiver la "
"validation automatique."

msgid ""
"Django will refuse to turn autocommit off when an :func:`atomic` block is "
"active, because that would break atomicity."
msgstr ""
"Django refuse de désactiver la validation automatique lorsqu'un bloc :func:"
"`atomic` est actif, car l'atomicité ne serait alors plus respectée."

msgid ""
"A transaction is an atomic set of database queries. Even if your program "
"crashes, the database guarantees that either all the changes will be "
"applied, or none of them."
msgstr ""
"Une transaction est un ensemble atomique de requêtes de base de données. "
"Même si votre programme se plante, la base de données garantit que soit tous "
"les changements seront appliqués, soit aucun."

msgid ""
"Django doesn't provide an API to start a transaction. The expected way to "
"start a transaction is to disable autocommit with :func:`set_autocommit`."
msgstr ""
"Django n'offre pas d'API pour démarrer une transaction. La manière attendue "
"de démarrer une transaction est de désactiver la validation automatique "
"avec :func:`set_autocommit`."

msgid ""
"Once you're in a transaction, you can choose either to apply the changes "
"you've performed until this point with :func:`commit`, or to cancel them "
"with :func:`rollback`. These functions are defined in :mod:`django.db."
"transaction`."
msgstr ""
"Une fois dans la transaction, vous pouvez choisir d'appliquer les "
"modifications effectuées jusqu'à ce point avec :func:`commit`, ou de toutes "
"les annuler avec :func:`rollback`. Ces fonctions sont définies dans :mod:"
"`django.db.transaction`."

msgid ""
"Django will refuse to commit or to rollback when an :func:`atomic` block is "
"active, because that would break atomicity."
msgstr ""
"Django refuse de valider ou d'annuler une transaction lorsqu'un bloc :func:"
"`atomic` est actif, car l'atomicité ne serait alors plus respectée."

msgid ""
"A savepoint is a marker within a transaction that enables you to roll back "
"part of a transaction, rather than the full transaction. Savepoints are "
"available with the SQLite, PostgreSQL, Oracle, and MySQL (when using the "
"InnoDB storage engine) backends. Other backends provide the savepoint "
"functions, but they're empty operations -- they don't actually do anything."
msgstr ""
"Un point de sauvegarde est un marqueur dans une transaction qui vous permet "
"d'annuler une transaction en partie, plutôt que dans sa totalité. Les points "
"de sauvegarde sont disponibles pour les moteurs SQLite, PostgreSQL, Oracle "
"et MySQL (avec le moteur de stockage InnoDB). D'autres moteurs fournissent "
"les fonctions des points de sauvegarde, mais ces fonctions sont vides, elles "
"ne font rien du tout."

msgid ""
"Savepoints aren't especially useful if you are using autocommit, the default "
"behavior of Django. However, once you open a transaction with :func:"
"`atomic`, you build up a series of database operations awaiting a commit or "
"rollback. If you issue a rollback, the entire transaction is rolled back. "
"Savepoints provide the ability to perform a fine-grained rollback, rather "
"than the full rollback that would be performed by ``transaction.rollback()``."
msgstr ""
"Les points de sauvegarde ne sont pas particulièrement utiles quand la "
"validation automatique est active, ce qui est le comportement par défaut de "
"Django. Cependant, dès que vous ouvrez une transaction avec :func:`atomic`, "
"vous accumulez une série d'opérations de base de données en attente de "
"validation ou d'annulation. Lorsque vous annulez avec un « rollback », toute "
"la transaction est annulée Les points de sauvegarde permettent d'annuler des "
"opérations de manière plus sélective, plutôt que d'annuler en bloc comme le "
"fait ``transaction.rollback()``."

msgid ""
"When the :func:`atomic` decorator is nested, it creates a savepoint to allow "
"partial commit or rollback. You're strongly encouraged to use :func:`atomic` "
"rather than the functions described below, but they're still part of the "
"public API, and there's no plan to deprecate them."
msgstr ""
"Lorsque le décorateur :func:`atomic` est imbriqué, il crée un point de "
"sauvegarde pour permettre une validation ou une annulation partielle. Vous "
"êtes fortement encouragé à utiliser :func:`atomic` plutôt que les fonctions "
"présentées ci-dessous, mais elles font tout de même partie de l'API "
"publique, et il n'est pas prévu de les rendre obsolètes."

msgid ""
"Each of these functions takes a ``using`` argument which should be the name "
"of a database for which the behavior applies.  If no ``using`` argument is "
"provided then the ``\"default\"`` database is used."
msgstr ""
"Chacune de ces fonctions accepte un paramètre ``using`` devant correspondre "
"au nom de la base de données pour laquelle le comportement s'applique. Si "
"aucun paramètre ``using`` n'est transmis, c'est la base de données "
"``\"default\"`` qui est utilisée."

msgid ""
"Savepoints are controlled by three functions in :mod:`django.db.transaction`:"
msgstr ""
"Les points de sauvegarde sont contrôlés par trois fonctions dans :mod:"
"`django.db.transaction`:"

msgid ""
"Creates a new savepoint. This marks a point in the transaction that is known "
"to be in a \"good\" state. Returns the savepoint ID (``sid``)."
msgstr ""
"Crée un nouveau point de sauvegarde. Un point est marqué dans la "
"transaction, à un état qui est reconnu comme « bon ». Renvoie l'identifiant "
"du point de sauvegarde (``sid``)."

msgid ""
"Releases savepoint ``sid``. The changes performed since the savepoint was "
"created become part of the transaction."
msgstr ""
"Libère le point de sauvegarde ``sid``. Les modifications effectuées depuis "
"la création du point de sauvegarde sont intégrées dans la transaction."

msgid "Rolls back the transaction to savepoint ``sid``."
msgstr "Annule la transaction en revenant au point de sauvegarde ``sid``."

msgid ""
"These functions do nothing if savepoints aren't supported or if the database "
"is in autocommit mode."
msgstr ""
"Ces fonctions ne font rien si les points de sauvegarde ne sont pas pris en "
"charge ou si la base de données est en mode de validation automatique."

msgid "In addition, there's a utility function:"
msgstr "Une fonction utilitaire est également disponible :"

msgid "Resets the counter used to generate unique savepoint IDs."
msgstr ""
"Réinitialise le compteur utilisé pour générer les identifiants uniques des "
"points de sauvegarde."

msgid "The following example demonstrates the use of savepoints::"
msgstr "L'exemple suivant illustre l'utilisation des points de sauvegarde ::"

msgid ""
"Savepoints may be used to recover from a database error by performing a "
"partial rollback. If you're doing this inside an :func:`atomic` block, the "
"entire block will still be rolled back, because it doesn't know you've "
"handled the situation at a lower level! To prevent this, you can control the "
"rollback behavior with the following functions."
msgstr ""
"Les points de sauvegarde peuvent être utilisés pour se rétablir après une "
"erreur de base de données en effectuant une annulation partielle des "
"opérations. Si vous faites cela à l'intérieur d'un bloc :func:`atomic`, tout "
"le bloc sera quand même annulé, car Django ne sait pas que vous avez géré la "
"situation à un plus bas niveau ! Pour empêcher cela, vous pouvez contrôler "
"le comportement d'annulation avec les fonctions suivantes."

msgid ""
"Setting the rollback flag to ``True`` forces a rollback when exiting the "
"innermost atomic block. This may be useful to trigger a rollback without "
"raising an exception."
msgstr ""
"En définissant le drapeau ``rollback`` à ``True``, vous forcez une "
"annulation lorsque vous sortez du bloc ``atomic`` le plus proche. Cela peut "
"être utile pour provoquer une annulation sans générer d'exception."

msgid ""
"Setting it to ``False`` prevents such a rollback. Before doing that, make "
"sure you've rolled back the transaction to a known-good savepoint within the "
"current atomic block! Otherwise you're breaking atomicity and data "
"corruption may occur."
msgstr ""
"En le définissant à ``False``, vous empêchez une telle annulation. Avant de "
"faire cela, assurez-vous d'avoir bien annulé la transaction jusqu'à un point "
"de sauvegarde en bon état à l'intérieur du bloc ``atomic`` actuel. Sinon, "
"vous cassez l'atomicité et des corruptions de données peuvent apparaître."

msgid "Database-specific notes"
msgstr "Notes spécifiques à certaines bases de données"

msgid "Savepoints in SQLite"
msgstr "Points de sauvegarde dans "

msgid ""
"While SQLite supports savepoints, a flaw in the design of the :mod:`sqlite3` "
"module makes them hardly usable."
msgstr ""
"Même si les points de sauvegarde sont pris à charge par SQLite, un défaut de "
"conception dans le module :mod:`sqlite3` les rend presque inutilisables."

msgid ""
"When autocommit is enabled, savepoints don't make sense. When it's "
"disabled, :mod:`sqlite3` commits implicitly before savepoint statements. (In "
"fact, it commits before any statement other than ``SELECT``, ``INSERT``, "
"``UPDATE``, ``DELETE`` and ``REPLACE``.) This bug has two consequences:"
msgstr ""
"Lorsque la validation automatique est active, les points de sauvegarde n'ont "
"pas de raison d'être. Dans le cas contraire, :mod:`sqlite3` valide "
"implicitement la transaction avant les instructions de points de sauvegarde "
"(en fait, il valide avant toute instruction autre que ``SELECT``, "
"``INSERT``, ``UPDATE``, ``DELETE`` et ``REPLACE``). Ce bogue a deux "
"conséquences :"

msgid ""
"The low level APIs for savepoints are only usable inside a transaction i.e. "
"inside an :func:`atomic` block."
msgstr ""
"L'API de bas niveau des points de sauvegarde n'est utilisable qu'à "
"l'intérieur d'une transaction, c'est-à-dire dans un bloc :func:`atomic`."

msgid "It's impossible to use :func:`atomic` when autocommit is turned off."
msgstr ""
"Il est impossible d'utiliser :func:`atomic` lorsque la validation "
"automatique est désactivée."

msgid "Transactions in MySQL"
msgstr "Transactions dans MySQL"

msgid ""
"If you're using MySQL, your tables may or may not support transactions; it "
"depends on your MySQL version and the table types you're using. (By \"table "
"types,\" we mean something like \"InnoDB\" or \"MyISAM\".) MySQL transaction "
"peculiarities are outside the scope of this article, but the MySQL site has "
"`information on MySQL transactions`_."
msgstr ""
"Si vous utilisez MySQL, la prise en charge des transactions par vos tables "
"varie ; tout dépend de la version de MySQL et des types de tables que vous "
"utilisez (par « type de table », nous entendons quelque chose comme "
"« InnoDB » ou « MyISAM »). Les particularités des transactions de MySQL vont "
"au-delà du thème de cette documentation, mais le site de MySQL possède des "
"`informations sur les transactions dans MySQL`_."

msgid ""
"If your MySQL setup does *not* support transactions, then Django will always "
"function in autocommit mode: statements will be executed and committed as "
"soon as they're called. If your MySQL setup *does* support transactions, "
"Django will handle transactions as explained in this document."
msgstr ""
"Si votre configuration MySQL ne gère *pas* les transactions, Django "
"fonctionne toujours en mode de validation automatique : les instructions "
"sont exécutées et validées dès qu'elles sont émises. Si votre configuration "
"MySQL *gère* les transactions, Django traite les transactions comme expliqué "
"dans ce document."

msgid "Handling exceptions within PostgreSQL transactions"
msgstr "Traitement des exceptions dans les transactions PostgreSQL"

msgid ""
"This section is relevant only if you're implementing your own transaction "
"management. This problem cannot occur in Django's default mode and :func:"
"`atomic` handles it automatically."
msgstr ""
"Cette section n'a de sens que si vous implémentez votre propre gestion des "
"transactions. Ce problème ne peut pas survenir dans le mode par défaut de "
"Django et :func:`atomic` s'en charge automatiquement."

msgid ""
"Inside a transaction, when a call to a PostgreSQL cursor raises an exception "
"(typically ``IntegrityError``), all subsequent SQL in the same transaction "
"will fail with the error \"current transaction is aborted, queries ignored "
"until end of transaction block\". While the basic use of ``save()`` is "
"unlikely to raise an exception in PostgreSQL, there are more advanced usage "
"patterns which might, such as saving objects with unique fields, saving "
"using the ``force_insert``/``force_update`` flag, or invoking custom SQL."
msgstr ""
"À l'intérieur d'une transaction, lorsque l'appel à un curseur PostgreSQL "
"génère une exception (typiquement ``IntegrityError``), toutes les commandes "
"SQL suivantes dans la même transaction échouent avec l'erreur « current "
"transaction is aborted, queries ignored until end of transaction block ». "
"Bien qu'il soit improbable qu'une utilisation basique de ``save()`` génère "
"une exception avec PostgreSQL, il y a des schémas d'utilisation plus pointus "
"qui sont susceptibles de le faire, comme l'enregistrement d'objets avec des "
"champs uniques, l'enregistrement avec les options ``force_insert``/"
"``force_update`` ou l'appel à des instructions SQL personnalisées."

msgid "There are several ways to recover from this sort of error."
msgstr "Il existe plusieurs manières de se sortir de ce genre d'erreurs."

msgid "Transaction rollback"
msgstr "Annulation de la transaction"

msgid "The first option is to roll back the entire transaction. For example::"
msgstr ""
"La première option est d'annuler la totalité de la transaction. Par "
"exemple ::"

msgid ""
"Calling ``transaction.rollback()`` rolls back the entire transaction. Any "
"uncommitted database operations will be lost. In this example, the changes "
"made by ``a.save()`` would be lost, even though that operation raised no "
"error itself."
msgstr ""
"L'appel de ``transaction.rollback()`` annule la totalité de la transaction. "
"Toute opération de base de données non validée sera perdue. Dans cet "
"exemple, les modifications effectuées par ``a.save()`` seront perdues, même "
"si cette opération n'a pas elle-même généré d'erreur."

msgid "Savepoint rollback"
msgstr "Annulation du point de sauvegarde"

msgid ""
"You can use :ref:`savepoints <topics-db-transactions-savepoints>` to control "
"the extent of a rollback. Before performing a database operation that could "
"fail, you can set or update the savepoint; that way, if the operation fails, "
"you can roll back the single offending operation, rather than the entire "
"transaction. For example::"
msgstr ""
"Vous pouvez utiliser des :ref:`points de sauvegarde <topics-db-transactions-"
"savepoints>` pour contrôler l'étendue d'une annulation. Avant d'effectuer "
"une opération de base de données potentiellement délicate, vous pouvez "
"définir ou mettre à jour le point de sauvegarde ; de cette façon, si "
"l'opération échoue, vous pouvez annuler précisément l'opération concernée, "
"plutôt que la totalité de la transaction. Par exemple ::"

msgid ""
"In this example, ``a.save()`` will not be undone in the case where ``b."
"save()`` raises an exception."
msgstr ""
"Dans cet exemple, ``a.save()`` ne sera pas annulé dans le cas où ``b."
"save()`` génère une exception."

msgid "Sending email"
msgstr "Envoi de messages électroniques"

msgid ""
"Although Python provides a mail sending interface via the :mod:`smtplib` "
"module, Django provides a couple of light wrappers over it. These wrappers "
"are provided to make sending email extra quick, to help test email sending "
"during development, and to provide support for platforms that can't use SMTP."
msgstr ""
"Même si Python fournit une interface d'envoi de courriels via le module :mod:"
"`smtplib`, Django propose quelques adaptateur légers supplémentaires. Ces "
"adaptateurs sont fournis pour rendre encore plus direct l'envoi de "
"courriels, pour faciliter le test d'envoi de courriels durant le "
"développement et pour fournir la prise en charge sur les plates-formes qui "
"ne peuvent pas utiliser SMTP."

msgid "The code lives in the ``django.core.mail`` module."
msgstr "Le code se trouve dans le module ``django.core.mail``."

msgid "In two lines::"
msgstr "En deux lignes ::"

msgid ""
"Mail is sent using the SMTP host and port specified in the :setting:"
"`EMAIL_HOST` and :setting:`EMAIL_PORT` settings. The :setting:"
"`EMAIL_HOST_USER` and :setting:`EMAIL_HOST_PASSWORD` settings, if set, are "
"used to authenticate to the SMTP server, and the :setting:`EMAIL_USE_TLS` "
"and :setting:`EMAIL_USE_SSL` settings control whether a secure connection is "
"used."
msgstr ""
"Les messages sont envoyés en utilisant l'hôte et le port indiqués dans les "
"réglages :setting:`EMAIL_HOST` et :setting:`EMAIL_PORT`. Les réglages :"
"setting:`EMAIL_HOST_USER` et :setting:`EMAIL_HOST_PASSWORD`, si définis, "
"sont utilisés pour s'authentifier auprès du serveur SMTP, et les réglages :"
"setting:`EMAIL_USE_TLS` et :setting:`EMAIL_USE_SSL` indiquent si "
"l'utilisation d'une connexion sécurisée est nécessaire."

msgid ""
"The character set of email sent with ``django.core.mail`` will be set to the "
"value of your :setting:`DEFAULT_CHARSET` setting."
msgstr ""
"Le jeu de caractères des messages envoyés par ``django.core.mail`` est "
"défini par la valeur du réglage :setting:`DEFAULT_CHARSET`."

msgid "``send_mail()``"
msgstr "``send_mail()``"

msgid ""
"In most cases, you can send email using ``django.core.mail.send_mail()``."
msgstr ""
"Dans la plupart des cas, vous pouvez envoyer des courriels avec ``django."
"core.mail.send_mail()``."

msgid ""
"The ``subject``, ``message``, ``from_email`` and ``recipient_list`` "
"parameters are required."
msgstr ""
"Les paramètres ``subject``, ``message``, ``from_email`` et "
"``recipient_list`` sont obligatoires."

msgid "``subject``: A string."
msgstr "``subject``: une chaîne de caractères."

msgid "``message``: A string."
msgstr "``message``: une chaîne de caractères."

msgid ""
"``from_email``: A string. If ``None``, Django will use the value of the :"
"setting:`DEFAULT_FROM_EMAIL` setting."
msgstr ""
"``from_email``: une chaîne. Si ``None``, Django utilise la valeur du "
"réglage :setting:`DEFAULT_FROM_EMAIL`."

msgid ""
"``recipient_list``: A list of strings, each an email address. Each member of "
"``recipient_list`` will see the other recipients in the \"To:\" field of the "
"email message."
msgstr ""
"``recipient_list``: une liste de chaînes de caractères, chacune étant une "
"adresse électronique. Chaque personne dans ``recipient_list`` verra les "
"autres destinataires dans le champ « To: » du courriel."

msgid ""
"``fail_silently``: A boolean. When it's ``False``, ``send_mail()`` will "
"raise an :exc:`smtplib.SMTPException` if an error occurs. See the :mod:"
"`smtplib` docs for a list of possible exceptions, all of which are "
"subclasses of :exc:`~smtplib.SMTPException`."
msgstr ""
"``fail_silently``: une valeur booléenne. Avec la valeur ``False``, "
"``send_mail()`` lève une exception :exc:`smtplib.SMTPException` en cas "
"d'erreur. Consultez la liste des exceptions possibles dans la documentation "
"de :mod:`smtplib`; elles sont toutes des sous-classes de :exc:`~smtplib."
"SMTPException`."

msgid ""
"``auth_user``: The optional username to use to authenticate to the SMTP "
"server. If this isn't provided, Django will use the value of the :setting:"
"`EMAIL_HOST_USER` setting."
msgstr ""
"``auth_user``: le nom d'utilisateur facultatif utilisé pour s'authentifier "
"auprès du serveur SMTP. Si ce paramètre est absent, c'est la valeur du "
"réglage :setting:`EMAIL_HOST_USER` qui sera utilisée."

msgid ""
"``auth_password``: The optional password to use to authenticate to the SMTP "
"server. If this isn't provided, Django will use the value of the :setting:"
"`EMAIL_HOST_PASSWORD` setting."
msgstr ""
"``auth_password``: le mot de passe facultatif utilisé pour s'authentifier "
"auprès du serveur SMTP. Si ce paramètre est absent, c'est la valeur du "
"réglage :setting:`EMAIL_HOST_PASSWORD` qui sera utilisée."

msgid ""
"``connection``: The optional email backend to use to send the mail. If "
"unspecified, an instance of the default backend will be used. See the "
"documentation on :ref:`Email backends <topic-email-backends>` for more "
"details."
msgstr ""
"``connection``: le moteur de messagerie facultatif utilisé pour envoyer le "
"message. Si ce paramètre est absent, c'est une instance du moteur par défaut "
"qui sera utilisée. Consultez la documentation sur les :ref:`moteurs de "
"messagerie <topic-email-backends>` pour plus de détails."

msgid ""
"``html_message``: If ``html_message`` is provided, the resulting email will "
"be a :mimetype:`multipart/alternative` email with ``message`` as the :"
"mimetype:`text/plain` content type and ``html_message`` as the :mimetype:"
"`text/html` content type."
msgstr ""
"``html_message``: si ``html_message`` est indiqué, le courriel produit sera "
"un courriel :mimetype:`multipart/alternative`, avec ``message`` comme type "
"de contenu :mimetype:`text/plain` et ``html_message`` comme type de contenu :"
"mimetype:`text/html` ."

msgid ""
"The return value will be the number of successfully delivered messages "
"(which can be ``0`` or ``1`` since it can only send one message)."
msgstr ""
"La valeur renvoyée correspond au nombre de messages livrés avec succès (qui "
"ne peut être que ``0`` ou ``1`` puisqu'elle ne peut envoyer qu'un message)."

msgid "``send_mass_mail()``"
msgstr "``send_mass_mail()``"

msgid ""
"``django.core.mail.send_mass_mail()`` is intended to handle mass emailing."
msgstr ""
"``django.core.mail.send_mass_mail()`` est prévu pour envoyer des courriels "
"en masse."

msgid "``datatuple`` is a tuple in which each element is in this format::"
msgstr ""
"``datatuple`` est un tuple dans lequel chaque élément suit le format "
"suivant ::"

msgid ""
"``fail_silently``, ``auth_user`` and ``auth_password`` have the same "
"functions as in :meth:`~django.core.mail.send_mail()`."
msgstr ""
"``fail_silently``, ``auth_user`` et ``auth_password`` jouent le même rôle "
"que dans :meth:`~django.core.mail.send_mail()`."

msgid ""
"Each separate element of ``datatuple`` results in a separate email message. "
"As in :meth:`~django.core.mail.send_mail()`, recipients in the same "
"``recipient_list`` will all see the other addresses in the email messages' "
"\"To:\" field."
msgstr ""
"Chaque élément de ``datatuple`` produit un courriel séparé. Comme dans :meth:"
"`~django.core.mail.send_mail()`, les destinataires de la même "
"``recipient_list`` verront les autres adresses dans le champ « To: » des "
"courriels."

msgid ""
"For example, the following code would send two different messages to two "
"different sets of recipients; however, only one connection to the mail "
"server would be opened::"
msgstr ""
"Par exemple, le code suivant envoie deux messages différents à deux "
"ensembles différents de destinataires ; cependant, une seule connexion est "
"ouverte vers le serveur de messagerie ::"

msgid "The return value will be the number of successfully delivered messages."
msgstr ""
"La valeur renvoyée correspond au nombre de messages livrés avec succès."

msgid "``send_mass_mail()`` vs. ``send_mail()``"
msgstr "``send_mass_mail()`` vs. ``send_mail()``"

msgid ""
"The main difference between :meth:`~django.core.mail.send_mass_mail()` and :"
"meth:`~django.core.mail.send_mail()` is that :meth:`~django.core.mail."
"send_mail()` opens a connection to the mail server each time it's executed, "
"while :meth:`~django.core.mail.send_mass_mail()` uses a single connection "
"for all of its messages. This makes :meth:`~django.core.mail."
"send_mass_mail()` slightly more efficient."
msgstr ""
"La différence principale entre :meth:`~django.core.mail.send_mass_mail()` "
"et :meth:`~django.core.mail.send_mail()` est que :meth:`~django.core.mail."
"send_mail()` ouvre une connexion vers le serveur de messagerie lors de "
"chaque exécution, alors que :meth:`~django.core.mail.send_mass_mail()` "
"utilise une seule connexion pour tous ses messages. :meth:`~django.core.mail."
"send_mass_mail()` est donc un peu plus efficace."

msgid "``mail_admins()``"
msgstr "``mail_admins()``"

msgid ""
"``django.core.mail.mail_admins()`` is a shortcut for sending an email to the "
"site admins, as defined in the :setting:`ADMINS` setting."
msgstr ""
"``django.core.mail.mail_admins()`` est un raccourci pour envoyer un courriel "
"aux administrateurs du site, tels qu'ils apparaissent dans le réglage :"
"setting:`ADMINS`."

msgid ""
"``mail_admins()`` prefixes the subject with the value of the :setting:"
"`EMAIL_SUBJECT_PREFIX` setting, which is ``\"[Django] \"`` by default."
msgstr ""
"``mail_admins()`` préfixe le sujet avec la valeur du réglage :setting:"
"`EMAIL_SUBJECT_PREFIX` (« [Django] » par défaut)."

msgid ""
"The \"From:\" header of the email will be the value of the :setting:"
"`SERVER_EMAIL` setting."
msgstr ""
"L'en-tête « From: » du courriel correspond à la valeur du réglage :setting:"
"`SERVER_EMAIL`."

msgid "This method exists for convenience and readability."
msgstr "Cette méthode existe par commodité et pour une meilleure lisibilité."

msgid ""
"If ``html_message`` is provided, the resulting email will be a :mimetype:"
"`multipart/alternative` email with ``message`` as the :mimetype:`text/plain` "
"content type and ``html_message`` as the :mimetype:`text/html` content type."
msgstr ""
"Si ``html_message`` est indiqué, le courriel produit sera un courriel :"
"mimetype:`multipart/alternative`, avec ``message`` comme type de contenu :"
"mimetype:`text/plain` et ``html_message`` comme type de contenu :mimetype:"
"`text/html` ."

msgid "``mail_managers()``"
msgstr "``mail_managers()``"

msgid ""
"``django.core.mail.mail_managers()`` is just like ``mail_admins()``, except "
"it sends an email to the site managers, as defined in the :setting:"
"`MANAGERS` setting."
msgstr ""
"``django.core.mail.mail_managers()`` est équivalent à ``mail_admins()``, "
"excepté le fait qu'il envoie un courriel aux gestionnaires du site tels que "
"définis dans le réglage :setting:`MANAGERS`."

msgid "Examples"
msgstr "Exemples"

msgid ""
"This sends a single email to john@example.com and jane@example.com, with "
"them both appearing in the \"To:\"::"
msgstr ""
"Ceci envoie un courriel unique à john@example.com et jane@example.com, les "
"deux apparaissant dans le champ « To: » ::"

msgid ""
"This sends a message to john@example.com and jane@example.com, with them "
"both receiving a separate email::"
msgstr ""
"Ceci envoie un courriel à john@example.com et jane@example.com, les deux "
"recevant un courriel séparé ::"

msgid "Preventing header injection"
msgstr "Prévention de l'injection d'en-têtes"

msgid ""
"`Header injection`_ is a security exploit in which an attacker inserts extra "
"email headers to control the \"To:\" and \"From:\" in email messages that "
"your scripts generate."
msgstr ""
"L'`injection d'en-têtes`_ est une faille de sécurité dans laquelle un "
"attaquant insère des en-têtes de courriel supplémentaires pour contrôler les "
"champs « To: » et « From: » des courriels que vos scripts produisent."

msgid ""
"The Django email functions outlined above all protect against header "
"injection by forbidding newlines in header values. If any ``subject``, "
"``from_email`` or ``recipient_list`` contains a newline (in either Unix, "
"Windows or Mac style), the email function (e.g. :meth:`~django.core.mail."
"send_mail()`) will raise ``django.core.mail.BadHeaderError`` (a subclass of "
"``ValueError``) and, hence, will not send the email. It's your "
"responsibility to validate all data before passing it to the email functions."
msgstr ""
"Les fonctions de messagerie de Django décrites ci-dessus protègent toutes "
"contre l'injection d'en-têtes en interdisant les sauts de ligne dans les "
"valeurs d'en-têtes. Si l'un des paramètres  ``subject``, ``from_email`` ou "
"``recipient_list`` contient un saut de ligne (que ce soit du style Unix, "
"Windows ou Mac), la fonction de messagerie (par ex. :meth:`~django.core.mail."
"send_mail()`) lève une exception ``django.core.mail.BadHeaderError`` (une "
"sous-classe de ``ValueError``) et de ce fait, n'envoie pas le courriel. Il "
"est de votre responsabilité de valider toutes les données avant de les "
"transmettre aux fonctions de messagerie."

msgid ""
"If a ``message`` contains headers at the start of the string, the headers "
"will be printed as the first bit of the email message."
msgstr ""
"Si un ``message`` contient des en-têtes en début de chaîne, les en-têtes "
"seront affichés en première partie du contenu du courriel."

msgid ""
"Here's an example view that takes a ``subject``, ``message`` and "
"``from_email`` from the request's POST data, sends that to admin@example.com "
"and redirects to \"/contact/thanks/\" when it's done::"
msgstr ""
"Voici un exemple de vue qui récupère les valeurs ``subject``, ``message`` et "
"``from_email`` à partir de données POST de la requête, envoie cela à "
"admin@example.com et redirige vers « /contact/thanks/ » quand c'est fait ::"

msgid "The ``EmailMessage`` class"
msgstr "La classe ``EmailMessage``"

msgid ""
"Django's :meth:`~django.core.mail.send_mail()` and :meth:`~django.core.mail."
"send_mass_mail()` functions are actually thin wrappers that make use of the :"
"class:`~django.core.mail.EmailMessage` class."
msgstr ""
"Les fonctions  :meth:`~django.core.mail.send_mail()` et :meth:`~django.core."
"mail.send_mass_mail()` de Django sont en réalité de légers adaptateurs qui "
"utilisent la classe :class:`~django.core.mail.EmailMessage`."

msgid ""
"Not all features of the :class:`~django.core.mail.EmailMessage` class are "
"available through the :meth:`~django.core.mail.send_mail()` and related "
"wrapper functions. If you wish to use advanced features, such as BCC'ed "
"recipients, file attachments, or multi-part email, you'll need to create :"
"class:`~django.core.mail.EmailMessage` instances directly."
msgstr ""
"Seule une partie des fonctionnalités de la classe :class:`~django.core.mail."
"EmailMessage` sont exposées par :meth:`~django.core.mail.send_mail()` et les "
"autres fonctions adaptatrices liées. Si vous voulez utiliser des "
"fonctionnalités avancées, telles que les destinataires en copie cachée, les "
"fichiers joints ou les courriels multi-parties, vous devrez créer "
"directement des instances de :class:`~django.core.mail.EmailMessage`."

msgid ""
"This is a design feature. :meth:`~django.core.mail.send_mail()` and related "
"functions were originally the only interface Django provided. However, the "
"list of parameters they accepted was slowly growing over time. It made sense "
"to move to a more object-oriented design for email messages and retain the "
"original functions only for backwards compatibility."
msgstr ""
"Cette conception est volontaire. :meth:`~django.core.mail.send_mail()` et "
"les fonctions liées étaient au départ la seule interface proposée par "
"Django. Cependant, la liste des paramètres acceptés ne cessait de "
"s'accroître avec le temps. Il était donc logique de passer à un concept plus "
"orienté objet pour les courriels et ne conserver les fonctions originales "
"que par rétrocompatibilité."

msgid ""
":class:`~django.core.mail.EmailMessage` is responsible for creating the "
"email message itself. The :ref:`email backend <topic-email-backends>` is "
"then responsible for sending the email."
msgstr ""
":class:`~django.core.mail.EmailMessage` est responsable de créer le courriel "
"lui-même. Le :ref:`moteur de messagerie <topic-email-backends>` est ensuite "
"responsable d'envoyer le courriel."

msgid ""
"For convenience, :class:`~django.core.mail.EmailMessage` provides a "
"``send()`` method for sending a single email. If you need to send multiple "
"messages, the email backend API :ref:`provides an alternative <topics-"
"sending-multiple-emails>`."
msgstr ""
"Par commodité, :class:`~django.core.mail.EmailMessage` propose une méthode "
"``send()`` pour envoyer un courriel unique. Si vous devez envoyer plusieurs "
"messages, l'API du moteur de messagerie :ref:`offre une alternative <topics-"
"sending-multiple-emails>`."

msgid "``EmailMessage`` Objects"
msgstr "Les objets ``EmailMessage``"

msgid ""
"The :class:`~django.core.mail.EmailMessage` class is initialized with the "
"following parameters (in the given order, if positional arguments are used). "
"All parameters are optional and can be set at any time prior to calling the "
"``send()`` method."
msgstr ""
"La classe :class:`~django.core.mail.EmailMessage` est initialisée avec les "
"paramètres suivants (dans l'ordre donné, si des paramètres positionnels sont "
"utilisés). Tous les paramètres sont facultatifs et peuvent être définis à "
"tout moment précédant l'appel à la méthode ``send()``."

msgid "``subject``: The subject line of the email."
msgstr "``subject``: la ligne sujet du courriel."

msgid "``body``: The body text. This should be a plain text message."
msgstr "``body``: le texte du corps. Cela doit être un message texte brut."

msgid ""
"``from_email``: The sender's address. Both ``fred@example.com`` and "
"``\"Fred\" <fred@example.com>`` forms are legal. If omitted, the :setting:"
"`DEFAULT_FROM_EMAIL` setting is used."
msgstr ""
"``from_email``: l'adresse de l'expéditeur. Les deux formes ``fred@example."
"com`` et ``\"Fred\" <fred@example.com>`` sont acceptées. Si le paramètre est "
"absent, c'est le réglage :setting:`DEFAULT_FROM_EMAIL` qui est utilisé."

msgid "``to``: A list or tuple of recipient addresses."
msgstr "``to``: une liste ou un tuple d'adresses de destination."

msgid ""
"``bcc``: A list or tuple of addresses used in the \"Bcc\" header when "
"sending the email."
msgstr ""
"``bcc``: une liste ou un tuple d'adresses à placer dans l'en-tête « Bcc » au "
"moment d'envoyer le courriel."

msgid ""
"``connection``: An email backend instance. Use this parameter if you want to "
"use the same connection for multiple messages. If omitted, a new connection "
"is created when ``send()`` is called."
msgstr ""
"``connection``: une instance de moteur de messagerie. Utilisez ce paramètre "
"si vous voulez utiliser la même connexion pour plusieurs messages. Si ce "
"paramètre est absent, une nouvelle connexion est initiée lorsque ``send()`` "
"est appelée."

msgid ""
"``attachments``: A list of attachments to put on the message. These can be "
"either :class:`~email.mime.base.MIMEBase` instances, or ``(filename, "
"content, mimetype)`` triples."
msgstr ""
"``attachments``: une liste de pièces jointes à placer dans le message. Elles "
"peuvent être soit des instances de :class:`~email.mime.base.MIMEBase`, soit "
"des triplets ``(nom de fichier, contenu, type mime)``."

msgid ""
"``headers``: A dictionary of extra headers to put on the message. The keys "
"are the header name, values are the header values. It's up to the caller to "
"ensure header names and values are in the correct format for an email "
"message. The corresponding attribute is ``extra_headers``."
msgstr ""
"``headers``: un dictionnaire d'en-têtes à ajouter au message. Les clés sont "
"les noms d'en-têtes, les valeurs sont les valeurs d'en-têtes. C'est à "
"l'appelant de s'assurer que les noms et les valeurs d'en-têtes soient dans "
"un format correct pour les courriels. L'attribut correspondant est "
"``extra_headers``."

msgid ""
"``cc``: A list or tuple of recipient addresses used in the \"Cc\" header "
"when sending the email."
msgstr ""
"``cc``: une liste ou un tuple d'adresses de destination utilisées dans l'en-"
"tête « Cc » lors de l'envoi du courriel."

msgid ""
"``reply_to``: A list or tuple of recipient addresses used in the \"Reply-"
"To\" header when sending the email."
msgstr ""
"``reply_to``: une liste ou un tuple d'adresses de destination utilisées dans "
"l'en-tête « reply_to » lors de l'envoi du courriel."

msgid "The class has the following methods:"
msgstr "La classe possède les méthodes suivantes :"

msgid ""
"``send(fail_silently=False)`` sends the message. If a connection was "
"specified when the email was constructed, that connection will be used. "
"Otherwise, an instance of the default backend will be instantiated and used. "
"If the keyword argument ``fail_silently`` is ``True``, exceptions raised "
"while sending the message will be quashed. An empty list of recipients will "
"not raise an exception. It will return ``1`` if the message was sent "
"successfully, otherwise ``0``."
msgstr ""
"``send(fail_silently=False)`` envoie le message. Si une connexion a été "
"indiquée au moment où le courriel a été construit, c'est cette connexion qui "
"sera utilisée. Sinon, c'est une instance du moteur par défaut qui sera "
"utilisée. Si le paramètre nommé ``fail_silently`` vaut ``True``, les "
"exceptions générées lors de l'envoi du message seront ignorées. Une liste de "
"destinataires vide ne génère pas d'exception. Cette fonction renvoie ``1`` "
"si le message a été envoyé avec succès, sinon ``0``."

msgid ""
"``message()`` constructs a ``django.core.mail.SafeMIMEText`` object (a "
"subclass of Python's :class:`~email.mime.text.MIMEText` class) or a ``django."
"core.mail.SafeMIMEMultipart`` object holding the message to be sent. If you "
"ever need to extend the :class:`~django.core.mail.EmailMessage` class, "
"you'll probably want to override this method to put the content you want "
"into the MIME object."
msgstr ""
"``message()`` construit un objet ``django.core.mail.SafeMIMEText`` (une sous-"
"classe de la classe Python :class:`~email.mime.text.MIMEText`) ou un objet "
"``django.core.mail.SafeMIMEMultipart`` contenant le message à envoyer. S'il "
"vous arrivait de devoir étendre la classe :class:`~django.core.mail."
"EmailMessage`, il sera probablement nécessaire de surcharger cette méthode "
"pour pouvoir placer le contenu souhaité dans l'objet MIME."

msgid ""
"``recipients()`` returns a list of all the recipients of the message, "
"whether they're recorded in the ``to``, ``cc`` or ``bcc`` attributes. This "
"is another method you might need to override when subclassing, because the "
"SMTP server needs to be told the full list of recipients when the message is "
"sent. If you add another way to specify recipients in your class, they need "
"to be returned from this method as well."
msgstr ""
"``recipients()`` renvoie une liste de tous les destinataires du message, "
"quel que soit le champ où ils se trouvent (``to``, ``cc`` ou ``bcc``). C'est "
"aussi une méthode qu'il peut être utile de surcharger lors de l'écriture "
"d'une sous-classe, car le serveur SMTP doit recevoir la liste complète des "
"destinataires au moment de l'envoi du message. Si vous ajoutez une autre "
"façon d'indiquer les destinataires dans votre classe, ceux-ci doivent aussi "
"être renvoyés par cette méthode."

msgid ""
"``attach()`` creates a new file attachment and adds it to the message. There "
"are two ways to call ``attach()``:"
msgstr ""
"``attach()`` crée une nouvelle pièce jointe et l'ajoute au message. Il y a "
"deux façons d'appeler ``attach()``:"

msgid ""
"You can pass it a single argument that is a :class:`~email.mime.base."
"MIMEBase` instance. This will be inserted directly into the resulting "
"message."
msgstr ""
"Vous pouvez lui passer un seul paramètre qui est une instance de :class:"
"`~email.mime.base.MIMEBase`. Elle sera directement insérée dans le message "
"résultant."

msgid ""
"Alternatively, you can pass ``attach()`` three arguments: ``filename``, "
"``content`` and ``mimetype``. ``filename`` is the name of the file "
"attachment as it will appear in the email, ``content`` is the data that will "
"be contained inside the attachment and ``mimetype`` is the optional MIME "
"type for the attachment. If you omit ``mimetype``, the MIME content type "
"will be guessed from the filename of the attachment."
msgstr ""
"Il est aussi possible de passer trois paramètres à ``attach()``: "
"``filename``, ``content`` et ``mimetype``. ``filename`` est le nom de la "
"pièce jointe tel qu'il apparaîtra dans le courriel, ``content`` contient les "
"données qui formeront la pièce jointe et ``mimetype`` est le type MIME "
"facultatif de la pièce jointe. Si vous omettez ``mimetype``, le type de "
"contenu MIME sera déduit du nom de fichier de la pièce jointe."

msgid ""
"If you specify a ``mimetype`` of :mimetype:`message/rfc822`, it will also "
"accept :class:`django.core.mail.EmailMessage` and :py:class:`email.message."
"Message`."
msgstr ""
"Si vous indiquez :mimetype:`message/rfc822` comme ``mimetype``, la méthode "
"accepte aussi les classes :class:`django.core.mail.EmailMessage` et :py:"
"class:`email.message.Message`."

msgid ""
"For a ``mimetype`` starting with :mimetype:`text/`, content is expected to "
"be a string. Binary data will be decoded using UTF-8, and if that fails, the "
"MIME type will be changed to :mimetype:`application/octet-stream` and the "
"data will be attached unchanged."
msgstr ""
"Pour un ``mimetype`` commençant par :mimetype:`text/`, le contenu attendu "
"est une chaîne. Les données binaires sont décodées en utilisant UTF-8 et en "
"cas d'échec, le type MIME sera transformé en :mimetype:`application/octet-"
"stream` et les données seront jointes telles quelles."

msgid ""
"In addition, :mimetype:`message/rfc822` attachments will no longer be base64-"
"encoded in violation of :rfc:`2046#section-5.2.1`, which can cause issues "
"with displaying the attachments in `Evolution`__ and `Thunderbird`__."
msgstr ""
"De plus, les pièces jointes :mimetype:`message/rfc822` ne sont plus codées "
"en base64, ce qui contrevient à la :rfc:`2046#section-5.2.1` et qui peut "
"poser des problèmes d'affichage des pièces jointes dans `Evolution`__ et "
"`Thunderbird`__."

msgid ""
"``attach_file()`` creates a new attachment using a file from your "
"filesystem. Call it with the path of the file to attach and, optionally, the "
"MIME type to use for the attachment. If the MIME type is omitted, it will be "
"guessed from the filename. You can use it like this::"
msgstr ""
"``attach_file()`` crée une nouvelle pièce jointe à partir d'un fichier du "
"système de fichiers. Appelez-la avec le chemin du fichier à joindre et, "
"facultativement, le type MIME à utiliser pour ce fichier. Si vous omettez le "
"type MIME, il sera déduit du nom de fichier. Voici comment l'utiliser ::"

msgid ""
"For MIME types starting with :mimetype:`text/`, binary data is handled as in "
"``attach()``."
msgstr ""
"Pour les types MIME commençant par :mimetype:`text/`, les données binaires "
"sont traitées comme pour ``attach()``."

msgid "Sending alternative content types"
msgstr "Envoi d'autres types de contenus"

msgid "Sending multiple content versions"
msgstr "Envoi de plusieurs versions de contenus"

msgid ""
"It can be useful to include multiple versions of the content in an email; "
"the classic example is to send both text and HTML versions of a message. "
"With Django's email library, you can do this using the :class:`~django.core."
"mail.EmailMultiAlternatives` class."
msgstr ""
"Il peut être utile d'inclure plusieurs versions du contenu d'un courriel. "
"L'exemple classique est d'envoyer à la fois les versions texte et HTML d'un "
"message Avec la bibliothèque de messagerie de Django, cela est rendu "
"possible par la classe :class:`~django.core.mail.EmailMultiAlternatives`."

msgid ""
"A subclass of :class:`~django.core.mail.EmailMessage` that has an additional "
"``attach_alternative()`` method for including extra versions of the message "
"body in the email. All the other methods (including the class "
"initialization) are inherited directly from :class:`~django.core.mail."
"EmailMessage`."
msgstr ""
"Une sous-classe de :class:`~django.core.mail.EmailMessage` possèdant une "
"méthode supplémentaire ``attach_alternative()`` pour inclure des versions "
"supplémentaires du corps d'un message dans le courriel. Toutes les autres "
"méthodes (y compris l'initialisation de la classe) sont directement héritées "
"de :class:`~django.core.mail.EmailMessage`."

msgid "Attach an alternative representation of the message body in the email."
msgstr ""
"Ajoute une représentation alternative du corps du message dans le courriel."

msgid "For example, to send a text and HTML combination, you could write::"
msgstr ""
"Par exemple, pour envoyer une combinaison de texte et de HTML, vous pourriez "
"écrire ::"

msgid "Updating the default content type"
msgstr "Mise à jour du type de contenu par défaut"

msgid ""
"By default, the MIME type of the ``body`` parameter in an :class:`~django."
"core.mail.EmailMessage` is ``\"text/plain\"``. It is good practice to leave "
"this alone, because it guarantees that any recipient will be able to read "
"the email, regardless of their mail client. However, if you are confident "
"that your recipients can handle an alternative content type, you can use the "
"``content_subtype`` attribute on the :class:`~django.core.mail.EmailMessage` "
"class to change the main content type. The major type will always be "
"``\"text\"``, but you can change the subtype. For example::"
msgstr ""
"Par défaut, le type MIME du paramètre ``body`` d'un :class:`~django.core."
"mail.EmailMessage` est ``\"text/plain\"``. Il est recommandé de le laisser "
"tel quel, car il garantit que tout destinataire sera capable de lire le "
"courriel, quel que soit son client de messagerie. Cependant, si vous savez "
"que vos destinataires savent gérer un autre type de contenu, vous pouvez "
"utiliser l'attribut ``content_subtype`` de la classe :class:`~django.core."
"mail.EmailMessage` pour modifier le type de contenu principal. Le type "
"primaire sera toujours ``\"text\"``, mais vous pouvez modifier le sous-type. "
"Par exemple ::"

msgid "Email backends"
msgstr "Moteurs de messagerie"

msgid "The actual sending of an email is handled by the email backend."
msgstr "L'envoi réel d'un courriel est géré par le moteur de messagerie."

msgid "The email backend class has the following methods:"
msgstr "La classe du moteur de messagerie possède les méthodes suivantes :"

msgid "``open()`` instantiates a long-lived email-sending connection."
msgstr "``open()`` instancie une connexion persistante d'envoi de messages."

msgid "``close()`` closes the current email-sending connection."
msgstr ""
"``close()`` ferme la connexion actuelle vers le système d'envoi de messages."

msgid ""
"``send_messages(email_messages)`` sends a list of :class:`~django.core.mail."
"EmailMessage` objects. If the connection is not open, this call will "
"implicitly open the connection, and close the connection afterward. If the "
"connection is already open, it will be left open after mail has been sent."
msgstr ""
"``send_messages(email_messages)`` envoie une liste d'objets :class:`~django."
"core.mail.EmailMessage`. Si la connexion n'est pas ouverte, cet appel "
"ouvrira implicitement la connexion, puis la fermera à la fin de l'opération. "
"Si la connexion est déjà ouverte, elle sera conservée ouverte après l'envoi "
"des messages."

msgid ""
"It can also be used as a context manager, which will automatically call "
"``open()`` and ``close()`` as needed::"
msgstr ""
"Il peut aussi être utilisé comme gestionnaire de contexte, ce qui appellera "
"automatiquement les méthodes ``open()`` et ``close()`` nécessaires ::"

msgid "Obtaining an instance of an email backend"
msgstr "Obtention d'une instance d'un moteur de messagerie"

msgid ""
"The :meth:`get_connection` function in ``django.core.mail`` returns an "
"instance of the email backend that you can use."
msgstr ""
"La fonction :meth:`get_connection` de ``django.core.mail`` renvoie une "
"instance utilisable du moteur de messagerie."

msgid ""
"By default, a call to ``get_connection()`` will return an instance of the "
"email backend specified in :setting:`EMAIL_BACKEND`. If you specify the "
"``backend`` argument, an instance of that backend will be instantiated."
msgstr ""
"Par défaut, une appel à ``get_connection()`` renvoie une instance du moteur "
"de messagerie indiqué dans :setting:`EMAIL_BACKEND`. Si vous indiquez le "
"paramètre ``backend``, une instance de ce moteur sera créée."

msgid ""
"The ``fail_silently`` argument controls how the backend should handle "
"errors. If ``fail_silently`` is True, exceptions during the email sending "
"process will be silently ignored."
msgstr ""
"Le paramètre ``fail_silently`` contrôle la gestion d'erreurs dans le moteur. "
"Si ``fail_silently`` vaut True, les exceptions survenant durant le processus "
"d'envoi de messages seront ignorées en silence."

msgid ""
"All other arguments are passed directly to the constructor of the email "
"backend."
msgstr ""
"Tous les autres paramètres sont directement transmis au constructeur du "
"moteur de messagerie."

msgid ""
"Django ships with several email sending backends. With the exception of the "
"SMTP backend (which is the default), these backends are only useful during "
"testing and development. If you have special email sending requirements, you "
"can :ref:`write your own email backend <topic-custom-email-backend>`."
msgstr ""
"Django est livré avec plusieurs moteurs de messagerie. À l'exception du "
"moteur SMTP (moteur par défaut), ces moteurs ne sont utiles que pour les "
"tests et le développement. Si vous avez des contraintes particulières dans "
"l'envoi de messages, vous pouvez :ref:`écrire votre propre moteur de "
"messagerie <topic-custom-email-backend>`."

msgid "SMTP backend"
msgstr "Le moteur SMTP"

msgid "This is the default backend. Email will be sent through a SMTP server."
msgstr ""
"C’est le moteur par défaut. Les courriels seront envoyés par un serveur SMTP."

msgid ""
"The value for each argument is retrieved from the matching setting if the "
"argument is ``None``:"
msgstr ""
"La valeur de chaque paramètre est récupérée à partir du réglage "
"correspondant si le paramètre vaut ``None``:"

msgid "``host``: :setting:`EMAIL_HOST`"
msgstr "``host``: :setting:`EMAIL_HOST`"

msgid "``port``: :setting:`EMAIL_PORT`"
msgstr "``port``: :setting:`EMAIL_PORT`"

msgid "``username``: :setting:`EMAIL_HOST_USER`"
msgstr "``username``: :setting:`EMAIL_HOST_USER`"

msgid "``password``: :setting:`EMAIL_HOST_PASSWORD`"
msgstr "``password``: :setting:`EMAIL_HOST_PASSWORD`"

msgid "``use_tls``: :setting:`EMAIL_USE_TLS`"
msgstr "``use_tls``: :setting:`EMAIL_USE_TLS`"

msgid "``use_ssl``: :setting:`EMAIL_USE_SSL`"
msgstr "``use_ssl``: :setting:`EMAIL_USE_SSL`"

msgid "``timeout``: :setting:`EMAIL_TIMEOUT`"
msgstr "``timeout``: :setting:`EMAIL_TIMEOUT`"

msgid "``ssl_keyfile``: :setting:`EMAIL_SSL_KEYFILE`"
msgstr "``ssl_keyfile``: :setting:`EMAIL_SSL_KEYFILE`"

msgid "``ssl_certfile``: :setting:`EMAIL_SSL_CERTFILE`"
msgstr "``ssl_certfile``: :setting:`EMAIL_SSL_CERTFILE`"

msgid ""
"The SMTP backend is the default configuration inherited by Django. If you "
"want to specify it explicitly, put the following in your settings::"
msgstr ""
"Le moteur SMTP est la configuration par défaut héritée par Django. Si vous "
"voulez la définir explicitement, mettez ce qui suit dans vos réglages ::"

msgid ""
"If unspecified, the default ``timeout`` will be the one provided by :func:"
"`socket.getdefaulttimeout()`, which defaults to ``None`` (no timeout)."
msgstr ""
"Si elle n'est pas indiquée, la valeur par défaut de ``timeout`` correspondra "
"à la valeur fournie par :func:`socket.getdefaulttimeout()` dont la valeur "
"par défaut est ``None`` (pas d'expiration)."

msgid "Console backend"
msgstr "Le moteur console"

msgid ""
"Instead of sending out real emails the console backend just writes the "
"emails that would be sent to the standard output. By default, the console "
"backend writes to ``stdout``. You can use a different stream-like object by "
"providing the ``stream`` keyword argument when constructing the connection."
msgstr ""
"Au lieu d'envoyer vraiment des courriels, le moteur console ne fait "
"qu'afficher sur la sortie standard les courriels qui auraient dû être "
"envoyés. Par défaut, le moteur console écrit dans ``stdout``. Vous pouvez "
"utiliser un autre objet de type flux en indiquant le paramètre ``stream`` au "
"moment de construire la connexion."

msgid "To specify this backend, put the following in your settings::"
msgstr "Pour utiliser ce moteur, mettez ce qui suit dans vos réglages ::"

msgid ""
"This backend is not intended for use in production -- it is provided as a "
"convenience that can be used during development."
msgstr ""
"Ce moteur n'est pas conçu pour être utilisé en production, il n'est fourni "
"que par commodité et destiné à être utilisé durant le développement."

msgid "File backend"
msgstr "Le moteur fichier"

msgid ""
"The file backend writes emails to a file. A new file is created for each new "
"session that is opened on this backend. The directory to which the files are "
"written is either taken from the :setting:`EMAIL_FILE_PATH` setting or from "
"the ``file_path`` keyword when creating a connection with :meth:`~django."
"core.mail.get_connection`."
msgstr ""
"Le moteur fichier écrit les courriels dans un fichier. Un nouveau fichier "
"est créé pour chaque nouvelle session ouverte avec ce moteur. Le répertoire "
"dans lequel les fichiers sont écrits correspond soit au réglage :setting:"
"`EMAIL_FILE_PATH`, soit au mot-clé ``file_path`` transmis lors de la "
"création de la connexion avec :meth:`~django.core.mail.get_connection`."

msgid "In-memory backend"
msgstr "Le moteur mémoire"

msgid ""
"The ``'locmem'`` backend stores messages in a special attribute of the "
"``django.core.mail`` module. The ``outbox`` attribute is created when the "
"first message is sent. It's a list with an :class:`~django.core.mail."
"EmailMessage` instance for each message that would be sent."
msgstr ""
"Le moteur ``'locmem'`` stocke les messages dans un attribut spécial du "
"module ``django.core.mail``. L'attribut ``outbox`` est créé au moment de "
"l'envoi du premier message. C'est une liste contenant une instance de :class:"
"`~django.core.mail.EmailMessage` pour chaque message qui aurait été envoyé."

msgid ""
"This backend is not intended for use in production -- it is provided as a "
"convenience that can be used during development and testing."
msgstr ""
"Ce moteur n'est pas conçu pour être utilisé en production, il n'est fourni "
"que par commodité et destiné à être utilisé durant le développement et les "
"tests."

msgid ""
"Django's test runner :ref:`automatically uses this backend for testing "
"<topics-testing-email>`."
msgstr ""
"L'exécuteur de tests de Django :ref:`utilise automatiquement ce moteur pour "
"les tests <topics-testing-email>`."

msgid "Dummy backend"
msgstr "Le moteur bidon"

msgid ""
"As the name suggests the dummy backend does nothing with your messages. To "
"specify this backend, put the following in your settings::"
msgstr ""
"Comme son nom l'indique, le moteur bidon (« dummy ») ne fait rien des "
"messages reçus. Pour définir ce moteur, mettez ce qui suit dans vos "
"réglages ::"

msgid "Defining a custom email backend"
msgstr "Définition d'un moteur de messagerie personnalisé"

msgid ""
"If you need to change how emails are sent you can write your own email "
"backend. The :setting:`EMAIL_BACKEND` setting in your settings file is then "
"the Python import path for your backend class."
msgstr ""
"Si vous devez modifier la façon dont les courriels sont envoyés, vous pouvez "
"écrire votre propre moteur de messagerie. Le réglage :setting:"
"`EMAIL_BACKEND` de votre fichier de réglages contiendra alors le chemin "
"d'importation Python vers votre classe de moteur."

msgid ""
"Custom email backends should subclass ``BaseEmailBackend`` that is located "
"in the ``django.core.mail.backends.base`` module. A custom email backend "
"must implement the ``send_messages(email_messages)`` method. This method "
"receives a list of :class:`~django.core.mail.EmailMessage` instances and "
"returns the number of successfully delivered messages. If your backend has "
"any concept of a persistent session or connection, you should also implement "
"the ``open()`` and ``close()`` methods. Refer to ``smtp.EmailBackend`` for a "
"reference implementation."
msgstr ""
"Les moteurs de messagerie personnalisés doivent hériter de "
"``BaseEmailBackend`` qui se trouve dans le module ``django.core.mail."
"backends.base``. Un moteur de messagerie personnalisé doit implémenter la "
"méthode ``send_messages(email_messages)``. Celle-ci reçoit une liste "
"d'instances :class:`~django.core.mail.EmailMessage` et renvoie le nombre de "
"message délivrés avec succès. Si votre moteur contient la notion de session "
"ou connexion persistente, vous devriez aussi implémenter les méthodes "
"``open()`` et ``close()``. Référez-vous à ``smtp.EmailBackend`` pour une "
"implémentation de référence."

msgid "Sending multiple emails"
msgstr "Envoi de plusieurs courriels"

msgid ""
"Establishing and closing an SMTP connection (or any other network "
"connection, for that matter) is an expensive process. If you have a lot of "
"emails to send, it makes sense to reuse an SMTP connection, rather than "
"creating and destroying a connection every time you want to send an email."
msgstr ""
"L'établissement et la fermeture d'une connexion SMTP (ou de toute autre "
"connexion réseau, en fait) est un processus coûteux. Si vous avez beaucoup "
"de courriels à envoyer, il est logique de recycler une connexion SMTP plutôt "
"que de créer puis détruire une connexion lors de chaque envoi de message."

msgid "There are two ways you tell an email backend to reuse a connection."
msgstr ""
"Il existe deux manières d'indiquer à un moteur de messagerie qu'il doit "
"réutiliser une connexion."

msgid ""
"Firstly, you can use the ``send_messages()`` method. ``send_messages()`` "
"takes a list of :class:`~django.core.mail.EmailMessage` instances (or "
"subclasses), and sends them all using a single connection."
msgstr ""
"Premièrement, vous pouvez utiliser la méthode ``send_messages()``. Celle-ci "
"accepte une liste d'instances :class:`~django.core.mail.EmailMessage` (ou de "
"ses sous-classes) et les envoie tous en utilisant une même connexion."

msgid ""
"For example, if you have a function called ``get_notification_email()`` that "
"returns a list of :class:`~django.core.mail.EmailMessage` objects "
"representing some periodic email you wish to send out, you could send these "
"emails using a single call to send_messages::"
msgstr ""
"Par exemple, si vous aviez une fonction appelée ``get_notification_email()`` "
"qui renvoie une liste d'objets :class:`~django.core.mail.EmailMessage` "
"représentant des courriels que vous souhaitez envoyer périodiquement, vous "
"pourriez envoyer ces courriels en utilisant un seul appel à "
"``send_messages``::"

msgid ""
"In this example, the call to ``send_messages()`` opens a connection on the "
"backend, sends the list of messages, and then closes the connection again."
msgstr ""
"Dans cet exemple, l'appel à ``send_messages()`` ouvre une connexion au "
"moteur, envoie la liste des messages et ferme à nouveau la connexion."

msgid ""
"The second approach is to use the ``open()`` and ``close()`` methods on the "
"email backend to manually control the connection. ``send_messages()`` will "
"not manually open or close the connection if it is already open, so if you "
"manually open the connection, you can control when it is closed. For "
"example::"
msgstr ""
"La seconde approche est d'utiliser les méthodes ``open()`` et ``close()`` du "
"moteur de messagerie pour contrôler manuellement la connexion. "
"``send_messages()`` n'ouvre ou ne ferme pas manuellement de connexion si il "
"y en a déjà une ouverte, ce qui fait qu'en ouvrant manuellement la "
"connexion, vous contrôlez aussi quand elle sera fermée. Par exemple ::"

msgid "Configuring email for development"
msgstr "Configuration de la messagerie pour le développement"

msgid ""
"There are times when you do not want Django to send emails at all. For "
"example, while developing a website, you probably don't want to send out "
"thousands of emails -- but you may want to validate that emails will be sent "
"to the right people under the right conditions, and that those emails will "
"contain the correct content."
msgstr ""
"À certains moments, vous ne voulez absolument pas que que Django envoie des "
"courriels. Par exemple, pendant le développement d'un site Web, vous ne "
"voulez certainement pas envoyer des milliers de courriels, mais vous voulez "
"peut-être valider que ces courriels seraient envoyés aux bonnes personnes et "
"aux bonnes conditions, et que leur contenu est correct."

msgid ""
"The easiest way to configure email for local development is to use the :ref:"
"`console <topic-email-console-backend>` email backend. This backend "
"redirects all email to ``stdout``, allowing you to inspect the content of "
"mail."
msgstr ""
"La manière la plus simple de configurer la messagerie électronique lors du "
"développement local est d'utiliser le moteur de messagerie :ref:`console "
"<topic-email-console-backend>`. Ce moteur redirige tous les courriels vers "
"la sortie standard ``stdout``, ce qui permet d'inspecter leur contenu."

msgid ""
"The :ref:`file <topic-email-file-backend>` email backend can also be useful "
"during development -- this backend dumps the contents of every SMTP "
"connection to a file that can be inspected at your leisure."
msgstr ""
"Le moteur de messagerie :ref:`fichier <topic-email-file-backend>` peut aussi "
"être utile durant le développement ; ce moteur redirige le contenu de chaque "
"connexion SMTP dans un fichier qui peut ensuite être examiné à souhait."

msgid ""
"Another approach is to use a \"dumb\" SMTP server that receives the emails "
"locally and displays them to the terminal, but does not actually send "
"anything. The :pypi:`aiosmtpd` package provides a way to accomplish this:"
msgstr ""
"Une autre approche est d'utiliser un serveur SMTP « stupide » qui reçoit "
"localement les courriels et les affiche dans le terminal, mais n'envoie rien "
"plus loin. Le paquet :pypi:`aiosmtpd` propose une manière de faire cela :"

msgid ""
"This command will start a minimal SMTP server listening on port 8025 of "
"localhost. This server prints to standard output all email headers and the "
"email body. You then only need to set the :setting:`EMAIL_HOST` and :setting:"
"`EMAIL_PORT` accordingly. For a more detailed discussion of SMTP server "
"options, see the documentation of the `aiosmtpd`_ module."
msgstr ""
"Cette commande lance un serveur SMTP minimal écoutant sur le port 8025 de "
"localhost. Ce serveur affiche sur la sortie standard tous les en-têtes des "
"courriels ainsi que leur corps. Il ne vous reste plus qu'à définir "
"adéquatement les réglages :setting:`EMAIL_HOST` et :setting:`EMAIL_PORT`. "
"Pour une discussion plus détaillée au sujet des options de serveur SMTP, "
"consultez la documentation du module `aiosmtpd`_."

msgid ""
"For information about unit-testing the sending of emails in your "
"application, see the :ref:`topics-testing-email` section of the testing "
"documentation."
msgstr ""
"Pour plus d'informations sur les tests unitaires impliquant l'envoi de "
"courriels par votre application, consultez la section :ref:`topics-testing-"
"email` de la documentation sur les tests."

msgid "External packages"
msgstr "Paquets externes"

msgid ""
"Django ships with a variety of extra, optional tools that solve common "
"problems (``contrib.*``). For easier maintenance and to trim the size of the "
"codebase, a few of those applications have been moved out to separate "
"projects."
msgstr ""
"Django est livré avec un certain nombre d'outils facultatifs supplémentaires "
"qui résolvent des problèmes courants (``contrib.*``). Pour en simplifier la "
"maintenance et pour réduire la taille du code de Django, certaines de ces "
"applications ont été déplacées dans des projets séparés."

msgid "Localflavor"
msgstr "Localflavor"

msgid ""
"``django-localflavor`` is a collection of utilities for particular countries "
"and cultures."
msgstr ""
"``django-localflavor`` est un ensemble d'utilitaires adaptés à des pays ou "
"cultures spécifiques."

msgid "`GitHub <https://github.com/django/django-localflavor>`__"
msgstr "`GitHub <https://github.com/django/django-localflavor>`__"

msgid "`Documentation <https://django-localflavor.readthedocs.io/>`__"
msgstr "`Documentation <https://django-localflavor.readthedocs.io/>`__"

msgid ":pypi:`PyPI <django-localflavor>`"
msgstr ":pypi:`PyPI <django-localflavor>`"

msgid "Comments"
msgstr "Commentaires"

msgid ""
"``django-contrib-comments`` can be used to attach comments to any model, so "
"you can use it for comments on blog entries, photos, book chapters, or "
"anything else. Most users will be better served with a custom solution, or a "
"hosted product like Disqus."
msgstr ""
"``django-contrib-comments`` peut être utilisé pour lier des commentaires à "
"n'importe quel modèle, comme par exemple pour des articles de blog, des "
"photos, des chapitres de livre ou toute autre chose. La plupart des "
"utilisateurs seront mieux servis par une solution personnalisée, ou un "
"produit hébergé comme Disqus."

msgid "`GitHub <https://github.com/django/django-contrib-comments>`__"
msgstr "`GitHub <https://github.com/django/django-contrib-comments>`__"

msgid "`Documentation <https://django-contrib-comments.readthedocs.io/>`__"
msgstr "`Documentation <https://django-contrib-comments.readthedocs.io/>`__"

msgid ":pypi:`PyPI <django-contrib-comments>`"
msgstr ":pypi:`PyPI <django-contrib-comments>`"

msgid "Formtools"
msgstr "Formtools"

msgid ""
"``django-formtools`` is a collection of assorted utilities to work with "
"forms."
msgstr ""
"``django-formtools`` est un ensemble d'utilitaires destinés à manipuler des "
"formulaires."

msgid "`GitHub <https://github.com/jazzband/django-formtools/>`__"
msgstr "`GitHub `__"

msgid "`Documentation <https://django-formtools.readthedocs.io/>`__"
msgstr "`Documentation <https://django-formtools.readthedocs.io/>`__"

msgid ":pypi:`PyPI <django-formtools>`"
msgstr ":pypi:`PyPI <django-formtools>`"

msgid "Managing files"
msgstr "Gestion des fichiers"

msgid ""
"This document describes Django's file access APIs for files such as those "
"uploaded by a user. The lower level APIs are general enough that you could "
"use them for other purposes. If you want to handle \"static files\" (JS, "
"CSS, etc.), see :doc:`/howto/static-files/index`."
msgstr ""
"Ce document décrit l'API Django d'accès aux fichiers adaptée par exemple aux "
"fichiers envoyés par les utilisateurs. Les API de plus bas niveau sont assez "
"générales pour pouvoir être utilisées dans d'autres buts. Si vous souhaitez "
"gérer les « fichiers statiques » (JS, CSS, etc.), consultez :doc:`/howto/"
"static-files/index`."

msgid ""
"By default, Django stores files locally, using the :setting:`MEDIA_ROOT` "
"and :setting:`MEDIA_URL` settings. The examples below assume that you're "
"using these defaults."
msgstr ""
"Par défaut, Django stocke les fichiers localement, en fonction des réglages :"
"setting:`MEDIA_ROOT` et :setting:`MEDIA_URL`. Les exemples ci-dessous "
"partent du principe que vous utilisez ces valeurs par défaut."

msgid ""
"However, Django provides ways to write custom `file storage systems`_ that "
"allow you to completely customize where and how Django stores files. The "
"second half of this document describes how these storage systems work."
msgstr ""
"Cependant, Django permet d'écrire des `systèmes de stockage de fichiers`_ "
"spécialisés permettant de personnaliser complètement l'endroit et la façon "
"dont Django stocke les fichiers. La deuxième partie de ce document décrit le "
"fonctionnement des ces systèmes de stockage."

msgid "Using files in models"
msgstr "Utilisation des fichiers dans les modèles"

msgid ""
"When you use a :class:`~django.db.models.FileField` or :class:`~django.db."
"models.ImageField`, Django provides a set of APIs you can use to deal with "
"that file."
msgstr ""
"Quand vous utilisez un :class:`~django.db.models.FileField` ou un :class:"
"`~django.db.models.ImageField`, Django fournit un ensemble d'API pour "
"pouvoir manipuler le fichier correspondant."

msgid ""
"Consider the following model, using an :class:`~django.db.models.ImageField` "
"to store a photo::"
msgstr ""
"Considérez le modèle suivant qui utilise un :class:`~django.db.models."
"ImageField` pour stocker une photo ::"

msgid ""
"Any ``Car`` instance will have a ``photo`` attribute that you can use to get "
"at the details of the attached photo:"
msgstr ""
"Toute instance de ``Car`` possède un attribut ``photo`` qu'il est possible "
"d'utiliser pour obtenir les détails de la photo jointe :"

msgid ""
"This object -- ``car.photo`` in the example -- is a ``File`` object, which "
"means it has all the methods and attributes described below."
msgstr ""
"Cet objet (``car.photo`` dans l'exemple) est un objet ``File``, ce qui "
"signifie qu'il possède toutes les méthodes et les attributs documentés ci-"
"dessous."

msgid ""
"The file is saved as part of saving the model in the database, so the actual "
"file name used on disk cannot be relied on until after the model has been "
"saved."
msgstr ""
"Le fichier est enregistré durant la phase d'enregistrement du modèle dans la "
"base de données, il n'est donc pas possible de se baser sur le nom de "
"fichier réel sur le disque tant que le modèle lui-même n'a pas été "
"enregistré."

msgid ""
"For example, you can change the file name by setting the file's :attr:"
"`~django.core.files.File.name` to a path relative to the file storage's "
"location (:setting:`MEDIA_ROOT` if you are using the default :class:`~django."
"core.files.storage.FileSystemStorage`):"
msgstr ""
"Par exemple, vous pouvez modifier le nom de fichier en définissant "
"l'attribut :attr:`~django.core.files.File.name` du fichier à un chemin "
"relatif à l'emplacement de stockage des fichiers (:setting:`MEDIA_ROOT` si "
"vous utilisez le :class:`~django.core.files.storage.FileSystemStorage` par "
"défaut) :"

msgid ""
"To save an existing file on disk to a :class:`~django.db.models.FileField`:"
msgstr ""
"Pour enregistrer un fichier existant sur le disque dans un champ :class:"
"`~django.db.models.FileField`:"

msgid ""
"While :class:`~django.db.models.ImageField` non-image data attributes, such "
"as ``height``, ``width``, and ``size`` are available on the instance, the "
"underlying image data cannot be used without reopening the image. For "
"example:"
msgstr ""
"Bien que les attributs de données « non image » du champ :class:`~django.db."
"models.ImageField`, tels que ``height``, ``width`` et ``size`` (hauteur, "
"largeur et taille), sont disponibles sur l'instance, les données d'image "
"sous-jacente ne peuvent pas être utilisées sans réouvrir l'image. Par "
"exemple :"

msgid "The ``File`` object"
msgstr "L'objet "

msgid ""
"Internally, Django uses a :class:`django.core.files.File` instance any time "
"it needs to represent a file."
msgstr ""
"En interne, Django utilise une instance de :class:`django.core.files.File` "
"chaque fois qu'il a besoin de représenter un fichier."

msgid ""
"Most of the time you'll use a ``File`` that Django's given you (i.e. a file "
"attached to a model as above, or perhaps an uploaded file)."
msgstr ""
"La plupart du temps, vous utiliserez l'objet ``File`` que Django vous "
"transmet (par exemple un fichier joint à un modèle comme ci-dessus ou peut-"
"être un fichier téléversé)."

msgid ""
"If you need to construct a ``File`` yourself, the easiest way is to create "
"one using a Python built-in ``file`` object:"
msgstr ""
"Si vous avez besoin de construire vous-même un objet ``File``, la façon la "
"plus simple est de le créer en utilisant un objet ``file`` de Python :"

msgid ""
"Now you can use any of the documented attributes and methods of the :class:"
"`~django.core.files.File` class."
msgstr ""
"Il est maintenant possible d'utiliser les attributs et les méthodes "
"documentés de la classe :class:`~django.core.files.File`."

msgid ""
"Be aware that files created in this way are not automatically closed. The "
"following approach may be used to close files automatically:"
msgstr ""
"Il faut savoir que les fichiers créés de cette façon ne sont pas fermés "
"automatiquement. L'approche suivante peut être employée pour fermer "
"automatiquement les fichiers :"

msgid ""
"Closing files is especially important when accessing file fields in a loop "
"over a large number of objects. If files are not manually closed after "
"accessing them, the risk of running out of file descriptors may arise. This "
"may lead to the following error:"
msgstr ""
"La fermeture des fichiers est particulièrement importante lors de l'accès en "
"boucle à des champs fichier pour un grand nombre d'objets. Si les fichiers "
"ne sont pas fermés manuellement après les avoir lus, il y a un risque "
"d'épuisement des descripteurs de fichiers. Cela peut amener à l'erreur "
"suivante :"

msgid "File storage"
msgstr "Stockage des fichiers"

msgid ""
"Behind the scenes, Django delegates decisions about how and where to store "
"files to a file storage system. This is the object that actually understands "
"things like file systems, opening and reading files, etc."
msgstr ""
"En arrière-plan, Django délègue les décisions au sujet des emplacements des "
"fichiers et de la manière de les stocker à un système de stockage de "
"fichiers. C'est cet objet qui s'occupe réellement des systèmes de fichiers, "
"de l'ouverture et de la lecture des fichiers, etc."

msgid ""
"Django's default file storage is ``'``:class:`django.core.files.storage."
"FileSystemStorage`\\ ``'``. If you don't explicitly provide a storage system "
"in the ``default`` key of the :setting:`STORAGES` setting, this is the one "
"that will be used."
msgstr ""
"Le stockage de fichiers par défaut de Django est ``'``:class:`django.core."
"files.storage.FileSystemStorage`\\ ``'``. Si vous n'indiquez pas "
"explicitement un système de stockage dans la clé ``default`` du réglage :"
"setting:`STORAGES`, c'est celui qui sera utilisé."

msgid ""
"See below for details of the built-in default file storage system, and see :"
"doc:`/howto/custom-file-storage` for information on writing your own file "
"storage system."
msgstr ""
"Lisez ci-dessous pour obtenir des détails sur le système de stockage de "
"fichiers intégré par défaut et lisez :doc:`/howto/custom-file-storage` pour "
"plus d'informations sur l'écriture de son propre système de stockage de "
"fichiers."

msgid "Storage objects"
msgstr "Objets de stockage"

msgid ""
"Though most of the time you'll want to use a ``File`` object (which "
"delegates to the proper storage for that file), you can use file storage "
"systems directly. You can create an instance of some custom file storage "
"class, or -- often more useful -- you can use the global default storage "
"system:"
msgstr ""
"Bien que la plupart du temps il soit plus opportun de manipuler un objet  "
"``File`` (qui délègue au stockage adapté pour ce fichier), il est possible "
"d'utiliser directement un stockage de fichiers. Vous pouvez créer une "
"instance d'une classe de stockage de fichiers personnalisé ou, plus souvent "
"utile, vous pouvez utiliser le système de stockage global par défaut :"

msgid "See :doc:`/ref/files/storage` for the file storage API."
msgstr ""
"Voir :doc:`/ref/files/storage` concernant l'API de stockage de fichiers."

msgid "The built-in filesystem storage class"
msgstr "La classe de Django pour le stockage sur système de fichiers"

msgid ""
"Django ships with a :class:`django.core.files.storage.FileSystemStorage` "
"class which implements basic local filesystem file storage."
msgstr ""
"Django fournit une classe :class:`django.core.files.storage."
"FileSystemStorage` qui implémente les éléments de base du stockage de "
"fichiers sur un système de fichiers."

msgid ""
"For example, the following code will store uploaded files under ``/media/"
"photos`` regardless of what your :setting:`MEDIA_ROOT` setting is::"
msgstr ""
"Par exemple, le code suivant stocke les fichiers téléversés dans ``/media/"
"photos`` quelle que soit la valeur du réglage :setting:`MEDIA_ROOT`::"

msgid ""
":doc:`Custom storage systems </howto/custom-file-storage>` work the same "
"way: you can pass them in as the ``storage`` argument to a :class:`~django."
"db.models.FileField`."
msgstr ""
"Les :doc:`systèmes de stockage personnalisés </howto/custom-file-storage>` "
"fonctionnent de la même manière : vous pouvez les transmettre comme "
"paramètre ``storage`` d'un champ :class:`~django.db.models.FileField`."

msgid "Using a callable"
msgstr "Utilisation d'un exécutable"

msgid ""
"You can use a callable as the :attr:`~django.db.models.FileField.storage` "
"parameter for :class:`~django.db.models.FileField` or :class:`~django.db."
"models.ImageField`. This allows you to modify the used storage at runtime, "
"selecting different storages for different environments, for example."
msgstr ""
"Vous pouvez transmettre un objet exécutable comme paramètre :attr:`~django."
"db.models.FileField.storage` de :class:`~django.db.models.FileField` ou de :"
"class:`~django.db.models.ImageField`. Cela permet de modifier le stockage "
"utilisé au moment de l'exécution, choisissant par exemple différents "
"stockages en fonction de l'environnement."

msgid ""
"Your callable will be evaluated when your models classes are loaded, and "
"must return an instance of :class:`~django.core.files.storage.Storage`."
msgstr ""
"L'exécutable sera évalué au moment où les classes de modèles sont chargées "
"et doit renvoyer une instance de :class:`~django.core.files.storage.Storage`."

msgid ""
"In order to set a storage defined in the :setting:`STORAGES` setting you can "
"use :data:`~django.core.files.storage.storages`::"
msgstr ""
"Afin de définir un stockage défini dans le réglage :setting:`STORAGES`, vous "
"pouvez utiliser :data:`~django.core.files.storage.storages`::"

msgid "Formsets"
msgstr "Formulaires groupés"

msgid ""
"A formset is a layer of abstraction to work with multiple forms on the same "
"page. It can be best compared to a data grid. Let's say you have the "
"following form:"
msgstr ""
"Les formulaires groupés sont une couche d'abstraction pour travailler avec "
"plusieurs formulaires sur une même page. On peut comparer cela à un tableau "
"de données. Admettons que l'on dispose du formulaire suivant :"

msgid ""
"You might want to allow the user to create several articles at once. To "
"create a formset out of an ``ArticleForm`` you would do:"
msgstr ""
"Il peut être souhaitable de permettre à l'utilisateur de créer plusieurs "
"articles à la fois. Pour créer des formulaires groupés à partir d'un "
"formulaire ``ArticleForm``, voici comment procéder :"

msgid ""
"You now have created a formset class named ``ArticleFormSet``. Instantiating "
"the formset gives you the ability to iterate over the forms in the formset "
"and display them as you would with a regular form:"
msgstr ""
"Vous avez maintenant créé une classe de formulaires groupés nommée "
"``ArticleFormSet``. En créant une instance de cette classe, cela vous donne "
"la possibilité d'effectuer une itération sur les formulaires du groupe et de "
"les afficher tout comme vous le feriez pour un formulaire habituel :"

msgid ""
"As you can see it only displayed one empty form. The number of empty forms "
"that is displayed is controlled by the ``extra`` parameter. By default, :"
"func:`~django.forms.formsets.formset_factory` defines one extra form; the "
"following example will create a formset class to display two blank forms:"
msgstr ""
"Comme vous le voyez, un seul formulaire vierge a été affiché. Le nombre de "
"formulaires vierges affichés dépend du paramètre ``extra``. Par défaut, :"
"func:`~django.forms.formsets.formset_factory` définit un seul formulaire "
"supplémentaire ; l'exemple suivant crée une classe de formulaires groupés "
"pour afficher deux formulaires vierges :"

msgid ""
"Iterating over a formset will render the forms in the order they were "
"created. You can change this order by providing an alternate implementation "
"for the ``__iter__()`` method."
msgstr ""
"En itérant sur des formulaires groupés, les formulaires sont affichés dans "
"l'ordre où ils ont été créés. Vous pouvez modifier cet ordre en écrivant une "
"implémentation différente de la méthode ``__iter__()``."

msgid ""
"Formsets can also be indexed into, which returns the corresponding form. If "
"you override ``__iter__``, you will need to also override ``__getitem__`` to "
"have matching behavior."
msgstr ""
"Il est aussi possible d'accéder aux formulaires groupés par un numéro "
"d'index, ce qui renvoie le formulaire correspondant. Si vous surchargez "
"``__iter__``, il est aussi nécessaire de surcharger ``__getitem__`` afin de "
"garantir un comportement cohérent."

msgid "Using initial data with a formset"
msgstr "Données initiales pour les formulaires groupés"

msgid ""
"Initial data is what drives the main usability of a formset. As shown above "
"you can define the number of extra forms. What this means is that you are "
"telling the formset how many additional forms to show in addition to the "
"number of forms it generates from the initial data. Let's take a look at an "
"example:"
msgstr ""
"Les données initiales sont le moteur essentiel qui fait l'intérêt des "
"formulaires groupés. Comme on peut le voir ci-dessus, vous pouvez définir le "
"nombre de formulaires supplémentaires. Cela signifie que vous pouvez "
"indiquer aux formulaires groupés combien de formulaires supplémentaires "
"doivent être affichés en plus des formulaires générés à partir des données "
"initiales. Examinons un exemple plus en détails :"

msgid ""
"There are now a total of three forms showing above. One for the initial data "
"that was passed in and two extra forms. Also note that we are passing in a "
"list of dictionaries as the initial data."
msgstr ""
"Nous avons maintenant trois formulaires qui s'affichent. Un pour les données "
"initiales que nous lui avons transmises et deux formulaires supplémentaires. "
"Notez également que nous transmettons une liste de dictionnaires comme "
"données initiales."

msgid ""
"If you use an ``initial`` for displaying a formset, you should pass the same "
"``initial`` when processing that formset's submission so that the formset "
"can detect which forms were changed by the user. For example, you might have "
"something like: ``ArticleFormSet(request.POST, initial=[...])``."
msgstr ""
"SI vous utilisez ``initial`` dans l'affichage de formulaires groupés, vous "
"devez passer la même valeur ``initial`` lors du traitement de ces "
"formulaires au moment de l'envoi des données pour permettre la détection des "
"formulaires modifiés par l'utilisateur. Par exemple, vous pourriez avoir "
"quelque chose comme : ``ArticleFormSet(request.POST, initial=[...])``."

msgid ""
":ref:`Creating formsets from models with model formsets <model-formsets>`."
msgstr ""
":ref:`Création de formulaires groupés à partir de modèles avec les "
"formulaires groupés de modèle <model-formsets>`."

msgid "Limiting the maximum number of forms"
msgstr "Restriction du nombre maximum de formulaires"

msgid ""
"The ``max_num`` parameter to :func:`~django.forms.formsets.formset_factory` "
"gives you the ability to limit the number of forms the formset will display:"
msgstr ""
"Le paramètre ``max_num`` de :func:`~django.forms.formsets.formset_factory` "
"donne la possibilité de restreindre le nombre de formulaires que les "
"formulaires groupés vont afficher :"

msgid ""
"If the value of ``max_num`` is greater than the number of existing items in "
"the initial data, up to ``extra`` additional blank forms will be added to "
"the formset, so long as the total number of forms does not exceed "
"``max_num``. For example, if ``extra=2`` and ``max_num=2`` and the formset "
"is initialized with one ``initial`` item, a form for the initial item and "
"one blank form will be displayed."
msgstr ""
"Si la valeur de ``max_num`` est plus grande que le nombre d'objets existants "
"dans les données initiales, un maximum de ``extra`` formulaires vierges "
"supplémentaires seront ajoutés au formulaire groupé, tant que le nombre "
"total de formulaires n'excède pas ``max_num``. Par exemple, si ``extra=2`` "
"et ``max_num=2`` et que le  formulaire groupé est initialisé avec un élément "
"``initial``, on verra s'afficher un formulaire pour l'élément initial et un "
"formulaire vierge."

msgid ""
"If the number of items in the initial data exceeds ``max_num``, all initial "
"data forms will be displayed regardless of the value of ``max_num`` and no "
"extra forms will be displayed. For example, if ``extra=3`` and ``max_num=1`` "
"and the formset is initialized with two initial items, two forms with the "
"initial data will be displayed."
msgstr ""
"Si le nombre d'éléments dans les données initiales dépasse ``max_num``, tous "
"les formulaires correspondant aux données initiales seront affichés quelle "
"que soit la valeur de ``max_num`` et aucun formulaire supplémentaire ne sera "
"affiché. Par exemple, si ``extra=3`` et ``max_num=1`` et que le formulaire "
"groupé est initialisé avec deux éléments, ce sont deux formulaires avec les "
"données initiales qui seront affichés."

msgid ""
"A ``max_num`` value of ``None`` (the default) puts a high limit on the "
"number of forms displayed (1000). In practice this is equivalent to no limit."
msgstr ""
"Une valeur ``max_num`` ``None`` (par défaut) place une limite élevée du "
"nombre de formulaires affichés (1000). En pratique, cela équivaut à aucune "
"limite."

msgid ""
"By default, ``max_num`` only affects how many forms are displayed and does "
"not affect validation.  If ``validate_max=True`` is passed to the :func:"
"`~django.forms.formsets.formset_factory`, then ``max_num`` will affect "
"validation.  See :ref:`validate_max`."
msgstr ""
"Par défaut, ``max_num`` ne s'applique qu'au nombre de formulaires affichés "
"et non pas à la validation. Si ``validate_max=True`` est transmis à :func:"
"`~django.forms.formsets.formset_factory`, ``max_num`` s'applique alors à la "
"validation. Voir :ref:`validate_max`."

msgid "Limiting the maximum number of instantiated forms"
msgstr "Restriction du nombre maximum de formulaires instanciés"

msgid ""
"The ``absolute_max`` parameter to :func:`.formset_factory` allows limiting "
"the number of forms that can be instantiated when supplying ``POST`` data. "
"This protects against memory exhaustion attacks using forged ``POST`` "
"requests:"
msgstr ""
"Le paramètre ``absolute_max`` de :func:`.formset_factory` permet de limiter "
"le nombre de formulaires pouvant être instanciés lors de la soumission de "
"données ``POST``. Ceci protège contre les attaques par épuisement de la "
"mémoire qui utilisent des requêtes ``POST`` trafiquées :"

msgid ""
"When ``absolute_max`` is ``None``, it defaults to ``max_num + 1000``. (If "
"``max_num`` is ``None``, it defaults to ``2000``)."
msgstr ""
"Lorsque ``absolute_max`` vaut ``None``, la valeur par défaut est de "
"``max_num + 1000`` (si ``max_num`` vaut ``None``, sa valeur par défaut est "
"de ``2000``)."

msgid ""
"If ``absolute_max`` is less than ``max_num``, a ``ValueError`` will be "
"raised."
msgstr ""
"Si ``absolute_max`` est plus petit que ``max_num``, une erreur "
"``ValueError`` est générée."

msgid "Formset validation"
msgstr "Validation des formulaires groupés"

msgid ""
"Validation with a formset is almost identical to a regular ``Form``. There "
"is an ``is_valid`` method on the formset to provide a convenient way to "
"validate all forms in the formset:"
msgstr ""
"La validation des formulaires groupés est presque identique à celle d'un "
"formulaire ``Form`` normal. L'objet de formulaires groupés contient une "
"méthode ``is_valid`` afin de fournir une manière agile de valider tous les "
"formulaires du groupe :"

msgid ""
"We passed in no data to the formset which is resulting in a valid form. The "
"formset is smart enough to ignore extra forms that were not changed. If we "
"provide an invalid article:"
msgstr ""
"Nous n'avons fourni aucune donnée aux formulaires groupés ce qui aboutit à "
"un formulaire valide. Les formulaires groupés sont assez intelligents pour "
"ne pas prendre en compte des formulaires supplémentaires qui n'ont pas été "
"modifiés. Si nous passons un article non valable :"

msgid ""
"As we can see, ``formset.errors`` is a list whose entries correspond to the "
"forms in the formset. Validation was performed for each of the two forms, "
"and the expected error message appears for the second item."
msgstr ""
"Comme on peut le voir, ``formset.errors`` est une liste composée d'éléments "
"correspondants à chaque formulaire du groupe. La validation s'est faite pour "
"chacun des deux formulaires, et le message d'erreur attendu apparaît pour le "
"second."

msgid ""
"Just like when using a normal ``Form``, each field in a formset's forms may "
"include HTML attributes such as ``maxlength`` for browser validation. "
"However, form fields of formsets won't include the ``required`` attribute as "
"that validation may be incorrect when adding and deleting forms."
msgstr ""
"Tout comme pour l'utilisation de formulaires normaux, chaque champ de "
"formulaire groupé peut inclure des attributs HTML tels que ``maxlength`` "
"pour la validation par le navigateur. Cependant, les champs de formulaires "
"groupés n'incluront pas l'attribut ``required`` car cette validation "
"pourrait être incorrecte lors de l'ajout ou de la suppression de formulaires."

msgid ""
"To check how many errors there are in the formset, we can use the "
"``total_error_count`` method:"
msgstr ""
"Pour contrôler le nombre d'erreurs dans les formulaires groupés, nous "
"pouvons utiliser la méthode ``total_error_count``:"

msgid ""
"We can also check if form data differs from the initial data (i.e. the form "
"was sent without any data):"
msgstr ""
"Nous pouvons aussi vérifier si les données des formulaires diffèrent des "
"données initiales (c'est-à-dire si le formulaire a été envoyé sans aucune "
"donnée) :"

msgid "Understanding the ``ManagementForm``"
msgstr "Rôle du formulaire de gestion (``ManagementForm``)"

msgid ""
"You may have noticed the additional data (``form-TOTAL_FORMS``, ``form-"
"INITIAL_FORMS``) that was required in the formset's data above. This data is "
"required for the ``ManagementForm``. This form is used by the formset to "
"manage the collection of forms contained in the formset. If you don't "
"provide this management data, the formset will be invalid:"
msgstr ""
"Vous avez peut-être remarqué les données supplémentaires (``form-"
"TOTAL_FORMS``, ``form-INITIAL_FORMS``) qui étaient requises dans les données "
"de formulaires groupés ci-dessus. Ces données sont exigées par le formulaire "
"de gestion. Celui-ci est utilisé par les formulaires groupés pour gérer "
"l'ensemble des formulaires contenus dans le groupe. Si vous ne fournissez "
"pas ces données de gestion, le jeu de formulaires ne sera pas valide :"

msgid ""
"It is used to keep track of how many form instances are being displayed. If "
"you are adding new forms via JavaScript, you should increment the count "
"fields in this form as well. On the other hand, if you are using JavaScript "
"to allow deletion of existing objects, then you need to ensure the ones "
"being removed are properly marked for deletion by including ``form-#-"
"DELETE`` in the ``POST`` data. It is expected that all forms are present in "
"the ``POST`` data regardless."
msgstr ""
"Ces données servent à conserver la trace du nombre d'instances de "
"formulaires qui sont affichées. Si vous ajoutez de nouveaux formulaires par "
"JavaScript, il est aussi nécessaire d'incrémenter les champs de comptage de "
"ce formulaire. D'un autre côté, si vous utilisez JavaScript pour permettre "
"la suppression d'objets existants, vous devez alors vous assurer que ceux "
"qui sont supprimés soient correctement marqués comme « à supprimer » en "
"incluant le paramètre ``form-#-DELETE`` dans les données d'envoi ``POST``. "
"Il est prévu que tous les formulaires soient présents dans les données "
"``POST`` quoi qu'il arrive."

msgid ""
"The management form is available as an attribute of the formset itself. When "
"rendering a formset in a template, you can include all the management data "
"by rendering ``{{ my_formset.management_form }}`` (substituting the name of "
"your formset as appropriate)."
msgstr ""
"Le formulaire de gestion est disponible sous forme d'attribut de l'objet de "
"formulaires groupés. Lorsque vous affichez des formulaires groupés dans un "
"gabarit, vous pouvez inclure toutes les données de gestion en affichant "
"``{{ my_formset.management_form }}`` (en remplaçant le nom de vos "
"formulaires groupés en conséquence)."

msgid ""
"As well as the ``form-TOTAL_FORMS`` and ``form-INITIAL_FORMS`` fields shown "
"in the examples here, the management form also includes ``form-"
"MIN_NUM_FORMS`` and ``form-MAX_NUM_FORMS`` fields. They are output with the "
"rest of the management form, but only for the convenience of client-side "
"code. These fields are not required and so are not shown in the example "
"``POST`` data."
msgstr ""
"En plus des champs ``form-TOTAL_FORMS`` et ``form-INITIAL_FORMS`` montrés "
"dans ces exemples, le formulaire de gestion inclut aussi les champs ``form-"
"MIN_NUM_FORMS`` et ``form-MAX_NUM_FORMS``. Ils sont produits avec le reste "
"du formulaire de gestion, mais seulement utiles pour le code côté client. "
"Ces champs ne sont pas obligatoires et ne sont donc pas affichés dans "
"l'exemple de données ``POST``."

msgid "``total_form_count`` and ``initial_form_count``"
msgstr "``total_form_count`` et ``initial_form_count``"

msgid ""
"``BaseFormSet`` has a couple of methods that are closely related to the "
"``ManagementForm``, ``total_form_count`` and ``initial_form_count``."
msgstr ""
"``BaseFormSet`` possède quelques méthodes étroitement liées aux données "
"``total_form_count`` et ``initial_form_count`` du formulaire de gestion "
"``ManagementForm``."

msgid ""
"``total_form_count`` returns the total number of forms in this formset. "
"``initial_form_count`` returns the number of forms in the formset that were "
"pre-filled, and is also used to determine how many forms are required. You "
"will probably never need to override either of these methods, so please be "
"sure you understand what they do before doing so."
msgstr ""
"``total_form_count`` renvoie le nombre total de formulaires du groupe de "
"formulaires. ``initial_form_count`` renvoie le nombre de formulaires du "
"groupe qui ont été pré-remplis et est également utilisé pour déterminer le "
"nombre de formulaires requis. Vous n'aurez probablement jamais à surcharger "
"l'une de ces méthodes, mais prenez garde à bien comprendre ce qu'elles font "
"si vous deviez le faire."

msgid "``empty_form``"
msgstr "``empty_form``"

msgid ""
"``BaseFormSet`` provides an additional attribute ``empty_form`` which "
"returns a form instance with a prefix of ``__prefix__`` for easier use in "
"dynamic forms with JavaScript."
msgstr ""
"``BaseFormSet`` fournit un attribut supplémentaire ``empty_form`` qui "
"renvoie une instance de formulaire avec le préfixe ``__prefix__`` pour "
"faciliter l'utilisation de formulaires dynamiques avec JavaScript."

msgid "``error_messages``"
msgstr "``error_messages``"

msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the formset will raise. Pass in a dictionary with keys matching the error "
"messages you want to override. Error message keys include "
"``'too_few_forms'``, ``'too_many_forms'``, and "
"``'missing_management_form'``. The ``'too_few_forms'`` and "
"``'too_many_forms'`` error messages may contain ``%(num)d``, which will be "
"replaced with ``min_num`` and ``max_num``, respectively."
msgstr ""
"L'argument ``error_messages`` vous permet de surcharger les messages par "
"défaut que le jeu de formulaires va produire. Passez un dictionnaire dont "
"les clés correspondent aux messages d'erreur que vous souhaitez surcharger. "
"Ces clés sont : ``'too_few_forms'``, ``'too_many_forms'`` et "
"``'missing_management_form'``. Les messages d'erreur ``'too_few_forms'`` et "
"``'too_many_forms'`` peuvent contenir ``%(num)d``, ce qui sera remplacé "
"respectivement par ``min_num`` et ``max_num``."

msgid ""
"For example, here is the default error message when the management form is "
"missing:"
msgstr ""
"Par exemple, voici le message d'erreur par défaut lorsque le formulaire de "
"gestion est manquant :"

msgid "And here is a custom error message:"
msgstr "Et voici un message d'erreur personnalisé :"

msgid "Custom formset validation"
msgstr "Validation personnalisée des formulaires groupés"

msgid ""
"A formset has a ``clean`` method similar to the one on a ``Form`` class. "
"This is where you define your own validation that works at the formset level:"
msgstr ""
"Les formulaires groupés ont une méthode ``clean`` similaire à celle d'une "
"classe ``Form``. C'est là que vous pouvez définir votre propre validation "
"agissant au niveau des formulaires groupés :"

msgid ""
"The formset ``clean`` method is called after all the ``Form.clean`` methods "
"have been called. The errors will be found using the ``non_form_errors()`` "
"method on the formset."
msgstr ""
"La méthode ``clean`` des formulaires groupés est appelée après les méthodes "
"``Form.clean`` des formulaires individuels. Les erreurs produites à ce "
"niveau sont accessibles par la méthode ``non_form_errors()`` sur l'objet des "
"formulaires groupés."

msgid ""
"Non-form errors will be rendered with an additional class of ``nonform`` to "
"help distinguish them from form-specific errors. For example, ``{{ formset."
"non_form_errors }}`` would look like:"
msgstr ""
"Les erreurs non liées au formulaire sont produites avec une classe "
"supplémentaire ``nonform`` pour aider à les distinguer des autres erreurs "
"spécifiques au formulaire. Par exemple, ``{{ formset.non_form_errors }}`` "
"donnera quelque chose comme :"

msgid "Validating the number of forms in a formset"
msgstr "Validation du nombre de formulaires dans les formulaires groupés"

msgid ""
"Django provides a couple ways to validate the minimum or maximum number of "
"submitted forms. Applications which need more customizable validation of the "
"number of forms should use custom formset validation."
msgstr ""
"Django fournit plusieurs manières de valider le nombre minimum ou maximum de "
"formulaires soumis. Les applications ayant besoin d'une validation plus "
"adaptée du nombre de formulaires peuvent utiliser la validation "
"personnalisée de formulaires groupés."

msgid "``validate_max``"
msgstr "``validate_max``"

msgid ""
"If ``validate_max=True`` is passed to :func:`~django.forms.formsets."
"formset_factory`, validation will also check that the number of forms in the "
"data set, minus those marked for deletion, is less than or equal to "
"``max_num``."
msgstr ""
"Si ``validate_max=True`` est transmis à :func:`~django.forms.formsets."
"formset_factory`, la validation vérifiera également que le nombre de "
"formulaires dans les données reçues moins ceux marqués pour la suppression "
"ne dépasse pas ``max_num``."

msgid ""
"``validate_max=True`` validates against ``max_num`` strictly even if "
"``max_num`` was exceeded because the amount of initial data supplied was "
"excessive."
msgstr ""
"``validate_max=True`` valide strictement la valeur de ``max_num``, même si "
"cette valeur a été dépassée en raison d'un nombre de données initiales trop "
"important."

msgid ""
"The error message can be customized by passing the ``'too_many_forms'`` "
"message to the :ref:`formsets-error-messages` argument."
msgstr ""
"Le message d'erreur peut être personnalisé en passant le message "
"``'too_many_forms'`` dans l'argument :ref:`formsets-error-messages`."

msgid ""
"Regardless of ``validate_max``, if the number of forms in a data set exceeds "
"``absolute_max``, then the form will fail to validate as if ``validate_max`` "
"were set, and additionally only the first ``absolute_max`` forms will be "
"validated. The remainder will be truncated entirely. This is to protect "
"against memory exhaustion attacks using forged POST requests. See :ref:"
"`formsets-absolute-max`."
msgstr ""
"Quelle que soit la valeur de ``validate_max``, si le nombre de formulaires "
"dans un jeu de données dépasse ``absolute_max``, la validation du formulaire "
"échoue comme si ``validate_max`` avait été défini ; de plus, seuls les "
"``absolute_max`` premiers formulaires seront validés. Tout le reste est "
"purement ignoré. Il s'agit d'une mesure de protection contre les attaques de "
"remplissage de mémoire employant des requêtes ``POST`` contrefaites. Voir :"
"ref:`formsets-absolute-max`."

msgid "``validate_min``"
msgstr "``validate_min``"

msgid ""
"If ``validate_min=True`` is passed to :func:`~django.forms.formsets."
"formset_factory`, validation will also check that the number of forms in the "
"data set, minus those marked for deletion, is greater than or equal to "
"``min_num``."
msgstr ""
"Si  ``validate_min=True`` est passé à :func:`~django.forms.formsets."
"formset_factory`,  la validation vérifiera également que le nombre de "
"formulaires dans les données reçues moins ceux marqués pour la suppression "
"est supérieur ou égal à ``min_num``."

msgid ""
"The error message can be customized by passing the ``'too_few_forms'`` "
"message to the :ref:`formsets-error-messages` argument."
msgstr ""
"Le message d'erreur peut être personnalisé en passant le message "
"``'too_few_forms'`` dans l'argument :ref:`formsets-error-messages`."

msgid ""
"Regardless of ``validate_min``, if a formset contains no data, then ``extra "
"+ min_num`` empty forms will be displayed."
msgstr ""
"Quelle que soit la valeur de ``validate_min``, si un jeu de formulaires ne "
"contient aucune donnée, ``extra + min_num`` formulaires vides seront "
"affichés."

msgid "Dealing with ordering and deletion of forms"
msgstr "Tri et suppression de formulaires"

msgid ""
"The :func:`~django.forms.formsets.formset_factory` provides two optional "
"parameters ``can_order`` and ``can_delete`` to help with ordering of forms "
"in formsets and deletion of forms from a formset."
msgstr ""
"La méthode :func:`~django.forms.formsets.formset_factory` fournit deux "
"paramètres facultatifs ``can_order`` et ``can_delete`` pour faciliter le tri "
"et la suppression de formulaires dans des formulaires groupés."

msgid "``can_order``"
msgstr "``can_order``"

msgid "Default: ``False``"
msgstr "Valeur par défaut : ``False``"

msgid "Lets you create a formset with the ability to order:"
msgstr ""
"Ce paramètre permet de créer des formulaires groupés qui peuvent être triés :"

msgid ""
"This adds an additional field to each form. This new field is named "
"``ORDER`` and is an ``forms.IntegerField``. For the forms that came from the "
"initial data it automatically assigned them a numeric value. Let's look at "
"what will happen when the user changes these values:"
msgstr ""
"Ceci ajoute un champ supplémentaire à chaque formulaire. Ce nouveau champ "
"s'appelle ``ORDER`` et est de type ``forms.IntegerField``. Pour les "
"formulaires générés à partir des données initiales, ces champs reçoivent "
"automatiquement une valeur numérique. Voyons ce qui se passe si "
"l'utilisateur modifie ces valeurs :"

msgid ""
":class:`~django.forms.formsets.BaseFormSet` also provides an :attr:`~django."
"forms.formsets.BaseFormSet.ordering_widget` attribute and :meth:`~django."
"forms.formsets.BaseFormSet.get_ordering_widget` method that control the "
"widget used with :attr:`~django.forms.formsets.BaseFormSet.can_order`."
msgstr ""
" \n"
"Brut \n"
":class:`~django.forms.formsets.BaseFormSet` fournit également un attribut :"
"attr:`~django.forms.formsets.BaseFormSet.ordering_widget` et une méthode :"
"meth:`~django.forms.formsets.BaseFormSet.get_ordering_widget` qui permet de "
"contrôler le composant utilisé avec :attr:`~django.forms.formsets."
"BaseFormSet.can_order`."

msgid "``ordering_widget``"
msgstr "``ordering_widget``"

msgid "Default: :class:`~django.forms.NumberInput`"
msgstr "Par défaut : :class:`~django.forms.NumberInput`"

msgid ""
"Set ``ordering_widget`` to specify the widget class to be used with "
"``can_order``:"
msgstr ""
"Définissez ``ordering_widget`` pour indiquer la classe de composant à "
"utiliser avec ``can_order``:"

msgid "``get_ordering_widget``"
msgstr "``get_ordering_widget``"

msgid ""
"Override ``get_ordering_widget()`` if you need to provide a widget instance "
"for use with ``can_order``:"
msgstr ""
"Surchargez ``get_ordering_widget()`` si vous avez besoin de fournir une "
"instance de composant à utiliser avec ``can_order``:"

msgid "``can_delete``"
msgstr "``can_delete``"

msgid ""
"Lets you create a formset with the ability to select forms for deletion:"
msgstr ""
"Ce paramètre permet de créer des formulaires groupés où l'on peut choisir "
"des formulaires à supprimer :"

msgid ""
"Similar to ``can_order`` this adds a new field to each form named ``DELETE`` "
"and is a ``forms.BooleanField``. When data comes through marking any of the "
"delete fields you can access them with ``deleted_forms``:"
msgstr ""
"Un peu comme pour ``can_order``, ce paramètre ajoute un nouveau champ "
"``DELETE`` de type ``forms.BooleanField`` à chaque formulaire. Lorsque les "
"données reviennent et que certains de ces champs ont une valeur « vrai », il "
"est possible d'accéder aux formulaires concernés avec ``deleted_forms``:"

msgid ""
"If you are using a :class:`ModelFormSet<django.forms.models."
"BaseModelFormSet>`, model instances for deleted forms will be deleted when "
"you call ``formset.save()``."
msgstr ""
"Si vous utilisez un :class:`ModelFormSet<django.forms.models."
"BaseModelFormSet>`, les instances de modèle correspondant aux formulaires "
"supprimés seront supprimées lorsque ``formset.save ()`` sera appelée."

msgid ""
"If you call ``formset.save(commit=False)``, objects will not be deleted "
"automatically.  You'll need to call ``delete()`` on each of the :attr:"
"`formset.deleted_objects <django.forms.models.BaseModelFormSet."
"deleted_objects>` to actually delete them:"
msgstr ""
"Si vous appelez ``formset.save(commit=False)``, les objets ne seront pas "
"supprimés automatiquement. Vous devrez appeler ``delete()`` pour chacun des :"
"attr:`formset.deleted_objects <django.forms.models.BaseModelFormSet."
"deleted_objects>` afin que la suppression soit effective :"

msgid ""
"On the other hand, if you are using a plain ``FormSet``, it's up to you to "
"handle ``formset.deleted_forms``, perhaps in your formset's ``save()`` "
"method, as there's no general notion of what it means to delete a form."
msgstr ""
"D'autre part, si vous utilisez un ``FormSet`` simple, c'est à vous de gérer "
"``formset.deleted_forms``, par exemple dans la méthode ``save()`` de votre "
"formulaire groupé, car il n'existe pas de notion générale sur ce qu'implique "
"la suppression d'un formulaire."

msgid ""
":class:`~django.forms.formsets.BaseFormSet` also provides a :attr:`~django."
"forms.formsets.BaseFormSet.deletion_widget` attribute and :meth:`~django."
"forms.formsets.BaseFormSet.get_deletion_widget` method that control the "
"widget used with :attr:`~django.forms.formsets.BaseFormSet.can_delete`."
msgstr ""
":class:`~django.forms.formsets.BaseFormSet` fournit également un attribut :"
"attr:`~django.forms.formsets.BaseFormSet.deletion_widget` et une méthode :"
"meth:`~django.forms.formsets.BaseFormSet.get_deletion_widget` qui permet de "
"contrôler le composant utilisé avec :attr:`~django.forms.formsets."
"BaseFormSet.can_delete`."

msgid "``deletion_widget``"
msgstr "``deletion_widget``"

msgid "Default: :class:`~django.forms.CheckboxInput`"
msgstr "Par défaut : :class:`~django.forms.CheckboxInput`"

msgid ""
"Set ``deletion_widget`` to specify the widget class to be used with "
"``can_delete``:"
msgstr ""
"Définissez ``deletion_widget`` pour indiquer la classe de composant à "
"utiliser avec ``can_delete``:"

msgid "``get_deletion_widget``"
msgstr "``get_deletion_widget``"

msgid ""
"Override ``get_deletion_widget()`` if you need to provide a widget instance "
"for use with ``can_delete``:"
msgstr ""
"Surchargez ``get_deletion_widget()`` si vous avez besoin de fournir une "
"instance de composant à utiliser avec ``can_delete``:"

msgid "``can_delete_extra``"
msgstr "``can_delete_extra``"

msgid "Default: ``True``"
msgstr "Valeur par défaut : ``True``"

msgid ""
"While setting ``can_delete=True``, specifying ``can_delete_extra=False`` "
"will remove the option to delete extra forms."
msgstr ""
"Lorsque ``can_delete=True``, la définition de ``can_delete_extra=False`` "
"enlève la possibilité de supprimer les formulaires supplémentaires."

msgid "Adding additional fields to a formset"
msgstr "Ajout de champs supplémentaires à des formulaires groupés"

msgid ""
"If you need to add additional fields to the formset this can be easily "
"accomplished. The formset base class provides an ``add_fields`` method. You "
"can override this method to add your own fields or even redefine the default "
"fields/attributes of the order and deletion fields:"
msgstr ""
"L'ajout de champs supplémentaires aux formulaires groupés est simple à "
"effectuer. La classe de base des formulaires groupés offre une méthode "
"``add_fields``. Vous pouvez surcharger cette méthode pour ajouter vos "
"propres champs ou même pour redéfinir les champs/attributs par défaut des "
"champs de tri et de suppression :"

msgid "Passing custom parameters to formset forms"
msgstr ""
"Transmission de paramètres personnalisés aux formulaires de jeux de "
"formulaires"

msgid ""
"Sometimes your form class takes custom parameters, like ``MyArticleForm``. "
"You can pass this parameter when instantiating the formset:"
msgstr ""
"Il arrive parfois qu'une classe de formulaire accepte des paramètres "
"personnalisés, comme ``MyArticleForm``. Vous pouvez transmettre ce paramètre "
"lors de l'instanciation du jeu de formulaires :"

msgid ""
"The ``form_kwargs`` may also depend on the specific form instance. The "
"formset base class provides a ``get_form_kwargs`` method. The method takes a "
"single argument - the index of the form in the formset. The index is "
"``None`` for the :ref:`empty_form`:"
msgstr ""
"Le paramètre ``form_kwargs`` peut aussi dépendre de l'instance de formulaire "
"spécifique. La classe de base du jeu de formulaires fournit une méthode "
"``get_form_kwargs``. Celle-ci accepte un seul paramètre, l'indice du "
"formulaire dans le jeu de formulaire. Cet indice vaut ``None`` pour le "
"formulaire vide :ref:`empty_form`:"

msgid "Customizing a formset's prefix"
msgstr "Personnalisation du préfixe d'un jeu de formulaires"

msgid ""
"In the rendered HTML, formsets include a prefix on each field's name. By "
"default, the prefix is ``'form'``, but it can be customized using the "
"formset's ``prefix`` argument."
msgstr ""
"Dans le rendu HTML, les jeux de formulaires ajoutent un préfixe devant "
"chaque nom de champ. Par défaut, le préfixe est ``'form'``, mais il peut "
"être personnalisé à l'aide du paramètre ``prefix`` du jeu de formulaires."

msgid "For example, in the default case, you might see:"
msgstr "Par exemple, dans le cas par défaut, on pourrait voir :"

msgid "But with ``ArticleFormset(prefix='article')`` that becomes:"
msgstr "Mais avec ``ArticleFormset(prefix='article')``, cela deviendra :"

msgid ""
"This is useful if you want to :ref:`use more than one formset in a view "
"<multiple-formsets-in-view>`."
msgstr ""
"Ceci est utile lorsqu'on veut utiliser :ref:`plus d'un jeu de formulaires "
"dans une vue <multiple-formsets-in-view>`."

msgid "Using a formset in views and templates"
msgstr "Utilisation des formulaires groupés dans les vues et les gabarits"

msgid ""
"Formsets have the following attributes and methods associated with rendering:"
msgstr ""
"Les jeux de formulaires possèdent les attributs et méthodes suivantes "
"associées à leur rendu :"

msgid ""
"Specifies the :doc:`renderer </ref/forms/renderers>` to use for the formset. "
"Defaults to the renderer specified by the :setting:`FORM_RENDERER` setting."
msgstr ""
"Indique le :doc:`moteur de rendu </ref/forms/renderers>` à utiliser pour le "
"jeu de formulaires. Contient par défaut le moteur de rendu défini dans le "
"réglage :setting:`FORM_RENDERER`."

msgid ""
"The name of the template rendered if the formset is cast into a string, e.g. "
"via ``print(formset)`` or in a template via ``{{ formset }}``."
msgstr ""
"Le nom du gabarit produit si le jeu de formulaire est forcé à une chaîne, "
"par ex. via ``print(formset)`` ou dans un gabarit via ``{{ formset }}``."

msgid ""
"By default, a property returning the value of the renderer's :attr:`~django."
"forms.renderers.BaseRenderer.formset_template_name`. You may set it as a "
"string template name in order to override that for a particular formset "
"class."
msgstr ""
"Par défaut, une propriété renvoyant la valeur :attr:`~django.forms.renderers."
"BaseRenderer.formset_template_name` du producteur. Vous pouvez la définir à "
"un nom de gabarit afin de la surcharger pour une classe de jeu de "
"formulaires particulière. "

msgid ""
"This template will be used to render the formset's management form, and then "
"each form in the formset as per the template defined by the form's :attr:"
"`~django.forms.Form.template_name`."
msgstr ""
"Ce gabarit sera utilisé pour produire le formulaire de gestion du jeu de "
"formulaires, puis chaque formulaire du jeu en respectant le gabarit défini "
"par l'attribut :attr:`~django.forms.Form.template_name` du formulaire."

msgid ""
"The name of the template used when calling :meth:`.as_div`. By default this "
"is ``\"django/forms/formsets/div.html\"``. This template renders the "
"formset's management form and then each form in the formset as per the "
"form's :meth:`~django.forms.Form.as_div` method."
msgstr ""
"Le nom du gabarit à utiliser lors de l'appel à :meth:`.as_div`. Par défaut, "
"il s'agit de ``'django/forms/formsets/div.html'``. Ce gabarit produit le "
"formulaire de gestion du jeu de formulaires, puis chaque formulaire du jeu "
"en respectant la méthode :meth:`~django.forms.Form.as_div` du formulaire."

msgid ""
"The name of the template used when calling :meth:`.as_p`. By default this is "
"``\"django/forms/formsets/p.html\"``. This template renders the formset's "
"management form and then each form in the formset as per the form's :meth:"
"`~django.forms.Form.as_p` method."
msgstr ""
"Le nom du gabarit à utiliser lors de l'appel à :meth:`.as_p`. Par défaut, il "
"s'agit de ``\"django/forms/formsets/p.html\"``. Ce gabarit produit le "
"formulaire de gestion du jeu de formulaires, puis chaque formulaire du jeu "
"en respectant la méthode :meth:`~django.forms.Form.as_p` du formulaire."

msgid ""
"The name of the template used when calling :meth:`.as_table`. By default "
"this is ``\"django/forms/formsets/table.html\"``. This template renders the "
"formset's management form and then each form in the formset as per the "
"form's :meth:`~django.forms.Form.as_table` method."
msgstr ""
"Le nom du gabarit à utiliser lors de l'appel à :meth:`.as_table`. Par "
"défaut, il s'agit de ``\"django/forms/formsets/table.html\"``. Ce gabarit "
"produit le formulaire de gestion du jeu de formulaires, puis chaque "
"formulaire du jeu en respectant la méthode :meth:`~django.forms.Form."
"as_table` du formulaire."

msgid ""
"The name of the template used when calling :meth:`.as_ul`. By default this "
"is ``\"django/forms/formsets/ul.html\"``. This template renders the "
"formset's management form and then each form in the formset as per the "
"form's :meth:`~django.forms.Form.as_ul` method."
msgstr ""
"Le nom du gabarit à utiliser lors de l'appel à :meth:`.as_ul`. Par défaut, "
"il s'agit de ``\"django/forms/formsets/ul.html\"``. Ce gabarit produit le "
"formulaire de gestion du jeu de formulaires, puis chaque formulaire du jeu "
"en respectant la méthode :meth:`~django.forms.Form.as_ul` du formulaire."

msgid "Returns the context for rendering a formset in a template."
msgstr ""
"Renvoie le contexte pour la production du jeu de formulaires dans un gabarit."

msgid "The available context is:"
msgstr "Le contexte disponible est :"

msgid "``formset`` : The instance of the formset."
msgstr "``formset``: l'instance du jeu de formulaire."

msgid ""
"The render method is called by ``__str__`` as well as the :meth:`.as_div`, :"
"meth:`.as_p`, :meth:`.as_ul`, and :meth:`.as_table` methods. All arguments "
"are optional and will default to:"
msgstr ""
"La méthode de production est appelée par ``__str__`` ainsi que par les "
"méthodes :meth:`.as_div`, :meth:`.as_p`, :meth:`.as_ul` et :meth:`."
"as_table`. Tous les arguments sont facultatifs et valent par défaut :"

msgid "``template_name``: :attr:`.template_name`"
msgstr "``template_name``: :attr:`.template_name`"

msgid "``context``: Value returned by :meth:`.get_context`"
msgstr "``context``: la valeur renvoyée par :meth:`.get_context`"

msgid "``renderer``: Value returned by :attr:`.renderer`"
msgstr "``renderer``: la valeur renvoyée par :attr:`.renderer`"

msgid "Renders the formset with the :attr:`.template_name_div` template."
msgstr ""
"Produit le jeu de formulaires avec le gabarit :attr:`.template_name_div`."

msgid "Renders the formset with the :attr:`.template_name_p` template."
msgstr ""
"Produit le jeu de formulaires avec le gabarit :attr:`.template_name_p`."

msgid "Renders the formset with the :attr:`.template_name_table` template."
msgstr ""
"Produit le jeu de formulaires avec le gabarit :attr:`.template_name_table`."

msgid "Renders the formset with the :attr:`.template_name_ul` template."
msgstr ""
"Produit le jeu de formulaires avec le gabarit :attr:`.template_name_ul`."

msgid ""
"Using a formset inside a view is not very different from using a regular "
"``Form`` class. The only thing you will want to be aware of is making sure "
"to use the management form inside the template. Let's look at a sample view::"
msgstr ""
"L'utilisation de formulaires groupés dans une vue n'est pas très différent "
"de l'utilisation d'une classe ``Form`` habituelle. La seule chose à laquelle "
"il faut être attentif est de ne pas oublier d'inclure le formulaire de "
"gestion dans le gabarit. Examinons un exemple de vue ::"

msgid "The ``manage_articles.html`` template might look like this:"
msgstr "Le gabarit ``manage_articles.html`` pourrait ressembler à ceci :"

msgid ""
"However there's a slight shortcut for the above by letting the formset "
"itself deal with the management form:"
msgstr ""
"Toutefois, le code ci-dessus peut être légèrement raccourci en laissant les "
"formulaires groupés se charger eux-mêmes du formulaire de gestion :"

msgid ""
"The above ends up calling the :meth:`BaseFormSet.render` method on the "
"formset class. This renders the formset using the template specified by the :"
"attr:`~BaseFormSet.template_name` attribute. Similar to forms, by default "
"the formset will be rendered ``as_table``, with other helper methods of "
"``as_p`` and ``as_ul`` being available. The rendering of the formset can be "
"customized by specifying the ``template_name`` attribute, or more generally "
"by :ref:`overriding the default template <overriding-built-in-formset-"
"templates>`."
msgstr ""
"Le code ci-dessus aboutit à l'appel de la méthode :meth:`BaseFormSet.render` "
"de la classe du jeu de formulaires. Ceci produit le jeu de formulaires en "
"utilisant le gabarit défini par l'attribut :attr:`~BaseFormSet."
"template_name`. Tout comme pour les formulaires, le jeu de formulaires est "
"produit avec ``as_table`` par défaut, mais les méthodes utilitaires ``as_p`` "
"et ``as_ul`` sont aussi disponibles. La production du jeu de formulaires "
"peut être personnalisée en spécifiant l'attribut ``template_name`` ou plus "
"généralement en :ref:`surchargeant le gabarit par défaut <overriding-built-"
"in-formset-templates>`."

msgid "Manually rendered ``can_delete`` and ``can_order``"
msgstr "Affichage manuel de ``can_delete`` et ``can_order``"

msgid ""
"If you manually render fields in the template, you can render ``can_delete`` "
"parameter with ``{{ form.DELETE }}``:"
msgstr ""
"Si vous affichez manuellement les champs dans le gabarit, vous pouvez "
"afficher le paramètre ``can_delete`` avec ``{{ form.DELETE }}``:"

msgid ""
"Similarly, if the formset has the ability to order (``can_order=True``), it "
"is possible to render it with ``{{ form.ORDER }}``."
msgstr ""
"De la même façon, si les formulaires groupés peuvent être triés "
"(``can_order=True``), il est possible d'afficher le champ de tri avec "
"``{{ form.ORDER }}``."

msgid "Using more than one formset in a view"
msgstr "Utilisation de plus d'un objet de formulaires groupés dans une vue"

msgid ""
"You are able to use more than one formset in a view if you like. Formsets "
"borrow much of its behavior from forms. With that said you are able to use "
"``prefix`` to prefix formset form field names with a given value to allow "
"more than one formset to be sent to a view without name clashing. Let's take "
"a look at how this might be accomplished::"
msgstr ""
"Il est possible d'utiliser plus d'un objet de formulaires groupés dans une "
"vue. Les formulaires groupés ont un comportement très semblable à celui des "
"formulaires. Ceci dit, vous pouvez utiliser l'attribut ``prefix`` afin de "
"préfixer les noms de champs des formulaires groupés avec une valeur donnée, "
"ce qui permettra d'envoyer plusieurs ensembles de formulaires groupés à une "
"vue sans conflit de nommage. Voyons un peu comment cela pourrait être fait ::"

msgid ""
"You would then render the formsets as normal. It is important to point out "
"that you need to pass ``prefix`` on both the POST and non-POST cases so that "
"it is rendered and processed correctly."
msgstr ""
"Les formulaires groupés seraient ensuite affichés comme d'habitude. Il est "
"important de relever que vous devez indiquer ``prefix`` dans tous les cas "
"(``POST`` ou non), afin que l'affichage et le traitement des données "
"puissent se faire correctement."

msgid ""
"Each formset's :ref:`prefix <formset-prefix>` replaces the default ``form`` "
"prefix that's added to each field's ``name`` and ``id`` HTML attributes."
msgstr ""
"Chaque :ref:`prefix <formset-prefix>` de jeu de formulaires remplace le "
"préfixe par défaut ``form`` qui est ajouté à chaque attribut HTML ``name`` "
"et ``id`` des champs de formulaire."

msgid "Working with forms"
msgstr "Utilisation des formulaires"

msgid "About this document"
msgstr "À propos de ce document"

msgid ""
"This document provides an introduction to the basics of web forms and how "
"they are handled in Django. For a more detailed look at specific areas of "
"the forms API, see :doc:`/ref/forms/api`, :doc:`/ref/forms/fields`, and :doc:"
"`/ref/forms/validation`."
msgstr ""
"Ce document présente une introduction aux bases des formulaires web et à la "
"manière dont ils sont traités par Django. Pour plus de détails sur des "
"aspects spécifiques de l'API des formulaires, consultez :doc:`/ref/forms/"
"api`, :doc:`/ref/forms/fields`, et :doc:`/ref/forms/validation`."

msgid ""
"Unless you're planning to build websites and applications that do nothing "
"but publish content, and don't accept input from your visitors, you're going "
"to need to understand and use forms."
msgstr ""
"À moins que vous n'ayez l'intention de construire des sites Web et des "
"applications qui ne font rien d'autre que de publier du contenu, et "
"n'acceptant aucune saisie de la part de ses visiteurs, vous allez avoir "
"besoin de comprendre et d'utiliser des formulaires."

msgid ""
"Django provides a range of tools and libraries to help you build forms to "
"accept input from site visitors, and then process and respond to the input."
msgstr ""
"Django fournit un certain nombre d'outils et de bibliothèques pour vous "
"aider à créer des formulaires de saisie pour les visiteurs du site, puis "
"pour aider à traiter et à répondre à ces saisies."

msgid "HTML forms"
msgstr "Formulaires HTML"

msgid ""
"In HTML, a form is a collection of elements inside ``<form>...</form>`` that "
"allow a visitor to do things like enter text, select options, manipulate "
"objects or controls, and so on, and then send that information back to the "
"server."
msgstr ""
"En HTML, un formulaire est un ensemble d'éléments à l'intérieur des balises "
"``<form>...</form>`` qui permettent à un visiteur d'effectuer des actions "
"comme saisir du texte, sélectionner des options, manipuler des objets ou des "
"contrôles, et ainsi de suite, puis d'envoyer ces informations au serveur."

msgid ""
"Some of these form interface elements - text input or checkboxes - are built "
"into HTML itself. Others are much more complex; an interface that pops up a "
"date picker or allows you to move a slider or manipulate controls will "
"typically use JavaScript and CSS as well as HTML form ``<input>`` elements "
"to achieve these effects."
msgstr ""
"Certains de ces éléments d'interface de formulaires - boîtes de saisie de "
"texte ou cases à cocher - sont intégrés à HTML. D'autres éléments sont "
"beaucoup plus complexes ; une interface qui affiche un sélecteur de date ou "
"qui permet de déplacer un curseur ou de contrôler un autre élément graphique "
"utilise généralement du code JavaScript et CSS, ainsi que des éléments "
"``<input>`` de formulaires HTML pour produire ce genre d'effets."

msgid "As well as its ``<input>`` elements, a form must specify two things:"
msgstr ""
"En plus de ses éléments ``<input>``, un formulaire doit préciser deux "
"choses :"

msgid ""
"*where*: the URL to which the data corresponding to the user's input should "
"be returned"
msgstr ""
"*où* : l'URL vers laquelle les données correspondant à la saisie de "
"l'utilisateur doivent être renvoyées"

msgid "*how*: the HTTP method the data should be returned by"
msgstr "*comment* : la méthode HTTP utilisée pour renvoyer les données"

msgid ""
"As an example, the login form for the Django admin contains several "
"``<input>`` elements: one of ``type=\"text\"`` for the username, one of "
"``type=\"password\"`` for the password, and one of ``type=\"submit\"`` for "
"the \"Log in\" button. It also contains some hidden text fields that the "
"user doesn't see, which Django uses to determine what to do next."
msgstr ""
"Par exemple, le formulaire de connexion pour l'administration de Django "
"contient plusieurs éléments ``<input>``: un de ``type=\"text\"`` pour le nom "
"d'utilisateur, un de ``type=\"password\"`` pour le mot de passe, et un de "
"``type=\"submit\"`` pour le bouton « Connexion ». Il contient également des "
"champs de texte cachés que l'utilisateur ne voit pas, mais que Django "
"utilise pour déterminer ce qu'il faut faire après la connexion."

msgid ""
"It also tells the browser that the form data should be sent to the URL "
"specified in the ``<form>``’s ``action`` attribute - ``/admin/`` - and that "
"it should be sent using the HTTP mechanism specified by the ``method`` "
"attribute - ``post``."
msgstr ""
"Il indique également au navigateur que les données du formulaire doivent "
"être envoyées à l'URL spécifiée dans l'attribut ``action``  de la balise "
"``<form>`` (``/admin/``) et qu'elles doivent être envoyées en utilisant le "
"mécanisme HTTP spécifié par l'attribut ``method`` (``post``)."

msgid ""
"When the ``<input type=\"submit\" value=\"Log in\">`` element is triggered, "
"the data is returned to ``/admin/``."
msgstr ""
"Lorsque le bouton ``<input type=\"submit\" value=\"Connexion\">`` est "
"déclenché, les données sont renvoyées à ``/admin/``."

msgid "``GET`` and ``POST``"
msgstr "``GET`` et ``POST``"

msgid ""
"``GET`` and ``POST`` are the only HTTP methods to use when dealing with "
"forms."
msgstr ""
"``GET`` et ``POST`` sont les seules méthodes HTTP à utiliser dans les "
"formulaires."

msgid ""
"Django's login form is returned using the ``POST`` method, in which the "
"browser bundles up the form data, encodes it for transmission, sends it to "
"the server, and then receives back its response."
msgstr ""
"Le formulaire de connexion de Django est renvoyé en utilisant la méthode "
"``POST``, par laquelle le navigateur regroupe les données du formulaire, les "
"encode pour la transmission, les envoie au serveur, puis reçoit la réponse "
"en retour."

msgid ""
"``GET``, by contrast, bundles the submitted data into a string, and uses "
"this to compose a URL. The URL contains the address where the data must be "
"sent, as well as the data keys and values. You can see this in action if you "
"do a search in the Django documentation, which will produce a URL of the "
"form ``https://docs.djangoproject.com/search/?q=forms&release=1``."
msgstr ""
"``GET``, en revanche, regroupe les données fournies dans une chaîne et "
"l'utilise pour composer une URL. L'URL contient l'adresse à laquelle les "
"données doivent être envoyées, ainsi que les clés et les valeurs fournies. "
"Vous pouvez en voir un exemple si vous effectuez une recherche dans la "
"documentation de Django, car cela va produire une URL de la forme ``https://"
"docs.djangoproject.com/search/?q=forms&release=1``."

msgid "``GET`` and ``POST`` are typically used for different purposes."
msgstr ""
"``GET`` et ``POST`` sont généralement utilisées à des fins différentes."

msgid ""
"Any request that could be used to change the state of the system - for "
"example, a request that makes changes in the database - should use ``POST``. "
"``GET`` should be used only for requests that do not affect the state of the "
"system."
msgstr ""
"Toute requête pouvant être utilisée pour modifier l'état du système, par "
"exemple une requête qui applique des changements en base de données, devrait "
"utiliser ``POST``. ``GET`` ne devrait être employée que pour des requêtes "
"qui n'affectent pas l'état du système."

msgid ""
"``GET`` would also be unsuitable for a password form, because the password "
"would appear in the URL, and thus, also in browser history and server logs, "
"all in plain text. Neither would it be suitable for large quantities of "
"data, or for binary data, such as an image. A web application that uses "
"``GET`` requests for admin forms is a security risk: it can be easy for an "
"attacker to mimic a form's request to gain access to sensitive parts of the "
"system. ``POST``, coupled with other protections like Django's :doc:`CSRF "
"protection </ref/csrf/>` offers more control over access."
msgstr ""
"``GET`` ne conviendrait pas non plus pour un formulaire de changement de mot "
"de passe, car le mot de passe apparaîtrait en clair dans l'URL ainsi que "
"dans l'historique du navigateur et les journaux du serveur. Elle ne "
"conviendrait pas non plus pour des données volumineuses ou pour des données "
"binaires telles que pour une image. Une application Web utilisant des "
"requêtes ``GET`` pour des formulaires administratifs ne serait pas "
"sécurisée : il est facile pour un attaquant de simuler une requête de "
"formulaire pour obtenir l'accès à des parties sensibles du système. Les "
"requêtes ``POST`` accompagnées par d'autres protections comme la :doc:"
"`protection CSRF </ref/csrf/>` de Django offrent un bien meilleur contrôle "
"sur les accès."

msgid ""
"On the other hand, ``GET`` is suitable for things like a web search form, "
"because the URLs that represent a ``GET`` request can easily be bookmarked, "
"shared, or resubmitted."
msgstr ""
"D'autre part, ``GET`` convient pour des interfaces comme un formulaire de "
"recherche Web, car les URL qui représentent une requête ``GET`` peuvent être "
"facilement conservées dans un signet, partagées ou ré-envoyées."

msgid "Django's role in forms"
msgstr "Le rôle de Django dans les formulaires"

msgid ""
"Handling forms is a complex business. Consider Django's admin, where "
"numerous items of data of several different types may need to be prepared "
"for display in a form, rendered as HTML, edited using a convenient "
"interface, returned to the server, validated and cleaned up, and then saved "
"or passed on for further processing."
msgstr ""
"La gestion des formulaires est une affaire complexe. Considérez "
"l'application d'administration de Django où de nombreuses données de "
"différents types doivent être préparées pour être affichées dans un "
"formulaire, produites en HTML, éditées par une interface conviviale, "
"renvoyées vers le serveur, validées et nettoyées, et finalement enregistrées "
"ou transmises pour traitement ultérieur."

msgid ""
"Django's form functionality can simplify and automate vast portions of this "
"work, and can also do it more securely than most programmers would be able "
"to do in code they wrote themselves."
msgstr ""
"La fonctionnalité des formulaires de Django peut simplifier et automatiser "
"de larges portions de ce travail et peut aussi le faire de manière plus "
"sécurisée que la plupart des programmeurs ne pourraient le faire en écrivant "
"leur propre code."

msgid "Django handles three distinct parts of the work involved in forms:"
msgstr ""
"Django gère trois parties distinctes du travail induit par les formulaires :"

msgid "preparing and restructuring data to make it ready for rendering"
msgstr "préparation et restructuration des données en vue de leur présentation"

msgid "creating HTML forms for the data"
msgstr "création des formulaires HTML pour les données"

msgid "receiving and processing submitted forms and data from the client"
msgstr ""
"réception et traitement des formulaires et des données envoyés par le client"

msgid ""
"It is *possible* to write code that does all of this manually, but Django "
"can take care of it all for you."
msgstr ""
"Il est *possible* d'écrire du code qui fait tout cela manuellement, mais "
"Django peut s'en charger à votre place."

msgid "Forms in Django"
msgstr "Les formulaires dans Django"

msgid ""
"We've described HTML forms briefly, but an HTML ``<form>`` is just one part "
"of the machinery required."
msgstr ""
"Nous avons brièvement décrit les formulaires HTML, mais un objet HTML "
"``<form>`` n'est qu'un élément de la machinerie nécessaire."

msgid ""
"In the context of a web application, 'form' might refer to that HTML "
"``<form>``, or to the Django :class:`Form` that produces it, or to the "
"structured data returned when it is submitted, or to the end-to-end working "
"collection of these parts."
msgstr ""
"Dans le contexte d'une application Web, « formulaire » peut se référer à "
"cette balise HTML ``<form>``, à la classe :class:`Form` de Django qui la "
"produit, aux données structurées renvoyées lorsque le formulaire est soumis, "
"ou encore au fonctionnement de bout en bout de ces différentes parties."

msgid "The Django :class:`Form` class"
msgstr "La classe :class:`Form` de Django"

msgid ""
"At the heart of this system of components is Django's :class:`Form` class. "
"In much the same way that a Django model describes the logical structure of "
"an object, its behavior, and the way its parts are represented to us, a :"
"class:`Form` class describes a form and determines how it works and appears."
msgstr ""
"La classe :class:`Form` de Django se situe au cœur de ce système de "
"composants. De la même façon qu'un modèle Django décrit la structure logique "
"d'un objet, son comportement et la manière dont ses parties nous sont "
"présentées, une classe :class:`Form` décrit un formulaire et détermine son "
"fonctionnement et son apparence."

msgid ""
"In a similar way that a model class's fields map to database fields, a form "
"class's fields map to HTML form ``<input>`` elements. (A :class:`ModelForm` "
"maps a model class's fields to HTML form ``<input>`` elements via a :class:"
"`Form`; this is what the Django admin is based upon.)"
msgstr ""
"De la même façon que les champs d'une classe de modèle correspondent à des "
"champs de base de données, les champs d'une classe de formulaire "
"correspondent aux éléments ``<input>`` d'un formulaire HTML (un :class:"
"`ModelForm` fait correspondre les champs d'une classe de modèle à des "
"éléments ``<input>`` d'un formulaire HTML via un formulaire :class:`Form`; "
"cela constitue la base de l'interface d'administration de Django)."

msgid ""
"A form's fields are themselves classes; they manage form data and perform "
"validation when a form is submitted. A :class:`DateField` and a :class:"
"`FileField` handle very different kinds of data and have to do different "
"things with it."
msgstr ""
"Les champs d'un formulaire sont eux-mêmes des classes ; elles gèrent les "
"données de formulaire et s'occupent de la validation lorsque des données de "
"formulaires sont reçues. Un champ :class:`DateField` et un champ :class:"
"`FileField` gèrent des types de données très différents et doivent procéder "
"à des actions différentes."

msgid ""
"A form field is represented to a user in the browser as an HTML \"widget\" - "
"a piece of user interface machinery. Each field type has an appropriate "
"default :doc:`Widget class </ref/forms/widgets/>`, but these can be "
"overridden as required."
msgstr ""
"Un champ de formulaire est présenté dans une interface de navigateur sous "
"forme de « composant » HTML, un élément d'interface utilisateur. Chaque type "
"de champ contient une :doc:`classe Widget </ref/forms/widgets/>` appropriée "
"par défaut, mais celles-ci peuvent être remplacées au besoin."

msgid "Instantiating, processing, and rendering forms"
msgstr "Instanciation, traitement et rendu des formulaires"

msgid "When rendering an object in Django, we generally:"
msgstr ""
"Lors du rendu d'un objet Django pour son affichage, il s'agit généralement "
"de :"

msgid "get hold of it in the view (fetch it from the database, for example)"
msgstr ""
"obtenir l'élément dans la vue (le récupérer à partir de la base de données, "
"par exemple)"

msgid "pass it to the template context"
msgstr "le transmettre au contexte de gabarit"

msgid "expand it to HTML markup using template variables"
msgstr "le transformer en balisage HTML en utilisant des variables de gabarit"

msgid ""
"Rendering a form in a template involves nearly the same work as rendering "
"any other kind of object, but there are some key differences."
msgstr ""
"L'affichage d'un formulaire dans un gabarit suit à peu près le même "
"processus que pour tout autre type d'objet, mais il y a tout de même "
"certaines différences notables."

msgid ""
"In the case of a model instance that contained no data, it would rarely if "
"ever be useful to do anything with it in a template. On the other hand, it "
"makes perfect sense to render an unpopulated form - that's what we do when "
"we want the user to populate it."
msgstr ""
"Dans le cas d'une instance de modèle ne contenant aucune donnée, il n'y aura "
"pas beaucoup de sens d'en faire quoi que ce soit dans un gabarit. En "
"revanche, il est totalement raisonnable de vouloir afficher un formulaire "
"vierge, c'est ce qu'il faut faire lorsqu'on veut que quelqu'un le remplisse."

msgid ""
"So when we handle a model instance in a view, we typically retrieve it from "
"the database. When we're dealing with a form we typically instantiate it in "
"the view."
msgstr ""
"Ainsi, lorsque nous manipulons une instance de modèle dans une vue, nous la "
"récupérons typiquement à partir de la base de données. Lorsque nous "
"manipulons un formulaire, nous en créons typiquement une instance dans la "
"vue."

msgid ""
"When we instantiate a form, we can opt to leave it empty or prepopulate it, "
"for example with:"
msgstr ""
"Lors de la création d'une instance de formulaire, on peut choisir de le "
"laisser vide ou de le pré-remplir, par exemple avec :"

msgid ""
"data from a saved model instance (as in the case of admin forms for editing)"
msgstr ""
"des données provenant d'une instance de modèle enregistrée (comme dans le "
"cas des formulaires d'administration pour l'édition)"

msgid "data that we have collated from other sources"
msgstr "des données que nous avons obtenues à partir d'autres sources"

msgid "data received from a previous HTML form submission"
msgstr "des données reçues d'un envoi de formulaire HTML"

msgid ""
"The last of these cases is the most interesting, because it's what makes it "
"possible for users not just to read a website, but to send information back "
"to it too."
msgstr ""
"Le dernier de ces cas est le plus intéressant, car c'est ce qui permet aux "
"utilisateurs de ne pas seulement lire un site Web, mais aussi de renvoyer "
"des informations aux sites Web."

msgid "Building a form"
msgstr "Construction d'un formulaire"

msgid "The work that needs to be done"
msgstr "Le travail à effectuer"

msgid ""
"Suppose you want to create a simple form on your website, in order to obtain "
"the user's name. You'd need something like this in your template:"
msgstr ""
"Supposons que vous vouliez créer un formulaire simple sur votre site dans le "
"but d'obtenir le nom de l'utilisateur. Voici ce qu'il faudrait obtenir dans "
"le navigateur :"

msgid ""
"This tells the browser to return the form data to the URL ``/your-name/``, "
"using the ``POST`` method. It will display a text field, labeled \"Your name:"
"\", and a button marked \"OK\". If the template context contains a "
"``current_name`` variable, that will be used to pre-fill the ``your_name`` "
"field."
msgstr ""
"Le navigateur saura alors qu'il doit renvoyer les données du formulaire vers "
"l'URL ``/your-name/``, en utilisant la méthode ``POST``. Il affichera un "
"champ de texte libellé « Your name: » et un bouton intitulé « OK ». Si le "
"contexte de gabarit contient une variable ``current_name``, celle-ci sera "
"utilisée pour pré-remplir le champ ``your_name``."

msgid ""
"You'll need a view that renders the template containing the HTML form, and "
"that can supply the ``current_name`` field as appropriate."
msgstr ""
"Il faudra une vue qui produit le gabarit contenant le formulaire HTML et qui "
"puisse fournir le champ ``current_name`` si nécessaire."

msgid ""
"When the form is submitted, the ``POST`` request which is sent to the server "
"will contain the form data."
msgstr ""
"Lorsque le formulaire aura été envoyé, la requête ``POST`` envoyée au "
"serveur contiendra les données du formulaire."

msgid ""
"Now you'll also need a view corresponding to that ``/your-name/`` URL which "
"will find the appropriate key/value pairs in the request, and then process "
"them."
msgstr ""
"Mais il sera également nécessaire d'avoir une vue répondant à l'URL ``/your-"
"name/`` qui se chargera de trouver les paires clé-valeur dans la requête, "
"puis de les traiter."

msgid ""
"This is a very simple form. In practice, a form might contain dozens or "
"hundreds of fields, many of which might need to be prepopulated, and we "
"might expect the user to work through the edit-submit cycle several times "
"before concluding the operation."
msgstr ""
"Il s'agit d'un formulaire très simple. En pratique, un formulaire peut "
"contenir des dizaines ou centaines de champs, dont beaucoup peuvent être pré-"
"remplis, et il est possible que l'utilisateur doive passer par plusieurs "
"cycles d'envoi/édition avant que l'opération globale ne soit terminée."

msgid ""
"We might require some validation to occur in the browser, even before the "
"form is submitted; we might want to use much more complex fields, that allow "
"the user to do things like pick dates from a calendar and so on."
msgstr ""
"On peut attendre du navigateur qu'il s'occupe d'une partie de la validation, "
"même avant que le formulaire ne soit envoyé. Peut-être que certains champs "
"seront bien plus complexes, permettant par exemple de choisir des dates dans "
"un calendrier."

msgid ""
"At this point it's much easier to get Django to do most of this work for us."
msgstr ""
"Compte tenu de tout ceci, il est bien plus avantageux que Django se charge "
"lui-même de la plupart du travail."

msgid "Building a form in Django"
msgstr "Construction d'un formulaire dans Django"

msgid "The :class:`Form` class"
msgstr "La classe :class:`Form`"

msgid ""
"We already know what we want our HTML form to look like. Our starting point "
"for it in Django is this:"
msgstr ""
"Nous savons déjà à quoi notre formulaire HTML doit ressembler. Notre point "
"de départ dans Django est le suivant :"

msgid ""
"This defines a :class:`Form` class with a single field (``your_name``). "
"We've applied a human-friendly label to the field, which will appear in the "
"``<label>`` when it's rendered (although in this case, the :attr:`~Field."
"label` we specified is actually the same one that would be generated "
"automatically if we had omitted it)."
msgstr ""
"Cela définit une classe :class:`Form` comportant un seul champ "
"(``your_name``). Nous avons attribué une étiquette conviviale à ce champ ; "
"celle-ci apparaîtra dans la balise ``<label>`` au moment de l'affichage "
"(bien que dans ce cas, le contenu indiqué dans :attr:`~Field.label` est en "
"réalité identique à celui qui aurait été généré automatiquement si nous "
"n'avions rien fait)."

msgid ""
"The field's maximum allowable length is defined by :attr:`~CharField."
"max_length`. This does two things. It puts a ``maxlength=\"100\"`` on the "
"HTML ``<input>`` (so the browser should prevent the user from entering more "
"than that number of characters in the first place). It also means that when "
"Django receives the form back from the browser, it will validate the length "
"of the data."
msgstr ""
"La longueur maximale du champ est définie par :attr:`~CharField.max_length`. "
"Cela fait deux choses : la balise HTML ``<input>`` reçoit l'attribut "
"``maxlength=\"100\"`` (afin que le navigateur empêche lui-même la saisie "
"d'un plus grand nombre de caractères), et ultérieurement lorsque Django "
"reçoit en retour les données de formulaire, il valide que les données "
"respectent cette longueur."

msgid ""
"A :class:`Form` instance has an :meth:`~Form.is_valid()` method, which runs "
"validation routines for all its fields. When this method is called, if all "
"fields contain valid data, it will:"
msgstr ""
"Une instance de :class:`Form` possède une méthode :meth:`~Form.is_valid()` "
"qui procède aux routines de validation pour tous ses champs. Lorsque la "
"méthode est appelée et que tous les champs contiennent des données valables, "
"celle-ci :"

msgid "return ``True``"
msgstr "renvoie ``True``;"

msgid "place the form's data in its :attr:`~Form.cleaned_data` attribute."
msgstr ""
"insère les données du formulaire dans l'attribut :attr:`~Form.cleaned_data`."

msgid "The whole form, when rendered for the first time, will look like:"
msgstr ""
"Le formulaire complet, lorsqu'il est affiché pour la première fois, "
"ressemble à ceci :"

msgid ""
"Note that it **does not** include the ``<form>`` tags, or a submit button. "
"We'll have to provide those ourselves in the template."
msgstr ""
"Notez qu'il n'inclut **pas** les balises ``<form>`` ni de bouton d'envoi. "
"Ces éléments doivent être ajoutés par celui qui rédige le gabarit."

msgid "The view"
msgstr "La vue"

msgid ""
"Form data sent back to a Django website is processed by a view, generally "
"the same view which published the form. This allows us to reuse some of the "
"same logic."
msgstr ""
"Les données de formulaire renvoyés à un site Web Django sont traitées par "
"une vue, en principe la même qui a servi à produire le formulaire. Cela "
"permet de réutiliser une partie de la même logique."

msgid ""
"To handle the form we need to instantiate it in the view for the URL where "
"we want it to be published:"
msgstr ""
"Pour traiter le formulaire, nous devons en créer une instance dans la vue à "
"destination de l'URL à laquelle il doit apparaître :"

msgid ""
"If we arrive at this view with a ``GET`` request, it will create an empty "
"form instance and place it in the template context to be rendered. This is "
"what we can expect to happen the first time we visit the URL."
msgstr ""
"Si nous arrivons dans cette vue avec une requête ``GET``, la vue crée une "
"instance de formulaire vierge et la place dans le contexte de gabarit en vue "
"de son affichage. C'est à quoi l'on peut s'attendre lors du premier accès à "
"l'URL en question."

msgid ""
"If the form is submitted using a ``POST`` request, the view will once again "
"create a form instance and populate it with data from the request: ``form = "
"NameForm(request.POST)`` This is called \"binding data to the form\" (it is "
"now a *bound* form)."
msgstr ""
"Si le formulaire est envoyé par une requête ``POST``, la vue crée également "
"une instance de formulaire et la complète avec les données reçues à partir "
"de la requête : ``form = NameForm(request.POST)``. C'est ce qu'on appelle "
"« lier les données au formulaire » (il s'agit maintenant d'un formulaire "
"*lié*, « bound » en anglais)."

msgid ""
"We call the form's ``is_valid()`` method; if it's not ``True``, we go back "
"to the template with the form. This time the form is no longer empty "
"(*unbound*) so the HTML form will be populated with the data previously "
"submitted, where it can be edited and corrected as required."
msgstr ""
"La méthode ``is_valid()`` est appelée ; si elle ne renvoie pas ``True``, on "
"se retrouve au stade du gabarit contenant le formulaire. Mais cette fois, le "
"formulaire n'est plus vierge (*non lié* ou *unbound*) ce qui fait que le "
"formulaire HTML sera rempli avec les données saisies précédemment, données "
"qui peuvent être modifiées et corrigées selon les besoins."

msgid ""
"If ``is_valid()`` is ``True``, we'll now be able to find all the validated "
"form data in its ``cleaned_data`` attribute. We can use this data to update "
"the database or do other processing before sending an HTTP redirect to the "
"browser telling it where to go next."
msgstr ""
"Si ``is_valid()`` renvoie ``True``, toutes les données validées du "
"formulaire sont alors accessibles dans l'attribut ``cleaned_data``. Ces "
"données peuvent être utilisées pour mettre à jour la base de données ou "
"effectuer d'autres opérations avant de renvoyer au navigateur une "
"redirection HTTP lui indiquant l'URL à recharger."

msgid "The template"
msgstr "Le gabarit"

msgid "We don't need to do much in our ``name.html`` template:"
msgstr "Il n'y a pas grand chose à faire dans le gabarit ``name.html``:"

msgid ""
"All the form's fields and their attributes will be unpacked into HTML markup "
"from that ``{{ form }}`` by Django's template language."
msgstr ""
"Tous les champs de formulaire et leurs attributs seront convertis en balises "
"HTML à partir de ``{{ form }}`` par le langage de gabarit de Django."

msgid "Forms and Cross Site Request Forgery protection"
msgstr ""
"Formulaires et protection contre le « Cross site request forgery » (CSRF)"

msgid ""
"Django ships with an easy-to-use :doc:`protection against Cross Site Request "
"Forgeries </ref/csrf>`. When submitting a form via ``POST`` with CSRF "
"protection enabled you must use the :ttag:`csrf_token` template tag as in "
"the preceding example. However, since CSRF protection is not directly tied "
"to forms in templates, this tag is omitted from the following examples in "
"this document."
msgstr ""
"Django est livré avec une protection simple d'emploi :doc:`contre les "
"attaques de type Cross Site Request Forgeries </ref/csrf>`. Lors de l'envoi "
"d'un formulaire par la méthode ``POST`` et la protection CSRF active, vous "
"devez utiliser la balise de gabarit :ttag:`csrf_token` comme dans l'exemple "
"précédent. Cependant, comme la protection CSRF n'est pas directement liée "
"aux formulaires dans les gabarits, cette balise est omise dans les exemples "
"suivants de ce document."

msgid "HTML5 input types and browser validation"
msgstr "Types de composants HTML5 et validation par le navigateur"

msgid ""
"If your form includes a :class:`~django.forms.URLField`, an :class:`~django."
"forms.EmailField` or any integer field type, Django will use the ``url``, "
"``email`` and ``number`` HTML5 input types. By default, browsers may apply "
"their own validation on these fields, which may be stricter than Django's "
"validation. If you would like to disable this behavior, set the "
"``novalidate`` attribute on the ``form`` tag, or specify a different widget "
"on the field, like :class:`TextInput`."
msgstr ""
"Si un formulaire contient un champ de type :class:`~django.forms.URLField`, :"
"class:`~django.forms.EmailField` ou tout type de champ nombre entier, Django "
"fait appel aux composants HTML5 (input) de type ``url``, ``email`` et "
"``number``. Par défaut, les navigateurs appliquent souvent leur propre "
"validation de ces champs, qui peut être plus stricte que celle de Django. Si "
"vous voulez échapper à cette validation, ajoutez l'attribut ``novalidate`` "
"sur la balise ``form`` ou définissez un autre composant de formulaire pour "
"le champ, comme par exemple :class:`TextInput`."

msgid ""
"We now have a working web form, described by a Django :class:`Form`, "
"processed by a view, and rendered as an HTML ``<form>``."
msgstr ""
"Nous possédons maintenant un formulaire Web fonctionnel, défini par une "
"instance :class:`Form` de Django, traité par une vue et affiché sous forme "
"de balise HTML ``<form>``."

msgid ""
"That's all you need to get started, but the forms framework puts a lot more "
"at your fingertips. Once you understand the basics of the process described "
"above, you should be prepared to understand other features of the forms "
"system and ready to learn a bit more about the underlying machinery."
msgstr ""
"C'est tout ce dont vous avez besoin pour commencer, mais l'infrastructure "
"des formulaires a beaucoup plus à vous offrir. À partir du moment où vous "
"comprenez les bases du processus décrit ci-dessus, il est bon de connaître "
"les autres fonctionnalités mises à disposition par le système des "
"formulaires et d'en savoir un peu plus au sujet de la machinerie sous-"
"jacente."

msgid "More about Django :class:`Form` classes"
msgstr "Plus de détails sur les classes :class:`Form` de Django"

msgid ""
"All form classes are created as subclasses of either :class:`django.forms."
"Form` or :class:`django.forms.ModelForm`. You can think of ``ModelForm`` as "
"a subclass of ``Form``. ``Form`` and ``ModelForm`` actually inherit common "
"functionality from a (private) ``BaseForm`` class, but this implementation "
"detail is rarely important."
msgstr ""
"Toutes les classes de formulaires sont créées comme sous-classes de :class:"
"`django.forms.Form` ou de :class:`django.forms.ModelForm`. ``ModelForm`` "
"peut être considéré comme une sous-classe de ``Form``. ``Form`` et "
"``ModelForm`` héritent effectivement de comportements communs provenant de "
"la classe (privée) ``BaseForm``, mais ce détail d'implémentation est "
"rarement significatif."

msgid "Models and Forms"
msgstr "Modèles et formulaires"

msgid ""
"In fact if your form is going to be used to directly add or edit a Django "
"model, a :doc:`ModelForm </topics/forms/modelforms>` can save you a great "
"deal of time, effort, and code, because it will build a form, along with the "
"appropriate fields and their attributes, from a ``Model`` class."
msgstr ""
"En fait, si un formulaire est destiné à ajouter ou modifier directement un "
"modèle Django, un formulaire :doc:`ModelForm </topics/forms/modelforms>` "
"peut vous économiser beaucoup de temps, d'effort et de code, car il s'occupe "
"de construire un formulaire avec tous les champs et attributs appropriés à "
"partir d'une classe ``Model``."

msgid "Bound and unbound form instances"
msgstr "Instances de formulaires liées et non liées"

msgid ""
"The distinction between :ref:`ref-forms-api-bound-unbound` is important:"
msgstr ""
"La distinction entre :ref:`ref-forms-api-bound-unbound` est importante :"

msgid ""
"An unbound form has no data associated with it. When rendered to the user, "
"it will be empty or will contain default values."
msgstr ""
"Un formulaire non renseigné n'a aucune donnée associée. Lorsqu'il est "
"présenté à l'utilisateur, il sera vide ou ne contiendra que des valeurs par "
"défaut."

msgid ""
"A bound form has submitted data, and hence can be used to tell if that data "
"is valid. If an invalid bound form is rendered, it can include inline error "
"messages telling the user what data to correct."
msgstr ""
"Un formulaire renseigné contient des données envoyées et il est donc "
"possible de lui demander si ces données sont valides. Si un formulaire "
"renseigné non valide est affiché, il peut contenir des messages d'erreur "
"intégrés indiquant à l'utilisateur quelles sont les données à corriger. "

msgid ""
"The form's :attr:`~Form.is_bound` attribute will tell you whether a form has "
"data bound to it or not."
msgstr ""
"L'attribut :attr:`~Form.is_bound` d'un formulaire indique si des données ont "
"été liées au formulaire ou pas."

msgid "More on fields"
msgstr "Plus de détails sur les champs"

msgid ""
"Consider a more useful form than our minimal example above, which we could "
"use to implement \"contact me\" functionality on a personal website:"
msgstr ""
"Voici un formulaire un peu plus utile que notre exemple minimal ci-dessus, "
"que nous pourrions utiliser pour implémenter une fonctionnalité « Contactez-"
"moi » sur un site Web personnel :"

msgid ""
"Our earlier form used a single field, ``your_name``, a :class:`CharField`. "
"In this case, our form has four fields: ``subject``, ``message``, ``sender`` "
"and ``cc_myself``. :class:`CharField`, :class:`EmailField` and :class:"
"`BooleanField` are just three of the available field types; a full list can "
"be found in :doc:`/ref/forms/fields`."
msgstr ""
"Le formulaire précédent comportait un seul champ, ``your_name``, de type :"
"class:`CharField`. Dans ce cas, le formulaire possède quatre champs :  "
"``subject``, ``message``, ``sender`` et ``cc_myself``. :class:`CharField`, :"
"class:`EmailField` et :class:`BooleanField` ne sont que trois des types de "
"champs disponibles ; une liste complète se trouve dans :doc:`/ref/forms/"
"fields`."

msgid "Widgets"
msgstr "Composants de formulaires (« widgets »)"

msgid ""
"Each form field has a corresponding :doc:`Widget class </ref/forms/widgets/"
">`, which in turn corresponds to an HTML form widget such as ``<input "
"type=\"text\">``."
msgstr ""
"À chaque champ de formulaire correspond une :doc:`classe Widget  </ref/forms/"
"widgets/>`, qui elle-même se réfère à un composant de formulaire HTML comme "
"par exemple  ``<input type=\"text\">``."

msgid ""
"In most cases, the field will have a sensible default widget. For example, "
"by default, a :class:`CharField` will have a :class:`TextInput` widget, that "
"produces an ``<input type=\"text\">`` in the HTML. If you needed "
"``<textarea>`` instead, you'd specify the appropriate widget when defining "
"your form field, as we have done for the ``message`` field."
msgstr ""
"Dans la plupart des cas, le composant par défaut du champ convient bien. Par "
"exemple, le composant par défaut du champ :class:`CharField` est :class:"
"`TextInput`, qui produit une balise ``<input type=\"text\">`` en HTML. Si au "
"contraire vous aviez souhaité une balise ``<textarea>``, il aurait fallu "
"définir le composant approprié lors de la définition du champ de formulaire, "
"comme nous l'avons fait pour le champ ``message``."

msgid "Field data"
msgstr "Données de champ"

msgid ""
"Whatever the data submitted with a form, once it has been successfully "
"validated by calling ``is_valid()`` (and ``is_valid()`` has returned "
"``True``), the validated form data will be in the ``form.cleaned_data`` "
"dictionary. This data will have been nicely converted into Python types for "
"you."
msgstr ""
"Quelles que soient les données envoyées avec un formulaire, au moment où "
"elles ont été validées avec succès suite à l'appel de ``is_valid()`` (et que "
"``is_valid()`` a renvoyé ``True``), les données de formulaire validées se "
"trouvent dans le dictionnaire ``form.cleaned_data``. Ces données auront été "
"gracieusement converties en types Python pour vous."

msgid ""
"You can still access the unvalidated data directly from ``request.POST`` at "
"this point, but the validated data is better."
msgstr ""
"À ce stade, vous pouvez toujours accéder directement aux données non "
"validées dans ``request.POST``, mais les données validées sont plus "
"adéquates."

msgid ""
"In the contact form example above, ``cc_myself`` will be a boolean value. "
"Likewise, fields such as :class:`IntegerField` and :class:`FloatField` "
"convert values to a Python ``int`` and ``float`` respectively."
msgstr ""
"Dans l'exemple ci-dessus du formulaire de contact, ``cc_myself`` sera une "
"valeur booléenne. De la même manière, des champs de type :class:"
"`IntegerField` et :class:`FloatField` convertissent les valeurs en types "
"Python ``int`` et ``float``, respectivement."

msgid ""
"Here's how the form data could be processed in the view that handles this "
"form:"
msgstr ""
"Voici comment les données de formulaire pourraient être traitées dans la vue "
"qui gère ce formulaire :"

msgid "For more on sending email from Django, see :doc:`/topics/email`."
msgstr ""
"Pour en savoir plus sur l'envoi de courriels à partir de Django, consultez :"
"doc:`/topics/email`."

msgid ""
"Some field types need some extra handling. For example, files that are "
"uploaded using a form need to be handled differently (they can be retrieved "
"from ``request.FILES``, rather than ``request.POST``). For details of how to "
"handle file uploads with your form, see :ref:`binding-uploaded-files`."
msgstr ""
"Certains types de champ ont besoin de traitement supplémentaire. Par "
"exemple, les fichiers téléversés via un formulaire doivent être traités "
"différemment (ils sont accessibles par ``request.FILES``, et non pas par "
"``request.POST``). Pour plus de détails sur la façon de gérer des "
"téléversements de fichiers avec un formulaire, consultez :ref:`binding-"
"uploaded-files`."

msgid "Working with form templates"
msgstr "Formulaires et gabarits"

msgid ""
"All you need to do to get your form into a template is to place the form "
"instance into the template context. So if your form is called ``form`` in "
"the context, ``{{ form }}`` will render its ``<label>`` and ``<input>`` "
"elements appropriately."
msgstr ""
"Tout ce qui est nécessaire pour qu'un formulaire soit inclus dans un gabarit "
"est de placer l'instance de formulaire dans le contexte du gabarit. Ainsi, "
"si le formulaire est appelé ``form`` dans le contexte, ``{{ form }}`` "
"suffira à afficher ses éléments ``<label>`` et ``<input>`` de manière "
"appropriée."

msgid "Additional form template furniture"
msgstr "Compléments HTML pour les formulaires dans les gabarits"

msgid ""
"Don't forget that a form's output does *not* include the surrounding "
"``<form>`` tags, or the form's ``submit`` control. You will have to provide "
"these yourself."
msgstr ""
"N'oubliez pas que le rendu HTML d'un formulaire n'inclut *pas* la balise "
"``<form>`` englobante, ni le composant ``submit`` pour l'envoi du "
"formulaire. C'est à vous d'ajouter ces éléments."

msgid "Reusable form templates"
msgstr "Gabarits de formulaire réutilisables"

msgid ""
"The HTML output when rendering a form is itself generated via a template. "
"You can control this by creating an appropriate template file and setting a "
"custom :setting:`FORM_RENDERER` to use that :attr:`~django.forms.renderers."
"BaseRenderer.form_template_name` site-wide. You can also customize per-form "
"by overriding the form's :attr:`~django.forms.Form.template_name` attribute "
"to render the form using the custom template, or by passing the template "
"name directly to :meth:`.Form.render`."
msgstr ""
"La sortie HTML lors de la production d'un formulaire est elle-même générée "
"via un gabarit. Vous pouvez contrôler cette étape en créant un fichier de "
"gabarit approprié et en définissant un :setting:`FORM_RENDERER` personnalisé "
"qui utilisera ce paramètre :attr:`~django.forms.renderers.BaseRenderer."
"form_template_name` pour tout le site. Il est aussi possible de "
"personnaliser le processus par formulaire en surchargeant l'attribut :attr:"
"`~django.forms.Form.template_name` du formulaire afin de produire le "
"formulaire en utilisant ce gabarit personnalisé, ou en passant le nom de "
"gabarit directement à :meth:`.Form.render`."

msgid ""
"The example below will result in ``{{ form }}`` being rendered as the output "
"of the ``form_snippet.html`` template."
msgstr ""
"L'exemple ci-dessous aboutit à ce que ``{{ form }}`` soit produit au moyen "
"du contenu du gabarit ``form_snippet.html``"

msgid "In your templates:"
msgstr "Dans vos gabarits :"

msgid "Then you can configure the :setting:`FORM_RENDERER` setting:"
msgstr "Puis, vous pouvez configurer le réglage :setting:`FORM_RENDERER`:"

msgid "``settings.py``"
msgstr "``settings.py``"

msgid "… or for a single form::"
msgstr "… ou pour un seul formulaire ::"

msgid ""
"… or for a single render of a form instance, passing in the template name to "
"the :meth:`.Form.render`. Here's an example of this being used in a view::"
msgstr ""
"… ou pour une production unique d'une instance de formulaire, en passant le "
"nom du gabarit à la méthode :meth:`.Form.render`. Voici un exemple de cette "
"utilisation dans une vue ::"

msgid "See :ref:`ref-forms-api-outputting-html` for more details."
msgstr "Voir :ref:`ref-forms-api-outputting-html` pour plus de détails."

msgid "Reusable field group templates"
msgstr "Gabarits de groupes de champs réutilisables"

msgid ""
"Each field is available as an attribute of the form, using ``{{ form."
"name_of_field }}`` in a template. A field has a :meth:`~django.forms."
"BoundField.as_field_group` method which renders the related elements of the "
"field as a group, its label, widget, errors, and help text."
msgstr ""
"Chaque champ est disponible comme attribut du formulaire, utilisant la "
"syntaxe ``{{ form.name_of_field }}`` dans un gabarit. Un champ possède une "
"méthode:meth:`~django.forms.BoundField.as_field_group` qui produit les "
"éléments liés au champ sous forme de groupe :, son étiquette, son composant, "
"les éventuelles erreurs ou le texte d'aide."

msgid ""
"This allows generic templates to be written that arrange fields elements in "
"the required layout. For example:"
msgstr ""
"Cela permet d'écrire des gabarits génériques qui composent les éléments des "
"champs dans la disposition voulue. Par exemple :"

msgid ""
"By default Django uses the ``\"django/forms/field.html\"`` template which is "
"designed for use with the default ``\"django/forms/div.html\"`` form style."
msgstr ""
"Par défaut, Django utilise le gabarit ``\"django/forms/field.html\"`` qui "
"est conçu pour être employé avec le style de formulaire par défaut "
"``\"django/forms/div.html\"``."

msgid ""
"The default template can be customized by setting :attr:`~django.forms."
"renderers.BaseRenderer.field_template_name` in your project-level :setting:"
"`FORM_RENDERER`::"
msgstr ""
"Le gabarit par défaut peut être personnalisé en définissant :attr:`~django."
"forms.renderers.BaseRenderer.field_template_name` dans le réglage :setting:"
"`FORM_RENDERER` du projet ::"

msgid "… or on a single field::"
msgstr "… ou pour un champ spécifique ::"

msgid ""
"… or on a per-request basis by calling :meth:`.BoundField.render` and "
"supplying a template name::"
msgstr ""
"… ou en fonction de la requête en appelant :meth:`.BoundField.render` et en "
"indiquant un nom de gabarit ::"

msgid "Rendering fields manually"
msgstr "Affichage manuel des champs"

msgid ""
"More fine grained control over field rendering is also possible. Likely this "
"will be in a custom field template, to allow the template to be written once "
"and reused for each field. However, it can also be directly accessed from "
"the field attribute on the form. For example:"
msgstr ""
"Un contrôle plus fin sur le rendu des champs est aussi possible. Cela se "
"ferait probablement dans un gabarit de champ personnalisé, ce qui permet "
"d'écrire le gabarit une seule fois et de le réutiliser pour chaque champ. "
"Cependant, il est aussi possible d'y accéder directement à partir de "
"l'attribut de champ du formulaire. Par exemple :"

msgid ""
"Complete ``<label>`` elements can also be generated using the :meth:`~django."
"forms.BoundField.label_tag`. For example:"
msgstr ""
"Une balise ``<label>`` complète peut aussi être générée au moyen de :meth:"
"`~django.forms.BoundField.label_tag`. Par exemple :"

msgid "Rendering form error messages"
msgstr "Affichage des messages d'erreur de formulaires"

msgid ""
"The price of this flexibility is a bit more work. Until now we haven't had "
"to worry about how to display form errors, because that's taken care of for "
"us. In this example we have had to make sure we take care of any errors for "
"each field and any errors for the form as a whole. Note ``{{ form."
"non_field_errors }}`` at the top of the form and the template lookup for "
"errors on each field."
msgstr ""
"Le prix de cette flexibilité est un effort un peu plus grand. Jusqu'à ce "
"stade, nous n'avions pas à nous préoccuper de l'affichage des erreurs du "
"formulaire, car cela se faisait automatiquement. Dans cet exemple, il a "
"fallu s'assurer que les erreurs de chaque champ et les erreurs globales du "
"formulaire soient effectivement affichées. Remarquez ``{{ form."
"non_field_errors }}`` au sommet du formulaire ainsi que l'expression de "
"gabarit concernant les erreurs de chaque champ."

msgid ""
"Using ``{{ form.name_of_field.errors }}`` displays a list of form errors, "
"rendered as an unordered list. This might look like:"
msgstr ""
"La syntaxe ``{{ form.nom_du_champ.errors }}`` affiche une liste des erreurs "
"du formulaire, sous forme de liste non ordonnée. Cela pourrait ressembler à "
"ceci ::"

msgid ""
"The list has a CSS class of ``errorlist`` to allow you to style its "
"appearance. If you wish to further customize the display of errors you can "
"do so by looping over them:"
msgstr ""
"La liste possède une classe CSS ``errorlist`` pour vous permettre de mettre "
"en forme son apparence. Si vous souhaitez personnaliser davantage "
"l'affichage des erreurs, vous pouvez le faire par une boucle :"

msgid ""
"Non-field errors (and/or hidden field errors that are rendered at the top of "
"the form when using helpers like ``form.as_p()``) will be rendered with an "
"additional class of ``nonfield`` to help distinguish them from field-"
"specific errors. For example, ``{{ form.non_field_errors }}`` would look "
"like:"
msgstr ""
"Les erreurs non liées à un champ (ou les erreurs de champs cachés qui sont "
"affichées au sommet du formulaire lorsqu'on utilise des utilitaires comme "
"``form.as_p()``) seront dotées d'une classe supplémentaire ``nonfield`` pour "
"aider à faire la distinction avec les erreurs spécifiques à un champ. Par "
"exemple, ``{{ form.non_field_errors }}`` ressemblerait à :"

msgid ""
"See :doc:`/ref/forms/api` for more on errors, styling, and working with form "
"attributes in templates."
msgstr ""
"Voir :doc:`/ref/forms/api` pour plus de détails sur les erreurs, la mise en "
"forme et la manipulation des attributs de formulaire dans les gabarits."

msgid "Looping over the form's fields"
msgstr "Boucles sur champs de formulaires"

msgid ""
"If you're using the same HTML for each of your form fields, you can reduce "
"duplicate code by looping through each field in turn using a ``{% for %}`` "
"loop:"
msgstr ""
"Si vous utilisez le même code HTML pour tous vos champs de formulaire, vous "
"pouvez réduire la duplication de code en effectuant une boucle sur chaque "
"champ en utilisant l'opérateur ``{% for %}``:"

msgid "Useful attributes on ``{{ field }}`` include:"
msgstr "Voici quelques attributs de champ utiles :"

msgid "``{{ field.errors }}``"
msgstr "``{{ field.errors }}``"

msgid ""
"Outputs a ``<ul class=\"errorlist\">`` containing any validation errors "
"corresponding to this field. You can customize the presentation of the "
"errors with a ``{% for error in field.errors %}`` loop. In this case, each "
"object in the loop is a string containing the error message."
msgstr ""
"Affiche une liste ``<ul class=\"errorlist\">`` contenant toute erreur de "
"validation correspondant à ce champ. Vous pouvez personnaliser la "
"présentation des erreurs avec une boucle ``{% for error in field.errors %}"
"``. Dans ce cas, chaque objet de la boucle est une chaîne de caractères "
"contenant le message d'erreur."

msgid "``{{ field.field }}``"
msgstr "``{{ field.field }}``"

msgid ""
"The :class:`~django.forms.Field` instance from the form class that this :"
"class:`~django.forms.BoundField` wraps. You can use it to access :class:"
"`~django.forms.Field` attributes, e.g. ``{{ char_field.field.max_length }}``."
msgstr ""
"L'instance :class:`~django.forms.Field` de la classe de formulaire que cet "
"objet :class:`~django.forms.BoundField` adapte. Vous pouvez l'utiliser pour "
"accéder aux attributs de :class:`~django.forms.Field`, par exemple "
"``{{ char_field.field.max_length }}``."

msgid "``{{ field.help_text }}``"
msgstr "``{{ field.help_text }}``"

msgid "Any help text that has been associated with the field."
msgstr "Tout texte d'aide associé au champ."

msgid "``{{ field.html_name }}``"
msgstr "``{{ field.html_name }}``"

msgid ""
"The name of the field that will be used in the input element's name field. "
"This takes the form prefix into account, if it has been set."
msgstr ""
"Le nom du champ tel qu'il sera utilisé dans le nom de champ de la balise "
"``input``. Il prend en compte le préfixe de formulaire, si celui-ci est "
"défini."

msgid "``{{ field.id_for_label }}``"
msgstr "``{{ field.id_for_label }}``"

msgid ""
"The ID that will be used for this field (``id_email`` in the example above). "
"If you are constructing the label manually, you may want to use this in lieu "
"of ``label_tag``. It's also useful, for example, if you have some inline "
"JavaScript and want to avoid hardcoding the field's ID."
msgstr ""
"L'attribut ``id`` utilisé pour ce champ (``id_email`` dans l'exemple ci-"
"dessus). Si vous construisez vous-même l'étiquette du champ, il peut être "
"avantageux d'utiliser ceci à la place de ``label_tag``. C'est aussi utile "
"par exemple si vous avez du code JavaScript en ligne et que vous vouliez "
"éviter de figer l'identifiant du champ."

msgid "``{{ field.is_hidden }}``"
msgstr "``{{ field.is_hidden }}``"

msgid ""
"This attribute is ``True`` if the form field is a hidden field and ``False`` "
"otherwise. It's not particularly useful as a template variable, but could be "
"useful in conditional tests such as:"
msgstr ""
"Cet attribut vaut ``True`` si le champ de formulaire est un champ masqué, "
"sinon il vaut ``False``. Ce n'est pas particulièrement utile comme variable "
"de gabarit, mais pourrait être utile dans des tests conditionnels tels que :"

msgid "``{{ field.label }}``"
msgstr "``{{ field.label }}``"

msgid "The label of the field, e.g. ``Email address``."
msgstr "L'étiquette du champ, par exemple  ``Adresse de courriel``."

msgid "``{{ field.label_tag }}``"
msgstr "``{{ field.label_tag }}``"

msgid ""
"The field's label wrapped in the appropriate HTML ``<label>`` tag. This "
"includes the form's :attr:`~django.forms.Form.label_suffix`. For example, "
"the default ``label_suffix`` is a colon:"
msgstr ""
"L'intitulé du champ placé dans la balise HTML ``<label>`` appropriée. Cela "
"comprend le paramètre :attr:`~django.forms.Form.label_suffix` du formulaire. "
"Par exemple, la valeur ``label_suffix`` par défaut est un caractère deux-"
"points :"

msgid "``{{ field.legend_tag }}``"
msgstr "``{{ field.legend_tag }}``"

msgid ""
"Similar to ``field.label_tag`` but uses a ``<legend>`` tag in place of "
"``<label>``, for widgets with multiple inputs wrapped in a ``<fieldset>``."
msgstr ""
"Similaire à ``field.label_tag`` mais utilise une balise ``<legend>`` au lieu "
"de ``<label>`` pour les composants ayant plusieurs entrées enveloppées dans "
"un ``<fieldset>``."

msgid "``{{ field.use_fieldset }}``"
msgstr "``{{ field.use_fieldset }}``"

msgid ""
"This attribute is ``True`` if the form field's widget contains multiple "
"inputs that should be semantically grouped in a ``<fieldset>`` with a "
"``<legend>`` to improve accessibility. An example use in a template:"
msgstr ""
"Cet attribut vaut ``True`` si le composant du champ de formulaire contient "
"plusieurs entrées qui devraient être sémantiquement groupés dans un "
"``<fieldset>`` avec une ``<legend>`` pour améliorer l'accessibilité. Un "
"exemple d'utilisation dans un gabarit :"

msgid "``{{ field.value }}``"
msgstr "``{{ field.value }}``"

msgid "The value of the field. e.g ``someone@example.com``."
msgstr "La valeur du champ, par exemple ``quelqu-un@example.com``."

msgid ""
"For a complete list of attributes and methods, see :class:`~django.forms."
"BoundField`."
msgstr ""
"Pour une liste complète des attributs et méthodes, voir :class:`~django."
"forms.BoundField`."

msgid "Looping over hidden and visible fields"
msgstr "Boucles sur les champs masqués et visibles"

msgid ""
"If you're manually laying out a form in a template, as opposed to relying on "
"Django's default form layout, you might want to treat ``<input "
"type=\"hidden\">`` fields differently from non-hidden fields. For example, "
"because hidden fields don't display anything, putting error messages \"next "
"to\" the field could cause confusion for your users -- so errors for those "
"fields should be handled differently."
msgstr ""
"Si vous affichez manuellement un formulaire dans un gabarit, sans faire "
"appel à l'affichage par défaut des formulaires de Django, il peut être "
"nécessaire de traiter différemment les champs ``<input type=\"hidden\">`` "
"des autres champs non masqués. Par exemple, comme les champs masqués ne "
"produisent pas de contenu visible, l'affichage de messages d'erreur « à "
"côté » du champ pourrait générer de la confusion pour les utilisateurs ; il "
"faut donc gérer différemment les erreurs de ce type de champ."

msgid ""
"Django provides two methods on a form that allow you to loop over the hidden "
"and visible fields independently: ``hidden_fields()`` and "
"``visible_fields()``. Here's a modification of an earlier example that uses "
"these two methods:"
msgstr ""
"Django fournit deux méthodes qui permettent de tourner en boucle "
"indépendamment sur les champs visibles et masqués : ``hidden_fields()`` et "
"``visible_fields()``. Voici une modification d'un exemple précédent en "
"utilisant ces deux méthodes :"

msgid ""
"This example does not handle any errors in the hidden fields. Usually, an "
"error in a hidden field is a sign of form tampering, since normal form "
"interaction won't alter them. However, you could easily insert some error "
"displays for those form errors, as well."
msgstr ""
"Cet exemple ne gère pas du tout les erreurs des champs masqués. En principe, "
"une erreur dans un champ masqué est un signe de manipulation abusive d'un "
"formulaire, puisque l'interaction normale avec un formulaire ne les modifie "
"pas. Cependant, vous pourriez facilement ajouter aussi une forme d'affichage "
"pour ces erreurs de formulaire."

msgid "Further topics"
msgstr "Sujets complémentaires"

msgid "This covers the basics, but forms can do a whole lot more:"
msgstr ""
"Cette page aborde les généralités, mais les formulaires peuvent faire bien "
"d'autres choses encore :"

msgid ":doc:`The Forms Reference </ref/forms/index>`"
msgstr ":doc:`La référence des formulaires </ref/forms/index>`"

msgid ""
"Covers the full API reference, including form fields, form widgets, and form "
"and field validation."
msgstr ""
"Contient la référence d'API complète, y compris les champs de formulaire, "
"les composants de formulaire et la validation des champs et des formulaires."

msgid "Form Assets (the ``Media`` class)"
msgstr "Fichiers annexes de formulaire (classe ``Media``)"

msgid ""
"Rendering an attractive and easy-to-use web form requires more than just "
"HTML - it also requires CSS stylesheets, and if you want to use fancy "
"widgets, you may also need to include some JavaScript on each page. The "
"exact combination of CSS and JavaScript that is required for any given page "
"will depend upon the widgets that are in use on that page."
msgstr ""
"L'affichage d'un formulaire Web attractif et ergonomique exige plus que du "
"code HTML simple, il nécessite également des feuilles de style CSS, et si "
"vous voulez utiliser des composants plaisants, il sera peut-être nécessaire "
"d'inclure aussi du code JavaScript sur chaque page. La combinaison exacte de "
"CSS et de JavaScript nécessaire pour une page donnée dépend des composants "
"de formulaire employés sur cette page."

msgid ""
"This is where asset definitions come in. Django allows you to associate "
"different files -- like stylesheets and scripts -- with the forms and "
"widgets that require those assets. For example, if you want to use a "
"calendar to render DateFields, you can define a custom Calendar widget. This "
"widget can then be associated with the CSS and JavaScript that is required "
"to render the calendar. When the Calendar widget is used on a form, Django "
"is able to identify the CSS and JavaScript files that are required, and "
"provide the list of file names in a form suitable for inclusion on your web "
"page."
msgstr ""
"C'est là où la définition de fichiers annexes intervient. Django permet "
"d'associer différents fichiers comme des feuilles de style et des scripts à "
"des formulaires et des composants qui ont besoin de ces fichiers. Par "
"exemple, si vous voulez utiliser un calendrier pour afficher les champs "
"date, vous pouvez définir un composant ``Calendrier`` personnalisé. Ce "
"composant peut ensuite être associé à des fichiers CSS et JavaScript requis "
"pour afficher le calendrier. Quand le composant ``Calendrier`` est utilisé "
"dans un formulaire, Django est capable d'identifier les fichiers CSS et "
"JavaScript nécessaires et de fournir la liste des noms de fichiers au "
"formulaire de manière à ce qu'ils puissent être inclus dans la page Web."

msgid "Assets and Django Admin"
msgstr "Fichiers annexes dans l'administration de Django"

msgid ""
"The Django Admin application defines a number of customized widgets for "
"calendars, filtered selections, and so on. These widgets define asset "
"requirements, and the Django Admin uses the custom widgets in place of the "
"Django defaults. The Admin templates will only include those files that are "
"required to render the widgets on any given page."
msgstr ""
"L'application d'administration de Django définit un certain nombre de "
"composants personnalisés pour les calendriers, les sélections filtrées, etc. "
"Ces composants définissent des exigences de fichiers annexes et "
"l'administration de Django utilise ces composants personnalisés au lieu des "
"composants par défaut de Django. Les gabarits de l'administration n'incluent "
"que les fichiers nécessaires pour l'affichage des composants de la page en "
"cours."

msgid ""
"If you like the widgets that the Django Admin application uses, feel free to "
"use them in your own application! They're all stored in ``django.contrib."
"admin.widgets``."
msgstr ""
"Si vous appréciez les composants utilisés par le site d'administration de "
"Django, vous pouvez librement les utiliser dans votre propre application ! "
"Ils se trouvent dans ``django.contrib.admin.widgets``."

msgid "Which JavaScript toolkit?"
msgstr "Quelle bibliothèque JavaScript ?"

msgid ""
"Many JavaScript toolkits exist, and many of them include widgets (such as "
"calendar widgets) that can be used to enhance your application. Django has "
"deliberately avoided blessing any one JavaScript toolkit. Each toolkit has "
"its own relative strengths and weaknesses - use whichever toolkit suits your "
"requirements. Django is able to integrate with any JavaScript toolkit."
msgstr ""
"Il existe plusieurs bibliothèques JavaScript et beaucoup d'entre elles "
"contiennent des composants utiles pour améliorer l'interface d'une "
"application (comme par exemple des composants de calendrier). Django a "
"délibérément évité de choisir parmi ces bibliothèques JavaScript. Chacune a "
"ses forces et ses faiblesses, utilisez donc celle qui correspond à vos "
"besoins. Django est capable d'intégrer n'importe quelle bibliothèque "
"JavaScript."

msgid "Assets as a static definition"
msgstr "Fichiers annexes définis statiquement"

msgid ""
"The easiest way to define assets is as a static definition. Using this "
"method, the declaration is an inner ``Media`` class. The properties of the "
"inner class define the requirements."
msgstr ""
"La façon la plus simple de définir des fichiers annexes est sous forme de "
"définition statique. Avec cette méthode, la déclaration se fait dans une "
"classe ``Media`` interne. Les propriétés de la classe interne définissent "
"les exigences."

msgid "Here's an example::"
msgstr "Voici un exemple ::"

msgid ""
"This code defines a ``CalendarWidget``, which will be based on "
"``TextInput``. Every time the CalendarWidget is used on a form, that form "
"will be directed to include the CSS file ``pretty.css``, and the JavaScript "
"files ``animations.js`` and ``actions.js``."
msgstr ""
"Ce code définit un composant ``CalendarWidget``, qui est basé sur "
"``TextInput``. Chaque fois que ``CalendarWidget`` sera utilisé dans un "
"formulaire, ce dernier sera amené à inclure le fichier CSS ``pretty.css`` et "
"les fichiers JavaScript ``animations.js`` et ``actions.js``."

msgid ""
"This static definition is converted at runtime into a widget property named "
"``media``. The list of assets for a ``CalendarWidget`` instance can be "
"retrieved through this property:"
msgstr ""
"Cette définition statique est convertie au moment de l'exécution en une "
"propriété de composant nommée ``media``. La liste des fichiers annexes d'une "
"instance de composant ``CalendarWidget`` peut être obtenue par cette "
"propriété :"

msgid ""
"Here's a list of all possible ``Media`` options. There are no required "
"options."
msgstr ""
"Voici une liste de toutes les options possibles de ``Media``. Il n'y a pas "
"d'option obligatoire."

msgid "``css``"
msgstr "``css``"

msgid ""
"A dictionary describing the CSS files required for various forms of output "
"media."
msgstr ""
"Un dictionnaire décrivant les fichiers CSS requis par les différentes formes "
"de support d'affichage."

msgid ""
"The values in the dictionary should be a tuple/list of file names. See :ref:"
"`the section on paths <form-asset-paths>` for details of how to specify "
"paths to these files."
msgstr ""
"Les valeurs du dictionnaire doivent être composées de tuples/listes de noms "
"de fichiers. Consultez :ref:`la section sur les chemins <form-asset-paths>` "
"pour plus de détails sur la manière de définir les chemins de ces fichiers."

msgid ""
"The keys in the dictionary are the output media types. These are the same "
"types accepted by CSS files in media declarations: 'all', 'aural', "
"'braille', 'embossed', 'handheld', 'print', 'projection', 'screen', 'tty' "
"and 'tv'. If you need to have different stylesheets for different media "
"types, provide a list of CSS files for each output medium. The following "
"example would provide two CSS options -- one for the screen, and one for "
"print::"
msgstr ""
"Les clés du dictionnaire correspondent aux types de support d'affichage. Ce "
"sont les mêmes types que les fichiers CSS acceptent dans les déclarations "
"« media » : 'all', 'aural', 'braille', 'embossed', 'handheld', 'print', "
"'projection', 'screen', 'tty' and 'tv'. Si vous avez besoin de feuilles de "
"style différentes en fonction de types de support différents, indiquez des "
"listes de fichiers CSS correspondant à chacun de ces types. L'exemple "
"suivant fournit deux options CSS, une pour l'affichage à l'écran et l'autre "
"pour l'impression ::"

msgid ""
"If a group of CSS files are appropriate for multiple output media types, the "
"dictionary key can be a comma separated list of output media types. In the "
"following example, TV's and projectors will have the same media "
"requirements::"
msgstr ""
"Si un groupe de fichiers CSS convient à plusieurs types de support "
"d'affichage, la clé de dictionnaire peut être une liste de types de support "
"d'affichage séparés par des virgules. Dans l'exemple suivant, les "
"télévisions et les projecteurs ont les mêmes exigences en terme de support ::"

msgid ""
"If this last CSS definition were to be rendered, it would become the "
"following HTML:"
msgstr ""
"Si cette dernière définition de CSS devait être affichée, cela produirait le "
"code HTML suivant :"

msgid "``js``"
msgstr "``js``"

msgid ""
"A tuple describing the required JavaScript files. See :ref:`the section on "
"paths <form-asset-paths>` for details of how to specify paths to these files."
msgstr ""
"Un tuple décrivant les fichiers JavaScript nécessaires. Consultez :ref:`la "
"section sur les chemins <form-asset-paths>` pour plus de détails sur la "
"manière de définir les chemins de ces fichiers."

msgid "``extend``"
msgstr "``extend``"

msgid "A boolean defining inheritance behavior for ``Media`` declarations."
msgstr ""
"Une valeur booléenne définissant le comportement de l'héritage des "
"déclarations ``Media``."

msgid ""
"By default, any object using a static ``Media`` definition will inherit all "
"the assets associated with the parent widget. This occurs regardless of how "
"the parent defines its own requirements. For example, if we were to extend "
"our basic Calendar widget from the example above:"
msgstr ""
"Par défaut, tout objet utilisant une définition statique de ``Media`` hérite "
"de tous les fichiers annexes associés au composant parent, et ceci quelle "
"que soit la manière dont le parent définit ses propres exigences. Par "
"exemple, si nous devions améliorer notre composant ``Calendar`` basique de "
"l'exemple ci-dessus :"

msgid ""
"The FancyCalendar widget inherits all the assets from its parent widget. If "
"you don't want ``Media`` to be inherited in this way, add an "
"``extend=False`` declaration to the ``Media`` declaration:"
msgstr ""
"Le composant ``FancyCalendar`` hérite de tous les fichiers annexes de son "
"composant parent. Si vous ne souhaitez pas que ``Media`` soit hérité de "
"cette façon, ajoutez une déclaration ``extend=False`` à la déclaration de "
"``Media``:"

msgid ""
"If you require even more control over inheritance, define your assets using "
"a :ref:`dynamic property <dynamic-property>`. Dynamic properties give you "
"complete control over which files are inherited, and which are not."
msgstr ""
"Si vous avez besoin de pouvoir contrôler encore plus l'héritage, définissez "
"vos fichiers annexes en utilisant une :ref:`propriété dynamique <dynamic-"
"property>`. Les propriétés dynamiques vous donnent un contrôle total sur les "
"fichiers hérités et ceux qui ne le seront pas."

msgid "``Media`` as a dynamic property"
msgstr "``Media`` comme propriété dynamique"

msgid ""
"If you need to perform some more sophisticated manipulation of asset "
"requirements, you can define the ``media`` property directly. This is done "
"by defining a widget property that returns an instance of ``forms.Media``.  "
"The constructor for ``forms.Media`` accepts ``css`` and ``js`` keyword "
"arguments in the same format as that used in a static media definition."
msgstr ""
"Si vous avez besoin d'effectuer certaines manipulations encore plus "
"sophistiquées sur les fichiers annexes requis, vous pouvez définir "
"directement la propriété ``media``. Cela peut être réalisé en définissant "
"une propriété du composant qui renvoie une instance de ``forms.Media``. le "
"constructeur de ``forms.Media`` accepte les paramètres nommés ``css`` and "
"``js`` dans le même format que celui qui est utilisé pour les définitions "
"statiques de fichiers annexes."

msgid ""
"For example, the static definition for our Calendar Widget could also be "
"defined in a dynamic fashion::"
msgstr ""
"Par exemple, la définition statique de notre composant de calendrier "
"pourrait tout aussi bien être réalisée de manière dynamique ::"

msgid ""
"See the section on `Media objects`_ for more details on how to construct "
"return values for dynamic ``media`` properties."
msgstr ""
"Consultez la section sur les `objets Media`_ pour plus de détails sur la "
"manière de construire des valeurs de retour pour les propriétés dynamiques "
"``media``."

msgid "Paths in asset definitions"
msgstr "Chemins dans les définitions de fichiers annexes"

msgid "Paths as strings"
msgstr "Chemins sous forme de chaînes"

msgid ""
"String paths used to specify assets can be either relative or absolute. If a "
"path starts with ``/``, ``http://`` or ``https://``, it will be interpreted "
"as an absolute path, and left as-is. All other paths will be prepended with "
"the value of the appropriate prefix. If the :mod:`django.contrib."
"staticfiles` app is installed, it will be used to serve assets."
msgstr ""
"Les chemins sous forme de chaînes utilisés pour définir les fichiers annexes "
"peuvent être relatifs ou absolus. Si un chemin commence par ``/``, ``http://"
"`` ou ``https://``, il sera interprété comme un chemin absolu et laissé tel "
"quel. Tous les autres chemins seront préfixés par la valeur appropriée. Si "
"l'application :mod:`django.contrib.staticfiles` est installée, elle sera "
"utilisée pour servir ces fichiers."

msgid ""
"Whether or not you use :mod:`django.contrib.staticfiles`,  the :setting:"
"`STATIC_URL` and :setting:`STATIC_ROOT` settings are required to render a "
"complete web page."
msgstr ""
"Que l'application :mod:`django.contrib.staticfiles` soit utilisée ou non, "
"les réglages :setting:`STATIC_URL` et :setting:`STATIC_ROOT` sont "
"obligatoires pour produire une page Web complète."

msgid ""
"To find the appropriate prefix to use, Django will check if the :setting:"
"`STATIC_URL` setting is not ``None`` and automatically fall back to using :"
"setting:`MEDIA_URL`. For example, if the :setting:`MEDIA_URL` for your site "
"was ``'https://uploads.example.com/'`` and :setting:`STATIC_URL` was "
"``None``:"
msgstr ""
"Pour trouver le bon préfixe à utiliser, Django contrôle si le réglage :"
"setting:`STATIC_URL` est différent de ``None`` et se rabat sur :setting:"
"`MEDIA_URL` en cas de besoin. Par exemple, si le réglage :setting:"
"`MEDIA_URL` de votre site est ``'https://uploads.example.com/'`` et que :"
"setting:`STATIC_URL`  vaut ``None``:"

msgid "But if :setting:`STATIC_URL` is ``'https://static.example.com/'``:"
msgstr "Mai si :setting:`STATIC_URL` vaut ``'https://static.example.com/'``:"

msgid ""
"Or if :mod:`~django.contrib.staticfiles` is configured using the :class:"
"`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage`:"
msgstr ""
"Ou si :mod:`~django.contrib.staticfiles` est configuré avec le stockage :"
"class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage`:"

msgid "Paths as objects"
msgstr "Chemins sous forme d'objets"

msgid ""
"Asset paths may also be given as hashable objects implementing an "
"``__html__()`` method. The ``__html__()`` method is typically added using "
"the :func:`~django.utils.html.html_safe` decorator. The object is "
"responsible for outputting the complete HTML ``<script>`` or ``<link>`` tag "
"content:"
msgstr ""
"Il est aussi possible de définir les chemins des fichiers annexes comme "
"objets hachables implémentant une méthode ``__html__()``. Cette méthode est "
"typiquement ajoutée au moyen du décorateur :func:`~django.utils.html."
"html_safe`. L'objet est responsable de produire le contenu HTML complet des "
"balises ``<script>`` ou ``<link>``:"

msgid "``Media`` objects"
msgstr "Objets ``Media``"

msgid ""
"When you interrogate the ``media`` attribute of a widget or form, the value "
"that is returned is a ``forms.Media`` object. As we have already seen, the "
"string representation of a ``Media`` object is the HTML required to include "
"the relevant files in the ``<head>`` block of your HTML page."
msgstr ""
"Lorsque vous interrogez l'attribut ``media`` d'un composant ou d'un "
"formulaire, la valeur renvoyée est un objet ``forms.Media``. Comme nous "
"l'avons déjà vu, la représentation textuelle d'un objet ``Media`` contient "
"le code HTML nécessaire pour inclure les fichiers concernés dans le bloc "
"``<head>`` de votre page HTML."

msgid "However, ``Media`` objects have some other interesting properties."
msgstr ""
"Cependant, les objets ``Media`` ont certaines autres propriétés "
"intéressantes."

msgid "Subsets of assets"
msgstr "Sous-ensembles de fichiers annexes"

msgid ""
"If you only want files of a particular type, you can use the subscript "
"operator to filter out a medium of interest. For example:"
msgstr ""
"Si vous ne souhaitez obtenir que les fichiers d'un type particulier, vous "
"pouvez utiliser l'opérateur d'indice pour filtrer le support qui vous "
"intéresse. Par exemple :"

msgid ""
"When you use the subscript operator, the value that is returned is a new "
"``Media`` object -- but one that only contains the media of interest."
msgstr ""
"Lorsque vous employez l'opérateur d'indice, la valeur renvoyée est un nouvel "
"objet ``Media``, mais qui ne contient que les fichiers qui vous intéressent."

msgid "Combining ``Media`` objects"
msgstr "Combinaison d'objets ``Media``"

msgid ""
"``Media`` objects can also be added together. When two ``Media`` objects are "
"added, the resulting ``Media`` object contains the union of the assets "
"specified by both:"
msgstr ""
"Les objets ``Media`` peuvent aussi être fusionnés. Lorsque l'on additionne "
"deux objets ``Media``, l'objet ``Media`` résultant contient l'union des "
"fichiers annexes contenus dans les deux objets :"

msgid "Order of assets"
msgstr "Ordre des fichiers annexes"

msgid ""
"The order in which assets are inserted into the DOM is often important. For "
"example, you may have a script that depends on jQuery. Therefore, combining "
"``Media`` objects attempts to preserve the relative order in which assets "
"are defined in each ``Media`` class."
msgstr ""
"L'ordre dans lequel les fichiers annexes sont insérés dans le DOM est "
"souvent important. Par exemple, vous pourriez avoir un script dépendant de "
"jQuery. Ainsi, la combinaison d'objets ``Media`` tente de conserver l'ordre "
"relatif dans lequel les fichiers annexes sont définis dans chaque classe "
"``Media``."

msgid ""
"Combining ``Media`` objects with assets in a conflicting order results in a "
"``MediaOrderConflictWarning``."
msgstr ""
"La combinaison d'objets ``Media`` ayant des fichiers annexes dans un ordre "
"conflictuel produit un avertissement ``MediaOrderConflictWarning``."

msgid "``Media`` on Forms"
msgstr "``Media`` pour les formulaires"

msgid ""
"Widgets aren't the only objects that can have ``media`` definitions -- forms "
"can also define ``media``. The rules for ``media`` definitions on forms are "
"the same as the rules for widgets: declarations can be static or dynamic; "
"path and inheritance rules for those declarations are exactly the same."
msgstr ""
"Les composants ne sont pas les seuls objets qui peuvent posséder des "
"définitions ``media``, les formulaires peuvent aussi en définir. Les règles "
"concernant les définitions ``media`` des formulaires sont les mêmes que pour "
"les composants : les déclarations peuvent être statiques ou dynamiques ; les "
"règles des chemins et de l'héritage de ces déclarations sont également "
"identiques."

msgid ""
"Regardless of whether you define a ``media`` declaration, *all* Form objects "
"have a ``media`` property. The default value for this property is the result "
"of adding the ``media`` definitions for all widgets that are part of the "
"form:"
msgstr ""
"Que vous définissiez une déclaration ``media`` ou non, *tous* les objets "
"``Form`` possèdent une propriété ``media``. La valeur par défaut de cette "
"propriété est le résultat de la fusion de toutes les définitions ``media`` "
"de tous les composants du formulaire :"

msgid ""
"If you want to associate additional assets with a form -- for example, CSS "
"for form layout -- add a ``Media`` declaration to the form:"
msgstr ""
"Si vous souhaitez associer des fichiers annexes supplémentaires à un "
"formulaire, par exemple des règles CSS pour la mise en forme du formulaire, "
"ajoutez une déclaration ``Media`` au formulaire :"

msgid "Creating forms from models"
msgstr "Création de formulaires à partir de modèles"

msgid "``ModelForm``"
msgstr "``ModelForm``"

msgid ""
"If you're building a database-driven app, chances are you'll have forms that "
"map closely to Django models. For instance, you might have a ``BlogComment`` "
"model, and you want to create a form that lets people submit comments. In "
"this case, it would be redundant to define the field types in your form, "
"because you've already defined the fields in your model."
msgstr ""
"Si vous construisez une application basée sur une base de données, il y a "
"des chances pour que vos formulaires correspondent étroitement avec les "
"modèles Django. Par exemple, vous pourriez avoir un modèle ``BlogComment`` "
"et vouloir créer un formulaire permettant d'envoyer des commentaires. Dans "
"ce cas, il serait redondant de devoir définir les types de champs du "
"formulaire, car vous avez déjà défini des champs au niveau du modèle."

msgid ""
"For this reason, Django provides a helper class that lets you create a "
"``Form`` class from a Django model."
msgstr ""
"C'est pour cette raison que Django fournit une classe utilitaire permettant "
"de créer une classe de formulaire ``Form`` à partir d'un modèle Django."

msgid ""
"The generated ``Form`` class will have a form field for every model field "
"specified, in the order specified in the ``fields`` attribute."
msgstr ""
"La classe de formulaire générée contiendra un champ de formulaire pour "
"chaque champ de modèle inclus, dans l'ordre indiqué par l'attribut "
"``fields``."

msgid ""
"Each model field has a corresponding default form field. For example, a "
"``CharField`` on a model is represented as a ``CharField`` on a form. A "
"model ``ManyToManyField`` is represented as a ``MultipleChoiceField``. Here "
"is the full list of conversions:"
msgstr ""
"Chaque champ de modèle possède un champ de formulaire par défaut. Par "
"exemple, le champ ``CharField`` d'un modèle est représenté par un champ de "
"formulaire ``CharField``. Un champ ``ManyToManyField`` d'un modèle est "
"représenté par un champ de formulaire ``MultipleChoiceField``. Voici la "
"liste complète des correspondances :"

msgid "Model field"
msgstr "Champ de modèle"

msgid "Form field"
msgstr "Champ de formulaire"

msgid ":class:`AutoField`"
msgstr ":class:`AutoField`"

msgid "Not represented in the form"
msgstr "Non représenté dans le formulaire"

msgid ":class:`BigAutoField`"
msgstr ":class:`BigAutoField`"

msgid ":class:`BigIntegerField`"
msgstr ":class:`BigIntegerField`"

msgid ""
":class:`~django.forms.IntegerField` with ``min_value`` set to "
"-9223372036854775808 and ``max_value`` set to 9223372036854775807."
msgstr ""
":class:`~django.forms.IntegerField` avec ``min_value`` à "
"-9223372036854775808 et ``max_value`` à 9223372036854775807."

msgid ":class:`BinaryField`"
msgstr ":class:`BinaryField`"

msgid ""
":class:`~django.forms.CharField`, if :attr:`~.Field.editable` is set to "
"``True`` on the model field, otherwise not represented in the form."
msgstr ""
":class:`~django.forms.CharField`, si :attr:`~.Field.editable` est défini à "
"``True`` sur le champ de modèle, sinon il n'est pas représenté dans le "
"formulaire."

msgid ":class:`BooleanField`"
msgstr ":class:`BooleanField`"

msgid ""
":class:`~django.forms.BooleanField`, or :class:`~django.forms."
"NullBooleanField` if ``null=True``."
msgstr ""
":class:`~django.forms.BooleanField`, ou :class:`~django.forms."
"NullBooleanField` si ``null=True``."

msgid ":class:`CharField`"
msgstr ":class:`CharField`"

msgid ""
":class:`~django.forms.CharField` with ``max_length`` set to the model "
"field's ``max_length`` and :attr:`~django.forms.CharField.empty_value` set "
"to ``None`` if ``null=True``."
msgstr ""
":class:`~django.forms.CharField` avec ``max_length`` définie à la même "
"valeur que ``max_length`` du champ de modèle et :attr:`~django.forms."
"CharField.empty_value` définie à ``None`` si ``null=True``."

msgid ":class:`DateField`"
msgstr ":class:`DateField`"

msgid ":class:`~django.forms.DateField`"
msgstr ":class:`~django.forms.DateField`"

msgid ":class:`DateTimeField`"
msgstr ":class:`DateTimeField`"

msgid ":class:`~django.forms.DateTimeField`"
msgstr ":class:`~django.forms.DateTimeField`"

msgid ":class:`DecimalField`"
msgstr ":class:`DecimalField`"

msgid ":class:`~django.forms.DecimalField`"
msgstr ":class:`~django.forms.DecimalField`"

msgid ":class:`DurationField`"
msgstr ":class:`DurationField`"

msgid ":class:`~django.forms.DurationField`"
msgstr ":class:`~django.forms.DurationField`"

msgid ":class:`EmailField`"
msgstr ":class:`EmailField`"

msgid ":class:`~django.forms.EmailField`"
msgstr ":class:`~django.forms.EmailField`"

msgid ":class:`FileField`"
msgstr ":class:`FileField`"

msgid ":class:`~django.forms.FileField`"
msgstr ":class:`~django.forms.FileField`"

msgid ":class:`FilePathField`"
msgstr ":class:`FilePathField`"

msgid ":class:`~django.forms.FilePathField`"
msgstr ":class:`~django.forms.FilePathField`"

msgid ":class:`FloatField`"
msgstr ":class:`FloatField`"

msgid ":class:`~django.forms.FloatField`"
msgstr ":class:`~django.forms.FloatField`"

msgid ":class:`ForeignKey`"
msgstr ":class:`ForeignKey`"

msgid ":class:`~django.forms.ModelChoiceField` (see below)"
msgstr ":class:`~django.forms.ModelChoiceField` (voir ci-dessous)"

msgid ":class:`ImageField`"
msgstr ":class:`ImageField`"

msgid ":class:`~django.forms.ImageField`"
msgstr ":class:`~django.forms.ImageField`"

msgid ":class:`IntegerField`"
msgstr ":class:`IntegerField`"

msgid ":class:`~django.forms.IntegerField`"
msgstr ":class:`~django.forms.IntegerField`"

msgid "``IPAddressField``"
msgstr "``IPAddressField``"

msgid ":class:`GenericIPAddressField`"
msgstr ":class:`GenericIPAddressField`"

msgid ":class:`~django.forms.GenericIPAddressField`"
msgstr ":class:`~django.forms.GenericIPAddressField`"

msgid ":class:`JSONField`"
msgstr ":class:`JSONField`"

msgid ":class:`~django.forms.JSONField`"
msgstr ":class:`~django.forms.JSONField`"

msgid ":class:`ManyToManyField`"
msgstr ":class:`ManyToManyField`"

msgid ":class:`~django.forms.ModelMultipleChoiceField` (see below)"
msgstr ":class:`~django.forms.ModelMultipleChoiceField` (voir ci-dessous)"

msgid ":class:`PositiveBigIntegerField`"
msgstr ":class:`PositiveBigIntegerField`"

msgid ":class:`PositiveIntegerField`"
msgstr ":class:`PositiveIntegerField`"

msgid ":class:`PositiveSmallIntegerField`"
msgstr ":class:`PositiveSmallIntegerField`"

msgid ":class:`SlugField`"
msgstr ":class:`SlugField`"

msgid ":class:`~django.forms.SlugField`"
msgstr ":class:`~django.forms.SlugField`"

msgid ":class:`SmallAutoField`"
msgstr ":class:`SmallAutoField`"

msgid ":class:`SmallIntegerField`"
msgstr ":class:`SmallIntegerField`"

msgid ":class:`TextField`"
msgstr ":class:`TextField`"

msgid ":class:`~django.forms.CharField` with ``widget=forms.Textarea``"
msgstr ":class:`~django.forms.CharField` avec ``widget=forms.Textarea``"

msgid ":class:`TimeField`"
msgstr ":class:`TimeField`"

msgid ":class:`~django.forms.TimeField`"
msgstr ":class:`~django.forms.TimeField`"

msgid ":class:`URLField`"
msgstr ":class:`URLField`"

msgid ":class:`~django.forms.URLField`"
msgstr ":class:`~django.forms.URLField`"

msgid ":class:`UUIDField`"
msgstr ":class:`UUIDField`"

msgid ":class:`~django.forms.UUIDField`"
msgstr ":class:`~django.forms.UUIDField`"

msgid ""
"As you might expect, the ``ForeignKey`` and ``ManyToManyField`` model field "
"types are special cases:"
msgstr ""
"Comme l'on peut s'y attendre, les champs de modèle de type ``ForeignKey`` et "
"``ManyToManyField`` sont des cas spéciaux :"

msgid ""
"``ForeignKey`` is represented by ``django.forms.ModelChoiceField``, which is "
"a ``ChoiceField`` whose choices are a model ``QuerySet``."
msgstr ""
"``ForeignKey`` est représenté par ``django.forms.ModelChoiceField``, qui est "
"un champ ``ChoiceField``  dont les choix possibles sont définis par le "
"``QuerySet`` d'un modèle."

msgid ""
"``ManyToManyField`` is represented by ``django.forms."
"ModelMultipleChoiceField``, which is a ``MultipleChoiceField`` whose choices "
"are a model ``QuerySet``."
msgstr ""
"``ManyToManyField`` est représenté par un ``django.forms."
"ModelMultipleChoiceField``, qui est un champ ``MultipleChoiceField`` dont "
"les choix possibles sont définis par le ``QuerySet`` d'un modèle."

msgid "In addition, each generated form field has attributes set as follows:"
msgstr ""
"De plus, chaque champ de formulaire généré possède les attributs comme suit :"

msgid ""
"If the model field has ``blank=True``, then ``required`` is set to ``False`` "
"on the form field. Otherwise, ``required=True``."
msgstr ""
"Si le champ de modèle a ``blank=True``, ``required`` est alors défini à "
"``False`` dans le champ de formulaire. Sinon, ``required=True``."

msgid ""
"The form field's ``label`` is set to the ``verbose_name`` of the model "
"field, with the first character capitalized."
msgstr ""
"L'étiquette (``label``) du champ de formulaire est défini à la valeur "
"``verbose_name`` du champ de modèle, avec le premier caractère en majuscules."

msgid ""
"The form field's ``help_text`` is set to the ``help_text`` of the model "
"field."
msgstr ""
"La valeur ``help_text`` du champ de formulaire est définie à la valeur "
"``help_text`` du champ de modèle."

msgid ""
"If the model field has ``choices`` set, then the form field's ``widget`` "
"will be set to ``Select``, with choices coming from the model field's "
"``choices``. The choices will normally include the blank choice which is "
"selected by default. If the field is required, this forces the user to make "
"a selection. The blank choice will not be included if the model field has "
"``blank=False`` and an explicit ``default`` value (the ``default`` value "
"will be initially selected instead)."
msgstr ""
"Si la valeur ``choices`` d'un champ de modèle est définie, le composant "
"( ``widget``) du champ de formulaire sera de type ``Select`` dont les choix "
"proviendront de la valeur ``choices`` du champ de modèle. Ces choix incluent "
"normalement le choix vierge qui est sélectionné par défaut. Si le champ est "
"obligatoire, cela force l'utilisateur à faire un choix. Le choix vierge "
"n'est pas inclus si le champ de modèle a ``blank=False`` ainsi qu'une valeur "
"par défaut (``default``) explicite (c'est la valeur ``default`` qui sera "
"initialement sélectionnée)."

msgid ""
"Finally, note that you can override the form field used for a given model "
"field. See `Overriding the default fields`_ below."
msgstr ""
"Pour terminer, notez que vous pouvez surcharger le champ de formulaire "
"utilisé pour un champ de modèle donné. Consultez `Surcharge des champs par "
"défaut`_ ci-dessous."

msgid "Consider this set of models::"
msgstr "Considérez cet ensemble de modèles ::"

msgid ""
"With these models, the ``ModelForm`` subclasses above would be roughly "
"equivalent to this (the only difference being the ``save()`` method, which "
"we'll discuss in a moment.)::"
msgstr ""
"Avec ces modèles, les sous-classes ``ModelForm`` ci-dessus seraient à peu "
"près équivalentes à ceci (avec comme seule différence la méthode ``save()`` "
"que nous aborderons dans un moment) ::"

msgid "Validation on a ``ModelForm``"
msgstr "Validation d'un ``ModelForm``"

msgid "There are two main steps involved in validating a ``ModelForm``:"
msgstr ""
"La validation d'un ``ModelForm`` se distingue en deux étapes importantes :"

msgid ":doc:`Validating the form </ref/forms/validation>`"
msgstr "La :doc:`validation du formulaire </ref/forms/validation>`"

msgid ":ref:`Validating the model instance <validating-objects>`"
msgstr "La :ref:`validation de l'instance de modèle <validating-objects>`"

msgid ""
"Just like normal form validation, model form validation is triggered "
"implicitly when calling :meth:`~django.forms.Form.is_valid()` or accessing "
"the :attr:`~django.forms.Form.errors` attribute and explicitly when calling "
"``full_clean()``, although you will typically not use the latter method in "
"practice."
msgstr ""
"Comme pour la validation de formulaire normale, la validation des "
"formulaires de modèle est déclenchée implicitement lors de l'appel à :meth:"
"`~django.forms.Form.is_valid()` ou par l'accession à l'attribut :attr:"
"`~django.forms.Form.errors`, ou explicitement en appelant ``full_clean()``, "
"même si en pratique cette dernière méthode est rarement utilisée."

msgid ""
"``Model`` validation (:meth:`Model.full_clean() <django.db.models.Model."
"full_clean()>`) is triggered from within the form validation step, right "
"after the form's ``clean()`` method is called."
msgstr ""
"La validation de ``Model`` (:meth:`Model.full_clean() <django.db.models."
"Model.full_clean()>`) est déclenchée à l'intérieur de l'étape de validation "
"de formulaire, juste après l'appel à la méthode ``clean()`` du formulaire."

msgid ""
"The cleaning process modifies the model instance passed to the ``ModelForm`` "
"constructor in various ways. For instance, any date fields on the model are "
"converted into actual date objects. Failed validation may leave the "
"underlying model instance in an inconsistent state and therefore it's not "
"recommended to reuse it."
msgstr ""
"Le processus de nettoyage modifie l'instance de modèle transmise au "
"constructeur de ``ModelForm`` de plusieurs manières. Par exemple, toute "
"valeur de champ date du modèle est convertie en vrai objet date. Une "
"validation qui échoue peut laisser l'instance de modèle sous-jacente dans un "
"état non cohérent et il n'est donc pas conseillé de la réutiliser."

msgid "Overriding the ``clean()`` method"
msgstr "Surcharge de la méthode ``clean()``"

msgid ""
"You can override the ``clean()`` method on a model form to provide "
"additional validation in the same way you can on a normal form."
msgstr ""
"Vous pouvez surcharger la méthode ``clean()`` d'un formulaire de modèle pour "
"procéder à des validations supplémentaires de la même manière que pour un "
"formulaire normal."

msgid ""
"A model form instance attached to a model object will contain an "
"``instance`` attribute that gives its methods access to that specific model "
"instance."
msgstr ""
"Une instance de formulaire de modèle liée à un objet modèle contient un "
"attribut ``instance`` qui donne à ses méthodes l'accès à cette instance de "
"modèle spécifique."

msgid ""
"The ``ModelForm.clean()`` method sets a flag that makes the :ref:`model "
"validation <validating-objects>` step validate the uniqueness of model "
"fields that are marked as ``unique``, ``unique_together`` or "
"``unique_for_date|month|year``."
msgstr ""
"La méthode ``ModelForm.clean()`` définit un drapeau qui fait que l'étape de :"
"ref:`validation de modèle <validating-objects>` valide l'unicité des champs "
"de modèle marqués comme ``unique``, ``unique_together`` ou ``unique_for_date|"
"month|year``."

msgid ""
"If you would like to override the ``clean()`` method and maintain this "
"validation, you must call the parent class's ``clean()`` method."
msgstr ""
"Si vous souhaitez surcharger la méthode ``clean()`` et maintenir cette "
"validation, vous devez appeler la méthode ``clean()`` de la classe parente."

msgid "Interaction with model validation"
msgstr "Interactions avec la validation des modèles"

msgid ""
"As part of the validation process, ``ModelForm`` will call the ``clean()`` "
"method of each field on your model that has a corresponding field on your "
"form. If you have excluded any model fields, validation will not be run on "
"those fields. See the :doc:`form validation </ref/forms/validation>` "
"documentation for more on how field cleaning and validation work."
msgstr ""
"Dans le cadre du processus de validation, ``ModelForm`` appelle la méthode "
"``clean()`` de chaque champ du modèle possédant un champ de formulaire "
"correspondant. Si vous avez exclu des champs de modèle, la validation ne "
"sera pas effectuée pour ces champs. Consultez la documentation de la :doc:"
"`validation des formulaires </ref/forms/validation>` pour en savoir plus sur "
"le fonctionnement du nettoyage et de la validation des champs."

msgid ""
"The model's ``clean()`` method will be called before any uniqueness checks "
"are made. See :ref:`Validating objects <validating-objects>` for more "
"information on the model's ``clean()`` hook."
msgstr ""
"La méthode ``clean()`` du modèle est appelée avant les contrôles d'unicité. "
"Consultez la :ref:`validation des objets <validating-objects>` pour plus "
"d'informations sur la méthode ``clean()`` des modèles."

msgid "Considerations regarding model's ``error_messages``"
msgstr "Considérations sur les messages d'erreur des modèles"

msgid ""
"Error messages defined at the :attr:`form field <django.forms.Field."
"error_messages>` level or at the :ref:`form Meta <modelforms-overriding-"
"default-fields>` level always take precedence over the error messages "
"defined at the :attr:`model field <django.db.models.Field.error_messages>` "
"level."
msgstr ""
"Les messages d'erreur définis au niveau des :attr:`champs de formulaire "
"<django.forms.Field.error_messages>` ou au niveau de la :ref:`classe Meta de "
"formulaire <modelforms-overriding-default-fields>` ont toujours la priorité "
"sur les messages d'erreur définis au niveau des :attr:`champs de modèle "
"<django.db.models.Field.error_messages>`."

msgid ""
"Error messages  defined on :attr:`model fields <django.db.models.Field."
"error_messages>` are only used when the ``ValidationError`` is raised during "
"the :ref:`model validation <validating-objects>` step and no corresponding "
"error messages are defined at the form level."
msgstr ""
"Les messages d'erreur définis au niveau des :attr:`champs de modèle <django."
"db.models.Field.error_messages>` ne sont utilisés que lorsqu'une erreur "
"``ValidationError`` est générée à l'étape de :ref:`validation du modèle  "
"<validating-objects>` et qu'aucun message d'erreur correspondant n'est "
"défini au niveau du formulaire."

msgid ""
"You can override the error messages from ``NON_FIELD_ERRORS`` raised by "
"model validation by adding the :data:`~django.core.exceptions."
"NON_FIELD_ERRORS` key to the ``error_messages`` dictionary of the "
"``ModelForm``’s inner ``Meta`` class::"
msgstr ""
"Vous pouvez surcharger les messages d'erreur issus de ``NON_FIELD_ERRORS`` "
"et générés par la validation des modèles en ajoutant la clé :data:`~django."
"core.exceptions.NON_FIELD_ERRORS` au dictionnaire ``error_messages`` de la "
"classe ``Meta`` interne des classes ``ModelForm``::"

msgid "The ``save()`` method"
msgstr "La méthode ``save()``"

msgid ""
"Every ``ModelForm`` also has a ``save()`` method. This method creates and "
"saves a database object from the data bound to the form. A subclass of "
"``ModelForm`` can accept an existing model instance as the keyword argument "
"``instance``; if this is supplied, ``save()`` will update that instance. If "
"it's not supplied, ``save()`` will create a new instance of the specified "
"model:"
msgstr ""
"Chaque ``ModelForm`` possède aussi une méthode ``save()``. Celle-ci crée et "
"enregistre un objet en base de données à partir des données saisies dans le "
"formulaire. Une sous-classe de ``ModelForm`` peut accepter une instance "
"existante de modèle par le paramètre nommé ``instance``. Si celui-ci est "
"présent, ``save()`` met à jour cette instance. Dans le cas contraire, "
"``save()`` crée une nouvelle instance du modèle concerné :"

msgid ""
"Note that if the form :ref:`hasn't been validated <validation-on-"
"modelform>`, calling ``save()`` will do so by checking ``form.errors``. A "
"``ValueError`` will be raised if the data in the form doesn't validate -- i."
"e., if ``form.errors`` evaluates to ``True``."
msgstr ""
"Notez que si le formulaire :ref:`n'a pas été validé <validation-on-"
"modelform>`, l'appel à ``save()`` s'en occupera en contrôlant ``form."
"errors``. Une erreur ``ValueError`` est générée si les données du formulaire "
"ne sont pas valides, par exemple si ``form.errors`` est évalué à ``True``."

msgid ""
"If an optional field doesn't appear in the form's data, the resulting model "
"instance uses the model field :attr:`~django.db.models.Field.default`, if "
"there is one, for that field. This behavior doesn't apply to fields that "
"use :class:`~django.forms.CheckboxInput`, :class:`~django.forms."
"CheckboxSelectMultiple`, or :class:`~django.forms.SelectMultiple` (or any "
"custom widget whose :meth:`~django.forms.Widget.value_omitted_from_data` "
"method always returns ``False``) since an unchecked checkbox and unselected "
"``<select multiple>`` don't appear in the data of an HTML form submission. "
"Use a custom form field or widget if you're designing an API and want the "
"default fallback behavior for a field that uses one of these widgets."
msgstr ""
"Si un champ facultatif ne figure pas dans les données de formulaire, "
"l'instance de modèle résultante utilise comme valeur de champ le contenu :"
"attr:`~django.db.models.Field.default` du champ de modèle, si elle est "
"définie. Ce comportement ne s'applique pas aux champs qui utilisent :class:"
"`~django.forms.CheckboxInput`, :class:`~django.forms.CheckboxSelectMultiple` "
"ou :class:`~django.forms.SelectMultiple` (ou tout autre composant "
"personnalisé dont la méthode  :meth:`~django.forms.Widget."
"value_omitted_from_data` renvoie toujours ``False``) dans la mesure où une "
"case à cocher non cochée ou des ``<select multiple>`` non sélectionnés ne "
"sont pas inclus dans l'envoi des données d'un formulaire HTML. Utilisez un "
"champ ou un composant de formulaire personnalisé si vous concevez une API et "
"que vous souhaitez obtenir le comportement de valeur par défaut de base pour "
"un champ qui utilise l'un de ces composants."

msgid ""
"This ``save()`` method accepts an optional ``commit`` keyword argument, "
"which accepts either ``True`` or ``False``. If you call ``save()`` with "
"``commit=False``, then it will return an object that hasn't yet been saved "
"to the database. In this case, it's up to you to call ``save()`` on the "
"resulting model instance. This is useful if you want to do custom processing "
"on the object before saving it, or if you want to use one of the "
"specialized :ref:`model saving options <ref-models-force-insert>`. "
"``commit`` is ``True`` by default."
msgstr ""
"Cette méthode ``save()`` accepte un paramètre nommé facultatif ``commit``, "
"qui accepte les valeurs ``True`` ou ``False``. Si vous appelez ``save()`` "
"avec ``commit=False``, elle renvoie un objet qui n'aura pas encore été "
"enregistré dans la base de données. Dans ce cas, c'est à vous d'appeler "
"``save()`` sur l'instance de modèle obtenue. C'est utile lorsque vous "
"souhaitez effectuer un traitement particulier sur l'objet avant qu'il soit "
"enregistré, ou si vous voulez utiliser l'une des :ref:`options "
"d'enregistrement de modèle <ref-models-force-insert>` spécialisées. "
"``commit`` vaut ``True`` par défaut."

msgid ""
"Another side effect of using ``commit=False`` is seen when your model has a "
"many-to-many relation with another model. If your model has a many-to-many "
"relation and you specify ``commit=False`` when you save a form, Django "
"cannot immediately save the form data for the many-to-many relation. This is "
"because it isn't possible to save many-to-many data for an instance until "
"the instance exists in the database."
msgstr ""
"Un autre effet de bord de l'utilisation de ``commit=False`` se voit lorsque "
"le modèle possède une relation plusieurs-à-plusieurs vers un autre modèle. "
"Dans ce cas, Django ne peut pas enregistrer immédiatement les données du "
"formulaire de la relation plusieurs-à-plusieurs. La raison est qu'il n'est "
"pas possible d'enregistrer des données plusieurs-à-plusieurs propres à une "
"instance si celle-ci n'existe pas encore dans la base de données."

msgid ""
"To work around this problem, every time you save a form using "
"``commit=False``, Django adds a ``save_m2m()`` method to your ``ModelForm`` "
"subclass. After you've manually saved the instance produced by the form, you "
"can invoke ``save_m2m()`` to save the many-to-many form data. For example:"
msgstr ""
"Pour contourner ce problème, chaque fois que vous enregistrez un formulaire "
"avec ``commit=False``, Django ajoute une méthode ``save_m2m()`` à la sous-"
"classe de votre ``ModelForm``. Après avoir manuellement enregistré "
"l'instance dérivée du formulaire, vous pouvez appeler ``save_m2m()`` pour "
"enregistrer les données de formulaire de type plusieurs-à-plusieurs. Par "
"exemple :"

msgid ""
"Calling ``save_m2m()`` is only required if you use ``save(commit=False)``. "
"When you use a ``save()`` on a form, all data -- including many-to-many data "
"-- is saved without the need for any additional method calls.  For example:"
msgstr ""
"Il n'est utile d'appeler ``save_m2m()`` que si vous utilisez "
"``save(commit=False)``. Lorsque vous appelez la méthode ``save()`` d'un "
"formulaire, toutes les données, y compris les données plusieurs-à-plusieurs, "
"sont enregistrées sans avoir besoin de faire quoi que ce soit d'autre. Par "
"exemple :"

msgid ""
"Other than the ``save()`` and ``save_m2m()`` methods, a ``ModelForm`` works "
"exactly the same way as any other ``forms`` form. For example, the "
"``is_valid()`` method is used to check for validity, the ``is_multipart()`` "
"method is used to determine whether a form requires multipart file upload "
"(and hence whether ``request.FILES`` must be passed to the form), etc. See :"
"ref:`binding-uploaded-files` for more information."
msgstr ""
"À part les méthodes ``save()`` et ``save_m2m()``, un ``ModelForm`` "
"fonctionne exactement de la même manière que tout autre formulaire "
"``forms``. Par exemple, la méthode ``is_valid()`` est utilisée pour vérifier "
"la validité, la méthode ``is_multipart()`` est utilisée pour déterminer si "
"un formulaire nécessite un envoi de fichier ``multipart`` (et donc que "
"``request.FILES`` doit être transmis au formulaire), etc. Voir :ref:`binding-"
"uploaded-files` pour plus d'informations."

msgid "Selecting the fields to use"
msgstr "Sélection des champs à utiliser"

msgid ""
"It is strongly recommended that you explicitly set all fields that should be "
"edited in the form using the ``fields`` attribute. Failure to do so can "
"easily lead to security problems when a form unexpectedly allows a user to "
"set certain fields, especially when new fields are added to a model. "
"Depending on how the form is rendered, the problem may not even be visible "
"on the web page."
msgstr ""
"Il est fortement recommandé de définir explicitement tous les champs qui "
"doivent être présents dans le formulaire en utilisant l'attribut ``fields``. "
"Si vous ne le faites pas, cela peut facilement devenir source de problèmes "
"de sécurité lorsqu'un formulaire permet à un utilisateur de définir certains "
"champs de manière non prévue, particulièrement lorsqu'on ajoute de nouveaux "
"champs à un modèle. En fonction de la façon dont le formulaire est affiché, "
"il est même possible que le problème ne soit pas visible sur la page Web."

msgid ""
"The alternative approach would be to include all fields automatically, or "
"remove only some. This fundamental approach is known to be much less secure "
"and has led to serious exploits on major websites (e.g. `GitHub <https://"
"github.blog/2012-03-04-public-key-security-vulnerability-and-mitigation/>`_)."
msgstr ""
"Une autre approche est d'inclure automatiquement tous les champs ou d'en "
"exclure certains. Mais à la base, cette approche est notoirement moins "
"sécurisée et a déjà abouti à des failles sévères sur des sites Web célèbres "
"(par ex. `GitHub `_)."

msgid ""
"There are, however, two shortcuts available for cases where you can "
"guarantee these security concerns do not apply to you:"
msgstr ""
"Il existe toutefois deux raccourcis disponibles pour les cas où vous pouvez "
"garantir que ces questions de sécurité ne s'appliquent pas à votre "
"situation :"

msgid ""
"Set the ``fields`` attribute to the special value ``'__all__'`` to indicate "
"that all fields in the model should be used. For example::"
msgstr ""
"Définir l'attribut ``fields`` à la valeur spéciale ``'__all__'`` pour "
"indiquer que tous les champs du modèle doivent être utilisés. Par exemple ::"

msgid ""
"Set the ``exclude`` attribute of the ``ModelForm``’s inner ``Meta`` class to "
"a list of fields to be excluded from the form."
msgstr ""
"Définir l'attribut ``exclude`` de la classe interne ``Meta`` du "
"``ModelForm`` à une liste de champs à exclure du formulaire."

msgid ""
"Since the ``Author`` model has the 3 fields ``name``, ``title`` and "
"``birth_date``, this will result in the fields ``name`` and ``birth_date`` "
"being present on the form."
msgstr ""
"Comme le modèle ``Author`` possède les trois champs ``name``, ``title`` et "
"``birth_date``, nous nous retrouvons avec les champs ``name`` et "
"``birth_date`` affichés dans le formulaire."

msgid ""
"If either of these are used, the order the fields appear in the form will be "
"the order the fields are defined in the model, with ``ManyToManyField`` "
"instances appearing last."
msgstr ""
"Si l'une de ces techniques est employée, l'ordre d'apparition des champs "
"dans le formulaire respecte l'ordre de définition des champs du modèle, avec "
"les instances ``ManyToManyField`` apparaissant en dernier."

msgid ""
"In addition, Django applies the following rule: if you set "
"``editable=False`` on the model field, *any* form created from the model via "
"``ModelForm`` will not include that field."
msgstr ""
"De plus, Django applique la règle suivante : si vous définissez "
"``editable=False`` au niveau du champ de modèle, *tout* formulaire créé à "
"partir du modèle via ``ModelForm`` ne contiendra pas ce champ."

msgid ""
"Any fields not included in a form by the above logic will not be set by the "
"form's ``save()`` method. Also, if you manually add the excluded fields back "
"to the form, they will not be initialized from the model instance."
msgstr ""
"Tout champ non inclus dans un formulaire par la logique ci-dessus ne sera "
"pas touché par la méthode ``save()`` du formulaire. De même, si vous ajoutez "
"manuellement dans un formulaire un champ initialement exclu, ce champ ne "
"sera pas initialisé avec les données de l'instance de modèle. "

msgid ""
"Django will prevent any attempt to save an incomplete model, so if the model "
"does not allow the missing fields to be empty, and does not provide a "
"default value for the missing fields, any attempt to ``save()`` a "
"``ModelForm`` with missing fields will fail.  To avoid this failure, you "
"must instantiate your model with initial values for the missing, but "
"required fields::"
msgstr ""
"Django empêche toute tentative d'enregistrer un modèle incomplet. Si le "
"modèle n'autorise pas les champs manquants à être vides et que ces champs "
"n'ont pas de valeur par défaut, tout tentative d'appeler ``save()`` sur un "
"``ModelForm`` avec des champs manquants échouera. Pour éviter ce problème, "
"vous devez créer une instance de modèle comportant des valeurs initiales "
"pour les champs obligatoires manquants ::"

msgid ""
"Alternatively, you can use ``save(commit=False)`` and manually set any extra "
"required fields::"
msgstr ""
"Une variante est d'utiliser ``save(commit=False)`` et de définir "
"manuellement les champs obligatoires supplémentaires ::"

msgid ""
"See the `section on saving forms`_ for more details on using "
"``save(commit=False)``."
msgstr ""
"Consultez la `section sur l'enregistrement des formulaires`_ pour plus de "
"détails sur l'utilisation de ``save(commit=False)``."

msgid "Overriding the default fields"
msgstr "Surcharge des champs par défaut"

msgid ""
"The default field types, as described in the `Field types`_ table above, are "
"sensible defaults. If you have a ``DateField`` in your model, chances are "
"you'd want that to be represented as a ``DateField`` in your form. But "
"``ModelForm`` gives you the flexibility of changing the form field for a "
"given model."
msgstr ""
"Les types de champs par défaut, tels que décrits dans le tableau ci-dessus "
"`Types de champs`_, sont des choix raisonnables. Si votre modèle contient un "
"champ ``DateField``, il est probable que vous vouliez représenter ce champ "
"dans un formulaire par un champ de formulaire ``DateField``. Mais "
"``ModelForm`` apporte la souplesse de pouvoir modifier le champ de "
"formulaire pour un modèle défini."

msgid ""
"To specify a custom widget for a field, use the ``widgets`` attribute of the "
"inner ``Meta`` class. This should be a dictionary mapping field names to "
"widget classes or instances."
msgstr ""
"Pour indiquer un composant personnalisé pour un champ, utilisez l'attribut "
"``widgets`` de la classe ``Meta`` interne. Ce doit être un dictionnaire "
"faisant correspondre les noms de champs à des classes ou des instances de "
"composants."

msgid ""
"For example, if you want the ``CharField`` for the ``name`` attribute of "
"``Author`` to be represented by a ``<textarea>`` instead of its default "
"``<input type=\"text\">``, you can override the field's widget::"
msgstr ""
"Par exemple, si vous voulez que le champ ``CharField`` de l'attribut "
"``name`` du modèle ``Author`` soit représenté par un composant "
"``<textarea>`` au lieu du composant ``<input type=\"text\">`` par défaut, "
"vous pouvez surcharger le composant du champ ::"

msgid ""
"The ``widgets`` dictionary accepts either widget instances (e.g., "
"``Textarea(...)``) or classes (e.g., ``Textarea``). Note that the "
"``widgets`` dictionary is ignored for a model field with a non-empty "
"``choices`` attribute. In this case, you must override the form field to use "
"a different widget."
msgstr ""
"Le dictionnaire ``widgets`` accepte soit des instances de composants (par "
"ex.  ``Textarea(...)``) ou des classes (par ex. ``Textarea``). Notez que le "
"dictionnaire ``widgets`` est ignoré pour les champs de modèles ayant un "
"attribut ``choices`` non vide. Dans ce cas, vous devez surcharger le champ "
"de formulaire pour indiquer un composant ``widget`` différent."

msgid ""
"Similarly, you can specify the ``labels``, ``help_texts`` and "
"``error_messages`` attributes of the inner ``Meta`` class if you want to "
"further customize a field."
msgstr ""
"De la même façon, vous pouvez indiquer les attributs ``labels``, "
"``help_texts`` et ``error_messages`` de la classe interne ``Meta`` si vous "
"avez besoin de personnaliser davantage un champ."

msgid ""
"For example if you wanted to customize the wording of all user facing "
"strings for the ``name`` field::"
msgstr ""
"Par exemple, si vous souhaitez personnaliser la formulation de tous les "
"textes visibles pour l'utilisateur concernant le champ ``name``::"

msgid ""
"You can also specify ``field_classes`` or ``formfield_callback`` to "
"customize the type of fields instantiated by the form."
msgstr ""
"Vous pouvez aussi indiquer ``field_classes`` ou ``formfield_callback`` pour "
"personnaliser le type des champs créés par le formulaire."

msgid ""
"For example, if you wanted to use ``MySlugFormField`` for the ``slug`` "
"field, you could do the following::"
msgstr ""
"Par exemple, si vous souhaitez utiliser ``MySlugFormField`` pour le champ "
"``slug``, vous pourriez procéder ainsi ::"

msgid "or::"
msgstr "ou ::"

msgid ""
"Finally, if you want complete control over of a field -- including its type, "
"validators, required, etc. -- you can do this by declaratively specifying "
"fields like you would in a regular ``Form``."
msgstr ""
"Finalement, si vous souhaitez contrôler complètement un champ, y compris son "
"type, ses validateurs, son caractère obligatoire, etc., vous pouvez le faire "
"en définissant les champs de manière déclarative comme on le ferait pour un "
"formulaire ``Form`` normal."

msgid ""
"If you want to specify a field's validators, you can do so by defining the "
"field declaratively and setting its ``validators`` parameter::"
msgstr ""
"Si vous souhaitez indiquer les validateurs d'un champ, vous pouvez le faire "
"en définissant le champ de manière déclarative et en indiquant le paramètre "
"``validators``::"

msgid ""
"When you explicitly instantiate a form field like this, it is important to "
"understand how ``ModelForm`` and regular ``Form`` are related."
msgstr ""
"Lorsque vous créez une instance de formulaire explicitement comme ceci, il "
"est important de comprendre comment les formulaires de type ``ModelForm`` et "
"``Form`` sont liés."

msgid ""
"``ModelForm`` is a regular ``Form`` which can automatically generate certain "
"fields. The fields that are automatically generated depend on the content of "
"the ``Meta`` class and on which fields have already been defined "
"declaratively. Basically, ``ModelForm`` will **only** generate fields that "
"are **missing** from the form, or in other words, fields that weren't "
"defined declaratively."
msgstr ""
"``ModelForm`` est comme un formulaire ``Form`` normal qui peut générer "
"automatiquement certains champs. Les champs automatiquement générés "
"dépendent du contenu de la classe ``Meta`` et des champs éventuellement "
"définis de manière déclarative. Au fond, ``ModelForm`` va **uniquement** "
"générer les champs qui sont **absents** du formulaire, ou en d'autres "
"termes, les champs qui n'ont pas été définis déclarativement."

msgid ""
"Fields defined declaratively are left as-is, therefore any customizations "
"made to ``Meta`` attributes such as ``widgets``, ``labels``, ``help_texts``, "
"or ``error_messages`` are ignored; these only apply to fields that are "
"generated automatically."
msgstr ""
"Les champs définis déclarativement sont laissés tels quels, ce qui fait que "
"toute personnalisation effectuée au niveau des attributs de ``Meta``, tels "
"que ``widgets``, ``labels``, ``help_texts`` ou ``error_messages`` est "
"ignorée ; ces derniers ne s'appliquent qu'aux champs automatiquement générés."

msgid ""
"Similarly, fields defined declaratively do not draw their attributes like "
"``max_length`` or ``required`` from the corresponding model. If you want to "
"maintain the behavior specified in the model, you must set the relevant "
"arguments explicitly when declaring the form field."
msgstr ""
"De même, les champs définis déclarativement ne dérivent pas leurs attributs "
"comme ``max_length`` ou ``required`` du modèle correspondant. Si vous voulez "
"conserver le comportement défini au niveau du modèle, vous devez définir les "
"paramètres adéquats explicitement dans la déclaration du champ de formulaire."

msgid "For example, if the ``Article`` model looks like this::"
msgstr "Par exemple, si le modèle ``Article`` ressemble à ceci ::"

msgid ""
"and you want to do some custom validation for ``headline``, while keeping "
"the ``blank`` and ``help_text`` values as specified, you might define "
"``ArticleForm`` like this::"
msgstr ""
"et que vous vouliez effectuer une validation particulière pour ``headline`` "
"tout en conservant les valeurs ``blank`` et ``help_text`` d'origine, voici "
"comment vous pourriez définir ``ArticleForm``::"

msgid ""
"You must ensure that the type of the form field can be used to set the "
"contents of the corresponding model field. When they are not compatible, you "
"will get a ``ValueError`` as no implicit conversion takes place."
msgstr ""
"Vous devez vous assurer que le type du champ de formulaire peut être utilisé "
"pour définir le contenu du champ de modèle correspondant. S'ils ne sont pas "
"compatibles, vous obtiendrez une erreur ``ValueError`` car aucune conversion "
"implicite n'est effectuée."

msgid ""
"See the :doc:`form field documentation </ref/forms/fields>` for more "
"information on fields and their arguments."
msgstr ""
"Consultez la :doc:`documentation des champs de formulaire </ref/forms/"
"fields>` pour plus d'informations sur les champs et leurs paramètres."

msgid "Enabling localization of fields"
msgstr "Activation de la régionalisation des champs"

msgid ""
"By default, the fields in a ``ModelForm`` will not localize their data. To "
"enable localization for fields, you can use the ``localized_fields`` "
"attribute on the ``Meta`` class."
msgstr ""
"Par défaut, les champs d'un ``ModelForm`` ne régionalisent pas leurs "
"données. Pour activer cette régionalisation, vous pouvez utiliser l'attribut "
"``localized_fields`` de la classe ``Meta``."

msgid ""
"If ``localized_fields`` is set to the special value ``'__all__'``, all "
"fields will be localized."
msgstr ""
"Si ``localized_fields`` est défini à la valeur spéciale ``'__all__'``, les "
"valeurs de tous les champs seront régionalisées."

msgid "Form inheritance"
msgstr "Héritage de formulaire"

msgid ""
"As with basic forms, you can extend and reuse ``ModelForms`` by inheriting "
"them. This is useful if you need to declare extra fields or extra methods on "
"a parent class for use in a number of forms derived from models. For "
"example, using the previous ``ArticleForm`` class:"
msgstr ""
"Comme pour les formulaires de base, il est possible d'étendre et de "
"réutiliser les ``ModelForms`` par l'héritage. C'est utile lorsque vous devez "
"déclarer des champs ou des méthodes supplémentaires dans une sous-classe "
"pour les utiliser dans des formulaires dérivés de modèles. Par exemple, en "
"utilisant la classe ``ArticleForm`` présentée précédemment :"

msgid ""
"This creates a form that behaves identically to ``ArticleForm``, except "
"there's some extra validation and cleaning for the ``pub_date`` field."
msgstr ""
"Cela crée un formulaire qui se comporte comme ``ArticleForm``, à l'exception "
"de certaines validations et nettoyages supplémentaires pour le champ "
"``pub_date``."

msgid ""
"You can also subclass the parent's ``Meta`` inner class if you want to "
"change the ``Meta.fields`` or ``Meta.exclude`` lists:"
msgstr ""
"Il est aussi possible d'hériter de la classe ``Meta`` interne du parent si "
"vous avez besoin de modifier les listes ``Meta.fields`` ou ``Meta.exclude``:"

msgid ""
"This adds the extra method from the ``EnhancedArticleForm`` and modifies the "
"original ``ArticleForm.Meta`` to remove one field."
msgstr ""
"Nous conservons ici la méthode supplémentaire de ``EnhancedArticleForm`` et "
"enlevons un champ de la classe ``ArticleForm.Meta`` originale."

msgid "There are a couple of things to note, however."
msgstr "Il faut cependant relever certains points."

msgid ""
"Normal Python name resolution rules apply. If you have multiple base classes "
"that declare a ``Meta`` inner class, only the first one will be used. This "
"means the child's ``Meta``, if it exists, otherwise the ``Meta`` of the "
"first parent, etc."
msgstr ""
"Les règles Python habituelles de la résolution de noms s'appliquent. Si vous "
"avez plusieurs classes de base déclarant une classe interne ``Meta``, seule "
"la première sera considérée. C'est -à-dire la classe ``Meta`` de la sous-"
"classe, s'il y en a une, sinon celle du premier parent, etc. "

msgid ""
"It's possible to inherit from both ``Form`` and ``ModelForm`` "
"simultaneously, however, you must ensure that ``ModelForm`` appears first in "
"the MRO. This is because these classes rely on different metaclasses and a "
"class can only have one metaclass."
msgstr ""
"Il est possible d'hériter à la fois de ``Form`` et de ``ModelForm``. "
"Cependant, il faut s'assurer que ``ModelForm`` apparaisse en premier dans la "
"chaîne MRO. Ceci parce que ces classes se basent sur des métaclasses "
"différentes et qu'une classe ne peut posséder qu'une seule métaclasse."

msgid ""
"It's possible to declaratively remove a ``Field`` inherited from a parent "
"class by setting the name to be ``None`` on the subclass."
msgstr ""
"Il est possible d'enlever de manière déclarative un champ ``Field`` hérité "
"d'une classe parente en définissant son nom à ``None`` dans la sous-classe."

msgid ""
"You can only use this technique to opt out from a field defined "
"declaratively by a parent class; it won't prevent the ``ModelForm`` "
"metaclass from generating a default field. To opt-out from default fields, "
"see :ref:`modelforms-selecting-fields`."
msgstr ""
"Cette technique n'est utilisable que pour enlever des champs qui ont eux-"
"mêmes été définis de manière déclarative dans la classe parente ; cela "
"n'empêchera pas la métaclasse de ``ModelForm`` de générer un champ par "
"défaut. Pour enlever des champs par défaut, voir :ref:`modelforms-selecting-"
"fields`."

msgid "Providing initial values"
msgstr "Indication de valeurs initiales"

msgid ""
"As with regular forms, it's possible to specify initial data for forms by "
"specifying an ``initial`` parameter when instantiating the form. Initial "
"values provided this way will override both initial values from the form "
"field and values from an attached model instance. For example:"
msgstr ""
"Comme avec les formulaires normaux, il est possible de spécifier les données "
"initiales pour les formulaires en spécifiant un paramètre ``initial`` lors "
"de l'instanciation du formulaire. Les valeurs initiales prévues de cette "
"façon remplaceront la valeur initiale définie pour le champ et celle définie "
"pour le modèle lié. Par exemple :"

msgid "ModelForm factory function"
msgstr "Fonction de fabrique de ModelForm"

msgid ""
"You can create forms from a given model using the standalone function :func:"
"`~django.forms.models.modelform_factory`, instead of using a class "
"definition. This may be more convenient if you do not have many "
"customizations to make:"
msgstr ""
"Vous pouvez créer des formulaires à partir d'un modèle donné en utilisant la "
"fonction autonome :func:`~django.forms.models.modelform_factory` au lieu de "
"passer par une définition de classe. Cela peut être plus pratique si vous "
"n'avez pas à effectuer trop d'adaptations :"

msgid ""
"This can also be used to make modifications to existing forms, for example "
"by specifying the widgets to be used for a given field:"
msgstr ""
"Cela peut également être utilisé pour faire des modifications à des "
"formulaires existants, par exemple pour indiquer les composants à utiliser "
"pour un certain champ :"

msgid ""
"The fields to include can be specified using the ``fields`` and ``exclude`` "
"keyword arguments, or the corresponding attributes on the ``ModelForm`` "
"inner ``Meta`` class. Please see the ``ModelForm`` :ref:`modelforms-"
"selecting-fields` documentation."
msgstr ""
"Les champs à inclure peuvent être spécifiés en utilisant les paramètres "
"nommés ``fields`` et ``exclude``, ou les attributs correspondants de la "
"classe interne ``Meta`` du ``ModelForm``. Veuillez consulter la "
"documentation :ref:`modelforms-selecting-fields` des ``ModelForm``."

msgid "... or enable localization for specific fields:"
msgstr "… ou pour activer la régionalisation de certains champs :"

msgid "Model formsets"
msgstr "Formulaires groupés de modèles"

msgid ""
"Like :doc:`regular formsets </topics/forms/formsets>`, Django provides a "
"couple of enhanced formset classes to make working with Django models more "
"convenient. Let's reuse the ``Author`` model from above:"
msgstr ""
"Comme pour les :doc:`formulaires groupés normaux </topics/forms/formsets>`, "
"Django fournit quelques classes de formulaires groupés améliorées qui "
"facilitent le travail avec les modèles Django. Réutilisons le modèle "
"``Author`` défini plus haut :"

msgid ""
"Using ``fields`` restricts the formset to use only the given fields. "
"Alternatively, you can take an \"opt-out\" approach, specifying which fields "
"to exclude:"
msgstr ""
"L'utilisation de ``fields`` indique aux formulaires groupés  les champs "
"qu'ils doivent utiliser. Il est aussi possible d'utiliser une approche par "
"exclusion, indiquant quels sont les champs à exclure :"

msgid ""
"This will create a formset that is capable of working with the data "
"associated with the ``Author`` model. It works just like a regular formset:"
msgstr ""
"Cela crée un jeu de formulaires groupés qui sont capables de gérer les "
"données associées au modèle ``Author``. Le fonctionnement est le même que "
"pour des formulaires groupés normaux :"

msgid ""
":func:`~django.forms.models.modelformset_factory` uses :func:`~django.forms."
"formsets.formset_factory` to generate formsets. This means that a model "
"formset is an extension of a basic formset that knows how to interact with a "
"particular model."
msgstr ""
":func:`~django.forms.models.modelformset_factory` utilise :func:`~django."
"forms.formsets.formset_factory` pour générer les formulaires groupés. Cela "
"signifie qu'un formulaire groupé de modèle est une extension des formulaires "
"groupés de base sachant interagir avec un modèle particulier."

msgid ""
"When using :ref:`multi-table inheritance <multi-table-inheritance>`, forms "
"generated by a formset factory will contain a parent link field (by default "
"``<parent_model_name>_ptr``) instead of an ``id`` field."
msgstr ""
"Dans les contextes d’:ref:`héritages multi-tables <multi-table-"
"inheritance>`, les formulaires générés par une fabrique de jeux de "
"formulaires contiennent un champ de lien parent (par défaut "
"``<nom_modèle_parent>_ptr``) au lieu d'un champ ``id``."

msgid "Changing the queryset"
msgstr "Modification du jeu de requête"

msgid ""
"By default, when you create a formset from a model, the formset will use a "
"queryset that includes all objects in the model (e.g., ``Author.objects."
"all()``). You can override this behavior by using the ``queryset`` argument:"
msgstr ""
"Par défaut, lorsque vous créez des formulaires groupés à partir d'un modèle, "
"ceux-ci utilisent un jeu de requête qui contient tous les objets du modèle "
"(par ex. ``Author.objects.all()``). Vous pouvez surcharger ce comportement "
"en utilisant le paramètre ``queryset``:"

msgid ""
"Alternatively, you can create a subclass that sets ``self.queryset`` in "
"``__init__``::"
msgstr ""
"Comme variante, vous pouvez créer une sous-classe définissant ``self."
"queryset`` dans sa méthode ``__init__``::"

msgid "Then, pass your ``BaseAuthorFormSet`` class to the factory function:"
msgstr ""
"Puis, passez votre classe ``BaseAuthorFormSet`` à la fonction de fabrique :"

msgid ""
"If you want to return a formset that doesn't include *any* preexisting "
"instances of the model, you can specify an empty QuerySet:"
msgstr ""
"Si vous souhaitez renvoyer des formulaires groupés qui ne contiennent "
"*aucune* instance préexistante du modèle, vous pouvez indiquer un objet "
"``QuerySet`` vide :"

msgid "Changing the form"
msgstr "Modification du formulaire"

msgid ""
"By default, when you use ``modelformset_factory``, a model form will be "
"created using :func:`~django.forms.models.modelform_factory`. Often, it can "
"be useful to specify a custom model form. For example, you can create a "
"custom model form that has custom validation::"
msgstr ""
"Par défaut, lorsque vous utilisez ``modelformset_factory``, un formulaire de "
"modèle est créé par :func:`~django.forms.models.modelform_factory`. Il peut "
"souvent être utile d'indiquer un formulaire de modèle personnalisé. Par "
"exemple, vous pouvez créer un formulaire de modèle personnalisé comportant "
"une validation personnalisée ::"

msgid "Then, pass your model form to the factory function::"
msgstr "Puis, indiquez ce formulaire de modèle à la fonction de fabrication ::"

msgid ""
"It is not always necessary to define a custom model form. The "
"``modelformset_factory`` function has several arguments which are passed "
"through to ``modelform_factory``, which are described below."
msgstr ""
"Il n'est pas toujours nécessaire de définir un formulaire de modèle "
"personnalisé. La fonction ``modelformset_factory`` accepte plusieurs "
"paramètres qui sont eux-mêmes transmis à ``modelform_factory`` et qui sont "
"documentés plus bas."

msgid "Specifying widgets to use in the form with ``widgets``"
msgstr "Indication des composants de formulaire à utiliser avec ``widgets``"

msgid ""
"Using the ``widgets`` parameter, you can specify a dictionary of values to "
"customize the ``ModelForm``’s widget class for a particular field. This "
"works the same way as the ``widgets`` dictionary on the inner ``Meta`` class "
"of a ``ModelForm`` works:"
msgstr ""
"En exploitant le paramètre ``widgets``, vous pouvez indiquer un dictionnaire "
"de valeurs afin de personnaliser la classe de composant d'un champ "
"particulier du ``ModelForm``. C'est le même principe de fonctionnement que "
"le dictionnaire ``widgets`` de la classe ``Meta`` interne d'un ``ModelForm``:"

msgid "Enabling localization for fields with ``localized_fields``"
msgstr "Activation de la régionalisation des champs avec ``localized_fields``"

msgid ""
"Using the ``localized_fields`` parameter, you can enable localization for "
"fields in the form."
msgstr ""
"À l'aide du paramètre ``localized_fields``, vous pouvez activer la "
"régionalisation des champs du formulaire."

msgid ""
"As with regular formsets, it's possible to :ref:`specify initial data "
"<formsets-initial-data>` for forms in the formset by specifying an "
"``initial`` parameter when instantiating the model formset class returned "
"by :func:`~django.forms.models.modelformset_factory`. However, with model "
"formsets, the initial values only apply to extra forms, those that aren't "
"attached to an existing model instance. If the length of ``initial`` exceeds "
"the number of extra forms, the excess initial data is ignored. If the extra "
"forms with initial data aren't changed by the user, they won't be validated "
"or saved."
msgstr ""
"Comme pour les formulaires groupés normaux, il est possible :ref:`de fournir "
"des données initiales <formsets-initial-data>` aux formulaires groupés en "
"indiquant le paramètre ``initial`` au moment de la création de l'instance de "
"classe de formulaires groupés de modèles renvoyée par :func:`~django.forms."
"models.modelformset_factory`. Cependant, avec les formulaires groupés de "
"modèles, les valeurs initiales ne s'appliquent qu'aux formulaires "
"supplémentaires, ceux qui ne sont pas liés à des instances d'objets "
"existants. Si la longueur de ``initial`` dépasse le nombre de formulaires "
"supplémentaires, les données initiales en trop sont ignorées. Si les "
"formulaires supplémentaires avec données initiales ne sont pas modifiés par "
"l'utilisateur, ils ne seront ni validés, ni enregistrés."

msgid "Saving objects in the formset"
msgstr "Enregistrement des objets des formulaires groupés"

msgid ""
"As with a ``ModelForm``, you can save the data as a model object. This is "
"done with the formset's ``save()`` method:"
msgstr ""
"Comme pour un ``ModelForm``, vous pouvez enregistrer les données sous forme "
"d'objet de modèle. Cela se fait par la méthode ``save()`` des formulaires "
"groupés :"

msgid ""
"The ``save()`` method returns the instances that have been saved to the "
"database. If a given instance's data didn't change in the bound data, the "
"instance won't be saved to the database and won't be included in the return "
"value (``instances``, in the above example)."
msgstr ""
"La méthode ``save()`` renvoie les instances qui ont été enregistrées dans la "
"base de données. Si les données d'une instance précise n'ont pas été "
"modifiées dans les données du formulaire, l'instance ne sera pas enregistrée "
"dans la base de données et ne sera pas non plus incluse dans la valeur "
"renvoyée (``instances``, dans l'exemple ci-dessus)."

msgid ""
"When fields are missing from the form (for example because they have been "
"excluded), these fields will not be set by the ``save()`` method. You can "
"find more information about this restriction, which also holds for regular "
"``ModelForms``, in `Selecting the fields to use`_."
msgstr ""
"Lorsque des champs sont absents du formulaire (par exemple en raison de leur "
"exclusion), ces champs ne sont pas modifiés par la méthode ``save()``. Vous "
"pouvez trouver plus d'informations sur cette restriction, qui est aussi "
"valable pour les formulaires ``ModelForm`` normaux, dans `Sélection des "
"champs à utiliser`_."

msgid "Pass ``commit=False`` to return the unsaved model instances:"
msgstr ""
"Passez ``commit=False`` pour recevoir les instances de modèles non "
"enregistrées :"

msgid ""
"This gives you the ability to attach data to the instances before saving "
"them to the database. If your formset contains a ``ManyToManyField``, you'll "
"also need to call ``formset.save_m2m()`` to ensure the many-to-many "
"relationships are saved properly."
msgstr ""
"Cela vous permet de définir des données complémentaires dans les instances "
"avant de les enregistrer dans la base de données. Si vos formulaires groupés "
"contiennent un champ ``ManyToManyField``, vous devrez également appeler "
"``formset.save_m2m()`` pour vous assurer que les liens plusieurs-à-plusieurs "
"soient correctement enregistrés."

msgid ""
"After calling ``save()``, your model formset will have three new attributes "
"containing the formset's changes:"
msgstr ""
"Après l'appel à ``save()``, les formulaires groupés du modèle posséderont "
"trois nouveaux attributs contenant les modifications des formulaires :"

msgid "Limiting the number of editable objects"
msgstr "Restriction du nombre d'objets modifiables"

msgid ""
"As with regular formsets, you can use the ``max_num`` and ``extra`` "
"parameters to :func:`~django.forms.models.modelformset_factory` to limit the "
"number of extra forms displayed."
msgstr ""
"Comme pour les formulaires groupés normaux, vous pouvez utiliser les "
"paramètres ``max_num`` et ``extra`` de :func:`~django.forms.models."
"modelformset_factory` pour restreindre le nombre de formulaires "
"supplémentaires affichés."

msgid "``max_num`` does not prevent existing objects from being displayed:"
msgstr "``max_num`` n'empêche pas les objets existants d'être affichés :"

msgid ""
"Also, ``extra=0`` doesn't prevent creation of new model instances as you "
"can :ref:`add additional forms with JavaScript <understanding-the-"
"managementform>` or send additional POST data. See :ref:`model-formsets-edit-"
"only` on how to do this."
msgstr ""
"De plus, ``extra=0`` n'empêche pas la création de nouvelles instances de "
"modèles car il est possible :ref:`d'ajouter des formulaires supplémentaires "
"par JavaScript <understanding-the-managementform>` ou d'envoyer des données "
"POST supplémentaires. Consultez :ref:`model-formsets-edit-only` pour voir la "
"manière de faire cela."

msgid ""
"If the value of ``max_num`` is greater than the number of existing related "
"objects, up to ``extra`` additional blank forms will be added to the "
"formset, so long as the total number of forms does not exceed ``max_num``:"
msgstr ""
"Si la valeur de ``max_num`` est plus grande que le nombre d'objets liés "
"existants, un maximum de  ``extra`` formulaires vierges supplémentaires "
"seront ajoutés aux formulaires groupés, aussi longtemps que le nombre total "
"de formulaires n'excède pas ``max_num``:"

msgid "Preventing new objects creation"
msgstr "Empêcher la création de nouveaux objets"

msgid ""
"Using the ``edit_only`` parameter, you can prevent creation of any new "
"objects:"
msgstr ""
"Avec le paramètre ``edit_only``, il est possible d'empêcher la création de "
"tout nouvel objet :"

msgid ""
"Here, the formset will only edit existing ``Author`` instances. No other "
"objects will be created or edited."
msgstr ""
"Ici, le jeu de formulaires ne fera que modifier des instances ``Author`` "
"existantes. Aucun autre objet ne sera créé ou modifié."

msgid "Using a model formset in a view"
msgstr "Utilisation de formulaires groupés de modèle dans une vue"

msgid ""
"Model formsets are very similar to formsets. Let's say we want to present a "
"formset to edit ``Author`` model instances::"
msgstr ""
"Les formulaires groupés de modèle sont très semblables aux formulaires "
"groupés normaux. Admettons que nous voulions afficher des formulaires "
"groupés pour modifier les instances du modèle ``Author``::"

msgid ""
"As you can see, the view logic of a model formset isn't drastically "
"different than that of a \"normal\" formset. The only difference is that we "
"call ``formset.save()`` to save the data into the database. (This was "
"described above, in :ref:`saving-objects-in-the-formset`.)"
msgstr ""
"Comme vous pouvez le voir, la logique de la vue de formulaires groupés de "
"modèle n'est pas fondamentalement différente de celle de formulaires groupés "
"normaux. La seule différence est que nous appelons ``formset.save()`` pour "
"enregistrer les données dans la base de données (comme cela a été décrit ci-"
"dessus dans :ref:`saving-objects-in-the-formset`)."

msgid "Overriding ``clean()`` on a ``ModelFormSet``"
msgstr "Surcharge de ``clean()`` d'un ``ModelFormSet``"

msgid ""
"Just like with ``ModelForms``, by default the ``clean()`` method of a "
"``ModelFormSet`` will validate that none of the items in the formset violate "
"the unique constraints on your model (either ``unique``, ``unique_together`` "
"or ``unique_for_date|month|year``).  If you want to override the ``clean()`` "
"method on a ``ModelFormSet`` and maintain this validation, you must call the "
"parent class's ``clean`` method::"
msgstr ""
"Tout comme pour ``ModelForms``, la méthode ``clean()`` de ``ModelFormSet`` "
"valide par défaut qu'aucun des éléments dans les formulaires groupés ne "
"viole les contraintes d'unicité de votre modèle (que ce soit ``unique``, "
"``unique_together`` ou ``unique_for_date|month|year``). Si vous souhaitez "
"surcharger la méthode ``clean()`` d'un ``ModelFormSet`` et conserver cette "
"validation, vous devez appeler la méthode ``clean`` de la classe parente ::"

msgid ""
"Also note that by the time you reach this step, individual model instances "
"have already been created for each ``Form``. Modifying a value in ``form."
"cleaned_data`` is not sufficient to affect the saved value. If you wish to "
"modify a value in ``ModelFormSet.clean()`` you must modify ``form."
"instance``::"
msgstr ""
"Notez également qu'une fois que vous avez atteint cette étape, les instances "
"de modèles individuelles pour chaque formulaire ont déjà été créées. Il ne "
"suffit donc pas de modifier une valeur dans ``form.cleaned_data`` pour "
"changer la valeur enregistrée. Si vous souhaitez modifier une valeur dans "
"``ModelFormSet.clean()``, vous devez modifier ``form.instance``::"

msgid "Using a custom queryset"
msgstr "Utilisation d'un jeu de requête personnalisé"

msgid ""
"As stated earlier, you can override the default queryset used by the model "
"formset::"
msgstr ""
"Comme indiqué précédemment, il est possible de surcharger le jeu de requête "
"utilisé par défaut par les formulaires groupés de modèle ::"

msgid ""
"Note that we pass the ``queryset`` argument in both the ``POST`` and ``GET`` "
"cases in this example."
msgstr ""
"Notez que nous transmettons le paramètre ``queryset`` à la fois aux requêtes "
"``POST`` et ``GET`` dans cet exemple."

msgid "Using the formset in the template"
msgstr "Utilisation des formulaires groupés dans un gabarit"

msgid "There are three ways to render a formset in a Django template."
msgstr ""
"Il y a trois façons d'afficher des formulaires groupés dans un gabarit "
"Django."

msgid "First, you can let the formset do most of the work:"
msgstr ""
"Premièrement, vous pouvez déléguer aux formulaires groupés l'essentiel du "
"travail :"

msgid ""
"Second, you can manually render the formset, but let the form deal with "
"itself:"
msgstr ""
"Deuxièmement, vous pouvez afficher les formulaires groupés manuellement, "
"mais laisser le soin à chaque formulaire de s'afficher lui-même :"

msgid ""
"When you manually render the forms yourself, be sure to render the "
"management form as shown above. See the :ref:`management form documentation "
"<understanding-the-managementform>`."
msgstr ""
"Lorsque vous vous occupez vous-même d'afficher les différents formulaires, "
"prenez soin d'inclure également le formulaire de gestion comme le montre "
"l'exemple ci-dessus. Voir la :ref:`documentation du formulaire de gestion "
"<understanding-the-managementform>`."

msgid "Third, you can manually render each field:"
msgstr "Troisièmement, vous pouvez afficher manuellement chaque champ :"

msgid ""
"If you opt to use this third method and you don't iterate over the fields "
"with a ``{% for %}`` loop, you'll need to render the primary key field. For "
"example, if you were rendering the ``name`` and ``age`` fields of a model:"
msgstr ""
"Si vous optez pour cette troisième méthode et que vous ne bouclez pas sur "
"les champs avec un ``{% for %}``, vous devez aussi inclure le champ de clé "
"primaire. Par exemple, si vous affichez les champs ``name`` et ``age`` d'un "
"modèle :"

msgid ""
"Notice how we need to explicitly render ``{{ form.id }}``. This ensures that "
"the model formset, in the ``POST`` case, will work correctly. (This example "
"assumes a primary key named ``id``. If you've explicitly defined your own "
"primary key that isn't called ``id``, make sure it gets rendered.)"
msgstr ""
"Voyez comment nous devons explicitement afficher ``{{ form.id }}``. Ceci "
"pour s'assurer du bon fonctionnement des formulaires groupés de modèle, dans "
"le cas de l'envoi ``POST`` (cet exemple suppose que la clé primaire "
"s'appelle ``id``. Si vous avez explicitement nommé la clé primaire su modèle "
"autrement que ``id``, prenez soin de l'afficher)."

msgid "Inline formsets"
msgstr "Sous-formulaires groupés"

msgid ""
"Inline formsets is a small abstraction layer on top of model formsets. These "
"simplify the case of working with related objects via a foreign key. Suppose "
"you have these two models::"
msgstr ""
"Les sous-formulaires groupés sont une petite couche d'abstraction au-dessus "
"des formulaires groupés de modèle. Ils simplifient la situation où l'on "
"manipule des objets liés au travers d'une clé étrangère. Supposons que l'on "
"dispose de ces deux modèles ::"

msgid ""
"If you want to create a formset that allows you to edit books belonging to a "
"particular author, you could do this:"
msgstr ""
"Si vous voulez créer des formulaires groupés permettant de modifier les "
"livres appartenant à un auteur particulier, vous pourriez faire ainsi :"

msgid ""
"``BookFormSet``'s :ref:`prefix <formset-prefix>` is ``'book_set'`` (``<model "
"name>_set`` ). If ``Book``'s ``ForeignKey`` to ``Author`` has a :attr:"
"`~django.db.models.ForeignKey.related_name`, that's used instead."
msgstr ""
"Le :ref:`préfixe <formset-prefix>` de ``BookFormSet`` est ``'book_set'`` "
"(``<nom_modèle>_set`` ). Si la clé étrangère de ``Book`` vers ``Author`` "
"possède l'attribut :attr:`~django.db.models.ForeignKey.related_name`, c'est "
"ce dernier qui est utilisé."

msgid ""
":func:`~django.forms.models.inlineformset_factory` uses :func:`~django.forms."
"models.modelformset_factory` and marks ``can_delete=True``."
msgstr ""
":func:`~django.forms.models.inlineformset_factory` utilise :func:`~django."
"forms.models.modelformset_factory` et définit ``can_delete=True``."

msgid ""
":ref:`Manually rendered can_delete and can_order <manually-rendered-can-"
"delete-and-can-order>`."
msgstr ""
":ref:`can_delete et can_order affichés manuellement <manually-rendered-can-"
"delete-and-can-order>`."

msgid "Overriding methods on an ``InlineFormSet``"
msgstr "Surcharge des méthodes d'un ``InlineFormSet``"

msgid ""
"When overriding methods on ``InlineFormSet``, you should subclass :class:"
"`~models.BaseInlineFormSet` rather than :class:`~models.BaseModelFormSet`."
msgstr ""
"Lorsque vous surchargez des méthodes de sous-formulaires groupés "
"(``InlineFormSet``), il est préférable d'hériter de :class:`~models."
"BaseInlineFormSet` plutôt que de :class:`~models.BaseModelFormSet`."

msgid "For example, if you want to override ``clean()``::"
msgstr "Par exemple, si vous souhaitez surcharger ``clean()``::"

msgid "See also :ref:`model-formsets-overriding-clean`."
msgstr "Voir aussi :ref:`model-formsets-overriding-clean`."

msgid ""
"Then when you create your inline formset, pass in the optional argument "
"``formset``:"
msgstr ""
"Puis, au moment de créer les sous-formulaires groupés, passez le paramètre "
"facultatif ``formset``:"

msgid "More than one foreign key to the same model"
msgstr "Plus d'une clé étrangère vers le même modèle"

msgid ""
"If your model contains more than one foreign key to the same model, you'll "
"need to resolve the ambiguity manually using ``fk_name``. For example, "
"consider the following model::"
msgstr ""
"Si votre modèle contient plus d'une clé étrangère vers le même modèle, vous "
"devrez résoudre l'ambiguïté manuellement en utilisant ``fk_name``. Par "
"exemple, considérez le modèle suivant ::"

msgid ""
"To resolve this, you can use ``fk_name`` to :func:`~django.forms.models."
"inlineformset_factory`:"
msgstr ""
"Pour résoudre cela, vous pouvez définir ``fk_name`` dans :func:`~django."
"forms.models.inlineformset_factory`:"

msgid "Using an inline formset in a view"
msgstr "Utilisation de sous-formulaires groupés dans une vue"

msgid ""
"You may want to provide a view that allows a user to edit the related "
"objects of a model. Here's how you can do that::"
msgstr ""
"Il peut être nécessaire de définir une vue permettant à un utilisateur de "
"modifier les objets liés d'un modèle. Voici comment on peut le faire ::"

msgid "Notice how we pass ``instance`` in both the ``POST`` and ``GET`` cases."
msgstr ""
"Notez comment nous définissons le paramètre ``instance`` aussi bien dans le "
"cas ``POST`` que le cas ``GET``."

msgid "Specifying widgets to use in the inline form"
msgstr "Indication des composants à utiliser dans le sous-formulaire"

msgid ""
"``inlineformset_factory`` uses ``modelformset_factory`` and passes most of "
"its arguments to ``modelformset_factory``. This means you can use the "
"``widgets`` parameter in much the same way as passing it to "
"``modelformset_factory``. See `Specifying widgets to use in the form with "
"widgets`_ above."
msgstr ""
"``inlineformset_factory`` utilise ``modelformset_factory`` et transmet la "
"plupart de ses paramètres à ``modelformset_factory``. Cela signifie que vous "
"pouvez utiliser le paramètre ``widgets`` tout comme vous le feriez pour "
"``modelformset_factory``. Voir `Indication des composants de formulaire à "
"utiliser avec widgets`_ ci-dessus."

msgid "View decorators"
msgstr "Décorateurs de vue"

msgid ""
"Django provides several decorators that can be applied to views to support "
"various HTTP features."
msgstr ""
"Django fournit plusieurs décorateurs afin de permettre aux vues de prendre "
"en charge différentes fonctionnalités HTTP."

msgid ""
"See :ref:`decorating-class-based-views` for how to use these decorators with "
"class-based views."
msgstr ""
"Voir :ref:`decorating-class-based-views` pour savoir comment utiliser ces "
"décorateurs avec les vues fondées sur des classes."

msgid "Allowed HTTP methods"
msgstr "Méthodes HTTP autorisées"

msgid ""
"The decorators in :mod:`django.views.decorators.http` can be used to "
"restrict access to views based on the request method. These decorators will "
"return a :class:`django.http.HttpResponseNotAllowed` if the conditions are "
"not met."
msgstr ""
"Les décorateurs présents dans  :mod:`django.views.decorators.http` peuvent "
"être utilisés pour restreindre l'accès à une vue en se basant sur la méthode "
"utilisée lors de la requête. Ces décorateurs renvoient une instance de :"
"class:`django.http.HttpResponseNotAllowed` si les conditions ne sont pas "
"remplies."

msgid ""
"Decorator to require that a view only accepts particular request methods. "
"Usage::"
msgstr ""
"Décorateur exigeant que l'accès à une vue se fasse via certaines méthodes "
"HTTP seulement. Exemple ::"

msgid "Note that request methods should be in uppercase."
msgstr "Remarquez que les noms de méthodes HTTP doivent être en majuscules."

msgid "Decorator to require that a view only accepts the GET method."
msgstr "Décorateur exigeant que la vue n'accepte que la méthode GET."

msgid "Decorator to require that a view only accepts the POST method."
msgstr "Décorateur exigeant que la vue n'accepte que la méthode POST."

msgid ""
"Decorator to require that a view only accepts the GET and HEAD methods. "
"These methods are commonly considered \"safe\" because they should not have "
"the significance of taking an action other than retrieving the requested "
"resource."
msgstr ""
"Décorateur exigeant que la vue n'accepte que les méthodes GET et HEAD. Ces "
"méthodes sont généralement considérées « sans risque » car elles ne "
"devraient rien faire d'autre mis à part retourner la ressource demandée."

msgid ""
"Web servers should automatically strip the content of responses to HEAD "
"requests while leaving the headers unchanged, so you may handle HEAD "
"requests exactly like GET requests in your views. Since some software, such "
"as link checkers, rely on HEAD requests, you might prefer using "
"``require_safe`` instead of ``require_GET``."
msgstr ""
"Les serveurs Web devraient retirer automatiquement le contenu des réponses "
"aux requêtes HEAD en prenant soin de laisser les en-têtes inchangés, vous "
"pouvez ainsi traiter les requêtes HEAD comme des requêtes GET dans vos vues. "
"Étant donné que certains programmes, tels que les vérificateurs "
"d'hyperliens, se basent sur les requêtes HEAD, il peut être préférable "
"d'utiliser ``require_safe`` à la place de ``require_GET``."

msgid "Conditional view processing"
msgstr "Traitement conditionnel de vue"

msgid ""
"The following decorators in :mod:`django.views.decorators.http` can be used "
"to control caching behavior on particular views."
msgstr ""
"Les décorateurs suivants présents dans :mod:`django.views.decorators.http` "
"peuvent être utilisés pour contrôler le comportement du cache sur certaines "
"vues."

msgid ""
"These decorators can be used to generate ``ETag`` and ``Last-Modified`` "
"headers; see :doc:`conditional view processing </topics/conditional-view-"
"processing>`."
msgstr ""
"Ces décorateurs peuvent être utilisés pour générer des en-têtes ``ETag`` et "
"``Last-Modified``. Voir :doc:`traitement conditionnel de vue </topics/"
"conditional-view-processing>`."

msgid "GZip compression"
msgstr "Compression GZip"

msgid ""
"The decorators in :mod:`django.views.decorators.gzip` control content "
"compression on a per-view basis."
msgstr ""
"Les décorateurs présents dans :mod:`django.views.decorators.gzip` contrôlent "
"la compression du contenu vue par vue."

msgid ""
"This decorator compresses content if the browser allows gzip compression. It "
"sets the ``Vary`` header accordingly, so that caches will base their storage "
"on the ``Accept-Encoding`` header."
msgstr ""
"Ce décorateur compresse le contenu si le navigateur autorise la compression "
"gzip. Il déclare l'en-tête ``Vary`` en conséquence, de façon à ce que la "
"mise en cache dépende de l'en-tête ``Accept-Encoding``."

msgid "Vary headers"
msgstr "En-têtes Vary"

msgid ""
"The decorators in :mod:`django.views.decorators.vary` can be used to control "
"caching based on specific request headers."
msgstr ""
"Les décorateurs présents dans :mod:`django.views.decorators.vary` peuvent "
"être utilisés pour contrôler la mise en cache reposant sur certains en-têtes "
"des requêtes."

msgid ""
"The ``Vary`` header defines which request headers a cache mechanism should "
"take into account when building its cache key."
msgstr ""
"L'en-tête ``Vary`` définit quels en-têtes de requête un mécanisme de cache "
"doit prendre en considération pour générer sa clé de cache."

msgid "See :ref:`using vary headers <using-vary-headers>`."
msgstr "Voir :ref:`utilisation des en-têtes vary <using-vary-headers>`."

msgid "Caching"
msgstr "Mise en cache"

msgid ""
"The decorators in :mod:`django.views.decorators.cache` control server and "
"client-side caching."
msgstr ""
"Les décorateurs présents dans :mod:`django.views.decorators.cache` "
"contrôlent la mise en cache aux niveaux serveur et client."

msgid ""
"This decorator patches the response's ``Cache-Control`` header by adding all "
"of the keyword arguments to it. See :func:`~django.utils.cache."
"patch_cache_control` for the details of the transformation."
msgstr ""
"Ce décorateur complète l'en-tête ``Cache-Control`` de la réponse en y "
"ajoutant tous les paramètres nommés. Voir :func:`~django.utils.cache."
"patch_cache_control` pour les détails sur la transformation."

msgid "This decorator adds an ``Expires`` header to the current date/time."
msgstr "Ce décorateur ajoute un en-tête ``Expires`` à la date actuelle."

msgid ""
"This decorator adds a ``Cache-Control: max-age=0, no-cache, no-store, must-"
"revalidate, private`` header to a response to indicate that a page should "
"never be cached."
msgstr ""
"Ce décorateur ajoute un en-tête ``Cache-Control: max-age=0, no-cache, no-"
"store, must-revalidate, private`` à une réponse pour indiquer que la page ne "
"doit jamais être mise en cache."

msgid "Each header is only added if it isn't already set."
msgstr "Chaque en-tête n'est ajouté que s'il n'est pas déjà présent."

msgid "Common"
msgstr "Communs"

msgid ""
"The decorators in :mod:`django.views.decorators.common` allow per-view "
"customization of :class:`~django.middleware.common.CommonMiddleware` "
"behavior."
msgstr ""
"Les décorateurs dans :mod:`django.views.decorators.common` permettent une "
"personnalisation par vue du comportement de l'intergiciel :class:`~django."
"middleware.common.CommonMiddleware`."

msgid ""
"This decorator allows individual views to be excluded from :setting:"
"`APPEND_SLASH` URL normalization."
msgstr ""
"Ce décorateur permet à des vues individuelles d'être exclues de la "
"normalisation des URL par :setting:`APPEND_SLASH`."

msgid "File Uploads"
msgstr "Envoi de fichiers"

msgid ""
"When Django handles a file upload, the file data ends up placed in :attr:"
"`request.FILES <django.http.HttpRequest.FILES>` (for more on the ``request`` "
"object see the documentation for :doc:`request and response objects </ref/"
"request-response>`). This document explains how files are stored on disk and "
"in memory, and how to customize the default behavior."
msgstr ""
"Lorsque Django gère un téléversement de fichier, les données du fichier "
"aboutissent dans :attr:`request.FILES <django.http.HttpRequest.FILES>` (plus "
"de détails sur l'objet ``request`` se trouvent dans la documentation des :"
"doc:`objets request et response </ref/request-response>`). Ce document "
"explique comment les fichiers sont stockés sur disque et en mémoire, et "
"comment personnaliser le comportement par défaut."

msgid ""
"There are security risks if you are accepting uploaded content from "
"untrusted users! See the security guide's topic on :ref:`user-uploaded-"
"content-security` for mitigation details."
msgstr ""
"Il existe des risques de sécurité si vous acceptez du contenu téléversé de "
"la part d'utilisateurs non fiables. Consultez le sujet :ref:`user-uploaded-"
"content-security` du guide de sécurité pour des détails sur les mesures de "
"réduction des risques."

msgid "Basic file uploads"
msgstr "Envoi simple de fichiers"

msgid "Consider a form containing a :class:`~django.forms.FileField`:"
msgstr ""
"Considérez un formulaire contenant un champ :class:`~django.forms.FileField`:"

msgid ""
"A view handling this form will receive the file data in :attr:`request.FILES "
"<django.http.HttpRequest.FILES>`, which is a dictionary containing a key for "
"each :class:`~django.forms.FileField` (or :class:`~django.forms.ImageField`, "
"or other :class:`~django.forms.FileField` subclass) in the form. So the data "
"from the above form would be accessible as ``request.FILES['file']``."
msgstr ""
"Une vue gérant ce formulaire recevra les données de fichier dans :attr:"
"`request.FILES <django.http.HttpRequest.FILES>` qui est un dictionnaire "
"contenant une clé pour chaque :class:`~django.forms.FileField` (ou :class:"
"`~django.forms.ImageField`, ou toute autre sous-classe de :class:`~django."
"forms.FileField`) du formulaire. Ainsi, les données du formulaire ci-dessus "
"seraient accessibles dans ``request.FILES['file']``."

msgid ""
"Note that :attr:`request.FILES <django.http.HttpRequest.FILES>` will only "
"contain data if the request method was ``POST``, at least one file field was "
"actually posted, and the ``<form>`` that posted the request has the "
"attribute ``enctype=\"multipart/form-data\"``. Otherwise, ``request.FILES`` "
"will be empty."
msgstr ""
"Notez que :attr:`request.FILES <django.http.HttpRequest.FILES>` ne contient "
"les données que lorsque la méthode de requête est ``POST``, qu'au moins un "
"fichier est contenu dans l'envoi et que le formulaire``<form>`` à l'origine "
"de la requête possède l'attribut ``enctype=\"multipart/form-data\"``. Sinon, "
"``request.FILES`` est vide."

msgid ""
"Most of the time, you'll pass the file data from ``request`` into the form "
"as described in :ref:`binding-uploaded-files`. This would look something "
"like:"
msgstr ""
"La plupart du temps, les données de fichiers seront transmises de "
"``request`` au formulaire comme expliqué dans :ref:`binding-uploaded-files`. "
"Voici ce que cela peut donner :"

msgid ""
"Notice that we have to pass :attr:`request.FILES <django.http.HttpRequest."
"FILES>` into the form's constructor; this is how file data gets bound into a "
"form."
msgstr ""
"Remarquez que nous devons transmettre :attr:`request.FILES <django.http."
"HttpRequest.FILES>` au constructeur du formulaire ; c'est comme cela que les "
"données de fichiers sont liées à un formulaire."

msgid "Here's a common way you might handle an uploaded file::"
msgstr "Voici une manière habituelle de gérer un fichier téléversé ::"

msgid ""
"Looping over ``UploadedFile.chunks()`` instead of using ``read()`` ensures "
"that large files don't overwhelm your system's memory."
msgstr ""
"En bouclant sur ``UploadedFile.chunks()`` au lieu d'appeler ``read()``, on "
"peut s'assurer que les gros fichiers ne saturent pas la mémoire du système."

msgid ""
"There are a few other methods and attributes available on ``UploadedFile`` "
"objects; see :class:`UploadedFile` for a complete reference."
msgstr ""
"Il existe quelques autres méthodes et attributs accessibles pour les objets "
"``UploadedFile``. Voir :class:`UploadedFile` pour une référence complète."

msgid "Handling uploaded files with a model"
msgstr "Téléversement de fichiers liés à un modèle"

msgid ""
"If you're saving a file on a :class:`~django.db.models.Model` with a :class:"
"`~django.db.models.FileField`, using a :class:`~django.forms.ModelForm` "
"makes this process much easier. The file object will be saved to the "
"location specified by the :attr:`~django.db.models.FileField.upload_to` "
"argument of the corresponding :class:`~django.db.models.FileField` when "
"calling ``form.save()``::"
msgstr ""
"Si vous enregistrez un fichier dans un :class:`~django.db.models.Model` "
"contenant un champ :class:`~django.db.models.FileField`, l'emploi d'un "
"formulaire :class:`~django.forms.ModelForm` simplifie le processus. L'objet "
"fichier sera enregistré à l'emplacement indiqué par le paramètre :attr:"
"`~django.db.models.FileField.upload_to` du champ :class:`~django.db.models."
"FileField` correspondant lors de l'appel à ``form.save()``::"

msgid ""
"If you are constructing an object manually, you can assign the file object "
"from :attr:`request.FILES <django.http.HttpRequest.FILES>` to the file field "
"in the model::"
msgstr ""
"Si vous construisez manuellement un objet, vous pouvez attribuer l'objet "
"fichier provenant de :attr:`request.FILES <django.http.HttpRequest.FILES>` "
"au champ de fichier du modèle ::"

msgid ""
"If you are constructing an object manually outside of a request, you can "
"assign a :class:`~django.core.files.File` like object to the :class:`~django."
"db.models.FileField`::"
msgstr ""
"Si vous construisez un objet manuellement en dehors d'une requête, vous "
"pouvez attribuer un objet du genre :class:`~django.core.files.File` au "
"champ :class:`~django.db.models.FileField`::"

msgid "Uploading multiple files"
msgstr "Téléversement de fichiers multiples"

msgid ""
"If you want to upload multiple files using one form field, create a subclass "
"of the field's widget and set its ``allow_multiple_selected`` class "
"attribute to ``True``."
msgstr ""
"Si vous souhaitez pouvoir téléverser plusieurs fichiers avec un seul champ "
"de formulaire, créez une sous-classe du composant de champ et définissez son "
"attribut de classe ``allow_multiple_selected`` à ``True``."

msgid ""
"In order for such files to be all validated by your form (and have the value "
"of the field include them all), you will also have to subclass "
"``FileField``. See below for an example."
msgstr ""
"Afin que de tels fichiers soient tous validés par votre formulaire (et que "
"la valeur du champ les inclue tous), vous devrez aussi créer une sous-classe "
"du champ ``FileField``. Voir ci-dessous pour un exemple."

msgid "Multiple file field"
msgstr "Champ de fichiers multiples"

msgid ""
"Django is likely to have a proper multiple file field support at some point "
"in the future."
msgstr ""
"Il est probable que Django propose un champ pour des fichiers multiples dans "
"un avenir pas trop lointain."

msgid ""
"Then override the ``form_valid()`` method of your :class:`~django.views."
"generic.edit.FormView` subclass to handle multiple file uploads:"
msgstr ""
"Puis surchargez la méthode ``form_valid()`` de votre sous-classe de :class:"
"`~django.views.generic.edit.FormView` pour pouvoir gérer plusieurs fichiers "
"reçus :"

msgid ""
"This will allow you to handle multiple files at the form level only. Be "
"aware that you cannot use it to put multiple files on a single model "
"instance (in a single field), for example, even if the custom widget is used "
"with a form field related to a model ``FileField``."
msgstr ""
"Ceci vous permet de gérer des fichier multiples purement au niveau du "
"formulaire. Notez que vous ne pouvez pas l'utiliser pour inclure plusieurs "
"fichiers dans une seule instance de modèle (dans un seul champ), par "
"exemple, même si le composant personnalisé est utilisé avec un champ de "
"formulaire lié à un champ de modèle de type ``FileField``."

msgid "Upload Handlers"
msgstr "Gestionnaires de téléversement"

msgid ""
"When a user uploads a file, Django passes off the file data to an *upload "
"handler* -- a small class that handles file data as it gets uploaded. Upload "
"handlers are initially defined in the :setting:`FILE_UPLOAD_HANDLERS` "
"setting, which defaults to::"
msgstr ""
"Lorsqu'un utilisateur envoie un fichier, Django transmet les données du "
"fichier à un *gestionnaire de téléversement*, une petite classe qui gère les "
"données du fichier reçu. Les gestionnaires de téléversement sont définis "
"initialement dans le réglage :setting:`FILE_UPLOAD_HANDLERS` dont le contenu "
"par défaut est ::"

msgid ""
"Together :class:`MemoryFileUploadHandler` and :class:"
"`TemporaryFileUploadHandler` provide Django's default file upload behavior "
"of reading small files into memory and large ones onto disk."
msgstr ""
"Conjointement, :class:`MemoryFileUploadHandler` et :class:"
"`TemporaryFileUploadHandler` définissent le comportement Django par défaut "
"de téléversement de fichier en plaçant les petits fichiers en mémoire et les "
"plus gros sur le disque."

msgid ""
"You can write custom handlers that customize how Django handles files. You "
"could, for example, use custom handlers to enforce user-level quotas, "
"compress data on the fly, render progress bars, and even send data to "
"another storage location directly without storing it locally. See :ref:"
"`custom_upload_handlers` for details on how you can customize or completely "
"replace upload behavior."
msgstr ""
"Vous pouvez écrire des gestionnaires personnalisée qui modifient la façon de "
"gérer les fichiers. Vous pourriez par exemple utiliser des gestionnaires "
"personnalisés pour limiter la quantité de données par utilisateur, "
"compresser les données à la volée, afficher des barres de progression ou "
"même envoyer directement des données vers un autre emplacement de stockage "
"sans les stocker localement. Voir :ref:`custom_upload_handlers` pour plus de "
"détails sur la manière de personnaliser ou de remplacer complètement le "
"comportement de téléversement."

msgid "Where uploaded data is stored"
msgstr "Emplacement de stockage des données"

msgid "Before you save uploaded files, the data needs to be stored somewhere."
msgstr ""
"Avant d'enregistrer des fichiers téléversés, les données doivent bien être "
"stockées quelque part."

msgid ""
"By default, if an uploaded file is smaller than 2.5 megabytes, Django will "
"hold the entire contents of the upload in memory. This means that saving the "
"file involves only a read from memory and a write to disk and thus is very "
"fast."
msgstr ""
"Par défaut, si un fichier téléversé est plus petit que 2,5 Mio, Django place "
"la totalité du fichier en mémoire. Cela signifie que l'enregistrement du "
"fichier correspond à une simple lecture en mémoire et à une écriture sur le "
"disque, ce qui est très rapide."

msgid ""
"However, if an uploaded file is too large, Django will write the uploaded "
"file to a temporary file stored in your system's temporary directory. On a "
"Unix-like platform this means you can expect Django to generate a file "
"called something like ``/tmp/tmpzfp6I6.upload``. If an upload is large "
"enough, you can watch this file grow in size as Django streams the data onto "
"disk."
msgstr ""
"Cependant, si un fichier téléversé est trop gros, Django écrit le fichier "
"dans un fichier temporaire stocké dans le répertoire des fichiers "
"temporaires du système. Sur une plate-forme de type Unix, Django va en "
"principe générer un fichier dont le chemin correspond à quelque chose comme "
"``/tmp/tmpzfp6I6.upload``. Si le fichier est suffisamment gros, vous pouvez "
"même voir la taille du fichier augmenter au fur et à mesure de son flux "
"d'enregistrement vers le disque."

msgid ""
"These specifics -- 2.5 megabytes; ``/tmp``; etc. -- are \"reasonable "
"defaults\" which can be customized as described in the next section."
msgstr ""
"Ces paramètres spécifiques, 2,5 Mio, ``/tmp``, etc. ne sont que des valeurs "
"par défaut « raisonnables » qui peuvent être personnalisés comme expliqué "
"dans la section suivante."

msgid "Changing upload handler behavior"
msgstr "Modification de la gestion des téléversements"

msgid ""
"There are a few settings which control Django's file upload behavior. See :"
"ref:`File Upload Settings <file-upload-settings>` for details."
msgstr ""
"Certains réglages permettent de contrôler le comportement de téléversement "
"de fichiers de Django. Voir :ref:`Réglages de téléversement de fichiers "
"<file-upload-settings>` pour plus de détails."

msgid "Modifying upload handlers on the fly"
msgstr "Modification des gestionnaires de téléversement à la volée"

msgid ""
"Sometimes particular views require different upload behavior. In these "
"cases, you can override upload handlers on a per-request basis by modifying "
"``request.upload_handlers``. By default, this list will contain the upload "
"handlers given by :setting:`FILE_UPLOAD_HANDLERS`, but you can modify the "
"list as you would any other list."
msgstr ""
"Parfois, certaines vues ont besoin d'un comportement de téléversement "
"différent. Dans ces situations, il est possible de surcharger les "
"gestionnaires de téléversement par requête en modifiant ``request."
"upload_handlers``. Par défaut, celle liste contient les gestionnaires de "
"téléversement énumérés dans :setting:`FILE_UPLOAD_HANDLERS`, mais cette "
"liste est modifiable comme n'importe quelle autre liste."

msgid ""
"For instance, suppose you've written a ``ProgressBarUploadHandler`` that "
"provides feedback on upload progress to some sort of AJAX widget. You'd add "
"this handler to your upload handlers like this::"
msgstr ""
"Par exemple, supposons que vous ayez écrit un gestionnaire "
"``ProgressBarUploadHandler`` qui renvoie des informations de progression de "
"téléversement d'un composant AJAX quelconque. Voici comment ajouter ce "
"gestionnaire à la liste des gestionnaires de téléversement ::"

msgid ""
"You'd probably want to use ``list.insert()`` in this case (instead of "
"``append()``) because a progress bar handler would need to run *before* any "
"other handlers. Remember, the upload handlers are processed in order."
msgstr ""
"Dans ce cas, ``list.insert()`` peut être plus approprié que ``append()`` "
"parce qu'un gestionnaire de barre de progression devrait être exécuté "
"*avant* tout autre gestionnaire. Souvenez-vous que les gestionnaires de "
"téléversement sont appelés dans l'ordre."

msgid ""
"If you want to replace the upload handlers completely, you can assign a new "
"list::"
msgstr ""
"Si vous vouliez totalement remplacer les gestionnaires de téléversement, il "
"suffirait d'attribuer une nouvelle liste ::"

msgid ""
"You can only modify upload handlers *before* accessing ``request.POST`` or "
"``request.FILES`` -- it doesn't make sense to change upload handlers after "
"upload handling has already started. If you try to modify ``request."
"upload_handlers`` after reading from ``request.POST`` or ``request.FILES`` "
"Django will throw an error."
msgstr ""
"Il n'est possible de modifier les gestionnaires de téléversement qu'*avant* "
"d'accéder à ``request.POST`` ou ``request.FILES``, car ça n'aurait pas de "
"sens de modifier les gestionnaires de téléversement après que la gestion des "
"téléversements a déjà démarré. Si vous le faites tout de même, Django "
"générera une erreur."

msgid ""
"Thus, you should always modify uploading handlers as early in your view as "
"possible."
msgstr ""
"Ceci dit, la modification des gestionnaires de téléversement devrait "
"toujours intervenir aussi tôt que possible dans les vues."

msgid ""
"Also, ``request.POST`` is accessed by :class:`~django.middleware.csrf."
"CsrfViewMiddleware` which is enabled by default. This means you will need to "
"use :func:`~django.views.decorators.csrf.csrf_exempt` on your view to allow "
"you to change the upload handlers.  You will then need to use :func:`~django."
"views.decorators.csrf.csrf_protect` on the function that actually processes "
"the request.  Note that this means that the handlers may start receiving the "
"file upload before the CSRF checks have been done. Example code::"
msgstr ""
"De plus, :class:`~django.middleware.csrf.CsrfViewMiddleware` qui est un "
"intergiciel activé par défaut accède à ``request.POST``. Cela signifie qu'il "
"est nécessaire de décorer avec :func:`~django.views.decorators.csrf."
"csrf_exempt` les vues dans lesquelles vous souhaitez changer les "
"gestionnaires de téléversement. Il faut ensuite utiliser :func:`~django."
"views.decorators.csrf.csrf_protect` sur la fonction qui traite effectivement "
"la requête. Remarquez qu'il se pourrait que les gestionnaires commencent à "
"recevoir un fichier envoyé avant que les contrôles CSRF aient été effectués. "
"Exemple de code ::"

msgid ""
"If you are using a class-based view, you will need to use :func:`~django."
"views.decorators.csrf.csrf_exempt` on its :meth:`~django.views.generic.base."
"View.dispatch` method and :func:`~django.views.decorators.csrf.csrf_protect` "
"on the method that actually processes the request. Example code::"
msgstr ""
"Si vous utilisez une vue basée sur une classe, vous devrez utiliser :func:"
"`~django.views.decorators.csrf.csrf_exempt` sur sa méthode :meth:`~django."
"views.generic.base.View.dispatch` et :func:`~django.views.decorators.csrf."
"csrf_protect` sur la méthode qui traite réellement la requête. Code "
"d'exemple ::"

msgid "Generic views"
msgstr "Vues génériques"

msgid "See :doc:`/ref/class-based-views/index`."
msgstr "Voir :doc:`/ref/class-based-views/index`."

msgid "Handling HTTP requests"
msgstr "Gestion des requêtes HTTP"

msgid "Information on handling HTTP requests in Django:"
msgstr "Informations sur la gestion des requêtes HTTP dans Django :"

msgid "Middleware"
msgstr "Intergiciels (« Middleware »)"

msgid ""
"Middleware is a framework of hooks into Django's request/response "
"processing. It's a light, low-level \"plugin\" system for globally altering "
"Django's input or output."
msgstr ""
"Les intergiciels représentent un système de points d'entrée dans le "
"traitement des requêtes et des réponses de Django. C'est un système de "
"greffons léger et de bas niveau pour modifier de façon globale les entrées "
"et sorties HTTP de Django."

msgid ""
"Each middleware component is responsible for doing some specific function. "
"For example, Django includes a middleware component, :class:`~django.contrib."
"auth.middleware.AuthenticationMiddleware`, that associates users with "
"requests using sessions."
msgstr ""
"Chaque composant d'intergiciel est responsable d'effectuer une tâche "
"spécifique. Par exemple, Django contient un intergiciel, :class:`~django."
"contrib.auth.middleware.AuthenticationMiddleware`, qui associe les "
"utilisateurs aux requêtes et aux sessions."

msgid ""
"This document explains how middleware works, how you activate middleware, "
"and how to write your own middleware. Django ships with some built-in "
"middleware you can use right out of the box. They're documented in the :doc:"
"`built-in middleware reference </ref/middleware>`."
msgstr ""
"Ce document explique comment fonctionnent les intergiciels, la manière de "
"les activer et d'écrire vos propres intergiciels. Django est livré avec "
"quelques intergiciels intégrés qu'il est possible d'utiliser tels quels. Ils "
"sont documentés dans la :doc:`référence des intergiciels intégrés </ref/"
"middleware>`."

msgid "Writing your own middleware"
msgstr "Écriture de son propre intergiciel"

msgid ""
"A middleware factory is a callable that takes a ``get_response`` callable "
"and returns a middleware. A middleware is a callable that takes a request "
"and returns a response, just like a view."
msgstr ""
"Une fabrique d'intergiciel est un objet exécutable acceptant un exécutable "
"``get_response`` et renvoyant un intergiciel. Un intergiciel est un objet "
"exécutable acceptant une requête et renvoyant une réponse, tout comme une "
"vue."

msgid "A middleware can be written as a function that looks like this::"
msgstr ""
"Un intergiciel peut être écrit comme une fonction qui ressemble à ceci ::"

msgid ""
"Or it can be written as a class whose instances are callable, like this::"
msgstr ""
"Ou il peut être écrit comme une classe dont les instances peuvent être "
"appelées, comme ceci ::"

msgid ""
"The ``get_response`` callable provided by Django might be the actual view "
"(if this is the last listed middleware) or it might be the next middleware "
"in the chain. The current middleware doesn't need to know or care what "
"exactly it is, just that it represents whatever comes next."
msgstr ""
"L'exécutable ``get_response`` fournit par Django pourrait être la vue elle-"
"même (s'il s'agit du dernier intergiciel) ou alors le prochain intergiciel "
"dans la chaîne. L'intergiciel actuel n'a pas besoin de savoir ou de se "
"préoccuper de ce que c'est exactement, il lui suffit de savoir que ça "
"représente ce qui vient ensuite."

msgid ""
"The above is a slight simplification -- the ``get_response`` callable for "
"the last middleware in the chain won't be the actual view but rather a "
"wrapper method from the handler which takes care of applying :ref:`view "
"middleware <view-middleware>`, calling the view with appropriate URL "
"arguments, and applying :ref:`template-response <template-response-"
"middleware>` and :ref:`exception <exception-middleware>` middleware."
msgstr ""
"Nous avons un peu simplifié l'explication ci-dessus, car l'exécutable "
"``get_response`` du dernier intergiciel dans la chaîne est en fait une "
"méthode enveloppant la vue, créée par le gestionnaire se chargeant "
"d'appliquer les :ref:`intergiciels de vue  <view-middleware>`; cette méthode "
"appelle la vue avec les paramètres appropriés et applique les intergiciels :"
"ref:`template-response <template-response-middleware>` et :ref:`exception "
"<exception-middleware>`."

msgid ""
"Middleware can either support only synchronous Python (the default), only "
"asynchronous Python, or both. See :ref:`async-middleware` for details of how "
"to advertise what you support, and know what kind of request you are getting."
msgstr ""
"Un intergiciel peut soit uniquement prendre en charge le code Python "
"synchrone (par défaut), soit uniquement du code asynchrone, ou encore les "
"deux. Consultez :ref:`async-middleware` pour des détails sur la manière "
"d'informer sur ce qui est pris en charge et pour connaître le genre de "
"requête que vous obtenez."

msgid "Middleware can live anywhere on your Python path."
msgstr ""
"Les intergiciels peuvent se trouver n'importe où dans votre chemin Python."

msgid "``__init__(get_response)``"
msgstr "``__init__(get_response)``"

msgid ""
"Middleware factories must accept a ``get_response`` argument. You can also "
"initialize some global state for the middleware. Keep in mind a couple of "
"caveats:"
msgstr ""
"Les fabriques d'intergiciel doivent accepter un paramètre ``get_response``. "
"Il est aussi possible d'initialiser de l'état global pour l'intergiciel. "
"Gardez à l'esprit quelques précautions :"

msgid ""
"Django initializes your middleware with only the ``get_response`` argument, "
"so you can't define ``__init__()`` as requiring any other arguments."
msgstr ""
"Django initialise les intergiciels avec le seul paramètre ``get_response``, "
"il n'est donc pas possible de définir d'autres paramètres obligatoires à "
"``__init__()``."

msgid ""
"Unlike the ``__call__()`` method which is called once per request, "
"``__init__()`` is called only *once*, when the web server starts."
msgstr ""
"Contrairement à la méthode ``__call__()`` qui est appelée une fois par "
"requête, ``__init__()`` n'est appelée qu'*une seule fois*, lorsque le "
"serveur web démarre."

msgid "Marking middleware as unused"
msgstr "Signalement d'un intergiciel à exclure"

msgid ""
"It's sometimes useful to determine at startup time whether a piece of "
"middleware should be used. In these cases, your middleware's ``__init__()`` "
"method may raise :exc:`~django.core.exceptions.MiddlewareNotUsed`. Django "
"will then remove that middleware from the middleware process and log a debug "
"message to the :ref:`django-request-logger` logger when :setting:`DEBUG` is "
"``True``."
msgstr ""
"Il est parfois utile de déterminer au moment du démarrage si un intergiciel "
"doit être utilisé. Dans ces cas, la méthode ``__init__()`` de l'intergiciel "
"peut générer l'exception :exc:`~django.core.exceptions.MiddlewareNotUsed`. "
"Django se charge alors d'enlever cet intergiciel du processus des "
"intergiciels et jouranlise un message de débogage vers le journaliseur :ref:"
"`django-request-logger` lorsque  :setting:`DEBUG` vaut ``True``."

msgid "Activating middleware"
msgstr "Activation des intergiciels"

msgid ""
"To activate a middleware component, add it to the :setting:`MIDDLEWARE` list "
"in your Django settings."
msgstr ""
"Pour activer un intergiciel, ajoutez son chemin dans la liste :setting:"
"`MIDDLEWARE` de vos réglages Django."

msgid ""
"In :setting:`MIDDLEWARE`, each middleware component is represented by a "
"string: the full Python path to the middleware factory's class or function "
"name. For example, here's the default value created by :djadmin:`django-"
"admin startproject <startproject>`::"
msgstr ""
"Dans :setting:`MIDDLEWARE`, chaque intergiciel est représenté par une "
"chaîne : le chemin Python complet vers le nom de la classe ou de la fonction "
"de fabrique d'intergiciel. Par exemple, voici la valeur par défaut créée "
"par :djadmin:`django-admin startproject <startproject>`::"

msgid ""
"A Django installation doesn't require any middleware — :setting:`MIDDLEWARE` "
"can be empty, if you'd like — but it's strongly suggested that you at least "
"use :class:`~django.middleware.common.CommonMiddleware`."
msgstr ""
"Une installation de Django n'a pas nécessairement des intergiciels, :setting:"
"`MIDDLEWARE` pouvant très bien être vide si vous le souhaitez, mais il est "
"fortement recommandé d'utiliser au moins :class:`~django.middleware.common."
"CommonMiddleware`."

msgid ""
"The order in :setting:`MIDDLEWARE` matters because a middleware can depend "
"on other middleware. For instance, :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware` stores the authenticated user in the session; "
"therefore, it must run after :class:`~django.contrib.sessions.middleware."
"SessionMiddleware`. See :ref:`middleware-ordering` for some common hints "
"about ordering of Django middleware classes."
msgstr ""
"L'ordre dans :setting:`MIDDLEWARE` a son importance car un intergiciel peut "
"dépendre d'un autre. Par exemple, :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware` stocke l'utilisateur non authentifié dans la "
"session ; il doit donc être exécuté après :class:`~django.contrib.sessions."
"middleware.SessionMiddleware`. Voir :ref:`middleware-ordering` pour d'autres "
"indications utiles concernant l'ordre des classes d'intergiciel de Django."

msgid "Middleware order and layering"
msgstr "Ordre des intergiciels et empilement"

msgid ""
"During the request phase, before calling the view, Django applies middleware "
"in the order it's defined in :setting:`MIDDLEWARE`, top-down."
msgstr ""
"Durant la phase de requête, avant d'appeler la vue, Django applique les "
"intergiciels dans l'ordre où ils sont définis dans :setting:`MIDDLEWARE`, de "
"haut en bas."

msgid ""
"You can think of it like an onion: each middleware class is a \"layer\" that "
"wraps the view, which is in the core of the onion. If the request passes "
"through all the layers of the onion (each one calls ``get_response`` to pass "
"the request in to the next layer), all the way to the view at the core, the "
"response will then pass through every layer (in reverse order) on the way "
"back out."
msgstr ""
"Vous pouvez l'imaginer comme un oignon : chaque classe d'intergiciel est une "
"« couche » qui enveloppe la vue, elle-même le cœur de l'oignon. Si la "
"requête traverse toutes les couches de l'oignon (chacune appelant "
"``get_response`` pour passer la requête à la prochaine couche), jusqu'à "
"atteindre la vue au cœur, la réponse va ensuite traverser elle-même toutes "
"les couches (dans l'ordre inverse) jusqu'à sa sortie du mécanisme."

msgid ""
"If one of the layers decides to short-circuit and return a response without "
"ever calling its ``get_response``, none of the layers of the onion inside "
"that layer (including the view) will see the request or the response. The "
"response will only return through the same layers that the request passed in "
"through."
msgstr ""
"Si l'une des couches décide de court-circuiter et de renvoyer une réponse "
"sans jamais appeler ``get_response``, aucune des couches de l'oignon plus à "
"l'intérieur de cette couche (y compris la vue) ne verra la requête ou la "
"réponse. La réponse ne traversera toujours que les mêmes couches traversées "
"par la requête."

msgid "Other middleware hooks"
msgstr "Autres points d'entrée d'intergiciel"

msgid ""
"Besides the basic request/response middleware pattern described earlier, you "
"can add three other special methods to class-based middleware:"
msgstr ""
"En dehors du modèle basique requête/réponse d'intergiciel présenté "
"précédemment, vous pouvez ajouter trois autres méthodes spéciales aux "
"intergiciels basés sur des classes :"

msgid "``process_view()``"
msgstr "``process_view()``"

msgid ""
"``request`` is an :class:`~django.http.HttpRequest` object. ``view_func`` is "
"the Python function that Django is about to use. (It's the actual function "
"object, not the name of the function as a string.) ``view_args`` is a list "
"of positional arguments that will be passed to the view, and ``view_kwargs`` "
"is a dictionary of keyword arguments that will be passed to the view. "
"Neither ``view_args`` nor ``view_kwargs`` include the first view argument "
"(``request``)."
msgstr ""
"``request`` est un objet :class:`~django.http.HttpRequest`. ``view_func`` et "
"la fonction python que Django s'apprête à utiliser (il s'agit bien de "
"l'objet fonction, pas du nom textuel de la fonction). ``view_args`` est une "
"liste de paramètres positionnels qui seront transmis à la vue, et "
"``view_kwargs`` est un dictionnaire de paramètres nommés qui seront transmis "
"à la vue. Ni ``view_args`` ni ``view_kwargs`` ne comprennent le premier "
"paramètre de la vue (``request``)."

msgid "``process_view()`` is called just before Django calls the view."
msgstr ""
"``process_view()`` est appelée juste avant que Django n'appelle la vue."

msgid ""
"It should return either ``None`` or an :class:`~django.http.HttpResponse` "
"object. If it returns ``None``, Django will continue processing this "
"request, executing any other ``process_view()`` middleware and, then, the "
"appropriate view. If it returns an :class:`~django.http.HttpResponse` "
"object, Django won't bother calling the appropriate view; it'll apply "
"response middleware to that :class:`~django.http.HttpResponse` and return "
"the result."
msgstr ""
"Elle doit renvoyer soit ``None``, soit un objet :class:`~django.http."
"HttpResponse`. Si elle renvoie ``None``, Django continue le traitement de la "
"requête, en appliquant d'éventuels autres intergiciels ``process_view()``, "
"puis exécute la vue appropriée. Si elle renvoie un objet :class:`~django."
"http.HttpResponse`, Django ne prend pas la peine d'appeler la vue "
"correspondante ; il va simplement appliquer les intergiciels de réponse à "
"cet objet :class:`~django.http.HttpResponse` et renvoyer le résultat."

msgid ""
"Accessing :attr:`request.POST <django.http.HttpRequest.POST>` inside "
"middleware before the view runs or in ``process_view()`` will prevent any "
"view running after the middleware from being able to :ref:`modify the upload "
"handlers for the request <modifying_upload_handlers_on_the_fly>`, and should "
"normally be avoided."
msgstr ""
"L'accès à :attr:`request.POST <django.http.HttpRequest.POST>` depuis un "
"intergiciel avant que la vue ne soit exécutée ou dans ``process_view()`` "
"empêche toute vue exécutée après les intergiciels de pouvoir :ref:`modifier "
"les gestionnaires de téléversement de la requête "
"<modifying_upload_handlers_on_the_fly>`, et devrait donc être évité."

msgid ""
"The :class:`~django.middleware.csrf.CsrfViewMiddleware` class can be "
"considered an exception, as it provides the :func:`~django.views.decorators."
"csrf.csrf_exempt` and :func:`~django.views.decorators.csrf.csrf_protect` "
"decorators which allow views to explicitly control at what point the CSRF "
"validation should occur."
msgstr ""
"La classe :class:`~django.middleware.csrf.CsrfViewMiddleware` peut être "
"considérée comme une exception, car elle fournit les décorateurs :func:"
"`~django.views.decorators.csrf.csrf_exempt` et :func:`~django.views."
"decorators.csrf.csrf_protect` qui permettent aux vues de contrôler "
"explicitement le moment de la validation CSRF."

msgid "``process_exception()``"
msgstr "``process_exception()``"

msgid ""
"``request`` is an :class:`~django.http.HttpRequest` object. ``exception`` is "
"an ``Exception`` object raised by the view function."
msgstr ""
"``request`` est un objet :class:`~django.http.HttpRequest`. ``exception`` "
"est un objet ``Exception`` généré par la fonction de vue."

msgid ""
"Django calls ``process_exception()`` when a view raises an exception. "
"``process_exception()`` should return either ``None`` or an :class:`~django."
"http.HttpResponse` object. If it returns an :class:`~django.http."
"HttpResponse` object, the template response and response middleware will be "
"applied and the resulting response returned to the browser. Otherwise, :ref:"
"`default exception handling <error-views>` kicks in."
msgstr ""
"Django appelle ``process_exception()`` lorsqu'une vue génère une exception. "
"``process_exception()`` doit renvoyer ``None`` ou un objet :class:`~django."
"http.HttpResponse`. Si elle renvoie un objet  :class:`~django.http."
"HttpResponse`, les intergiciels de réponse par gabarit et de réponse sont "
"appliqués, et la réponse résultante sera renvoyée au navigateur. Sinon, la :"
"ref:`gestion par défaut des exceptions <error-views>` intervient."

msgid ""
"Again, middleware are run in reverse order during the response phase, which "
"includes ``process_exception``. If an exception middleware returns a "
"response, the ``process_exception`` methods of the middleware classes above "
"that middleware won't be called at all."
msgstr ""
"Encore une fois, les intergiciels sont exécutés dans l'ordre inverse lors de "
"la phase de réponse, ce qui comprend ``process_exception``. Si un "
"intergiciel d'exception renvoie une réponse, les méthodes "
"``process_exception`` des classes d'intergiciels situées au-dessus ne seront "
"pas du tout appelées."

msgid "``process_template_response()``"
msgstr "``process_template_response()``"

msgid ""
"``request`` is an :class:`~django.http.HttpRequest` object. ``response`` is "
"the :class:`~django.template.response.TemplateResponse` object (or "
"equivalent) returned by a Django view or by a middleware."
msgstr ""
"``request`` est un objet :class:`~django.http.HttpRequest`. ``response`` est "
"l'objet :class:`~django.template.response.TemplateResponse` (ou équivalent) "
"renvoyé par une vue Django ou par un intergiciel."

msgid ""
"``process_template_response()`` is called just after the view has finished "
"executing, if the response instance has a ``render()`` method, indicating "
"that it is a :class:`~django.template.response.TemplateResponse` or "
"equivalent."
msgstr ""
"``process_template_response()`` est appelée juste après la fin de "
"l'exécution de la vue, pour autant que l'instance réponse possède une "
"méthode ``render()``, ce qui laisse penser qu'il s'agit d'un objet :class:"
"`~django.template.response.TemplateResponse` ou d'un équivalent."

msgid ""
"It must return a response object that implements a ``render`` method. It "
"could alter the given ``response`` by changing ``response.template_name`` "
"and ``response.context_data``, or it could create and return a brand-new :"
"class:`~django.template.response.TemplateResponse` or equivalent."
msgstr ""
"Elle doit renvoyer un objet réponse qui implémente une méthode ``render``. "
"Elle peut modifier la réponse donnée en changeant ``response.template_name`` "
"et ``response.context_data``, ou elle peut créer et renvoyer une toute "
"nouvelle classe :class:`~django.template.response.TemplateResponse` ou un "
"équivalent."

msgid ""
"You don't need to explicitly render responses -- responses will be "
"automatically rendered once all template response middleware has been called."
msgstr ""
"Il n'est pas nécessaire d'effectuer explicitement le rendu des réponses, "
"celles-ci étant automatiquement « rendues » après que tous les intergiciels "
"de réponse ont été appelés."

msgid ""
"Middleware are run in reverse order during the response phase, which "
"includes ``process_template_response()``."
msgstr ""
"Les intergiciels sont exécutés dans l'ordre inverse lors de la phase de "
"réponse, ce qui inclut ``process_template_response()``."

msgid "Dealing with streaming responses"
msgstr "Gestion des réponses en flux"

msgid ""
"Unlike :class:`~django.http.HttpResponse`, :class:`~django.http."
"StreamingHttpResponse` does not have a ``content`` attribute. As a result, "
"middleware can no longer assume that all responses will have a ``content`` "
"attribute. If they need access to the content, they must test for streaming "
"responses and adjust their behavior accordingly::"
msgstr ""
"Au contraire de :class:`~django.http.HttpResponse`, :class:`~django.http."
"StreamingHttpResponse` ne possède pas d'attribut ``content``. En "
"conséquence, les intergiciels ne peuvent plus compter sur le fait que toutes "
"les réponses possèdent un attribut ``content``. S'ils ont besoin d'accéder "
"au contenu, ils doivent savoir s'ils ont affaire avec une réponse de type "
"flux (streaming) et ajuster leur comportement en fonction de cela ::"

msgid ""
"``streaming_content`` should be assumed to be too large to hold in memory. "
"Response middleware may wrap it in a new generator, but must not consume it. "
"Wrapping is typically implemented as follows::"
msgstr ""
"Il faut toujours partir du principe que ``streaming_content`` est trop "
"volumineux pour être stocké en mémoire. Les intergiciels de réponse peuvent "
"l'adapter dans un nouveau générateur, mais ils ne devraient pas le "
"consommer. L'adaptation s'implémente typiquement de cette façon ::"

msgid ""
":class:`~django.http.StreamingHttpResponse` allows both synchronous and "
"asynchronous iterators. The wrapping function must match. Check :attr:"
"`StreamingHttpResponse.is_async <django.http.StreamingHttpResponse."
"is_async>` if your middleware needs to support both types of iterator."
msgstr ""
":class:`~django.http.StreamingHttpResponse` autorise à la fois les "
"itérateurs synchrones et asynchrones. La fonction enveloppeuse doit "
"correspondre. Vérifiez :attr:`StreamingHttpResponse.is_async <django.http."
"StreamingHttpResponse.is_async>` si votre intergiciel doit prendre en charge "
"les deux types d'itérateur."

msgid ""
"Django automatically converts exceptions raised by the view or by middleware "
"into an appropriate HTTP response with an error status code. :ref:`Certain "
"exceptions <error-views>` are converted to 4xx status codes, while an "
"unknown exception is converted to a 500 status code."
msgstr ""
"Django convertit automatiquement les exceptions produites par la vue ou par "
"l'intergiciel en une réponse HTTP appropriée avec un code de statut "
"d'erreur. :ref:`Certaine exceptions <error-views>` sont converties en codes "
"de statut 4xx, alors qu'une exception inconnue est convertie en un code de "
"statut 500."

msgid ""
"This conversion takes place before and after each middleware (you can think "
"of it as the thin film in between each layer of the onion), so that every "
"middleware can always rely on getting some kind of HTTP response back from "
"calling its ``get_response`` callable. Middleware don't need to worry about "
"wrapping their call to ``get_response`` in a ``try/except`` and handling an "
"exception that might have been raised by a later middleware or the view. "
"Even if the very next middleware in the chain raises an :class:`~django.http."
"Http404` exception, for example, your middleware won't see that exception; "
"instead it will get an :class:`~django.http.HttpResponse` object with a :"
"attr:`~django.http.HttpResponse.status_code` of 404."
msgstr ""
"Cette conversion a lieu avant et après chaque intergiciel (vous pouvez vous "
"représenter cela comme la fine peau entre chaque couche de l'oignon), afin "
"que chaque intergiciel puisse toujours compter sur l'obtention d'un certain "
"type de réponse HTTP en retour de son appel à ``get_response``. Les "
"intergiciels n'ont pas besoin se se soucier d'envelopper leur appel à "
"``get_response`` dans un bloc ``try/except`` pour gérer une exception qui "
"aurait pu être générée par un intergiciel suivant ou par la vue. Même si "
"l'intergiciel suivant dans la chaîne génère une exception :class:`~django."
"http.Http404`, par exemple, votre intergiciel ne verra pas cette exception ; "
"il obtiendra à la place un objet :class:`~django.http.HttpResponse` avec un "
"code :attr:`~django.http.HttpResponse.status_code` 404."

msgid ""
"You can set :setting:`DEBUG_PROPAGATE_EXCEPTIONS` to ``True`` to skip this "
"conversion and propagate exceptions upward."
msgstr ""
"Vous pouvez définir :setting:`DEBUG_PROPAGATE_EXCEPTIONS` à ``True`` pour "
"omettre cette conversion et propager les exceptions au niveau supérieur."

msgid ""
"Middleware can support any combination of synchronous and asynchronous "
"requests. Django will adapt requests to fit the middleware's requirements if "
"it cannot support both, but at a performance penalty."
msgstr ""
"Les intergiciels peuvent prendre en charge n'importe quelle combinaison de "
"requêtes synchrones et asynchrones. Django adapte les requêtes pour "
"correspondre aux exigences des intergiciels si ceux-ci ne gèrent pas les "
"deux types de requêtes, mais avec une baisse de performance."

msgid ""
"By default, Django assumes that your middleware is capable of handling only "
"synchronous requests. To change these assumptions, set the following "
"attributes on your middleware factory function or class:"
msgstr ""
"Par défaut, Django part du principe qu'un intergiciel n'est capable de "
"traiter que des requêtes synchrones. Pour modifier ce présupposé, définissez "
"les attributs suivants sur la classe ou la fonction fabriquante "
"d'intergiciel :"

msgid ""
"``sync_capable`` is a boolean indicating if the middleware can handle "
"synchronous requests. Defaults to ``True``."
msgstr ""
"``sync_capable`` est une variable booléenne indiquant si l'intergiciel peut "
"gérer des requêtes synchrones. Vaut ``True`` par défaut."

msgid ""
"``async_capable`` is a boolean indicating if the middleware can handle "
"asynchronous requests. Defaults to ``False``."
msgstr ""
"``async_capable`` est une variable booléenne indiquant si l'intergiciel peut "
"gérer des requêtes asynchrones. Vaut ``False`` par défaut."

msgid ""
"If your middleware has both ``sync_capable = True`` and ``async_capable = "
"True``, then Django will pass it the request without converting it. In this "
"case, you can work out if your middleware will receive async requests by "
"checking if the ``get_response`` object you are passed is a coroutine "
"function, using ``asgiref.sync.iscoroutinefunction``."
msgstr ""
"Si un intergiciel possède à la fois ``sync_capable = True`` et "
"``async_capable = True``,  Django lui transmet la requête sans la modifier. "
"Dans ce cas, l'intergiciel peut savoir si la requête qu'il reçoit est "
"asynchrone ou pas en vérifiant si l'objet ``get_response`` qu'il reçoit est "
"une fonction coroutine, à l'aide de ``asgiref.sync.iscoroutinefunction``."

msgid ""
"The ``django.utils.decorators`` module contains :func:`~django.utils."
"decorators.sync_only_middleware`, :func:`~django.utils.decorators."
"async_only_middleware`, and :func:`~django.utils.decorators."
"sync_and_async_middleware` decorators that allow you to apply these flags to "
"middleware factory functions."
msgstr ""
"Le module ``django.utils.decorators`` contient les décorateurs :func:"
"`~django.utils.decorators.sync_only_middleware`, :func:`~django.utils."
"decorators.async_only_middleware` et :func:`~django.utils.decorators."
"sync_and_async_middleware` qui permettent d'attribuer les drapeaux adéquats "
"aux fonctions fabriquantes d'intergiciels."

msgid ""
"The returned callable must match the sync or async nature of the "
"``get_response`` method. If you have an asynchronous ``get_response``, you "
"must return a coroutine function (``async def``)."
msgstr ""
"L'objet exécutable renvoyé doit correspondre à la nature synchrone ou "
"asynchrone de la méthode ``get_response``. Si vous recevez un "
"``get_response`` asynchrone, vous devez renvoyer une fonction coroutine "
"(``async def``)."

msgid ""
"``process_view``, ``process_template_response`` and ``process_exception`` "
"methods, if they are provided, should also be adapted to match the sync/"
"async mode. However, Django will individually adapt them as required if you "
"do not, at an additional performance penalty."
msgstr ""
"Les méthodes ``process_view``, ``process_template_response`` et "
"``process_exception``, quand elles sont présentes, doivent aussi être "
"adaptées pour les modes synchrones/asynchrones. Cependant, Django les adapte "
"individuellement si vous ne le faites pas, mais avec une perte de "
"performance supplémentaire."

msgid ""
"Here's an example of how to create a middleware function that supports both::"
msgstr ""
"Voici un exemple de la manière de créer une fonction d'intergiciel qui prend "
"en charge les deux modes ::"

msgid ""
"If you declare a hybrid middleware that supports both synchronous and "
"asynchronous calls, the kind of call you get may not match the underlying "
"view. Django will optimize the middleware call stack to have as few sync/"
"async transitions as possible."
msgstr ""
"Si vous déclarez un intergiciel hybride qui prend en charge à la fois les "
"appels synchrones et asynchrones, le type d'appel que vous obtenez pourrait "
"ne pas correspondre à la vue sous-jacente. Django optimise la pile d'appel "
"des intergiciels pour qu'il y ait le moins de transitions synchrones/"
"asynchrones que possible."

msgid ""
"Thus, even if you are wrapping an async view, you may be called in sync mode "
"if there is other, synchronous middleware between you and the view."
msgstr ""
"Ainsi, même si vous enveloppez une vue asynchrone, elle pourrait être "
"appelée en mode synchrone s'il y a d'autres intergiciels synchrones entre "
"son exécution et la vue."

msgid ""
"When using an asynchronous class-based middleware, you must ensure that "
"instances are correctly marked as coroutine functions::"
msgstr ""
"Lorsque vous utilisez un intergiciel asynchrone basé sur une classe, vous "
"devez vous assurer que les instances sont correctement marquées comme des "
"fonctions coroutines ::"

msgid "Upgrading pre-Django 1.10-style middleware"
msgstr "Mise à jour d'intergiciels écrits avant Django 1.10"

msgid ""
"Django provides ``django.utils.deprecation.MiddlewareMixin`` to ease "
"creating middleware classes that are compatible with both :setting:"
"`MIDDLEWARE` and the old ``MIDDLEWARE_CLASSES``, and support synchronous and "
"asynchronous requests. All middleware classes included with Django are "
"compatible with both settings."
msgstr ""
"Django fournit ``django.utils.deprecation.MiddlewareMixin`` pour faciliter "
"la création de classes d'intergiciel qui sont compatibles à la fois avec :"
"setting:`MIDDLEWARE` et l'ancien ``MIDDLEWARE_CLASSES``, et qui prennent en "
"charge les requêtes synchrones et asynchrones. Toutes les classes "
"d'intergiciel incluses dans Django sont compatibles avec les deux réglages."

msgid ""
"The mixin provides an ``__init__()`` method that requires a ``get_response`` "
"argument and stores it in ``self.get_response``."
msgstr ""
"Cette classe « mixin » fournit une méthode ``__init__()`` exigeant un "
"paramètre ``get_response`` et le stockant dans ``self.get_response``."

msgid "The ``__call__()`` method:"
msgstr "La méthode ``__call__()``:"

msgid "Calls ``self.process_request(request)`` (if defined)."
msgstr "Appelle ``self.process_request(request)`` (si elle est définie)."

msgid ""
"Calls ``self.get_response(request)`` to get the response from later "
"middleware and the view."
msgstr ""
"Appelle ``self.get_response(request)`` pour obtenir la réponse du dernier "
"intergiciel et de la vue."

msgid "Calls ``self.process_response(request, response)`` (if defined)."
msgstr ""
"Appelle ``self.process_response(request, response)`` (si elle est définie)."

msgid "Returns the response."
msgstr "Renvoie la réponse."

msgid ""
"If used with ``MIDDLEWARE_CLASSES``, the ``__call__()`` method will never be "
"used; Django calls ``process_request()`` and ``process_response()`` directly."
msgstr ""
"Quand elle est utilisée avec ``MIDDLEWARE_CLASSES``, la méthode "
"``__call__()`` ne sera jamais utilisée ; Django appelle directement "
"``process_request()`` et ``process_response()``."

msgid ""
"In most cases, inheriting from this mixin will be sufficient to make an old-"
"style middleware compatible with the new system with sufficient backwards-"
"compatibility. The new short-circuiting semantics will be harmless or even "
"beneficial to the existing middleware. In a few cases, a middleware class "
"may need some changes to adjust to the new semantics."
msgstr ""
"Dans la plupart des cas, l'héritage de cette classe « mixin » suffit à "
"rendre compatible un intergiciel ancien style avec le nouveau système avec "
"suffisamment de rétro-compatibilité. La nouvelle sémantique de court-"
"circuitage ne fera pas de mal ou sera même avantageuse pour l'intergiciel "
"existant. Dans quelques cas, une classe d'intergiciel pourrait avoir besoin "
"de certains changements pour s'ajuster à la nouvelle sémantique."

msgid ""
"These are the behavioral differences between using :setting:`MIDDLEWARE` and "
"``MIDDLEWARE_CLASSES``:"
msgstr ""
"Voici les différences de comportement entre l'utilisation de :setting:"
"`MIDDLEWARE` et de ``MIDDLEWARE_CLASSES``:"

msgid ""
"Under ``MIDDLEWARE_CLASSES``, every middleware will always have its "
"``process_response`` method called, even if an earlier middleware short-"
"circuited by returning a response from its ``process_request`` method. "
"Under :setting:`MIDDLEWARE`, middleware behaves more like an onion: the "
"layers that a response goes through on the way out are the same layers that "
"saw the request on the way in. If a middleware short-circuits, only that "
"middleware and the ones before it in :setting:`MIDDLEWARE` will see the "
"response."
msgstr ""
"Avec ``MIDDLEWARE_CLASSES``, chaque intergiciel verra toujours sa méthode "
"``process_response`` appelée, même si un intergiciel précédent a court-"
"circuité le processus en renvoyant une réponse de sa méthode "
"``process_request``. Avec :setting:`MIDDLEWARE`, les intergiciels se "
"comportent plus comme un oignon : les couches que parcourt une réponse "
"jusqu'à sa sortie sont les mêmes que la requête a vu passer dans le sens "
"inverse. Si un intergiciel court-circuite, seul cet intergiciel et ceux qui "
"le précèdent dans :setting:`MIDDLEWARE` verront passer la réponse."

msgid ""
"Under ``MIDDLEWARE_CLASSES``, ``process_exception`` is applied to exceptions "
"raised from a middleware ``process_request`` method. Under :setting:"
"`MIDDLEWARE`, ``process_exception`` applies only to exceptions raised from "
"the view (or from the ``render`` method of a :class:`~django.template."
"response.TemplateResponse`). Exceptions raised from a middleware are "
"converted to the appropriate HTTP response and then passed to the next "
"middleware."
msgstr ""
"Avec ``MIDDLEWARE_CLASSES``, ``process_exception`` est appliquée aux "
"exceptions générées depuis une méthode ``process_request`` d'intergiciel. "
"Avec :setting:`MIDDLEWARE`, ``process_exception`` ne s'applique qu'aux "
"exceptions générées dans la vue (ou depuis la méthode ``render`` d'une "
"réponse :class:`~django.template.response.TemplateResponse`). Les exceptions "
"générées depuis un intergiciel sont converties en une réponse HTTP "
"appropriée puis transmises à l'intergiciel suivant."

msgid ""
"Under ``MIDDLEWARE_CLASSES``, if a ``process_response`` method raises an "
"exception, the ``process_response`` methods of all earlier middleware are "
"skipped and a ``500 Internal Server Error`` HTTP response is always returned "
"(even if the exception raised was e.g. an :class:`~django.http.Http404`). "
"Under :setting:`MIDDLEWARE`, an exception raised from a middleware will "
"immediately be converted to the appropriate HTTP response, and then the next "
"middleware in line will see that response. Middleware are never skipped due "
"to a middleware raising an exception."
msgstr ""
"Avec ``MIDDLEWARE_CLASSES``, si une méthode ``process_response`` génère une "
"exception, les méthodes ``process_response`` de tous les intergiciels "
"précédents sont omises et une réponse HTTP ``500 erreur de serveur interne`` "
"est toujours renvoyée (même si l'exception générée était par exemple :class:"
"`~django.http.Http404`). Avec :setting:`MIDDLEWARE`, une exception générée "
"depuis un intergiciel est immédiatement convertie en une réponse HTTP "
"appropriée, puis le prochain intergiciel dans la chaîne verra la réponse. "
"Les intergiciels ne sont jamais outrepassés en raison d'une exception "
"générée dans un autre intergiciel."

msgid "How to use sessions"
msgstr "Utilisation des sessions"

msgid ""
"Django provides full support for anonymous sessions. The session framework "
"lets you store and retrieve arbitrary data on a per-site-visitor basis. It "
"stores data on the server side and abstracts the sending and receiving of "
"cookies. Cookies contain a session ID -- not the data itself (unless you're "
"using the :ref:`cookie based backend<cookie-session-backend>`)."
msgstr ""
"Django prend complètement en charge les sessions anonymes. L'infrastructure "
"des sessions permet de stocker et de récupérer des données arbitraires sur "
"la base « un site-un visiteur ». Les données sont stockées côté serveur ; "
"l'envoi et la réception des cookies sont transparents. Les cookies "
"contiennent un identifiant de session, et non pas les données elles-mêmes "
"(sauf si vous utilisez le :ref:`moteur basé sur les cookies<cookie-session-"
"backend>`)."

msgid "Enabling sessions"
msgstr "Activation des sessions"

msgid ""
"Sessions are implemented via a piece of :doc:`middleware </ref/middleware>`."
msgstr ""
"Les sessions sont implémentées par l'intermédiaire d'un composant :doc:"
"`middleware </ref/middleware>`."

msgid "To enable session functionality, do the following:"
msgstr "Pour activer la fonctionnalité des sessions, faites ce qui suit :"

msgid ""
"Edit the :setting:`MIDDLEWARE` setting and make sure it contains ``'django."
"contrib.sessions.middleware.SessionMiddleware'``. The default ``settings."
"py`` created by ``django-admin startproject`` has ``SessionMiddleware`` "
"activated."
msgstr ""
"Contrôlez que le réglage :setting:`MIDDLEWARE` contient bien ``'django."
"contrib.sessions.middleware.SessionMiddleware'``. Le fichier ``settings.py`` "
"créé par défaut par ``django-admin startproject`` active "
"``SessionMiddleware``."

msgid ""
"If you don't want to use sessions, you might as well remove the "
"``SessionMiddleware`` line from :setting:`MIDDLEWARE` and ``'django.contrib."
"sessions'`` from your :setting:`INSTALLED_APPS`. It'll save you a small bit "
"of overhead."
msgstr ""
"Si vous ne souhaitez pas utiliser les sessions, vous pouvez très bien "
"enlever la ligne ``SessionMiddleware`` de :setting:`MIDDLEWARE` et la ligne "
"``'django.contrib.sessions'`` de :setting:`INSTALLED_APPS`. Cela économisera "
"un peu de travail à Django."

msgid "Configuring the session engine"
msgstr "Configuration du moteur de sessions"

msgid ""
"By default, Django stores sessions in your database (using the model "
"``django.contrib.sessions.models.Session``). Though this is convenient, in "
"some setups it's faster to store session data elsewhere, so Django can be "
"configured to store session data on your filesystem or in your cache."
msgstr ""
"Par défaut, Django stocke les sessions dans la base de données (avec le "
"modèle ``django.contrib.sessions.models.Session``). Bien que cela puisse "
"être pratique, il est plus rapide dans certaines configurations de stocker "
"les données de sessions ailleurs ; il est donc possible de configurer Django "
"pour stocker les données de sessions sur le système de fichiers ou dans un "
"cache."

msgid "Using database-backed sessions"
msgstr "Utilisation des sessions en base de données"

msgid ""
"If you want to use a database-backed session, you need to add ``'django."
"contrib.sessions'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Si vous souhaitez placer le contenu des sessions en base de données, vous "
"devez ajouter ``'django.contrib.sessions'`` dans le réglage :setting:"
"`INSTALLED_APPS`."

msgid ""
"Once you have configured your installation, run ``manage.py migrate`` to "
"install the single database table that stores session data."
msgstr ""
"Après avoir configuré votre installation, lancez ``manage.py migrate`` pour "
"installer l'unique table de base de données qui stocke les données des "
"sessions."

msgid "Using cached sessions"
msgstr "Utilisation des sessions en cache"

msgid ""
"For better performance, you may want to use a cache-based session backend."
msgstr ""
"Pour de meilleures performances, il est recommandé d'utiliser le moteur de "
"sessions basé sur le cache."

msgid ""
"To store session data using Django's cache system, you'll first need to make "
"sure you've configured your cache; see the :doc:`cache documentation </"
"topics/cache>` for details."
msgstr ""
"Pour stocker les données de sessions en utilisant le système de cache de "
"Django, il s'agit d'abord de s'assurer que le cache est configuré ; voir la :"
"doc:`documentation du cache </topics/cache>` pour plus de détails."

msgid ""
"You should only use cache-based sessions if you're using the Memcached or "
"Redis cache backend. The local-memory cache backend doesn't retain data long "
"enough to be a good choice, and it'll be faster to use file or database "
"sessions directly instead of sending everything through the file or database "
"cache backends. Additionally, the local-memory cache backend is NOT multi-"
"process safe, therefore probably not a good choice for production "
"environments."
msgstr ""
"Les données de sessions ne devraient être stockées en cache que quand le "
"moteur de cache Memcached ou Redis est utilisé. Le moteur de cache en "
"mémoire locale ne retient pas assez longtemps les données pour qu'il "
"représente un bon choix, et il est plus rapide d'utiliser directement le "
"moteur de sessions basé sur des fichiers ou sur la base de données que de "
"faire transiter le tout par les moteurs de cache basés sur des fichiers ou "
"sur la base de données. De plus, le moteur de cache en mémoire locale ne "
"gère PAS correctement le mode multi-processus et n'est donc probablement pas "
"un bon choix dans un environnement de production."

msgid ""
"If you have multiple caches defined in :setting:`CACHES`, Django will use "
"the default cache. To use another cache, set :setting:`SESSION_CACHE_ALIAS` "
"to the name of that cache."
msgstr ""
"Si plusieurs caches sont définis dans :setting:`CACHES`, Django utilise le "
"cache par défaut. Pour utiliser un autre cache, définissez :setting:"
"`SESSION_CACHE_ALIAS` avec le nom de ce cache."

msgid ""
"Once your cache is configured, you have to choose between a database-backed "
"cache or a non-persistent cache."
msgstr ""
"Une fois que votre cache est configuré, vous devez choisir entre un cache "
"basé sur la base de données et un cache non persistant."

msgid ""
"The cached database backend (``cached_db``) uses a write-through cache -- "
"session writes are applied to both the database and cache, in that order. If "
"writing to the cache fails, the exception is handled and logged via the :ref:"
"`sessions logger <django-contrib-sessions-logger>`, to avoid failing an "
"otherwise successful write operation."
msgstr ""
"Le moteur basé sur la base de données avec cache (`cached_db``) utilise un "
"cache à écriture immédiate -- les écritures de sessions sont appliquées à la "
"fois à la base de données et au cache, dans cet ordre. Si l'écriture dans le "
"cache échoue, l'exception est interceptée et journalisée via le :ref:"
"`journaliseur des sessions <django-contrib-sessions-logger>`, pour éviter de "
"faire échouer l'opération d'écriture qui s'est fait correctement en base de "
"données."

msgid "Handling and logging of exceptions when writing to the cache was added."
msgstr ""
"Le traitement et la journalisation des exceptions au moment d'écrire dans le "
"cache ont été ajoutés."

msgid ""
"Session reads use the cache, or the database if the data has been evicted "
"from the cache. To use this backend, set :setting:`SESSION_ENGINE` to "
"``\"django.contrib.sessions.backends.cached_db\"``, and follow the "
"configuration instructions for the `using database-backed sessions`_."
msgstr ""
"Les lectures de sessions utilisent d'abord le cache, puis la base de données "
"si les données recherchées ont été évincées du cache. Pour utiliser ce "
"moteur, définissez :setting:`SESSION_ENGINE` à ``\"django.contrib.sessions."
"backends.cached_db\"`` et suivez les instructions de configuration dans "
"`utilisation des sessions stockées en base de données`_."

msgid ""
"The cache backend (``cache``) stores session data only in your cache. This "
"is faster because it avoids database persistence, but you will have to "
"consider what happens when cache data is evicted. Eviction can occur if the "
"cache fills up or the cache server is restarted, and it will mean session "
"data is lost, including logging out users. To use this backend, set :setting:"
"`SESSION_ENGINE` to ``\"django.contrib.sessions.backends.cache\"``."
msgstr ""
"Le moteur de sessions en cache (``cache``) stocke les données des sessions "
"uniquement dans le cache. C'est plus rapide car on évite la persistance en "
"base de données, mais il faut prendre en compte ce qui arrive quand les "
"données du cache sont purgées. La purge peut arriver si le cache est plein "
"ou si le serveur de cache est redémarré, et cela va provoquer la perte des "
"données de sessions, y compris pour les utilisateurs se déconnectant. Pour "
"utiliser ce moteur, définissez :setting:`SESSION_ENGINE` à ``\"django."
"contrib.sessions.backends.cache\"``."

msgid ""
"The cache backend can be made persistent by using a persistent cache, such "
"as Redis with appropriate configuration. But unless your cache is definitely "
"configured for sufficient persistence, opt for the cached database backend. "
"This avoids edge cases caused by unreliable data storage in production."
msgstr ""
"Le moteur en cache peut être rendu persistant en utilisant un cache "
"persistant, tel que Redis avec une configuration appropriée. Mais tant que "
"le cache n'est pas complètement configuré avec la persistance nécessaire, "
"préférez le moteur basé sur la base de données avec cache. Cela évite des "
"cas limites provoqués par un stockage de données non fiable en production."

msgid "Using file-based sessions"
msgstr "Utilisation des sessions basées sur des fichiers"

msgid ""
"To use file-based sessions, set the :setting:`SESSION_ENGINE` setting to "
"``\"django.contrib.sessions.backends.file\"``."
msgstr ""
"Pour utiliser les sessions basées sur des fichiers, définissez le réglage :"
"setting:`SESSION_ENGINE` à ``\"django.contrib.sessions.backends.file\"``."

msgid ""
"You might also want to set the :setting:`SESSION_FILE_PATH` setting (which "
"defaults to output from ``tempfile.gettempdir()``, most likely ``/tmp``) to "
"control where Django stores session files. Be sure to check that your web "
"server has permissions to read and write to this location."
msgstr ""
"Il peut aussi être souhaitable de définir le réglage :setting:"
"`SESSION_FILE_PATH` (dont la valeur par défaut est le résultat de ``tempfile."
"gettempdir()``, généralement ``/tmp``) pour contrôler l'emplacement où "
"Django stocke les fichiers de sessions. Vérifiez que le serveur web dispose "
"des permissions en lecture et écriture à cet endroit."

msgid "Using cookie-based sessions"
msgstr "Utilisation des sessions basées sur les cookies"

msgid ""
"To use cookies-based sessions, set the :setting:`SESSION_ENGINE` setting to "
"``\"django.contrib.sessions.backends.signed_cookies\"``. The session data "
"will be stored using Django's tools for :doc:`cryptographic signing </topics/"
"signing>` and the :setting:`SECRET_KEY` setting."
msgstr ""
"Pour utiliser les sessions basées sur les cookies, définissez le réglage :"
"setting:`SESSION_ENGINE` à ``\"django.contrib.sessions.backends."
"signed_cookies\"``. Les données de sessions seront stockées en utilisant les "
"outils de Django pour la  :doc:`signature cryptographique </topics/signing>` "
"et le réglage :setting:`SECRET_KEY`."

msgid ""
"It's recommended to leave the :setting:`SESSION_COOKIE_HTTPONLY` setting on "
"``True`` to prevent access to the stored data from JavaScript."
msgstr ""
"Il est recommandé de laisser le réglage :setting:`SESSION_COOKIE_HTTPONLY` à "
"la valeur ``True`` pour empêcher l'accès à des données stockées à partir du "
"JavaScript."

msgid "**The session data is signed but not encrypted**"
msgstr "** les données de sessions sont signées mais non chiffrées**"

msgid ""
"When using the cookies backend the session data can be read by the client."
msgstr ""
"Lors de l'utilisation du moteur basé sur les cookies, les données de "
"sessions peuvent être lues par le client."

msgid ""
"A MAC (Message Authentication Code) is used to protect the data against "
"changes by the client, so that the session data will be invalidated when "
"being tampered with. The same invalidation happens if the client storing the "
"cookie (e.g. your user's browser) can't store all of the session cookie and "
"drops data. Even though Django compresses the data, it's still entirely "
"possible to exceed the :rfc:`common limit of 4096 bytes <2965#section-5.3>` "
"per cookie."
msgstr ""
"Un code MAC (Message Authentication Code) est utilisé pour protéger les "
"données contre des modifications par le client, afin que les données de "
"sessions soient caduques quand elles ont été modifiées. La même protection "
"intervient si le client qui stocke le cookie (par ex. le navigateur de "
"l'utilisateur) ne peut pas stocker tout le cookie de session et tronque des "
"données. Même si Django compresse les données, il est toujours possible de "
"dépasser la :rfc:`limite habituelle de 4096 octets <2965#section-5.3>` par "
"cookie."

msgid "**No freshness guarantee**"
msgstr "**Aucune garantie de fraîcheur**"

msgid ""
"Note also that while the MAC can guarantee the authenticity of the data "
"(that it was generated by your site, and not someone else), and the "
"integrity of the data (that it is all there and correct), it cannot "
"guarantee freshness i.e. that you are being sent back the last thing you "
"sent to the client. This means that for some uses of session data, the "
"cookie backend might open you up to `replay attacks`_. Unlike other session "
"backends which keep a server-side record of each session and invalidate it "
"when a user logs out, cookie-based sessions are not invalidated when a user "
"logs out. Thus if an attacker steals a user's cookie, they can use that "
"cookie to login as that user even if the user logs out. Cookies will only be "
"detected as 'stale' if they are older than your :setting:"
"`SESSION_COOKIE_AGE`."
msgstr ""
"Il faut également relever que bien que le code MAC puisse garantir "
"l'authenticité des données (qu'elles ont bien été générées par votre site) "
"ainsi que l'intégrité de ces données (qu'elles sont complètes et correctes), "
"il ne peut pas garantir leur fraîcheur, c'est-à-dire que vous recevez la "
"dernière version que vous avez envoyée au client. Cela signifie que pour "
"certaines utilisations des données de session, le moteur par cookie pourrait "
"vous rendre vulnérable à des `attaques par rejeu`_. Au contraire d'autres "
"moteurs de session qui conservent une version de chaque session du côté "
"serveur et qui les infirment lorsqu'un utilisateur se déconnecte, les "
"sessions basées sur les cookies ne sont pas infirmées lorsqu'un utilisateur "
"se déconnecte. Ainsi, si un attaquant vole un cookie d'utilisateur, il peut "
"utiliser celui-ci pour se connecter sous le nom de cet utilisateur même "
"quand ce dernier s'est déconnecté. Les cookies ne sont considérées comme "
"obsolètes qu'au moment où leur âge dépasse :setting:`SESSION_COOKIE_AGE`."

msgid "**Performance**"
msgstr "**Performance**"

msgid ""
"Finally, the size of a cookie can have an impact on the speed of your site."
msgstr ""
"Finalement, la taille d'un cookie peut influencer la rapidité de votre site."

msgid "Using sessions in views"
msgstr "Utilisation des sessions dans les vues"

msgid ""
"When ``SessionMiddleware`` is activated, each :class:`~django.http."
"HttpRequest` object -- the first argument to any Django view function -- "
"will have a ``session`` attribute, which is a dictionary-like object."
msgstr ""
"Lorsque ``SessionMiddleware`` est actif, chaque objet :class:`~django.http."
"HttpRequest`, le premier paramètre de toute fonction vue de Django, possède "
"un attribut ``session`` qui est un objet de type dictionnaire."

msgid ""
"You can read it and write to ``request.session`` at any point in your view. "
"You can edit it multiple times."
msgstr ""
"Vous pouvez lire et écrire dans ``request.session`` à n'importe quel moment "
"dans votre vue. Vous pouvez le modifier plusieurs fois."

msgid ""
"This is the base class for all session objects. It has the following "
"standard dictionary methods:"
msgstr ""
"C'est la classe de base pour tous les objets session. Elle possède les "
"méthodes de dictionnaire standard suivantes :"

msgid "Example: ``fav_color = request.session['fav_color']``"
msgstr "Exemple : "

msgid "Example: ``request.session['fav_color'] = 'blue'``"
msgstr "Exemple : ``request.session['fav_color'] = 'blue'``"

msgid ""
"Example: ``del request.session['fav_color']``. This raises ``KeyError`` if "
"the given ``key`` isn't already in the session."
msgstr ""
"Exemple : ``del request.session['fav_color']``. Si la clé indiquée ne se "
"trouve pas déjà dans l'objet session, une exception ``KeyError`` est levée."

msgid "Example: ``'fav_color' in request.session``"
msgstr "Exemple : ``'fav_color' in request.session``"

msgid "*Asynchronous version*: ``aget()``"
msgstr "*Version asynchrone*: ``aget()``"

msgid "Example: ``fav_color = request.session.get('fav_color', 'red')``"
msgstr "Exemple : ``fav_color = request.session.get('fav_color', 'red')``"

msgid "``aget()`` function was added."
msgstr "La fonction ``aget()`` a été ajoutée."

msgid "Example: ``await request.session.aset('fav_color', 'red')``"
msgstr "Exemple : ``await request.session.aset('fav_color', 'red')``"

msgid "*Asynchronous version*: ``aupdate()``"
msgstr "*Version asynchrone*: ``aupdate()``"

msgid "Example: ``request.session.update({'fav_color': 'red'})``"
msgstr "Exemple : ``request.session.update({'fav_color': 'red'})``"

msgid "``aupdate()`` function was added."
msgstr "La fonction ``aupdate()`` a été ajoutée."

msgid "*Asynchronous version*: ``apop()``"
msgstr "*Version asynchrone*: ``apop()``"

msgid "Example: ``fav_color = request.session.pop('fav_color', 'blue')``"
msgstr "Exemple : ``fav_color = request.session.pop('fav_color', 'blue')``"

msgid "``apop()`` function was added."
msgstr "La fonction ``apop()`` a été ajoutée."

msgid "*Asynchronous version*: ``akeys()``"
msgstr "*Version asynchrone*: ``akeys()``"

msgid "``akeys()`` function was added."
msgstr "La fonction ``akeys()`` a été ajoutée."

msgid "*Asynchronous version*: ``avalues()``"
msgstr "*Version asynchrone*: ``avalues()``"

msgid "``avalues()`` function was added."
msgstr "La fonction ``avalues()`` a été ajoutée."

msgid "*Asynchronous version*: ``ahas_key()``"
msgstr "*Version asynchrone*: ``ahas_key()``"

msgid "``ahas_key()`` function was added."
msgstr "La fonction ``ahas_key()`` a été ajoutée."

msgid "*Asynchronous version*: ``aitems()``"
msgstr "*Version asynchrone*: ``aitems()``"

msgid "``aitems()`` function was added."
msgstr "La fonction ``aitems()`` a été ajoutée."

msgid "*Asynchronous version*: ``asetdefault()``"
msgstr "*Version asynchrone*: ``asetdefault()``"

msgid "``asetdefault()`` function was added."
msgstr "La fonction ``asetdefault()`` a été ajoutée."

msgid "It also has these methods:"
msgstr "Elle possède aussi ces méthodes :"

msgid "*Asynchronous version*: ``aflush()``"
msgstr "*Version asynchrone*: ``aflush()``"

msgid ""
"Deletes the current session data from the session and deletes the session "
"cookie. This is used if you want to ensure that the previous session data "
"can't be accessed again from the user's browser (for example, the :func:"
"`django.contrib.auth.logout()` function calls it)."
msgstr ""
"Supprime les données de la session actuelle et supprime le cookie de "
"session. C'est utile pour s'assurer que les données de session précédentes "
"ne puissent plus être relues par le navigateur de l'utilisateur (par "
"exemple, c'est ce que fait :func:`django.contrib.auth.logout()`)."

msgid "``aflush()`` function was added."
msgstr "La fonction ``aflush()`` a été ajoutée."

msgid "*Asynchronous version*: ``aset_test_cookie()``"
msgstr "*Version asynchrone* : ``aset_test_cookie()``"

msgid ""
"Sets a test cookie to determine whether the user's browser supports cookies. "
"Due to the way cookies work, you won't be able to test this until the user's "
"next page request. See `Setting test cookies`_ below for more information."
msgstr ""
"Crée un cookie de test pour déterminer si le navigateur de l'utilisateur "
"prend en charge les cookies. En raison du fonctionnement des cookies, vous "
"ne pourrez pas déterminer cela avant la prochaine requête de l'utilisateur. "
"Consultez `Génération de cookies de test`_ ci-dessous pour obtenir plus "
"d'informations."

msgid "``aset_test_cookie()`` function was added."
msgstr "La fonction ``aset_test_cookie()`` a été ajoutée."

msgid "*Asynchronous version*: ``atest_cookie_worked()``"
msgstr "*Version asynchrone* : ``atest_cookie_worked()``"

msgid ""
"Returns either ``True`` or ``False``, depending on whether the user's "
"browser accepted the test cookie. Due to the way cookies work, you'll have "
"to call ``set_test_cookie()`` or ``aset_test_cookie()`` on a previous, "
"separate page request. See `Setting test cookies`_ below for more "
"information."
msgstr ""
"Renvoie ``True`` ou ``False``, selon que le navigateur de l'utilisateur a "
"accepté le cookie de test ou non. En raison du fonctionnement des cookies, "
"vous aurez dû appeler ``set_test_cookie()`` ou ``aset_test_cookie()`` sur "
"une requête de page précédente. Consultez `Génération de cookies de test`_ "
"ci-dessous pour obtenir plus d'informations."

msgid "``atest_cookie_worked()`` function was added."
msgstr "La fonction ``atest_cookie_worked()`` a été ajoutée."

msgid "*Asynchronous version*: ``adelete_test_cookie()``"
msgstr "*Version asynchrone* : ``adelete_test_cookie()``"

msgid "Deletes the test cookie. Use this to clean up after yourself."
msgstr "Supprime le cookie de test. Utilisé pour faire le ménage derrière soi."

msgid "``adelete_test_cookie()`` function was added."
msgstr "La fonction ``adelete_test_cookie()`` a été ajoutée."

msgid ""
"Returns the value of the setting :setting:`SESSION_COOKIE_AGE`. This can be "
"overridden in a custom session backend."
msgstr ""
"Renvoie la valeur du réglage :setting:`SESSION_COOKIE_AGE`. Ceci peut être "
"surchargé dans un moteur de session personnalisé."

msgid "*Asynchronous version*: ``aset_expiry()``"
msgstr "*Version asynchrone*: ``aset_expiry()``"

msgid ""
"Sets the expiration time for the session. You can pass a number of different "
"values:"
msgstr ""
"Définit la durée d'expiration de la session. Il est possible de passer "
"plusieurs valeurs différentes :"

msgid ""
"If ``value`` is an integer, the session will expire after that many seconds "
"of inactivity. For example, calling ``request.session.set_expiry(300)`` "
"would make the session expire in 5 minutes."
msgstr ""
"Si ``value`` est un nombre entier, la session va expirer après ce nombre de "
"secondes d'inactivité. Par exemple, l'appel de ``request.session."
"set_expiry(300)`` va provoquer l'expiration de la session dans 5 minutes."

msgid ""
"If ``value`` is a ``datetime`` or ``timedelta`` object, the session will "
"expire at that specific date/time."
msgstr ""
"Si ``value`` est un objet ``datetime`` (date/heure) or ``timedelta`` "
"(différence de temps), la session va expirer au moment précis correspondant "
"à la valeur transmise."

msgid ""
"If ``value`` is ``0``, the user's session cookie will expire when the user's "
"web browser is closed."
msgstr ""
"Si la ``value`` est ``0``, le cookie de session de l'utilisateur va expirer "
"au moment où celui-ci ferme son navigateur web."

msgid ""
"If ``value`` is ``None``, the session reverts to using the global session "
"expiry policy."
msgstr ""
"Si ``value`` est ``None``, la session se fie à nouveau à la politique "
"d'expiration globale des sessions."

msgid ""
"Reading a session is not considered activity for expiration purposes. "
"Session expiration is computed from the last time the session was *modified*."
msgstr ""
"La lecture d'une session n'est pas considérée comme une activité en regard "
"de la notion d'expiration. L'expiration de la session est calculée à partir "
"du moment de la dernière *modification* de la session."

msgid "``aset_expiry()`` function was added."
msgstr "La fonction ``aset_expiry()`` a été ajoutée."

msgid "*Asynchronous version*: ``aget_expiry_age()``"
msgstr "*Version asynchrone*: ``aget_expiry_age()``"

msgid ""
"Returns the number of seconds until this session expires. For sessions with "
"no custom expiration (or those set to expire at browser close), this will "
"equal :setting:`SESSION_COOKIE_AGE`."
msgstr ""
"Renvoie le nombre de secondes restant jusqu'à l'expiration de la session. "
"Pour les sessions sans expiration particulière (ou celles qui expirent à la "
"fermeture du navigateur), cette valeur sera égale à :setting:"
"`SESSION_COOKIE_AGE`."

msgid "This function accepts two optional keyword arguments:"
msgstr "Cette fonction accepte deux paramètres nommés facultatifs :"

msgid ""
"``modification``: last modification of the session, as a :class:`~datetime."
"datetime` object. Defaults to the current time."
msgstr ""
"``modification``: dernière modification de la session, comme objet :class:"
"`~datetime.datetime`. Par défaut, c'est l'heure actuelle."

msgid ""
"``expiry``: expiry information for the session, as a :class:`~datetime."
"datetime` object, an :class:`int` (in seconds), or ``None``. Defaults to the "
"value stored in the session by :meth:`set_expiry`/:meth:`aset_expiry`, if "
"there is one, or ``None``."
msgstr ""
"``expiry``: information d'expiration de la session, comme objet :class:"
"`~datetime.datetime`, valeur :class:`int` (en secondes) ou ``None``. Par "
"défaut, cette valeur est égale à celle stockée dans la session par :meth:"
"`set_expiry`/:meth:`aset_expiry`, le cas échéant, sinon ``None``."

msgid ""
"This method is used by session backends to determine the session expiry age "
"in seconds when saving the session. It is not really intended for usage "
"outside of that context."
msgstr ""
"Cette méthode est utilisée par les moteurs de session pour déterminer l'âge "
"d'expiration de session en secondes au moment d'enregistrer la session. Elle "
"n'est pas vraiment appropriée pour des utilisations en dehors de ce contexte."

msgid ""
"In particular, while it is **possible** to determine the remaining lifetime "
"of a session **just when** you have the correct ``modification`` value "
"**and** the ``expiry`` is set as a ``datetime`` object, where you do have "
"the ``modification`` value, it is more straight-forward to calculate the "
"expiry by-hand::"
msgstr ""
"En particulier, bien qu'il soit **possible** de déterminer la durée de vie "
"restante d'une session **juste au moment** où vous avez la valeur "
"``modification`` correcte **et** que ``expiry`` est défini comme objet "
"``datetime``, dans le cas où vous disposez de la valeur ``modification``, il "
"est plus direct de calculer l'expiration à la main ::"

msgid "``aget_expiry_age()`` function was added."
msgstr "La fonction ``aget_expiry_age()`` a été ajoutée."

msgid "*Asynchronous version*: ``aget_expiry_date()``"
msgstr "*Version asynchrone*: ``aget_expiry_date()``"

msgid ""
"Returns the date this session will expire. For sessions with no custom "
"expiration (or those set to expire at browser close), this will equal the "
"date :setting:`SESSION_COOKIE_AGE` seconds from now."
msgstr ""
"Renvoie la date à laquelle la session expire. Pour les sessions sans "
"expiration particulière (ou celles qui expirent à la fermeture du "
"navigateur), cette valeur sera égale à :setting:`SESSION_COOKIE_AGE` "
"secondes à partir de maintenant."

msgid ""
"This function accepts the same keyword arguments as :meth:`get_expiry_age`, "
"and similar notes on usage apply."
msgstr ""
"Cette fonction accepte les mêmes paramètres mots-clés que :meth:"
"`get_expiry_age`, et les mêmes notes sur son utilisation s'appliquent."

msgid "``aget_expiry_date()`` function was added."
msgstr "La fonction ``aget_expiry_date()`` a été ajoutée."

msgid "*Asynchronous version*: ``aget_expire_at_browser_close()``"
msgstr "*Version asynchrone*: ``aget_expire_at_browser_close()``"

msgid ""
"Returns either ``True`` or ``False``, depending on whether the user's "
"session cookie will expire when the user's web browser is closed."
msgstr ""
"Renvoie ``True`` ou ``False`` selon que le cookie de session utilisateur "
"expire au moment de la fermeture du navigateur web de l'utilisateur ou non."

msgid "``aget_expire_at_browser_close()`` function was added."
msgstr "La fonction ``aget_expire_at_browser_close()`` a été ajoutée."

msgid "*Asynchronous version*: ``aclear_expired()``"
msgstr "*Version asynchrone*: ``aclear_expired()``"

msgid ""
"Removes expired sessions from the session store. This class method is called "
"by :djadmin:`clearsessions`."
msgstr ""
"Supprime les sessions expirées du stockage des sessions. Cette méthode de "
"classe est appelée par :djadmin:`clearsessions`."

msgid "``aclear_expired()`` function was added."
msgstr "La fonction ``aclear_expired()`` a été ajoutée."

msgid "*Asynchronous version*: ``acycle_key()``"
msgstr "*Version asynchrone*: ``acycle_key()``"

msgid ""
"Creates a new session key while retaining the current session data. :func:"
"`django.contrib.auth.login()` calls this method to mitigate against session "
"fixation."
msgstr ""
"Crée une nouvelle clé de session tout en conservant les données de session "
"actuelles. :func:`django.contrib.auth.login()` appelle cette méthode pour "
"lutter contre les attaques par fixation de session."

msgid "``acycle_key()`` function was added."
msgstr "La fonction ``acycle_key()`` a été ajoutée."

msgid "Session serialization"
msgstr "Sérialisation des sessions"

msgid ""
"By default, Django serializes session data using JSON. You can use the :"
"setting:`SESSION_SERIALIZER` setting to customize the session serialization "
"format. Even with the caveats described in :ref:`custom-serializers`, we "
"highly recommend sticking with JSON serialization *especially if you are "
"using the cookie backend*."
msgstr ""
"Par défaut, Django sérialise les données de session en JSON. Vous pouvez "
"utiliser le réglage :setting:`SESSION_SERIALIZER` pour personnaliser le "
"format de sérialisation de session. Même en considérant les limites décrites "
"dans :ref:`custom-serializers`, nous recommandons fortement d'en rester à la "
"sérialisation JSON, *d'autant plus si vous utilisez le moteur cookie*."

msgid ""
"For example, here's an attack scenario if you use :mod:`pickle` to serialize "
"session data. If you're using the :ref:`signed cookie session backend "
"<cookie-session-backend>` and :setting:`SECRET_KEY` (or any key of :setting:"
"`SECRET_KEY_FALLBACKS`) is known by an attacker (there isn't an inherent "
"vulnerability in Django that would cause it to leak), the attacker could "
"insert a string into their session which, when unpickled, executes arbitrary "
"code on the server. The technique for doing so is simple and easily "
"available on the internet. Although the cookie session storage signs the "
"cookie-stored data to prevent tampering, a :setting:`SECRET_KEY` leak "
"immediately escalates to a remote code execution vulnerability."
msgstr ""
"Par exemple, voici un scénario d'attaque si vous utilisez :mod:`pickle` pour "
"sérialiser les données de session. Si vous utilisez le :ref:`moteur de "
"session basé sur des cookies signés<cookie-session-backend>` et que la clé :"
"setting:`SECRET_KEY` (ou une autre clé de :setting:`SECRET_KEY_FALLBACKS`) "
"est connue d'un attaquant (il n'y a aucune vulnérabilité connue dans Django "
"qui divulguerait cette information), cet attaquant pourrait insérer une "
"chaîne dans la session, ce qui pourrait conduire, au moment de la "
"désérialisation (« unpickling »), à une exécution de code arbitraire sur le "
"serveur. La technique pour faire cela est simple et aisément disponible sur "
"Internet. Même si le stockage de sessions par cookies signe les données de "
"session pour empêcher leur falsification, une divulgation de la clé :setting:"
"`SECRET_KEY` crée immédiatement une vulnérabilité d'exécution de code à "
"distance."

msgid "Bundled serializers"
msgstr "Sérialiseurs intégrés"

msgid ""
"A wrapper around the JSON serializer from :mod:`django.core.signing`. Can "
"only serialize basic data types."
msgstr ""
"Un adaptateur du sérialiseur JSON provenant de :mod:`django.core.signing`. "
"Ne peut sérialiser que des types de données simples."

msgid ""
"In addition, as JSON supports only string keys, note that using non-string "
"keys in ``request.session`` won't work as expected:"
msgstr ""
"De plus, comme JSON ne gère que des clés textuelles, il faut savoir que des "
"clés non textuelles dans ``request.session`` ne fonctionneront pas comme "
"prévu :"

msgid ""
"Similarly, data that can't be encoded in JSON, such as non-UTF8 bytes like "
"``'\\xd9'`` (which raises :exc:`UnicodeDecodeError`), can't be stored."
msgstr ""
"De même, les données qui ne peuvent pas être codées en JSON telles que des "
"octets non UTF-8 comme ``'\\xd9'`` (ce qui produit :exc:"
"`UnicodeDecodeError`), ne peuvent pas être stockées."

msgid ""
"See the :ref:`custom-serializers` section for more details on limitations of "
"JSON serialization."
msgstr ""
"Consultez la section :ref:`custom-serializers` pour plus de détails sur les "
"limites de la sérialisation JSON."

msgid "Write your own serializer"
msgstr "Écriture de son propre sérialiseur"

msgid ""
"Note that the :class:`~django.contrib.sessions.serializers.JSONSerializer` "
"cannot handle arbitrary Python data types. As is often the case, there is a "
"trade-off between convenience and security. If you wish to store more "
"advanced data types including ``datetime`` and ``Decimal`` in JSON backed "
"sessions, you will need to write a custom serializer (or convert such values "
"to a JSON serializable object before storing them in ``request.session``). "
"While serializing these values is often straightforward (:class:`~django."
"core.serializers.json.DjangoJSONEncoder` may be helpful), writing a decoder "
"that can reliably get back the same thing that you put in is more fragile. "
"For example, you run the risk of returning a ``datetime`` that was actually "
"a string that just happened to be in the same format chosen for "
"``datetime``\\s)."
msgstr ""
"Notez que :class:`~django.contrib.sessions.serializers.JSONSerializer` ne "
"sait pas traiter n'importe quel type de donnée Python. Comme c'est souvent "
"le cas, il faut contrebalancer commodité et sécurité. Si vous souhaitez "
"stocker des types de données plus spécialisées comme ``datetime`` ou "
"``Decimal`` dans des sessions en JSON, vous devrez écrire votre propre "
"sérialiseur (ou convertir ces valeurs en objets sérialisables en JSON avant "
"de les stocker dans ``request.session``). Bien que la sérialisation de "
"telles valeurs soit relativement directe à réaliser (:class:`~django.core."
"serializers.json.DjangoJSONEncoder` donne des pistes), l'écriture d'un "
"décodeur qui puisse reconstruire la valeur initiale de manière fiable est "
"plus délicate. Par exemple, vous risquez de créer un objet ``datetime`` pour "
"ce qui était en fait une chaîne dont le format ressemblait à celui que vous "
"avez choisi pour représenter les objets ``datetime``."

msgid ""
"Your serializer class must implement two methods, ``dumps(self, obj)`` and "
"``loads(self, data)``, to serialize and deserialize the dictionary of "
"session data, respectively."
msgstr ""
"Une classe de sérialisation doit implémenter deux méthodes, ``dumps(self, "
"obj)`` et ``loads(self, data)``, pour respectivement sérialiser et "
"désérialiser le dictionnaire des données de session."

msgid "Session object guidelines"
msgstr "Lignes directrices des objets sessions"

msgid ""
"Use normal Python strings as dictionary keys on ``request.session``. This is "
"more of a convention than a hard-and-fast rule."
msgstr ""
"Utilisez des chaînes Python normales comme clés de dictionnaire pour "
"``request.session``. Il s'agit plus d'une convention que d'une règle stricte."

msgid ""
"Session dictionary keys that begin with an underscore are reserved for "
"internal use by Django."
msgstr ""
"Les clés de dictionnaire de session commençant par un soulignement sont "
"réservés pour l'usage interne de Django."

msgid ""
"Don't override ``request.session`` with a new object, and don't access or "
"set its attributes. Use it like a Python dictionary."
msgstr ""
"Ne surchargez pas ``request.session`` avec un nouvel objet et n'accédez pas "
"ou ne modifiez pas ses attributs. Utilisez-le comme un dictionnaire Python."

msgid ""
"This simplistic view sets a ``has_commented`` variable to ``True`` after a "
"user posts a comment. It doesn't let a user post a comment more than once::"
msgstr ""
"Cette vue très simple définit une variable ``has_commented`` à ``True`` "
"après qu'un utilisateur a soumis un commentaire. Elle n'autorise pas plus "
"d'un commentaire par utilisateur ::"

msgid "This simplistic view logs in a \"member\" of the site::"
msgstr "Cette vue très simple connecte un « membre » du site ::"

msgid "...And this one logs a member out, according to ``login()`` above::"
msgstr ""
"...et celle-ci déconnecte un membre, compte tenu de l'exemple ``login()`` ci-"
"dessus ::"

msgid ""
"The standard :meth:`django.contrib.auth.logout` function actually does a bit "
"more than this to prevent inadvertent data leakage. It calls the :meth:"
"`~backends.base.SessionBase.flush` method of ``request.session``. We are "
"using this example as a demonstration of how to work with session objects, "
"not as a full ``logout()`` implementation."
msgstr ""
"La fonction standard :meth:`django.contrib.auth.logout` fait en réalité un "
"peu plus que cela pour empêcher des divulgations de données fortuites. Elle "
"appelle la méthode :meth:`~backends.base.SessionBase.flush` de ``request."
"session``. Nous utilisons cet exemple comme démonstration du fonctionnement "
"des objets sessions, il ne faut pas le considérer comme une implémentation "
"complète de ``logout()``."

msgid "Setting test cookies"
msgstr "Génération de cookies de test"

msgid ""
"As a convenience, Django provides a way to test whether the user's browser "
"accepts cookies. Call the :meth:`~backends.base.SessionBase.set_test_cookie` "
"method of ``request.session`` in a view, and call :meth:`~backends.base."
"SessionBase.test_cookie_worked` in a subsequent view -- not in the same view "
"call."
msgstr ""
"Par commodité, Django fournit un moyen de tester si le navigateur de "
"l'utilisateur accepte les cookies. Appelez la méthode :meth:`~backends.base."
"SessionBase.set_test_cookie` de ``request.session`` dans une vue, puis "
"appelez :meth:`~backends.base.SessionBase.test_cookie_worked` dans une des "
"vues suivantes, mais pas dans le même appel de vue."

msgid ""
"This awkward split between ``set_test_cookie()`` and "
"``test_cookie_worked()`` is necessary due to the way cookies work. When you "
"set a cookie, you can't actually tell whether a browser accepted it until "
"the browser's next request."
msgstr ""
"Cette séparation bizarre entre ``set_test_cookie()`` et "
"``test_cookie_worked()`` est nécessaire en raison du fonctionnement des "
"cookies. Lorsque vous définissez un cookie, il n'est en fait pas possible de "
"savoir si le navigateur l'a accepté avant de recevoir la prochaine requête "
"du navigateur."

msgid ""
"It's good practice to use :meth:`~backends.base.SessionBase."
"delete_test_cookie()` to clean up after yourself. Do this after you've "
"verified that the test cookie worked."
msgstr ""
"Il est recommandé d'utiliser :meth:`~backends.base.SessionBase."
"delete_test_cookie()` pour faire le ménage derrière soi. Faites-le après "
"avoir vérifié que le cookie de test a fonctionné."

msgid "Here's a typical usage example::"
msgstr "Voici un exemple d'utilisation typique ::"

msgid ""
"Support for setting test cookies in asynchronous view functions was added."
msgstr ""
"La prise en charge de la définition de cookies de test dans les fonctions de "
"vue asynchrones a été ajoutée."

msgid "Using sessions out of views"
msgstr "Utilisation des sessions en dehors des vues"

msgid ""
"The examples in this section import the ``SessionStore`` object directly "
"from the ``django.contrib.sessions.backends.db`` backend. In your own code, "
"you should consider importing ``SessionStore`` from the session engine "
"designated by :setting:`SESSION_ENGINE`, as below:"
msgstr ""
"Les exemples de cette section importent directement l'objet ``SessionStore`` "
"à partir du moteur ``django.contrib.sessions.backends.db``. Dans votre "
"propre code, il est préférable d'importer ``SessionStore`` à partir du "
"moteur de sessions désigné par :setting:`SESSION_ENGINE`, comme ci-dessous :"

msgid "An API is available to manipulate session data outside of a view:"
msgstr ""
"Une API est disponible pour manipuler les données de sessions en dehors des "
"vues :"

msgid ""
"``SessionStore.create()`` is designed to create a new session (i.e. one not "
"loaded from the session store and with ``session_key=None``). ``save()`` is "
"designed to save an existing session (i.e. one loaded from the session "
"store). Calling ``save()`` on a new session may also work but has a small "
"chance of generating a ``session_key`` that collides with an existing one. "
"``create()`` calls ``save()`` and loops until an unused ``session_key`` is "
"generated."
msgstr ""
"``SessionStore.create()`` est conçue pour créer une nouvelle session (c'est-"
"à-dire qui n'est pas chargée du stockage de session et avec "
"``session_key=None``). ``save()`` est conçue pour enregistrer une session "
"existante (c'est-à-dire qui est chargée du stockage de session). Il est "
"aussi possible d'appeler ``save()`` pour une nouvelle session, mais avec un "
"petit risque de générer une clé de session qui entre en conflit avec une "
"autre. ``create()`` appelle ``save()`` et boucle jusqu'à ce qu'une clé "
"``session_key`` inutilisée soit produite."

msgid ""
"If you're using the ``django.contrib.sessions.backends.db`` backend, each "
"session is a normal Django model. The ``Session`` model is defined in :"
"source:`django/contrib/sessions/models.py`. Because it's a normal model, you "
"can access sessions using the normal Django database API:"
msgstr ""
"Si vous utilisez le moteur ``django.contrib.sessions.backends.db``, chaque "
"session est un modèle Django normal. Le modèle ``Session`` est défini dans :"
"source:`django/contrib/sessions/models.py`. Comme c'est un modèle normal, "
"vous pouvez accéder aux sessions en utilisant l'API habituelle de base de "
"données Django :"

msgid ""
"Note that you'll need to call :meth:`~base_session.AbstractBaseSession."
"get_decoded()` to get the session dictionary. This is necessary because the "
"dictionary is stored in an encoded format:"
msgstr ""
"Notez que vous devrez appeler :meth:`~base_session.AbstractBaseSession."
"get_decoded()` pour obtenir le dictionnaire de session. Cela est nécessaire "
"car le dictionnaire est stocké dans un format codé :"

msgid "When sessions are saved"
msgstr "Enregistrement des sessions"

msgid ""
"By default, Django only saves to the session database when the session has "
"been modified -- that is if any of its dictionary values have been assigned "
"or deleted::"
msgstr ""
"Par défaut, Django n'enregistre la session dans la base de données qu'au "
"moment où la session a été modifiée, c'est-à-dire qu'au moins une des "
"valeurs de son dictionnaire a été définie ou supprimée ::"

msgid ""
"In the last case of the above example, we can tell the session object "
"explicitly that it has been modified by setting the ``modified`` attribute "
"on the session object::"
msgstr ""
"Dans le dernier cas de l'exemple ci-dessus, nous pouvons indiquer "
"explicitement à l'objet session qu'il a été modifié en définissant son "
"attribut ``modified``::"

msgid ""
"To change this default behavior, set the :setting:"
"`SESSION_SAVE_EVERY_REQUEST` setting to ``True``. When set to ``True``, "
"Django will save the session to the database on every single request."
msgstr ""
"Pour modifier ce comportement par défaut, définissez le réglage :setting:"
"`SESSION_SAVE_EVERY_REQUEST` à ``True``. Dans ce cas, Django enregistre la "
"session dans la base de données lors de chaque requête."

msgid ""
"Note that the session cookie is only sent when a session has been created or "
"modified. If :setting:`SESSION_SAVE_EVERY_REQUEST` is ``True``, the session "
"cookie will be sent on every request."
msgstr ""
"Notez que le cookie de session n'est envoyé que lorsqu'une session a été "
"créée ou modifiée. Si :setting:`SESSION_SAVE_EVERY_REQUEST` vaut ``True``, "
"le cookie de session sera envoyé lors de chaque requête."

msgid ""
"Similarly, the ``expires`` part of a session cookie is updated each time the "
"session cookie is sent."
msgstr ""
"De même, la partie ``expires`` d'un cookie de session est mis à jour chaque "
"fois que le cookie de session est envoyé."

msgid "The session is not saved if the response's status code is 500."
msgstr ""
"La session n'est pas enregistrée si le code de statut de la réponse est 500."

msgid "Browser-length sessions vs. persistent sessions"
msgstr "Expiration ou persistance des sessions"

msgid ""
"You can control whether the session framework uses browser-length sessions "
"vs. persistent sessions with the :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` "
"setting."
msgstr ""
"Le réglage :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` permet de contrôler le "
"type des sessions utilisées par l'infrastructure des sessions, soit les "
"sessions expirant à la fermeture du navigateur ou les sessions persistantes."

msgid ""
"By default, :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` is set to ``False``, "
"which means session cookies will be stored in users' browsers for as long "
"as :setting:`SESSION_COOKIE_AGE`. Use this if you don't want people to have "
"to log in every time they open a browser."
msgstr ""
"Par défaut, :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` est défini à "
"``False``, ce qui signifie que les cookies de session seront stockés dans "
"les navigateurs des utilisateurs pour une durée de :setting:"
"`SESSION_COOKIE_AGE`. Utilisé quand on ne souhaite pas que les utilisateurs "
"doivent se connecter chaque fois qu'ils ouvrent leur navigateur."

msgid ""
"If :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` is set to ``True``, Django "
"will use browser-length cookies -- cookies that expire as soon as the user "
"closes their browser. Use this if you want people to have to log in every "
"time they open a browser."
msgstr ""
"Si :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` est défini à ``True``, Django "
"utilise des cookies expirant à la fermeture du navigateur. Utilisé quand on "
"souhaite que les utilisateurs doivent se connecter chaque fois qu'ils "
"ouvrent leur navigateur."

msgid ""
"This setting is a global default and can be overwritten at a per-session "
"level by explicitly calling the :meth:`~backends.base.SessionBase."
"set_expiry` method of ``request.session`` as described above in `using "
"sessions in views`_."
msgstr ""
"Ce réglage est une valeur par défaut globale et peut être surchargé au "
"niveau de chaque session en appelant explicitement la méthode :meth:"
"`~backends.base.SessionBase.set_expiry` de ``request.session`` comme décrit "
"ci-dessus dans `utilisation des sessions dans les vues`_."

msgid ""
"Some browsers (Chrome, for example) provide settings that allow users to "
"continue browsing sessions after closing and reopening the browser. In some "
"cases, this can interfere with the :setting:"
"`SESSION_EXPIRE_AT_BROWSER_CLOSE` setting and prevent sessions from expiring "
"on browser close. Please be aware of this while testing Django applications "
"which have the :setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE` setting enabled."
msgstr ""
"Certains navigateurs (Chrome, par exemple) peuvent être réglés afin de ne "
"pas fermer les sessions de navigation entre fermeture et réouverture du "
"navigateur. Dans certains cas, cela peut interférer avec le réglage :setting:"
"`SESSION_EXPIRE_AT_BROWSER_CLOSE`  et empêcher les sessions d'expirer à la "
"fermeture du navigateur. Il est important de le savoir lors des tests "
"d'applications Django qui ont le réglage :setting:"
"`SESSION_EXPIRE_AT_BROWSER_CLOSE` actif."

msgid "Clearing the session store"
msgstr "Effacement du stockage des sessions"

msgid ""
"As users create new sessions on your website, session data can accumulate in "
"your session store. If you're using the database backend, the "
"``django_session`` database table will grow. If you're using the file "
"backend, your temporary directory will contain an increasing number of files."
msgstr ""
"Au fur et à mesure que des utilisateurs créent de nouvelles sessions sur "
"votre site Web, les données de sessions s'accumulent dans votre stockage de "
"sessions. Si vous utilisez le moteur en base de données, la table de base de "
"données ``django_session`` prend du volume. Si vous utilisez le moteur basé "
"sur des fichiers, le nombre des fichiers dans le répertoire temporaire va "
"augmenter constamment."

msgid ""
"To understand this problem, consider what happens with the database backend. "
"When a user logs in, Django adds a row to the ``django_session`` database "
"table. Django updates this row each time the session data changes. If the "
"user logs out manually, Django deletes the row. But if the user does *not* "
"log out, the row never gets deleted. A similar process happens with the file "
"backend."
msgstr ""
"Pour comprendre ce problème, examinons ce qui se passe avec le moteur en "
"base de données. Lorsqu'un utilisateur se connecte, Django ajoute un "
"enregistrement dans la table ``django_session``. Il met à jour cet "
"enregistrement chaque fois que les données de la session sont modifiées. Si "
"l'utilisateur se déconnecte explicitement, Django efface l'enregistrement. "
"Mais si l'utilisateur ne le fait *pas*, l'enregistrement n'est jamais "
"effacé. Le principe est identique avec le moteur basé sur les fichiers."

msgid ""
"Django does *not* provide automatic purging of expired sessions. Therefore, "
"it's your job to purge expired sessions on a regular basis. Django provides "
"a clean-up management command for this purpose: :djadmin:`clearsessions`. "
"It's recommended to call this command on a regular basis, for example as a "
"daily cron job."
msgstr ""
"Django ne fournit *pas* de système automatique d'effacement des sessions "
"expirées. C'est donc à vous de le faire à intervalle régulier. Django met à "
"disposition une commande de gestion de nettoyage dans ce but : :djadmin:"
"`clearsessions`. Il est recommandé de lancer cette commande régulièrement, "
"par exemple dans une tâche « cron » journalière."

msgid ""
"Note that the cache backend isn't vulnerable to this problem, because caches "
"automatically delete stale data. Neither is the cookie backend, because the "
"session data is stored by the users' browsers."
msgstr ""
"Notez que le moteur basé sur le cache n'est pas sujet à ce problème, car les "
"caches suppriment automatiquement les données obsolètes. Pareil pour le "
"moteur basé sur les cookies, car les données de sessions sont stockées par "
"les navigateurs des utilisateurs."

msgid "Settings"
msgstr "Réglages"

msgid ""
"A few :ref:`Django settings <settings-sessions>` give you control over "
"session behavior:"
msgstr ""
"Quelques :ref:`réglages Django <settings-sessions>` permettent de contrôler "
"le comportement des sessions :"

msgid ":setting:`SESSION_CACHE_ALIAS`"
msgstr ":setting:`SESSION_CACHE_ALIAS`"

msgid ":setting:`SESSION_COOKIE_AGE`"
msgstr ":setting:`SESSION_COOKIE_AGE`"

msgid ":setting:`SESSION_COOKIE_DOMAIN`"
msgstr ":setting:`SESSION_COOKIE_DOMAIN`"

msgid ":setting:`SESSION_COOKIE_HTTPONLY`"
msgstr ":setting:`SESSION_COOKIE_HTTPONLY`"

msgid ":setting:`SESSION_COOKIE_NAME`"
msgstr ":setting:`SESSION_COOKIE_NAME`"

msgid ":setting:`SESSION_COOKIE_PATH`"
msgstr ":setting:`SESSION_COOKIE_PATH`"

msgid ":setting:`SESSION_COOKIE_SAMESITE`"
msgstr ":setting:`SESSION_COOKIE_SAMESITE`"

msgid ":setting:`SESSION_COOKIE_SECURE`"
msgstr ":setting:`SESSION_COOKIE_SECURE`"

msgid ":setting:`SESSION_ENGINE`"
msgstr ":setting:`SESSION_ENGINE`"

msgid ":setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE`"
msgstr ":setting:`SESSION_EXPIRE_AT_BROWSER_CLOSE`"

msgid ":setting:`SESSION_FILE_PATH`"
msgstr ":setting:`SESSION_FILE_PATH`"

msgid ":setting:`SESSION_SAVE_EVERY_REQUEST`"
msgstr ":setting:`SESSION_SAVE_EVERY_REQUEST`"

msgid ":setting:`SESSION_SERIALIZER`"
msgstr ":setting:`SESSION_SERIALIZER`"

msgid "Session security"
msgstr "Sécurité des sessions"

msgid ""
"Subdomains within a site are able to set cookies on the client for the whole "
"domain. This makes session fixation possible if cookies are permitted from "
"subdomains not controlled by trusted users."
msgstr ""
"Les sous-domaines d'un site peuvent définir des cookies pour le client "
"valables pour tout le domaine. Cela rend possible les attaques par fixation "
"de session si des cookies peuvent être créés par des sous-domaines qui ne "
"sont pas sous contrôle de personnes de confiance."

msgid ""
"For example, an attacker could log into ``good.example.com`` and get a valid "
"session for their account. If the attacker has control over ``bad.example."
"com``, they can use it to send their session key to you since a subdomain is "
"permitted to set cookies on ``*.example.com``. When you visit ``good.example."
"com``, you'll be logged in as the attacker and might inadvertently enter "
"your sensitive personal data (e.g. credit card info) into the attacker's "
"account."
msgstr ""
"Par exemple, un attaquant pourrait se connecter à ``good.example.com`` et "
"obtenir une session valable pour son compte. Si l'attaquant contrôle ``bad."
"example.com``, il peut l'utiliser pour vous envoyer sa clé de session "
"puisqu'un sous-domaine a le droit de définir des cookies pour ``*.example."
"com``. Lorsque vous visitez ``good.example.com``, vous serez connecté sous "
"le compte de l'attaquant et vous pourriez saisir involontairement des "
"données personnelles sensibles (par ex. des données de carte de crédit) "
"enregistrées dans le compte de l'attaquant."

msgid ""
"Another possible attack would be if ``good.example.com`` sets its :setting:"
"`SESSION_COOKIE_DOMAIN` to ``\"example.com\"`` which would cause session "
"cookies from that site to be sent to ``bad.example.com``."
msgstr ""
"Une autre attaque possible apparaît dans le cas où ``good.example.com`` "
"définit son réglage :setting:`SESSION_COOKIE_DOMAIN` à ``\"example.com\"``, "
"ce qui pourrait avoir comme conséquence d'envoyer les cookies de session à "
"``bad.example.com``."

msgid "Technical details"
msgstr "Détails techniques"

msgid ""
"The session dictionary accepts any :mod:`json` serializable value when "
"using :class:`~django.contrib.sessions.serializers.JSONSerializer`."
msgstr ""
"Le dictionnaire de session accepte toute valeur sérialisable en :mod:`json` "
"quand on utilise :class:`~django.contrib.sessions.serializers."
"JSONSerializer`."

msgid "Session data is stored in a database table named ``django_session`` ."
msgstr ""
"Les données des sessions sont stockées dans une table de base de données "
"nommée ``django_session`` ."

msgid ""
"Django only sends a cookie if it needs to. If you don't set any session "
"data, it won't send a session cookie."
msgstr ""
"Django n'envoie un cookie qu'en cas de nécessité. Si vous ne définissez pas "
"de données de session, le cookie de session ne sera pas envoyé."

msgid "The ``SessionStore`` object"
msgstr "L'objet ``SessionStore``"

msgid ""
"When working with sessions internally, Django uses a session store object "
"from the corresponding session engine. By convention, the session store "
"object class is named ``SessionStore`` and is located in the module "
"designated by :setting:`SESSION_ENGINE`."
msgstr ""
"Lorsque Django manipule les sessions en interne, il emploie un objet de "
"stockage de session provenant du moteur de sessions correspondant. Par "
"convention, la classe d'objet de stockage de session est appelée "
"``SessionStore`` et se trouve dans le module désigné par :setting:"
"`SESSION_ENGINE`."

msgid ""
"All ``SessionStore`` subclasses available in Django implement the following "
"data manipulation methods:"
msgstr ""
"Toutes les sous-classes de ``SessionStore`` disponibles dans Django "
"implémentent les méthodes de manipulation de données suivantes :"

msgid "``exists()``"
msgstr "``exists()``"

msgid "``create()``"
msgstr "``create()``"

msgid "``save()``"
msgstr "``save()``"

msgid "``delete()``"
msgstr "``delete()``"

msgid "``load()``"
msgstr "``load()``"

msgid ":meth:`~.SessionBase.clear_expired`"
msgstr ":meth:`~.SessionBase.clear_expired`"

msgid ""
"An asynchronous interface for these methods is provided by wrapping them "
"with ``sync_to_async()``. They can be implemented directly if an async-"
"native implementation is available:"
msgstr ""
"Une interface asynchrone de ces méthodes est fournie en les enveloppant dans "
"``sync_to_async()``. Elles peuvent être implémentées directement si une "
"implémentation nativement asynchrone est disponible :"

msgid "``aexists()``"
msgstr "``aexists()``"

msgid "``acreate()``"
msgstr "``acreate()``"

msgid "``asave()``"
msgstr "``asave()``"

msgid "``adelete()``"
msgstr "``adelete()``"

msgid "``aload()``"
msgstr "``aload()``"

msgid ":meth:`~.SessionBase.aclear_expired`"
msgstr ":meth:`~.SessionBase.aclear_expired`"

msgid ""
"In order to build a custom session engine or to customize an existing one, "
"you may create a new class inheriting from :class:`~backends.base."
"SessionBase` or any other existing ``SessionStore`` class."
msgstr ""
"Dans l'optique de créer un moteur de sessions personnalisé ou d'en adapter "
"un existant, vous pouvez créer une nouvelle classe héritant de :class:"
"`~backends.base.SessionBase` ou de toute autre classe ``SessionStore`` "
"existante."

msgid ""
"You can extend the session engines, but doing so with database-backed "
"session engines generally requires some extra effort (see the next section "
"for details)."
msgstr ""
"Il est possible d'étendre les moteurs de sessions existants, mais pour les "
"moteurs se basant sur une base de données, cela exige généralement un peu "
"plus de travail (lisez la section suivante pour plus de détails). "

msgid ""
"``aexists()``, ``acreate()``, ``asave()``, ``adelete()``, ``aload()``, and "
"``aclear_expired()`` methods were added."
msgstr ""
"Les méthodes ``aexists()``, ``acreate()``, ``asave()``, ``adelete()``, "
"``aload()`` et ``aclear_expired()`` ont été ajoutées."

msgid "Extending database-backed session engines"
msgstr "Extension des moteurs de sessions s'appuyant sur une base de données"

msgid ""
"Creating a custom database-backed session engine built upon those included "
"in Django (namely ``db`` and ``cached_db``) may be done by inheriting :class:"
"`~base_session.AbstractBaseSession` and either ``SessionStore`` class."
msgstr ""
"La création d'un moteur de sessions personnalisé s'appuyant sur une base de "
"données en se basant sur ceux qui sont inclus dans Django (c'est-à-dire "
"``db`` et ``cached_db``) peut se faire en héritant de :class:`~base_session."
"AbstractBaseSession` et de l'une des classes ``SessionStore``."

msgid ""
"``AbstractBaseSession`` and ``BaseSessionManager`` are importable from "
"``django.contrib.sessions.base_session`` so that they can be imported "
"without including ``django.contrib.sessions`` in :setting:`INSTALLED_APPS`."
msgstr ""
"``AbstractBaseSession`` et ``BaseSessionManager`` peuvent être importés à "
"partir de ``django.contrib.sessions.base_session`` afin qu'ils puissent être "
"importés sans devoir inclure ``django.contrib.sessions`` dans :setting:"
"`INSTALLED_APPS`."

msgid "The abstract base session model."
msgstr "Le modèle abstrait de base d'une session."

msgid ""
"Primary key. The field itself may contain up to 40 characters. The current "
"implementation generates a 32-character string (a random sequence of digits "
"and lowercase ASCII letters)."
msgstr ""
"La clé primaire. Le champ lui-même peut contenir jusqu'à 40 caractères. "
"L'implémentation actuelle génère une chaîne de 32 caractères (une séquence "
"aléatoire de chiffres et de lettre ASCII minuscules)."

msgid "A string containing an encoded and serialized session dictionary."
msgstr "Une chaîne contenant un dictionnaire de session codé et sérialisé."

msgid "A datetime designating when the session expires."
msgstr "Une date/heure indiquant la date d'expiration de la session."

msgid ""
"Expired sessions are not available to a user, however, they may still be "
"stored in the database until the :djadmin:`clearsessions` management command "
"is run."
msgstr ""
"Les sessions qui ont expiré ne sont plus accessibles aux utilisateurs ; "
"elles peuvent tout de même rester stockées dans la base de données jusqu'au "
"lancement de la commande d'administration :djadmin:`clearsessions`."

msgid "Returns a session store class to be used with this session model."
msgstr ""
"Renvoie une classe de stockage de session à utiliser avec ce modèle de "
"session."

msgid "Returns decoded session data."
msgstr "Renvoie les données de session décodées."

msgid "Decoding is performed by the session store class."
msgstr "Le décodage est effectué par la classe de stockage de session."

msgid ""
"You can also customize the model manager by subclassing :class:`~django."
"contrib.sessions.base_session.BaseSessionManager`:"
msgstr ""
"Vous pouvez aussi personnaliser le gestionnaire du modèle en héritant de :"
"class:`~django.contrib.sessions.base_session.BaseSessionManager`:"

msgid ""
"Returns the given session dictionary serialized and encoded as a string."
msgstr ""
"Renvoie le dictionnaire de session indiqué sous forme de chaîne codée et "
"sérialisée."

msgid "Encoding is performed by the session store class tied to a model class."
msgstr ""
"Le codage est effectué par la classe de stockage de session en lien à la "
"classe de modèle."

msgid ""
"Saves session data for a provided session key, or deletes the session in "
"case the data is empty."
msgstr ""
"Enregistre les données de session correspondant à la clé de session indiquée "
"ou supprimer la session dans le cas où les données sont vides."

msgid ""
"Customization of ``SessionStore`` classes is achieved by overriding methods "
"and properties described below:"
msgstr ""
"La personnalisation des classes ``SessionStore`` se fait en surchargeant les "
"méthodes et les propriétés décrites ci-après :"

msgid "Implements database-backed session store."
msgstr ""
"Implémentation du stockage de session s'appuyant sur une base de données."

msgid "Override this method to return a custom session model if you need one."
msgstr ""
"Surchargez cette méthode afin de renvoyer un modèle de session personnalisé "
"en cas de besoin."

msgid ""
"Returns a new instance of the session model object, which represents the "
"current session state."
msgstr ""
"Renvoie une nouvelle instance d'objet modèle de session, qui représente "
"l'état actuel de la session."

msgid ""
"Overriding this method provides the ability to modify session model data "
"before it's saved to database."
msgstr ""
"En surchargeant cette méthode, on peut modifier les données du modèle de "
"session avant qu'elles ne soient enregistrées dans la base de données."

msgid "Implements cached database-backed session store."
msgstr ""
"Implémentation du stockage de session s'appuyant sur une base de données et "
"du cache."

msgid "A prefix added to a session key to build a cache key string."
msgstr ""
"Un préfixe ajouté à une clé de session pour construire une chaîne de clé de "
"cache."

msgid "Example"
msgstr "Exemple"

msgid ""
"The example below shows a custom database-backed session engine that "
"includes an additional database column to store an account ID (thus "
"providing an option to query the database for all active sessions for an "
"account)::"
msgstr ""
"L'exemple ci-dessous montre un moteur de session personnalisé s'appuyant sur "
"une base de données, incluant une colonne de base de données supplémentaire "
"pour stocker un identifiant de compte (et ainsi fournissant une option pour "
"interroger la base de données pour toutes les sessions actives d'un "
"compte) ::"

msgid ""
"If you are migrating from the Django's built-in ``cached_db`` session store "
"to a custom one based on ``cached_db``, you should override the cache key "
"prefix in order to prevent a namespace clash::"
msgstr ""
"Si vous faites une migration à partir du stockage de sessions ``cached_db`` "
"intégré à Django vers un stockage personnalisé basé sur ``cached_db``, il "
"est conseillé de surcharger le préfixe de clé de cache afin d'éviter "
"d'éventuels conflits d'espace de noms ::"

msgid "Session IDs in URLs"
msgstr "Identifiants de session dans les URL"

msgid ""
"The Django sessions framework is entirely, and solely, cookie-based. It does "
"not fall back to putting session IDs in URLs as a last resort, as PHP does. "
"This is an intentional design decision. Not only does that behavior make "
"URLs ugly, it makes your site vulnerable to session-ID theft via the "
"\"Referer\" header."
msgstr ""
"L'infrastructure des sessions de Django est complètement et uniquement basé "
"sur les cookies. Il ne se rabat pas sur le système des identifiants de "
"session dans les URL comme le fait PHP. C'est une décision conceptuelle "
"volontaire. Cette technique défigure les URL et rend votre site vulnérable "
"aux vols d'identifiants de session par l'intermédiaire de l'en-tête "
"« Referer »."

msgid "Django shortcut functions"
msgstr "Les fonctions raccourcis de Django"

msgid ""
"The package ``django.shortcuts`` collects helper functions and classes that "
"\"span\" multiple levels of MVC. In other words, these functions/classes "
"introduce controlled coupling for convenience's sake."
msgstr ""
"Le paquet ``django.shortcuts`` rassemble des fonctions et des classes "
"utilitaires qui recouvrent plusieurs niveaux de l'architecture MVC. En "
"d'autres termes, ces fonctions/classes introduisent un couplage contrôlé à "
"des fins de commodité."

msgid "``render()``"
msgstr "``render()``"

msgid ""
"Combines a given template with a given context dictionary and returns an :"
"class:`~django.http.HttpResponse` object with that rendered text."
msgstr ""
"Combine un gabarit donné avec un dictionnaire contexte donné et renvoie un "
"objet :class:`~django.http.HttpResponse` avec le texte résultant."

msgid ""
"Django does not provide a shortcut function which returns a :class:`~django."
"template.response.TemplateResponse` because the constructor of :class:"
"`~django.template.response.TemplateResponse` offers the same level of "
"convenience as :func:`render()`."
msgstr ""
"Django ne met pas à disposition de fonction raccourci renvoyant une réponse :"
"class:`~django.template.response.TemplateResponse` parce que le constructeur "
"de :class:`~django.template.response.TemplateResponse` présente le même "
"niveau de flexibilité que :func:`render()`."

msgid "Required arguments"
msgstr "Paramètres obligatoires"

msgid "``request``"
msgstr "``request``"

msgid "The request object used to generate this response."
msgstr "L'objet requête utilisé pour générer la réponse."

msgid "``template_name``"
msgstr "``template_name``"

msgid ""
"The full name of a template to use or sequence of template names. If a "
"sequence is given, the first template that exists will be used. See the :ref:"
"`template loading documentation <template-loading>` for more information on "
"how templates are found."
msgstr ""
"Le nom complet d'un gabarit à utiliser ou une liste de noms de gabarits. Si "
"une liste est donnée, le premier gabarit de la liste qui est trouvé sera "
"utilisé. Consultez la :ref:`documentation du chargement de gabarits "
"<template-loading>` pour plus d'informations sur la façon dont les gabarits "
"sont recherchés."

msgid "Optional arguments"
msgstr "Paramètres facultatifs"

msgid "``context``"
msgstr "``context``"

msgid ""
"A dictionary of values to add to the template context. By default, this is "
"an empty dictionary. If a value in the dictionary is callable, the view will "
"call it just before rendering the template."
msgstr ""
"Un dictionnaire de valeurs à ajouter un contexte du gabarit. Par défaut, ce "
"dictionnaire est vide. Si une des valeurs du dictionnaire est exécutable, la "
"vue l'appellera immédiatement avant de faire le rendu du gabarit."

msgid "``content_type``"
msgstr "``content_type``"

msgid ""
"The MIME type to use for the resulting document. Defaults to ``'text/html'``."
msgstr ""
"Le type MIME à utiliser pour le document produit. La valeur par défaut est "
"``'text/html'``."

msgid "``status``"
msgstr "``status``"

msgid "The status code for the response. Defaults to ``200``."
msgstr "Le code d'état de la réponse. La valeur par défaut est ``200``."

msgid "``using``"
msgstr "``using``"

msgid ""
"The :setting:`NAME <TEMPLATES-NAME>` of a template engine to use for loading "
"the template."
msgstr ""
"Le nom :setting:`NAME <TEMPLATES-NAME>` d'un moteur de gabarit à utiliser "
"pour charger le gabarit."

msgid ""
"The following example renders the template ``myapp/index.html`` with the "
"MIME type :mimetype:`application/xhtml+xml`::"
msgstr ""
"L'exemple suivant effectue le rendu du gabarit ``myapp/index.html`` avec le "
"type MIME :mimetype:`application/xhtml+xml`::"

msgid "This example is equivalent to::"
msgstr "Cet exemple est équivalent à ::"

msgid "``redirect()``"
msgstr "``redirect()``"

msgid ""
"Returns an :class:`~django.http.HttpResponseRedirect` to the appropriate URL "
"for the arguments passed."
msgstr ""
"Renvoie une réponse :class:`~django.http.HttpResponseRedirect` à l'URL "
"correspondant aux paramètres transmis."

msgid "The arguments could be:"
msgstr "Les paramètres peuvent être :"

msgid ""
"A model: the model's :meth:`~django.db.models.Model.get_absolute_url()` "
"function will be called."
msgstr ""
"Un modèle : la fonction :meth:`~django.db.models.Model.get_absolute_url()` "
"du modèle sera appelée."

msgid ""
"A view name, possibly with arguments: :func:`~django.urls.reverse` will be "
"used to reverse-resolve the name."
msgstr ""
"Un nom de vue, et potentiellement des paramètres : :func:`~django.urls."
"reverse` sera utilisée pour résoudre le nom."

msgid ""
"An absolute or relative URL, which will be used as-is for the redirect "
"location."
msgstr ""
"Une URL absolue ou relative qui sera utilisée telle quelle comme emplacement "
"de redirection."

msgid ""
"By default issues a temporary redirect; pass ``permanent=True`` to issue a "
"permanent redirect."
msgstr ""
"Produit par défaut une redirection temporaire ; indiquez ``permanent=True`` "
"pour produire une redirection permanente."

msgid "You can use the :func:`redirect` function in a number of ways."
msgstr ""
"La fonction :func:`redirect` peut être utilisée de différentes manières."

msgid ""
"By passing some object; that object's :meth:`~django.db.models.Model."
"get_absolute_url` method will be called to figure out the redirect URL::"
msgstr ""
"En lui passant un objet ; la méthode :meth:`~django.db.models.Model."
"get_absolute_url` de l'objet est appelée pour produire l'URL de "
"redirection ::"

msgid ""
"By passing the name of a view and optionally some positional or keyword "
"arguments; the URL will be reverse resolved using the :func:`~django.urls."
"reverse` method::"
msgstr ""
"En lui passant le nom d'une vue et, en option, des paramètres positionnels "
"ou nommés ; l'URL sera résolue en utilisant la méthode :func:`~django.urls."
"reverse`::"

msgid "By passing a hardcoded URL to redirect to: ::"
msgstr "En lui passant une URL de redirection fixe ::"

msgid "This also works with full URLs: ::"
msgstr "Cela fonctionne aussi avec des URL complètes ::"

msgid ""
"By default, :func:`redirect` returns a temporary redirect. All of the above "
"forms accept a ``permanent`` argument; if set to ``True`` a permanent "
"redirect will be returned::"
msgstr ""
"Par défaut, :func:`redirect` renvoie une redirection temporaire. Toutes les "
"formes ci-dessus acceptent un paramètre ``permanent`` qui, s'il est défini à "
"``True``, produit une redirection permanente ::"

msgid "``get_object_or_404()``"
msgstr "``get_object_or_404()``"

msgid "*Asynchronous version*: ``aget_object_or_404()``"
msgstr "*Version asynchrone* : ``aget_object_or_404()``"

msgid ""
"Calls :meth:`~django.db.models.query.QuerySet.get()` on a given model "
"manager, but it raises :class:`~django.http.Http404` instead of the model's :"
"class:`~django.db.models.Model.DoesNotExist` exception."
msgstr ""
"Appelle :meth:`~django.db.models.query.QuerySet.get()` d’un gestionnaire de "
"modèle donné, mais génère une exception :class:`~django.http.Http404` au "
"lieu de l’exception :class:`~django.db.models.Model.DoesNotExist` du modèle."

msgid "Arguments"
msgstr "Paramètres"

msgid "``klass``"
msgstr "``klass``"

msgid ""
"A :class:`~django.db.models.Model` class, a :class:`~django.db.models."
"Manager`, or a :class:`~django.db.models.query.QuerySet` instance from which "
"to get the object."
msgstr ""
"Une classe :class:`~django.db.models.Model`, un :class:`~django.db.models."
"Manager` ou une instance :class:`~django.db.models.query.QuerySet` comme "
"source de l'objet."

msgid "``*args``"
msgstr "``*args``"

msgid ":class:`Q objects <django.db.models.Q>`."
msgstr ":class:`Objets Q <django.db.models.Q>`."

msgid "``**kwargs``"
msgstr "``**kwargs``"

msgid ""
"Lookup parameters, which should be in the format accepted by ``get()`` and "
"``filter()``."
msgstr ""
"Paramètres de recherche, dans un format accepté par ``get()`` et "
"``filter()``."

msgid ""
"The following example gets the object with the primary key of 1 from "
"``MyModel``::"
msgstr ""
"L'exemple suivant obtient l'objet``MyModel`` ayant la clé primaire 1 ::"

msgid ""
"The most common use case is to pass a :class:`~django.db.models.Model`, as "
"shown above. However, you can also pass a :class:`~django.db.models.query."
"QuerySet` instance::"
msgstr ""
"Le cas le plus courant est de transmettre un :class:`~django.db.models."
"Model`, comme montré ci-dessus. Cependant, vous pouvez aussi transmettre une "
"instance :class:`~django.db.models.query.QuerySet`::"

msgid "The above example is a bit contrived since it's equivalent to doing::"
msgstr ""
"L'exemple ci-dessus est un peu tiré par les cheveux, car il est équivalent "
"à ::"

msgid ""
"but it can be useful if you are passed the ``queryset`` variable from "
"somewhere else."
msgstr ""
"mais cela reste utile dans les cas où vous recevez une variable ``queryset`` "
"par un autre moyen."

msgid ""
"Finally, you can also use a :class:`~django.db.models.Manager`. This is "
"useful for example if you have a :ref:`custom manager<custom-managers>`::"
msgstr ""
"Finalement, vous pouvez aussi utiliser un gestionnaire (:class:`~django.db."
"models.Manager`). C'est utile par exemple si vous avez un :ref:`gestionnaire "
"personnalisé<custom-managers>` ::"

msgid ""
"You can also use :class:`related managers<django.db.models.fields.related."
"RelatedManager>`::"
msgstr ""
"Il est aussi possible d'utiliser des :class:`gestionnaires de liaison<django."
"db.models.fields.related.RelatedManager>`::"

msgid ""
"Note: As with ``get()``, a :class:`~django.core.exceptions."
"MultipleObjectsReturned` exception will be raised if more than one object is "
"found."
msgstr ""
"Note : comme pour ``get()``, une exception :class:`~django.core.exceptions."
"MultipleObjectsReturned` sera levée si plus d'un objet est renvoyé."

msgid "``aget_object_or_404()`` function was added."
msgstr "La fonction ``aget_object_or_404()`` a été ajoutée."

msgid "``get_list_or_404()``"
msgstr "``get_list_or_404()``"

msgid "*Asynchronous version*: ``aget_list_or_404()``"
msgstr "*Version asynchrone* : ``aget_list_or_404()``"

msgid ""
"Returns the result of :meth:`~django.db.models.query.QuerySet.filter()` on a "
"given model manager cast to a list, raising :class:`~django.http.Http404` if "
"the resulting list is empty."
msgstr ""
"Renvoie le résultat de :meth:`~django.db.models.query.QuerySet.filter()` sur "
"un gestionnaire de modèle donné transformé en liste, générant :class:"
"`~django.http.Http404` si la liste résultante est vide."

msgid ""
"A :class:`~django.db.models.Model`, :class:`~django.db.models.Manager` or :"
"class:`~django.db.models.query.QuerySet` instance from which to get the list."
msgstr ""
"Une instance de :class:`~django.db.models.Model`, :class:`~django.db.models."
"Manager` ou :class:`~django.db.models.query.QuerySet` comme source de la "
"liste d'objets."

msgid "The following example gets all published objects from ``MyModel``::"
msgstr "L'exemple suivant récupère tous les objets publiés de "

msgid "``aget_list_or_404()`` function was added."
msgstr "La fonction ``aget_list_or_404()`` a été ajoutée."

msgid "URL dispatcher"
msgstr "Distribution des URL"

msgid ""
"A clean, elegant URL scheme is an important detail in a high-quality web "
"application. Django lets you design URLs however you want, with no framework "
"limitations."
msgstr ""
"Une organisation propre et élégante des URL est un aspect important dans une "
"application web de qualité. Django vous laisse organiser vos URL comme bon "
"vous semble, sans restriction imposée par le système."

msgid ""
"See `Cool URIs don't change`_, by World Wide Web creator Tim Berners-Lee, "
"for excellent arguments on why URLs should be clean and usable."
msgstr ""
"Lisez `Cool URIs don't change`_, par le père du World Wide Web Tim Berners-"
"Lee, pour savoir pourquoi les URL devraient être claires et conviviales."

msgid ""
"To design URLs for an app, you create a Python module informally called a "
"**URLconf** (URL configuration). This module is pure Python code and is a "
"mapping between URL path expressions to Python functions (your views)."
msgstr ""
"Pour organiser les URL d'une application, il s'agit de créer un module "
"Python appelé communément **URLconf** (configuration d'URL). Le code de ce "
"module est en Python pur et est une correspondance entre expressions de "
"chemins d'URL et fonctions Python (vos vues)."

msgid ""
"This mapping can be as short or as long as needed. It can reference other "
"mappings. And, because it's pure Python code, it can be constructed "
"dynamically."
msgstr ""
"Cette correspondance peut être autant courte que longue. Elle peut faire "
"référence à d'autres correspondances. Et étant donné qu'il s'agit de code "
"Python pur, elle peut être construite dynamiquement."

msgid ""
"Django also provides a way to translate URLs according to the active "
"language. See the :ref:`internationalization documentation <url-"
"internationalization>` for more information."
msgstr ""
"Django fournit également une façon de traduire les URL en fonction de la "
"langue active. Voir la :ref:`documentation sur l'internationalisation <url-"
"internationalization>` pour plus d'informations."

msgid "How Django processes a request"
msgstr "Processus de traitement des requêtes par Django"

msgid ""
"When a user requests a page from your Django-powered site, this is the "
"algorithm the system follows to determine which Python code to execute:"
msgstr ""
"Quand un utilisateur accède à une page de votre site Django, voici "
"l'algorithme que le système suit pour déterminer quel code Python doit être "
"exécuté :"

msgid ""
"Django determines the root URLconf module to use. Ordinarily, this is the "
"value of the :setting:`ROOT_URLCONF` setting, but if the incoming "
"``HttpRequest`` object has a :attr:`~django.http.HttpRequest.urlconf` "
"attribute (set by middleware), its value will be used in place of the :"
"setting:`ROOT_URLCONF` setting."
msgstr ""
"Django identifie le module URLconf racine à utiliser. Par défaut, c'est la "
"valeur attribuée au réglage :setting:`ROOT_URLCONF`, mais si la requête "
"``HttpRequest`` entrante possède un attribut :attr:`~django.http.HttpRequest."
"urlconf` (défini par intergiciel), sa valeur sera utilisée en lieu et place "
"du réglage :setting:`ROOT_URLCONF`."

msgid ""
"Django loads that Python module and looks for the variable ``urlpatterns``. "
"This should be a :term:`sequence` of :func:`django.urls.path` and/or :func:"
"`django.urls.re_path` instances."
msgstr ""
"Django charge ce module Python et cherche la variable ``urlpatterns``. Ce "
"devrait être une :term:`séquence<sequence>` d'instances :func:`django.urls."
"path` ou :func:`django.urls.re_path`."

msgid ""
"Django runs through each URL pattern, in order, and stops at the first one "
"that matches the requested URL, matching against :attr:`~django.http."
"HttpRequest.path_info`."
msgstr ""
"Django parcourt chaque motif d'URL dans l'ordre et s'arrête dès la première "
"correspondance de :attr:`~django.http.HttpRequest.path_info` avec l'URL "
"demandée."

msgid ""
"Once one of the URL patterns matches, Django imports and calls the given "
"view, which is a Python function (or a :doc:`class-based view </topics/class-"
"based-views/index>`). The view gets passed the following arguments:"
msgstr ""
"Une fois qu'un des motifs d'URL correspond, Django importe et appelle la vue "
"correspondante, qui est une fonction Python (ou une :doc:`vue reposant sur "
"une classe </topics/class-based-views/index>`). La vue se voit passer les "
"paramètres suivants :"

msgid "An instance of :class:`~django.http.HttpRequest`."
msgstr "Une instance :class:`~django.http.HttpRequest`."

msgid ""
"If the matched URL pattern contained no named groups, then the matches from "
"the regular expression are provided as positional arguments."
msgstr ""
"Si le motif d'URL correspondant ne contient pas de groupes nommés, les "
"correspondances de l'expression régulière sont transmises comme paramètres "
"positionnels."

msgid ""
"The keyword arguments are made up of any named parts matched by the path "
"expression that are provided, overridden by any arguments specified in the "
"optional ``kwargs`` argument to :func:`django.urls.path` or :func:`django."
"urls.re_path`."
msgstr ""
"Les paramètres nommés sont formés des parties nommées résultant de la "
"correspondance avec l'expression de chemin indiquée, surchargés par tout "
"paramètre ajouté dans le paramètre facultatif ``kwargs`` de :func:`django."
"urls.path` ou :func:`django.urls.re_path`."

msgid ""
"If no URL pattern matches, or if an exception is raised during any point in "
"this process, Django invokes an appropriate error-handling view. See `Error "
"handling`_ below."
msgstr ""
"Si aucun motif d'URL ne correspond, ou si une exception est levée durant ce "
"processus, Django appelle une vue d'erreur appropriée. Voir `Gestion "
"d'erreur`_ plus bas."

msgid "Here's a sample URLconf::"
msgstr "Voici un exemple d'URLconf ::"

msgid "To capture a value from the URL, use angle brackets."
msgstr "Pour capturer une valeur contenue dans l'URL, utilisez des chevrons."

msgid ""
"Captured values can optionally include a converter type. For example, use "
"``<int:name>`` to capture an integer parameter. If a converter isn't "
"included, any string, excluding a ``/`` character, is matched."
msgstr ""
"Les valeurs capturées peuvent inclure un convertisseur de type. Par exemple, "
"``<int:name>`` va capturer un paramètre nombre entier. Si aucun "
"convertisseur n'est donné, l'expression capture n'importe quelle chaîne de "
"caractères, à l'exception du caractère ``/``."

msgid ""
"There's no need to add a leading slash, because every URL has that. For "
"example, it's ``articles``, not ``/articles``."
msgstr ""
"Inutile de préfixer vos URL d'une barre oblique, elles en ont toutes une. "
"Par exemple, écrivez ``articles`` et non ``/articles``."

msgid "Example requests:"
msgstr "Exemples de requêtes :"

msgid ""
"A request to ``/articles/2005/03/`` would match the third entry in the list. "
"Django would call the function ``views.month_archive(request, year=2005, "
"month=3)``."
msgstr ""
"Une requête vers ``/articles/2005/03/`` correspondrait à la troisième entrée "
"dans la liste. Django appellerait la fonction ``views.month_archive(request, "
"year=2005, month=3)``."

msgid ""
"``/articles/2003/`` would match the first pattern in the list, not the "
"second one, because the patterns are tested in order, and the first one is "
"the first test to pass. Feel free to exploit the ordering to insert special "
"cases like this. Here, Django would call the function ``views."
"special_case_2003(request)``"
msgstr ""
"``/articles/2003/`` correspondrait au premier motif de la liste, et non le "
"deuxième, car les motifs sont évalués dans l'ordre, et le premier est le "
"premier à correspondre. Libre à vous d'utiliser l'ordre de définition pour "
"traiter des cas spéciaux comme ici. Ici, Django appellerait la fonction "
"``views.special_case_2003(request)``."

msgid ""
"``/articles/2003`` would not match any of these patterns, because each "
"pattern requires that the URL end with a slash."
msgstr ""
"``/articles/2003`` ne correspondrait à aucun motif, car chaque motif "
"nécessite que l'URL se termine par une barre oblique."

msgid ""
"``/articles/2003/03/building-a-django-site/`` would match the final pattern. "
"Django would call the function ``views.article_detail(request, year=2003, "
"month=3, slug=\"building-a-django-site\")``."
msgstr ""
"``/articles/2003/03/03/construire-un-site-django/`` correspondrait au "
"dernier motif. Django appellerait la fonction ``views."
"article_detail(request, year=2003, month=3, slug=\"construire-un-site-"
"django\")``."

msgid "Path converters"
msgstr "Convertisseurs de chemin"

msgid "The following path converters are available by default:"
msgstr "Les convertisseurs de chemin suivants sont disponibles par défaut :"

msgid ""
"``str`` - Matches any non-empty string, excluding the path separator, "
"``'/'``. This is the default if a converter isn't included in the expression."
msgstr ""
"``str`` - correspond à n'importe quelle chaîne non vide, à l'exception du "
"séparateur de chemin, ``'/'``. C'est ce qui est utilisé par défaut si aucun "
"convertisseur n'est indiqué dans l'expression."

msgid "``int`` - Matches zero or any positive integer. Returns an ``int``."
msgstr ""
"``int`` - correspond à zéro ou un autre nombre entier positif. Renvoie le "
"type ``int``."

msgid ""
"``slug`` - Matches any slug string consisting of ASCII letters or numbers, "
"plus the hyphen and underscore characters. For example, ``building-your-1st-"
"django-site``."
msgstr ""
"``slug`` - correspond à toute chaîne composée de lettres ou chiffres ASCII, "
"du trait d'union ou du caractère soulignement. Par exemple, ``construire-"
"votre-1er-site-django``."

msgid ""
"``uuid`` - Matches a formatted UUID. To prevent multiple URLs from mapping "
"to the same page, dashes must be included and letters must be lowercase. For "
"example, ``075194d3-6885-417e-a8a8-6c931e272f00``. Returns a :class:`~uuid."
"UUID` instance."
msgstr ""
"``uuid`` - correspond à un identifiant UUID. Pour empêcher plusieurs URL de "
"correspondre à une même page, les tirets doivent être inclus et les lettres "
"doivent être en minuscules. Par exemple, ``075194d3-6885-417e-"
"a8a8-6c931e272f00``. Renvoie une instance :class:`~uuid.UUID`."

msgid ""
"``path`` - Matches any non-empty string, including the path separator, "
"``'/'``. This allows you to match against a complete URL path rather than a "
"segment of a URL path as with ``str``."
msgstr ""
"``path`` - correspond à n'importe quelle chaîne non vide, y compris le "
"séparateur de chemin, ``'/'``. Cela permet de correspondre à un chemin d'URL "
"complet au lieu d'un segment de chemin d'URL comme avec ``str``."

msgid "Registering custom path converters"
msgstr "Inscription de convertisseurs de chemin personnalisés"

msgid ""
"For more complex matching requirements, you can define your own path "
"converters."
msgstr ""
"Pour des scénarios de correspondance plus complexes, vous pouvez définir vos "
"propres convertisseurs de chemin."

msgid "A converter is a class that includes the following:"
msgstr "Un convertisseur est une classe comprenant ce qui suit :"

msgid "A ``regex`` class attribute, as a string."
msgstr "Un attribut de classe ``regex``, sous forme de chaîne."

msgid ""
"A ``to_python(self, value)`` method, which handles converting the matched "
"string into the type that should be passed to the view function. It should "
"raise ``ValueError`` if it can't convert the given value. A ``ValueError`` "
"is interpreted as no match and as a consequence a 404 response is sent to "
"the user unless another URL pattern matches."
msgstr ""
"Une méthode ``to_python(self, value)`` qui gère la conversion de la chaîne "
"interceptée dans le type voulu qui sera transmis à la fonction de vue. Elle "
"doit générer ``ValueError`` si la valeur reçue ne peut pas être convertie. "
"Une erreur ``ValueError`` est interprétée comme absence de correspondance et "
"va donc renvoyer une réponse 404 à l'utilisateur, sauf si une correspondance "
"est trouvée avec un autre motif d'URL."

msgid ""
"A ``to_url(self, value)`` method, which handles converting the Python type "
"into a string to be used in the URL. It should raise ``ValueError`` if it "
"can't convert the given value. A ``ValueError`` is interpreted as no match "
"and as a consequence :func:`~django.urls.reverse` will raise :class:`~django."
"urls.NoReverseMatch` unless another URL pattern matches."
msgstr ""
"Une méthode ``to_url(self, value)`` qui gère la conversion du type Python "
"vers une chaîne à utiliser dans l'URL. Elle doit générer ``ValueError`` si "
"la valeur reçue ne peut pas être convertie. Une erreur ``ValueError`` est "
"interprétée comme absence de correspondance, ce qui fait que :func:`~django."
"urls.reverse` va produire une exception :class:`~django.urls.NoReverseMatch` "
"sauf si une correspondance est trouvée avec un autre motif d'URL."

msgid ""
"Register custom converter classes in your URLconf using :func:`~django.urls."
"register_converter`::"
msgstr ""
"Inscrivez des classes de conversion personnalisées dans la configuration "
"d'URL avec :func:`~django.urls.register_converter`::"

msgid ""
"Overriding existing converters with ``django.urls.register_converter()`` is "
"deprecated."
msgstr ""
"La surcharge de convertisseurs existants avec ``django.urls."
"register_converter()`` est obsolète."

msgid "Using regular expressions"
msgstr "Utilisation d'expressions régulières"

msgid ""
"If the paths and converters syntax isn't sufficient for defining your URL "
"patterns, you can also use regular expressions. To do so, use :func:`~django."
"urls.re_path` instead of :func:`~django.urls.path`."
msgstr ""
"Si la syntaxe des chemins et convertisseurs n'est pas suffisante pour "
"définir vos motifs d'URL, vous pouvez également utiliser des expressions "
"régulières. Pour ce faire, utilisez :func:`~django.urls.re_path` à la place "
"de :func:`~django.urls.path`."

msgid ""
"In Python regular expressions, the syntax for named regular expression "
"groups is ``(?P<name>pattern)``, where ``name`` is the name of the group and "
"``pattern`` is some pattern to match."
msgstr ""
"La syntaxe des expressions régulières en Python pour les groupes de captures "
"nommés est ``(?P<nom>motif)``, où ``nom`` est le nom du groupe et ``motif`` "
"est le motif à faire correspondre."

msgid ""
"Here's the example URLconf from earlier, rewritten using regular "
"expressions::"
msgstr ""
"Voici de nouveau l'exemple de configuration d'URL précédent, réécrit en "
"utilisant des expressions régulières :"

msgid ""
"This accomplishes roughly the same thing as the previous example, except:"
msgstr ""
"Cela fait plus ou moins la même chose que l'exemple précédent, sauf que :"

msgid ""
"The exact URLs that will match are slightly more constrained. For example, "
"the year 10000 will no longer match since the year integers are constrained "
"to be exactly four digits long."
msgstr ""
"L'URL précis qui va correspondre sera légèrement plus contraint. Par "
"exemple, l'année 10000 ne correspondra plus puisque les nombres entiers des "
"années sont limités à exactement quatre chiffres."

msgid ""
"Each captured argument is sent to the view as a string, regardless of what "
"sort of match the regular expression makes."
msgstr ""
"Chaque paramètre capturé est envoyé à la vue en tant que chaîne de "
"caractères, peu importe la correspondance qu'effectue l'expression régulière."

msgid ""
"When switching from using :func:`~django.urls.path` to :func:`~django.urls."
"re_path` or vice versa, it's particularly important to be aware that the "
"type of the view arguments may change, and so you may need to adapt your "
"views."
msgstr ""
"Lors du changement de :func:`~django.urls.path` vers :func:`~django.urls."
"re_path` ou vice versa, il est particulièrement important de réaliser que le "
"type des paramètres de vue peut changer, ce qui peut impliquer des "
"modifications dans le code des vues."

msgid "Using unnamed regular expression groups"
msgstr "Utilisation de groupes d'expressions régulières non nommés"

msgid ""
"As well as the named group syntax, e.g. ``(?P<year>[0-9]{4})``, you can also "
"use the shorter unnamed group, e.g. ``([0-9]{4})``."
msgstr ""
"En plus de la syntaxe des groupes nommés, par ex. ``(?P<year>[0-9]{4})``, il "
"est aussi possible d'utiliser des groupes non nommés plus courts, par ex. "
"``([0-9]{4})``."

msgid ""
"This usage isn't particularly recommended as it makes it easier to "
"accidentally introduce errors between the intended meaning of a match and "
"the arguments of the view."
msgstr ""
"Cette utilisation n'est pas particulièrement recommandée car le risque est "
"plus grand d'introduire accidentellement des erreurs entre la signification "
"espérée d'une correspondance et les paramètres de la vue."

msgid ""
"In either case, using only one style within a given regex is recommended. "
"When both styles are mixed, any unnamed groups are ignored and only named "
"groups are passed to the view function."
msgstr ""
"Dans les deux cas, il est recommandé d'employer un seul style dans une "
"expression donnée. Lorsque les styles sont mélangés, tout groupe non nommé "
"est ignoré et seuls les groupes nommés sont transmis à la fonction de vue."

msgid "Nested arguments"
msgstr "Paramètres imbriqués"

msgid ""
"Regular expressions allow nested arguments, and Django will resolve them and "
"pass them to the view. When reversing, Django will try to fill in all outer "
"captured arguments, ignoring any nested captured arguments. Consider the "
"following URL patterns which optionally take a page argument::"
msgstr ""
"Les expressions régulières autorisent les paramètres imbriqués et Django les "
"résout et les transmet à la vue. Lors de l'inversion d'URL, Django essaie de "
"remplir tous les paramètres capturés externes, en ignorant les paramètres "
"capturés imbriqués. Considérez les motifs d'URL suivants qui acceptent de "
"manière facultative un paramètre ``page``::"

msgid ""
"Both patterns use nested arguments and will resolve: for example, ``blog/"
"page-2/`` will result in a match to ``blog_articles`` with two positional "
"arguments: ``page-2/`` and ``2``. The second pattern for ``comments`` will "
"match ``comments/page-2/`` with keyword argument ``page_number`` set to 2. "
"The outer argument in this case is a non-capturing argument ``(?:...)``."
msgstr ""
"Les deux motifs emploient des paramètres imbriqués et seront résolus : par "
"exemple, ``blog/page-2/`` va correspondre à ``blog_articles`` avec deux "
"paramètres positionnels : ``page-2/`` et ``2``. Le second motif pour "
"``comments`` va correspondre à ``comments/page-2/`` avec le paramètre nommé "
"``page_number`` défini à 2. Le paramètre extérieur dans ce cas est un "
"paramètre non capturant ``(?:...)``."

msgid ""
"The ``blog_articles`` view needs the outermost captured argument to be "
"reversed, ``page-2/`` or no arguments in this case, while ``comments`` can "
"be reversed with either no arguments or a value for ``page_number``."
msgstr ""
"La vue ``blog_articles`` a besoin du paramètre capturé extérieur afin d'être "
"résolue, ``page-2/`` ou aucun paramètre, dans ce cas, alors que ``comments`` "
"peut être résolue avec soit aucun paramètre, soit une valeur pour "
"``page_number``."

msgid ""
"Nested captured arguments create a strong coupling between the view "
"arguments and the URL as illustrated by ``blog_articles``: the view receives "
"part of the URL (``page-2/``) instead of only the value the view is "
"interested in. This coupling is even more pronounced when reversing, since "
"to reverse the view we need to pass the piece of URL instead of the page "
"number."
msgstr ""
"Les paramètres capturés imbriqués créent un couplage fort entre les "
"paramètres de la vue et l'URL, comme le démontre ``blog_articles``: la vue "
"reçoit une partie de l'URL (``page-2/``) au lieu de ne recevoir que la "
"valeur qui l'intéresse réellement. Ce couplage est encore plus prononcé lors "
"de la résolution, car pour résoudre la vue, il est nécessaire de transmettre "
"un bout d'URL au lieu d'un simple numéro de page."

msgid ""
"As a rule of thumb, only capture the values the view needs to work with and "
"use non-capturing arguments when the regular expression needs an argument "
"but the view ignores it."
msgstr ""
"En règle générale, capturez uniquement les valeurs que la vue doit gérer et "
"employez des paramètres sans capture lorsque l'expression régulière a besoin "
"d'un paramètre mais que la vue l'ignore."

msgid "What the URLconf searches against"
msgstr "Configurations d'URL et contenu des comparaisons"

msgid ""
"The URLconf searches against the requested URL, as a normal Python string. "
"This does not include GET or POST parameters, or the domain name."
msgstr ""
"L'``URLconf`` utilise l'URL demandée, en tant que simple chaîne Python. Ni "
"les paramètres GET ou POST, ni le nom de domaine ne sont inclus."

msgid ""
"For example, in a request to ``https://www.example.com/myapp/``, the URLconf "
"will look for ``myapp/``."
msgstr ""
"Par exemple, pour une requête sur ``https://www.example.com/myapp/``, "
"l'``URLconf`` cherchera ``myapp/``."

msgid ""
"In a request to ``https://www.example.com/myapp/?page=3``, the URLconf will "
"look for ``myapp/``."
msgstr ""
"Pour une requête sur ``https://www.example.com/myapp/?page=3``, "
"l'``URLconf`` cherchera ``myapp/``."

msgid ""
"The URLconf doesn't look at the request method. In other words, all request "
"methods -- ``POST``, ``GET``, ``HEAD``, etc. -- will be routed to the same "
"function for the same URL."
msgstr ""
"L'``URLconf`` ignore la méthode de la requête. En d'autres termes, toutes "
"les méthodes de requêtes -- ``POST``, ``GET``, ``HEAD``, etc. -- seront "
"acheminées vers la même fonction de la même URL."

msgid "Specifying defaults for view arguments"
msgstr "Valeurs par défaut des paramètres de vue"

msgid ""
"A convenient trick is to specify default parameters for your views' "
"arguments. Here's an example URLconf and view::"
msgstr ""
"Une astuce pratique est de définir des valeurs par défaut pour les "
"paramètres de vos vues. Voici un exemple de configuration d'URL et de vue ::"

msgid ""
"In the above example, both URL patterns point to the same view -- ``views."
"page`` -- but the first pattern doesn't capture anything from the URL. If "
"the first pattern matches, the ``page()`` function will use its default "
"argument for ``num``, ``1``. If the second pattern matches, ``page()`` will "
"use whatever ``num`` value was captured."
msgstr ""
"Dans l'exemple ci-dessus, les deux motifs d'URL pointent vers la même vue -- "
"``views.page`` -- mais le premier motif ne capture aucun élément de l'URL. "
"Si le premier motif correspond, la fonction ``page()`` utilisera la valeur "
"par défaut de son paramètre ``num``, ``1``. Si le second motif correspond, "
"``page()`` utilisera la valeur capturée."

msgid ""
"Django processes regular expressions in the ``urlpatterns`` list which is "
"compiled the first time it's accessed. Subsequent requests use the cached "
"configuration via the URL resolver."
msgstr ""
"Django traite les expressions régulières de la liste ``urlpatterns`` en les "
"compilant lors du premier accès. Les requêtes suivantes utilisent la "
"configuration en cache au travers du résolveur d'URL."

msgid "Syntax of the ``urlpatterns`` variable"
msgstr "Syntaxe de la variable ``urlpatterns``"

msgid ""
"``urlpatterns`` should be a :term:`sequence` of :func:`~django.urls.path` "
"and/or :func:`~django.urls.re_path` instances."
msgstr ""
"``urlpatterns`` devrait être une :term:`séquence<sequence>` d'instances :"
"func:`~django.urls.path` ou :func:`~django.urls.re_path`."

msgid "Error handling"
msgstr "Gestion d'erreur"

msgid ""
"When Django can't find a match for the requested URL, or when an exception "
"is raised, Django invokes an error-handling view."
msgstr ""
"Quand Django ne trouve pas de correspondance pour l'URL demandée, ou quand "
"une exception est générée, Django appelle une vue de gestion d'erreur."

msgid ""
"The views to use for these cases are specified by four variables. Their "
"default values should suffice for most projects, but further customization "
"is possible by overriding their default values."
msgstr ""
"Les vues à utiliser pour ces situations sont définies par quatre variables. "
"Leur valeur par défaut devraient convenir à la plupart des projets, mais il "
"reste possible de les personnaliser en surchargeant leurs valeurs par défaut."

msgid ""
"See the documentation on :ref:`customizing error views <customizing-error-"
"views>` for the full details."
msgstr ""
"Voir la documentation sur :ref:`la personnalisation des vues d'erreur "
"<customizing-error-views>` pour plus de détails."

msgid ""
"Such values can be set in your root URLconf. Setting these variables in any "
"other URLconf will have no effect."
msgstr ""
"Ces valeurs doivent être définies dans l'``URLconf`` racine. La définition "
"de ces variables dans n'importe quel autre ``URLconf`` n'aura aucun effet."

msgid ""
"Values must be callables, or strings representing the full Python import "
"path to the view that should be called to handle the error condition at hand."
msgstr ""
"Les valeurs doivent pouvoir être appelées, ou être des chaînes de caractères "
"représentant le chemin d'importation Python complet vers une vue qui doit "
"être appelée pour traiter l'erreur actuelle."

msgid "The variables are:"
msgstr "Les variables sont :"

msgid "``handler400`` -- See :data:`django.conf.urls.handler400`."
msgstr "``handler400`` -- Voir :data:`django.conf.urls.handler400`."

msgid "``handler403`` -- See :data:`django.conf.urls.handler403`."
msgstr "``handler403`` -- Voir :data:`django.conf.urls.handler403`."

msgid "``handler404`` -- See :data:`django.conf.urls.handler404`."
msgstr "``handler404`` -- Voir :data:`django.conf.urls.handler404`."

msgid "``handler500`` -- See :data:`django.conf.urls.handler500`."
msgstr "``handler500`` -- Voir :data:`django.conf.urls.handler500`."

msgid "Including other URLconfs"
msgstr "Inclusion d'autres URLconfs"

msgid ""
"At any point, your ``urlpatterns`` can \"include\" other URLconf modules. "
"This essentially \"roots\" a set of URLs below other ones."
msgstr ""
"À tout moment, votre ``urlpatterns`` peut « inclure » d'autres modules "
"``URLconf``. Fondamentalement, cela permet de rassembler un ensemble d'URL "
"les unes sous les autres."

msgid ""
"For example, here's an excerpt of the URLconf for the `Django website`_ "
"itself. It includes a number of other URLconfs::"
msgstr ""
"Par exemple, voici un extrait de la configuration d'URL du `site Web "
"Django`_ lui-même. Il inclut un certain nombre d'autres configurations "
"d'URL ::"

msgid ""
"Whenever Django encounters :func:`~django.urls.include()`, it chops off "
"whatever part of the URL matched up to that point and sends the remaining "
"string to the included URLconf for further processing."
msgstr ""
"Quand Django rencontre un :func:`~django.urls.include()`, il tronque le bout "
"d'URL qui correspondait jusque-là et passe la chaîne de caractères restante "
"à la configuration d'URL incluse pour continuer le traitement."

msgid ""
"Another possibility is to include additional URL patterns by using a list "
"of :func:`~django.urls.path` instances. For example, consider this URLconf::"
msgstr ""
"Une autre possibilité est d'inclure des motifs d'URL supplémentaires en "
"utilisant une liste d'instances :func:`~django.urls.path`. Par exemple, dans "
"cette configuration d'URL ::"

msgid ""
"In this example, the ``/credit/reports/`` URL will be handled by the "
"``credit_views.report()`` Django view."
msgstr ""
"Dans cet exemple, l'URL ``/credit/reports/`` sera traitée par la vue Django "
"``credit_views.report()``."

msgid ""
"This can be used to remove redundancy from URLconfs where a single pattern "
"prefix is used repeatedly. For example, consider this URLconf::"
msgstr ""
"Cela peut être utilisé pour supprimer de la redondance dans des "
"configurations d'URL où un préfixe de motif est employé de manière "
"répétitive. Par exemple, considérez cette configuration d'URL ::"

msgid ""
"We can improve this by stating the common path prefix only once and grouping "
"the suffixes that differ::"
msgstr ""
"Nous pouvons l'améliorer en indiquant une seule fois le préfixe de chemin "
"commun et en regroupant les suffixes qui diffèrent ::"

msgid "Captured parameters"
msgstr "Les paramètres capturés"

msgid ""
"An included URLconf receives any captured parameters from parent URLconfs, "
"so the following example is valid::"
msgstr ""
"Un ``URLconf`` inclus reçoit tous les paramètres capturés par ses "
"``URLconf`` parents, ainsi l'exemple suivant est valide ::"

msgid ""
"In the above example, the captured ``\"username\"`` variable is passed to "
"the included URLconf, as expected."
msgstr ""
"Dans l'exemple ci-dessus, la variable capturée ``\"username\"`` est passée à "
"l'``URLconf`` inclus, comme on peut s'y attendre."

msgid "Passing extra options to view functions"
msgstr "Transmission de paramètres supplémentaires à une vue"

msgid ""
"URLconfs have a hook that lets you pass extra arguments to your view "
"functions, as a Python dictionary."
msgstr ""
"Les configurations d'URL ont un point d'entrée qui permet de passer des "
"paramètres supplémentaires à vos vues, via un dictionnaire Python."

msgid ""
"The :func:`~django.urls.path` function can take an optional third argument "
"which should be a dictionary of extra keyword arguments to pass to the view "
"function."
msgstr ""
"La fonction :func:`django.urls.path` accepte un troisième paramètre "
"facultatif qui doit correspondre à un dictionnaire de paramètres nommés "
"supplémentaires à transmettre à la fonction de vue."

msgid ""
"In this example, for a request to ``/blog/2005/``, Django will call ``views."
"year_archive(request, year=2005, foo='bar')``."
msgstr ""
"Dans cet exemple, si une requête demande ``/blog/2005/``, Django appelle "
"``views.year_archive(request, year=2005, foo='bar')``."

msgid ""
"This technique is used in the :doc:`syndication framework </ref/contrib/"
"syndication>` to pass metadata and options to views."
msgstr ""
"Cette technique est utilisée dans le :doc:`système de syndication </ref/"
"contrib/syndication>` pour passer des métadonnées et des options aux vues."

msgid "Dealing with conflicts"
msgstr "Gestion des confilts"

msgid ""
"It's possible to have a URL pattern which captures named keyword arguments, "
"and also passes arguments with the same names in its dictionary of extra "
"arguments. When this happens, the arguments in the dictionary will be used "
"instead of the arguments captured in the URL."
msgstr ""
"Il est possible d'avoir un motif d'URL qui capture des paramètres nommés, et "
"qui passe aussi des paramètres ayant les mêmes noms dans son dictionnaire de "
"paramètres supplémentaires. Quand c'est le cas, les paramètres du "
"dictionnaire seront utilisés à la place des paramètres capturés dans l'URL."

msgid "Passing extra options to ``include()``"
msgstr "Transmission de paramètres supplémentaires à ``include()``"

msgid ""
"Similarly, you can pass extra options to :func:`~django.urls.include` and "
"each line in the included URLconf will be passed the extra options."
msgstr ""
"De la même façon, vous pouvez passer des paramètres supplémentaires à la "
"fonction :func:`~django.urls.include` et chacune des lignes de la "
"configuration d'URL incluse recevra les paramètres supplémentaires."

msgid "For example, these two URLconf sets are functionally identical:"
msgstr ""
"Par exemple, ces deux ensembles de configurations d'URL sont "
"fonctionnellement identiques :"

msgid "Set one::"
msgstr "Premier ensemble ::"

msgid "Set two::"
msgstr "Second ensemble ::"

msgid ""
"Note that extra options will *always* be passed to *every* line in the "
"included URLconf, regardless of whether the line's view actually accepts "
"those options as valid. For this reason, this technique is only useful if "
"you're certain that every view in the included URLconf accepts the extra "
"options you're passing."
msgstr ""
"Remarquez que les paramètres supplémentaires seront *toujours* passés à "
"*chaque* élément de la configuration d'URL incluse, peu importe si la vue "
"associée à l'élément accepte ces paramètres comme étant valides. C'est pour "
"cette raison que cette technique est utile seulement lorsque vous êtes "
"certain que toutes les vues de la configuration d'URL incluse acceptent les "
"paramètres supplémentaires que vous passez."

msgid "Reverse resolution of URLs"
msgstr "Résolution inversée des URL"

msgid ""
"A common need when working on a Django project is the possibility to obtain "
"URLs in their final forms either for embedding in generated content (views "
"and assets URLs, URLs shown to the user, etc.) or for handling of the "
"navigation flow on the server side (redirections, etc.)"
msgstr ""
"Un besoin courant quand on travaille sur un projet Django est d'avoir la "
"possibilité d'obtenir des URL dans leur forme finale soit pour les "
"incorporer dans du contenu généré (des URL vers des vues et des ressources, "
"des URL montrées à l'utilisateur, etc.) ou pour gérer le flux de navigation "
"côté serveur (redirections, etc.)."

msgid ""
"It is strongly desirable to avoid hard-coding these URLs (a laborious, non-"
"scalable and error-prone strategy). Equally dangerous is devising ad-hoc "
"mechanisms to generate URLs that are parallel to the design described by the "
"URLconf, which can result in the production of URLs that become stale over "
"time."
msgstr ""
"Il est très fortement suggéré d'éviter d'écrire des URL figées (une approche "
"laborieuse, non extensible et sujette à l'erreur). Il est tout aussi "
"dangereux de concevoir des mécanismes ad hoc capables de générer des URL "
"identiques à celles décrites dans la configuration d'URL, risquant d'aboutir "
"avec le temps à l'obtention d'URL obsolètes."

msgid ""
"In other words, what's needed is a DRY mechanism. Among other advantages it "
"would allow evolution of the URL design without having to go over all the "
"project source code to search and replace outdated URLs."
msgstr ""
"En d'autres termes, ce dont nous avons besoin est un mécanisme DRY (« ne pas "
"se répéter »). L'un de ses avantages est de permettre l'évolution de "
"l'organisation des URL sans avoir à parcourir le code source du projet pour "
"remplacer les URL obsolètes."

msgid ""
"The primary piece of information we have available to get a URL is an "
"identification (e.g. the name) of the view in charge of handling it. Other "
"pieces of information that necessarily must participate in the lookup of the "
"right URL are the types (positional, keyword) and values of the view "
"arguments."
msgstr ""
"L'information principale dont nous disposons pour récupérer une URL est une "
"identification de la vue qui est chargée de la traiter (par exemple, son "
"nom). Les autres informations nécessaires à la recherche de la bonne URL "
"sont les types (positionnel, nommé) et les valeurs des paramètres de la vue."

msgid ""
"Django provides a solution such that the URL mapper is the only repository "
"of the URL design. You feed it with your URLconf and then it can be used in "
"both directions:"
msgstr ""
"Django met à disposition une solution qui fait en sorte que le système "
"d'abstraction d'URL est le seul à connaître l'organisation des URL. Vous lui "
"donnez votre configuration d'URL et vous pouvez ensuite l'utiliser dans les "
"deux sens :"

msgid ""
"Starting with a URL requested by the user/browser, it calls the right Django "
"view providing any arguments it might need with their values as extracted "
"from the URL."
msgstr ""
"À partir d'une URL demandée par un utilisateur/navigateur, il appelle la vue "
"Django concernée en lui passant tous les paramètres dont elle a besoin en "
"extrayant les valeurs telles quelles de l'URL."

msgid ""
"Starting with the identification of the corresponding Django view plus the "
"values of arguments that would be passed to it, obtain the associated URL."
msgstr ""
"À partir de l'identification de la vue Django concernée ainsi que les "
"valeurs des paramètres qui lui seraient passés, il renvoie l'URL associée."

msgid ""
"The first one is the usage we've been discussing in the previous sections. "
"The second one is what is known as *reverse resolution of URLs*, *reverse "
"URL matching*, *reverse URL lookup*, or simply *URL reversing*."
msgstr ""
"Le premier correspond à l'utilisation dont nous avons parlé dans les "
"sections précédentes. Le second correspond à ce qu'on appelle *la résolution "
"inversée des URL*, *la correspondance inverse d'URL*, *la recherche inverse "
"d'URL*, ou plus simplement *l'inversion d'URL*."

msgid ""
"Django provides tools for performing URL reversing that match the different "
"layers where URLs are needed:"
msgstr ""
"Django met à disposition des outils pour réaliser une inversion d'URL dans "
"les différentes couches où les URL sont nécessaires :"

msgid "In templates: Using the :ttag:`url` template tag."
msgstr "Dans les gabarits : en utilisant la balise de gabarit  :ttag:`url`."

msgid "In Python code: Using the :func:`~django.urls.reverse` function."
msgstr ""
"Dans le code Python : en utilisant la fonction :func:`~django.urls.reverse`."

msgid ""
"In higher level code related to handling of URLs of Django model instances: "
"The :meth:`~django.db.models.Model.get_absolute_url` method."
msgstr ""
"Dans le code plus abstrait amené à manipuler les URL des instances de modèle "
"Django : la méthode :meth:`~django.db.models.Model.get_absolute_url`."

msgid "Consider again this URLconf entry::"
msgstr "Reprenons comme exemple cette ligne de configuration d'URL ::"

msgid ""
"According to this design, the URL for the archive corresponding to year "
"*nnnn* is ``/articles/<nnnn>/``."
msgstr ""
"D'après ce schéma, l'URL de l'archive correspondant à l'année *nnnn* est ``/"
"articles/<nnnn>/``."

msgid "You can obtain these in template code by using:"
msgstr "Vous pouvez obtenir ces URL dans les gabarits en utilisant :"

msgid "Or in Python code::"
msgstr "Ou en Python ::"

msgid ""
"If, for some reason, it was decided that the URLs where content for yearly "
"article archives are published at should be changed then you would only need "
"to change the entry in the URLconf."
msgstr ""
"Si, pour quelque raison que ce soit, vous décidez de changer l'URL à "
"laquelle les archives annuelles d'articles sont sauvegardées, vous aurez "
"seulement besoin de changer la ligne concernée dans la configuration d'URL."

msgid ""
"In some scenarios where views are of a generic nature, a many-to-one "
"relationship might exist between URLs and views. For these cases the view "
"name isn't a good enough identifier for it when comes the time of reversing "
"URLs. Read the next section to know about the solution Django provides for "
"this."
msgstr ""
"Dans le cas où les vues ont un comportement générique, une relation N:1 peut "
"exister entre les URL et les vues. Dans ces cas-là, le nom de la vue n'est "
"pas un identifiant suffisant au moment où il s'agit d'utiliser l'inversion "
"d'URL. Lisez la section suivante pour découvrir la solution qu'apporte "
"Django à ce problème."

msgid "Naming URL patterns"
msgstr "Nommage des motifs d'URL"

msgid ""
"In order to perform URL reversing, you'll need to use **named URL patterns** "
"as done in the examples above. The string used for the URL name can contain "
"any characters you like. You are not restricted to valid Python names."
msgstr ""
"Afin de pouvoir effectuer des inversions d'URL, il est nécessaire d'utiliser "
"des **motifs d'URL nommés** comme vous pouvez le voir dans les exemples ci-"
"dessus. La chaîne utilisée pour les noms des URL peut contenir tous les "
"caractères que vous voulez. Vous n'êtes pas tenus d'utiliser des noms Python "
"valables."

msgid ""
"When naming URL patterns, choose names that are unlikely to clash with other "
"applications' choice of names. If you call your URL pattern ``comment`` and "
"another application does the same thing, the URL that :func:`~django.urls."
"reverse()` finds depends on whichever pattern is last in your project's "
"``urlpatterns`` list."
msgstr ""
"Lors du nommage des motifs d'URL, choisissez des noms qui ont peu de chances "
"d'entrer en conflit avec ceux d'une autre application. Si vous appelez votre "
"motif d'URL ``comment``, et qu'une autre application fait la même chose, "
"l'URL trouvée par :func:`~django.urls.reverse()` dépend de la position du "
"motif dans la liste ``urlpatterns`` du projet (le dernier gagne)."

msgid ""
"Putting a prefix on your URL names, perhaps derived from the application "
"name (such as ``myapp-comment`` instead of ``comment``), decreases the "
"chance of collision."
msgstr ""
"L'ajout d'un préfixe aux noms d'URL, peut-être dérivé du nom de "
"l'application (comme ``monapp-comment`` au lieu de ``comment``), permet de "
"réduire les risques de collision."

msgid ""
"You can deliberately choose the *same URL name* as another application if "
"you want to override a view. For example, a common use case is to override "
"the :class:`~django.contrib.auth.views.LoginView`. Parts of Django and most "
"third-party apps assume that this view has a URL pattern with the name "
"``login``. If you have a custom login view and give its URL the name "
"``login``, :func:`~django.urls.reverse()` will find your custom view as long "
"as it's in ``urlpatterns`` after ``django.contrib.auth.urls`` is included "
"(if that's included at all)."
msgstr ""
"Vous pouvez choisir délibérément le *même nom d'URL* qu'une autre "
"application si vous souhaitez redéfinir une vue. Par exemple, un cas "
"d'utilisation courant est de redéfinir :class:`~django.contrib.auth.views."
"LoginView`. Certaines parties de Django et de nombreuses applications "
"tierces supposent que cette vue répond au motif d'URL dont le nom est "
"``login``. Si vous écrivez votre propre vue de connexion et que vous donnez "
"le nom ``login`` à son URL, :func:`~django.urls.reverse()` va trouver votre "
"vue personnalisée pour autant qu'elle apparaisse après l'inclusion de "
"``django.contrib.auth.urls`` (le cas échéant) dans les motifs "
"``urlpatterns``."

msgid ""
"You may also use the same name for multiple URL patterns if they differ in "
"their arguments. In addition to the URL name, :func:`~django.urls.reverse()` "
"matches the number of arguments and the names of the keyword arguments. Path "
"converters can also raise ``ValueError`` to indicate no match, see :ref:"
"`registering-custom-path-converters` for details."
msgstr ""
"Il est aussi possible d'utiliser plusieurs fois le même nom dans les motifs "
"d'URL s'ils diffèrent dans leurs paramètres. En plus du nom d'URL, :func:"
"`~django.urls.reverse()` recherche des correspondances en fonction du nombre "
"de paramètres et du nom des paramètres nommés. Les convertisseurs de chemins "
"peuvent aussi générer ``ValueError`` pour indiquer l'absence de "
"correspondance, voir :ref:`registering-custom-path-converters` pour plus de "
"détails. "

msgid "URL namespaces"
msgstr "Les espaces de noms d'URL"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"URL namespaces allow you to uniquely reverse :ref:`named URL patterns "
"<naming-url-patterns>` even if different applications use the same URL "
"names. It's a good practice for third-party apps to always use namespaced "
"URLs (as we did in the tutorial). Similarly, it also allows you to reverse "
"URLs if multiple instances of an application are deployed. In other words, "
"since multiple instances of a single application will share named URLs, "
"namespaces provide a way to tell these named URLs apart."
msgstr ""
"Les espaces de noms d'URL permettent la résolution inverse de :ref:`motifs "
"d'URL nommés <naming-url-patterns>` de manière unique, même si différentes "
"applications utilisent les mêmes noms d'URL. L'utilisation systématique "
"d'URL avec espaces de noms est une bonne pratique que les applications "
"tierces devraient adopter (comme cela a été fait dans le tutoriel). C'est "
"aussi un moyen qui permet la résolution inverse quand plusieurs instances "
"d'une application sont déployées. En d'autres termes, comme plusieurs "
"instances d'une même application partagent les URL nommées, les espaces de "
"noms fournissent un moyen de distinguer ces URL nommées."

msgid ""
"Django applications that make proper use of URL namespacing can be deployed "
"more than once for a particular site. For example :mod:`django.contrib."
"admin` has an :class:`~django.contrib.admin.AdminSite` class which allows "
"you to :ref:`deploy more than one instance of the admin <multiple-admin-"
"sites>`.  In a later example, we'll discuss the idea of deploying the polls "
"application from the tutorial in two different locations so we can serve the "
"same functionality to two different audiences (authors and publishers)."
msgstr ""
"Les applications Django qui font bon usage des espaces de noms d'URL peuvent "
"être déployées plusieurs fois pour un même site. Par exemple, :mod:`django."
"contrib.admin` possède une classe :class:`~django.contrib.admin.AdminSite` "
"permettant de :ref:`déployer plus d'une instance de l'interface "
"d'administration <multiple-admin-sites>`. Dans un exemple ultérieur, nous "
"aborderons l'idée de déployer l'application ``polls`` du tutoriel à deux "
"emplacements différents afin de pouvoir offrir la même fonctionnalité à deux "
"audiences différentes (auteurs et éditeurs)."

msgid "A URL namespace comes in two parts, both of which are strings:"
msgstr ""
"Un espace de noms d'URL se compose de deux parties, qui sont les deux des "
"chaînes de caractères :"

msgid "application namespace"
msgstr "espace de noms d'application"

msgid ""
"This describes the name of the application that is being deployed. Every "
"instance of a single application will have the same application namespace. "
"For example, Django's admin application has the somewhat predictable "
"application namespace of ``'admin'``."
msgstr ""
"Ceci définit le nom de l'application déployée. Chaque instance d'une même "
"application possède le même espace de noms d'application. Par exemple, "
"l'application d'administration de Django possède l'espace de noms "
"d'application ``'admin'``, comme l'on peut s'y attendre."

msgid "instance namespace"
msgstr "espace de noms d'instance"

msgid ""
"This identifies a specific instance of an application. Instance namespaces "
"should be unique across your entire project. However, an instance namespace "
"can be the same as the application namespace. This is used to specify a "
"default instance of an application. For example, the default Django admin "
"instance has an instance namespace of ``'admin'``."
msgstr ""
"Ceci identifie une instance particulière d'une application. Les espaces de "
"noms d'instance doivent être uniques dans tout un projet. Cependant, un "
"espace de noms d'instance peut être identique à l'espace de noms "
"d'application. C'est utilisé pour identifier l'instance par défaut d'une "
"application. Par exemple, l'instance par défaut du site d'administration de "
"Django possède l'espace de noms d'instance ``'admin'``."

msgid ""
"Namespaced URLs are specified using the ``':'`` operator. For example, the "
"main index page of the admin application is referenced using ``'admin:"
"index'``. This indicates a namespace of ``'admin'``, and a named URL of "
"``'index'``."
msgstr ""
"Les URL avec espace de noms sont identifiées par l'opérateur ``':'``. Par "
"exemple, la page d'accueil principale de l'application d'administration est "
"référencée par ``'admin:index'``. Cela indique une URL nommée ``'index'`` "
"dans un espace de noms ``'admin'``."

msgid ""
"Namespaces can also be nested. The named URL ``'sports:polls:index'`` would "
"look for a pattern named ``'index'`` in the namespace ``'polls'`` that is "
"itself defined within the top-level namespace ``'sports'``."
msgstr ""
"Les espaces de noms peuvent aussi être imbriqués. L'URL nommée ``'sports:"
"polls:index'`` recherche un motif nommé ``'index'`` dans l'espace de noms "
"``'polls'``, lui-même défini à l'intérieur de l'espace de noms de premier "
"niveau ``'sports'``."

msgid "Reversing namespaced URLs"
msgstr "Résolution inverse des URL avec espaces de noms"

msgid ""
"When given a namespaced URL (e.g. ``'polls:index'``) to resolve, Django "
"splits the fully qualified name into parts and then tries the following "
"lookup:"
msgstr ""
"Lorsqu'il reçoit une URL avec espace de noms à résoudre (par ex. ``'polls:"
"index'``), Django partage le nom complet en segments et effectue la "
"recherche suivante :"

msgid ""
"First, Django looks for a matching :term:`application namespace` (in this "
"example, ``'polls'``). This will yield a list of instances of that "
"application."
msgstr ""
"Premièrement, Django cherche un :term:`espace de noms d'application` "
"correspondant (dans cet exemple, ``'polls'``). Cela produira une liste "
"d'instances de cette application."

msgid ""
"If there is a current application defined, Django finds and returns the URL "
"resolver for that instance. The current application can be specified with "
"the ``current_app`` argument to the :func:`~django.urls.reverse()` function."
msgstr ""
"Si une application courante est définie, Django trouve et renvoie le "
"résolveur d'URL de cette instance. L'application courante peut être définie "
"avec le paramètre ``current_app`` de la fonction :func:`~django.urls."
"reverse()`."

msgid ""
"The :ttag:`url` template tag uses the namespace of the currently resolved "
"view as the current application in a :class:`~django.template."
"RequestContext`. You can override this default by setting the current "
"application on the :attr:`request.current_app <django.http.HttpRequest."
"current_app>` attribute."
msgstr ""
"La balise de gabarit :ttag:`url` utilise l'espace de noms de la vue "
"actuellement résolue comme application courante dans un :class:`~django."
"template.RequestContext`. Vous pouvez outrepasser cette valeur par défaut en "
"définissant l'application courante dans l'attribut :attr:`request."
"current_app <django.http.HttpRequest.current_app>`."

msgid ""
"If there is no current application, Django looks for a default application "
"instance. The default application instance is the instance that has an :term:"
"`instance namespace` matching the :term:`application namespace` (in this "
"example, an instance of ``polls`` called ``'polls'``)."
msgstr ""
"S'il n'existe pas d'application courante, Django cherche une instance "
"d'application par défaut. Celle-ci correspond à l'instance dont l’:term:"
"`espace de noms d'instance` est identique à l’:term:`espace de noms "
"d'application` (dans cet exemple, une instance de ``polls`` appelée "
"``'polls'``)."

msgid ""
"If there is no default application instance, Django will pick the last "
"deployed instance of the application, whatever its instance name may be."
msgstr ""
"S'il n'existe pas d'instance d'application par défaut, Django sélectionne la "
"dernière instance déployée de l'application, quel que soit son nom "
"d'instance."

msgid ""
"If the provided namespace doesn't match an :term:`application namespace` in "
"step 1, Django will attempt a direct lookup of the namespace as an :term:"
"`instance namespace`."
msgstr ""
"Si l'espace de noms indiqué ne correspond pas à un :term:`espace de noms "
"d'application` à l'étape 1, Django effectue une recherche directe d'espace "
"de noms en tant qu’:term:`espace de noms d'instance`."

msgid ""
"If there are nested namespaces, these steps are repeated for each part of "
"the namespace until only the view name is unresolved. The view name will "
"then be resolved into a URL in the namespace that has been found."
msgstr ""
"S'il existe des espaces de noms imbriqués, ces étapes sont répétées pour "
"chaque partie de l'espace de noms jusqu'à ce qu'il ne reste plus que le nom "
"de la vue comme élément non résolu. Le nom de vue est ensuite résolu comme "
"URL dans l'espace de noms qui a été trouvé."

msgid ""
"To show this resolution strategy in action, consider an example of two "
"instances of the ``polls`` application from the tutorial: one called "
"``'author-polls'`` and one called ``'publisher-polls'``. Assume we have "
"enhanced that application so that it takes the instance namespace into "
"consideration when creating and displaying polls."
msgstr ""
"Pour voir en action cette stratégie de résolution, considérez l'exemple de "
"deux instances de l'application ``polls`` du tutoriel : l'une appelée "
"``'author-polls'`` et l'autre ``'publisher-polls'``. Supposons que l'on ait "
"amélioré cette application afin qu'elle prenne en considération l'espace de "
"noms de l'instance lors de la création et de l'affichage des sondages."

msgid "``polls/urls.py``"
msgstr "``polls/urls.py``"

msgid "Using this setup, the following lookups are possible:"
msgstr "Avec cette configuration, les recherches suivantes sont possibles :"

msgid ""
"If one of the instances is current - say, if we were rendering the detail "
"page in the instance ``'author-polls'`` - ``'polls:index'`` will resolve to "
"the index page of the ``'author-polls'`` instance; i.e. both of the "
"following will result in ``\"/author-polls/\"``."
msgstr ""
"Si l'une des instances est courante, c'est-à-dire que nous construisons la "
"page de détail dans l'instance ``'author-polls'``, ``'polls:index'`` est "
"résolu à la page d'accueil de l'instance ``'author-polls'``. C'est-à-dire "
"que les deux expressions suivantes produiront ``\"/author-polls/\"``."

msgid "In the method of a class-based view::"
msgstr "Dans la méthode d'une vue fondée sur les classes ::"

msgid "and in the template:"
msgstr "et dans le gabarit :"

msgid ""
"If there is no current instance - say, if we were rendering a page somewhere "
"else on the site - ``'polls:index'`` will resolve to the last registered "
"instance of ``polls``. Since there is no default instance (instance "
"namespace of ``'polls'``), the last instance of ``polls`` that is registered "
"will be used. This would be ``'publisher-polls'`` since it's declared last "
"in the ``urlpatterns``."
msgstr ""
"S'il n'existe pas d'instance courante, par exemple si nous produisons une "
"page quelque part ailleurs sur le site, ``'polls:index'`` est résolu en "
"rapport avec l'instance ``polls`` inscrite en dernier. Comme il n'y a pas "
"d'instance par défaut (espace de noms d'instance ``'polls'``), c'est la "
"dernière instance inscrite de ``polls`` qui est utilisée. Cela sera "
"``'publisher-polls'`` car c'est celle qui est déclarée en dernier dans les "
"motifs d'URL ``urlpatterns``."

msgid ""
"``'author-polls:index'`` will always resolve to the index page of the "
"instance ``'author-polls'`` (and likewise for ``'publisher-polls'``) ."
msgstr ""
"``'author-polls:index'`` est toujours résolu comme page d'accueil de "
"l'instance ``'author-polls'`` (et de même pour ``'publisher-polls'``)."

msgid ""
"If there were also a default instance - i.e., an instance named ``'polls'`` "
"- the only change from above would be in the case where there is no current "
"instance (the second item in the list above). In this case ``'polls:index'`` "
"would resolve to the index page of the default instance instead of the "
"instance declared last in ``urlpatterns``."
msgstr ""
"S'il y avait aussi une instance par défaut, nommée ``'polls'``, la seule "
"chose qui change par rapport à ci-dessus est que quand il n'y a pas "
"d'instance courante (le deuxième cas ci-dessus), ``'polls:index'`` est "
"résolu à la page d'accueil de l'instance par défaut, et non pas de "
"l'instance déclarée en dernier dans les motifs d'URL ``urlpatterns``."

msgid "URL namespaces and included URLconfs"
msgstr "Espaces de noms d'URL et configurations d'URL incluses"

msgid ""
"Application namespaces of included URLconfs can be specified in two ways."
msgstr ""
"Les espaces de noms d'application des configurations d'URL incluses peuvent "
"être définis de deux manières."

msgid ""
"Firstly, you can set an ``app_name`` attribute in the included URLconf "
"module, at the same level as the ``urlpatterns`` attribute. You have to pass "
"the actual module, or a string reference to the module, to :func:`~django."
"urls.include`, not the list of ``urlpatterns`` itself."
msgstr ""
"Premièrement, vous pouvez définir un attribut ``app_name`` dans le module de "
"configuration d'URL inclus, au même niveau que l'attribut ``urlpatterns``. "
"Il est nécessaire d'indiquer à :func:`~django.urls.include` le module réel "
"ou une référence textuelle au module, non pas la liste ou l'élément "
"``urlpatterns`` lui-même."

msgid ""
"The URLs defined in ``polls.urls`` will have an application namespace "
"``polls``."
msgstr ""
"Les URL définies dans ``polls.urls`` auront un espace de noms d'application "
"``polls``."

msgid ""
"Secondly, you can include an object that contains embedded namespace data. "
"If you ``include()`` a list of :func:`~django.urls.path` or :func:`~django."
"urls.re_path` instances, the URLs contained in that object will be added to "
"the global namespace. However, you can also ``include()`` a 2-tuple "
"containing:"
msgstr ""
"Deuxièmement, vous pouvez inclure un objet contenant des données d'espace de "
"noms intégrées. Si vous incluez par ``include()`` une liste d'instances :"
"func:`~django.urls.path` ou :func:`~django.urls.re_path`, les URL contenues "
"dans cet objet seront ajoutées à l'espace de noms global. Cependant, vous "
"pouvez aussi inclure un tuple de 2 éléments contenant :"

msgid ""
"This will include the nominated URL patterns into the given application "
"namespace."
msgstr ""
"Cela va inclure les motifs d'URL nommés dans l'espace de noms d'application "
"donné."

msgid ""
"The instance namespace can be specified using the ``namespace`` argument to :"
"func:`~django.urls.include`. If the instance namespace is not specified, it "
"will default to the included URLconf's application namespace. This means it "
"will also be the default instance for that namespace."
msgstr ""
"L'espace de noms d'instance peut être précisé en utilisant le paramètre "
"``namespace`` de :func:`~django.urls.include`. Si l'espace de noms "
"d'instance n'est pas défini, il contiendra par défaut  l'espace de noms "
"d'application de la configuration d'URL incluse. Cela signifie qu'il s'agira "
"aussi de l'instance par défaut pour cet espace de noms."

msgid "Writing views"
msgstr "Écriture de vues"

msgid ""
"A view function, or *view* for short, is a Python function that takes a web "
"request and returns a web response. This response can be the HTML contents "
"of a web page, or a redirect, or a 404 error, or an XML document, or an "
"image . . . or anything, really. The view itself contains whatever arbitrary "
"logic is necessary to return that response. This code can live anywhere you "
"want, as long as it's on your Python path. There's no other requirement--no "
"\"magic,\" so to speak. For the sake of putting the code *somewhere*, the "
"convention is to put views in a file called ``views.py``, placed in your "
"project or application directory."
msgstr ""
"Une fonction de vue, ou *vue* pour faire simple, est une fonction Python "
"acceptant une requête web et renvoyant une réponse web. Cette réponse peut "
"contenir le contenu HTML d'une page web, une redirection, une erreur 404, un "
"document XML, une image… ou vraiment n'importe quoi d'autre. La vue elle-"
"même contient la logique nécessaire pour renvoyer une réponse. Ce code peut "
"se trouver à l'emplacement de votre choix, pour autant qu'il soit dans le "
"chemin Python. Il n'y a pas d'autres exigences, pas de « magie » comme on "
"dit. Mais comme il faut bien mettre ce code *quelque part*, la convention "
"est de placer les vues dans un fichier nommé ``views.py`` se trouvant dans "
"un projet ou un répertoire d'application."

msgid "A simple view"
msgstr "Une vue simple"

msgid ""
"Here's a view that returns the current date and time, as an HTML document::"
msgstr ""
"Voici une vue qui renvoie l'heure et la date actuelle, sous forme d'un "
"document HTML ::"

msgid "Let's step through this code one line at a time:"
msgstr "Passons ce code en revue ligne par ligne :"

msgid ""
"First, we import the class :class:`~django.http.HttpResponse` from the :mod:"
"`django.http` module, along with Python's ``datetime`` library."
msgstr ""
"Nous importons d'abord la classe :class:`~django.http.HttpResponse` à partir "
"du module :mod:`django.http`, ainsi que la bibliothèque ``datetime`` de "
"Python."

msgid ""
"Next, we define a function called ``current_datetime``. This is the view "
"function. Each view function takes an :class:`~django.http.HttpRequest` "
"object as its first parameter, which is typically named ``request``."
msgstr ""
"Puis, nous définissons une fonction nommée ``current_datetime``. C'est la "
"fonction de vue. Chaque fonction de vue accepte un objet :class:`~django."
"http.HttpRequest` comme premier paramètre, typiquement nommé ``request``."

msgid ""
"Note that the name of the view function doesn't matter; it doesn't have to "
"be named in a certain way in order for Django to recognize it. We're calling "
"it ``current_datetime`` here, because that name clearly indicates what it "
"does."
msgstr ""
"Remarquez que le nom de la fonction de vue n'a aucune importance ; la vue ne "
"doit pas être nommée d'une certaine manière pour que Django puisse la "
"reconnaître. Nous l'avons appelée ``current_datetime`` ici car ce nom "
"indique clairement ce qu'elle fait."

msgid ""
"The view returns an :class:`~django.http.HttpResponse` object that contains "
"the generated response. Each view function is responsible for returning an :"
"class:`~django.http.HttpResponse` object. (There are exceptions, but we'll "
"get to those later.)"
msgstr ""
"La vue renvoie un objet :class:`~django.http.HttpResponse` contenant la "
"réponse générée. Chaque fonction de vue est chargée de renvoyer un objet :"
"class:`~django.http.HttpResponse` (il y a des exceptions, mais nous les "
"aborderons plus tard)."

msgid "Django's Time Zone"
msgstr "Le fuseau horaire de Django"

msgid ""
"Django includes a :setting:`TIME_ZONE` setting that defaults to ``America/"
"Chicago``. This probably isn't where you live, so you might want to change "
"it in your settings file."
msgstr ""
"Django contient un réglage :setting:`TIME_ZONE` (fuseau horaire) valant par "
"défaut ``America/Chicago``. Vous ne vivez probablement pas à cet endroit, "
"vous allez donc la modifier dans votre fichier de réglages."

msgid "Mapping URLs to views"
msgstr "Correspondance entre URL et vues"

msgid ""
"So, to recap, this view function returns an HTML page that includes the "
"current date and time. To display this view at a particular URL, you'll need "
"to create a *URLconf*; see :doc:`/topics/http/urls` for instructions."
msgstr ""
"Ainsi, pour résumer, cette fonction de vue renvoie une page HTML contenant "
"la date et l'heure actuelles. Pour afficher cette vue avec une URL "
"particulière, il est nécessaire de créer une *configuration d'URL*. Voir :"
"doc:`/topics/http/urls` pour les instructions."

msgid "Returning errors"
msgstr "Renvoi d'erreurs"

msgid ""
"Django provides help for returning HTTP error codes. There are subclasses "
"of :class:`~django.http.HttpResponse` for a number of common HTTP status "
"codes other than 200 (which means *\"OK\"*). You can find the full list of "
"available subclasses in the :ref:`request/response <ref-httpresponse-"
"subclasses>` documentation. Return an instance of one of those subclasses "
"instead of a normal :class:`~django.http.HttpResponse` in order to signify "
"an error. For example::"
msgstr ""
"Django propose de l'aide pour renvoyer des codes d'erreur HTTP. Il existe "
"des sous-classes de :class:`~django.http.HttpResponse` pour tous les codes "
"de statut HTTP les plus courants autres que 200 (qui signifie *« OK »*). La "
"liste complète des sous-classes disponibles se trouve dans la documentation "
"des :ref:`requêtes/réponses <ref-httpresponse-subclasses>`. Renvoyez une "
"instance de l'une de ces sous-classes au lieu d'une réponse :class:`~django."
"http.HttpResponse` normale afin de signaler une erreur. Par exemple ::"

msgid ""
"There isn't a specialized subclass for every possible HTTP response code, "
"since many of them aren't going to be that common. However, as documented in "
"the :class:`~django.http.HttpResponse` documentation, you can also pass the "
"HTTP status code into the constructor for :class:`~django.http.HttpResponse` "
"to create a return class for any status code you like. For example::"
msgstr ""
"Il n'existe pas de sous-classe spécialisée pour chaque code de réponse HTTP "
"possible, car la plupart ne se rencontrent que très rarement. Cependant, "
"comme décrit dans la documentation de :class:`~django.http.HttpResponse`, il "
"est aussi possible de transmettre le code de statut HTTP au constructeur de :"
"class:`~django.http.HttpResponse` pour créer une classe à renvoyer pour "
"n'importe quel code de statut. Par exemple ::"

msgid ""
"Because 404 errors are by far the most common HTTP error, there's an easier "
"way to handle those errors."
msgstr ""
"Comme les erreurs 404 sont de loin les erreurs HTTP les plus fréquentes, il "
"existe une façon simplifiée de les traiter."

msgid "The ``Http404`` exception"
msgstr "L'exception ``Http404``"

msgid ""
"When you return an error such as :class:`~django.http.HttpResponseNotFound`, "
"you're responsible for defining the HTML of the resulting error page::"
msgstr ""
"Lorsque vous renvoyez une erreur telle que :class:`~django.http."
"HttpResponseNotFound`, vous êtes chargé de définir le code HTML de la page "
"d'erreur résultante ::"

msgid ""
"For convenience, and because it's a good idea to have a consistent 404 error "
"page across your site, Django provides an ``Http404`` exception. If you "
"raise ``Http404`` at any point in a view function, Django will catch it and "
"return the standard error page for your application, along with an HTTP "
"error code 404."
msgstr ""
"Par commodité et parce qu'il est conseillé d'avoir une page d'erreur 404 "
"cohérente pour tout un site, Django fournit une exception ``Http404``. Si "
"vous générez ``Http404`` quelque part dans une fonction de vue, Django "
"l'intercepte et renvoie la page d'erreur standard de l'application, en "
"compagnie du code d'erreur HTTP 404."

msgid ""
"In order to show customized HTML when Django returns a 404, you can create "
"an HTML template named ``404.html`` and place it in the top level of your "
"template tree. This template will then be served when :setting:`DEBUG` is "
"set to ``False``."
msgstr ""
"Afin de pouvoir afficher du HTML personnalisé lorsque Django répond avec une "
"page 404, il est possible de créer un gabarit HTML nommé ``404.html`` et de "
"le placer au premier niveau de l'arborescence des gabarits. Ce gabarit sera "
"alors utilisé lorsque le réglage  :setting:`DEBUG` est défini à ``False``."

msgid ""
"When :setting:`DEBUG` is ``True``, you can provide a message to ``Http404`` "
"and it will appear in the standard 404 debug template. Use these messages "
"for debugging purposes; they generally aren't suitable for use in a "
"production 404 template."
msgstr ""
"Lorsque :setting:`DEBUG` vaut ``True``, vous pouvez fournir un message à "
"``Http404`` et il apparaîtra dans le gabarit 404 standard de débogage. "
"Utilisez ces messages à des fins de débogage ; ils ne sont généralement pas "
"adaptés aux gabarits 404 de production."

msgid "Customizing error views"
msgstr "Personnalisation des vues d'erreur"

msgid ""
"The default error views in Django should suffice for most web applications, "
"but can easily be overridden if you need any custom behavior. Specify the "
"handlers as seen below in your URLconf (setting them anywhere else will have "
"no effect)."
msgstr ""
"Les vues d'erreur par défaut de Django conviennent bien à la majorité des "
"applications web, mais elles peuvent aisément être surchargées en cas de "
"besoin particulier. Redéfinissez les gestionnaires correspondants comme "
"démontré ci-dessous, dans la configuration d'URL racine (leur définition à "
"tout autre endroit est sans effet)."

msgid ""
"The :func:`~django.views.defaults.page_not_found` view is overridden by :"
"data:`~django.conf.urls.handler404`::"
msgstr ""
"La vue :func:`~django.views.defaults.page_not_found` est surchargée par :"
"data:`~django.conf.urls.handler404`::"

msgid ""
"The :func:`~django.views.defaults.server_error` view is overridden by :data:"
"`~django.conf.urls.handler500`::"
msgstr ""
"La vue :func:`~django.views.defaults.server_error` est surchargée par :data:"
"`~django.conf.urls.handler500`::"

msgid ""
"The :func:`~django.views.defaults.permission_denied` view is overridden by :"
"data:`~django.conf.urls.handler403`::"
msgstr ""
"La vue :func:`~django.views.defaults.permission_denied` est surchargée par :"
"data:`~django.conf.urls.handler403`::"

msgid ""
"The :func:`~django.views.defaults.bad_request` view is overridden by :data:"
"`~django.conf.urls.handler400`::"
msgstr ""
"La vue :func:`~django.views.defaults.bad_request` est surchargée par :data:"
"`~django.conf.urls.handler400`::"

msgid ""
"Use the :setting:`CSRF_FAILURE_VIEW` setting to override the CSRF error view."
msgstr ""
"Utilisez le réglage :setting:`CSRF_FAILURE_VIEW` pour surcharger la vue "
"d'erreur CSRF."

msgid "Testing custom error views"
msgstr "Test des vues d'erreur personnalisées"

msgid ""
"To test the response of a custom error handler, raise the appropriate "
"exception in a test view. For example::"
msgstr ""
"Pour tester la réponse d'un gestionnaire d'erreur personnalisé, générez "
"l'exception appropriée dans une vue de test. Par exemple ::"

msgid ""
"As well as being synchronous functions, views can also be asynchronous "
"(\"async\") functions, normally defined using Python's ``async def`` syntax. "
"Django will automatically detect these and run them in an async context. "
"However, you will need to use an async server based on ASGI to get their "
"performance benefits."
msgstr ""
"Même si les vues sont généralement des fonctions synchrones, elles peuvent "
"également être asynchrones (« async »), c'est-à-dire définie par la syntaxe "
"Python ``async def``. Django les détecte automatiquement et les exécute dans "
"un contexte asynchrone. Cependant, vous devrez utiliser un serveur "
"asynchrone basé sur ASGI pour obtenir les bénéfices de performance."

msgid "Here's an example of an async view::"
msgstr "Voici un exemple d'une vue asynchrone ::"

msgid ""
"You can read more about Django's async support, and how to best use async "
"views, in :doc:`/topics/async`."
msgstr ""
"Vous trouverez plus d'informations au sujet de la prise en charge du code "
"asynchrone par Django et sur la meilleure manière d'utiliser les vues "
"asynchrones dans :doc:`/topics/async`."

msgid "Format localization"
msgstr "Régionalisation des formats"

msgid ""
"Django's formatting system is capable of displaying dates, times and numbers "
"in templates using the format specified for the current :term:`locale "
"<locale name>`. It also handles localized input in forms."
msgstr ""
"Le système des formats de Django est capable d'afficher des dates, des "
"heures et des nombres dans les gabarits en utilisant les formats définis "
"pour la langue (:term:`locale <locale name>`) active. Il gère également les "
"saisies en formats régionalisés dans les formulaires."

msgid ""
"Two users accessing the same content may see dates, times and numbers "
"formatted in different ways, depending on the formats for their current "
"locale."
msgstr ""
"Deux utilisateurs accédant simultanément à un même contenu peuvent voir les "
"dates, les heures et les nombres mis en forme différemment, en fonction des "
"formats de leur langue actuelle."

msgid ""
"To enable number formatting with thousand separators, it is necessary to "
"set :setting:`USE_THOUSAND_SEPARATOR = True <USE_THOUSAND_SEPARATOR>` in "
"your settings file. Alternatively, you could use :tfilter:`intcomma` to "
"format numbers in your template."
msgstr ""
"Pour activer le format de nombre avec séparateur de milliers, il est "
"nécessaire de définir :setting:`USE_THOUSAND_SEPARATOR = True "
"<USE_THOUSAND_SEPARATOR>` dans le fichier des réglages. Il est aussi "
"possible d'utiliser :tfilter:`intcomma` pour mettre en forme les nombres "
"dans votre gabarit."

msgid ""
"There is a related :setting:`USE_I18N` setting that controls if Django "
"should activate translation. See :doc:`/topics/i18n/translation` for more "
"details."
msgstr ""
"Il existe un réglage lié nommé :setting:`USE_I18N` qui contrôle l'activation "
"ou non des traductions. Voir :doc:`/topics/i18n/translation` pour plus de "
"détails."

msgid "Locale aware input in forms"
msgstr "Saisies régionalisées dans les formulaires"

msgid ""
"When formatting is enabled, Django can use localized formats when parsing "
"dates, times and numbers in forms. That means it tries different formats for "
"different locales when guessing the format used by the user when inputting "
"data on forms."
msgstr ""
"Lorsque l'utilisation des formats est active, Django peut utiliser des "
"formats régionalisés lorsqu'il reçoit des dates, des heures et des nombres "
"en provenance de formulaires. Cela signifie qu'il essaie différents formats "
"de différentes langues pour deviner le format utilisé par l'utilisateur lors "
"de saisies de données dans un formulaire."

msgid ""
"Django uses different formats for displaying data to those it uses for "
"parsing data. Most notably, the formats for parsing dates can't use the "
"``%a`` (abbreviated weekday name), ``%A`` (full weekday name), ``%b`` "
"(abbreviated month name), ``%B`` (full month name), or ``%p`` (AM/PM)."
msgstr ""
"Django utilise différents formats pour afficher les données que ceux qu'il "
"utilise pour analyser les données reçues. Plus particulièrement, les formats "
"d'analyse de dates ne peuvent pas utiliser ``%a`` (jour de la semaine "
"abrégé), ``%A`` (jour de la semaine complet), ``%b`` (nom du mois abrégé), "
"``%B`` (nom du mois complet) et ``%p`` (AM/PM)."

msgid ""
"To enable a form field to localize input and output data use its "
"``localize`` argument::"
msgstr ""
"Pour qu'un champ de formulaire utilise des formats régionalisés pour mettre "
"en forme ses données affichées et saisies, utilisez son paramètre "
"``localize``::"

msgid "Controlling localization in templates"
msgstr "Contrôle de la régionalisation dans les gabarits"

msgid ""
"Django tries to use a locale specific format whenever it outputs a value in "
"a template."
msgstr ""
"Django tente d'utiliser une format spécifique à la langue active chaque fois "
"qu'il produit une valeur dans un gabarit."

msgid ""
"However, it may not always be appropriate to use localized values -- for "
"example, if you're outputting JavaScript or XML that is designed to be "
"machine-readable, you will always want unlocalized values. You may also want "
"to use localization in selected templates, rather than using localization "
"everywhere."
msgstr ""
"Cependant, il n’est pas toujours adéquat d’utiliser des valeurs "
"régionalisées, par exemple si vous produisez du JavaScript ou du XML qui "
"devront être interprétés par le système, ce contenu ne devrait jamais "
"contenir d’affichage régionalisé. Il peut aussi être parfois souhaitable de "
"limiter la régionalisation à certains gabarits, plutôt que de l’utiliser "
"partout."

msgid ""
"To allow for fine control over the use of localization, Django provides the "
"``l10n`` template library that contains the following tags and filters."
msgstr ""
"Pour permettre un contrôle plus fin sur l'emploi de la régionalisation, "
"Django propose la bibliothèque de gabarit ``l10n`` qui contient les balises "
"et filtres suivants."

msgid "Template tags"
msgstr "Balises de gabarit"

msgid "``localize``"
msgstr "``localize``"

msgid ""
"Enables or disables localization of template variables in the contained "
"block."
msgstr ""
"Active ou désactive la régionalisation de variables de gabarits dans le bloc "
"qu'elle définit."

msgid "To activate or deactivate localization for a template block, use:"
msgstr ""
"Pour activer ou désactiver la régionalisation pour un bloc de gabarit, "
"utilisez :"

msgid ""
"When localization is disabled, the :ref:`localization settings <settings-"
"l10n>` formats are applied."
msgstr ""
"Lorsque la régionalisation est désactivée, les formats des :ref:`réglages de "
"régionalisation <settings-l10n>` sont appliqués."

msgid ""
"See :tfilter:`localize` and :tfilter:`unlocalize` for template filters that "
"will do the same job on a per-variable basis."
msgstr ""
"Voir aussi :tfilter:`localize` et :tfilter:`unlocalize` pour des filtres de "
"gabarit qui font le même travail au niveau des variables."

msgid "Template filters"
msgstr "Filtres de gabarit"

msgid "Forces localization of a single value."
msgstr "Force la régionalisation d'une seule valeur."

msgid ""
"To disable localization on a single value, use :tfilter:`unlocalize`. To "
"control localization over a large section of a template, use the :ttag:"
"`localize` template tag."
msgstr ""
"Pour désactiver la régionalisation d'une seule valeur, utilisez :tfilter:"
"`unlocalize`. Pour contrôler la régionalisation sur toute une section d'un "
"gabarit, utilisez la balise de gabarit :ttag:`localize`."

msgid "``unlocalize``"
msgstr "``unlocalize``"

msgid "Forces a single value to be printed without localization."
msgstr "Force l'affichage d'une seule valeur sans régionalisation."

msgid ""
"To force localization of a single value, use :tfilter:`localize`. To control "
"localization over a large section of a template, use the :ttag:`localize` "
"template tag."
msgstr ""
"Pour forcer la régionalisation d'une seule valeur, utilisez :tfilter:"
"`localize`. Pour contrôler la régionalisation sur toute une section d'un "
"gabarit, utilisez la balise de gabarit :ttag:`localize`."

msgid ""
"Returns a string representation for numbers  (``int``, ``float``, or "
"``Decimal``) with the :ref:`localization settings <settings-l10n>` formats "
"applied."
msgstr ""
"Renvoie une représentation textuelle des nombres (``int``, ``float`` ou "
"``Decimal``) en leur appliquant les formats des :ref:`réglages de "
"régionalisation <settings-l10n>`."

msgid "Creating custom format files"
msgstr "Création de fichiers de formats personnalisés"

msgid ""
"Django provides format definitions for many locales, but sometimes you might "
"want to create your own, because a format file doesn't exist for your "
"locale, or because you want to overwrite some of the values."
msgstr ""
"Django fournit des définitions de formats pour de nombreuses langues, mais "
"il peut être parfois souhaitable de créer ses propres formats, soit parce "
"qu'il n'existe pas de fichier de formats pour votre langue, soit par ce que "
"vous souhaitez surcharger certaines valeurs."

msgid ""
"To use custom formats, specify the path where you'll place format files "
"first.  To do that, set your :setting:`FORMAT_MODULE_PATH` setting to the "
"package where format files will exist, for instance::"
msgstr ""
"Pour utiliser des formats personnalisés, indiquez d'abord le chemin où vous "
"allez placer les fichiers de formats. Pour cela, indiquez dans le réglage :"
"setting:`FORMAT_MODULE_PATH` le chemin du paquet dans lequel seront définis "
"les fichiers de formats ; par exemple ::"

msgid ""
"Files are not placed directly in this directory, but in a directory named as "
"the locale, and must be named ``formats.py``. Be careful not to put "
"sensitive information in these files as values inside can be exposed if you "
"pass the string to ``django.utils.formats.get_format()`` (used by the :"
"tfilter:`date` template filter)."
msgstr ""
"Les fichiers ne sont pas placés directement dans ce répertoire, mais dans un "
"répertoire nommé d'après la locale, et doit s'appeler ``formats.py``. Prenez "
"garde de ne pas mettre d'informations sensibles dans ces fichiers car les "
"valeurs contenues pourraient être exposées si la chaîne est passée à "
"``django.utils.formats.get_format()`` (utilisée par le filtre de gabarit :"
"tfilter:`date`)."

msgid ""
"To customize the English formats, a structure like this would be needed:"
msgstr ""
"Pour personnaliser les formats anglais, voici à quoi ressemblerait la "
"structure nécessaire :"

msgid ""
"where :file:`formats.py` contains custom format definitions. For example::"
msgstr ""
"où :file:`formats.py` contient les définitions de formats personnalisés. Par "
"exemple ::"

msgid ""
"to use a non-breaking space (Unicode ``00A0``) as a thousand separator, "
"instead of the default for English, a comma."
msgstr ""
"pour utiliser une espace insécable (Unicode ``00A0``) comme séparateur de "
"milliers au lieu du caractère par défaut qui est la virgule en anglais."

msgid "Limitations of the provided locale formats"
msgstr "Limites des formats de langue fournis"

msgid ""
"Some locales use context-sensitive formats for numbers, which Django's "
"localization system cannot handle automatically."
msgstr ""
"Certaines langues utilisent des formats différents selon le contexte pour "
"les nombres, ce que le système de régionalisation de Django ne sait pas "
"gérer automatiquement."

msgid "Switzerland (German)"
msgstr "Suisse (alémanique)"

msgid ""
"The Swiss number formatting depends on the type of number that is being "
"formatted. For monetary values, a comma is used as the thousand separator "
"and a decimal point for the decimal separator. For all other numbers, a "
"comma is used as decimal separator and a space as thousand separator. The "
"locale format provided by Django uses the generic separators, a comma for "
"decimal and a space for thousand separators."
msgstr ""
"Le système de mise en forme des nombres dépend du type de nombre. Pour les "
"valeurs monétaires, c'est la virgule qui doit être utilisée comme séparateur "
"de milliers et le point décimal comme séparateur décimal. Pour tous les "
"autres nombres, la virgule est utilisée comme séparateur décimal et l'espace "
"comme séparateur de milliers. Le format de langue fournit par Django utilise "
"toujours les séparateurs globaux, une virgule comme séparateur décimal et "
"l'espace comme séparateur de milliers."

msgid "Internationalization and localization"
msgstr "Internationalisation et régionalisation"

msgid ""
"The goal of internationalization and localization is to allow a single web "
"application to offer its content in languages and formats tailored to the "
"audience."
msgstr ""
"Le but de l'internationalisation et de la régionalisation est de permettre à "
"une seule application web de présenter son contenu dans des langues et des "
"formats adaptés à ses visiteurs."

msgid ""
"Django has full support for :doc:`translation of text </topics/i18n/"
"translation>`, :doc:`formatting of dates, times and numbers </topics/i18n/"
"formatting>`, and :doc:`time zones </topics/i18n/timezones>`."
msgstr ""
"Django prend pleinement en charge la :doc:`traduction de texte </topics/i18n/"
"translation>`, la :doc:`mise en forme de dates, d'heures et de nombres </"
"topics/i18n/formatting>`, et les :doc:`fuseaux horaires </topics/i18n/"
"timezones>`."

msgid "Essentially, Django does two things:"
msgstr "Essentiellement, Django effectue deux choses :"

msgid ""
"It allows developers and template authors to specify which parts of their "
"apps should be translated or formatted for local languages and cultures."
msgstr ""
"Il permet aux développeurs et aux rédacteurs de gabarits d'indiquer quelles "
"parties de leurs applications doivent être traduites ou mises en forme en "
"fonction des langues et cultures locales."

msgid ""
"It uses these hooks to localize web apps for particular users according to "
"their preferences."
msgstr ""
"Il utilise ces marqueurs pour régionaliser les applications web en fonction "
"des préférences des utilisateurs."

msgid ""
"Translation depends on the target language, and formatting usually depends "
"on the target country. This information is provided by browsers in the "
"``Accept-Language`` header. However, the time zone isn't readily available."
msgstr ""
"La traduction dépend de la langue cible et la mise en forme dépend "
"généralement du pays cible. Ces informations sont données par les "
"navigateurs dans l'en-tête ``Accept-Language``. Cependant, le fuseau horaire "
"n'est pas accessible de manière évidente."

msgid "Definitions"
msgstr "Définitions"

msgid ""
"The words \"internationalization\" and \"localization\" often cause "
"confusion; here's a simplified definition:"
msgstr ""
"Les mots « internationalisation » et « régionalisation » sont souvent "
"sources de confusion. En voici une définition simplifiée :"

msgid "internationalization"
msgstr "internationalisation"

msgid "Preparing the software for localization. Usually done by developers."
msgstr ""
"Préparation du logiciel en vue de sa régionalisation. Habituellement "
"effectuée par les développeurs."

msgid "localization"
msgstr "régionalisation"

msgid ""
"Writing the translations and local formats. Usually done by translators."
msgstr ""
"Rédaction des traductions et des formats de langue. Habituellement effectuée "
"par les traducteurs."

msgid ""
"More details can be found in the `W3C Web Internationalization FAQ`_, the "
"`Wikipedia article`_ or the `GNU gettext documentation`_."
msgstr ""
"Vous pouvez trouver de plus amples détails dans la  `FAQ W3C Web "
"Internationalization`_, l'`article Wikipédia`_ ou la `documentation de GNU "
"gettext`_."

msgid ""
"Translation is controlled by the :setting:`USE_I18N` setting. However, it "
"involves internationalization and localization. The name of the setting is "
"an unfortunate result of Django's history."
msgstr ""
"La traduction est contrôlée par le réglage :setting:`USE_I18N`. Cependant, "
"cela concerne à la fois l'internationalisation et la régionalisation. Le nom "
"de ce réglage dans Django provient d'une malencontreuse origine historique."

msgid ""
"Here are some other terms that will help us to handle a common language:"
msgstr ""
"Voici quelques autres termes qui vont nous aider à gérer une même langue :"

msgid "locale name"
msgstr "nom de locale"

msgid ""
"A locale name, either a language specification of the form ``ll`` or a "
"combined language and country specification of the form ``ll_CC``. Examples: "
"``it``, ``de_AT``, ``es``, ``pt_BR``, ``sr_Latn``. The language part is "
"always in lowercase. The country part is in titlecase if it has more than 2 "
"characters, otherwise it's in uppercase. The separator is an underscore."
msgstr ""
"Un nom de locale indiquant soit une langue sous la forme ``ll`` ou une "
"combinaison de code langue et pays sous la forme ``ll_PP``. Exemples : "
"``it``, ``de_AT``, ``es``, ``pt_BR``, ``sr_Latn``. Le code de langue est "
"toujours en minuscules. Le code pays en majuscules s'il comporte 2 "
"caractères, ou seulement la première lettre s'il comporte plus de "
"caractères. Le séparateur est un caractère soulignement."

msgid "language code"
msgstr "code de langue"

msgid ""
"Represents the name of a language. Browsers send the names of the languages "
"they accept in the ``Accept-Language`` HTTP header using this format. "
"Examples: ``it``, ``de-at``, ``es``, ``pt-br``. Language codes are generally "
"represented in lowercase, but the HTTP ``Accept-Language`` header is case-"
"insensitive. The separator is a dash."
msgstr ""
"Représente le nom d'une langue. Les navigateurs envoient les noms de langues "
"qu'ils acceptent dans l'en-tête HTTP ``Accept-Language`` avec ce format. "
"Exemples : ``it``, ``de-at``, ``es``, ``pt-br``. Les codes de langue sont "
"généralement représentés en minuscules, mais l'en-tête HTTP ``Accept-"
"Language`` n'est pas sensible à la casse. Le séparateur est un tiret."

msgid "message file"
msgstr "fichier de messages"

msgid ""
"A message file is a plain-text file, representing a single language, that "
"contains all available :term:`translation strings <translation string>` and "
"how they should be represented in the given language. Message files have a "
"``.po`` file extension."
msgstr ""
"Un fichier de messages est un fichier de texte pur correspondant à une seule "
"langue et qui contient toutes les :term:`chaînes de caractères de traduction "
"<translation string>` disponibles avec leur équivalent traduit dans la "
"langue donnée. Les fichiers de messages possèdent l'extension ``.po``."

msgid "translation string"
msgstr "chaîne à traduire"

msgid "A literal that can be translated."
msgstr "Du texte à traduire."

msgid "format file"
msgstr "format de fichier"

msgid ""
"A format file is a Python module that defines the data formats for a given "
"locale."
msgstr ""
"Un fichier de formats est un module Python définissant les formats de "
"données d'une langue définie."

msgid "Time zones"
msgstr "Fuseaux horaires"

msgid ""
"When support for time zones is enabled, Django stores datetime information "
"in UTC in the database, uses time-zone-aware datetime objects internally, "
"and translates them to the end user's time zone in templates and forms."
msgstr ""
"Lorsque la prise en charge des fuseaux horaires est activée, Django stocke "
"les informations de date/heure en UTC dans la base de données, utilise en "
"interne des objets date/heure conscients de leur fuseau horaire et les "
"convertit dans les gabarits et les formulaires en utilisant le fuseau "
"horaire de l'utilisateur."

msgid ""
"This is handy if your users live in more than one time zone and you want to "
"display datetime information according to each user's wall clock."
msgstr ""
"C'est très pratique si vos utilisateurs sont répartis sur plus d'un fuseau "
"horaire et que vous vouliez afficher les informations temporelles selon "
"l'heure locale de chacun."

msgid ""
"Even if your website is available in only one time zone, it's still good "
"practice to store data in UTC in your database. The main reason is daylight "
"saving time (DST). Many countries have a system of DST, where clocks are "
"moved forward in spring and backward in autumn. If you're working in local "
"time, you're likely to encounter errors twice a year, when the transitions "
"happen. This probably doesn't matter for your blog, but it's a problem if "
"you over bill or under bill your customers by one hour, twice a year, every "
"year. The solution to this problem is to use UTC in the code and use local "
"time only when interacting with end users."
msgstr ""
"Même si votre site Web n'est utilisé que dans un seul fuseau horaire, "
"stocker les données en UTC dans la base de données fait partie des bonnes "
"pratiques. La  raison principale étant l'heure d'été (daylight saving time - "
"DST). Dans beaucoup de pays, l'heure d'été fait avancer d'une heure au "
"printemps et reculer d'une heure en automne. Si vous travaillez en temps "
"local, vous risquez d'obtenir des erreurs deux fois par année, au moment de "
"la transition. Ce n'est probablement pas un problème pour votre blog, mais "
"c'en est un si vous surfacturez ou sous-facturez vos clients d'une heure, "
"deux fois par année, chaque année. La solution à ce problème est d'utiliser "
"UTC dans le code, et le temps local uniquement lors des interactions avec "
"les utilisateurs du site."

msgid ""
"Time zone support is enabled by default. To disable it, set :setting:`USE_TZ "
"= False <USE_TZ>` in your settings file."
msgstr ""
"La prise en charge des fuseaux horaires est activée par défaut. Pour la "
"désactiver, définissez :setting:`USE_TZ = False <USE_TZ>` dans votre fichier "
"de réglages."

msgid "In older version, time zone support was disabled by default."
msgstr ""
"Dans les anciennes versions, la prise en charge des fuseaux horaires était "
"désactivée par défaut."

msgid ""
"Time zone support uses :mod:`zoneinfo`, which is part of the Python standard "
"library from Python 3.9."
msgstr ""
"La prise en charge des fuseaux horaires utilise :mod:`zoneinfo` qui fait "
"partie de la bibliothèque standard de Python à partir de Python 3.9."

msgid ""
"If you're wrestling with a particular problem, start with the :ref:`time "
"zone FAQ <time-zones-faq>`."
msgstr ""
"Si vous êtes empêtré dans un problème particulier, commencez par lire la :"
"ref:`FAQ des fuseaux horaires <time-zones-faq>`."

msgid "Concepts"
msgstr "Concepts"

msgid "Naive and aware datetime objects"
msgstr "Objets ``datetime`` naïfs et conscients"

msgid ""
"Python's :class:`datetime.datetime` objects have a ``tzinfo`` attribute that "
"can be used to store time zone information, represented as an instance of a "
"subclass of :class:`datetime.tzinfo`. When this attribute is set and "
"describes an offset, a datetime object is **aware**. Otherwise, it's "
"**naive**."
msgstr ""
"Les objets :class:`datetime.datetime` de Python possèdent un attribut "
"``tzinfo`` pouvant être utilisé pour stocker le fuseau horaire, représenté "
"par une instance d'une sous-classe de :class:`datetime.tzinfo`. Lorsque cet "
"attribut est défini et qu'il décrit un décalage horaire, l'objet "
"``datetime`` est **conscient**. Dans le cas contraire, il est **naïf**."

msgid ""
"You can use :func:`~django.utils.timezone.is_aware` and :func:`~django.utils."
"timezone.is_naive` to determine whether datetimes are aware or naive."
msgstr ""
"Vous pouvez utiliser  :func:`~django.utils.timezone.is_aware` et :func:"
"`~django.utils.timezone.is_naive` pour déterminer si les objets ``datetime`` "
"sont conscients (aware) ou naïfs."

msgid ""
"When time zone support is disabled, Django uses naive datetime objects in "
"local time. This is sufficient for many use cases. In this mode, to obtain "
"the current time, you would write::"
msgstr ""
"Lorsque la prise en charge des fuseaux horaires est désactivée, Django "
"utilise des objets ``datetime`` naïfs en heure locale. C'est suffisant dans "
"de nombreux cas. Dans ce mode, pour obtenir le temps actuel, vous écririez ::"

msgid ""
"When time zone support is enabled (:setting:`USE_TZ=True <USE_TZ>`), Django "
"uses time-zone-aware datetime objects. If your code creates datetime "
"objects, they should be aware too. In this mode, the example above becomes::"
msgstr ""
"Lorsque la prise en charge des fuseaux horaires est activée (:setting:"
"`USE_TZ=True <USE_TZ>`), Django utilise des objets ``datetime`` conscients "
"de leur fuseau horaire. Si vote code crée des objets ``datetime``, ils "
"devraient également être conscients. Dans ce mode, l'exemple ci-dessus "
"devient ::"

msgid ""
"Dealing with aware datetime objects isn't always intuitive. For instance, "
"the ``tzinfo`` argument of the standard datetime constructor doesn't work "
"reliably for time zones with DST. Using UTC is generally safe; if you're "
"using other time zones, you should review the :mod:`zoneinfo` documentation "
"carefully."
msgstr ""
"La manipulation des objets ``datetime`` conscients n'est pas toujours "
"intuitive. Par exemple, le paramètre ``tzinfo`` du constructeur standard de "
"``datetime`` ne fonctionne pas de manière fiable pour les fuseaux horaires "
"avec heure d'été. L'utilisation de l'heure UTC est généralement sûre ; si "
"vous utilisez d'autres fuseaux horaires, vous devriez lire attentivement la "
"documentation de :mod:`zoneinfo`."

msgid ""
"Python's :class:`datetime.time` objects also feature a ``tzinfo`` attribute, "
"and PostgreSQL has a matching ``time with time zone`` type. However, as "
"PostgreSQL's docs put it, this type \"exhibits properties which lead to "
"questionable usefulness\"."
msgstr ""
"Les objets :class:`datetime.time` de Python comportent également un attribut "
"``tzinfo``, et PostgreSQL possède un type correspondant ``time with time "
"zone`` (heure avec fuseau horaire). Cependant, comme l'explique la "
"documentation de PostgreSQL, ce type « prête des propriétés qui font douter "
"de son utilité »."

msgid ""
"Django only supports naive time objects and will raise an exception if you "
"attempt to save an aware time object, as a timezone for a time with no "
"associated date does not make sense."
msgstr ""
"Django ne prend en charge que des objets ``time`` naïfs et génère une "
"exception si vous essayez d'enregistrer un objet ``time`` conscient, dans la "
"mesure où un fuseau horaire n'a pas de sens pour un objet ``time`` sans date "
"associée."

msgid "Interpretation of naive datetime objects"
msgstr "Interprétation des objets ``datetime`` naïfs"

msgid ""
"When :setting:`USE_TZ` is ``True``, Django still accepts naive datetime "
"objects, in order to preserve backwards-compatibility. When the database "
"layer receives one, it attempts to make it aware by interpreting it in the :"
"ref:`default time zone <default-current-time-zone>` and raises a warning."
msgstr ""
"Lorsque :setting:`USE_TZ` vaut ``True``, Django accepte encore les objets "
"``datetime`` naïfs, afin de préserver la rétrocompatibilité. Lorsque la "
"couche base de données en reçoit un, elle essaie de le rendre conscient en "
"l'interprétant dans le :ref:`fuseau horaire par défaut <default-current-time-"
"zone>` et génère un avertissement."

msgid ""
"Unfortunately, during DST transitions, some datetimes don't exist or are "
"ambiguous. That's why you should always create aware datetime objects when "
"time zone support is enabled. (See the :mod:`Using ZoneInfo section of the "
"zoneinfo docs <zoneinfo>` for examples using the ``fold`` attribute to "
"specify the offset that should apply to a datetime during a DST transition.)"
msgstr ""
"Malheureusement, durant les transitions d'heure d'été/hiver, certaines dates "
"n'existent pas ou sont ambiguës. C'est pourquoi vous devriez toujours créer "
"des objets date conscients lorsque la prise en charge des fuseaux horaires "
"est activée (voir la :mod:`section sur l'utilisation de ZoneInfo dans la "
"documentationde zoneinfo <zoneinfo>` pour des exemples sur l'utilisation de "
"l'attribut ``fold`` pour indiquer le décalage qui devrait s'appliquer à une "
"date durant la transition heure d'été/hiver)."

msgid ""
"In practice, this is rarely an issue. Django gives you aware datetime "
"objects in the models and forms, and most often, new datetime objects are "
"created from existing ones through :class:`~datetime.timedelta` arithmetic. "
"The only datetime that's often created in application code is the current "
"time, and :func:`timezone.now() <django.utils.timezone.now>` automatically "
"does the right thing."
msgstr ""
"En pratique, c'est rarement un problème. Django produit des objets "
"``datetime`` conscients dans les modèles et les formulaires, et la plupart "
"du temps, les nouveaux objets ``datetime`` sont créés à partir d'objets "
"existants par des opérations :class:`~datetime.timedelta`. Le seul objet "
"``datetime`` qui est souvent créé dans du code applicatif est l'heure "
"actuelle et :func:`timezone.now() <django.utils.timezone.now>` fait "
"automatiquement ce qu'il faut."

msgid "Default time zone and current time zone"
msgstr "Fuseau horaire par défaut et fuseau horaire actuel"

msgid ""
"The **default time zone** is the time zone defined by the :setting:"
"`TIME_ZONE` setting."
msgstr ""
"Le **fuseau horaire par défaut** est le fuseau horaire défini par le "
"réglage :setting:`TIME_ZONE`."

msgid "The **current time zone** is the time zone that's used for rendering."
msgstr ""
"Le **fuseau horaire actuel** est le fuseau horaire utilisé pour l'affichage."

msgid ""
"You should set the current time zone to the end user's actual time zone "
"with :func:`~django.utils.timezone.activate`. Otherwise, the default time "
"zone is used."
msgstr ""
"Vous devriez définir le fuseau horaire actuel au fuseau horaire réel de "
"l'utilisateur avec :func:`~django.utils.timezone.activate`. Sinon, c'est le "
"fuseau horaire par défaut qui est utilisé."

msgid ""
"As explained in the documentation of :setting:`TIME_ZONE`, Django sets "
"environment variables so that its process runs in the default time zone. "
"This happens regardless of the value of :setting:`USE_TZ` and of the current "
"time zone."
msgstr ""
"Comme expliqué dans la documentation de :setting:`TIME_ZONE`, Django définit "
"des variables d'environnement afin que son processus tourne dans le fuseau "
"horaire par défaut. Ce comportement est indépendant de la valeur de :setting:"
"`USE_TZ` et du fuseau horaire actuel."

msgid ""
"When :setting:`USE_TZ` is ``True``, this is useful to preserve backwards-"
"compatibility with applications that still rely on local time. However, :ref:"
"`as explained above <naive-datetime-objects>`, this isn't entirely reliable, "
"and you should always work with aware datetimes in UTC in your own code. For "
"instance, use :meth:`~datetime.datetime.fromtimestamp` and set the ``tz`` "
"parameter to :attr:`~datetime.timezone.utc`."
msgstr ""
"Lorsque :setting:`USE_TZ` vaut ``True``, ceci est utile pour préserver la "
"rétrocompatibilité avec les applications qui se basent encore sur le temps "
"local. Cepedant, :ref:`comme expliqué ci-dessus <naive-datetime-objects>`, "
"ce n'est pas totalement fiable et vous devriez toujours travailler avec des "
"objets ``datetime`` conscients en UTC dans votre propre code. Par exemple, "
"utilisez :meth:`~datetime.datetime.fromtimestamp` et définissez le paramètre "
"``tz`` à :attr:`~datetime.timezone.utc`."

msgid "Selecting the current time zone"
msgstr "Sélection du fuseau horaire actuel"

msgid ""
"The current time zone is the equivalent of the current :term:`locale <locale "
"name>` for translations. However, there's no equivalent of the ``Accept-"
"Language`` HTTP header that Django could use to determine the user's time "
"zone automatically. Instead, Django provides :ref:`time zone selection "
"functions <time-zone-selection-functions>`. Use them to build the time zone "
"selection logic that makes sense for you."
msgstr ""
"Le fuseau horaire actuel est l'équivalent de la  :term:`langue <locale "
"name>` actuelle pour les traductions. Cependant, il n'y a pas d'équivalent à "
"l'en-tête HTTP ``Accept-Language`` que Django pourrait utiliser pour "
"déterminer automatiquement le fuseau horaire de l'utilisateur. Au lieu de "
"cela, Django fournit des :ref:`fonctions de sélection du fuseau horaire "
"<time-zone-selection-functions>`. Utilisez-les pour bâtir une logique de "
"sélection du fuseau horaire qui a du sens dans votre situation."

msgid ""
"Most websites that care about time zones ask users in which time zone they "
"live and store this information in the user's profile. For anonymous users, "
"they use the time zone of their primary audience or UTC. :func:`zoneinfo."
"available_timezones` provides a set of available timezones that you can use "
"to build a map from likely locations to time zones."
msgstr ""
"La plupart des sites Web se préoccupant des fuseaux horaires demandent aux "
"utilisateurs leur fuseau horaire de domicile et stockent cette information "
"dans le profil des utilisateurs. Pour les utilisateurs anonymes, ils "
"utilisent le fuseau horaire de la majorité de leur public ou l'heure UTC. :"
"func:`zoneinfo.available_timezones` fournit un ensemble de fuseaux horaires "
"disponibles pour construire une table de correspondance entre des "
"emplacements probables et des fuseaux horaires."

msgid ""
"Here's an example that stores the current timezone in the session. (It skips "
"error handling entirely for the sake of simplicity.)"
msgstr ""
"Voici un exemple qui stocke le fuseau horaire actuel dans la session (la "
"gestion d'erreur est totalement absente par simplicité)."

msgid "Add the following middleware to :setting:`MIDDLEWARE`::"
msgstr "Ajoutez l'intergiciel suivant à :setting:`MIDDLEWARE`::"

msgid "Create a view that can set the current timezone::"
msgstr "Créez une vue capable de définir le fuseau horaire actuel ::"

msgid "Include a form in ``template.html`` that will ``POST`` to this view:"
msgstr ""
"Ajoutez un formulaire dans ``template.html`` dont la cible ``POST`` est "
"cette vue :"

msgid "Time zone aware input in forms"
msgstr "Saisie de données avec fuseau horaire dans les formulaires"

msgid ""
"When you enable time zone support, Django interprets datetimes entered in "
"forms in the :ref:`current time zone <default-current-time-zone>` and "
"returns aware datetime objects in ``cleaned_data``."
msgstr ""
"Lorsque vous activez la prise en charge des fuseaux horaires, Django "
"interprète les dates/heures saisies dans les formulaires dans le :ref:"
"`fuseau horaire actuel <default-current-time-zone>` et place des objets "
"``datetime`` conscients dans ``cleaned_data``."

msgid ""
"Converted datetimes that don't exist or are ambiguous because they fall in a "
"DST transition will be reported as invalid values."
msgstr ""
"Les dates converties qui n'existent pas ou qui sont ambiguës car elles se "
"situent dans une période de transition seront signalées comme des valeurs "
"non valables."

msgid "Time zone aware output in templates"
msgstr "Affichage de fuseaux horaires conscients dans les gabarits"

msgid ""
"When you enable time zone support, Django converts aware datetime objects to "
"the :ref:`current time zone <default-current-time-zone>` when they're "
"rendered in templates. This behaves very much like :doc:`format localization "
"</topics/i18n/formatting>`."
msgstr ""
"Lorsque vous activez la prise en charge des fuseaux horaires, Django "
"convertit les objets ``datetime`` dans le :ref:`fuseau horaire actuel "
"<default-current-time-zone>` au moment où ils sont affichés dans un gabarit. "
"Ce comportement est très semblable à la :doc:`régionalisation des formats </"
"topics/i18n/formatting>`."

msgid ""
"Django doesn't convert naive datetime objects, because they could be "
"ambiguous, and because your code should never produce naive datetimes when "
"time zone support is enabled. However, you can force conversion with the "
"template filters described below."
msgstr ""
"Django ne convertit pas les objets ``datetime`` naïfs car ils peuvent être "
"ambigus et parce que votre code ne doit jamais produire de tels objets naïfs "
"lorsque la prise en charge des fuseaux horaires est activée. Cependant, vous "
"pouvez forcer la conversion avec les filtres de gabarit décrits ci-dessous."

msgid ""
"Conversion to local time isn't always appropriate -- you may be generating "
"output for computers rather than for humans. The following filters and tags, "
"provided by the ``tz`` template tag library, allow you to control the time "
"zone conversions."
msgstr ""
"La conversion en temps local n'est pas toujours adéquate, par exemple dans "
"le cas où vous générez du contenu à destination d'autres ordinateurs. Les "
"filtres et balises suivants, mis à disposition par la bibliothèque de "
"balises de gabarit ``tz``, permettent de contrôler les conversions de "
"fuseaux horaires."

msgid "``localtime``"
msgstr "``localtime``"

msgid ""
"Enables or disables conversion of aware datetime objects to the current time "
"zone in the contained block."
msgstr ""
"Active ou désactive la conversion d'objets ``datetime`` conscients dans le "
"fuseau horaire actuel à l'intérieur du bloc contenu."

msgid ""
"This tag has exactly the same effects as the :setting:`USE_TZ` setting as "
"far as the template engine is concerned. It allows a more fine grained "
"control of conversion."
msgstr ""
"Cette balise a exactement le même effet que le réglage :setting:`USE_TZ` en "
"ce qui concerne le moteur de gabarits. Elle permet un contrôle plus précis "
"des endroits où la conversion se fait."

msgid "To activate or deactivate conversion for a template block, use:"
msgstr ""
"Pour activer ou désactiver la conversion pour un bloc de gabarit, utilisez :"

msgid ""
"The value of :setting:`USE_TZ` isn't respected inside of a ``{% localtime %}"
"`` block."
msgstr ""
"La valeur de :setting:`USE_TZ` n'est pas prise en compte à l'intérieur d'un "
"bloc ``{% localtime %}``."

msgid "``timezone``"
msgstr "``timezone``"

msgid ""
"Sets or unsets the current time zone in the contained block. When the "
"current time zone is unset, the default time zone applies."
msgstr ""
"Définit ou annule le fuseau horaire actuel dans le bloc contenu. Lorsque le "
"fuseau horaire actuel est annulé, c'est le fuseau horaire par défaut qui "
"s'applique."

msgid "``get_current_timezone``"
msgstr "``get_current_timezone``"

msgid ""
"You can get the name of the current time zone using the "
"``get_current_timezone`` tag:"
msgstr ""
"Vous pouvez obtenir le nom du fuseau horaire actuel en utilisant la balise "
"``get_current_timezone``:"

msgid ""
"Alternatively, you can activate the :func:`~django.template."
"context_processors.tz` context processor and use the ``TIME_ZONE`` context "
"variable."
msgstr ""
"Une alternative possible est d'activer le processeur de contexte :func:"
"`~django.template.context_processors.tz` et d'utiliser la variable de "
"contexte ``TIME_ZONE``."

msgid ""
"These filters accept both aware and naive datetimes. For conversion "
"purposes, they assume that naive datetimes are in the default time zone. "
"They always return aware datetimes."
msgstr ""
"Ces filtres acceptent aussi bien des objets ``datetime`` conscients que "
"naïfs. À des fins de conversion, ils partent du principe que les objets "
"naïfs sont dans le fuseau horaire par défaut. Ils renvoient toujours des "
"objets ``datetime`` conscients."

msgid "Forces conversion of a single value to the current time zone."
msgstr "Force la conversion d'une valeur unique dans le fuseau horaire actuel."

msgid "``utc``"
msgstr "``utc``"

msgid "Forces conversion of a single value to UTC."
msgstr "Force la conversion d'une seule valeur en UTC."

msgid "Forces conversion of a single value to an arbitrary timezone."
msgstr ""
"Force la conversion d'une seule valeur dans un fuseau horaire arbitraire."

msgid ""
"The argument must be an instance of a :class:`~datetime.tzinfo` subclass or "
"a time zone name."
msgstr ""
"Le paramètre doit être une instance d'une sous-classe de :class:`~datetime."
"tzinfo` ou un nom de fuseau horaire."

msgid "Migration guide"
msgstr "Guide de migration"

msgid ""
"Here's how to migrate a project that was started before Django supported "
"time zones."
msgstr ""
"Voici comment effectuer la migration d'un projet démarré avant que Django ne "
"prenne en charge les fuseaux horaires."

msgid "Database"
msgstr "Base de données"

msgid "PostgreSQL"
msgstr "PostgreSQL"

msgid ""
"The PostgreSQL backend stores datetimes as ``timestamp with time zone``. In "
"practice, this means it converts datetimes from the connection's time zone "
"to UTC on storage, and from UTC to the connection's time zone on retrieval."
msgstr ""
"Le moteur PostgreSQL stocke les dates/heures comme ``timestamp with time "
"zone``. En pratique, cela signifie qu'il convertit les objets ``datetime`` "
"en UTC à partir du fuseau horaire de la connexion au moment du stockage, et "
"à partir d'UTC vers le fuseau horaire de la connexion lors de la sélection."

msgid ""
"As a consequence, if you're using PostgreSQL, you can switch between "
"``USE_TZ = False`` and ``USE_TZ = True`` freely. The database connection's "
"time zone will be set to :setting:`DATABASE-TIME_ZONE` or ``UTC`` "
"respectively, so that Django obtains correct datetimes in all cases. You "
"don't need to perform any data conversions."
msgstr ""
"En conséquence, si vous utilisez PostgreSQL, vous pouvez librement passer de "
"``USE_TZ = False`` à ``USE_TZ = True`` et inversement. Le fuseau horaire de "
"la connexion de la base de données sera défini respectivement à :setting:"
"`DATABASE-TIME_ZONE` et à ``UTC``, ce qui fait que Django reçoit des dates/"
"heures correctes dans tous les cas. Vous n'avez pas à convertir les données."

msgid "Time zone settings"
msgstr "Réglages de fuseaux horaires"

msgid ""
"The :setting:`time zone <DATABASE-TIME_ZONE>` configured for the connection "
"in the :setting:`DATABASES` setting is distinct from the general :setting:"
"`TIME_ZONE` setting."
msgstr ""
"Le :setting:`fuseau horaire <DATABASE-TIME_ZONE>` configuré pour la "
"connexion dans le réglage :setting:`DATABASES` est différent du réglage "
"général :setting:`TIME_ZONE`."

msgid "Other databases"
msgstr "Autres bases de données"

msgid ""
"Other backends store datetimes without time zone information. If you switch "
"from ``USE_TZ = False`` to ``USE_TZ = True``, you must convert your data "
"from local time to UTC -- which isn't deterministic if your local time has "
"DST."
msgstr ""
"Les autres moteurs stockent les dates/heures sans information de fuseau "
"horaire. Si vous passez de ``USE_TZ = False`` à ``USE_TZ = True``, vous "
"devez convertir vos données du temps local en UTC, ce qui n'est pas "
"déterministe si votre temps local est sujet à l'heure d'été."

msgid "Code"
msgstr "Code"

msgid ""
"The first step is to add :setting:`USE_TZ = True <USE_TZ>` to your settings "
"file. At this point, things should mostly work. If you create naive datetime "
"objects in your code, Django makes them aware when necessary."
msgstr ""
"La première étape est d'ajouter :setting:`USE_TZ = True <USE_TZ>` à votre "
"fichier de réglages. À ce stade, tout devrait fonctionner en principe. Si "
"vous créez des objets ``datetime`` naïfs dans votre code, Django les rend "
"conscients en cas de besoin."

msgid ""
"However, these conversions may fail around DST transitions, which means you "
"aren't getting the full benefits of time zone support yet. Also, you're "
"likely to run into a few problems because it's impossible to compare a naive "
"datetime with an aware datetime. Since Django now gives you aware datetimes, "
"you'll get exceptions wherever you compare a datetime that comes from a "
"model or a form with a naive datetime that you've created in your code."
msgstr ""
"Cependant, ces conversions peuvent échouer aux alentours des transitions "
"d'heure d'été, ce qui signifie que vous n'obtenez pas encore tous les "
"bénéfices de la prise en charge des fuseaux horaires. Il est également "
"probable que vous rencontriez quelques problèmes car il est impossible de "
"comparer une date/heure naïve avec une date/heure consciente. Comme Django "
"vous donne maintenant des dates/heures conscientes, vous obtiendrez des "
"exceptions chaque fois que vous comparez une date/heure provenant d'un "
"modèle ou d'un formulaire avec une date/heure naïve que vous avez créée dans "
"votre code."

msgid ""
"So the second step is to refactor your code wherever you instantiate "
"datetime objects to make them aware. This can be done incrementally. :mod:"
"`django.utils.timezone` defines some handy helpers for compatibility code: :"
"func:`~django.utils.timezone.now`, :func:`~django.utils.timezone.is_aware`, :"
"func:`~django.utils.timezone.is_naive`, :func:`~django.utils.timezone."
"make_aware`, and :func:`~django.utils.timezone.make_naive`."
msgstr ""
"La seconde étape est donc de réviser votre code pour que chaque endroit où "
"vous créer des objets ``datetime``, ceux-ci soient conscients. Cela peut se "
"faire progressivement. :mod:`django.utils.timezone` définit quelques "
"utilitaires bien pratiques pour du code compatible : :func:`~django.utils."
"timezone.now`, :func:`~django.utils.timezone.is_aware`, :func:`~django.utils."
"timezone.is_naive`, :func:`~django.utils.timezone.make_aware` et :func:"
"`~django.utils.timezone.make_naive`."

msgid ""
"Finally, in order to help you locate code that needs upgrading, Django "
"raises a warning when you attempt to save a naive datetime to the database:"
msgstr ""
"Finalement, pour vous aider à trouver le code qui a besoin d'être mis à "
"jour, Django émet un avertissement lorsque vous essayez d'enregistrer une "
"date/heure naïve dans la base de données :"

msgid ""
"During development, you can turn such warnings into exceptions and get a "
"traceback by adding the following to your settings file::"
msgstr ""
"Durant le développement, vous pouvez transformer ces avertissements en "
"exceptions et obtenir une trace d'appel en ajoutant ce qui suit dans votre "
"fichier de réglages ::"

msgid ""
"When serializing an aware datetime, the UTC offset is included, like this::"
msgstr ""
"Lors de la sérialisation d'une date/heure consciente, le décalage UTC est "
"pris en compte, comme ceci ::"

msgid "While for a naive datetime, it isn't::"
msgstr "Alors que pour une date/heure naïve, ce n'est pas le cas ::"

msgid ""
"For models with :class:`~django.db.models.DateTimeField`\\ s, this "
"difference makes it impossible to write a fixture that works both with and "
"without time zone support."
msgstr ""
"Pour les modèles comportant des champs :class:`~django.db.models."
"DateTimeField`, cette différence rend impossible l'écriture d'un instantané "
"fonctionnant à la fois avec et sans prise en charge des fuseaux horaires."

msgid ""
"Fixtures generated with ``USE_TZ = False``, or before Django 1.4, use the "
"\"naive\" format. If your project contains such fixtures, after you enable "
"time zone support, you'll see :exc:`RuntimeWarning`\\ s when you load them. "
"To get rid of the warnings, you must convert your fixtures to the \"aware\" "
"format."
msgstr ""
"Les instantanés générés avec ``USE_TZ = False`` ou avant Django 1.4 "
"utilisent le format « naïf ». Si votre projet contient de tels instantanés "
"et que vous activez la prise en charge des fuseaux horaires, vous verrez des "
"exceptions :exc:`RuntimeWarning` lorsque vous les chargez. Pour vous "
"débarrasser des ces avertissements, vous devez convertir vos instantanés au "
"format « conscient »."

msgid ""
"You can regenerate fixtures with :djadmin:`loaddata` then :djadmin:"
"`dumpdata`. Or, if they're small enough, you can edit them to add the UTC "
"offset that matches your :setting:`TIME_ZONE` to each serialized datetime."
msgstr ""
"Vous pouvez régénérer les instantanés avec :djadmin:`loaddata`, puis :"
"djadmin:`dumpdata`. Ou s'ils ne sont pas trop gros, vous pouvez les modifier "
"et ajouter le décalage UTC correspondant à votre  :setting:`TIME_ZONE` dans "
"chaque objet ``datetime`` sérialisé."

msgid "FAQ"
msgstr "FAQ"

msgid "Setup"
msgstr "Configuration"

msgid ""
"**I don't need multiple time zones. Should I enable time zone support?**"
msgstr ""
"**Je n'ai pas besoin de plusieurs fuseaux horaires. Dois-je activer la prise "
"en charge des fuseaux horaires ?**"

msgid ""
"Yes. When time zone support is enabled, Django uses a more accurate model of "
"local time. This shields you from subtle and unreproducible bugs around "
"daylight saving time (DST) transitions."
msgstr ""
"Oui. Lorsque la prise en charge des fuseaux horaires est activée, Django "
"utilise un modèle plus précis du temps local. Cela vous protège de bogues "
"subtils et non reproductibles lors des transitions d'heure d'été/hiver (DST)."

msgid ""
"When you enable time zone support, you'll encounter some errors because "
"you're using naive datetimes where Django expects aware datetimes. Such "
"errors show up when running tests. You'll quickly learn how to avoid invalid "
"operations."
msgstr ""
"Lorsque vous activez la prise en charge des fuseaux horaires, vous allez "
"rencontrer certaines erreurs parce que vous utilisez des dates/heures naïves "
"là où Django s'attend à des dates/heures conscientes. De telles erreurs "
"apparaissent lors de l'exécution des tests. Vous apprendrez rapidement "
"comment éviter les opérations non valides."

msgid ""
"On the other hand, bugs caused by the lack of time zone support are much "
"harder to prevent, diagnose and fix. Anything that involves scheduled tasks "
"or datetime arithmetic is a candidate for subtle bugs that will bite you "
"only once or twice a year."
msgstr ""
"D'un autre côté, les bogues qui proviennent d'une non prise en charge des "
"fuseaux horaires sont beaucoup plus durs à prévenir, à diagnostiquer et à "
"corriger. Tout ce qui touche aux tâches planifiées ou à l'arithmétique des "
"dates/heures est sujet à de subtils bogues qui ne vous affecteront qu'une ou "
"deux fois par année."

msgid ""
"For these reasons, time zone support is enabled by default in new projects, "
"and you should keep it unless you have a very good reason not to."
msgstr ""
"C'est pour ces raisons que la prise en charge des fuseaux horaires est "
"activée par défaut dans les nouveaux projets, et vous devriez garder ce "
"réglage pour autant que vous n'ayez pas une bonne raison de ne pas le faire."

msgid "**I've enabled time zone support. Am I safe?**"
msgstr ""
"**J'ai activé la prise en charge des fuseaux horaires. Suis-je tranquille ?**"

msgid ""
"Maybe. You're better protected from DST-related bugs, but you can still "
"shoot yourself in the foot by carelessly turning naive datetimes into aware "
"datetimes, and vice-versa."
msgstr ""
"Peut-être. Vous êtes mieux protégé des bogues liés à l'heure d'été, mais il "
"est toujours possible que vous vous trompiez en convertissant sans "
"précaution des objets ``datetime`` naïfs en objets ``datetime`` conscients "
"et vice-versa."

msgid ""
"If your application connects to other systems -- for instance, if it queries "
"a web service -- make sure datetimes are properly specified. To transmit "
"datetimes safely, their representation should include the UTC offset, or "
"their values should be in UTC (or both!)."
msgstr ""
"Si votre application se connecte à d'autres systèmes, par exemple si elle "
"interroge un service web, prenez soin de bien définir les dates/heures. Pour "
"les transmettre de manière fiable, leur représentation doit inclure le "
"décalage UTC ou leur valeur doit être en UTC (ou les deux !)."

msgid ""
"Finally, our calendar system contains interesting edge cases. For example, "
"you can't always subtract one year directly from a given date:"
msgstr ""
"Finalement, notre système de calendrier contient des cas limites "
"intéressants. Par exemple, il n'est pas toujours possible de soustraire une "
"année directement d'une date donnée :"

msgid ""
"To implement such a function correctly, you must decide whether 2012-02-29 "
"minus one year is 2011-02-28 or 2011-03-01, which depends on your business "
"requirements."
msgstr ""
"Pour implémenter une telle fonction correctement, vous devez décider si "
"2012-02-29 moins une année est 2011-02-28 ou 2011-03-01, ce qui dépend de "
"vos exigences métier."

msgid ""
"**How do I interact with a database that stores datetimes in local time?**"
msgstr ""
"**Comment interagir avec une base de données stockant les dates/heures en "
"temps local ?**"

msgid ""
"Set the :setting:`TIME_ZONE <DATABASE-TIME_ZONE>` option to the appropriate "
"time zone for this database in the :setting:`DATABASES` setting."
msgstr ""
"Définissez l'option :setting:`TIME_ZONE <DATABASE-TIME_ZONE>` au fuseau "
"horaire correspondant à cette base de données dans le réglage :setting:"
"`DATABASES`."

msgid ""
"This is useful for connecting to a database that doesn't support time zones "
"and that isn't managed by Django when :setting:`USE_TZ` is ``True``."
msgstr ""
"C'est utile pour se connecter à une base de données qui ne gère pas les "
"fuseaux horaires et qui n'est pas gérée par Django lorsque :setting:`USE_TZ` "
"vaut ``True``."

msgid "Troubleshooting"
msgstr "Dépannage"

msgid ""
"**My application crashes with** ``TypeError: can't compare offset-naive`` "
"``and offset-aware datetimes`` **-- what's wrong?**"
msgstr ""
"**Mon application plante avec** ``TypeError: can't compare offset-naive`` "
"``and offset-aware datetimes`` **, qu'est-ce que je fais faux ?**"

msgid "Let's reproduce this error by comparing a naive and an aware datetime:"
msgstr ""
"Reproduisons cette erreur en comparant des objets ``datetime`` naïf et "
"conscient :"

msgid ""
"If you encounter this error, most likely your code is comparing these two "
"things:"
msgstr ""
"Si vous rencontrez cette erreur, il est très probable que votre code compare "
"ces deux choses :"

msgid ""
"a datetime provided by Django -- for instance, a value read from a form or a "
"model field. Since you enabled time zone support, it's aware."
msgstr ""
"un objet ``datetime`` fourni par Django, par exemple une valeur lue à partir "
"d'un champ de formulaire ou d'un champ de modèle. Comme vous avez activé la "
"prise en charge des fuseaux horaires, cet objet est conscient."

msgid ""
"a datetime generated by your code, which is naive (or you wouldn't be "
"reading this)."
msgstr ""
"un objet ``datetime`` généré dans votre code de manière naïve (sinon vous ne "
"liriez pas ceci)."

msgid ""
"Generally, the correct solution is to change your code to use an aware "
"datetime instead."
msgstr ""
"Généralement, la solution correcte est de modifier votre code pour qu'il "
"utilise plutôt un objet ``datetime`` conscient."

msgid ""
"If you're writing a pluggable application that's expected to work "
"independently of the value of :setting:`USE_TZ`, you may find :func:`django."
"utils.timezone.now` useful. This function returns the current date and time "
"as a naive datetime when ``USE_TZ = False`` and as an aware datetime when "
"``USE_TZ = True``. You can add or subtract :class:`datetime.timedelta` as "
"needed."
msgstr ""
"Si vous écrivez une application réutilisable qui doit fonctionner "
"indépendamment de la valeur de :setting:`USE_TZ`, il peut être utile "
"d'appeler :func:`django.utils.timezone.now`. Cette fonction renvoie la date "
"et l'heure actuelle sous forme d'objet ``datetime`` naïf lorsque ``USE_TZ = "
"False`` et sous forme d'objet ``datetime`` conscient lorsque ``USE_TZ = "
"True``. Vous pouvez y ajouter ou soustraire une valeur :class:`datetime."
"timedelta` selon vos besoins."

msgid ""
"**I see lots of** ``RuntimeWarning: DateTimeField received a naive "
"datetime`` ``(YYYY-MM-DD HH:MM:SS)`` ``while time zone support is active`` "
"**-- is that bad?**"
msgstr ""
"**Je vois beaucoup de** ``RuntimeWarning: DateTimeField received a naive "
"datetime`` ``(YYYY-MM-DD HH:MM:SS)`` ``while time zone support is active`` "
"**, est-ce mauvais signe ?**"

msgid ""
"When time zone support is enabled, the database layer expects to receive "
"only aware datetimes from your code. This warning occurs when it receives a "
"naive datetime. This indicates that you haven't finished porting your code "
"for time zone support. Please refer to the :ref:`migration guide <time-zones-"
"migration-guide>` for tips on this process."
msgstr ""
"Lorsque la prise en charge des fuseaux horaires est activée, la couche de "
"base de données s'attend à ne recevoir que des objets ``datetime`` "
"conscients de votre code. Cet avertissement se produit lorsqu'elle reçoit un "
"objet ``datetime`` naïf. Cela indique que vous n'avez pas terminé de "
"transformer votre code pour la prise en charge des fuseaux horaires. "
"Veuillez vous référer au :ref:`guide de migration <time-zones-migration-"
"guide>` pour des indications supplémentaires sur ce processus."

msgid ""
"In the meantime, for backwards compatibility, the datetime is considered to "
"be in the default time zone, which is generally what you expect."
msgstr ""
"Dans l'intervalle et par rétrocompatibilité, Django considère l'objet "
"``datetime`` comme se trouvant dans le fuseau horaire par défaut, ce qui "
"correspond généralement à la réalité."

msgid "``now.date()`` **is yesterday! (or tomorrow)**"
msgstr "``now.date()`` **est hier ! (ou demain)**"

msgid ""
"If you've always used naive datetimes, you probably believe that you can "
"convert a datetime to a date by calling its :meth:`~datetime.datetime.date` "
"method. You also consider that a :class:`~datetime.date` is a lot like a :"
"class:`~datetime.datetime`, except that it's less accurate."
msgstr ""
"Si vous avez toujours utilisé des objets ``datetime`` naïfs, vous pensez "
"probablement pouvoir convertir un objet ``datetime`` en objet ``date`` en "
"appelant sa méthode :meth:`~datetime.datetime.date`. Vous considérez "
"également que :class:`~datetime.date` est très semblable à :class:`~datetime."
"datetime`, avec moins de précision."

msgid "None of this is true in a time zone aware environment:"
msgstr ""
"Rien de cela n'est vrai dans un environnement conscient des fuseaux "
"horaires :"

msgid ""
"As this example shows, the same datetime has a different date, depending on "
"the time zone in which it is represented. But the real problem is more "
"fundamental."
msgstr ""
"Comme le montre cet exemple, le même objet ``datetime`` peut représenter une "
"date différente selon le fuseau horaire dans lequel il est représenté. Mais "
"le problème réel est plus fondamental."

msgid ""
"A datetime represents a **point in time**. It's absolute: it doesn't depend "
"on anything. On the contrary, a date is a **calendaring concept**. It's a "
"period of time whose bounds depend on the time zone in which the date is "
"considered. As you can see, these two concepts are fundamentally different, "
"and converting a datetime to a date isn't a deterministic operation."
msgstr ""
"Un objet ``datetime`` représente un **point dans le temps**. C'est absolu et "
"cela ne dépend de rien d'autre. Au contraire, une date est un **concept "
"calendaire**. Il s'agit d'une période de temps dont les limites dépendent du "
"fuseau horaire dans lequel la date est considérée. Comme vous pouvez le "
"voir, ces deux concepts sont fondamentalement différents et la conversion "
"d'un objet ``datetime`` en un objet ``date`` n'est pas une opération "
"déterministe."

msgid "What does this mean in practice?"
msgstr "Qu'est-ce que cela signifie en pratique ?"

msgid ""
"Generally, you should avoid converting a :class:`~datetime.datetime` to :"
"class:`~datetime.date`. For instance, you can use the :tfilter:`date` "
"template filter to only show the date part of a datetime. This filter will "
"convert the datetime into the current time zone before formatting it, "
"ensuring the results appear correctly."
msgstr ""
"Généralement, vous devriez éviter de convertir un objet :class:`~datetime."
"datetime` en :class:`~datetime.date`. Par exemple, vous pouvez utiliser le "
"filtre de gabarit :tfilter:`date` pour n'afficher que la partie date d'un "
"objet ``datetime``. Ce filtre convertit l'objet ``datetime`` dans le fuseau "
"horaire actuel avant de le mettre en forme, s'assurant ainsi que le résultat "
"produit sera correct."

msgid ""
"If you really need to do the conversion yourself, you must ensure the "
"datetime is converted to the appropriate time zone first. Usually, this will "
"be the current timezone:"
msgstr ""
"Si vous avez réellement besoin d'effectuer vous-même la conversion, vous "
"devez d'abord prendre soin de convertir l'objet ``datetime`` dans le fuseau "
"horaire approprié. Il s'agit généralement du fuseau horaire actuel :"

msgid ""
"**I get an error** \"``Are time zone definitions for your database installed?"
"``\""
msgstr ""
"**J'obtiens une erreur** \"``Are time zone definitions for your database "
"installed?``\""

msgid ""
"If you are using MySQL, see the :ref:`mysql-time-zone-definitions` section "
"of the MySQL notes for instructions on loading time zone definitions."
msgstr ""
"Si vous utilisez MySQL, consultez la section :ref:`mysql-time-zone-"
"definitions` des notes MySQL pour plus d'instructions sur le chargement des "
"définitions de fuseaux horaires."

msgid ""
"**I have a string** ``\"2012-02-21 10:28:45\"`` **and I know it's in the** "
"``\"Europe/Helsinki\"`` **time zone. How do I turn that into an aware "
"datetime?**"
msgstr ""
"**J'ai une chaîne** ``\"2012-02-21 10:28:45\"`` **et je sais qu'elle est "
"dans le fuseau horaire** ``\"Europe/Helsinki\"``. **Comment puis-je la "
"transformer en un objet ``datetime`` conscient ?**"

msgid ""
"Here you need to create the required ``ZoneInfo`` instance and attach it to "
"the naïve datetime:"
msgstr ""
"Vous devez ici créer l'instance ``ZoneInfo`` requise et la lier à la date "
"naïve :"

msgid "**How can I obtain the local time in the current time zone?**"
msgstr ""
"**Comment puis-je obtenir le temps local dans le fuseau horaire actuel ?**"

msgid "Well, the first question is, do you really need to?"
msgstr ""
"Et bien, la première question à se poser est : est-ce réellement nécessaire ?"

msgid ""
"You should only use local time when you're interacting with humans, and the "
"template layer provides :ref:`filters and tags <time-zones-in-templates>` to "
"convert datetimes to the time zone of your choice."
msgstr ""
"Le temps local ne doit être utilisé que lorsque l'on interagit avec des "
"humains, et la couche des gabarits fournit des :ref:`filtres et des balises "
"<time-zones-in-templates>` pour convertir des objets ``datetime`` dans le "
"fuseau horaire de votre choix."

msgid ""
"Furthermore, Python knows how to compare aware datetimes, taking into "
"account UTC offsets when necessary. It's much easier (and possibly faster) "
"to write all your model and view code in UTC. So, in most circumstances, the "
"datetime in UTC returned by :func:`django.utils.timezone.now` will be "
"sufficient."
msgstr ""
"De plus, Python sait comparer des objets ``datetime`` conscients, en prenant "
"en compte les décalages UTC si nécessaire. C'est beaucoup plus simple (et "
"potentiellement plus rapide) d'écrire tout le code des modèles et des vues "
"en UTC. Ainsi, dans la plupart des cas, l'objet ``datetime`` en UTC renvoyé "
"par :func:`django.utils.timezone.now` sera suffisant."

msgid ""
"For the sake of completeness, though, if you really want the local time in "
"the current time zone, here's how you can obtain it:"
msgstr ""
"Par souci d'exhaustivité, si vous devez vraiment obtenir le temps local dans "
"le fuseau horaire actuel, voici comment vous pouvez l'obtenir :"

msgid "In this example, the current time zone is ``\"Europe/Paris\"``."
msgstr "Dans cet exemple, le fuseau horaire actuel est ``\"Europe/Paris\"``."

msgid "**How can I see all available time zones?**"
msgstr "**Comment puis-je voir tous les fuseaux horaires disponibles ?**"

msgid ""
":func:`zoneinfo.available_timezones` provides the set of all valid keys for "
"IANA time zones available to your system. See the docs for usage "
"considerations."
msgstr ""
":func:`zoneinfo.available_timezones` fournit l'ensemble de toutes les clés "
"valables des zones de temps IANA disponibles sur votre système. Consultez sa "
"documentation pour les détails d'utilisation."

msgid "Translation"
msgstr "Traduction"

msgid ""
"In order to make a Django project translatable, you have to add a minimal "
"number of hooks to your Python code and templates. These hooks are called :"
"term:`translation strings <translation string>`. They tell Django: \"This "
"text should be translated into the end user's language, if a translation for "
"this text is available in that language.\" It's your responsibility to mark "
"translatable strings; the system can only translate strings it knows about."
msgstr ""
"Dans le but de rendre traduisible un projet Django, il est nécessaire "
"d'ajouter un minimum de marqueurs dans le code Python et les gabarits. Ces "
"marqueurs s'appellent des :term:`chaînes de traduction <translation "
"string>`. Ils indiquent à Django que « ce texte doit être traduit dans la "
"langue de l'utilisateur pour autant qu'il existe une traduction de ce texte "
"dans cette langue ». Il est de votre responsabilité de marquer les chaînes "
"de caractères traduisibles ; le système ne peut traduire que les éléments "
"qu'on lui a indiqués."

msgid ""
"Django then provides utilities to extract the translation strings into a :"
"term:`message file`. This file is a convenient way for translators to "
"provide the equivalent of the translation strings in the target language. "
"Once the translators have filled in the message file, it must be compiled. "
"This process relies on the GNU gettext toolset."
msgstr ""
"Django fournit ensuite des utilitaires pour extraire les chaînes à traduire "
"dans un :term:`fichier de messages`. Ce fichier sert ensuite aux traducteurs "
"qui pourront faire leur travail en rédigeant les équivalences des chaînes à "
"traduire dans leur langue. Lorsque que ce travail est terminé, le fichier "
"doit être compilé. Ce processus se base sur les outils GNU gettext."

msgid ""
"Once this is done, Django takes care of translating web apps on the fly in "
"each available language, according to users' language preferences."
msgstr ""
"Quand tout cela est fait, Django s'occupe de traduire les applications web à "
"la volée dans chacune des langues disponibles, en accord avec les "
"préférences linguistiques des utilisateurs."

msgid ""
"Django's internationalization hooks are on by default, and that means "
"there's a bit of i18n-related overhead in certain places of the framework. "
"If you don't use internationalization, you should take the two seconds to "
"set :setting:`USE_I18N = False <USE_I18N>` in your settings file. Then "
"Django will make some optimizations so as not to load the "
"internationalization machinery."
msgstr ""
"Le système d'internationalisation de Django est activé par défaut, ce qui "
"peut générer un petit surplus de travail à certains endroits du système. Si "
"vous n'utilisez pas l'internationalisation, prenez les deux secondes "
"nécessaires à définir :setting:`USE_I18N = False <USE_I18N>` dans votre "
"fichier de réglages. Django pourra alors effectuer certaines optimisations "
"en ne chargeant pas tout le mécanisme d'internationalisation."

msgid ""
"Make sure you've activated translation for your project (the fastest way is "
"to check if :setting:`MIDDLEWARE` includes :mod:`django.middleware.locale."
"LocaleMiddleware`). If you haven't yet, see :ref:`how-django-discovers-"
"language-preference`."
msgstr ""
"Vérifiez si la traduction est activée dans votre projet (la manière la plus "
"rapide est de contrôler la présence de :mod:`django.middleware.locale."
"LocaleMiddleware` dans :setting:`MIDDLEWARE`). Si ce n'est pas encore fait, "
"lisez :ref:`how-django-discovers-language-preference`."

msgid "Internationalization: in Python code"
msgstr "Internationalisation : dans le code Python"

msgid "Standard translation"
msgstr "Traduction standard"

msgid ""
"Specify a translation string by using the function :func:`~django.utils."
"translation.gettext`. It's convention to import this as a shorter alias, "
"``_``, to save typing."
msgstr ""
"Définissez une chaîne à traduire en utilisant la fonction :func:`~django."
"utils.translation.gettext`. Par convention, il est fréquent de l'importer "
"par un alias plus court, ``_``, pour s'économiser des frappes au clavier."

msgid ""
"Python's standard library ``gettext`` module installs ``_()`` into the "
"global namespace, as an alias for ``gettext()``. In Django, we have chosen "
"not to follow this practice, for a couple of reasons:"
msgstr ""
"Le module ``gettext`` de la bibliothèque Python standard installe ``_()`` "
"dans l'espace de noms global comme alias de ``gettext()``. Dans Django, nous "
"avons choisi de ne pas suivre cette pratique, pour plusieurs raisons :"

msgid ""
"Sometimes, you should use :func:`~django.utils.translation.gettext_lazy` as "
"the default translation method for a particular file. Without ``_()`` in the "
"global namespace, the developer has to think about which is the most "
"appropriate translation function."
msgstr ""
"Parfois, il est préférable d'utiliser :func:`~django.utils.translation."
"gettext_lazy` comme méthode de traduction par défaut dans un certain "
"fichier. En l'absence de ``_()`` dans l'espace de noms global, le "
"développeur doit réfléchir à ce qui est le plus approprié comme fonction de "
"traduction."

msgid ""
"The underscore character (``_``) is used to represent \"the previous "
"result\" in Python's interactive shell and doctest tests. Installing a "
"global ``_()`` function causes interference. Explicitly importing "
"``gettext()`` as ``_()`` avoids this problem."
msgstr ""
"Le caractère soulignement (``_``) est utilisé pour représenter le « résultat "
"précédent » dans le shell interactif de Python et les tests ``doctest``. "
"L'installation globale de ``_()`` interfère avec le précédent. L'importation "
"explicite de ``gettext()`` comme ``_()`` évite ce problème."

msgid "What functions may be aliased as ``_``?"
msgstr "Quelles fonctions peuvent-elles avoir ``_`` comme alias ?"

msgid ""
"Because of how ``xgettext`` (used by :djadmin:`makemessages`) works, only "
"functions that take a single string argument can be imported as ``_``:"
msgstr ""
"En raison du fonctionnement de ``xgettext`` (utilisé par :djadmin:"
"`makemessages`), seules les fonctions acceptant un seul paramètre textuel "
"peuvent être importées avec l'alias ``_``:"

msgid ":func:`~django.utils.translation.gettext`"
msgstr ":func:`~django.utils.translation.gettext`"

msgid ":func:`~django.utils.translation.gettext_lazy`"
msgstr ":func:`~django.utils.translation.gettext_lazy`"

msgid ""
"In this example, the text ``\"Welcome to my site.\"`` is marked as a "
"translation string::"
msgstr ""
"Dans cet exemple, le texte ``\"Welcome to my site.\"`` est marqué comme "
"chaîne à traduire ::"

msgid ""
"You could code this without using the alias. This example is identical to "
"the previous one::"
msgstr ""
"On aurait pu écrire cela sans employer l'alias. Cet exemple est identique au "
"précédent ::"

msgid ""
"Translation works on computed values. This example is identical to the "
"previous two::"
msgstr ""
"La traduction fonctionne sur des valeurs calculées. Cet exemple est "
"identique aux deux précédents ::"

msgid "Translation works on variables. Again, here's an identical example::"
msgstr ""
"La traduction fonctionne avec des variables. Encore une fois, voici un "
"exemple identique ::"

msgid ""
"(The caveat with using variables or computed values, as in the previous two "
"examples, is that Django's translation-string-detecting utility, :djadmin:"
"`django-admin makemessages <makemessages>`, won't be able to find these "
"strings. More on :djadmin:`makemessages` later.)"
msgstr ""
"(L'inconvénient avec l'utilisation de variables ou de valeurs calculées "
"comme dans les deux exemples précédents, c'est que l'utilitaire de détection "
"des chaînes à traduire de Django, :djadmin:`django-admin makemessages "
"<makemessages>`, ne sera pas capable de trouver ces chaînes. Plus de détails "
"sur :djadmin:`makemessages` un peu plus tard.)"

msgid ""
"The strings you pass to ``_()`` or ``gettext()`` can take placeholders, "
"specified with Python's standard named-string interpolation syntax. Example::"
msgstr ""
"Les chaînes que vous placez dans ``_()`` ou ``gettext()`` acceptent des "
"substituants sous la forme de la syntaxe d'interpolation par paramètres "
"nommés standard de Python. Exemple ::"

msgid ""
"This technique lets language-specific translations reorder the placeholder "
"text. For example, an English translation may be ``\"Today is November 26."
"\"``, while a Spanish translation may be ``\"Hoy es 26 de noviembre.\"`` -- "
"with the month and the day placeholders swapped."
msgstr ""
"Cette technique permet aux différentes traductions de modifier l'ordre des "
"substituants. Par exemple, pour un texte anglais ``\"Today is November 26."
"\"``, la traduction espagnole pourrait être ``\"Hoy es 26 de noviembre.\"``, "
"avec les substituants mois et jour intervertis."

msgid ""
"For this reason, you should use named-string interpolation (e.g., "
"``%(day)s``) instead of positional interpolation (e.g., ``%s`` or ``%d``) "
"whenever you have more than a single parameter. If you used positional "
"interpolation, translations wouldn't be able to reorder placeholder text."
msgstr ""
"Pour cette raison, il est recommandé d'utiliser l'interpolation par "
"paramètre nommé (ex : ``%(day)s``) au lieu de l'interpolation par position "
"(ex : ``%s`` ou ``%d``) chaque fois qu'il y a plus d'un paramètre. Avec "
"l'interpolation par position, les traductions ne peuvent pas changer l'ordre "
"des substituants."

msgid ""
"Since string extraction is done by the ``xgettext`` command, only syntaxes "
"supported by ``gettext`` are supported by Django. In particular, Python :py:"
"ref:`f-strings <f-strings>` are not yet supported by ``xgettext``, and "
"JavaScript template strings need ``gettext`` 0.21+."
msgstr ""
"Comme l'extraction de chaînes est effectuée par la commande ``xgettext``, "
"seules les syntaxes prises en charge par ``gettext`` sont prises en charge "
"par Django. En particulier, les chaînes Python :py:ref:`f-strings <f-"
"strings>` ne sont actuellement pas prises en charge par ``xgettext`` et les "
"chaînes « template strings » de JavaScript nécessitent une version de "
"``gettext`` à partir de 0.21."

msgid "Comments for translators"
msgstr "Commentaires pour les traducteurs"

msgid ""
"If you would like to give translators hints about a translatable string, you "
"can add a comment prefixed with the ``Translators`` keyword on the line "
"preceding the string, e.g.::"
msgstr ""
"Si vous souhaitez donner des indications aux traducteurs à propos d'une "
"chaîne à traduire, vous pouvez ajouter un commentaire préfixé par le mot-clé "
"``Translators`` à la ligne précédant la chaîne ; par exemple ::"

msgid ""
"The comment will then appear in the resulting ``.po`` file associated with "
"the translatable construct located below it and should also be displayed by "
"most translation tools."
msgstr ""
"Le commentaire apparaîtra alors dans le fichier ``.po`` résultant de "
"l'extraction des chaînes, juste avant le bloc de la chaîne à traduire, et la "
"plupart des outils de traduction l'affichent également dans leur interface."

msgid ""
"Just for completeness, this is the corresponding fragment of the resulting "
"``.po`` file:"
msgstr ""
"Pour les curieux, voici le fragment correspondant dans le fichier ``.po`` "
"résultant :"

msgid ""
"This also works in templates. See :ref:`translator-comments-in-templates` "
"for more details."
msgstr ""
"Cela fonctionne aussi dans les gabarits. Voir :ref:`translator-comments-in-"
"templates` pour plus de détails."

msgid "Marking strings as no-op"
msgstr "Marquage des chaînes « en blanc »"

msgid ""
"Use the function :func:`django.utils.translation.gettext_noop()` to mark a "
"string as a translation string without translating it. The string is later "
"translated from a variable."
msgstr ""
"La fonction :func:`django.utils.translation.gettext_noop()` permet de "
"marquer une chaîne comme chaîne à traduire, mais sans la traduire "
"réellement. La traduction effective peut se faire plus tard à partir d'une "
"variable."

msgid ""
"Use this if you have constant strings that should be stored in the source "
"language because they are exchanged over systems or users -- such as strings "
"in a database -- but should be translated at the last possible point in "
"time, such as when the string is presented to the user."
msgstr ""
"Cette technique est utile pour des chaînes constantes devant être stockées "
"dans la langue source parce qu'elles sont échangées entre systèmes ou "
"utilisateurs, comme des chaînes en base de données, mais qu'elles devraient "
"être traduites le plus tard possible, juste avant d'être affichées pour un "
"utilisateur."

msgid "Pluralization"
msgstr "Pluriels"

msgid ""
"Use the function :func:`django.utils.translation.ngettext()` to specify "
"pluralized messages."
msgstr ""
"La fonction :func:`django.utils.translation.ngettext()` permet de marquer "
"des messages contenant un pluriel."

msgid ""
"``ngettext()`` takes three arguments: the singular translation string, the "
"plural translation string and the number of objects."
msgstr ""
"``ngettext()`` accepte trois paramètres : la chaîne à traduire au singulier, "
"la chaîne à traduire au pluriel et le nombre d'objets."

msgid ""
"This function is useful when you need your Django application to be "
"localizable to languages where the number and complexity of `plural forms "
"<https://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms>`_ is "
"greater than the two forms used in English ('object' for the singular and "
"'objects' for all the cases where ``count`` is different from one, "
"irrespective of its value.)"
msgstr ""
"Cette fonction est utile lorsque vous voulez traduire votre application "
"Django dans des langues où le nombre et la complexité des `formes plurielles "
"<https://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms>`_ "
"sont plus grands que les deux formes utilisées en anglais (« object » pour "
"le singulier et « objects » dans tous les cas où ``count`` est différent de "
"un, quelle que soit sa valeur)."

msgid ""
"In this example the number of objects is passed to the translation languages "
"as the ``count`` variable."
msgstr ""
"Dans cet exemple, le nombre d'objets est communiqué à la langue de "
"traduction par la variable ``count``."

msgid ""
"Note that pluralization is complicated and works differently in each "
"language. Comparing ``count`` to 1 isn't always the correct rule. This code "
"looks sophisticated, but will produce incorrect results for some languages::"
msgstr ""
"Notez que les pluriels sont compliqués et fonctionnent différemment pour "
"chaque langue. La comparaison de ``count`` avec 1 n'est pas toujours la "
"règle correcte. Ce code semble sophistiqué, mais produira des résultats "
"incorrects pour certaines langues ::"

msgid ""
"Don't try to implement your own singular-or-plural logic; it won't be "
"correct. In a case like this, consider something like the following::"
msgstr ""
"N'essayez pas d'implémenter votre propre logique de singulier/pluriel, vous "
"n'y arriverez pas. Dans un cas comme celui-ci, pensez plutôt à faire quelque "
"chose comme ::"

msgid ""
"When using ``ngettext()``, make sure you use a single name for every "
"extrapolated variable included in the literal. In the examples above, note "
"how we used the ``name`` Python variable in both translation strings. This "
"example, besides being incorrect in some languages as noted above, would "
"fail::"
msgstr ""
"En utilisant ``ngettext()``, prenez soin de toujours utiliser le même nom "
"pour chaque variable extrapolée incluse dans la chaîne. Dans les exemples ci-"
"dessus, notez comment nous avons utilisé la variable Python ``name`` dans "
"les deux chaînes à traduire. Cet exemple, en plus d'être faux pour certaines "
"langues comme nous l'avons mentionné, ne fonctionnera pas ::"

msgid ""
"You would get an error when running :djadmin:`django-admin compilemessages "
"<compilemessages>`:"
msgstr ""
"Vous obtiendriez une erreur lors du lancement de :djadmin:`django-admin "
"compilemessages <compilemessages>`:"

msgid "Contextual markers"
msgstr "Marqueurs contextuels"

msgid ""
"Sometimes words have several meanings, such as ``\"May\"`` in English, which "
"refers to a month name and to a verb. To enable translators to translate "
"these words correctly in different contexts, you can use the :func:`django."
"utils.translation.pgettext()` function, or the :func:`django.utils."
"translation.npgettext()` function if the string needs pluralization. Both "
"take a context string as the first variable."
msgstr ""
"Il peut arriver que des mots ont plusieurs significations, comme ``\"May\"`` "
"en anglais, qui peut se référer à un nom de mois ou à un verbe. Pour "
"permettre aux traducteurs de traduire correctement ces mots dans des "
"contextes différents, il est possible d'utiliser la fonction :func:`django."
"utils.translation.pgettext()`, ou :func:`django.utils.translation."
"npgettext()` si la chaîne contient des pluriels. Les deux acceptent une "
"chaîne de contexte comme premier paramètre."

msgid ""
"In the resulting ``.po`` file, the string will then appear as often as there "
"are different contextual markers for the same string (the context will "
"appear on the ``msgctxt`` line), allowing the translator to give a different "
"translation for each of them."
msgstr ""
"Dans le fichier ``.po`` résultant, la même chaîne apparaîtra aussi souvent "
"qu'il y a de marqueurs contextuels différents (le contexte apparaît à la "
"ligne ``msgctxt``), permettant ainsi au traducteur d'attribuer des "
"traductions différentes à chacune d'elles."

msgid "will appear in the ``.po`` file as:"
msgstr "apparaîtra dans le fichier ``.po`` comme :"

msgid ""
"Contextual markers are also supported by the :ttag:`translate` and :ttag:"
"`blocktranslate` template tags."
msgstr ""
"Les marqueurs contextuels sont également pris en charge par les balises de "
"gabarit :ttag:`translate` et :ttag:`blocktranslate`."

msgid "Lazy translation"
msgstr "Traduction différée"

msgid ""
"Use the lazy versions of translation functions in :mod:`django.utils."
"translation` (easily recognizable by the ``lazy`` suffix in their names) to "
"translate strings lazily -- when the value is accessed rather than when "
"they're called."
msgstr ""
"Les versions différées des fonctions de traduction dans :mod:`django.utils."
"translation` (facilement reconnaissables par le suffixe ``lazy`` dans leur "
"nom) permettent de traduire du texte en différé, au moment où la chaîne est "
"réellement utilisée plutôt qu'au moment où la fonction est appelée."

msgid ""
"These functions store a lazy reference to the string -- not the actual "
"translation. The translation itself will be done when the string is used in "
"a string context, such as in template rendering."
msgstr ""
"Ces fonctions stockent une référence différée à la chaîne originale, et non "
"pas la traduction réelle. La traduction en tant que telle est effectuée "
"lorsque le texte est utilisé dans un contexte textuel, par exemple dans le "
"rendu d'un gabarit."

msgid ""
"This is essential when calls to these functions are located in code paths "
"that are executed at module load time."
msgstr ""
"Ce procédé est essentiel lorsque les appels à ces fonctions sont situés dans "
"des endroits du code qui sont exécutés lors du chargement des modules."

msgid ""
"This is something that can easily happen when defining models, forms and "
"model forms, because Django implements these such that their fields are "
"actually class-level attributes. For that reason, make sure to use lazy "
"translations in the following cases:"
msgstr ""
"Ceci peut facilement se produire lors de la définition des modèles, des "
"formulaires et des formulaires de modèle, car la manière dont Django les "
"implémente fait que leurs champs sont des attributs de classe. C'est pour "
"cette raison qu'il faut utiliser des traductions différées dans les cas "
"suivants :"

msgid ""
"Model fields and relationships ``verbose_name`` and ``help_text`` option "
"values"
msgstr ""
"Valeurs d'options ``verbose_name`` et ``help_text`` des champs et relations "
"de modèle "

msgid ""
"For example, to translate the help text of the *name* field in the following "
"model, do the following::"
msgstr ""
"Par exemple, pour traduire le texte d'aide du champ ``name`` dans le modèle "
"suivant, faites comme ceci ::"

msgid ""
"You can mark names of :class:`~django.db.models.ForeignKey`, :class:`~django."
"db.models.ManyToManyField` or :class:`~django.db.models.OneToOneField` "
"relationship as translatable by using their :attr:`~django.db.models.Options."
"verbose_name` options::"
msgstr ""
"Vous pouvez marquer les noms des relations :class:`~django.db.models."
"ForeignKey`, :class:`~django.db.models.ManyToManyField` ou :class:`~django."
"db.models.OneToOneField` comme chaînes à traduire en utilisant leur option :"
"attr:`~django.db.models.Options.verbose_name`::"

msgid ""
"Just like you would do in :attr:`~django.db.models.Options.verbose_name` you "
"should provide a lowercase verbose name text for the relation as Django will "
"automatically titlecase it when required."
msgstr ""
"Comme vous le feriez pour :attr:`~django.db.models.Options.verbose_name`, le "
"texte de nom verbeux de la relation devrait être en minuscules, car Django "
"s'occupe de mettre les majuscules dans les situations appropriées."

msgid "Model verbose names values"
msgstr "Valeurs de noms verbeux de modèle"

msgid ""
"It is recommended to always provide explicit :attr:`~django.db.models."
"Options.verbose_name` and :attr:`~django.db.models.Options."
"verbose_name_plural` options rather than relying on the fallback English-"
"centric and somewhat naïve determination of verbose names Django performs by "
"looking at the model's class name::"
msgstr ""
"Il est recommandé de toujours fournir les options explicites :attr:`~django."
"db.models.Options.verbose_name` et :attr:`~django.db.models.Options."
"verbose_name_plural` plutôt que de vous rabattre sur la version anglo-"
"centrique et déterminée de manière quelque peu naïve du nom verbeux que "
"Django crée en se basant sur le nom de classe du modèle ::"

msgid "Model methods ``description`` argument to the ``@display`` decorator"
msgstr ""
"L'argument ``description`` des méthodes de modèles passé au décorateur "
"``@display``"

msgid ""
"For model methods, you can provide translations to Django and the admin site "
"with the ``description`` argument to the :func:`~django.contrib.admin."
"display` decorator::"
msgstr ""
"Pour les méthodes de modèle, vous pouvez indiquer à Django et au site "
"d'administration des descriptions traduisibles par l'argument "
"``description`` du décorateur :func:`~django.contrib.admin.display`::"

msgid "Working with lazy translation objects"
msgstr "Manipulation des objets de traduction différée"

msgid ""
"The result of a ``gettext_lazy()`` call can be used wherever you would use a "
"string (a :class:`str` object) in other Django code, but it may not work "
"with arbitrary Python code. For example, the following won't work because "
"the :pypi:`requests` library doesn't handle ``gettext_lazy`` objects::"
msgstr ""
"Le résultat d'un appel à ``gettext_lazy()`` peut être utilisé partout là où "
"une chaîne (un objet :class:`str`) peut être utilisée dans le code Django, "
"mais cela ne fonctionne par forcément avec n'importe quel code Python. Par "
"exemple, le code suivant ne marchera pas car la bibliothèque :pypi:"
"`requests` ne gère pas les objets ``gettext_lazy``::"

msgid ""
"You can avoid such problems by casting ``gettext_lazy()`` objects to text "
"strings before passing them to non-Django code::"
msgstr ""
"Vous pouvez éviter ce genre de problème en forçant les objets "
"``gettext_lazy()`` en chaînes de texte avant de les passer à du code non "
"Django ::"

msgid ""
"If you don't like the long ``gettext_lazy`` name, you can alias it as ``_`` "
"(underscore), like so::"
msgstr ""
"Si vous n'aimez pas le long nom de ``gettext_lazy``, vous pouvez en faire un "
"alias ``_`` (soulignement), comme ceci ::"

msgid ""
"Using ``gettext_lazy()`` and ``ngettext_lazy()`` to mark strings in models "
"and utility functions is a common operation. When you're working with these "
"objects elsewhere in your code, you should ensure that you don't "
"accidentally convert them to strings, because they should be converted as "
"late as possible (so that the correct locale is in effect). This "
"necessitates the use of the helper function described next."
msgstr ""
"L'utilisation de ``gettext_lazy()`` et ``ngettext_lazy()`` pour marquer des "
"chaînes dans des modèles et des fonctions utilitaires est une opération "
"courante. Lorsque que vous manipulez ces objets ailleurs dans votre code, "
"vous devriez prendre soin de ne jamais les convertir accidentellement en "
"chaînes de caractères, car ils devraient être convertis le plus tard "
"possible (afin que la langue correcte soit active). Ceci nécessite l'emploi "
"de la fonction utilitaire décrite ci-après."

msgid "Lazy translations and plural"
msgstr "Traductions différées et pluriels"

msgid ""
"When using lazy translation for a plural string (``n[p]gettext_lazy``), you "
"generally don't know the ``number`` argument at the time of the string "
"definition. Therefore, you are authorized to pass a key name instead of an "
"integer as the ``number`` argument. Then ``number`` will be looked up in the "
"dictionary under that key during string interpolation. Here's example::"
msgstr ""
"Lors de l'utilisation de traductions différées avec une chaîne contenant des "
"pluriels (``n[p]gettext_lazy``), vous ne connaissez généralement pas le "
"paramètre ``number`` au moment de la définition de la chaîne. C'est pourquoi "
"vous êtes autorisé dans ce cas à passer un nom de clé au lieu d'un nombre "
"comme paramètre ``number``. Ensuite, cette clé ``number`` sera cherchée dans "
"le dictionnaire durant l'extrapolation de la chaîne. Voici un exemple ::"

msgid ""
"If the string contains exactly one unnamed placeholder, you can interpolate "
"directly with the ``number`` argument::"
msgstr ""
"Si la chaîne contient un seul substituant non nommé, vous pouvez directement "
"interpoler avec le paramètre ``number``::"

msgid "Formatting strings: ``format_lazy()``"
msgstr "Mise en forme de chaînes : ``format_lazy()``"

msgid ""
"Python's :meth:`str.format()` method will not work when either the "
"``format_string`` or any of the arguments to :meth:`str.format()` contains "
"lazy translation objects. Instead, you can use :func:`django.utils.text."
"format_lazy()`, which creates a lazy object that runs the ``str.format()`` "
"method only when the result is included in a string. For example::"
msgstr ""
"La méthode :meth:`str.format()` de Python ne fonctionne pas quand la chaîne "
"``format_string`` ou l'un des paramètres de :meth:`str.format()` contient "
"des objets de traduction différée. Il faut utiliser :func:`django.utils.text."
"format_lazy()` à la place, ce qui va créer un objet différé qui se chargera "
"d'exécuter la méthode ``str.format()`` au moment précis ou le résultat sera "
"inclus dans une chaîne. Par exemple ::"

msgid ""
"In this case, the lazy translations in ``result`` will only be converted to "
"strings when ``result`` itself is used in a string (usually at template "
"rendering time)."
msgstr ""
"Dans ce cas, les traductions différées dans ``result`` ne seront converties "
"en chaînes qu'au moment où ``result`` sera elle-même utilisée dans une "
"chaîne (habituellement au moment du rendu du gabarit)."

msgid "Other uses of lazy in delayed translations"
msgstr "Autres usages de traductions différées avec ``lazy``"

msgid ""
"For any other case where you would like to delay the translation, but have "
"to pass the translatable string as argument to another function, you can "
"wrap this function inside a lazy call yourself. For example::"
msgstr ""
"Dans tout autre situation où il serait utile de différer la traduction mais "
"qu'il est nécessaire de passer la chaîne à traduire comme paramètre d'une "
"autre fonction, il est possible d'envelopper vous-même cette fonction à "
"l'intérieur d'un appel à ``lazy``. Par exemple ::"

msgid "And then later::"
msgstr "Puis, plus tard ::"

msgid "Localized names of languages"
msgstr "Noms de langues régionalisés"

msgid ""
"The ``get_language_info()`` function provides detailed information about "
"languages:"
msgstr ""
"La fonction ``get_language_info()`` fournit des informations détaillées sur "
"les langues :"

msgid ""
"The ``name``, ``name_local``, and ``name_translated`` attributes of the "
"dictionary contain the name of the language in English, in the language "
"itself, and in your current active language respectively.  The ``bidi`` "
"attribute is True only for bi-directional languages."
msgstr ""
"Les attributs ``name``, ``name_local`` et ``name_translated`` du "
"dictionnaire contiennent respectivement le nom de langue en anglais, dans la "
"langue elle-même et dans la langue actuellement active. L'attribut ``bidi`` "
"vaut ``True`` seulement pour les langues s'écrivant de droite à gauche."

msgid ""
"The source of the language information is the ``django.conf.locale`` module. "
"Similar access to this information is available for template code. See below."
msgstr ""
"La source des informations sur les langues se trouve dans le module ``django."
"conf.locale``. Ces informations sont également accessibles dans le code des "
"gabarits. Voir ci-dessous."

msgid "Internationalization: in template code"
msgstr "Internationalisation : dans le code des gabarits"

msgid ""
"Translations in :doc:`Django templates </ref/templates/language>` uses two "
"template tags and a slightly different syntax than in Python code. To give "
"your template access to these tags, put ``{% load i18n %}`` toward the top "
"of your template. As with all template tags, this tag needs to be loaded in "
"all templates which use translations, even those templates that extend from "
"other templates which have already loaded the ``i18n`` tag."
msgstr ""
"Les traductions dans les :doc:`gabarits Django </ref/templates/language>` "
"utilisent deux balises de gabarit et une syntaxe légèrement différente que "
"dans le code Python. Pour donner accès à ces balises dans vos gabarits, "
"ajoutez ``{% load i18n %}`` au sommet de votre gabarit. Comme pour toutes "
"les balises de gabarit, cette balise doit être chargée dans tous les "
"gabarits qui utilisent les traductions, même pour les gabarits qui étendent "
"d'autres gabarits ayant déjà chargé la bibliothèque ``i18n``."

msgid ""
"Translated strings will not be escaped when rendered in a template. This "
"allows you to include HTML in translations, for example for emphasis, but "
"potentially dangerous characters (e.g. ``\"``) will also be rendered "
"unchanged."
msgstr ""
"Les chaînes traduites ne sont pas échappées lorsqu'elle sont introduites "
"dans un gabarit. Cela permet d'inclure du HTML dans les traductions, par "
"exemple pour des mises en évidence, mais de potentiels dangereux caractères "
"seront également insérés tel quel."

msgid "``translate`` template tag"
msgstr "Balise de gabarit ``translate``"

msgid ""
"The ``{% translate %}`` template tag translates either a constant string "
"(enclosed in single or double quotes) or variable content:"
msgstr ""
"La balise de gabarit ``{% translate %}`` traduit soit une chaîne constante "
"(entourée de guillemets simples ou doubles) ou un contenu de variable :"

msgid ""
"If the ``noop`` option is present, variable lookup still takes place but the "
"translation is skipped. This is useful when \"stubbing out\" content that "
"will require translation in the future:"
msgstr ""
"Si l'option ``noop`` est présente, l'accès à la variable se fait toujours "
"mais la traduction est omise. C'est utile pour marquer du contenu qui devra "
"être traduit à un moment ultérieur :"

msgid ""
"Internally, inline translations use a :func:`~django.utils.translation."
"gettext` call."
msgstr ""
"En interne, cette technique de traduction fait appel à :func:`~django.utils."
"translation.gettext`."

msgid ""
"In case a template var (``myvar`` above) is passed to the tag, the tag will "
"first resolve such variable to a string at run-time and then look up that "
"string in the message catalogs."
msgstr ""
"Dans le cas où une variable de gabarit (``myvar`` ci-dessus) est passée à la "
"balise, celle-ci résout en premier la variable en chaîne au moment de "
"l'exécution puis consulte les catalogues de messages pour trouver une "
"traduction."

msgid ""
"It's not possible to mix a template variable inside a string within ``{% "
"translate %}``. If your translations require strings with variables "
"(placeholders), use :ttag:`{% blocktranslate %}<blocktranslate>` instead."
msgstr ""
"Il n'est pas possible de mélanger du texte littéral et des variables dans "
"``{% translate %}``. si vos traductions nécessitent des chaînes contenant "
"des variables (substituants), utilisez plutôt :ttag:`{% blocktranslate %}"
"<blocktranslate>`."

msgid ""
"If you'd like to retrieve a translated string without displaying it, you can "
"use the following syntax:"
msgstr ""
"Si vous aimeriez récupérer une chaîne traduite sans l'afficher, vous pouvez "
"utiliser la syntaxe suivante :"

msgid ""
"In practice you'll use this to get a string you can use in multiple places "
"in a template or so you can use the output as an argument for other template "
"tags or filters:"
msgstr ""
"En pratique, vous utiliserez cela pour obtenir une chaîne utilisée à "
"plusieurs endroits dans un gabarit ou qui doit être passée comme paramètre à "
"d'autres balises ou filtres de gabarit :"

msgid ""
"``{% translate %}`` also supports :ref:`contextual markers<contextual-"
"markers>` using the ``context`` keyword:"
msgstr ""
"``{% translate %}`` prend aussi en charge les :ref:`marqueurs "
"contextuels<contextual-markers>` à l'aide du mot-clé ``context``:"

msgid "``blocktranslate`` template tag"
msgstr "Balise de gabarit ``blocktranslate``"

msgid ""
"Contrarily to the :ttag:`translate` tag, the ``blocktranslate`` tag allows "
"you to mark complex sentences consisting of literals and variable content "
"for translation by making use of placeholders:"
msgstr ""
"Contrairement à la balise :ttag:`translate`, la balise ``blocktranslate`` "
"permet de marquer comme chaînes à traduire des phrases complexes contenant à "
"la fois du texte littéral et des variables par le moyen des substituants :"

msgid ""
"To translate a template expression -- say, accessing object attributes or "
"using template filters -- you need to bind the expression to a local "
"variable for use within the translation block. Examples:"
msgstr ""
"Pour traduire une expression de gabarit, par exemple un accès aux attributs "
"d'un objet ou une utilisation de filtre de gabarit, il est nécessaire de "
"lier l'expression à une variable locale pour l'utiliser ensuite dans le bloc "
"à traduire. Exemple :"

msgid ""
"You can use multiple expressions inside a single ``blocktranslate`` tag:"
msgstr ""
"Vous pouvez utiliser plusieurs expressions à l'intérieur d'une seule balise "
"``blocktranslate``:"

msgid ""
"The previous more verbose format is still supported: ``{% blocktranslate "
"with book|title as book_t and author|title as author_t %}``"
msgstr ""
"L'ancien format plus verbeux est toujours accepté : `{% blocktranslate with "
"book|title as book_t and author|title as author_t %}``"

msgid ""
"Other block tags (for example :ttag:`{% for %}<for>` or :ttag:`{% if %}"
"<if>`) are not allowed inside a ``blocktranslate`` tag."
msgstr ""
"D'autres balises de bloc (par exemple :ttag:`{% for %} <for>` ou :ttag:`{% "
"if %} <if>`) ne sont pas autorisées à l'intérieur des balises "
"``blocktranslate``."

msgid ""
"If resolving one of the block arguments fails, ``blocktranslate`` will fall "
"back to the default language by deactivating the currently active language "
"temporarily with the :func:`~django.utils.translation.deactivate_all` "
"function."
msgstr ""
"Si la résolution d'un des paramètres du bloc échoue, ``blocktranslate`` se "
"rabat sur la langue par défaut en désactivant temporairement la langue "
"actuelle avec la fonction :func:`~django.utils.translation.deactivate_all`."

msgid "This tag also provides for pluralization. To use it:"
msgstr ""
"Cette balise permet également l'utilisation de pluriels. Pour l'utiliser :"

msgid ""
"Designate and bind a counter value with the name ``count``. This value will "
"be the one used to select the right plural form."
msgstr ""
"Désignez et liez une valeur de compteur nommée ``count``. Cette valeur sera "
"celle utilisée pour choisir la bonne forme de pluriel."

msgid ""
"Specify both the singular and plural forms separating them with the ``{% "
"plural %}`` tag within the ``{% blocktranslate %}`` and ``{% "
"endblocktranslate %}`` tags."
msgstr ""
"Indiquez à la fois les formes au singulier et au pluriel en les séparant par "
"la balise ``{% plural %}`` à l'intérieur des balises ``{% blocktranslate %}"
"`` et ``{% endblocktranslate %}``."

msgid "An example:"
msgstr "Un exemple :"

msgid "A more complex example:"
msgstr "Un exemple plus complexe :"

msgid ""
"When you use both the pluralization feature and bind values to local "
"variables in addition to the counter value, keep in mind that the "
"``blocktranslate`` construct is internally converted to an ``ngettext`` "
"call. This means the same :ref:`notes regarding ngettext variables "
"<pluralization-var-notes>` apply."
msgstr ""
"Lorsque vous utilisez à la fois la fonction de pluriel et l'attribution de "
"valeurs à des variables locales en plus de la valeur de compteur, il faut "
"savoir qu'en interne, ``blocktranslate`` est converti en un appel "
"``ngettext``. Cela signifie que les :ref:`notes concernant les variables "
"ngettext <pluralization-var-notes>` s'appliquent également."

msgid ""
"Reverse URL lookups cannot be carried out within the ``blocktranslate`` and "
"should be retrieved (and stored) beforehand:"
msgstr ""
"La résolution inverse d'URL ne peut pas se faire à l'intérieur de "
"``blocktranslate`` et doit donc être effectuée au préalable :"

msgid ""
"In practice you'll use this to get a string you can use in multiple places "
"in a template or so you can use the output as an argument for other template "
"tags or filters."
msgstr ""
"En pratique, vous utiliserez cela pour obtenir une chaîne utilisée à "
"plusieurs endroits dans un gabarit ou qui doit être passée comme paramètre à "
"d'autres balises ou filtres de gabarit."

msgid ""
"``{% blocktranslate %}`` also supports :ref:`contextual markers<contextual-"
"markers>` using the ``context`` keyword:"
msgstr ""
"``{% blocktranslate %}`` prend aussi en charge les :ref:`marqueurs "
"contextuels<contextual-markers>` à l'aide du mot-clé ``context``:"

msgid ""
"Another feature ``{% blocktranslate %}`` supports is the ``trimmed`` option. "
"This option will remove newline characters from the beginning and the end of "
"the content of the ``{% blocktranslate %}`` tag, replace any whitespace at "
"the beginning and end of a line and merge all lines into one using a space "
"character to separate them. This is quite useful for indenting the content "
"of a ``{% blocktranslate %}`` tag without having the indentation characters "
"end up in the corresponding entry in the ``.po`` file, which makes the "
"translation process easier."
msgstr ""
"Une autre fonctionnalité prise en charge par la balise ``{% blocktranslate %}"
"`` est l'option ``trimmed``. Cette option supprime les caractères de "
"nouvelle ligne au début et à la fin du contenu de la balise ``{% "
"blocktranslate %}``, remplace les espaces blancs au début et à la fin d'une "
"ligne et fusionne toutes les lignes en une seule via l'utilisation d'un "
"espace pour les séparer. Ceci est très utile pour l'indentation du contenu "
"d'une balise ``{% blocktranslate %}`` sans avoir les caractères "
"d'indentation qui se retrouvent dans l'entrée correspondante du fichier ``."
"po``, rendant le processus de traduction plus facile."

msgid "For instance, the following ``{% blocktranslate %}`` tag:"
msgstr "Par exemple, la balise ``{% blocktranslate %}`` suivante :"

msgid ""
"will result in the entry ``\"First sentence. Second paragraph.\"`` in the ``."
"po`` file, compared to ``\"\\n  First sentence.\\n  Second paragraph."
"\\n\"``, if the ``trimmed`` option had not been specified."
msgstr ""
"donne comme résultat ``\"First sentence. Second paragraph.\"`` dans le "
"fichier ``.po``, comparé à ``\"\\n First sentence.\\n Second paragraph."
"\\n\"`` si l'option ``trimmed`` n'avait pas été utilisée."

msgid "String literals passed to tags and filters"
msgstr "Texte littéral transmis aux balises et aux filtres"

msgid ""
"You can translate string literals passed as arguments to tags and filters by "
"using the familiar ``_()`` syntax:"
msgstr ""
"Vous pouvez traduire le texte littéral transmis comme paramètre à des "
"balises et des filtres en utilisant la syntaxe familière ``_()``:"

msgid ""
"In this case, both the tag and the filter will see the translated string, so "
"they don't need to be aware of translations."
msgstr ""
"Dans ce cas, aussi bien la balise que le filtre recevra la chaîne traduite, "
"ils n'ont donc pas besoin de se préoccuper des traductions."

msgid ""
"In this example, the translation infrastructure will be passed the string "
"``\"yes,no\"``, not the individual strings ``\"yes\"`` and ``\"no\"``. The "
"translated string will need to contain the comma so that the filter parsing "
"code knows how to split up the arguments. For example, a German translator "
"might translate the string ``\"yes,no\"`` as ``\"ja,nein\"`` (keeping the "
"comma intact)."
msgstr ""
"Dans cet exemple, l'infrastructure de traduction recevra la chaîne ``\"yes,"
"no\"``, et non pas les chaînes individuelles ``\"yes\"`` et ``\"no\"``. La "
"chaîne à traduire devra contenir la virgule afin que le code d'analyse du "
"filtre sache où séparer les paramètres. Par exemple, un traducteur allemand "
"pourrait traduire la chaîne ``\"yes,no\"`` comme ``\"ja,nein\"`` (en "
"préservant la virgule)."

msgid "Comments for translators in templates"
msgstr "Commentaires pour les traducteurs dans les gabarits"

msgid ""
"Just like with :ref:`Python code <translator-comments>`, these notes for "
"translators can be specified using comments, either with the :ttag:`comment` "
"tag:"
msgstr ""
"Tout comme avec le :ref:`code Python <translator-comments>`, ces notes à "
"l'intention des traducteurs peuvent être indiquées en utilisant des "
"commentaires, soit avec la balise :ttag:`comment`:"

msgid ""
"or with the ``{#`` ... ``#}`` :ref:`one-line comment constructs <template-"
"comments>`:"
msgstr ""
"ou avec la :ref:`syntaxe de commentaire sur une seule ligne <template-"
"comments>` ``{#`` ... ``#}``:"

msgid ""
"Just for completeness, these are the corresponding fragments of the "
"resulting ``.po`` file:"
msgstr ""
"Pour les curieux, voici les fragments correspondant dans le fichier ``.po`` "
"résultant :"

msgid "Switching language in templates"
msgstr "Changement de langue dans les gabarits"

msgid ""
"If you want to select a language within a template, you can use the "
"``language`` template tag:"
msgstr ""
"Si vous avez besoin de changer de langue à l'intérieur d'un gabarit, vous "
"pouvez utiliser la balise de gabarit ``language``:"

msgid ""
"While the first occurrence of \"Welcome to our page\" uses the current "
"language, the second will always be in English."
msgstr ""
"Alors que la première occurrence de \"Welcome to our page\" utilise la "
"langue active, la seconde sera toujours en anglais."

msgid "Other tags"
msgstr "Autres balises"

msgid "These tags also require a ``{% load i18n %}``."
msgstr "Ces balises nécessitent aussi le chargement ``{% load i18n %}``."

msgid "``get_available_languages``"
msgstr "``get_available_languages``"

msgid ""
"``{% get_available_languages as LANGUAGES %}`` returns a list of tuples in "
"which the first element is the :term:`language code` and the second is the "
"language name (translated into the currently active locale)."
msgstr ""
"``{% get_available_languages as LANGUAGES %}`` renvoie une liste de tuples "
"dont le premier élément est le :term:`code de langue` et le second est le "
"nom de la langue (traduit dans la langue actuellement active)."

msgid "``get_current_language``"
msgstr "``get_current_language``"

msgid ""
"``{% get_current_language as LANGUAGE_CODE %}`` returns the current user's "
"preferred language as a string. Example: ``en-us``. See :ref:`how-django-"
"discovers-language-preference`."
msgstr ""
"``{% get_current_language as LANGUAGE_CODE %}`` renvoie la langue préférée "
"de l'utilisateur actuel sous forme textuelle. Exemple : ``en-us``. Voir :ref:"
"`how-django-discovers-language-preference`."

msgid "``get_current_language_bidi``"
msgstr "``get_current_language_bidi``"

msgid ""
"``{% get_current_language_bidi as LANGUAGE_BIDI %}`` returns the current "
"locale's direction. If ``True``, it's a right-to-left language, e.g. Hebrew, "
"Arabic. If ``False`` it's a left-to-right language, e.g. English, French, "
"German, etc."
msgstr ""
"``{% get_current_language_bidi as LANGUAGE_BIDI %}`` renvoie la direction du "
"texte de la langue actuelle. Si ``True``, il s'agit d'une langue s'écrivant "
"de droite à gauche, comme l'hébreu ou l'arabe. Si ``False``, il s'agit d'une "
"langue s'écrivant de gauche à droite, comme l'anglais, le français, "
"l'allemand, etc."

msgid "``i18n`` context processor"
msgstr "Processeur de contexte ``i18n``"

msgid ""
"If you enable the :class:`django.template.context_processors.i18n` context "
"processor, then each ``RequestContext`` will have access to ``LANGUAGES``, "
"``LANGUAGE_CODE``, and ``LANGUAGE_BIDI`` as defined above."
msgstr ""
"Si vous activez le processeur de contexte :class:`django.template."
"context_processors.i18n`, chaque ``RequestContext`` aura accès à  "
"``LANGUAGES``, ``LANGUAGE_CODE`` et ``LANGUAGE_BIDI`` tels que décrits ci-"
"dessus."

msgid "``get_language_info``"
msgstr "``get_language_info``"

msgid ""
"You can also retrieve information about any of the available languages using "
"provided template tags and filters. To get information about a single "
"language, use the ``{% get_language_info %}`` tag:"
msgstr ""
"Vous pouvez aussi récupérer toute information à propos des langues "
"disponibles en utilisant des balises et des filtres intégrés. Pour obtenir "
"des informations sur une seule langue, utilisez la balise ``{% "
"get_language_info %}``:"

msgid "You can then access the information:"
msgstr "Vous pouvez ensuite accéder à ces informations :"

msgid "``get_language_info_list``"
msgstr "``get_language_info_list``"

msgid ""
"You can also use the ``{% get_language_info_list %}`` template tag to "
"retrieve information for a list of languages (e.g. active languages as "
"specified in :setting:`LANGUAGES`). See :ref:`the section about the "
"set_language redirect view <set_language-redirect-view>` for an example of "
"how to display a language selector using ``{% get_language_info_list %}``."
msgstr ""
"Vous pouvez aussi utiliser la balise de gabarit ``{% get_language_info_list "
"%}`` pour obtenir les informations d'une liste de langues (par ex. les "
"langues actives figurant dans :setting:`LANGUAGES`). Consultez :ref:`la "
"section sur la vue de redirection set_language <set_language-redirect-view>` "
"pour trouver un exemple sur la manière d'afficher un sélecteur de langue "
"avec ``{% get_language_info_list %}``."

msgid ""
"In addition to :setting:`LANGUAGES` style list of tuples, ``{% "
"get_language_info_list %}`` supports lists of language codes. If you do this "
"in your view:"
msgstr ""
"En plus du style liste de tuples de :setting:`LANGUAGES`, ``{% "
"get_language_info_list %}`` accepte des listes de codes de langue. Si vous "
"faites ceci dans votre vue :"

msgid "you can iterate over those languages in the template:"
msgstr "vous pouvez faire une boucle sur ces langues dans le gabarit :"

msgid "There are also some filters available for convenience:"
msgstr "Il existe aussi quelques filtres pour votre confort :"

msgid "``{{ LANGUAGE_CODE|language_name }}`` (\"German\")"
msgstr "``{{ LANGUAGE_CODE|language_name }}`` (\"German\")"

msgid "``{{ LANGUAGE_CODE|language_name_local }}`` (\"Deutsch\")"
msgstr "``{{ LANGUAGE_CODE|language_name_local }}`` (\"Deutsch\")"

msgid "``{{ LANGUAGE_CODE|language_bidi }}`` (False)"
msgstr "``{{ LANGUAGE_CODE|language_bidi }}`` (False)"

msgid ""
"``{{ LANGUAGE_CODE|language_name_translated }}`` (\"německy\", when active "
"language is Czech)"
msgstr ""
"``{{ LANGUAGE_CODE|language_name_translated }}`` (\"německy\", lorsque la "
"langue actuelle est le tchèque)"

msgid "Internationalization: in JavaScript code"
msgstr "Internationalisation : dans le code JavaScript"

msgid "Adding translations to JavaScript poses some problems:"
msgstr "L'ajout de traductions en Javascript pose quelques problèmes :"

msgid "JavaScript code doesn't have access to a ``gettext`` implementation."
msgstr ""
"Le code JavaScript n'a pas d'accès à une implémentation de ``gettext``."

msgid ""
"JavaScript code doesn't have access to ``.po`` or ``.mo`` files; they need "
"to be delivered by the server."
msgstr ""
"Le code JavaScript n'a pas accès à des fichiers ``.po`` ou ``.mo``; ils "
"doivent être fournis par le serveur."

msgid ""
"The translation catalogs for JavaScript should be kept as small as possible."
msgstr ""
"Les catalogues de traduction pour JavaScript doivent être aussi compacts que "
"possible."

msgid ""
"Django provides an integrated solution for these problems: It passes the "
"translations into JavaScript, so you can call ``gettext``, etc., from within "
"JavaScript."
msgstr ""
"Django fournit une solution intégrée pour ces problèmes : il transpose les "
"traductions dans JavaScript afin que vous puissiez appeler les fonctions de "
"type ``gettext`` dans votre code JavaScript."

msgid ""
"The main solution to these problems is the following ``JavaScriptCatalog`` "
"view, which generates a JavaScript code library with functions that mimic "
"the ``gettext`` interface, plus an array of translation strings."
msgstr ""
"La solution principale à ces problèmes est la vue ``JavaScriptCatalog`` "
"suivante, qui génère une bibliothèque de code JavaScript avec des fonctions "
"qui simulent l'interface ``gettext``, ainsi qu'un tableau de chaînes de "
"traduction."

msgid "The ``JavaScriptCatalog`` view"
msgstr "La vue ``JavaScriptCatalog``"

msgid ""
"A view that produces a JavaScript code library with functions that mimic the "
"``gettext`` interface, plus an array of translation strings."
msgstr ""
"Une vue qui génère une bibliothèque de code JavaScript avec des fonctions "
"qui simulent l'interface ``gettext``, ainsi qu'un tableau de chaînes de "
"traduction."

msgid "**Attributes**"
msgstr "**Attributs**"

msgid ""
"Translation domain containing strings to add in the view output. Defaults to "
"``'djangojs'``."
msgstr ""
"Domaine de traduction contenant les chaînes à ajouter dans le résultat de la "
"vue. Contient ``'djangojs'`` par défaut."

msgid ""
"A list of :attr:`application names <django.apps.AppConfig.name>` among "
"installed applications. Those apps should contain a ``locale`` directory. "
"All those catalogs plus all catalogs found in :setting:`LOCALE_PATHS` (which "
"are always included) are merged into one catalog. Defaults to ``None``, "
"which means that all available translations from all :setting:"
"`INSTALLED_APPS` are provided in the JavaScript output."
msgstr ""
"Une liste de :attr:`noms d'applications <django.apps.AppConfig.name>` parmi "
"les applications installées. Ces applications doivent contenir un dossier "
"``locale``. Tous ces catalogues ainsi que ceux trouvés dans :setting:"
"`LOCALE_PATHS` (qui sont toujours inclus) sont fusionnés en un seul "
"catalogue. La valeur par défaut est ``None``, ce qui signifie que toutes les "
"traductions disponibles de toutes les applications dans :setting:"
"`INSTALLED_APPS` sont présentes dans le résultat JavaScript."

msgid "**Example with default values**::"
msgstr "**Exemple avec les valeurs par défaut** ::"

msgid "**Example with custom packages**::"
msgstr "**Exemple avec des paquets personnalisés** ::"

msgid ""
"If your root URLconf uses :func:`~django.conf.urls.i18n.i18n_patterns`, "
"``JavaScriptCatalog`` must also be wrapped by ``i18n_patterns()`` for the "
"catalog to be correctly generated."
msgstr ""
"Si votre configuration d'URL racine utilise  :func:`~django.conf.urls.i18n."
"i18n_patterns`, ``JavaScriptCatalog`` doit également être enveloppé dans "
"``i18n_patterns()`` pour que le catalogue soit correctement généré."

msgid "**Example with** ``i18n_patterns()``::"
msgstr "**Exemple avec** ``i18n_patterns()``::"

msgid ""
"The precedence of translations is such that the packages appearing later in "
"the ``packages`` argument have higher precedence than the ones appearing at "
"the beginning. This is important in the case of clashing translations for "
"the same literal."
msgstr ""
"La priorité des traductions se fait par ordre d'apparition des modules dans "
"le paramètre ``packages``; ceux qui apparaissent en dernier ont la priorité "
"sur les premiers. Ceci est important dans le cas où une même chaîne est "
"traduite différemment dans plusieurs catalogues."

msgid ""
"If you use more than one ``JavaScriptCatalog`` view on a site and some of "
"them define the same strings, the strings in the catalog that was loaded "
"last take precedence."
msgstr ""
"Si vous utilisez plus d'une vue ``JavaScriptCatalog`` sur un site et que "
"plusieurs définissent les mêmes chaînes, les chaînes du catalogue chargé en "
"dernier ont la priorité."

msgid "Using the JavaScript translation catalog"
msgstr "Emploi du catalogue des traductions JavaScript"

msgid "To use the catalog, pull in the dynamically generated script like this:"
msgstr ""
"Pour utiliser le catalogue, insérez le script généré dynamiquement comme "
"ceci :"

msgid ""
"This uses reverse URL lookup to find the URL of the JavaScript catalog view. "
"When the catalog is loaded, your JavaScript code can use the following "
"methods:"
msgstr ""
"Nous utilisons la résolution inverse d’URL pour trouver l’URL de la vue du "
"catalogue JavaScript. Lorsque le catalogue est chargé, votre code JavaScript "
"peut utiliser les méthodes suivantes :"

msgid "``gettext``"
msgstr "``gettext``"

msgid "``ngettext``"
msgstr "``ngettext``"

msgid "``interpolate``"
msgstr "``interpolate``"

msgid "``get_format``"
msgstr "``get_format``"

msgid "``gettext_noop``"
msgstr "``gettext_noop``"

msgid "``pgettext``"
msgstr "``pgettext``"

msgid "``npgettext``"
msgstr "``npgettext``"

msgid "``pluralidx``"
msgstr "``pluralidx``"

msgid ""
"The ``gettext`` function behaves similarly to the standard ``gettext`` "
"interface within your Python code::"
msgstr ""
"La fonction ``gettext`` fonctionne de manière similaire à l'interface "
"``gettext`` standard accessible depuis le code Python ::"

msgid ""
"The ``ngettext`` function provides an interface to pluralize words and "
"phrases:"
msgstr ""
"La fonction ``ngettext`` fournit une interface pour mettre au pluriel des "
"mots et des phrases :"

msgid ""
"The ``interpolate`` function supports dynamically populating a format "
"string. The interpolation syntax is borrowed from Python, so the "
"``interpolate`` function supports both positional and named interpolation:"
msgstr ""
"La fonction ``interpolate`` permet de remplir dynamiquement une chaîne de "
"mise en forme. La syntaxe d’interpolation est empruntée à Python ; ainsi, la "
"fonction ``interpolate`` prend en charge à la fois les paramètres nommés et "
"les paramètres positionnels :"

msgid ""
"Positional interpolation: ``obj`` contains a JavaScript Array object whose "
"elements values are then sequentially interpolated in their corresponding "
"``fmt`` placeholders in the same order they appear. For example:"
msgstr ""
"Interpolation positionnelle : ``obj`` contient un objet Array JavaScript "
"dont les valeurs d'éléments sont interpolées dans l'ordre d'apparition de "
"leur substituant ``fmt`` correspondant. Par exemple :"

msgid ""
"Named interpolation: This mode is selected by passing the optional boolean "
"``named`` parameter as ``true``. ``obj`` contains a JavaScript object or "
"associative array. For example:"
msgstr ""
"Interpolation nommée : ce mode est sélectionné en passant ``true`` dans le "
"paramètre booléen facultatif ``named``. ``obj`` contient un objet JavaScript "
"ou un tableau associatif. Par exemple :"

msgid ""
"You shouldn't go over the top with string interpolation, though: this is "
"still JavaScript, so the code has to make repeated regular-expression "
"substitutions. This isn't as fast as string interpolation in Python, so keep "
"it to those cases where you really need it (for example, in conjunction with "
"``ngettext`` to produce proper pluralizations)."
msgstr ""
"Il ne faut cependant pas abuser de l'interpolation de chaînes : c'est "
"toujours du JavaScript, le code effectue donc des substitutions répétées par "
"expression régulière. Ce n'est pas aussi rapide que l'interpolation de "
"chaînes en Python, il s'agit donc de réserver cet usage pour les cas où "
"c'est vraiment nécessaire (par exemple conjointement avec``ngettext`` pour "
"générer des pluriels corrects)."

msgid ""
"The ``get_format`` function has access to the configured i18n formatting "
"settings and can retrieve the format string for a given setting name:"
msgstr ""
"La fonction ``get_format`` accède aux réglages de mise en forme régionalisée "
"et peut obtenir la chaîne de format d'un nom de réglage donné :"

msgid "It has access to the following settings:"
msgstr "Elle peut accéder aux réglages suivants :"

msgid ":setting:`DATE_FORMAT`"
msgstr ":setting:`DATE_FORMAT`"

msgid ":setting:`DATE_INPUT_FORMATS`"
msgstr ":setting:`DATE_INPUT_FORMATS`"

msgid ":setting:`DATETIME_FORMAT`"
msgstr ":setting:`DATETIME_FORMAT`"

msgid ":setting:`DATETIME_INPUT_FORMATS`"
msgstr ":setting:`DATETIME_INPUT_FORMATS`"

msgid ":setting:`DECIMAL_SEPARATOR`"
msgstr ":setting:`DECIMAL_SEPARATOR`"

msgid ":setting:`FIRST_DAY_OF_WEEK`"
msgstr ":setting:`FIRST_DAY_OF_WEEK`"

msgid ":setting:`MONTH_DAY_FORMAT`"
msgstr ":setting:`MONTH_DAY_FORMAT`"

msgid ":setting:`NUMBER_GROUPING`"
msgstr ":setting:`NUMBER_GROUPING`"

msgid ":setting:`SHORT_DATE_FORMAT`"
msgstr ":setting:`SHORT_DATE_FORMAT`"

msgid ":setting:`SHORT_DATETIME_FORMAT`"
msgstr ":setting:`SHORT_DATETIME_FORMAT`"

msgid ":setting:`THOUSAND_SEPARATOR`"
msgstr ":setting:`THOUSAND_SEPARATOR`"

msgid ":setting:`TIME_FORMAT`"
msgstr ":setting:`TIME_FORMAT`"

msgid ":setting:`TIME_INPUT_FORMATS`"
msgstr ":setting:`TIME_INPUT_FORMATS`"

msgid ":setting:`YEAR_MONTH_FORMAT`"
msgstr ":setting:`YEAR_MONTH_FORMAT`"

msgid ""
"This is useful for maintaining formatting consistency with the Python-"
"rendered values."
msgstr ""
"C'est bien utile pour conserver une cohérence de mise en forme en lien avec "
"les valeurs produites par le code Python."

msgid ""
"This emulates the ``gettext`` function but does nothing, returning whatever "
"is passed to it::"
msgstr ""
"Ceci émule la fonction ``gettext``, mais ne fait rien d'autre que de "
"renvoyer le contenu qui lui est transmis ::"

msgid ""
"This is useful for stubbing out portions of the code that will need "
"translation in the future."
msgstr ""
"C'est utile pour identifier des portions de code qui vont avoir besoin "
"d'être traduites plus tard."

msgid ""
"The ``pgettext`` function behaves like the Python variant (:func:`~django."
"utils.translation.pgettext()`), providing a contextually translated word::"
msgstr ""
"La fonction ``pgettext`` fonctionne de manière similaire à son équivalent "
"Python (:func:`~django.utils.translation.pgettext()`), fournissant un "
"contenu traduit en fonction d'un contexte ::"

msgid ""
"The ``npgettext`` function also behaves like the Python variant (:func:"
"`~django.utils.translation.npgettext()`), providing a **pluralized** "
"contextually translated word:"
msgstr ""
"La fonction ``npgettext`` fonctionne également comme son équivalent Python (:"
"func:`~django.utils.translation.npgettext()`), fournissant un contenu "
"**pluriel** traduit en fonction d'un contexte :"

msgid ""
"The ``pluralidx`` function works in a similar way to the :tfilter:"
"`pluralize` template filter, determining if a given ``count`` should use a "
"plural form of a word or not:"
msgstr ""
"La fonction ``pluralidx`` fonctionne de manière semblable au filtre de "
"gabarit :tfilter:`pluralize`, déterminant si un nombre ``count`` donné doit "
"utiliser une forme plurielle d'un mot ou pas :"

msgid ""
"In the simplest case, if no custom pluralization is needed, this returns "
"``false`` for the integer ``1`` and ``true`` for all other numbers."
msgstr ""
"Dans le cas le plus simple, si aucune mise au pluriel n'est nécessaire, "
"cette fonction renvoie ``false`` pour le nombre ``1`` et ``true`` pour tous "
"les autres nombres."

msgid ""
"However, pluralization is not this simple in all languages. If the language "
"does not support pluralization, an empty value is provided."
msgstr ""
"Cependant, la mise au pluriel n'est pas si simple dans toutes les langues. "
"Si la langue ne gère pas les pluriels, une valeur vide est renvoyée."

msgid ""
"Additionally, if there are complex rules around pluralization, the catalog "
"view will render a conditional expression. This will evaluate to either a "
"``true`` (should pluralize) or ``false`` (should **not** pluralize) value."
msgstr ""
"De plus, si les pluriels se basent sur des règles complexes, la vue du "
"catalogue produit une expression conditionnelle. Son résultat aboutit soit à "
"une valeur ``true`` (pluriel nécessaire), soit à une valeur ``false`` "
"(pluriel **non** nécessaire)."

msgid "The ``JSONCatalog`` view"
msgstr "La vue ``JSONCatalog``"

msgid ""
"In order to use another client-side library to handle translations, you may "
"want to take advantage of the ``JSONCatalog`` view. It's similar to :class:"
"`~django.views.i18n.JavaScriptCatalog` but returns a JSON response."
msgstr ""
"Pour pouvoir utiliser une autre bibliothèque côté client pour la gestion des "
"traductions, il peut être avantageux de profiter de la vue ``JSONCatalog``. "
"Le résultat est proche de :class:`~django.views.i18n.JavaScriptCatalog` mais "
"le contenu est renvoyé sous forme de réponse JSON."

msgid ""
"See the documentation for :class:`~django.views.i18n.JavaScriptCatalog` to "
"learn about possible values and use of the ``domain`` and ``packages`` "
"attributes."
msgstr ""
"Consultez la documentation de :class:`~django.views.i18n.JavaScriptCatalog` "
"pour connaître les valeurs possibles et l'utilisation des attributs "
"``domain`` et ``packages``."

msgid "The response format is as follows:"
msgstr "Le format de la réponse est le suivant :"

msgid "Note on performance"
msgstr "Note sur les performances"

msgid ""
"The various JavaScript/JSON i18n views generate the catalog from ``.mo`` "
"files on every request. Since its output is constant, at least for a given "
"version of a site, it's a good candidate for caching."
msgstr ""
"Les différentes vues JavaScript/JSON i18n génèrent leur catalogue à partir "
"de fichiers ``.mo`` pour chaque requête. Comme le résultat est constant, au "
"moins pour une version donnée du site, c'est une bonne occasion d'utiliser "
"le cache."

msgid ""
"Server-side caching will reduce CPU load. It's easily implemented with the :"
"func:`~django.views.decorators.cache.cache_page` decorator. To trigger cache "
"invalidation when your translations change, provide a version-dependent key "
"prefix, as shown in the example below, or map the view at a version-"
"dependent URL::"
msgstr ""
"Le cache côté serveur réduit la charge sur le processeur. Le décorateur :"
"func:`~django.views.decorators.cache.cache_page` permet de le faire "
"facilement. Pour provoquer l'invalidation du cache lorsque les traductions "
"ont changé, ajoutez un préfixe de clé dépendant de la version, comme le "
"montre l'exemple ci-dessous, ou faites correspondre la vue à une URL "
"dépendant de la version ::"

msgid ""
"Client-side caching will save bandwidth and make your site load faster. If "
"you're using ETags (:class:`~django.middleware.http."
"ConditionalGetMiddleware`), you're already covered. Otherwise, you can "
"apply :ref:`conditional decorators <conditional-decorators>`. In the "
"following example, the cache is invalidated whenever you restart your "
"application server::"
msgstr ""
"Le cache côté client économise de la bande passante et accélère le "
"chargement de votre site. Si vous utilisez les ``ETags`` (:class:`~django."
"middleware.http.ConditionalGetMiddleware`), il n'y a rien à faire de plus. "
"Sinon, vous pouvez appliquer des :ref:`décorateurs conditionnels "
"<conditional-decorators>`. Dans l'exemple qui suit, le cache est invalidé "
"chaque fois que vous relancez le serveur d'applications ::"

msgid ""
"You can even pre-generate the JavaScript catalog as part of your deployment "
"procedure and serve it as a static file. This radical technique is "
"implemented in :pypi:`django-statici18n`."
msgstr ""
"Il est même possible de pré-générer le catalogue JavaScript dans le cadre de "
"votre procédure de déploiement et le servir comme fichier statique. Cette "
"technique radicale est implémentée dans :pypi:`django-statici18n`."

msgid "Internationalization: in URL patterns"
msgstr "Internationalisation : dans les motifs d'URL"

msgid "Django provides two mechanisms to internationalize URL patterns:"
msgstr ""
"Django fournit deux mécanismes pour internationaliser les motifs d'URL :"

msgid ""
"Adding the language prefix to the root of the URL patterns to make it "
"possible for :class:`~django.middleware.locale.LocaleMiddleware` to detect "
"the language to activate from the requested URL."
msgstr ""
"En ajoutant le préfixe de langue à la racine des motifs d'URL afin que :"
"class:`~django.middleware.locale.LocaleMiddleware` puisse détecter la langue "
"à activer à partir de l'URL demandée."

msgid ""
"Making URL patterns themselves translatable via the :func:`django.utils."
"translation.gettext_lazy()` function."
msgstr ""
"En rendant traduisibles les motifs d'URL eux-mêmes via la fonction :func:"
"`django.utils.translation.gettext_lazy()`."

msgid ""
"Using either one of these features requires that an active language be set "
"for each request; in other words, you need to have :class:`django.middleware."
"locale.LocaleMiddleware` in your :setting:`MIDDLEWARE` setting."
msgstr ""
"L'utilisation de chacune de ces techniques exige qu'une langue active soit "
"définie pour chaque requête ; en d'autres termes, votre réglage :setting:"
"`MIDDLEWARE` doit contenir :class:`django.middleware.locale."
"LocaleMiddleware`."

msgid "Language prefix in URL patterns"
msgstr "Préfixe de langue dans les motifs d'URL"

msgid ""
"This function can be used in a root URLconf and Django will automatically "
"prepend the current active language code to all URL patterns defined within :"
"func:`~django.conf.urls.i18n.i18n_patterns`."
msgstr ""
"Cette fonction peut être utilisée dans une configuration d'URL racine et "
"Django préfixe automatiquement tous les motifs d'URL définis par :func:"
"`~django.conf.urls.i18n.i18n_patterns` avec le code de langue actuellement "
"actif."

msgid ""
"Setting ``prefix_default_language`` to ``False`` removes the prefix from the "
"default language (:setting:`LANGUAGE_CODE`). This can be useful when adding "
"translations to existing site so that the current URLs won't change."
msgstr ""
"En définissant ``prefix_default_language`` à ``False``, le préfixe pour la "
"langue par défaut (:setting:`LANGUAGE_CODE`) est enlevé. Cela peut être "
"utile lors de l'ajout de traductions à un site existant afin que les URL "
"actuelles ne changent pas."

msgid "Example URL patterns::"
msgstr "Exemples de motifs d'URL ::"

msgid ""
"After defining these URL patterns, Django will automatically add the "
"language prefix to the URL patterns that were added by the ``i18n_patterns`` "
"function. Example:"
msgstr ""
"Après la définition de ces motifs d'URL, Django ajoute automatiquement le "
"préfixe de langue dans les motifs d'URL qui ont été ajoutés avec la fonction "
"``i18n_patterns``. Exemple :"

msgid ""
"With ``prefix_default_language=False`` and  ``LANGUAGE_CODE='en'``, the URLs "
"will be:"
msgstr ""
"Avec ``prefix_default_language=False`` et ``LANGUAGE_CODE='en'``, les URL "
"seront :"

msgid ""
":func:`~django.conf.urls.i18n.i18n_patterns` is only allowed in a root "
"URLconf. Using it within an included URLconf will throw an :exc:`~django."
"core.exceptions.ImproperlyConfigured` exception."
msgstr ""
":func:`~django.conf.urls.i18n.i18n_patterns` ne peut figurer que dans la "
"configuration d'URL racine. Si vous essayez de l'utiliser dans une "
"configuration d'URL incluse, vous obtiendrez une exception :exc:`~django."
"core.exceptions.ImproperlyConfigured`."

msgid ""
"Ensure that you don't have non-prefixed URL patterns that might collide with "
"an automatically-added language prefix."
msgstr ""
"Assurez-vous de ne pas avoir de motifs d'URL non préfixés qui pourraient "
"être confondus avec des motifs contenant le préfixe de langue automatique."

msgid "Translating URL patterns"
msgstr "Traduction de motifs d'URL"

msgid ""
"URL patterns can also be marked translatable using the :func:`~django.utils."
"translation.gettext_lazy` function. Example::"
msgstr ""
"Les motifs d'URL peuvent aussi être signalés comme traduisibles en utilisant "
"la fonction :func:`~django.utils.translation.gettext_lazy`. Exemple ::"

msgid ""
"After you've created the translations, the :func:`~django.urls.reverse` "
"function will return the URL in the active language. Example:"
msgstr ""
"Après avoir effectué les traductions, la fonction :func:`~django.urls."
"reverse` renverra l'URL dans la langue active. Exemple :"

msgid ""
"In most cases, it's best to use translated URLs only within a language code "
"prefixed block of patterns (using :func:`~django.conf.urls.i18n."
"i18n_patterns`), to avoid the possibility that a carelessly translated URL "
"causes a collision with a non-translated URL pattern."
msgstr ""
"Dans la plupart des cas, il est recommandé de n'utiliser des URL traduites "
"que dans des blocs de motifs avec préfixe de code de langue (utilisant :func:"
"`~django.conf.urls.i18n.i18n_patterns`), pour éviter l'éventualité qu'une "
"URL mal traduite entre en conflit avec un motif d'URL non traduit."

msgid "Reversing in templates"
msgstr "Résolution inverse dans les gabarits"

msgid ""
"If localized URLs get reversed in templates they always use the current "
"language. To link to a URL in another language use the :ttag:`language` "
"template tag. It enables the given language in the enclosed template section:"
msgstr ""
"Lors de la résolution d'URL régionalisées dans les gabarits, c'est toujours "
"la langue active qui sera utilisée. Pour créer un lien vers une URL dans une "
"autre langue, utilisez la balise de gabarit :ttag:`language`. Elle active la "
"langue indiquée à l'intérieur de la section de gabarit concernée :"

msgid ""
"The :ttag:`language` tag expects the language code as the only argument."
msgstr ""
"La balise :ttag:`language` n'accepte que le code de langue comme paramètre."

msgid "Localization: how to create language files"
msgstr "Régionalisation : comment créer les fichiers de langues"

msgid ""
"Once the string literals of an application have been tagged for later "
"translation, the translation themselves need to be written (or obtained). "
"Here's how that works."
msgstr ""
"Après avoir marqué les chaînes à traduire dans le code d'une application, il "
"s'agit d'effectuer les traductions elles-mêmes. Voici comment ça fonctionne."

msgid "Message files"
msgstr "Fichiers de messages"

msgid ""
"The first step is to create a :term:`message file` for a new language. A "
"message file is a plain-text file, representing a single language, that "
"contains all available translation strings and how they should be "
"represented in the given language. Message files have a ``.po`` file "
"extension."
msgstr ""
"La première étape est de créer un :term:`fichier de messages` pour la "
"nouvelle langue. Il s'agit d'un simple fichier texte correspondant à une "
"seule langue et contenant toutes les chaînes à traduire disponibles ainsi "
"que leur traduction dans la langue cible. Les fichiers de messages possèdent "
"l'extension de fichier ``.po``."

msgid ""
"Django comes with a tool, :djadmin:`django-admin makemessages "
"<makemessages>`, that automates the creation and upkeep of these files."
msgstr ""
"Django est livré avec un outil, :djadmin:`django-admin makemessages "
"<makemessages>`, qui automatise la création et la maintenance de ces "
"fichiers."

msgid "Gettext utilities"
msgstr "Utilitaires gettext"

msgid ""
"The ``makemessages`` command (and ``compilemessages`` discussed later) use "
"commands from the GNU gettext toolset: ``xgettext``, ``msgfmt``, "
"``msgmerge`` and ``msguniq``."
msgstr ""
"La commande ``makemessages`` (ainsi que ``compilemessages`` présentée plus "
"bas) utilise des commandes de la suite d'outils GNU gettext : ``xgettext``, "
"``msgfmt``, ``msgmerge`` et ``msguniq``."

msgid "The minimum version of the ``gettext`` utilities supported is 0.15."
msgstr ""
"La version minimale prise en charge des utilitaires  ``gettext`` est la "
"version 0.15."

msgid "To create or update a message file, run this command:"
msgstr ""
"Pour créer ou mettre à jour un fichier de messages, exécutez cette commande :"

msgid ""
"...where ``de`` is the :term:`locale name` for the message file you want to "
"create. For example, ``pt_BR`` for Brazilian Portuguese, ``de_AT`` for "
"Austrian German or ``id`` for Indonesian."
msgstr ""
"…où ``de`` est le :term:`nom de locale` du fichier de messages que vous "
"souhaitez créer. Par exemple, le portugais du Brésil est représenté par "
"``pt_BR``, l'allemand d'Autriche par ``de_AT`` ou encore ``id`` pour "
"l'indonésien."

msgid "The script should be run from one of two places:"
msgstr "Le script doit être lancé depuis l'un des deux endroits suivants :"

msgid ""
"The root directory of your Django project (the one that contains ``manage."
"py``)."
msgstr ""
"Le répertoire racine de votre projet Django (celui qui contient ``manage."
"py``)."

msgid "The root directory of one of your Django apps."
msgstr "Le répertoire racine de l'une de vos applications Django."

msgid ""
"The script runs over your project source tree or your application source "
"tree and pulls out all strings marked for translation (see :ref:`how-django-"
"discovers-translations` and be sure :setting:`LOCALE_PATHS` is configured "
"correctly). It creates (or updates) a message file in the directory ``locale/"
"LANG/LC_MESSAGES``. In the ``de`` example, the file will be ``locale/de/"
"LC_MESSAGES/django.po``."
msgstr ""
"Le script parcourt l'arborescence des sources de votre projet ou de votre "
"application et extrait toutes les chaînes marquées pour la traduction "
"(consultez :ref:`how-django-discovers-translations` et assurez-vous que :"
"setting:`LOCALE_PATHS` est correctement configuré). Il crée (ou met à jour) "
"un fichier de messages dans le répertoire ``locale/LANG/LC_MESSAGES``. Dans "
"l'exemple avec ``de``, le fichier équivaudra à ``locale/de/LC_MESSAGES/"
"django.po``."

msgid ""
"When you run ``makemessages`` from the root directory of your project, the "
"extracted strings will be automatically distributed to the proper message "
"files. That is, a string extracted from a file of an app containing a "
"``locale`` directory will go in a message file under that directory. A "
"string extracted from a file of an app without any ``locale`` directory will "
"either go in a message file under the directory listed first in :setting:"
"`LOCALE_PATHS` or will generate an error if :setting:`LOCALE_PATHS` is empty."
msgstr ""
"Lorsque vous exécutez ``makemessages`` à partir du dossier racine de votre "
"projet, les chaînes extraites sont automatiquement distribuées dans les "
"fichiers de messages appropriés. C'est-à-dire qu'une chaîne extraite d'un "
"fichier d'une application contenant un répertoire ``locale`` sera placée "
"dans un fichier de messages sous ce répertoire. Une chaîne extraite d'un "
"fichier d'une application sans répertoire ``locale`` sera placée dans un "
"fichier de messages sous le répertoire apparaissant en premier dans :setting:"
"`LOCALE_PATHS` ou générera une erreur si le réglage :setting:`LOCALE_PATHS` "
"est vide."

msgid ""
"By default :djadmin:`django-admin makemessages <makemessages>` examines "
"every file that has the ``.html``, ``.txt`` or ``.py`` file extension. If "
"you want to override that default, use the :option:`--extension "
"<makemessages --extension>` or ``-e`` option to specify the file extensions "
"to examine:"
msgstr ""
"Par défaut, :djadmin:`django-admin makemessages <makemessages>` examine "
"chaque fichier ayant une extension ``.html``, ``.txt`` ou ``.py``. Dans le "
"cas où vous souhaitez modifier cela, utilisez l'option :option:`--extension "
"<makemessages --extension>` ou ``-e`` pour indiquer les extensions de "
"fichiers à examiner :"

msgid ""
"Separate multiple extensions with commas and/or use ``-e`` or ``--"
"extension`` multiple times:"
msgstr ""
"Séparez plusieurs extensions par une virgule ou utilisez plusieurs "
"occurrences de ``-e`` ou ``--extension``:"

msgid ""
"When :ref:`creating message files from JavaScript source code <creating-"
"message-files-from-js-code>` you need to use the special ``djangojs`` "
"domain, **not** ``-e js``."
msgstr ""
"Lors de la :ref:`création de fichiers de messages à partir de code "
"JavaScript <creating-message-files-from-js-code>`, vous devez utiliser le "
"domaine particulier ``djangojs``, et **non pas** ``-e js``."

msgid "Using Jinja2 templates?"
msgstr "Utilisation de gabarits Jinja2"

msgid ""
":djadmin:`makemessages` doesn't understand the syntax of Jinja2 templates. "
"To extract strings from a project containing Jinja2 templates, use `Message "
"Extracting`_ from Babel_ instead."
msgstr ""
":djadmin:`makemessages` ne comprend pas la syntaxe des gabarits Jinja2. Pour "
"extraire les chaînes d'un projet contenant des gabarits Jinja2, utilisez "
"plutôt l'`extraction de messages`_ de Babel_."

msgid "Here's an example ``babel.cfg`` configuration file:"
msgstr "Voici un exemple de fichier de configuration ``babel.cfg``:"

msgid ""
"Make sure you list all extensions you're using! Otherwise Babel won't "
"recognize the tags defined by these extensions and will ignore Jinja2 "
"templates containing them entirely."
msgstr ""
"Prenez soin de bien mentionner toutes les extensions que vous utilisez ! "
"Sinon, Babel ne reconnaîtra pas les balises définies par ces extensions et "
"ignorera complètement les gabarits Jinja2 contenant de telles balises."

msgid ""
"Babel provides similar features to :djadmin:`makemessages`, can replace it "
"in general, and doesn't depend on ``gettext``. For more information, read "
"its documentation about `working with message catalogs`_."
msgstr ""
"Babel fournit des fonctionnalités similaires à :djadmin:`makemessages` et "
"peut généralement le remplacer. Il ne dépend pas de ``gettext``. Pour plus "
"d'informations, lisez sa documentation au sujet de `sa gestion des "
"catalogues de messages`_."

msgid "No gettext?"
msgstr "Pas de gettext ?"

msgid ""
"If you don't have the ``gettext`` utilities installed, :djadmin:"
"`makemessages` will create empty files. If that's the case, either install "
"the ``gettext`` utilities or copy the English message file (``locale/en/"
"LC_MESSAGES/django.po``) if available and use it as a starting point, which "
"is an empty translation file."
msgstr ""
"Si les utilitaires ``gettext`` ne sont pas installés, :djadmin:"
"`makemessages` crée des fichiers vides. Dans ce cas, installez les "
"utilitaires ``gettext`` ou copiez le fichier de messages anglais (``locale/"
"en/LC_MESSAGES/django.po``) s'il y en a un et utilisez-le comme point de "
"départ, celui-ci étant un fichier de traductions vides."

msgid "Working on Windows?"
msgstr "Vous utilisez Windows ?"

msgid ""
"If you're using Windows and need to install the GNU gettext utilities so :"
"djadmin:`makemessages` works, see :ref:`gettext_on_windows` for more "
"information."
msgstr ""
"Si vous utilisez Windows et que vous avez besoin d'installer les utilitaires "
"GNU gettext pour le fonctionnement de :djadmin:`makemessages`, consultez :"
"ref:`gettext_on_windows` pour plus d'informations."

msgid ""
"Each ``.po`` file contains a small bit of metadata, such as the translation "
"maintainer's contact information, but the bulk of the file is a list of "
"**messages** -- mappings between translation strings and the actual "
"translated text for the particular language."
msgstr ""
"Chaque fichier ``.po`` contient quelques métadonnées telles que les "
"informations de contact du mainteneur de la traduction, mais la partie "
"principale du fichier est composée d'une liste de **messages**, des "
"correspondances entre les chaînes à traduire et les textes de la traduction "
"dans la langue cible."

msgid ""
"For example, if your Django app contained a translation string for the text "
"``\"Welcome to my site.\"``, like so::"
msgstr ""
"Par exemple, si votre application Django contient une chaîne à traduire pour "
"le texte ``\"Welcome to my site.\"``, comme ceci ::"

msgid ""
"...then :djadmin:`django-admin makemessages <makemessages>` will have "
"created a ``.po`` file containing the following snippet -- a message:"
msgstr ""
"…alors :djadmin:`django-admin makemessages <makemessages>` créera un fichier "
"``.po`` contenant l'extrait (message) suivant :"

msgid "A quick explanation:"
msgstr "Une rapide explication :"

msgid ""
"``msgid`` is the translation string, which appears in the source. Don't "
"change it."
msgstr ""
"``msgid`` est la chaîne à traduire apparaissant dans la source. N'y touchez "
"pas."

msgid ""
"``msgstr`` is where you put the language-specific translation. It starts out "
"empty, so it's your responsibility to change it. Make sure you keep the "
"quotes around your translation."
msgstr ""
"``msgstr`` est l'emplacement devant recevoir la traduction dans la langue "
"cible. Il est vide au début, il est donc de votre responsabilité d'y ajouter "
"le contenu traduit. Prenez soin de ne pas enlever les guillemets autour de "
"la traduction."

msgid ""
"As a convenience, each message includes, in the form of a comment line "
"prefixed with ``#`` and located above the ``msgid`` line, the filename and "
"line number from which the translation string was gleaned."
msgstr ""
"Chaque message contient des indications utiles sous la forme d'une ligne de "
"commentaire préfixée par ``#`` et située au-dessus de la ligne ``msgid``; ce "
"commentaire contient le nom de fichier et le numéro de ligne correspondant "
"au fichier duquel cette chaîne à traduire a été extraite."

msgid ""
"Long messages are a special case. There, the first string directly after the "
"``msgstr`` (or ``msgid``) is an empty string. Then the content itself will "
"be written over the next few lines as one string per line. Those strings are "
"directly concatenated. Don't forget trailing spaces within the strings; "
"otherwise, they'll be tacked together without whitespace!"
msgstr ""
"Les longs messages sont des cas spéciaux. La première expression juste après "
"``msgstr`` (ou ``msgid``) est une chaîne vide. Le contenu lui-même est écrit "
"dans les lignes suivantes sur plusieurs lignes qui seront concaténées au "
"moment de la récupération de la traduction. N'oubliez donc pas les espaces "
"en fin de ligne à l'intérieur du texte, sinon les lignes seront mises bout à "
"bout sans espace !"

msgid "Mind your charset"
msgstr "Attention au codage des caractères"

msgid ""
"Due to the way the ``gettext`` tools work internally and because we want to "
"allow non-ASCII source strings in Django's core and your applications, you "
"**must** use UTF-8 as the encoding for your ``.po`` files (the default when "
"``.po`` files are created).  This means that everybody will be using the "
"same encoding, which is important when Django processes the ``.po`` files."
msgstr ""
"En raison du fonctionnement interne des outils ``gettext`` et de la volonté "
"du cœur de Django d'accepter dans les chaînes source des caractères hors de "
"l'ensemble ASCII, vous **devez** utiliser UTF-8 comme codage pour vos "
"fichiers ``.po`` (valeur par défaut lorsque les fichiers ``.po`` sont "
"créés). Cela signifie que tout le monde utilise le même codage de "
"caractères, ce qui est important pour Django lorsqu'il traite les fichiers "
"``.po``."

msgid "Fuzzy entries"
msgstr "Lignes « fuzzy »"

msgid ""
":djadmin:`makemessages` sometimes generates translation entries marked as "
"fuzzy, e.g. when translations are inferred from previously translated "
"strings. By default, fuzzy entries are **not** processed by :djadmin:"
"`compilemessages`."
msgstr ""
":djadmin:`makemessages` génère parfois des éléments de traduction marqués "
"comme « fuzzy » (approximatif), par exemple lorsque des traductions sont "
"partiellement tirées d'autres chaînes précédemment traduites. Par défaut, "
"ces chaînes approximatives ne sont **pas** incluses dans le résultat de :"
"djadmin:`compilemessages`."

msgid ""
"To reexamine all source code and templates for new translation strings and "
"update all message files for **all** languages, run this:"
msgstr ""
"Pour réexaminer tout le code source et les gabarits à la recherche de "
"nouvelles chaînes à traduire et pour mettre à jour tous les fichiers de "
"messages pour **toutes** les langues, exécutez ceci :"

msgid "Compiling message files"
msgstr "Compilation des fichiers de messages"

msgid ""
"After you create your message file -- and each time you make changes to it "
"-- you'll need to compile it into a more efficient form, for use by "
"``gettext``. Do this with the :djadmin:`django-admin compilemessages "
"<compilemessages>` utility."
msgstr ""
"Après avoir créé un fichier de messages et lors de chaque modification à ce "
"fichier, il est nécessaire de le compiler dans un format plus efficace "
"utilisable par ``gettext``. Ceci se fait à l'aide de la commande :djadmin:"
"`django-admin compilemessages <compilemessages>`."

msgid ""
"This tool runs over all available ``.po`` files and creates ``.mo`` files, "
"which are binary files optimized for use by ``gettext``. In the same "
"directory from which you ran :djadmin:`django-admin makemessages "
"<makemessages>`, run :djadmin:`django-admin compilemessages "
"<compilemessages>` like this:"
msgstr ""
"Cet outil parcourt tous les fichiers ``.po`` disponibles et crée des "
"fichiers ``.mo`` qui sont des fichiers binaires optimisés pour ``gettext``. "
"Dans le même répertoire à partir duquel vous avez lancé :djadmin:`django-"
"admin makemessages <makemessages>`, exécutez :djadmin:`django-admin "
"compilemessages <compilemessages>` comme ceci :"

msgid "That's it. Your translations are ready for use."
msgstr "C'est tout. Vos traductions sont prêtes à l'emploi."

msgid ""
"If you're using Windows and need to install the GNU gettext utilities so :"
"djadmin:`django-admin compilemessages <compilemessages>` works see :ref:"
"`gettext_on_windows` for more information."
msgstr ""
"Si vous utilisez Windows et que vous avez besoin d'installer les utilitaires "
"GNU gettext pour le fonctionnement de :djadmin:`django-admin compilemessages "
"<compilemessages>`, consultez :ref:`gettext_on_windows` pour plus "
"d'informations."

msgid "``.po`` files: Encoding and BOM usage."
msgstr "Fichiers ``.po``: codage et présence du BOM"

msgid ""
"Django only supports ``.po`` files encoded in UTF-8 and without any BOM "
"(Byte Order Mark) so if your text editor adds such marks to the beginning of "
"files by default then you will need to reconfigure it."
msgstr ""
"Django ne gère que les fichiers ``.po`` codés en UTF-8 et sans BOM (Byte "
"Order Mark) ; si votre éditeur de texte ajoute par défaut de telles marques "
"au début des fichiers, il vous faudra le reconfigurer."

msgid ""
"Troubleshooting: ``gettext()`` incorrectly detects ``python-format`` in "
"strings with percent signs"
msgstr ""
"Dépannage : ``gettext()`` détecte ``python-format`` de façon erronée dans "
"des chaînes contenant des caractères pourcent"

msgid ""
"In some cases, such as strings with a percent sign followed by a space and "
"a :ref:`string conversion type <old-string-formatting>` (e.g. ``_(\"10% "
"interest\")``), :func:`~django.utils.translation.gettext` incorrectly flags "
"strings with ``python-format``."
msgstr ""
"Dans certains cas, tels que des chaînes avec un caractère pourcent suivi "
"d'un espace et d'un :ref:`marqueur de conversion de chaîne <old-string-"
"formatting>` (par ex. ``_(\"10% interest\")``), :func:`~django.utils."
"translation.gettext` marque faussement la chaîne avec ``python-format``."

msgid ""
"If you try to compile message files with incorrectly flagged strings, you'll "
"get an error message like ``number of format specifications in 'msgid' and "
"'msgstr' does not match`` or ``'msgstr' is not a valid Python format string, "
"unlike 'msgid'``."
msgstr ""
"Si vous essayez de compiler des fichiers de messages contenant des chaînes "
"faussement marquées, vous obtiendrez un message d'erreur du style ``le "
"nombre de spécifications de format dans 'msgid' et 'msgstr' ne correspondent "
"pas`` ou ``'msgstr' n'est pas une chaîne de format Python valide, au "
"contraire de 'msgid'``."

msgid ""
"To workaround this, you can escape percent signs by adding a second percent "
"sign::"
msgstr ""
"Pour contourner ce problème, vous pouvez échapper les caractères pourcent en "
"ajoutant un second signe pourcent ::"

msgid ""
"Or you can use ``no-python-format`` so that all percent signs are treated as "
"literals::"
msgstr ""
"Ou il est aussi possible d'ajouter le marqueur ``no-python-format`` afin que "
"tous les caractères pourcent soient considérés comme contenu littéral ::"

msgid "Creating message files from JavaScript source code"
msgstr "Création de fichiers de messages à partir de code JavaScript"

msgid ""
"You create and update the message files the same way as the other Django "
"message files -- with the :djadmin:`django-admin makemessages "
"<makemessages>` tool. The only difference is you need to explicitly specify "
"what in gettext parlance is known as a domain in this case the ``djangojs`` "
"domain, by providing a ``-d djangojs`` parameter, like this:"
msgstr ""
"La création et la mise à jour des fichiers de messages se fait de la même "
"manière que les autres fichiers de messages de Django, à l'aide de l'outil :"
"djadmin:`django-admin makemessages <makemessages>`. La seule différence est "
"que vous devez explicitement définir ce que le jargon ``gettext`` appelle un "
"domaine, dans ce cas le domaine ``djangojs``, en indiquant le paramètre ``-d "
"djangojs`` comme ceci :"

msgid ""
"This would create or update the message file for JavaScript for German. "
"After updating message files, run :djadmin:`django-admin compilemessages "
"<compilemessages>` the same way as you do with normal Django message files."
msgstr ""
"Ceci va créer ou mettre à jour le fichier de messages JavaScript en "
"allemand. Après la mise à jour des fichiers de messages, lancez :djadmin:"
"`django-admin compilemessages <compilemessages>` sur le même principe que "
"pour les autres fichiers de messages de Django."

msgid "``gettext`` on Windows"
msgstr "``gettext`` et Windows"

msgid ""
"This is only needed for people who either want to extract message IDs or "
"compile message files (``.po``). Translation work itself involves editing "
"existing files of this type, but if you want to create your own message "
"files, or want to test or compile a changed message file, download `a "
"precompiled binary installer <https://mlocati.github.io/articles/gettext-"
"iconv-windows.html>`_."
msgstr ""
"Ceci n'est nécessaire que pour les personnes qui doivent extraire des "
"messages à traduire ou compiler des fichiers de messages (``.po``). Le "
"travail de traduction en soi requiert de modifier des fichiers de ce type, "
"mais si vous souhaitez créer vos propres fichiers de messages ou que vous "
"vouliez tester ou compiler un fichier de messages modifié, téléchargez un "
"`installeur binaire précompilé <https://mlocati.github.io/articles/gettext-"
"iconv-windows.html>`_."

msgid ""
"You may also use ``gettext`` binaries you have obtained elsewhere, so long "
"as the ``xgettext --version`` command works properly. Do not attempt to use "
"Django translation utilities with a ``gettext`` package if the command "
"``xgettext --version`` entered at a Windows command prompt causes a popup "
"window saying \"``xgettext.exe`` has generated errors and will be closed by "
"Windows\"."
msgstr ""
"Il est aussi possible d'utiliser des binaires ``gettext`` obtenus par une "
"autre source, tant que la commande ``xgettext --version`` fonctionne "
"correctement. N'essayez pas d'utiliser les utilitaires de traduction de "
"Django avec un paquet ``gettext`` si la commande ``xgettext --version`` "
"saisie dans une invite de commande Windows produit une fenêtre contenant un "
"message du genre «``xgettext.exe`` a produit des erreurs et sera fermé par "
"Windows»."

msgid "Customizing the ``makemessages`` command"
msgstr "Personnalisation de la commande ``makemessages``"

msgid ""
"If you want to pass additional parameters to ``xgettext``, you need to "
"create a custom :djadmin:`makemessages` command and override its "
"``xgettext_options`` attribute::"
msgstr ""
"Si vous souhaitez passer des paramètres supplémentaires à ``xgettext``, vous "
"devez créer une commande :djadmin:`makemessages` personnaliséeet surcharger "
"son attribut ``xgettext_options``::"

msgid ""
"If you need more flexibility, you could also add a new argument to your "
"custom :djadmin:`makemessages` command::"
msgstr ""
"Si vous avez besoin de plus de souplesse, vous pouvez aussi ajouter un "
"nouveau paramètre à votre commande :djadmin:`makemessages` personnalisée ::"

msgid "Miscellaneous"
msgstr "Divers"

msgid "The ``set_language`` redirect view"
msgstr "La vue de redirection ``set_language``"

msgid ""
"As a convenience, Django comes with a view, :func:`django.views.i18n."
"set_language`, that sets a user's language preference and redirects to a "
"given URL or, by default, back to the previous page."
msgstr ""
"Par commodité, Django fournit une vue, :func:`django.views.i18n."
"set_language`, qui définit la préférence de langue d'un utilisateur et "
"redirige vers une URL donnée ou, par défaut, revient à la page précédente."

msgid "Activate this view by adding the following line to your URLconf::"
msgstr ""
"Activez la vue en ajoutant la ligne suivante dans votre configuration "
"d'URL ::"

msgid ""
"(Note that this example makes the view available at ``/i18n/setlang/``.)"
msgstr "(Notez que cet exemple rend la vue disponible par ``/i18n/setlang/``.)"

msgid ""
"Make sure that you don't include the above URL within :func:`~django.conf."
"urls.i18n.i18n_patterns` - it needs to be language-independent itself to "
"work correctly."
msgstr ""
"Vérifiez que l'URL ci-dessus ne soit pas ajoutée au moyen de :func:`~django."
"conf.urls.i18n.i18n_patterns`, car elle doit être elle-même indépendante de "
"la langue pour fonctionner correctement."

msgid ""
"The view expects to be called via the ``POST`` method, with a ``language`` "
"parameter set in request. If session support is enabled, the view saves the "
"language choice in the user's session. It also saves the language choice in "
"a cookie that is named ``django_language`` by default. (The name can be "
"changed through the :setting:`LANGUAGE_COOKIE_NAME` setting.)"
msgstr ""
"La vue s'attend à être appelée par la méthode ``POST``, avec un paramètre "
"``language`` défini dans la requête. Si la prise en charge des sessions est "
"active, la vue enregistre le choix de langue dans la session de "
"l'utilisateur. Elle enregistre aussi le choix de langue dans un cookie nommé "
"par défaut ``django_language`` (le nom peut être modifié par le réglage :"
"setting:`LANGUAGE_COOKIE_NAME`)."

msgid ""
"After setting the language choice, Django looks for a ``next`` parameter in "
"the ``POST`` or ``GET`` data. If that is found and Django considers it to be "
"a safe URL (i.e. it doesn't point to a different host and uses a safe "
"scheme), a redirect to that URL will be performed. Otherwise, Django may "
"fall back to redirecting the user to the URL from the ``Referer`` header or, "
"if it is not set, to ``/``, depending on the nature of the request:"
msgstr ""
"Après avoir défini le choix de langue, Django cherche un paramètre ``next`` "
"dans les données ``POST`` ou ``GET``. S'il y en a un et que Django le juge "
"comme URL sûr (c.-à-d. qu'il ne pointe pas vers un hôte différent et qu'il "
"utilise un protocole sûr), il redirige la requête vers cette URL. Sinon, "
"Django se rabat sur la redirection vers l'URL de l'en-tête ``Referer`` ou, "
"s'il n'est pas présent, vers ``/``, en fonction de la nature de la requête :"

msgid ""
"If the request accepts HTML content (based on its ``Accept`` HTTP header), "
"the fallback will always be performed."
msgstr ""
"Si la requête accepte le contenu HTML (basé sur son en-tête ``Accept``), la "
"redirection est toujours effectuée."

msgid ""
"If the request doesn't accept HTML, the fallback will be performed only if "
"the ``next`` parameter was set. Otherwise a 204 status code (No Content) "
"will be returned."
msgstr ""
"Si la requête n'accepte pas le HTML, la redirection ne s'effectue que si le "
"paramètre ``next`` a été défini. Sinon, un code de statut 204 (Pas de "
"contenu) est renvoyé."

msgid "Here's example HTML template code:"
msgstr "Voici un exemple de code de gabarit HTML :"

msgid ""
"In this example, Django looks up the URL of the page to which the user will "
"be redirected in the ``redirect_to`` context variable."
msgstr ""
"Dans cet exemple, Django cherche l'URL de la page vers laquelle "
"l'utilisateur sera redirigé dans la variable de contexte ``redirect_to``."

msgid "Explicitly setting the active language"
msgstr "Définition explicite de la langue active"

msgid ""
"You may want to set the active language for the current session explicitly. "
"Perhaps a user's language preference is retrieved from another system, for "
"example. You've already been introduced to :func:`django.utils.translation."
"activate()`. That applies to the current thread only. To persist the "
"language for the entire session in a cookie, set the :setting:"
"`LANGUAGE_COOKIE_NAME` cookie on the response::"
msgstr ""
"Il peut être souhaitable de définir la langue active de la session en cours "
"de manière explicite. On peut par exemple imaginer que la préférence de "
"langue d'une utilisatrice est récupérée à partir d'un autre système. La "
"fonction :func:`django.utils.translation.activate()` vous a déjà été "
"présentée. Celle-ci s'applique seulement au fil d'exécution en cours. Si "
"l'on veut modifier plus durablement la langue pour toute la session dans un "
"cookie, il faut définir le cookie :setting:`LANGUAGE_COOKIE_NAME` dans la "
"réponse ::"

msgid ""
"You would typically want to use both: :func:`django.utils.translation."
"activate()` changes the language for this thread, and setting the cookie "
"makes this preference persist in future requests."
msgstr ""
"Il est généralement utile d'utiliser les deux : :func:`django.utils."
"translation.activate()` modifie la langue pour le fil d'exécution en cours "
"et la définition du cookie valide cette préférence en vue des requêtes "
"suivantes."

msgid "Using translations outside views and templates"
msgstr "Traductions en dehors des vues et des gabarits"

msgid ""
"While Django provides a rich set of i18n tools for use in views and "
"templates, it does not restrict the usage to Django-specific code. The "
"Django translation mechanisms can be used to translate arbitrary texts to "
"any language that is supported by Django (as long as an appropriate "
"translation catalog exists, of course). You can load a translation catalog, "
"activate it and translate text to language of your choice, but remember to "
"switch back to original language, as activating a translation catalog is "
"done on per-thread basis and such change will affect code running in the "
"same thread."
msgstr ""
"Django contient un ensemble d'outils d'internationalisation bien fourni pour "
"être utilisé dans les vues et les gabarits, mais leur usage n'est pas limité "
"au code spécifique à Django. Les mécanismes de traduction de Django peuvent "
"être utilisés pour traduire n'importe quel texte vers toutes les langues "
"prises en charge par Django (pour autant qu'un catalogue de traductions "
"correspondant existe, bien sûr). Vous pouvez charger un catalogue de "
"traductions, l'activer et traduire du texte dans la langue de votre choix, "
"mais n'oubliez pas de restaurer la langue initiale, car l'activation d'un "
"catalogue de traductions est valable pour tout un fil d'exécution (thread) "
"et une telle modification affecte le code s'exécutant dans le même fil."

msgid ""
"Calling this function with the value ``'de'`` will give you "
"``\"Willkommen\"``, regardless of :setting:`LANGUAGE_CODE` and language set "
"by middleware."
msgstr ""
"L'appel de cette fonction avec la valeur ``'de'`` produira "
"``\"Willkommen\"``, quelle que soit la valeur de :setting:`LANGUAGE_CODE` ou "
"la langue définie par un intergiciel."

msgid ""
"Functions of particular interest are :func:`django.utils.translation."
"get_language()` which returns the language used in the current thread, :func:"
"`django.utils.translation.activate()` which activates a translation catalog "
"for the current thread, and :func:`django.utils.translation."
"check_for_language()` which checks if the given language is supported by "
"Django."
msgstr ""
"Quelques fonctions dignes d'intérêt sont :func:`django.utils.translation."
"get_language()` qui renvoie la langue utilisée dans le fil d'exécution "
"actuel, :func:`django.utils.translation.activate()` qui active un catalogue "
"de traductions pour le fil d'exécution en cours et :func:`django.utils."
"translation.check_for_language()` qui vérifie si la langue indiquée est "
"prise en charge par Django."

msgid ""
"To help write more concise code, there is also a context manager :func:"
"`django.utils.translation.override()` that stores the current language on "
"enter and restores it on exit. With it, the above example becomes::"
msgstr ""
"Pour aider à écrire du code plus concis, il existe également un gestionnaire "
"de contexte :func:`django.utils.translation.override()` qui stocke la langue "
"en cours en entrée et la restaure en sortie. Avec ceci, l'exemple ci-dessus "
"devient ::"

msgid "Language cookie"
msgstr "Cookie de langue"

msgid "A number of settings can be used to adjust language cookie options:"
msgstr ""
"Plusieurs réglages permettent d'ajuster les options du cookie de langue :"

msgid ":setting:`LANGUAGE_COOKIE_NAME`"
msgstr ":setting:`LANGUAGE_COOKIE_NAME`"

msgid ":setting:`LANGUAGE_COOKIE_AGE`"
msgstr ":setting:`LANGUAGE_COOKIE_AGE`"

msgid ":setting:`LANGUAGE_COOKIE_DOMAIN`"
msgstr ":setting:`LANGUAGE_COOKIE_DOMAIN`"

msgid ":setting:`LANGUAGE_COOKIE_HTTPONLY`"
msgstr ":setting:`LANGUAGE_COOKIE_HTTPONLY`"

msgid ":setting:`LANGUAGE_COOKIE_PATH`"
msgstr ":setting:`LANGUAGE_COOKIE_PATH`"

msgid ":setting:`LANGUAGE_COOKIE_SAMESITE`"
msgstr ":setting:`LANGUAGE_COOKIE_SAMESITE`"

msgid ":setting:`LANGUAGE_COOKIE_SECURE`"
msgstr ":setting:`LANGUAGE_COOKIE_SECURE`"

msgid "Implementation notes"
msgstr "Notes d'implémentation"

msgid "Specialties of Django translation"
msgstr "Spécialités des traductions Django"

msgid ""
"Django's translation machinery uses the standard ``gettext`` module that "
"comes with Python. If you know ``gettext``, you might note these specialties "
"in the way Django does translation:"
msgstr ""
"Le mécanisme de traduction de Django utilise le module standard ``gettext`` "
"livré avec Python. Si vous connaissez ``gettext``, vous allez peut-être "
"constater ces particularités dans la manière dont Django gère les "
"traductions :"

msgid ""
"The string domain is ``django`` or ``djangojs``. This string domain is used "
"to differentiate between different programs that store their data in a "
"common message-file library (usually ``/usr/share/locale/``). The ``django`` "
"domain is used for Python and template translation strings and is loaded "
"into the global translation catalogs. The ``djangojs`` domain is only used "
"for JavaScript translation catalogs to make sure that those are as small as "
"possible."
msgstr ""
"Le texte du domaine est ``django`` ou ``djangojs``. Ce texte sert à "
"distinguer les divers programmes qui stockent leurs données dans un endroit "
"commun aux fichiers de messages (normalement ``/usr/share/locale/``). Le "
"domaine ``django`` est utilisé  pour les chaînes de traduction du code "
"Python et des gabarits et est chargé dans les catalogues de traductions "
"globaux. Le domaine ``djangojs`` n'est utilisé que pour les catalogues de "
"traductions JavaScript afin qu'ils restent aussi petits que possible."

msgid ""
"Django doesn't use ``xgettext`` alone. It uses Python wrappers around "
"``xgettext`` and ``msgfmt``. This is mostly for convenience."
msgstr ""
"Django n'utilise pas directement ``xgettext``, mais des adaptateurs Python "
"autour de ``xgettext`` et ``msgfmt``. Ceci essentiellement pour des raisons "
"pratiques."

msgid "How Django discovers language preference"
msgstr "Processus de découverte de la préférence de langue par Django"

msgid ""
"Once you've prepared your translations -- or, if you want to use the "
"translations that come with Django -- you'll need to activate translation "
"for your app."
msgstr ""
"Après avoir préparé les traductions, ou si vous voulez utiliser les "
"traductions qui proviennent de Django, activez les traductions pour votre "
"application."

msgid ""
"Behind the scenes, Django has a very flexible model of deciding which "
"language should be used -- installation-wide, for a particular user, or both."
msgstr ""
"En arrière-plan, Django utilise un modèle très souple pour décider de la "
"langue à activer, de manière globale, pour un utilisateur particulier ou les "
"deux."

msgid ""
"To set an installation-wide language preference, set :setting:"
"`LANGUAGE_CODE`. Django uses this language as the default translation -- the "
"final attempt if no better matching translation is found through one of the "
"methods employed by the locale middleware (see below)."
msgstr ""
"Pour configurer une préférence de langue générale du projet, définissez :"
"setting:`LANGUAGE_CODE`. Django utilise cette langue comme traduction par "
"défaut, c'est-à-dire le choix final si aucune autre traduction "
"correspondante n'est découverte par l'une des méthodes employées par "
"l'intergiciel de langue (voir ci-dessous)."

msgid ""
"If all you want is to run Django with your native language all you need to "
"do is set :setting:`LANGUAGE_CODE` and make sure the corresponding :term:"
"`message files <message file>` and their compiled versions (``.mo``) exist."
msgstr ""
"Si vous souhaitez simplement faire fonctionner Django dans votre langue "
"maternelle, la seule chose est faire est de définir :setting:`LANGUAGE_CODE` "
"et de vérifier que les :term:`fichiers de messages <message file>` "
"correspondants ainsi que leur version compilée (``.mo``) existent."

msgid ""
"If you want to let each individual user specify which language they prefer, "
"then you also need to use the ``LocaleMiddleware``. ``LocaleMiddleware`` "
"enables language selection based on data from the request. It customizes "
"content for each user."
msgstr ""
"Si vous voulez que chaque utilisateur puisse indiquer sa langue préférée, il "
"est alors nécessaire d'utiliser ``LocaleMiddleware``. Cet intergiciel active "
"le choix de la langue en fonction des données de la requête. Il personnalise "
"le contenu pour chaque utilisateur."

msgid ""
"To use ``LocaleMiddleware``, add ``'django.middleware.locale."
"LocaleMiddleware'`` to your :setting:`MIDDLEWARE` setting. Because "
"middleware order matters, follow these guidelines:"
msgstr ""
"Pour utiliser ``LocaleMiddleware``, ajoutez ``'django.middleware.locale."
"LocaleMiddleware'`` à votre réglage :setting:`MIDDLEWARE`. Comme les "
"intergiciels sont sensibles à leur ordre d'apparition, suivez ces "
"directives :"

msgid "Make sure it's one of the first middleware installed."
msgstr "Assurez vous que c'est un des premiers intergiciels installés."

msgid ""
"It should come after ``SessionMiddleware``, because ``LocaleMiddleware`` "
"makes use of session data. And it should come before ``CommonMiddleware`` "
"because ``CommonMiddleware`` needs an activated language in order to resolve "
"the requested URL."
msgstr ""
"Il devrait figurer après ``SessionMiddleware``, parce que "
"``LocaleMiddleware`` emploie des données de session. Et il devrait figurer "
"avant ``CommonMiddleware``, parce que ``CommonMiddleware`` a besoin d'une "
"langue active pour la résolution de l'URL demandée."

msgid "If you use ``CacheMiddleware``, put ``LocaleMiddleware`` after it."
msgstr ""
"Si vous utilisez ``CacheMiddleware``, placez-le avant ``LocaleMiddleware``."

msgid "For example, your :setting:`MIDDLEWARE` might look like this::"
msgstr ""
"Par exemple, voici à quoi pourrait ressembler votre réglage :setting:"
"`MIDDLEWARE`::"

msgid ""
"(For more on middleware, see the :doc:`middleware documentation </topics/"
"http/middleware>`.)"
msgstr ""
"(Pour plus d'informations sur les intergiciels, consultez la :doc:"
"`documentation sur les intergiciels </topics/http/middleware>`.)"

msgid ""
"``LocaleMiddleware`` tries to determine the user's language preference by "
"following this algorithm:"
msgstr ""
"``LocaleMiddleware`` essaie de déterminer la préférence de langue de "
"l'utilisateur en suivant cet algorithme :"

msgid ""
"First, it looks for the language prefix in the requested URL.  This is only "
"performed when you are using the ``i18n_patterns`` function in your root "
"URLconf. See :ref:`url-internationalization` for more information about the "
"language prefix and how to internationalize URL patterns."
msgstr ""
"Premièrement, il cherche un préfixe de langue dans l'URL demandée. Ceci "
"n'est valable que lorsque vous utilisez la fonction ``i18n_patterns`` dans "
"votre configuration d'URL racine. Voir :ref:`url-internationalization` pour "
"plus d'informations sur les préfixes de langue et sur la manière "
"d'internationaliser les motifs d'URL."

msgid "Failing that, it looks for a cookie."
msgstr "S'il ne trouve rien, il cherche un cookie."

msgid ""
"The name of the cookie used is set by the :setting:`LANGUAGE_COOKIE_NAME` "
"setting. (The default name is ``django_language``.)"
msgstr ""
"Le nom de ce cookie est défini par le réglage :setting:"
"`LANGUAGE_COOKIE_NAME` (la valeur par défaut est ``django_language``)."

msgid ""
"Failing that, it looks at the ``Accept-Language`` HTTP header. This header "
"is sent by your browser and tells the server which language(s) you prefer, "
"in order by priority. Django tries each language in the header until it "
"finds one with available translations."
msgstr ""
"S'il ne trouve rien, il examine l'en-tête HTTP ``Accept-Language``. Cet en-"
"tête est envoyé par le navigateur et indique au serveur les langues "
"préférées de l'utilisateur, triées par ordre de préférence. Django prend en "
"compte chaque langue de cet en-tête jusqu'à ce qu'il en trouve une dont les "
"traductions sont disponibles."

msgid "Failing that, it uses the global :setting:`LANGUAGE_CODE` setting."
msgstr ""
"S'il ne trouve rien, il utilise le réglage global :setting:`LANGUAGE_CODE`."

msgid ""
"In each of these places, the language preference is expected to be in the "
"standard :term:`language format<language code>`, as a string. For example, "
"Brazilian Portuguese is ``pt-br``."
msgstr ""
"À chacun de ces endroits, la préférence de langue est supposée être dans le :"
"term:`format de langue<language code>` standard, sous forme textuelle. Par "
"exemple, le portugais brésilien est représenté par ``pt-br``."

msgid ""
"If a base language is available but the sublanguage specified is not, Django "
"uses the base language. For example, if a user specifies ``de-at`` (Austrian "
"German) but Django only has ``de`` available, Django uses ``de``."
msgstr ""
"Si une langue de base est disponible mais que la variante indiquée ne l'est "
"pas, Django utilise la langue de base. Par exemple, si un utilisateur "
"indique ``fr-be`` (français de Belgique) mais que Django ne connaît que "
"``fr``, il utilisera ``fr``."

msgid ""
"Only languages listed in the :setting:`LANGUAGES` setting can be selected. "
"If you want to restrict the language selection to a subset of provided "
"languages (because your application doesn't provide all those languages), "
"set :setting:`LANGUAGES` to a list of languages. For example::"
msgstr ""
"Seules les langues présentes dans le réglage :setting:`LANGUAGES` peuvent "
"être choisies. Si vous souhaitez restreindre le choix possible des langues à "
"un sous-ensemble des langues disponibles (parce que votre application ne "
"fournit pas toutes ces langues), définissez :setting:`LANGUAGES` à une liste "
"de langues. Par exemple ::"

msgid ""
"This example restricts languages that are available for automatic selection "
"to German and English (and any sublanguage, like ``de-ch`` or ``en-us``)."
msgstr ""
"Cet exemple limite les langues disponibles lors de la sélection automatique "
"à l'allemand et à l'anglais (et à toute variante, du genre ``de-ch`` ou ``en-"
"us``)."

msgid ""
"If you define a custom :setting:`LANGUAGES` setting, as explained in the "
"previous bullet, you can mark the language names as translation strings -- "
"but use :func:`~django.utils.translation.gettext_lazy` instead of :func:"
"`~django.utils.translation.gettext` to avoid a circular import."
msgstr ""
"Si vous définissez un réglage :setting:`LANGUAGES` personnalisé comme "
"expliqué au point ci-dessus, il est possible de marquer les noms de langues "
"comme chaînes à traduire, mais utilisez alors :func:`~django.utils."
"translation.gettext_lazy` au lieu de :func:`~django.utils.translation."
"gettext` pour éviter une importation circulaire."

msgid "Here's a sample settings file::"
msgstr "Voici un exemple de fichier de réglages ::"

msgid ""
"Once ``LocaleMiddleware`` determines the user's preference, it makes this "
"preference available as ``request.LANGUAGE_CODE`` for each :class:`~django."
"http.HttpRequest`. Feel free to read this value in your view code. Here's an "
"example::"
msgstr ""
"Lorsque ``LocaleMiddleware`` a déterminé la préférence de langue de "
"l'utilisateur, il rend disponible cette préférence dans la variable "
"``request.LANGUAGE_CODE`` de chaque :class:`~django.http.HttpRequest`. Cette "
"valeur est à votre disposition dans le code de vos vues. Voici un exemple ::"

msgid ""
"Note that, with static (middleware-less) translation, the language is in "
"``settings.LANGUAGE_CODE``, while with dynamic (middleware) translation, "
"it's in ``request.LANGUAGE_CODE``."
msgstr ""
"Remarquez qu'avec la traduction statique (sans intergiciel), la langue se "
"trouve dans ``settings.LANGUAGE_CODE`` alors qu'avec la traduction dynamique "
"(avec intergiciel), elle se trouve dans ``request.LANGUAGE_CODE``."

msgid "How Django discovers translations"
msgstr "Processus de découverte des traductions par Django"

msgid ""
"At runtime, Django builds an in-memory unified catalog of literals-"
"translations. To achieve this it looks for translations by following this "
"algorithm regarding the order in which it examines the different file paths "
"to load the compiled :term:`message files <message file>` (``.mo``) and the "
"precedence of multiple translations for the same literal:"
msgstr ""
"Au moment de l'exécution, Django construit un catalogue consolidé en mémoire "
"des chaînes de traduction. Pour faire cela, il cherche des traductions selon "
"l'algorithme suivant concernant l'ordre dans lequel il examine les "
"différents chemins de fichiers en vue du chargement des :term:`fichiers de "
"messages <message file>` compilés (``.mo``) et de la priorité d'éventuelles "
"traductions différentes de la même chaîne :"

msgid ""
"The directories listed in :setting:`LOCALE_PATHS` have the highest "
"precedence, with the ones appearing first having higher precedence than the "
"ones appearing later."
msgstr ""
"Les répertoires énumérés dans :setting:`LOCALE_PATHS` ont la plus haute "
"priorité, ceux apparaissant en premier ayant priorité sur les suivants."

msgid ""
"Then, it looks for and uses if it exists a ``locale`` directory in each of "
"the installed apps listed in :setting:`INSTALLED_APPS`.  The ones appearing "
"first have higher precedence than the ones appearing later."
msgstr ""
"Puis, il recherche et utilise le cas échéant un répertoire ``locale`` dans "
"chacune des applications installées figurant dans :setting:`INSTALLED_APPS`. "
"Celles apparaissant en premier ayant priorité sur les suivantes."

msgid ""
"Finally, the Django-provided base translation in :source:`django/conf/"
"locale` is used as a fallback."
msgstr ""
"Et finalement, la traduction de base fournie par Django dans :source:`django/"
"conf/locale` est utilisée en dernier recours."

msgid ""
"The translations for literals included in JavaScript assets are looked up "
"following a similar but not identical algorithm. See :class:`."
"JavaScriptCatalog` for more details."
msgstr ""
"Les traductions de chaînes contenues dans des fichiers JavaScript sont "
"parcourues par un algorithme semblable mais pas identique. Voir  :class:`."
"JavaScriptCatalog` pour plus de détails."

msgid ""
"You can also put :ref:`custom format files <custom-format-files>` in the :"
"setting:`LOCALE_PATHS` directories if you also set :setting:"
"`FORMAT_MODULE_PATH`."
msgstr ""
"Vous pouvez également placer des :ref:`fichiers de formats personnalisés "
"<custom-format-files>` dans les répertoires :setting:`LOCALE_PATHS` si vous "
"définissez aussi :setting:`FORMAT_MODULE_PATH`."

msgid ""
"In all cases the name of the directory containing the translation is "
"expected to be named using :term:`locale name` notation. E.g. ``de``, "
"``pt_BR``, ``es_AR``, etc. Untranslated strings for territorial language "
"variants use the translations of the generic language. For example, "
"untranslated ``pt_BR`` strings use ``pt`` translations."
msgstr ""
"Dans tous les cas, le nom du répertoire contenant une traduction doit "
"respecter le format de nommage avec la notation de :term:`nom de locale`. "
"Par ex. : ``de``, ``pt_BR``, ``es_AR``, etc. Les chaînes non traduites des "
"variantes territoriales de langues utilisent les traductions de la langue "
"générique. Par exemple, les chaînes ``pt_BR`` non traduites utilisent les "
"traductions ``pt``."

msgid ""
"This way, you can write applications that include their own translations, "
"and you can override base translations in your project. Or, you can build a "
"big project out of several apps and put all translations into one big common "
"message file specific to the project you are composing. The choice is yours."
msgstr ""
"De cette façon, vous pouvez écrire des applications incluant leurs propres "
"traductions et il est possible de surcharger les traductions de base par "
"celles de votre projet. Ou, vous pouvez construire un gros projet composé de "
"plusieurs applications et placer toutes les traductions dans un seul gros "
"fichier de messages commun spécifique au projet que vous mettez en place. "
"C'est à vous de choisir."

msgid "All message file repositories are structured the same way. They are:"
msgstr ""
"Tous les dépôts de fichiers de messages sont structurés de la même façon. "
"C'est-à-dire :"

msgid ""
"All paths listed in :setting:`LOCALE_PATHS` in your settings file are "
"searched for ``<language>/LC_MESSAGES/django.(po|mo)``"
msgstr ""
"Django parcourt tous les chemins mentionnés dans :setting:`LOCALE_PATHS` de "
"votre fichier de réglages à la recherche de ``<code_de_langue>/LC_MESSAGES/"
"django.(po|mo)``"

msgid "``$APPPATH/locale/<language>/LC_MESSAGES/django.(po|mo)``"
msgstr "``$CHEMIN_APP/locale/<code_de_langue>/LC_MESSAGES/django.(po|mo)``"

msgid ""
"``$PYTHONPATH/django/conf/locale/<language>/LC_MESSAGES/django.(po|mo)``"
msgstr ""
"``$PYTHONPATH/django/conf/locale/<code_de_langue>/LC_MESSAGES/django.(po|"
"mo)``"

msgid ""
"To create message files, you use the :djadmin:`django-admin makemessages "
"<makemessages>` tool. And you use :djadmin:`django-admin compilemessages "
"<compilemessages>` to produce the binary ``.mo`` files that are used by "
"``gettext``."
msgstr ""
"Pour créer des fichiers de messages, il faut utiliser l'outil :djadmin:"
"`django-admin makemessages <makemessages>`. Et pour produire les fichiers "
"binaires ``.mo`` utilisés par ``gettext``, il faut utiliser :djadmin:`django-"
"admin compilemessages <compilemessages>`."

msgid ""
"You can also run :djadmin:`django-admin compilemessages --settings=path.to."
"settings <compilemessages>` to make the compiler process all the directories "
"in your :setting:`LOCALE_PATHS` setting."
msgstr ""
"Vous pouvez aussi exécuter :djadmin:`django-admin compilemessages --"
"settings=chemin.vers.settings <compilemessages>` pour que le compilateur "
"s'occupe de tous les répertoires énumérés dans le réglage :setting:"
"`LOCALE_PATHS`."

msgid "Using a non-English base language"
msgstr "Utilisation d'une langue de base autre que l'anglais"

msgid ""
"Django makes the general assumption that the original strings in a "
"translatable project are written in English. You can choose another "
"language, but you must be aware of certain limitations:"
msgstr ""
"Django part du principe général que les chaînes originales d'un projet "
"traduisible sont écrites en anglais. Il est possible de choisir une autre "
"langue, mais il faut garder à l'esprit un certain nombre de limites :"

msgid ""
"``gettext`` only provides two plural forms for the original messages, so you "
"will also need to provide a translation for the base language to include all "
"plural forms if the plural rules for the base language are different from "
"English."
msgstr ""
"``gettext`` ne fournit que deux formes plurielles pour les messages "
"originaux, ce qui signifie que vous devrez aussi fournir une traduction pour "
"la langue de base afin d'inclure toutes les formes plurielles si les règles "
"de pluriel de la langue de base diffèrent de l'anglais."

msgid ""
"When an English variant is activated and English strings are missing, the "
"fallback language will not be the :setting:`LANGUAGE_CODE` of the project, "
"but the original strings. For example, an English user visiting a site with :"
"setting:`LANGUAGE_CODE` set to Spanish and original strings written in "
"Russian will see Russian text rather than Spanish."
msgstr ""
"Lorsqu'une variante d'anglais est activée et que les chaînes anglaises sont "
"manquantes, la langue de repli ne sera pas la langue :setting:"
"`LANGUAGE_CODE` du projet, mais dans la langue des chaînes originales. Par "
"exemple, un utilisateur anglais visitant un site dont :setting:"
"`LANGUAGE_CODE` est l'espagnol et dont les chaînes originales sont écrites "
"en russe obtiendra du russe et non de l'espagnol."

msgid "Using Django"
msgstr "Utilisation de Django"

msgid "Introductions to all the key parts of Django you'll need to know:"
msgstr ""
"Introductions à toutes les parties essentielles de Django qu'il faut "
"connaître :"

msgid "How to install Django"
msgstr "Comment installer Django"

msgid "This document will get you up and running with Django."
msgstr "Ce document a pour but de vous préparer à faire fonctionner Django."

msgid "Install Python"
msgstr "Installation de Python"

msgid ""
"Django is a Python web framework. See :ref:`faq-python-version-support` for "
"details."
msgstr ""
"Django est un cadriciel web Python. Voir :ref:`faq-python-version-support` "
"pour plus de détails."

msgid ""
"Get the latest version of Python at https://www.python.org/downloads/ or "
"with your operating system's package manager."
msgstr ""
"Obtenez la dernière version de Python à l'adresse https://www.python.org/"
"downloads/ ou par l'intermédiaire du gestionnaire des paquets de votre "
"système."

msgid "Python on Windows"
msgstr "Python sur Windows"

msgid ""
"If you are just starting with Django and using Windows, you may find :doc:`/"
"howto/windows` useful."
msgstr ""
"Si vous êtes débutant avec Django et que vous utilisez Windows, cette "
"documentation peut être utile : :doc:`/howto/windows`."

msgid "Install Apache and ``mod_wsgi``"
msgstr "Installation de Apache et ``mod_wsgi``"

msgid ""
"If you just want to experiment with Django, skip ahead to the next section; "
"Django includes a lightweight web server you can use for testing, so you "
"won't need to set up Apache until you're ready to deploy Django in "
"production."
msgstr ""
"Si vous voulez juste faire quelques expériences avec Django, passez "
"directement à la section suivante ; Django inclut un serveur Web léger "
"utilisable pour les tests, il n'est donc pas utile de configurer Apache tant "
"que vous ne souhaitez pas déployer Django en production."

msgid ""
"If you want to use Django on a production site, use `Apache`_ with "
"`mod_wsgi`_. mod_wsgi operates in one of two modes: embedded mode or daemon "
"mode. In embedded mode, mod_wsgi is similar to mod_perl -- it embeds Python "
"within Apache and loads Python code into memory when the server starts. Code "
"stays in memory throughout the life of an Apache process, which leads to "
"significant performance gains over other server arrangements. In daemon "
"mode, mod_wsgi spawns an independent daemon process that handles requests. "
"The daemon process can run as a different user than the web server, possibly "
"leading to improved security. The daemon process can be restarted without "
"restarting the entire Apache web server, possibly making refreshing your "
"codebase more seamless. Consult the mod_wsgi documentation to determine "
"which mode is right for your setup. Make sure you have Apache installed with "
"the mod_wsgi module activated. Django will work with any version of Apache "
"that supports mod_wsgi."
msgstr ""
"Si vous souhaitez utiliser Django sur un site en production, utilisez "
"`Apache`_ avec `mod_wsgi`_. mod_wsgi fonctionne dans deux modes : un mode "
"intégré et un mode démon. Dans le mode intégré, mod_wsgi est comparable à "
"mod_perl, il intègre Python dans Apache et charge le code Python en mémoire "
"au démarrage du serveur. Le code reste en mémoire tout au long du cycle de "
"vie du processus Apache, ce qui apporte des améliorations de performance "
"significatives en comparaison d'autres configurations. En mode démon, "
"mod_wsgi délègue la gestion des requêtes à un processus démon indépendant. "
"Ce processus peut fonctionner sous un nom d'utilisateur différent de celui "
"du serveur web, ce qui peut améliorer la sécurité. D'autre part, le "
"processus peut être redémarré sans devoir redémarrer tout le serveur web "
"Apache, ce qui peut simplifier la mise à jour de code. Consultez la "
"documentation de mod_wsgi pour déterminer le mode qui vous conviendra le "
"mieux. Assurez-vous que Apache est installé et que son module mod_wsgi est "
"activé. Django fonctionne avec toute version d'Apache qui prend en charge "
"mod_wsgi."

msgid ""
"See :doc:`How to use Django with mod_wsgi </howto/deployment/wsgi/modwsgi>` "
"for information on how to configure mod_wsgi once you have it installed."
msgstr ""
"Consultez :doc:`Comment utiliser Django avec mod_wsgi </howto/deployment/"
"wsgi/modwsgi>` pour plus d'informations sur la façon de configurer mod_wsgi "
"après l'avoir installé."

msgid ""
"If you can't use mod_wsgi for some reason, fear not: Django supports many "
"other deployment options. One is :doc:`uWSGI </howto/deployment/wsgi/"
"uwsgi>`; it works very well with `nginx`_. Additionally, Django follows the "
"WSGI spec (:pep:`3333`), which allows it to run on a variety of server "
"platforms."
msgstr ""
"Si vous n'avez pas la possibilité d'utiliser mod_wsgi, ne désespérez pas : "
"Django prend en charge beaucoup d'autres scénarios de déploiement. L'un "
"d'entre eux est :doc:`uWSGI </howto/deployment/wsgi/uwsgi>` ; il fonctionne "
"très bien avec `nginx`_. De plus, Django respecte la spécification WSGI (:"
"pep:`3333`) ce qui permet de le faire fonctionner sur diverses plates-formes "
"serveurs."

msgid "Get your database running"
msgstr "Mise en route de la base de données"

msgid ""
"If you plan to use Django's database API functionality, you'll need to make "
"sure a database server is running. Django supports many different database "
"servers and is officially supported with PostgreSQL_, MariaDB_, MySQL_, "
"Oracle_ and SQLite_."
msgstr ""
"Si vous prévoyez d'utiliser la fonctionnalité base de données de Django, "
"vous devez faire le nécessaire pour qu'une base de données soit "
"fonctionnelle. Django sait gérer plusieurs serveurs de bases de données "
"différents ; officiellement, il prend en charge PostgreSQL_, MariaDB_, "
"MySQL_, Oracle_ et SQLite_."

msgid ""
"If you are developing a small project or something you don't plan to deploy "
"in a production environment, SQLite is generally the best option as it "
"doesn't require running a separate server. However, SQLite has many "
"differences from other databases, so if you are working on something "
"substantial, it's recommended to develop with the same database that you "
"plan on using in production."
msgstr ""
"Si vous développez un petit projet ou quelque chose que vous ne prévoyez pas "
"de déployer dans un environnement de production, SQLite est généralement la "
"meilleure option car elle n'exige pas de serveur séparé. Cependant, SQLite "
"comporte beaucoup de différences en comparaison d'autres bases de données et "
"si vous travaillez sur un projet un peu conséquent, il est recommandé de "
"développer avec la même base de données qui sera utilisée en production."

msgid ""
"In addition to the officially supported databases, there are :ref:`backends "
"provided by 3rd parties <third-party-notes>` that allow you to use other "
"databases with Django."
msgstr ""
"En plus des bases de données prises en charge officiellement, il existe des :"
"ref:`moteurs externes à Django <third-party-notes>` qui permettent "
"d'utiliser d'autres bases de données avec Django."

msgid ""
"To use another database other than SQLite, you'll need to make sure that the "
"appropriate Python database bindings are installed:"
msgstr ""
"Pour utiliser une base de données autre que SQLite, il est nécessaire de "
"vérifier que les liaisons Python spécifiques à cette base de données sont "
"installées :"

msgid ""
"If you're using PostgreSQL, you'll need the `psycopg`_ or `psycopg2`_ "
"package. Refer to the :ref:`PostgreSQL notes <postgresql-notes>` for further "
"details."
msgstr ""
"Si vous utilisez PostgreSQL, vous avez besoin du paquet `psycopg`_ ou "
"`psycopg2`_. Vous pouvez consultez les :ref:`notes sur PostgreSQL "
"<postgresql-notes>` pour plus de détails."

msgid ""
"If you're using MySQL or MariaDB, you'll need a :ref:`DB API driver <mysql-"
"db-api-drivers>` like ``mysqlclient``. See :ref:`notes for the MySQL backend "
"<mysql-notes>` for details."
msgstr ""
"Si vous utilisez MySQL ou MariaDB, vous aurez besoin d'un :ref:`pilote API "
"de base de données <mysql-db-api-drivers>` comme ``mysqlclient``. Voir :ref:"
"`notes du moteur MySQL <mysql-notes>` pour plus de détails."

msgid ""
"If you're using SQLite you might want to read the :ref:`SQLite backend notes "
"<sqlite-notes>`."
msgstr ""
"Si vous utilisez SQLite, il est recommandé de lire les :ref:`notes du moteur "
"SQLite <sqlite-notes>`."

msgid ""
"If you're using Oracle, you'll need to install oracledb_, but please read "
"the :ref:`notes for the Oracle backend <oracle-notes>` for details regarding "
"supported versions of both Oracle and ``oracledb``."
msgstr ""
"Si vous utilisez Oracle, vous aurez besoin d'installer oracledb_, mais "
"veuillez lire les :ref:`notes spécifiques pour le moteur de base de données "
"Oracle <oracle-notes>` pour les détails concernant les versions prises en "
"charge d'Oracle et de ``oracledb``."

msgid ""
"If you're using an unofficial 3rd party backend, please consult the "
"documentation provided for any additional requirements."
msgstr ""
"Si vous utilisez un moteur externe non officiel, consultez la documentation "
"qui l'accompagne pour d'éventuels contraintes supplémentaires."

msgid ""
"And ensure that the following keys in the ``'default'`` item of the :setting:"
"`DATABASES` dictionary match your database connection settings:"
msgstr ""
"Et vérifiez que les clés suivantes dans l'élément ``'default'`` du "
"dictionnaire :setting:`DATABASES` correspondent aux réglages de connexion de "
"la base de données choisie :"

msgid ""
":setting:`ENGINE <DATABASE-ENGINE>` -- Either ``'django.db.backends."
"sqlite3'``, ``'django.db.backends.postgresql'``, ``'django.db.backends."
"mysql'``, or ``'django.db.backends.oracle'``. Other backends are :ref:`also "
"available <third-party-notes>`."
msgstr ""
":setting:`ENGINE <DATABASE-ENGINE>` -- Choisissez parmi ``'django.db."
"backends.sqlite3'``, ``'django.db.backends.postgresql'``, ``'django.db."
"backends.mysql'`` ou ``'django.db.backends.oracle'``. D'autres moteurs sont :"
"ref:`également disponibles <third-party-notes>`."

msgid ""
":setting:`NAME` -- The name of your database. If you’re using SQLite, the "
"database will be a file on your computer. In that case, ``NAME`` should be "
"the full absolute path, including the filename of that file. You don’t need "
"to create anything beforehand; the database file will be created "
"automatically when needed. The default value, ``BASE_DIR / 'db.sqlite3'``, "
"will store the file in your project directory."
msgstr ""
":setting:`NAME` -- Le nom de votre base de données. Si vous utilisez SQLite, "
"la base de données sera un fichier sur votre ordinateur. Dans ce cas, "
"``NAME`` doit être le chemin absolu complet de ce fichier, y compris son "
"nom. Il n'est pas nécessaire de créer ce fichier a priori ; il sera créé "
"automatiquement lors de son premier accès. La valeur par défaut, "
"``BASE_DIR / 'db.sqlite3'``, stocke ce fichier dans le répertoire de votre "
"projet."

msgid "For databases other than SQLite"
msgstr "Pour les bases de données autres que SQLite"

msgid ""
"If you are not using SQLite as your database, additional settings such as :"
"setting:`USER`, :setting:`PASSWORD`, and :setting:`HOST` must be added. For "
"more details, see the reference documentation for :setting:`DATABASES`."
msgstr ""
"Si vous utilisez une autre base de données que SQLite, des réglages "
"supplémentaires doivent être indiqués, comme :setting:`USER`, :setting:"
"`PASSWORD` ou :setting:`HOST`. Pour plus de détails, consultez la "
"documentation de référence de :setting:`DATABASES`."

msgid ""
"Also, make sure that you've created the database by this point. Do that with "
"\"``CREATE DATABASE database_name;``\" within your database's interactive "
"prompt."
msgstr ""
"Assurez-vous maintenant d'avoir créé la base de données. Faites-le avec "
"``CREATE DATABASE nom_de_la_base;`` dans le shell interactif de votre base "
"de données."

msgid ""
"If you plan to use Django's ``manage.py migrate`` command to automatically "
"create database tables for your models (after first installing Django and "
"creating a project), you'll need to ensure that Django has permission to "
"create and alter tables in the database you're using; if you plan to "
"manually create the tables, you can grant Django ``SELECT``, ``INSERT``, "
"``UPDATE`` and ``DELETE`` permissions. After creating a database user with "
"these permissions, you'll specify the details in your project's settings "
"file, see :setting:`DATABASES` for details."
msgstr ""
"Si vous pensez utiliser la commande de Django ``manage.py migrate`` pour "
"créer automatiquement les tables de base de données pour vos modèles (après "
"la fin de l'installation de Django et la création d'un projet), vous devez "
"vous assurer que Django possède les permissions de créer et modifier les "
"tables dans la base de données que vous utilisez ; si vous pensez créer "
"manuellement les tables, vous pouvez attribuer à Django les permissions "
"``SELECT``, ``INSERT``, ``UPDATE`` et ``DELETE``. Après avoir créé un "
"utilisateur de base de données possédant ces permissions, il s'agira "
"d'indiquer les détails de connexion dans le fichier de réglages de votre "
"projet, voir :setting:`DATABASES` pour les détails."

msgid ""
"If you're using Django's :doc:`testing framework</topics/testing/index>` to "
"test database queries, Django will need permission to create a test database."
msgstr ""
"Si vous utilisez l’:doc:`infrastructure de test</topics/testing/index>` de "
"Django pour tester les requêtes de bases de données, Django aura besoin des "
"permissions nécessaires pour créer une base de données de test."

msgid "Install the Django code"
msgstr "Installation du code de Django"

msgid ""
"Installation instructions are slightly different depending on whether you're "
"installing a distribution-specific package, downloading the latest official "
"release, or fetching the latest development version."
msgstr ""
"Les instructions d'installation divergent légèrement selon que vous "
"installez un paquet de votre distribution, que vous téléchargez la dernière "
"version officielle ou que vous récupériez la dernière version en "
"développement."

msgid "Installing an official release with ``pip``"
msgstr "Installation d'une version officielle avec "

msgid "This is the recommended way to install Django."
msgstr "C'est la façon recommandée d'installer Django."

msgid ""
"Install pip_. The easiest is to use the `standalone pip installer`_. If your "
"distribution already has ``pip`` installed, you might need to update it if "
"it's outdated. If it's outdated, you'll know because installation won't work."
msgstr ""
"Installez pip_. La manière la plus simple est d'utiliser l'`installeur pip "
"autonome`_. Si votre distribution contient déjà une version installée de "
"``pip``, il pourrait être nécessaire de la mettre à jour si elle est trop "
"ancienne. Dans ce cas, vous le verrez bien car l'installation ne "
"fonctionnera pas."

msgid ""
"Take a look at :doc:`venv <python:tutorial/venv>`. This tool provides "
"isolated Python environments, which are more practical than installing "
"packages systemwide. It also allows installing packages without "
"administrator privileges. The :doc:`contributing tutorial </intro/"
"contributing>` walks through how to create a virtual environment."
msgstr ""
"Jetez un œil à :doc:`venv <python:tutorial/venv>`. Cet outil fournit des "
"environnements Python isolés qui sont bien plus pratiques que d'installer "
"des paquets au niveau de tout le système. Il permet aussi d'installer des "
"paquets sans avoir besoin de privilèges administrateurs. Le :doc:`tutoriel "
"de contribution </intro/contributing>` vous guide pour la création d'un "
"environnement virtuel."

msgid ""
"After you've created and activated a virtual environment, enter the command:"
msgstr ""
"Après avoir créé et activé un environnement virtuel, entrez la commande :"

msgid "Installing a distribution-specific package"
msgstr "Installation d'un paquet de la distribution"

msgid ""
"Check the :doc:`distribution specific notes </misc/distributions>` to see if "
"your platform/distribution provides official Django packages/installers. "
"Distribution-provided packages will typically allow for automatic "
"installation of dependencies and supported upgrade paths; however, these "
"packages will rarely contain the latest release of Django."
msgstr ""
"Parcourez les :doc:`notes spécifiques aux distributions </misc/"
"distributions>` pour vérifier que votre plate-forme/distribution propose des "
"paquets ou installeurs officiels de Django. Les paquets fournis par les "
"distributions permettent généralement de profiter de l'installation "
"automatique des dépendances et de mises à niveau prises en charge ; "
"toutefois, ces paquets correspondent rarement aux dernières versions de "
"Django."

msgid "Installing the development version"
msgstr "Installation de la version de développement"

msgid "Tracking Django development"
msgstr "Suivi du développement de Django"

msgid ""
"If you decide to use the latest development version of Django, you'll want "
"to pay close attention to `the development timeline`_, and you'll want to "
"keep an eye on the :ref:`release notes for the upcoming release "
"<development_release_notes>`. This will help you stay on top of any new "
"features you might want to use, as well as any changes you'll need to make "
"to your code when updating your copy of Django. (For stable releases, any "
"necessary changes are documented in the release notes.)"
msgstr ""
"Si vous décidez d'utiliser la dernière version de développement de Django, "
"il est recommandé de surveiller attentivement l'`activité de développement`_ "
"de même que les :ref:`notes de publication de la version à venir "
"<development_release_notes>`. Cela vous aidera à vous tenir au courant de "
"toute nouvelle fonctionnalité que vous pourriez exploiter ou des "
"modifications que vous devrez effectuer dans votre code lors de la mise à "
"jour de votre copie de Django (pour les versions stables, toute modification "
"nécessaire est documentée dans les notes de publication)."

msgid ""
"If you'd like to be able to update your Django code occasionally with the "
"latest bug fixes and improvements, follow these instructions:"
msgstr ""
"Si vous aimeriez pouvoir mettre à jour occasionnellement votre version de "
"Django avec les dernières corrections et améliorations, suivez ces "
"instructions :"

msgid ""
"Make sure that you have Git_ installed and that you can run its commands "
"from a shell. (Enter ``git help`` at a shell prompt to test this.)"
msgstr ""
"Vérifiez que Git_ est installé et que vous pouvez lancer ses commandes "
"depuis un terminal (saisissez ``git help`` à l'invite de commande pour le "
"tester). "

msgid "Check out Django's main development branch like so:"
msgstr ""
"Créez une copie de travail de la branche principale de développement de "
"Django comme ceci :"

msgid "This will create a directory ``django`` in your current directory."
msgstr "Un répertoire ``django`` sera créé dans le répertoire actuel."

msgid ""
"Make sure that the Python interpreter can load Django's code. The most "
"convenient way to do this is to use a virtual environment and pip_. The :doc:"
"`contributing tutorial </intro/contributing>` walks through how to create a "
"virtual environment."
msgstr ""
"Vérifiez que l'interpréteur Python peut charger le code de Django. La façon "
"la plus pratique de faire cela est d'utiliser un environnement virtuel et "
"pip_. Le :doc:`tutoriel de contribution </intro/contributing>` vous guide "
"pour la création d'un environnement virtuel."

msgid ""
"After setting up and activating the virtual environment, run the following "
"command:"
msgstr ""
"Après avoir configuré et activé l'environnement virtuel, exécutez la "
"commande suivante :"

msgid ""
"This will make Django's code importable, and will also make the ``django-"
"admin`` utility command available. In other words, you're all set!"
msgstr ""
"Ceci rendra le code Django importable et mettra aussi à disposition la "
"commande utilitaire ``django-admin``. En d'autres mots, vous serez fin prêt !"

msgid ""
"When you want to update your copy of the Django source code, run the command "
"``git pull`` from within the ``django`` directory. When you do this, Git "
"will download any changes."
msgstr ""
"Lorsque vous souhaitez mettre à jour votre copie du code source de Django, "
"lancez la commande ``git pull`` à partir du répertoire ``django``. Quand "
"vous faites cela, Git télécharge toutes les modifications."

msgid "Logging"
msgstr "Journalisation"

msgid ":ref:`logging-how-to`"
msgstr ":ref:`logging-how-to`"

msgid ":ref:`Django logging reference <logging-ref>`"
msgstr ":ref:`Référence de la journalisation dans Django <logging-ref>`"

msgid ""
"Python programmers will often use ``print()`` in their code as a quick and "
"convenient debugging tool. Using the logging framework is only a little more "
"effort than that, but it's much more elegant and flexible. As well as being "
"useful for debugging, logging can also provide you with more - and better "
"structured - information about the state and health of your application."
msgstr ""
"Les programmeurs Python utilisent fréquemment ``print()`` dans leur code "
"comme méthode rapide et pratique de débogage. L'utilisation de "
"l'infrastructure de journalisation demande à peine plus d'effort que ça, "
"mais c'est beaucoup plus élégant et souple. En plus d'être pratique pour le "
"débogage, la journalisation peut aussi offrir plus d'information mieux "
"structurée au sujet de l'état et de la santé de votre application."

msgid ""
"Django uses and extends Python's builtin :mod:`logging` module to perform "
"system logging. This module is discussed in detail in Python's own "
"documentation; this section provides a quick overview."
msgstr ""
"Django utilise et étend le module :mod:`logging` intégré de Python pour "
"effectuer la journalisation au niveau système. Ce module est abordé en "
"détails dans la propre documentation de Python ; cette section fournit un "
"aperçu rapide."

msgid "The cast of players"
msgstr "Les acteurs en jeu"

msgid "A Python logging configuration consists of four parts:"
msgstr ""
"Une configuration de journalisation Python consiste en quatre parties :"

msgid ":ref:`topic-logging-parts-loggers`"
msgstr ":ref:`topic-logging-parts-loggers`"

msgid ":ref:`topic-logging-parts-handlers`"
msgstr ":ref:`topic-logging-parts-handlers`"

msgid ":ref:`topic-logging-parts-filters`"
msgstr ":ref:`topic-logging-parts-filters`"

msgid ":ref:`topic-logging-parts-formatters`"
msgstr ":ref:`topic-logging-parts-formatters`"

msgid "Loggers"
msgstr "Journaliseurs"

msgid ""
"A *logger* is the entry point into the logging system. Each logger is a "
"named bucket to which messages can be written for processing."
msgstr ""
"Un journaliseur (« logger ») est le point d'entrée dans le système de "
"journalisation. Chaque journaliseur est un réceptacle nommé dans lequel les "
"messages sont écrits en vue de leur traitement."

msgid ""
"A logger is configured to have a *log level*. This log level describes the "
"severity of the messages that the logger will handle. Python defines the "
"following log levels:"
msgstr ""
"Un journaliseur est configuré avec un *niveau de journalisation* (« log "
"level »). Ce niveau définit la sévérité des messages que le journaliseur va "
"traiter. Python définit les niveaux de journalisation suivants :"

msgid "``DEBUG``: Low level system information for debugging purposes"
msgstr "``DEBUG``: information système de bas niveau à des fins de débogage"

msgid "``INFO``: General system information"
msgstr "``INFO``: information système générale"

msgid "``WARNING``: Information describing a minor problem that has occurred."
msgstr "``WARNING``: information décrivant la présence d'un problème mineur."

msgid "``ERROR``: Information describing a major problem that has occurred."
msgstr "``ERROR``: information décrivant la présence d'un problème majeur."

msgid ""
"``CRITICAL``: Information describing a critical problem that has occurred."
msgstr ""
"``CRITICAL``: information décrivant la présence d'un problème critique."

msgid ""
"Each message that is written to the logger is a *Log Record*. Each log "
"record also has a *log level* indicating the severity of that specific "
"message. A log record can also contain useful metadata that describes the "
"event that is being logged. This can include details such as a stack trace "
"or an error code."
msgstr ""
"Chaque message écrit dans le journaliseur est un *enregistrement de journal* "
"(« log record »). Chacun de ces enregistrements possède également un *niveau "
"de journalisation* indiquant la sévérité de ce message spécifique. Un "
"enregistrement de journal peut aussi contenir des métadonnées utiles "
"décrivant l'événement à journaliser. Cela peut inclure des détails tels "
"qu'une trace de débogage ou un code d'erreur."

msgid ""
"When a message is given to the logger, the log level of the message is "
"compared to the log level of the logger. If the log level of the message "
"meets or exceeds the log level of the logger itself, the message will "
"undergo further processing. If it doesn't, the message will be ignored."
msgstr ""
"Lorsqu'un message est transmis au journaliseur, le niveau de journalisation "
"du message est comparé à celui du journaliseur. Si le niveau de "
"journalisation du message correspond ou dépasse celui du journaliseur, le "
"message continue d'être traité. Dans le cas contraire, le message est ignoré."

msgid ""
"Once a logger has determined that a message needs to be processed, it is "
"passed to a *Handler*."
msgstr ""
"Dès qu'un journaliseur a déterminé qu'un message doit être traité, il est "
"transmis à un *gestionnaire* (« handler »)."

msgid "Handlers"
msgstr "Gestionnaires"

msgid ""
"The *handler* is the engine that determines what happens to each message in "
"a logger. It describes a particular logging behavior, such as writing a "
"message to the screen, to a file, or to a network socket."
msgstr ""
"Le gestionnaire (*handler*) est le moteur déterminant ce qui doit arriver à "
"chaque message d'un journaliseur. Il décrit un comportement particulier de "
"journalisation, tel que l'écriture d'un message à l'écran, dans un fichier "
"ou dans un connecteur réseau."

msgid ""
"Like loggers, handlers also have a log level. If the log level of a log "
"record doesn't meet or exceed the level of the handler, the handler will "
"ignore the message."
msgstr ""
"Comme les journaliseurs, les gestionnaires possèdent aussi un niveau de "
"journalisation. Si le niveau de journalisation d'un enregistrement de "
"journal n'est pas au moins équivalent à celui du gestionnaire, ce dernier "
"ignore le message."

msgid ""
"A logger can have multiple handlers, and each handler can have a different "
"log level. In this way, it is possible to provide different forms of "
"notification depending on the importance of a message. For example, you "
"could install one handler that forwards ``ERROR`` and ``CRITICAL`` messages "
"to a paging service, while a second handler logs all messages (including "
"``ERROR`` and ``CRITICAL`` messages) to a file for later analysis."
msgstr ""
"Un journaliseur peut avoir plusieurs gestionnaires et le niveau de "
"journalisation de chaque gestionnaire peut être différent. De cette façon, "
"il est possible de fournir différentes formes de notifications selon "
"l'importance d'un message. Par exemple, vous pouvez installer un "
"gestionnaire qui redirige les messages de niveau ``ERROR`` et ``CRITICAL`` "
"vers un service de radiomessagerie, alors qu'un autre gestionnaire enverra "
"tous les messages (y compris ceux de niveau ``ERROR`` et ``CRITICAL``) dans "
"un fichier pour analyse ultérieure."

msgid "Filters"
msgstr "Filtres"

msgid ""
"A *filter* is used to provide additional control over which log records are "
"passed from logger to handler."
msgstr ""
"Un filtre (*filter*) permet d'ajouter un contrôle supplémentaire sur la "
"sélection des enregistrements de journal lorsqu'ils sont transmis du "
"journaliseur au gestionnaire."

msgid ""
"By default, any log message that meets log level requirements will be "
"handled. However, by installing a filter, you can place additional criteria "
"on the logging process. For example, you could install a filter that only "
"allows ``ERROR`` messages from a particular source to be emitted."
msgstr ""
"Par défaut, tout message de journal dont le niveau de journalisation est "
"suffisant sera traité. Cependant, en installant un filtre, vous pouvez "
"définir des critères supplémentaires dans le processus de journalisation. "
"Par exemple, vous pourriez installer un filtre limitant l'émission de "
"messages de niveau ``ERROR`` à une source particulière."

msgid ""
"Filters can also be used to modify the logging record prior to being "
"emitted. For example, you could write a filter that downgrades ``ERROR`` log "
"records to ``WARNING`` records if a particular set of criteria are met."
msgstr ""
"Les filtres peuvent ont aussi la possibilité de modifier l'enregistrement de "
"journal avant son émission. Par exemple, vous pourriez écrire un filtre qui "
"abaisse le niveau de journalisation du message de ``ERROR`` à ``WARNING`` si "
"certains critères sont respectés."

msgid ""
"Filters can be installed on loggers or on handlers; multiple filters can be "
"used in a chain to perform multiple filtering actions."
msgstr ""
"Les filtres peuvent être installés pour les journaliseurs ou pour les "
"gestionnaires ; il est aussi possible d'enchaîner plusieurs filtres pour "
"effectuer différentes actions de filtrage."

msgid "Formatters"
msgstr "Formateurs"

msgid ""
"Ultimately, a log record needs to be rendered as text. *Formatters* describe "
"the exact format of that text. A formatter usually consists of a Python "
"formatting string containing :ref:`LogRecord attributes <python:logrecord-"
"attributes>`; however, you can also write custom formatters to implement "
"specific formatting behavior."
msgstr ""
"Pour terminer, un enregistrement de journal doit être produit sous forme de "
"texte. Les formateurs spécifient le format exact de ce texte. En général, un "
"formateur correspond à une chaîne de format Python contenant des :ref:"
"`attributs LogRecord <python:logrecord-attributes>` ; cependant, vous pouvez "
"très bien écrire vos propres formateurs afin d'implémenter un comportement "
"de format spécifique."

msgid "Security implications"
msgstr "Implications quant à la sécurité"

msgid ""
"The logging system handles potentially sensitive information. For example, "
"the log record may contain information about a web request or a stack trace, "
"while some of the data you collect in your own loggers may also have "
"security implications. You need to be sure you know:"
msgstr ""
"Le système de journalisation traite de l'information potentiellement "
"sensible. Par exemple, une entrée de journalisation peut contenir de "
"l'information au sujet d'une requête web ou une trace d'erreur, alors que "
"certaines données collectées dans vos propres journaliseurs peuvent aussi "
"présenter des implications quant à la sécurité. Vous devez être sûr-e de "
"savoir :"

msgid "what information is collected"
msgstr "quelle information est collectée"

msgid "where it will subsequently be stored"
msgstr "où celle-ci sera ensuite stockée"

msgid "how it will be transferred"
msgstr "comment va-t-elle être transférée"

msgid "who might have access to it."
msgstr "qui pourra y avoir accès."

msgid ""
"To help control the collection of sensitive information, you can explicitly "
"designate certain sensitive information to be filtered out of error reports "
"-- read more about how to :ref:`filter error reports <filtering-error-"
"reports>`."
msgstr ""
"Pour aider à contrôler la collecte des informations sensibles, vous pouvez "
"explicitement désigner certaines informations comme sensibles pour qu'elles "
"soient exclues des rapports d'erreurs -- des informations plus complètes se "
"trouvent dans :ref:`filtrage des rapports d'erreurs <filtering-error-"
"reports>`."

msgid "``AdminEmailHandler``"
msgstr "``AdminEmailHandler``"

msgid ""
"The built-in :class:`~django.utils.log.AdminEmailHandler` deserves a mention "
"in the context of security. If its ``include_html`` option is enabled, the "
"email message it sends will contain a full traceback, with names and values "
"of local variables at each level of the stack, plus the values of your "
"Django settings (in other words, the same level of detail that is exposed in "
"a web page when :setting:`DEBUG` is ``True``)."
msgstr ""
"La classe :class:`~django.utils.log.AdminEmailHandler` mérite d'être "
"mentionnée dans un contexte de sécurité. Si son option ``include_html`` est "
"activée, le courriel qu'elle envoie contiendra une trace d'erreur complète, "
"avec les noms et les valeurs des variables locales à chaque niveau de la "
"pile, en plus des valeurs de vos réglages Django (en d'autres termes, le "
"même niveau de détail qui est exposé dans une page Web lorsque :setting:"
"`DEBUG` vaut ``True``)."

msgid ""
"It's generally not considered a good idea to send such potentially sensitive "
"information over email. Consider instead using one of the many third-party "
"services to which detailed logs can be sent to get the best of multiple "
"worlds -- the rich information of full tracebacks, clear management of who "
"is notified and has access to the information, and so on."
msgstr ""
"Il n'est généralement pas considéré comme une bonne idée d'envoyer de telles "
"informations potentiellement sensibles par courriel. Considérez plutôt le "
"recours à l'un des nombreux services tiers auxquels des journaux détaillés "
"peuvent être envoyés pour obtenir le meilleur de plusieurs mondes -- "
"l'information riche de traces d'erreurs complètes, une gestion claire de qui "
"est averti et peut accéder à l'information, et ainsi de suite."

msgid "Configuring logging"
msgstr "Configuration de la journalisation"

msgid ""
"Python's logging library provides several techniques to configure logging, "
"ranging from a programmatic interface to configuration files. By default, "
"Django uses the :ref:`dictConfig format <logging-config-dictschema>`."
msgstr ""
"La bibliothèque de journalisation de Python fournit plusieurs techniques de "
"configuration, que ce soit par interface programmable ou par des fichiers de "
"configuration. Par défaut, Django utilise le :ref:`format dictConfig "
"<logging-config-dictschema>`."

msgid ""
"In order to configure logging, you use :setting:`LOGGING` to define a "
"dictionary of logging settings. These settings describe the loggers, "
"handlers, filters and formatters that you want in your logging setup, and "
"the log levels and other properties that you want those components to have."
msgstr ""
"Pour configurer la journalisation, il s'agit de définir un dictionnaire de "
"réglages de journalisation dans :setting:`LOGGING`. Ces réglages décrivent "
"les journaliseurs, les gestionnaires, les filtres et les formateurs que vous "
"souhaitez mettre en place, ainsi que les niveaux de journalisation et "
"d'autres propriétés que vous voulez attribuer à ces composants."

msgid ""
"By default, the :setting:`LOGGING` setting is merged with :ref:`Django's "
"default logging configuration <default-logging-configuration>` using the "
"following scheme."
msgstr ""
"Par défaut, le réglage :setting:`LOGGING` est fusionné avec :ref:`la "
"configuration de journalisation par défaut de Django <default-logging-"
"configuration>` en se basant sur les principes suivants."

msgid ""
"If the ``disable_existing_loggers`` key in the :setting:`LOGGING` dictConfig "
"is set to ``True`` (which is the ``dictConfig`` default if the key is "
"missing) then all loggers from the default configuration will be disabled. "
"Disabled loggers are not the same as removed; the logger will still exist, "
"but will silently discard anything logged to it, not even propagating "
"entries to a parent logger. Thus you should be very careful using "
"``'disable_existing_loggers': True``; it's probably not what you want. "
"Instead, you can set ``disable_existing_loggers`` to ``False`` and redefine "
"some or all of the default loggers; or you can set :setting:`LOGGING_CONFIG` "
"to ``None`` and :ref:`handle logging config yourself <disabling-logging-"
"configuration>`."
msgstr ""
"Si la clé ``disable_existing_loggers`` du dictionnaire :setting:`LOGGING` "
"contient ``True`` (qui est la valeur par défaut ``dictConfig`` si la clé est "
"manquante), tous les journaliseurs de la configuration par défaut seront "
"désactivés. Désactiver un journaliseur n'est pas équivalent à sa "
"suppression ; le journaliseur existe toujours, mais il élimine "
"silencieusement les messages qu'il reçoit, sans même les propager au "
"journaliseur parent. Vous devez donc vous méfier du réglage "
"``'disable_existing_loggers': True``; cela ne fait souvent pas ce qu'on "
"aimerait. Par contre, vous pouvez définir ``disable_existing_loggers`` à "
"``False`` et redéfinir certains ou tous les journaliseurs par défaut. Une "
"autre stratégie est de définir :setting:`LOGGING_CONFIG` à ``None`` et vous :"
"ref:`charger vous-même de la configuration de la journalisation <disabling-"
"logging-configuration>`."

msgid ""
"Logging is configured as part of the general Django ``setup()`` function. "
"Therefore, you can be certain that loggers are always ready for use in your "
"project code."
msgstr ""
"La journalisation est configurée dans le cadre de la fonction ``setup()`` "
"générale de Django. Ainsi, vous pouvez être certain que les journaliseurs "
"sont toujours prêts à être utilisés par le code de votre projet."

msgid ""
"The full documentation for :ref:`dictConfig format <logging-config-"
"dictschema>` is the best source of information about logging configuration "
"dictionaries. However, to give you a taste of what is possible, here are "
"several examples."
msgstr ""
"La documentation complète du :ref:`format dictConfig <logging-config-"
"dictschema>` est la meilleure source d'informations concernant les "
"dictionnaires de configuration de la journalisation. Cependant, pour vous "
"donner un petit aperçu de ce qui est réalisable, voici quelques exemples."

msgid ""
"To begin, here's a small configuration that will allow you to output all log "
"messages to the console:"
msgstr ""
"Pour commencer, voici une petite configuration qui permet d'afficher tous "
"les messages de journal dans la console :"

msgid ""
"This configures the parent ``root`` logger to send messages with the "
"``WARNING`` level and higher to the console handler. By adjusting the level "
"to ``INFO`` or ``DEBUG`` you can display more messages. This may be useful "
"during development."
msgstr ""
"Ceci configure le journaliseur parent ``root`` pour envoyer les messages de "
"niveau ``WARNING`` ou plus élevé vers le gestionnaire de la console. En "
"ajustant le niveau à ``INFO`` ou ``DEBUG``, vous pouvez afficher plus de "
"messages. Ceci peut se révéler utile durant le développement."

msgid ""
"Next we can add more fine-grained logging. Here's an example of how to make "
"the logging system print more messages from just the :ref:`django-logger` "
"named logger:"
msgstr ""
"Ensuite, nous pouvons ajouter plus de journalisation fine. Voici un exemple "
"sur la façon de faire produire plus de messages par le système de "
"journalisation pour le journaliseur nommé spécifiquement :ref:`django-"
"logger`:"

msgid ""
"By default, this config sends messages from the ``django`` logger of level "
"``INFO`` or higher to the console. This is the same level as Django's "
"default logging config, except that the default config only displays log "
"records when ``DEBUG=True``. Django does not log many such ``INFO`` level "
"messages. With this config, however, you can also set the environment "
"variable ``DJANGO_LOG_LEVEL=DEBUG`` to see all of Django's debug logging "
"which is very verbose as it includes all database queries."
msgstr ""
"Par défaut, cette configuration envoie les messages du journaliseur "
"``django`` de niveau ``INFO`` ou plus élevé vers la console. Il s'agit du "
"même niveau que dans la configuration de journalisation par défaut de "
"Django, sauf que cette dernière n'affiche les messages de journalisation que "
"si ``DEBUG=True``. Django ne génère pas tant de ces messages de niveau "
"``INFO``. Cependant, avec cette configuration, vous pouvez aussi définir la "
"variable d'environnement ``DJANGO_LOG_LEVEL=DEBUG`` pour voir tous les "
"messages de débogage  journalisés par Django, ce qui est très bavard car "
"toutes les requêtes de base de données sont incluses."

msgid ""
"You don't have to log to the console. Here's a configuration which writes "
"all logging from the :ref:`django-logger` named logger to a local file:"
msgstr ""
"Vous n'êtes pas obligé d'envoyer la journalisation vers la console. Voici "
"une configuration qui écrit toutes les journalisations provenant du "
"journaliseur nommé :ref:`django-logger` dans un fichier local :"

msgid ""
"If you use this example, be sure to change the ``'filename'`` path to a "
"location that's writable by the user that's running the Django application."
msgstr ""
"Si vous utilisez cet exemple, prenez soin de remplacer le chemin "
"``'filename'`` par un emplacement accessible en écriture par l'utilisateur "
"faisant fonctionner l'application Django."

msgid "Finally, here's an example of a fairly complex logging setup:"
msgstr ""
"Finalement, voici un exemple d'une configuration de journalisation plutôt "
"complexe :"

msgid "This logging configuration does the following things:"
msgstr "Cette configuration de journalisation effectue les choses suivantes :"

msgid ""
"Identifies the configuration as being in 'dictConfig version 1' format. At "
"present, this is the only dictConfig format version."
msgstr ""
"Elle identifie la configuration comme étant au format « dictConfig version "
"1 ». C'est actuellement la seule version du format dictConfig."

msgid "Defines two formatters:"
msgstr "Elle définit deux formateurs :"

msgid ""
"``simple``, that outputs the log level name (e.g., ``DEBUG``) and the log "
"message."
msgstr ""
"``simple`` qui affiche le nom du niveau de journal (par ex. ``DEBUG``) et le "
"message de journal."

msgid ""
"The ``format`` string is a normal Python formatting string describing the "
"details that are to be output on each logging line. The full list of detail "
"that can be output can be found in :ref:`formatter-objects`."
msgstr ""
"La chaîne ``format`` est une chaîne de format Python normale décrivant les "
"détails de ce qui doit être affiché pour chaque ligne de journal. La liste "
"complète des détails pouvant être affichés se trouve dans :ref:`formatter-"
"objects`."

msgid ""
"``verbose``, that outputs the log level name, the log message, plus the "
"time, process, thread and module that generate the log message."
msgstr ""
"``verbose`` qui affiche le nom du niveau de journal, le message de journal "
"ainsi que l'heure, le processus, le fil d'exécution et le module qui ont "
"généré le message."

msgid "Defines two filters:"
msgstr "Elle définit deux filtres :"

msgid ""
"``project.logging.SpecialFilter``, using the alias ``special``. If this "
"filter required additional arguments, they can be provided as additional "
"keys in the filter configuration dictionary. In this case, the argument "
"``foo`` will be given a value of ``bar`` when instantiating "
"``SpecialFilter``."
msgstr ""
"``project.logging.SpecialFilter`` par l'alias ``special``. Si ce filtre "
"nécessite des paramètres supplémentaires, ils peuvent être fournis sous "
"forme de clés supplémentaires dans le dictionnaire de configuration du "
"filtre. Dans ce cas, le paramètre ``foo`` reçoit la valeur ``bar`` au moment "
"de l'instanciation de ``SpecialFilter``."

msgid ""
"``django.utils.log.RequireDebugTrue``, which passes on records when :setting:"
"`DEBUG` is ``True``."
msgstr ""
"``django.utils.log.RequireDebugTrue``, qui transmet plus loin les messages "
"lorsque :setting:`DEBUG` vaut ``True``."

msgid "Defines two handlers:"
msgstr "Elle définit deux gestionnaires :"

msgid ""
"``console``, a :class:`~logging.StreamHandler`, which prints any ``INFO`` "
"(or higher) message to ``sys.stderr``. This handler uses the ``simple`` "
"output format."
msgstr ""
"``console``, un gestionnaire :class:`~logging.StreamHandler` affichant tout "
"message de niveau ``INFO`` ou plus élevé vers la sortie d'erreur (``sys."
"stderr``). Ce gestionnaire utilise le format d'affichage ``simple``."

msgid ""
"``mail_admins``, an :class:`~django.utils.log.AdminEmailHandler`, which "
"emails any ``ERROR`` (or higher) message to the site :setting:`ADMINS`. This "
"handler uses the ``special`` filter."
msgstr ""
"``mail_admins``, un gestionnaire :class:`~django.utils.log."
"AdminEmailHandler` qui avertit par courriel les :setting:`ADMINS` du site de "
"tout message de niveau ``ERROR`` ou plus élevé. Ce gestionnaire utilise le "
"filtre d'affichage ``special``."

msgid "Configures three loggers:"
msgstr "Elle configure trois journaliseurs :"

msgid "``django``, which passes all messages to the ``console`` handler."
msgstr ""
"``django``, qui transmet tous les messages au gestionnaire ``console``."

msgid ""
"``django.request``, which passes all ``ERROR`` messages to the "
"``mail_admins`` handler. In addition, this logger is marked to *not* "
"propagate messages. This means that log messages written to ``django."
"request`` will not be handled by the ``django`` logger."
msgstr ""
"``django.request`` qui transmet tous les messages de niveau ``ERROR`` au "
"gestionnaire ``mail_admins``. De plus, ce journaliseur est configuré pour ne "
"*pas* propager les messages. Cela signifie que les messages à destination de "
"``django.request`` ne seront pas traités par le journaliseur parent "
"``django``."

msgid ""
"``myproject.custom``, which passes all messages at ``INFO`` or higher that "
"also pass the ``special`` filter to two handlers -- the ``console``, and "
"``mail_admins``. This means that all ``INFO`` level messages (or higher) "
"will be printed to the console; ``ERROR`` and ``CRITICAL`` messages will "
"also be output via email."
msgstr ""
"``myproject.custom`` qui transmet tous les messages de niveau ``INFO`` ou "
"plus élevé et correspondant au filtre ``special`` vers deux gestionnaires, "
"``console`` et ``mail_admins``. Cela signifie que tous les messages de "
"niveau ``INFO`` ou plus élevé seront affichés dans la console. Les messages "
"de niveau ``ERROR`` et ``CRITICAL`` seront de plus expédiés par courriel."

msgid "Custom logging configuration"
msgstr "Configuration personnalisée de la journalisation"

msgid ""
"If you don't want to use Python's dictConfig format to configure your "
"logger, you can specify your own configuration scheme."
msgstr ""
"Si vous ne souhaitez pas utiliser le format ``dictConfig`` de Python pour "
"configurer la journalisation, il est possible d'indiquer un système de "
"configuration alternatif."

msgid ""
"The :setting:`LOGGING_CONFIG` setting defines the callable that will be used "
"to configure Django's loggers. By default, it points at Python's :func:"
"`logging.config.dictConfig()` function. However, if you want to use a "
"different configuration process, you can use any other callable that takes a "
"single argument. The contents of :setting:`LOGGING` will be provided as the "
"value of that argument when logging is configured."
msgstr ""
"Le réglage :setting:`LOGGING_CONFIG` définit l'exécutable utilisé pour "
"configurer les journaliseurs de Django. Par défaut, il indique la fonction  :"
"func:`logging.config.dictConfig()` de Python. Cependant, si vous souhaitez "
"utiliser un autre procédé de configuration, vous pouvez indiquer n'importe "
"quel autre exécutable acceptant un seul paramètre. Le contenu de :setting:"
"`LOGGING` sera fourni comme valeur de ce paramètre au moment de la "
"configuration de la journalisation."

msgid "Disabling logging configuration"
msgstr "Désactivation de la configuration de journalisation"

msgid ""
"If you don't want to configure logging at all (or you want to manually "
"configure logging using your own approach), you can set :setting:"
"`LOGGING_CONFIG` to ``None``. This will disable the configuration process "
"for :ref:`Django's default logging <default-logging-configuration>`."
msgstr ""
"Si vous ne souhaitez pas configurer de journalisation (ou que vous vouliez "
"le faire manuellement selon votre propre méthode), vous pouvez définir :"
"setting:`LOGGING_CONFIG` à ``None``. Cela va désactiver le processus de "
"configuration de la :ref:`journalisation par défaut de Django <default-"
"logging-configuration>`."

msgid ""
"Setting :setting:`LOGGING_CONFIG` to ``None`` only means that the automatic "
"configuration process is disabled, not logging itself. If you disable the "
"configuration process, Django will still make logging calls, falling back to "
"whatever default logging behavior is defined."
msgstr ""
"En définissant :setting:`LOGGING_CONFIG` à ``None``, vous ne faites que "
"désactiver le processus de configuration automatique, pas la journalisation "
"elle-même. Même quand vous désactivez le processus de configuration, Django "
"continue de faire appel à la journalisation, dont le comportement "
"correspondra alors à ce qui est défini par défaut."

msgid ""
"Here's an example that disables Django's logging configuration and then "
"manually configures logging:"
msgstr ""
"Voici un exemple qui désactive la configuration de la journalisation par "
"défaut de Django, puis configure manuellement la journalisation :"

msgid ""
"Note that the default configuration process only calls :setting:"
"`LOGGING_CONFIG` once settings are fully-loaded. In contrast, manually "
"configuring the logging in your settings file will load your logging config "
"immediately. As such, your logging config must appear *after* any settings "
"on which it depends."
msgstr ""
"Notez que le processus de configuration par défaut n'appelle  :setting:"
"`LOGGING_CONFIG` qu'une fois que les réglages sont complètement chargés. Par "
"contraste, la configuration manuelle de la journalisation dans votre fichier "
"de réglages va charger immédiatement la configuration de journalisation. En "
"conséquence, votre configuration de journalisation doit apparaître *après* "
"tout réglage dont elle dépend."

msgid "Migrations"
msgstr "Migrations"

msgid ""
"Migrations are Django's way of propagating changes you make to your models "
"(adding a field, deleting a model, etc.) into your database schema. They're "
"designed to be mostly automatic, but you'll need to know when to make "
"migrations, when to run them, and the common problems you might run into."
msgstr ""
"Les migrations sont la manière par laquelle Django propage des modifications "
"que vous apportez à des modèles (ajout d'un champ, suppression d'un modèle, "
"etc.) dans un schéma de base de données. Elles sont conçues pour être "
"quasiment automatiques, mais vous aurez besoin de savoir quand créer les "
"migrations, quand les exécuter, et les problèmes courants que vous pourriez "
"rencontrer."

msgid "The Commands"
msgstr "Les commandes"

msgid ""
"There are several commands which you will use to interact with migrations "
"and Django's handling of database schema:"
msgstr ""
"Il y a plusieurs commandes utiles pour interagir avec les migrations et "
"manipuler le schéma de base de données avec Django :"

msgid ""
":djadmin:`migrate`, which is responsible for applying and unapplying "
"migrations."
msgstr ""
":djadmin:`migrate`, qui est responsable de l'exécution et de l'annulation "
"des migrations."

msgid ""
":djadmin:`makemigrations`, which is responsible for creating new migrations "
"based on the changes you have made to your models."
msgstr ""
":djadmin:`makemigrations`, qui est responsable de la création de nouvelles "
"migrations en fonction des modifications que vous avez apportées aux modèles."

msgid ""
":djadmin:`sqlmigrate`, which displays the SQL statements for a migration."
msgstr ""
":djadmin:`sqlmigrate`, qui affiche les instructions SQL correspondant à une "
"migration."

msgid ""
":djadmin:`showmigrations`, which lists a project's migrations and their "
"status."
msgstr ""
":djadmin:`showmigrations`, qui affiche la liste des migrations d'un projet "
"ainsi que leur état."

msgid ""
"You should think of migrations as a version control system for your database "
"schema. ``makemigrations`` is responsible for packaging up your model "
"changes into individual migration files - analogous to commits - and "
"``migrate`` is responsible for applying those to your database."
msgstr ""
"Vous devez imaginer les migrations comme un système de contrôle de versions "
"pour un schéma de base de données. ``makemigrations`` se charge de regrouper "
"vos changements de modèle dans des fichiers de migration individuels - comme "
"des commits - et ``migrate`` est chargé d'appliquer les changements à la "
"base de données."

msgid ""
"The migration files for each app live in a \"migrations\" directory inside "
"of that app, and are designed to be committed to, and distributed as part "
"of, its codebase. You should be making them once on your development machine "
"and then running the same migrations on your colleagues' machines, your "
"staging machines, and eventually your production machines."
msgstr ""
"Les fichiers de migration pour chaque application sont stockés dans un "
"répertoire « migrations » à l'intérieur de l'application, et sont conçus "
"pour faire partie du code source et de la distribution de cette application. "
"Les migrations sont créées une fois sur votre machine de développement, puis "
"exécutées telles quelles sur les machines de vos collègues, les machines de "
"tests, et finalement sur les machines de production."

msgid ""
"It is possible to override the name of the package which contains the "
"migrations on a per-app basis by modifying the :setting:`MIGRATION_MODULES` "
"setting."
msgstr ""
"Pour chaque application, il est possible de redéfinir le nom du paquet qui "
"contient les migrations en utilisant le réglage :setting:`MIGRATION_MODULES`."

msgid ""
"Migrations will run the same way on the same dataset and produce consistent "
"results, meaning that what you see in development and staging is, under the "
"same circumstances, exactly what will happen in production."
msgstr ""
"Les migrations se déroulent toujours de la même manière lorsqu'elles sont "
"appliquées sur un même ensemble de données et leurs résultats sont constants "
"et répétables, ce qui signifie que ce que vous voyez dans le développement "
"et les machines de test correspondra exactement à ce qui va se passer en "
"production si les conditions d'exécution sont identiques."

msgid ""
"Django will make migrations for any change to your models or fields - even "
"options that don't affect the database - as the only way it can reconstruct "
"a field correctly is to have all the changes in the history, and you might "
"need those options in some data migrations later on (for example, if you've "
"set custom validators)."
msgstr ""
"Django crée des migrations pour tout changement dans les modèles ou les "
"champs, même pour des options qui n'affectent pas la base de données, car "
"pour lui la seule manière de reconstruire un champ correctement est d'avoir "
"accès à l'historique de toutes les modifications ; vous pourriez avoir "
"besoin de ces options lors de migrations de données ultérieures (par "
"exemple, si vous avez défini des règles de validation particulières)."

msgid "Backend Support"
msgstr "Bases de données prises en charge"

msgid ""
"Migrations are supported on all backends that Django ships with, as well as "
"any third-party backends if they have programmed in support for schema "
"alteration (done via the :doc:`SchemaEditor </ref/schema-editor>` class)."
msgstr ""
"Les migrations sont prises en charge sur tous les moteurs de bases de "
"données livrées avec Django, ainsi que les bases de données tierces si elles "
"prennent en charge les modifications de schéma (effectuées par "
"l'intermédiaire de la classe :doc:`SchemaEditor </ref/schema-editor>`)."

msgid ""
"However, some databases are more capable than others when it comes to schema "
"migrations; some of the caveats are covered below."
msgstr ""
"Toutefois, certaines bases de données ont plus de fonctionnalités que "
"d'autres quand il s'agit de migrations de schéma ; un certain nombre de "
"mises en garde sont rapportées ci-dessous."

msgid ""
"PostgreSQL is the most capable of all the databases here in terms of schema "
"support."
msgstr ""
"Parmi ces bases de données, PostgreSQL est celle disposant du plus de "
"capacités en terme de prise en charge de schéma."

msgid "MySQL"
msgstr "MySQL"

msgid ""
"MySQL lacks support for transactions around schema alteration operations, "
"meaning that if a migration fails to apply you will have to manually unpick "
"the changes in order to try again (it's impossible to roll back to an "
"earlier point)."
msgstr ""
"MySQL ne crée pas de transactions pour les opérations de modification de "
"schéma, ce qui signifie que si une migration ne parvient pas à s'appliquer, "
"vous devrez défaire manuellement les modifications pour essayer de nouveau "
"(il est impossible de revenir à un point de sauvegarde antérieur)."

msgid ""
"MySQL 8.0 introduced significant performance enhancements for `DDL "
"operations`_, making them more efficient and reducing the need for full "
"table rebuilds. However, it cannot guarantee a complete absence of locks or "
"interruptions. In situations where locks are still necessary, the duration "
"of these operations will be proportionate to the number of rows involved."
msgstr ""
"MySQL 8.0 a introduit des améliorations de performance significatives pour "
"les `opérations de structures de données`_, en les rendant plus efficaces et "
"en réduisant le besoin de reconstructions complètes de tables. Cependant, il "
"ne peut pas garantir une absence complète de verrous ou d'interruptions. "
"Dans les situations où les verrous sont encore nécessaires, la durée de ces "
"opérations sera proportionnelle au nombre de lignes concernées."

msgid ""
"Finally, MySQL has a relatively small limit on the combined size of all "
"columns an index covers. This means that indexes that are possible on other "
"backends will fail to be created under MySQL."
msgstr ""
"Enfin, MySQL a une taille limite relativement petite sur la taille combinée "
"de toutes les colonnes qu'un index recouvre. Cela signifie que des index qui "
"sont possibles sur d'autres bases de données ne pourront pas toujours être "
"créés avec MySQL."

msgid "SQLite"
msgstr "SQLite"

msgid ""
"SQLite has very little built-in schema alteration support, and so Django "
"attempts to emulate it by:"
msgstr ""
"SQLite ne gère nativement que très peu d'opérations de modifications de "
"schéma, Django tente donc de les émuler par :"

msgid "Creating a new table with the new schema"
msgstr "La création d'une nouvelle table pour le nouveau schéma"

msgid "Copying the data across"
msgstr "La copie des données de l'une à l'autre"

msgid "Dropping the old table"
msgstr "La suppression de l'ancienne table"

msgid "Renaming the new table to match the original name"
msgstr "Le renommage de la nouvelle table avec le nom de l'ancienne table"

msgid ""
"This process generally works well, but it can be slow and occasionally "
"buggy. It is not recommended that you run and migrate SQLite in a production "
"environment unless you are very aware of the risks and its limitations; the "
"support Django ships with is designed to allow developers to use SQLite on "
"their local machines to develop less complex Django projects without the "
"need for a full database."
msgstr ""
"Ce processus fonctionne généralement bien, mais il peut être lent et "
"comporter des anomalies. Il n'est pas recommandé d'utiliser et de faire "
"migrer SQLite dans un environnement de production, sauf si vous êtes "
"pleinement conscient des risques et des limites ; la prise en charge de "
"Django de cette fonctionnalité est conçue pour permettre aux développeurs "
"d'utiliser SQLite sur leurs machines en local pour développer des projets "
"Django moins complexes sans avoir besoin d'une base de données complète."

msgid "Workflow"
msgstr "Procédures"

msgid ""
"Django can create migrations for you. Make changes to your models - say, add "
"a field and remove a model - and then run :djadmin:`makemigrations`:"
msgstr ""
"Django peut créer les migrations à votre place. Modifiez vos modèles - par "
"exemple en ajoutant un champ ou en supprimant un modèle - puis exécutez :"
"djadmin:`makemigrations`:"

msgid ""
"Your models will be scanned and compared to the versions currently contained "
"in your migration files, and then a new set of migrations will be written "
"out. Make sure to read the output to see what ``makemigrations`` thinks you "
"have changed - it's not perfect, and for complex changes it might not be "
"detecting what you expect."
msgstr ""
"Les modèles sont analysés et comparés aux versions actuellement contenues "
"dans les fichiers de migration. Puis, un nouveau jeu de migrations est "
"rédigé. Il est chaudement conseillé de lire le résultat produit pour voir ce "
"que ``makemigrations`` a détecté comme changements. Cette commande n'est pas "
"parfaite, et pour des changements complexes, il se peut qu'elle n'ait pas "
"détecté ce que vous attendiez."

msgid ""
"Once you have your new migration files, you should apply them to your "
"database to make sure they work as expected:"
msgstr ""
"Lorsque les nouveaux fichiers de migration sont créés, on peut les appliquer "
"à la base de données pour s'assurer qu'ils fonctionnent correctement :"

msgid ""
"Once the migration is applied, commit the migration and the models change to "
"your version control system as a single commit - that way, when other "
"developers (or your production servers) check out the code, they'll get both "
"the changes to your models and the accompanying migration at the same time."
msgstr ""
"Quand la migration a été appliquée, ajoutez la migration et les "
"modifications des modèles dans votre système de gestion de versions par un "
"seul « commit » ; de cette façon, lorsque d'autres développeurs (ou votre "
"serveur de production) obtiennent le nouveau code, ils reçoivent en même "
"temps les modifications des modèles et la migration qui leur correspond."

msgid ""
"If you want to give the migration(s) a meaningful name instead of a "
"generated one, you can use the :option:`makemigrations --name` option:"
msgstr ""
"Si vous souhaitez attribuer un nom éloquent à une migration au lieu d'un nom "
"généré automatiquement, vous pouvez utilisez l'option :option:"
"`makemigrations --name`:"

msgid "Version control"
msgstr "Contrôle de versions"

msgid ""
"Because migrations are stored in version control, you'll occasionally come "
"across situations where you and another developer have both committed a "
"migration to the same app at the same time, resulting in two migrations with "
"the same number."
msgstr ""
"Comme les migrations sont stockées dans le système de gestion de versions, "
"il peut arriver de temps à autre qu'un autre développeur enregistre une "
"migration pour la même application en même temps que vous, ce qui aboutit à "
"deux migrations préfixées du même numéro."

msgid ""
"Don't worry - the numbers are just there for developers' reference, Django "
"just cares that each migration has a different name. Migrations specify "
"which other migrations they depend on - including earlier migrations in the "
"same app - in the file, so it's possible to detect when there's two new "
"migrations for the same app that aren't ordered."
msgstr ""
"Soyez sans crainte, les numéros servent uniquement comme référence pour les "
"développeurs, Django exige seulement que chaque migration soit nommée "
"différemment. Les migrations définissent dans leur fichier les autres "
"migrations dont elles dépendent, y compris les migrations précédentes de la "
"même application, il est donc possible de détecter lorsqu'il y a deux "
"nouvelles migrations pour la même application sans préférence d'ordre."

msgid ""
"When this happens, Django will prompt you and give you some options. If it "
"thinks it's safe enough, it will offer to automatically linearize the two "
"migrations for you. If not, you'll have to go in and modify the migrations "
"yourself - don't worry, this isn't difficult, and is explained more in :ref:"
"`migration-files` below."
msgstr ""
"Lorsque ceci se produit, Django vous pose la question avec plusieurs "
"options. S'il pense que c'est sans risque, il offre de fusionner "
"automatiquement les deux migrations pour vous. Dans le cas contraire, il "
"vous faudra modifier vous-même les migrations, mais ce n'est pas une "
"opération difficile et elle est expliquée plus en détails dans :ref:"
"`migration-files` ci-dessous."

msgid ""
"On databases that support DDL transactions (SQLite and PostgreSQL), all "
"migration operations will run inside a single transaction by default. In "
"contrast, if a database doesn't support DDL transactions (e.g. MySQL, "
"Oracle) then all operations will run without a transaction."
msgstr ""
"Avec les bases de données qui gèrent les transactions pour les instructions "
"de définition de schéma (SQLite et PostgreSQL), toutes les opérations de "
"migration s'exécuteront par défaut dans une transaction unique. Au "
"contraire, si une base de données ne gère pas ces transactions DDL (par ex. "
"MySQL, Oracle), alors toutes les opérations seront exécutées sans "
"transaction."

msgid ""
"You can prevent a migration from running in a transaction by setting the "
"``atomic`` attribute to ``False``. For example::"
msgstr ""
"Il est possible d'empêcher qu'une migration s'exécute dans une transaction "
"en définissant l'attribut ``atomic`` à ``False``. Par exemple ::"

msgid ""
"It's also possible to execute parts of the migration inside a transaction "
"using :func:`~django.db.transaction.atomic()` or by passing ``atomic=True`` "
"to :class:`~django.db.migrations.operations.RunPython`. See :ref:`non-atomic-"
"migrations` for more details."
msgstr ""
"Il est aussi possible d'exécuter certaines parties de la migration dans une "
"transaction en utilisant :func:`~django.db.transaction.atomic()` ou en "
"passant ``atomic=True`` à :class:`~django.db.migrations.operations."
"RunPython`. Voir :ref:`non-atomic-migrations` pour plus de détails."

msgid "Dependencies"
msgstr "Dépendances"

msgid ""
"While migrations are per-app, the tables and relationships implied by your "
"models are too complex to be created for one app at a time. When you make a "
"migration that requires something else to run - for example, you add a "
"``ForeignKey`` in your ``books`` app to your ``authors`` app - the resulting "
"migration will contain a dependency on a migration in ``authors``."
msgstr ""
"Bien que les migrations sont spécifiques à chaque application, les tables et "
"les relations déterminées par les modèles sont trop complexes pour être "
"créées pour une application à la fois. Lorsque vous créez une migration qui "
"nécessite qu'une autre opération soit exécutée, par exemple l'ajout d'une "
"clé ``ForeignKey`` de l'application ``livres`` vers l'application "
"``auteurs``, la migration résultante contiendra une dépendance sur une "
"migration dans ``auteurs``."

msgid ""
"This means that when you run the migrations, the ``authors`` migration runs "
"first and creates the table the ``ForeignKey`` references, and then the "
"migration that makes the ``ForeignKey`` column runs afterward and creates "
"the constraint. If this didn't happen, the migration would try to create the "
"``ForeignKey`` column without the table it's referencing existing and your "
"database would throw an error."
msgstr ""
"Cela signifie que quand vous exécutez les migrations, la migration de "
"``auteurs`` s'exécute en premier et crée la table référencée par la clé "
"étrangère, puis la migration qui crée la colonne ``ForeignKey`` peut "
"s'exécuter et créer la contrainte. Si cela ne se faisait pas ainsi, la "
"migration essaierait de créer une colonne ``ForeignKey`` sans que la table "
"référencée n'existe et la base de données signalerait une erreur."

msgid ""
"This dependency behavior affects most migration operations where you "
"restrict to a single app. Restricting to a single app (either in "
"``makemigrations`` or ``migrate``) is a best-efforts promise, and not a "
"guarantee; any other apps that need to be used to get dependencies correct "
"will be."
msgstr ""
"Ce comportement de dépendances affecte la majorité des opérations de "
"migration qui sont limitées à une seule application. La restriction à une "
"seule application (que ce soit pour ``makemigrations`` ou pour ``migrate``) "
"est respectée dans la mesure du possible, mais ce n'est pas une garantie ; "
"toute autre application concernée dans l'optique de la gestion des "
"dépendances sera également impliquée dans l'opération."

msgid ""
"Apps without migrations must not have relations (``ForeignKey``, "
"``ManyToManyField``, etc.) to apps with migrations. Sometimes it may work, "
"but it's not supported."
msgstr ""
"Les applications sans migrations ne doivent pas posséder de relations "
"(`ForeignKey``, ``ManyToManyField``, etc.) vers de applications avec "
"migrations. Cela peut parfois marcher, mais Django ne le garantit aucunement."

msgid "Swappable dependencies"
msgstr "Dépendances interchangeables"

msgid ""
"The ``swappable_dependency()`` function is used in migrations to declare "
"\"swappable\" dependencies on migrations in the app of the swapped-in model, "
"currently, on the first migration of this app. As a consequence, the swapped-"
"in model should be created in the initial migration. The argument ``value`` "
"is a string ``\"<app label>.<model>\"`` describing an app label and a model "
"name, e.g. ``\"myapp.MyModel\"``."
msgstr ""
"La fonction ``swappable_dependency()`` est utilisée dans les migrations pour "
"déclarer les dépendances interchangeables sur les migrations de "
"l'application du modèle inséré actuellement, dans la première migration de "
"cette application. Par conséquent, le modèle inséré doit être créé lors de "
"la migration initiale. L'argument ``value`` est une chaîne ``étiquette_app."
"modèle`` indiquant l'étiquette d'une application et le nom du modèle, par "
"exemple  ``\"monapp.MonModele\"``."

msgid ""
"By using ``swappable_dependency()``, you inform the migration framework that "
"the migration relies on another migration which sets up a swappable model, "
"allowing for the possibility of substituting the model with a different "
"implementation in the future. This is typically used for referencing models "
"that are subject to customization or replacement, such as the custom user "
"model (``settings.AUTH_USER_MODEL``, which defaults to ``\"auth.User\"``) in "
"Django's authentication system."
msgstr ""
"En utilisant ``swappable_dependency()``, vous informez le système des "
"migrations que la migration dépend d'une autre migration qui définit un "
"modèle interchangeable, donnant la possibilité de substituer le modèle par "
"une implémentation différente dans le futur. Ceci est typiquement utilisé "
"pour faire référence à des modèles sujets à personnalisation ou "
"remplacement, tels que le modèle d'utilisateur personnalisé (``settings."
"AUTH_USER_MODEL``, qui contient par défaut ``\"auth.User\"``) dans le "
"système d'authentification de Django."

msgid "Migration files"
msgstr "Fichiers de migrations"

msgid ""
"Migrations are stored as an on-disk format, referred to here as \"migration "
"files\". These files are actually normal Python files with an agreed-upon "
"object layout, written in a declarative style."
msgstr ""
"Les migrations sont stockées sous forme de fichiers sur disque nommés "
"« fichiers de migrations ». Ces fichiers sont en réalité des fichiers Python "
"normaux avec une structure d'objets convenue, rédigés dans un style "
"déclaratif."

msgid "A basic migration file looks like this::"
msgstr "Un fichier de migration simple ressemble à ceci ::"

msgid ""
"What Django looks for when it loads a migration file (as a Python module) is "
"a subclass of ``django.db.migrations.Migration`` called ``Migration``. It "
"then inspects this object for four attributes, only two of which are used "
"most of the time:"
msgstr ""
"Lorsque Django charge un fichier de migration (sous forme de module Python), "
"Django recherche une sous-classe de ``django.db.migrations.Migration`` "
"nommée ``Migration``. Il inspecte ensuite cet objet en cherchant quatre "
"attributs, parmi lesquels deux sont utilisés la plupart du temps :"

msgid "``dependencies``, a list of migrations this one depends on."
msgstr "``dependencies``, une liste de migrations dont celle-ci dépend."

msgid ""
"``operations``, a list of ``Operation`` classes that define what this "
"migration does."
msgstr ""
"``operations``, une liste de classes ``Operation`` définissant ce que fait "
"cette migration."

msgid ""
"The operations are the key; they are a set of declarative instructions which "
"tell Django what schema changes need to be made. Django scans them and "
"builds an in-memory representation of all of the schema changes to all apps, "
"and uses this to generate the SQL which makes the schema changes."
msgstr ""
"L'élément central, c'est les opérations ; il s'agit d'un ensemble "
"d'instructions déclaratives indiquant à Django quelles sont les "
"modifications de schéma qu'il doit effectuer. Django les analyse et "
"construit une représentation en mémoire de tous ces changements de schéma "
"pour toutes les applications, puis utilise cela pour générer le code SQL qui "
"procédera aux modifications de schéma."

msgid ""
"That in-memory structure is also used to work out what the differences are "
"between your models and the current state of your migrations; Django runs "
"through all the changes, in order, on an in-memory set of models to come up "
"with the state of your models last time you ran ``makemigrations``. It then "
"uses these models to compare against the ones in your ``models.py`` files to "
"work out what you have changed."
msgstr ""
"Cette structure en mémoire est également utilisée pour calculer les "
"différences entre les modèles et l'état actuel des migrations ; Django "
"parcourt toutes les modifications dans l'ordre en les appliquant à un "
"ensemble de modèles en mémoire afin d'aboutir à l'état des modèles à "
"l'instant de la dernière exécution de ``makemigrations``. Il utilise ensuite "
"ces modèles pour les comparer à ceux qui se trouvent dans les fichiers "
"``models.py`` afin de déterminer ce qui a changé."

msgid ""
"You should rarely, if ever, need to edit migration files by hand, but it's "
"entirely possible to write them manually if you need to. Some of the more "
"complex operations are not autodetectable and are only available via a hand-"
"written migration, so don't be scared about editing them if you have to."
msgstr ""
"Il est rarement nécessaire de devoir modifier des fichiers de migration à la "
"main, mais il est tout à fait possible de les écrire manuellement en cas de "
"besoin. Certaines des opérations les plus complexes ne sont pas détectables "
"automatiquement et ne sont donc disponibles que si on les écrit "
"manuellement ; il ne faut donc pas avoir peur de modifier les migrations en "
"cas de nécessité."

msgid "Custom fields"
msgstr "Champs personnalisés"

msgid ""
"You can't modify the number of positional arguments in an already migrated "
"custom field without raising a ``TypeError``. The old migration will call "
"the modified ``__init__`` method with the old signature. So if you need a "
"new argument, please create a keyword argument and add something like "
"``assert 'argument_name' in kwargs`` in the constructor."
msgstr ""
"Il n'est pas possible de modifier le nombre de paramètres positionnels dans "
"un champ personnalisé déjà migré sans générer une exception ``TypeError``. "
"L'ancienne migration appellera la méthode ``__init__`` modifiée avec "
"l'ancienne signature. Si donc vous avez besoin d'un nouveau paramètre, créez "
"plutôt un paramètre nommé et ajoutez quelque chose comme  ``assert "
"'nom_du_paramètre' in kwargs`` dans le constructeur."

msgid "Model managers"
msgstr "Gestionnaires de modèles"

msgid ""
"You can optionally serialize managers into migrations and have them "
"available in :class:`~django.db.migrations.operations.RunPython` operations. "
"This is done by defining a ``use_in_migrations`` attribute on the manager "
"class::"
msgstr ""
"Si vous le souhaitez, il est possible de sérialiser les gestionnaires "
"d'objets dans les migrations pour qu'ils soient disponibles lors des "
"opérations :class:`~django.db.migrations.operations.RunPython`. Cela peut se "
"faire en définissant un attribut ``use_in_migrations`` sur la classe du "
"gestionnaire ::"

msgid ""
"If you are using the :meth:`~django.db.models.from_queryset` function to "
"dynamically generate a manager class, you need to inherit from the generated "
"class to make it importable::"
msgstr ""
"Si vous utilisez la fonction :meth:`~django.db.models.from_queryset` pour "
"générer dynamiquement une classe de gestionnaire, il est nécessaire "
"d'hériter de la classe générée pour la rendre importable ::"

msgid ""
"Please refer to the notes about :ref:`historical-models` in migrations to "
"see the implications that come along."
msgstr ""
"Veuillez vous référer aux notes sur les :ref:`historical-models` dans les "
"migrations pour connaître les implications que cela génère."

msgid "Initial migrations"
msgstr "Migrations initiales"

msgid ""
"The \"initial migrations\" for an app are the migrations that create the "
"first version of that app's tables. Usually an app will have one initial "
"migration, but in some cases of complex model interdependencies it may have "
"two or more."
msgstr ""
"Les « migrations initiales » d'une application sont celles qui créent la "
"première version des tables de l'application. Une application possède "
"normalement une seule migration initiale, mais dans certains cas présentant "
"des interdépendances de modèles complexes, elle peut en avoir deux ou même "
"plus."

msgid ""
"Initial migrations are marked with an ``initial = True`` class attribute on "
"the migration class. If an ``initial`` class attribute isn't found, a "
"migration will be considered \"initial\" if it is the first migration in the "
"app (i.e. if it has no dependencies on any other migration in the same app)."
msgstr ""
"Les migrations initiales sont marquées avec un attribut ``initial = True`` "
"sur la classe de migration. Si cet attribut est absent, une migration est "
"tout de même considérée comme « initiale » s'il s'agit de la première "
"migration de l'application (c'est-à-dire qu'elle ne présente aucune "
"dépendance sur d'autres migrations de la même application)."

msgid ""
"When the :option:`migrate --fake-initial` option is used, these initial "
"migrations are treated specially. For an initial migration that creates one "
"or more tables (``CreateModel`` operation), Django checks that all of those "
"tables already exist in the database and fake-applies the migration if so. "
"Similarly, for an initial migration that adds one or more fields "
"(``AddField`` operation), Django checks that all of the respective columns "
"already exist in the database and fake-applies the migration if so. Without "
"``--fake-initial``, initial migrations are treated no differently from any "
"other migration."
msgstr ""
"Lorsque l'option :option:`migrate --fake-initial` est utilisée, ces "
"migrations initiales sont traitées spécialement. Pour une migration initiale "
"qui crée une ou plusieurs tables (opérations ``CreateModel``), Django "
"vérifie que toutes ces tables existent déjà dans la base de données et "
"considère alors la migration comme appliquée. De même, pour une migration "
"qui ajoute un ou plusieurs champs (opérations ``AddField``), Django vérifie "
"que toutes les colonnes concernées existent déjà dans la base de données et "
"considère la migration comme appliquée le cas échéant. Sans ``--fake-"
"initial``, les migrations initiales sont traitées exactement comme toutes "
"les autres migrations."

msgid "History consistency"
msgstr "Cohérence de l'historique"

msgid ""
"As previously discussed, you may need to linearize migrations manually when "
"two development branches are joined. While editing migration dependencies, "
"you can inadvertently create an inconsistent history state where a migration "
"has been applied but some of its dependencies haven't. This is a strong "
"indication that the dependencies are incorrect, so Django will refuse to run "
"migrations or make new migrations until it's fixed. When using multiple "
"databases, you can use the :meth:`allow_migrate` method of :ref:`database "
"routers <topics-db-multi-db-routing>` to control which databases :djadmin:"
"`makemigrations` checks for consistent history."
msgstr ""
"Comme discuté précédemment, il peut être nécessaire de réconcilier "
"manuellement des migrations lorsque deux branches de développement sont "
"fusionnées. Lors de l'édition des dépendances de migration, il arrive qu'on "
"crée involontairement un état historique incohérent où une migration a été "
"appliquée mais pas certaines de ses dépendances. C'est une indication claire "
"que les dépendances ne sont pas correctes, Django va donc refuser d'exécuter "
"les migrations en d'en créer de nouvelles tant que ce n'est pas corrigé. "
"Lors de l'utilisation de plusieurs bases de données, il est possible de "
"faire appel à la méthode :meth:`allow_migrate` des :ref:`routeurs de base de "
"données <topics-db-multi-db-routing>` pour indiquer pour quelles bases de "
"données :djadmin:`makemigrations` va contrôler l'historique."

msgid "Adding migrations to apps"
msgstr "Ajout de migrations aux applications"

msgid ""
"New apps come preconfigured to accept migrations, and so you can add "
"migrations by running :djadmin:`makemigrations` once you've made some "
"changes."
msgstr ""
"Les nouvelles applications sont préconfigurées pour accepter les migrations, "
"il est possible d'ajouter des migrations en exécutant :djadmin:"
"`makemigrations` après avoir effectué un certain nombre de modifications."

msgid ""
"If your app already has models and database tables, and doesn't have "
"migrations yet (for example, you created it against a previous Django "
"version), you'll need to convert it to use migrations by running:"
msgstr ""
"Si l'application possède déjà des modèles et des tables de base de données "
"et qu'elle n'a pas encore de migrations (par exemple parce que vous l'avez "
"créée avec une version précédente de Django), vous allez devoir la convertir "
"en vue de l'utilisation des migrations en exécutant :"

msgid ""
"This will make a new initial migration for your app. Now, run ``python "
"manage.py migrate --fake-initial``, and Django will detect that you have an "
"initial migration *and* that the tables it wants to create already exist, "
"and will mark the migration as already applied. (Without the :option:"
"`migrate --fake-initial` flag, the command would error out because the "
"tables it wants to create already exist.)"
msgstr ""
"Cela va créer une nouvelle migration initiale pour l'application. Ensuite, "
"lancez ``python manage.py migrate --fake-initial``, et Django détectera "
"qu'une migration initiale est présente *et* que les tables qu'il doit créer "
"existent déjà ; il va alors marquer la migration comme déjà appliquée (sans "
"l'option :option:`migrate --fake-initial`, la commande produirait une erreur "
"car les tables qu'elle essayerait de créer existent déjà)."

msgid "Note that this only works given two things:"
msgstr "Notez que cela ne fonctionne qu'à deux conditions :"

msgid ""
"You have not changed your models since you made their tables. For migrations "
"to work, you must make the initial migration *first* and then make changes, "
"as Django compares changes against migration files, not the database."
msgstr ""
"Les modèles n'ont pas été modifiés depuis la création des tables "
"correspondantes. Pour que les migrations fonctionnent, vous devez *d'abord* "
"créer la migration initiale, puis faire les modifications, car Django "
"compare les modifications aux fichiers de migration, pas à la base de "
"données."

msgid ""
"You have not manually edited your database - Django won't be able to detect "
"that your database doesn't match your models, you'll just get errors when "
"migrations try to modify those tables."
msgstr ""
"La base de données n'a pas été modifiée manuellement. Django n'est pas "
"capable de détecter que la base de données ne correspond pas aux modèles, et "
"au moment où les migrations essaieront de modifier ces tables, vous "
"obtiendrez des erreurs."

msgid "Reversing migrations"
msgstr "Inversion des migrations"

msgid ""
"Migrations can be reversed with :djadmin:`migrate` by passing the number of "
"the previous migration. For example, to reverse migration ``books.0003``:"
msgstr ""
"Les migrations peuvent être inversées avec :djadmin:`migrate` en passant le "
"numéro de la migration précédente. Par exemple, pour inverser la migration "
"``books.0003``:"

msgid ""
"If you want to reverse all migrations applied for an app, use the name "
"``zero``:"
msgstr ""
"Si vous souhaitez défaire toutes les migrations appliquées d'une "
"application, utilisez le terme ``zero``:"

msgid ""
"A migration is irreversible if it contains any irreversible operations. "
"Attempting to reverse such migrations will raise ``IrreversibleError``:"
msgstr ""
"Une migration est irréversible si elle contient au moins une opération "
"irréversible. Si on tente d'inverser une telle migration, une exception "
"``IrreversibleError`` sera générée :"

msgid "Historical models"
msgstr "Modèles historiques"

msgid ""
"When you run migrations, Django is working from historical versions of your "
"models stored in the migration files. If you write Python code using the :"
"class:`~django.db.migrations.operations.RunPython` operation, or if you have "
"``allow_migrate`` methods on your database routers, you **need to use** "
"these historical model versions rather than importing them directly."
msgstr ""
"Lorsque vous exécutez des migrations, Django se base sur des versions "
"historiques des modèles stockées dans les fichiers de migration. Si vous "
"rédigez du code Python en utilisant l'opération :class:`~django.db."
"migrations.operations.RunPython` ou si vous avez des méthodes "
"``allow_migrate`` sur vos routeurs de base de données, vous **devez "
"utiliser** ces versions historisées de modèles et non pas les importer "
"directement."

msgid ""
"If you import models directly rather than using the historical models, your "
"migrations *may work initially* but will fail in the future when you try to "
"rerun old migrations (commonly, when you set up a new installation and run "
"through all the migrations to set up the database)."
msgstr ""
"Si vous importez des modèles directement plutôt que d'utiliser les modèles "
"historisés, vos migrations *peuvent fonctionner initialement*, mais "
"échoueront dans le futur lorsque vous essaierez de relancer des anciennes "
"migrations (ce qui arrive habituellement lors d'une nouvelle installation "
"qui rejoue toutes les migrations pour créer la base de données)."

msgid ""
"This means that historical model problems may not be immediately obvious. If "
"you run into this kind of failure, it's OK to edit the migration to use the "
"historical models rather than direct imports and commit those changes."
msgstr ""
"Cela signifie que les problèmes de modèles historisés peuvent ne pas "
"apparaître immédiatement. Si vous rencontrez ce genre de problème, il est "
"correct de modifier la migration pour utiliser les modèles historisés au "
"lieu des importations directes et de valider ces modifications."

msgid ""
"Because it's impossible to serialize arbitrary Python code, these historical "
"models will not have any custom methods that you have defined. They will, "
"however, have the same fields, relationships, managers (limited to those "
"with ``use_in_migrations = True``) and ``Meta`` options (also versioned, so "
"they may be different from your current ones)."
msgstr ""
"Comme il n'est pas possible de sérialiser du code Python arbitraire, ces "
"modèles historiques ne posséderont pas de méthodes personnalisées que vous "
"auriez pu définir. Ils auront cependant les mêmes champs, relations, "
"gestionnaires (pour ceux qui possèdent l'attribut ``use_in_migrations = "
"True``) et options ``Meta`` (également historiques, pouvant donc être "
"différents des éléments actuels)."

msgid ""
"This means that you will NOT have custom ``save()`` methods called on "
"objects when you access them in migrations, and you will NOT have any custom "
"constructors or instance methods. Plan appropriately!"
msgstr ""
"Cela signifie que des méthodes ``save()`` personnalisées ne seront PAS "
"appelées pour les objets manipulés dans les migrations, de la même manière "
"que des constructeurs ou des méthodes d'instance personnalisées ne sont PAS "
"accessibles. Planifiez avec précaution !"

msgid ""
"References to functions in field options such as ``upload_to`` and "
"``limit_choices_to`` and model manager declarations with managers having "
"``use_in_migrations = True`` are serialized in migrations, so the functions "
"and classes will need to be kept around for as long as there is a migration "
"referencing them. Any :doc:`custom model fields </howto/custom-model-"
"fields>` will also need to be kept, since these are imported directly by "
"migrations."
msgstr ""
"Les références à des fonctions dans les options de champ telles que "
"``upload_to``, ``limit_choices_to`` et les déclarations de gestionnaire de "
"modèle ayant l'attribut ``use_in_migrations = True`` sont sérialisées dans "
"les migrations, ce qui fait que ces fonctions et classes doivent être "
"conservées quelque part dans le code aussi longtemps que des migrations les "
"référencent. Il s'agit également de conserver les :doc:`champs de modèle "
"personnalisés </howto/custom-model-fields>`, car ils sont importés "
"directement par les migrations."

msgid ""
"In addition, the concrete base classes of the model are stored as pointers, "
"so you must always keep base classes around for as long as there is a "
"migration that contains a reference to them. On the plus side, methods and "
"managers from these base classes inherit normally, so if you absolutely need "
"access to these you can opt to move them into a superclass."
msgstr ""
"De plus, les classes de base concrètes des modèles sont stockées sous forme "
"de pointeurs, il faut donc toujours conserver ces classes de base quelque "
"part aussi longtemps qu'une migration contient une référence vers elles. Le "
"côté positif est que les méthodes et gestionnaires de ces classes de base "
"héritent de façon normale, ce qui fait que si vous avez absolument besoin "
"d'y avoir accès, une possibilité est de les déplacer dans une classe parente."

msgid ""
"To remove old references, you can :ref:`squash migrations <migration-"
"squashing>` or, if there aren't many references, copy them into the "
"migration files."
msgstr ""
"Pour supprimer d'anciennes références, vous pouvez :ref:`fusionner les "
"migrations <migration-squashing>` ou, s'il n'y a pas trop de références, les "
"copier dans les fichiers de migration."

msgid "Considerations when removing model fields"
msgstr "Considérations lors de la suppression de champs de modèles"

msgid ""
"Similar to the \"references to historical functions\" considerations "
"described in the previous section, removing custom model fields from your "
"project or third-party app will cause a problem if they are referenced in "
"old migrations."
msgstr ""
"Dans le même ordre d'idée que les considérations sur les « références aux "
"fonctions historiques » dans la section précédente, la suppression de champs "
"de modèles personnalisés d'un projet ou d'une application tierce posera un "
"problème si ces champs sont référencés dans d'anciennes migrations."

msgid ""
"To help with this situation, Django provides some model field attributes to "
"assist with model field deprecation using the :doc:`system checks framework "
"</topics/checks>`."
msgstr ""
"Pour vous assister dans cette situation, Django fournit quelques attributs "
"de champs de modèle qui peuvent aider à rendre obsolètes des champs de "
"modèle à l'aide de l' :doc:`infrastructure des contrôles systèmes </topics/"
"checks>`."

msgid ""
"Add the ``system_check_deprecated_details`` attribute to your model field "
"similar to the following::"
msgstr ""
"Ajoutez l'attribut ``system_check_deprecated_details`` au champ de modèle "
"concerné de cette manière ::"

msgid ""
"After a deprecation period of your choosing (two or three feature releases "
"for fields in Django itself), change the ``system_check_deprecated_details`` "
"attribute to ``system_check_removed_details`` and update the dictionary "
"similar to::"
msgstr ""
"Après une période d'obsolescence de votre choix (deux ou trois versions "
"principales pour les champs propres à Django), modifiez l'attribut "
"``system_check_deprecated_details`` en ``system_check_removed_details`` et "
"mettez à jour le dictionnaire selon le modèle suivant ::"

msgid ""
"You should keep the field's methods that are required for it to operate in "
"database migrations such as ``__init__()``, ``deconstruct()``, and "
"``get_internal_type()``. Keep this stub field for as long as any migrations "
"which reference the field exist. For example, after squashing migrations and "
"removing the old ones, you should be able to remove the field completely."
msgstr ""
"Il faut toujours conserver les méthodes de champ qui lui sont nécessaires "
"pour fonctionner dans le contexte de migrations de base de données, telles "
"que ``__init__()``, ``deconstruct()`` et ``get_internal_type()``. Conservez "
"ce champ historisé aussi longtemps que des migrations le référençant "
"existent encore. Par exemple, après avoir fusionné des migrations et effacé "
"les anciennes, il est alors possible de supprimer complètement cet ancien "
"champ."

msgid "Data Migrations"
msgstr "Migrations de données"

msgid ""
"As well as changing the database schema, you can also use migrations to "
"change the data in the database itself, in conjunction with the schema if "
"you want."
msgstr ""
"En plus de modifier le schéma de base de données, les migrations peuvent "
"aussi être utilisées pour modifier les données mêmes de la base de données, "
"conjointement avec le schéma, si vous le souhaitez."

msgid ""
"Migrations that alter data are usually called \"data migrations\"; they're "
"best written as separate migrations, sitting alongside your schema "
"migrations."
msgstr ""
"Les migrations qui modifient des données sont généralement appelées des "
"« migrations de données » ; il est préférable d'en faire des migrations "
"séparées, en parallèle des migrations de schéma."

msgid ""
"Django can't automatically generate data migrations for you, as it does with "
"schema migrations, but it's not very hard to write them. Migration files in "
"Django are made up of :doc:`Operations </ref/migration-operations>`, and the "
"main operation you use for data migrations is :class:`~django.db.migrations."
"operations.RunPython`."
msgstr ""
"Django ne sait pas générer automatiquement des migrations de données à votre "
"place, comme il le fait pour les migrations de schéma, mais il n'est pas "
"très compliqué de les écrire. Les fichiers de migration dans Django sont "
"composés d’:doc:`Operations </ref/migration-operations>`, et la principale "
"opération utilisée pour les migrations de données est :class:`~django.db."
"migrations.operations.RunPython`."

msgid ""
"To start, make an empty migration file you can work from (Django will put "
"the file in the right place, suggest a name, and add dependencies for you):"
msgstr ""
"Pour commencer, créez un fichier de migration vide qui constituera votre "
"point de départ (Django place le fichier au bon endroit, suggère un nom et "
"ajoute les dépendances pour vous) :"

msgid "Then, open up the file; it should look something like this::"
msgstr ""
"Puis, ouvrez le fichier ; il devrait ressembler à quelque chose comme ceci ::"

msgid ""
"Now, all you need to do is create a new function and have :class:`~django.db."
"migrations.operations.RunPython` use it. :class:`~django.db.migrations."
"operations.RunPython` expects a callable as its argument which takes two "
"arguments - the first is an :doc:`app registry </ref/applications/>` that "
"has the historical versions of all your models loaded into it to match where "
"in your history the migration sits, and the second is a :doc:`SchemaEditor </"
"ref/schema-editor>`, which you can use to manually effect database schema "
"changes (but beware, doing this can confuse the migration autodetector!)"
msgstr ""
"Tout ce qu'il vous reste à faire est de créer une nouvelle fonction et de "
"demander à :class:`~django.db.migrations.operations.RunPython` de "
"l'appeler. :class:`~django.db.migrations.operations.RunPython` s'attend à un "
"objet exécutable en paramètre qui accepte lui-même deux paramètres : le "
"premier est un :doc:`registre d'applications </ref/applications/>` contenant "
"les versions historisées de tous les modèles qui y sont chargés afin de "
"correspondre à l'endroit où se situe la migration dans l'historique, et le "
"second est une classe :doc:`SchemaEditor </ref/schema-editor>` permettant "
"d'effectuer manuellement des modifications de schéma de la base de données "
"(mais prenez garde, de telles modifications pourraient embrouiller l'auto-"
"détecteur de migrations !)."

msgid ""
"Let's write a migration that populates our new ``name`` field with the "
"combined values of ``first_name`` and ``last_name`` (we've come to our "
"senses and realized that not everyone has first and last names). All we need "
"to do is use the historical model and iterate over the rows::"
msgstr ""
"Écrivons une migration qui remplit notre nouveau champ ``name`` avec les "
"valeurs combinées de ``first_name`` et ``last_name`` (nous sommes retombés "
"sur nos pieds et avons réalisé que tout le monde n'a pas forcément un nom et "
"un prénom). Tout ce que nous avons à faire est d'utiliser le modèle "
"historique et de parcourir chaque ligne ::"

msgid ""
"Once that's done, we can run ``python manage.py migrate`` as normal and the "
"data migration will run in place alongside other migrations."
msgstr ""
"Une fois que c'est fait, nous pouvons lancer normalement ``python manage.py "
"migrate`` et la migration de données sera exécutée comme toute autre "
"migration."

msgid ""
"You can pass a second callable to :class:`~django.db.migrations.operations."
"RunPython` to run whatever logic you want executed when migrating backwards. "
"If this callable is omitted, migrating backwards will raise an exception."
msgstr ""
"Il est possible de passer un second objet exécutable à :class:`~django.db."
"migrations.operations.RunPython` pour exécuter toute logique adéquate dans "
"le cas d'une migration inverse. Si cet objet est omis, la migration inverse "
"générera une exception, le cas échéant."

msgid "Accessing models from other apps"
msgstr "Accéder aux modèles d'autres applications"

msgid ""
"When writing a ``RunPython`` function that uses models from apps other than "
"the one in which the migration is located, the migration's ``dependencies`` "
"attribute should include the latest migration of each app that is involved, "
"otherwise you may get an error similar to: ``LookupError: No installed app "
"with label 'myappname'`` when you try to retrieve the model in the "
"``RunPython`` function using ``apps.get_model()``."
msgstr ""
"Lorsque vous écrivez une fonction appelée par ``RunPython`` et qui utilise "
"des modèles issus d'applications autres que celle dans laquelle la migration "
"est située, l'attribut ``dependencies`` de la migration doit inclure la "
"dernière migration de chaque application qui est en cause, sinon vous pouvez "
"obtenir une erreur semblable à : ``LookupError: Aucune application installée "
"pour 'myappname'`` lorsque vous utilisez ``apps.get_model()`` pour essayer "
"de récupérer le modèle dans la fonction appelée par ``RunPython``."

msgid ""
"In the following example, we have a migration in ``app1`` which needs to use "
"models in ``app2``. We aren't concerned with the details of ``move_m1`` "
"other than the fact it will need to access models from both apps. Therefore "
"we've added a dependency that specifies the last migration of ``app2``::"
msgstr ""
"Dans l'exemple suivant, nous avons une migration dans ``app1`` qui a besoin "
"d'utiliser des modèles dans ``app2``. Nous ne sommes pas préoccupés par les "
"détails de ``move_m1`` mis à part que cette fonction aura besoin d'accéder à "
"des modèles des deux applications. Par conséquent, nous avons ajouté une "
"dépendance qui spécifie la dernière migration de ``app2`` ::"

msgid "More advanced migrations"
msgstr "Migrations avancées"

msgid ""
"If you're interested in the more advanced migration operations, or want to "
"be able to write your own, see the :doc:`migration operations reference </"
"ref/migration-operations>` and the \"how-to\" on :doc:`writing migrations </"
"howto/writing-migrations>`."
msgstr ""
"Si vous êtes intéressé aux opérations de migration plus avancées ou que vous "
"voulez pouvoir écrire votre propre opération, consultez la :doc:`référence "
"des opérations de migration </ref/migration-operations>` et le guide "
"pratique sur :doc:`l’écriture de migrations </howto/writing-migrations>`."

msgid "Squashing migrations"
msgstr "Fusion de migrations"

msgid ""
"You are encouraged to make migrations freely and not worry about how many "
"you have; the migration code is optimized to deal with hundreds at a time "
"without much slowdown. However, eventually you will want to move back from "
"having several hundred migrations to just a few, and that's where squashing "
"comes in."
msgstr ""
"Il ne faut pas craindre de créer autant de migrations que nécessaire, ce "
"n'est pas un problème. Le code de migration est optimisé pour traiter des "
"centaines de migrations à la fois sans trop de lenteurs. Cependant, il peut "
"arriver un moment où l'on souhaite réduire un grand nombre de migrations à "
"juste quelques-unes, et c'est là que la fusion des migrations intervient."

msgid ""
"Squashing is the act of reducing an existing set of many migrations down to "
"one (or sometimes a few) migrations which still represent the same changes."
msgstr ""
"La fusion est l'acte de réduire un ensemble existant de nombreuses "
"migrations à une seule (ou parfois quelques-unes) qui représente toujours "
"les mêmes changements."

msgid ""
"Django does this by taking all of your existing migrations, extracting their "
"``Operation``\\s and putting them all in sequence, and then running an "
"optimizer over them to try and reduce the length of the list - for example, "
"it knows that :class:`~django.db.migrations.operations.CreateModel` and :"
"class:`~django.db.migrations.operations.DeleteModel` cancel each other out, "
"and it knows that :class:`~django.db.migrations.operations.AddField` can be "
"rolled into :class:`~django.db.migrations.operations.CreateModel`."
msgstr ""
"Django opère cela en prenant toutes les migrations existantes, extrayant "
"leurs opérations en les plaçant toutes à la suite, puis exécutant un "
"optimiseur pour essayer de réduire au maximum cette liste d'opérations. Par "
"exemple, il sait que :class:`~django.db.migrations.operations.CreateModel` "
"et :class:`~django.db.migrations.operations.DeleteModel` s'annulent l'une "
"l'autre et que :class:`~django.db.migrations.operations.AddField` peut être "
"intégrée dans :class:`~django.db.migrations.operations.CreateModel`."

msgid ""
"Once the operation sequence has been reduced as much as possible - the "
"amount possible depends on how closely intertwined your models are and if "
"you have any :class:`~django.db.migrations.operations.RunSQL` or :class:"
"`~django.db.migrations.operations.RunPython` operations (which can't be "
"optimized through unless they are marked as ``elidable``) - Django will then "
"write it back out into a new set of migration files."
msgstr ""
"Une fois que la suite d'opérations a été réduite au minimum, Django écrit le "
"résultat dans une nouvel ensemble de fichiers de migration. Ce nombre "
"minimum dépend de la quantité de dépendances relatives entre les modèles et "
"de la présence d'opérations :class:`~django.db.migrations.operations.RunSQL` "
"ou :class:`~django.db.migrations.operations.RunPython` (qui ne peuvent pas "
"subir d'optimisation, sauf si elles sont marquées comme ``elidable``)."

msgid ""
"These files are marked to say they replace the previously-squashed "
"migrations, so they can coexist with the old migration files, and Django "
"will intelligently switch between them depending where you are in the "
"history. If you're still part-way through the set of migrations that you "
"squashed, it will keep using them until it hits the end and then switch to "
"the squashed history, while new installs will use the new squashed migration "
"and skip all the old ones."
msgstr ""
"Dans ces fichiers, il est indiqué qu'ils remplacent les migrations "
"fusionnées précédentes, ce qui signifie qu'ils peuvent coexister avec les "
"anciens fichiers de migration ; Django choisit intelligemment les fichiers à "
"prendre en compte en fonction de la position actuelle dans l'historique de "
"migration. Si un projet n'a pas encore complètement appliqué un ensemble de "
"migrations qui a été fusionné, Django continue d'utiliser ces anciennes "
"migrations jusqu'au moment de la fusion, après quoi il se rattache à "
"l'historique fusionné, tandis que de nouvelles installations du projet vont "
"utiliser la nouvelle migration fusionnée et laisser de côté les anciennes."

msgid ""
"This enables you to squash and not mess up systems currently in production "
"that aren't fully up-to-date yet. The recommended process is to squash, "
"keeping the old files, commit and release, wait until all systems are "
"upgraded with the new release (or if you're a third-party project, ensure "
"your users upgrade releases in order without skipping any), and then remove "
"the old files, commit and do a second release."
msgstr ""
"Cela permet de fusionner des migrations sans perturber des systèmes "
"actuellement en production qui ne sont pas encore totalement à jour. Le "
"processus recommandé est de fusionner, de conserver les anciens fichiers, de "
"valider et publier le résultat, d'attendre jusqu'à ce que tous les systèmes "
"soient mis à jour avec la nouvelle version (ou dans le cas d'une application "
"réutilisable, s'assurer que les utilisateurs mettent à jour en suivant les "
"versions sans en sauter), puis de supprimer les anciens fichiers, de valider "
"et de publier une seconde version."

msgid ""
"The command that backs all this is :djadmin:`squashmigrations` - pass it the "
"app label and migration name you want to squash up to, and it'll get to work:"
msgstr ""
"La commande qui se charge de tout ceci est :djadmin:`squashmigrations`. "
"Transmettez-lui l'étiquette d'application et le nom de la migration jusqu'à "
"laquelle vous souhaitez fusionner, et elle se mettra au travail :"

msgid ""
"Use the :option:`squashmigrations --squashed-name` option if you want to set "
"the name of the squashed migration rather than use an autogenerated one."
msgstr ""
"Utilisez l'option :option:`squashmigrations --squashed-name` si vous "
"souhaitez définir le nom de la migration fusionnée plutôt que d'utiliser le "
"nom généré automatiquement."

msgid ""
"Note that model interdependencies in Django can get very complex, and "
"squashing may result in migrations that do not run; either mis-optimized (in "
"which case you can try again with ``--no-optimize``, though you should also "
"report an issue), or with a ``CircularDependencyError``, in which case you "
"can manually resolve it."
msgstr ""
"Sachez que les interdépendances de modèles Django peuvent devenir vraiment "
"complexes et la fusion peut aboutir à des migrations qui ne peuvent pas être "
"exécutées ; il peut soit y avoir un problème d'optimisation (auquel cas vous "
"pouvez essayer une nouvelle fois avec l'option ``--no-optimize``, mais il "
"serait aussi judicieux de signaler le problème), soit un problème d'erreur "
"``CircularDependencyError``, et dans ce cas, vous pouvez le résoudre "
"manuellement."

msgid ""
"To manually resolve a ``CircularDependencyError``, break out one of the "
"ForeignKeys in the circular dependency loop into a separate migration, and "
"move the dependency on the other app with it. If you're unsure, see how :"
"djadmin:`makemigrations` deals with the problem when asked to create brand "
"new migrations from your models. In a future release of Django, :djadmin:"
"`squashmigrations` will be updated to attempt to resolve these errors itself."
msgstr ""
"Pour résoudre manuellement une erreur ``CircularDependencyError``, séparez "
"l'une des clés étrangères de la boucle de dépendances circulaires dans une "
"migration distincte, puis déplacez la dépendance sur l'autre application qui "
"la contient. Si vous hésitez, examinez comment :djadmin:`makemigrations` "
"s'occupe de ce problème lorsqu'on lui demande de créer de toutes nouvelles "
"migrations à partir de vos modèles. Dans une version future de Django, :"
"djadmin:`squashmigrations` sera mise à jour pour qu'elle puisse résoudre ces "
"erreurs par elle-même."

msgid ""
"Once you've squashed your migration, you should then commit it alongside the "
"migrations it replaces and distribute this change to all running instances "
"of your application, making sure that they run ``migrate`` to store the "
"change in their database."
msgstr ""
"Après avoir fusionné les migrations, ajoutez la migration résultante en "
"parallèle à celles qu'elle remplace et distribuez cette modification à "
"toutes les instances en production de votre projet, en prenant soin "
"d'exécuter chaque fois ``migrate`` pour enregistrer la modification dans la "
"base de données."

msgid ""
"You must then transition the squashed migration to a normal migration by:"
msgstr ""
"Vous devez alors faire passer la migration fusionnée vers une migration "
"normale en :"

msgid "Deleting all the migration files it replaces."
msgstr "supprimant tous les fichiers de migration qu'elle remplace ;"

msgid ""
"Updating all migrations that depend on the deleted migrations to depend on "
"the squashed migration instead."
msgstr ""
"mettant à jour toutes les migrations qui dépendent des migrations supprimées "
"pour les faire dépendre de la migration fusionnée ;"

msgid ""
"Removing the ``replaces`` attribute in the ``Migration`` class of the "
"squashed migration (this is how Django tells that it is a squashed "
"migration)."
msgstr ""
"enlevant l'attribut ``replaces`` dans la classe ``Migration`` de la "
"migration fusionnée (c'est ce qui permet à Django de savoir qu'il s'agit "
"d'une migration fusionnée)."

msgid ""
"Once you've squashed a migration, you should not then re-squash that "
"squashed migration until you have fully transitioned it to a normal "
"migration."
msgstr ""
"Après avoir créé une migration fusionnée, vous ne pouvez pas refusionner "
"celle-ci avant d'avoir effectué la transition complète vers une migration "
"normale."

msgid "Pruning references to deleted migrations"
msgstr "Nettoyage des références aux migrations supprimées"

msgid ""
"If it is likely that you may reuse the name of a deleted migration in the "
"future, you should remove references to it from Django’s migrations table "
"with the :option:`migrate --prune` option."
msgstr ""
"S'il est probable que vous puissiez réutiliser le nom d'une migration "
"supprimée dans le futur, vous devriez supprimer les références à cette "
"migration dans la table des migrations de Django avec l'option :option:"
"`migrate --prune`."

msgid "Serializing values"
msgstr "Sérialisation de valeurs"

msgid ""
"Migrations are Python files containing the old definitions of your models - "
"thus, to write them, Django must take the current state of your models and "
"serialize them out into a file."
msgstr ""
"Les migrations sont des fichiers Python contenant les anciennes définitions "
"de vos modèles. Pour pouvoir les écrire, Django doit donc prendre l'état "
"actuel des modèles et les sérialiser dans un fichier."

msgid ""
"While Django can serialize most things, there are some things that we just "
"can't serialize out into a valid Python representation - there's no Python "
"standard for how a value can be turned back into code (``repr()`` only works "
"for basic values, and doesn't specify import paths)."
msgstr ""
"Bien que Django puisse sérialiser la plupart des objets, il y en a certains "
"qui ne peuvent simplement pas être sérialisés en une représentation Python "
"valide. Il n'existe pas de standard Python permettant à une valeur d'être "
"retransformée en code (``repr()`` ne fonctionne qu'avec des valeurs basiques "
"et ne définit pas de chemins d'importation)."

msgid "Django can serialize the following:"
msgstr "Django est capable de sérialiser ce qui suit :"

msgid ""
"``int``, ``float``, ``bool``, ``str``, ``bytes``, ``None``, ``NoneType``"
msgstr ""
"``int``, ``float``, ``bool``, ``str``, ``bytes``, ``None``, ``NoneType``"

msgid "``list``, ``set``, ``tuple``, ``dict``, ``range``."
msgstr "``list``, ``set``, ``tuple``, ``dict``, ``range``."

msgid ""
"``datetime.date``, ``datetime.time``, and ``datetime.datetime`` instances "
"(include those that are timezone-aware)"
msgstr ""
"instances ``datetime.date``, ``datetime.time`` et ``datetime.datetime`` (y "
"compris celles qui contiennent un fuseau horaire)"

msgid "``decimal.Decimal`` instances"
msgstr "instances ``decimal.Decimal``"

msgid "``enum.Enum``  and ``enum.Flag`` instances"
msgstr "instances ``enum.Enum`` et ``enum.Flag``"

msgid "``uuid.UUID`` instances"
msgstr "instances ``uuid.UUID``"

msgid ""
":func:`functools.partial` and :class:`functools.partialmethod` instances "
"which have serializable ``func``, ``args``, and ``keywords`` values."
msgstr ""
"instances de :func:`functools.partial` et de :class:`functools."
"partialmethod` qui possèdent des valeurs sérialisables de ``func``, ``args`` "
"et ``keywords``"

msgid ""
"Pure and concrete path objects from :mod:`pathlib`. Concrete paths are "
"converted to their pure path equivalent, e.g. :class:`pathlib.PosixPath` to :"
"class:`pathlib.PurePosixPath`."
msgstr ""
"des objets chemins purs et concrets de :mod:`pathlib`. Les chemins concrets "
"sont convertis en leur équivalent chemin pur, par ex. :class:`pathlib."
"PosixPath` en :class:`pathlib.PurePosixPath`"

msgid ""
":class:`os.PathLike` instances, e.g. :class:`os.DirEntry`, which are "
"converted to ``str`` or ``bytes`` using :func:`os.fspath`."
msgstr ""
"instances :class:`os.PathLike`, par ex. :class:`os.DirEntry`, qui sont "
"converties en ``str`` ou ``bytes`` en utilisant :func:`os.fspath`"

msgid "``LazyObject`` instances which wrap a serializable value."
msgstr "instances ``LazyObject`` qui décorent une valeur sérialisable"

msgid ""
"Enumeration types (e.g. ``TextChoices`` or ``IntegerChoices``) instances."
msgstr ""
"instances de types énumératifs (ex. ``TextChoices`` ou ``IntegerChoices``)"

msgid "Any Django field"
msgstr "tous les champs Django"

msgid ""
"Any function or method reference (e.g. ``datetime.datetime.today``) (must be "
"in module's top-level scope)"
msgstr ""
"toute référence de fonction ou de méthode (par ex. ``datetime.datetime."
"today``) (doit être définie au niveau principal du module)"

msgid ""
"Functions may be decorated if wrapped properly, i.e. using :func:`functools."
"wraps`"
msgstr ""
"Les fonctions peuvent être décorées si elles sont enveloppées correctement, "
"c'est-à-dire avec  :func:`functools.wraps`"

msgid ""
"The :func:`functools.cache` and :func:`functools.lru_cache` decorators are "
"explicitly supported"
msgstr ""
"Les décorateurs :func:`functools.cache` sont :func:`functools.lru_cache` "
"sont explicitement pris en charge"

msgid "Unbound methods used from within the class body"
msgstr "méthodes non liées utilisées depuis l'intérieur du corps de la classe"

msgid "Any class reference (must be in module's top-level scope)"
msgstr ""
"toute référence de classe (doit être définie au niveau principal du module)"

msgid ""
"Anything with a custom ``deconstruct()`` method (:ref:`see below <custom-"
"deconstruct-method>`)"
msgstr ""
"tout objet comportant une méthode ``deconstruct()`` (voir :ref:`ci-dessous "
"<custom-deconstruct-method>`)"

msgid ""
"Serialization support for functions decorated with :func:`functools.cache` "
"or :func:`functools.lru_cache` was added."
msgstr ""
"La prise en charge de la sérialisation des fonctions décorées avec :func:"
"`functools.cache` ou :func:`functools.lru_cache` a été ajoutée."

msgid "Django cannot serialize:"
msgstr "Django ne peut pas sérialiser :"

msgid "Nested classes"
msgstr "Les classes imbriquées"

msgid "Arbitrary class instances (e.g. ``MyClass(4.3, 5.7)``)"
msgstr "Des instances de classe arbitraires (par ex. ``MaClasse(4.3, 5.7)``)"

msgid "Lambdas"
msgstr "Les fonctions lambdas"

msgid "Custom serializers"
msgstr "Sérialiseurs personnalisés"

msgid ""
"You can serialize other types by writing a custom serializer. For example, "
"if Django didn't serialize :class:`~decimal.Decimal` by default, you could "
"do this::"
msgstr ""
"Vous pouvez sérialiser d'autres types en écrivant un sérialiseur "
"personnalisé. Par exempl, si Django ne savait pas sérialiser :class:"
"`~decimal.Decimal` par défaut, vous auriez pu écrire ::"

msgid ""
"The first argument of ``MigrationWriter.register_serializer()`` is a type or "
"iterable of types that should use the serializer."
msgstr ""
"Le premier paramètre de ``MigrationWriter.register_serializer()`` est un "
"type ou un itérable de types qui doivent utiliser ce sérialiseur."

msgid ""
"The ``serialize()`` method of your serializer must return a string of how "
"the value should appear in migrations and a set of any imports that are "
"needed in the migration."
msgstr ""
"La méthode ``serialize()`` de votre sérialiseur doit renvoyer une chaîne "
"contenant la représentation de la valeur dans les migrations et un ensemble "
"de toute importation nécessaire dans la migration."

msgid "Adding a ``deconstruct()`` method"
msgstr "Ajout d'une méthode ``deconstruct()``"

msgid ""
"You can let Django serialize your own custom class instances by giving the "
"class a ``deconstruct()`` method. It takes no arguments, and should return a "
"tuple of three things ``(path, args, kwargs)``:"
msgstr ""
"Vous pouvez permettre à Django de sérialiser vos propres instances de classe "
"personnalisées en définissant une méthode ``deconstruct()`` pour la classe. "
"Elle n'accepte pas de paramètres et doit renvoyer un tuple de trois éléments "
"``(path, args, kwargs)``:"

msgid ""
"``path`` should be the Python path to the class, with the class name "
"included as the last part (for example, ``myapp.custom_things.MyClass``). If "
"your class is not available at the top level of a module it is not "
"serializable."
msgstr ""
"``path`` doit contenir le chemin Python vers la classe, avec le nom de la "
"classe inclus en dernier (par exemple, ``monapp.quelque_chose.MaClasse``). "
"Si la classe n'est pas définie au premier niveau du module, elle ne peut pas "
"être sérialisée. "

msgid ""
"``args`` should be a list of positional arguments to pass to your class' "
"``__init__`` method. Everything in this list should itself be serializable."
msgstr ""
"``args`` doit être une liste de paramètres positionnels à passer à la "
"méthode ``__init__`` de la classe. Tous les éléments de cette liste doivent "
"être eux-mêmes sérialisables."

msgid ""
"``kwargs`` should be a dict of keyword arguments to pass to your class' "
"``__init__`` method. Every value should itself be serializable."
msgstr ""
"``kwargs`` doit être un dictionnaire de paramètres nommés à passer à la "
"méthode ``__init__`` de la classe. Toutes ses valeurs doivent être elles-"
"mêmes sérialisables."

msgid ""
"This return value is different from the ``deconstruct()`` method :ref:`for "
"custom fields <custom-field-deconstruct-method>` which returns a tuple of "
"four items."
msgstr ""
"Cette valeur de renvoi est différente de la méthode ``deconstruct()`` des :"
"ref:`champs personnalisés <custom-field-deconstruct-method>` qui renvoie un "
"tuple de quatre éléments."

msgid ""
"Django will write out the value as an instantiation of your class with the "
"given arguments, similar to the way it writes out references to Django "
"fields."
msgstr ""
"Django écrit la valeur sous forme d'instanciation de la classe avec les "
"paramètres donnés, de la même façon qu'il écrit les références aux champs "
"Django."

msgid ""
"To prevent a new migration from being created each time :djadmin:"
"`makemigrations` is run, you should also add a ``__eq__()`` method to the "
"decorated class. This function will be called by Django's migration "
"framework to detect changes between states."
msgstr ""
"Pour éviter qu'une nouvelle migration soit créée lors de chaque exécution "
"de :djadmin:`makemigrations`, vous devriez aussi ajouter une méthode "
"``__eq__()`` à la classe décorée. Cette fonction sera appelée par le système "
"des migrations de Django pour détecter d'éventuels changements d'état."

msgid ""
"As long as all of the arguments to your class' constructor are themselves "
"serializable, you can use the ``@deconstructible`` class decorator from "
"``django.utils.deconstruct`` to add the ``deconstruct()`` method::"
msgstr ""
"Pour autant que tous les paramètres passés au constructeur de la classe sont "
"eux-même sérialisables, vous pouvez utiliser le décorateur de classe "
"``@deconstructible`` se trouvant dans ``django.utils.deconstruct`` pour "
"ajouter la méthode ``deconstruct()``::"

msgid ""
"The decorator adds logic to capture and preserve the arguments on their way "
"into your constructor, and then returns those arguments exactly when "
"deconstruct() is called."
msgstr ""
"Ce décorateur ajoute la logique nécessaire pour capturer et préserver les "
"paramètres lors de leur transmission au constructeur, puis renvoie ces mêmes "
"paramètres lorsque ``deconstruct()`` est appelée."

msgid "Supporting multiple Django versions"
msgstr "Prendre en charge plusieurs versions de Django"

msgid ""
"If you are the maintainer of a third-party app with models, you may need to "
"ship migrations that support multiple Django versions. In this case, you "
"should always run :djadmin:`makemigrations` **with the lowest Django version "
"you wish to support**."
msgstr ""
"Si vous êtes responsable d'une application tierce qui contient des modèles, "
"vous devrez peut-être fournir des migrations qui prennent en charge "
"plusieurs versions de Django. Dans ce cas, vous devez toujours exécuter :"
"djadmin:`makemigrations` **avec le plus bas niveau de version de Django vous "
"souhaitez prendre en charge**."

msgid ""
"The migrations system will maintain backwards-compatibility according to the "
"same policy as the rest of Django, so migration files generated on Django X."
"Y should run unchanged on Django X.Y+1. The migrations system does not "
"promise forwards-compatibility, however. New features may be added, and "
"migration files generated with newer versions of Django may not work on "
"older versions."
msgstr ""
"Le système de migrations maintiendra la compatibilité ascendante selon la "
"même politique que le reste de Django, afin que les fichiers de migration "
"générées sur Django X.Y devraient fonctionner sans modification sur Django X."
"Y+1. Cependant, le système des migrations ne promet pas de compatibilité "
"descendante. De nouvelles fonctionnalités peuvent être ajoutées, et les "
"fichiers de migration générés avec les nouvelles versions de Django pourront "
"ne pas fonctionner sur les anciennes versions."

msgid ":doc:`The Migrations Operations Reference </ref/migration-operations>`"
msgstr ""
":doc:`La référence des opérations de migration </ref/migration-operations>`"

msgid ""
"Covers the schema operations API, special operations, and writing your own "
"operations."
msgstr ""
"Documente l'API des opérations de schéma, les opérations spéciales ainsi que "
"l'écriture de ses propres opérations."

msgid ":doc:`The Writing Migrations \"how-to\" </howto/writing-migrations>`"
msgstr ""
":doc:`Le guide pratique sur l'écriture de migrations </howto/writing-"
"migrations>`"

msgid ""
"Explains how to structure and write database migrations for different "
"scenarios you might encounter."
msgstr ""
"Présente la façon de structurer et d'écrire des migrations de base de "
"données pour différents scénarios auxquels vous pourriez être confrontés."

msgid "Pagination"
msgstr "Pagination"

msgid ""
"Django provides high-level and low-level ways to help you manage paginated "
"data -- that is, data that's split across several pages, with \"Previous/"
"Next\" links."
msgstr ""
"Django fournit des méthodes de haut et de bas niveau pour vous aider à "
"effectuer de la pagination de données, c'est-à-dire des données qui sont "
"partagées en plusieurs pages, avec des liens « Précédent/Suivant »."

msgid "The ``Paginator`` class"
msgstr "La classe ``Paginator``"

msgid ""
"Under the hood, all methods of pagination use the :class:`~django.core."
"paginator.Paginator` class. It does all the heavy lifting of actually "
"splitting a ``QuerySet`` into :class:`~django.core.paginator.Page` objects."
msgstr ""
"Sous le capot, toutes les méthodes de pagination utilisent la classe :class:"
"`~django.core.paginator.Paginator`. Elle fait tout le travail de la division "
"de l'objet ``QuerySet`` en objets :class:`~django.core.paginator.Page`."

msgid ""
"Give :class:`~django.core.paginator.Paginator` a list of objects, plus the "
"number of items you'd like to have on each page, and it gives you methods "
"for accessing the items for each page:"
msgstr ""
"En donnant à :class:`~django.core.paginator.Paginator` une liste d'objets "
"ainsi que le nombre d'éléments souhaités sur chaque page, cette classe vous "
"offre des méthodes pour accéder aux éléments des différentes pages :"

msgid ""
"Note that you can give ``Paginator`` a list/tuple, a Django ``QuerySet``, or "
"any other object with a ``count()`` or ``__len__()`` method. When "
"determining the number of objects contained in the passed object, "
"``Paginator`` will first try calling ``count()``, then fallback to using "
"``len()`` if the passed object has no ``count()`` method. This allows "
"objects such as Django's ``QuerySet`` to use a more efficient ``count()`` "
"method when available."
msgstr ""
"Remarquez que vous pouvez donner à ``Paginator`` une liste/tuple, un "
"``QuerySet`` Django ou tout autre objet possédant une méthode ``count()`` ou "
"``__len__()``. Pour déterminer le nombre d'objets contenus dans l'objet "
"transmis, ``Paginator`` essaie d'abord d'appeler ``count()`` et se rabat sur "
"``len()`` si l'objet en question n'a pas de méthode ``count()``. Cela permet "
"à des objets comme les ``QuerySet`` de Django d'utiliser une méthode "
"``count()`` plus efficace le cas échéant."

msgid "Paginating a ``ListView``"
msgstr "Pagination d'une vue ``ListView``"

msgid ""
":class:`django.views.generic.list.ListView` provides a builtin way to "
"paginate the displayed list. You can do this by adding a :attr:`~django."
"views.generic.list.MultipleObjectMixin.paginate_by` attribute to your view "
"class, for example::"
msgstr ""
":class:`django.views.generic.list.ListView` offre la possibilité native de "
"paginer la liste à afficher. Cela se fait en ajoutant un attribut :attr:"
"`~django.views.generic.list.MultipleObjectMixin.paginate_by` à la classe de "
"vue, par exemple ::"

msgid ""
"This limits the number of objects per page and adds a ``paginator`` and "
"``page_obj`` to the ``context``. To allow your users to navigate between "
"pages, add links to the next and previous page, in your template like this:"
msgstr ""
"Ceci limite le nombre d'objets par page et ajoute les variables "
"``paginator`` et ``page_obj`` au contexte. Pour permettre aux utilisateurs "
"de naviguer entre les pages, ajoutez dans le gabarit des liens vers les "
"pages suivantes et précédentes, comme ceci :"

msgid "Using ``Paginator`` in a view function"
msgstr "Utilisation de ``Paginator`` dans une fonction de vue"

msgid ""
"Here's an example using :class:`~django.core.paginator.Paginator` in a view "
"function to paginate a queryset::"
msgstr ""
"Voici un exemple d'utilisation de :class:`~django.core.paginator.Paginator` "
"dans une fonction de vue afin de paginer une requête ::"

msgid ""
"In the template :file:`list.html`, you can include navigation between pages "
"in the same way as in the template for the ``ListView`` above."
msgstr ""
"Dans le gabarit :file:`list.html`, vous pouvez inclure des liens de "
"navigation entre les pages de la même façon que dans le gabarit de la vue "
"``ListView`` ci-dessus."

msgid "Performance and optimization"
msgstr "Performance et optimisations"

msgid ""
"This document provides an overview of techniques and tools that can help get "
"your Django code running more efficiently - faster, and using fewer system "
"resources."
msgstr ""
"Ce document présente une variété de techniques et d'outils pour aider à "
"rendre votre code Django plus performant, plus rapide et moins gourmand en "
"ressources système."

msgid ""
"Generally one's first concern is to write code that *works*, whose logic "
"functions as required to produce the expected output. Sometimes, however, "
"this will not be enough to make the code work as *efficiently* as one would "
"like."
msgstr ""
"En général, la première préoccupation est d'écrire du code qui *fonctionne*, "
"avec une logique qui fonctionne comme prévu pour produire le résultat "
"attendu. Cependant, il arrive parfois que ce ne soit pas suffisant pour que "
"le code fonctionne de manière *efficace* comme on pourrait le souhaiter."

msgid ""
"In this case, what's needed is something - and in practice, often a "
"collection of things - to improve the code's performance without, or only "
"minimally, affecting its behavior."
msgstr ""
"Dans ce cas, il s'agit de faire quelque chose, et en pratique, souvent "
"plusieurs choses pour améliorer la performance du code sans affecter son "
"comportement, ou seulement de manière minimale."

msgid "General approaches"
msgstr "Approches générales"

msgid "What are you optimizing *for*?"
msgstr "Dans quel *but* optimiser ?"

msgid ""
"It's important to have a clear idea what you mean by 'performance'. There is "
"not just one metric of it."
msgstr ""
"Il est important d'avoir une idée claire de ce que signifie « performance » "
"pour vous. Il n'y a pas qu'une seule façon de la mesurer."

msgid ""
"Improved speed might be the most obvious aim for a program, but sometimes "
"other performance improvements might be sought, such as lower memory "
"consumption or fewer demands on the database or network."
msgstr ""
"L'amélioration de la vitesse d'exécution peut paraître l'objectif le plus "
"évident pour un programme, mais il peut parfois être intéressant de "
"rechercher d'autres gains de performance, comme une consommation mémoire "
"réduite ou une moins grande sollicitation de la base de données ou du réseau."

msgid ""
"Improvements in one area will often bring about improved performance in "
"another, but not always; sometimes one can even be at the expense of "
"another. For example, an improvement in a program's speed might cause it to "
"use more memory. Even worse, it can be self-defeating - if the speed "
"improvement is so memory-hungry that the system starts to run out of memory, "
"you'll have done more harm than good."
msgstr ""
"Des améliorations dans un domaine génèrent souvent une amélioration de "
"performance dans d'autres domaines, mais pas toujours ; il peut arriver que "
"l'inverse se produise. Par exemple, une augmentation de la rapidité d'un "
"programme peut être la cause d'une plus grand consommation de mémoire. Pire "
"encore, l'effet peut se retourner contre lui-même, par exemple dans le cas "
"où l'amélioration de rapidité est tellement exigeante en mémoire que le "
"système commence à en manquer, le résultat final risque d'être pire qu'avant."

msgid ""
"There are other trade-offs to bear in mind. Your own time is a valuable "
"resource, more precious than CPU time. Some improvements might be too "
"difficult to be worth implementing, or might affect the portability or "
"maintainability of the code. Not all performance improvements are worth the "
"effort."
msgstr ""
"Il y a d'autres compromis à prendre en compte. Votre propre temps est une "
"ressource précieuse, plus que le temps CPU. Certaines améliorations "
"pourraient être trop difficiles pour valoir vraiment la peine, ou pourraient "
"affecter la portabilité ou la maintenance du code. Les améliorations de "
"performance ne valent pas toutes la peine d'être mises en œuvre."

msgid ""
"So, you need to know what performance improvements you are aiming for, and "
"you also need to know that you have a good reason for aiming in that "
"direction - and for that you need:"
msgstr ""
"Vous devez donc être bien conscient des améliorations de performance que "
"vous visez et vous devez aussi connaître la bonne raison qui vous pousse "
"dans cette direction. Pour cela, vous avez besoin de :"

msgid "Performance benchmarking"
msgstr "Analyse des performances (« benchmarking »)"

msgid ""
"It's no good just guessing or assuming where the inefficiencies lie in your "
"code."
msgstr ""
"Il ne sert à rien de simplement deviner ou de faire des suppositions sur les "
"points faibles de votre code."

msgid "Django tools"
msgstr "Outils Django"

msgid ""
":pypi:`django-debug-toolbar` is a very handy tool that provides insights "
"into what your code is doing and how much time it spends doing it. In "
"particular it can show you all the SQL queries your page is generating, and "
"how long each one has taken."
msgstr ""
":pypi:`django-debug-toolbar` est un outil vraiment pratique donnant un "
"aperçu de ce que fait le code et du temps passé dans différentes parties. En "
"particulier, il vous montre toutes les requêtes SQL générées par la page "
"ainsi que le temps consommé par chaque requête."

msgid ""
"Third-party panels are also available for the toolbar, that can (for "
"example) report on cache performance and template rendering times."
msgstr ""
"Il existe aussi des panneaux complémentaires de tierce partie pour cet "
"outil, parmi lesquels un outil de rapport sur la performance du cache et un "
"autre sur le temps de production des gabarits."

msgid "Third-party services"
msgstr "Services tiers"

msgid ""
"There are a number of free services that will analyze and report on the "
"performance of your site's pages from the perspective of a remote HTTP "
"client, in effect simulating the experience of an actual user."
msgstr ""
"Il existe un certain nombre de services gratuits qui analysent et détaillent "
"la performance des pages d'un site dans la perspective d'un client HTTP "
"externe, simulant ce que pourrait expérimenter un utilisateur réel."

msgid ""
"These can't report on the internals of your code, but can provide a useful "
"insight into your site's overall performance, including aspects that can't "
"be adequately measured from within Django environment. Examples include:"
msgstr ""
"Ces outils ne peuvent pas donner de détails sur les éléments de code "
"internes, mais peuvent donner une bonne idée de la performance générale d'un "
"site, y compris sur des aspects qui ne peuvent pas être mesurés proprement "
"depuis l'environnement Django. Parmi ceux-ci, on trouve :"

msgid "`Yahoo's Yslow <https://yslow.org/>`_"
msgstr "`Yslow de Yahoo <https://yslow.org/>`_"

msgid "`Google PageSpeed <https://developers.google.com/speed/>`_"
msgstr "`PageSpeed de Google`_"

msgid ""
"There are also several paid-for services that perform a similar analysis, "
"including some that are Django-aware and can integrate with your codebase to "
"profile its performance far more comprehensively."
msgstr ""
"Il existe aussi un certain nombre de services payants qui effectuent de "
"telles analyses, parfois même orientés Django et pouvant prendre en compte "
"le code du site pour étudier sa performance de manière bien plus complète."

msgid "Get things right from the start"
msgstr "Partir du bon pied dès le début"

msgid ""
"Some work in optimization involves tackling performance shortcomings, but "
"some of the work can be built-in to what you'd do anyway, as part of the "
"good practices you should adopt even before you start thinking about "
"improving performance."
msgstr ""
"Une partie du travail d'optimisation concerne la correction de lacunes en "
"terme de performance, mais un autre aspect fait partie du travail de "
"développement régulier, dans le cadre de bonnes pratiques à suivre avant "
"même de réfléchir spécifiquement à l'amélioration de performance."

msgid ""
"In this respect Python is an excellent language to work with, because "
"solutions that look elegant and feel right usually are the best performing "
"ones. As with most skills, learning what \"looks right\" takes practice, but "
"one of the most useful guidelines is:"
msgstr ""
"Dans cette optique, Python est un excellent langage de développement, car "
"les solutions qui paraissent élégantes et qui ont l'air correctes sont "
"généralement aussi celles qui sont les plus efficaces. Comme pour la plupart "
"des compétences, l'apprentissage de ce qui « a l'air correct » demande de la "
"pratique, mais l'une des consignes les plus utiles est :"

msgid "Work at the appropriate level"
msgstr "Travailler au niveau approprié"

msgid ""
"Django offers many different ways of approaching things, but just because "
"it's possible to do something in a certain way doesn't mean that it's the "
"most appropriate way to do it. For example, you might find that you could "
"calculate the same thing - the number of items in a collection, perhaps - in "
"a ``QuerySet``, in Python, or in a template."
msgstr ""
"Django offre de nombreuses manières différentes d'approcher les choses, mais "
"ce n'est pas parce qu'il est possible de faire quelque chose d'une certaine "
"manière que c'est forcément la manière la plus correcte de le faire. Par "
"exemple, vous pouvez constater qu'une même quantité, le nombre d'éléments "
"d'une collection, peut être calculée au niveau d'une requête ``QuerySet``, "
"en Python ou dans un gabarit."

msgid ""
"However, it will almost always be faster to do this work at lower rather "
"than higher levels. At higher levels the system has to deal with objects "
"through multiple levels of abstraction and layers of machinery."
msgstr ""
"Cependant, il est en principe toujours plus rapide de faire ce genre de "
"calcul au niveau le plus bas possible. À des niveaux supérieurs, le système "
"interagit avec les objets à travers plusieurs niveaux d'abstraction et de "
"couches de machinerie."

msgid ""
"That is, the database can typically do things faster than Python can, which "
"can do them faster than the template language can::"
msgstr ""
"C'est-à-dire que la base de données peut généralement faire les choses plus "
"rapidement que Python, qui lui-même les fait plus rapidement que le langage "
"de gabarit ::"

msgid ""
"Generally speaking, the most appropriate level for the job is the lowest-"
"level one that it is comfortable to code for."
msgstr ""
"En général, le niveau le plus approprié pour effectuer un travail est celui "
"de plus bas niveau avec lequel il est encore aisé d'écrire le code."

msgid "The example above is merely illustrative."
msgstr "L'exemple ci-dessus est purement illustratif."

msgid ""
"Firstly, in a real-life case you need to consider what is happening before "
"and after your count to work out what's an optimal way of doing it *in that "
"particular context*. The database optimization documents describes :ref:`a "
"case where counting in the template would be better "
"<overuse_of_count_and_exists>`."
msgstr ""
"Tout d'abord, dans un contexte réel, il faut considérer ce qui se passe "
"avant et après le dénombrement pour trouver quelle est la manière optimale "
"de le faire *dans ce contexte particulier*. Les documents d'optimisation de "
"la base de données décrivent un :ref:`cas où le dénombrement au niveau du "
"gabarit est la meilleure solution <overuse_of_count_and_exists>`."

msgid ""
"Secondly, there are other options to consider: in a real-life case, "
"``{{ my_bicycles.count }}``, which invokes the ``QuerySet`` ``count()`` "
"method directly from the template, might be the most appropriate choice."
msgstr ""
"Deuxièmement, il faut considérer d'autres options : dans un cas réel, "
"``{{ mes_velos.count }}`` qui invoque directement la méthode de ``QuerySet`` "
"``count()`` à partir du gabarit pourrait constituer le choix le plus "
"judicieux."

msgid ""
"Often it is expensive (that is, resource-hungry and slow) to compute a "
"value, so there can be huge benefit in saving the value to a quickly "
"accessible cache, ready for the next time it's required."
msgstr ""
"Il est souvent coûteux (consommateur de ressources et lent) de calculer une "
"valeur, il est donc potentiellement très bénéfique d'enregistrer la valeur "
"dans un cache à accès rapide, prête pour une réutilisation ultérieure."

msgid ""
"It's a sufficiently significant and powerful technique that Django includes "
"a comprehensive caching framework, as well as other smaller pieces of "
"caching functionality."
msgstr ""
"Il s'agit d'une technique suffisamment importante et puissante pour que "
"Django daigne inclure un système de cache complet, de même que d'autres "
"éléments plus petits liés à la fonctionnalité du cache."

msgid ":doc:`The caching framework </topics/cache>`"
msgstr ":doc:`L'infrastructure de cache </topics/cache>`"

msgid ""
"Django's :doc:`caching framework </topics/cache>` offers very significant "
"opportunities for performance gains, by saving dynamic content so that it "
"doesn't need to be calculated for each request."
msgstr ""
":doc:`L'infrastructure de cache </topics/cache>` de Django présente des "
"possibilités réellement avantageuses en terme de gains de performance, en "
"enregistrant du contenu dynamique afin qu'il ne doive plus être calculé pour "
"chaque requête."

msgid ""
"For convenience, Django offers different levels of cache granularity: you "
"can cache the output of specific views, or only the pieces that are "
"difficult to produce, or even an entire site."
msgstr ""
"Par commodité, Django offre différents niveaux de granularité de cache : "
"vous pouvez mettre en cache le résultat de vues spécifiques ou uniquement "
"les éléments qui sont difficiles à produire, ou même un site complet."

msgid ""
"Implementing caching should not be regarded as an alternative to improving "
"code that's performing poorly because it has been written badly. It's one of "
"the final steps toward producing well-performing code, not a shortcut."
msgstr ""
"La mise en œuvre du cache ne doit pas être considérée comme une alternative "
"à l'amélioration de code peu performant en raison d'une implémentation "
"déficiente. C'est plutôt l'une des étapes finales vers la mise en production "
"d'un code performant, pas un raccourci."

msgid ":class:`~django.utils.functional.cached_property`"
msgstr ":class:`~django.utils.functional.cached_property`"

msgid ""
"It's common to have to call a class instance's method more than once. If "
"that function is expensive, then doing so can be wasteful."
msgstr ""
"Il est courant d'avoir à appeler une méthode d'instance de classe plus d'une "
"fois. Si cette méthode est coûteuse, ces appels récurrents peuvent gaspiller "
"des ressources."

msgid ""
"Using the :class:`~django.utils.functional.cached_property` decorator saves "
"the value returned by a property; the next time the function is called on "
"that instance, it will return the saved value rather than re-computing it. "
"Note that this only works on methods that take ``self`` as their only "
"argument and that it changes the method to a property."
msgstr ""
"En utilisant le décorateur :class:`~django.utils.functional."
"cached_property`, la valeur renvoyée par la propriété est enregistrée ; lors "
"de l'appel suivant de cette fonction sur cette instance, c'est la valeur "
"enregistrée qui sera renvoyée au lieu de la recalculer. Notez que cela n'est "
"valable que pour les méthodes qui acceptent uniquement le paramètre ``self`` "
"et que cela transforme la méthode en propriété."

msgid ""
"Certain Django components also have their own caching functionality; these "
"are discussed below in the sections related to those components."
msgstr ""
"Certains composants de Django possèdent aussi leur propre fonctionnalité de "
"cache ; ils sont abordés ci-dessous dans les sections en lien avec ces "
"composants."

msgid "Understanding laziness"
msgstr "Compréhension du retardement"

msgid ""
"*Laziness* is a strategy complementary to caching. Caching avoids "
"recomputation by saving results; laziness delays computation until it's "
"actually required."
msgstr ""
"Le *retardement* (« lazyness ») est une stratégie complémentaire au cache. "
"La mise en cache évite le calcul récurrent en enregistrant les résultats ; "
"le retardement diffère le calcul jusqu'au moment où il devient réellement "
"utile."

msgid ""
"Laziness allows us to refer to things before they are instantiated, or even "
"before it's possible to instantiate them. This has numerous uses."
msgstr ""
"Le retardement permet de se référer à des éléments avant qu'ils ne soient "
"instanciés ou même avant qu'il ne soit possible de les instancier. Les "
"usages sont multiples."

msgid ""
"For example, :ref:`lazy translation <lazy-translations>` can be used before "
"the target language is even known, because it doesn't take place until the "
"translated string is actually required, such as in a rendered template."
msgstr ""
"Par exemple, les :ref:`traductions différées <lazy-translations>` peuvent "
"être utilisées avant même que la langue de destination ne soit connue, car "
"la traduction n'intervient qu'au moment où la chaîne traduite est "
"effectivement nécessaire, comme par exemple lorsqu'elle est affichée dans un "
"gabarit."

msgid ""
"Laziness is also a way to save effort by trying to avoid work in the first "
"place. That is, one aspect of laziness is not doing anything until it has to "
"be done, because it may not turn out to be necessary after all. Laziness can "
"therefore have performance implications, and the more expensive the work "
"concerned, the more there is to gain through laziness."
msgstr ""
"Le retardement est aussi une façon d'économiser des efforts en essayant "
"d'éviter carrément une opération. C'est-à-dire qu'un aspect du retardement "
"est de ne rien faire avant que cela ne devienne indispensable et il se peut "
"très bien que cela ne se produise jamais après tout. C'est cet aspect du "
"retardement qui peut affecter la performance ; plus le travail à faire est "
"conséquent, plus il y a à gagner en recourant au retardement."

msgid ""
"Python provides a number of tools for lazy evaluation, particularly through "
"the :py:term:`generator` and :py:term:`generator expression` constructs. "
"It's worth reading up on laziness in Python to discover opportunities for "
"making use of lazy patterns in your code."
msgstr ""
"Python offre un certain nombre d'outils pour l'évaluation différée, "
"particulièrement au moyen des stratagèmes de :py:term:`générateur "
"<generator>` et d’:py:term:`expression génératrice <generator-expression>`. "
"Il vaut la peine de s'intéresser au retardement en Python pour découvrir les "
"opportunités d'utilisation des modèles de retardement dans le code."

msgid "Laziness in Django"
msgstr "Retardement dans Django"

msgid ""
"Django is itself quite lazy. A good example of this can be found in the "
"evaluation of ``QuerySets``. :ref:`QuerySets are lazy <querysets-are-lazy>`. "
"Thus a ``QuerySet`` can be created, passed around and combined with other "
"``QuerySets``, without actually incurring any trips to the database to fetch "
"the items it describes. What gets passed around is the ``QuerySet`` object, "
"not the collection of items that - eventually - will be required from the "
"database."
msgstr ""
"Django lui-même utilise largement le retardement. Un bon exemple peut être "
"trouvé dans l'évaluation des jeux de requête (``QuerySets``). Les objets :"
"ref:`QuerySets sont différés par nature <querysets-are-lazy>`. Par "
"conséquent, un ``QuerySet`` peut être créé, transmis et combiné avec "
"d'autres objets ``QuerySet`` sans jamais procéder à l'accès réel à la base "
"de donnes pour récupérer les éléments qu'il représente. C'est bien l'objet "
"``QuerySet`` lui-même qui est manipulé, pas l'ensemble des éléments qu'il "
"récupérera au final depuis la base de données."

msgid ""
"On the other hand, :ref:`certain operations will force the evaluation of a "
"QuerySet <when-querysets-are-evaluated>`. Avoiding the premature evaluation "
"of a ``QuerySet`` can save making an expensive and unnecessary trip to the "
"database."
msgstr ""
"D'un autre côté, certaines opérations :ref:`forcent l'évaluation effective "
"des jeux de requête <when-querysets-are-evaluated>`. En évitant d'évaluer "
"prématurément un ``QuerySet``, on peut parfois faire l'économie d'un accès "
"coûteux et inutile à la base de données."

msgid ""
"Django also offers a :meth:`~django.utils.functional.keep_lazy` decorator. "
"This allows a function that has been called with a lazy argument to behave "
"lazily itself, only being evaluated when it needs to be. Thus the lazy "
"argument - which could be an expensive one - will not be called upon for "
"evaluation until it's strictly required."
msgstr ""
"Django propose également un décorateur :meth:`~django.utils.functional."
"keep_lazy`. Celui-ci permet à une fonction appelée avec un paramètre différé "
"de se comporter elle-même de manière différée, en retardant son évaluation "
"au moment où elle sera réellement nécessaire. De cette façon, le paramètre "
"différé, qui peut être coûteux en ressources, ne sera pas évalué tant que la "
"situation ne l'exige pas absolument."

msgid "Databases"
msgstr "Bases de données"

msgid "Database optimization"
msgstr "Optimisation de la base de données"

msgid ""
"Django's database layer provides various ways to help developers get the "
"best performance from their databases. The :doc:`database optimization "
"documentation </topics/db/optimization>` gathers together links to the "
"relevant documentation and adds various tips that outline the steps to take "
"when attempting to optimize your database usage."
msgstr ""
"La couche de base de données de Django offre plusieurs façons d'aider les "
"développeurs à tirer le meilleur de leurs bases de données. La :doc:"
"`documentation d'optimisation de la base de données </topics/db/"
"optimization>` rassemble des liens vers la documentation adéquate et ajoute "
"différentes astuces qui détaillent les étapes à suivre lorsque l'on veut "
"optimiser l'utilisation de la base de données."

msgid "Other database-related tips"
msgstr "Autres conseils liés à la base de données"

msgid ""
"Enabling :ref:`persistent-database-connections` can speed up connections to "
"the database accounts for a significant part of the request processing time."
msgstr ""
"L'activation des :ref:`persistent-database-connections` peut accélérer les "
"connexions aux comptes de la base de données, ce qui représente une partie "
"significative du temps de traitement des requêtes."

msgid ""
"This helps a lot on virtualized hosts with limited network performance, for "
"example."
msgstr ""
"Par exemple, le bénéfice est notable pour des hôtes virtualisés dont la "
"performance du réseau est limitée."

msgid "HTTP performance"
msgstr "Performances HTTP"

msgid ""
"Django comes with a few helpful pieces of :doc:`middleware </ref/"
"middleware>` that can help optimize your site's performance. They include:"
msgstr ""
"Django contient quelques :doc:`intergiciels </ref/middleware>` pouvant se "
"révéler utiles pour optimiser les performances d'un site. Il s'agit de :"

msgid ":class:`~django.middleware.http.ConditionalGetMiddleware`"
msgstr ":class:`~django.middleware.http.ConditionalGetMiddleware`"

msgid ""
"Adds support for modern browsers to conditionally GET responses based on the "
"``ETag`` and ``Last-Modified`` headers. It also calculates and sets an ETag "
"if needed."
msgstr ""
"Ajoute la prise en charge des navigateurs modernes qui récupèrent des "
"réponses GET de manière conditionnelle en se basant sur les en-têtes "
"``ETag`` et ``Last-Modified``. Il calcule et définit aussi la balise ETag si "
"nécessaire. "

msgid ":class:`~django.middleware.gzip.GZipMiddleware`"
msgstr ":class:`~django.middleware.gzip.GZipMiddleware`"

msgid ""
"Compresses responses for all modern browsers, saving bandwidth and transfer "
"time. Note that GZipMiddleware is currently considered a security risk, and "
"is vulnerable to attacks that nullify the protection provided by TLS/SSL. "
"See the warning in :class:`~django.middleware.gzip.GZipMiddleware` for more "
"information."
msgstr ""
"Compresse les réponses pour tous les navigateurs modernes, économisant de la "
"bande passante et du temps de transfert. Notez que ``GZipMiddleware`` est "
"actuellement considéré comme un risque de sécurité car il est vulnérable à "
"des attaques qui annulent la protection fournie par TLS/SSL. Lisez "
"l'avertissement dans :class:`~django.middleware.gzip.GZipMiddleware` pour "
"plus de détails."

msgid "Sessions"
msgstr "Sessions"

msgid ""
":ref:`Using cached sessions <cached-sessions-backend>` may be a way to "
"increase performance by eliminating the need to load session data from a "
"slower storage source like the database and instead storing frequently used "
"session data in memory."
msgstr ""
":ref:`L'utilisation de sessions en cache <cached-sessions-backend>` peut "
"être un moyen d'améliorer les performances en éliminant le besoin de charger "
"les données de sessions à partir d'un système de stockage plus lent comme la "
"base de données, et de le remplacer par un stockage en mémoire des sessions "
"les plus souvent utilisées."

msgid "Static files"
msgstr "Fichiers statiques"

msgid ""
"Static files, which by definition are not dynamic, make an excellent target "
"for optimization gains."
msgstr ""
"Les fichiers statiques, qui par définition ne sont pas dynamiques, "
"constituent une cible parfaite pour l'optimisation."

msgid ":class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage`"
msgstr ""
":class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage`"

msgid ""
"By taking advantage of web browsers' caching abilities, you can eliminate "
"network hits entirely for a given file after the initial download."
msgstr ""
"En tirant avantage des capacités de cache des navigateurs Web, vous pouvez "
"éliminer complètement certains accès réseau pour un fichier donné après son "
"téléchargement initial."

msgid ""
":class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage` "
"appends a content-dependent tag to the filenames of :doc:`static files </ref/"
"contrib/staticfiles>` to make it safe for browsers to cache them long-term "
"without missing future changes - when a file changes, so will the tag, so "
"browsers will reload the asset automatically."
msgstr ""
":class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage` "
"ajoute une étiquette dépendante du contenu aux noms de fichiers des :doc:"
"`fichiers statiques  </ref/contrib/staticfiles>` pour permettre aux "
"navigateurs de mettre en cache à long terme et sans risque de manquer de "
"futures modifications ; dès qu'un fichier est modifié, son étiquette l'est "
"également, ce qui fait que les navigateurs vont automatiquement le recharger."

msgid "\"Minification\""
msgstr "« Minification »"

msgid ""
"Several third-party Django tools and packages provide the ability to "
"\"minify\" HTML, CSS, and JavaScript. They remove unnecessary whitespace, "
"newlines, and comments, and shorten variable names, and thus reduce the size "
"of the documents that your site publishes."
msgstr ""
"Plusieurs outils et paquets Django de tierce partie offrent la possibilité "
"de « minifier » des fichiers HTML, CSS et JavaScript. Ils suppriment les "
"espaces blancs, les sauts de lignes et les commentaires inutiles et "
"raccourcissent les noms de variables, ce qui réduit la taille des documents "
"publiés par un site."

msgid "Template performance"
msgstr "Performance des gabarits"

msgid "Note that:"
msgstr "Notez que :"

msgid "using ``{% block %}`` is faster than using ``{% include %}``"
msgstr ""
"l'utilisation de ``{% block %}`` est plus rapide que l'utilisation de ``{% "
"include %}``"

msgid ""
"heavily-fragmented templates, assembled from many small pieces, can affect "
"performance"
msgstr ""
"les gabarits fortement fragmentés, assemblés par de nombreux petits "
"morceaux, peuvent affecter la performance"

msgid "The cached template loader"
msgstr "Le chargeur de gabarits en cache"

msgid ""
"Enabling the :class:`cached template loader <django.template.loaders.cached."
"Loader>` often improves performance drastically, as it avoids compiling each "
"template every time it needs to be rendered."
msgstr ""
"L'activation du :class:`chargeur de gabarits en cache <django.template."
"loaders.cached.Loader>`  améliore souvent les performances de manière "
"drastique, car il évite de devoir compiler chaque gabarit lors de chaque "
"rendu."

msgid "Using different versions of available software"
msgstr "Utilisation de différentes versions disponibles des logiciels"

msgid ""
"It can sometimes be worth checking whether different and better-performing "
"versions of the software that you're using are available."
msgstr ""
"Il peut parfois valoir la peine de vérifier si des versions différentes et "
"plus performantes des logiciels utilisés sont disponibles."

msgid ""
"These techniques are targeted at more advanced users who want to push the "
"boundaries of performance of an already well-optimized Django site."
msgstr ""
"Ces techniques s'adressent à des utilisateurs plus avancés qui souhaitent "
"repousser les limites de performance d'un site Django déjà bien optimisé."

msgid ""
"However, they are not magic solutions to performance problems, and they're "
"unlikely to bring better than marginal gains to sites that don't already do "
"the more basic things the right way."
msgstr ""
"Cependant, il ne s'agit pas de solutions magiques à des problèmes de "
"performance, et il est peu probable que cela apporte des gains très "
"significatifs à des sites qui ne se conforment pas encore aux bonnes "
"pratiques pour les choses les plus élémentaires."

msgid ""
"It's worth repeating: **reaching for alternatives to software you're already "
"using is never the first answer to performance problems**. When you reach "
"this level of optimization, you need a formal benchmarking solution."
msgstr ""
"Il vaut la peine de le redire : **la recherche d'implémentations logicielles "
"alternatives n'est jamais la première réponse à apporter à des problèmes de "
"performance**. Lorsque vous atteignez ce niveau d'optimisation, il est "
"nécessaire de recourir à des solutions formelles d'analyse de performance."

msgid "Newer is often - but not always - better"
msgstr "Ce qui est plus récent est souvent meilleur, mais pas toujours"

msgid ""
"It's fairly rare for a new release of well-maintained software to be less "
"efficient, but the maintainers can't anticipate every possible use-case - so "
"while being aware that newer versions are likely to perform better, don't "
"assume that they always will."
msgstr ""
"Il est relativement rare qu'une nouvelle version d'un logiciel bien maintenu "
"soit moins efficace, mais les mainteneurs ne peuvent pas non plus anticiper "
"tous les cas d'utilisation possibles. Ainsi, tout en pouvant supposer que de "
"nouvelles versions sont plus performantes, il n'est pas possible d'être "
"certain que ce sera toujours le cas."

msgid ""
"This is true of Django itself. Successive releases have offered a number of "
"improvements across the system, but you should still check the real-world "
"performance of your application, because in some cases you may find that "
"changes mean it performs worse rather than better."
msgstr ""
"C'est aussi vrai pour Django lui-même. Les versions successives ont apporté "
"un certain nombre d'améliorations dans tout le système, mais il est toujours "
"utile de contrôler les performances en utilisation réelle de votre "
"application, parce que dans certains cas, vous pourriez découvrir que "
"certaines modifications aboutissent à une perte de performance au lieu de "
"l'inverse attendu."

msgid ""
"Newer versions of Python, and also of Python packages, will often perform "
"better too - but measure, rather than assume."
msgstr ""
"Des versions plus récentes de Python ainsi que des paquets Python sont "
"souvent aussi plus performants, mais mesurer vaut toujours mieux que "
"supposer."

msgid ""
"Unless you've encountered an unusual performance problem in a particular "
"version, you'll generally find better features, reliability, and security in "
"a new release and that these benefits are far more significant than any "
"performance you might win or lose."
msgstr ""
"Sauf dans le cas où vous découvrez un problème de performance inhabituel "
"dans une version particulière, les nouvelles versions apportent généralement "
"de meilleures fonctionnalités, une meilleure stabilité et une sécurité "
"améliorée ; en règle générale, ces bénéfices sont plus importants que "
"d'éventuels gains ou pertes de performance."

msgid "Alternatives to Django's template language"
msgstr "Alternatives au langage de gabarit de Django"

msgid ""
"For nearly all cases, Django's built-in template language is perfectly "
"adequate. However, if the bottlenecks in your Django project seem to lie in "
"the template system and you have exhausted other opportunities to remedy "
"this, a third-party alternative may be the answer."
msgstr ""
"Pour presque tous les cas, le langage de gabarit intégré à Django est "
"totalement adéquat. Cependant, si les points d'étranglement d'un projet "
"Django semblent se concentrer autour du système des gabarits et que vous "
"avez épuisé les autres pistes pour y remédier, une alternative externe peut "
"être une réponse."

msgid ""
"Jinja2_ can offer performance improvements, particularly when it comes to "
"speed."
msgstr ""
"Jinja2_ peut offrir de meilleures performances, particulièrement en terme de "
"vitesse."

msgid ""
"Alternative template systems vary in the extent to which they share Django's "
"templating language."
msgstr ""
"Les systèmes de gabarit alternatifs varient dans leur similitude avec le "
"langage de gabarit de Django."

msgid ""
"*If* you experience performance issues in templates, the first thing to do "
"is to understand exactly why. Using an alternative template system may prove "
"faster, but the same gains may also be available without going to that "
"trouble - for example, expensive processing and logic in your templates "
"could be done more efficiently in your views."
msgstr ""
"*Si* vous rencontrez des problèmes de performance dans les gabarits, la "
"première chose à faire est de comprendre exactement ce qui se passe. "
"L'utilisation d'un système de gabarit externe peut se révéler plus rapide, "
"mais il est peut-être aussi possible d'obtenir la même amélioration sans "
"recourir à cette solution extrême, par exemple en effectuant de manière plus "
"efficace dans une vue la logique coûteuse se trouvant actuellement dans les "
"gabarits. "

msgid "Alternative software implementations"
msgstr "Implémentations logicielles alternatives"

msgid ""
"It may be worth checking whether Python software you're using has been "
"provided in a different implementation that can execute the same code faster."
msgstr ""
"Il peut valoir la peine de vérifier si le logiciel Python que vous utilisez "
"est disponible dans une autre implémentation pouvant exécuter le même code "
"plus rapidement."

msgid ""
"However: most performance problems in well-written Django sites aren't at "
"the Python execution level, but rather in inefficient database querying, "
"caching, and templates. If you're relying on poorly-written Python code, "
"your performance problems are unlikely to be solved by having it execute "
"faster."
msgstr ""
"Cependant, la plupart des problèmes de performance dans les sites Django "
"bien écrits ne se situent pas au niveau de l'exécution Python, mais plutôt "
"dans des requêtes de base de données trop lentes, une mauvaise exploitation "
"du cache ou des problèmes de gabarit. Si vous vous appuyez sur du code "
"Python mal écrit, les problèmes de performance ne seront probablement pas "
"résolus en exécutant ce code plus rapidement."

msgid ""
"Using an alternative implementation may introduce compatibility, deployment, "
"portability, or maintenance issues. It goes without saying that before "
"adopting a non-standard implementation you should ensure it provides "
"sufficient performance gains for your application to outweigh the potential "
"risks."
msgstr ""
"L'utilisation d'une implémentation différente peut introduire des problèmes "
"de compatibilité, de déploiement, de portabilité et de maintenance. Il va "
"sans dire qu'avant d'adopter une implémentation non standard, vous devez "
"vous assurer que les gains de performance pour l'application sont "
"suffisamment importants pour justifier les risques potentiels."

msgid "With these caveats in mind, you should be aware of:"
msgstr ""
"En tenant compte de ces mises en garde, il est intéressant de connaître :"

msgid "`PyPy <https://www.pypy.org/>`_"
msgstr "`PyPy <https://www.pypy.org/>`_"

msgid ""
"`PyPy <https://www.pypy.org/>`_ is an implementation of Python in Python "
"itself (the 'standard' Python implementation is in C). PyPy can offer "
"substantial performance gains, typically for heavyweight applications."
msgstr ""
"`PyPy `_ est une implémentation de Python en Python (l'implémentation "
"« standard » de Python est écrite en C). PyPy peut permettre des gains de "
"performance substantiels, typiquement pour les applications lourdes."

msgid ""
"A key aim of the PyPy project is `compatibility <https://www.pypy.org/compat."
"html>`_ with existing Python APIs and libraries. Django is compatible, but "
"you will need to check the compatibility of other libraries you rely on."
msgstr ""
"Un objectif clé du projet PyPy est la `compatibilité `_ avec les API et les "
"bibliothèques Python existantes. Django est compatible, mais vous devrez "
"contrôler la compatibilité avec les autres bibliothèques que vous utilisez."

msgid "C implementations of Python libraries"
msgstr "Implémentations en C des bibliothèques Python"

msgid ""
"Some Python libraries are also implemented in C, and can be much faster. "
"They aim to offer the same APIs. Note that compatibility issues and behavior "
"differences are not unknown (and not always immediately evident)."
msgstr ""
"Certaines bibliothèques Python sont aussi implémentées en C et sont parfois "
"plus rapides. Elles visent à offrir la même API. Notez qu'il n'est pas rare "
"de rencontrer des problèmes de compatibilité et des différences de "
"comportement (qui ne sont pas toujours immédiatement évidents)."

msgid "Security in Django"
msgstr "La sécurité dans Django"

msgid ""
"This document is an overview of Django's security features. It includes "
"advice on securing a Django-powered site."
msgstr ""
"Ce document est un aperçu des fonctionnalités de sécurité dans Django. Il "
"contient des conseils sur la sécurisation des sites basés sur Django."

msgid "Cross site scripting (XSS) protection"
msgstr "Protection contre le « Cross site scripting » (XSS)"

msgid ""
"XSS attacks allow a user to inject client side scripts into the browsers of "
"other users. This is usually achieved by storing the malicious scripts in "
"the database where it will be retrieved and displayed to other users, or by "
"getting users to click a link which will cause the attacker's JavaScript to "
"be executed by the user's browser. However, XSS attacks can originate from "
"any untrusted source of data, such as cookies or web services, whenever the "
"data is not sufficiently sanitized before including in a page."
msgstr ""
"Les attaques XSS permettent à un intrus d'injecter des scripts clients dans "
"les navigateurs des utilisateurs. Le principe général est de stocker les "
"scripts malveillants dans la base de données d'où ils seront repris et "
"affichés pour d'autres utilisateurs, ou encore d'amener les utilisateurs à "
"cliquer sur un lien qui va provoquer l'exécution du JavaScript de "
"l'attaquant dans le navigateur des utilisateurs. Cependant, les attaques XSS "
"peuvent provenir de n'importe quelle source de données non fiable, comme les "
"cookies ou les services Web, à chaque fois que les données ne sont pas "
"suffisamment nettoyées avant d'être incluses dans une page."

msgid ""
"Using Django templates protects you against the majority of XSS attacks. "
"However, it is important to understand what protections it provides and its "
"limitations."
msgstr ""
"L'utilisation des gabarits Django vous protège de la majorité des attaques "
"XSS. Cependant, il est important de comprendre les protections appliquées et "
"leurs limites."

msgid ""
"Django templates :ref:`escape specific characters <automatic-html-escaping>` "
"which are particularly dangerous to HTML. While this protects users from "
"most malicious input, it is not entirely foolproof. For example, it will not "
"protect the following:"
msgstr ""
"Les gabarits de Django :ref:`échappent des caractères spécifiques <automatic-"
"html-escaping>` qui sont particulièrement dangereux en HTML. Bien que cela "
"protège les utilisateurs de la plupart des saisies malveillantes, cela ne "
"constitue pas une protection absolue. Par exemple, cela ne protège pas "
"contre ceci :"

msgid ""
"If ``var`` is set to ``'class1 onmouseover=javascript:func()'``, this can "
"result in unauthorized JavaScript execution, depending on how the browser "
"renders imperfect HTML. (Quoting the attribute value would fix this case.)"
msgstr ""
"Si ``var`` contient ``'class1 onmouseover=javascript:func()'``, cela peut "
"amener à une exécution de JavaScript non autorisée, selon la manière dont le "
"navigateur produit le HTML imparfait (l'ajout de guillemets autour de cette "
"valeur d'attribut réglerait ce cas)."

msgid ""
"It is also important to be particularly careful when using ``is_safe`` with "
"custom template tags, the :tfilter:`safe` template tag, :mod:`mark_safe "
"<django.utils.safestring>`, and when autoescape is turned off."
msgstr ""
"Il est aussi important d'être particulièrement prudent lors de l'utilisation "
"de ``is_safe`` avec des balises de gabarit personnalisées, avec la balise de "
"gabarit :tfilter:`safe`, avec :mod:`mark_safe <django.utils.safestring>` et "
"quand l'échappement automatique est désactivé."

msgid ""
"In addition, if you are using the template system to output something other "
"than HTML, there may be entirely separate characters and words which require "
"escaping."
msgstr ""
"De plus, si vous utilisez le système des gabarits pour produire du contenu "
"autre que du HTML, les caractères et les mots nécessitant l'échappement "
"peuvent être totalement différents."

msgid ""
"You should also be very careful when storing HTML in the database, "
"especially when that HTML is retrieved and displayed."
msgstr ""
"Vous devez aussi être très prudent lorsque vous stockez du code HTML dans la "
"base de données, en particulier quand ce contenu est sélectionné et affiché."

msgid "Cross site request forgery (CSRF) protection"
msgstr "Protection contre le « Cross site request forgery » (CSRF)"

msgid ""
"CSRF attacks allow a malicious user to execute actions using the credentials "
"of another user without that user's knowledge or consent."
msgstr ""
"Les attaques CSRF permettent à une personne malveillante d'exécuter des "
"actions en utilisant les données d'authentification d'un autre utilisateur "
"sans que ce dernier ne s'en rende compte."

msgid ""
"Django has built-in protection against most types of CSRF attacks, providing "
"you have :ref:`enabled and used it <using-csrf>` where appropriate. However, "
"as with any mitigation technique, there are limitations. For example, it is "
"possible to disable the CSRF module globally or for particular views. You "
"should only do this if you know what you are doing. There are other :ref:"
"`limitations <csrf-limitations>` if your site has subdomains that are "
"outside of your control."
msgstr ""
"Django offre une protection intégrée contre la plupart des types d'attaques "
"CSRF, pour autant que vous l'ayez :ref:`activée et que vous l'utilisiez "
"<using-csrf>` de manière appropriée. Toutefois, comme pour toute technique "
"de protection, elle est limitée. Par exemple, il est possible de désactiver "
"le module CSRF de manière globale ou pour certaines vues. Vous ne devriez le "
"faire que si vous savez ce que vous faites. Il existe d’:ref:`autres limites "
"<csrf-limitations>` si votre site contient des sous-domaines qui ne sont pas "
"sous votre contrôle."

msgid ""
":ref:`CSRF protection works <how-csrf-works>` by checking for a secret in "
"each POST request. This ensures that a malicious user cannot \"replay\" a "
"form POST to your website and have another logged in user unwittingly submit "
"that form. The malicious user would have to know the secret, which is user "
"specific (using a cookie)."
msgstr ""
"La :ref:`protection CSRF fonctionne <how-csrf-works>` en contrôlant un jeton "
"dans chaque requête POST. Cela garantit qu'un utilisateur malveillant ne "
"peut « rejouer » un envoi de formulaire POST sur votre site Web tout en "
"faisant soumettre ce formulaire de manière involontaire par un autre "
"utilisateur connecté. L'utilisateur malveillant devrait connaître le jeton "
"qui est spécifique à l'utilisateur (en utilisant un cookie)."

msgid ""
"When deployed with :ref:`HTTPS <security-recommendation-ssl>`, "
"``CsrfViewMiddleware`` will check that the HTTP referer header is set to a "
"URL on the same origin (including subdomain and port). Because HTTPS "
"provides additional security, it is imperative to ensure connections use "
"HTTPS where it is available by forwarding insecure connection requests and "
"using HSTS for supported browsers."
msgstr ""
"Lorsqu'il est déployé avec :ref:`HTTPS <security-recommendation-ssl>`, "
"``CsrfViewMiddleware`` vérifie que l'en-tête « HTTP referer » contient une "
"URL de même origine (y compris le sous-domaine et le port). Comme HTTPS "
"offre une sécurité supplémentaire, il est impératif de s'assurer que les "
"connexions utilisent HTTPS quand c'est possible en redirigeant les requêtes "
"de connexion non sécurisées et en utilisant HSTS pour les navigateurs qui le "
"prennent en charge."

msgid ""
"Be very careful with marking views with the ``csrf_exempt`` decorator unless "
"it is absolutely necessary."
msgstr ""
"Soyez très prudent lorsque vous adaptez des vues avec le décorateur "
"``csrf_exempt`` et ne le faites qu'en cas d'absolue nécessité."

msgid "SQL injection protection"
msgstr "Protection contre l'injection SQL"

msgid ""
"SQL injection is a type of attack where a malicious user is able to execute "
"arbitrary SQL code on a database. This can result in records being deleted "
"or data leakage."
msgstr ""
"L'injection SQL est un type d'attaque où un utilisateur malveillant est "
"capable d'exécuter du code SQL arbitraire sur une base de données. Il peut "
"en résulter des suppressions d'enregistrements ou des divulgations de "
"données."

msgid ""
"Django's querysets are protected from SQL injection since their queries are "
"constructed using query parameterization. A query's SQL code is defined "
"separately from the query's parameters. Since parameters may be user-"
"provided and therefore unsafe, they are escaped by the underlying database "
"driver."
msgstr ""
"Les jeux de requête de Django sont prémunies contre les injections SQL car "
"leurs requêtes sont construites à l'aide de la paramétrisation des requêtes. "
"Le code SQL d'une requête est défini séparément de ses paramètres. Comme "
"ceux-ci peuvent provenir de l'utilisateur et donc non sécurisés, leur "
"échappement est assuré par le pilote de base de données sous-jacent."

msgid ""
"Django also gives developers power to write :ref:`raw queries <executing-raw-"
"queries>` or execute :ref:`custom sql <executing-custom-sql>`. These "
"capabilities should be used sparingly and you should always be careful to "
"properly escape any parameters that the user can control. In addition, you "
"should exercise caution when using :meth:`~django.db.models.query.QuerySet."
"extra` and :class:`~django.db.models.expressions.RawSQL`."
msgstr ""
"Django permet aussi aux développeurs d'écrire des :ref:`requêtes brutes "
"<executing-raw-queries>` ou d'exécuter du :ref:`code SQL personnalisé "
"<executing-custom-sql>`. Ces possibilités devraient être exploitées de "
"manière parcimonieuse et il faut toujours prendre la précaution d'échapper "
"proprement tout paramètre pouvant être contrôlé par l'utilisateur. De plus, "
"il faut être prudent en utilisant :meth:`~django.db.models.query.QuerySet."
"extra` et :class:`~django.db.models.expressions.RawSQL`."

msgid "Clickjacking protection"
msgstr "Protection contre le détournement de clic (« clickjacking »)"

msgid ""
"Clickjacking is a type of attack where a malicious site wraps another site "
"in a frame. This attack can result in an unsuspecting user being tricked "
"into performing unintended actions on the target site."
msgstr ""
"Le détournement de clic est un type d'attaque où un site malveillant intègre "
"un autre site dans un cadre. Cette attaque peut amener un utilisateur à "
"cliquer de manière non désirée pour effectuer des actions non volontaires "
"sur le site ciblé."

msgid ""
"Django contains :ref:`clickjacking protection <clickjacking-prevention>` in "
"the form of the :mod:`X-Frame-Options middleware <django.middleware."
"clickjacking.XFrameOptionsMiddleware>` which in a supporting browser can "
"prevent a site from being rendered inside a frame. It is possible to disable "
"the protection on a per view basis or to configure the exact header value "
"sent."
msgstr ""
"Django intègre une :ref:`protection contre le détournement de clic "
"<clickjacking-prevention>` sous la forme de :mod:`l'intergiciel X-Frame-"
"Options <django.middleware.clickjacking.XFrameOptionsMiddleware>` qui, dans "
"un navigateur qui le prend en charge, peut empêcher un site d'être affiché à "
"l'intérieur d'un cadre. Il est possible de désactiver cette protection par "
"vue ou de configurer la valeur exacte de l'en-tête envoyé."

msgid ""
"The middleware is strongly recommended for any site that does not need to "
"have its pages wrapped in a frame by third party sites, or only needs to "
"allow that for a small section of the site."
msgstr ""
"Cet intergiciel est fortement recommandé pour tout site qui n'a pas besoin "
"de voir ses pages affichées dans un cadre par des sites tiers ou qui n'en a "
"besoin que pour une section limitée du site."

msgid "SSL/HTTPS"
msgstr "SSL/HTTPS"

msgid ""
"It is always better for security to deploy your site behind HTTPS. Without "
"this, it is possible for malicious network users to sniff authentication "
"credentials or any other information transferred between client and server, "
"and in some cases -- **active** network attackers -- to alter data that is "
"sent in either direction."
msgstr ""
"Le déploiement de votre site en HTTPS est toujours mieux pour la sécurité. "
"Sans cela, il est possible que des utilisateurs malveillants du réseau "
"interceptent des données d'authentification ou toute autre information "
"transférée entre le client et le serveur et, dans certains cas, pour des "
"attaquants réseau **actifs**, que des données soient modifiées au passage, "
"dans l'une ou l'autre direction."

msgid ""
"If you want the protection that HTTPS provides, and have enabled it on your "
"server, there are some additional steps you may need:"
msgstr ""
"Si vous souhaitez profiter de la protection ajoutée par HTTPS et l'activer "
"sur votre serveur, il peut être nécessaire de procéder à quelques étapes "
"supplémentaires :"

msgid ""
"If necessary, set :setting:`SECURE_PROXY_SSL_HEADER`, ensuring that you have "
"understood the warnings there thoroughly. Failure to do this can result in "
"CSRF vulnerabilities, and failure to do it correctly can also be dangerous!"
msgstr ""
"Si nécessaire, définissez :setting:`SECURE_PROXY_SSL_HEADER`, en prenant "
"soin de bien comprendre les avertissements correspondants. Sinon, cela "
"pourrait provoquer des vulnérabilités CSRF, et son application incorrecte "
"peut aussi être dangereuse !"

msgid ""
"Set :setting:`SECURE_SSL_REDIRECT` to ``True``, so that requests over HTTP "
"are redirected to HTTPS."
msgstr ""
"Définissez :setting:`SECURE_SSL_REDIRECT` à ``True``, pour que les requêtes "
"HTTP soient redirigées vers HTTPS."

msgid ""
"Please note the caveats under :setting:`SECURE_PROXY_SSL_HEADER`. For the "
"case of a reverse proxy, it may be easier or more secure to configure the "
"main web server to do the redirect to HTTPS."
msgstr ""
"Prenez bonne note des mises en garde de :setting:`SECURE_PROXY_SSL_HEADER`. "
"Dans le cas d'un serveur mandataire inverse, il peut être plus simple ou "
"plus sûr de configurer le serveur web principal pour qu'il fasse lui-même la "
"redirection vers HTTPS."

msgid "Use 'secure' cookies."
msgstr "Utilisez des cookies « sécurisés »."

msgid ""
"If a browser connects initially via HTTP, which is the default for most "
"browsers, it is possible for existing cookies to be leaked. For this reason, "
"you should set your :setting:`SESSION_COOKIE_SECURE` and :setting:"
"`CSRF_COOKIE_SECURE` settings to ``True``. This instructs the browser to "
"only send these cookies over HTTPS connections. Note that this will mean "
"that sessions will not work over HTTP, and the CSRF protection will prevent "
"any POST data being accepted over HTTP (which will be fine if you are "
"redirecting all HTTP traffic to HTTPS)."
msgstr ""
"Si un navigateur se connecte initialement en HTTP, ce qui est le "
"comportement par défaut de la plupart des navigateurs, il est possible que "
"des cookies existants soient divulgués. Pour cette raison, vous devriez "
"définir les réglages  :setting:`SESSION_COOKIE_SECURE` et :setting:"
"`CSRF_COOKIE_SECURE` à ``True``. Cela indique au navigateur qu'il ne doit "
"envoyer les cookies que par des connexions HTTPS. Notez que cela signifie "
"que les sessions ne fonctionneront pas en HTTP et que la protection CSRF "
"empêchera l'acceptation de données POST par HTTP (ce qui ne pose pas de "
"problème si vous redirigez tout le trafic HTTP vers HTTPS)."

msgid "Use :ref:`http-strict-transport-security` (HSTS)"
msgstr "Utilisez :ref:`http-strict-transport-security` (HSTS)"

msgid ""
"HSTS is an HTTP header that informs a browser that all future connections to "
"a particular site should always use HTTPS. Combined with redirecting "
"requests over HTTP to HTTPS, this will ensure that connections always enjoy "
"the added security of SSL provided one successful connection has occurred. "
"HSTS may either be configured with :setting:`SECURE_HSTS_SECONDS`, :setting:"
"`SECURE_HSTS_INCLUDE_SUBDOMAINS`, and :setting:`SECURE_HSTS_PRELOAD`, or on "
"the web server."
msgstr ""
"HSTS est un en-tête HTTP informant le navigateur que toute connexion future "
"à un site particulier devra toujours utiliser HTTPS. Combiné avec la "
"redirection des requêtes HTTP vers HTTPS, cela garantit que les connexions "
"profiteront toujours de la sécurité ajoutée par SSL à partir du moment où "
"une connexion réussie a eu lieu. HSTS peut être configuré soit avec :setting:"
"`SECURE_HSTS_SECONDS`, :setting:`SECURE_HSTS_INCLUDE_SUBDOMAINS` et :setting:"
"`SECURE_HSTS_PRELOAD`, soit directement au niveau du serveur web."

msgid "Host header validation"
msgstr "Validation de l'en-tête Host"

msgid ""
"Django uses the ``Host`` header provided by the client to construct URLs in "
"certain cases. While these values are sanitized to prevent Cross Site "
"Scripting attacks, a fake ``Host`` value can be used for Cross-Site Request "
"Forgery, cache poisoning attacks, and poisoning links in emails."
msgstr ""
"Django utilise l'en-tête ``Host`` fourni par le client pour construire les "
"URL dans certains cas. Même si ces valeurs sont vérifiées pour empêcher les "
"attaques Cross Site Scripting, une valeur ``Host`` contrefaite peut être "
"exploitée pour des attaques de type Cross-Site Request Forgery, "
"d'empoisonnement de cache et d'empoisonnement de liens dans les courriels."

msgid ""
"Because even seemingly-secure web server configurations are susceptible to "
"fake ``Host`` headers, Django validates ``Host`` headers against the :"
"setting:`ALLOWED_HOSTS` setting in the :meth:`django.http.HttpRequest."
"get_host()` method."
msgstr ""
"Comme même des configurations de serveur Web apparemment sûres sont "
"susceptibles d'accepter des en-têtes ``Host`` contrefaits, Django valide les "
"en-têtes ``Host`` en les comparant avec le réglage  :setting:`ALLOWED_HOSTS` "
"dans la méthode :meth:`django.http.HttpRequest.get_host()`."

msgid ""
"This validation only applies via :meth:`~django.http.HttpRequest."
"get_host()`; if your code accesses the ``Host`` header directly from "
"``request.META`` you are bypassing this security protection."
msgstr ""
"Cette validation ne s'applique qu'avec :meth:`~django.http.HttpRequest."
"get_host()` ; si votre code accède directement à l'en-tête ``Host`` dans "
"``request.META``, vous outrepassez cette protection de sécurité."

msgid "For more details see the full :setting:`ALLOWED_HOSTS` documentation."
msgstr ""
"Pour plus de détails, consultez la documentation complète de :setting:"
"`ALLOWED_HOSTS`."

msgid ""
"Previous versions of this document recommended configuring your web server "
"to ensure it validates incoming HTTP ``Host`` headers. While this is still "
"recommended, in many common web servers a configuration that seems to "
"validate the ``Host`` header may not in fact do so. For instance, even if "
"Apache is configured such that your Django site is served from a non-default "
"virtual host with the ``ServerName`` set, it is still possible for an HTTP "
"request to match this virtual host and supply a fake ``Host`` header. Thus, "
"Django now requires that you set :setting:`ALLOWED_HOSTS` explicitly rather "
"than relying on web server configuration."
msgstr ""
"Des versions précédentes de ce document recommandaient de configurer le "
"serveur Web pour s'assurer qu'il valide les en-têtes HTTP ``Host`` entrants. "
"Même si c'est toujours recommandé, bien des configurations de serveurs Web "
"bien connus paraissant valider l'en-tête ``Host`` ne le font pas toujours en "
"réalité. Par exemple, même si Apache est configuré pour que votre site "
"Django soit servi depuis un hôte virtuel autre que celui par défaut ayant "
"défini ``ServerName``, il est encore possible qu'une requête HTTP "
"corresponde à cet hôte tout en fournissant un en-tête ``Host`` contrefait. "
"C'est pourquoi Django demande dorénavant que :setting:`ALLOWED_HOSTS` soit "
"défini explicitement plutôt que de se fier à la configuration du serveur Web."

msgid ""
"Additionally, Django requires you to explicitly enable support for the ``X-"
"Forwarded-Host`` header (via the :setting:`USE_X_FORWARDED_HOST` setting) if "
"your configuration requires it."
msgstr ""
"En plus, Django exige que vous activiez explicitement la prise en charge de "
"l'en-tête ``X-Forwarded-Host`` (via le réglage :setting:"
"`USE_X_FORWARDED_HOST`) si votre configuration l'exige."

msgid "Referrer policy"
msgstr "Politique de référencement"

msgid ""
"Browsers use the ``Referer`` header as a way to send information to a site "
"about how users got there. By setting a *Referrer Policy* you can help to "
"protect the privacy of your users, restricting under which circumstances the "
"``Referer`` header is set. See :ref:`the referrer policy section of the "
"security middleware reference <referrer-policy>` for details."
msgstr ""
"Les navigateurs utilisent l'en-tête ``Referer`` comme moyen d'envoyer "
"l'information de provenance de l'utilisateur à un site. En définissant une "
"*politique de référencement* (Referrer Policy), vous pouvez aider à protéger "
"la confidentialité de vos utilisateurs, en limitant les cas de figure où "
"l'en-tête ``Referer`` est défini. Consultez la :ref:`section sur la "
"politique de référencement de l'intergiciel de sécurité <referrer-policy>` "
"pour plus de détails."

msgid "Cross-origin opener policy"
msgstr "Politique d'ouverture d'origine croisée"

msgid ""
"The cross-origin opener policy (COOP) header allows browsers to isolate a "
"top-level window from other documents by putting them in a different context "
"group so that they cannot directly interact with the top-level window. If a "
"document protected by COOP opens a cross-origin popup window, the popup’s "
"``window.opener`` property will be ``null``. COOP protects against cross-"
"origin attacks. See :ref:`the cross-origin opener policy section of the "
"security middleware reference <cross-origin-opener-policy>` for details."
msgstr ""
"L'en-tête cross-origin opener policy (COOP, politique d'ouverture d'origine "
"croisée) permet aux navigateurs d'isoler une fenêtre de premier niveau à "
"partir d'autres documents en les plaçant dans une groupe de contexte "
"différent afin qu'ils ne puissent pas interagir directement avec la fenêtre "
"de premier niveau. Si un document protégé par COOP ouvre une fenêtre pop-up, "
"la propriété ``window.opener`` de celle-ci sera ``null``. COOP protège "
"contre les attaques d'origine croisée. Lisez la :ref:`section sur la "
"politique d'ouverture d'origine croisée de la référence de l'intergiciel de "
"sécurité <cross-origin-opener-policy>` pour plus de détails."

msgid ""
"Similar to the :ref:`CSRF limitations <csrf-limitations>` requiring a site "
"to be deployed such that untrusted users don't have access to any "
"subdomains, :mod:`django.contrib.sessions` also has limitations. See :ref:"
"`the session topic guide section on security <topics-session-security>` for "
"details."
msgstr ""
"Tout comme les :ref:`limites de CSRF <csrf-limitations>` exigeant qu'un site "
"soit déployé de manière à ce que des utilisateurs non fiables n'aient pas "
"accès à d'éventuels sous-domaines, :mod:`django.contrib.sessions` présente "
"également certaines limites. Consultez la :ref:`section sur la sécurité du "
"guide thématique des sessions <topics-session-security>` pour plus de "
"détails."

msgid "User-uploaded content"
msgstr "Contenu envoyé par les utilisateurs"

msgid ""
"Consider :ref:`serving static files from a cloud service or CDN <staticfiles-"
"from-cdn>` to avoid some of these issues."
msgstr ""
"Considérez le :ref:`service des fichiers statiques par un service en nuage "
"ou un CDN <staticfiles-from-cdn>` pour éviter certains de ces problèmes."

msgid ""
"If your site accepts file uploads, it is strongly advised that you limit "
"these uploads in your web server configuration to a reasonable size in order "
"to prevent denial of service (DOS) attacks. In Apache, this can be easily "
"set using the LimitRequestBody_ directive."
msgstr ""
"Si votre site accepte les téléversements de fichiers, il est fortement "
"conseillé de limiter ces téléversements dans la configuration de votre "
"serveur web à une taille raisonnable afin d'empêcher les attaques par déni "
"de service (DOS). Dans Apache, cela peut être facilement défini en utilisant "
"la directive LimitRequestBody_."

msgid ""
"If you are serving your own static files, be sure that handlers like "
"Apache's ``mod_php``, which would execute static files as code, are "
"disabled. You don't want users to be able to execute arbitrary code by "
"uploading and requesting a specially crafted file."
msgstr ""
"Si vous servez vous-même les fichiers statiques, soyez sûr que les "
"gestionnaires comme ``mod_php`` d'Apache qui pourraient exécuter des "
"fichiers statiques comme du code sont désactivés. Il n'est manifestement pas "
"souhaitable que des utilisateurs puissent exécuter du code arbitraire en "
"téléversant puis en accédant à un fichier spécialement prévu à cet effet."

msgid ""
"Django's media upload handling poses some vulnerabilities when that media is "
"served in ways that do not follow security best practices. Specifically, an "
"HTML file can be uploaded as an image if that file contains a valid PNG "
"header followed by malicious HTML. This file will pass verification of the "
"library that Django uses for :class:`~django.db.models.ImageField` image "
"processing (Pillow). When this file is subsequently displayed to a user, it "
"may be displayed as HTML depending on the type and configuration of your web "
"server."
msgstr ""
"La gestion des envois de fichiers par Django présente certaines "
"vulnérabilités lorsque ces fichiers sont ensuite servis selon des pratiques "
"non sécurisées. Plus particulièrement, un fichier HTML peut être téléversé "
"comme image si le fichier contient un en-tête PNG valide suivi de code HTML "
"malicieux. Ce fichier passera avec succès les vérifications effectuées par "
"la bibliothèque de traitement d'image utilisée par Django (Pillow) pour les "
"champs :class:`~django.db.models.ImageField`. Au moment où le fichier est "
"ensuite affiché pour un utilisateur, il se peut qu'il soit affiché comme un "
"fichier HTML en fonction du type et de la configuration du serveur Web."

msgid ""
"No bulletproof technical solution exists at the framework level to safely "
"validate all user uploaded file content, however, there are some other steps "
"you can take to mitigate these attacks:"
msgstr ""
"Il n'existe actuellement pas de solution technique à toute épreuve dans "
"l'infrastructure Django pour valider de manière sûre tous les contenus de "
"fichiers envoyés par les utilisateurs. Cependant, il existe un certain "
"nombre de mesures à prendre pour diminuer les risques de telles attaques :"

msgid ""
"One class of attacks can be prevented by always serving user uploaded "
"content from a distinct top-level or second-level domain. This prevents any "
"exploit blocked by `same-origin policy`_ protections such as cross site "
"scripting. For example, if your site runs on ``example.com``, you would want "
"to serve uploaded content (the :setting:`MEDIA_URL` setting) from something "
"like ``usercontent-example.com``. It's *not* sufficient to serve content "
"from a subdomain like ``usercontent.example.com``."
msgstr ""
"Une catégorie d'attaques peut être évitée en servant toujours les contenus "
"envoyés par les utilisateurs à partir d'un autre nom de domaine de premier "
"ou de deuxième niveau. Cela évite les attaques bloquées par les protections "
"`same-origin policy`_ telles que les scripts inter-sites. Par exemple, si "
"votre site est servi par ``example.com``, il serait imaginable de servir les "
"contenus téléversés (cf. réglage :setting:`MEDIA_URL`) à partir d'un site "
"nommé ``contenuutilisateur-example.com``. Il n'est *pas* suffisant de servir "
"le contenu à partir d'un sous-domaine tel que ``contenuutilisateur.example."
"com``."

msgid ""
"Beyond this, applications may choose to define a list of allowable file "
"extensions for user uploaded files and configure the web server to only "
"serve such files."
msgstr ""
"En plus de cette mesure, les applications peuvent choisir de définir une "
"liste des extensions de fichiers autorisées pour les fichiers téléversés par "
"les utilisateurs et configurer le serveur Web pour qu'il n'accepte de servir "
"que ces fichiers."

msgid "Additional security topics"
msgstr "Thèmes de sécurité supplémentaires"

msgid ""
"While Django provides good security protection out of the box, it is still "
"important to properly deploy your application and take advantage of the "
"security protection of the web server, operating system and other components."
msgstr ""
"Même si Django offre nativement de bonnes protections de sécurité, il est "
"toujours important de déployer proprement les applications et de profiter "
"des protections de sécurité du serveur web, du système d'exploitation et "
"d'autres composants."

msgid ""
"Make sure that your Python code is outside of the web server's root. This "
"will ensure that your Python code is not accidentally served as plain text "
"(or accidentally executed)."
msgstr ""
"Prenez soin de placer votre code Python en dehors de la racine du serveur "
"web. Ceci pour garantir que le code Python ne puisse pas être "
"accidentellement servi en texte pur (ou exécuté accidentellement)."

msgid "Take care with any :ref:`user uploaded files <file-upload-security>`."
msgstr ""
"Prenez garde aux :ref:`fichiers envoyés par les utilisateurs <file-upload-"
"security>`."

msgid ""
"Django does not throttle requests to authenticate users. To protect against "
"brute-force attacks against the authentication system, you may consider "
"deploying a Django plugin or web server module to throttle these requests."
msgstr ""
"Django ne limite pas les requêtes d'authentification des utilisateurs. Pour "
"se protéger des attaques en force brute contre le système "
"d'authentification, il faut envisager le déploiement d'un complément Django "
"ou d'un module du serveur web pour limiter ces requêtes."

msgid ""
"Keep your :setting:`SECRET_KEY`, and :setting:`SECRET_KEY_FALLBACKS` if in "
"use, secret."
msgstr ""
"Assurez-vous de conserver secret votre réglage :setting:`SECRET_KEY`, ainsi "
"que :setting:`SECRET_KEY_FALLBACKS`, si vous l'utilisez."

msgid ""
"It is a good idea to limit the accessibility of your caching system and "
"database using a firewall."
msgstr ""
"C'est une bonne pratique que de limiter l'accès au système de cache et à la "
"base de données par un pare-feu."

msgid ""
"Take a look at the Open Web Application Security Project (OWASP) `Top 10 "
"list`_ which identifies some common vulnerabilities in web applications. "
"While Django has tools to address some of the issues, other issues must be "
"accounted for in the design of your project."
msgstr ""
"Jetez un œil à la `liste Top 10`_ du projet Open Web Application Security "
"(OWASP) qui identifie quelques vulnérabilités fréquentes dans les "
"applications Web. Bien que Django possède des outils pour affronter certains "
"de ces problèmes, d'autres doivent être pris en compte durant la conception "
"de votre projet."

msgid ""
"Mozilla discusses various topics regarding `web security`_. Their pages also "
"include security principles that apply to any system."
msgstr ""
"Mozilla parle de différents sujets concernant la `sécurité Web`_. Leurs "
"pages contiennent également des principes de sécurité qui s'appliquent à "
"tout système."

msgid "Serializing Django objects"
msgstr "Sérialisation d'objets Django"

msgid ""
"Django's serialization framework provides a mechanism for \"translating\" "
"Django models into other formats. Usually these other formats will be text-"
"based and used for sending Django data over a wire, but it's possible for a "
"serializer to handle any format (text-based or not)."
msgstr ""
"L'infrastructure de sérialisation de Django fournit un mécanisme pour "
"« traduire » les modèles Django en d'autres formats. En général, ces autres "
"formats sont basés sur du texte et utilisés pour envoyer des données de "
"Django à travers le réseau, mais il est possible qu'un sérialiseur prenne en "
"charge n'importe quel format (basé sur du texte ou non)."

msgid ""
"If you just want to get some data from your tables into a serialized form, "
"you could use the :djadmin:`dumpdata` management command."
msgstr ""
"Si vous voulez simplement extraire certaines données de vos tables pour les "
"sérialiser, il est possible d'utiliser la commande de gestion :djadmin:"
"`dumpdata`."

msgid "Serializing data"
msgstr "Sérialisation de données"

msgid "At the highest level, you can serialize data like this::"
msgstr ""
"Au plus haut niveau, les données peuvent être sérialisées comme ceci ::"

msgid ""
"The arguments to the ``serialize`` function are the format to serialize the "
"data to (see `Serialization formats`_) and a :class:`~django.db.models.query."
"QuerySet` to serialize. (Actually, the second argument can be any iterator "
"that yields Django model instances, but it'll almost always be a QuerySet)."
msgstr ""
"Les paramètres de la fonction ``serialize`` sont constitués du format dans "
"lequel la sérialisation des données doit se faire (voir `Formats de "
"sérialisation`_) et d'un objet :class:`~django.db.models.query.QuerySet` "
"contenant les données (en fait, le second paramètre peut être n'importe quel "
"itérateur produisant des instances de modèles Django, mais il s'agit presque "
"toujours d'un ``QuerySet``)."

msgid "You can also use a serializer object directly::"
msgstr ""
"Il est aussi possible d'utiliser directement un objet de sérialiseur ::"

msgid ""
"This is useful if you want to serialize data directly to a file-like object "
"(which includes an :class:`~django.http.HttpResponse`)::"
msgstr ""
"C'est utile lorsque l'on veut sérialiser des données directement dans un "
"objet de type fichier (ce qui inclut aussi :class:`~django.http."
"HttpResponse`) ::"

msgid ""
"Calling :func:`~django.core.serializers.get_serializer` with an unknown :ref:"
"`format <serialization-formats>` will raise a ``django.core.serializers."
"SerializerDoesNotExist`` exception."
msgstr ""
"Si vous appelez :func:`~django.core.serializers.get_serializer` avec un :ref:"
"`format de sérialisation <serialization-formats>` inconnu, une exception "
"``django.core.serializers.SerializerDoesNotExist`` est générée."

msgid "Subset of fields"
msgstr "Sous-ensemble de champs"

msgid ""
"If you only want a subset of fields to be serialized, you can specify a "
"``fields`` argument to the serializer::"
msgstr ""
"Lorsqu'on ne veut sérialiser qu'un sous-ensemble de champs, il est possible "
"de renseigner le paramètre ``fields`` du sérialiseur ::"

msgid ""
"In this example, only the ``name`` and ``size`` attributes of each model "
"will be serialized. The primary key is always serialized as the ``pk`` "
"element in the resulting output; it never appears in the ``fields`` part."
msgstr ""
"Dans cet exemple, seuls les attributs ``name`` et ``size``  de chaque modèle "
"seront sérialisés. La clé primaire est toujours sérialisée comme élément "
"``pk`` dans le résultat ; elle n'apparaît jamais dans la partie ``fields``."

msgid ""
"Depending on your model, you may find that it is not possible to deserialize "
"a model that only serializes a subset of its fields. If a serialized object "
"doesn't specify all the fields that are required by a model, the "
"deserializer will not be able to save deserialized instances."
msgstr ""
"Selon votre modèle, il n'est parfois pas possible de désérialiser un modèle "
"qui n'a été sérialisé qu'avec un sous-ensemble de ses champs. Si un objet "
"sérialisé ne comporte pas tous les champs obligatoires d'un modèle, la "
"désérialisation ne sera pas capable d'enregistrer les instances "
"désérialisées."

msgid "Inherited models"
msgstr "Modèles hérités"

msgid ""
"If you have a model that is defined using an :ref:`abstract base class "
"<abstract-base-classes>`, you don't have to do anything special to serialize "
"that model. Call the serializer on the object (or objects) that you want to "
"serialize, and the output will be a complete representation of the "
"serialized object."
msgstr ""
"Si un modèle est défini par une :ref:`classe de base abstraite <abstract-"
"base-classes>`, il n'y a rien de particulier à faire pour pouvoir sérialiser "
"ce modèle. Appelez le sérialiseur sur l'objet (ou les objets) que vous "
"voulez sérialiser et le résultat sera une représentation complète de l'objet "
"sérialisé."

msgid ""
"However, if you have a model that uses :ref:`multi-table inheritance <multi-"
"table-inheritance>`, you also need to serialize all of the base classes for "
"the model. This is because only the fields that are locally defined on the "
"model will be serialized. For example, consider the following models::"
msgstr ""
"Cependant, si un modèle utilise de  :ref:`l'héritage multi-table  <multi-"
"table-inheritance>`, il sera alors aussi nécessaire de sérialiser toutes les "
"classes de base du modèle. C'est parce que seuls les champs définis "
"localement dans le modèle seront sérialisés. Par exemple, considérons les "
"modèles suivants ::"

msgid "If you only serialize the Restaurant model::"
msgstr "Si vous ne sérialisez que le modèle ``Restaurant``::"

msgid ""
"the fields on the serialized output will only contain the "
"``serves_hot_dogs`` attribute. The ``name`` attribute of the base class will "
"be ignored."
msgstr ""
"les champs de la sortie sérialisée ne contiendront que l'attribut "
"``serves_hot_dogs``. L'attribut ``name`` de la classe de base sera ignoré."

msgid ""
"In order to fully serialize your ``Restaurant`` instances, you will need to "
"serialize the ``Place`` models as well::"
msgstr ""
"Afin de sérialiser complètement les instances de ``Restaurant``, il sera "
"aussi nécessaire de sérialiser les modèles ``Place``::"

msgid "Deserializing data"
msgstr "Désérialisation de données"

msgid "Deserializing data is very similar to serializing it::"
msgstr "La désérialisation de données est très semblable à la sérialisation ::"

msgid ""
"As you can see, the ``deserialize`` function takes the same format argument "
"as ``serialize``, a string or stream of data, and returns an iterator."
msgstr ""
"Comme vous pouvez le voir, la fonction ``deserialize`` accepte le même "
"paramètre ``format`` que ``serialize``, une chaîne ou un flux de données, et "
"renvoie un itérateur."

msgid ""
"However, here it gets slightly complicated. The objects returned by the "
"``deserialize`` iterator *aren't* regular Django objects. Instead, they are "
"special ``DeserializedObject`` instances that wrap a created -- but unsaved "
"-- object and any associated relationship data."
msgstr ""
"Cependant, ça se complique un peu à cet endroit. Les objets renvoyés par "
"l'itérateur ``deserialize`` *ne sont pas* des objets Django normaux. Il "
"s'agit d'instances ``DeserializedObject`` spéciales qui englobent un objet "
"crée mais non enregistré ainsi que les données de liaison associées."

msgid "Calling ``DeserializedObject.save()`` saves the object to the database."
msgstr ""
"L'appel à ``DeserializedObject.save()`` enregistre l'objet dans la base de "
"données."

msgid ""
"If the ``pk`` attribute in the serialized data doesn't exist or is null, a "
"new instance will be saved to the database."
msgstr ""
"Si l'attribut ``pk`` n'existe pas dans les données sérialisées ou vaut "
"``null``, une nouvelle instance est enregistrée dans la base de données."

msgid ""
"This ensures that deserializing is a non-destructive operation even if the "
"data in your serialized representation doesn't match what's currently in the "
"database. Usually, working with these ``DeserializedObject`` instances looks "
"something like::"
msgstr ""
"Cela garantit que la désérialisation est une opération non destructive, même "
"si les données de la représentation sérialisée ne correspondent pas à ce qui "
"se trouve actuellement dans le base de données. Généralement, voici comment "
"l'on traite ces instances de ``DeserializedObject``::"

msgid ""
"In other words, the usual use is to examine the deserialized objects to make "
"sure that they are \"appropriate\" for saving before doing so. If you trust "
"your data source you can instead save the object directly and move on."
msgstr ""
"En d'autres termes, l'utilisation habituelle est d'examiner les objets "
"désérialisés pour s'assurer qu'ils sont « cohérents » avant de les "
"enregistrer. Si vous avez confiance dans votre source de données, vous "
"pouvez aussi enregistrer directement l'objet et passer à la suite."

msgid ""
"The Django object itself can be inspected as ``deserialized_object.object``. "
"If fields in the serialized data do not exist on a model, a "
"``DeserializationError`` will be raised unless the ``ignorenonexistent`` "
"argument is passed in as ``True``::"
msgstr ""
"L'objet Django lui-même peut être inspecté avec ``deserialized_object."
"object``. Si des champs dans les données sérialisées n'existent pas dans un "
"modèle, une exception ``DeserializationError`` est générée, sauf si le "
"paramètre ``ignorenonexistent`` a été transmis avec la valeur ``True``::"

msgid "Serialization formats"
msgstr "Formats de sérialisation"

msgid ""
"Django supports a number of serialization formats, some of which require you "
"to install third-party Python modules:"
msgstr ""
"Django prend en charge quelques formats de sérialisation, certains dépendant "
"de l'installation de modules Python supplémentaires ::"

msgid "Identifier"
msgstr "Identifiant"

msgid "Information"
msgstr "Information"

msgid "``xml``"
msgstr "``xml``"

msgid "Serializes to and from a simple XML dialect."
msgstr "Sérialise vers et à partir d'un dialecte XML simple."

msgid "``json``"
msgstr "``json``"

msgid "Serializes to and from JSON_."
msgstr "Sérialise vers et à partir du format JSON_."

msgid "``jsonl``"
msgstr "``jsonl``"

msgid "Serializes to and from JSONL_."
msgstr "Sérialise vers et à partir du format JSONL_."

msgid "``yaml``"
msgstr "``yaml``"

msgid ""
"Serializes to YAML (YAML Ain't a Markup Language). This serializer is only "
"available if PyYAML_ is installed."
msgstr ""
"Sérialise en YAML (YAML Ain't a Markup Language). Ce sérialiseur n'est "
"disponible que si PyYAML_ est installé."

msgid "XML"
msgstr "XML"

msgid "The basic XML serialization format looks like this:"
msgstr "Le format basique de sérialisation XML ressemble à ceci :"

msgid ""
"The whole collection of objects that is either serialized or deserialized is "
"represented by a ``<django-objects>``-tag which contains multiple "
"``<object>``-elements. Each such object has two attributes: \"pk\" and "
"\"model\", the latter being represented by the name of the app "
"(\"sessions\") and the lowercase name of the model (\"session\") separated "
"by a dot."
msgstr ""
"La collection complète des objets sérialisés ou désérialisés est représentée "
"par une balise ``<django-objects>`` contenant plusieurs éléments "
"``<object>``. Chacun de ces objets contient deux attributs : « pk » et "
"« model », ce dernier étant constitué du nom de l'application (« sessions ») "
"et du nom du modèle en minuscules (« session »), séparés par un point."

msgid ""
"Each field of the object is serialized as a ``<field>``-element sporting the "
"fields \"type\" and \"name\". The text content of the element represents the "
"value that should be stored."
msgstr ""
"Chaque champ de l'objet est sérialisé comme élément ``<field>`` contenant "
"les attributs « type » et « name » du champ. Le contenu textuel de l'élément "
"représente la valeur à stocker pour le champ."

msgid ""
"Foreign keys and other relational fields are treated a little bit "
"differently:"
msgstr ""
"Les clés étrangères et les autres champs relationnels sont traités "
"légèrement différemment :"

msgid ""
"In this example we specify that the ``auth.Permission`` object with the PK "
"27 has a foreign key to the ``contenttypes.ContentType`` instance with the "
"PK 9."
msgstr ""
"Dans cet exemple, l'objet ``auth.Permission`` ayant la clé primaire 27 "
"possède une clé étrangère vers l'instance ``contenttypes.ContentType`` ayant "
"la clé primaire 9."

msgid ""
"ManyToMany-relations are exported for the model that binds them. For "
"instance, the ``auth.User`` model has such a relation to the ``auth."
"Permission`` model:"
msgstr ""
"Les relations plusieurs-à-plusieurs sont exportées pour le modèle qui fait "
"office de lien. Par exemple, le modèle ``auth.User`` possède une telle "
"relation vers le modèle ``auth.Permission``:"

msgid ""
"This example links the given user with the permission models with PKs 46 and "
"47."
msgstr ""
"Cet exemple lie l'utilisateur donné avec les modèles de permission ayant les "
"clés primaires 46 et 47."

msgid "Control characters"
msgstr "Caractères de contrôle"

msgid ""
"If the content to be serialized contains control characters that are not "
"accepted in the XML 1.0 standard, the serialization will fail with a :exc:"
"`ValueError` exception. Read also the W3C's explanation of `HTML, XHTML, XML "
"and Control Codes <https://www.w3.org/International/questions/qa-controls>`_."
msgstr ""
"Si le contenu à sérialiser contient des caractères de contrôle qui ne sont "
"pas acceptés par le standard XML 1.0, la sérialisation échoue avec une "
"exception :exc:`ValueError`. Lisez également l'explication du W3C dans le "
"document `HTML, XHTML, XML and Control Codes <https://www.w3.org/"
"International/questions/qa-controls>`_."

msgid "JSON"
msgstr "JSON"

msgid ""
"When staying with the same example data as before it would be serialized as "
"JSON in the following way::"
msgstr ""
"Tout en conservant les mêmes données d'exemple que précédemment, voici ce "
"que donnerait leur sérialisation au format JSON ::"

msgid ""
"The formatting here is a bit simpler than with XML. The whole collection is "
"just represented as an array and the objects are represented by JSON objects "
"with three properties: \"pk\", \"model\" and \"fields\". \"fields\" is again "
"an object containing each field's name and value as property and property-"
"value respectively."
msgstr ""
"La mise en forme est ici un peu plus simple qu'en XML. L'ensemble de la "
"collection est représentée par un seul tableau et les objets sont "
"représentés par des objets JSON ayant trois propriétés : « pk », « model » "
"et « fields ». « fields » est lui-même un objet contenant les noms et "
"valeurs de chaque champ respectivement comme propriété et propriété-valeur."

msgid ""
"Foreign keys have the PK of the linked object as property value. ManyToMany-"
"relations are serialized for the model that defines them and are represented "
"as a list of PKs."
msgstr ""
"Les clés étrangères ont la clé primaire de l'objet lié comme valeur de "
"propriété. Les objets des relations plusieurs-à-plusieurs sont sérialisés "
"avec le modèle qui les définit et sont représentés sous forme de liste de "
"clés primaires."

msgid ""
"Be aware that not all Django output can be passed unmodified to :mod:`json`. "
"For example, if you have some custom type in an object to be serialized, "
"you'll have to write a custom :mod:`json` encoder for it. Something like "
"this will work::"
msgstr ""
"Il faut savoir que certains contenus Django ne peuvent pas être transmis "
"tels quels à :mod:`json`. Par exemple, si l'un de vos objets à sérialiser "
"contient un type personnalisé, vous devrez écrire un codeur :mod:`json` "
"dédié. Quelque chose comme ceci devrait fonctionner ::"

msgid ""
"You can then pass ``cls=LazyEncoder`` to the ``serializers.serialize()`` "
"function::"
msgstr ""
"Vous pouvez alors passer ``cls=LazyEncoder`` à la fonction ``serializers."
"serialize()``::"

msgid ""
"Also note that GeoDjango provides a :doc:`customized GeoJSON serializer </"
"ref/contrib/gis/serializers>`."
msgstr ""
"Notez également que GeoDjango met à disposition un :doc:`sérialiseur adapté "
"à GeoJSON </ref/contrib/gis/serializers>`."

msgid "``DjangoJSONEncoder``"
msgstr "``DjangoJSONEncoder``"

msgid ""
"The JSON serializer uses ``DjangoJSONEncoder`` for encoding. A subclass of :"
"class:`~json.JSONEncoder`, it handles these additional types:"
msgstr ""
"Le sérialiseur JSON utilise ``DjangoJSONEncoder`` pour le codage. C'est une "
"sous-classe de :class:`~json.JSONEncoder`, qui ajoute le codage de types "
"supplémentaires :"

msgid ":class:`~datetime.datetime`"
msgstr ":class:`~datetime.datetime`"

msgid ""
"A string of the form ``YYYY-MM-DDTHH:mm:ss.sssZ`` or ``YYYY-MM-DDTHH:mm:ss."
"sss+HH:MM`` as defined in `ECMA-262`_."
msgstr ""
"Une chaîne sous la forme ``AAAA-MM-JJTHH:mm:ss.sssZ`` ou ``AAAA-MM-JJTHH:mm:"
"ss.sss+HH:MM`` telle que définie dans `ECMA-262`_."

msgid ":class:`~datetime.date`"
msgstr ":class:`~datetime.date`"

msgid "A string of the form ``YYYY-MM-DD`` as defined in `ECMA-262`_."
msgstr ""
"Une chaîne sous la forme ``AAAA-MM-JJ`` telle que définie dans `ECMA-262`_."

msgid ":class:`~datetime.time`"
msgstr ":class:`~datetime.time`"

msgid "A string of the form ``HH:MM:ss.sss`` as defined in `ECMA-262`_."
msgstr ""
"Une chaîne sous la forme ``HH:MM:ss.sss`` telle que définie dans `ECMA-262`_."

msgid ":class:`~datetime.timedelta`"
msgstr ":class:`~datetime.timedelta`"

msgid ""
"A string representing a duration as defined in ISO-8601. For example, "
"``timedelta(days=1, hours=2, seconds=3.4)`` is represented as "
"``'P1DT02H00M03.400000S'``."
msgstr ""
"Une chaîne représentant une durée telle que définie par ISO-8601. Par "
"exemple, ``timedelta(days=1, hours=2, seconds=3.4)`` est représenté par "
"``'P1DT02H00M03.400000S'``."

msgid ""
":class:`~decimal.Decimal`, ``Promise`` (``django.utils.functional.lazy()`` "
"objects), :class:`~uuid.UUID`"
msgstr ""
":class:`~decimal.Decimal`, ``Promise`` (objets ``django.utils.functional."
"lazy()``), :class:`~uuid.UUID`"

msgid "A string representation of the object."
msgstr "Une représentation textuelle de l'objet."

msgid "JSONL"
msgstr "JSONL"

msgid ""
"*JSONL* stands for *JSON Lines*. With this format, objects are separated by "
"new lines, and each line contains a valid JSON object. JSONL serialized data "
"looks like this::"
msgstr ""
"*JSONL* signifie *JSON Lines*. Avec ce format, les objets sont séparés par "
"des sauts de lignes et chaque ligne contient un objet JSON valide. Les "
"données sérialisées en JSONL ressemblent à ceci ::"

msgid ""
"JSONL can be useful for populating large databases, since the data can be "
"processed line by line, rather than being loaded into memory all at once."
msgstr ""
"JSONL peut se révéler utile pour remplir de grosses bases de données, dans "
"la mesure où les données peuvent être traitées ligne par ligne, plutôt que "
"d'être toutes chargées intégralement en mémoire."

msgid "YAML"
msgstr "YAML"

msgid ""
"YAML serialization looks quite similar to JSON. The object list is "
"serialized as a sequence mappings with the keys \"pk\", \"model\" and "
"\"fields\". Each field is again a mapping with the key being name of the "
"field and the value the value:"
msgstr ""
"La sérialisation YAML ressemble beaucoup à celle de JSON. La liste d'objets "
"est sérialisée comme une suite de correspondances avec les clés « pk », "
"« model » et « fields ». Chaque champ est lui-même une correspondance entre "
"la clé contenant le nom du champ et la valeur contenant la valeur du champ :"

msgid "Referential fields are again represented by the PK or sequence of PKs."
msgstr ""
"Les champs de référence sont également représentés par la clé primaire ou "
"une suite de clés primaires."

msgid "Natural keys"
msgstr "Clés naturelles"

msgid ""
"The default serialization strategy for foreign keys and many-to-many "
"relations is to serialize the value of the primary key(s) of the objects in "
"the relation. This strategy works well for most objects, but it can cause "
"difficulty in some circumstances."
msgstr ""
"La stratégie de sérialisation par défaut pour les clés étrangères et les "
"relations plusieurs-à-plusieurs est de sérialiser la valeur des clés "
"primaires des objets de la relation. Cette stratégie fonctionne bien pour la "
"plupart des objets, mais elle peut provoquer des difficultés en certaines "
"circonstances."

msgid ""
"Consider the case of a list of objects that have a foreign key referencing :"
"class:`~django.contrib.contenttypes.models.ContentType`. If you're going to "
"serialize an object that refers to a content type, then you need to have a "
"way to refer to that content type to begin with. Since ``ContentType`` "
"objects are automatically created by Django during the database "
"synchronization process, the primary key of a given content type isn't easy "
"to predict; it will depend on how and when :djadmin:`migrate` was executed. "
"This is true for all models which automatically generate objects, notably "
"including :class:`~django.contrib.auth.models.Permission`, :class:`~django."
"contrib.auth.models.Group`, and :class:`~django.contrib.auth.models.User`."
msgstr ""
"Considérons le cas d'une liste d'objets ayant une clé étrangère référençant :"
"class:`~django.contrib.contenttypes.models.ContentType`. Si vous sérialisez "
"un objet qui se réfère à un type de contenu, il faut d'abord pouvoir trouver "
"un moyen de faire référence à ce type de contenu. Comme les objets "
"``ContentType`` sont créés automatiquement par Django durant le processus de "
"synchronisation de la base de données, la clé primaire d'un type de contenu "
"n'est pas facile à prédire ; cela dépend de la manière et du moment où :"
"djadmin:`migrate` a été exécuté. C'est pareil pour tous les modèles qui "
"génèrent automatiquement des objets, comme par exemple :class:`~django."
"contrib.auth.models.Permission`, :class:`~django.contrib.auth.models.Group` "
"et :class:`~django.contrib.auth.models.User`."

msgid ""
"You should never include automatically generated objects in a fixture or "
"other serialized data. By chance, the primary keys in the fixture may match "
"those in the database and loading the fixture will have no effect. In the "
"more likely case that they don't match, the fixture loading will fail with "
"an :class:`~django.db.IntegrityError`."
msgstr ""
"Vous ne devriez jamais inclure des objets générés automatiquement dans des "
"instantanés ou d'autres données sérialisées. Il est possible qu'avec un peu "
"de chance, les clés primaires de l'instantané correspondent à celles de la "
"base de données et que le chargement de l'instantané passe sans autre. Mais "
"dans le cas plus probable où elles ne correspondent pas, le chargement de "
"l'instantané échouera avec une exception :class:`~django.db.IntegrityError`."

msgid ""
"There is also the matter of convenience. An integer id isn't always the most "
"convenient way to refer to an object; sometimes, a more natural reference "
"would be helpful."
msgstr ""
"Il y a aussi des raisons plus pratiques. Un identifiant nombre entier n'est "
"pas toujours la manière la plus intuitive de se référer à un objet ; "
"parfois, il est bien utile de disposer d'une référence plus naturelle."

msgid ""
"It is for these reasons that Django provides *natural keys*. A natural key "
"is a tuple of values that can be used to uniquely identify an object "
"instance without using the primary key value."
msgstr ""
"C'est pour ces raisons que Django fournit les *clés naturelles*. Une clé "
"naturelle est un tuple de valeurs servant à identifier de manière unique une "
"instance d'objet sans avoir besoin de la valeur de clé primaire."

msgid "Deserialization of natural keys"
msgstr "Désérialisation des clés naturelles"

msgid "Consider the following two models::"
msgstr "Considérons les deux modèles suivants ::"

msgid ""
"Ordinarily, serialized data for ``Book`` would use an integer to refer to "
"the author. For example, in JSON, a Book might be serialized as::"
msgstr ""
"En principe, les données sérialisées de ``Book`` utilisent un nombre entier "
"pour se référer à l'auteur. Par exemple, en JSON, un objet ``Book`` pourrait "
"être sérialisé comme ::"

msgid ""
"This isn't a particularly natural way to refer to an author. It requires "
"that you know the primary key value for the author; it also requires that "
"this primary key value is stable and predictable."
msgstr ""
"Cette manière de se référer à un auteur n'est pas particulièrement "
"intuitive. Il est nécessaire de connaître la valeur de clé primaire de "
"l'auteur concerné ; il faut aussi que la clé primaire soit stable et "
"prédictible."

msgid ""
"However, if we add natural key handling to Person, the fixture becomes much "
"more humane. To add natural key handling, you define a default Manager for "
"Person with a ``get_by_natural_key()`` method. In the case of a Person, a "
"good natural key might be the pair of first and last name::"
msgstr ""
"Cependant, si nous ajoutons la capacité de clé naturelle à ``Person``, "
"l'instantané prend tout de suite un air plus humain. Pour ajouter la "
"capacité de clé naturelle, il s'agit de définir un gestionnaire par défaut "
"pour ``Person`` avec une méthode ``get_by_natural_key()``. Dans le cas de "
"``Person``, on pourrait utiliser le prénom et le nom comme bonne clé "
"naturelle ::"

msgid "Now books can use that natural key to refer to ``Person`` objects::"
msgstr ""
"Les livres peuvent maintenant utiliser la clé naturelle pour faire référence "
"aux objets ``Person``::"

msgid ""
"When you try to load this serialized data, Django will use the "
"``get_by_natural_key()`` method to resolve ``[\"Douglas\", \"Adams\"]`` into "
"the primary key of an actual ``Person`` object."
msgstr ""
"Au moment de charger ces données sérialisées, Django utilise la méthode "
"``get_by_natural_key()`` pour obtenir la clé primaire d'un objet ``Person`` "
"existant à partir des informations ``[\"Douglas\", \"Adams\"]``."

msgid ""
"Whatever fields you use for a natural key must be able to uniquely identify "
"an object. This will usually mean that your model will have a uniqueness "
"clause (either ``unique=True`` on a single field, or a ``UniqueConstraint`` "
"or ``unique_together`` over multiple fields) for the field or fields in your "
"natural key. However, uniqueness doesn't need to be enforced at the database "
"level. If you are certain that a set of fields will be effectively unique, "
"you can still use those fields as a natural key."
msgstr ""
"Quels que soient les champs utilisés pour définir une clé primaire, ils "
"doivent pouvoir identifier un objet de manière unique. Cela signifie "
"généralement que le modèle possède une clause d'unicité (soit "
"``unique=True`` pour un seul champ ou ``UniqueConstraint`` ou "
"``unique_together`` pour plusieurs champs) pour le ou les champs composant "
"la clé naturelle. Cependant, l'unicité ne doit pas nécessairement être "
"garantie au niveau de la base de données. Si vous êtes sûr qu'un certain "
"ensemble de champs sera effectivement unique, vous pouvez très bien utiliser "
"ces champs comme clé naturelle."

msgid ""
"Deserialization of objects with no primary key will always check whether the "
"model's manager has a ``get_by_natural_key()`` method and if so, use it to "
"populate the deserialized object's primary key."
msgstr ""
"La désérialisation d'objets sans clé primaire vérifie toujours si le "
"gestionnaire du modèle possède une méthode ``get_by_natural_key()`` et "
"l'utilise le cas échéant pour compléter la clé primaire des objets "
"désérialisés."

msgid "Serialization of natural keys"
msgstr "Sérialisation des clés naturelles"

msgid ""
"So how do you get Django to emit a natural key when serializing an object? "
"Firstly, you need to add another method -- this time to the model itself::"
msgstr ""
"Comment donc pousser Django à émettre une clé naturelle lorsqu'il sérialise "
"un objet ? Premièrement, vous devez ajouter une autre méthode, cette fois "
"dans le modèle lui-même ::"

msgid ""
"That method should always return a natural key tuple -- in this example, "
"``(first name, last name)``. Then, when you call ``serializers."
"serialize()``, you provide ``use_natural_foreign_keys=True`` or "
"``use_natural_primary_keys=True`` arguments:"
msgstr ""
"Cette méthode doit toujours renvoyer un tuple de clés naturelles ; dans cet "
"exemple, il s'agit de ``(first name, last name)``. Puis, lors de l'appel à "
"``serializers.serialize()``, il faut indiquer les paramètres "
"``use_natural_foreign_keys=True`` ou ``use_natural_primary_keys=True``:"

msgid ""
"When ``use_natural_foreign_keys=True`` is specified, Django will use the "
"``natural_key()`` method to serialize any foreign key reference to objects "
"of the type that defines the method."
msgstr ""
"Lorsque ``use_natural_foreign_keys=True`` est indiqué, Django utilise la "
"méthode ``natural_key()`` pour sérialiser toute référence de clé étrangère à "
"des objets d'un type définissant cette méthode."

msgid ""
"When ``use_natural_primary_keys=True`` is specified, Django will not provide "
"the primary key in the serialized data of this object since it can be "
"calculated during deserialization::"
msgstr ""
"Lorsque ``use_natural_primary_keys=True`` est indiqué, Django ne produit pas "
"de clé primaire dans les données sérialisées de cet objet dans la mesure où "
"elle peut être calculée durant la désérialisation ::"

msgid ""
"This can be useful when you need to load serialized data into an existing "
"database and you cannot guarantee that the serialized primary key value is "
"not already in use, and do not need to ensure that deserialized objects "
"retain the same primary keys."
msgstr ""
"Cela peut être utile lorsqu'il y a besoin de charger des données sérialisées "
"dans une base de données existante et qu'il n'est pas possible de garantir "
"que les valeurs de clés primaires sérialisées ne sont pas déjà utilisées, et "
"qu'il n'est pas nécessaire de conserver les clés primaires exactes des "
"objets désérialisés."

msgid ""
"If you are using :djadmin:`dumpdata` to generate serialized data, use the :"
"option:`dumpdata --natural-foreign` and :option:`dumpdata --natural-primary` "
"command line flags to generate natural keys."
msgstr ""
"Si vous utilisez :djadmin:`dumpdata` pour générer des données sérialisées, "
"utilisez les options de ligne de commande :option:`dumpdata --natural-"
"foreign` et :option:`dumpdata --natural-primary` pour générer des clés "
"naturelles."

msgid ""
"You don't need to define both ``natural_key()`` and "
"``get_by_natural_key()``. If you don't want Django to output natural keys "
"during serialization, but you want to retain the ability to load natural "
"keys, then you can opt to not implement the ``natural_key()`` method."
msgstr ""
"Il n'est pas obligatoire de définir à la fois ``natural_key()`` et "
"``get_by_natural_key()``. Si vous ne souhaitez pas que Django produise des "
"clés naturelles pendant la sérialisation mais que vous voulez conserver la "
"possibilité de charger des clés naturelles, vous pouvez choisir de "
"n'implémenter que la méthode ``natural_key()``."

msgid ""
"Conversely, if (for some strange reason) you want Django to output natural "
"keys during serialization, but *not* be able to load those key values, just "
"don't define the ``get_by_natural_key()`` method."
msgstr ""
"Inversement, si (pour une raison étrange) vous voulez que Django produise "
"des clés naturelles pendant la sérialisation, mais qu'il ne puisse *pas* "
"charger ces valeurs, il suffit d'implémenter la méthode "
"``get_by_natural_key()``."

msgid "Natural keys and forward references"
msgstr "Clés naturelles et références en aval"

msgid ""
"Sometimes when you use :ref:`natural foreign keys <topics-serialization-"
"natural-keys>` you'll need to deserialize data where an object has a foreign "
"key referencing another object that hasn't yet been deserialized. This is "
"called a \"forward reference\"."
msgstr ""
"Parfois, lors de l'utilisation de :ref:`clés étrangères naturelles <topics-"
"serialization-natural-keys>`, il est nécessaire de désérialiser des données "
"d'un objet possédant une clé étrangère se référant à un autre objet pas "
"encore sérialisé. On appelle cela une « référence en aval »."

msgid "For instance, suppose you have the following objects in your fixture::"
msgstr ""
"Par exemple, supposons que votre instantané contiennent les objets "
"suivants ::"

msgid ""
"In order to handle this situation, you need to pass "
"``handle_forward_references=True`` to ``serializers.deserialize()``. This "
"will set the ``deferred_fields`` attribute on the ``DeserializedObject`` "
"instances. You'll need to keep track of ``DeserializedObject`` instances "
"where this attribute isn't ``None`` and later call "
"``save_deferred_fields()`` on them."
msgstr ""
"Afin de pouvoir gérer cette situation, il faut passer "
"``handle_forward_references=True`` à ``serializers.deserialize()``. Cela "
"marquera l'attribut ``deferred_fields`` sur les instances "
"``DeserializedObject``. Vous devez ensuite garder la trace des instances "
"``DeserializedObject`` où cet attribute n'est pas ``None`` et appeler plus "
"tard ``save_deferred_fields()`` sur ces instances."

msgid "Typical usage looks like this::"
msgstr "Voici à quoi peut ressembler une utilisation typique ::"

msgid ""
"For this to work, the ``ForeignKey`` on the referencing model must have "
"``null=True``."
msgstr ""
"Pour que ça fonctionne, la clé ``ForeignKey`` du modèle qui y fait référence "
"doit avoir ``null=True``."

msgid "Dependencies during serialization"
msgstr "Dépendances durant la sérialisation"

msgid ""
"It's often possible to avoid explicitly having to handle forward references "
"by taking care with the ordering of objects within a fixture."
msgstr ""
"Il est souvent possible d'éviter de devoir gérer explicitement les "
"références en aval en prenant soin de placer les objets d'un instantané dans "
"le bon ordre."

msgid ""
"To help with this, calls to :djadmin:`dumpdata` that use the :option:"
"`dumpdata --natural-foreign` option will serialize any model with a "
"``natural_key()`` method before serializing standard primary key objects."
msgstr ""
"Pour aider à faire cela, les appels à :djadmin:`dumpdata` utilisant "
"l'option :option:`dumpdata --natural-foreign` sérialisent en premier les "
"modèles possédant une méthode ``natural_key()``, avant de sérialiser les "
"objets à l'aide de leur clé primaire standard."

msgid ""
"However, this may not always be enough. If your natural key refers to "
"another object (by using a foreign key or natural key to another object as "
"part of a natural key), then you need to be able to ensure that the objects "
"on which a natural key depends occur in the serialized data before the "
"natural key requires them."
msgstr ""
"Cependant, ce n'est pas toujours suffisant. Si une clé naturelle se réfère à "
"un autre objet (en utilisant une clé étrangère ou une clé naturelle vers un "
"autre objet faisant partie d'une clé naturelle), il faut être capable de "
"garantir que les objets dont dépend une clé naturelle apparaissent dans les "
"données sérialisées avant la clé naturelle qui en a besoin."

msgid ""
"To control this ordering, you can define dependencies on your "
"``natural_key()`` methods. You do this by setting a ``dependencies`` "
"attribute on the ``natural_key()`` method itself."
msgstr ""
"Pour contrôler cet ordre d'apparition, il est possible de définir des "
"dépendances dans les méthodes ``natural_key()``. Cela se fait en définissant "
"un attribut ``dependencies`` sur la méthode ``natural_key()`` elle-même."

msgid ""
"For example, let's add a natural key to the ``Book`` model from the example "
"above::"
msgstr ""
"Par exemple, ajoutons une clé naturelle au modèle ``Book`` à partir de "
"l'exemple ci-dessus ::"

msgid ""
"The natural key for a ``Book`` is a combination of its name and its author. "
"This means that ``Person`` must be serialized before ``Book``. To define "
"this dependency, we add one extra line::"
msgstr ""
"La clé naturelle d'un objet ``Book`` est une combinaison de son nom et de "
"son auteur. Cela signifie que ``Person`` doit être sérialisé avant ``Book``. "
"Pour définir cette dépendance, nous ajoutons une ligne supplémentaire ::"

msgid ""
"This definition ensures that all ``Person`` objects are serialized before "
"any ``Book`` objects. In turn, any object referencing ``Book`` will be "
"serialized after both ``Person`` and ``Book`` have been serialized."
msgstr ""
"Cette définition garantit que tous les objets ``Person`` sont sérialisés "
"avant les objets ``Book``. Sur le même principe, tout objet référençant "
"``Book`` sera sérialisé après les objets ``Person`` et ``Book``."

msgid "Django settings"
msgstr "Les réglages de Django"

msgid ""
"A Django settings file contains all the configuration of your Django "
"installation. This document explains how settings work and which settings "
"are available."
msgstr ""
"Un fichier de réglages Django contient toute la configuration de votre "
"installation de Django. Ce document explique le fonctionnement des réglages "
"et quels sont les réglages disponibles."

msgid "The basics"
msgstr "Principes de base"

msgid "A settings file is just a Python module with module-level variables."
msgstr ""
"Un fichier de réglages n'est qu'un module Python avec des variables de "
"niveau module."

msgid "Here are a couple of example settings::"
msgstr "Voici quelques exemples de réglages ::"

msgid ""
"If you set :setting:`DEBUG` to ``False``, you also need to properly set the :"
"setting:`ALLOWED_HOSTS` setting."
msgstr ""
"Si vous définissez :setting:`DEBUG` à ``False``, vous devez également "
"définir correctement le réglage :setting:`ALLOWED_HOSTS`."

msgid "Because a settings file is a Python module, the following apply:"
msgstr ""
"Comme un fichier de réglages est un module Python, les points suivants "
"s'appliquent :"

msgid "It doesn't allow for Python syntax errors."
msgstr "Il n'accepte pas les erreurs de syntaxe Python."

msgid ""
"It can assign settings dynamically using normal Python syntax. For example::"
msgstr ""
"Il peut attribuer des valeurs de réglages dynamiques avec la syntaxe Python "
"habituelle. Par exemple ::"

msgid "It can import values from other settings files."
msgstr "Il peut importer des valeurs provenant d'autres fichiers de réglages."

msgid "Designating the settings"
msgstr "Définition du fichier de réglages"

msgid ""
"When you use Django, you have to tell it which settings you're using. Do "
"this by using an environment variable, :envvar:`DJANGO_SETTINGS_MODULE`."
msgstr ""
"Quand vous utilisez Django, vous devez lui indiquer le fichier de réglages "
"qu'il doit utiliser. Vous pouvez le faire par une variable d'environnement, :"
"envvar:`DJANGO_SETTINGS_MODULE`."

msgid ""
"The value of :envvar:`DJANGO_SETTINGS_MODULE` should be in Python path "
"syntax, e.g. ``mysite.settings``. Note that the settings module should be on "
"the Python :py:data:`sys.path`."
msgstr ""
"La valeur de :envvar:`DJANGO_SETTINGS_MODULE` doit respecter la syntaxe des "
"chemins Python, par ex. ``mysite.settings``. Notez que le module de réglages "
"doit se trouver dans le chemin système :py:data:`sys.path` de Python."

msgid "The ``django-admin`` utility"
msgstr "L'utilitaire ``django-admin``"

msgid ""
"When using :doc:`django-admin </ref/django-admin>`, you can either set the "
"environment variable once, or explicitly pass in the settings module each "
"time you run the utility."
msgstr ""
"Quand vous utilisez :doc:`django-admin </ref/django-admin>`, vous pouvez "
"soit définir une seule fois la variable d'environnement, soit lui "
"transmettre explicitement le module de réglages à chaque lancement de la "
"commande."

msgid "Example (Unix Bash shell):"
msgstr "Exemple (shell Unix bash) :"

msgid "Example (Windows shell):"
msgstr "Exemple (shell Windows) :"

msgid ""
"Use the ``--settings`` command-line argument to specify the settings "
"manually:"
msgstr ""
"Utilisez le paramètre de ligne de commande ``--settings`` pour indiquer "
"manuellement le fichier de réglages :"

msgid "On the server (``mod_wsgi``)"
msgstr "Sur le serveur (``mod_wsgi``)"

msgid ""
"In your live server environment, you'll need to tell your WSGI application "
"what settings file to use. Do that with ``os.environ``::"
msgstr ""
"Dans l'environnement de production de votre serveur, vous devrez indiquer à "
"votre application WSGI quel fichier de réglages il doit utiliser. Faites-le "
"avec ``os.environ``::"

msgid ""
"Read the :doc:`Django mod_wsgi documentation </howto/deployment/wsgi/"
"modwsgi>` for more information and other common elements to a Django WSGI "
"application."
msgstr ""
"Lisez la :doc:`documentation Django de mod_wsgi </howto/deployment/wsgi/"
"modwsgi>` pour plus d'informations ainsi que d'autres éléments communs à "
"toute application WSGI Django."

msgid "Default settings"
msgstr "Réglages par défaut"

msgid ""
"A Django settings file doesn't have to define any settings if it doesn't "
"need to. Each setting has a sensible default value. These defaults live in "
"the module :source:`django/conf/global_settings.py`."
msgstr ""
"Un fichier de réglages Django n'a aucune obligation de définir des réglages "
"s'il n'y a pas de besoins avérés. Chaque réglage possède une valeur par "
"défaut logique. Ces valeurs par défaut se trouvent dans le module :source:"
"`django/conf/global_settings.py`."

msgid "Here's the algorithm Django uses in compiling settings:"
msgstr "Voici l'algorithme utilisé par Django pour compiler les réglages :"

msgid "Load settings from ``global_settings.py``."
msgstr "Charger les réglages de ``global_settings.py``."

msgid ""
"Load settings from the specified settings file, overriding the global "
"settings as necessary."
msgstr ""
"Charger les réglages du fichier de réglages en vigueur, surchargeant les "
"réglages globaux si nécessaire."

msgid ""
"Note that a settings file should *not* import from ``global_settings``, "
"because that's redundant."
msgstr ""
"Notez qu'un fichier de réglages ne doit *pas* importer ``global_settings``, "
"car ce serait redondant."

msgid "Seeing which settings you've changed"
msgstr "Vision des réglages modifiés"

msgid ""
"The command ``python manage.py diffsettings`` displays differences between "
"the current settings file and Django's default settings."
msgstr ""
"La commande ``python manage.py diffsettings`` affiche les différences entre "
"le fichier de réglages actuel et les réglages par défaut de Django."

msgid "For more, see the :djadmin:`diffsettings` documentation."
msgstr ""
"Pour en savoir plus, lisez la documentation de :djadmin:`diffsettings`."

msgid "Using settings in Python code"
msgstr "Utilisation des réglages dans le code Python"

msgid ""
"In your Django apps, use settings by importing the object ``django.conf."
"settings``. Example::"
msgstr ""
"Dans vos applications Django, utilisez les réglages en important l'objet "
"``django.conf.settings``. Exemple ::"

msgid ""
"Note that ``django.conf.settings`` isn't a module -- it's an object. So "
"importing individual settings is not possible::"
msgstr ""
"Notez que ``django.conf.settings`` n'est pas un module, c'est un objet. "
"L'importation de réglages individuels n'est donc pas possible ::"

msgid ""
"Also note that your code should *not* import from either ``global_settings`` "
"or your own settings file. ``django.conf.settings`` abstracts the concepts "
"of default settings and site-specific settings; it presents a single "
"interface. It also decouples the code that uses settings from the location "
"of your settings."
msgstr ""
"Notez également que votre code ne doit *pas* importer ni de "
"``global_settings``, ni de votre propre fichier de réglages. ``django.conf."
"settings`` est une abstraction du concept de réglages par défaut et de "
"réglages spécifiques par site ; il présente une interface unifiée. Il "
"découple aussi le code qui utilise les réglages de l'emplacement de vos "
"réglages."

msgid "Altering settings at runtime"
msgstr "Modification des réglages en cours d'exécution"

msgid ""
"You shouldn't alter settings in your applications at runtime. For example, "
"don't do this in a view::"
msgstr ""
"Vous ne devriez pas modifier les réglages de vos applications durant leur "
"exécution. Par exemple, ne faites pas ceci dans une vue ::"

msgid "The only place you should assign to settings is in a settings file."
msgstr ""
"Le seul endroit où des réglages doivent recevoir des valeurs est le fichier "
"des réglages."

msgid "Security"
msgstr "Sécurité"

msgid ""
"Because a settings file contains sensitive information, such as the database "
"password, you should make every attempt to limit access to it. For example, "
"change its file permissions so that only you and your web server's user can "
"read it. This is especially important in a shared-hosting environment."
msgstr ""
"Dans la mesure où un fichier de réglages contient des informations sensibles "
"comme des mots de passe de base de données, vous devez faire tout votre "
"possible pour limiter l'accès à ces fichiers. Par exemple, modifiez les "
"permissions du fichier pour que seuls vous et le serveur web puissiez le "
"lire. C'est particulièrement important dans le contexte d'un environnement "
"d'hébergement partagé."

msgid "Available settings"
msgstr "Réglages disponibles"

msgid ""
"For a full list of available settings, see the :doc:`settings reference </"
"ref/settings>`."
msgstr ""
"Pour une liste complète des réglages disponibles, consultez la :doc:"
"`référence des réglages </ref/settings>`."

msgid "Creating your own settings"
msgstr "Création de ses propres réglages"

msgid ""
"There's nothing stopping you from creating your own settings, for your own "
"Django apps, but follow these guidelines:"
msgstr ""
"Rien ne vous empêche de créer vos propres réglages pour vos propres "
"applications Django, mais suivez ces lignes de conduite :"

msgid "Setting names must be all uppercase."
msgstr "Les noms des réglages doivent être tout en majuscules."

msgid "Don't reinvent an already-existing setting."
msgstr "Ne réinventez pas un réglage existant."

msgid ""
"For settings that are sequences, Django itself uses lists, but this is only "
"a convention."
msgstr ""
"Pour les réglages qui sont de type liste, Django utilise lui-même des listes "
"Python, mais ce n'est qu'une convention."

msgid "Using settings without setting :envvar:`DJANGO_SETTINGS_MODULE`"
msgstr "Utilisation des réglages sans définir :envvar:`DJANGO_SETTINGS_MODULE`"

msgid ""
"In some cases, you might want to bypass the :envvar:`DJANGO_SETTINGS_MODULE` "
"environment variable. For example, if you're using the template system by "
"itself, you likely don't want to have to set up an environment variable "
"pointing to a settings module."
msgstr ""
"Dans certains cas, il peut être souhaitable de ne pas tenir compte de la "
"variable d'environnement :envvar:`DJANGO_SETTINGS_MODULE`. Par exemple, si "
"vous utilisez le système de gabarits pour lui-même, il n'est probablement "
"pas utile de configurer une variable d'environnement pointant vers un module "
"de réglages."

msgid ""
"In these cases, you can configure Django's settings manually. Do this by "
"calling:"
msgstr ""
"Dans ces situations, vous pouvez configurer manuellement les réglages de "
"Django. Faites-le en appelant :"

msgid ""
"Pass ``configure()`` as many keyword arguments as you'd like, with each "
"keyword argument representing a setting and its value. Each argument name "
"should be all uppercase, with the same name as the settings described above. "
"If a particular setting is not passed to ``configure()`` and is needed at "
"some later point, Django will use the default setting value."
msgstr ""
"Vous pouvez transmettre autant de paramètres que nécessaire à "
"``configure()``, sachant que chaque paramètre nommé constituera un réglage "
"avec sa valeur. Chaque nom de paramètre devrait être entièrement en "
"majuscules et correspondre à l'un des paramètres existants. Si un réglage "
"particulier n'est pas transmis à ``configure()`` et qu'il est requis plus "
"loin dans le code, Django utilise alors la valeur par défaut du réglage."

msgid ""
"Configuring Django in this fashion is mostly necessary -- and, indeed, "
"recommended -- when you're using a piece of the framework inside a larger "
"application."
msgstr ""
"La configuration de Django de cette manière est surtout nécessaire (et même "
"recommandée) lorsque vous utilisez une partie de l'infrastructure Django "
"dans une application plus vaste."

msgid ""
"Consequently, when configured via ``settings.configure()``, Django will not "
"make any modifications to the process environment variables (see the "
"documentation of :setting:`TIME_ZONE` for why this would normally occur). "
"It's assumed that you're already in full control of your environment in "
"these cases."
msgstr ""
"En conséquence, quand Django est configuré par ``settings.configure()``, il "
"ne fera aucune modification aux variables d'environnement du processus "
"(consultez la documentation de :setting:`TIME_ZONE` pour savoir pourquoi "
"cela se passe normalement). Django suppose alors que vous avez déjà le "
"contrôle complet de votre environnement."

msgid "Custom default settings"
msgstr "Réglages par défaut personnalisés"

msgid ""
"If you'd like default values to come from somewhere other than ``django.conf."
"global_settings``, you can pass in a module or class that provides the "
"default settings as the ``default_settings`` argument (or as the first "
"positional argument) in the call to ``configure()``."
msgstr ""
"Si vous aimeriez que des valeurs par défaut proviennent d'endroits "
"différents de ``django.conf.global_settings``, vous pouvez transmettre un "
"module ou une classe responsable de fournir les valeurs par défaut dans le "
"paramètre ``default_settings`` (ou comme premier paramètre positionnel) dans "
"l'appel à ``configure()``."

msgid ""
"In this example, default settings are taken from ``myapp_defaults``, and "
"the :setting:`DEBUG` setting is set to ``True``, regardless of its value in "
"``myapp_defaults``::"
msgstr ""
"Dans cet exemple, les réglages par défaut proviennent de ``myapp_defaults`` "
"et le paramètre :setting:`DEBUG` est défini à ``True``, quelle que soit sa "
"valeur dans ``myapp_defaults``::"

msgid ""
"The following example, which uses ``myapp_defaults`` as a positional "
"argument, is equivalent::"
msgstr ""
"L'exemple suivant qui place ``myapp_defaults`` comme paramètre positionnel "
"est équivalent ::"

msgid ""
"Normally, you will not need to override the defaults in this fashion. The "
"Django defaults are sufficiently tame that you can safely use them. Be aware "
"that if you do pass in a new default module, it entirely *replaces* the "
"Django defaults, so you must specify a value for every possible setting that "
"might be used in the code you are importing. Check in ``django.conf.settings."
"global_settings`` for the full list."
msgstr ""
"Normalement, il n'est pas nécessaire de surcharger les valeurs par défaut de "
"cette manière. Les valeurs par défaut de Django sont suffisamment éprouvées "
"pour pouvoir les utiliser avec confiance. Sachez que lorsque vous "
"transmettez un nouveau module de valeurs par défaut, il *remplace* "
"entièrement les valeurs par défaut de Django, il est donc indispensable de "
"fournir des valeurs pour chaque réglage potentiellement utilisé dans le code "
"que vous importez. Parcourez ``django.conf.settings.global_settings`` pour "
"voir la liste complète."

msgid "Either ``configure()`` or :envvar:`DJANGO_SETTINGS_MODULE` is required"
msgstr "Nécessité de ``configure()`` ou de :envvar:`DJANGO_SETTINGS_MODULE`"

msgid ""
"If you're not setting the :envvar:`DJANGO_SETTINGS_MODULE` environment "
"variable, you *must* call ``configure()`` at some point before using any "
"code that reads settings."
msgstr ""
"Si vous ne définissez pas la variable d'environnement :envvar:"
"`DJANGO_SETTINGS_MODULE`, vous *devez* appeler ``configure()`` avant que du "
"code se mette à lire des réglages."

msgid ""
"If you don't set :envvar:`DJANGO_SETTINGS_MODULE` and don't call "
"``configure()``, Django will raise an ``ImportError`` exception the first "
"time a setting is accessed."
msgstr ""
"Si vous ne définissez pas :envvar:`DJANGO_SETTINGS_MODULE` et n'appelez pas "
"``configure()``, Django lèvera une exception ``ImportError`` lors du premier "
"accès à un réglage."

msgid ""
"If you set :envvar:`DJANGO_SETTINGS_MODULE`, access settings values somehow, "
"*then* call ``configure()``, Django will raise a ``RuntimeError`` indicating "
"that settings have already been configured. There is a property for this "
"purpose:"
msgstr ""
"Si vous définissez :envvar:`DJANGO_SETTINGS_MODULE`, puis vous accédez à des "
"valeurs de réglages d'une manière ou d'une autre, *puis* vous appelez "
"``configure()``, Django lèvera une exception ``RuntimeError`` indiquant que "
"les réglages ont déjà été configurés. Il existe une propriété pour ce cas de "
"figure :"

msgid ""
"Also, it's an error to call ``configure()`` more than once, or to call "
"``configure()`` after any setting has been accessed."
msgstr ""
"Il est également erroné d'appeler ``configure()`` plus d'une fois, ou "
"d'appeler ``configure()`` après qu'au moins un réglage ait été lu."

msgid ""
"It boils down to this: Use exactly one of either ``configure()`` or :envvar:"
"`DJANGO_SETTINGS_MODULE`. Not both, and not neither."
msgstr ""
"En conclusion : utilisez soit ``configure()``, soit :envvar:"
"`DJANGO_SETTINGS_MODULE`, mais jamais les deux et toujours au moins un des "
"deux."

msgid "Calling ``django.setup()`` is required for \"standalone\" Django usage"
msgstr ""
"Appel obligatoire de ``django.setup()`` pour utiliser Django de manière "
"« indépendante »"

msgid ""
"If you're using components of Django \"standalone\" -- for example, writing "
"a Python script which loads some Django templates and renders them, or uses "
"the ORM to fetch some data -- there's one more step you'll need in addition "
"to configuring settings."
msgstr ""
"Si vous utilisez des composants de Django de manière indépendante, par "
"exemple en écrivant un script Python qui charge certains gabarits Django et "
"les produit, ou en utilisant l'ORM pour récupérer certaines données, une "
"étape supplémentaire est nécessaire en plus de la configuration des réglages."

msgid ""
"After you've either set :envvar:`DJANGO_SETTINGS_MODULE` or called "
"``configure()``, you'll need to call :func:`django.setup()` to load your "
"settings and populate Django's application registry. For example::"
msgstr ""
"Après avoir soit défini :envvar:`DJANGO_SETTINGS_MODULE` ou appelé "
"``configure()``, vous devrez appeler :func:`django.setup()` pour charger les "
"réglages et remplir le registre des applications de Django. Par exemple ::"

msgid ""
"Note that calling ``django.setup()`` is only necessary if your code is truly "
"standalone. When invoked by your web server, or through :doc:`django-admin </"
"ref/django-admin>`, Django will handle this for you."
msgstr ""
"Notez que l'appel à ``django.setup()`` n'est nécessaire que si votre code "
"est réellement indépendant. Lorsqu'il est appelé par un serveur web ou par "
"l'intermédiaire de :doc:`django-admin </ref/django-admin>`, Django se charge "
"de procéder à cette initialisation."

msgid "``django.setup()`` may only be called once."
msgstr "``django.setup()`` ne peut être appelée qu'une seule fois."

msgid ""
"Therefore, avoid putting reusable application logic in standalone scripts so "
"that you have to import from the script elsewhere in your application. If "
"you can't avoid that, put the call to ``django.setup()`` inside an ``if`` "
"block::"
msgstr ""
"Ainsi, évitez de placer de la logique applicative réutilisable dans des "
"scripts autonomes pour ne pas devoir importer le script depuis un autre "
"endroit de votre application. Si c'est inévitable, placez l'appel à ``django."
"setup()`` à l'intérieur d'un bloc ``if``::"

msgid ":doc:`The Settings Reference </ref/settings>`"
msgstr ":doc:`La référence des réglages </ref/settings>`"

msgid "Contains the complete list of core and contrib app settings."
msgstr ""
"Contient une liste complète des réglages de Django et de ses applications "
"« contrib »."

msgid "Signals"
msgstr "Signaux"

msgid ""
"Django includes a \"signal dispatcher\" which helps decoupled applications "
"get notified when actions occur elsewhere in the framework. In a nutshell, "
"signals allow certain *senders* to notify a set of *receivers* that some "
"action has taken place. They're especially useful when many pieces of code "
"may be interested in the same events."
msgstr ""
"Django contient un « distributeur de signaux » qui permet aux applications "
"découplées de pouvoir plus facilement être averties quand des actions se "
"produisent ailleurs dans un projet. En résumé, les signaux permettent à "
"certains *expéditeurs* d'avertir un ensemble de *destinataires* qu'une "
"action a eu lieu. Ils sont particulièrement utiles lorsque beaucoup de "
"parties de code peuvent être intéressées aux mêmes événements."

msgid ""
"For example, a third-party app can register to be notified of settings "
"changes::"
msgstr ""
"Par exemple, une application tierce peut s'inscrire pour être avertie des "
"modifications de réglages ::"

msgid ""
"Django's :doc:`built-in signals </ref/signals>` let user code get notified "
"of certain actions."
msgstr ""
"Les :doc:`signaux propres à Django </ref/signals>` permettent à du code "
"utilisateur d'être averti de certaines actions."

msgid ""
"You can also define and send your own custom signals. See :ref:`defining-and-"
"sending-signals` below."
msgstr ""
"Vous pouvez également définir et envoyer vos propres signaux personnalisés. "
"Voir :ref:`defining-and-sending-signals` ci-dessous."

msgid ""
"Signals give the appearance of loose coupling, but they can quickly lead to "
"code that is hard to understand, adjust and debug."
msgstr ""
"Les signaux donnent une apparence de couplage faible, mais ils peuvent "
"rapidement amener à du code difficile à comprendre, à ajuster et à déboguer."

msgid ""
"Where possible you should opt for directly calling the handling code, rather "
"than dispatching via a signal."
msgstr ""
"Partout où c'est possible, vous devriez choisir des appels directs au code à "
"exécuter, plutôt que par la distribution de signaux."

msgid "Listening to signals"
msgstr "Écoute de signaux"

msgid ""
"To receive a signal, register a *receiver* function using the :meth:`Signal."
"connect` method. The receiver function is called when the signal is sent. "
"All of the signal's receiver functions are called one at a time, in the "
"order they were registered."
msgstr ""
"Pour recevoir un signal, inscrivez une fonction *réceptrice* en utilisant la "
"méthode :meth:`Signal.connect`. Cette fonction sera appelée au moment où le "
"signal est envoyé. Toutes les fonctions réceptrices d'un signal sont "
"appelées consécutivement dans l'ordre où elles ont été inscrites."

msgid ""
"The callback function which will be connected to this signal. See :ref:"
"`receiver-functions` for more information."
msgstr ""
"La fonction réceptrice qui sera connectée à ce signal. Voir :ref:`receiver-"
"functions` pour plus d'informations."

msgid ""
"Specifies a particular sender to receive signals from. See :ref:`connecting-"
"to-specific-signals` for more information."
msgstr ""
"Indique un expéditeur particulier duquel recevoir les signaux. Voir :ref:"
"`connecting-to-specific-signals` pour plus d'informations."

msgid ""
"Django stores signal handlers as weak references by default. Thus, if your "
"receiver is a local function, it may be garbage collected. To prevent this, "
"pass ``weak=False`` when you call the signal's ``connect()`` method."
msgstr ""
"Django stocke les gestionnaires de signaux comme référence faible par "
"défaut. Cela signifie que si le récepteur est une fonction locale, il peut "
"être purgé de la mémoire. Pour empêcher cela, indiquez ``weak=False`` lors "
"de l'appel à la méthode ``connect()`` du signal."

msgid ""
"A unique identifier for a signal receiver in cases where duplicate signals "
"may be sent. See :ref:`preventing-duplicate-signals` for more information."
msgstr ""
"Un identifiant unique pour un récepteur de signal afin d'éviter que certains "
"signaux puissent être envoyés à double. Voir :ref:`preventing-duplicate-"
"signals` pour plus d'informations."

msgid ""
"Let's see how this works by registering a signal that gets called after each "
"HTTP request is finished. We'll be connecting to the :data:`~django.core."
"signals.request_finished` signal."
msgstr ""
"Voyons comment ça fonctionne en inscrivant un signal qui sera appelé à la "
"fin de chaque requête HTTP. Nous allons nous connecter au signal :data:"
"`~django.core.signals.request_finished`."

msgid "Receiver functions"
msgstr "Fonctions réceptrices"

msgid ""
"First, we need to define a receiver function. A receiver can be any Python "
"function or method::"
msgstr ""
"Tout d'abord, nous devons définir une fonction réceptrice. Celle-ci peut "
"être n'importe quelle fonction ou méthode Python ::"

msgid ""
"Notice that the function takes a ``sender`` argument, along with wildcard "
"keyword arguments (``**kwargs``); all signal handlers must take these "
"arguments."
msgstr ""
"Remarquez que la fonction accepte un paramètre ``sender``, accompagné des "
"paramètres nommés génériques (``**kwargs``) ; tous les gestionnaires de "
"signal doivent accepter ces paramètres."

msgid ""
"We'll look at senders :ref:`a bit later <connecting-to-specific-signals>`, "
"but right now look at the ``**kwargs`` argument. All signals send keyword "
"arguments, and may change those keyword arguments at any time. In the case "
"of :data:`~django.core.signals.request_finished`, it's documented as sending "
"no arguments, which means we might be tempted to write our signal handling "
"as ``my_callback(sender)``."
msgstr ""
"Nous aborderons le paramètre ``sender`` :ref:`un peu plus loin <connecting-"
"to-specific-signals>`, mais commençons par examiner le paramètre "
"``**kwargs``. Tous les signaux envoient des paramètres nommés et peuvent "
"changer ces paramètres nommés à tout instant. Dans le cas de :data:`~django."
"core.signals.request_finished`, sa documentation indique qu'il n'envoie pas "
"de paramètre, ce qui signifie que nous pourrions être tentés d'écrire notre "
"fonction de signal comme ``my_callback(sender)``."

msgid ""
"This would be wrong -- in fact, Django will throw an error if you do so. "
"That's because at any point arguments could get added to the signal and your "
"receiver must be able to handle those new arguments."
msgstr ""
"Ce serait une erreur. En fait, Django génère une exception dans ce cas, "
"parce que l'on doit s'attendre à ce que de nouveaux paramètres soient "
"ajoutés dans le temps et la fonction réceptrice doit être capable d'accepter "
"ces nouveaux paramètres."

msgid ""
"Receivers may also be asynchronous functions, with the same signature but "
"declared using ``async def``::"
msgstr ""
"Les récepteurs peuvent aussi être des fonctions asynchrones, avec la même "
"signature mais déclarées comme ``async def``::"

msgid ""
"Signals can be sent either synchronously or asynchronously, and receivers "
"will automatically be adapted to the correct call-style. See :ref:`sending "
"signals <sending-signals>` for more information."
msgstr ""
"Les signaux peuvent être envoyés de manière synchrone ou asynchrone, et les "
"récepteurs s'adapteront automatiquement au style d'appel approprié. Voir :"
"ref:`envoi de signaux <sending-signals>` pour plus d'informations. "

msgid "Support for asynchronous receivers was added."
msgstr "La prise en charge des récepteurs asynchrones a été ajoutée."

msgid "Connecting receiver functions"
msgstr "Connexion des fonctions réceptrices"

msgid ""
"There are two ways you can connect a receiver to a signal. You can take the "
"manual connect route::"
msgstr ""
"Il y a deux façons de connecter une fonction réceptrice à un signal. Vous "
"pouvez choisir l'option de la connexion manuelle ::"

msgid "Alternatively, you can use a :func:`receiver` decorator:"
msgstr "L'autre possibilité est d'utiliser le décorateur :func:`receiver`:"

msgid "A signal or a list of signals to connect a function to."
msgstr "Un signal ou une liste de signaux auxquels connecter la fonction."

msgid ""
"Wildcard keyword arguments to pass to a :ref:`function <receiver-functions>`."
msgstr ""
"Autres paramètres nommés arbitraires à passer à la :ref:`fonction <receiver-"
"functions>`."

msgid "Here's how you connect with the decorator::"
msgstr "Voici comment faire la connexion avec le décorateur ::"

msgid ""
"Now, our ``my_callback`` function will be called each time a request "
"finishes."
msgstr ""
"À partir de cet instant, la fonction ``my_callback`` sera appelée chaque "
"fois qu'une requête se termine."

msgid "Where should this code live?"
msgstr "À quel endroit ce code devrait-il se trouver ?"

msgid ""
"Strictly speaking, signal handling and registration code can live anywhere "
"you like, although it's recommended to avoid the application's root module "
"and its ``models`` module to minimize side-effects of importing code."
msgstr ""
"Strictement parlant, le code du signal et le code d'inscription peuvent se "
"trouver n'importe où, même s'il est recommandé d'éviter le module racine de "
"l'application et son module ``models`` pour minimiser les effets de bord de "
"l'importation du code."

msgid ""
"In practice, signal handlers are usually defined in a ``signals`` submodule "
"of the application they relate to. Signal receivers are connected in the :"
"meth:`~django.apps.AppConfig.ready` method of your application :ref:"
"`configuration class <configuring-applications-ref>`. If you're using the :"
"func:`receiver` decorator, import the ``signals`` submodule inside :meth:"
"`~django.apps.AppConfig.ready`, this will implicitly connect signal "
"handlers::"
msgstr ""
"En pratique, les gestionnaires de signaux sont généralement définis dans un "
"sous-module ``signals`` de l'application correspondante. Les récepteurs de "
"signaux sont connectés dans la méthode :meth:`~django.apps.AppConfig.ready` "
"de la :ref:`classe de configuration<configuring-applications-ref>` de "
"l'application. Si vous utilisez le décorateur :func:`receiver`, importez le "
"sous-module ``signals`` à l'intérieur de :meth:`~django.apps.AppConfig."
"ready`, ce qui va implicitement connecter les gestionnaires de signaux ::"

msgid ""
"The :meth:`~django.apps.AppConfig.ready` method may be executed more than "
"once during testing, so you may want to :ref:`guard your signals from "
"duplication <preventing-duplicate-signals>`, especially if you're planning "
"to send them within tests."
msgstr ""
"Il est possible que la méthode :meth:`~django.apps.AppConfig.ready` soit "
"exécutée plus d'une fois durant les tests. Par conséquent, il est "
"préférable :ref:`d’empêcher la duplication des signaux <preventing-duplicate-"
"signals>`, particulièrement si vous pensez les exploiter dans les tests."

msgid "Connecting to signals sent by specific senders"
msgstr "Connexion aux signaux envoyés par des expéditeurs spécifiques"

msgid ""
"Some signals get sent many times, but you'll only be interested in receiving "
"a certain subset of those signals. For example, consider the :data:`django."
"db.models.signals.pre_save` signal sent before a model gets saved. Most of "
"the time, you don't need to know when *any* model gets saved -- just when "
"one *specific* model is saved."
msgstr ""
"Certains signaux sont envoyés de nombreuses fois, mais vous n'êtes pas "
"toujours intéressé à tous les recevoir. Par exemple, considérez le signal :"
"data:`django.db.models.signals.pre_save` envoyé avant chaque enregistrement "
"de modèle. La plupart du temps, vous n'avez pas besoin de savoir quand "
"*chaque* modèle est enregistré, mais seulement pour un modèle *spécifique*."

msgid ""
"In these cases, you can register to receive signals sent only by particular "
"senders. In the case of :data:`django.db.models.signals.pre_save`, the "
"sender will be the model class being saved, so you can indicate that you "
"only want signals sent by some model::"
msgstr ""
"Dans ces situations, vous pouvez inscrire une fonction pour qu'elle ne "
"reçoive les signaux que de certains expéditeurs. Dans le cas de :data:"
"`django.db.models.signals.pre_save`, l'expéditeur sera la classe du modèle "
"en cours d'enregistrement, il est donc possible d'indiquer que vous ne "
"voulez recevoir que les signaux envoyés par certains modèles ::"

msgid ""
"The ``my_handler`` function will only be called when an instance of "
"``MyModel`` is saved."
msgstr ""
"La fonction ``my_handler`` ne sera appelée que lors de l'enregistrement "
"d'une instance de ``MyModel``."

msgid ""
"Different signals use different objects as their senders; you'll need to "
"consult the :doc:`built-in signal documentation </ref/signals>` for details "
"of each particular signal."
msgstr ""
"Différents signaux utilisent différents objets comme expéditeurs ; il s'agit "
"de consulter la :doc:`documentation des signaux intégrés </ref/signals>` "
"pour plus de détails sur chaque signal."

msgid "Preventing duplicate signals"
msgstr "Prévention des signaux dupliqués"

msgid ""
"In some circumstances, the code connecting receivers to signals may run "
"multiple times. This can cause your receiver function to be registered more "
"than once, and thus called as many times for a signal event. For example, "
"the :meth:`~django.apps.AppConfig.ready` method may be executed more than "
"once during testing. More generally, this occurs everywhere your project "
"imports the module where you define the signals, because signal registration "
"runs as many times as it is imported."
msgstr ""
"Dans certaines circonstances, le code faisant la connexion entre les "
"récepteurs et les signaux peut être exécuté à plusieurs reprises. En "
"conséquence, la fonction de réception peut être inscrite plus d'une fois et "
"être ensuite appelée plusieurs fois pour un même événement de signal. Par "
"exemple, la méthode :meth:`~django.apps.AppConfig.ready`  peut être exécutée "
"plus d'une fois pendant l'exécution des tests. Plus généralement, ceci se "
"produit à chaque fois que votre projet importe le module où les signaux sont "
"définis, car l'enregistrement d'un signal se produit autant de fois qu'il "
"est importé."

msgid ""
"If this behavior is problematic (such as when using signals to send an email "
"whenever a model is saved), pass a unique identifier as the ``dispatch_uid`` "
"argument to identify your receiver function. This identifier will usually be "
"a string, although any hashable object will suffice. The end result is that "
"your receiver function will only be bound to the signal once for each unique "
"``dispatch_uid`` value::"
msgstr ""
"Si ce comportement est problématique (par exemple quand des signaux sont "
"utilisés pour envoyer des courriels quand un modèle est enregistré), "
"indiquez un identifiant unique dans le paramètre ``dispatch_uid`` pour "
"identifier votre fonction réceptrice. Il s'agit généralement d'une chaîne de "
"caractères, même si n'importe quel objet hachable peut faire l'affaire. En "
"conséquence, la fonction réceptrice ne sera inscrite au signal qu'une seule "
"fois par valeur unique de ``dispatch_uid``::"

msgid "Defining and sending signals"
msgstr "Définition et envoi de signaux"

msgid ""
"Your applications can take advantage of the signal infrastructure and "
"provide its own signals."
msgstr ""
"Les applications peuvent profiter de l'infrastructure des signaux et fournir "
"leurs propres signaux."

msgid "When to use custom signals"
msgstr "Quand utiliser des signaux personnalisés"

msgid ""
"Signals are implicit function calls which make debugging harder. If the "
"sender and receiver of your custom signal are both within your project, "
"you're better off using an explicit function call."
msgstr ""
"Les signaux sont des appels de fonctions implicites qui compliquent le "
"débogage. Si l'expéditeur et le destinataire de votre signal personnalisé "
"sont tous deux dans votre projet, il est alors préférable d'utiliser un "
"appel de fonction explicite."

msgid "Defining signals"
msgstr "Définition de signaux"

msgid "All signals are :class:`django.dispatch.Signal` instances."
msgstr ""
"Tous les signaux sont des instances de :class:`django.dispatch.Signal`."

msgid "This declares a ``pizza_done`` signal."
msgstr "Ceci déclare un signal ``pizza_done``."

msgid "Sending signals"
msgstr "Envoi de signaux"

msgid "There are two ways to send signals synchronously in Django."
msgstr ""
"Il y a deux façons d'envoyer des signaux dans Django de manière snychrone."

msgid "Signals may also be sent asynchronously."
msgstr "Les signaux peuvent aussi être envoyés de manière asynchrone."

msgid ""
"To send a signal, call either :meth:`Signal.send`, :meth:`Signal."
"send_robust`, :meth:`await Signal.asend()<Signal.asend>`, or :meth:`await "
"Signal.asend_robust() <Signal.asend_robust>`. You must provide the "
"``sender`` argument (which is a class most of the time) and may provide as "
"many other keyword arguments as you like."
msgstr ""
"Pour envoyer un signal, appelez :meth:`Signal.send`, :meth:`Signal."
"send_robust`, :meth:`await Signal.asend()<Signal.asend>`, or :meth:`await "
"Signal.asend_robust() <Signal.asend_robust>`. Vous devez indiquer l'argument "
"``sender`` (qui est une classe la plupart du temps) et vous pouvez ajouter "
"autant d'arguments nommés que vous le souhaitez."

msgid "For example, here's how sending our ``pizza_done`` signal might look::"
msgstr "Par exemple, voici comment envoyer notre signal ``pizza_done``::"

msgid ""
"All four methods return a list of tuple pairs ``[(receiver, "
"response), ...]``, representing the list of called receiver functions and "
"their response values."
msgstr ""
"Les quatre méthodes renvoient uns liste de paires de tuples ``[(récepteur, "
"réponse), ... ]`` correspondant à la liste des fonctions réceptrices "
"appelées et la valeur de leur réponse."

msgid ""
"``send()`` differs from ``send_robust()`` in how exceptions raised by "
"receiver functions are handled. ``send()`` does *not* catch any exceptions "
"raised by receivers; it simply allows errors to propagate. Thus not all "
"receivers may be notified of a signal in the face of an error."
msgstr ""
"``send()`` diffère de ``send_robust()`` par la manière dont les exceptions "
"générées par les fonctions réceptrices sont traitées. ``send()`` "
"n'intercepte *aucune* exception générée par les récepteurs ; elle laisse "
"simplement les erreurs se propager. Il est donc possible que certains "
"récepteurs ne soient pas notifiés par le signal en cas d'erreur."

msgid ""
"``send_robust()`` catches all errors derived from Python's ``Exception`` "
"class, and ensures all receivers are notified of the signal. If an error "
"occurs, the error instance is returned in the tuple pair for the receiver "
"that raised the error."
msgstr ""
"``send_robust()`` intercepte toutes les erreurs héritant de la classe "
"``Exception`` de Python et s'assure que tous les récepteurs soient notifiés "
"par le signal. Si une erreur survient, l'instance d'erreur est renvoyée dans "
"le tuple correspondant au récepteur qui a généré l'erreur."

msgid ""
"The tracebacks are present on the ``__traceback__`` attribute of the errors "
"returned when calling ``send_robust()``."
msgstr ""
"Les traces de débogage sont présentes dans l'attribut ``__traceback__`` des "
"erreurs renvoyées lors des appels à ``send_robust()``."

msgid ""
"``asend()`` is similar to ``send()``, but it is a coroutine that must be "
"awaited::"
msgstr ""
"``asend()`` est semblable à ``send()``, mais il s'agit d'une coroutine qu'il "
"faut appeler par ``await``::"

msgid ""
"Whether synchronous or asynchronous, receivers will be correctly adapted to "
"whether ``send()`` or ``asend()`` is used. Synchronous receivers will be "
"called using :func:`~.sync_to_async` when invoked via ``asend()``. "
"Asynchronous receivers will be called using :func:`~.async_to_sync` when "
"invoked via ``sync()``. Similar to the :ref:`case for middleware "
"<async_performance>`, there is a small performance cost to adapting "
"receivers in this way. Note that in order to reduce the number of sync/async "
"calling-style switches within a ``send()`` or ``asend()`` call, the "
"receivers are grouped by whether or not they are async before being called. "
"This means that an asynchronous receiver registered before a synchronous "
"receiver may be executed after the synchronous receiver. In addition, async "
"receivers are executed concurrently using ``asyncio.gather()``."
msgstr ""
"Les récepteurs, qu'ils soient synchrones ou asynchrones, s'adaptent "
"automatiquement selon qu'ils sont appelés par ``send()`` ou ``asend()``. Les "
"récepteurs synchrones sont appelés avec :func:`~.sync_to_async` lorsqu'ils "
"sont appelés avec `asend()``. Les récepteurs asynchrones sont appelés avec :"
"func:`~.async_to_sync` lorsqu'ils sont appelés avec `send()``. Comme dans "
"le :ref:`cas des intergiciels <async_performance>`, une légère perte de "
"performance est induite par cette adaptation. Mais pour réduire le nombre de "
"bascules de style d'appel sync/async dans un appel ``send()`` ou "
"``asend()``, les récepteurs sont groupés en fonction de leur synchronicité "
"avant d'être appelés. Cela signifie qu'un récepteur asynchrone inscrit avant "
"un récepteur synchrone peut être exécuté après ce dernier. De plus, les "
"récepteurs asynchrones sont exécutés de manière concurrente à l'aide de "
"``asyncio.gather()``."

msgid ""
"All built-in signals, except those in the async request-response cycle, are "
"dispatched using :meth:`Signal.send`."
msgstr ""
"Tous les signaux intégrés à Django, sauf ceux faisant partie du cycle "
"requête-réponse asynchrone, sont envoyés par :meth:`Signal.send`."

msgid "Support for asynchronous signals was added."
msgstr "La prise en charge des signaux asynchrones a été ajoutée."

msgid "Disconnecting signals"
msgstr "Déconnexion des signaux"

msgid ""
"To disconnect a receiver from a signal, call :meth:`Signal.disconnect`. The "
"arguments are as described in :meth:`.Signal.connect`. The method returns "
"``True`` if a receiver was disconnected and ``False`` if not. When "
"``sender`` is passed as a lazy reference to ``<app label>.<model>``, this "
"method always returns ``None``."
msgstr ""
"Pour déconnecter un récepteur d'un signal, appelez :meth:`Signal."
"disconnect`. Les paramètres sont identiques à ceux décrits pour :meth:`."
"Signal.connect`. La méthode renvoie ``True`` si un récepteur a été "
"déconnecté, sinon ``False``. Lorsque ``sender`` est transmis comme référence "
"différée à ``<app label>.<model>``, cette méthode renvoie toujours ``None``."

msgid ""
"The ``receiver`` argument indicates the registered receiver to disconnect. "
"It may be ``None`` if ``dispatch_uid`` is used to identify the receiver."
msgstr ""
"Le paramètre ``receiver`` indique le récepteur inscrit qu'il s'agit de "
"déconnecter. Il peut valoir ``None`` si ``dispatch_uid`` est utilisé pour "
"identifier le récepteur."

msgid "Cryptographic signing"
msgstr "Signatures cryptographiques"

msgid ""
"The golden rule of web application security is to never trust data from "
"untrusted sources. Sometimes it can be useful to pass data through an "
"untrusted medium. Cryptographically signed values can be passed through an "
"untrusted channel safe in the knowledge that any tampering will be detected."
msgstr ""
"La règle d'or de la sécurité des applications web est de ne jamais se fier à "
"des données de provenance douteuse. Il peut parfois être pratique de "
"transférer des données par un canal non sécurisé. Les valeurs signées "
"cryptographiquement peuvent être transmises de manière fiable au travers "
"d'un canal non sécurisé en sachant que toute modification de donnée sera "
"détectée."

msgid ""
"Django provides both a low-level API for signing values and a high-level API "
"for setting and reading signed cookies, one of the most common uses of "
"signing in web applications."
msgstr ""
"Django offre à la fois une API de bas niveau pour la signature de valeurs et "
"une API de haut niveau pour la génération et la lecture de cookies signés, "
"l'un des usages les plus courants de la signature dans les applications web."

msgid "You may also find signing useful for the following:"
msgstr "La signature peut également être utile dans les situations suivantes :"

msgid ""
"Generating \"recover my account\" URLs for sending to users who have lost "
"their password."
msgstr ""
"Génération d'URL de « récupération de compte » pour l'envoi à des "
"utilisateurs qui ont perdu leur mot de passe."

msgid "Ensuring data stored in hidden form fields has not been tampered with."
msgstr ""
"Garantie de non-altération des données stockées dans des champs de "
"formulaire cachés."

msgid ""
"Generating one-time secret URLs for allowing temporary access to a protected "
"resource, for example a downloadable file that a user has paid for."
msgstr ""
"Génération d'URL à usage unique pour autoriser un accès temporaire à une "
"ressource protégée, par exemple pour un fichier téléchargeable payé par un "
"utilisateur."

msgid "Protecting ``SECRET_KEY`` and ``SECRET_KEY_FALLBACKS``"
msgstr "Protection de ``SECRET_KEY`` et de ``SECRET_KEY_FALLBACKS``"

msgid ""
"When you create a new Django project using :djadmin:`startproject`, the "
"``settings.py`` file is generated automatically and gets a random :setting:"
"`SECRET_KEY` value. This value is the key to securing signed data -- it is "
"vital you keep this secure, or attackers could use it to generate their own "
"signed values."
msgstr ""
"Lorsque vous créez un nouveau projet Django avec :djadmin:`startproject`, le "
"fichier ``settings.py`` est généré automatiquement et contient une valeur "
"aléatoire pour le réglage :setting:`SECRET_KEY`. Cette valeur est la clé de "
"la sécurisation des données signées, il est donc essentiel de garder cette "
"information secrète, faute de quoi des attaquants pourraient l'utiliser pour "
"générer leurs propres valeurs signées."

msgid ""
":setting:`SECRET_KEY_FALLBACKS` can be used to rotate secret keys. The "
"values will not be used to sign data, but if specified, they will be used to "
"validate signed data and must be kept secure."
msgstr ""
":setting:`SECRET_KEY_FALLBACKS` peut être utilisé pour une rotation de clés "
"secrètes. Ces valeurs ne seront pas utilisées pour signer des données, mais "
"quand il est indiqué, elles seront utilisées pour valider des données "
"signées ; elles doivent donc être conservées de manière sécurisée."

msgid "Using the low-level API"
msgstr "Utilisation de l'API de bas niveau"

msgid ""
"Django's signing methods live in the ``django.core.signing`` module. To sign "
"a value, first instantiate a ``Signer`` instance:"
msgstr ""
"Les méthodes de signature de Django se trouvent dans le module ``django.core."
"signing``. Pour signer une valeur, commencez par créer une instance de "
"``Signer``:"

msgid ""
"The signature is appended to the end of the string, following the colon. You "
"can retrieve the original value using the ``unsign`` method:"
msgstr ""
"La signature est collée à la suite de la chaîne de caractères, en utilisant "
"les deux-points comme séparateur. Vous pouvez récupérer la valeur originale "
"au moyen de la méthode ``unsign``:"

msgid ""
"If you pass a non-string value to ``sign``, the value will be forced to "
"string before being signed, and the ``unsign`` result will give you that "
"string value:"
msgstr ""
"Si vous passez une valeur non textuelle à ``sign``, la valeur sera d'abord "
"forcée à une chaîne avant d'être signée et le résultat de ``unsign`` donnera "
"cette valeur textuelle :"

msgid ""
"If you wish to protect a list, tuple, or dictionary you can do so using the "
"``sign_object()`` and ``unsign_object()`` methods:"
msgstr ""
"Si vous souhaitez protéger une liste, un tuple ou un dictionnaire, vous "
"pouvez le faire en utilisant les méthodes `sign_object()`` et "
"``unsign_object()``:"

msgid "See :ref:`signing-complex-data` for more details."
msgstr "Consultez :ref:`signing-complex-data` pour plus de détails."

msgid ""
"If the signature or value have been altered in any way, a ``django.core."
"signing.BadSignature`` exception will be raised:"
msgstr ""
"Si la signature ou la valeur a été modifiée d'une manière ou d'une autre, "
"une exception ``django.core.signing.BadSignature`` sera levée :"

msgid ""
"By default, the ``Signer`` class uses the :setting:`SECRET_KEY` setting to "
"generate signatures. You can use a different secret by passing it to the "
"``Signer`` constructor:"
msgstr ""
"Par défaut, la classe ``Signer`` utilise le réglage :setting:`SECRET_KEY` "
"pour générer des signatures. Il est possible d'utiliser un clé secrète "
"différente en la transmettant au constructeur de ``Signer``:"

msgid ""
"Returns a signer which uses ``key`` to generate signatures and ``sep`` to "
"separate values. ``sep`` cannot be in the :rfc:`URL safe base64 alphabet "
"<4648#section-5>`. This alphabet contains alphanumeric characters, hyphens, "
"and underscores. ``algorithm`` must be an algorithm supported by :py:mod:"
"`hashlib`, it defaults to ``'sha256'``. ``fallback_keys`` is a list of "
"additional values used to validate signed data, defaults to :setting:"
"`SECRET_KEY_FALLBACKS`."
msgstr ""
"Renvoie un objet signataire utilisant ``key`` pour générer des signatures et "
"``sep`` pour séparer les valeurs. ``sep`` ne peut pas se trouver dans :rfc:"
"`l'alphabet base64 adapté aux URL <4648#section-5>`. Cet alphabet contient "
"les caractères alphanumériques, le tiret et le soulignement. ``algorithm`` "
"doit être un algorithme pris en charge par :py:mod:`hashlib`, sa valeur par "
"défaut étant ``'sha256'``. ``fallback_keys`` est une liste de valeurs "
"supplémentaires utilisées pour valider des données signées, et contient par "
"défaut :setting:`SECRET_KEY_FALLBACKS`."

msgid "Using the ``salt`` argument"
msgstr "Utilisation du paramètre ``salt``"

msgid ""
"If you do not wish for every occurrence of a particular string to have the "
"same signature hash, you can use the optional ``salt`` argument to the "
"``Signer`` class. Using a salt will seed the signing hash function with both "
"the salt and your :setting:`SECRET_KEY`:"
msgstr ""
"Si vous ne voulez pas que plusieurs occurrences d'une chaîne donnée aient "
"toutes la même empreinte de signature, vous pouvez utiliser le paramètre "
"facultatif ``salt`` de la classe ``Signer``. L'utilisation d'un sel (salt) "
"combiné à la clé :setting:`SECRET_KEY` va nourrir et renforcer la fonction "
"de hachage pour la signature :"

msgid ""
"Using salt in this way puts the different signatures into different "
"namespaces.  A signature that comes from one namespace (a particular salt "
"value) cannot be used to validate the same plaintext string in a different "
"namespace that is using a different salt setting. The result is to prevent "
"an attacker from using a signed string generated in one place in the code as "
"input to another piece of code that is generating (and verifying) signatures "
"using a different salt."
msgstr ""
"Un tel emploi du sel place les différentes signatures dans des espaces de "
"noms différents. Une signature provenant d'un espace de noms (une valeur de "
"sel particulière) ne peut pas être utilisée pour valider la même chaîne de "
"texte dans un autre espace de noms utilisant une valeur de sel différente. "
"Il en résulte qu'un attaquant ne peut pas utiliser une chaîne signée générée "
"dans une partie du code comme point d'entrée pour une autre partie du code "
"qui génère (et vérifie) les signatures en employant un sel différent."

msgid ""
"Unlike your :setting:`SECRET_KEY`, your salt argument does not need to stay "
"secret."
msgstr ""
"Au contraire de :setting:`SECRET_KEY`, le paramètre ``salt`` n'a pas besoin "
"de rester secret."

msgid "Verifying timestamped values"
msgstr "Vérification de valeurs horodatées"

msgid ""
"``TimestampSigner`` is a subclass of :class:`~Signer` that appends a signed "
"timestamp to the value. This allows you to confirm that a signed value was "
"created within a specified period of time:"
msgstr ""
"``TimestampSigner`` est une sous-classe de :class:`~Signer` qui ajoute un "
"horodatage signé à la valeur. Cela permet de confirmer qu'une valeur signée "
"a été créée dans un espace de temps défini :"

msgid "Sign ``value`` and append current timestamp to it."
msgstr "Signe la valeur ``value`` et lui ajoute l'horodatage actuel."

msgid ""
"Checks if ``value`` was signed less than ``max_age`` seconds ago, otherwise "
"raises ``SignatureExpired``. The ``max_age`` parameter can accept an integer "
"or a :py:class:`datetime.timedelta` object."
msgstr ""
"Vérifie si la valeur ``value`` a été signée il y a moins de ``max_age`` "
"secondes, sinon génère ``SignatureExpired``. Le paramètre ``max_age`` "
"accepte un nombre entier ou un objet :py:class:`datetime.timedelta`."

msgid ""
"Encode, optionally compress, append current timestamp, and sign complex data "
"structure (e.g. list, tuple, or dictionary)."
msgstr ""
"Code, comprime si désiré, ajoute l'horodatage actuel et signe la structure "
"de données complexe (par ex. une liste, un tuple ou un dictionnaire)."

msgid ""
"Checks if ``signed_obj`` was signed less than ``max_age`` seconds ago, "
"otherwise raises ``SignatureExpired``. The ``max_age`` parameter can accept "
"an integer or a :py:class:`datetime.timedelta` object."
msgstr ""
"Vérifie si la valeur ``signed_obj`` a été signée il y a moins de ``max_age`` "
"secondes, sinon génère ``SignatureExpired``. Le paramètre ``max_age`` "
"accepte un nombre entier ou un objet :py:class:`datetime.timedelta`."

msgid "Protecting complex data structures"
msgstr "Protection de structures de données complexes"

msgid ""
"If you wish to protect a list, tuple or dictionary you can do so using the "
"``Signer.sign_object()`` and ``unsign_object()`` methods, or signing "
"module's ``dumps()`` or ``loads()`` functions (which are shortcuts for "
"``TimestampSigner(salt='django.core.signing').sign_object()/"
"unsign_object()``). These use JSON serialization under the hood. JSON "
"ensures that even if your :setting:`SECRET_KEY` is stolen an attacker will "
"not be able to execute arbitrary commands by exploiting the pickle format:"
msgstr ""
"Si vous souhaitez protéger une liste, un tuple ou un dictionnaire, c'est "
"réalisable en utilisant les méthodes ``Signer.sign_object()`` et "
"``unsign_object()``, ou les fonctions ``dumps`` et ``loads`` du module de "
"signature (qui sont elles-mêmes des raccourcis vers "
"``TimestampSigner(salt='django.core.signing').sign_object()/"
"unsign_object()``). Elles utilisent la sérialisation JSON en arrière-plan. "
"Le format JSON assure que même quand la clé :setting:`SECRET_KEY` a été "
"dérobée, un attaquant ne pourra pas provoquer l'exécution de code arbitraire "
"en exploitant le format pickle :"

msgid ""
"Because of the nature of JSON (there is no native distinction between lists "
"and tuples) if you pass in a tuple, you will get a list from ``signing."
"loads(object)``:"
msgstr ""
"En raison de la nature de JSON (il n'existe pas de distinction native entre "
"les listes et les tuples), même si vous passez un tuple, vous obtiendrez une "
"liste dans le résultat de ``signing.loads(object)``:"

msgid ""
"Returns URL-safe, signed base64 compressed JSON string. Serialized object is "
"signed using :class:`~TimestampSigner`."
msgstr ""
"Renvoie une chaîne JSON utilisable dans une URL, signée et compressée en "
"base64. L'objet sérialisé est signé par :class:`~TimestampSigner`."

msgid ""
"Reverse of ``dumps()``, raises ``BadSignature`` if signature fails. Checks "
"``max_age`` (in seconds) if given."
msgstr ""
"Inverse de ``dumps()``, génère ``BadSignature`` si la vérification de la "
"signature échoue. Vérifie ``max_age`` (en secondes) si ce paramètre est "
"défini."

msgid "Templates"
msgstr "Gabarits"

msgid ""
"Being a web framework, Django needs a convenient way to generate HTML "
"dynamically. The most common approach relies on templates. A template "
"contains the static parts of the desired HTML output as well as some special "
"syntax describing how dynamic content will be inserted. For a hands-on "
"example of creating HTML pages with templates, see :doc:`Tutorial 3 </intro/"
"tutorial03>`."
msgstr ""
"Par sa nature liée au Web, Django a besoin d'un procédé agile de génération "
"dynamique de HTML. L'approche la plus couramment utilisée est de se baser "
"sur des gabarits. Un gabarit contient la partie statique du résultat HTML "
"souhaité ainsi qu'une certaine syntaxe particulière définissant comment "
"insérer le contenu dynamique. Pour un exemple pratique de création de pages "
"HTML avec des gabarits, consultez la :doc:`partie 3 du tutoriel </intro/"
"tutorial03>`."

msgid ""
"A Django project can be configured with one or several template engines (or "
"even zero if you don't use templates). Django ships built-in backends for "
"its own template system, creatively called the Django template language "
"(DTL), and for the popular alternative Jinja2_. Backends for other template "
"languages may be available from third-parties. You can also write your own "
"custom backend, see :doc:`Custom template backend </howto/custom-template-"
"backend>`"
msgstr ""
"Un projet Django peut être configuré avec un ou plusieurs moteurs de gabarit "
"(ou même aucun si vous n'utilisez pas de gabarit). Django est livré avec des "
"moteurs intégrés pour son propre système de gabarits, appelé de manière "
"originale le langage de gabarits de Django (DTL), ainsi que pour "
"l'alternative répandue Jinja2_. Des moteurs pour d'autres langages de "
"gabarits peuvent être mis à disposition par des applications tierces. Il est "
"aussi possible d'écrire son propre moteur, voir :doc:`Moteur de gabarit "
"personnalisé </howto/custom-template-backend>`."

msgid ""
"Django defines a standard API for loading and rendering templates regardless "
"of the backend. Loading consists of finding the template for a given "
"identifier and preprocessing it, usually compiling it to an in-memory "
"representation. Rendering means interpolating the template with context data "
"and returning the resulting string."
msgstr ""
"Django définit une API standard pour le chargement et la production de "
"gabarits de manière indépendante du moteur utilisé. Le chargement consiste à "
"trouver le gabarit correspondant à un identifiant donné et à le pré-traiter, "
"ce qui revient généralement à le compiler dans une représentation en "
"mémoire. La production consiste à interpoler le gabarit en fonction de "
"données de contexte et à renvoyer le texte résultant."

msgid ""
"The :doc:`Django template language </ref/templates/language>` is Django's "
"own template system. Until Django 1.8 it was the only built-in option "
"available. It's a good template library even though it's fairly opinionated "
"and sports a few idiosyncrasies. If you don't have a pressing reason to "
"choose another backend, you should use the DTL, especially if you're writing "
"a pluggable application and you intend to distribute templates. Django's "
"contrib apps that include templates, like :doc:`django.contrib.admin </ref/"
"contrib/admin/index>`, use the DTL."
msgstr ""
"Le :doc:`langage de gabarits de Django </ref/templates/language>` est le "
"système de gabarits propre à Django. Jusqu'à Django 1.8, il s'agissait de la "
"seule option disponible. C'est une bonne bibliothèque de gabarit, même si "
"son approche est parfois un peu rigide et présente quelques particularités. "
"SI vous n'avez pas de motivation précise pour choisir un moteur différent, "
"nous vous recommandons de travailler avec ce langage, à plus forte raison si "
"vous écrivez une application réutilisable et que vous pensez distribuer des "
"gabarits. Les applications contribuées de Django qui comprennent des "
"gabarits, telle que :doc:`django.contrib.admin </ref/contrib/admin/index>`, "
"utilisent le moteur de Django."

msgid ""
"For historical reasons, both the generic support for template engines and "
"the implementation of the Django template language live in the ``django."
"template`` namespace."
msgstr ""
"Pour des raisons historiques, la prise en charge générique des moteurs de "
"gabarit et l'implémentation du langage de gabarit de Django se trouvent tous "
"deux dans l'espace de noms ``django.template``."

msgid ""
"The template system isn't safe against untrusted template authors. For "
"example, a site shouldn't allow its users to provide their own templates, "
"since template authors can do things like perform XSS attacks and access "
"properties of template variables that may contain sensitive information."
msgstr ""
"Le système des gabarits n'est pas protégé contre les rédacteurs de gabarits "
"non fiables. Par exemple, un site ne devrait pas permettre à ses "
"utilisateurs d'écrire leurs propres gabarits, car les gabarits permettent "
"d'effectuer des actions telles que des attaques XSS et d'accéder à des "
"propriétés de variables de gabarits qui peuvent contenir des informations "
"sensibles."

msgid "The Django template language"
msgstr "Le langage de gabarit de Django"

msgid "Syntax"
msgstr "Syntaxe"

msgid "About this section"
msgstr "À propos de cette section"

msgid ""
"This is an overview of the Django template language's syntax. For details "
"see the :doc:`language syntax reference </ref/templates/language>`."
msgstr ""
"Il s'agit ici d'un aperçu de la syntaxe du langage de gabarit de Django. "
"Pour plus de détails, voir la :doc:`référence de la syntaxe du langage </ref/"
"templates/language>`."

msgid ""
"A Django template is a text document or a Python string marked-up using the "
"Django template language. Some constructs are recognized and interpreted by "
"the template engine. The main ones are variables and tags."
msgstr ""
"Un gabarit Django est un document texte ou un chaîne Python, balisés à "
"l'aide du langage de gabarit de Django. Certaines structures sont reconnues "
"et interprétées par le moteur de gabarit. Les principales sont les variables "
"et les balises."

msgid ""
"A template is rendered with a context. Rendering replaces variables with "
"their values, which are looked up in the context, and executes tags. "
"Everything else is output as is."
msgstr ""
"Un gabarit est produit avec un contexte. Le processus de production remplace "
"les variables par leurs valeurs qui sont cherchées dans le contexte, et il "
"exécute les balises. Tout le reste est affiché tel quel."

msgid "The syntax of the Django template language involves four constructs."
msgstr "La syntaxe du langage de gabarit de Django implique quatre structures."

msgid "Variables"
msgstr "Variables"

msgid ""
"A variable outputs a value from the context, which is a dict-like object "
"mapping keys to values."
msgstr ""
"Une variable affiche une valeur à partir du contexte, qui est un objet de "
"type dictionnaire faisant correspondre des clés à des valeurs."

msgid "Variables are surrounded by ``{{`` and ``}}`` like this:"
msgstr "Les variables sont entourées par ``{{`` et ``}}`` comme ceci :"

msgid ""
"With a context of ``{'first_name': 'John', 'last_name': 'Doe'}``, this "
"template renders to:"
msgstr ""
"Avec un contexte ``{'first_name': 'John', 'last_name': 'Doe'}``, ce gabarit "
"produit :"

msgid ""
"Dictionary lookup, attribute lookup and list-index lookups are implemented "
"with a dot notation:"
msgstr ""
"La consultation de dictionnaire, d'attribut et d'indice de liste est "
"implémentée par une notation pointée :"

msgid ""
"If a variable resolves to a callable, the template system will call it with "
"no arguments and use its result instead of the callable."
msgstr ""
"Si le contenu d'une variable s'avère être un objet exécutable, le système de "
"gabarit l'appelle sans paramètre et utilise son résultat à la place de "
"l'objet exécutable."

msgid "Tags"
msgstr "Balises"

msgid "Tags provide arbitrary logic in the rendering process."
msgstr ""
"Les balises permettent d'appliquer une logique arbitraire dans le processus "
"de rendu."

msgid ""
"This definition is deliberately vague. For example, a tag can output "
"content, serve as a control structure e.g. an \"if\" statement or a \"for\" "
"loop, grab content from a database, or even enable access to other template "
"tags."
msgstr ""
"Cette définition est volontairement vague. Par exemple, une balise peut "
"produire du contenu, servir de structure de contrôle telle qu'une "
"instruction « if » ou une boucle « for », extraire du contenu d'une base de "
"données ou même de donner accès à d'autres balises de gabarit."

msgid "Tags are surrounded by ``{%`` and ``%}`` like this:"
msgstr "Les balises sont entourées par ``{%`` et ``%}``, comme ceci :"

msgid "Most tags accept arguments:"
msgstr "La plupart des balises acceptent des paramètres :"

msgid "Some tags require beginning and ending tags:"
msgstr ""
"Certaines balises exigent des balises d'introduction et de terminaison :"

msgid ""
"A :ref:`reference of built-in tags <ref-templates-builtins-tags>` is "
"available as well as :ref:`instructions for writing custom tags <howto-"
"writing-custom-template-tags>`."
msgstr ""
"Une :ref:`référence des balises intégrés <ref-templates-builtins-tags>` est "
"disponible tout comme des :ref:`instructions pour écrire des balises "
"personnalisées <howto-writing-custom-template-tags>`."

msgid "Filters transform the values of variables and tag arguments."
msgstr ""
"Les filtres transforment les valeurs de variables et les paramètres de "
"balises."

msgid "They look like this:"
msgstr "Ils ressemblent à ceci :"

msgid ""
"With a context of ``{'django': 'the web framework for perfectionists with "
"deadlines'}``, this template renders to:"
msgstr ""
"Avec un contexte ``{'django': 'the web framework for perfectionists with "
"deadlines'}``, ce gabarit produit le résultat suivant :"

msgid "Some filters take an argument:"
msgstr "Certains filtres acceptent un paramètre :"

msgid ""
"A :ref:`reference of built-in filters <ref-templates-builtins-filters>` is "
"available as well as :ref:`instructions for writing custom filters <howto-"
"writing-custom-template-filters>`."
msgstr ""
"Une :ref:`référence des filtres intégrés <ref-templates-builtins-filters>` "
"est disponible tout comme des :ref:`instructions pour écrire des filtres "
"personnalisés <howto-writing-custom-template-filters>`."

msgid "Comments look like this:"
msgstr "Les commentaires ressemblent à ceci :"

msgid "A :ttag:`{% comment %} <comment>` tag provides multi-line comments."
msgstr ""
"Une balise :ttag:`{% comment %} <comment>` autorise des commentaires sur "
"plusieurs lignes."

msgid "Components"
msgstr "Composants"

msgid ""
"This is an overview of the Django template language's APIs. For details see "
"the :doc:`API reference </ref/templates/api>`."
msgstr ""
"Il s'agit ici d'un aperçu des API du langage de gabarit de Django. Pour plus "
"de détails, voir la :doc:`référence des API </ref/templates/api>`."

msgid "Engine"
msgstr "Moteur"

msgid ""
":class:`django.template.Engine` encapsulates an instance of the Django "
"template system. The main reason for instantiating an :class:`~django."
"template.Engine` directly is to use the Django template language outside of "
"a Django project."
msgstr ""
":class:`django.template.Engine` encapsule une instance du système de gabarit "
"de Django. La raison principale de créer directement une telle instance est "
"d'utiliser le langage de gabarit de Django en dehors d'un projet Django."

msgid ""
":class:`django.template.backends.django.DjangoTemplates` is a thin wrapper "
"adapting :class:`django.template.Engine` to Django's template backend API."
msgstr ""
":class:`django.template.backends.django.DjangoTemplates` est un adaptateur "
"léger autour de :class:`django.template.Engine` pour l'adapter à l'API de "
"moteur de gabarit de Django."

msgid "Template"
msgstr "Gabarit"

msgid ""
":class:`django.template.Template` represents a compiled template. Templates "
"are obtained with :meth:`.Engine.get_template` or :meth:`.Engine."
"from_string`."
msgstr ""
":class:`django.template.Template` représente un gabarit compilé. Les "
"gabarits sont obtenus par :meth:`.Engine.get_template` ou :meth:`.Engine."
"from_string`."

msgid ""
"Likewise ``django.template.backends.django.Template`` is a thin wrapper "
"adapting :class:`django.template.Template` to the common template API."
msgstr ""
"De même, ``django.template.backends.django.Template`` est un adaptateur "
"léger autour de :class:`django.template.Template` pour l'adapter à l'API de "
"gabarit commune."

msgid "Context"
msgstr "Contexte"

msgid ""
":class:`django.template.Context` holds some metadata in addition to the "
"context data. It is passed to :meth:`.Template.render` for rendering a "
"template."
msgstr ""
":class:`django.template.Context` contient des métadonnées en plus des "
"données de contexte. Il est transmis à :meth:`.Template.render` en vue de la "
"production d'un gabarit."

msgid ""
":class:`django.template.RequestContext` is a subclass of :class:`~django."
"template.Context` that stores the current :class:`~django.http.HttpRequest` "
"and runs template context processors."
msgstr ""
":class:`django.template.RequestContext` est une sous-classe de :class:"
"`~django.template.Context` qui stocke la requête :class:`~django.http."
"HttpRequest` en cours et exécute les processeurs de contexte de gabarit."

msgid ""
"The common API doesn't have an equivalent concept. Context data is passed in "
"a plain :class:`dict` and the current :class:`~django.http.HttpRequest` is "
"passed separately if needed."
msgstr ""
"L'API commune ne possède pas de concept équivalent. Les données de contexte "
"sont transmises dans un simple :class:`dict` et la requête :class:`~django."
"http.HttpRequest` en cours est transmise séparément si nécessaire."

msgid "Loaders"
msgstr "Chargeurs"

msgid ""
"Template loaders are responsible for locating templates, loading them, and "
"returning :class:`~django.template.Template` objects."
msgstr ""
"Les chargeurs de gabarits sont responsables de la découverte des gabarits, "
"de leur chargement et du renvoi d'objets :class:`~django.template.Template`."

msgid ""
"Django provides several :ref:`built-in template loaders <template-loaders>` "
"and supports :ref:`custom template loaders <custom-template-loaders>`."
msgstr ""
"Django fournit plusieurs :ref:`chargeurs de gabarits intégrés <template-"
"loaders>` et prend en charge des :ref:`chargeurs de gabarits personnalisés "
"<custom-template-loaders>`."

msgid "Context processors"
msgstr "Processeurs de contexte"

msgid ""
"Context processors are functions that receive the current :class:`~django."
"http.HttpRequest` as an argument and return a :class:`dict` of data to be "
"added to the rendering context."
msgstr ""
"Les processeurs de contexte sont des fonctions qui reçoivent la requête :"
"class:`~django.http.HttpRequest` en cours comme paramètre et renvoient un :"
"class:`dict` de données à ajouter au contexte de production."

msgid ""
"Their main use is to add common data shared by all templates to the context "
"without repeating code in every view."
msgstr ""
"Leur utilisation principale est d'ajouter dans le contexte des données "
"fréquemment utilisées partagées par tous les gabarits, sans devoir répéter "
"le code correspondant dans chaque vue."

msgid ""
"Django provides many :ref:`built-in context processors <context-"
"processors>`, and you can implement your own additional context processors, "
"too."
msgstr ""
"Django fournit un bon nombre de :ref:`processeurs de contexte intégrés "
"<context-processors>`. Vous pouvez également implémenter vos propres "
"processeurs de contexte."

msgid "Support for template engines"
msgstr "Prise en charge des moteurs de gabarit"

msgid "Configuration"
msgstr "Configuration"

msgid ""
"Templates engines are configured with the :setting:`TEMPLATES` setting. It's "
"a list of configurations, one for each engine. The default value is empty. "
"The ``settings.py`` generated by the :djadmin:`startproject` command defines "
"a more useful value::"
msgstr ""
"Les moteurs de gabarit sont configurés dans le réglage :setting:`TEMPLATES`. "
"Il s'agit d'une liste de configurations, une par moteur. La valeur par "
"défaut est vide. Le fichier ``settings.py`` généré par la commande :djadmin:"
"`startproject` définit une valeur plus utile ::"

msgid ""
":setting:`BACKEND <TEMPLATES-BACKEND>` is a dotted Python path to a template "
"engine class implementing Django's template backend API. The built-in "
"backends are :class:`django.template.backends.django.DjangoTemplates` and :"
"class:`django.template.backends.jinja2.Jinja2`."
msgstr ""
":setting:`BACKEND <TEMPLATES-BACKEND>` est un chemin Python pointé vers une "
"classe de moteur de gabarit implémentant l'API de moteur de gabarit de "
"Django. Les moteurs intégrés sont :class:`django.template.backends.django."
"DjangoTemplates` et :class:`django.template.backends.jinja2.Jinja2`."

msgid ""
"Since most engines load templates from files, the top-level configuration "
"for each engine contains two common settings:"
msgstr ""
"Comme la plupart des moteurs chargent des gabarits à partir de fichiers, la "
"configuration de chaque moteur contient au premier niveau deux réglages "
"courants :"

msgid ""
":setting:`DIRS <TEMPLATES-DIRS>` defines a list of directories where the "
"engine should look for template source files, in search order."
msgstr ""
":setting:`DIRS <TEMPLATES-DIRS>` définit une liste de répertoires dans "
"lesquels le moteur recherche des fichiers sources de gabarits, dans l'ordre "
"de leur recherche."

msgid ""
":setting:`APP_DIRS <TEMPLATES-APP_DIRS>` tells whether the engine should "
"look for templates inside installed applications. Each backend defines a "
"conventional name for the subdirectory inside applications where its "
"templates should be stored."
msgstr ""
":setting:`APP_DIRS <TEMPLATES-APP_DIRS>` indique si le moteur doit "
"rechercher les gabarits dans les applications installées. Chaque moteur "
"définit un nom conventionnel à attribuer au sous-répertoire des applications "
"où ses gabarits devraient se trouver."

msgid ""
"While uncommon, it's possible to configure several instances of the same "
"backend with different options. In that case you should define a unique :"
"setting:`NAME <TEMPLATES-NAME>` for each engine."
msgstr ""
"Même si ce n'est pas fréquent, il est possible de configurer plusieurs "
"instances d'un même moteur avec des options différentes. Dans ce cas, il est "
"nécessaire de définir un nom :setting:`NAME <TEMPLATES-NAME>` unique pour "
"chaque moteur."

msgid ""
":setting:`OPTIONS <TEMPLATES-OPTIONS>` contains backend-specific settings."
msgstr ""
":setting:`OPTIONS <TEMPLATES-OPTIONS>` contient des réglages spécifiques au "
"moteur."

msgid ""
"The ``django.template.loader`` module defines two functions to load "
"templates."
msgstr ""
"Le module ``django.template.loader`` définit deux fonctions pour charger des "
"gabarits."

msgid ""
"This function loads the template with the given name and returns a "
"``Template`` object."
msgstr ""
"Cette fonction charge le gabarit ayant le nom donné et renvoie un objet "
"``Template``."

msgid ""
"The exact type of the return value depends on the backend that loaded the "
"template. Each backend has its own ``Template`` class."
msgstr ""
"Le type exact de la valeur renvoyée dépend du moteur qui a chargé le "
"gabarit. Chaque moteur possède sa propre classe ``Template``."

msgid ""
"``get_template()`` tries each template engine in order until one succeeds. "
"If the template cannot be found, it raises :exc:`~django.template."
"TemplateDoesNotExist`. If the template is found but contains invalid syntax, "
"it raises :exc:`~django.template.TemplateSyntaxError`."
msgstr ""
"``get_template()`` essaie avec chaque moteur de gabarit dans l'ordre jusqu'à "
"ce que l'un d'eux réussisse. Si le gabarit n'est pas trouvé, une exception :"
"exc:`~django.template.TemplateDoesNotExist` est générée. Si le gabarit est "
"trouvé mais contient une syntaxe non valable, une exception :exc:`~django."
"template.TemplateSyntaxError` est générée."

msgid ""
"How templates are searched and loaded depends on each engine's backend and "
"configuration."
msgstr ""
"La façon dont les gabarits sont recherchés et chargés dépend de chaque "
"moteur et de sa configuration."

msgid ""
"If you want to restrict the search to a particular template engine, pass the "
"engine's :setting:`NAME <TEMPLATES-NAME>` in the ``using`` argument."
msgstr ""
"Si vous souhaitez restreindre la recherche à un moteur de gabarit "
"particulier, passez le nom :setting:`NAME <TEMPLATES-NAME>` du moteur dans "
"le paramètre ``using``."

msgid ""
"``select_template()`` is just like ``get_template()``, except it takes a "
"list of template names. It tries each name in order and returns the first "
"template that exists."
msgstr ""
"``select_template()`` est semblable à ``get_template()``, sauf qu'il accepte "
"une liste de noms de gabarits. Il essaie chaque nom dans l'ordre et renvoie "
"le premier gabarit existant."

msgid ""
"If loading a template fails, the following two exceptions, defined in "
"``django.template``, may be raised:"
msgstr ""
"Si le chargement d'un gabarit échoue, les deux exceptions suivantes définies "
"dans ``django.template`` peuvent être générées :"

msgid ""
"This exception is raised when a template cannot be found. It accepts the "
"following optional arguments for populating the :ref:`template postmortem "
"<template-postmortem>` on the debug page:"
msgstr ""
"Cette exception est générée lorsqu'aucun gabarit n'a pu être trouvé. Elle "
"accepte les paramètres facultatifs suivants pour remplir le :ref:`gabarit "
"postmortem <template-postmortem>` sur la page de débogage :"

msgid "``backend``"
msgstr "``backend``"

msgid "The template backend instance from which the exception originated."
msgstr ""
"L'instance de moteur de gabarit dans lequel l'exception s'est produite."

msgid "``tried``"
msgstr "``tried``"

msgid ""
"A list of sources that were tried when finding the template. This is "
"formatted as a list of tuples containing ``(origin, status)``, where "
"``origin`` is an :ref:`origin-like <template-origin-api>` object and "
"``status`` is a string with the reason the template wasn't found."
msgstr ""
"Une liste de sources qui ont été parcourues pour la recherche du gabarit. "
"Elle se trouve sous la forme d'une liste de tuples contenant ``(origine, "
"statut)``, où ``origine`` est un objet de :ref:`type origine <template-"
"origin-api>` et ``statut`` est une chaîne contenant la raison expliquant "
"l'absence du gabarit."

msgid "``chain``"
msgstr "``chain``"

msgid ""
"A list of intermediate :exc:`~django.template.TemplateDoesNotExist` "
"exceptions raised when trying to load a template. This is used by functions, "
"such as :func:`~django.template.loader.get_template`, that try to load a "
"given template from multiple engines."
msgstr ""
"Une liste d'exceptions intermédiaires :exc:`~django.template."
"TemplateDoesNotExist` générées durant le chargement du gabarit. Ceci est "
"exploité par des fonctions comme :func:`~django.template.loader."
"get_template`, qui essaient de charger un gabarit donné depuis plusieurs "
"moteurs."

msgid "This exception is raised when a template was found but contains errors."
msgstr ""
"Cette exception est générée lorsqu'un gabarit a été trouvé, mais qu'il "
"contient des erreurs."

msgid ""
"``Template`` objects returned by ``get_template()`` and "
"``select_template()`` must provide a ``render()`` method with the following "
"signature:"
msgstr ""
"Les objets ``Template`` renvoyés par ``get_template()`` et "
"``select_template()`` doivent fournir une méthode ``render()`` ayant la "
"signature suivante :"

msgid "Renders this template with a given context."
msgstr "Produit ce gabarit en fonction du contexte donné."

msgid ""
"If ``context`` is provided, it must be a :class:`dict`. If it isn't "
"provided, the engine will render the template with an empty context."
msgstr ""
"Si ``context`` est fourni, il doit s'agir d'un :class:`dict`. S'il n'est pas "
"fourni, le moteur va produire le gabarit avec un contexte vide."

msgid ""
"If ``request`` is provided, it must be an :class:`~django.http.HttpRequest`. "
"Then the engine must make it, as well as the CSRF token, available in the "
"template. How this is achieved is up to each backend."
msgstr ""
"Si ``request`` est fourni, il doit s'agir d'un objet :class:`~django.http."
"HttpRequest`. Le moteur doit se charger ensuite de le rendre disponible, "
"ainsi que le jeton CSRF, dans le gabarit. La manière de le faire dépend de "
"chaque moteur."

msgid ""
"Here's an example of the search algorithm. For this example the :setting:"
"`TEMPLATES` setting is::"
msgstr ""
"Voici un exemple de l'algorithme de recherche. Pour cet exemple, le réglage :"
"setting:`TEMPLATES` est ::"

msgid ""
"If you call ``get_template('story_detail.html')``, here are the files Django "
"will look for, in order:"
msgstr ""
"Si vous appelez ``get_template('story_detail.html')``, voici les fichiers "
"que Django va rechercher, dans l'ordre :"

msgid "``/home/html/example.com/story_detail.html`` (``'django'`` engine)"
msgstr "``/home/html/example.com/story_detail.html`` (moteur ``'django'``)"

msgid "``/home/html/default/story_detail.html`` (``'django'`` engine)"
msgstr "``/home/html/default/story_detail.html`` (moteur ``'django'``)"

msgid "``/home/html/jinja2/story_detail.html`` (``'jinja2'`` engine)"
msgstr "``/home/html/jinja2/story_detail.html`` (moteur ``'jinja2'``)"

msgid ""
"If you call ``select_template(['story_253_detail.html', 'story_detail."
"html'])``, here's what Django will look for:"
msgstr ""
"Si vous appelez ``select_template(['story_253_detail.html', 'story_detail."
"html'])``, voici ce que Django va rechercher :"

msgid "``/home/html/example.com/story_253_detail.html`` (``'django'`` engine)"
msgstr "``/home/html/example.com/story_253_detail.html`` (moteur ``'django'``)"

msgid "``/home/html/default/story_253_detail.html`` (``'django'`` engine)"
msgstr "``/home/html/default/story_253_detail.html`` (moteur ``'django'``)"

msgid "``/home/html/jinja2/story_253_detail.html`` (``'jinja2'`` engine)"
msgstr "``/home/html/jinja2/story_253_detail.html`` (moteur ``'jinja2'``)"

msgid "When Django finds a template that exists, it stops looking."
msgstr "Lorsque Django trouve un gabarit existant, il stoppe sa recherche."

msgid "Use ``django.template.loader.select_template()`` for more flexibility"
msgstr ""
"Utilisez ``django.template.loader.select_template()`` pour plus de souplesse"

msgid ""
"You can use :func:`~django.template.loader.select_template()` for flexible "
"template loading. For example, if you've written a news story and want some "
"stories to have custom templates, use something like "
"``select_template(['story_%s_detail.html' % story.id, 'story_detail."
"html'])``. That'll allow you to use a custom template for an individual "
"story, with a fallback template for stories that don't have custom templates."
msgstr ""
"Vous pouvez utiliser :func:`~django.template.loader.select_template()` pour "
"une sélection agile des gabarits. Par exemple, si vous avez rédigé un "
"article et que vous voulez pouvoir utiliser des gabarits spécifiques pour "
"certains articles, utilisez quelque chose comme "
"``select_template(['story_%s_detail.html' % story.id, 'story_detail."
"html'])``. Cela vous permet d'utiliser un gabarit adapté à un article "
"individuel, tout en se rabattant sur un gabarit standard pour les articles "
"sans gabarit dédié."

msgid ""
"It's possible -- and preferable -- to organize templates in subdirectories "
"inside each directory containing templates. The convention is to make a "
"subdirectory for each Django app, with subdirectories within those "
"subdirectories as needed."
msgstr ""
"Il est possible -- et préférable -- d'organiser les gabarits dans des sous-"
"répertoires de chaque répertoire contenant des gabarits. La convention est "
"de créer un sous-répertoire par application Django, en y ajoutant d'autres "
"sous-répertoires au besoin."

msgid ""
"Do this for your own sanity. Storing all templates in the root level of a "
"single directory gets messy."
msgstr ""
"Ce conseil est tout à votre avantage. Le placement de tous les gabarits au "
"niveau racine d'un seul répertoire devient rapidement ingérable."

msgid "To load a template that's within a subdirectory, use a slash, like so::"
msgstr ""
"Pour charger un gabarit se trouvant dans un sous-répertoire, utilisez la "
"barre oblique, comme ceci ::"

msgid ""
"Using the same :setting:`TEMPLATES` option as above, this will attempt to "
"load the following templates:"
msgstr ""
"Toujours avec le même réglage :setting:`TEMPLATES` que ci-dessus, cet "
"exemple va tenter de charger les gabarits suivants :"

msgid "``/home/html/example.com/news/story_detail.html`` (``'django'`` engine)"
msgstr ""
"``/home/html/example.com/news/story_detail.html`` (moteur ``'django'``)"

msgid "``/home/html/default/news/story_detail.html`` (``'django'`` engine)"
msgstr "``/home/html/default/news/story_detail.html`` (moteur ``'django'``)"

msgid "``/home/html/jinja2/news/story_detail.html`` (``'jinja2'`` engine)"
msgstr "``/home/html/jinja2/news/story_detail.html`` (moteur ``'jinja2'``)"

msgid ""
"In addition, to cut down on the repetitive nature of loading and rendering "
"templates, Django provides a shortcut function which automates the process."
msgstr ""
"De plus, pour rationaliser l'aspect répétitif du chargement et de la "
"production des gabarits, Django propose une fonction raccourci qui "
"automatise le processus."

msgid ""
"``render_to_string()`` loads a template like :func:`get_template` and calls "
"its ``render()`` method immediately. It takes the following arguments."
msgstr ""
"``render_to_string()`` charge un gabarit comme :func:`get_template` et "
"appelle sa méthode ``render()`` immédiatement. Elle accepte les paramètres "
"ci-après."

msgid ""
"The name of the template to load and render. If it's a list of template "
"names, Django uses :func:`select_template` instead of :func:`get_template` "
"to find the template."
msgstr ""
"Le nom d'un gabarit à charger et à produire. S'il s'agit d'une liste de noms "
"de gabarits, Django utilise :func:`select_template` au lieu de :func:"
"`get_template` pour chercher le gabarit."

msgid "A :class:`dict` to be used as the template's context for rendering."
msgstr ""
"Un :class:`dict` à utiliser comme contexte de gabarit lors de la production."

msgid ""
"An optional :class:`~django.http.HttpRequest` that will be available during "
"the template's rendering process."
msgstr ""
"Un objet :class:`~django.http.HttpRequest` facultatif qui sera disponible "
"durant le processus de rendu du gabarit."

msgid ""
"An optional template engine :setting:`NAME <TEMPLATES-NAME>`. The search for "
"the template will be restricted to that engine."
msgstr ""
"Un nom :setting:`NAME <TEMPLATES-NAME>` de moteur de gabarit facultatif. La "
"recherche de gabarit sera limitée à ce moteur."

msgid "Usage example::"
msgstr "Exemple d'utilisation ::"

msgid ""
"See also the :func:`~django.shortcuts.render()` shortcut which calls :func:"
"`render_to_string()` and feeds the result into an :class:`~django.http."
"HttpResponse` suitable for returning from a view."
msgstr ""
"Voir aussi le raccourci :func:`~django.shortcuts.render()` qui appelle :func:"
"`render_to_string()` et fournit le résultat à un objet :class:`~django.http."
"HttpResponse` prêt à être renvoyé depuis une vue."

msgid "Finally, you can use configured engines directly:"
msgstr "Finalement, vous pouvez utiliser directement des moteurs configurés :"

msgid "Template engines are available in ``django.template.engines``::"
msgstr ""
"Les moteurs de gabarit sont disponibles dans ``django.template.engines``::"

msgid ""
"The lookup key — ``'django'`` in this example — is the engine's :setting:"
"`NAME <TEMPLATES-NAME>`."
msgstr ""
"La clé de recherche, ``'django'`` dans cet exemple, correspond au réglage :"
"setting:`NAME <TEMPLATES-NAME>` du moteur."

msgid "Built-in backends"
msgstr "Moteurs intégrés"

msgid ""
"Set :setting:`BACKEND <TEMPLATES-BACKEND>` to ``'django.template.backends."
"django.DjangoTemplates'`` to configure a Django template engine."
msgstr ""
"Définissez :setting:`BACKEND <TEMPLATES-BACKEND>` à ``'django.template."
"backends.django.DjangoTemplates'`` pour configurer un moteur de gabarit de "
"Django."

msgid ""
"When :setting:`APP_DIRS <TEMPLATES-APP_DIRS>` is ``True``, "
"``DjangoTemplates`` engines look for templates in the ``templates`` "
"subdirectory of installed applications. This generic name was kept for "
"backwards-compatibility."
msgstr ""
"Lorsque :setting:`APP_DIRS <TEMPLATES-APP_DIRS>` vaut ``True``, les moteurs "
"``DjangoTemplates`` cherchent les gabarits dans le sous-répertoire "
"``templates`` des applications installées. Ce nom générique a été conservé "
"par rétrocompatibilité."

msgid ""
"``DjangoTemplates`` engines accept the following :setting:`OPTIONS "
"<TEMPLATES-OPTIONS>`:"
msgstr ""
"Les moteurs ``DjangoTemplates`` acceptent les :setting:`OPTIONS <TEMPLATES-"
"OPTIONS>` suivantes :"

msgid ""
"``'autoescape'``: a boolean that controls whether HTML autoescaping is "
"enabled."
msgstr ""
"``'autoescape'``: une valeur booléenne contrôlant si l'auto-échappement HTML "
"est activé."

msgid "It defaults to ``True``."
msgstr "Sa valeur par défaut est ``True``."

msgid "Only set it to ``False`` if you're rendering non-HTML templates!"
msgstr "Ne la mettez à ``False`` que si vous produisez des gabarits non HTML !"

msgid ""
"``'context_processors'``: a list of dotted Python paths to callables that "
"are used to populate the context when a template is rendered with a request. "
"These callables take a request object as their argument and return a :class:"
"`dict` of items to be merged into the context."
msgstr ""
"``'context_processors'``: une liste de chemins Python pointés vers des "
"objets exécutables utilisés pour remplir le contexte lorsqu'un gabarit est "
"produit avec une requête. Ces exécutables acceptent un objet requête comme "
"paramètre et renvoient un dictionnaire d'éléments à fusionner dans le "
"contexte."

msgid "It defaults to an empty list."
msgstr "La valeur par défaut est une liste vide."

msgid "See :class:`~django.template.RequestContext` for more information."
msgstr ""
"Voir :class:`~django.template.RequestContext` pour plus d'informations."

msgid ""
"``'debug'``: a boolean that turns on/off template debug mode. If it is "
"``True``, the fancy error page will display a detailed report for any "
"exception raised during template rendering. This report contains the "
"relevant snippet of the template with the appropriate line highlighted."
msgstr ""
"``'debug'``: une valeur booléenne qui active ou désactive le mode débogage "
"des gabarits. Quand elle vaut ``True``, une page d'erreur élaborée affiche "
"un rapport détaillé lors de toute exception générée durant le rendu des "
"gabarits. Ce rapport contient les extraits concernés du gabarit avec les "
"bonnes lignes mises en évidence."

msgid "It defaults to the value of the :setting:`DEBUG` setting."
msgstr ""
"La valeur par défaut correspond à la valeur du réglage :setting:`DEBUG`."

msgid ""
"``'loaders'``: a list of dotted Python paths to template loader classes. "
"Each ``Loader`` class knows how to import templates from a particular "
"source. Optionally, a tuple can be used instead of a string. The first item "
"in the tuple should be the ``Loader`` class name, and subsequent items are "
"passed to the ``Loader`` during initialization."
msgstr ""
"``'loaders'``: une liste de chemins Python pointés vers des classes de "
"chargeurs de gabarits. Chaque classe ``Loader`` sait comment importer les "
"gabarits d'une source particulière. Il est possible d'indiquer des tuples au "
"lieu de chaînes. Le premier élément du tuple correspond au nom de classe de "
"``Loader`` alors que les éléments suivants seront transmis à la classe "
"``Loader`` en vue de son initialisation."

msgid ""
"The default depends on the values of :setting:`DIRS <TEMPLATES-DIRS>` and :"
"setting:`APP_DIRS <TEMPLATES-APP_DIRS>`."
msgstr ""
"La valeur par défaut dépend des valeurs de :setting:`DIRS <TEMPLATES-DIRS>` "
"et de :setting:`APP_DIRS <TEMPLATES-APP_DIRS>`."

msgid "See :ref:`template-loaders` for details."
msgstr "Voir :ref:`template-loaders` pour les détails."

msgid ""
"``'string_if_invalid'``: the output, as a string, that the template system "
"should use for invalid (e.g. misspelled) variables."
msgstr ""
"``'string_if_invalid'``: résultat, sous forme de chaîne de caractères, que "
"le système des gabarits utilise pour remplacer le contenu de variables non "
"valides (par ex. mal orthographiées)."

msgid "It defaults to an empty string."
msgstr "La valeur par défaut est une chaîne vide."

msgid "See :ref:`invalid-template-variables` for details."
msgstr "Voir :ref:`invalid-template-variables` pour les détails."

msgid "``'file_charset'``: the charset used to read template files on disk."
msgstr ""
"``'file_charset'``: le jeu de caractères utilisé pour lire les fichiers de "
"gabarits depuis le disque."

msgid "It defaults to ``'utf-8'``."
msgstr "Sa valeur par défaut est ``'utf-8'``."

msgid ""
"``'libraries'``: A dictionary of labels and dotted Python paths of template "
"tag modules to register with the template engine. This can be used to add "
"new libraries or provide alternate labels for existing ones. For example::"
msgstr ""
"``'libraries'``: un dictionnaire d'étiquettes et de chemins Python pointés "
"de modules de balises de gabarit à inscrire auprès du moteur de gabarit. "
"Ceci peut être utilisé pour ajouter de nouvelles bibliothèques ou pour "
"fournir des étiquettes alternatives à celles qui existent. Par exemple ::"

msgid ""
"Libraries can be loaded by passing the corresponding dictionary key to the :"
"ttag:`{% load %}<load>` tag."
msgstr ""
"Les bibliothèques peuvent être chargées en passant la clé de dictionnaire "
"correspondante à la balise :ttag:`{% load %}<load>`."

msgid ""
"``'builtins'``: A list of dotted Python paths of template tag modules to add "
"to :doc:`built-ins </ref/templates/builtins>`. For example::"
msgstr ""
"``'builtins'``: une liste de chemins Python pointés de modules de balises de "
"gabarit à ajouter aux :doc:`modules intégrés </ref/templates/builtins>`. Par "
"exemple ::"

msgid ""
"Tags and filters from built-in libraries can be used without first calling "
"the :ttag:`{% load %} <load>` tag."
msgstr ""
"Les balises et les filtres des bibliothèques intégrées peuvent être utilisés "
"sans devoir d'abord faire appel à la balise :ttag:`{% load %} <load>`."

msgid "Requires Jinja2_ to be installed:"
msgstr "Nécessite que Jinja2_ soit installé :"

msgid ""
"Set :setting:`BACKEND <TEMPLATES-BACKEND>` to ``'django.template.backends."
"jinja2.Jinja2'`` to configure a Jinja2_ engine."
msgstr ""
"Définissez :setting:`BACKEND <TEMPLATES-BACKEND>` à ``'django.template."
"backends.jinja2.Jinja2'`` pour configurer un moteur de gabarit Jinja2_."

msgid ""
"When :setting:`APP_DIRS <TEMPLATES-APP_DIRS>` is ``True``, ``Jinja2`` "
"engines look for templates in the ``jinja2`` subdirectory of installed "
"applications."
msgstr ""
"Lorsque :setting:`APP_DIRS <TEMPLATES-APP_DIRS>` vaut ``True``, les moteurs "
"``Jinja2`` cherchent les gabarits dans le sous-répertoire ``jinja2`` des "
"applications installées."

msgid ""
"The most important entry in :setting:`OPTIONS <TEMPLATES-OPTIONS>` is "
"``'environment'``. It's a dotted Python path to a callable returning a "
"Jinja2 environment. It defaults to ``'jinja2.Environment'``. Django invokes "
"that callable and passes other options as keyword arguments. Furthermore, "
"Django adds defaults that differ from Jinja2's for a few options:"
msgstr ""
"L'élément le plus important dans :setting:`OPTIONS <TEMPLATES-OPTIONS>` est "
"``'environment'``. Il s'agit d'un chemin Python pointé vers un objet "
"exécutable renvoyant un environnement Jinja2. La valeur par défaut est "
"``'jinja2.Environment'``. Django appelle cet objet et transmet d'autres "
"options en tant que paramètres nommés. De plus, ajoute des valeurs par "
"défaut qui diffèrent de celles de Jinja2 pour quelques-unes :"

msgid "``'autoescape'``: ``True``"
msgstr "``'autoescape'``: ``True``"

msgid ""
"``'loader'``: a loader configured for :setting:`DIRS <TEMPLATES-DIRS>` and :"
"setting:`APP_DIRS <TEMPLATES-APP_DIRS>`"
msgstr ""
"``'loader'``: un chargeur configuré pour :setting:`DIRS <TEMPLATES-DIRS>` "
"et :setting:`APP_DIRS <TEMPLATES-APP_DIRS>`"

msgid "``'auto_reload'``: ``settings.DEBUG``"
msgstr "``'auto_reload'``: ``settings.DEBUG``"

msgid "``'undefined'``: ``DebugUndefined if settings.DEBUG else Undefined``"
msgstr ""
"``'undefined'``: ``DebugUndefined`` si ``settings.DEBUG`` sinon ``Undefined``"

msgid ""
"``Jinja2`` engines also accept the following :setting:`OPTIONS <TEMPLATES-"
"OPTIONS>`:"
msgstr ""
"Les moteurs ``Jinja2`` acceptent aussi les :setting:`OPTIONS <TEMPLATES-"
"OPTIONS>` suivantes :"

msgid "Using context processors with Jinja2 templates is discouraged."
msgstr ""
"L'utilisation de processeurs de contexte avec les gabarits Jinja2 est "
"déconseillée."

msgid ""
"Context processors are useful with Django templates because Django templates "
"don't support calling functions with arguments. Since Jinja2 doesn't have "
"that limitation, it's recommended to put the function that you would use as "
"a context processor in the global variables available to the template using "
"``jinja2.Environment`` as described below. You can then call that function "
"in the template:"
msgstr ""
"Les processeurs de contexte sont utiles avec les gabarits Django car ceux-ci "
"ne permettent pas d'appeler des fonctions avec paramètres. Comme Jinja2 ne "
"connaît pas cette restriction, il est recommandé de placer la fonction qui "
"aurait été utilisée dans un processeur de contexte dans les variables "
"globales à disposition du gabarit en utilisant ``jinja2.Environment``, comme "
"décrit ci-dessous. Vous pouvez alors appeler cette fonction dans le gabarit :"

msgid ""
"Some Django templates context processors return a fixed value. For Jinja2 "
"templates, this layer of indirection isn't necessary since you can add "
"constants directly in ``jinja2.Environment``."
msgstr ""
"Certains processeurs de contexte des gabarits Django renvoient une valeur "
"fixe. Pour les gabarits Jinja2, ce niveau d'indirection n'est pas nécessaire "
"car il est possible d'ajouter des constantes directement dans ``jinja2."
"Environment``."

msgid ""
"The original use case for adding context processors for Jinja2 involved:"
msgstr ""
"Le cas d'utilisation original pour l'ajout de processeurs de contexte avec "
"Jinja2 impliquait :"

msgid "Making an expensive computation that depends on the request."
msgstr "La réalisation de calculs intensifs dépendant de la requête."

msgid "Needing the result in every template."
msgstr "La disponibilité du résultat dans chaque gabarit."

msgid "Using the result multiple times in each template."
msgstr "L'utilisation du résultat plusieurs fois dans chaque gabarit."

msgid ""
"Unless all of these conditions are met, passing a function to the template "
"is more in line with the design of Jinja2."
msgstr ""
"Tant que toutes ces conditions ne sont pas respectées, il est plus en accord "
"avec les concepts de Jinja2 de passer une fonction au gabarit."

msgid ""
"The default configuration is purposefully kept to a minimum. If a template "
"is rendered with a request (e.g. when using :py:func:`~django.shortcuts."
"render`), the ``Jinja2`` backend adds the globals ``request``, "
"``csrf_input``, and ``csrf_token`` to the context. Apart from that, this "
"backend doesn't create a Django-flavored environment. It doesn't know about "
"Django filters and tags. In order to use Django-specific APIs, you must "
"configure them into the environment."
msgstr ""
"La configuration par défaut est volontairement limitée au minimum. Si un "
"gabarit est produit avec une requête (par ex. en utilisant :py:func:`~django."
"shortcuts.render`), le moteur ``Jinja2`` ajoute les éléments globaux "
"``request``, ``csrf_input`` et ``csrf_token`` au contexte. À part ça, ce "
"moteur ne crée pas d'environnement adapté à Django. Il n'a pas connaissance "
"des filtres et des balises de Django. Afin de pouvoir utiliser des API "
"spécifiques à Django, vous devez les configurer dans l'environnement."

msgid "For example, you can create ``myproject/jinja2.py`` with this content::"
msgstr ""
"Par exemple, vous pouvez créer ``monproject/jinja2.py`` avec ce contenu ::"

msgid ""
"and set the ``'environment'`` option to ``'myproject.jinja2.environment'``."
msgstr ""
"et définir l'option ``'environment'`` à ``'monproject.jinja2.environment'``."

msgid "Then you could use the following constructs in Jinja2 templates:"
msgstr ""
"Dès lors, vous pouvez utiliser les structures suivantes dans les gabarits "
"Jinja2 :"

msgid ""
"The concepts of tags and filters exist both in the Django template language "
"and in Jinja2 but they're used differently. Since Jinja2 supports passing "
"arguments to callables in templates, many features that require a template "
"tag or filter in Django templates can be achieved by calling a function in "
"Jinja2 templates, as shown in the example above. Jinja2's global namespace "
"removes the need for template context processors. The Django template "
"language doesn't have an equivalent of Jinja2 tests."
msgstr ""
"Les concepts de balises et filtres existent aussi bien dans le langage de "
"gabarit de Django que dans Jinja2, mais ils sont utilisés différemment. "
"Comme Jinja2 prend en charge le passage de paramètres à des objets "
"exécutables dans les gabarits, beaucoup de fonctionnalités qui nécessitent "
"une balise de gabarit ou un filtre dans les gabarits Django peuvent être "
"implémentées en appelant une fonction dans les gabarits Jinja2, comme "
"l'exemple ci-dessus le montre. L'espace de noms global de Jinja2 élimine le "
"besoin de processeurs de contexte de gabarit. Le langage de gabarit de "
"Django ne possède pas d'équivalent aux tests Jinja2."

msgid "Advanced testing topics"
msgstr "Thématiques de tests avancées"

msgid "The request factory"
msgstr "La fabrique de requêtes"

msgid ""
"The :class:`~django.test.RequestFactory` shares the same API as the test "
"client. However, instead of behaving like a browser, the RequestFactory "
"provides a way to generate a request instance that can be used as the first "
"argument to any view. This means you can test a view function the same way "
"as you would test any other function -- as a black box, with exactly known "
"inputs, testing for specific outputs."
msgstr ""
"La classe :class:`~django.test.RequestFactory` partage la même API que le "
"client de test. Cependant, au lieu de se comporter comme un navigateur, "
"``RequestFactory`` offre une manière de générer une instance de requête "
"pouvant être utilisée comme premier paramètre de n'importe quelle vue. Cela "
"permet de tester une fonction de vue de la même façon que vous testeriez "
"toute autre fonction, comme une boîte noire, avec des données connues en "
"entrée et en testant un résultat spécifique."

msgid ""
"The API for the :class:`~django.test.RequestFactory` is a slightly "
"restricted subset of the test client API:"
msgstr ""
"L'API de :class:`~django.test.RequestFactory` est un tout petit peu plus "
"restreinte que celle du client de test :"

msgid ""
"It only has access to the HTTP methods :meth:`~Client.get()`, :meth:`~Client."
"post()`, :meth:`~Client.put()`, :meth:`~Client.delete()`, :meth:`~Client."
"head()`, :meth:`~Client.options()`, and :meth:`~Client.trace()`."
msgstr ""
"Elle ne donne accès qu'aux méthodes HTTP :meth:`~Client.get()`, :meth:"
"`~Client.post()`, :meth:`~Client.put()`, :meth:`~Client.delete()`, :meth:"
"`~Client.head()`, :meth:`~Client.options()` et :meth:`~Client.trace()`."

msgid ""
"These methods accept all the same arguments *except* for ``follow``. Since "
"this is just a factory for producing requests, it's up to you to handle the "
"response."
msgstr ""
"Toutes ces méthodes acceptent les mêmes paramètres, *à l'exception* de "
"``follow``. Comme il ne s'agit que d'une fabrique produisant des requêtes, "
"le traitement de la réponse est de votre responsabilité."

msgid ""
"It does not support middleware. Session and authentication attributes must "
"be supplied by the test itself if required for the view to function properly."
msgstr ""
"Elle ne gère pas les intergiciels. Les attributs de session et "
"d'authentification doivent être fournis par le test lui-même, si nécessaire, "
"pour que la vue fonctionne correctement."

msgid "The ``query_params`` parameter was added."
msgstr "Le paramètre ``query_params`` a été ajouté."

msgid "The following is a unit test using the request factory::"
msgstr ""
"L'exemple suivant est un test unitaire utilisant la fabrique de requêtes ::"

msgid "AsyncRequestFactory"
msgstr "AsyncRequestFactory"

msgid ""
"``RequestFactory`` creates WSGI-like requests. If you want to create ASGI-"
"like requests, including having a correct ASGI ``scope``, you can instead "
"use ``django.test.AsyncRequestFactory``."
msgstr ""
"``RequestFactory`` crée des requêtes de type WSGI. Si vous souhaitez créer "
"des requêtes de type ASGI, ayant aussi une portée ``scope`` ASGI correcte, "
"vous pouvez utiliser ``django.test.AsyncRequestFactory`` à la place."

msgid ""
"This class is directly API-compatible with ``RequestFactory``, with the only "
"difference being that it returns ``ASGIRequest`` instances rather than "
"``WSGIRequest`` instances. All of its methods are still synchronous "
"callables."
msgstr ""
"L'API de cette classe est directement compatible avec ``RequestFactory``, "
"avec comme seule différence le renvoi d'instances ``ASGIRequest`` au lieu de "
"``WSGIRequest``. Toutes ses méthodes restent des exécutables synchrones."

msgid ""
"Arbitrary keyword arguments in ``defaults`` are added directly into the ASGI "
"scope."
msgstr ""
"Les paramètres mot-clé arbitraires dans ``defaults`` sont ajoutés "
"directement dans la portée ASGI."

msgid "Testing class-based views"
msgstr "Test des vues fondées sur les classes"

msgid ""
"In order to test class-based views outside of the request/response cycle you "
"must ensure that they are configured correctly, by calling :meth:`~django."
"views.generic.base.View.setup` after instantiation."
msgstr ""
"Afin de tester les vues fondées sur des classes en dehors du cycle requête/"
"réponse, vous devez vous assurer qu'elles sont configurées correctement en "
"appelant :meth:`~django.views.generic.base.View.setup` après leur "
"instanciation."

msgid "For example, assuming the following class-based view:"
msgstr "Par exemple, en partant de la vue classe suivante :"

msgid ""
"You may directly test the ``get_context_data()`` method by first "
"instantiating the view, then passing a ``request`` to ``setup()``, before "
"proceeding with your test's code:"
msgstr ""
"Vous pouvez directement tester la méthode ``get_context_data()`` en "
"commençant par créer une instance de la vue, puis en passant une requête à "
"``setup()`` avant de procéder au test du code :"

msgid "``tests.py``"
msgstr "``tests.py``"

msgid "Tests and multiple host names"
msgstr "Tests avec plusieurs noms d'hôtes"

msgid ""
"The :setting:`ALLOWED_HOSTS` setting is validated when running tests. This "
"allows the test client to differentiate between internal and external URLs."
msgstr ""
"Le réglage :setting:`ALLOWED_HOSTS` est validé lors de l'exécution des "
"tests. Cela permet au client de test de faire la différence entre les URL "
"internes et externes."

msgid ""
"Projects that support multitenancy or otherwise alter business logic based "
"on the request's host and use custom host names in tests must include those "
"hosts in :setting:`ALLOWED_HOSTS`."
msgstr ""
"Les projets qui gèrent plusieurs domaines par site ou adaptent leur "
"comportement en fonction de l'hôte de la requête et qui utilisent des noms "
"d'hôte particuliers dans les tests doivent inclure ces noms d'hôte dans :"
"setting:`ALLOWED_HOSTS`."

msgid ""
"The first option to do so is to add the hosts to your settings file. For "
"example, the test suite for docs.djangoproject.com includes the following::"
msgstr ""
"La première option pour accomplir cela est d'ajouter les hôtes dans le "
"fichier des réglages. Par exemple, la suite de tests de docs.djangoproject."
"com contient ceci ::"

msgid ""
"and the settings file includes a list of the domains supported by the "
"project::"
msgstr ""
"et le fichier des réglages contient une liste des domaines pris en charge "
"par le projet ::"

msgid ""
"Another option is to add the required hosts to :setting:`ALLOWED_HOSTS` "
"using :meth:`~django.test.override_settings()` or :attr:`~django.test."
"SimpleTestCase.modify_settings()`. This option may be preferable in "
"standalone apps that can't package their own settings file or for projects "
"where the list of domains is not static (e.g., subdomains for multitenancy). "
"For example, you could write a test for the domain ``http://otherserver/`` "
"as follows::"
msgstr ""
"Une autre option est d'ajouter les hôtes nécessaires dans :setting:"
"`ALLOWED_HOSTS` en utilisant :meth:`~django.test.override_settings()` ou :"
"attr:`~django.test.SimpleTestCase.modify_settings()`. Cette option peut être "
"préférable pour les applications autonomes qui ne peuvent pas fournir leur "
"propre fichier de réglages ou pour les projets dont la liste des domaines "
"n'est pas figée (par ex. des sous-domaines dans un service partagé). Par "
"exemple, il serait possible d'écrire un test pour le domaine ``http://"
"otherserver/`` comme ceci ::"

msgid ""
"Disabling :setting:`ALLOWED_HOSTS` checking (``ALLOWED_HOSTS = ['*']``) when "
"running tests prevents the test client from raising a helpful error message "
"if you follow a redirect to an external URL."
msgstr ""
"La désactivation du contrôle de :setting:`ALLOWED_HOSTS` (``ALLOWED_HOSTS = "
"['*']``) lors de l'exécution des tests empêche le client de test de produire "
"un message d'erreur instructif si une redirection est appelée pour une URL "
"externe."

msgid "Tests and multiple databases"
msgstr "Tests avec plusieurs base de données"

msgid "Testing primary/replica configurations"
msgstr "Test des configurations primaire/réplique"

msgid ""
"If you're testing a multiple database configuration with primary/replica "
"(referred to as master/slave by some databases) replication, this strategy "
"of creating test databases poses a problem. When the test databases are "
"created, there won't be any replication, and as a result, data created on "
"the primary won't be seen on the replica."
msgstr ""
"Si vous testez une configuration avec plusieurs bases de données impliquant "
"une réplication primaire/réplique (désignée comme maître/esclave par "
"certaines bases de données), cette stratégie de création de bases de données "
"de test pose un problème. Lorsque les bases de données de test sont créées, "
"la réplication n'a pas lieu et par conséquent, les données créées sur la "
"base primaire ne seront pas visibles sur les répliques."

msgid ""
"To compensate for this, Django allows you to define that a database is a "
"*test mirror*. Consider the following (simplified) example database "
"configuration::"
msgstr ""
"Pour contourner ce problème, Django permet de définir une base de données "
"comme un *miroir de test*. Considérez cet exemple (simplifié) de "
"configuration de bases de données ::"

msgid ""
"In this setup, we have two database servers: ``dbprimary``, described by the "
"database alias ``default``, and ``dbreplica`` described by the alias "
"``replica``. As you might expect, ``dbreplica`` has been configured by the "
"database administrator as a read replica of ``dbprimary``, so in normal "
"activity, any write to ``default`` will appear on ``replica``."
msgstr ""
"Dans cette configuration figurent deux serveurs de base de données : "
"``dbprimary``, défini par l'alias de base de données ``default`` et "
"``dbreplica``, défini par l'alias ``replica``. Comme l'on peut s'y attendre, "
"``dbreplica`` a été configuré par l'administrateur de base de données comme "
"réplique en lecture de ``dbprimary``. En temps normal, toute écriture sur "
"``default`` apparaît aussi sur ``replica``."

msgid ""
"If Django created two independent test databases, this would break any tests "
"that expected replication to occur. However, the ``replica`` database has "
"been configured as a test mirror (using the :setting:`MIRROR <TEST_MIRROR>` "
"test setting), indicating that under testing, ``replica`` should be treated "
"as a mirror of ``default``."
msgstr ""
"Si Django avait créé deux bases de données de test indépendantes, cela "
"casserait d'éventuels tests s'attendant à de la réplication. Cependant, la "
"base de données ``replica`` a été configurée comme miroir de test (via le "
"réglage de test :setting:`MIRROR <TEST_MIRROR>`), indiquant par là que lors "
"des tests, ``replica`` doit être traité comme un miroir de ``default``."

msgid ""
"When the test environment is configured, a test version of ``replica`` will "
"*not* be created. Instead the connection to ``replica`` will be redirected "
"to point at ``default``. As a result, writes to ``default`` will appear on "
"``replica`` -- but because they are actually the same database, not because "
"there is data replication between the two databases. As this depends on "
"transactions, the tests must use :class:`~django.test.TransactionTestCase` "
"instead of :class:`~django.test.TestCase`."
msgstr ""
"Au moment de la création de l'environnement de test, *aucune* base ne sera "
"créée pour ``replica``. Par contre, la connexion vers ``replica`` sera "
"redirigée pour pointer vers ``default``. Par conséquent, les écritures sur "
"``default`` apparaîtront aussi sur ``replica``, mais parce qu'il s'agit en "
"réalité de la même base de données, car aucune réplication de données ne "
"sera mise en place entre les deux bases de données. Comme cela dépend des "
"transactions, les tests doivent utiliser :class:`~django.test."
"TransactionTestCase` au lieu de :class:`~django.test.TestCase`."

msgid "Controlling creation order for test databases"
msgstr "Ordre de création des bases de données de test"

msgid ""
"By default, Django will assume all databases depend on the ``default`` "
"database and therefore always create the ``default`` database first. "
"However, no guarantees are made on the creation order of any other databases "
"in your test setup."
msgstr ""
"Par défaut, Django part du principe que toutes les bases de données "
"dépendent de la base de données ``default`` et va par conséquent toujours "
"créer celle-ci en premier. Cependant, pour toute autre base de données de "
"votre configuration de test, il n'y a aucune garantie sur l'ordre de "
"création des bases de données."

msgid ""
"If your database configuration requires a specific creation order, you can "
"specify the dependencies that exist using the :setting:`DEPENDENCIES "
"<TEST_DEPENDENCIES>` test setting. Consider the following (simplified) "
"example database configuration::"
msgstr ""
"Si votre configuration de base de données nécessite un ordre de création "
"bien défini, vous pouvez indiquer les dépendances entre bases de données "
"dans le réglage de test :setting:`DEPENDENCIES <TEST_DEPENDENCIES>`. "
"Considérez cet exemple (simplifié) de configuration de bases de données ::"

msgid ""
"Under this configuration, the ``diamonds`` database will be created first, "
"as it is the only database alias without dependencies. The ``default`` and "
"``clubs`` alias will be created next (although the order of creation of this "
"pair is not guaranteed), then ``hearts``, and finally ``spades``."
msgstr ""
"Avec cette configuration, la base de données ``diamonds`` sera créée en "
"premier car c'est le seul alias de base de données sans dépendances. Les "
"alias ``default`` et ``clubs`` seront ensuite créés (bien que l'ordre de "
"création de ceux-ci ne soit pas défini), puis ``hearts`` et enfin, "
"``spades``."

msgid ""
"If there are any circular dependencies in the :setting:`DEPENDENCIES "
"<TEST_DEPENDENCIES>` definition, an :exc:`~django.core.exceptions."
"ImproperlyConfigured` exception will be raised."
msgstr ""
"Si la définition de :setting:`DEPENDENCIES <TEST_DEPENDENCIES>` comporte des "
"dépendances circulaires, une exception :exc:`~django.core.exceptions."
"ImproperlyConfigured` sera générée."

msgid "Advanced features of ``TransactionTestCase``"
msgstr "Fonctionnalités avancées de ``TransactionTestCase``"

msgid ""
"This attribute is a private API. It may be changed or removed without a "
"deprecation period in the future, for instance to accommodate changes in "
"application loading."
msgstr ""
"Cet attribut est une API privée. Il peut être modifié ou supprimé dans une "
"version future sans période d'obsolescence, par exemple pour s'adapter à des "
"modifications du processus de chargement des applications."

msgid ""
"It's used to optimize Django's own test suite, which contains hundreds of "
"models but no relations between models in different applications."
msgstr ""
"Il est utilisé pour optimiser la suite de tests de Django lui-même qui "
"contient des centaines de modèles mais sans relations entre les modèles des "
"différentes applications de test."

msgid ""
"By default, ``available_apps`` is set to ``None``. After each test, Django "
"calls :djadmin:`flush` to reset the database state. This empties all tables "
"and emits the :data:`~django.db.models.signals.post_migrate` signal, which "
"recreates one content type and four permissions for each model. This "
"operation gets expensive proportionally to the number of models."
msgstr ""
"Par défaut, ``available_apps`` vaut ``None``. Après chaque test, Django "
"appelle :djadmin:`flush` pour réinitialiser l'état de la base de données. "
"Toutes les tables sont ainsi vidées et le signal :data:`~django.db.models."
"signals.post_migrate` est émis, ce qui recrée un type de contenu et quatre "
"permissions pour chaque modèle. Cette opération s'alourdit "
"proportionnellement au nombre de modèles."

msgid ""
"Setting ``available_apps`` to a list of applications instructs Django to "
"behave as if only the models from these applications were available. The "
"behavior of ``TransactionTestCase`` changes as follows:"
msgstr ""
"En définissant ``available_apps`` à une liste d'applications, Django se "
"comporte comme si seuls les modèles de ces applications étaient disponibles. "
"Le comportement de ``TransactionTestCase`` est modifié comme suit :"

msgid ""
":data:`~django.db.models.signals.post_migrate` is fired before each test to "
"create the content types and permissions for each model in available apps, "
"in case they're missing."
msgstr ""
":data:`~django.db.models.signals.post_migrate` est émis avant chaque test "
"pour créer les types de contenu et les permissions de chaque modèle des "
"applications disponibles, dans le cas où ils manqueraient."

msgid ""
"After each test, Django empties only tables corresponding to models in "
"available apps. However, at the database level, truncation may cascade to "
"related models in unavailable apps. Furthermore :data:`~django.db.models."
"signals.post_migrate` isn't fired; it will be fired by the next "
"``TransactionTestCase``, after the correct set of applications is selected."
msgstr ""
"Après chaque test, Django ne vide que les tables correspondants aux modèles "
"des applications disponibles. Cependant, au niveau de la base de données, il "
"est possible que les troncatures s'appliquent en cascade à des modèles liés "
"dans des applications non disponibles. De plus, :data:`~django.db.models."
"signals.post_migrate` n'est pas émis ; il sera émis par le prochain test  "
"``TransactionTestCase``, après que l'ensemble d'applications adéquat a été "
"sélectionné."

msgid ""
"Since the database isn't fully flushed, if a test creates instances of "
"models not included in ``available_apps``, they will leak and they may cause "
"unrelated tests to fail. Be careful with tests that use sessions; the "
"default session engine stores them in the database."
msgstr ""
"Comme la base de données n'est pas complètement vidée, si un test crée des "
"instances de modèles non inclus dans ``available_apps``, ces instances vont "
"rester et pourraient être la cause d'échecs de tests non liés. Restez "
"prudent avec les tests employant des sessions ; le moteur de sessions par "
"défaut les stocke dans la base de données."

msgid ""
"Since :data:`~django.db.models.signals.post_migrate` isn't emitted after "
"flushing the database, its state after a ``TransactionTestCase`` isn't the "
"same as after a ``TestCase``: it's missing the rows created by listeners to :"
"data:`~django.db.models.signals.post_migrate`. Considering the :ref:`order "
"in which tests are executed <order-of-tests>`, this isn't an issue, provided "
"either all ``TransactionTestCase`` in a given test suite declare "
"``available_apps``, or none of them."
msgstr ""
"Comme :data:`~django.db.models.signals.post_migrate` n'est pas émis après la "
"réinitialisation de la base de données, son état après un "
"``TransactionTestCase`` n'est pas le même qu'après un ``TestCase``: les "
"lignes créées par les récepteurs de :data:`~django.db.models.signals."
"post_migrate` sont manquantes. Mais sachant :ref:`l'ordre dans lequel les "
"tests sont exécutés <order-of-tests>`, ce n'est pas un problème, dans la "
"mesure où soit tous les tests ``TransactionTestCase`` d'une suite de tests "
"déclarent ``available_apps``, soit aucun."

msgid "``available_apps`` is mandatory in Django's own test suite."
msgstr ""
"``available_apps`` est obligatoire dans la propre suite de tests de Django."

msgid ""
"Setting ``reset_sequences = True`` on a ``TransactionTestCase`` will make "
"sure sequences are always reset before the test run::"
msgstr ""
"En définissant ``reset_sequences = True`` d'une classe "
"``TransactionTestCase``, vous vous assurez que les séquences sont toujours "
"réinitialisées avant le lancement du test ::"

msgid ""
"Unless you are explicitly testing primary keys sequence numbers, it is "
"recommended that you do not hard code primary key values in tests."
msgstr ""
"À l'exception des cas où vous testez explicitement les numéros de séquence "
"de clés primaires, il est recommandé de ne pas tester des valeurs de clés "
"primaires figées."

msgid ""
"Using ``reset_sequences = True`` will slow down the test, since the primary "
"key reset is a relatively expensive database operation."
msgstr ""
"L'utilisation de ``reset_sequences = True`` ralentit les tests, car la "
"réinitialisation des clés primaires est une opération de base de données "
"relativement coûteuse."

msgid "Enforce running test classes sequentially"
msgstr "Exécution séquentielle forcée des classes de tests"

msgid ""
"If you have test classes that cannot be run in parallel (e.g. because they "
"share a common resource), you can use ``django.test.testcases."
"SerializeMixin`` to run them sequentially. This mixin uses a filesystem "
"``lockfile``."
msgstr ""
"Si vous avez des classes de tests qui ne peuvent pas fonctionner en "
"parallèle (par exemple si elles partagent une ressource commune), vous "
"pouvez utiliser ``django.test.testcases.SerializeMixin`` pour les exécuter "
"de manière séquentielle. Cette classe mixin utilise un fichier verrou "
"``lockfile`` du système de fichiers."

msgid ""
"For example, you can use ``__file__`` to determine that all test classes in "
"the same file that inherit from ``SerializeMixin`` will run sequentially::"
msgstr ""
"Par exemple, vous pouvez utiliser ``__file__`` pour déterminer que toutes "
"les classes de tests du même fichier héritant de ``SerializeMixin`` seront "
"exécutées les unes à la suite des autres ::"

msgid "Using the Django test runner to test reusable applications"
msgstr ""
"Utilisation du lanceur de tests de Django pour tester des applications "
"réutilisables"

msgid ""
"If you are writing a :doc:`reusable application </intro/reusable-apps>` you "
"may want to use the Django test runner to run your own test suite and thus "
"benefit from the Django testing infrastructure."
msgstr ""
"Si vous écrivez une :doc:`application réutilisable </intro/reusable-apps>`, "
"il peut être intéressant d'utiliser le lanceur de tests de Django pour "
"lancer votre propre suite de tests et bénéficier ainsi de l'infrastructure "
"de tests de Django."

msgid ""
"A common practice is a *tests* directory next to the application code, with "
"the following structure:"
msgstr ""
"Une pratique courante est de placer un répertoire *tests* en parallèle de "
"votre code d'application, avec la structure suivante :"

msgid "Let's take a look inside a couple of those files:"
msgstr "Examinons ce qui se trouve dans certains de ces fichiers :"

msgid "``runtests.py``"
msgstr "``runtests.py``"

msgid ""
"This is the script that you invoke to run the test suite. It sets up the "
"Django environment, creates the test database and runs the tests."
msgstr ""
"Il s'agit ici du script invoqué pour lancer la suite de tests. Il met en "
"place l'environnement Django, crée la base de données de tests et lance les "
"tests."

msgid ""
"For the sake of clarity, this example contains only the bare minimum "
"necessary to use the Django test runner. You may want to add command-line "
"options for controlling verbosity, passing in specific test labels to run, "
"etc."
msgstr ""
"Par souci de clarté, cet exemple ne contient que le strict minimum "
"nécessaire à l'utilisation du lanceur de tests de Django. On peut cependant "
"imaginer ajouter des options en ligne de commande pour le contrôle de la "
"verbosité, pour passer des étiquettes de tests spécifiques à lancer, etc."

msgid "``tests/test_settings.py``"
msgstr "``tests/test_settings.py``"

msgid ""
"This file contains the :doc:`Django settings </topics/settings>` required to "
"run your app's tests."
msgstr ""
"Ce fichier contient les :doc:`réglages Django </topics/settings>` "
"indispensables pour lancer les tests de votre application."

msgid ""
"Again, this is a minimal example; your tests may require additional settings "
"to run."
msgstr ""
"Encore une fois, il s'agit d'un exemple minimal ; les tests peuvent exiger "
"des réglages supplémentaires pour fonctionner."

msgid ""
"Since the *tests* package is included in :setting:`INSTALLED_APPS` when "
"running your tests, you can define test-only models in its ``models.py`` "
"file."
msgstr ""
"Comme le paquet *tests* est inclus dans :setting:`INSTALLED_APPS` au moment "
"de lancer les tests, il est possible de définir des modèles uniquement pour "
"les tests dans le fichier ``models.py``."

msgid "Using different testing frameworks"
msgstr "Utilisation d'autres infrastructures de test"

msgid ""
"Clearly, :mod:`unittest` is not the only Python testing framework. While "
"Django doesn't provide explicit support for alternative frameworks, it does "
"provide a way to invoke tests constructed for an alternative framework as if "
"they were normal Django tests."
msgstr ""
"Il est clair que :mod:`unittest` n'est pas la seule infrastructure de test "
"de Python. Même si Django ne fournit pas de prise en charge explicite "
"d'autres systèmes de test, il offre une manière d'invoquer des tests "
"construits pour un autre système comme s'il s'agissait de tests Django "
"normaux."

msgid ""
"When you run ``./manage.py test``, Django looks at the :setting:"
"`TEST_RUNNER` setting to determine what to do. By default, :setting:"
"`TEST_RUNNER` points to ``'django.test.runner.DiscoverRunner'``. This class "
"defines the default Django testing behavior. This behavior involves:"
msgstr ""
"Lorsque vous lancez ``./manage.py test``, Django consulte le réglage :"
"setting:`TEST_RUNNER` pour déterminer ce qu'il doit faire. Par défaut, :"
"setting:`TEST_RUNNER` contient ``'django.test.runner.DiscoverRunner'``. "
"Cette classe définit le comportement de test par défaut de Django. Ce "
"comportement implique :"

msgid "Performing global pre-test setup."
msgstr "Une préparation générale avant les tests."

msgid ""
"Looking for tests in any file below the current directory whose name matches "
"the pattern ``test*.py``."
msgstr ""
"La recherche de tests dans tout fichier au-dessous du répertoire actuel dont "
"le nom correspond au motif ``test*.py``."

msgid "Creating the test databases."
msgstr "La création des bases de données de test."

msgid ""
"Running ``migrate`` to install models and initial data into the test "
"databases."
msgstr ""
"Le lancement de ``migrate`` pour installer les modèles et les données "
"initiales dans les bases de données de test."

msgid "Running the :doc:`system checks </topics/checks>`."
msgstr "L'exécution des :doc:`vérifications systèmes </topics/checks>`."

msgid "Running the tests that were found."
msgstr "L'exécution des tests découverts."

msgid "Destroying the test databases."
msgstr "La suppression des bases de données de test."

msgid "Performing global post-test teardown."
msgstr "Une finalisation générale après les tests."

msgid ""
"If you define your own test runner class and point :setting:`TEST_RUNNER` at "
"that class, Django will execute your test runner whenever you run ``./manage."
"py test``. In this way, it is possible to use any test framework that can be "
"executed from Python code, or to modify the Django test execution process to "
"satisfy whatever testing requirements you may have."
msgstr ""
"Si vous définissez votre propre classe de lanceur de tests et que vous "
"indiquez cette classe dans :setting:`TEST_RUNNER`, Django se servira de "
"votre lanceur de tests lors de chaque appel à ``./manage.py test``. De cette "
"façon, il est possible d'utiliser n'importe quel système de test pouvant "
"être lancé à partir de code Python ou de modifier le processus d'exécution "
"des tests Django pour adapter les tests à d'éventuels besoins spécifiques."

msgid "Defining a test runner"
msgstr "Définition d'un lanceur de tests"

msgid ""
"A test runner is a class defining a ``run_tests()`` method. Django ships "
"with a ``DiscoverRunner`` class that defines the default Django testing "
"behavior. This class defines the ``run_tests()`` entry point, plus a "
"selection of other methods that are used by ``run_tests()`` to set up, "
"execute and tear down the test suite."
msgstr ""
"Un lanceur de tests est une classe définissant une méthode ``run_tests()``. "
"Django fournit une classe ``DiscoverRunner`` définissant le comportement de "
"test par défaut de Django. Cette classe définit le point d'entrée "
"``run_tests()`` ainsi qu'une sélection d'autres méthodes utilisées par "
"``run_tests()`` pour préparer, exécuter et clore la suite de tests."

msgid ""
"``DiscoverRunner`` will search for tests in any file matching ``pattern``."
msgstr ""
"``DiscoverRunner`` recherche des tests dans tout fichier correspondant au "
"motif ``pattern``."

msgid ""
"``top_level`` can be used to specify the directory containing your top-level "
"Python modules. Usually Django can figure this out automatically, so it's "
"not necessary to specify this option. If specified, it should generally be "
"the directory containing your ``manage.py`` file."
msgstr ""
"``top_level`` peut être utilisé pour indiquer le répertoire contenant les "
"modules Python de premier niveau. Django peut généralement le découvrir "
"automatiquement, ce qui fait que cette option n'est pas absolument "
"nécessaire. Lorsqu'elle est définie, elle devrait en principe correspondre "
"au répertoire contenant le fichier ``manage.py``."

msgid ""
"``verbosity`` determines the amount of notification and debug information "
"that will be printed to the console; ``0`` is no output, ``1`` is normal "
"output, and ``2`` is verbose output."
msgstr ""
"``verbosity`` détermine la quantité de notifications et d'informations de "
"débogage qui s'afficheront sur la console ; ``0`` n'affiche rien, ``1`` "
"correspond à l'affichage normal et ``2`` à l'affichage verbeux."

msgid ""
"If ``interactive`` is ``True``, the test suite has permission to ask the "
"user for instructions when the test suite is executed. An example of this "
"behavior would be asking for permission to delete an existing test database. "
"If ``interactive`` is ``False``, the test suite must be able to run without "
"any manual intervention."
msgstr ""
"Si ``interactive`` vaut ``True``, la suite de tests a le droit de poser des "
"questions à l'utilisateur durant son exécution. Par exemple, elle pourrait "
"demander la permission de supprimer une base de données de test existante. "
"Si ``interactive`` vaut ``False``, la suite de tests doit pouvoir s'exécuter "
"sans aucune intervention manuelle de l'utilisateur."

msgid ""
"If ``failfast`` is ``True``, the test suite will stop running after the "
"first test failure is detected."
msgstr ""
"Si ``failfast`` vaut ``True``, la suite de tests s'arrête immédiatement "
"après le premier échec de test."

msgid ""
"If ``keepdb`` is ``True``, the test suite will use the existing database, or "
"create one if necessary. If ``False``, a new database will be created, "
"prompting the user to remove the existing one, if present."
msgstr ""
"Si ``keepdb`` vaut ``True``, la suite de tests va utiliser la base de "
"données existante ou en créer une si c'est nécessaire. Si la valeur est "
"``False``, une nouvelle base de données est toujours créée, demandant à "
"l'utilisateur de supprimer une éventuelle base existante de même nom."

msgid ""
"If ``reverse`` is ``True``, test cases will be executed in the opposite "
"order. This could be useful to debug tests that aren't properly isolated and "
"have side effects. :ref:`Grouping by test class <order-of-tests>` is "
"preserved when using this option. This option can be used in conjunction "
"with ``--shuffle`` to reverse the order for a particular random seed."
msgstr ""
"Si ``reverse`` vaut ``True``, les cas de tests sont exécutés dans l'ordre "
"inverse. Cela peut être utile pour déboguer des tests qui ne sont pas isolés "
"correctement et génèrent des effets de bord. Le :ref:`groupement par classe "
"de test <order-of-tests>` est conservé lors de l'utilisation de cette "
"option. Celle-ci peut être utilisée conjointement avec ``--shuffle`` pour "
"inverser l'ordre d'une graine aléatoire particulière."

msgid ""
"``debug_mode`` specifies what the :setting:`DEBUG` setting should be set to "
"prior to running tests."
msgstr ""
"``debug_mode`` indique la valeur que doit prendre le réglage :setting:"
"`DEBUG` avant d'exécuter les tests."

msgid ""
"``parallel`` specifies the number of processes.  If ``parallel`` is greater "
"than ``1``, the test suite will run in ``parallel`` processes. If there are "
"fewer test case classes than configured processes, Django will reduce the "
"number of processes accordingly. Each process gets its own database. This "
"option requires the third-party ``tblib`` package to display tracebacks "
"correctly."
msgstr ""
"``parallel`` indique le nombre de processus. Si ``parallel`` est plus grand "
"que ``1``, la suite de tests s'exécutera dans des processus en parallèle. "
"S'il y a moins de classes de cas de test que de processus configurés, Django "
"se charge de réduire le nombre de processus en conséquence. Chaque processus "
"reçoit sa propre base de données. Cette option nécessite la présence du "
"paquet tiers ``tblib`` pour afficher correctement les traces d'erreurs."

msgid ""
"``tags`` can be used to specify a set of :ref:`tags for filtering tests "
"<topics-tagging-tests>`. May be combined with ``exclude_tags``."
msgstr ""
"``tags`` peut être utilisé pour définir un jeu :ref:`d’étiquettes pour le "
"filtrage des tests <topics-tagging-tests>`. Peut être combiné avec "
"``exclude_tags``."

msgid ""
"``exclude_tags`` can be used to specify a set of :ref:`tags for excluding "
"tests <topics-tagging-tests>`. May be combined with ``tags``."
msgstr ""
"``exclude_tags`` peut être utilisé pour définir un jeu :ref:`d’étiquettes "
"pour l'exclusion de tests <topics-tagging-tests>`. Peut être combiné avec "
"``tags``."

msgid ""
"If ``debug_sql`` is ``True``, failing test cases will output SQL queries "
"logged to the :ref:`django.db.backends logger <django-db-logger>` as well as "
"the traceback. If ``verbosity`` is ``2``, then queries in all tests are "
"output."
msgstr ""
"Si ``debug_sql`` vaut ``True``, les tests en échec affichent les requêtes "
"SQL journalisées vers :ref:`django.db.backends <django-db-logger>` en plus "
"de la pile d'appels. Si ``verbosity`` vaut ``2``, les requêtes de tous les "
"tests sont affichées."

msgid ""
"``test_name_patterns`` can be used to specify a set of patterns for "
"filtering test methods and classes by their names."
msgstr ""
"``test_name_patterns`` peut être utilisé pour définir un ensemble de motifs "
"pour filtrer les méthodes et classes de test par leur nom."

msgid ""
"If ``pdb`` is ``True``, a debugger (``pdb`` or ``ipdb``) will be spawned at "
"each test error or failure."
msgstr ""
"Si ``pdb`` vaut ``True``, un débogueur (``pdb`` ou ``ipdb``) sera déclenché "
"lors de chaque erreur ou échec de test."

msgid ""
"If ``buffer`` is ``True``, outputs from passing tests will be discarded."
msgstr "Si ``buffer`` vaut ``True``, la sortie des tests réussis sera omise. "

msgid ""
"If ``enable_faulthandler`` is ``True``, :py:mod:`faulthandler` will be "
"enabled."
msgstr ""
"Si ``enable_faulthandler`` vaut ``True``, :py:mod:`faulthandler` sera activé."

msgid ""
"If ``timing`` is ``True``, test timings, including database setup and total "
"run time, will be shown."
msgstr ""
"Si ``timing`` vaut ``True``, la mesure temporelle des tests sera affichée, y "
"compris la mise en place de la base de données et le temps total d'exécution."

msgid ""
"If ``shuffle`` is an integer, test cases will be shuffled in a random order "
"prior to execution, using the integer as a random seed. If ``shuffle`` is "
"``None``, the seed will be generated randomly. In both cases, the seed will "
"be logged and set to ``self.shuffle_seed`` prior to running tests. This "
"option can be used to help detect tests that aren't properly isolated. :ref:"
"`Grouping by test class <order-of-tests>` is preserved when using this "
"option."
msgstr ""
"Si ``shuffle`` est un nombre entier, les cas de test seront mélangés "
"aléatoirement avant leur exécution, en utilisant le nombre entier comme "
"facteur aléatoire. Si ``shuffle`` vaut ``None``, ce facteur sera généré "
"aléatoirement. Dans les deux cas, le facteur sera journalisé et défini dans "
"``self.shuffle_seed`` avant de lancer les tests. Cette option peut être "
"utilisée pour aider à détecter les tests qui ne sont pas proprement isolés. "
"Le :ref:`groupement par classe de test <order-of-tests>` est conservé avec "
"cette option."

msgid ""
"``logger`` can be used to pass a Python :py:ref:`Logger object <logger>`. If "
"provided, the logger will be used to log messages instead of printing to the "
"console. The logger object will respect its logging level rather than the "
"``verbosity``."
msgstr ""
"``logger`` peut être utilisé pour passer un :py:ref:`objet Logger <logger>` "
"Python. Si indiqué, ce journaliseur sera utilisé pour journaliser les "
"messages au lieu de les afficher dans la console. Cet objet journaliseur "
"respectera son niveau de journalisation plutôt que le paramètre "
"``verbosity``."

msgid ""
"``durations`` will show a list of the N slowest test cases. Setting this "
"option to ``0`` will result in the duration for all tests being shown. "
"Requires Python 3.12+."
msgstr ""
"``durations`` affiche une liste des N cas de tests les plus lents. En "
"définissant cette option à ``0``, la durée de tous les tests sera affichée. "
"Nécessite Python 3.12+."

msgid ""
"Django may, from time to time, extend the capabilities of the test runner by "
"adding new arguments. The ``**kwargs`` declaration allows for this "
"expansion. If you subclass ``DiscoverRunner`` or write your own test runner, "
"ensure it accepts ``**kwargs``."
msgstr ""
"Il est possible que de temps à autre, Django étende les capacités du lanceur "
"de tests en ajoutant de nouveaux paramètres. La déclaration ``**kwargs`` "
"permet cette extension. Si vous héritez de ``DiscoverRunner`` ou que vous "
"écrivez votre propre lanceur de tests, vérifiez qu'il accepte ``**kwargs``."

msgid ""
"Your test runner may also define additional command-line options. Create or "
"override an ``add_arguments(cls, parser)`` class method and add custom "
"arguments by calling ``parser.add_argument()`` inside the method, so that "
"the :djadmin:`test` command will be able to use those arguments."
msgstr ""
"Votre lanceur de tests peut aussi définir des options supplémentaires en "
"ligne de commande. Créez ou surchargez une méthode de classe "
"``add_arguments(cls, parser)`` et ajoutez des paramètres personnalisés en "
"appelant ``parser.add_argument()`` dans cette méthode, afin que la commande :"
"djadmin:`test` puisse exploiter ces paramètres."

msgid "The ``durations`` argument was added."
msgstr "Le paramètre ``durations`` a été ajouté."

msgid "Attributes"
msgstr "Attributs"

msgid ""
"The class used to build the test suite. By default it is set to ``unittest."
"TestSuite``. This can be overridden if you wish to implement different logic "
"for collecting tests."
msgstr ""
"La classe utilisée pour construire la suite de tests. Par défaut, il s'agit "
"de ``unittest.TestSuite``. Il est possible de surcharger cette valeur si "
"vous souhaitez implémenter une logique différente pour collecter les tests."

msgid ""
"This is the class of the low-level test runner which is used to execute the "
"individual tests and format the results. By default it is set to ``unittest."
"TextTestRunner``. Despite the unfortunate similarity in naming conventions, "
"this is not the same type of class as ``DiscoverRunner``, which covers a "
"broader set of responsibilities. You can override this attribute to modify "
"the way tests are run and reported."
msgstr ""
"Cette classe est celle du lanceur de tests de bas niveau utilisé pour "
"exécuter les tests individuels et mettre en forme les résultats. Par défaut, "
"il s'agit de ``unittest.TextTestRunner``. Malgré la malencontreuse "
"similitude des conventions de nommage, il ne s'agit pas du même type de "
"classe que ``DiscoverRunner``, qui prend en charge un plus grand spectre de "
"responsabilités. Vous pouvez surcharger cet attribut pour modifier la façon "
"dont les tests sont exécutés et leurs résultats affichés."

msgid ""
"This is the class that loads tests, whether from TestCases or modules or "
"otherwise and bundles them into test suites for the runner to execute. By "
"default it is set to ``unittest.defaultTestLoader``. You can override this "
"attribute if your tests are going to be loaded in unusual ways."
msgstr ""
"Il s'agit de la classe qui charge les tests, que ce soit à partir de classes "
"``TestCase``, de modules ou d'autres façons, et qui les consolide en suites "
"de tests que le lanceur pourra exécuter. Par défaut, c'est ``unittest."
"defaultTestLoader``. Vous pouvez surcharger cet attribut si vos tests "
"doivent être chargés de manière inhabituelle."

msgid "Methods"
msgstr "Méthodes"

msgid "Run the test suite."
msgstr "Lance la suite de tests."

msgid ""
"``test_labels`` allows you to specify which tests to run and supports "
"several formats (see :meth:`DiscoverRunner.build_suite` for a list of "
"supported formats)."
msgstr ""
"``test_labels`` permet d'indiquer les tests à exécuter et accepte plusieurs "
"formats (voir :meth:`DiscoverRunner.build_suite` pour la liste des formats "
"pris en charge)."

msgid "This method should return the number of tests that failed."
msgstr "Cette méthode doit renvoyer le nombre de tests ayant échoué."

msgid ""
"Override this class method to add custom arguments accepted by the :djadmin:"
"`test` management command. See :py:meth:`argparse.ArgumentParser."
"add_argument()` for details about adding arguments to a parser."
msgstr ""
"Surchargez cette méthode de classe pour ajouter des paramètres personnalisés "
"acceptés par la commande d'administration :djadmin:`test`. Voir :py:meth:"
"`argparse.ArgumentParser.add_argument()` pour plus de détails au sujet de "
"l'ajout de paramètres de ligne de commande."

msgid ""
"Sets up the test environment by calling :func:`~django.test.utils."
"setup_test_environment` and setting :setting:`DEBUG` to ``self.debug_mode`` "
"(defaults to ``False``)."
msgstr ""
"Met en place l'environnement de test en appelant :func:`~django.test.utils."
"setup_test_environment` et en définissant :setting:`DEBUG` à ``self."
"debug_mode`` (``False`` par défaut)."

msgid "Constructs a test suite that matches the test labels provided."
msgstr "Construit une suite de tests correspondant aux noms de test indiqués."

msgid ""
"``test_labels`` is a list of strings describing the tests to be run. A test "
"label can take one of four forms:"
msgstr ""
"``test_labels`` est une liste de chaînes décrivant les tests à exécuter. Un "
"nom de test peut apparaître sous quatre formes :"

msgid ""
"``path.to.test_module.TestCase.test_method`` -- Run a single test method in "
"a test case class."
msgstr ""
"``chemin.vers.module_test.TestCase.methode_test`` -- Lance une seule méthode "
"de test dans une classe de cas de test."

msgid ""
"``path.to.test_module.TestCase`` -- Run all the test methods in a test case."
msgstr ""
"``chemin.vers.module_test.TestCase`` -- Lance toutes les méthodes de test "
"d'un cas de test."

msgid ""
"``path.to.module`` -- Search for and run all tests in the named Python "
"package or module."
msgstr ""
"``chemin.vers.module`` -- Recherche et lance tous les tests d'un paquet ou "
"module Python donné."

msgid ""
"``path/to/directory`` -- Search for and run all tests below the named "
"directory."
msgstr ""
"``chemin/vers/répertoire`` -- Recherche et lance tous les tests dans la sous-"
"arborescence du répertoire donné."

msgid ""
"If ``test_labels`` has a value of ``None``, the test runner will search for "
"tests in all files below the current directory whose names match its "
"``pattern`` (see above)."
msgstr ""
"Si ``test_labels`` contient la valeur ``None``, le lanceur de tests "
"recherche des tests dans tous les fichiers au-dessous du répertoire actuel "
"dont le nom correspond à son motif ``pattern`` (voir ci-dessus)."

msgid "Returns a ``TestSuite`` instance ready to be run."
msgstr "Renvoie une instance ``TestSuite`` prête à être exécutée."

msgid ""
"Creates the test databases by calling :func:`~django.test.utils."
"setup_databases`."
msgstr ""
"Crée les bases de données de test en appelant :func:`~django.test.utils."
"setup_databases`."

msgid ""
"Runs the :doc:`system checks </topics/checks>` on the test ``databases``."
msgstr ""
"Lance les :doc:`vérifications systèmes </topics/checks>` pour les bases "
"``databases`` de test."

msgid "Runs the test suite."
msgstr "Lance la suite de tests."

msgid "Returns the result produced by the running the test suite."
msgstr "Renvoie le résultat produit par l'exécution de la suite de tests."

msgid ""
"Returns the keyword arguments to instantiate the ``DiscoverRunner."
"test_runner`` with."
msgstr ""
"Renvoie les paramètres nommés pour l'instanciation de  ``DiscoverRunner."
"test_runner``."

msgid ""
"Destroys the test databases, restoring pre-test conditions by calling :func:"
"`~django.test.utils.teardown_databases`."
msgstr ""
"Supprime les bases de données de test, rétablissant la situation d'avant-"
"test en appelant :func:`~django.test.utils.teardown_databases`."

msgid "Restores the pre-test environment."
msgstr "Rétablit l'environnement à son état d'avant les tests."

msgid ""
"Computes and returns a return code based on a test suite, and the result "
"from that test suite."
msgstr ""
"Calcule et renvoie un code de retour basé sur une suite de tests et des "
"résultats de ces tests."

msgid ""
"If a ``logger`` is set, logs the message at the given integer `logging "
"level`_ (e.g. ``logging.DEBUG``, ``logging.INFO``, or ``logging.WARNING``). "
"Otherwise, the message is printed to the console, respecting the current "
"``verbosity``. For example, no message will be printed if the ``verbosity`` "
"is 0, ``INFO`` and above will be printed if the ``verbosity`` is at least 1, "
"and ``DEBUG`` will be printed if it is at least 2. The ``level`` defaults to "
"``logging.INFO``."
msgstr ""
"Quand le paramètre ``logger`` est défini, journalise le message au `niveau "
"de journalisation`_ donné (nombre entier), par ex. ``logging.DEBUG``, "
"``logging.INFO`` ou ``logging.WARNING``. Sinon, le message est affiché dans "
"la console en respectant le paramètre ``verbosity`` en cours. Par exemple, "
"aucun message ne sera affiché si ``verbosity`` vaut 0, les niveaux ``INFO`` "
"et supérieurs seront affichés si ``verbosity`` vaut au moins 1, et les "
"niveaux ``DEBUG`` seront affichés si ``verbosity`` vaut au moins 2. La "
"valeur par défaut de ``level`` est ``logging.INFO``."

msgid "Testing utilities"
msgstr "Utilitaires de test"

msgid "``django.test.utils``"
msgstr "``django.test.utils``"

msgid ""
"To assist in the creation of your own test runner, Django provides a number "
"of utility methods in the ``django.test.utils`` module."
msgstr ""
"Pour aider à la création de votre propre lanceur de tests, Django fournit un "
"certain nombre de méthodes utilitaires dans le module ``django.test.utils``."

msgid ""
"Performs global pre-test setup, such as installing instrumentation for the "
"template rendering system and setting up the dummy email outbox."
msgstr ""
"Effectue la mise en place générale avant les tests, comme l'installation des "
"adaptations du système de rendu des gabarits et la mise en place de la boîte "
"de messagerie factice."

msgid ""
"If ``debug`` isn't ``None``, the :setting:`DEBUG` setting is updated to its "
"value."
msgstr ""
"Si ``debug`` ne vaut pas ``None``, le réglage :setting:`DEBUG` est mis à "
"jour avec cette valeur."

msgid ""
"Performs global post-test teardown, such as removing instrumentation from "
"the template system and restoring normal email services."
msgstr ""
"Effectue la finalisation générale après les tests, comme la suppression des "
"adaptations du système des gabarits et le rétablissement des services de "
"messagerie par défaut."

msgid "Creates the test databases."
msgstr "Crée les bases de données de test."

msgid ""
"Returns a data structure that provides enough detail to undo the changes "
"that have been made. This data will be provided to the :func:"
"`teardown_databases` function at the conclusion of testing."
msgstr ""
"Renvoie une structure de données fournissant suffisamment de détails pour "
"annuler les changements effectués. Ces données sont ensuite transmises à la "
"fonction :func:`teardown_databases` lors de la finalisation des tests."

msgid ""
"The ``aliases`` argument determines which :setting:`DATABASES` aliases test "
"databases should be set up for. If it's not provided, it defaults to all of :"
"setting:`DATABASES` aliases."
msgstr ""
"Le paramètre ``aliases`` détermine pour quels alias de :setting:`DATABASES` "
"les bases de données de test doivent être préparées. S'il n'est pas présent, "
"sa valeur par défaut contient tous les alias de :setting:`DATABASES`."

msgid ""
"The ``serialized_aliases`` argument determines what subset of ``aliases`` "
"test databases should have their state serialized to allow usage of the :ref:"
"`serialized_rollback <test-case-serialized-rollback>` feature. If it's not "
"provided, it defaults to ``aliases``."
msgstr ""
"Le paramètre ``serialized_aliases`` détermine le sous-ensemble des "
"``aliases`` de bases de données de test qui devraient avoir leur état "
"sérialisé pour permettre l'utilisation de la fonctionnalité :ref:"
"`serialized_rollback <test-case-serialized-rollback>`. Si non défini, la "
"valeur par défaut est ``aliases``."

msgid "Destroys the test databases, restoring pre-test conditions."
msgstr ""
"Supprime les bases de données de test, rétablissant la situation d'avant-"
"test."

msgid ""
"``old_config`` is a data structure defining the changes in the database "
"configuration that need to be reversed. It's the return value of the :meth:"
"`setup_databases` method."
msgstr ""
"``old_config`` est une structure de données définissant les modifications de "
"la configuration des bases de données qui doivent être annulées. C'est la "
"valeur de renvoi de la méthode :meth:`setup_databases`."

msgid "``django.db.connection.creation``"
msgstr "``django.db.connection.creation``"

msgid ""
"The creation module of the database backend also provides some utilities "
"that can be useful during testing."
msgstr ""
"Le module de création du moteur de base de données propose également "
"quelques utilitaires pouvant être utiles durant les tests."

msgid "Creates a new test database and runs ``migrate`` against it."
msgstr ""
"Crée une nouvelle base de données de test et exécute ``migrate`` sur cette "
"base."

msgid "``verbosity`` has the same behavior as in ``run_tests()``."
msgstr "``verbosity`` a le même effet que dans ``run_tests()``."

msgid ""
"``autoclobber`` describes the behavior that will occur if a database with "
"the same name as the test database is discovered:"
msgstr ""
"``autoclobber`` décrit le comportement adopté si une base de données de même "
"nom que la base de données de test existe déjà :"

msgid ""
"If ``autoclobber`` is ``False``, the user will be asked to approve "
"destroying the existing database. ``sys.exit`` is called if the user does "
"not approve."
msgstr ""
"Si ``autoclobber`` vaut ``False``, l'utilisateur devra confirmer la "
"suppression de la base de données existante. ``sys.exit`` est appelée si "
"l'utilisateur refuse."

msgid ""
"If ``autoclobber`` is ``True``, the database will be destroyed without "
"consulting the user."
msgstr ""
"Si ``autoclobber`` vaut ``True``, la base de données est supprimée sans rien "
"demander à l'utilisateur."

msgid ""
"``serialize`` determines if Django serializes the database into an in-memory "
"JSON string before running tests (used to restore the database state between "
"tests if you don't have transactions). You can set this to ``False`` to "
"speed up creation time if you don't have any test classes with :ref:"
"`serialized_rollback=True <test-case-serialized-rollback>`."
msgstr ""
"``serialize`` détermine si Django sérialise la base de données en une chaîne "
"JSON en mémoire avant de lancer les tests (utilisé pour restaurer l'état de "
"la base de données entre les tests s'il n'y a pas de transactions). Vous "
"pouvez le définir à ``False`` pour accélérer nettement le temps de création "
"si aucune de vos classes de test ne comporte :ref:`serialized_rollback=True "
"<test-case-serialized-rollback>`."

msgid ""
"``keepdb`` determines if the test run should use an existing database, or "
"create a new one. If ``True``, the existing database will be used, or "
"created if not present. If ``False``, a new database will be created, "
"prompting the user to remove the existing one, if present."
msgstr ""
"``keepdb`` détermine si la session de test doit utiliser une base de données "
"existante ou si elle doit en créer une nouvelle. Si ``True``, une éventuelle "
"base de données existante est utilisée, sinon une nouvelle base est créée. "
"Si ``False``, une nouvelle base de données sera créée dans tous les cas, en "
"demandant à l'utilisateur s'il doit supprimer la base existante, s'il y en a "
"une."

msgid "Returns the name of the test database that it created."
msgstr "Renvoie le nom de la base de données de test qui a été créée."

msgid ""
"``create_test_db()`` has the side effect of modifying the value of :setting:"
"`NAME` in :setting:`DATABASES` to match the name of the test database."
msgstr ""
"``create_test_db()`` présente un effet de bord : la valeur de :setting:"
"`NAME` dans :setting:`DATABASES` est mise à jour pour correspondre au nom de "
"la base de données de test."

msgid ""
"Destroys the database whose name is the value of :setting:`NAME` in :setting:"
"`DATABASES`, and sets :setting:`NAME` to the value of ``old_database_name``."
msgstr ""
"Supprime la base de données dont le nom correspond à la valeur de :setting:"
"`NAME` dans :setting:`DATABASES` et met à jour :setting:`NAME` avec la "
"valeur contenue dans ``old_database_name``."

msgid ""
"The ``verbosity`` argument has the same behavior as for :class:`~django.test."
"runner.DiscoverRunner`."
msgstr ""
"Le paramètre ``verbosity`` a le même effet que pour :class:`~django.test."
"runner.DiscoverRunner`."

msgid ""
"If the ``keepdb`` argument is ``True``, then the connection to the database "
"will be closed, but the database will not be destroyed."
msgstr ""
"Si le paramètre ``keepdb`` vaut ``True``, la connexion à la base de données "
"sera fermée, mais la base de données ne sera pas détruite."

msgid "Integration with ``coverage.py``"
msgstr "Intégration avec ``coverage.py``"

msgid ""
"Code coverage describes how much source code has been tested. It shows which "
"parts of your code are being exercised by tests and which are not. It's an "
"important part of testing applications, so it's strongly recommended to "
"check the coverage of your tests."
msgstr ""
"La couverture de code représente la quantité de code source mis à l'épreuve "
"par les tests. Elle montre quelles sont les parties de code que les tests "
"éprouvent et les parties qui ne le sont pas. C'est un aspect important du "
"test des applications, c'est pourquoi il est fortement recommandé de "
"contrôler la couverture de vos tests."

msgid ""
"Django can be easily integrated with `coverage.py`_, a tool for measuring "
"code coverage of Python programs. First, install :pypi:`coverage`. Next, run "
"the following from your project folder containing ``manage.py``:"
msgstr ""
"Django peut facilement s'intégrer à `coverage.py`_, un outil de mesure de "
"couverture du code de programmes Python. Premièrement, installez :pypi:"
"`coverage`. Puis, lancez la commande suivante à partir du répertoire de "
"votre projet contenant ``manage.py``:"

msgid ""
"This runs your tests and collects coverage data of the executed files in "
"your project. You can see a report of this data by typing following command:"
msgstr ""
"Cela va lancer les tests et collecter les données de couverture des fichiers "
"exécutés dans votre projet. Vous pouvez afficher un rapport de ces données "
"en saisissant la commande suivante :"

msgid ""
"Note that some Django code was executed while running tests, but it is not "
"listed here because of the ``source`` flag passed to the previous command."
msgstr ""
"Notez que du code Django a été exécuté lors de l'exécution des tests, mais "
"il ne figure pas dans le rapport à cause de l'option ``source`` indiquée "
"dans la commande précédente."

msgid ""
"For more options like annotated HTML listings detailing missed lines, see "
"the `coverage.py`_ docs."
msgstr ""
"Pour davantage d'options comme les listings HTML annotés détaillant les "
"lignes manquantes, consultez la documentation de `coverage.py`_."

msgid "Testing in Django"
msgstr "Les tests dans Django"

msgid ""
"Automated testing is an extremely useful bug-killing tool for the modern web "
"developer. You can use a collection of tests -- a **test suite** -- to "
"solve, or avoid, a number of problems:"
msgstr ""
"Les tests automatisés constituent un outil d'élimination des bogues "
"extrêmement utile au service du développeur Web moderne. Vous pouvez "
"utiliser un ensemble de tests, une **suite de tests**, pour résoudre ou "
"éviter un certain nombre de problèmes :"

msgid ""
"When you're writing new code, you can use tests to validate your code works "
"as expected."
msgstr ""
"Lorsque vous écrivez du nouveau code, vous pouvez utiliser les tests pour "
"valider que le code fonctionne tel qu'attendu."

msgid ""
"When you're refactoring or modifying old code, you can use tests to ensure "
"your changes haven't affected your application's behavior unexpectedly."
msgstr ""
"Lorsque vous retravaillez ou que vous modifiez du code ancien, vous pouvez "
"utiliser les tests pour vous assurer que les modifications n'affectent pas "
"de manière inappropriée le comportement de l'application."

msgid ""
"Testing a web application is a complex task, because a web application is "
"made of several layers of logic -- from HTTP-level request handling, to form "
"validation and processing, to template rendering. With Django's test-"
"execution framework and assorted utilities, you can simulate requests, "
"insert test data, inspect your application's output and generally verify "
"your code is doing what it should be doing."
msgstr ""
"Tester une application Web est une tâche complexe, car une application Web "
"est composée de plusieurs couches de logique, de la gestion des requêtes au "
"niveau HTTP jusqu'au traitement et à la validation des formulaires, en "
"passant par le rendu des gabarits. Avec l'infrastructure d'exécution des "
"tests de Django et ses utilitaires associés, vous pouvez simuler des "
"requêtes, insérer des données de test, inspecter le résultat produit par "
"l'application et plus généralement vérifier que le code fait ce qu'on attend "
"de lui."

msgid ""
"The preferred way to write tests in Django is using the :mod:`unittest` "
"module built-in to the Python standard library. This is covered in detail in "
"the :doc:`overview` document."
msgstr ""
"La manière privilégiée d'écrire des tests avec Django est d'utiliser le "
"module :mod:`unittest` natif de la bibliothèque Python standard. C'est ce "
"qui est détaillé dans le document :doc:`overview`."

msgid ""
"You can also use any *other* Python test framework; Django provides an API "
"and tools for that kind of integration. They are described in the :ref:"
"`other-testing-frameworks` section of :doc:`advanced`."
msgstr ""
"Vous pouvez aussi utiliser n'importe quel *autre* infrastructure de test ; "
"Django offre une API et des outils pour de genre d'intégration. Ils sont "
"documentés dans la section :ref:`other-testing-frameworks` de :doc:"
"`advanced`."

msgid "Writing and running tests"
msgstr "Écriture et lancement de tests"

msgid ""
"The :doc:`testing tutorial </intro/tutorial05>`, the :doc:`testing tools "
"reference </topics/testing/tools>`, and the :doc:`advanced testing topics </"
"topics/testing/advanced>`."
msgstr ""
"Le :doc:`tutoriel sur les tests </intro/tutorial05>`, la :doc:`référence des "
"outils de test </topics/testing/tools>` et les :doc:`thématiques avancées "
"des tests </topics/testing/advanced>`."

msgid ""
"This document is split into two primary sections. First, we explain how to "
"write tests with Django. Then, we explain how to run them."
msgstr ""
"Ce document est partagé en deux sections principales. Premièrement, nous "
"expliquons comment écrire des tests avec Django. Puis, nous expliquons "
"comment les exécuter."

msgid ""
"Django's unit tests use a Python standard library module: :mod:`unittest`. "
"This module defines tests using a class-based approach."
msgstr ""
"Les tests unitaires de Django utilisent le module :mod:`unittest` de la "
"bibliothèque Python standard. Ce module définit les tests selon une approche "
"basée sur des classes."

msgid ""
"Here is an example which subclasses from :class:`django.test.TestCase`, "
"which is a subclass of :class:`unittest.TestCase` that runs each test inside "
"a transaction to provide isolation::"
msgstr ""
"Voici un exemple de classe héritant de :class:`django.test.TestCase`, elle-"
"même héritant de :class:`unittest.TestCase`, et qui lance chaque test dans "
"une transaction pour garantir l'isolation ::"

msgid ""
"When you :ref:`run your tests <running-tests>`, the default behavior of the "
"test utility is to find all the test case classes (that is, subclasses of :"
"class:`unittest.TestCase`) in any file whose name begins with ``test``, "
"automatically build a test suite out of those test case classes, and run "
"that suite."
msgstr ""
"Lorsque vous :ref:`lancez vos tests <running-tests>`, le comportement par "
"défaut de l'utilitaire de test est de rechercher toutes les classes de cas "
"de test (c'est-à-dire les sous-classes de :class:`unittest.TestCase`) dans "
"tous les fichiers dont le nom commence par ``test``, puis de construire "
"automatiquement une suite de tests et d'exécuter cette suite."

msgid "For more details about :mod:`unittest`, see the Python documentation."
msgstr ""
"Pour plus de détails au sujet de :mod:`unittest`, consultez la documentation "
"de Python."

msgid "Where should the tests live?"
msgstr "À quel endroit les tests devraient-ils se trouver ?"

msgid ""
"The default :djadmin:`startapp` template creates a ``tests.py`` file in the "
"new application. This might be fine if you only have a few tests, but as "
"your test suite grows you'll likely want to restructure it into a tests "
"package so you can split your tests into different submodules such as "
"``test_models.py``, ``test_views.py``, ``test_forms.py``, etc. Feel free to "
"pick whatever organizational scheme you like."
msgstr ""
"Le gabarit par défaut de :djadmin:`startapp` crée un fichier ``tests.py`` "
"dans la nouvelle application. Cela convient bien quand il n'y a que quelques "
"tests. Mais dès que la suite de tests grandit, il devient préférable de "
"restructurer ce fichier en un module Python afin de pouvoir séparer les "
"tests en sous-modules tels que ``test_models.py``, ``test_views.py``, "
"``test_forms.py``, etc. Vous êtes libre de choisir le découpage structurel "
"qui vous convient."

msgid "See also :ref:`testing-reusable-applications`."
msgstr "Voir aussi :ref:`testing-reusable-applications`."

msgid ""
"If your tests rely on database access such as creating or querying models, "
"be sure to create your test classes as subclasses of :class:`django.test."
"TestCase` rather than :class:`unittest.TestCase`."
msgstr ""
"Si des tests dépendent de l'accès à une base de données pour créer ou "
"interroger des modèles, les classes de test doivent être des sous-classes "
"de :class:`django.test.TestCase` plutôt que de :class:`unittest.TestCase`."

msgid ""
"Using :class:`unittest.TestCase` avoids the cost of running each test in a "
"transaction and flushing the database, but if your tests interact with the "
"database their behavior will vary based on the order that the test runner "
"executes them. This can lead to unit tests that pass when run in isolation "
"but fail when run in a suite."
msgstr ""
"En utilisant :class:`unittest.TestCase`, on allège les tests en évitant "
"l'étape d'envelopper chaque test dans une transaction et de réinitialiser la "
"base de données. Mais si les tests concernés interagissent avec la base de "
"données, leur comportement variera en fonction de l'ordre dans lequel ils "
"seront lancés par le lanceur de tests. Cela peut conduire certains tests "
"unitaires à réussir lorsqu'il sont exécutés individuellement, mais à échouer "
"lorsqu'ils font partie d'une suite."

msgid "Running tests"
msgstr "Lancement des tests"

msgid ""
"Once you've written tests, run them using the :djadmin:`test` command of "
"your project's ``manage.py`` utility:"
msgstr ""
"Quand les tests ont été écrits, il s'agit de les lancer avec la commande :"
"djadmin:`test` de l'utilitaire ``manage.py`` du projet :"

msgid ""
"Test discovery is based on the unittest module's :py:ref:`built-in test "
"discovery <unittest-test-discovery>`.  By default, this will discover tests "
"in any file named ``test*.py`` under the current working directory."
msgstr ""
"La découverte des tests se base sur le module de ``unittest`` de :py:ref:"
"`découverte intégrée des tests <unittest-test-discovery>`. Par défaut, les "
"tests sont recherchés dans tout fichier nommé ``test*.py`` dans toute "
"l'arborescence à partir du répertoire de travail courant."

msgid ""
"You can specify particular tests to run by supplying any number of \"test "
"labels\" to ``./manage.py test``. Each test label can be a full Python "
"dotted path to a package, module, ``TestCase`` subclass, or test method. For "
"instance:"
msgstr ""
"Vous pouvez sélectionner certains tests spécifiques à exécuter en indiquant "
"des « noms de tests » à la commande ``./manage.py test``. Chaque nom de test "
"peut être un chemin Python complet en syntaxe pointée vers un paquet, un "
"module, une sous-classe de ``TestCase`` ou une méthode de test. Par exemple :"

msgid ""
"You can also provide a path to a directory to discover tests below that "
"directory:"
msgstr ""
"Il est aussi possible d'indiquer un chemin vers un répertoire pour "
"rechercher tous les tests dans l'arborescence de ce répertoire :"

msgid ""
"You can specify a custom filename pattern match using the ``-p`` (or ``--"
"pattern``) option, if your test files are named differently from the ``test*."
"py`` pattern:"
msgstr ""
"Vous pouvez indiquer un motif de nom de fichier personnalisé en utilisant "
"l'option ``-p`` (ou ``--pattern``), dans le cas où vos fichiers de test ne "
"correspondent pas au motif ``test*.py``:"

msgid ""
"If you press ``Ctrl-C`` while the tests are running, the test runner will "
"wait for the currently running test to complete and then exit gracefully. "
"During a graceful exit the test runner will output details of any test "
"failures, report on how many tests were run and how many errors and failures "
"were encountered, and destroy any test databases as usual. Thus pressing "
"``Ctrl-C`` can be very useful if you forget to pass the :option:`--failfast "
"<test --failfast>` option, notice that some tests are unexpectedly failing "
"and want to get details on the failures without waiting for the full test "
"run to complete."
msgstr ""
"Si vous appuyez sur ``Ctrl-C`` pendant que les tests sont en cours "
"d'exécution, le lanceur de tests attend que le test actuellement en cours se "
"termine puis quitte les tests de manière harmonieuse. En quittant les tests "
"de cette façon, le lanceur affiche les détails des échecs de tests, indique "
"combien de tests ont été lancés ainsi que le nombre d'erreurs et d'échecs "
"rencontrés, puis il supprime la ou les bases de données de test comme il le "
"fait d'habitude. Ainsi, ``Ctrl-C`` peut être très utile si vous oubliez de "
"passer l'option :option:`--failfast <test --failfast>`, que vous réalisez "
"que certains tests échouent de manière inattendue et que vous souhaitez "
"obtenir les détails de ces échecs sans attendre que toute la suite de tests "
"se termine."

msgid ""
"If you do not want to wait for the currently running test to finish, you can "
"press ``Ctrl-C`` a second time and the test run will halt immediately, but "
"not gracefully. No details of the tests run before the interruption will be "
"reported, and any test databases created by the run will not be destroyed."
msgstr ""
"Si vous ne voulez pas attendre que le test actuellement en cours se termine, "
"vous pouvez appuyer une seconde fois sur ``Ctrl-C`` et le test se terminera "
"immédiatement, mais de manière brusque. Vous ne verrez aucun détail sur les "
"tests lancés jusqu'à ce point et toute base de données de test créée pour "
"cette exécution ne sera pas supprimée."

msgid "Test with warnings enabled"
msgstr "Tests avec avertissements actifs"

msgid ""
"It's a good idea to run your tests with Python warnings enabled: ``python -"
"Wa manage.py test``. The ``-Wa`` flag tells Python to display deprecation "
"warnings. Django, like many other Python libraries, uses these warnings to "
"flag when features are going away. It also might flag areas in your code "
"that aren't strictly wrong but could benefit from a better implementation."
msgstr ""
"Il est conseillé de lancer les tests en activant les avertissements de "
"Python : ``python -Wa manage.py test``. Le drapeau ``-Wa`` indique à Python "
"d'afficher les avertissements d'obsolescence. Django, comme toute autre "
"bibliothèque Python, utilise ces avertissements pour notifier que certaines "
"fonctionnalités sont sur le point de disparaître. Certains avertissements "
"peuvent aussi signaler que certaines zones du code ne sont pas "
"fondamentalement fausses mais qu'elles pourraient bénéficier d'une meilleure "
"implémentation."

msgid "The test database"
msgstr "La base de données de test"

msgid ""
"Tests that require a database (namely, model tests) will not use your "
"\"real\" (production) database. Separate, blank databases are created for "
"the tests."
msgstr ""
"Les tests ayant besoin d'une base de données (à savoir les tests avec des "
"modèles) n'utilisent pas la « vraie » base de données (de production). Des "
"bases de données distinctes et vierges sont créées tout exprès pour les "
"tests."

msgid ""
"Regardless of whether the tests pass or fail, the test databases are "
"destroyed when all the tests have been executed."
msgstr ""
"Que les tests passent ou échouent, les bases de données de test sont "
"supprimées dès que tous les tests ont été exécutés."

msgid ""
"You can prevent the test databases from being destroyed by using the :option:"
"`test --keepdb` option. This will preserve the test database between runs. "
"If the database does not exist, it will first be created. Any migrations "
"will also be applied in order to keep it up to date."
msgstr ""
"Vous pouvez éviter de supprimer les bases de données de test en utilisant "
"l'option :option:`test --keepdb`. Cela permet de conserver la base de "
"données de test entre les sessions. Si la base de données n'existe pas, elle "
"sera tout de même créée. Toute migration sera aussi appliquée afin de "
"maintenir la base à jour."

msgid ""
"As described in the previous section, if a test run is forcefully "
"interrupted, the test database may not be destroyed. On the next run, you'll "
"be asked whether you want to reuse or destroy the database. Use the :option:"
"`test --noinput` option to suppress that prompt and automatically destroy "
"the database. This can be useful when running tests on a continuous "
"integration server where tests may be interrupted by a timeout, for example."
msgstr ""
"Comme expliqué dans la section précédente, si une exécution de tests est "
"interrompue de manière brusque, la base de données de test ne sera peut-être "
"pas détruite. Au prochain lancement, on vous demandera si vous souhaitez "
"réutiliser ou détruire la base de données. Utilisez l'option :option:`test --"
"noinput` pour supprimer cette question et automatiquement détruire la base "
"de données. Cela peut se révéler utile lors du lancement des tests sur un "
"serveur d'intégration continue où les tests peuvent être stoppés par un "
"délai d'expiration, par exemple."

msgid ""
"The default test database names are created by prepending ``test_`` to the "
"value of each :setting:`NAME` in :setting:`DATABASES`. When using SQLite, "
"the tests will use an in-memory database by default (i.e., the database will "
"be created in memory, bypassing the filesystem entirely!). The :setting:"
"`TEST <DATABASE-TEST>` dictionary in :setting:`DATABASES` offers a number of "
"settings to configure your test database. For example, if you want to use a "
"different database name, specify :setting:`NAME <TEST_NAME>` in the :setting:"
"`TEST <DATABASE-TEST>` dictionary for any given database in :setting:"
"`DATABASES`."
msgstr ""
"Les noms des bases de données de test par défaut sont créés en préfixant les "
"valeurs de chaque :setting:`NAME` dans :setting:`DATABASES` avec ``test_`` . "
"Avec SQLite, les tests utilisent par défaut une base de données en mémoire "
"(c'est-à-dire que la base de données est créée en mémoire sans passer par le "
"système de fichiers). Le dictionnaire :setting:`TEST <DATABASE-TEST>` dans :"
"setting:`DATABASES` offre plusieurs réglages pour configurer la base de "
"données de test. Par exemple, si vous souhaitez utiliser un autre nom de "
"base de données, renseignez :setting:`NAME <TEST_NAME>` dans le "
"dictionnaire :setting:`TEST <DATABASE-TEST>` de la base de données concernée "
"dans :setting:`DATABASES`."

msgid ""
"On PostgreSQL, :setting:`USER` will also need read access to the built-in "
"``postgres`` database."
msgstr ""
"Avec PostgreSQL, :setting:`USER` a aussi besoin de l'accès en lecture à la "
"base de données intégrée ``postgres``."

msgid ""
"Aside from using a separate database, the test runner will otherwise use all "
"of the same database settings you have in your settings file: :setting:"
"`ENGINE <DATABASE-ENGINE>`, :setting:`USER`, :setting:`HOST`, etc. The test "
"database is created by the user specified by :setting:`USER`, so you'll need "
"to make sure that the given user account has sufficient privileges to create "
"a new database on the system."
msgstr ""
"Excepté la création d'une base de données séparée, le lanceur de tests "
"utilise les mêmes réglages de base de données de votre fichier de "
"réglages : :setting:`ENGINE <DATABASE-ENGINE>`, :setting:`USER`, :setting:"
"`HOST`, etc. La base de données de test est créée par l'utilisateur :setting:"
"`USER`, vous devez donc vérifier que ce compte utilisateur possède les "
"droits nécessaires pour créer une nouvelle base de données dans votre "
"système."

msgid ""
"For fine-grained control over the character encoding of your test database, "
"use the :setting:`CHARSET <TEST_CHARSET>` TEST option. If you're using "
"MySQL, you can also use the :setting:`COLLATION <TEST_COLLATION>` option to "
"control the particular collation used by the test database. See the :doc:"
"`settings documentation </ref/settings>` for details of these and other "
"advanced settings."
msgstr ""
"Pour un contrôle plus fin sur le codage de caractères de la base de données "
"de test, utilisez l'option :setting:`CHARSET <TEST_CHARSET>` de TEST. Avec "
"MySQL, il est aussi possible d'utiliser l'option :setting:`COLLATION "
"<TEST_COLLATION>` pour contrôler la collation utilisée par la base de "
"données de test. Consultez la :doc:`documentation des réglages </ref/"
"settings>` pour plus de détails sur ces réglages avancés."

msgid ""
"If using an SQLite in-memory database with SQLite, `shared cache <https://"
"www.sqlite.org/sharedcache.html>`_ is enabled, so you can write tests with "
"ability to share the database between threads."
msgstr ""
"Si vous utilisez une base de données SQLite en mémoire, le `cache partagé "
"<https://www.sqlite.org/sharedcache.html>`_ est activé, afin que vous "
"puissiez écrire des tests avec la possibilité de partager la base de données "
"entre fils d'exécutions (threads)."

msgid "Finding data from your production database when running tests?"
msgstr ""
"Accès à des données de la base de données de production lors du "
"fonctionnement des tests ?"

msgid ""
"If your code attempts to access the database when its modules are compiled, "
"this will occur *before* the test database is set up, with potentially "
"unexpected results. For example, if you have a database query in module-"
"level code and a real database exists, production data could pollute your "
"tests. *It is a bad idea to have such import-time database queries in your "
"code* anyway - rewrite your code so that it doesn't do this."
msgstr ""
"Si votre code essaie d'accéder à la base de données au moment de la "
"compilation du code, cela se produira *avant* que la base de données ne soit "
"configurée, avec des résultats potentiellement inattendus. Par exemple, si "
"une requête de base de données est lancée dans du code au niveau module et "
"qu'une base de données réelle existe, des données de production pourraient "
"interférer avec les tests. Il est de toute manière *fortement déconseillé de "
"placer des requêtes de base de données exécutées à l'importation du code*, "
"il s'agit de réécrire le code pour que cela n'arrive pas."

msgid ""
"This also applies to customized implementations of :meth:`~django.apps."
"AppConfig.ready()`."
msgstr ""
"Ceci s'applique aussi aux implémentations personnalisées de :meth:`~django."
"apps.AppConfig.ready()`."

msgid ""
"The :ref:`advanced multi-db testing topics <topics-testing-advanced-"
"multidb>`."
msgstr ""
"Les :ref:`thématiques avancées des tests avec plusieurs bases de données "
"<topics-testing-advanced-multidb>`."

msgid "Order in which tests are executed"
msgstr "Ordre d'exécution des tests"

msgid ""
"In order to guarantee that all ``TestCase`` code starts with a clean "
"database, the Django test runner reorders tests in the following way:"
msgstr ""
"Pour pouvoir garantir que tout code de ``TestCase`` commence avec une base "
"de données propre, le lanceur de tests de Django réordonne les tests de la "
"manière suivante :"

msgid "All :class:`~django.test.TestCase` subclasses are run first."
msgstr ""
"Toutes les sous-classes de :class:`~django.test.TestCase` sont exécutées en "
"premier."

msgid ""
"Then, all other Django-based tests (test case classes based on :class:"
"`~django.test.SimpleTestCase`, including :class:`~django.test."
"TransactionTestCase`) are run with no particular ordering guaranteed nor "
"enforced among them."
msgstr ""
"Puis, tous les autres tests basés sur Django (classes de cas de tests basées "
"sur :class:`~django.test.SimpleTestCase`, y compris :class:`~django.test."
"TransactionTestCase`) sont exécutés sans qu'un ordre de tri particulier ne "
"soit garanti. "

msgid ""
"Then any other :class:`unittest.TestCase` tests (including doctests) that "
"may alter the database without restoring it to its original state are run."
msgstr ""
"Puis tous les autres tests :class:`unittest.TestCase` (y.c. les "
"« doctests ») qui pourraient modifier la base de données sans la restaurer à "
"son état de départ sont lancés."

msgid ""
"The new ordering of tests may reveal unexpected dependencies on test case "
"ordering. This is the case with doctests that relied on state left in the "
"database by a given :class:`~django.test.TransactionTestCase` test, they "
"must be updated to be able to run independently."
msgstr ""
"Le nouvel ordre d'exécution des tests pourrait révéler des dépendances non "
"prévues dans l'ordre des cas de test. C'est le cas avec les « doctests » qui "
"comptaient sur un état de base de données suite à un test :class:`~django."
"test.TransactionTestCase` donné ; ces tests doivent être mis à jour pour "
"pouvoir fonctionner de manière indépendante."

msgid ""
"Failures detected when loading tests are ordered before all of the above for "
"quicker feedback. This includes things like test modules that couldn't be "
"found or that couldn't be loaded due to syntax errors."
msgstr ""
"Les échecs détectés lors du chargement des tests sont positionnés avant tous "
"les autres pour un retour d'information plus rapide. Cela inclut les choses "
"telles que les modules de test qui n'ont pas pu être trouvés ou qui n'ont "
"pas pu être chargés en raison d'erreurs de syntaxe."

msgid ""
"You may randomize and/or reverse the execution order inside groups using "
"the :option:`test --shuffle` and :option:`--reverse <test --reverse>` "
"options. This can help with ensuring your tests are independent from each "
"other."
msgstr ""
"Vous pouvez inverser ou rendre aléatoire l'ordre d'exécution à l'intérieur "
"des groupes en passant les options :option:`test --reverse` et :option:`test "
"--shuffle`. Ceci peut aider à s'assurer que les tests sont indépendants les "
"uns des autres."

msgid "Rollback emulation"
msgstr "Émulation d'annulation de transaction (« rollback »)"

msgid ""
"Any initial data loaded in migrations will only be available in ``TestCase`` "
"tests and not in ``TransactionTestCase`` tests, and additionally only on "
"backends where transactions are supported (the most important exception "
"being MyISAM). This is also true for tests which rely on "
"``TransactionTestCase`` such as :class:`LiveServerTestCase` and :class:"
"`~django.contrib.staticfiles.testing.StaticLiveServerTestCase`."
msgstr ""
"Les éventuelles données initiales chargées dans les migrations ne sont "
"disponibles que dans les tests ``TestCase``, mais pas dans les tests "
"``TransactionTestCase`` et de plus uniquement avec les moteurs qui prennent "
"en charge les transactions (l'exception la plus notable étant MyISAM). C'et "
"aussi vrai pour les tests qui se basent sur ``TransactionTestCase`` tels "
"que :class:`LiveServerTestCase` et :class:`~django.contrib.staticfiles."
"testing.StaticLiveServerTestCase`."

msgid ""
"Django can reload that data for you on a per-testcase basis by setting the "
"``serialized_rollback`` option to ``True`` in the body of the ``TestCase`` "
"or ``TransactionTestCase``, but note that this will slow down that test "
"suite by approximately 3x."
msgstr ""
"Django peut recharger ces données à votre place pour chaque cas de test si "
"vous définissez l'option ``serialized_rollback`` à ``True`` dans le corps de "
"``TestCase`` ou de ``TransactionTestCase``, mais vous devez savoir que cela "
"ralentira la suite de tests concernée d'environ 3 fois."

msgid ""
"Third-party apps or those developing against MyISAM will need to set this; "
"in general, however, you should be developing your own projects against a "
"transactional database and be using ``TestCase`` for most tests, and thus "
"not need this setting."
msgstr ""
"Les applications tierces ou celles qui se basent sur le moteur MyISAM ont "
"besoin de définir cet attribut. Cependant, il est conseillé de manière "
"générale de développer ses projets en s'appuyant sur une base de données "
"transactionnelle et de tester avec la classe de tests ``TestCase``, et dans "
"ce cas, cet attribut n'est pas nécessaire."

msgid ""
"The initial serialization is usually very quick, but if you wish to exclude "
"some apps from this process (and speed up test runs slightly), you may add "
"those apps to :setting:`TEST_NON_SERIALIZED_APPS`."
msgstr ""
"La sérialisation initiale est généralement très rapide, mais si vous "
"souhaitez exclure certaines applications de ce processus (et  accélérer "
"légèrement l'exécution des tests), vous pouvez ajouter ces applications au "
"réglage :setting:`TEST_NON_SERIALIZED_APPS`."

msgid ""
"To prevent serialized data from being loaded twice, setting "
"``serialized_rollback=True`` disables the :data:`~django.db.models.signals."
"post_migrate` signal when flushing the test database."
msgstr ""
"Pour éviter que des données sérialisées soient chargées deux fois, on peut "
"définir ``serialized_rollback=True`` pour désactiver le signal :data:"
"`~django.db.models.signals.post_migrate` lors de la réinitialisation de la "
"base de données de test."

msgid "Other test conditions"
msgstr "Autres conditions de test"

msgid ""
"Regardless of the value of the :setting:`DEBUG` setting in your "
"configuration file, all Django tests run with :setting:`DEBUG`\\=False. This "
"is to ensure that the observed output of your code matches what will be seen "
"in a production setting."
msgstr ""
"Tous les tests de Django sont exécutés avec :setting:`DEBUG`\\=False, quel "
"que soit la valeur du réglage :setting:`DEBUG` dans votre fichier de "
"réglages. Cela permet de garantir que le résultat observé du code correspond "
"à ce qui sera effectivement produit en production."

msgid ""
"Caches are not cleared after each test, and running ``manage.py test "
"fooapp`` can insert data from the tests into the cache of a live system if "
"you run your tests in production because, unlike databases, a separate "
"\"test cache\" is not used. This behavior :ticket:`may change <11505>` in "
"the future."
msgstr ""
"Les caches ne sont pas effacés après chaque test et le lancement de ``manage."
"py test fooapp`` peut insérer des données de test dans le cache d'un système "
"en ligne si vous lancez les tests en production car au contraire de ce qui "
"est fait avec les bases de données, les tests n'utilisent pas un « cache de "
"test ». Ce comportement :ticket:`pourrait changer <11505>` à l'avenir."

msgid "Understanding the test output"
msgstr "Compréhension de l'affichage des tests"

msgid ""
"When you run your tests, you'll see a number of messages as the test runner "
"prepares itself. You can control the level of detail of these messages with "
"the ``verbosity`` option on the command line:"
msgstr ""
"Lorsque vous lancez des tests, un certain nombre de messages apparaissent "
"alors que le lanceur de test se prépare. Vous pouvez contrôler le niveau de "
"détail de ces messages avec l'option ``verbosity`` en ligne de commande :"

msgid ""
"This tells you that the test runner is creating a test database, as "
"described in the previous section."
msgstr ""
"Le lanceur de tests vous informe qu'il crée une base de données de test, "
"comme indiqué dans la section précédente."

msgid ""
"Once the test database has been created, Django will run your tests. If "
"everything goes well, you'll see something like this:"
msgstr ""
"Après la création de la base de données de test, Django se met à exécuter "
"les tests proprement dits. Si tout se passe bien, vous verrez quelque chose "
"comme ceci :"

msgid ""
"If there are test failures, however, you'll see full details about which "
"tests failed:"
msgstr ""
"Cependant, si des tests ont échoué, vous verrez des détails complets au "
"sujet des tests ayant échoué :"

msgid ""
"A full explanation of this error output is beyond the scope of this "
"document, but it's pretty intuitive. You can consult the documentation of "
"Python's :mod:`unittest` library for details."
msgstr ""
"Il n'est pas dans l'optique de ce document d'expliquer en détails cet "
"affichage d'erreur, mais c'est relativement intuitif. Vous pouvez consulter "
"la documentation Python de la bibliothèque :mod:`unittest` pour plus de "
"détails."

msgid ""
"Note that the return code for the test-runner script is 1 for any number of "
"failed tests (whether the failure was caused by an error, a failed "
"assertion, or an unexpected success). If all the tests pass, the return code "
"is 0. This feature is useful if you're using the test-runner script in a "
"shell script and need to test for success or failure at that level."
msgstr ""
"Notez que le code de retour du script de lancement des tests est 1 quel que "
"soit le nombre de tests en échec (que l'échec soit causé par une erreur, une "
"assertion incorrecte ou un succès inattendu). Si tous les tests passent, le "
"code de retour est 0. Cette fonctionnalité est utile si vous lancez le "
"script de lancement des tests à partir d'un script shell et que vous avez "
"besoin de tester le résultat (succès ou échec) à ce niveau."

msgid "Speeding up the tests"
msgstr "Accélération des tests"

msgid "Running tests in parallel"
msgstr "Lancement des tests en parallèle"

msgid ""
"As long as your tests are properly isolated, you can run them in parallel to "
"gain a speed up on multi-core hardware. See :option:`test --parallel`."
msgstr ""
"Tant que vos tests sont proprement isolés, il est possible de les exécuter "
"en parallèle pour gagner du temps sur du matériel à plusieurs cœurs. Voir :"
"option:`test --parallel`."

msgid "Password hashing"
msgstr "Hachage de mots de passe"

msgid ""
"The default password hasher is rather slow by design. If you're "
"authenticating many users in your tests, you may want to use a custom "
"settings file and set the :setting:`PASSWORD_HASHERS` setting to a faster "
"hashing algorithm::"
msgstr ""
"Le hachage par défaut du mot de passe est délibérément assez lent. Si vos "
"tests font l'authentification de beaucoup d'utilisateurs, il est conseillé "
"de créer un fichier de réglages propre aux tests et de définir le réglage :"
"setting:`PASSWORD_HASHERS` à un algorithme de hachage plus rapide ::"

msgid ""
"Don't forget to also include in :setting:`PASSWORD_HASHERS` any hashing "
"algorithm used in fixtures, if any."
msgstr ""
"N'oubliez pas d'inclure aussi dans :setting:`PASSWORD_HASHERS` tout "
"algorithme de hachage utilisé dans les instantanés, le cas échéant."

msgid "Preserving the test database"
msgstr "Préserver la base de données de test"

msgid ""
"The :option:`test --keepdb` option preserves the test database between test "
"runs. It skips the create and destroy actions which can greatly decrease the "
"time to run tests."
msgstr ""
"L'option :option:`test --keepdb` préserve la base de données de test entre "
"plusieurs exécutions. Cela ignore les actions de création et de destruction "
"et peut grandement décroître le temps d’exécution des tests."

msgid "Avoiding disk access for media files"
msgstr "Éviter les accès au disque pour les fichiers médias"

msgid ""
"The :class:`~django.core.files.storage.InMemoryStorage` is a convenient way "
"to prevent disk access for media files. All data is kept in memory, then it "
"gets discarded after tests run."
msgstr ""
"La classe :class:`~django.core.files.storage.InMemoryStorage` est une "
"manière pratique d'éviter les accès au disque pour les fichiers médias. "
"Toutes les données sont conservées en mémoire, puis abandonnées à la fin de "
"l'exécution des tests."

msgid "Testing tools"
msgstr "Outils de test"

msgid ""
"Django provides a small set of tools that come in handy when writing tests."
msgstr ""
"Django propose un petit set d'outils bien pratiques lors de l'écriture de "
"tests."

msgid "The test client"
msgstr "Le client de test"

msgid ""
"The test client is a Python class that acts as a dummy web browser, allowing "
"you to test your views and interact with your Django-powered application "
"programmatically."
msgstr ""
"Le client de test est une classe Python se comportant comme un navigateur "
"web simpliste, permettant de tester les vues et d'interagir par "
"programmation avec votre application Django. "

msgid "Some of the things you can do with the test client are:"
msgstr "Voici plusieurs choses que vous pouvez faire avec le client de test :"

msgid ""
"Simulate GET and POST requests on a URL and observe the response -- "
"everything from low-level HTTP (result headers and status codes) to page "
"content."
msgstr ""
"Simuler des requêtes GET et POST sur une URL et examiner la réponse, que ce "
"soit les détails HTTP de bas niveau (en-têtes de la réponse et codes d'état) "
"ou le contenu de la page renvoyée."

msgid ""
"See the chain of redirects (if any) and check the URL and status code at "
"each step."
msgstr ""
"Voir la chaîne des redirections (le cas échéant) et contrôler l'URL et le "
"code de statut à chaque étape."

msgid ""
"Test that a given request is rendered by a given Django template, with a "
"template context that contains certain values."
msgstr ""
"Tester qu'une requête données est rendue par un gabarit Django donné, et que "
"le contexte du gabarit contient certaines valeurs."

msgid ""
"Note that the test client is not intended to be a replacement for Selenium_ "
"or other \"in-browser\" frameworks. Django's test client has a different "
"focus. In short:"
msgstr ""
"Notez que le client de test n'est pas conçu pour remplacer Selenium_ ou "
"d'autres systèmes utilisant un navigateur réel. Le client de test de Django "
"a un objectif différent. En bref :"

msgid ""
"Use Django's test client to establish that the correct template is being "
"rendered and that the template is passed the correct context data."
msgstr ""
"Utiliser le client de test de Django pour confirmer que le gabarit correct a "
"été utilisé pour le rendu et que ce gabarit à reçu les bonnes données de "
"contexte."

msgid ""
"Use :class:`~django.test.RequestFactory` to test view functions directly, "
"bypassing the routing and middleware layers."
msgstr ""
"Utilisez :class:`~django.test.RequestFactory` pour tester directement les "
"fonctions de vues, outrepassant les couches de routage et d'intergiciel."

msgid ""
"Use in-browser frameworks like Selenium_ to test *rendered* HTML and the "
"*behavior* of web pages, namely JavaScript functionality. Django also "
"provides special support for those frameworks; see the section on :class:"
"`~django.test.LiveServerTestCase` for more details."
msgstr ""
"Utilisez des systèmes basés sur de vrais navigateurs comme Selenium_ pour "
"tester le HTML *produit* et le *comportement* des pages web, en particulier "
"les fonctionnalités JavaScript. Django offre aussi une prise en charge "
"spéciale pour ces systèmes ; consultez la section sur :class:`~django.test."
"LiveServerTestCase` pour plus de détails."

msgid ""
"A comprehensive test suite should use a combination of all of these test "
"types."
msgstr ""
"Une suite de tests complète devrait utiliser une combinaison de tous ces "
"types de tests."

msgid "Overview and a quick example"
msgstr "Aperçu et exemple rapide"

msgid ""
"To use the test client, instantiate ``django.test.Client`` and retrieve web "
"pages:"
msgstr ""
"Pour utiliser le client de test, créez une instance de ``django.test."
"Client`` et récupérez des pages web :"

msgid ""
"As this example suggests, you can instantiate ``Client`` from within a "
"session of the Python interactive interpreter."
msgstr ""
"Comme cet exemple le suggère, vous pouvez créer des instances de ``Client`` "
"à partir d'une session de l'interpréteur Python interactif."

msgid "Note a few important things about how the test client works:"
msgstr ""
"Signalons quelques éléments importants au sujet du fonctionnement du client "
"de test :"

msgid ""
"The test client does *not* require the web server to be running. In fact, it "
"will run just fine with no web server running at all! That's because it "
"avoids the overhead of HTTP and deals directly with the Django framework. "
"This helps make the unit tests run quickly."
msgstr ""
"Le client de test n'a *pas* besoin que le serveur web soit lancé. En fait, "
"il fonctionne tout à fait correctement sans aucun serveur web actif ! Et "
"cela parce qu'il s'adresse directement à l'infrastructure Django sans passer "
"par la couche HTTP. Cela permet d'accélérer le fonctionnement des tests "
"unitaires."

msgid ""
"When retrieving pages, remember to specify the *path* of the URL, not the "
"whole domain. For example, this is correct:"
msgstr ""
"Lors de la récupération des pages, n'oubliez pas de n'indiquer que le "
"*chemin* de l'URL, sans mentionner tout le nom de domaine. Par exemple, ceci "
"est correct :"

msgid "This is incorrect:"
msgstr "Mais pas ceci :"

msgid ""
"The test client is not capable of retrieving web pages that are not powered "
"by your Django project. If you need to retrieve other web pages, use a "
"Python standard library module such as :mod:`urllib`."
msgstr ""
"Le client de test n'est pas capable de récupérer des pages web qui ne sont "
"pas basées sur votre projet Django. Si vous avez besoin de récupérer "
"d'autres pages web, utilisez un module standard de la bibliothèque Python, "
"comme :mod:`urllib`."

msgid ""
"To resolve URLs, the test client uses whatever URLconf is pointed-to by "
"your :setting:`ROOT_URLCONF` setting."
msgstr ""
"Pour résoudre des URL, le client de test utilise la configuration d'URL qui "
"est désignée par le réglage :setting:`ROOT_URLCONF`."

msgid ""
"Although the above example would work in the Python interactive interpreter, "
"some of the test client's functionality, notably the template-related "
"functionality, is only available *while tests are running*."
msgstr ""
"Même si l'exemple ci-dessus fonctionne dans un interpréteur Python "
"interactif, certaines fonctionnalités du client de test, notamment celles "
"liées aux gabarits, ne sont disponibles que *lorsque les tests sont lancés*."

msgid ""
"The reason for this is that Django's test runner performs a bit of black "
"magic in order to determine which template was loaded by a given view. This "
"black magic (essentially a patching of Django's template system in memory) "
"only happens during test running."
msgstr ""
"Ceci s'explique par le fait que le lanceur de tests de Django fait sa propre "
"cuisine pour déterminer quel gabarit a été chargé pour une vue donnée. Cette "
"« cuisine » (essentiellement un correctif en mémoire du système de gabarits "
"de Django) n'est opérée que durant le fonctionnement des tests. "

msgid ""
"By default, the test client will disable any CSRF checks performed by your "
"site."
msgstr ""
"Par défaut, le client de test désactive tous les contrôles CSRF effectués "
"par votre site."

msgid ""
"If, for some reason, you *want* the test client to perform CSRF checks, you "
"can create an instance of the test client that enforces CSRF checks. To do "
"this, pass in the ``enforce_csrf_checks`` argument when you construct your "
"client:"
msgstr ""
"Si pour une raison quelconque vous * voulez* que le client de test effectue "
"les contrôles CSRF, vous pouvez créer une instance du client de test avec "
"les contrôles CSRF actifs. Pour cela, passez le paramètre "
"``enforce_csrf_checks`` au moment de créer le client :"

msgid "Making requests"
msgstr "Lancement de requêtes"

msgid "Use the ``django.test.Client`` class to make requests."
msgstr "La classe ``django.test.Client`` permet de simuler des requêtes HTTP."

msgid ""
"A testing HTTP client. Takes several arguments that can customize behavior."
msgstr ""
"Un client de test HTTP. Accepte plusieurs arguments qui peuvent adapter son "
"comportement."

msgid ""
"``headers`` allows you to specify default headers that will be sent with "
"every request. For example, to set a ``User-Agent`` header::"
msgstr ""
"``headers`` permet d'indiquer des en-têtes par défaut qui seront envoyés "
"avec chaque requête. Par exemple, pour défini un en-tête ``User-Agent``::"

msgid ""
"``query_params`` allows you to specify the default query string that will be "
"set on every request."
msgstr ""
"``query_params`` permet d'indiquer la chaîne de requête par défaut qui sera "
"définie pour chaque requête."

msgid ""
"Arbitrary keyword arguments in ``**defaults`` set WSGI :pep:`environ "
"variables <3333#environ-variables>`. For example, to set the script name::"
msgstr ""
"Des paramètres nommés arbitraires dans ``**defaults`` définissent des :pep:"
"`variables d'environnement <3333#environ-variables>` WSGI. Par exemple, pour "
"définir le nom du script ::"

msgid ""
"Keyword arguments starting with a ``HTTP_`` prefix are set as headers, but "
"the ``headers`` parameter should be preferred for readability."
msgstr ""
"Les paramètres nommés commençant par un préfixe ``HTTP_`` sont définis comme "
"des en-têtes, mais le paramètre ``headers`` devrait être privilégié pour une "
"meilleure lisibilité."

msgid ""
"The values from the ``headers``, ``query_params``, and ``extra`` keyword "
"arguments passed to :meth:`~django.test.Client.get()`, :meth:`~django.test."
"Client.post()`, etc. have precedence over the defaults passed to the class "
"constructor."
msgstr ""
"Les valeurs des paramètres nommés passés dans ``headers``, ``query_params`` "
"et ``extra`` aux méthodes :meth:`~django.test.Client.get()`, :meth:`~django."
"test.Client.post()`, etc. ont la priorité sur les valeurs par défaut "
"transmises au constructeur de la classe."

msgid ""
"The ``enforce_csrf_checks`` argument can be used to test CSRF protection "
"(see above)."
msgstr ""
"Le paramètre ``enforce_csrf_checks`` peut être utilisé pour tester la "
"protection CSRF (voir au-dessus)."

msgid ""
"The ``raise_request_exception`` argument allows controlling whether or not "
"exceptions raised during the request should also be raised in the test. "
"Defaults to ``True``."
msgstr ""
"Le paramètre ``raise_request_exception`` permet de contrôler si les "
"exceptions générées pendant la requête doivent aussi être générées dans le "
"test. Vaut ``True`` par défaut."

msgid ""
"The ``json_encoder`` argument allows setting a custom JSON encoder for the "
"JSON serialization that's described in :meth:`post`."
msgstr ""
"Le paramètre ``json_encoder`` permet de définir un codeur JSON personnalisé "
"pour la sérialisation JSON décrite dans :meth:`post`."

msgid "The ``query_params`` argument was added."
msgstr "L'argument ``query_params`` a été ajouté."

msgid ""
"Once you have a ``Client`` instance, you can call any of the following "
"methods:"
msgstr ""
"Dès que vous avez à disposition une instance de ``Client``, vous pouvez "
"appeler au choix l'une des méthodes suivantes :"

msgid ""
"Makes a GET request on the provided ``path`` and returns a ``Response`` "
"object, which is documented below."
msgstr ""
"Procède à une requête GET utilisant le chemin ``path`` indiqué et renvoie un "
"objet ``Response``, qui est documenté plus bas."

msgid ""
"The key-value pairs in the ``query_params`` dictionary are used to set query "
"strings. For example:"
msgstr ""
"Les paires clé-valeur dans le dictionnaire ``query_params`` servent à "
"définir les chaînes de requête. Par exemple :"

msgid "...will result in the evaluation of a GET request equivalent to:"
msgstr "…aboutit à l'évaluation d'une requête GET équivalente à :"

msgid ""
"It is also possible to pass these parameters into the ``data`` parameter. "
"However, ``query_params`` is preferred as it works for any HTTP method."
msgstr ""
"Il est aussi possible de transmettre ces paramètres dans le paramètre "
"``data``. Cependant, ``query_params`` devrait être préféré car il fonctionne "
"pour n'importe quelle méthode HTTP."

msgid ""
"The ``headers`` parameter can be used to specify headers to be sent in the "
"request. For example:"
msgstr ""
"Le paramètre ``headers`` peut être utilisé pour indiquer les en-têtes "
"envoyés avec la requête. Par exemple :"

msgid ""
"...will send the HTTP header ``HTTP_ACCEPT`` to the details view, which is a "
"good way to test code paths that use the :meth:`django.http.HttpRequest."
"accepts()` method."
msgstr ""
"…envoie l'en-tête HTTP ``HTTP_ACCEPT`` à la vue de détail, ce qui constitue "
"une bonne manière de tester des chemins de code utilisant la méthode :meth:"
"`django.http.HttpRequest.accepts()`."

msgid ""
"Arbitrary keyword arguments set WSGI :pep:`environ variables <3333#environ-"
"variables>`. For example, headers to set the script name:"
msgstr ""
"Des paramètres nommés arbitraires définissent des :pep:`variables "
"d'environnement <3333#environ-variables>` WSGI. Par exemple, pour définir le "
"nom du script :"

msgid ""
"If you already have the GET arguments in URL-encoded form, you can use that "
"encoding instead of using the data argument. For example, the previous GET "
"request could also be posed as:"
msgstr ""
"Si vous disposez déjà des paramètres GET sous une forme déjà codée pour "
"l'URL, vous pouvez utiliser cette forme au lieu du paramètre ``data``. Par "
"exemple, la requête GET précédente pourrait aussi être émise par :"

msgid ""
"If you provide a URL with both an encoded GET data and either a query_params "
"or data argument these arguments will take precedence."
msgstr ""
"Si vous fournissez à la fois une URL contenant des données GET codées et un "
"paramètre ``data`` ou un paramètre ``query_params``, ces paramètres auront "
"la priorité."

msgid ""
"If you set ``follow`` to ``True`` the client will follow any redirects and a "
"``redirect_chain`` attribute will be set in the response object containing "
"tuples of the intermediate urls and status codes."
msgstr ""
"Si vous définissez ``follow`` à ``True``, le client suit d'éventuelles "
"redirections et l'objet réponse possédera un attribut ``redirect_chain`` "
"contenant des tuples formés des URL intermédiaires et de leur code d'état."

msgid ""
"If you had a URL ``/redirect_me/`` that redirected to ``/next/``, that "
"redirected to ``/final/``, this is what you'd see:"
msgstr ""
"Si vous aviez une URL ``/redirect_me/`` redirigeant vers ``/next/``, "
"redirigeant lui-même vers ``/final/``, voici ce que vous obtiendriez :"

msgid ""
"If you set ``secure`` to ``True`` the client will emulate an HTTPS request."
msgstr ""
"Si vous définissez ``secure`` à ``True``, le client émule une requête HTTPS."

msgid ""
"Makes a POST request on the provided ``path`` and returns a ``Response`` "
"object, which is documented below."
msgstr ""
"Procède à une requête POST utilisant le chemin ``path`` indiqué et renvoie "
"un objet ``Response``, qui est documenté plus bas."

msgid ""
"The key-value pairs in the ``data`` dictionary are used to submit POST data. "
"For example:"
msgstr ""
"Les paires clé-valeur dans le dictionnaire ``data`` servent à créer les "
"données de soumission POST. Par exemple :"

msgid "...will result in the evaluation of a POST request to this URL:"
msgstr "…aboutit à l'évaluation d'une requête POST vers cette URL :"

msgid "...with this POST data:"
msgstr "…contenant ces données POST :"

msgid ""
"If you provide ``content_type`` as :mimetype:`application/json`, the "
"``data`` is serialized using :func:`json.dumps` if it's a dict, list, or "
"tuple. Serialization is performed with :class:`~django.core.serializers.json."
"DjangoJSONEncoder` by default, and can be overridden by providing a "
"``json_encoder`` argument to :class:`Client`. This serialization also "
"happens for :meth:`put`, :meth:`patch`, and :meth:`delete` requests."
msgstr ""
"Si vous indiquez :mimetype:`application/json` dans ``content_type``, les "
"données ``data`` sont sérialisées en utilisant :func:`json.dumps` s'il "
"s'agit d'un dict, d'une liste ou d'un tuple. La sérialisation est appliquée "
"par défaut avec :class:`~django.core.serializers.json.DjangoJSONEncoder`, "
"mais cette classe peut être remplacée en fournissant le paramètre "
"``json_encoder`` à :class:`Client`. Cette sérialisation se produit également "
"pour les requêtes :meth:`put`, :meth:`patch` et :meth:`delete`."

msgid ""
"If you provide any other ``content_type`` (e.g. :mimetype:`text/xml` for an "
"XML payload), the contents of ``data`` are sent as-is in the POST request, "
"using ``content_type`` in the HTTP ``Content-Type`` header."
msgstr ""
"Si vous renseignez tout autre ``content_type`` (par ex. :mimetype:`text/xml` "
"pour des données utiles XML), le contenu de ``data`` est envoyé tel quel "
"dans la requête POST, en plaçant le contenu de ``content_type`` dans l'en-"
"tête HTTP ``Content-Type``."

msgid ""
"If you don't provide a value for ``content_type``, the values in ``data`` "
"will be transmitted with a content type of :mimetype:`multipart/form-data`. "
"In this case, the key-value pairs in ``data`` will be encoded as a multipart "
"message and used to create the POST data payload."
msgstr ""
"Si le paramètre ``content_type`` n'est pas renseigné, les valeurs contenues "
"dans ``data`` sont transmises avec un type de contenu :mimetype:`multipart/"
"form-data`. Dans ce cas, les paires clé-valeur de ``data`` sont codées sous "
"forme de message composite (``multipart``) et servent à créer les données "
"utiles de POST."

msgid ""
"To submit multiple values for a given key -- for example, to specify the "
"selections for a ``<select multiple>`` -- provide the values as a list or "
"tuple for the required key. For example, this value of ``data`` would submit "
"three selected values for the field named ``choices``::"
msgstr ""
"Pour envoyer plusieurs valeurs pour un même clé, par exemple pour indiquer "
"les sélections d'un élément ``<select multiple>``, indiquez les valeurs de "
"la clé sous forme de liste ou de tuple. Par exemple, le contenu suivant de "
"``data`` envoie trois valeurs sélectionnées pour le champ nommé ``choices``::"

msgid ""
"Submitting files is a special case. To POST a file, you need only provide "
"the file field name as a key, and a file handle to the file you wish to "
"upload as a value. For example, if your form has fields ``name`` and "
"``attachment``, the latter a :class:`~django.forms.FileField`:"
msgstr ""
"L'envoi de fichiers est un cas particulier. Pour envoyer un fichier par "
"POST, il suffit d'indiquer comme clé le nom du champ de fichier et comme "
"valeur un pointeur de fichier référençant le fichier à envoyer. Par exemple, "
"si le formulaire possède les champs ``name`` et ``attachment``, ce dernier "
"étant un :class:`~django.forms.FileField`:"

msgid ""
"You may also provide any file-like object (e.g., :class:`~io.StringIO` or :"
"class:`~io.BytesIO`) as a file handle. If you're uploading to an :class:"
"`~django.db.models.ImageField`, the object needs a ``name`` attribute that "
"passes the :data:`~django.core.validators.validate_image_file_extension` "
"validator. For example:"
msgstr ""
"Il est aussi possible de fournir un objet de type fichier (par ex. :class:"
"`~io.StringIO` ou :class:`~io.BytesIO`) comme pointeur de fichier. Si le "
"fichier est destiné à un champ :class:`~django.db.models.ImageField`, "
"l'objet a besoin d'un attribut  ``name`` passant la validation de :data:"
"`~django.core.validators.validate_image_file_extension`. Par exemple :"

msgid ""
"Note that if you wish to use the same file handle for multiple ``post()`` "
"calls then you will need to manually reset the file pointer between posts. "
"The easiest way to do this is to manually close the file after it has been "
"provided to ``post()``, as demonstrated above."
msgstr ""
"Notez que si vous souhaitez utiliser le même pointeur de fichier pour "
"plusieurs appels à ``post()``, vous devrez manuellement réinitialiser ce "
"pointeur entre les requêtes. La façon la plus simple de le faire "
"manuellement est de fermer le fichier après qu'il a été fourni à ``post()``, "
"comme cela est fait dans l'exemple ci-dessus."

msgid ""
"You should also ensure that the file is opened in a way that allows the data "
"to be read. If your file contains binary data such as an image, this means "
"you will need to open the file in ``rb`` (read binary) mode."
msgstr ""
"Vous devez aussi être certain que le fichier est ouvert d'une manière "
"autorisant les données à être lues. Si votre fichier contient des données "
"binaires telles qu'une image, cela signifie que vous devrez ouvrir le "
"fichier en mode ``rb`` (read binary)."

msgid ""
"The ``headers``, ``query_params``, and ``extra`` parameters acts the same as "
"for :meth:`Client.get`."
msgstr ""
"Les paramètres ``headers``, ``query_params`` et ``extra`` jouent le même "
"rôle que pour :meth:`Client.get`."

msgid ""
"If the URL you request with a POST contains encoded parameters, these "
"parameters will be made available in the request.GET data. For example, if "
"you were to make the request:"
msgstr ""
"Si l'URL indiquée pour la requête POST contient des paramètres codés, ceux-"
"ci sont placés dans les données ``request.GET``. Par exemple, si vous "
"effectuez la requête :"

msgid ""
"... the view handling this request could interrogate request.POST to "
"retrieve the username and password, and could interrogate request.GET to "
"determine if the user was a visitor."
msgstr ""
"…la vue traitant la requête peut consulter ``request.POST`` pour obtenir les "
"données du nom et du mot de passe, et ``request.GET`` pour savoir si "
"l'utilisateur est un visiteur."

msgid ""
"Makes a HEAD request on the provided ``path`` and returns a ``Response`` "
"object. This method works just like :meth:`Client.get`, including the "
"``follow``, ``secure``, ``headers``, ``query_params``, and ``extra`` "
"parameters, except it does not return a message body."
msgstr ""
"Procède à une requête HEAD utilisant le chemin ``path`` indiqué et renvoie "
"un objet ``Response``. Cette méthode fonctionne comme :meth:`Client.get`, y "
"compris les paramètres ``follow``, ``secure``, ``headers``, ``query_params`` "
"et ``extra`` à la seule exception qu'aucun corps de message n'est renvoyé."

msgid ""
"Makes an OPTIONS request on the provided ``path`` and returns a ``Response`` "
"object. Useful for testing RESTful interfaces."
msgstr ""
"Procède à une requête OPTIONS utilisant le chemin ``path`` indiqué et "
"renvoie un objet ``Response``. Utile pour tester les interfaces de type "
"« REST »."

msgid ""
"When ``data`` is provided, it is used as the request body, and a ``Content-"
"Type`` header is set to ``content_type``."
msgstr ""
"Lorsque ``data`` est renseigné, il est utilisé comme corps de requête et un "
"en-tête ``Content-Type`` est défini avec le contenu de ``content_type``."

msgid ""
"The ``follow``, ``secure``, ``headers``, ``query_params``, and ``extra`` "
"parameters act the same as for :meth:`Client.get`."
msgstr ""
"Les paramètres ``follow``, ``secure``, ``headers``, ``query_params`` et "
"``extra`` jouent le même rôle que pour :meth:`Client.get`."

msgid ""
"Makes a PUT request on the provided ``path`` and returns a ``Response`` "
"object. Useful for testing RESTful interfaces."
msgstr ""
"Procède à une requête PUT utilisant le chemin ``path`` indiqué et renvoie un "
"objet ``Response``. Utile pour tester les interfaces de type « REST »."

msgid ""
"Makes a PATCH request on the provided ``path`` and returns a ``Response`` "
"object. Useful for testing RESTful interfaces."
msgstr ""
"Procède à une requête PATCH utilisant le chemin ``path`` indiqué et renvoie "
"un objet ``Response``. Utile pour tester les interfaces de type « REST »."

msgid ""
"Makes a DELETE request on the provided ``path`` and returns a ``Response`` "
"object. Useful for testing RESTful interfaces."
msgstr ""
"Procède à une requête DELETE utilisant le chemin ``path`` indiqué et renvoie "
"un objet ``Response``. Utile pour tester les interfaces de type « REST »."

msgid ""
"Makes a TRACE request on the provided ``path`` and returns a ``Response`` "
"object. Useful for simulating diagnostic probes."
msgstr ""
"Procède à une requête TRACE utilisant le chemin ``path`` indiqué et renvoie "
"un objet ``Response``. Utile pour simuler les tests diagnostics."

msgid ""
"Unlike the other request methods, ``data`` is not provided as a keyword "
"parameter in order to comply with :rfc:`9110#section-9.3.8`, which mandates "
"that TRACE requests must not have a body."
msgstr ""
"Au contraire des autres méthodes de requête, ``data`` n'est pas fourni comme "
"paramètre nommé afin de respecter la :rfc:`9110#section-9.3.8`, qui interdit "
"aux requêtes TRACE de posséder un corps."

msgid ""
"If your site uses Django's :doc:`authentication system</topics/auth/index>` "
"and you deal with logging in users, you can use the test client's "
"``login()`` method to simulate the effect of a user logging into the site."
msgstr ""
"Si un projet utilise le :doc:`système d'authentification</topics/auth/"
"index>` de Django et que les tests connectent des utilisateurs, il est "
"possible d'utiliser la méthode ``login()`` du client de test pour simuler la "
"connexion d'un utilisateur au site concerné."

msgid ""
"After you call this method, the test client will have all the cookies and "
"session data required to pass any login-based tests that may form part of a "
"view."
msgstr ""
"Après l'appel à cette méthode, le client de test contiendra tous les cookies "
"et les données de session nécessaires pour passer les tests dans lesquels "
"des vues comptent sur des utilisateurs connectés."

msgid ""
"The format of the ``credentials`` argument depends on which :ref:"
"`authentication backend <authentication-backends>` you're using (which is "
"configured by your :setting:`AUTHENTICATION_BACKENDS` setting). If you're "
"using the standard authentication backend provided by Django "
"(``ModelBackend``), ``credentials`` should be the user's username and "
"password, provided as keyword arguments:"
msgstr ""
"Le format du paramètre ``credentials`` dépend du :ref:`moteur "
"d'authentification <authentication-backends>` utilisé (configuré dans le "
"réglage :setting:`AUTHENTICATION_BACKENDS`). Dans le cas du moteur "
"d'authentification standard de Django (``ModelBackend``), ``credentials`` "
"doit contenir le nom d'utilisateur et le mot de passe de l'utilisateur, "
"fournis sous la forme de paramètres nommés :"

msgid ""
"If you're using a different authentication backend, this method may require "
"different credentials. It requires whichever credentials are required by "
"your backend's ``authenticate()`` method."
msgstr ""
"Si un autre moteur d'authentification est utilisé, cette méthode peut "
"nécessiter un autre format de données d'authentification. Cela dépend des "
"paramètres nécessaires à la méthode ``authenticate()`` du moteur en question."

msgid ""
"``login()`` returns ``True`` if it the credentials were accepted and login "
"was successful."
msgstr ""
"``login()`` renvoie ``True`` si les données d'authentification ont été "
"acceptées et que la connexion s'est terminée avec succès."

msgid ""
"Finally, you'll need to remember to create user accounts before you can use "
"this method. As we explained above, the test runner is executed using a test "
"database, which contains no users by default. As a result, user accounts "
"that are valid on your production site will not work under test conditions. "
"You'll need to create users as part of the test suite -- either manually "
"(using the Django model API) or with a test fixture. Remember that if you "
"want your test user to have a password, you can't set the user's password by "
"setting the password attribute directly -- you must use the :meth:`~django."
"contrib.auth.models.User.set_password()` function to store a correctly "
"hashed password. Alternatively, you can use the :meth:`~django.contrib.auth."
"models.UserManager.create_user` helper method to create a new user with a "
"correctly hashed password."
msgstr ""
"Pour finir, il ne faut pas oublier de créer des comptes utilisateurs avant "
"de pouvoir utiliser cette méthode. Comme expliqué ci-dessus, le lanceur de "
"tests fonctionne avec une base de données de test, sans aucun utilisateur "
"par défaut. Par conséquent, les comptes utilisateurs actifs sur un site de "
"production ne sont pas pris en compte dans des conditions de test. Les "
"utilisateurs doivent être créés dans le cadre de la suite de tests, soit "
"manuellement (par l'API de modèle Django), soit par un instantané de test. "
"N'oubliez pas non plus que pour qu'un utilisateur de test dispose d'un mot "
"de passe, il ne suffit pas de définir directement l'attribut ``password`` de "
"l'utilisateur, mais il faut passer par la fonction :meth:`~django.contrib."
"auth.models.User.set_password()` pour que soit stockée une empreinte "
"correcte de mot de passe. Il est aussi possible d'employer la méthode "
"utilitaire :meth:`~django.contrib.auth.models.UserManager.create_user` pour "
"créer un nouvel utilisateur ainsi qu'une empreinte de mot de passe "
"utilisable."

msgid "``alogin()`` method was added."
msgstr "La méthode ``alogin()`` a été ajoutée."

msgid "*Asynchronous version*: ``aforce_login()``"
msgstr "*Version asynchrone* : ``aforce_login()``"

msgid ""
"If your site uses Django's :doc:`authentication system</topics/auth/index>`, "
"you can use the ``force_login()`` method to simulate the effect of a user "
"logging into the site. Use this method instead of :meth:`login` when a test "
"requires a user be logged in and the details of how a user logged in aren't "
"important."
msgstr ""
"Si un projet utilise le :doc:`système d'authentification</topics/auth/"
"index>` de Django, il est possible d'utiliser la méthode ``force_login()`` "
"pour simuler la connexion d'un utilisateur du site concerné. Il est "
"avantageux d'utiliser cette méthode à la place de :meth:`login` lorsqu'un "
"test a besoin d'un utilisateur connecté mais que les détails de la manière "
"dont l'utilisateur s'est connecté importent peu."

msgid ""
"Unlike ``login()``, this method skips the authentication and verification "
"steps: inactive users (:attr:`is_active=False <django.contrib.auth.models."
"User.is_active>`) are permitted to login and the user's credentials don't "
"need to be provided."
msgstr ""
"Au contraire de ``login()``, cette méthode omet les étapes "
"d'authentification et de vérification : les utilisateurs inactifs (:attr:"
"`is_active=False <django.contrib.auth.models.User.is_active>`) peuvent se "
"connecter et il n'est pas nécessaire de fournir les informations "
"d'authentification."

msgid ""
"The user will have its ``backend`` attribute set to the value of the "
"``backend`` argument (which should be a dotted Python path string), or to "
"``settings.AUTHENTICATION_BACKENDS[0]`` if a value isn't provided. The :func:"
"`~django.contrib.auth.authenticate` function called by :meth:`login` "
"normally annotates the user like this."
msgstr ""
"L'attribut ``backend`` de l'utilisateur sera défini à la valeur du paramètre "
"``backend`` (qui devrait être un chemin Python pointé) ou à ``settings."
"AUTHENTICATION_BACKENDS[0]`` si ce paramètre n'est pas fourni. La fonction :"
"func:`~django.contrib.auth.authenticate` appelée par :meth:`login` annote "
"normalement l'utilisateur de cette manière."

msgid ""
"This method is faster than ``login()`` since the expensive password hashing "
"algorithms are bypassed. Also, you can speed up ``login()`` by :ref:`using a "
"weaker hasher while testing <speeding-up-tests-auth-hashers>`."
msgstr ""
"Cette méthode est plus rapide que ``login()`` dans la mesure où les coûteux "
"algorithmes de hachage de mot de passe sont ignorés. Notez qu'il est aussi "
"possible d'accélérer ``login()`` en :ref:`utilisant une méthode de hachage "
"plus faible durant les tests <speeding-up-tests-auth-hashers>`."

msgid "``aforce_login()`` method was added."
msgstr "La méthode ``aforce_login()`` a été ajoutée."

msgid ""
"If your site uses Django's :doc:`authentication system</topics/auth/index>`, "
"the ``logout()`` method can be used to simulate the effect of a user logging "
"out of your site."
msgstr ""
"Si un projet utilise le :doc:`système d'authentification</topics/auth/"
"index>` de Django, il est possible d'utiliser la méthode ``logout()`` du "
"client de test pour simuler la déconnexion d'un utilisateur du site concerné."

msgid ""
"After you call this method, the test client will have all the cookies and "
"session data cleared to defaults. Subsequent requests will appear to come "
"from an :class:`~django.contrib.auth.models.AnonymousUser`."
msgstr ""
"Après l'appel à cette méthode, le client de test verra toutes ses données de "
"cookies et de session réinitialisées à leurs valeurs par défaut. Les "
"requêtes suivantes apparaîtront comme si elles provenaient d'un utilisateur "
"anonyme (:class:`~django.contrib.auth.models.AnonymousUser`)."

msgid "``alogout()`` method was added."
msgstr "La méthode ``alogout()`` a été ajoutée."

msgid "Testing responses"
msgstr "Test des réponses"

msgid ""
"The ``get()`` and ``post()`` methods both return a ``Response`` object. This "
"``Response`` object is *not* the same as the ``HttpResponse`` object "
"returned by Django views; the test response object has some additional data "
"useful for test code to verify."
msgstr ""
"Les méthodes ``get()`` et ``post()`` renvoient les deux un objet "
"``Response``. Cet objet n'est *pas* le même que les objets ``HttpResponse`` "
"renvoyés par les vues Django ; l'objet de réponse de test possède des "
"données supplémentaires bien utiles pour certaines vérifications dans le "
"code des tests."

msgid "Specifically, a ``Response`` object has the following attributes:"
msgstr ""
"Plus précisément, un objet ``Response`` possède les attributs suivants :"

msgid ""
"The test client that was used to make the request that resulted in the "
"response."
msgstr ""
"Le client de test utilisé pour effectuer la requête qui a renvoyé cette "
"réponse."

msgid ""
"The body of the response, as a bytestring. This is the final page content as "
"rendered by the view, or any error message."
msgstr ""
"Le corps de la réponse sous forme de chaîne d'octets. Il s'agit du contenu "
"final de la page produite par la vue, ou d'un éventuel message d'erreur."

msgid ""
"The template ``Context`` instance that was used to render the template that "
"produced the response content."
msgstr ""
"L'instance ``Context`` du gabarit utilisé pour effectuer le rendu de gabarit "
"qui a produit le contenu de la réponse."

msgid ""
"If the rendered page used multiple templates, then ``context`` will be a "
"list of ``Context`` objects, in the order in which they were rendered."
msgstr ""
"Si le rendu de la page à utilisé plusieurs gabarits, ``context`` contient "
"une liste d'objets ``Context`` dans l'ordre de leur rendu."

msgid ""
"Regardless of the number of templates used during rendering, you can "
"retrieve context values using the ``[]`` operator. For example, the context "
"variable ``name`` could be retrieved using:"
msgstr ""
"Quel que soit le nombre de gabarits utilisés dans le processus de rendu, "
"vous pouvez récupérer les valeurs de contexte en utilisant l'opérateur "
"``[]``. Par exemple, la variable de contexte ``name`` peut être récupérée "
"ainsi :"

msgid "Not using Django templates?"
msgstr "Vous n'utilisez pas les gabarits Django ?"

msgid ""
"This attribute is only populated when using the :class:`~django.template."
"backends.django.DjangoTemplates` backend. If you're using another template "
"engine, :attr:`~django.template.response.SimpleTemplateResponse."
"context_data` may be a suitable alternative on responses with that attribute."
msgstr ""
"Cet attribut n'est présent que lorsque le moteur de gabarit est :class:"
"`~django.template.backends.django.DjangoTemplates`. Si vous utilisez un "
"autre moteur, :attr:`~django.template.response.SimpleTemplateResponse."
"context_data` peut constituer une alternative viable pour les réponses "
"possédant cet attribut."

msgid ""
"A tuple of three values that provides information about the unhandled "
"exception, if any, that occurred during the view."
msgstr ""
"Un tuple de trois valeurs fournissant des informations sur l'exception non "
"traitée, le cas échéant, qui est apparue durant la vue."

msgid ""
"The values are (type, value, traceback), the same as returned by Python's :"
"func:`sys.exc_info`. Their meanings are:"
msgstr ""
"Les valeurs sont (type, valeur, trace d'erreur), tout comme ce que Python "
"renvoie dans :func:`sys.exc_info`. Leur signification est :"

msgid "*type*: The type of the exception."
msgstr "*type* : le type de l'exception."

msgid "*value*: The exception instance."
msgstr "*valeur* : l'instance de l'exception."

msgid ""
"*traceback*: A traceback object which encapsulates the call stack at the "
"point where the exception originally occurred."
msgstr ""
"*trace d'erreur* : Un objet ``Traceback`` qui englobe la pile d'appels au "
"moment où l'exception a été initialement déclenchée. "

msgid "If no exception occurred, then ``exc_info`` will be ``None``."
msgstr "Si aucune exception ne s'est produite, ``exc_info`` contient ``None``."

msgid ""
"The body of the response, parsed as JSON. Extra keyword arguments are passed "
"to :func:`json.loads`. For example:"
msgstr ""
"Le corps de la réponse, analysée en JSON. Les paramètres nommés "
"supplémentaires sont transmis à :func:`json.loads`. Par exemple :"

msgid ""
"If the ``Content-Type`` header is not ``\"application/json\"``, then a :exc:"
"`ValueError` will be raised when trying to parse the response."
msgstr ""
"Si l'en-tête ``Content-Type`` n'est pas ``\"application/json\"``, une "
"erreur :exc:`ValueError` sera signalée au moment d'analyser la réponse."

msgid "The request data that stimulated the response."
msgstr "Les données de requête à l'origine de la réponse."

msgid ""
"The ``WSGIRequest`` instance generated by the test handler that generated "
"the response."
msgstr ""
"L'instance ``WSGIRequest`` générée par le gestionnaire de test qui a produit "
"la réponse."

msgid ""
"The HTTP status of the response, as an integer. For a full list of defined "
"codes, see the `IANA status code registry`_."
msgstr ""
"Le statut HTTP de la réponse sous forme de nombre entier. Pour une liste "
"exhaustive des codes définis, voir le `registre IANA des codes de statut`_."

msgid ""
"A list of ``Template`` instances used to render the final content, in the "
"order they were rendered. For each template in the list, use ``template."
"name`` to get the template's file name, if the template was loaded from a "
"file. (The name is a string such as ``'admin/index.html'``.)"
msgstr ""
"Une liste d'instances de gabarits (``Template``) ayant servi à rendre le "
"contenu final, dans l'ordre de leur utilisation. Pour chaque gabarit de la "
"liste, utilisez ``template.name`` pour obtenir le nom de fichier du gabarit "
"si celui-ci a été chargé à partir d'un fichier (le nom est une chaîne du "
"genre ``'admin/index.html'``)."

msgid ""
"This attribute is only populated when using the :class:`~django.template."
"backends.django.DjangoTemplates` backend. If you're using another template "
"engine, :attr:`~django.template.response.SimpleTemplateResponse."
"template_name` may be a suitable alternative if you only need the name of "
"the template used for rendering."
msgstr ""
"Cet attribut n'est présent que lorsque le moteur de gabarit est :class:"
"`~django.template.backends.django.DjangoTemplates`. Si vous utilisez un "
"autre moteur, :attr:`~django.template.response.SimpleTemplateResponse."
"template_name` peut constituer une alternative viable si vous n'avez besoin "
"que du nom du gabarit utilisé pour le rendu."

msgid ""
"An instance of :class:`~django.urls.ResolverMatch` for the response. You can "
"use the :attr:`~django.urls.ResolverMatch.func` attribute, for example, to "
"verify the view that served the response::"
msgstr ""
"Une instance de :class:`~django.urls.ResolverMatch` pour la réponse. Vous "
"pouvez utiliser l'attribut :attr:`~django.urls.ResolverMatch.func`, par "
"exemple, pour vérifier la vue qui a servi la réponse ::"

msgid ""
"If the given URL is not found, accessing this attribute will raise a :exc:"
"`~django.urls.Resolver404` exception."
msgstr ""
"Si l'URL indiquée n'est pas trouvée, l'accès à cet attribut génère "
"l'exception :exc:`~django.urls.Resolver404`."

msgid ""
"As with a normal response, you can also access the headers through :attr:`."
"HttpResponse.headers`. For example, you could determine the content type of "
"a response using ``response.headers['Content-Type']``."
msgstr ""
"Comme pour les réponses normales, il est aussi possible d'accéder aux en-"
"têtes par :attr:`.HttpResponse.headers`. Par exemple, vous pouvez retrouver "
"le type de contenu d'une réponse avec ``response.headers['Content-Type']``."

msgid "Exceptions"
msgstr "Exceptions"

msgid ""
"If you point the test client at a view that raises an exception and ``Client."
"raise_request_exception`` is ``True``, that exception will be visible in the "
"test case. You can then use a standard ``try ... except`` block or :meth:"
"`~unittest.TestCase.assertRaises` to test for exceptions."
msgstr ""
"Si le client de test fait appel à une vue qui génère une exception et que "
"``Client.raise_request_exception`` vaut ``True``, celle-ci est propagée dans "
"le cas de test. Vous pouvez dès lors utiliser un bloc ``try ... except`` "
"standard ou :meth:`~unittest.TestCase.assertRaises` pour tester l'exception "
"générée."

msgid ""
"The only exceptions that are not visible to the test client are :class:"
"`~django.http.Http404`, :class:`~django.core.exceptions.PermissionDenied`, :"
"exc:`SystemExit`, and :class:`~django.core.exceptions.SuspiciousOperation`. "
"Django catches these exceptions internally and converts them into the "
"appropriate HTTP response codes. In these cases, you can check ``response."
"status_code`` in your test."
msgstr ""
"Les seules exceptions qui ne sont pas visibles pour le client de test sont :"
"class:`~django.http.Http404`, :class:`~django.core.exceptions."
"PermissionDenied`, :exc:`SystemExit` et :class:`~django.core.exceptions."
"SuspiciousOperation`. Django intercepte en interne ces exceptions et les "
"convertit en code de réponse HTTP adéquat. Dans ces situations, vous pouvez "
"tester la valeur ``response.status_code``."

msgid ""
"If ``Client.raise_request_exception`` is ``False``, the test client will "
"return a 500 response as would be returned to a browser. The response has "
"the attribute :attr:`~Response.exc_info` to provide information about the "
"unhandled exception."
msgstr ""
"Si ``Client.raise_request_exception`` vaut ``False``, le client de test "
"renverra une erreur 500 comme le ferait un navigateur. La réponse possède "
"l'attribut :attr:`~Response.exc_info` pour fournir des informations sur "
"l'exception non traitée."

msgid "Persistent state"
msgstr "État persistant"

msgid ""
"The test client is stateful. If a response returns a cookie, then that "
"cookie will be stored in the test client and sent with all subsequent "
"``get()`` and ``post()`` requests."
msgstr ""
"L'état du client de test est persistant. Si une réponse renvoie un cookie, "
"celui-ci est stocké dans le client de test et il sera ensuite envoyé dans "
"les requêtes ``get()`` et ``post()`` subséquentes."

msgid ""
"Expiration policies for these cookies are not followed. If you want a cookie "
"to expire, either delete it manually or create a new ``Client`` instance "
"(which will effectively delete all cookies)."
msgstr ""
"Les politiques d'expiration de ces cookies ne sont pas respectées. Si vous "
"souhaitez faire expirer un cookie, supprimez-le manuellement ou créez une "
"nouvelle instance de ``Client`` (ce qui aura comme conséquence de supprimer "
"tous les cookies)."

msgid ""
"A test client has attributes that store persistent state information. You "
"can access these properties as part of a test condition."
msgstr ""
"Un client de test possède des attributs qui stockent les informations d'état "
"persistantes. Vous pouvez accéder à ces propriétés dans le cadre d'une "
"condition de test."

msgid ""
"A Python :class:`~http.cookies.SimpleCookie` object, containing the current "
"values of all the client cookies. See the documentation of the :mod:`http."
"cookies` module for more."
msgstr ""
"Un objet Python :class:`~http.cookies.SimpleCookie` contenant les valeurs "
"actuelles de tous les cookies du client. Consultez la documentation du "
"module :mod:`http.cookies` pour en savoir plus."

msgid ""
"A dictionary-like object containing session information. See the :doc:"
"`session documentation</topics/http/sessions>` for full details."
msgstr ""
"Un objet de type dictionnaire contenant les informations de session. "
"Consultez la :doc:`documentation des sessions</topics/http/sessions>` pour "
"plus de détails."

msgid ""
"To modify the session and then save it, it must be stored in a variable "
"first (because a new ``SessionStore`` is created every time this property is "
"accessed)::"
msgstr ""
"Pour modifier la session et l'enregistrer, elle doit être d'abord stockée "
"dans une variable (car un nouveau ``SessionStore`` est créé chaque fois "
"qu'on accède à cette propriété) ::"

msgid ""
"This is similar to the :attr:`session` attribute but it works in async "
"contexts."
msgstr ""
"Ceci est comparable à l'attribut :attr:`session`, mais fonctionne en "
"contexte asynchrone."

msgid "Setting the language"
msgstr "Définition de la langue"

msgid ""
"When testing applications that support internationalization and "
"localization, you might want to set the language for a test client request. "
"The method for doing so depends on whether or not the :class:`~django."
"middleware.locale.LocaleMiddleware` is enabled."
msgstr ""
"Lors des tests d'applications qui prennent en charge l'internationalisation "
"et la localisation, il peut être souhaitable de définir la langue de la "
"requête du client de test. La méthode à employer dépend de l'activation ou "
"non de :class:`~django.middleware.locale.LocaleMiddleware`. "

msgid ""
"If the middleware is enabled, the language can be set by creating a cookie "
"with a name of :setting:`LANGUAGE_COOKIE_NAME` and a value of the language "
"code::"
msgstr ""
"Si l'intergiciel est activé, la langue peut être définie en créant un cookie "
"nommé :setting:`LANGUAGE_COOKIE_NAME` et une valeur contenant le code de "
"langue ::"

msgid "or by including the ``Accept-Language`` HTTP header in the request::"
msgstr "ou en incluant l'en-tête HTTP ``Accept-Language`` dans la requête ::"

msgid ""
"When using these methods, ensure to reset the active language at the end of "
"each test::"
msgstr ""
"Lorsque vous utilisez ces méthodes, prenez soin de réinitialiser la langue "
"active à la fin de chaque test ::"

msgid "More details are in :ref:`how-django-discovers-language-preference`."
msgstr ""
"Voir :ref:`how-django-discovers-language-preference` pour plus de détails."

msgid ""
"If the middleware isn't enabled, the active language may be set using :func:"
"`.translation.override`::"
msgstr ""
"Si l'intergiciel n'est pas activé, la langue active peut être définie en "
"utilisant :func:`.translation.override`::"

msgid "More details are in :ref:`explicitly-setting-the-active-language`."
msgstr ""
"Voir :ref:`explicitly-setting-the-active-language` pour plus de détails."

msgid "The following is a unit test using the test client::"
msgstr "L'exemple suivant est un test unitaire exploitant le client de test ::"

msgid ":class:`django.test.RequestFactory`"
msgstr ":class:`django.test.RequestFactory`"

msgid "Provided test case classes"
msgstr "Classes de cas de test disponibles"

msgid ""
"Normal Python unit test classes extend a base class of :class:`unittest."
"TestCase`. Django provides a few extensions of this base class:"
msgstr ""
"Les classes de test unitaire normales de Python étendent la classe de base :"
"class:`unittest.TestCase`. Django fournit plusieurs extensions de cette "
"classe de base :"

msgid "Hierarchy of Django unit testing classes (TestCase subclasses)"
msgstr ""
"Hiérarchie des classes de tests unitaires de Django (sous-classes de "
"TestCase)"

msgid "Hierarchy of Django unit testing classes"
msgstr "Hiérarchie des classes de tests unitaires de Django"

msgid ""
"You can convert a normal :class:`unittest.TestCase` to any of the "
"subclasses: change the base class of your test from ``unittest.TestCase`` to "
"the subclass. All of the standard Python unit test functionality will be "
"available, and it will be augmented with some useful additions as described "
"in each section below."
msgstr ""
"Il est possible de convertir une classe :class:`unittest.TestCase` normale "
"en une des sous-classes : remplacez la classe de base des tests ``unittest."
"TestCase`` par la sous-classe. Toutes les fonctionnalités standard de Python "
"pour les tests unitaires sont toujours disponibles, et vous obtenez en plus "
"quelques éléments utiles tels que documentés dans chaque section ci-dessous."

msgid "``SimpleTestCase``"
msgstr "``SimpleTestCase``"

msgid "A subclass of :class:`unittest.TestCase` that adds this functionality:"
msgstr ""
"Une sous-classe de :class:`unittest.TestCase` qui ajoute cette "
"fonctionnalité :"

msgid "Some useful assertions like:"
msgstr "Certaines assertions utiles comme :"

msgid ""
"Checking that a callable :meth:`raises a certain exception <SimpleTestCase."
"assertRaisesMessage>`."
msgstr ""
"Vérification qu'un objet exécutable :meth:`génère une exception donnée "
"<SimpleTestCase.assertRaisesMessage>`."

msgid ""
"Checking that a callable :meth:`triggers a certain warning <SimpleTestCase."
"assertWarnsMessage>`."
msgstr ""
"Vérification qu'un objet exécutable :meth:`génère un avertissement donné "
"<SimpleTestCase.assertWarnsMessage>`."

msgid ""
"Testing form field :meth:`rendering and error treatment <SimpleTestCase."
"assertFieldOutput>`."
msgstr ""
"Le test de :meth:`rendu et de traitement d'erreur <SimpleTestCase."
"assertFieldOutput>` des champs de formulaire."

msgid ""
"Testing :meth:`HTML responses for the presence/lack of a given fragment "
"<SimpleTestCase.assertContains>`."
msgstr ""
"Le test de :meth:`présence ou d'absence d'un fragment donné dans des "
"réponses HTML <SimpleTestCase.assertContains>`."

msgid ""
"Verifying that a template :meth:`has/hasn't been used to generate a given "
"response content <SimpleTestCase.assertTemplateUsed>`."
msgstr ""
"La vérification qu'un gabarit :meth:`a été ou n'a pas été utilisé pour "
"générer un contenu de réponse donné <SimpleTestCase.assertTemplateUsed>`."

msgid ""
"Verifying that two :meth:`URLs <SimpleTestCase.assertURLEqual>` are equal."
msgstr ""
"La vérification que deux meth:`URL <SimpleTestCase.assertURLEqual>` sont "
"égales."

msgid ""
"Verifying an HTTP :meth:`redirect <SimpleTestCase.assertRedirects>` is "
"performed by the app."
msgstr ""
"La vérification qu'une :meth:`redirection HTTP <SimpleTestCase."
"assertRedirects>` a été effectuée par une application."

msgid ""
"Robustly testing two :meth:`HTML fragments <SimpleTestCase.assertHTMLEqual>` "
"for equality/inequality or :meth:`containment <SimpleTestCase.assertInHTML>`."
msgstr ""
"La comparaison robuste entre deux :meth:`fragments HTML <SimpleTestCase."
"assertHTMLEqual>` ou la présence ou absence d'un :meth:`fragment HTML dans "
"un autre <SimpleTestCase.assertInHTML>`."

msgid ""
"Robustly testing two :meth:`XML fragments <SimpleTestCase.assertXMLEqual>` "
"for equality/inequality."
msgstr ""
"La comparaison robuste entre deux :meth:`fragments XML <SimpleTestCase."
"assertXMLEqual>`."

msgid ""
"Robustly testing two :meth:`JSON fragments <SimpleTestCase.assertJSONEqual>` "
"for equality."
msgstr ""
"La comparaison robuste entre deux :meth:`fragments JSON <SimpleTestCase."
"assertJSONEqual>`."

msgid ""
"The ability to run tests with :ref:`modified settings <overriding-settings>`."
msgstr ""
"La capacité de lancer des tests avec des :ref:`réglages modifiés <overriding-"
"settings>`."

msgid "Using the :attr:`~SimpleTestCase.client` :class:`~django.test.Client`."
msgstr ""
"L'utilisation du :class:`~django.test.Client` :attr:`~SimpleTestCase.client`."

msgid ""
"If your tests make any database queries, use subclasses :class:`~django.test."
"TransactionTestCase` or :class:`~django.test.TestCase`."
msgstr ""
"Si les tests effectuent des requêtes de base de données, utilisez les sous-"
"classes  :class:`~django.test.TransactionTestCase` ou :class:`~django.test."
"TestCase`."

msgid ""
":class:`~SimpleTestCase` disallows database queries by default. This helps "
"to avoid executing write queries which will affect other tests since each "
"``SimpleTestCase`` test isn't run in a transaction. If you aren't concerned "
"about this problem, you can disable this behavior by setting the "
"``databases`` class attribute to ``'__all__'`` on your test class."
msgstr ""
":class:`~SimpleTestCase` n'autorise pas de requête de base de données par "
"défaut. Ceci permet d'éviter l'exécution de requêtes d'écriture qui "
"pourraient affecter d'autres tests dans la mesure où chaque test d'une suite "
"``SimpleTestCase`` n'est pas lancé dans une transaction. Si ce problème ne "
"vous concerne pas, vous pouvez désactiver ce comportement en définissant "
"l'attribut de classe ``databases`` à ``'__all__'`` sur la classe de test."

msgid ""
"``SimpleTestCase`` and its subclasses (e.g. ``TestCase``, ...) rely on "
"``setUpClass()`` and ``tearDownClass()`` to perform some class-wide "
"initialization (e.g. overriding settings). If you need to override those "
"methods, don't forget to call the ``super`` implementation::"
msgstr ""
"``SimpleTestCase`` et ses sous-classes (par ex. ``TestCase``, ...) se basent "
"sur ``setUpClass()`` et ``tearDownClass()`` pour effectuer des "
"initialisations liées à la classe entière (par exemple la surcharge de "
"réglages). Si vous avez besoin de surcharger ces méthodes, n'oubliez pas "
"d'appeler l'implémentation de ``super``::"

msgid ""
"Be sure to account for Python's behavior if an exception is raised during "
"``setUpClass()``. If that happens, neither the tests in the class nor "
"``tearDownClass()`` are run. In the case of :class:`django.test.TestCase`, "
"this will leak the transaction created in ``super()``  which results in "
"various symptoms including a segmentation fault on some platforms (reported "
"on macOS). If you want to intentionally raise an exception such as :exc:"
"`unittest.SkipTest` in ``setUpClass()``, be sure to do it before calling "
"``super()`` to avoid this."
msgstr ""
"Prenez garde de prendre en compte le comportement Python quand une exception "
"est générée durant ``setUpClass()``. Quand cela se produit, aucun test de la "
"classe n'est exécuté et ``tearDownClass()`` n'est pas non plus appelée. Dans "
"le cas de :class:`django.test.TestCase`, la transaction créée dans "
"``super()`` n'est pas proprement traitée ce qui peut produire divers "
"symptômes, y compris une faute de segmentation sur certaines plates-formes "
"(signalé sur macOS). Si vous souhaitez provoquer intentionnellement une "
"exception telle que :exc:`unittest.SkipTest` dans ``setUpClass()``, faites-"
"le avant d'appeler ``super()`` pour éviter ces problèmes."

msgid "``TransactionTestCase``"
msgstr "``TransactionTestCase``"

msgid ""
"``TransactionTestCase`` inherits from :class:`~django.test.SimpleTestCase` "
"to add some database-specific features:"
msgstr ""
"``TransactionTestCase`` hérite de :class:`~django.test.SimpleTestCase` et y "
"ajoute quelques fonctionnalités spécifiques aux bases de données :"

msgid ""
"Resetting the database to a known state at the beginning of each test to "
"ease testing and using the ORM."
msgstr ""
"Réinitialisation de la base de données à un état connu au commencement de "
"chaque test pour faciliter les tests et l'utilisation de l'ORM."

msgid "Database :attr:`~TransactionTestCase.fixtures`."
msgstr ""
"Les instantanés (:attr:`~TransactionTestCase.fixtures`) de base de données."

msgid ""
"Test :ref:`skipping based on database backend features <skipping-tests>`."
msgstr ""
"Omission de tests :ref:`en fonction de fonctionnalités du moteur de base de "
"données <skipping-tests>`."

msgid ""
"The remaining specialized :meth:`assert* <TransactionTestCase."
"assertQuerySetEqual>` methods."
msgstr ""
"Les méthodes spécialisées restantes du type :meth:`assert* "
"<TransactionTestCase.assertQuerySetEqual>`."

msgid ""
"Django's :class:`TestCase` class is a more commonly used subclass of "
"``TransactionTestCase`` that makes use of database transaction facilities to "
"speed up the process of resetting the database to a known state at the "
"beginning of each test. A consequence of this, however, is that some "
"database behaviors cannot be tested within a Django ``TestCase`` class. For "
"instance, you cannot test that a block of code is executing within a "
"transaction, as is required when using :meth:`~django.db.models.query."
"QuerySet.select_for_update()`. In those cases, you should use "
"``TransactionTestCase``."
msgstr ""
"La classe :class:`TestCase` de Django est une sous-classe plus couramment "
"utilisée de ``TransactionTestCase`` qui emploie les utilitaires de "
"transaction de base de données pour accélérer le processus de "
"réinitialisation de la base de données à un état connu au début de chaque "
"test. Cependant, une des conséquences de ceci est que certains comportements "
"de base de données ne peuvent pas être testés avec une classe ``TestCase`` "
"de Django. Par exemple, vous ne pouvez pas tester qu'un bloc de code "
"s'exécute dans une transaction, comme c'est exigé par l'utilisation de :meth:"
"`~django.db.models.query.QuerySet.select_for_update()`. Dans de tels cas, il "
"vous faut utiliser la classe ``TransactionTestCase``."

msgid ""
"``TransactionTestCase`` and ``TestCase`` are identical except for the manner "
"in which the database is reset to a known state and the ability for test "
"code to test the effects of commit and rollback:"
msgstr ""
"``TransactionTestCase`` et ``TestCase`` sont identiques à l'exception de la "
"manière dont la base de données est réinitialisée à un état connu et de la "
"capacité de tester les effets de « commit » et de « rollback » dans le code :"

msgid ""
"A ``TransactionTestCase`` resets the database after the test runs by "
"truncating all tables. A ``TransactionTestCase`` may call commit and "
"rollback and observe the effects of these calls on the database."
msgstr ""
"La classe ``TransactionTestCase`` réinitialise la base de données après le "
"lancement des tests en tronquant toutes les tables. Le code de ces tests "
"peut valider et annuler des transactions et observer les effets de ces "
"appels sur la base de données."

msgid ""
"A ``TestCase``, on the other hand, does not truncate tables after a test. "
"Instead, it encloses the test code in a database transaction that is rolled "
"back at the end of the test. This guarantees that the rollback at the end of "
"the test restores the database to its initial state."
msgstr ""
"D'un autre côté, un ``TestCase`` ne tronque pas les tables après un test. Il "
"enveloppe plutôt le code de test dans une transaction de base de données qui "
"est ensuite annulée lorsque le test est terminé. Cela permet de garantir que "
"l'annulation (« rollback ») à la fin des tests restaure la base de données à "
"son état initial."

msgid ""
"``TestCase`` running on a database that does not support rollback (e.g. "
"MySQL with the MyISAM storage engine), and all instances of "
"``TransactionTestCase``, will roll back at the end of the test by deleting "
"all data from the test database."
msgstr ""
"Les tests ``TestCase`` s'exécutant avec une base de données ne prenant pas "
"en charge l'annulation (« rollback »), par exemple MySQL avec le moteur "
"MyISAM, ainsi que toutes les instances de tests ``TransactionTestCase`` "
"annulent la transaction à la fin du test en supprimant toutes les données de "
"la base de données de test."

msgid ""
"Apps :ref:`will not see their data reloaded <test-case-serialized-"
"rollback>`; if you need this functionality (for example, third-party apps "
"should enable this) you can set ``serialized_rollback = True`` inside the "
"``TestCase`` body."
msgstr ""
"Les applications :ref:`ne verront pas leurs données rechargées <test-case-"
"serialized-rollback>`. Si vous avez besoin de cette fonctionnalité "
"(typiquement dans le cas des applications tierces), vous pouvez définir "
"``serialized_rollback = True`` dans le corps de la classe ``TestCase``."

msgid "``TestCase``"
msgstr "``TestCase``"

msgid ""
"This is the most common class to use for writing tests in Django. It "
"inherits from :class:`TransactionTestCase` (and by extension :class:"
"`SimpleTestCase`). If your Django application doesn't use a database, use :"
"class:`SimpleTestCase`."
msgstr ""
"Il s'agit de la classe la plus courante pour l'écriture de tests dans "
"Django. Elle hérite de :class:`TransactionTestCase` (et par extension de :"
"class:`SimpleTestCase`). Si votre application Django n'utilise pas de base "
"de données, utilisez :class:`SimpleTestCase`."

msgid "The class:"
msgstr "La classe :"

msgid ""
"Wraps the tests within two nested :func:`~django.db.transaction.atomic` "
"blocks: one for the whole class and one for each test. Therefore, if you "
"want to test some specific database transaction behavior, use :class:"
"`TransactionTestCase`."
msgstr ""
"Enveloppe les tests dans deux blocs :func:`~django.db.transaction.atomic` "
"imbriqués : un pour la classe entière et un pour chaque test. Ainsi, si vous "
"souhaitez tester un comportement transactionnel précis de la base de "
"données, utilisez :class:`TransactionTestCase`."

msgid "Checks deferrable database constraints at the end of each test."
msgstr ""
"Vérifie les contraintes de base de données différées à la fin de chaque test."

msgid "It also provides an additional method:"
msgstr "Elle fournit également une méthode supplémentaire :"

msgid ""
"The class-level ``atomic`` block described above allows the creation of "
"initial data at the class level, once for the whole ``TestCase``. This "
"technique allows for faster tests as compared to using ``setUp()``."
msgstr ""
"Le bloc ``atomic`` au niveau de la classe mentionné ci-dessus permet la "
"création de données initiales au niveau de la classe, une seule fois pour "
"l'ensemble de ``TestCase``. Cette technique permet d'accélérer les tests en "
"comparaison du travail équivalent effectué au niveau de ``setUp()``."

msgid ""
"Note that if the tests are run on a database with no transaction support "
"(for instance, MySQL with the MyISAM engine), ``setUpTestData()`` will be "
"called before each test, negating the speed benefits."
msgstr ""
"Notez que si les tests sont exécutés pour une base de données sans prise en "
"charge des transactions (par exemple MySQL avec le moteur MyISAM), "
"``setUpTestData()`` sera appelée avant chaque test, ce qui annulera le "
"bénéfice en terme de vitesse."

msgid ""
"Objects assigned to class attributes in ``setUpTestData()`` must support "
"creating deep copies with :py:func:`copy.deepcopy` in order to isolate them "
"from alterations performed by each test methods."
msgstr ""
"Les objets attribués aux attributs de classe dans ``setUpTestData()`` "
"doivent prendre en charge la copie profonde avec :py:func:`copy.deepcopy` "
"afin de pouvoir être isolés de changements effectués par les méthodes de "
"test."

msgid ""
"Returns a context manager that captures :func:`transaction.on_commit() "
"<django.db.transaction.on_commit>` callbacks for the given database "
"connection. It returns a list that contains, on exit of the context, the "
"captured callback functions. From this list you can make assertions on the "
"callbacks or call them to invoke their side effects, emulating a commit."
msgstr ""
"Renvoie un gestionnaire de contexte capturant les fonctions de rappel :func:"
"`transaction.on_commit() <django.db.transaction.on_commit>` pour la "
"connexion de base de données indiquée. À la sortie du contexte, il renvoie "
"une liste contenant les fonctions de rappel capturées. À partir de cette "
"liste, vous pouvez placer des assertions sur ces fonctions ou les appeler "
"pour produire leurs effets de bord, simulant un commit."

msgid ""
"``using`` is the alias of the database connection to capture callbacks for."
msgstr ""
"``using`` est l'alias de la connexion de base de données pour laquelle les "
"fonctions de rappel seront capturées."

msgid ""
"If ``execute`` is ``True``, all the callbacks will be called as the context "
"manager exits, if no exception occurred. This emulates a commit after the "
"wrapped block of code."
msgstr ""
"Si ``execute`` vaut ``True``, toutes les fonctions de rappel seront "
"exécutées au moment de la sortie du gestionnaire de contexte, dans le cas ou "
"aucune exception n'a été produite. Ceci simule un commit après le bloc de "
"code enveloppé."

msgid "``LiveServerTestCase``"
msgstr "``LiveServerTestCase``"

msgid ""
"``LiveServerTestCase`` does basically the same as :class:`~django.test."
"TransactionTestCase` with one extra feature: it launches a live Django "
"server in the background on setup, and shuts it down on teardown. This "
"allows the use of automated test clients other than the :ref:`Django dummy "
"client <test-client>` such as, for example, the Selenium_ client, to execute "
"a series of functional tests inside a browser and simulate a real user's "
"actions."
msgstr ""
"``LiveServerTestCase`` est à la base identique à :class:`~django.test."
"TransactionTestCase` avec une fonction supplémentaire : elle lance un "
"serveur Django en arrière-plan lors de la préparation (« setUp ») des tests "
"et l'arrête lors du nettoyage (« tearDown »). Cela permet l'utilisation de "
"clients de tests automatisés autres que le :ref:`client élémentaire de "
"Django <test-client>`, comme par exemple le client Selenium_, afin "
"d'exécuter une série de tests fonctionnels dans un navigateur et de simuler "
"ainsi des actions d'un utilisateur réel."

msgid ""
"The live server listens on ``localhost`` and binds to port 0 which uses a "
"free port assigned by the operating system. The server's URL can be accessed "
"with ``self.live_server_url`` during the tests."
msgstr ""
"Le serveur « live » écoute sur ``localhost`` et se lie au port 0, ce qui "
"utilise un port libre attribué par le système d'exploitation. L'URL du "
"serveur est accessible dans ``self.live_server_url`` pendant les tests."

msgid ""
"To demonstrate how to use ``LiveServerTestCase``, let's write a Selenium "
"test. First of all, you need to install the :pypi:`selenium` package:"
msgstr ""
"Pour démontrer comment utiliser ``LiveServerTestCase``, écrivons un test "
"Selenium. Premièrement, il s'agit d'installer le paquet :pypi:`selenium` :"

msgid ""
"Then, add a ``LiveServerTestCase``-based test to your app's tests module "
"(for example: ``myapp/tests.py``). For this example, we'll assume you're "
"using the :mod:`~django.contrib.staticfiles` app and want to have static "
"files served during the execution of your tests similar to what we get at "
"development time with ``DEBUG=True``, i.e. without having to collect them "
"using :djadmin:`collectstatic`. We'll use the  :class:`~django.contrib."
"staticfiles.testing.StaticLiveServerTestCase` subclass which provides that "
"functionality. Replace it with ``django.test.LiveServerTestCase`` if you "
"don't need that."
msgstr ""
"Puis, ajoutez un test basé sur ``LiveServerTestCase`` au module tests de "
"votre application (par exemple ``myapp/tests.py``). Pour cet exemple, nous "
"supposons que vous utilisez l'application :mod:`~django.contrib.staticfiles` "
"et que vous souhaitez disposez des fichiers statiques servis durant "
"l'exécution des tests tout comme ce qu'on a en développement avec "
"``DEBUG=True``, c'est-à-dire sans devoir les collecter avec :djadmin:"
"`collectstatic`. Nous allons utiliser la sous-classe :class:`~django.contrib."
"staticfiles.testing.StaticLiveServerTestCase` qui fournit cette "
"fonctionnalité. Remplacez-la par ``django.test.LiveServerTestCase`` si vous "
"n'en avez pas besoin."

msgid "The code for this test may look as follows::"
msgstr "Le code de ce test pourrait ressembler à ceci ::"

msgid "Finally, you may run the test as follows:"
msgstr "Finalement, lancez le test comme ceci :"

msgid ""
"This example will automatically open Firefox then go to the login page, "
"enter the credentials and press the \"Log in\" button. Selenium offers other "
"drivers in case you do not have Firefox installed or wish to use another "
"browser. The example above is just a tiny fraction of what the Selenium "
"client can do; check out the `full reference`_ for more details."
msgstr ""
"Cet exemple ouvre Firefox automatiquement puis se rend à la page de "
"connexion, saisit les données d'authentification et appuie sur le bouton "
"« Log in ». Selenium propose d'autres pilotes dans le cas où Firefox n'est "
"pas installé ou que vous voudriez tester avec un autre navigateur. L'exemple "
"ci-dessus n'est qu'une fraction de ce que le client Selenium est capable de "
"faire ; consultez la `référence complète`_ pour plus de détails."

msgid ""
"When using an in-memory SQLite database to run the tests, the same database "
"connection will be shared by two threads in parallel: the thread in which "
"the live server is run and the thread in which the test case is run. It's "
"important to prevent simultaneous database queries via this shared "
"connection by the two threads, as that may sometimes randomly cause the "
"tests to fail. So you need to ensure that the two threads don't access the "
"database at the same time. In particular, this means that in some cases (for "
"example, just after clicking a link or submitting a form), you might need to "
"check that a response is received by Selenium and that the next page is "
"loaded before proceeding with further test execution. Do this, for example, "
"by making Selenium wait until the ``<body>`` HTML tag is found in the "
"response (requires Selenium > 2.13)::"
msgstr ""
"Lorsque les tests utilisent une base de données SQLite en mémoire, une même "
"connexion de base de données sera partagée par deux fils d'exécution en "
"parallèle : le fil dans lequel tourne le serveur « live » et le fil utilisé "
"pour faire fonctionner le cas de test. Il est important de prévenir les "
"requêtes de base de données simultanées au travers de cette connexion "
"partagée, car cela pourrait provoquer l'échec aléatoire de certains tests. "
"Vous devez donc vous assurer que les deux fils d'exécution n'accèdent pas à "
"la base de données au même moment. En particulier, cela signifie que dans "
"certains cas (par exemple juste après avoir cliqué sur un lien ou soumis un "
"formulaire), il est nécessaire de contrôler qu'une réponse a été reçue par "
"Selenium et que la page suivante a été chargée avant de continuer avec la "
"suite de l'exécution des tests. Cela peur par exemple se faire en faisant "
"attendre Selenium jusqu'à ce que la balise HTML ``<body>`` soit présente "
"dans la réponse (nécessite Selenium > 2.13) ::"

msgid ""
"The tricky thing here is that there's really no such thing as a \"page load,"
"\" especially in modern web apps that generate HTML dynamically after the "
"server generates the initial document. So, checking for the presence of "
"``<body>`` in the response might not necessarily be appropriate for all use "
"cases. Please refer to the `Selenium FAQ`_ and `Selenium documentation`_ for "
"more information."
msgstr ""
"L'élément délicat ici est que le concept de « chargement de page » n'existe "
"pas, particulièrement dans les applications web modernes qui produisent du "
"code HTML dynamique après la génération du document initial par le serveur. "
"Ceci fait que le contrôle de la présence de ``<body>`` dans la réponse n'est "
"pas forcément approprié dans tous les cas de figure. Consultez la `FAQ "
"Selenium`_ ainsi que la `documentation Selenium`_ pour obtenir davantage "
"d'informations."

msgid "Test cases features"
msgstr "Fonctionnalités des cas de test"

msgid "Default test client"
msgstr "Client de test par défaut"

msgid ""
"Every test case in a ``django.test.*TestCase`` instance has access to an "
"instance of a Django test client. This client can be accessed as ``self."
"client``. This client is recreated for each test, so you don't have to worry "
"about state (such as cookies) carrying over from one test to another."
msgstr ""
"Chaque cas de test dans une instance de ``django.test.*TestCase`` peut "
"accéder à une instance du client de test de Django. Ce client est disponible "
"dans self.client. Il est recréé pour chaque test, il n'y a donc pas besoin "
"de se soucier de son état (comme les cookies) qui pourrait se propager d'un "
"test à l'autre."

msgid "This means, instead of instantiating a ``Client`` in each test::"
msgstr ""
"Cela signifie qu'au lieu de créer une instance de ``Client`` dans chaque "
"test ::"

msgid "...you can refer to ``self.client``, like so::"
msgstr "…vous pouvez faire appel à ``self.client``, comme ceci ::"

msgid "Customizing the test client"
msgstr "Personnalisation du client de test"

msgid ""
"If you want to use a different ``Client`` class (for example, a subclass "
"with customized behavior), use the :attr:`~SimpleTestCase.client_class` "
"class attribute::"
msgstr ""
"Si vous souhaitez utiliser une classe ``Client`` différente (par exemple une "
"sous-classe avec un comportement adapté), utilisez l'attribut de classe :"
"attr:`~SimpleTestCase.client_class`::"

msgid "Fixture loading"
msgstr "Chargement des instantanés"

msgid ""
"A test case class for a database-backed website isn't much use if there "
"isn't any data in the database. Tests are more readable and it's more "
"maintainable to create objects using the ORM, for example in :meth:`TestCase."
"setUpTestData`, however, you can also use :ref:`fixtures <fixtures-"
"explanation>`."
msgstr ""
"Une classe de cas de test pour un site Web adossé à une base de données "
"n'est pas très utile s'il n'y a pas de données en base de données. Les tests "
"sont plus lisibles et la maintenabilité est meilleure si les objets sont "
"créés avec l'ORM, par exemple dans :meth:`TestCase.setUpTestData`. "
"Cependant, vous pouvez aussi utiliser des :ref:`instantanés <fixtures-"
"explanation>`."

msgid ""
"A fixture is a collection of data that Django knows how to import into a "
"database. For example, if your site has user accounts, you might set up a "
"fixture of fake user accounts in order to populate your database during "
"tests."
msgstr ""
"Un instantané est une série de données que Django sait importer dans la base "
"de données. Par exemple, si votre site contient des comptes utilisateurs, il "
"peut être utile de créer un instantané de comptes utilisateurs afin de "
"remplir la base de données pendant les tests."

msgid ""
"The most straightforward way of creating a fixture is to use the :djadmin:"
"`manage.py dumpdata <dumpdata>` command. This assumes you already have some "
"data in your database. See the :djadmin:`dumpdata documentation<dumpdata>` "
"for more details."
msgstr ""
"La façon la plus directe de créer un instantané est d'utiliser la commande :"
"djadmin:`manage.py dumpdata <dumpdata>`, en partant du principe que le base "
"de données contient déjà les données nécessaires. Consultez la :djadmin:"
"`documentation de dumpdata<dumpdata>` pour plus de détails."

msgid ""
"Once you've created a fixture and placed it in a ``fixtures`` directory in "
"one of your :setting:`INSTALLED_APPS`, you can use it in your unit tests by "
"specifying a ``fixtures`` class attribute on your :class:`django.test."
"TestCase` subclass::"
msgstr ""
"Après avoir créé un instantané et l'avoir placé dans un répertoire "
"``fixtures`` dans l'une des applications de :setting:`INSTALLED_APPS`, vous "
"pouvez l'utiliser dans vos tests unitaires en définissant un attribut de "
"classe ``fixtures`` dans votre sous-classe de :class:`django.test.TestCase`::"

msgid "Here's specifically what will happen:"
msgstr "Voici ce qui se passe en pratique :"

msgid ""
"At the start of each test, before ``setUp()`` is run, Django will flush the "
"database, returning the database to the state it was in directly after :"
"djadmin:`migrate` was called."
msgstr ""
"Au début de chaque test, avant l'exécution de ``setUp()``, Django "
"réinitialise la base de données telle qu'elle se trouvait juste après avoir "
"exécuté :djadmin:`migrate`."

msgid ""
"Then, all the named fixtures are installed. In this example, Django will "
"install any JSON fixture named ``mammals``, followed by any fixture named "
"``birds``. See the :ref:`fixtures-explanation` topic for more details on "
"defining and installing fixtures."
msgstr ""
"Puis, tous les instantanés nommés sont installés. Dans cet exemple, Django "
"installe tout instantané JSON nommé ``mammals``, suivi par tout instantané "
"nommé ``birds``. Consultez la thématique :ref:`fixtures-explanation` pour "
"plus de détails sur la définition et l'installation d'instantanés."

msgid ""
"For performance reasons, :class:`TestCase` loads fixtures once for the "
"entire test class, before :meth:`~TestCase.setUpTestData`, instead of before "
"each test, and it uses transactions to clean the database before each test. "
"In any case, you can be certain that the outcome of a test will not be "
"affected by another test or by the order of test execution."
msgstr ""
"Pour des raisons de performance, :class:`TestCase` charge les instantanés "
"une seule fois pour toute la classe de tests, avant :meth:`~TestCase."
"setUpTestData`, au lieu de le faire avant chaque test. Elle utilise les "
"transactions pour réinitialiser la base de données avant chaque test. Dans "
"tous les cas, vous pouvez être sûr que le résultat d'un test ne sera pas "
"affecté par un autre test ou par l'ordre d'exécution des tests."

msgid ""
"By default, fixtures are only loaded into the ``default`` database. If you "
"are using multiple databases and set :attr:`TransactionTestCase.databases`, "
"fixtures will be loaded into all specified databases."
msgstr ""
"Par défaut, les instantanés ne sont chargés que dans la base de données "
"``default``. Si vous utilisez plusieurs bases de données et que vous "
"définissez ::attr:`TransactionTestCase.databases`, les instantanés seront "
"chargés dans toutes les bases de données indiquées."

msgid "URLconf configuration"
msgstr "Configuration des URL"

msgid ""
"If your application provides views, you may want to include tests that use "
"the test client to exercise those views. However, an end user is free to "
"deploy the views in your application at any URL of their choosing. This "
"means that your tests can't rely upon the fact that your views will be "
"available at a particular URL. Decorate your test class or test method with "
"``@override_settings(ROOT_URLCONF=...)`` for URLconf configuration."
msgstr ""
"Si une application contient des vues, il peut être souhaitable d'inclure des "
"tests où le client de test éprouve ces vues. Cependant, un utilisateur de "
"l'application est libre de déployer les vues d'une application à l'URL de "
"son choix. Cela signifie que les tests ne peuvent pas compter sur des URL "
"figées pour accéder aux vues. Décorez vos classes ou méthodes de test avec "
"``@override_settings(ROOT_URLCONF=...)`` pour imposer des configurations "
"d'URL."

msgid "Multi-database support"
msgstr "Prise en charge de plusieurs bases de données"

msgid ""
"Django sets up a test database corresponding to every database that is "
"defined in the :setting:`DATABASES` definition in your settings and referred "
"to by at least one test through ``databases``."
msgstr ""
"Django met en place une base de données de test pour chaque base de données "
"définie dans la définition de :setting:`DATABASES` dans vos réglages et qui "
"est référencée par au moins un test au travers de ``databases``."

msgid ""
"However, a big part of the time taken to run a Django ``TestCase`` is "
"consumed by the call to ``flush`` that ensures that you have a clean "
"database at the start of each test run. If you have multiple databases, "
"multiple flushes are required (one for each database), which can be a time "
"consuming activity -- especially if your tests don't need to test multi-"
"database activity."
msgstr ""
"Cependant, une bonne partie du temps nécessaire à exécuter un cas de test "
"Django est passé dans l'appel à ``flush`` (réinitialisation des données) "
"permettant de retrouver une base de données propre au début de chaque test. "
"Pour un projet avec plusieurs bases de données, plusieurs commandes "
"``flush`` sont nécessaires (une par base de données), ce qui peut "
"représenter un temps non négligeable, particulièrement si les tests n'ont "
"pas pour but de tester l'activité entre plusieurs bases de données."

msgid ""
"As an optimization, Django only flushes the ``default`` database at the "
"start of each test run. If your setup contains multiple databases, and you "
"have a test that requires every database to be clean, you can use the "
"``databases`` attribute on the test suite to request extra databases to be "
"flushed."
msgstr ""
"Dans une optique d'optimisation, Django ne réinitialise que la base de "
"données ``default`` au début de chaque test. Si votre configuration contient "
"plusieurs bases de données et que certains tests nécessitent que toutes les "
"bases de données soient propres, vous pouvez définir l'attribut "
"``databases`` de la suite de tests pour provoquer la réinitialisation des "
"bases de données supplémentaires."

msgid ""
"This test case class will flush the ``default`` and ``other`` test databases "
"before running ``test_index_page_view``. You can also use ``'__all__'`` to "
"specify that all of the test databases must be flushed."
msgstr ""
"Cette classe de cas de test réinitialise les bases de données de test "
"``default`` et ``other`` avant d'exécuter ``test_index_page_view``. Vous "
"pouvez aussi indiquer ``'__all__'`` qui demande à ce que toutes les bases de "
"données de test soient réinitialisées."

msgid ""
"The ``databases`` flag also controls which databases the :attr:"
"`TransactionTestCase.fixtures` are loaded into. By default, fixtures are "
"only loaded into the ``default`` database."
msgstr ""
"L'option ``databases`` contrôle également les bases données dans lesquelles "
"sont chargés les instantanés (:attr:`TransactionTestCase.fixtures`). Par "
"défaut, les instantanés ne sont chargés que dans la base de données "
"``default``."

msgid ""
"Queries against databases not in ``databases`` will give assertion errors to "
"prevent state leaking between tests."
msgstr ""
"Les requêtes ciblant des bases de données absentes de ``databases`` "
"produiront des erreurs d'assertion pour éviter des fuites d'état entre les "
"tests."

msgid ""
"By default, only the ``default`` database will be wrapped in a transaction "
"during a ``TestCase``'s execution and attempts to query other databases will "
"result in assertion errors to prevent state leaking between tests."
msgstr ""
"Par défaut, seule la base de données ``default`` est enveloppée dans une "
"transaction durant l'exécution d'un cas de test ; toute tentative "
"d'interroger une autre base de données produira une erreur d'assertion pour "
"empêcher toute fuite d'état entre les tests."

msgid ""
"Use the ``databases`` class attribute on the test class to request "
"transaction wrapping against non-``default`` databases."
msgstr ""
"Utilisez l'attribut de classe ``databases`` sur la classe de test pour "
"demander l'emploi des transactions pour les bases de données autres que "
"``default``."

msgid ""
"This test will only allow queries against the ``other`` database. Just like "
"for :attr:`SimpleTestCase.databases` and :attr:`TransactionTestCase."
"databases`, the ``'__all__'`` constant can be used to specify that the test "
"should allow queries to all databases."
msgstr ""
"Ce test n'autorisera que les requêtes vers las base de données ``other``. "
"Comme pour :attr:`SimpleTestCase.databases` et :attr:`TransactionTestCase."
"databases`, la constante ``'__all__'`` peut être employée pour indiquer que "
"le test doit autoriser les requêtes vers toutes les bases de données."

msgid "Overriding settings"
msgstr "Surcharge des réglages"

msgid ""
"Use the functions below to temporarily alter the value of settings in tests. "
"Don't manipulate ``django.conf.settings`` directly as Django won't restore "
"the original values after such manipulations."
msgstr ""
"Utilisez les fonctions ci-dessous pour modifier temporairement la valeur de "
"certains réglages pendant les tests. Ne manipulez pas directement ``django."
"conf.settings`` car Django ne s'occupe pas de restaurer les valeurs "
"d'origine après de telles manipulations."

msgid ""
"For testing purposes it's often useful to change a setting temporarily and "
"revert to the original value after running the testing code. For this use "
"case Django provides a standard Python context manager (see :pep:`343`) "
"called :meth:`~django.test.SimpleTestCase.settings`, which can be used like "
"this::"
msgstr ""
"À des fins de tests, il est souvent utile de modifier temporairement un "
"réglage puis de retrouver la valeur d'origine après l'exécution du code des "
"tests. Pour cette situation, Django offre un gestionnaire de contexte de "
"style Python (voir :pep:`343`) nommé :meth:`~django.test.SimpleTestCase."
"settings` qui peut être utilisé comme ceci ::"

msgid ""
"This example will override the :setting:`LOGIN_URL` setting for the code in "
"the ``with`` block and reset its value to the previous state afterward."
msgstr ""
"Cet exemple surcharge le réglage :setting:`LOGIN_URL` pour le code contenu "
"dans le bloc ``with`` et réapplique la valeur originale à la fin du bloc."

msgid ""
"It can prove unwieldy to redefine settings that contain a list of values. In "
"practice, adding or removing values is often sufficient. Django provides "
"the :meth:`~django.test.SimpleTestCase.modify_settings` context manager for "
"easier settings changes::"
msgstr ""
"La redéfinition de réglages contenant une liste de valeurs peut se révéler "
"ardue. En pratique, l'ajout ou la suppression de valeurs est souvent "
"suffisante. Django fournit le gestionnaire de contexte :meth:`~django.test."
"SimpleTestCase.modify_settings` pour changer plus facilement les réglages ::"

msgid ""
"For each action, you can supply either a list of values or a string. When "
"the value already exists in the list, ``append`` and ``prepend`` have no "
"effect; neither does ``remove`` when the value doesn't exist."
msgstr ""
"Pour chaque action, vous pouvez indiquer soit une liste de valeurs, soit une "
"chaîne. Lorsque la valeur existe déjà dans la liste, ``append`` et "
"``prepend`` n'ont pas d'effet ; de même que ``remove`` lorsque la valeur "
"n'existe pas."

msgid ""
"In case you want to override a setting for a test method, Django provides "
"the :func:`~django.test.override_settings` decorator (see :pep:`318`). It's "
"used like this::"
msgstr ""
"Dans le cas où vous souhaitez remplacer un réglage pour une méthode de test, "
"Django met à disposition le décorateur :func:`~django.test."
"override_settings` (voir :pep:`318`). Voici comment l'utiliser ::"

msgid ""
"The decorator can also be applied to :class:`~django.test.TestCase` classes::"
msgstr ""
"Le décorateur peut aussi être appliqué à des classes :class:`~django.test."
"TestCase`::"

msgid ""
"Likewise, Django provides the :func:`~django.test.modify_settings` "
"decorator::"
msgstr ""
"Dans le même ordre d'idée, Django fournit le décorateur :func:`~django.test."
"modify_settings`::"

msgid "The decorator can also be applied to test case classes::"
msgstr "Le décorateur peut aussi être appliqué à des classes de cas de test ::"

msgid ""
"When given a class, these decorators modify the class directly and return "
"it; they don't create and return a modified copy of it. So if you try to "
"tweak the above examples to assign the return value to a different name than "
"``LoginTestCase`` or ``MiddlewareTestCase``, you may be surprised to find "
"that the original test case classes are still equally affected by the "
"decorator. For a given class, :func:`~django.test.modify_settings` is always "
"applied after :func:`~django.test.override_settings`."
msgstr ""
"Lorsqu'ils reçoivent une classe, ces décorateurs modifient directement la "
"classe et la renvoie ; la classe renvoyée n'est pas une copie. Ainsi si vous "
"essayez de manipuler les exemples ci-dessus pour que la valeur renvoyée soit "
"nommée différemment que ``LoginTestCase`` ou ``MiddlewareTestCase``, vous "
"pourriez être surpris de constater que les classes de cas de test originales "
"sont tout de même affectées par le décorateur. Pour une classe donnée, :func:"
"`~django.test.modify_settings` est toujours appliqué après :func:`~django."
"test.override_settings`."

msgid ""
"The settings file contains some settings that are only consulted during "
"initialization of Django internals. If you change them with "
"``override_settings``, the setting is changed if you access it via the "
"``django.conf.settings`` module, however, Django's internals access it "
"differently. Effectively, using :func:`~django.test.override_settings` or :"
"func:`~django.test.modify_settings` with these settings is probably not "
"going to do what you expect it to do."
msgstr ""
"Le fichier de réglages contient certains réglages qui ne sont consultés que "
"lors de l'initialisation de paramètres internes à Django. Si vous les "
"modifier avec ``override_settings``, ces réglages sont bien modifiés si vous "
"les appelez depuis le module ``django.conf.settings``, mais les éléments "
"internes de Django accèdent différemment à ces réglages. En pratique, "
"l'utilisation de :func:`~django.test.override_settings` ou de :func:`~django."
"test.modify_settings` avec ces réglages ne va probablement pas avoir l'effet "
"que vous attendez."

msgid ""
"We do not recommend altering the :setting:`DATABASES` setting. Altering the :"
"setting:`CACHES` setting is possible, but a bit tricky if you are using "
"internals that make using of caching, like :mod:`django.contrib.sessions`. "
"For example, you will have to reinitialize the session backend in a test "
"that uses cached sessions and overrides :setting:`CACHES`."
msgstr ""
"Il n'est pas recommandé de modifier le réglage :setting:`DATABASES`. La "
"modification du réglage :setting:`CACHES` est possible, mais un peu délicat "
"si vous utilisez des éléments internes qui s'appuient sur du cache, comme :"
"mod:`django.contrib.sessions`. Par exemple, il faut réinitialiser le moteur "
"de sessions dans un test qui utilise les sessions en cache et qui surcharge :"
"setting:`CACHES`."

msgid ""
"Finally, avoid aliasing your settings as module-level constants as "
"``override_settings()`` won't work on such values since they are only "
"evaluated the first time the module is imported."
msgstr ""
"Pour terminer, évitez de créer des alias de réglages comme constantes de "
"niveau module, car ``override_settings()`` ne fonctionnera pas avec de "
"telles valeurs qui ne sont évaluées que lors de la première importation du "
"module."

msgid ""
"You can also simulate the absence of a setting by deleting it after settings "
"have been overridden, like this::"
msgstr ""
"Il est aussi possible de simuler l'absence d'un réglage en supprimant celui-"
"ci après que les réglages aient été surchargés, comme ceci ::"

msgid ""
"When overriding settings, make sure to handle the cases in which your app's "
"code uses a cache or similar feature that retains state even if the setting "
"is changed. Django provides the :data:`django.test.signals.setting_changed` "
"signal that lets you register callbacks to clean up and otherwise reset "
"state when settings are changed."
msgstr ""
"Lors de la surcharge de réglages, prenez soin de gérer les cas où le code de "
"votre application utilise du cache ou un mécanisme similaire conservant "
"l'état même quand le réglage a changé. Django fournit le signal :data:"
"`django.test.signals.setting_changed` permettant d'inscrire des fonctions de "
"rappel qui serviront à réinitialiser l'état lorsque les réglages ont changé."

msgid "Django itself uses this signal to reset various data:"
msgstr ""
"Django utilise lui-même ce signal pour réinitialiser différentes données :"

msgid "Overridden settings"
msgstr "Réglages surchargés"

msgid "Data reset"
msgstr "Données réinitialisées"

msgid "USE_TZ, TIME_ZONE"
msgstr "USE_TZ, TIME_ZONE"

msgid "Databases timezone"
msgstr "Fuseau horaire de la base de données"

msgid "TEMPLATES"
msgstr "TEMPLATES"

msgid "Template engines"
msgstr "Moteurs de gabarits"

msgid "FORM_RENDERER"
msgstr "FORM_RENDERER"

msgid "Default renderer"
msgstr "Moteur de rendu par défaut"

msgid "SERIALIZATION_MODULES"
msgstr "SERIALIZATION_MODULES"

msgid "Serializers cache"
msgstr "Cache des sérialiseurs"

msgid "LOCALE_PATHS, LANGUAGE_CODE"
msgstr "LOCALE_PATHS, LANGUAGE_CODE"

msgid "Default translation and loaded translations"
msgstr "Traduction par défaut et traductions chargées"

msgid "STATIC_ROOT, STATIC_URL, STORAGES"
msgstr "STATIC_ROOT, STATIC_URL, STORAGES"

msgid "Storages configuration"
msgstr "Configuration des stockages"

msgid ""
"Resetting the default renderer when the ``FORM_RENDERER`` setting is changed "
"was added."
msgstr ""
"La réinitialisation du moteur de rendu par défaut lorsque le réglage "
"``FORM_RENDERER`` est modifié a été ajoutée."

msgid "Isolating apps"
msgstr "Isolation des applications"

msgid ""
"Registers the models defined within a wrapped context into their own "
"isolated :attr:`~django.apps.apps` registry. This functionality is useful "
"when creating model classes for tests, as the classes will be cleanly "
"deleted afterward, and there is no risk of name collisions."
msgstr ""
"Inscrit les modèles définis dans un contexte enveloppeur dans leur propre "
"registre :attr:`~django.apps.apps` isolé. Cette fonctionnalité est utile "
"lors de la création de classes de modèles pour les tests, car ainsi ces "
"classes seront proprement effacées à la fin, et cela évite des risques de "
"collisions de noms."

msgid ""
"The app labels which the isolated registry should contain must be passed as "
"individual arguments. You can use ``isolate_apps()`` as a decorator or a "
"context manager. For example::"
msgstr ""
"Les étiquettes d'application que le registre isolé doit contenir doivent "
"être transmises sous forme d'arguments individuels. Vous pouvez utiliser "
"``isolate_apps()`` comme un décorateur ou un gestionnaire de contexte. Par "
"exemple ::"

msgid "… or::"
msgstr "…ou ::"

msgid "The decorator form can also be applied to classes."
msgstr "La forme décorateur peut aussi être appliquée à des classes."

msgid "Two optional keyword arguments can be specified:"
msgstr "Deux paramètres nommés facultatifs peuvent être indiqués :"

msgid ""
"``attr_name``: attribute assigned the isolated registry if used as a class "
"decorator."
msgstr ""
"``attr_name``: attribut recevant le registre isolé si la forme décorateur de "
"classe est utilisée."

msgid ""
"``kwarg_name``: keyword argument passing the isolated registry if used as a "
"function decorator."
msgstr ""
"``kwarg_name``: paramètre nommé utilisé pour transmettre le registre isolé "
"si la forme décorateur de fonction est utilisée."

msgid ""
"The temporary ``Apps`` instance used to isolate model registration can be "
"retrieved as an attribute when used as a class decorator by using the "
"``attr_name`` parameter::"
msgstr ""
"L'instance temporaire ``Apps`` utilisée pour isoler l'inscription du modèle "
"peut être récupérée comme un attribut lorsqu'utilisée en tant que décorateur "
"de classe au moyen du paramètre ``attr_name``::"

msgid ""
"… or alternatively as an argument on the test method when used as a method "
"decorator by using the ``kwarg_name`` parameter::"
msgstr ""
"…ou en tant que paramètre de la méthode de test lorsqu'utilisée comme "
"décoratrice de méthode au moyen du paramètre ``kwarg_name``::"

msgid "Emptying the test outbox"
msgstr "Vidage de la boîte de messagerie de test"

msgid ""
"If you use any of Django's custom ``TestCase`` classes, the test runner will "
"clear the contents of the test email outbox at the start of each test case."
msgstr ""
"Si vous utilisez l'une des classes ``TestCase`` personnalisées de Django, "
"l'exécuteur de tests efface le contenu de la boîte de messagerie de test au "
"début de chaque cas de test."

msgid ""
"For more detail on email services during tests, see `Email services`_ below."
msgstr ""
"Pour plus de détails sur les services de messagerie durant les tests, "
"consultez `Services de messagerie`_ plus bas dans ce document."

msgid "Assertions"
msgstr "Assertions"

msgid ""
"As Python's normal :class:`unittest.TestCase` class implements assertion "
"methods such as :meth:`~unittest.TestCase.assertTrue` and :meth:`~unittest."
"TestCase.assertEqual`, Django's custom :class:`TestCase` class provides a "
"number of custom assertion methods that are useful for testing web "
"applications:"
msgstr ""
"De la même manière que la classe :class:`unittest.TestCase` normale de "
"Python implément des méthodes d'assertion telles que :meth:`~unittest."
"TestCase.assertTrue` et :meth:`~unittest.TestCase.assertEqual`, la classe :"
"class:`TestCase` propre à Django fournit un certain nombre de méthodes "
"d'assertion utiles pour tester les applications web :"

msgid ""
"The failure messages given by most of these assertion methods can be "
"customized with the ``msg_prefix`` argument. This string will be prefixed to "
"any failure message generated by the assertion. This allows you to provide "
"additional details that may help you to identify the location and cause of a "
"failure in your test suite."
msgstr ""
"Les messages d'échec produits par la plupart de ces méthodes d'assertion "
"peuvent être personnalisés par le paramètre ``msg_prefix``. Cette chaîne "
"préfixe tout message d'échec généré par l'assertion. Ceci permet d'ajouter "
"des détails pouvant aider à identifier l'emplacement et la cause d'un échec "
"dans une suite de tests."

msgid ""
"Asserts that execution of ``callable`` raises ``expected_exception`` and "
"that ``expected_message`` is found in the exception's message. Any other "
"outcome is reported as a failure. It's a simpler version of :meth:`unittest."
"TestCase.assertRaisesRegex` with the difference that ``expected_message`` "
"isn't treated as a regular expression."
msgstr ""
"Confirme que l'appel à l'exécutable ``callable`` génère l'exception "
"``expected_exception`` et que ``expected_message`` est trouvé dans le "
"message de l'exception. Tout autre résultat est signalé comme un échec. Il "
"s'agit d'une version simplifiée de :meth:`unittest.TestCase."
"assertRaisesRegex`, à la différence près que ``expected_message`` n'est ici "
"pas traité comme une expression régulière."

msgid ""
"If only the ``expected_exception`` and ``expected_message`` parameters are "
"given, returns a context manager so that the code being tested can be "
"written inline rather than as a function::"
msgstr ""
"Si seuls les paramètres ``expected_exception`` et ``expected_message`` sont "
"donnés, renvoie un gestionnaire de contexte afin que le code en cours de "
"test puisse être écrit en ligne plutôt que sous la forme d'une fonction ::"

msgid ""
"Analogous to :meth:`SimpleTestCase.assertRaisesMessage` but for :meth:"
"`~unittest.TestCase.assertWarnsRegex` instead of :meth:`~unittest.TestCase."
"assertRaisesRegex`."
msgstr ""
"Analogue à :meth:`SimpleTestCase.assertRaisesMessage` mais pour :meth:"
"`~unittest.TestCase.assertWarnsRegex` au lieu de :meth:`~unittest.TestCase."
"assertRaisesRegex`."

msgid "Asserts that a form field behaves correctly with various inputs."
msgstr ""
"Confirme qu'un champ de formulaire se comporte correctement avec différentes "
"valeurs soumises."

msgid "the class of the field to be tested."
msgstr "la classe du champ à tester."

msgid "a dictionary mapping valid inputs to their expected cleaned values."
msgstr ""
"un dictionnaire faisant correspondre des valeurs de saisies valides aux "
"valeurs nettoyées attendues."

msgid ""
"a dictionary mapping invalid inputs to one or more raised error messages."
msgstr ""
"un dictionnaire faisant correspondre des valeurs de saisies non valides à un "
"ou plusieurs messages d'erreur attendus."

msgid "the args passed to instantiate the field."
msgstr "les paramètres positionnels transmis pour la création du champ."

msgid "the kwargs passed to instantiate the field."
msgstr "les paramètres nommés transmis pour la création du champ."

msgid "the expected clean output for inputs in ``empty_values``."
msgstr ""
"le résultat nettoyé attendu pour les valeurs saisies contenues dans "
"``empty_values``."

msgid ""
"For example, the following code tests that an ``EmailField`` accepts ``a@a."
"com`` as a valid email address, but rejects ``aaa`` with a reasonable error "
"message::"
msgstr ""
"Par exemple, le code suivant teste qu'un champ ``EmailField`` accepte ``a@a."
"com`` comme adresse électronique valide, mais rejette ``aaa`` avec un "
"message d'erreur adéquat ::"

msgid "Asserts that a field on a form raises the provided list of errors."
msgstr "Confirme qu'un champ de formulaire génère la liste d'erreurs fournie."

msgid ""
"``form`` is a ``Form`` instance. The form must be :ref:`bound <ref-forms-api-"
"bound-unbound>` but not necessarily validated (``assertFormError()`` will "
"automatically call ``full_clean()`` on the form)."
msgstr ""
"``form`` est une instance de ``Form``. Le formulaire doit être  :ref:`lié à "
"des données (« bound ») <ref-forms-api-bound-unbound>` mais pas forcément "
"validé (``assertFormError()`` va automatiquement appeler la méthode "
"``full_clean()`` du formulaire). "

msgid ""
"``field`` is the name of the field on the form to check. To check the "
"form's :meth:`non-field errors <django.forms.Form.non_field_errors>`, use "
"``field=None``."
msgstr ""
"``field`` est le nom du champ de formulaire à contrôler. Pour contrôler les :"
"meth:`erreurs non liées aux champs <django.forms.Form.non_field_errors>`, "
"indiquez ``field=None``."

msgid ""
"``errors`` is a list of all the error strings that the field is expected to "
"have. You can also pass a single error string if you only expect one error "
"which means that ``errors='error message'`` is the same as ``errors=['error "
"message']``."
msgstr ""
"``errors`` est une liste de toutes les chaînes d'erreurs que le champ peut "
"potentiellement produire. Vous pouvez aussi transmettre une seule chaîne "
"d'erreur si vous en attendez une seule, ce qui signifie que "
"``errors='message d’erreur'`` est identique à ``errors=['message "
"d’erreur']``."

msgid ""
"Asserts that the ``formset`` raises the provided list of errors when "
"rendered."
msgstr ""
"Confirme que ``formset`` génère la liste d'erreurs fournie lorsqu'il est "
"affiché."

msgid ""
"``formset`` is a ``FormSet`` instance. The formset must be bound but not "
"necessarily validated (``assertFormSetError()`` will automatically call the "
"``full_clean()`` on the formset)."
msgstr ""
"``formset`` est une instance de ``FormSet``. Le jeu de formulaires doit être "
"lié à des données (« bound »)  mais pas forcément validé "
"(``assertFormSetError()`` va automatiquement appeler la méthode "
"``full_clean()`` du jeu de formulaires). "

msgid ""
"``form_index`` is the number of the form within the ``FormSet`` (starting "
"from 0). Use ``form_index=None`` to check the formset's non-form errors, i."
"e. the errors you get when calling ``formset.non_form_errors()``. In that "
"case you must also use ``field=None``."
msgstr ""
"``form_index`` est le numéro du formulaire dans le jeu ``FormSet`` "
"(commençant par 0). Indiquez  ``form_index=None`` pour vérifier les erreurs "
"non liées aux formulaires, c'est-à-dire les erreurs obtenues en appelant "
"``formset.non_form_errors()``. Dans ce cas, vous devez aussi indiquer "
"``field=None``."

msgid ""
"``field`` and ``errors`` have the same meaning as the parameters to "
"``assertFormError()``."
msgstr ""
"``field`` et ``errors`` ont la même signification que les mêmes paramètres "
"de ``assertFormError()``."

msgid ""
"Asserts that a :class:`response <django.http.HttpResponse>` produced the "
"given :attr:`~django.http.HttpResponse.status_code` and that ``text`` "
"appears in its :attr:`~django.http.HttpResponse.content`. If ``count`` is "
"provided, ``text`` must occur exactly ``count`` times in the response."
msgstr ""
"Confirme qu'une :class:`réponse <django.http.HttpResponse>` produit le code :"
"attr:`~django.http.HttpResponse.status_code` indiqué et que le contenu "
"``text`` apparaît dans son contenu :attr:`~django.http.HttpResponse."
"content`. Si ``count`` est renseigné, ``text`` doit apparaître exactement "
"``count`` fois dans la réponse."

msgid ""
"Set ``html`` to ``True`` to handle ``text`` as HTML. The comparison with the "
"response content will be based on HTML semantics instead of character-by-"
"character equality. Whitespace is ignored in most cases, attribute ordering "
"is not significant. See :meth:`~SimpleTestCase.assertHTMLEqual` for more "
"details."
msgstr ""
"Définissez ``html`` à ``True`` pour que ``text`` soit géré comme du code "
"HTML. La comparaison avec le contenu de la réponse prend alors en compte la "
"sémantique HTML au lieu d'une comparaison caractère par caractère. Les "
"espaces blancs sont majoritairement ignorés et l'ordre des attributs ne joue "
"pas de rôle. Voir :meth:`~SimpleTestCase.assertHTMLEqual` pour plus de "
"détails."

msgid "In older versions, error messages didn't contain the response content."
msgstr ""
"Dans les anciennes versions, les messages d'erreur ne contenaient pas le "
"contenu de la réponse."

msgid ""
"Asserts that a :class:`response <django.http.HttpResponse>` produced the "
"given :attr:`~django.http.HttpResponse.status_code` and that ``text`` does "
"*not* appear in its :attr:`~django.http.HttpResponse.content`."
msgstr ""
"Confirme qu'une :class:`réponse <django.http.HttpResponse>` produit le code :"
"attr:`~django.http.HttpResponse.status_code` indiqué et que le contenu "
"``text`` n'apparaît *pas* dans son contenu :attr:`~django.http.HttpResponse."
"content`."

msgid ""
"Asserts that the template with the given name was used in rendering the "
"response."
msgstr ""
"Confirme que le gabarit du nom indiqué a été utilisé pour produire la "
"réponse."

msgid ""
"``response`` must be a response instance returned by the :class:`test client "
"<django.test.Response>`."
msgstr ""
"``response`` doit être une instance de réponse renvoyée par le :class:"
"`client de test <django.test.Response>`."

msgid "``template_name`` should be a string such as ``'admin/index.html'``."
msgstr ""
"``template_name`` doit être une chaîne du genre ``'admin/index.html'``."

msgid ""
"The ``count`` argument is an integer indicating the number of times the "
"template should be rendered. Default is ``None``, meaning that the template "
"should be rendered one or more times."
msgstr ""
"Le paramètre ``count`` est un nombre entier indiquant le nombre de fois "
"qu'un gabarit doit être produit. La valeur par défaut est ``None``, ce qui "
"signifie que le gabarit doit être produit une ou plusieurs fois."

msgid "You can use this as a context manager, like this::"
msgstr ""
"Vous pouvez l'utiliser comme un gestionnaire de contexte, comme ceci ::"

msgid ""
"Asserts that the template with the given name was *not* used in rendering "
"the response."
msgstr ""
"Confirme que le gabarit du nom indiqué n'a *pas* été utilisé pour produire "
"la réponse."

msgid ""
"You can use this as a context manager in the same way as :meth:"
"`~SimpleTestCase.assertTemplateUsed`."
msgstr ""
"Vous pouvez l'utiliser comme un gestionnaire de contexte de la même façon "
"qu'avec :meth:`~SimpleTestCase.assertTemplateUsed`."

msgid ""
"Asserts that two URLs are the same, ignoring the order of query string "
"parameters except for parameters with the same name. For example, ``/path/?"
"x=1&y=2`` is equal to ``/path/?y=2&x=1``, but ``/path/?a=1&a=2`` isn't equal "
"to ``/path/?a=2&a=1``."
msgstr ""
"Confirme que deux URL sont identiques, en ignorant l'ordre des paramètres de "
"requête à l'exception des paramètres de même nom. Par exemple, ``/chemin/?"
"x=1&y=2`` est égal à ``/chemin/?y=2&x=1``, mais ``/chemin/?a=1&a=2`` n'est "
"pas égal à ``/chemin/?a=2&a=1``."

msgid ""
"Asserts that the :class:`response <django.http.HttpResponse>` returned a :"
"attr:`~django.http.HttpResponse.status_code` redirect status, redirected to "
"``expected_url`` (including any ``GET`` data), and that the final page was "
"received with ``target_status_code``."
msgstr ""
"Confirme que la :class:`réponse <django.http.HttpResponse>` renvoie un "
"statut de redirection :attr:`~django.http.HttpResponse.status_code`, qu'elle "
"redirige vers ``expected_url`` (y compris avec d'éventuelles données "
"``GET``) et que la page finale a renvoyé le code ``target_status_code``."

msgid ""
"If your request used the ``follow`` argument, the ``expected_url`` and "
"``target_status_code`` will be the url and status code for the final point "
"of the redirect chain."
msgstr ""
"Si la requête a utilisé le paramètre ``follow``, les valeurs de "
"``expected_url`` et de ``target_status_code`` doivent être celles de la page "
"finale de la chaîne de redirection."

msgid ""
"If ``fetch_redirect_response`` is ``False``, the final page won't be loaded. "
"Since the test client can't fetch external URLs, this is particularly useful "
"if ``expected_url`` isn't part of your Django app."
msgstr ""
"Si ``fetch_redirect_response`` vaut ``False``, la page finale n'est pas "
"chargée. Comme le client de test ne peut pas récupérer des URL externes, "
"c'est particulièrement utile quand ``expected_url`` ne fait pas partie de "
"votre application Django."

msgid ""
"Scheme is handled correctly when making comparisons between two URLs. If "
"there isn't any scheme specified in the location where we are redirected to, "
"the original request's scheme is used. If present, the scheme in "
"``expected_url`` is the one used to make the comparisons to."
msgstr ""
"Le protocole est géré correctement lors de comparaisons entre deux URL. Si "
"aucun protocole n'est indiqué à l'emplacement de redirection, le protocole "
"de la requête d'origine est utilisé. S'il est présent, le protocole dans "
"``expected_url`` est celui qui sera utilisé pour effectuer des comparaisons."

msgid ""
"Asserts that the strings ``html1`` and ``html2`` are equal. The comparison "
"is based on HTML semantics. The comparison takes following things into "
"account:"
msgstr ""
"Confirme que les chaînes ``html1`` et ``html2`` sont équivalentes. La "
"comparaison prend en compte la sémantique HTML. La comparaison tient compte "
"des éléments suivants :"

msgid "Whitespace before and after HTML tags is ignored."
msgstr "Les blancs avant et après les balises HTML sont ignorés."

msgid "All types of whitespace are considered equivalent."
msgstr ""
"Tous les types de blancs (espaces, tabulateurs, etc.) sont équivalents."

msgid ""
"All open tags are closed implicitly, e.g. when a surrounding tag is closed "
"or the HTML document ends."
msgstr ""
"Toutes les balises ouvertes sont fermées implicitement, par exemple quand "
"une balise de niveau supérieur est fermée ou quand le document HTML est fini."

msgid "Empty tags are equivalent to their self-closing version."
msgstr "Les balises vides sont équivalentes à leur version auto-fermante."

msgid "The ordering of attributes of an HTML element is not significant."
msgstr "L'ordre des attributs d'un élément HTML n'est pas signifiant."

msgid ""
"Boolean attributes (like ``checked``) without an argument are equal to "
"attributes that equal in name and value (see the examples)."
msgstr ""
"Les attributs booléens sans paramètre (comme ``checked``) sont équivalents "
"aux attributs dont le nom et la valeur sont identiques (voir les exemples)."

msgid ""
"Text, character references, and entity references that refer to the same "
"character are equivalent."
msgstr ""
"Le texte, les références de caractères et les références d'entité qui se "
"réfèrent au même caractère sont équivalents."

msgid ""
"The following examples are valid tests and don't raise any "
"``AssertionError``::"
msgstr ""
"Les exemples suivants sont des tests valides et ne génèrent pas d'exception "
"``AssertionError``::"

msgid ""
"``html1`` and ``html2`` must contain HTML. An ``AssertionError`` will be "
"raised if one of them cannot be parsed."
msgstr ""
"``html1`` et ``html2`` doivent contenir du code HTML. Une exception "
"``AssertionError`` est générée si l'une de ces deux valeurs ne peut pas être "
"analysée comme du code HTML."

msgid "Output in case of error can be customized with the ``msg`` argument."
msgstr ""
"L'affichage en cas d'erreur peut être personnalisé avec le paramètre ``msg``."

msgid ""
"Asserts that the strings ``html1`` and ``html2`` are *not* equal. The "
"comparison is based on HTML semantics. See :meth:`~SimpleTestCase."
"assertHTMLEqual` for details."
msgstr ""
"Confirme que les chaînes ``html1`` et ``html2`` ne sont *pas* équivalentes. "
"La comparaison prend en compte la sémantique HTML. Voir :meth:"
"`~SimpleTestCase.assertHTMLEqual` pour plus de détails."

msgid ""
"Asserts that the strings ``xml1`` and ``xml2`` are equal. The comparison is "
"based on XML semantics. Similarly to :meth:`~SimpleTestCase."
"assertHTMLEqual`, the comparison is made on parsed content, hence only "
"semantic differences are considered, not syntax differences. When invalid "
"XML is passed in any parameter, an ``AssertionError`` is always raised, even "
"if both strings are identical."
msgstr ""
"Confirme que les chaînes ``xml1`` et ``xml2`` sont équivalentes. La "
"comparaison prend en compte la sémantique XML. Sur le même principe que :"
"meth:`~SimpleTestCase.assertHTMLEqual`, la comparaison se fait sur le "
"contenu analysé, ce qui fait que seules les différences sémantiques sont "
"prises en compte, pas la syntaxe elle-même. Si le contenu XML de l'un des "
"paramètres n'est pas valide, une exception ``AssertionError`` est toujours "
"générée, même si les deux chaînes sont identiques."

msgid ""
"XML declaration, document type, processing instructions, and comments are "
"ignored. Only the root element and its children are compared."
msgstr ""
"La déclaration XML, le type de document, les instructions de traitement et "
"les commentaires sont ignorés. Seul l'élément racine (root) et ses "
"descendants sont comparés."

msgid ""
"Asserts that the strings ``xml1`` and ``xml2`` are *not* equal. The "
"comparison is based on XML semantics. See :meth:`~SimpleTestCase."
"assertXMLEqual` for details."
msgstr ""
"Confirme que les chaînes ``xml1`` et ``xml2`` ne sont *pas* équivalentes. La "
"comparaison prend en compte la sémantique xML. Voir :meth:`~SimpleTestCase."
"assertXMLEqual` pour plus de détails."

msgid ""
"Asserts that the HTML fragment ``needle`` is contained in the ``haystack`` "
"once."
msgstr ""
"Confirme que le fragment HTML ``needle`` est contenu une fois dans le "
"contenu ``haystack``."

msgid ""
"If the ``count`` integer argument is specified, then additionally the number "
"of ``needle`` occurrences will be strictly verified."
msgstr ""
"Si le paramètre nombre entier ``count`` est indiqué, un contrôle "
"supplémentaire est effectué que le nombre d'occurrences de ``needle`` "
"correspond à ``count``."

msgid ""
"Whitespace in most cases is ignored, and attribute ordering is not "
"significant. See :meth:`~SimpleTestCase.assertHTMLEqual` for more details."
msgstr ""
"Dans la plupart des cas, les blancs sont ignorés et l'ordre des attributs "
"n'est pas pris en compte. Voir :meth:`~SimpleTestCase.assertHTMLEqual` pour "
"plus de détails."

msgid "In older versions, error messages didn't contain the ``haystack``."
msgstr ""
"Dans les anciennes versions, les messages d'erreur ne contenaient pas "
"``haystack``."

msgid ""
"Asserts that the HTML fragment ``needle`` is *not* contained in the "
"``haystack``."
msgstr ""
"Confirme que le fragment HTML ``needle`` n'est *pas* contenu dans le contenu "
"``haystack``."

msgid ""
"Asserts that the JSON fragments ``raw`` and ``expected_data`` are equal. "
"Usual JSON non-significant whitespace rules apply as the heavyweight is "
"delegated to the :mod:`json` library."
msgstr ""
"Confirme que les fragments JSON ``raw`` et ``expected_data`` sont égaux. Les "
"règles habituelles de JSON concernant les blancs non significatifs "
"s'appliquent, car le gros du travail est confié à la bibliothèque :mod:"
"`json`."

msgid ""
"Asserts that the JSON fragments ``raw`` and ``expected_data`` are *not* "
"equal. See :meth:`~SimpleTestCase.assertJSONEqual` for further details."
msgstr ""
"Confirme que les fragments JSON ``raw`` et ``expected_data`` *ne sont pas* "
"égaux. Voir :meth:`~SimpleTestCase.assertJSONEqual` pour plus de détails."

msgid ""
"Asserts that a queryset ``qs`` matches a particular iterable of values "
"``values``."
msgstr ""
"Confirme que le jeu de requête ``qs`` correspond à une itération "
"particulière de valeurs ``values``."

msgid ""
"If ``transform`` is provided, ``values`` is compared to a list produced by "
"applying ``transform`` to each member of ``qs``."
msgstr ""
"Si ``transform`` est indiqué, ``values`` est comparé à une liste produite en "
"appliquant ``transform`` à chaque membre de ``qs``."

msgid ""
"By default, the comparison is also ordering dependent. If ``qs`` doesn't "
"provide an implicit ordering, you can set the ``ordered`` parameter to "
"``False``, which turns the comparison into a ``collections.Counter`` "
"comparison. If the order is undefined (if the given ``qs`` isn't ordered and "
"the comparison is against more than one ordered value), a ``ValueError`` is "
"raised."
msgstr ""
"Par défaut, la comparaison dépend aussi de l'ordre de tri. Si ``qs`` ne "
"comporte pas d'ordre de tri implicite, vous pouvez définir le paramètre "
"``ordered`` à ``False``, ce qui provoquera une comparaison sur des objets "
"``collections.Counter``. Si l'ordre est indéfini (si le paramètre ``qs`` "
"n'est pas trié et que la comparaison se fait avec plus d'une valeur triée) "
"une exception ``ValueError`` est générée."

msgid ""
"Asserts that when ``func`` is called with ``*args`` and ``**kwargs`` that "
"``num`` database queries are executed."
msgstr ""
"Confirme que lorsque ``func`` est appelée avec ``*args`` et ``**kwargs``, "
"``num`` requêtes de base de données sont effectuées."

msgid ""
"If a ``\"using\"`` key is present in ``kwargs`` it is used as the database "
"alias for which to check the number of queries::"
msgstr ""
"Si une clé ``\"using\"`` est présente dans ``kwargs``, cette valeur est "
"utilisée comme alias de base de données pour laquelle le nombre de requêtes "
"sera contrôlé ::"

msgid ""
"If you wish to call a function with a ``using`` parameter you can do it by "
"wrapping the call with a ``lambda`` to add an extra parameter::"
msgstr ""
"Si vous souhaitez appeler une fonction avec un paramètre ``using``, vous "
"pouvez le faire en enveloppant l'appel dans une fonction ``lambda`` pour y "
"ajouter un paramètre supplémentaire ::"

msgid "You can also use this as a context manager::"
msgstr "Vous pouvez également l'utiliser comme un gestionnaire de contexte ::"

msgid "Tagging tests"
msgstr "Étiquetage des tests"

msgid ""
"You can tag your tests so you can easily run a particular subset. For "
"example, you might label fast or slow tests::"
msgstr ""
"Il est possible d'étiqueter les tests afin de pouvoir plus facilement lancer "
"un sous-ensemble particulier. Par exemple, vous pourriez étiqueter les tests "
"rapides ou lents ::"

msgid "You can also tag a test case class::"
msgstr "Il est aussi possible d'étiqueter une classe de cas de test ::"

msgid ""
"Subclasses inherit tags from superclasses, and methods inherit tags from "
"their class. Given::"
msgstr ""
"Les sous-classes héritent des classes parentes, et les méthodes héritent des "
"étiquettes de leur classe. Par exemple ::"

msgid ""
"``SampleTestCaseChild.test`` will be labeled with ``'slow'``, ``'core'``, "
"``'bar'``, and ``'foo'``."
msgstr ""
"``SampleTestCaseChild.test`` possédera les étiquettes ``'slow'``, "
"``'core'``, ``'bar'`` et ``'foo'``."

msgid ""
"Then you can choose which tests to run. For example, to run only fast tests:"
msgstr ""
"Puis, vous pouvez choisir quels tests lancer. Par exemple, pour ne lancer "
"que les tests rapides :"

msgid "Or to run fast tests and the core one (even though it's slow):"
msgstr ""
"Ou pour lancer les tests rapides et les tests principaux (même s'ils sont "
"lents) :"

msgid ""
"You can also exclude tests by tag. To run core tests if they are not slow:"
msgstr ""
"Il est aussi possible d'exclure des tests par leur étiquette. Pour lancer "
"les tests principaux qui ne sont pas lents :"

msgid ""
":option:`test --exclude-tag` has precedence over :option:`test --tag`, so if "
"a test has two tags and you select one of them and exclude the other, the "
"test won't be run."
msgstr ""
":option:`test --exclude-tag` a la priorité sur :option:`test --tag`, si donc "
"un test possède deux étiquettes et que vous choisissez l'une d'elle tout en "
"excluant l'autre, le test ne sera pas lancé."

msgid "Testing asynchronous code"
msgstr "Test de code asynchrone"

msgid ""
"If you merely want to test the output of your asynchronous views, the "
"standard test client will run them inside their own asynchronous loop "
"without any extra work needed on your part."
msgstr ""
"Si vous souhaitez simplement tester le résultat de vues asynchrones, le "
"client de test standard les lance dans une boucle asynchrone dédiée sans "
"travail supplémentaire de votre part."

msgid ""
"However, if you want to write fully-asynchronous tests for a Django project, "
"you will need to take several things into account."
msgstr ""
"Cependant, si vous souhaitez écrire des tests pleinement asynchrones pour un "
"projet Django, vous devrez prendre en compte plusieurs choses."

msgid ""
"Firstly, your tests must be ``async def`` methods on the test class (in "
"order to give them an asynchronous context). Django will automatically "
"detect any ``async def`` tests and wrap them so they run in their own event "
"loop."
msgstr ""
"Tout d'abord, vos tests doivent être des méthodes ``async def`` de la classe "
"de test (afin de leur fournir un contexte asynchrone). Django détectera "
"automatiquement tout test de type ``async def`` et les enveloppera afin "
"qu'ils s'exécutent dans leur propre boucle événementielle."

msgid ""
"If you are testing from an asynchronous function, you must also use the "
"asynchronous test client. This is available as ``django.test.AsyncClient``, "
"or as ``self.async_client`` on any test."
msgstr ""
"Si vous testez depuis une fonction asynchrone, vous devez éaglement utiliser "
"le client de test asynchrone. Il est disponible comme ``django.test."
"AsyncClient`` ou comme ``self.async_client`` dans chaque test."

msgid ""
"``AsyncClient`` has the same methods and signatures as the synchronous "
"(normal) test client, with the following exceptions:"
msgstr ""
"``AsyncClient`` possède les mêmes méthodes et signatures que le client de "
"test synchrone (normal), avec les exceptions suivantes :"

msgid ""
"In the initialization, arbitrary keyword arguments in ``defaults`` are added "
"directly into the ASGI scope."
msgstr ""
"Lors de l'initialisation, les paramètres mot-clé arbitraires dans "
"``defaults`` sont ajoutés directement dans la portée ASGI."

msgid ""
"Headers passed as ``extra`` keyword arguments should not have the ``HTTP_`` "
"prefix required by the synchronous client (see :meth:`Client.get`). For "
"example, here is how to set an HTTP ``Accept`` header:"
msgstr ""
"Les en-têtes transmis dans le paramètre nommé ``extra`` ne doivent pas "
"comporter de préfixe ``HTTP_`` tel que requis par le client synchrone (voir :"
"meth:`Client.get`). Par exemple, voici comment définir un en-tête HTTP "
"``Accept``:"

msgid "Support for the ``follow`` parameter was added to the ``AsyncClient``."
msgstr ""
"La prise en charge du paramètre ``follow`` a été ajoutée au client "
"``AsyncClient``."

msgid "Using ``AsyncClient`` any method that makes a request must be awaited::"
msgstr ""
"En utilisant ``AsyncClient``, toute méthode effectuant une requête doit être "
"appelée avec ``await``::"

msgid ""
"The asynchronous client can also call synchronous views; it runs through "
"Django's :doc:`asynchronous request path </topics/async>`, which supports "
"both. Any view called through the ``AsyncClient`` will get an "
"``ASGIRequest`` object for its ``request`` rather than the ``WSGIRequest`` "
"that the normal client creates."
msgstr ""
"Le client asynchrone peut aussi appeler des vues synchrones ; il s'exécute "
"au travers du :doc:`chemin de requête asynchrone </topics/async>` de Django, "
"qui prend en charge les deux modes. Toute vue appelée par ``AsyncClient`` "
"reçoit un objet ``ASGIRequest`` dans son attribut ``request`` au lieu de "
"l'objet ``WSGIRequest`` créé par le client normal."

msgid ""
"If you are using test decorators, they must be async-compatible to ensure "
"they work correctly. Django's built-in decorators will behave correctly, but "
"third-party ones may appear to not execute (they will \"wrap\" the wrong "
"part of the execution flow and not your test)."
msgstr ""
"Si vous utilisez des décorateurs de tests, ils doivent être compatibles avec "
"l'asynchrone pour fonctionner correctement. Les décorateurs intégrés de "
"Django se comporteront correctement, mais ceux de tierces parties peuvent "
"sembler ne pas s'exécuter (ils « enveloppent » la mauvaise partie du flux "
"d'exécution au lieu de votre test)."

msgid ""
"If you need to use these decorators, then you should decorate your test "
"methods with :func:`~asgiref.sync.async_to_sync` *inside* of them instead::"
msgstr ""
"Si vous avez besoin d'utiliser ces décorateurs, vous devez alors plutôt "
"décorer vos méthodes de test avec :func:`~asgiref.sync.async_to_sync` *à "
"l'intérieur* de celles-ci :"

msgid "Email services"
msgstr "Services de messagerie"

msgid ""
"If any of your Django views send email using :doc:`Django's email "
"functionality </topics/email>`, you probably don't want to send email each "
"time you run a test using that view. For this reason, Django's test runner "
"automatically redirects all Django-sent email to a dummy outbox. This lets "
"you test every aspect of sending email -- from the number of messages sent "
"to the contents of each message -- without actually sending the messages."
msgstr ""
"Si l'une de vos vues Django envoie des courriels via la :doc:`fonctionnalité "
"d'envoi de courriels de Django </topics/email>`, vous ne souhaiterez "
"probablement pas réellement envoyer un courriel lors de chaque test de cette "
"vue. C'est pour cette raison que le lanceur de tests de Django redirige "
"automatiquement tous les courriels qu'il envoie dans une boîte artificielle. "
"Cela vous permet aussi de tester chaque aspect de l'envoi de courriels, du "
"nombre de messages envoyés jusqu'au contenu de chaque message, sans jamais "
"envoyer réellement les messages."

msgid ""
"The test runner accomplishes this by transparently replacing the normal "
"email backend with a testing backend. (Don't worry -- this has no effect on "
"any other email senders outside of Django, such as your machine's mail "
"server, if you're running one.)"
msgstr ""
"Le lanceur de tests fait cela en remplaçant de manière transparente le "
"moteur de messagerie normal par un moteur de test (n'ayez crainte, cela n'a "
"aucun effet sur l'expédition de courriels en dehors de Django, comme un "
"éventuel serveur de messagerie tournant sur votre machine)."

msgid ""
"During test running, each outgoing email is saved in ``django.core.mail."
"outbox``. This is a list of all :class:`~django.core.mail.EmailMessage` "
"instances that have been sent.  The ``outbox`` attribute is a special "
"attribute that is created *only* when the ``locmem`` email backend is used. "
"It doesn't normally exist as part of the :mod:`django.core.mail` module and "
"you can't import it directly. The code below shows how to access this "
"attribute correctly."
msgstr ""
"Durant le fonctionnement des tests, chaque courriel sortant est enregistré "
"dans ``django.core.mail.outbox``. Il s'agit d'une liste de toutes les "
"instances de :class:`~django.core.mail.EmailMessage` qui ont été envoyées. "
"L'attribut ``outbox`` est un attribut spécial qui est *uniquement* créé "
"lorsque le moteur de messagerie ``locmem`` est actif. Il ne fait normalement "
"pas partie du module :mod:`django.core.mail` et il ne peut être importé "
"directement. Le code ci-dessous montre comment accéder correctement à cet "
"attribut."

msgid ""
"Here's an example test that examines ``django.core.mail.outbox`` for length "
"and contents::"
msgstr ""
"Voici un exemple de test qui examine la longueur et le contenu de ``django."
"core.mail.outbox``::"

msgid ""
"As noted :ref:`previously <emptying-test-outbox>`, the test outbox is "
"emptied at the start of every test in a Django ``*TestCase``. To empty the "
"outbox manually, assign the empty list to ``mail.outbox``::"
msgstr ""
"Comme noté :ref:`précédemment <emptying-test-outbox>`, la boîte de "
"messagerie de test est vidée au début de chaque test des classes Django "
"``*TestCase``. Pour vider la boîte manuellement, attribuez une liste vide à "
"``mail.outbox``::"

msgid "Management Commands"
msgstr "Commandes d'administration"

msgid ""
"Management commands can be tested with the :func:`~django.core.management."
"call_command` function. The output can be redirected into a ``StringIO`` "
"instance::"
msgstr ""
"Les commandes d'administration peuvent être testées avec la fonction :func:"
"`~django.core.management.call_command`. La sortie peut être redirigée vers "
"une instance de ``StringIO``::"

msgid "Skipping tests"
msgstr "Exclusion de tests"

msgid ""
"The unittest library provides the :func:`@skipIf <unittest.skipIf>` and :"
"func:`@skipUnless <unittest.skipUnless>` decorators to allow you to skip "
"tests if you know ahead of time that those tests are going to fail under "
"certain conditions."
msgstr ""
"La bibliothèque unittest fournit les décorateurs :func:`@skipIf <unittest."
"skipIf>` rz :func:`@skipUnless <unittest.skipUnless>` pour permettre "
"d'exclure des tests si vous savez à l'avance que ces tests vont échouer dans "
"certaines conditions."

msgid ""
"For example, if your test requires a particular optional library in order to "
"succeed, you could decorate the test case with :func:`@skipIf <unittest."
"skipIf>`. Then, the test runner will report that the test wasn't executed "
"and why, instead of failing the test or omitting the test altogether."
msgstr ""
"Par exemple, si la réussite d'un test exige la présence d'une certaine "
"bibliothèque, il est possible de décorer le cas de test avec  :func:`@skipIf "
"<unittest.skipIf>`. Puis, le lanceur de tests signalera que le test n'a pas "
"été exécuté ainsi que la raison, au lieu de laisser le test échouer ou "
"d'ignorer totalement le test."

msgid ""
"To supplement these test skipping behaviors, Django provides two additional "
"skip decorators. Instead of testing a generic boolean, these decorators "
"check the capabilities of the database, and skip the test if the database "
"doesn't support a specific named feature."
msgstr ""
"En plus de ces comportements d'exclusion de test, Django ajoute deux "
"décorateurs de test supplémentaires. Au lieu de se baser sur une valeur "
"booléenne générique, ces décorateurs contrôlent les capacités d'une base de "
"données et excluent le test concerné si la base de données ne gère pas la "
"capacité nommément indiquée."

msgid ""
"The decorators use a string identifier to describe database features. This "
"string corresponds to attributes of the database connection features class. "
"See :source:`django.db.backends.base.features.BaseDatabaseFeatures class "
"<django/db/backends/base/features.py>` for a full list of database features "
"that can be used as a basis for skipping tests."
msgstr ""
"Ces décorateurs utilisent un identifiant textuel pour désigner les capacités "
"de base de données. Cet identifiant correspond à un attribut de la classe "
"des capacités de connexion de base de données. Voir :source:`la classe "
"django.db.backends.base.features.BaseDatabaseFeatures <django/db/backends/"
"base/features.py>` pour obtenir une liste complète des capacités de base de "
"données pouvant être utilisées comme critères d'exclusion de tests."

msgid ""
"Skip the decorated test or ``TestCase`` if all of the named database "
"features are supported."
msgstr ""
"Exclut le test ou la classe ``TestCase`` décorés si toutes les capacités de "
"base de données indiquées sont prises en charge."

msgid ""
"For example, the following test will not be executed if the database "
"supports transactions (e.g., it would *not* run under PostgreSQL, but it "
"would under MySQL with MyISAM tables)::"
msgstr ""
"Par exemple, le test suivant ne sera pas exécuté si la base de données gère "
"les transactions (par ex. il ne serait *pas* exécuté avec PostgreSQL, mais "
"il le serait avec MySQL utilisant des tables MyISAM) ::"

msgid ""
"Skip the decorated test or ``TestCase`` if any of the named database "
"features are *not* supported."
msgstr ""
"Exclut le test ou la classe ``TestCase`` décorés si au moins une des "
"capacités de base de données indiquées *n'est pas* prise en charge."

msgid ""
"For example, the following test will only be executed if the database "
"supports transactions (e.g., it would run under PostgreSQL, but *not* under "
"MySQL with MyISAM tables)::"
msgstr ""
"Par exemple, le test suivant ne sera exécuté que si la base de données gère "
"les transactions (par ex. il serait exécuté avec PostgreSQL, mais il ne le "
"serait *pas* avec MySQL utilisant des tables MyISAM) ::"
