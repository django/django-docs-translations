# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# Alexandre Proença <alexandre.proenca@hotmail.com.br>, 2017-2018
# amcorreia <mutley.sandro@gmail.com>, 2016
# amcorreia <mutley.sandro@gmail.com>, 2016-2017
# andrewsmedina <andrewsmedina@gmail.com>, 2016-2017
# Arthur Silva <arxdsilva@gmail.com>, 2016
# Augusto Rocha Nascimento <augusto@khoder.com.br>, 2016
# Bruce de Sá <contato@publidex.com.br>, 2019
# Carlos C. Leite <caduado@gmail.com>, 2016
# Carlos C. Leite <caduado@gmail.com>, 2014,2016,2019
# Carlos Schneider <carlosaschjr@gmail.com>, 2016
# Carlton Gibson <carlton.gibson@gmail.com>, 2018
# Filipe Cifali <cifali.filipe@gmail.com>, 2016
# Claude Paroz <claude@2xlibre.net>, 2020
# hoisel <danielhoisel@gmail.com>, 2014
# Eduardo Henrique da S. Freitas <eduardohitek@gmail.com>, 2015
# Evandro da Costa <evandrodacosta@gmail.com>, 2023
# Felipe Araújo Nunes de Lima <filipizaum@gmail.com>, 2019
# Fernandes Macedo <masedos@gmail.com>, 2016
# Filipe Cifali <cifali.filipe@gmail.com>, 2019
# Gilson Filho <me@gilsondev.in>, 2016
# Guilherme Ferreira <guilherme@uft.edu.br>, 2014
# Gustavo de Carvalho Sales <gt.salles@gmail.com>, 2019
# Gustavo Efeiche <gustavo.efeiche@gmail.com>, 2018
# Gutierri Barboza <github+me@gutierri.me>, 2018
# Hugo Cosme <hugutux@gmail.com>, 2015
# Igor Cavalcante <igorcavlim@gmail.com>, 2017
# Jessica Temporal, 2016-2017
# João Paulo Andrade <joaopaulo.a.p@gmail.com>, 2018-2019
# Jonas Rodrigues, 2023
# Kaio Cesar <tecnico.kaio@gmail.com>, 2015
# Leandro de Souza, 2022
# Leonam Silva <leohenryster@gmail.com>, 2016
# Lucas Machado <lfg.machado@hotmail.com>, 2019
# Marcelo Moro Brondani <mbrondani@inf.ufsm.br>, 2016
# Marco Rougeth <marco@rougeth.com>, 2016
# Otávio Reis <otaviocha@gmail.com>, 2017
# Patrick Mazulo de Brito <pmazulo@gmail.com>, 2016-2017
# Raysa Dutra, 2016
# Samuel Nogueira Bacelar <samuelnbacelar@hotmail.com>, 2020
# Sergio Garcia <sergio@ginx.com.br>, 2015
# Sergio Oliveira <seocam@seocam.com>, 2014
# Tarsis Azevedo <tarsis.azevedo@gmail.com>, 2016
# Udson Silva <udson2112@gmail.com>, 2016
# Victor Magno <me@victormagno.com>, 2016
# wcreis <wesley.c.reis@gmail.com>, 2016,2019
# Willian Morais <williandmorais@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-21 13:42-0500\n"
"PO-Revision-Date: 2013-04-02 19:58+0000\n"
"Last-Translator: Evandro da Costa <evandrodacosta@gmail.com>, 2023\n"
"Language-Team: Portuguese (Brazil) (http://app.transifex.com/django/django-"
"docs/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

msgid "How to authenticate using ``REMOTE_USER``"
msgstr "Como autenticar usando ``REMOTE_USER``"

msgid ""
"This document describes how to make use of external authentication sources "
"(where the web server sets the ``REMOTE_USER`` environment variable) in your "
"Django applications.  This type of authentication solution is typically seen "
"on intranet sites, with single sign-on solutions such as IIS and Integrated "
"Windows Authentication or Apache and `mod_authnz_ldap`_, `CAS`_, `Cosign`_, "
"`WebAuth`_, `mod_auth_sspi`_, etc."
msgstr ""
"Esse documento descreve como utilizar métodos de autenticação externos (onde "
"o servidor define a variável de ambiente ``REMOTE_USER``) nas suas "
"aplicações Django. Essa solução de autenticação geralmente é utilizada em "
"sites intranet, com soluções de login único como IIS e a Autenticação "
"Integrada do Windows ou Apache e `mod_authnz_ldap`_, `CAS`_, `Cosign`_, "
"`WebAuth`_, `mod_auth_sspi`_, etc."

msgid ""
"When the web server takes care of authentication it typically sets the "
"``REMOTE_USER`` environment variable for use in the underlying application.  "
"In Django, ``REMOTE_USER`` is made available in the :attr:`request.META "
"<django.http.HttpRequest.META>` attribute.  Django can be configured to make "
"use of the ``REMOTE_USER`` value using the ``RemoteUserMiddleware`` or "
"``PersistentRemoteUserMiddleware``, and :class:`~django.contrib.auth."
"backends.RemoteUserBackend` classes found in :mod:`django.contrib.auth`."
msgstr ""
"Quando o servidor Web se encarrega da autenticação ele normalmente define a "
"variável de ambiente ``REMOTE_USER`` para uso na aplicação que está sendo "
"executada. No Django, ``REMOTE_USER`` é disponibilizado no atributo :attr:"
"`request.META <django.http.HttpRequest.META>`. O Django pode ser configurado "
"para fazer uso do ``REMOTE_USER`` usando as classes :class:`django.contrib."
"auth.middleware.RemoteUserMiddleware` e :class:`~django.contrib.auth."
"backends.RemoteUserBackend` encontrados em:mod:`django.contrib.auth`."

msgid "Configuration"
msgstr "Configuração"

msgid ""
"First, you must add the :class:`django.contrib.auth.middleware."
"RemoteUserMiddleware` to the :setting:`MIDDLEWARE` setting **after** the :"
"class:`django.contrib.auth.middleware.AuthenticationMiddleware`::"
msgstr ""
"Primeiro você deve adicionar  :class:`django.contrib.auth.middleware."
"RemoteUserMiddleware` no :setting:`MIDDLEWARE` definindo **depois** do :"
"class:`django.contrib.auth.middleware.AuthenticationMiddleware`::"

msgid ""
"Next, you must replace the :class:`~django.contrib.auth.backends."
"ModelBackend` with :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"in the :setting:`AUTHENTICATION_BACKENDS` setting::"
msgstr ""
"Depois você deve substituir a :class:`~django.contrib.auth.backends."
"ModelBackend` por :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"na configuração :setting:`AUTHENTICATION_BACKENDS`::"

msgid ""
"With this setup, ``RemoteUserMiddleware`` will detect the username in "
"``request.META['REMOTE_USER']`` and will authenticate and auto-login that "
"user using the :class:`~django.contrib.auth.backends.RemoteUserBackend`."
msgstr ""
"Com esta configuração, o `:class:`~django.contrib.auth.middleware."
"RemoteUserMiddleware` irá detectar o __username__  em ``request."
"META['REMOTE_USER']`` e irá autenticar e automaticamente logar aquele "
"usuário usando o :class:`~django.contrib.auth.backends.RemoteUserBackend`."

msgid ""
"Be aware that this particular setup disables authentication with the default "
"``ModelBackend``. This means that if the ``REMOTE_USER`` value is not set "
"then the user is unable to log in, even using Django's admin interface. "
"Adding ``'django.contrib.auth.backends.ModelBackend'`` to the "
"``AUTHENTICATION_BACKENDS`` list will use ``ModelBackend`` as a fallback if "
"``REMOTE_USER`` is absent, which will solve these issues."
msgstr ""
"Esteja ciente de que essa definição em particular desabilita a autenticação "
"com o padrão ``ModelBackend``. Isso significa que se o valor de "
"``REMOTE_USER`` não estiver definido o usuário não conseguirá logar-se, "
"mesmo utilizando a inteface do Django admin. Adicionando ``django.contrib."
"auth.backends.ModelBackend`` à lista ``AUTHENTICATION_BACKENDS`` ele será "
"utilizado como um substituto se \"REMOTE_USER\" estiver ausente, e esse "
"problema não acontecerá."

msgid ""
"Django's user management, such as the views in ``contrib.admin`` and the :"
"djadmin:`createsuperuser` management command, doesn't integrate with remote "
"users. These interfaces work with users stored in the database regardless of "
"``AUTHENTICATION_BACKENDS``."
msgstr ""
"O gerenciamento de usuários do Django, bem como as views em ``contrib."
"admin``, e o comando de gerenciamento :djadmin:`createsuperuser`, não fazem "
"integração com usuários remotos. Esta interface trabalha com usuários "
"armazenados no banco de dados independente do ``AUTHENTICATION_BACKENDS``."

msgid ""
"Since the ``RemoteUserBackend`` inherits from ``ModelBackend``, you will "
"still have all of the same permissions checking that is implemented in "
"``ModelBackend``."
msgstr ""
"Um vez que ``RemoteUserBackend`` herda de ``ModelBackend``, você ainda terá "
"todos as mesmas permissões de verificação que estão implementadas em "
"``ModelBackend``."

msgid ""
"Users with :attr:`is_active=False <django.contrib.auth.models.User."
"is_active>` won't be allowed to authenticate. Use :class:`~django.contrib."
"auth.backends.AllowAllUsersRemoteUserBackend` if you want to allow them to."
msgstr ""
"Usuários com :attr:`is_active=False <django.contrib.auth.models.User."
"is_active>` não serão permitidos a fazer a autenticação. Use :class:`~django."
"contrib.auth.backends.AllowAllUsersRemoteUserBackend` se você quiser permití-"
"los."

msgid ""
"If your authentication mechanism uses a custom HTTP header and not "
"``REMOTE_USER``, you can subclass ``RemoteUserMiddleware`` and set the "
"``header`` attribute to the desired ``request.META`` key.  For example::"
msgstr ""
"Se o seu mecanismo de autenticação utilizar um cabeçalho HTTP costumizado e "
"não o ``REMOTE_USER`, você pode utilizar a subclass ``RemoteUserMiddleware`` "
"e definir o atributo ``header`` para atribuir a chave ``request.META``. Por "
"exemplo::"

msgid ""
"Be very careful if using a ``RemoteUserMiddleware`` subclass with a custom "
"HTTP header. You must be sure that your front-end web server always sets or "
"strips that header based on the appropriate authentication checks, never "
"permitting an end-user to submit a fake (or \"spoofed\") header value. Since "
"the HTTP headers ``X-Auth-User`` and ``X-Auth_User`` (for example) both "
"normalize to the ``HTTP_X_AUTH_USER`` key in ``request.META``, you must also "
"check that your web server doesn't allow a spoofed header using underscores "
"in place of dashes."
msgstr ""
"Tenha muito cuidado se usar a subclasse ``RemoteUserMiddleware`` com um "
"cabeçalho HTTP customizado. Tenha certeza que o servidor de front-end sempre "
"defina ou retire  o cabeçalho baseado nos checks de autenticação "
"apropriados, nunca permitindo que um usuário submeta um falso (ou "
"falsificado) valor no cabeçalho. Já que os cabeçalhos HTTP ``X-Auth-User`` e "
"o ``X-Auth_User`` (por exemplo) são ambos normalizados para a chave "
"``HTTP_X_AUTH_USER`` no ``request.META``, tem que ser verificado que o seu "
"servidor web não aceita um cabeçalho falsificado usando \"underscores\" no "
"lugar de traços."

msgid ""
"This warning doesn't apply to ``RemoteUserMiddleware`` in its default "
"configuration with ``header = 'REMOTE_USER'``, since a key that doesn't "
"start with ``HTTP_`` in ``request.META`` can only be set by your WSGI "
"server, not directly from an HTTP request header."
msgstr ""
"Este alerta não se aplica ao ``RemoteUserMiddleware`` na sua configuração "
"default ``header = 'REMOTE_USER'``, já que uma chave que não inicie com "
"``HTTP_`` em ``request.META``  só pode ser setada pelo servidor WSGI, e não "
"diretamente do cabeçalho da requisição HTTP"

msgid ""
"If you need more control, you can create your own authentication backend "
"that inherits from :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"and override one or more of its attributes and methods."
msgstr ""
"Se você precisa de mais controle, é possível criar seu próprio \"backend\" "
"de autenticação que herda de :class:`~django.contrib.auth.backends."
"RemoteUserBackend` e sobrescreve um ou mais de seus  atributos e métodos."

msgid "Using ``REMOTE_USER`` on login pages only"
msgstr "Usando ``REMOTE_USER`` apenas nas páginas de login."

msgid ""
"The ``RemoteUserMiddleware`` authentication middleware assumes that the HTTP "
"request header ``REMOTE_USER`` is present with all authenticated requests. "
"That might be expected and practical when Basic HTTP Auth with ``htpasswd`` "
"or similar mechanisms are used, but with Negotiate (GSSAPI/Kerberos) or "
"other resource intensive authentication methods, the authentication in the "
"front-end HTTP server is usually only set up for one or a few login URLs, "
"and after successful authentication, the application is supposed to maintain "
"the authenticated session itself."
msgstr ""
"O middleware de autenticação ``RemoteUserMiddleware`` assume que o cabeçalho "
"``REMOTE_USER`` da requisição HTTP está presente em todas as requisições "
"autenticadas. Isso é esperado e até prático quando usado em uma autenticação "
"HTTP básica com ``htpasswd`` ou um outro mecanismo simples, mas com uma "
"requisição Negotiate (GSSAPI/Kerberos) ou outro método de autenticação de "
"fontes intensivas, a autenticação no servidor HTTP de front-end é comumente "
"configurada para uma ou algumas poucas URLS de login, e depois de uma "
"autenticação bem sucedida, é esperado que a aplicação mantenha a sessão de "
"autenticação por conta própria."

msgid ""
":class:`~django.contrib.auth.middleware.PersistentRemoteUserMiddleware` "
"provides support for this use case. It will maintain the authenticated "
"session until explicit logout by the user. The class can be used as a drop-"
"in replacement of :class:`~django.contrib.auth.middleware."
"RemoteUserMiddleware` in the documentation above."
msgstr ""
"A classe :class:`~django.contrib.auth.middleware."
"PersistentRemoteUserMiddleware` provê suporte para este caso de uso. Ele "
"manterá a sessão de autenticação até o logout explícito do usuário. A classe "
"pode ser usada como um substituto constante para :class:`~django.contrib."
"auth.middleware.RemoteUserMiddleware` na documentação acima."

msgid "How to use Django's CSRF protection"
msgstr "Como usar a proteção CSRF do Django"

msgid "To take advantage of CSRF protection in your views, follow these steps:"
msgstr ""
"Para aproveitar das vantagens da proteção CSRF nas suas views, siga estes "
"passos:"

msgid ""
"The CSRF middleware is activated by default in the :setting:`MIDDLEWARE` "
"setting. If you override that setting, remember that ``'django.middleware."
"csrf.CsrfViewMiddleware'`` should come before any view middleware that "
"assume that CSRF attacks have been dealt with."
msgstr ""
"O middleware CSRF está ativado por padrão na configuração :setting:"
"`MIDDLEWARE`. Se você sobrescrever esta configuração, lembre-se que "
"``'django.middleware.csrf.CsrfViewMiddleware'`` deve vir antes do que "
"qualquer middleware de view que assuma que ataques CSRF já tenham sido "
"resolvidos."

msgid ""
"If you disabled it, which is not recommended, you can use :func:`~django."
"views.decorators.csrf.csrf_protect` on particular views you want to protect "
"(see below)."
msgstr ""
"Se você o desabilitou, o que não é recomendado, você pode usar :func:"
"`~django.views.decorators.csrf.csrf_protect` em views especifícas que você "
"deseja proteger (veja abaixo)."

msgid ""
"In any template that uses a POST form, use the :ttag:`csrf_token` tag inside "
"the ``<form>`` element if the form is for an internal URL, e.g.:"
msgstr ""
"Em qualquer template que usa um formulário POST, use a tag :ttag:"
"`csrf_token` dentro do ``1`` elemento se o formulário é para uma URL "
"interna, por exemplo:"

msgid ""
"This should not be done for POST forms that target external URLs, since that "
"would cause the CSRF token to be leaked, leading to a vulnerability."
msgstr ""
"Isso não deve feito para formulários POST para URLs externas, já que isso "
"causaria o vazamento do token CSRF, levando a uma vulnerabilidade."

msgid ""
"In the corresponding view functions, ensure that :class:`~django.template."
"RequestContext` is used to render the response so that ``{% csrf_token %}`` "
"will work properly. If you're using the :func:`~django.shortcuts.render` "
"function, generic views, or contrib apps, you are covered already since "
"these all use ``RequestContext``."
msgstr ""
"Nas devidas funções de view, garanta que :class:`~django.template."
"RequestContext` é utilizado para renderizar a resposta, assim ``{% "
"csrf_token %}`` irá funcionar como o esperado. Se você está usando a função :"
"func:`~django.shortcuts.render`, views genéricas, ou apps contrib, você não "
"precisa fazer isso, já que todas essas já fazem uso do ``RequestContext``."

msgid "Using CSRF protection with AJAX"
msgstr "Usando a proteção CSRF com AJAX"

msgid ""
"While the above method can be used for AJAX POST requests, it has some "
"inconveniences: you have to remember to pass the CSRF token in as POST data "
"with every POST request. For this reason, there is an alternative method: on "
"each XMLHttpRequest, set a custom ``X-CSRFToken`` header (as specified by "
"the :setting:`CSRF_HEADER_NAME` setting) to the value of the CSRF token. "
"This is often easier because many JavaScript frameworks provide hooks that "
"allow headers to be set on every request."
msgstr ""
"Mesmo que o método acima possa ser utilizado para requisições POST AJAX, "
"existem algumas incoveniências: você precisa se lembrar de passar o token "
"CSRF nos dados de POST em todas as requisições POST. Por esse motivo existe "
"um método alternativo: Em cada XMLHttpRequest, defina um cabeçalho "
"customizado ``X-CSRFToken`` (como especificado pela configuração :setting:"
"`CSRF_HEADER_NAME`) com o valor do token CSRF. Isso geralmente é mais fácil "
"por que muitos frameworks Javascript dão hooks que permitem que cabeçalhos "
"sejam definidos em toda requisição."

msgid ""
"First, you must get the CSRF token. How to do that depends on whether or not "
"the :setting:`CSRF_USE_SESSIONS` and :setting:`CSRF_COOKIE_HTTPONLY` "
"settings are enabled."
msgstr ""
"Primeiro, você precisa pegar o token CSRF. Como fazer isso depende das "
"configurações :setting:`CSRF_USE_SESSIONS` e :setting:`CSRF_COOKIE_HTTPONLY` "
"estarem habilitadas."

msgid ""
"Acquiring the token if :setting:`CSRF_USE_SESSIONS` and :setting:"
"`CSRF_COOKIE_HTTPONLY` are ``False``"
msgstr ""
"Pegando o token caso :setting:`CSRF_USE_SESSIONS` e :setting:"
"`CSRF_COOKIE_HTTPONLY` sejam ``False``"

msgid ""
"The recommended source for the token is the ``csrftoken`` cookie, which will "
"be set if you've enabled CSRF protection for your views as outlined above."
msgstr ""
"A fonte recomendada to token é o cookie ``csrftoken``, que estará definido "
"caso você tenha habilitado a proteção CSRF nas suas views como mencionado "
"acima."

msgid ""
"The CSRF token cookie is named ``csrftoken`` by default, but you can control "
"the cookie name via the :setting:`CSRF_COOKIE_NAME` setting."
msgstr ""
"O nome do cookie de token CSRF é nomeado ``csrftoken`` por padrão, mas você "
"pode alterar o nome do cookie na configuração :setting:`CSRF_COOKIE_NAME`."

msgid "You can acquire the token like this:"
msgstr "Você pode pegar o token desta maneira:"

msgid ""
"The above code could be simplified by using the `JavaScript Cookie library "
"<https://github.com/js-cookie/js-cookie/>`_ to replace ``getCookie``:"
msgstr ""
"O código acima pode ser simplificado usando a biblioteca `JavaScript Cookie "
"<https://github.com/js-cookie/js-cookie/>`_ que subsitutui ``getCookie``:"

msgid ""
"The CSRF token is also present in the DOM in a masked form, but only if "
"explicitly included using :ttag:`csrf_token` in a template. The cookie "
"contains the canonical, unmasked token. The :class:`~django.middleware.csrf."
"CsrfViewMiddleware` will accept either. However, in order to protect against "
"`BREACH`_ attacks, it's recommended to use a masked token."
msgstr ""
"O token CSRF também está presente na DOM de maneira mascarada, mas apenas se "
"incluso explicitamente utilizando :ttag:`csrf_token` em um template. O "
"cookie contém o token canónico, não mascarado. O :class:~django.middleware."
"csrf.CsrfViewMiddleware` irá aceitar ambos. Porém, para evitar ataques "
"`BREACH`_, é recomendado utilizar o token mascarado."

msgid ""
"If your view is not rendering a template containing the :ttag:`csrf_token` "
"template tag, Django might not set the CSRF token cookie. This is common in "
"cases where forms are dynamically added to the page. To address this case, "
"Django provides a view decorator which forces setting of the cookie: :func:"
"`~django.views.decorators.csrf.ensure_csrf_cookie`."
msgstr ""
"Caso sua view não esteja renderizando um template contendo a tag de "
"template :ttag:`csrf_token`, o Django pode não definir o cookie do token "
"CSRF. Isso é comum em casos onde formulários são adicionados dinamicamente à "
"página. Para resolver esse caso, o Django dá um decorator de view que força "
"a definição deste cookie: :func:`~django.views.decorators.csrf."
"ensure_csrf_cookie`."

msgid ""
"Acquiring the token if :setting:`CSRF_USE_SESSIONS` or :setting:"
"`CSRF_COOKIE_HTTPONLY` is ``True``"
msgstr ""
"Pegando o token caso: :setting:`CSRF_USE_SESSIONS` ou :setting:"
"`CSRF_COOKIE_HTTPONLY` sejam ``True``"

msgid ""
"If you activate :setting:`CSRF_USE_SESSIONS` or :setting:"
"`CSRF_COOKIE_HTTPONLY`, you must include the CSRF token in your HTML and "
"read the token from the DOM with JavaScript:"
msgstr ""
"Se você ativar :setting:`CSRF_USE_SESSIONS` ou :setting:"
"`CSRF_COOKIE_HTTPONLY` você precisa incluir o token CSRF no seu HTML e ler o "
"token do DOM com JavaScript:"

msgid "Setting the token on the AJAX request"
msgstr "Definindo o token em uma requisição AJAX"

msgid ""
"Finally, you'll need to set the header on your AJAX request. Using the "
"`fetch()`_ API:"
msgstr ""
"Finalmente, você precisará definir o cabeçalho na sua requisição AJAX. Using "
"a API `fetch()`_:"

msgid "Using CSRF protection in Jinja2 templates"
msgstr "Usando a proteção CSRF em templates Jinja2"

msgid ""
"Django's :class:`~django.template.backends.jinja2.Jinja2` template backend "
"adds ``{{ csrf_input }}`` to the context of all templates which is "
"equivalent to ``{% csrf_token %}`` in the Django template language. For "
"example:"
msgstr ""
"O backend de template :class:`~django.template.backends.jinja2.Jinja2` do "
"Django adiciona ``{{ csrf_input }}`` para o contexto de todos os templates "
"que é equivalente ao ``{% csrf_token %}`` na linguagem de template do "
"Django. Por exemplo:"

msgid "Using the decorator method"
msgstr "Usando o decorador de método"

msgid ""
"Rather than adding ``CsrfViewMiddleware`` as a blanket protection, you can "
"use the :func:`~django.views.decorators.csrf.csrf_protect` decorator, which "
"has exactly the same functionality, on particular views that need the "
"protection. It must be used **both** on views that insert the CSRF token in "
"the output, and on those that accept the POST form data. (These are often "
"the same view function, but not always)."
msgstr ""
"Em vez de adicionar ``CsrfViewMiddleware`` como uma proteção geral, você "
"pode usar o decorador :func:`~django.views.decorators.csrf.csrf_protect`, "
"que tem exatamente a mesma funcionalidade, em views específicas que precisem "
"de proteção. É necessário usá-lo **tanto** nas views que inserem o token "
"CSRF na sua saída, **quanto** aquelas que aceitem dados de um formulário "
"POST. (Geralmente essas duas estão na mesma função de view, mas não "
"necessariamente)."

msgid ""
"Use of the decorator by itself is **not recommended**, since if you forget "
"to use it, you will have a security hole. The 'belt and braces' strategy of "
"using both is fine, and will incur minimal overhead."
msgstr ""
"O uso apenas do decorador **não é recomendado**, já que se você se esquecer "
"de usá-lo, você pode ter uma brecha de segurança. A estratégia de usar "
"'Cinto e suspensório' é aceitável, e traz consequências mínimas."

msgid "Handling rejected requests"
msgstr "Lidando com requisições rejeitadas"

msgid ""
"By default, a '403 Forbidden' response is sent to the user if an incoming "
"request fails the checks performed by ``CsrfViewMiddleware``. This should "
"usually only be seen when there is a genuine Cross Site Request Forgery, or "
"when, due to a programming error, the CSRF token has not been included with "
"a POST form."
msgstr ""
"Por padrão, uma resposta '403 Proibido' é enviada para o usuário caso a "
"requisição recebida falhe nas verificações feitas pelo "
"``CsrfViewMiddleware``. Geralmente isso é apenas visto quando realmente há "
"um Cross Site Request Forgery, ou quando devido um erro de programação, o "
"token CSRF não é incluído junto do formulário POST."

msgid ""
"The error page, however, is not very friendly, so you may want to provide "
"your own view for handling this condition. To do this, set the :setting:"
"`CSRF_FAILURE_VIEW` setting."
msgstr ""
"A página de erro, porém, não é muito amigável, então você pode definir sua "
"própria view para lidar com esta condição. Para fazer isso, defina a "
"configuração :setting:`CSRF_FAILURE_VIEW`."

msgid ""
"CSRF failures are logged as warnings to the :ref:`django.security.csrf "
"<django-security-logger>` logger."
msgstr ""
"Falhas CSRF são logadas como aviso pelo logger :ref:`django.security."
"csrf<django-security-logger>`."

msgid "Using CSRF protection with caching"
msgstr "Usando a proteção CSRF com cacheamento"

msgid ""
"If the :ttag:`csrf_token` template tag is used by a template (or the "
"``get_token`` function is called some other way), ``CsrfViewMiddleware`` "
"will add a cookie and a ``Vary: Cookie`` header to the response. This means "
"that the middleware will play well with the cache middleware if it is used "
"as instructed (``UpdateCacheMiddleware`` goes before all other middleware)."
msgstr ""
"Se a tag de template :ttag:`csrf_token` é usado por um template (ou a função "
"``get_token`` é chamada de um outro jeito), o ``CsrfViewMiddleware`` "
"adicionará o cookie e um  cabeçalho ``Vary: Cookie`` para a resposta. Isso "
"significa que o middleware irá funcionar com o middleware de cachê se usado "
"conforme instruído (``UpdateCacheMiddleware`` deve vir antes de qualquer "
"outro middleware)."

msgid ""
"However, if you use cache decorators on individual views, the CSRF "
"middleware will not yet have been able to set the Vary header or the CSRF "
"cookie, and the response will be cached without either one. In this case, on "
"any views that will require a CSRF token to be inserted you should use the :"
"func:`django.views.decorators.csrf.csrf_protect` decorator first::"
msgstr ""
"Porém, se você usar decoradores de cachê em views individuais, o middleware "
"de CSRF não será capaz de definir o cabeçalho Vary ou o cookie CSRF, e a "
"resposta será cacheada sem nenhum deles. Nesse caso, quaisquer views que "
"precisem que um token CSRF seja inserido você deve usar o decorador :func:"
"`django.views.decorators.csrf.csrf_protect` primeiro::"

msgid ""
"If you are using class-based views, you can refer to :ref:`Decorating class-"
"based views<decorating-class-based-views>`."
msgstr ""
"Se você está usando class-based views, você pode se referir à :ref:"
"`Decorating class-based views<decorating-class-based-views>`."

msgid "Testing and CSRF protection"
msgstr "Testes e a proteção CSRF"

msgid ""
"The ``CsrfViewMiddleware`` will usually be a big hindrance to testing view "
"functions, due to the need for the CSRF token which must be sent with every "
"POST request. For this reason, Django's HTTP client for tests has been "
"modified to set a flag on requests which relaxes the middleware and the "
"``csrf_protect`` decorator so that they no longer rejects requests. In every "
"other respect (e.g. sending cookies etc.), they behave the same."
msgstr ""
"O ``CsrfViewMiddleware`` normalmente será um grande obstáculo para testar as "
"funções view, devido a necessidade do token CSRF estar presente em toda "
"requisição POST. Por isso, o cliente HTTP de testes do Django foi modificado "
"para definir uma flag nas requisições que relaxam o middleware e o decorador "
"``csrf_protect`` para que eles não rejeitem as requisições. Em todos outros "
"casos (por exemplo enviando cookies etc.), eles se comportam da mesma "
"maneira."

msgid ""
"If, for some reason, you *want* the test client to perform CSRF checks, you "
"can create an instance of the test client that enforces CSRF checks:"
msgstr ""
"Se, por algum motivo, você *quer* que o cliente de teste realize as "
"verificações CSRF, você pode criar uma instância do cliente de teste que "
"força as verificações CSRF:"

msgid "Edge cases"
msgstr "Casos extremos"

msgid ""
"Certain views can have unusual requirements that mean they don't fit the "
"normal pattern envisaged here. A number of utilities can be useful in these "
"situations. The scenarios they might be needed in are described in the "
"following section."
msgstr ""
"Algumas views podem ter requisitos incomuns que não se encaixam nos padrões "
"demonstrados aqui. Algumas ferramentas podem ser úteis nessas situações. Os "
"cenários em que elas podem ser necessárias estão descritos nesta seção."

msgid "Disabling CSRF protection for just a few views"
msgstr "Desabilitando a proteção CSRF  para apenas algumas views"

msgid "Most views requires CSRF protection, but a few do not."
msgstr "A maioria das views precisam de proteção CSRF, mas algumas não."

msgid ""
"Solution: rather than disabling the middleware and applying ``csrf_protect`` "
"to all the views that need it, enable the middleware and use :func:`~django."
"views.decorators.csrf.csrf_exempt`."
msgstr ""
"Solução: Em vez de desabilitar o middleware e aplicar ``csrf_protect`` para "
"todas as views que precisam, habilite o middleware e use :func:`~django."
"views.decorators.csrf.csrf_exempt`."

msgid ""
"Setting the token when ``CsrfViewMiddleware.process_view()`` is not used"
msgstr ""
"Definindo o token quando ``CsrfViewMiddleware.process_view()`` não é "
"utilizado"

msgid ""
"There are cases when ``CsrfViewMiddleware.process_view`` may not have run "
"before your view is run - 404 and 500 handlers, for example - but you still "
"need the CSRF token in a form."
msgstr ""
"Existem casos onde ``CsrfViewMiddleware.process_view`` pode não ter sido "
"executado antes da sua view - os handlers 404 e 500, por exemplo - Mas você "
"ainda precisa de um token CSRF em um formulário."

msgid "Solution: use :func:`~django.views.decorators.csrf.requires_csrf_token`"
msgstr "Solução: use :func:`~django.views.decorators.csrf.requires_csrf_token`"

msgid "Including the CSRF token in an unprotected view"
msgstr "Incluindo o token CSRF em uma view desprotegida"

msgid ""
"There may be some views that are unprotected and have been exempted by "
"``csrf_exempt``, but still need to include the CSRF token."
msgstr ""
"Podem existir algumas views que são desprotegidas e foram exceções pelo "
"``csrf_exempt``, mas ainda precisam incluir um token CSRF."

msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` followed by :"
"func:`~django.views.decorators.csrf.requires_csrf_token`. (i.e. "
"``requires_csrf_token`` should be the innermost decorator)."
msgstr ""
"Solução: use :func:`~django.views.decorators.csrf.csrf_exempt` seguido do :"
"func:`~django.views.decorators.csrf.requires_csrf_token`. (ou seja "
"``requires_csrf_token`` precisa ser o decorador mais próximo da função)."

msgid "Protecting a view for only one path"
msgstr "Protegendo uma view para apenas um caminho"

msgid ""
"A view needs CSRF protection under one set of conditions only, and mustn't "
"have it for the rest of the time."
msgstr ""
"Uma view precisa da proteção CSRF apenas sob algumas condições, e pode não "
"precisar em outras."

msgid ""
"Solution: use :func:`~django.views.decorators.csrf.csrf_exempt` for the "
"whole view function, and :func:`~django.views.decorators.csrf.csrf_protect` "
"for the path within it that needs protection. Example::"
msgstr ""
"Solução: use :func:`~django.views.decorators.csrf.csrf_exempt` para toda a "
"função da view, e :func:`~django.views.decorators.csrf.csrf_protect` para o "
"caminho interno que precisa de proteção. Exemplo::"

msgid "Protecting a page that uses AJAX without an HTML form"
msgstr "Protegendo uma página que usa AJAX sem um formulário HTML"

msgid ""
"A page makes a POST request via AJAX, and the page does not have an HTML "
"form with a :ttag:`csrf_token` that would cause the required CSRF cookie to "
"be sent."
msgstr ""
"Uma página faz uma requisição POST por AJAX, e a página não contém um "
"formulário HTML com um :ttag:`csrf_token` que irá causar que o cookie de "
"CSRF obrigatório seja enviado."

msgid ""
"Solution: use :func:`~django.views.decorators.csrf.ensure_csrf_cookie` on "
"the view that sends the page."
msgstr ""
"Solução: use :func:`~django.views.decorators.csrf.ensure_csrf_cookie` não "
"view que envia a página."

msgid "CSRF protection in reusable applications"
msgstr "Proteção CSRF em aplicações reutilizáveis"

msgid ""
"Because it is possible for the developer to turn off the "
"``CsrfViewMiddleware``, all relevant views in contrib apps use the "
"``csrf_protect`` decorator to ensure the security of these applications "
"against CSRF. It is recommended that the developers of other reusable apps "
"that want the same guarantees also use the ``csrf_protect`` decorator on "
"their views."
msgstr ""
"Já que é possível para o desenvolvedor desligar o ``CsrfViewMiddleware``, "
"todas as views relevantes nos apps contrib usam o decorador ``csrf_protect`` "
"para garantir a segurançar destas aplicações contra CSRF. É recomendado que "
"os desenvolvedores de apps reutilizáveis que querem as mesmas garantias "
"também usem o decorador ``csrf_protect`` nas suas views."

msgid "How to write a custom storage class"
msgstr "Como escrever uma classe de armazenamento customizada"

msgid ""
"If you need to provide custom file storage -- a common example is storing "
"files on some remote system -- you can do so by defining a custom storage "
"class. You'll need to follow these steps:"
msgstr ""
"Se você precisa de um armazenador de arquivos customizados -- um exemplo "
"comum é armazenar arquivos em algum sistema remoto -- você pode faze-lo "
"definido uma classe de armazenamento customizada. Você precisará seguir "
"estes passos:"

msgid ""
"Your custom storage system must be a subclass of ``django.core.files.storage."
"Storage``::"
msgstr ""
"O seu Sistema de armazenamento customizado deve ser uma subclasse de "
"``django.core.files.storage.Storage``::"

msgid ""
"Django must be able to instantiate your storage system without any "
"arguments. This means that any settings should be taken from ``django.conf."
"settings``::"
msgstr ""
"Django deve ser capaz de instanciar o seu sistema de armazenamento sem "
"nenhum argumento. Isso significa que quaisquer definições devem ser tomada a "
"partir de ``django.conf.settings``::"

msgid ""
"Your storage class must implement the :meth:`_open()` and :meth:`_save()` "
"methods, along with any other methods appropriate to your storage class. See "
"below for more on these methods."
msgstr ""
"A classe de armazenamento deve implementar os métodos :meth:`_open()` e :"
"meth:`_save()`, além de qualquer outro método apropriado para a sua classe "
"de armazenamento. Veja abaixo mais sobre estes métodos."

msgid ""
"In addition, if your class provides local file storage, it must override the "
"``path()`` method."
msgstr ""
"Além disso, se sua classe permite armazenamento local de arquivo, deve-se "
"sobrescrever o método ``path()``."

msgid ""
"Your storage class must be :ref:`deconstructible <custom-deconstruct-"
"method>` so it can be serialized when it's used on a field in a migration. "
"As long as your field has arguments that are themselves :ref:`serializable "
"<migration-serializing>`, you can use the ``django.utils.deconstruct."
"deconstructible`` class decorator for this (that's what Django uses on "
"FileSystemStorage)."
msgstr ""
"Sua classe de armazenamento deve ser  :ref:`\"desconstruível\" <custom-"
"deconstruct-method>` para que possa ser \"serializado\" quando usado em um "
"campo na \"migration\". Uma vez que seus campos têm argumentos que são eles "
"mesmos :ref:`serializáveis <migration-serializing>`, é possível usar o "
"\"decorator\" de classe ``django.utils.deconstruct.deconstructible`` para "
"isso (que é usado pelo Django no FileSystemStorage)."

msgid ""
"By default, the following methods raise ``NotImplementedError`` and will "
"typically have to be overridden:"
msgstr ""
"Por padrão, os seguintes métodos levantam ``NotImplementedError`` e "
"normalmente terão de ser sobrescritas:"

msgid ":meth:`Storage.delete`"
msgstr ":meth:`Storage.delete`"

msgid ":meth:`Storage.exists`"
msgstr ":meth:`Storage.exists`"

msgid ":meth:`Storage.listdir`"
msgstr ":meth:`Storage.listdir`"

msgid ":meth:`Storage.size`"
msgstr ":meth:`Storage.size`"

msgid ":meth:`Storage.url`"
msgstr " :meth:`Storage.url` "

msgid ""
"Note however that not all these methods are required and may be deliberately "
"omitted. As it happens, it is possible to leave each method unimplemented "
"and still have a working Storage."
msgstr ""
"Note porém que nem todos estes métodos são requeridos e talvez "
"deliberadamente omitidos. Caso isso ocorra, é possível deixar cada método "
"não implementado e ainda ter um armazenamento que funcione."

msgid ""
"By way of example, if listing the contents of certain storage backends turns "
"out to be expensive, you might decide not to implement ``Storage.listdir()``."
msgstr ""
"A título de exemplo, listando o conteúdo de um certo armazenamento backend "
"acaba se tornando custoso, você pode decidir por não implementar ``Storage."
"listdir()``."

msgid ""
"Another example would be a backend that only handles writing to files. In "
"this case, you would not need to implement any of the above methods."
msgstr ""
"Outro exemplo seria um backend que só lida com a escrita de arquivos. Neste "
"caso, não seria necessário implementar qualquer um dos métodos acima."

msgid ""
"Ultimately, which of these methods are implemented is up to you. Leaving "
"some methods unimplemented will result in a partial (possibly broken) "
"interface."
msgstr ""
"Em última análise, quais destes métodos são implementados depende de você. "
"Deixando de implementar alguns métodos irá resultar em uma interface parcial "
"(possivelmente quebrada)."

msgid ""
"You'll also usually want to use hooks specifically designed for custom "
"storage objects. These are:"
msgstr ""
"Você também pode querer usar hooks feitos especificamente para objetos de "
"storage personalizados. Estes são os seguintes:"

msgid "**Required**."
msgstr "**Obrigatório**."

msgid ""
"Called by ``Storage.open()``, this is the actual mechanism the storage class "
"uses to open the file. This must return a ``File`` object, though in most "
"cases, you'll want to return some subclass here that implements logic "
"specific to the backend storage system."
msgstr ""
"Chamado por `` Storage.open () ``, este é o mecanismo real que a classe de "
"armazenamento utiliza para abrir o arquivo. Isso deve retornar um objeto `` "
"File``, embora na maioria dos casos, você vai querer retornar alguma "
"subclasse aqui que implementa uma lógica específica para o back-end do "
"sistema de armazenamento."

msgid ""
"Called by ``Storage.save()``. The ``name`` will already have gone through "
"``get_valid_name()`` and ``get_available_name()``, and the ``content`` will "
"be a ``File`` object itself."
msgstr ""
"Chamado por `` Storage.save () ``. O `` name`` já terá passado por `` "
"get_valid_name ()`` e ``get_available_name ()``, e o ``content`` será ele "
"mesmo um objeto ``File``."

msgid ""
"Should return the actual name of name of the file saved (usually the "
"``name`` passed in, but if the storage needs to change the file name return "
"the new name instead)."
msgstr ""
"Deve retornar o nome real do nome do arquivo salvo (geralmente o ``name`` "
"passado, mas se o armazenamento precisa mudar o nome do arquivo, retorna "
"então o novo nome)."

msgid ""
"Returns a filename suitable for use with the underlying storage system. The "
"``name`` argument passed to this method is either the original filename sent "
"to the server or, if ``upload_to`` is a callable, the filename returned by "
"that method after any path information is removed. Override this to "
"customize how non-standard characters are converted to safe filenames."
msgstr ""
"Retorna um nome de arquivo adequado para uso com o sistema de armazenamento "
"subjacente. O argumento ``name`` passado para esse método é o nome do "
"arquivo original enviado para o servidor ou, se `` upload_to`` é um "
"\"callable\" (método), o nome do arquivo retornado por esse método depois de "
"qualquer informação de caminho ser removido. Sobrescreva isso para "
"customizar como caracteres fora de padrão são convertidos para nomes de "
"arquivos seguros."

msgid ""
"The code provided on ``Storage`` retains only alpha-numeric characters, "
"periods and underscores from the original filename, removing everything else."
msgstr ""
"O código fornecido em ``Storage`` guarda apenas os caracteres alfanuméricos, "
"pontos e \"underscore\" do nome do arquivo original, removendo qualquer "
"outra cosa."

msgid ""
"Returns an alternative filename based on the ``file_root`` and ``file_ext`` "
"parameters. By default, an underscore plus a random 7 character alphanumeric "
"string is appended to the filename before the extension."
msgstr ""
"Retorna um nome de arquivo alternativo baseado nos parâmetros de "
"``file_root`` e ``file_ext``. Por padrão, um \"underscore\" e uma string de "
"7 caracteres alfanuméricos aleatórios são acrescentados antes da extensão."

msgid ""
"Returns a filename that is available in the storage mechanism, possibly "
"taking the provided filename into account. The ``name`` argument passed to "
"this method will have already cleaned to a filename valid for the storage "
"system, according to the ``get_valid_name()`` method described above."
msgstr ""
"Retorna um nome de arquivo que está disponível no mecanismo de "
"armazenamento, possivelmente levando em conta o nome do arquivo fornecido. O "
"argumento ``name`` passado para este método já terá sido limpo para um nome "
"de arquivo válido para o sistema de armazenamento, de acordo com o método "
"``get_valid_name()`` descrito acima."

msgid ""
"The length of the filename will not exceed ``max_length``, if provided. If a "
"free unique filename cannot be found, a :exc:`SuspiciousFileOperation "
"<django.core.exceptions.SuspiciousOperation>` exception is raised."
msgstr ""
"O comprimento do nome do arquivo não será superior a `` max_length``, se "
"informado. Se um nome de arquivo único não pode ser encontrado, a: exc: "
"`SuspiciousFileOperation <django.core.exceptions.SuspiciousOperation> "
"`Exceção é gerada."

msgid ""
"If a file with ``name`` already exists, ``get_alternative_name()`` is called "
"to obtain an alternative name."
msgstr ""
"Se um arquivo ``name`` já existe, ``get_alternative_name()`` é chamado para "
"obter um nome alternativo."

msgid "Use your custom storage engine"
msgstr "Use seu mecanismo de armazenamento personalizado"

msgid ""
"The first step to using your custom storage with Django is to tell Django "
"about the file storage backend you'll be using. This is done using the :"
"setting:`STORAGES` setting. This setting maps storage aliases, which are a "
"way to refer to a specific storage throughout Django, to a dictionary of "
"settings for that specific storage backend. The settings in the inner "
"dictionaries are described fully in the :setting:`STORAGES` documentation."
msgstr ""

msgid ""
"Storages are then accessed by alias from from the :data:`django.core.files."
"storage.storages` dictionary::"
msgstr ""

msgid "How to write custom lookups"
msgstr "Como escrever pesquisadores customizadas"

msgid ""
"Django offers a wide variety of :ref:`built-in lookups <field-lookups>` for "
"filtering (for example, ``exact`` and ``icontains``). This documentation "
"explains how to write custom lookups and how to alter the working of "
"existing lookups. For the API references of lookups, see the :doc:`/ref/"
"models/lookups`."
msgstr ""
"Django oferece uma grande variedade de: ref:`lookups embutidas <field-"
"lookups>` para filtragem (por exemplo, ``exact`` e ``icontains``). Esta "
"documentação explica como escrever lookups personalizadas e como alterar o "
"funcionamento de lookups existentes. Para as referências da API de lookups, "
"consulte o: doc: `/ref/models/lookups`."

msgid "A lookup example"
msgstr "Um exemplo de filtro"

msgid ""
"Let's start with a small custom lookup. We will write a custom lookup ``ne`` "
"which works opposite to ``exact``. ``Author.objects."
"filter(name__ne='Jack')`` will translate to the SQL:"
msgstr ""
"Vamos começar com um pequeno pesquisador customizado. Nós iremos escrever um "
"pesquisador customizado ``ne`` que irá funcionar de maneira contrária ao "
"``exact``. ``Author.objects.filter(name__ne='Jack')`` irá ser traduzido para "
"o SQL:"

msgid ""
"This SQL is backend independent, so we don't need to worry about different "
"databases."
msgstr ""
"Este SQL é independente, por isso, não precisa se preocupar com os bancos de "
"dados diferentes."

msgid ""
"There are two steps to making this work. Firstly we need to implement the "
"lookup, then we need to tell Django about it::"
msgstr ""
"Há dois passos para fazer isso funcionar. Primeiramente nós precisamos "
"implementar o filtro, então precisamos informar ao Django sobre isso::"

msgid ""
"To register the ``NotEqual`` lookup we will need to call ``register_lookup`` "
"on the field class we want the lookup to be available for. In this case, the "
"lookup makes sense on all ``Field`` subclasses, so we register it with "
"``Field`` directly::"
msgstr ""
"Para registrar o pesquisador ``NotEqual`` vamos precisar chamar "
"``register_lookup`` na classe de campo que queremos que o pesquisador esteja "
"disponível. Nesse caso, o pesquisador faz sentido para todas as subclasses "
"de ``Field``, então vamos registrá-lo diretamente com ``Field``::"

msgid "Lookup registration can also be done using a decorator pattern::"
msgstr ""
"O registro do filtro também pode ser feito usando um padrão de \"decorator"
"\"::"

msgid ""
"We can now use ``foo__ne`` for any field ``foo``. You will need to ensure "
"that this registration happens before you try to create any querysets using "
"it. You could place the implementation in a ``models.py`` file, or register "
"the lookup in the ``ready()`` method of an ``AppConfig``."
msgstr ""
"Agora podemos usar `` foo__ne`` para qualquer campo `` foo``. Tenha certeza "
"de registrar antes de tentar criar qualquer \"querysets\" que o use. É "
"possível colocar a implementação no `` models.py``, ou registar a lookup no "
"método ``ready()`` do `` AppConfig``."

msgid ""
"Taking a closer look at the implementation, the first required attribute is "
"``lookup_name``. This allows the ORM to understand how to interpret "
"``name__ne`` and use ``NotEqual`` to generate the SQL. By convention, these "
"names are always lowercase strings containing only letters, but the only "
"hard requirement is that it must not contain the string ``__``."
msgstr ""
"Olhando mais perto da implementação, o primeiro atributo obrigatório é `` "
"lookup_name``. Isso permite que o ORM entenda como interpretar `` name__ne`` "
"e use `` NotEqual`` para gerar o SQL. Por convenção, estes nomes são sempre "
"em strings caixa baixa contendo apenas letras, mas a única exigência é que "
"não contenha a string `` __``."

msgid ""
"We then need to define the ``as_sql`` method. This takes a ``SQLCompiler`` "
"object, called ``compiler``,  and the active database connection. "
"``SQLCompiler`` objects are not documented, but the only thing we need to "
"know about them is that they have a ``compile()`` method which returns a "
"tuple containing an SQL string, and the parameters to be interpolated into "
"that string. In most cases, you don't need to use it directly and can pass "
"it on to ``process_lhs()`` and ``process_rhs()``."
msgstr ""
"Quando então é necessário definir o método ``as_sql``. Este recebe um objeto "
"``SQL Compiler``, chamado ``compiler``, e a conexão de banco de dados ativa. "
"Os objetos ``SQLCompiler`` não são documentados, mas a única coisa que "
"precisamos saber sobre eles é que eles tem um método ``compile()`` o qual "
"retorna uma tupla contendo uma string SQL, e os parâmetros a serem "
"interpolados naquela string. Na maioria dos casos você não precisa usá-lo "
"diretamente e pode ser passá-lo para o ``process_lhs()`` e ``process_rhs()``."

msgid ""
"A ``Lookup`` works against two values, ``lhs`` and ``rhs``, standing for "
"left-hand side and right-hand side. The left-hand side is usually a field "
"reference, but it can be anything implementing the :ref:`query expression "
"API <query-expression>`. The right-hand is the value given by the user. In "
"the example ``Author.objects.filter(name__ne='Jack')``, the left-hand side "
"is a reference to the ``name`` field of the ``Author`` model, and ``'Jack'`` "
"is the right-hand side."
msgstr ""
"A ``Lookup`` trabalha em dois valores, e ``lhs`` e ``rhs``, entendendo como "
"left-hand side e right-hand side. O lado esquerdo é geralmente uma "
"referência de campo, mas pode ser qualquer coisa que implemente :ref:`query "
"expression API <query-expression>`. O lado direito é o valor dado pelo "
"usuário. No exemplo ``Author.objects.filter (name__ne = 'Jack')``, o lado "
"esquerdo é uma referência para o campo ``name`` campo do modelo ``Author``, "
"e ``'Jack '`` é o lado direito."

msgid ""
"We call ``process_lhs`` and ``process_rhs`` to convert them into the values "
"we need for SQL using the ``compiler`` object described before. These "
"methods return tuples containing some SQL and the parameters to be "
"interpolated into that SQL, just as we need to return from our ``as_sql`` "
"method. In the above example, ``process_lhs`` returns ``('\"author\".\"name"
"\"', [])`` and ``process_rhs`` returns ``('\"%s\"', ['Jack'])``. In this "
"example there were no parameters for the left hand side, but this would "
"depend on the object we have, so we still need to include them in the "
"parameters we return."
msgstr ""
"Nós chamamos ``process_lhs`` e ``process_rhs`` para convertê-los para os "
"valores que precisamos para SQL usando o objeto ``compiler`` descrito antes. "
"Esses métodos retornam tuplas contendo alguns comandos SQL e os parâmetros a "
"serem interpolados dentro destes comandos SQL, assim como nós precisamos "
"para retornar do nosso método ``as_sql``. No exemplo acima, ``process_lhs`` "
"retorna ``('\"author\".\"name\"', [])`` e ``process_rhs`` retorna ``('\"%s"
"\"', [ 'Jack' ])``. Neste exemplo não havia parâmetros para o lado esquerdo, "
"mas isso depende do objeto que temos, portanto ainda precisamos incluí-los "
"nos parâmetros que retornamos."

msgid ""
"Finally we combine the parts into an SQL expression with ``<>``, and supply "
"all the parameters for the query. We then return a tuple containing the "
"generated SQL string and the parameters."
msgstr ""
"FInalmente combinamos as partes em uma expressão SQL com ``<>``, e "
"fornecemos todos os parâmetros para a consulta. Então retornamos uma tupla "
"contendo a string SQL gerada e os parâmetros."

msgid "A transformer example"
msgstr "Um exemplo de transformador"

msgid ""
"The custom lookup above is great, but in some cases you may want to be able "
"to chain lookups together. For example, let's suppose we are building an "
"application where we want to make use of the ``abs()`` operator. We have an "
"``Experiment`` model which records a start value, end value, and the change "
"(start - end). We would like to find all experiments where the change was "
"equal to a certain amount (``Experiment.objects.filter(change__abs=27)``), "
"or where it did not exceed a certain amount (``Experiment.objects."
"filter(change__abs__lt=27)``)."
msgstr ""
"O lookup personalizado acima é boa, mas em alguns casos você queira ser "
"capaz de lookups encadeadas. Por exemplo, vamos supor que estamos "
"construindo uma aplicação onde queremos fazer uso do operador ``abs()``. "
"Temos um modelo ``Experiment`` que registra um valor inicial, o valor final "
"e a mudança (início - fim). Gostaríamos de encontrar todos os experimentos "
"em que a alteração foi igual a uma certa quantidade ( ``Experiment.objects."
"filter (change__abs = 27)``), ou onde não exceda um certo montante "
"( ``Experiment.objects.filter (change__abs__lt = 27)``)."

msgid ""
"This example is somewhat contrived, but it nicely demonstrates the range of "
"functionality which is possible in a database backend independent manner, "
"and without duplicating functionality already in Django."
msgstr ""
"Este exemplo é um pouco artificial, mas demonstra muito bem a gama de "
"funcionalidades que é possível de uma maneira independente em um backend de "
"banco de dados., e sem duplicar funcionalidades já existentes no Django."

msgid ""
"We will start by writing an ``AbsoluteValue`` transformer. This will use the "
"SQL function ``ABS()`` to transform the value before comparison::"
msgstr ""
"Nos vamos começar escrevendo um transformador ``AbsoluteValue``. Isso vai "
"usar a função SQL ``ABS()`` para transformar o valor antes da comparação "

msgid "Next, let's register it for ``IntegerField``::"
msgstr "Em seguida, vamos registrá-lo para `` IntegerField`` ::"

msgid ""
"We can now run the queries we had before. ``Experiment.objects."
"filter(change__abs=27)`` will generate the following SQL:"
msgstr ""
"Agora nós podemos rodar as consultas que tínhamos antes. ``Experiment."
"objects.filter(change__abs=27)`` irá gerar o seguinte SQL:"

msgid ""
"By using ``Transform`` instead of ``Lookup`` it means we are able to chain "
"further lookups afterward. So ``Experiment.objects."
"filter(change__abs__lt=27)`` will generate the following SQL:"
msgstr ""
"Ao usar ``Transform`` em vez de ``Lookup`` somos capazes de usar outros "
"pesquisadores em combinação depois. ``Experiment.objects."
"filter(change__abs__lt=27)`` irá gerar o seguinte SQL:"

msgid ""
"Note that in case there is no other lookup specified, Django interprets "
"``change__abs=27`` as ``change__abs__exact=27``."
msgstr ""
"Note que no caso de não haver nenhuma outra lookup especificada, o Django "
"interpreta ``change__abs = 27`` como ``change__abs__exact = 27``."

msgid ""
"This also allows the result to be used in ``ORDER BY`` and ``DISTINCT ON`` "
"clauses. For example ``Experiment.objects.order_by('change__abs')`` "
"generates:"
msgstr ""
"Isso também permite que o resultado seja usado nas clausálas ``ORDER BY`` e "
"``DISTINCT ON``. Por exemplo ``Experiment.objects.order_by('change__abs')`` "
"gera:"

msgid ""
"And on databases that support distinct on fields (such as PostgreSQL), "
"``Experiment.objects.distinct('change__abs')`` generates:"
msgstr ""
"E em bancos de dados que tem suporte ao distinct em campos (como o "
"PostgreSQL), ``Experiment.objects.distinct('change__abs')`` gera:"

msgid ""
"When looking for which lookups are allowable after the ``Transform`` has "
"been applied, Django uses the ``output_field`` attribute. We didn't need to "
"specify this here as it didn't change, but supposing we were applying "
"``AbsoluteValue`` to some field which represents a more complex type (for "
"example a point relative to an origin, or a complex number) then we may have "
"wanted to specify that the transform returns a ``FloatField`` type for "
"further lookups. This can be done by adding an ``output_field`` attribute to "
"the transform::"
msgstr ""
"Ao procurar quais lookups são permitidas depois de aplicar o ``Transform``, "
"o Django usa o atributo ``output_field``. Não precisamos especificar isso "
"aqui, já que não mudou, mas supondo que estivéssemos aplicando "
"``AbsoluteValue`` para algum campo que represente um tipo mais complexo (por "
"exemplo um ponto relativo a uma origem ou um número complexo) então talvez "
"querer especificar que o ``transform`` retorne um tipo ``FloatField`` para "
"os próximos lookups. Isso pode ser feito adicionando um atributo "
"``output_field`` ao \"transform\"::"

msgid ""
"This ensures that further lookups like ``abs__lte`` behave as they would for "
"a ``FloatField``."
msgstr ""
"Isso garante que novos filtros como o ``abs__lte`` se comportem como "
"deveriam para um ``FloatField``."

msgid "Writing an efficient ``abs__lt`` lookup"
msgstr "Escrevendo um filtro ``abs__lt`` eficiente"

msgid ""
"When using the above written ``abs`` lookup, the SQL produced will not use "
"indexes efficiently in some cases. In particular, when we use "
"``change__abs__lt=27``, this is equivalent to ``change__gt=-27`` AND "
"``change__lt=27``. (For the ``lte`` case we could use the SQL ``BETWEEN``)."
msgstr ""
"Quando usar o filtro ``abs`` escrito acima, em alguns casos o SQL gerado não "
"irá usar os índices de maneira eficiente. Em particular, quando usamos "
"``change__abs__lt=27``, isso é equivalente a ``change__gt=-27`` e "
"``change__lt=27``. (Para o caso ``lte`` podemos usar o ``BETWEEN`` do SQL)."

msgid ""
"So we would like ``Experiment.objects.filter(change__abs__lt=27)`` to "
"generate the following SQL:"
msgstr ""
"Então optaríamos por ``Experiment.objects.filter(change__abs__lt=27)`` para "
"gerar o seguinte SQL:"

msgid "The implementation is::"
msgstr "A implementação é::"

msgid ""
"There are a couple of notable things going on. First, "
"``AbsoluteValueLessThan`` isn't calling ``process_lhs()``. Instead it skips "
"the transformation of the ``lhs`` done by ``AbsoluteValue`` and uses the "
"original ``lhs``. That is, we want to get ``\"experiments\".\"change\"`` not "
"``ABS(\"experiments\".\"change\")``. Referring directly to ``self.lhs.lhs`` "
"is safe as ``AbsoluteValueLessThan`` can be accessed only from the "
"``AbsoluteValue`` lookup, that is the ``lhs`` is always an instance of "
"``AbsoluteValue``."
msgstr ""
"Há algumas coisas notáveis ​​acontecendo. Em primeiro lugar, "
"``AbsoluteValueLessThan`` não está chamando ``process_lhs ()``. Em vez disso "
"ele ignora a transformação do ``lhs`` feito por ``AbsoluteValue`` e usa o "
"``lhs`` original. Ou seja, queremos pegar `` \"experiments\".\"change\" `` "
"não ``ABS( \"experiments\". \"change\") ``. Referindo-se diretamente ao "
"``self.lhs.lhs`` é tão seguro quanto o ``AbsoluteValueLessThan`` pode ser "
"acessado diretamente do filtro ``AbsoluteValue``, que é ``lhs`` é sempre uma "
"instância de ``AbsoluteValue``."

msgid ""
"Notice also that  as both sides are used multiple times in the query the "
"params need to contain ``lhs_params`` and ``rhs_params`` multiple times."
msgstr ""
"Note também que como ambos os lados são usados ​​várias vezes na consulta os "
"parâmetros precisam conter ``lhs_params`` e ``rhs_params`` várias vezes."

msgid ""
"The final query does the inversion (``27`` to ``-27``) directly in the "
"database. The reason for doing this is that if the ``self.rhs`` is something "
"else than a plain integer value (for example an ``F()`` reference) we can't "
"do the transformations in Python."
msgstr ""
"A consulta final faz a inversão ( ``27`` para `` -27``) diretamente no banco "
"de dados. A razão para isso é que, se o `` self.rhs`` é algo mais do que um "
"valor inteiro simples (por exemplo, uma referência ``F()`` ) não podemos "
"fazer as transformações em Python."

msgid ""
"In fact, most lookups with ``__abs`` could be implemented as range queries "
"like this, and on most database backends it is likely to be more sensible to "
"do so as you can make use of the indexes. However with PostgreSQL you may "
"want to add an index on ``abs(change)`` which would allow these queries to "
"be very efficient."
msgstr ""
"Na verdade, a maioria das filtros com ``__abs`` poderiam ser implementados "
"como consultas de intervalos como esta, e na maioria dos \"backends\" de "
"banco de dados, é provável que seja mais sensato fazê-lo já que podería "
"fazer uso dos índices. No entanto, com PostgreSQL você pode querer adicionar "
"um índice na ``abs(change)`` o que permitiria que essas consultas fossem "
"muito eficientes."

msgid "A bilateral transformer example"
msgstr "Um exemplo bilateral de \"transforme\""

msgid ""
"The ``AbsoluteValue`` example we discussed previously is a transformation "
"which applies to the left-hand side of the lookup. There may be some cases "
"where you want the transformation to be applied to both the left-hand side "
"and the right-hand side. For instance, if you want to filter a queryset "
"based on the equality of the left and right-hand side insensitively to some "
"SQL function."
msgstr ""
"O exemplo ``AbsoluteValue`` discutido anteriormente é uma transformação que "
"se aplica para o lado esquerdo da lookup. Pode haver alguns casos onde você "
"quer que a transformação seja aplicada tanto para o lado esquerdo quanto "
"para o lado direito. Por exemplo, se você quiser filtrar um queryset com "
"base em uma igualdade de lado esquerdo e direito insensivelmente para alguma "
"função SQL."

msgid ""
"Let's examine case-insensitive transformations here. This transformation "
"isn't very useful in practice as Django already comes with a bunch of built-"
"in case-insensitive lookups, but it will be a nice demonstration of "
"bilateral transformations in a database-agnostic way."
msgstr ""
"Vamos examinar transformações insensíveis a maiúsculas-minúsculas. Essa "
"transformação não é muito útil na prática já que o Django já contém vários "
"pesquisadores como esse built-in, mas é uma boa demonstração de "
"transformações bilaterais agnóstica ao banco de dados."

msgid ""
"We define an ``UpperCase`` transformer which uses the SQL function "
"``UPPER()`` to transform the values before comparison. We define :attr:"
"`bilateral = True <django.db.models.Transform.bilateral>` to indicate that "
"this transformation should apply to both ``lhs`` and ``rhs``::"
msgstr ""
"Definimos um \"transformer\" de ``UpperCase`` que usa a função ``UPPER()`` "
"do SQL para transformar os valores antes da comparação. Definimos :attr: "
"`bilateral = True <django.db.models.Transform.bilateral>` para indicar que "
"essa transformação deve ser aplicada a ambos ``lhs`` e ``rhs``::"

msgid "Next, let's register it::"
msgstr "Em seguida, registre ::"

msgid ""
"Now, the queryset ``Author.objects.filter(name__upper=\"doe\")`` will "
"generate a case insensitive query like this:"
msgstr ""
"Agora, a queryset ``Author.objects.filter(name__upper=\"doe\")`` irá gerar "
"uma consulta insensível a maiúsculas-minúsculas como essa:"

msgid "Writing alternative implementations for existing lookups"
msgstr "Escrever implementações alternativas para filtros existentes"

msgid ""
"Sometimes different database vendors require different SQL for the same "
"operation. For this example we will rewrite a custom implementation for "
"MySQL for the NotEqual operator. Instead of ``<>`` we will be using ``!=`` "
"operator. (Note that in reality almost all databases support both, including "
"all the official databases supported by Django)."
msgstr ""
"Às vezes, diferentes fornecedores de banco de dados requerem diferentes SQL "
"para a mesma operação. Para este exemplo, vamos reescrever uma implementação "
"personalizada para o do operador NotEqual para o MySQL. Em vez de ``<>`` "
"usaremos o operador ``!=``. (Note que, na realidade, quase todos os bancos "
"de dados suportam ambos, incluindo todas as bases de dados oficiais apoiadas "
"pelo Django)."

msgid ""
"We can change the behavior on a specific backend by creating a subclass of "
"``NotEqual`` with an ``as_mysql`` method::"
msgstr ""
"Nós podemos mudar o comportamento em um backend específico criado pela "
"subclasse de ``NotEqual`` com um método ``as_mysql``::"

msgid ""
"We can then register it with ``Field``. It takes the place of the original "
"``NotEqual`` class as it has the same ``lookup_name``."
msgstr ""
"Podemos então registrá-lo com ``Field``. Ele toma o lugar da classe "
"``NotEqual`` original já que tem o mesmo ``lookup_name``."

msgid ""
"When compiling a query, Django first looks for ``as_%s % connection.vendor`` "
"methods, and then falls back to ``as_sql``. The vendor names for the in-"
"built backends are ``sqlite``, ``postgresql``, ``oracle`` and ``mysql``."
msgstr ""
"Ao compilar uma consulta, o Django primeiro procura pelos métodos ``as_%s % "
"connection.vendor``, e depois para ``as_sql``. Os nomes de fornecedores para "
"os back-ends suportados são ``sqlite``, ``postgresql``, ``oracle``  e "
"``mysql``."

msgid "How Django determines the lookups and transforms which are used"
msgstr "Como o Django determina quais filtros e \"transforms\" são usados"

msgid ""
"In some cases you may wish to dynamically change which ``Transform`` or "
"``Lookup`` is returned based on the name passed in, rather than fixing it. "
"As an example, you could have a field which stores coordinates or an "
"arbitrary dimension, and wish to allow a syntax like ``."
"filter(coords__x7=4)`` to return the objects where the 7th coordinate has "
"value 4. In order to do this, you would override ``get_lookup`` with "
"something like::"
msgstr ""
"Em alguns casos, talvez queira mudar dinamicamente qual ``Transform`` ou "
"filtro é devolvido com base no nome passado, em vez de corrigí-lo. Como "
"exemplo, você pode ter um campo o qual armazena coordenadas ou uma dimensão "
"arbitrária, e deseja permitir uma sintaxe como ``.filter (coords__x7=4)`` "
"para retornar os objetos onde a 7ª coordenada tem valor 4. Para fazer isso, "
"substitua ``get_lookup`` com algo como::"

msgid ""
"You would then define ``get_coordinate_lookup`` appropriately to return a "
"``Lookup`` subclass which handles the relevant value of ``dimension``."
msgstr ""
"Você deve então definir `` get_coordinate_lookup`` adequadamente para "
"retornar uma subclasse de ``Lookup`` a qual lida com o valor relevante da "
"``dimension``."

msgid ""
"There is a similarly named method called ``get_transform()``. "
"``get_lookup()`` should always return a ``Lookup`` subclass, and "
"``get_transform()`` a ``Transform`` subclass. It is important to remember "
"that ``Transform`` objects can be further filtered on, and ``Lookup`` "
"objects cannot."
msgstr ""
"Existe um método de nome semelhante chamado ``get_transform() ``. `` "
"Get_lookup () `` deve sempre retornar uma subclasse de ``Lookup``, e "
"``get_transform()`` uma subclasse de  ``Transform``. É importante lembrar "
"que objetos do tipo ``Transform`` podem ainda ser filtrados, e objetos do "
"tipo ``Lookup`` não."

msgid ""
"When filtering, if there is only one lookup name remaining to be resolved, "
"we will look for a ``Lookup``. If there are multiple names, it will look for "
"a ``Transform``. In the situation where there is only one name and a "
"``Lookup`` is not found, we look for a ``Transform`` and then the ``exact`` "
"lookup on that ``Transform``. All call sequences always end with a "
"``Lookup``. To clarify:"
msgstr ""
"Ao filtrar, se houver apenas um nome de filtro remanescente a ser resolvido, "
"olhamos para um ``Lookup``. Se houver vários nomes, ele irá procurar por um "
"``Transform``. Em uma situação onde há apenas um nome e um ``Lookup`` não é "
"encontrado, procuramos por um ``Transform`` e então o  filtro ``exact`` "
"naquele ``Transform``. Todas as sequências de chamadas sempre terminam com "
"um ``Lookup``. Para esclarecer:"

msgid ""
"``.filter(myfield__mylookup)`` will call ``myfield.get_lookup('mylookup')``."
msgstr ""
"``.filter(myfield__mylookup)`` irá chamar `myfield.get_lookup('mylookup')``."

msgid ""
"``.filter(myfield__mytransform__mylookup)`` will call ``myfield."
"get_transform('mytransform')``, and then ``mytransform."
"get_lookup('mylookup')``."
msgstr ""
"``.filter(myfield__mytransform__mylookup)`` irá chamar ``myfield."
"get_transform('mytransform')``, e  em seguida ``mytransform."
"get_lookup('mylookup')``."

msgid ""
"``.filter(myfield__mytransform)`` will first call ``myfield."
"get_lookup('mytransform')``, which will fail, so it will fall back to "
"calling ``myfield.get_transform('mytransform')`` and then ``mytransform."
"get_lookup('exact')``."
msgstr ""
"``.filter(myfield__mytransform)`` irá chamar primeiro ``myfield."
"get_lookup( 'mytransform')``, o qual irá falhar, por isso vai retornar e "
"chamar ``myfield.get_transform('mytransform')`` e em seguida, ``mytransform."
"get_lookup( \"exact\")``."

msgid "How to create custom ``django-admin`` commands"
msgstr "Como criar comandos ``django-admin`` customizados"

msgid ""
"Applications can register their own actions with ``manage.py``. For example, "
"you might want to add a ``manage.py`` action for a Django app that you're "
"distributing. In this document, we will be building a custom ``closepoll`` "
"command for the ``polls`` application from the :doc:`tutorial</intro/"
"tutorial01>`."
msgstr ""
"As aplicações podem registrar suas próprias ações com ``manage.py``. Por "
"exemplo, você pode querer adicionar uma ação ``manage.py`` para uma "
"aplicação Django que você está distribuindo. Neste documento, construiremos "
"um comando customizado ``closepoll`` para a aplicação ``polls`` do :doc:"
"`tutorial</intro/tutorial01>`."

msgid ""
"To do this, add a ``management/commands`` directory to the application. "
"Django will register a ``manage.py`` command for each Python module in that "
"directory whose name doesn't begin with an underscore. For example:"
msgstr ""

msgid ""
"In this example, the ``closepoll`` command will be made available to any "
"project that includes the ``polls`` application in :setting:`INSTALLED_APPS`."
msgstr ""
"Neste exemplo, o comando ``closepoll`` estará disponível a qualquer projeto "
"que inclua a aplicação ``polls`` em :setting:`INSTALLED_APPS`."

msgid ""
"The ``_private.py`` module will not be available as a management command."
msgstr ""
"O módulo ``_private.py`` não estará disponível como um comando de "
"gerenciamento."

msgid ""
"The ``closepoll.py`` module has only one requirement -- it must define a "
"class ``Command`` that extends :class:`BaseCommand` or one of its :ref:"
"`subclasses<ref-basecommand-subclasses>`."
msgstr ""
"O módulo ``closepoll.py`` tem apenas uma exigência -- deve definir uma "
"classe ``Command`` que estende :class:`BaseCommand` ou uma de suas :ref:"
"`subclasses<refbasecommandsubclasses>`."

msgid "Standalone scripts"
msgstr "Scripts autônomos"

msgid ""
"Custom management commands are especially useful for running standalone "
"scripts or for scripts that are periodically executed from the UNIX crontab "
"or from Windows scheduled tasks control panel."
msgstr ""
"Comandos de gerenciamento customizados, são especialmente úteis para a "
"execução de scripts independentes ou para scripts que são periodicamente "
"executados a partir do crontab do UNIX ou do painel de controle de tarefas "
"agendadas do Windows."

msgid ""
"To implement the command, edit ``polls/management/commands/closepoll.py`` to "
"look like this::"
msgstr ""
"Para implementar o comando, edite ``polls/management/commands/closepoll.py`` "
"para que fique assim::"

msgid ""
"When you are using management commands and wish to provide console output, "
"you should write to ``self.stdout`` and ``self.stderr``, instead of printing "
"to ``stdout`` and ``stderr`` directly. By using these proxies, it becomes "
"much easier to test your custom command. Note also that you don't need to "
"end messages with a newline character, it will be added automatically, "
"unless you specify the ``ending`` parameter::"
msgstr ""
"Quando estiver usando comandos de gerenciamento e desejar enviar a saída "
"para console, deve se escrever para o ``self.stdout`` e ``self.stderr``, ao "
"invés de imprimir para o ``stdout`` e ``stderr`` diretamente. Ao usar esses "
"proxies, torna-se muito mais fácil para testar o seu comando personalizado. "
"Observe também que você não precisa terminar mensagens com um caractere de "
"nova linha, este será adicionado automaticamente, a menos que você "
"especifique o parâmetro ``ending``::"

msgid ""
"The new custom command can be called using ``python manage.py closepoll "
"<poll_ids>``."
msgstr ""
"O novo comando personalizado pode ser chamado usando ``python manage.py "
"closepoll <poll_ids>``."

msgid ""
"The ``handle()`` method takes one or more ``poll_ids`` and sets ``poll."
"opened`` to ``False`` for each one. If the user referenced any nonexistent "
"polls, a :exc:`CommandError` is raised. The ``poll.opened`` attribute does "
"not exist in the :doc:`tutorial</intro/tutorial02>` and was added to ``polls."
"models.Question`` for this example."
msgstr ""
"O método ``handle()`` usa um ou mais ``poll_ids`` e altera o \"poll.opened\" "
"para ``False`` para cada um. Se o usuário referenciar qualquer enquete "
"inexistente, uma exceção será levantada :exc:`CommandError`. O atributo "
"``poll.opened`` não existe no :doc:`tutorial</intro/tutorial02>` e foi "
"adicionado em ``polls.models.Question`` para este exemplo."

msgid "Accepting optional arguments"
msgstr "Aceitando argumentos opcionais"

msgid ""
"The same ``closepoll`` could be easily modified to delete a given poll "
"instead of closing it by accepting additional command line options. These "
"custom options can be added in the :meth:`~BaseCommand.add_arguments` method "
"like this::"
msgstr ""
"O mesmo ``closepoll`` poderia ser facilmente modificado para excluir uma "
"determinada enquete, ao invés de fechá-la, aceitando as opções de linha de "
"comando adicionais. Estas opções personalizadas podem ser adicionadas no "
"método :meth:`~BaseCommand.add_arguments` assim::"

msgid ""
"The option (``delete`` in our example) is available in the options dict "
"parameter of the handle method. See the :py:mod:`argparse` Python "
"documentation for more about ``add_argument`` usage."
msgstr ""
"A opção (``delete`` no nosso exemplo) está disponível no parâmetro dict "
"(options) do método handle. Veja  :py:mod:`argparse` na documentação do "
"Python para saber mais sobre o uso do ``add_argument``."

msgid ""
"In addition to being able to add custom command line options, all :doc:"
"`management commands</ref/django-admin>` can accept some default options "
"such as :option:`--verbosity` and :option:`--traceback`."
msgstr ""
"Além de ser capaz de adicionar opções personalizadas de linha de comando, "
"todos :doc:`comandos de gereciamento</ref/django-admin>`  aceitam algumas "
"opções padrão, tais como :opção:`--verbosity` e :opção:`--traceback`. "

msgid "Management commands and locales"
msgstr "Comandos de gerenciamento e localidades"

msgid ""
"By default, management commands are executed with the current active locale."
msgstr ""
"Por padrão, comandos de gerenciamento são executados com a localidade "
"corrente ativa."

msgid ""
"If, for some reason, your custom management command must run without an "
"active locale (for example, to prevent translated content from being "
"inserted into the database), deactivate translations using the "
"``@no_translations`` decorator on your :meth:`~BaseCommand.handle` method::"
msgstr ""
"Se, por alguma razão, seu comando de gerenciamento personalizado precise ser "
"executado sem um local ativo (por exemplo, para evitar que o conteúdo "
"traduzido seja inserido dentro do banco de dados), desative a tradução "
"utilizado o decorator ``@no_translations`` no seu método :meth:`~BaseCommand."
"handle`::"

msgid ""
"Since translation deactivation requires access to configured settings, the "
"decorator can't be used for commands that work without configured settings."
msgstr ""
"Como a desativação da tradução requer acesso as configurações definidas, os "
"decorator's não podem ser utilizados por comandos que trabalham sem "
"configurações pré definidas."

msgid "Testing"
msgstr "Testando"

msgid ""
"Information on how to test custom management commands can be found in the :"
"ref:`testing docs <topics-testing-management-commands>`."
msgstr ""
"Informações sobre como testar comandos de gerenciamento personalizados pode "
"ser encontradas na :ref:`documentação de teste <topics-testing-management-"
"commands>`."

msgid "Overriding commands"
msgstr "Sobrescrevendo comandos."

msgid ""
"Django registers the built-in commands and then searches for commands in :"
"setting:`INSTALLED_APPS` in reverse. During the search, if a command name "
"duplicates an already registered command, the newly discovered command "
"overrides the first."
msgstr ""
"Django registra os comandos internos e depois procura os comandos em :"
"setting:`INSTALLED_APPS` em orderm reversa. Durante a busca, se um comando "
"duplica um comando já registrado, o novo comando encontrado substitui o "
"primeiro."

msgid ""
"In other words, to override a command, the new command must have the same "
"name and its app must be before the overridden command's app in :setting:"
"`INSTALLED_APPS`."
msgstr ""
"Em outras palavras, para sobrescrever um comando, o novo comando precisa ter "
"o mesmo nome e seu app precisa estar antes do comando da app a ser "
"sobrescrito em : setting:`INSTALLED_APPS`."

msgid ""
"Management commands from third-party apps that have been unintentionally "
"overridden can be made available under a new name by creating a new command "
"in one of your project's apps (ordered before the third-party app in :"
"setting:`INSTALLED_APPS`) which imports the ``Command`` of the overridden "
"command."
msgstr ""
"Comandos de gerenciamento de aplicações de terceiros que foram sobrescritos "
"de maneira nao intencional podem se tornar disponíveis sob um novo nome "
"através da criação de um novo comando em um dos apps do projeto (colocado "
"antes da aplicação de terceiros em :setting:`INSTALLED_APPS) o qual importa "
"o 'Comando' do comando sobrescrito. "

msgid "Command objects"
msgstr "Objetos Command"

msgid "The base class from which all management commands ultimately derive."
msgstr ""
"A classe base a partir da qual todos os comandos de gestão, em última "
"análise derivam."

msgid ""
"Use this class if you want access to all of the mechanisms which parse the "
"command-line arguments and work out what code to call in response; if you "
"don't need to change any of that behavior, consider using one of its :ref:"
"`subclasses<ref-basecommand-subclasses>`."
msgstr ""
"Use esta classe se você quer acesso a todos os mecanismos que realizam o "
"parse dos argumentos da linha de comando e verificar qual código chamar em "
"resposta; se você não precisa mudar este comportamento, considere usar uma "
"dessas :ref:`subclasses<ref-basecommand-subclasses>`."

msgid ""
"Subclassing the :class:`BaseCommand` class requires that you implement the :"
"meth:`~BaseCommand.handle` method."
msgstr ""
"Subclasssing a classe :class:`BaseCommand` requer que você implemente o "
"método :meth:`~BaseCommand.handle`."

msgid "Attributes"
msgstr "Atributos"

msgid ""
"All attributes can be set in your derived class and can be used in :class:"
"`BaseCommand`’s :ref:`subclasses<ref-basecommand-subclasses>`."
msgstr ""
"Todos os atributos podem ser definidos em sua classe derivada e podem ser "
"usados nas :ref:`subclasses<ref-basecommand-subclasses>` de :class:"
"`BaseCommand`  "

msgid ""
"A short description of the command, which will be printed in the help "
"message when the user runs the command ``python manage.py help <command>``."
msgstr ""
"Uma breve descrição do comando, que será impresso na mensagem de ajuda "
"quando o usuário executar o comando ``python manage.py help <command>``."

msgid ""
"If your command defines mandatory positional arguments, you can customize "
"the message error returned in the case of missing arguments. The default is "
"output by :py:mod:`argparse` (\"too few arguments\")."
msgstr ""
"Se o seu comando define argumentos posicionais obrigatórios, você pode "
"personalizar a mensagem de erro devolvida em caso de falta de argumentos. O "
"padrão é a saída por :py:mod:`argparse` (\"poucos argumentos\")."

msgid ""
"A boolean indicating whether the command outputs SQL statements; if "
"``True``, the output will automatically be wrapped with ``BEGIN;`` and "
"``COMMIT;``. Default value is ``False``."
msgstr ""
"Um booleano que indica como os comandos retornam SQL \"statements\"; Se "
"``True``, a saída será automaticamente envolvido com ``BEGIN;`` e ``COMMIT;"
"``. O valor padrão é ``False``."

msgid ""
"A boolean; if ``True``, the command prints a warning if the set of "
"migrations on disk don't match the migrations in the database. A warning "
"doesn't prevent the command from executing. Default value is ``False``."
msgstr ""
"Um booleano; Se ``True``, o comando \"printa\" um alerta se o conjunto de "
"migrações no disco não estiver de acordo com as migrações no banco de dados. "
"Um alerta não previne o comando de ser executado. O valor padrão é ``False``."

msgid ""
"A list or tuple of tags, e.g. ``[Tags.staticfiles, Tags.models]``. System "
"checks :ref:`registered in the chosen tags <registering-labeling-checks>` "
"will be checked for errors prior to executing the command. The value "
"``'__all__'`` can be used to specify that all system checks should be "
"performed. Default value is ``'__all__'``."
msgstr ""
"Uma lista ou tupla de tags, e. g. \"[Tags.staticfiles, Tags.models]\".  O "
"sistema checa :ref'registrado nas tags escolhidas' <registering-labeling-"
"checks>'serão verificados por erros antes de executar o comando. O valor "
"\"__all__\" pode ser usado para especificar que todas as checagens devem ser "
"realizadas. Valor pré-definido é \"__all__\""

msgid ""
"An instance attribute that helps create colored output when writing to "
"``stdout`` or ``stderr``. For example::"
msgstr ""
"Um atributo de instância que ajuda a criar uma saída colorida quando se "
"escreve no ``stdout`` ou ``stderr``. Por exemplo::"

msgid ""
"See :ref:`syntax-coloring` to learn how to modify the color palette and to "
"see the available styles (use uppercased versions of the \"roles\" described "
"in that section)."
msgstr ""
"Veja :ref:`sintaxe-coloring` para aprender como modificar a paleta de cores "
"e ver os estilos disponíveis (use caixa-alta das versões das opções "
"descritas nessa seção)."

msgid ""
"If you pass the :option:`--no-color` option when running your command, all "
"``self.style()`` calls will return the original string uncolored."
msgstr ""
"Se você passar a opção :option:`--no-color` ao executar o seu comando, todas "
"as chamadas ``self.style()`` retornarão a string original sem colorir."

msgid ""
"The default command options to suppress in the help output. This should be a "
"set of option names (e.g. ``'--verbosity'``). The default values for the "
"suppressed options are still passed."
msgstr ""
"As opções de comando padrão a serem suprimidas na saída de ajuda. Este deve "
"ser um conjunto de nomes de opções (por exemplo, ``'--verbosity'``). Os "
"valores padrão para as opções suprimidas ainda são passados."

msgid "Methods"
msgstr "Métodos"

msgid ""
":class:`BaseCommand` has a few methods that can be overridden but only the :"
"meth:`~BaseCommand.handle` method must be implemented."
msgstr ""
":Class:`BaseCommand` tem alguns métodos que podem ser sobrescritos mas "
"apenas o método :meth:`~BaseCommand.handle` deve ser implementado."

msgid "Implementing a constructor in a subclass"
msgstr "Implementando um construtor em uma subclasse"

msgid ""
"If you implement ``__init__`` in your subclass of :class:`BaseCommand`, you "
"must call :class:`BaseCommand`’s ``__init__``::"
msgstr ""
"Se você implementar ``__init__`` em sua subclasse de :class:`BaseCommand`, "
"você deve chamar: o ``__init__`` do class:` BaseCommand`::"

msgid ""
"Returns a ``CommandParser`` instance, which is an :class:`~argparse."
"ArgumentParser` subclass with a few customizations for Django."
msgstr ""
"Retorna uma instância de ``CommandParser``, o qual é uma classe: `argparse."
"ArgumentParser` subclasse, com algumas personalizações para o Django."

msgid ""
"You can customize the instance by overriding this method and calling "
"``super()`` with ``kwargs`` of :class:`~argparse.ArgumentParser` parameters."
msgstr ""
"Você pode customizar a instância por sobrecarga desse método, chamando "
"``super()`` com ``kwargs`` da classe:`~argparse.ArgumentParser` como "
"parâmetro."

msgid ""
"Entry point to add parser arguments to handle command line arguments passed "
"to the command. Custom commands should override this method to add both "
"positional and optional arguments accepted by the command. Calling "
"``super()`` is not needed when directly subclassing ``BaseCommand``."
msgstr ""
"Ponto de entrada para passar um \"parser\" como argumento para lidar com os "
"argumentos da linha de comando passados ao comando. Comandos personalizados "
"devem sobrescrever este método para adicionar ambos argumentos posicionais e "
"opicionais aceitos pelo comando. Não é necessário chamar o ``super()`` "
"quando for uma subclasse de  ``BaseCommand``."

msgid ""
"Returns the Django version, which should be correct for all built-in Django "
"commands. User-supplied commands can override this method to return their "
"own version."
msgstr ""
"Retorna a versão do Django, que deve ser a correta para todos os comandos "
"internos do Django. É possível sobrescrever este método para que comandos "
"fornecidos pelo usuário possam  retornar a sua própria versão."

msgid ""
"Tries to execute this command, performing system checks if needed (as "
"controlled by the :attr:`requires_system_checks` attribute). If the command "
"raises a :exc:`CommandError`, it's intercepted and printed to ``stderr``."
msgstr ""
"Tenta executar este comando, verificando o sistema se necessário (conforme "
"controlado pelo atributo :attr:`requires_system_checks`). Se o comando gera "
"um :exc:`CommandError`, ele é interceptado e impresso em ``stderr``."

msgid "Calling a management command in your code"
msgstr "Chamando um comando de gestão dentro do seu código"

msgid ""
"``execute()`` should not be called directly from your code to execute a "
"command. Use :func:`~django.core.management.call_command` instead."
msgstr ""
"``execute()`` não deve ser chamado diretamente do seu código para executar "
"um comando. Ao invés disso, use :func:`~django.core.management."
"call_command` ."

msgid "The actual logic of the command. Subclasses must implement this method."
msgstr "A lógica atual do comando. Subclasses devem implementar este método."

msgid ""
"It may return a string which will be printed to ``stdout`` (wrapped by "
"``BEGIN;`` and ``COMMIT;`` if :attr:`output_transaction` is ``True``)."
msgstr ""
"Pode retornar uma string tal qual será impressa no \"stdout\" (acrescido por "
"\"BEGIN;\" e \"COMMIT;\" se :attr:'output_transaction' for \"True\")."

msgid ""
"Uses the system check framework to inspect the entire Django project for "
"potential problems. Serious problems are raised as a :exc:`CommandError`; "
"warnings are output to ``stderr``; minor notifications are output to "
"``stdout``."
msgstr ""
"Usa a estrutura de verificação do sistema para inspecionar todo o projeto "
"Django em busca de possíveis problemas. Problemas sérios são levantados "
"como :exc:`CommandError`; avisos são emitidos para ``stderr``; notificações "
"menores são enviadas para ``stdout``."

msgid ""
"If ``app_configs`` and ``tags`` are both ``None``, all system checks are "
"performed. ``tags`` can be a list of check tags, like ``compatibility`` or "
"``models``."
msgstr ""
"Se  ambos ``app_configs`` e  ``tags`` forem  ``None``, todas as verificações "
"do sistema são realizadas. `` Tags`` pode ser uma lista tags de checagem, "
"como ``compatibility`` ou ``models``."

msgid "``BaseCommand`` subclasses"
msgstr "Subclasses de ``BaseCommand``"

msgid ""
"A management command which takes one or more installed application labels as "
"arguments, and does something with each of them."
msgstr ""
"Um comando de gerenciamento que recebe como argumento um ou mais \"labels\" "
"de aplicação instaladas, e faz alguma coisa com cada um deles."

msgid ""
"Rather than implementing :meth:`~BaseCommand.handle`, subclasses must "
"implement :meth:`~AppCommand.handle_app_config`, which will be called once "
"for each application."
msgstr ""
"Melhor que implementar :meth:`~ BaseCommand.handle`, as subclasses devem "
"implementar :meth:` ~AppCommand.handle_app_config`, o qual será chamado uma "
"vez para cada aplicação."

msgid ""
"Perform the command's actions for ``app_config``, which will be an :class:"
"`~django.apps.AppConfig` instance corresponding to an application label "
"given on the command line."
msgstr ""
"Executar ações do comando para ``app_config``, o qual será uma instância de :"
"class:`~django.apps.AppConfig` correspondente a um label do aplicativo "
"informado na linha de comando."

msgid ""
"A management command which takes one or more arbitrary arguments (labels) on "
"the command line, and does something with each of them."
msgstr ""
"Um comando de gestão que recebe um ou mais argumentos arbitrários (\"labels"
"\") na linha de comando, e faz alguma coisa com cada um deles."

msgid ""
"Rather than implementing :meth:`~BaseCommand.handle`, subclasses must "
"implement :meth:`~LabelCommand.handle_label`, which will be called once for "
"each label."
msgstr ""
"Em vez de implementar :meth:`~BaseCommand.handle`, subclasses devem "
"implementar :meth:`~LabelCommand.handle_label`, que será chamado uma vez "
"para cada etiqueta."

msgid ""
"A string describing the arbitrary arguments passed to the command. The "
"string is used in the usage text and error messages of the command. Defaults "
"to ``'label'``."
msgstr ""
"Uma string que descreve os argumentos arbitrários passados para o comando. A "
"string é usada no texto de uso e mensagens de erro do comando. Padrão para "
"`` 'label'``."

msgid ""
"Perform the command's actions for ``label``, which will be the string as "
"given on the command line."
msgstr ""
"Executar ações do comando para ``label``, que será a string como  informada "
"na linha de comando."

msgid "Command exceptions"
msgstr "Exceções de comando"

msgid ""
"Exception class indicating a problem while executing a management command."
msgstr ""
"A classe de exceção indica um problema ao executar um comando de gestão."

msgid ""
"If this exception is raised during the execution of a management command "
"from a command line console, it will be caught and turned into a nicely-"
"printed error message to the appropriate output stream (i.e., ``stderr``); "
"as a result, raising this exception (with a sensible description of the "
"error) is the preferred way to indicate that something has gone wrong in the "
"execution of a command. It accepts the optional ``returncode`` argument to "
"customize the exit status for the management command to exit with, using :"
"func:`sys.exit`."
msgstr ""
"Se esta exceção for gerada durante a execução de um comando de gerenciamento "
"a partir de um console de linha de comando, ela será capturada e "
"transformada em uma mensagem de erro bem impressa para o fluxo de saída "
"apropriado (ou seja, ``stderr``); como resultado, levantar essa exceção (com "
"uma descrição sensata do erro) é a maneira preferida de indicar que algo deu "
"errado na execução de um comando. Ele aceita o argumento opcional "
"``returncode`` para personalizar o status de saída para o comando de "
"gerenciamento sair, usando :func:`sys.exit`."

msgid ""
"If a management command is called from code through :func:`~django.core."
"management.call_command`, it's up to you to catch the exception when needed."
msgstr ""
"Se um comando de gestão é chamado do código através do :func:`~django.core."
"management.call_command`, cabe a você capturar a exceção quando necessário."

msgid "How to create custom model fields"
msgstr "Como criar campos de modelo customizado"

msgid "Introduction"
msgstr "Introdução"

msgid ""
"The :doc:`model reference </topics/db/models>` documentation explains how to "
"use Django's standard field classes -- :class:`~django.db.models."
"CharField`, :class:`~django.db.models.DateField`, etc. For many purposes, "
"those classes are all you'll need. Sometimes, though, the Django version "
"won't meet your precise requirements, or you'll want to use a field that is "
"entirely different from those shipped with Django."
msgstr ""
"A documentação :doc:`referência de modelo </topics/db/models>` explica como "
"usar as classes de campo padrão do Django --:class:`~django.db.models."
"CharField`, :class:`~django.db.models.DateField`, etc. Para muitos "
"propósitos, essas classes são tudo o que você irá precisar. Às vezes, porém, "
"a versão do Django não irá atender às suas necessidades específicas, ou você "
"irá querer usar um campo que é totalmente diferente daqueles fornecidos com "
"Django."

msgid ""
"Django's built-in field types don't cover every possible database column "
"type -- only the common types, such as ``VARCHAR`` and ``INTEGER``. For more "
"obscure column types, such as geographic polygons or even user-created types "
"such as `PostgreSQL custom types`_, you can define your own Django ``Field`` "
"subclasses."
msgstr ""
"Os tipos de campos embutidos no Django não cobrem todas os possíveis tipos "
"de colunas do banco de dados -- somente os tipos comuns, tais como "
"``VARCHAR``e ``INTEGER``. Para tipos de colunas mais obscuros, tal como "
"polígonos geográficos ou ainda tipos criados pelo usuário como `PostgreSQL "
"custom Types`__, é possível definir sua própria subclasse de ``Field`` do "
"Django."

msgid ""
"Alternatively, you may have a complex Python object that can somehow be "
"serialized to fit into a standard database column type. This is another case "
"where a ``Field`` subclass will help you use your object with your models."
msgstr ""
"Por outro lado, pode haver um tipo complexo de objeto no Python que pode de "
"alguma maneira ser serializado para que se encaixe em um tipo de coluna "
"padrão no banco de dados. Este é um outro caso onde uma subclasse de "
"``Field`` pode ajudar a utilizar o objeto com o \"models\"."

msgid "Our example object"
msgstr "Nosso objeto de exemplo"

msgid ""
"Creating custom fields requires a bit of attention to detail. To make things "
"easier to follow, we'll use a consistent example throughout this document: "
"wrapping a Python object representing the deal of cards in a hand of "
"Bridge_. Don't worry, you don't have to know how to play Bridge to follow "
"this example. You only need to know that 52 cards are dealt out equally to "
"four players, who are traditionally called *north*, *east*, *south* and "
"*west*.  Our class looks something like this::"
msgstr ""
"Criar campos personalizados requer um pouco de atenção. Para que seja mais "
"fácil de acompanhar, usaremos um exemplo consistente através desta "
"documentação: um objeto Python que represente a coleção de cartas de uma mão "
"de Bridge_. Não se preocupe, não é necessário saber como jogar Bridge para "
"entender o exemplo. É necessário saber que 52 cartas são distribuídas "
"igualmente para 4 jogadores, os quais são tradicionalmente chamados *north* "
"(norte), *east* (leste), *south* (sul) and *west* (oeste). Nossa classe se "
"parece com isso::"

msgid ""
"This is an ordinary Python class, with nothing Django-specific about it. "
"We'd like to be able to do things like this in our models (we assume the "
"``hand`` attribute on the model is an instance of ``Hand``)::"
msgstr ""
"Isto é uma classe Python ordinária, com nada específico voltado ao Django. "
"Nós gostamos de poder fazer coisas como essa em nossos modelos ( assumimos "
"que o atributo ``hand`` no modelo é um instância de ``Hand``)::"

msgid ""
"We assign to and retrieve from the ``hand`` attribute in our model just like "
"any other Python class. The trick is to tell Django how to handle saving and "
"loading such an object."
msgstr ""
"Atribuimos ou lemos o valor do atributo ``hand`` no nosso modelo como em "
"qualquer outra classe Python. Este truque é para dizer ao Django como "
"manipular a gravação e a leitura como um objeto."

msgid ""
"In order to use the ``Hand`` class in our models, we **do not** have to "
"change this class at all. This is ideal, because it means you can easily "
"write model support for existing classes where you cannot change the source "
"code."
msgstr ""
"Para utilizar a classe ``Hand`` em nossos modelos, nós **não** precisamos "
"alterar essa classe em nada. Isso é ideal, porque quer dizer que podemos "
"facilmente escrever modelos de suporte para classes existentes cujo o código "
"fonte não pode ser alterado."

msgid ""
"You might only be wanting to take advantage of custom database column types "
"and deal with the data as standard Python types in your models; strings, or "
"floats, for example. This case is similar to our ``Hand`` example and we'll "
"note any differences as we go along."
msgstr ""
"Você pode estar querendo tirar vantagem dos tipos customizados de colunas de "
"banco de dados e lidar com o dado como um tipo de dado Python padrão nos "
"seus modelos; Este caso é similar ao nosso exemplo ``Hand``  e iremos "
"explicitar qualquer diferença enquanto continuamos."

msgid "Background theory"
msgstr "A teoria por trás."

msgid "Database storage"
msgstr "Armazenamento no Banco de Dados."

msgid ""
"Let's start with model fields. If you break it down, a model field provides "
"a way to take a normal Python object -- string, boolean, ``datetime``, or "
"something more complex like ``Hand`` -- and convert it to and from a format "
"that is useful when dealing with the database. (Such a format is also useful "
"for serialization, but as we'll see later, that is easier once you have the "
"database side under control)."
msgstr ""
"Vamos começar com campos de modelo. Se você decompô-lo, um campo de modelo "
"fornece uma maneira de pegar um objeto Python normal -- string, boolean, "
"``datetime`` ou algo mais complexo como ``Hand`` -- e convertê-lo de e para "
"um formato que é útil quando se lida com o banco de dados. (Esse formato "
"também é útil para serialização, mas como veremos mais adiante, isso é mais "
"fácil quando você tem o lado do banco de dados sob controle)."

msgid ""
"Fields in a model must somehow be converted to fit into an existing database "
"column type. Different databases provide different sets of valid column "
"types, but the rule is still the same: those are the only types you have to "
"work with. Anything you want to store in the database must fit into one of "
"those types."
msgstr ""
"Campos em um modelo devem ser de alguma maneira convertidos para que se "
"encaixem em um tipo de coluna de banco de dados já existente. Bancos de "
"dados diferentes provêem diferentes tipos de colunas, mas a regra ainda é a "
"mesma: aqueles são os únicos dados que se tem para trabalhar. Qualquer coisa "
"que se queira guardar em um banco de dados deve se encaixar em um daqueles "
"tipos. "

msgid ""
"Normally, you're either writing a Django field to match a particular "
"database column type, or you will need a way to convert your data to, say, a "
"string."
msgstr ""
"Normalmente, você está escrevendo um campo Django para corresponder a um "
"determinado tipo de coluna de banco de dados ou precisará de uma maneira de "
"converter seus dados em, digamos, uma string."

msgid ""
"For our ``Hand`` example, we could convert the card data to a string of 104 "
"characters by concatenating all the cards together in a predetermined order "
"-- say, all the *north* cards first, then the *east*, *south* and *west* "
"cards. So ``Hand`` objects can be saved to text or character columns in the "
"database."
msgstr ""
"Para nosso exemplo de ``Mão``, poderíamos converter os dados do cartão em "
"uma string de 104 caracteres concatenando todos os cartões juntos em uma "
"ordem predeterminada -- digamos, todos os cartões do *norte* primeiro, "
"depois o *leste*, * sul* e *oeste*. Assim, os objetos ``Mão`` podem ser "
"salvos em colunas de texto ou caracteres no banco de dados."

msgid "What does a field class do?"
msgstr "O que uma classe campo faz?"

msgid ""
"All of Django's fields (and when we say *fields* in this document, we always "
"mean model fields and not :doc:`form fields </ref/forms/fields>`) are "
"subclasses of :class:`django.db.models.Field`. Most of the information that "
"Django records about a field is common to all fields -- name, help text, "
"uniqueness and so forth. Storing all that information is handled by "
"``Field``. We'll get into the precise details of what ``Field`` can do later "
"on; for now, suffice it to say that everything descends from ``Field`` and "
"then customizes key pieces of the class behavior."
msgstr ""
"Todos os campos do Django (e quando dizemos *campo* neste documento, sempre "
"queremos dizer campos do modelo e não :doc:`campos de forms </ref/forms/"
"fields>`) são subclasses de :class:`django.db.models.Field`. A maioria das "
"informações que o Django registra sobre um campo é comum a todos os campos --"
"name, help text, uniqueness e por diante. Armazenar toda essa informação é "
"papel de ``Field``. Iremos entrar em detalhes precisos do que o ``Field`` "
"pode fazer mais tarde; por agora, basta dizer que tudo descende de ``Field`` "
"e então customizamos partes chaves do comportamento da classe."

msgid ""
"It's important to realize that a Django field class is not what is stored in "
"your model attributes. The model attributes contain normal Python objects. "
"The field classes you define in a model are actually stored in the ``Meta`` "
"class when the model class is created (the precise details of how this is "
"done are unimportant here). This is because the field classes aren't "
"necessary when you're just creating and modifying attributes. Instead, they "
"provide the machinery for converting between the attribute value and what is "
"stored in the database or sent to the :doc:`serializer </topics/"
"serialization>`."
msgstr ""
"É importante dizer que a classe de campo do Django não é o que é armazenado "
"no seus atributos do modelo. Os atributos dos modelos contém objetos Python "
"normais. As classes de campo que são definidas em um modelo são na verdade "
"armazenadas dentro da classe ``Meta`` quando a classe é criada (os detalhes "
"precisos de como isso é feito são importantes aqui). Isso é porque as "
"classes de campos não são necessárias enquanto se está modificando "
"atributos. Na verdade, eles fornecem o maquinário para conversão entre o "
"valor do atributo e o que é armazenado no banco de dados ou enviado para o :"
"doc:`serializador </topics/serialization>`."

msgid ""
"Keep this in mind when creating your own custom fields. The Django ``Field`` "
"subclass you write provides the machinery for converting between your Python "
"instances and the database/serializer values in various ways (there are "
"differences between storing a value and using a value for lookups, for "
"example). If this sounds a bit tricky, don't worry -- it will become clearer "
"in the examples below. Just remember that you will often end up creating two "
"classes when you want a custom field:"
msgstr ""
"Tenha isso em mente ao criar seus próprios campos. A subclasse ``Field`` do "
"Django que você escreve provê o maquinário para conversão entre suas "
"instancias Python e os valores do banco de dados/serializador de várias "
"maneiras (existe uma diferença entre armazenar um valor e usar um valor para "
"lookups por exemplo). Se isso lhe soa um pouco confuso, não se preocupe -- "
"se tornará claro no exemplo abaixo. Mas lembre que muitas vezes acabará por "
"criar duas classes quando quiser um campo personalizado:"

msgid ""
"The first class is the Python object that your users will manipulate. They "
"will assign it to the model attribute, they will read from it for displaying "
"purposes, things like that. This is the ``Hand`` class in our example."
msgstr ""
"A primeira classe é o objeto Python que os usuários irão manipular. Irão "
"assinalar isso a um atributo de model, lerão para mostrar, coisas assim. "
"Esta é a classe ``Hand`` em nosso exemplo."

msgid ""
"The second class is the ``Field`` subclass. This is the class that knows how "
"to convert your first class back and forth between its permanent storage "
"form and the Python form."
msgstr ""
"A segunda classe é a subclasse ``Field``. Essa é a classe que sabe como "
"converter sua classe entre sua forma de armazenamento permanente e a forma "
"do Python e vice-versa."

msgid "Writing a field subclass"
msgstr "Escrevendo uma subclasse de campo"

msgid ""
"When planning your :class:`~django.db.models.Field` subclass, first give "
"some thought to which existing :class:`~django.db.models.Field` class your "
"new field is most similar to. Can you subclass an existing Django field and "
"save yourself some work? If not, you should subclass the :class:`~django.db."
"models.Field` class, from which everything is descended."
msgstr ""
"Quando estiver panejando sua subclasse de :class:`~django.db.models.Field`, "
"primeiro de uma com qual classe já existente :class:`~django.db.models."
"Field` seu campo se parece mais. É possível fazer uma subclasse de campo "
"Django já existente  e economizar algum trabalho ? Caso não, você deve "
"construir uma subclasse de :class:`~django.db.models.Field`, da qual tudo "
"descende."

msgid ""
"Initializing your new field is a matter of separating out any arguments that "
"are specific to your case from the common arguments and passing the latter "
"to the ``__init__()`` method of :class:`~django.db.models.Field` (or your "
"parent class)."
msgstr ""
"Iniciar seu novo campo é uma questão de separar quaisquer argumentos que são "
"específicos para seu caso dos argumentos comuns e passar este último para o "
"método ``__init__()`` da :class:`~django.db.models.Field` (ou sua classe "
"pai)."

msgid ""
"In our example, we'll call our field ``HandField``. (It's a good idea to "
"call your :class:`~django.db.models.Field` subclass ``<Something>Field``, so "
"it's easily identifiable as a :class:`~django.db.models.Field` subclass.) It "
"doesn't behave like any existing field, so we'll subclass directly from :"
"class:`~django.db.models.Field`::"
msgstr ""
"No nosso exemplo, iremos chamar nosso campo de ``HandField``. (é uma boa "
"idéia chamar sua subclasse :class:`~django.db.models.Field`  "
"``<AgumaCoisa>Field``, então ela fica facilmente identificável como uma "
"subclasse de  :class:`~django.db.models.Field`) . Nosso campo não se "
"comporta como nenhum outro campo existente, então iremos herdar diretamente "
"de  :class:`~django.db.models.Field`::"

msgid ""
"Our ``HandField`` accepts most of the standard field options (see the list "
"below), but we ensure it has a fixed length, since it only needs to hold 52 "
"card values plus their suits; 104 characters in total."
msgstr ""
"Nosso ``HandField`` aceita a maioria das opções dos campos padrão (veja a "
"lista abaixo), mas asseguramos que ele tenha um comprimento fixo, já que só "
"precisa de 52 valores de carta mais seus naipes; 104 caracteres no total. "

msgid ""
"Many of Django's model fields accept options that they don't do anything "
"with. For example, you can pass both :attr:`~django.db.models.Field."
"editable` and :attr:`~django.db.models.DateField.auto_now` to a :class:"
"`django.db.models.DateField` and it will ignore the :attr:`~django.db.models."
"Field.editable` parameter (:attr:`~django.db.models.DateField.auto_now` "
"being set implies ``editable=False``). No error is raised in this case."
msgstr ""
"Muitos dos campos de modelo do Django aceitam opções com as quais não fazem "
"nada. Por exemplo, você pode passar :attr:`~django.db.models.Field.editable` "
"e :attr:`~django.db.models.DateField.auto_now` para um :class:`django.db."
"models. DateField` e irá ignorar o parâmetro :attr:`~django.db.models.Field."
"editable` (:attr:`~django.db.models.DateField.auto_now` sendo definido "
"implica ``editable=False``) . Nenhum erro é levantado neste caso."

msgid ""
"This behavior simplifies the field classes, because they don't need to check "
"for options that aren't necessary. They pass all the options to the parent "
"class and then don't use them later on. It's up to you whether you want your "
"fields to be more strict about the options they select, or to use the more "
"permissive behavior of the current fields."
msgstr ""
"Esse comportamento simplifica as classes de campo, pois não precisam "
"verificar opções desnecessárias. Eles passam todas as opções para a classe "
"pai e não as usam mais tarde. Cabe a você decidir se deseja que seus campos "
"sejam mais rígidos sobre as opções selecionadas ou se deseja usar o "
"comportamento mais permissivo dos campos atuais."

msgid "The ``Field.__init__()`` method takes the following parameters:"
msgstr "O método ``Field.__init__()`` recebe os seguintes parâmetros:"

msgid ":attr:`~django.db.models.Field.verbose_name`"
msgstr ":attr:`~django.db.models.Field.verbose_name`"

msgid "``name``"
msgstr "``name``"

msgid ":attr:`~django.db.models.Field.primary_key`"
msgstr ":attr:`~django.db.models.Field.primary_key`"

msgid ":attr:`~django.db.models.CharField.max_length`"
msgstr ":attr:`~django.db.models.CharField.max_length`"

msgid ":attr:`~django.db.models.Field.unique`"
msgstr ":attr:`~django.db.models.Field.unique`"

msgid ":attr:`~django.db.models.Field.blank`"
msgstr ":attr:`~django.db.models.Field.blank`"

msgid ":attr:`~django.db.models.Field.null`"
msgstr ":attr:`~django.db.models.Field.null`"

msgid ":attr:`~django.db.models.Field.db_index`"
msgstr ":attr:`~django.db.models.Field.db_index`"

msgid ""
"``rel``: Used for related fields (like :class:`ForeignKey`). For advanced "
"use only."
msgstr ""
"``rel``: Usado para campos relacionados (como :class:`ForeignKey`). Somente "
"para uso avançado."

msgid ":attr:`~django.db.models.Field.default`"
msgstr ":attr:`~django.db.models.Field.default`"

msgid ":attr:`~django.db.models.Field.editable`"
msgstr ":attr:`~django.db.models.Field.editable`"

msgid ""
"``serialize``: If ``False``, the field will not be serialized when the model "
"is passed to Django's :doc:`serializers </topics/serialization>`. Defaults "
"to ``True``."
msgstr ""
"``serialize``: se ``False``, o campo não será \"serializado\" quando o "
"modelo for passado para os  :doc:`serializadores </topics/serialization>`. "
"Padrão é ``True``."

msgid ":attr:`~django.db.models.Field.unique_for_date`"
msgstr ":attr:`~django.db.models.Field.unique_for_date`"

msgid ":attr:`~django.db.models.Field.unique_for_month`"
msgstr ":attr:`~django.db.models.Field.unique_for_month`"

msgid ":attr:`~django.db.models.Field.unique_for_year`"
msgstr ":attr:`~django.db.models.Field.unique_for_year`"

msgid ":attr:`~django.db.models.Field.choices`"
msgstr ":attr:`~django.db.models.Field.choices`"

msgid ":attr:`~django.db.models.Field.help_text`"
msgstr ":attr:`~django.db.models.Field.help_text`"

msgid ":attr:`~django.db.models.Field.db_column`"
msgstr ":attr:`~django.db.models.Field.db_column`"

msgid ""
":attr:`~django.db.models.Field.db_tablespace`: Only for index creation, if "
"the backend supports :doc:`tablespaces </topics/db/tablespaces>`. You can "
"usually ignore this option."
msgstr ""
":attr:`~django.db.models.Field.db_tablespace`: Somente para a criação de "
"índice, se o \"backend\" suportar :doc:`tablespaces </topics/db/"
"tablespaces>`. Normalmente é possível ignorar essa opção."

msgid ""
":attr:`~django.db.models.Field.auto_created`: ``True`` if the field was "
"automatically created, as for the :class:`~django.db.models.OneToOneField` "
"used by model inheritance. For advanced use only."
msgstr ""
":attr:`~django.db.models.Field.auto_created`: ``True`` se o campo foi criado "
"automaticamente, como para o :class:`~django.db.models.OneToOneField` usado "
"pela herança de modelo. Somente para uso avançado."

msgid ""
"All of the options without an explanation in the above list have the same "
"meaning they do for normal Django fields. See the :doc:`field documentation "
"</ref/models/fields>` for examples and details."
msgstr ""
"Todas as opções sem uma explicação na lista acima tem o mesmo significado "
"que os campos normais do Django. veja a :doc:`field documentation </ref/"
"models/fields>` para exemplos e detalhes."

msgid "Field deconstruction"
msgstr "A descontrução do Campo"

msgid ""
"The counterpoint to writing your ``__init__()`` method is writing the :meth:"
"`~.Field.deconstruct` method. It's used during :doc:`model migrations </"
"topics/migrations>` to tell Django how to take an instance of your new field "
"and reduce it to a serialized form - in particular, what arguments to pass "
"to ``__init__()`` to recreate it."
msgstr ""
"O contraponto para escrever seu método ``__init__()`` é escrever o método :"
"meth:`~.Field.deconstruct`. É usado durante :doc:`model migrations ` para "
"dizer ao Django como pegar uma instância de seu novo campo e reduzi-lo a um "
"formato serializado - em particular, quais argumentos passar para "
"``__init__()`` para recriá-lo."

msgid ""
"If you haven't added any extra options on top of the field you inherited "
"from, then there's no need to write a new ``deconstruct()`` method. If, "
"however, you're changing the arguments passed in ``__init__()`` (like we are "
"in ``HandField``), you'll need to supplement the values being passed."
msgstr ""
"Se não foram adicionadas opções extras ao campo que foi herdado, então não "
"há necessidade de reescrever o método ``deconstruct()``. Por outro lado,  se "
"você mudar os argumentos passados no ``__init__()`` (como em ``HandField``), "
"será preciso complementar os argumentos sendo passados."

msgid ""
"``deconstruct()`` returns a tuple of four items: the field's attribute name, "
"the full import path of the field class, the positional arguments (as a "
"list), and the keyword arguments (as a dict). Note this is different from "
"the ``deconstruct()`` method :ref:`for custom classes <custom-deconstruct-"
"method>` which returns a tuple of three things."
msgstr ""
"``deconstruct()`` retorna uma tupla de quatro itens: o nome do atributo do "
"campo, o caminho de importação completo da classe do campo, os argumentos "
"posicionais (como uma lista) e os argumentos da palavra-chave (como um "
"dict). Note que isso é diferente do método ``deconstruct()`` :ref:`para "
"classes customizadas ` que retorna uma tupla de três coisas."

msgid ""
"As a custom field author, you don't need to care about the first two values; "
"the base ``Field`` class has all the code to work out the field's attribute "
"name and import path. You do, however, have to care about the positional and "
"keyword arguments, as these are likely the things you are changing."
msgstr ""
"Como autor do campo customizado, não é necessário se preocupar sobre os dois "
"primeiros valores; a classe ``Field`` básica tem todo o código para o "
"atributo \"name\" e \"import path\" funcionar. Entretanto, devemos nos "
"preocupar com o argumentos posicionais e os nomeados, já que estes são as "
"alterações que fizemos"

msgid ""
"For example, in our ``HandField`` class we're always forcibly setting "
"max_length in ``__init__()``. The ``deconstruct()`` method on the base "
"``Field`` class will see this and try to return it in the keyword arguments; "
"thus, we can drop it from the keyword arguments for readability::"
msgstr ""
"Por exemplo, na nossa classe \"HandField\" sempre somos forçados a definir "
"max_length em \" __init __ () \". O método \"deconstruct()\"  da classe base "
"\"Field\" ierá tentar retornar os argumentos da palavra-chave; assim, "
"podemos lançar a partir dos argumentos palavras-chaves para facilitar a "
"leitura ::"

msgid ""
"If you add a new keyword argument, you need to write code in "
"``deconstruct()`` that puts its value into ``kwargs`` yourself. You should "
"also omit the value from ``kwargs`` when it isn't necessary to reconstruct "
"the state of the field, such as when the default value is being used::"
msgstr ""
"Se você adicionar um novo argumento chave, você vai precisar escrever código "
"em ``deconstruct()`` que põe o valor dentro de ``kwargs`` você mesmo. Você "
"deveria também omitir o valor de ``kwargs`` quando ele não é necessário para "
"reconstruir o estado do campo, como quando se usa o valor padrão::"

msgid ""
"More complex examples are beyond the scope of this document, but remember - "
"for any configuration of your Field instance, ``deconstruct()`` must return "
"arguments that you can pass to ``__init__`` to reconstruct that state."
msgstr ""
"Exemplos mais complexos estão além do escopo deste documento, mas lembre - "
"para qualquer configuração da sua instância de Field, o ``deconstruct()`` "
"tem que retornar argumentos que se possa passar para o ``__init__`` para "
"reconstruir aquele estado."

msgid ""
"Pay extra attention if you set new default values for arguments in the "
"``Field`` superclass; you want to make sure they're always included, rather "
"than disappearing if they take on the old default value."
msgstr ""
"Preste atenção extra se foram definidos novos valores padrão para argumentos "
"na superclasse do ``Field``, tem que ter certeza de que estes são sempre "
"incluídos, ao invés de desaparecer se recebem o valor antigo."

msgid ""
"In addition, try to avoid returning values as positional arguments; where "
"possible, return values as keyword arguments for maximum future "
"compatibility. If you change the names of things more often than their "
"position in the constructor's argument list, you might prefer positional, "
"but bear in mind that people will be reconstructing your field from the "
"serialized version for quite a while (possibly years), depending how long "
"your migrations live for."
msgstr ""
"Além disso, evite retornar valores como argumentos posicionais; sempre que "
"possível, retorne valores como argumentos de palavra-chave para máxima "
"compatibilidade futura. Se você alterar os nomes das coisas com mais "
"frequência do que sua posição na lista de argumentos do construtor, talvez "
"prefira posicional, mas tenha em mente que as pessoas estarão reconstruindo "
"seu campo a partir da versão serializada por um bom tempo (possivelmente "
"anos), dependendo de quanto tempo suas migrações vivem."

msgid ""
"You can see the results of deconstruction by looking in migrations that "
"include the field, and you can test deconstruction in unit tests by "
"deconstructing and reconstructing the field::"
msgstr ""
"Você pode ver os resultados da desconstrução observando as migrações que "
"incluem o campo e pode testar a desconstrução em testes de unidade "
"desconstruindo e reconstruindo o campo::"

msgid "Field attributes not affecting database column definition"
msgstr ""
"Atributos de campo que não afetam a definição da coluna do banco de dados"

msgid ""
"You can override ``Field.non_db_attrs`` to customize attributes of a field "
"that don't affect a column definition. It's used during model migrations to "
"detect no-op ``AlterField`` operations."
msgstr ""
"Você pode substituir ``Field.non_db_attrs`` para personalizar os atributos "
"de um campo que não afetam a definição de uma coluna. É usado durante as "
"migrações do modelo para detectar operações ``AlterField`` no-op."

msgid "For example::"
msgstr "Por exemplo::"

msgid "Changing a custom field's base class"
msgstr "Alterando a classe básica de um campo personalizado"

msgid ""
"You can't change the base class of a custom field because Django won't "
"detect the change and make a migration for it. For example, if you start "
"with::"
msgstr ""
"Você não pode alterar a classe base de um campo personalizado porque o "
"Django não irá detectar a mudança, e não irá fazer uma migração para ele. "
"Por exemplo, se você começar com::"

msgid ""
"and then decide that you want to use ``TextField`` instead, you can't change "
"the subclass like this::"
msgstr ""
"e decidir que quer usar um ``TextFeld`` no lugar, você não pode mudar a "
"classe base como estea aqui::"

msgid ""
"Instead, you must create a new custom field class and update your models to "
"reference it::"
msgstr ""
"Ao invés, você deve criar uma nova classe de campo personalizado e atualizar "
"seu modelo para referenciá-la."

msgid ""
"As discussed in :ref:`removing fields <migrations-removing-model-fields>`, "
"you must retain the original ``CustomCharField`` class as long as you have "
"migrations that reference it."
msgstr ""
"Como discutido em :ref:`removendo campos <migrations-removing-model-"
"fields>`, você deve manter a classe ``CustomCharField`` original enquanto "
"tiver migrações que façam referência a ela."

msgid "Documenting your custom field"
msgstr "Documentando o seu campo customizado"

msgid ""
"As always, you should document your field type, so users will know what it "
"is. In addition to providing a docstring for it, which is useful for "
"developers, you can also allow users of the admin app to see a short "
"description of the field type via the :doc:`django.contrib.admindocs </ref/"
"contrib/admin/admindocs>` application. To do this provide descriptive text "
"in a :attr:`~Field.description` class attribute of your custom field. In the "
"above example, the description displayed by the ``admindocs`` application "
"for a ``HandField`` will be 'A hand of cards (bridge style)'."
msgstr ""
"Como sempre, você deve documentar seu tipo de campo, para que os usuários "
"saibam o que é. Além de fornecer uma docstring para ele, que é útil para "
"desenvolvedores, você também pode permitir que os usuários do aplicativo "
"admin vejam uma breve descrição do tipo de campo por meio do aplicativo :doc:"
"`django.contrib.admindocs `. Para fazer isso, forneça um texto descritivo em "
"um atributo de classe :attr:`~Field.description` de seu campo personalizado. "
"No exemplo acima, a descrição exibida pelo aplicativo ``admindocs`` para um "
"``HandField`` será 'Uma mão de cartas (estilo bridge)'."

msgid ""
"In the :mod:`django.contrib.admindocs` display, the field description is "
"interpolated with ``field.__dict__`` which allows the description to "
"incorporate arguments of the field. For example, the description for :class:"
"`~django.db.models.CharField` is::"
msgstr ""
"No display do :mod:`django.contrib.admindocs`, a descrição do campo é "
"interpolada com ``field.__dict__`` o qual habilita a descrição incorporar "
"argumentos do campo. Por exemplo, a descrição para :class:`~django.db.models."
"CharField` é::"

msgid "Useful methods"
msgstr "Métodos úteis"

msgid ""
"Once you've created your :class:`~django.db.models.Field` subclass, you "
"might consider overriding a few standard methods, depending on your field's "
"behavior. The list of methods below is in approximately decreasing order of "
"importance, so start from the top."
msgstr ""
"Uma vez criada a subclasse de :class:`~django.db.models.Field`, você deve "
"considerar sobrescrever um poucos métodos, dependendo do comportamento do "
"seu campo. A lista de métodos abaixo está mais ou menos em uma ordem "
"decrescente de importância, então comece do topo."

msgid "Custom database types"
msgstr "Tipos de banco de dados personalizados"

msgid ""
"Say you've created a PostgreSQL custom type called ``mytype``. You can "
"subclass ``Field`` and implement the :meth:`~Field.db_type` method, like so::"
msgstr ""
"Vamos dizer que você tenha criado um tipo personalizado para o PostgreSQL "
"chamado ``mytype``. Você pode herdar de ``Field`` e implementar o método :"
"meth:`~Field.db_type`, como a::"

msgid ""
"Once you have ``MytypeField``, you can use it in any model, just like any "
"other ``Field`` type::"
msgstr ""
"Uma vez que tenha ``MyTypeField``, pode usá-lo em qualquer modelo, tal como "
"qualquer outro tipo ``Field``::"

msgid ""
"If you aim to build a database-agnostic application, you should account for "
"differences in database column types. For example, the date/time column type "
"in PostgreSQL is called ``timestamp``, while the same column in MySQL is "
"called ``datetime``. You can handle this in a :meth:`~Field.db_type` method "
"by checking the ``connection.vendor`` attribute. Current built-in vendor "
"names are: ``sqlite``, ``postgresql``, ``mysql``, and ``oracle``."
msgstr ""
"Se você deseja criar um aplicativo independente de banco de dados, deve "
"considerar as diferenças nos tipos de colunas. Por exemplo, o tipo de coluna "
"de data/hora no PostgreSQL é chamado \"timestamp\", enquanto a mesma coluna "
"no MySQL é chamada \"datetime\". Você pode lidar com isso em um método :meth:"
"`~Field.db_type`  verificando o atributo \"connection.vendor\". Os "
"fornecedores integrados atuais são: \"sqlite\", \"postgresql\", \"mysql\" e "
"\"oracle\"."

msgid ""
"The :meth:`~Field.db_type` and :meth:`~Field.rel_db_type` methods are called "
"by Django when the framework constructs the ``CREATE TABLE`` statements for "
"your application -- that is, when you first create your tables. The methods "
"are also called when constructing a ``WHERE`` clause that includes the model "
"field -- that is, when you retrieve data using QuerySet methods like "
"``get()``, ``filter()``, and ``exclude()`` and have the model field as an "
"argument. They are not called at any other time, so it can afford to execute "
"slightly complex code, such as the ``connection.settings_dict`` check in the "
"above example."
msgstr ""
"Os métodos :meth:`~Field.db_type` e :meth:`~Field.rel_db_type` são chamados "
"pelo Django quando o framework constrói comandos ``CREATE TABLE`` para a sua "
"aplicação --  isto é, quando você cria as tabelas pela primeira vez. Os "
"métodos também são chamados quando constróem cláusulas ``WHERE`` que incluem "
"um campo de modelo -- isto é, quando você retorna dados usando métodos "
"QuerySet como ``get()``, ``filter()``, e ``exclude()`` e tem um campo de "
"modelo como argumento.  Eles não são chamados em nenhum outro momento, "
"portanto podem executar códigos complexos, como a verificação ``connection."
"settings_dict`` no exemplo acima."

msgid ""
"Some database column types accept parameters, such as ``CHAR(25)``, where "
"the parameter ``25`` represents the maximum column length. In cases like "
"these, it's more flexible if the parameter is specified in the model rather "
"than being hard-coded in the ``db_type()`` method. For example, it wouldn't "
"make much sense to have a ``CharMaxlength25Field``, shown here::"
msgstr ""
"Alguns tipos de coluna do banco de dados aceitam parâmetros, como "
"``CHAR(25)``, onde o parâmetro ``25`` representa o tamanho máximo da coluna. "
"Em casos como este, é mais flexível se o parâmetro for especificado no "
"modelo ao invés de ser hard-coded no método ``db_type()``. Por exemplo, não "
"faria muito sentido  ter  ``CharMaxlength25Field``, mostrado aqui::"

msgid ""
"The better way of doing this would be to make the parameter specifiable at "
"run time -- i.e., when the class is instantiated. To do that, implement "
"``Field.__init__()``, like so::"
msgstr ""
"O melhor jeito de fazer isso seria fazer o parâmetro ser especificado em "
"tempo de execução -- isto é, quando a classe é instanciada. Para fazer isso, "
"basta implementar ``Field.__init__()``, como em::"

msgid ""
"Finally, if your column requires truly complex SQL setup, return ``None`` "
"from :meth:`.db_type`. This will cause Django's SQL creation code to skip "
"over this field. You are then responsible for creating the column in the "
"right table in some other way, but this gives you a way to tell Django to "
"get out of the way."
msgstr ""
"Finalmente, se sua coluna requer uma configuração SQL realmente complexa, "
"retorne ``None`` do :meth:`.db_type`. Isso irá fazer que o código de criação "
"de SQL do Django ignore este campo. Então você é responsável por criar a "
"coluna na tabela correta de alguma outra maneira, mas isso é uma maneira de "
"dizer ao Django para sair do caminho."

msgid ""
"The :meth:`~Field.rel_db_type` method is called by fields such as "
"``ForeignKey`` and ``OneToOneField`` that point to another field to "
"determine their database column data types. For example, if you have an "
"``UnsignedAutoField``, you also need the foreign keys that point to that "
"field to use the same data type::"
msgstr ""
"O método :meth:`~Field.rel_db_type` é chamado por campos como o  "
"``ForeignKey`` e o ``OneToOneField`` que apontam para outros campos para "
"determinar o tipo da sua coluna de banco de dados. Por exemplo, se tiver um "
"``UnsignedAutoField``, você também precisa de chaves estrangeiras que "
"apontam para aquele campo para usar o mesmo tipo de dado::"

msgid "Converting values to Python objects"
msgstr "Convertendo valores para objetos Python"

msgid ""
"If your custom :class:`~Field` class deals with data structures that are "
"more complex than strings, dates, integers, or floats, then you may need to "
"override :meth:`~Field.from_db_value` and :meth:`~Field.to_python`."
msgstr ""
"Se sua classe customizada de :class:`~Field` lida com estruturas de dados "
"mais complexas que  strings, datas, inteiros, or floats, então talvez "
"precise sobrescrever o :meth:`~Field.from_db_value` e :meth:`~Field."
"to_python`."

msgid ""
"If present for the field subclass, ``from_db_value()`` will be called in all "
"circumstances when the data is loaded from the database, including in "
"aggregates and :meth:`~django.db.models.query.QuerySet.values` calls."
msgstr ""
"Se presente para a subclasse do campo, ``from_db_value()`` será chamado em "
"todas as circunstâncias quando dados são lidos do banco de dados, incluindo "
"em agregacões e chamadas do :meth:`~django.db.models.query.QuerySet.values` ."

msgid ""
"``to_python()`` is called by deserialization and during the :meth:`~django."
"db.models.Model.clean` method used from forms."
msgstr ""
"o ``to_python()`` é chamado pela deserialização e durante o método :meth:"
"`~django.db.models.Model.clean` usado nos forms."

msgid ""
"As a general rule, ``to_python()`` should deal gracefully with any of the "
"following arguments:"
msgstr ""
"Como regra geral, ``to_python()``deve lidar tranquilamente com qualquer dos "
"seguintes argumentos:"

msgid ""
"An instance of the correct type (e.g., ``Hand`` in our ongoing example)."
msgstr ""
"Uma instância do tipo correto (ex., ``Hand``no nosso exemplo corrente)."

msgid "A string"
msgstr "Uma string"

msgid "``None`` (if the field allows ``null=True``)"
msgstr "``None``(se o campo permitir ``null=True``)"

msgid ""
"In our ``HandField`` class, we're storing the data as a ``VARCHAR`` field in "
"the database, so we need to be able to process strings and ``None`` in the "
"``from_db_value()``. In ``to_python()``, we need to also handle ``Hand`` "
"instances::"
msgstr ""
"Na nossa classe ``HandField``, estamos armazendo os dados como campo VARCHAR "
"no banco de dados, então precisamos ser capazes de processar strings e "
"``None`` no ``from_db_value()``. No ``to_python()``, precisamos também lidar "
"com instâncias de ``Hand``::"

msgid ""
"Notice that we always return a ``Hand`` instance from these methods. That's "
"the Python object type we want to store in the model's attribute."
msgstr ""
"Perceba que sempre retornamos uma instância destes métodos. Este é o tipo do "
"objeto Python que queremos armazenar no atributo do modelo."

msgid ""
"For ``to_python()``, if anything goes wrong during value conversion, you "
"should raise a :exc:`~django.core.exceptions.ValidationError` exception."
msgstr ""
"Para ``to_python()``, se qualquer coisa der errado durante a conversão do "
"valor, deve-se gerar a exceção :exc:`~django.core.exceptions."
"ValidationError`."

msgid "Converting Python objects to query values"
msgstr "Convertendo objetos Python para valores em queries"

msgid ""
"Since using a database requires conversion in both ways, if you override :"
"meth:`~Field.from_db_value` you also have to override :meth:`~Field."
"get_prep_value` to convert Python objects back to query values."
msgstr ""
"Uma vez que usar um banco de dados requer conversão em ambos os sentidos, se "
"você sobrescrever :meth:`~Field.to_python` é necessário sobrescrever também :"
"meth:`~Field.get_prep_value` para converter os objetos Python de novo em "
"valores de query."

msgid ""
"If your custom field uses the ``CHAR``, ``VARCHAR`` or ``TEXT`` types for "
"MySQL, you must make sure that :meth:`.get_prep_value` always returns a "
"string type. MySQL performs flexible and unexpected matching when a query is "
"performed on these types and the provided value is an integer, which can "
"cause queries to include unexpected objects in their results. This problem "
"cannot occur if you always return a string type from :meth:`.get_prep_value`."
msgstr ""
"Caso seu campo personalizado use os tipos ``CHAR``, ``VARCHAR`` or ``TEXT`` "
"parao MySQL, assegure que o :meth:`.get_prep_value` sempre retorne um tipo "
"string. O MySQL responde a pesquisa de maneira variável e inesperada quando "
"uma query é executada com estes tipos e o valor fornecido é um inteiro, o "
"que pode resultar em queries qeu contenham objetos inesperados nos seus "
"resultados. Este problema não pode ocorrer se sempre retornar um tipo string "
"do :meth:`.get_prep_value`."

msgid "Converting query values to database values"
msgstr "Convertendo valores de queries para valores de banco de dados"

msgid ""
"Some data types (for example, dates) need to be in a specific format before "
"they can be used by a database backend. :meth:`~Field.get_db_prep_value` is "
"the method where those conversions should be made. The specific connection "
"that will be used for the query is passed as the ``connection`` parameter. "
"This allows you to use backend-specific conversion logic if it is required."
msgstr ""
"Alguns tipos de dados (por exemplo datas) precisam estar em um formato "
"específico antes deles poderem ser usados por um \"backend\" de banco de "
"dados. O :meth:`~Field.get_db_prep_value` é um método onde estas conversões "
"devem ser feitas. A conexão específica que será usada para a query é passada "
"pelo parâmetro ``connection``. Isso lhe possibilita usar a lógica de "
"conversão espeçifica para um backend se isso for necessário."

msgid ""
"For example, Django uses the following method for its :class:`BinaryField`::"
msgstr ""
"Por exemplo, o Django usa o seguinte método para isso :class:`BinaryField`::"

msgid ""
"In case your custom field needs a special conversion when being saved that "
"is not the same as the conversion used for normal query parameters, you can "
"override :meth:`~Field.get_db_prep_save`."
msgstr ""
"No caso do seu campo personalizado precisar de uma conversão especial quando "
"for salvo e isso não é o mesmo que a conversão usada para parâmetros de "
"query, você pode sobrescrever :meth:`~Field.get_db_prep_save`."

msgid "Preprocessing values before saving"
msgstr "Processando valores antes de salvar"

msgid ""
"If you want to preprocess the value just before saving, you can use :meth:"
"`~Field.pre_save`. For example, Django's :class:`~django.db.models."
"DateTimeField` uses this method to set the attribute correctly in the case "
"of :attr:`~django.db.models.DateField.auto_now` or :attr:`~django.db.models."
"DateField.auto_now_add`."
msgstr ""
"Caso queira processar o valor logo antes de salvar, pode-se usar :meth:"
"`~Field.pre_save`. Por exemplo, o :class:`~django.db.models.DateTimeField` "
"do Django usa este método para definir o atributo corretamente no caso de :"
"attr:`~django.db.models.DateField.auto_now`  ou :attr:`~django.db.models."
"DateField.auto_now_add`."

msgid ""
"If you do override this method, you must return the value of the attribute "
"at the end. You should also update the model's attribute if you make any "
"changes to the value so that code holding references to the model will "
"always see the correct value."
msgstr ""
"Caso sobrescreva este método, é necessário retornar o valor do atributo no "
"fim. Deve-se também atualizar o atributo do modelo caso tenham sido feito "
"mudanças no valor, de modo que que o código que mantém as referências ao "
"modelo sempre veja o valor correto."

msgid "Specifying the form field for a model field"
msgstr "Especificando o campo de um formulário para o campo de um modelo."

msgid ""
"To customize the form field used by :class:`~django.forms.ModelForm`, you "
"can override :meth:`~Field.formfield`."
msgstr ""
"Para personalizar o campo de formulário usado pelo :class:`~django.forms."
"ModelForm`, você pode sobrescrever :meth:`~Field.formfield`."

msgid ""
"The form field class can be specified via the ``form_class`` and "
"``choices_form_class`` arguments; the latter is used if the field has "
"choices specified, the former otherwise. If these arguments are not "
"provided, :class:`~django.forms.CharField` or :class:`~django.forms."
"TypedChoiceField` will be used."
msgstr ""
"A classe do campo de formulário pode ser especificada via o ``form_class`` e "
"os argumentos de  ``choices_form_class``; o último é especificado se o campo "
"tiver opções (choices) especificadas, do contrário o primeiro. Se estes "
"argumentos não são fornecidos, será usada a :class:`~django.forms.CharField` "
"ou :class:`~django.forms.TypedChoiceField`."

msgid ""
"All of the ``kwargs`` dictionary is passed directly to the form field's "
"``__init__()`` method. Normally, all you need to do is set up a good default "
"for the ``form_class`` (and maybe ``choices_form_class``) argument and then "
"delegate further handling to the parent class. This might require you to "
"write a custom form field (and even a form widget). See the :doc:`forms "
"documentation </topics/forms/index>` for information about this."
msgstr ""
"Todos os dicionários ``kwargs`` é passado diretamente para o método "
"`__init__()`` do campo do formulário. Normalmente, tudo o que você precisa "
"fazer é definir um bom padrão para o argumento do  ``form_class`` (e talvez "
"``choices_form_class``) e delegar futuras manipulações para a classe pai. "
"Isso talvez requeira que seja escrito um campo de form personalizado (e "
"mesmo o widget de formulário). Veja o :doc:`forms documentation </topics/"
"forms/index>` para informações sobre isso."

msgid ""
"Continuing our ongoing example, we can write the :meth:`~Field.formfield` "
"method as::"
msgstr ""
"Continuando nosso exemplo em andamento, podemos escrever o método :meth:"
"`~Field.formfield`  como::"

msgid ""
"This assumes we've imported a ``MyFormField`` field class (which has its own "
"default widget). This document doesn't cover the details of writing custom "
"form fields."
msgstr ""
"Isso assume que importamos uma classe de campo ``MyModelField`` (o qual tem "
"seu próprio widget padrão). Este documento não cobre os detalhes de escrever "
"um campo de formulário personalizado."

msgid "Emulating built-in field types"
msgstr "Emulando tipos de campos internos. "

msgid ""
"If you have created a :meth:`.db_type` method, you don't need to worry "
"about :meth:`.get_internal_type` -- it won't be used much. Sometimes, "
"though, your database storage is similar in type to some other field, so you "
"can use that other field's logic to create the right column."
msgstr ""
"Se você criou um método :meth:`.db_type`, não precisa se preocupar sobre  :"
"meth:`.get_internal_type` -- isso não será usado muito. As vezes, porém, seu "
"armazenamento no banco de dados é similar em tipo a outro campo, então você "
"pode usar a lógica deste outro campo para criar a coluna correta."

msgid ""
"No matter which database backend we are using, this will mean that :djadmin:"
"`migrate` and other SQL commands create the right column type for storing a "
"string."
msgstr ""
"Não importa qual backend de banco de dados que esteja sendo usado, isso quer "
"dizer que  o :djadmin:`migrate` e outros comandos SQL criam o tipo de coluna "
"correto para armazenar uma string."

msgid ""
"If :meth:`.get_internal_type` returns a string that is not known to Django "
"for the database backend you are using -- that is, it doesn't appear in "
"``django.db.backends.<db_name>.base.DatabaseWrapper.data_types`` -- the "
"string will still be used by the serializer, but the default :meth:`~Field."
"db_type` method will return ``None``. See the documentation of :meth:`~Field."
"db_type` for reasons why this might be useful. Putting a descriptive string "
"in as the type of the field for the serializer is a useful idea if you're "
"ever going to be using the serializer output in some other place, outside of "
"Django."
msgstr ""
"Se o :meth:`.get_internal_type`  retorna uma string que não é conhecida para "
"o Django para o backend de banco de dados que está sendo usado -- que é, ele "
"não aparece no  ``django.db.backends.<db_name>.base.DatabaseWrapper."
"data_types`` -- a string ainda será usada pelo serializador, mas o método "
"padrão :meth:`~Field.db_type` retornará ``None``. Veja a documentação do :"
"meth:`~Field.db_type` pelas razões pelas quais este talvez seja útil. "

msgid "Converting field data for serialization"
msgstr "Convertendo dado do campo para serialização"

msgid ""
"To customize how the values are serialized by a serializer, you can "
"override :meth:`~Field.value_to_string`. Using :meth:`~Field."
"value_from_object` is the best way to get the field's value prior to "
"serialization. For example, since ``HandField`` uses strings for its data "
"storage anyway, we can reuse some existing conversion code::"
msgstr ""
"Para personalizar como os valores são serializados por um serializador, você "
"pode sobrescrever :meth:'~Field.value_to_string'. Utilizando :meth:'~Field."
"value_from_object' é a melhor forma para obter o valor dos campos antes da "
"serialização. Por exemplo, visto que \"HandField\" utiliza strings para "
"armazenar dados, nós podemos reutilizar algum código de conversão existente::"

msgid "Some general advice"
msgstr "Alguns avisos gerais"

msgid ""
"Writing a custom field can be a tricky process, particularly if you're doing "
"complex conversions between your Python types and your database and "
"serialization formats. Here are a couple of tips to make things go more "
"smoothly:"
msgstr ""
"Escrever um um campo personalizado pode ser um um pouco complicado, "
"particularmente se estiver fazendo conversões complexas entre tipos Python e "
"o banco de dados e formatos de serialização. Aqui algumas dicas par fazer as "
"coisas mais tranquilas."

msgid ""
"Look at the existing Django fields (in :source:`django/db/models/fields/"
"__init__.py`) for inspiration. Try to find a field that's similar to what "
"you want and extend it a little bit, instead of creating an entirely new "
"field from scratch."
msgstr ""

msgid ""
"Put a ``__str__()`` method on the class you're wrapping up as a field. There "
"are a lot of places where the default behavior of the field code is to call "
"``str()`` on the value. (In our examples in this document, ``value`` would "
"be a ``Hand`` instance, not a ``HandField``). So if your ``__str__()`` "
"method automatically converts to the string form of your Python object, you "
"can save yourself a lot of work."
msgstr ""
"Coloque o método ``__str__()`` na classe que você está utilizando para "
"envelopar o campo. Em vários lugares o comportamento padrão do código do "
"campo é chamar ``str()``. (Em nossos exemplos neste documento, ``value`` "
"seria uma instância de ``Hand`` e não de ``HandField``). Então se o método "
"``__str__()`` da sua classe converter o objeto para o formato de texto, você "
"poderá poupar bastante trabalho."

msgid "Writing a ``FileField`` subclass"
msgstr "Escrevendo uma subclasse  ``FileField``"

msgid ""
"In addition to the above methods, fields that deal with files have a few "
"other special requirements which must be taken into account. The majority of "
"the mechanics provided by ``FileField``, such as controlling database "
"storage and retrieval, can remain unchanged, leaving subclasses to deal with "
"the challenge of supporting a particular type of file."
msgstr ""
"Além dos métodos acima, campos que lidam com arquivos tem alguns outros "
"requerimentos especiais que devem ser levados em conta. A maioria dos "
"mecanismos fornecidos pelo ``FileField`, como controlar o armazenamento e "
"leitura na base de dados, podem permanecer inalterados, deixando as "
"subclasses lidarem com o desafio de dar suporte a um tipo de arquivo "
"particular."

msgid ""
"Django provides a ``File`` class, which is used as a proxy to the file's "
"contents and operations. This can be subclassed to customize how the file is "
"accessed, and what methods are available. It lives at ``django.db.models."
"fields.files``, and its default behavior is explained in the :doc:`file "
"documentation </ref/files/file>`."
msgstr ""
"O Django fornece uma classe ``File``, a qual é usada como um proxy para "
"conteúdos e operações de arquivos . Isso pode ser herdado para customizar "
"como o arquivo é acessado, e quais métodos estão disponíveis. Isso está em "
"``django.db.models.fields.files``, e seu comportamento padrão é explicado "
"no :doc:`arquivo documentação</ref/files/file>`."

msgid ""
"Once a subclass of ``File`` is created, the new ``FileField`` subclass must "
"be told to use it. To do so, assign the new ``File`` subclass to the special "
"``attr_class`` attribute of the ``FileField`` subclass."
msgstr ""

msgid "A few suggestions"
msgstr "Algumas sugestões"

msgid ""
"In addition to the above details, there are a few guidelines which can "
"greatly improve the efficiency and readability of the field's code."
msgstr ""
"Além dos detalhes acima, tem algumas orientações as quais podem melhorar "
"muito a eficiência e a legibilidade do código do campo."

msgid ""
"The source for Django's own ``ImageField`` (in :source:`django/db/models/"
"fields/files.py`) is a great example of how to subclass ``FileField`` to "
"support a particular type of file, as it incorporates all of the techniques "
"described above."
msgstr ""

msgid ""
"Cache file attributes wherever possible. Since files may be stored in remote "
"storage systems, retrieving them may cost extra time, or even money, that "
"isn't always necessary. Once a file is retrieved to obtain some data about "
"its content, cache as much of that data as possible to reduce the number of "
"times the file must be retrieved on subsequent calls for that information."
msgstr ""
"Faça o cache dos atributos do arquivo sempre que possível. Uma vez que é "
"possível que arquivos sejam armazenados em sistemas de armazenamento "
"remotos, recuperá-los talvez requeira tempo extra, ou mesmo dinheiro, que "
"não é sempre necessário. Uma vez que o arquivo é recuperado para obter "
"alguns dados sobre seu conteúdo, faça o cache de dados o quanto possível "
"para reduzir o número de vezes que o arquivo deve ser recuperado em chamadas "
"subsequentes para aquela informação. "

msgid "How to implement a custom template backend"
msgstr ""

msgid "Custom backends"
msgstr ""

msgid ""
"Here's how to implement a custom template backend in order to use another "
"template system. A template backend is a class that inherits ``django."
"template.backends.base.BaseEngine``. It must implement ``get_template()`` "
"and optionally ``from_string()``. Here's an example for a fictional "
"``foobar`` template library::"
msgstr ""

msgid "See `DEP 182`_ for more information."
msgstr ""

msgid "Debug integration for custom engines"
msgstr ""

msgid ""
"The Django debug page has hooks to provide detailed information when a "
"template error arises. Custom template engines can use these hooks to "
"enhance the traceback information that appears to users. The following hooks "
"are available:"
msgstr ""

msgid "Template postmortem"
msgstr ""

msgid ""
"The postmortem appears when :exc:`~django.template.TemplateDoesNotExist` is "
"raised. It lists the template engines and loaders that were used when trying "
"to find a given template. For example, if two Django engines are configured, "
"the postmortem will appear like:"
msgstr ""

msgid ""
"Custom engines can populate the postmortem by passing the ``backend`` and "
"``tried`` arguments when raising :exc:`~django.template."
"TemplateDoesNotExist`. Backends that use the postmortem :ref:`should specify "
"an origin <template-origin-api>` on the template object."
msgstr ""

msgid "Contextual line information"
msgstr ""

msgid ""
"If an error happens during template parsing or rendering, Django can display "
"the line the error happened on. For example:"
msgstr ""

msgid ""
"Custom engines can populate this information by setting a ``template_debug`` "
"attribute on exceptions raised during parsing and rendering. This attribute "
"is a :class:`dict` with the following values:"
msgstr ""

msgid "``'name'``: The name of the template in which the exception occurred."
msgstr ""

msgid "``'message'``: The exception message."
msgstr ""

msgid ""
"``'source_lines'``: The lines before, after, and including the line the "
"exception occurred on. This is for context, so it shouldn't contain more "
"than 20 lines or so."
msgstr ""

msgid "``'line'``: The line number on which the exception occurred."
msgstr ""

msgid ""
"``'before'``: The content on the error line before the token that raised the "
"error."
msgstr ""

msgid "``'during'``: The token that raised the error."
msgstr ""

msgid ""
"``'after'``: The content on the error line after the token that raised the "
"error."
msgstr ""

msgid "``'total'``: The number of lines in ``source_lines``."
msgstr ""

msgid "``'top'``: The line number where ``source_lines`` starts."
msgstr ""

msgid "``'bottom'``: The line number where ``source_lines`` ends."
msgstr ""

msgid "Given the above template error, ``template_debug`` would look like::"
msgstr ""

msgid "Origin API and 3rd-party integration"
msgstr ""

msgid ""
"Django templates have an :class:`~django.template.base.Origin` object "
"available through the ``template.origin`` attribute. This enables debug "
"information to be displayed in the :ref:`template postmortem <template-"
"postmortem>`, as well as in 3rd-party libraries, like the `Django Debug "
"Toolbar`_."
msgstr ""

msgid ""
"Custom engines can provide their own ``template.origin`` information by "
"creating an object that specifies the following attributes:"
msgstr ""

msgid "``'name'``: The full path to the template."
msgstr ""

msgid ""
"``'template_name'``: The relative path to the template as passed into the "
"template loading methods."
msgstr ""

msgid ""
"``'loader_name'``: An optional string identifying the function or class used "
"to load the template, e.g. ``django.template.loaders.filesystem.Loader``."
msgstr ""

msgid "How to create custom template tags and filters"
msgstr ""

msgid ""
"Django's template language comes with a wide variety of :doc:`built-in tags "
"and filters </ref/templates/builtins>` designed to address the presentation "
"logic needs of your application. Nevertheless, you may find yourself needing "
"functionality that is not covered by the core set of template primitives. "
"You can extend the template engine by defining custom tags and filters using "
"Python, and then make them available to your templates using the :ttag:`{% "
"load %}<load>` tag."
msgstr ""
"A linguagem de templates do Django vem com uma variedade de :doc:`built-in "
"tags e filtros </ref/templates/builtins>` projetados para atender as "
"necessidades da lógica de apresentação da sua aplicação. Mesmo assim, talvez "
"precise de uma funcionalidade que não está coberta pelo conjunto das "
"primitivas do template. É possível estender o engine de templates definindo "
"tags e filtros customizados usando Python, e então torná-los disponíveis "
"para seus templates usando a tag :ttag:`{% load %}<load>` ."

msgid "Code layout"
msgstr "Layout do código"

msgid ""
"The most common place to specify custom template tags and filters is inside "
"a Django app. If they relate to an existing app, it makes sense to bundle "
"them there; otherwise, they can be added to a new app. When a Django app is "
"added to :setting:`INSTALLED_APPS`, any tags it defines in the conventional "
"location described below are automatically made available to load within "
"templates."
msgstr ""
"O lugar mais comum para especificar tags e filtros customizados é dentro de "
"uma app Django. Se eles estão relacionados a uma app existente, faz sentido "
"empacotá-los ali; se não eles podem ser adicionados a uma nova app. Quando "
"uma app Django é adicionada ao :setting:`INSTALLED_APPS`, qualquer tag que "
"estiver definida em um local convencional descrito abaixo ficam "
"automaticamente disponíveis para serem carregadas dentro dos templates."

msgid ""
"The app should contain a ``templatetags`` directory, at the same level as "
"``models.py``, ``views.py``, etc. If this doesn't already exist, create it - "
"don't forget the ``__init__.py`` file to ensure the directory is treated as "
"a Python package."
msgstr ""
"A app deve conter um diretório ``templatetags``, no mesmo nível que o "
"``models.py`, ``views.py`, etc. Se este ainda não existe, crie - não esqueça "
"o arquivo ``__init__.py`` para ter certeza que o diretório é tratado como um "
"pacote Python."

msgid "Development server won't automatically restart"
msgstr "O servidor de desenvolvimento não irá reiniciar automaticamente"

msgid ""
"After adding the ``templatetags``  module, you will need to restart your "
"server before you can use the tags or filters in templates."
msgstr ""
"Depois de adicionar o módulo ``templatags``, será preciso reiniciar o "
"servidor antes que seja possível utilizar as tags ou filtros nos tempates."

msgid ""
"Your custom tags and filters will live in a module inside the "
"``templatetags`` directory. The name of the module file is the name you'll "
"use to load the tags later, so be careful to pick a name that won't clash "
"with custom tags and filters in another app."
msgstr ""
"As tags e filtros personalizados irão ficar em um módulo dentro do diretório "
"``templatetags`. O nome do arquivo do módulo é o nome que será usado para "
"carregar as tags mais tarde, então tenha cuidado em escolher um nome que não "
"conflite com tags e filtros customizados de outras apps."

msgid ""
"For example, if your custom tags/filters are in a file called ``poll_extras."
"py``, your app layout might look like this:"
msgstr ""

msgid "And in your template you would use the following:"
msgstr "E no seu template você deveria usar o seguinte:"

msgid ""
"The app that contains the custom tags must be in :setting:`INSTALLED_APPS` "
"in order for the :ttag:`{% load %}<load>` tag to work. This is a security "
"feature: It allows you to host Python code for many template libraries on a "
"single host machine without enabling access to all of them for every Django "
"installation."
msgstr ""
"A app que contém a tag personalizada deve estar em :setting:`INSTALLED_APPS` "
"para que a tag :ttag:`{% load %}<load>` funcione. Essa é uma característica "
"de segurança: isso permite servir código Python para muitas bibliotecas de "
"template em uma única máquina servidora sem habilitar acesso cada instalação "
"de Django."

msgid ""
"There's no limit on how many modules you put in the ``templatetags`` "
"package. Just keep in mind that a :ttag:`{% load %}<load>` statement will "
"load tags/filters for the given Python module name, not the name of the app."
msgstr ""
"Não há limites de quantos módulos são colocados dentro do pacote "
"``templatetags``. Apenas mantenha em mente que um comando :ttag:`{% load %}"
"<load>` irá carregar tags/filters para o nome do módulo Python, e não o nome "
"da app."

msgid ""
"To be a valid tag library, the module must contain a module-level variable "
"named ``register`` that is a ``template.Library`` instance, in which all the "
"tags and filters are registered. So, near the top of your module, put the "
"following::"
msgstr ""
"Para ser uma biblioteca de tags válida, o módulo deve conter uma variável do "
"nível do módulo chamado ``register`` que é uma instância de ``template."
"Library``, na qual todas as tags e filtros são registrados. Então, próximo "
"ao topo do seu módulo, coloque o seguinte::"

msgid ""
"Alternatively, template tag modules can be registered through the "
"``'libraries'`` argument to :class:`~django.template.backends.django."
"DjangoTemplates`. This is useful if you want to use a different label from "
"the template tag module name when loading template tags. It also enables you "
"to register tags without installing an application."
msgstr ""
"Um alternativa, é que módulos de tags de template podem ser registradas "
"através do argumento ``'libraries'`` do :class:`~django.template.backends."
"django.DjangoTemplates`. Isso é útil se você quer um \"label\" diferente "
"para o módulo da tag de quando carregar os templates. Isso também habilita o "
"registro de tags sem instalar a aplicação."

msgid "Behind the scenes"
msgstr "Por trás das cenas."

msgid ""
"For a ton of examples, read the source code for Django's default filters and "
"tags. They're in :source:`django/template/defaultfilters.py` and :source:"
"`django/template/defaulttags.py`, respectively."
msgstr ""

msgid "For more information on the :ttag:`load` tag, read its documentation."
msgstr ""
"Para maiores informações sobre a tag :ttag:`load` tag, leia sua documentação"

msgid "Writing custom template filters"
msgstr "Escrevendo filtros de templates personalizados"

msgid "Custom filters are Python functions that take one or two arguments:"
msgstr ""

msgid "The value of the variable (input) -- not necessarily a string."
msgstr ""
"O valor da variável (input - de entrada) -- não necessariamente uma string."

msgid ""
"The value of the argument -- this can have a default value, or be left out "
"altogether."
msgstr ""
"O valor do argumento -- este pode ter um valor padrão, ou ser deixado de "
"fora."

msgid ""
"For example, in the filter ``{{ var|foo:\"bar\" }}``, the filter ``foo`` "
"would be passed the variable ``var`` and the argument ``\"bar\"``."
msgstr ""
"Por exemplo, no filtro ``{{ var|foo:\"bar\" }}``, ao filtro ``foo`` seria "
"passada a variável ``var`` e o argumento ``\"bar\"``."

msgid ""
"Since the template language doesn't provide exception handling, any "
"exception raised from a template filter will be exposed as a server error. "
"Thus, filter functions should avoid raising exceptions if there is a "
"reasonable fallback value to return. In case of input that represents a "
"clear bug in a template, raising an exception may still be better than "
"silent failure which hides the bug."
msgstr ""
"Uma vez que a linguagem de template não fornece manipulação de  exceções, "
"qualquer exceção vinda de um filtro de template será exposta como um erro de "
"servidor. Sendo assim, funções de filtros devem evitar enviar exceções se "
"houver um valor substituto razoável para retornar. No caso de uma entrada "
"que representa claramente um bug em um template, enviar uma exceção talvez "
"ainda seja melhor que uma falha silenciosa a qual esconde o bug."

msgid "Here's an example filter definition::"
msgstr "Aqui um exemplo de definição de filtro::"

msgid "And here's an example of how that filter would be used:"
msgstr "E aqui um exemplo de como aquele filtro poderia ser usado:"

msgid ""
"Most filters don't take arguments. In this case, leave the argument out of "
"your function::"
msgstr ""

msgid "Registering custom filters"
msgstr "Registrando filtros customizados"

msgid ""
"Once you've written your filter definition, you need to register it with "
"your ``Library`` instance, to make it available to Django's template "
"language::"
msgstr ""
"Uma vez que tenha escrito sua definição do filtro, é preciso registrá-lo com "
"sua instância de ``Library``, para fazer com que esteja disponível para a "
"linguagem de template do Django."

msgid "The ``Library.filter()`` method takes two arguments:"
msgstr "O Método ``Library.filter()`` recebe dois argumentos:"

msgid "The name of the filter -- a string."
msgstr "O nome do filtro -- uma string."

msgid ""
"The compilation function -- a Python function (not the name of the function "
"as a string)."
msgstr ""
"A função de compilação -- uma função Python (não o nome da função como uma "
"string)"

msgid "You can use ``register.filter()`` as a decorator instead::"
msgstr "Você pode, ao invés, usar ``register.filter()`` como um decorador::"

msgid ""
"If you leave off the ``name`` argument, as in the second example above, "
"Django will use the function's name as the filter name."
msgstr ""
"Se deixar de passar o argumento ``name``, como no segundo exemplo acima, o "
"Django irá usar o nome da função como nome do filtro."

msgid ""
"Finally, ``register.filter()`` also accepts three keyword arguments, "
"``is_safe``, ``needs_autoescape``, and ``expects_localtime``. These "
"arguments are described in :ref:`filters and auto-escaping <filters-auto-"
"escaping>` and :ref:`filters and time zones <filters-timezones>` below."
msgstr ""
"Finalmente,  ``register.filter()`` também aceita três argumentos nomeados, "
"``is_safe``, ``needs_autoescape``, e ``expects_localtime``. Estes argumentos "
"são descrito em  :ref:`filters and auto-escaping <filters-auto-escaping>` e :"
"ref:`filters and time zones <filters-timezones>` abaixo."

msgid "Template filters that expect strings"
msgstr "Filtros de templates que recebem strings"

msgid ""
"If you're writing a template filter that only expects a string as the first "
"argument, you should use the decorator ``stringfilter``. This will convert "
"an object to its string value before being passed to your function::"
msgstr ""
"Se você está escrevendo um filtro de template que somente aceita uma string "
"como primeiro argumento, deveria usar o decorador ``stringfilter``. Isso irá "
"converter um objeto para seu valor string antes de ser passado pela sua "
"função::"

msgid ""
"This way, you'll be able to pass, say, an integer to this filter, and it "
"won't cause an ``AttributeError`` (because integers don't have ``lower()`` "
"methods)."
msgstr ""
"Desta maneira, você será capaz de passar, vamos dizer, um inteiro para este "
"filtro, e isso não irá causar um ``AttributeError`` (porque inteiros não "
"possuem os métodos ``lower()``)."

msgid "Filters and auto-escaping"
msgstr "Filtros e auto-escaping"

msgid ""
"When writing a custom filter, give some thought to how the filter will "
"interact with Django's auto-escaping behavior. Note that two types of "
"strings can be passed around inside the template code:"
msgstr ""
"Quando estiver escrevendo um filtro customizado, reflita sobre como o filtro "
"irá interagir com o comportamento de auto escape do Django. Note que dois "
"tipos de cadeias de caracteres podem ser passados dentro do código do "
"template."

msgid ""
"**Raw strings** are the native Python strings. On output, they're escaped if "
"auto-escaping is in effect and presented unchanged, otherwise."
msgstr ""
"**Raw strings** são as cadeias de caracteres nativas do Python. Na saída, "
"elas são escapadas se o auto escapamento estiver ativado, caso contrário, "
"são apresentadas sem mudanças."

msgid ""
"**Safe strings** are strings that have been marked safe from further "
"escaping at output time. Any necessary escaping has already been done. "
"They're commonly used for output that contains raw HTML that is intended to "
"be interpreted as-is on the client side."
msgstr ""
"**Safe strings** são strings que tenham sido marcadas como seguras para "
"futuros \"escaping\" no tempo de saída. Qualquer \"escaping\" necessário já "
"foi feito. Eles são comumente usados para saídas que contenham HTML puro que "
"se destina a ser interpretado como estão do lado do cliente."

msgid ""
"Internally, these strings are of type :class:`~django.utils.safestring."
"SafeString`. You can test for them using code like::"
msgstr ""

msgid "Template filter code falls into one of two situations:"
msgstr "Código de filtros de templates caem em um das duas situações:"

msgid ""
"Your filter does not introduce any HTML-unsafe characters (``<``, ``>``, "
"``'``, ``\"`` or ``&``) into the result that were not already present. In "
"this case, you can let Django take care of all the auto-escaping handling "
"for you. All you need to do is set the ``is_safe`` flag to ``True`` when you "
"register your filter function, like so::"
msgstr ""
"Seu filtro não introduz qualquer caracter HTML inseguro (``<``, ``>``, "
"``'``, ``\"`` or ``&``) no resultado que ainda não foi apresentado. Neste "
"caso, você pode deixar o Django cuidar de toda a manipulação do \"auto-"
"espacaping\" pra você. Tudo o que precisa é definir a \"flag\" "
"`ìs_safe``para ``True`` quando registrar a função do filtro, como::"

msgid ""
"This flag tells Django that if a \"safe\" string is passed into your filter, "
"the result will still be \"safe\" and if a non-safe string is passed in, "
"Django will automatically escape it, if necessary."
msgstr ""
"A \"flag\" diz ao Django que se uma string \"segura\" é passada para seu "
"filtro, o resultado ainda será \"seguro\" e se uma string não segura é "
"passada, Django irá automaticamente fazer o \"escape\", se necessário."

msgid ""
"You can think of this as meaning \"this filter is safe -- it doesn't "
"introduce any possibility of unsafe HTML.\""
msgstr ""
"Você pode entender isso como \"este filtro é seguro -- ele não introduz "
"qualquer possibilidade de HTML não seguro\""

msgid ""
"The reason ``is_safe`` is necessary is because there are plenty of normal "
"string operations that will turn a ``SafeData`` object back into a normal "
"``str`` object and, rather than try to catch them all, which would be very "
"difficult, Django repairs the damage after the filter has completed."
msgstr ""
"A razão da necessidade do ``is_safe`` é porque existem muitas operações de "
"string normais que irão transformar um objeto ``SafeData`` de volta em um "
"objeto ``str`` normal e, ao invés de tentar capturar eles todos, o que seria "
"muito difícil, Django repara o dano depois que o filtro é completado."

msgid ""
"For example, suppose you have a filter that adds the string ``xx`` to the "
"end of any input. Since this introduces no dangerous HTML characters to the "
"result (aside from any that were already present), you should mark your "
"filter with ``is_safe``::"
msgstr ""
"Por exemplo, suponha que tenha um filtro que adiciona a string ``xx``ao "
"final de uma entrada. Uma vez que isso não introduz nenhum caracter HTML "
"perigoso para o resultado (além daqueles que já estão presentes), você "
"deveria marcar seu filtro como ``is_safe``::"

msgid ""
"When this filter is used in a template where auto-escaping is enabled, "
"Django will escape the output whenever the input is not already marked as "
"\"safe\"."
msgstr ""
"Quando o filtro é usado em um template onde a auto-substituição está "
"habilitada, o Django irá fazer a substituição na saída sempre que a entrada "
"ainda não estiver marcada como \"safe\"."

msgid ""
"By default, ``is_safe`` is ``False``, and you can omit it from any filters "
"where it isn't required."
msgstr ""
"Por padrão, ``is_safe`` é ``falso``, e você pode omiti-lo em qualquer filtro "
"onde ele não é requerido."

msgid ""
"Be careful when deciding if your filter really does leave safe strings as "
"safe. If you're *removing* characters, you might inadvertently leave "
"unbalanced HTML tags or entities in the result. For example, removing a "
"``>`` from the input might turn ``<a>`` into ``<a``, which would need to be "
"escaped on output to avoid causing problems. Similarly, removing a semicolon "
"(``;``) can turn ``&amp;`` into ``&amp``, which is no longer a valid entity "
"and thus needs further escaping. Most cases won't be nearly this tricky, but "
"keep an eye out for any problems like that when reviewing your code."
msgstr ""
"Tenha cuidado quando estiver decidindo se o seu filtro realmente irá deixar "
"strings seguras como \"safe\". Se estiver \"removendo\" caracteres, poderia "
"deixar  tags HTML ou entidades incompletas no resultado. Por exemplo, "
"removendo um ``>``de uma entrada poderia tornar ``<a>`` em um ``<a``, que "
"poderia ser necessário fazer o \"escape\" na saída para evitar causar "
"problemas. Similar a isso, removendo um ponto-e-vírgula (``;``) pode tornar "
"um ``& amp;`` em um  ``& amp`` , o qual não é mais uma entidade válida e "
"assim precisa realizar o \"escape\". A maioria dos casos nem chegarão perto "
"de ser complicados assim, mas fique de olho para qualquer problema como este "
"quando revisar seu código. "

msgid ""
"Marking a filter ``is_safe`` will coerce the filter's return value to a "
"string.  If your filter should return a boolean or other non-string value, "
"marking it ``is_safe`` will probably have unintended consequences (such as "
"converting a boolean False to the string 'False')."
msgstr ""
"Fazendo um filtro ``is_safe`` obriga que este retorne um valor do tipo "
"string. Se o seu filtro deveria retornar uma boolean ou outro valor que não "
"uma string, marcar isso como ``is_safe`` provavelmente terá  consequências "
"inexperadas (tal como converter um booleano \"False\" para a string  "
"'False')."

msgid ""
"Alternatively, your filter code can manually take care of any necessary "
"escaping. This is necessary when you're introducing new HTML markup into the "
"result. You want to mark the output as safe from further escaping so that "
"your HTML markup isn't escaped further, so you'll need to handle the input "
"yourself."
msgstr ""
"Uma alternativa, o código do seu filtro pode manualmente cuidar das "
"substituições necessárias. Isso é necessário quando adicionar uma marcação "
"HTML ao resultado. Você quer marcar a saída como segura de substituições "
"posteriores,  então suas marcação HTML não será substituída, e precisará "
"tratar a entrada por conta própria."

msgid ""
"To mark the output as a safe string, use :func:`django.utils.safestring."
"mark_safe`."
msgstr ""
"Para marcar a saída como saída segura, use :func:`django.utils.safestring."
"mark_safe`."

msgid ""
"Be careful, though. You need to do more than just mark the output as safe. "
"You need to ensure it really *is* safe, and what you do depends on whether "
"auto-escaping is in effect. The idea is to write filters that can operate in "
"templates where auto-escaping is either on or off in order to make things "
"easier for your template authors."
msgstr ""
"Porém, tenha cuidado. É necessário mais que marcar a saída como segura. É "
"necessário ter certeza que isso *é* realmente seguro, e o que fará depende "
"se a auto-substituição está fazendo efeito. A idéia é escrever filtros que "
"podem operar em templates onde o auto-escaping está ligado ou desligado de "
"modo a tornar as coisas mais fáceis para os autores de templates."

msgid ""
"In order for your filter to know the current auto-escaping state, set the "
"``needs_autoescape`` flag to ``True`` when you register your filter "
"function. (If you don't specify this flag, it defaults to ``False``). This "
"flag tells Django that your filter function wants to be passed an extra "
"keyword argument, called ``autoescape``, that is ``True`` if auto-escaping "
"is in effect and ``False`` otherwise. It is recommended to set the default "
"of the ``autoescape`` parameter to ``True``, so that if you call the "
"function from Python code it will have escaping enabled by default."
msgstr ""
"Para que seu filtro saiba o estado corrente do estado da auto-substituição, "
"defina a flag ``needs_autoescape`` como ``True`` quando registrar o filtro. "
"(se não especificar esa flag, seu valor padrão é ``False``). Esta flag dia "
"ao Django que sua função do filtro quer que seja passado um argumento extra, "
"chamado ``autoescape`, que é ``True`` se está em efeito e ``False``caso "
"contrário. É recomendado definir o padrão do parâmetro ``autoescape`` para "
"``True``, então se a função for chamado de um código Python esta terá a "
"substituição habilitada por padrão."

msgid ""
"For example, let's write a filter that emphasizes the first character of a "
"string::"
msgstr ""
"Por exemplo, vamos escrever um filtro que enfatiza o primeiro caracter de "
"uma string::"

msgid ""
"The ``needs_autoescape`` flag and the ``autoescape`` keyword argument mean "
"that our function will know whether automatic escaping is in effect when the "
"filter is called. We use ``autoescape`` to decide whether the input data "
"needs to be passed through ``django.utils.html.conditional_escape`` or not. "
"(In the latter case, we use the identity function as the \"escape\" "
"function.) The ``conditional_escape()`` function is like ``escape()`` except "
"it only escapes input that is **not** a ``SafeData`` instance. If a "
"``SafeData`` instance is passed to ``conditional_escape()``, the data is "
"returned unchanged."
msgstr ""

msgid ""
"Finally, in the above example, we remember to mark the result as safe so "
"that our HTML is inserted directly into the template without further "
"escaping."
msgstr ""
"Finalmente, no exemplo acima, relembramos de marcar resultados como seguros "
"assim que o HTML é inserido diretamente no template sem outras substituições."

msgid ""
"There's no need to worry about the ``is_safe`` flag in this case (although "
"including it wouldn't hurt anything). Whenever you manually handle the auto-"
"escaping issues and return a safe string, the ``is_safe`` flag won't change "
"anything either way."
msgstr ""
"Não precisa se preocupar com a flag ``is_safe``  neste caso (embora inclui-"
"la não faria nenhum mal). Mesmo que trate manualmente a auto-substituição e "
"retorne uma string segura, a flag ``is_safe`` não alterará nada de nenhum "
"modo."

msgid "Avoiding XSS vulnerabilities when reusing built-in filters"
msgstr "Evitando vulnerabilidade XSS quando reusar filtros embutidos."

msgid ""
"Django's built-in filters have ``autoescape=True`` by default in order to "
"get the proper autoescaping behavior and avoid a cross-site script "
"vulnerability."
msgstr ""
"Os fiiltros embutidos do Django tem por padrão ``autoescape=True`` para que "
"receba propriamente o comportamento da auto-substituição e evite a "
"vulnerabilidade de \"cross-site\" ."

msgid ""
"In older versions of Django, be careful when reusing Django's built-in "
"filters as ``autoescape`` defaults to ``None``. You'll need to pass "
"``autoescape=True`` to get autoescaping."
msgstr ""
"Em versões antigas do Djagno, tenha cuidado quando reutilizar filtros "
"embutidos como ``autoescape`` definidos por padrão como ``None``. Será "
"necessário passar ``autoescape=True`` para ter a auto-substituição."

msgid ""
"For example, if you wanted to write a custom filter called "
"``urlize_and_linebreaks`` that combined the :tfilter:`urlize` and :tfilter:"
"`linebreaksbr` filters, the filter would look like::"
msgstr ""
"Por exemplo, se quer escrever um filtro personalizado chamado "
"``urlize_and_linebreaks``que combine os filtros :tfilter:`urlize` e :tfilter:"
"`linebreaksbr`, o filtro deveria parecer com::"

msgid "Then:"
msgstr "Então:"

msgid "would be equivalent to:"
msgstr "seria equivalente a:"

msgid "Filters and time zones"
msgstr "Filtros e fusos horários "

msgid ""
"If you write a custom filter that operates on :class:`~datetime.datetime` "
"objects, you'll usually register it with the ``expects_localtime`` flag set "
"to ``True``::"
msgstr ""
"Se escrever filtros personalizados que operam objetos  :class:`~datetime."
"datetime`, geralmente registra-se com a flag ``expects_localtime``definido "
"como ``True``::"

msgid ""
"When this flag is set, if the first argument to your filter is a time zone "
"aware datetime, Django will convert it to the current time zone before "
"passing it to your filter when appropriate, according to :ref:`rules for "
"time zones conversions in templates <time-zones-in-templates>`."
msgstr ""
"Quando esta flag está definida, se o primeiro argumento do seu filtro é uma "
"date-time que leva em consideração o fuso-horário, o Django irá convertê-lo "
"para o fuso-horário corrente antes de passa-lo para o filtro quando "
"apropriado, de acordo com :ref:`rules for time zones conversions in "
"templates <time-zones-in-templates>`. "

msgid "Writing custom template tags"
msgstr "Escrevendo tags de templates personalizadas."

msgid ""
"Tags are more complex than filters, because tags can do anything. Django "
"provides a number of shortcuts that make writing most types of tags easier. "
"First we'll explore those shortcuts, then explain how to write a tag from "
"scratch for those cases when the shortcuts aren't powerful enough."
msgstr ""
"Tags são mais complexas que filtros, porque as tags podem fazer qualquer "
"coisa. Django fornece inúmeros atalhos para fazer com que a escrita de "
"várias tags seja mais fácil. Primeiro iremos explorar estes atalhos, e então "
"explicar como escrever uma tag do início  para aqueles casos em que os "
"atalhos não são poderosos o suficiente."

msgid "Simple tags"
msgstr "Tags simples"

msgid ""
"Many template tags take a number of arguments -- strings or template "
"variables -- and return a result after doing some processing based solely on "
"the input arguments and some external information. For example, a "
"``current_time`` tag might accept a format string and return the time as a "
"string formatted accordingly."
msgstr ""
"Muitas tags de templates recebem inúmeros argumentos -- strings ou variáveis "
"de templates -- e retornam um resultado depois de fazer algum processamento "
"baseado somente nos argumentos de entrada e alguma informação externa. Por "
"exemplo, uma tag ``current_time`` aceitaria uma string de formato e retorna "
"a hora como uma string formatada de acordo."

msgid ""
"To ease the creation of these types of tags, Django provides a helper "
"function, ``simple_tag``. This function, which is a method of ``django."
"template.Library``, takes a function that accepts any number of arguments, "
"wraps it in a ``render`` function and the other necessary bits mentioned "
"above and registers it with the template system."
msgstr ""
"Para facilitar a criação destes tipos de tags, Django fornece uma função de "
"auxílio, ``simple_tag``. Essa função, a qual é um método de ``django."
"template.Library``, tem uma função que recebe qualquer número de parâmetros, "
"empacota isso em uma função ``renderizadora`` junto com os \"bits\" "
"mencionados acima e o registra com o sistema de templates."

msgid "Our ``current_time`` function could thus be written like this::"
msgstr "Nossa função ``current_time`` poderia então ser escrita assim::"

msgid "A few things to note about the ``simple_tag`` helper function:"
msgstr "Algumas coisas para perceber sobre a função de auxílio ``simple_tag``:"

msgid ""
"Checking for the required number of arguments, etc., has already been done "
"by the time our function is called, so we don't need to do that."
msgstr ""
"A checagem do número de arrgumentos, etc, já foi feito na hora em que a "
"função é chamada, então não precisamos faze-lo."

msgid ""
"The quotes around the argument (if any) have already been stripped away, so "
"we receive a plain string."
msgstr ""

msgid ""
"If the argument was a template variable, our function is passed the current "
"value of the variable, not the variable itself."
msgstr ""
"Se o argumento era uma variável de template, é passada par a nossa função o "
"valor atual da variável, e não a própria variável."

msgid ""
"Unlike other tag utilities, ``simple_tag`` passes its output through :func:"
"`~django.utils.html.conditional_escape` if the template context is in "
"autoescape mode, to ensure correct HTML and protect you from XSS "
"vulnerabilities."
msgstr ""
"Diferente de outras ferramentas de tag,  ``simple_tag`` passa sua saida "
"através do  :func:`~django.utils.html.conditional_escape` se o contexto do "
"tempte está no modo auto-substituição, para assegurar o HTML e proteger da "
"vulnerabilidade XSS."

msgid ""
"If additional escaping is not desired, you will need to use :func:`~django."
"utils.safestring.mark_safe` if you are absolutely sure that your code does "
"not contain XSS vulnerabilities. For building small HTML snippets, use of :"
"func:`~django.utils.html.format_html` instead of ``mark_safe()`` is strongly "
"recommended."
msgstr ""
"Se substituições adicionais não são desejadas, é necessário usar :func:"
"`~django.utils.safestring.mark_safe`  se você tem a certeza absoluta que seu "
"código não contém vulnerabilidade XSS. Para construir pequenos fragmentos de "
"HTML, é fortemente recomendado usar :func:`~django.utils.html.format_html` "
"ao invés de ``mark_safe()``"

msgid ""
"If your template tag needs to access the current context, you can use the "
"``takes_context`` argument when registering your tag::"
msgstr ""
"Se a template tag precisa acessar o contexto corrente, você pode usar o "
"argumento ``takes_context`` quando registrá-la::"

msgid "Note that the first argument *must* be called ``context``."
msgstr "Perceba que o primeiro argumento **deve** ser chamado \"context\"."

msgid ""
"For more information on how the ``takes_context`` option works, see the "
"section on :ref:`inclusion tags<howto-custom-template-tags-inclusion-tags>`."
msgstr ""
"Para maiores informações sobre como a opção ``takes_context`` funciona, veja "
"a seção :ref:`inclusion tags<howto-custom-template-tags-inclusion-tags>`."

msgid "If you need to rename your tag, you can provide a custom name for it::"
msgstr ""
"Se você precisar renomear a tag, você pode fornecer um nome personalizado "
"para ele::"

msgid ""
"``simple_tag`` functions may accept any number of positional or keyword "
"arguments. For example::"
msgstr ""
"As funções ``simple_tag`` aceitam qualquer número de argumentos posicionais "
"ou nomeados. Por exemplo::"

msgid ""
"Then in the template any number of arguments, separated by spaces, may be "
"passed to the template tag. Like in Python, the values for keyword arguments "
"are set using the equal sign (\"``=``\") and must be provided after the "
"positional arguments. For example:"
msgstr ""
"Então no template qualquer número de argumentos, separados por espaços podem "
"ser passados para a atg de template. Como em Python, os valores para "
"argumentos nomeados são definidos usando o sinal de igua (\"`=`\") e devem "
"ser fornecidos depois dos argumentos posicionais. Por exemplo:"

msgid ""
"It's possible to store the tag results in a template variable rather than "
"directly outputting it. This is done by using the ``as`` argument followed "
"by the variable name. Doing so enables you to output the content yourself "
"where you see fit:"
msgstr ""
"É possível armazenar os resultados da tag em uma variável de template ao "
"invés de enviar para a saída diretamente. Isso é feito utilizando o "
"argumento ``as`` seguido de um nome de variável. Fazendo isso é possível "
"posicionar o conteúdo onde você achar cabido."

msgid "Inclusion tags"
msgstr "Tags de inclusão"

msgid ""
"Another common type of template tag is the type that displays some data by "
"rendering *another* template. For example, Django's admin interface uses "
"custom template tags to display the buttons along the bottom of the \"add/"
"change\" form pages. Those buttons always look the same, but the link "
"targets change depending on the object being edited -- so they're a perfect "
"case for using a small template that is filled with details from the current "
"object. (In the admin's case, this is the ``submit_row`` tag.)"
msgstr ""
"Outro tipo de tag de template é o tipo que mostra alguns dados renderizados "
"por *outro* template. Por exemplo, a interface do Admin do Django usa tags "
"de tempate para mostrar os botões ao longo do final das páginas de "
"formulários \"add/change\". Esses botões sempre parecem os mesmos, mas o "
"link de destino mudam dependendo do objeto sendo editado -- então são um "
"perfeito caso para usar um template pequeno que é preenchido com detalhes do "
"objeto atual. (No caso do Admin, essa é a tag ``submit_row``.)"

msgid "These sorts of tags are called \"inclusion tags\"."
msgstr "Este tipo de Tag são chamadas \"tags de inclusão\""

msgid ""
"Writing inclusion tags is probably best demonstrated by example. Let's write "
"a tag that outputs a list of choices for a given ``Poll`` object, such as "
"was created in the :ref:`tutorials <creating-models>`. We'll use the tag "
"like this:"
msgstr ""
"Escrever tags de inclusão é provavelmente melhor demonstrado através de "
"exemplos. Vamos escrever uma Tag que devolve uma lista de opções para um "
"dado objeto ``Poll``, tal como o que foi criado no :ref:`tutorials <creating-"
"models>`. Usaremos a tag assim:"

msgid "...and the output will be something like this:"
msgstr "...e a saída será algo como:"

msgid ""
"First, define the function that takes the argument and produces a dictionary "
"of data for the result. The important point here is we only need to return a "
"dictionary, not anything more complex. This will be used as a template "
"context for the template fragment. Example::"
msgstr ""
"Primeiro defina a função que recebe os argumentos e produz um dicionário de "
"dados para o resultado. O ponto importante aqui é que precisamos somente "
"retornar um dicionário, não algo mais complexo. Isso será usado como um "
"contexto para o fragmento de template. Exemplo::"

msgid ""
"Next, create the template used to render the tag's output. This template is "
"a fixed feature of the tag: the tag writer specifies it, not the template "
"designer. Following our example, the template is very short:"
msgstr ""

msgid ""
"Now, create and register the inclusion tag by calling the "
"``inclusion_tag()`` method on a ``Library`` object. Following our example, "
"if the above template is in a file called ``results.html`` in a directory "
"that's searched by the template loader, we'd register the tag like this::"
msgstr ""
"Agora, crie e registre a tag de inclusão chamando o método "
"``inclusion_tag()`` em um objeto do tipo ``Library``. Seguindo nosso "
"exemplo, se o exemplo acima é um arquivo chamado ``results.html`` em um "
"diretório que é procurado pelo template loader, nós regitramos a tag assim::"

msgid ""
"Alternatively it is possible to register the inclusion tag using a :class:"
"`django.template.Template` instance::"
msgstr ""
"Alternativamente é possível registrar a tag de inclusão usando uma instância "
"de :class:`django.template.Template`::"

msgid "...when first creating the function."
msgstr "...quando criar a função pela primeira vez."

msgid ""
"Sometimes, your inclusion tags might require a large number of arguments, "
"making it a pain for template authors to pass in all the arguments and "
"remember their order. To solve this, Django provides a ``takes_context`` "
"option for inclusion tags. If you specify ``takes_context`` in creating a "
"template tag, the tag will have no required arguments, and the underlying "
"Python function will have one argument -- the template context as of when "
"the tag was called."
msgstr ""
"Algumas vezes, sua tag de inclusão requer um número grande de argumentos, "
"tornando uma dor de cabeça para autores dos templates passar todos os "
"argumentos e lembrar sua ordem. Para resolver isso, o Django fornece uma "
"opção ``takes_context`` para tags de inclusão. Se o especificado o "
"``takes_context`` na criação da tag de template, a tag não terá argumentos "
"requeridos, e a função Python implícita terá um argumento -- o contexto do "
"template quando a tag foi chamada. "

msgid ""
"For example, say you're writing an inclusion tag that will always be used in "
"a context that contains ``home_link`` and ``home_title`` variables that "
"point back to the main page. Here's what the Python function would look "
"like::"
msgstr ""
"Por exemplo, digamos que esteja escrevendo uma tag de inclusão que sempre "
"será usada em um contexto que contém as variásveis ``home_link`` e "
"``home_title`` que apontam de volta para a página principal. Aqui como a  "
"função Python deveria parecer::"

msgid ""
"Note that the first parameter to the function *must* be called ``context``."
msgstr ""
"Repare que o primeiro parâmetro para a função *deve* ser chamado de "
"``context``."

msgid ""
"In that ``register.inclusion_tag()`` line, we specified "
"``takes_context=True`` and the name of the template. Here's what the "
"template ``link.html`` might look like:"
msgstr ""
"Na linha  ``register.inclusion_tag()``, especificamos o "
"``takes_context=True`` e o nome do template. Aqui o que o template ``link."
"html`` deve se parecer:"

msgid ""
"Then, any time you want to use that custom tag, load its library and call it "
"without any arguments, like so:"
msgstr ""
"Então, qualquer momento que queira usar a tag personalizada, carregue sua "
"biblioteca e chame-a sem nenhum argumento, como:"

msgid ""
"Note that when you're using ``takes_context=True``, there's no need to pass "
"arguments to the template tag. It automatically gets access to the context."
msgstr ""
"Repare que quando estiver usando  ``takes_context=True``, não tem "
"necessidade de passar argumentos para a tag de template. Esta tem acessa o "
"contexto automaticamente."

msgid ""
"The ``takes_context`` parameter defaults to ``False``. When it's set to "
"``True``, the tag is passed the context object, as in this example. That's "
"the only difference between this case and the previous ``inclusion_tag`` "
"example."
msgstr ""
"O parâmetro padrão para ``takes_context`` é ``False``. Quando definido como "
"``True``, para tag é passado o objeto contexto, como neste exemplo. Este é a "
"única diferença entre este caso e o exemplo ``inclusion_tag`` anterior. "

msgid ""
"``inclusion_tag`` functions may accept any number of positional or keyword "
"arguments. For example::"
msgstr ""
"Funções ``inclusion_tag`` podem aceitar qualquer número de argumentos "
"posicionais ou nomeados. Por exemplo::"

msgid "Advanced custom template tags"
msgstr "Tags personalizadas avançadas"

msgid ""
"Sometimes the basic features for custom template tag creation aren't enough. "
"Don't worry, Django gives you complete access to the internals required to "
"build a template tag from the ground up."
msgstr ""
"As vezes as funções básicas para criação das tags de template não são o "
"suficiente. Não se preocupe, o Django lhe dá completo acesso as \"coisas"
"\"internas requeridas para construir uma tag de template do zero."

msgid "A quick overview"
msgstr "Um rápida visão geral"

msgid ""
"The template system works in a two-step process: compiling and rendering. To "
"define a custom template tag, you specify how the compilation works and how "
"the rendering works."
msgstr ""
"O sistema de templates funciona em um processo de 2 passos.: compilação e "
"renderização. Para definir uma tag de template personalizada, é necessário "
"especificar como a compilação funcionar e como a renderização funciona."

msgid ""
"When Django compiles a template, it splits the raw template text into "
"''nodes''. Each node is an instance of ``django.template.Node`` and has a "
"``render()`` method. A compiled template is a list of ``Node`` objects. When "
"you call ``render()`` on a compiled template object, the template calls "
"``render()`` on each ``Node`` in its node list, with the given context.  The "
"results are all concatenated together to form the output of the template."
msgstr ""

msgid ""
"Thus, to define a custom template tag, you specify how the raw template tag "
"is converted into a ``Node`` (the compilation function), and what the node's "
"``render()`` method does."
msgstr ""
"Então, para definir uma tag de template personalizada, especifique como a "
"tag de template original é convertida em um ``Nó`` (a função de compilação), "
"e o que o método ``render()``do nó faz."

msgid "Writing the compilation function"
msgstr "Escrevendo a função de compilação"

msgid ""
"For each template tag the template parser encounters, it calls a Python "
"function with the tag contents and the parser object itself. This function "
"is responsible for returning a ``Node`` instance based on the contents of "
"the tag."
msgstr ""
"Para cada tag de template que o analisador de templates encontra, ele chama "
"uma função Python com o conteúdo da tag e o próprio objeto analisador. Essa "
"função é responsável por retornar uma instância de ``Node`` baseada no "
"conteúdo da tag."

msgid ""
"For example, let's write a full implementation of our template tag, ``{% "
"current_time %}``, that displays the current date/time, formatted according "
"to a parameter given in the tag, in :func:`~time.strftime` syntax. It's a "
"good idea to decide the tag syntax before anything else. In our case, let's "
"say the tag should be used like this:"
msgstr ""

msgid ""
"The parser for this function should grab the parameter and create a ``Node`` "
"object::"
msgstr ""
"O analisador para essa função deve pegar o parâmetro e criar um objeto "
"``Node``::"

msgid "Notes:"
msgstr "Notas:"

msgid ""
"``parser`` is the template parser object. We don't need it in this example."
msgstr ""
"``parser`` é o objeto analisador do template. Nós não precisamos dele neste "
"exemplo."

msgid ""
"``token.contents`` is a string of the raw contents of the tag. In our "
"example, it's ``'current_time \"%Y-%m-%d %I:%M %p\"'``."
msgstr ""
"``token.contents`` é uma string com o conteúdo original da tag, No nosso "
"exemplo, isso é ``'current_time \"%Y-%m-%d %I:%M %p\"'``."

msgid ""
"The ``token.split_contents()`` method separates the arguments on spaces "
"while keeping quoted strings together. The more straightforward ``token."
"contents.split()`` wouldn't be as robust, as it would naively split on *all* "
"spaces, including those within quoted strings. It's a good idea to always "
"use ``token.split_contents()``."
msgstr ""
"O método ``token.split_contents()`` separa os argumentos por espaços "
"enquanto mantém strings entre aspas, juntas. Mais direto o ``token.contents."
"split()`` não seria tão robusto já que ingenuamente dividiria *todos* os "
"espaços, incluindo aqueles dentro de aspas. É uma boa idéia usar sempre o "
"``token.split_contents()``."

msgid ""
"This function is responsible for raising ``django.template."
"TemplateSyntaxError``, with helpful messages, for any syntax error."
msgstr ""
"Essa função é responsável for informar o ``django.template."
"TemplateSyntaxError``, com mensagens de ajuda, para qualquer erro de sintaxe."

msgid ""
"The ``TemplateSyntaxError`` exceptions use the ``tag_name`` variable. Don't "
"hard-code the tag's name in your error messages, because that couples the "
"tag's name to your function. ``token.contents.split()[0]`` will ''always'' "
"be the name of your tag -- even when the tag has no arguments."
msgstr ""
"As exceções ``TemplateSyntaxError`` usam a variável ``tag_name``. Não "
"coloque nomes de tags dentro de suas mensagens de erro, porque isso amarra o "
"nome da tag a sua função. ``token.contents.split()[0]``  ''sempre'' será o "
"nome da sua tag -- mesmo quando sua tag não tem argumentos."

msgid ""
"The function returns a ``CurrentTimeNode`` with everything the node needs to "
"know about this tag. In this case, it passes the argument -- ``\"%Y-%m-%d %I:"
"%M %p\"``. The leading and trailing quotes from the template tag are removed "
"in ``format_string[1:-1]``."
msgstr ""

msgid ""
"The parsing is very low-level. The Django developers have experimented with "
"writing small frameworks on top of this parsing system, using techniques "
"such as EBNF grammars, but those experiments made the template engine too "
"slow. It's low-level because that's fastest."
msgstr ""
"O analisador é muito baixo nível. Os desenvolvedores do Django "
"experimentaram escrever pequenos frameworks baseados no sistema analisador "
"(\"parser\"), usando técnicas como a gramática EBNF, mas estes experimentos "
"tornaram o motor de template muito lento. É baixo-nível porque é rápido. "

msgid "Writing the renderer"
msgstr "Escrevendo o \"renderizador\""

msgid ""
"The second step in writing custom tags is to define a ``Node`` subclass that "
"has a ``render()`` method."
msgstr ""
"O segundo passo para escrever uma tag personalizada é definir uma subclasse "
"de  ``Node`` que tenha um método ``render()``."

msgid "Continuing the above example, we need to define ``CurrentTimeNode``::"
msgstr "Continuando o exemplo acima, precisamso definir ``CurrentTimeNode``::"

msgid ""
"``__init__()`` gets the ``format_string`` from ``do_current_time()``. Always "
"pass any options/parameters/arguments to a ``Node`` via its ``__init__()``."
msgstr ""
"``__init__()`` recebe o ``format_string`` do ``do_current_time()``. Sempre "
"passar opções/parametros/argumentos para um ``Node`` através de seu "
"``__init__()``."

msgid "The ``render()`` method is where the work actually happens."
msgstr "O método ``render()`` é onde o trabalho realmente acontece"

msgid ""
"``render()`` should generally fail silently, particularly in a production "
"environment. In some cases however, particularly if ``context.template."
"engine.debug`` is ``True``, this method may raise an exception to make "
"debugging easier. For example, several core tags raise ``django.template."
"TemplateSyntaxError`` if they receive the wrong number or type of arguments."
msgstr ""
"``render()`` deve geralmente falhar silenciosamente, particularmente no "
"ambiente de produção. Em alguns casos porém, particularmente se  ``context."
"template.engine.debug`` for ``True``, este método pode indicar uma exceção "
"para ficar mais fácil debugar. Por exemplo, muitas tags do core inviam   "
"``django.template.TemplateSyntaxError`` se eles receberem o número errado ou "
"tipo de argumentos."

msgid ""
"Ultimately, this decoupling of compilation and rendering results in an "
"efficient template system, because a template can render multiple contexts "
"without having to be parsed multiple times."
msgstr ""
"Por último, este desacomplamento entre compilação e renderização resulta em "
"um sistema de template mais eficiente, porque o template pode renderizar "
"múltiplos contextos ser ter que ser analisado (\"parsed\")  múltiplas vezes."

msgid "Auto-escaping considerations"
msgstr "Considerações sobre auto-substituição"

msgid ""
"The output from template tags is **not** automatically run through the auto-"
"escaping filters (with the exception of :meth:`~django.template.Library."
"simple_tag` as described above). However, there are still a couple of things "
"you should keep in mind when writing a template tag."
msgstr ""
"A saída da tag de template **não** passa automaticamente pelos filtros de "
"auto-escaping (com exceção do :meth:`~django.template.Library.simple_tag` , "
"como descrito acima). Porém, ainda existem algumas coisas para se ter em "
"mente ao escrever uma tag de template."

msgid ""
"If the ``render()`` method of your template tag stores the result in a "
"context variable (rather than returning the result in a string), it should "
"take care to call ``mark_safe()`` if appropriate. When the variable is "
"ultimately rendered, it will be affected by the auto-escape setting in "
"effect at the time, so content that should be safe from further escaping "
"needs to be marked as such."
msgstr ""

msgid ""
"Also, if your template tag creates a new context for performing some sub-"
"rendering, set the auto-escape attribute to the current context's value. The "
"``__init__`` method for the ``Context`` class takes a parameter called "
"``autoescape`` that you can use for this purpose. For example::"
msgstr ""
"Também, se sua tag cria um novo contexto para realizar algum sub "
"renderização, defina o atributo de auto-substituição para o valor do "
"contexto corrente. O método ``__init__`` da classe ``Context`` recebe um "
"parâmetro chamado ``autoescape`` que pode ser usado para este propósito. Por "
"exemplo::"

msgid ""
"This is not a very common situation, but it's useful if you're rendering a "
"template yourself. For example::"
msgstr ""
"Isso não é uma situação muito comum, mas é útil se você está renderizando "
"você mesmo o template. Por exemplo::"

msgid ""
"If we had neglected to pass in the current ``context.autoescape`` value to "
"our new ``Context`` in this example, the results would have *always* been "
"automatically escaped, which may not be the desired behavior if the template "
"tag is used inside a :ttag:`{% autoescape off %}<autoescape>` block."
msgstr ""
"Se negligenciássemos ao passar o valor no corrente ``context.autoescape`` "
"para ao novo ``Context`` neste exemplo, os resultados seriam *sempre* "
"automaticamente substituidos, o que pode não ser o comportamento desejável "
"se a tg de template for usada dentro de um bloco  :ttag:`{% autoescape off %}"
"<autoescape>` ."

msgid "Thread-safety considerations"
msgstr "Considerações sobre segurança de \"thread\""

msgid ""
"Once a node is parsed, its ``render`` method may be called any number of "
"times. Since Django is sometimes run in multi-threaded environments, a "
"single node may be simultaneously rendering with different contexts in "
"response to two separate requests. Therefore, it's important to make sure "
"your template tags are thread safe."
msgstr ""
"Uma vez que o nó tenha sido analisado, seu método ``render`` pode ser "
"chamado qualquer número de vezes. Uma vez que o Django roda algumas vezes em "
"ambientes multi-threaded, um nó pode ser renderizado simultaneamente com "
"diferentes contextos em resposta a dois requests diferentes. Por isso, é "
"importante que suas tags de templates são segurara para \"threads\"."

msgid ""
"To make sure your template tags are thread safe, you should never store "
"state information on the node itself. For example, Django provides a "
"builtin :ttag:`cycle` template tag that cycles among a list of given strings "
"each time it's rendered:"
msgstr ""
"Para ter certeza que sua tag de template é segura para rodar em threads, "
"nunca deve armazenar informação no próprio nó. Por exemplo, Django fornece a "
"template tag :ttag:`cycle` que alterna os intens de uma lista de strings "
"cada vez que é renderizada:"

msgid ""
"A naive implementation of ``CycleNode`` might look something like this::"
msgstr ""
"Uma implementação ingênua do ``CycleNode`` talvez se pareça como algo assim::"

msgid ""
"But, suppose we have two templates rendering the template snippet from above "
"at the same time:"
msgstr ""
"Mas, suponha que temos dois templates renderizando o pedaço de template "
"acima ao mesmo tempo."

msgid ""
"Thread 1 performs its first loop iteration, ``CycleNode.render()`` returns "
"'row1'"
msgstr ""
"Thread 1 realiza sua primeira iteração, ``CycleNode.render()`` retorna 'row1'"

msgid ""
"Thread 2 performs its first loop iteration, ``CycleNode.render()`` returns "
"'row2'"
msgstr ""
"Thread 2 realiza sua primeira iteração, ``CycleNode.render()`` retorna 'row2'"

msgid ""
"Thread 1 performs its second loop iteration, ``CycleNode.render()`` returns "
"'row1'"
msgstr ""
"Thread 1 realiza sua segunda iteração, ``CycleNode.render()`` retorna 'row2'"

msgid ""
"Thread 2 performs its second loop iteration, ``CycleNode.render()`` returns "
"'row2'"
msgstr ""
"Thread 2 realiza sua segunda iteração, ``CycleNode.render()`` retorna 'row2'"

msgid ""
"The CycleNode is iterating, but it's iterating globally. As far as Thread 1 "
"and Thread 2 are concerned, it's always returning the same value. This is "
"not what we want!"
msgstr ""

msgid ""
"To address this problem, Django provides a ``render_context`` that's "
"associated with the ``context`` of the template that is currently being "
"rendered. The ``render_context`` behaves like a Python dictionary, and "
"should be used to store ``Node`` state between invocations of the ``render`` "
"method."
msgstr ""
"Para resolver o problema, o Django provê o ``render_context`` que associado "
"com o ``context`` do  template que está correntemente sendo renderizado. O  "
"``render_context`` se comporta como um dicionário Python, e deve ser usado "
"para armazenar os estados do ``Node`` entre chamadas do método ``render``."

msgid ""
"Let's refactor our ``CycleNode`` implementation to use the "
"``render_context``::"
msgstr ""
"Vamos refatorar nosso implementação do ``CycleNode``  para usar o "
"``render_context``::"

msgid ""
"Note that it's perfectly safe to store global information that will not "
"change throughout the life of the ``Node`` as an attribute. In the case of "
"``CycleNode``, the ``cyclevars`` argument doesn't change after the ``Node`` "
"is instantiated, so we don't need to put it in the ``render_context``. But "
"state information that is specific to the template that is currently being "
"rendered, like the current iteration of the ``CycleNode``, should be stored "
"in the ``render_context``."
msgstr ""
"Note que é perfeitamente seguro armazenar informação global que não irá se "
"alterar através da vida do ``Node`` como um atributo. No caso do "
"``CycleNode``, o argumento ``cyclevars`` não muda depois que ``Node`` é "
"instanciado., então não precisamos colocá-lo no ``render_context``. Mas "
"informações do estado que é específica para o template que está sendo "
"renderizado no momento, como a citeração corrente do ``CycleNode``, deve ser "
"armazenado no ``render_context``"

msgid ""
"Notice how we used ``self`` to scope the ``CycleNode`` specific information "
"within the ``render_context``. There may be multiple ``CycleNodes`` in a "
"given template, so we need to be careful not to clobber another node's state "
"information. The easiest way to do this is to always use ``self`` as the key "
"into ``render_context``. If you're keeping track of several state variables, "
"make ``render_context[self]`` a dictionary."
msgstr ""
"Note como usamos o ``self`` como escopo para a informação específica do "
"``CycleNode`` dentro do ``render_context``. Pode haver múltiplos "
"``CycleNodes`` em um dado template, então é preciso ter cuidado para não "
"conflitar outra informação de estado do nó.  A maneira mais fácil de fazer "
"isso é sempre usar ``self`` como chave dentro do ``render_context``. Se está "
"acompanhando várias variáveis de estado faça do ``render_context[self]`` um "
"dicionário."

msgid "Registering the tag"
msgstr "Registrando a tag"

msgid ""
"Finally, register the tag with your module's ``Library`` instance, as "
"explained in :ref:`writing custom template tags<howto-writing-custom-"
"template-tags>` above. Example::"
msgstr ""

msgid "The ``tag()`` method takes two arguments:"
msgstr "O método ``tag()`` recebe dois argumentos:"

msgid ""
"The name of the template tag -- a string. If this is left out, the name of "
"the compilation function will be used."
msgstr ""
"O nome da template tag -- uma string. Se não for informado, o nome da função "
"de compilação será usado. "

msgid ""
"As with filter registration, it is also possible to use this as a decorator::"
msgstr ""
"Assim como o registro de um filtro, também é possível usá-lo como \"decorator"
"\"::"

msgid ""
"If you leave off the ``name`` argument, as in the second example above, "
"Django will use the function's name as the tag name."
msgstr ""
"Se não informado o argumento ``name``, como no segundo exemplo acima, o "
"Django irá usar o nome da função como nome da tag."

msgid "Passing template variables to the tag"
msgstr "Passando variáveis de template para a tag."

msgid ""
"Although you can pass any number of arguments to a template tag using "
"``token.split_contents()``, the arguments are all unpacked as string "
"literals. A little more work is required in order to pass dynamic content (a "
"template variable) to a template tag as an argument."
msgstr ""
"Embora você possa passar qualquer número de argumentos para uma tag de "
"template usando ``token.split_contents()``, os argumentos são todos "
"\"desempacotados\" como strings literais. Um pouco mais de trabalho é "
"requerido para que passe o conteúdo dinamicamente (uma variável de template) "
"para uma tag de template como argumento."

msgid ""
"While the previous examples have formatted the current time into a string "
"and returned the string, suppose you wanted to pass in a :class:`~django.db."
"models.DateTimeField` from an object and have the template tag format that "
"date-time:"
msgstr ""
"Enquando os exemplos anteriores formataram a hora corrente como string e "
"retornaram uma string, suponha que queira passar um :class:`~django.db."
"models.DateTimeField` de um objeto e a template tag formate o date-time:"

msgid "Initially, ``token.split_contents()`` will return three values:"
msgstr "Inicialmente, ``token.split_contents()`` irá retornar três valores:"

msgid "The tag name ``format_time``."
msgstr "A tag chamada ``format_time``."

msgid ""
"The string ``'blog_entry.date_updated'`` (without the surrounding quotes)."
msgstr "A string ``'blog_entry.date_updated'`` (sem as aspas)."

msgid ""
"The formatting string ``'\"%Y-%m-%d %I:%M %p\"'``. The return value from "
"``split_contents()`` will include the leading and trailing quotes for string "
"literals like this."
msgstr ""
"A string de formatação ``'\"%Y-%m-%d %I:%M %p\"'``. O valor retornado do "
"``split_contents()`` irá incluir as aspas para string literais como esta."

msgid "Now your tag should begin to look like this::"
msgstr "Agora sua tag deve começar a parecer com isso::"

msgid ""
"You also have to change the renderer to retrieve the actual contents of the "
"``date_updated`` property of the ``blog_entry`` object.  This can be "
"accomplished by using the ``Variable()`` class in ``django.template``."
msgstr ""
"Também é necessário alterar o renderizador para retornar o conteúdo atual da "
"propriedade ``date_update`` do objeto ``blog_entry``."

msgid ""
"To use the ``Variable`` class, instantiate it with the name of the variable "
"to be resolved, and then call ``variable.resolve(context)``. So, for "
"example::"
msgstr ""

msgid ""
"Variable resolution will throw a ``VariableDoesNotExist`` exception if it "
"cannot resolve the string passed to it in the current context of the page."
msgstr ""
"A resolução da variável irá lançar uma excessão ``VariableDoesNotExist`` se "
"não conseguir resolver a string recebida no contexto corrente da página."

msgid "Setting a variable in the context"
msgstr "Definindo uma variável no contexto"

msgid ""
"The above examples output a value. Generally, it's more flexible if your "
"template tags set template variables instead of outputting values. That way, "
"template authors can reuse the values that your template tags create."
msgstr ""

msgid ""
"To set a variable in the context, use dictionary assignment on the context "
"object in the ``render()`` method. Here's an updated version of "
"``CurrentTimeNode`` that sets a template variable ``current_time`` instead "
"of outputting it::"
msgstr ""

msgid ""
"Note that ``render()`` returns the empty string. ``render()`` should always "
"return string output. If all the template tag does is set a variable, "
"``render()`` should return the empty string."
msgstr ""
"Repare que ``render()`` retorna uma string vazia. ``render()`` deve sempre "
"retornar uma string como saída. Se tudo que a tag de template faz é definir "
"uma variável, ``render()`` deve retornar uma string vazia."

msgid "Here's how you'd use this new version of the tag:"
msgstr "Aqui como você deveria usar esta nova versão da tag:"

msgid "Variable scope in context"
msgstr "Escopo da variável no context"

msgid ""
"Any variable set in the context will only be available in the same ``block`` "
"of the template in which it was assigned. This behavior is intentional; it "
"provides a scope for variables so that they don't conflict with context in "
"other blocks."
msgstr ""
"Qualquer variável definida no contexto somente estará disponível no mesmo "
"\"bloco\" do template no qual ele foi definido. Este comportamento é "
"intencional; ele fornece um escopo para as variáveis que então não conflitam "
"com o contexto de outros blocos."

msgid ""
"But, there's a problem with ``CurrentTimeNode2``: The variable name "
"``current_time`` is hard-coded. This means you'll need to make sure your "
"template doesn't use ``{{ current_time }}`` anywhere else, because the ``{% "
"current_time %}`` will blindly overwrite that variable's value. A cleaner "
"solution is to make the template tag specify the name of the output "
"variable, like so:"
msgstr ""
"Mas, tem um problema com ``CurrentTimeNode2``:  O nome da variável "
"``current_time`` está \"hardecodeada\". Isso significa que tem que ter "
"certeza seu template não usa ``{{ current_time }}`` em nenhum outro lugar, "
"porque o  ``{% current_time %}`` irá redefinir o valor da variável. Uma "
"solução mais limpa é fazer a tag de template especificar o nome da variável "
"de saída, como:"

msgid ""
"To do that, you'll need to refactor both the compilation function and "
"``Node`` class, like so::"
msgstr ""
"Para fazer isso, será preciso refatorar a função de compilação e a classe de "
"``Node`, deste modo::"

msgid ""
"The difference here is that ``do_current_time()`` grabs the format string "
"and the variable name, passing both to ``CurrentTimeNode3``."
msgstr ""
"A diferença aqui é que ``do_current_time()`` pega a string de formato e o "
"nome da variável passando ambos para ``CurrenteNode3``."

msgid ""
"Finally, if you only need to have a simple syntax for your custom context-"
"updating template tag, consider using the :meth:`~django.template.Library."
"simple_tag` shortcut, which supports assigning the tag results to a template "
"variable."
msgstr ""
"Finalmente, se você precisa ter somente uma sinatxe simples para sua tag de "
"template personalizada que atualiza o contexto, considere usar o atalho :"
"meth:`~django.template.Library.simple_tag`, o qual possibilita passar os "
"resultados de uma tag para uma variável de template."

msgid "Parsing until another block tag"
msgstr "\"Parsing\" até outra bloco de tag."

msgid ""
"Template tags can work in tandem. For instance, the standard :ttag:`{% "
"comment %}<comment>` tag hides everything until ``{% endcomment %}``. To "
"create a template tag such as this, use ``parser.parse()`` in your "
"compilation function."
msgstr ""
"Tags de templates podem trabalhar em tandem. Por exemplo, a tag padrão :ttag:"
"`{% comment %}<comment>` esconde tudo até ``{% endcomment %}``. Para criar "
"uma tag de template coo esta, use ``parser.parse()`` na sua função de "
"compilação."

msgid "Here's how a simplified ``{% comment %}`` tag might be implemented::"
msgstr ""
"Aqui como uma tag  ``{% comment %}`` simplificada pode ser implmentada::"

msgid ""
"The actual implementation of :ttag:`{% comment %}<comment>` is slightly "
"different in that it allows broken template tags to appear between ``{% "
"comment %}`` and ``{% endcomment %}``. It does so by calling ``parser."
"skip_past('endcomment')`` instead of ``parser.parse(('endcomment',))`` "
"followed by ``parser.delete_first_token()``, thus avoiding the generation of "
"a node list."
msgstr ""
" A implementação atual da :ttag:`{% comment %}<comment>` é ligeiramente "
"diferente na medida que permite que tags de templates \"quebradas\"  "
"apareçam entre ``{% comment %}`` e ``{% endcomment %}``. Faz isso chamando "
"``parser.skip_past('endcomment')`` no lugar de  ``parser."
"parse(('endcomment',))`` seguido por ``parser.delete_first_token()``, assim "
"evitando gerar uma lista de nós. "

msgid ""
"``parser.parse()`` takes a tuple of names of block tags ''to parse until''. "
"It returns an instance of ``django.template.NodeList``, which is a list of "
"all ``Node`` objects that the parser encountered ''before'' it encountered "
"any of the tags named in the tuple."
msgstr ""
"``parser.parse()``  recebe uma tupla de nomes de blocos de tags para "
"parsear. Ele retorna uma instância de ``django.template.NodeList``,  que é "
"uma lista de todos os objetos ``Node`` que o analisador encontrou \"antes\" "
"que tenha encontrado qualquer nome de tags na tupla."

msgid ""
"In ``\"nodelist = parser.parse(('endcomment',))\"`` in the above example, "
"``nodelist`` is a list of all nodes between the ``{% comment %}`` and ``{% "
"endcomment %}``, not counting ``{% comment %}`` and ``{% endcomment %}`` "
"themselves."
msgstr ""
"Em ``\"nodelist = parser.parse(('endcomment',))\"`` no exemplo acima, "
"``nodelist`` é uma lista de todos os nós entre o``{% comment %}`` e ``{% "
"endcomment %}``, sem contar os próprios ``{% comment %}`` e ``{% endcomment "
"%}``."

msgid ""
"After ``parser.parse()`` is called, the parser hasn't yet \"consumed\" the "
"``{% endcomment %}`` tag, so the code needs to explicitly call ``parser."
"delete_first_token()``."
msgstr ""
"Depois que ``parser.parse()`` é chamado, o analisaor sintático ainda não "
"\"consumiu\" a tag ``{% endcomment %}``, então o código precisa chamar "
"explicitamente o ``parser.delete_first_token()``."

msgid ""
"``CommentNode.render()`` returns an empty string. Anything between ``{% "
"comment %}`` and ``{% endcomment %}`` is ignored."
msgstr ""

msgid "Parsing until another block tag, and saving contents"
msgstr ""
"Analisando sintaticamente até um outro bloco da tag, e armazenando seu "
"conteúdo."

msgid ""
"In the previous example, ``do_comment()`` discarded everything between ``{% "
"comment %}`` and ``{% endcomment %}``. Instead of doing that, it's possible "
"to do something with the code between block tags."
msgstr ""
"No exemplo anterior, ``do_comment()`` descartou tudo entre``{% comment %}`` "
"e ``{% endcomment %}``. Ao invés de fazer isso, é possível fazer alguma "
"coisa com o código que está dentro do bloco de tags."

msgid ""
"For example, here's a custom template tag, ``{% upper %}``, that capitalizes "
"everything between itself and ``{% endupper %}``."
msgstr ""
"Por exemplo, aqui uma tag de template, ``{% upper %}``, que coloca todas as "
"letras em maiúsculo de tudo entre ela e  ``{% endupper %}``."

msgid "Usage:"
msgstr "Uso:"

msgid ""
"As in the previous example, we'll use ``parser.parse()``. But this time, we "
"pass the resulting ``nodelist`` to the ``Node``::"
msgstr ""
"Como no exemplo anterior, usaremos ``parser.parse()``. Mas agora, passamos o "
"``nodelist`` resultante para o ``Node``::"

msgid ""
"The only new concept here is the ``self.nodelist.render(context)`` in "
"``UpperNode.render()``."
msgstr ""
"O único conceito novo aqui é o ``self.nodelist.render(context)`` no "
"``UpperNode.render()``."

msgid ""
"For more examples of complex rendering, see the source code of :ttag:`{% for "
"%}<for>` in :source:`django/template/defaulttags.py` and :ttag:`{% if %}"
"<if>` in :source:`django/template/smartif.py`."
msgstr ""

msgid "How to use Django with Daphne"
msgstr ""

msgid ""
":pypi:`Daphne <daphne>` is a pure-Python ASGI server for UNIX, maintained by "
"members of the Django project. It acts as the reference server for ASGI."
msgstr ""

msgid "Installing Daphne"
msgstr "Instalando o Daphne"

msgid "You can install Daphne with ``pip``:"
msgstr ""

msgid "Running Django in Daphne"
msgstr "Rodando o Django no Daphne"

msgid ""
"When Daphne is installed, a ``daphne`` command is available which starts the "
"Daphne server process. At its simplest, Daphne needs to be called with the "
"location of a module containing an ASGI application object, followed by what "
"the application is called (separated by a colon)."
msgstr ""

msgid "For a typical Django project, invoking Daphne would look like:"
msgstr ""

msgid ""
"This will start one process listening on ``127.0.0.1:8000``. It requires "
"that your project be on the Python path; to ensure that run this command "
"from the same directory as your ``manage.py`` file."
msgstr ""

msgid "Integration with ``runserver``"
msgstr ""

msgid ""
"Daphne provides a :djadmin:`runserver` command to serve your site under ASGI "
"during development."
msgstr ""

msgid ""
"This can be enabled by adding ``daphne`` to the start of your :setting:"
"`INSTALLED_APPS` and adding an ``ASGI_APPLICATION`` setting pointing to your "
"ASGI application object::"
msgstr ""

msgid "How to use Django with Hypercorn"
msgstr ""

msgid ""
"Hypercorn_ is an ASGI server that supports HTTP/1, HTTP/2, and HTTP/3 with "
"an emphasis on protocol support."
msgstr ""

msgid "Installing Hypercorn"
msgstr ""

msgid "You can install Hypercorn with ``pip``:"
msgstr ""

msgid "Running Django in Hypercorn"
msgstr ""

msgid ""
"When Hypercorn is installed, a ``hypercorn`` command is available which runs "
"ASGI applications. Hypercorn needs to be called with the location of a "
"module containing an ASGI application object, followed by what the "
"application is called (separated by a colon)."
msgstr ""

msgid "For a typical Django project, invoking Hypercorn would look like:"
msgstr ""

msgid ""
"For more advanced usage, please read the `Hypercorn documentation "
"<Hypercorn_>`_."
msgstr ""

msgid "How to deploy with ASGI"
msgstr "Como fazer o deploy com ASGI"

msgid ""
"As well as WSGI, Django also supports deploying on ASGI_, the emerging "
"Python standard for asynchronous web servers and applications."
msgstr ""

msgid ""
"Django's :djadmin:`startproject` management command sets up a default ASGI "
"configuration for you, which you can tweak as needed for your project, and "
"direct any ASGI-compliant application server to use."
msgstr ""

msgid ""
"Django includes getting-started documentation for the following ASGI servers:"
msgstr ""

msgid "The ``application`` object"
msgstr "O objeto ``Application``"

msgid ""
"Like WSGI, ASGI has you supply an ``application`` callable which the "
"application server uses to communicate with your code. It's commonly "
"provided as an object named ``application`` in a Python module accessible to "
"the server."
msgstr ""

msgid ""
"The :djadmin:`startproject` command creates a file :file:`<project_name>/"
"asgi.py` that contains such an ``application`` callable."
msgstr ""

msgid ""
"It's not used by the development server (``runserver``), but can be used by "
"any ASGI server either in development or in production."
msgstr ""

msgid ""
"ASGI servers usually take the path to the application callable as a string; "
"for most Django projects, this will look like ``myproject.asgi:application``."
msgstr ""

msgid ""
"While Django's default ASGI handler will run all your code in a synchronous "
"thread, if you choose to run your own async handler you must be aware of "
"async-safety."
msgstr ""

msgid ""
"Do not call blocking synchronous functions or libraries in any async code. "
"Django prevents you from doing this with the parts of Django that are not "
"async-safe, but the same may not be true of third-party apps or Python "
"libraries."
msgstr ""

msgid "Configuring the settings module"
msgstr "Configurando o módulo de definições."

msgid ""
"When the ASGI server loads your application, Django needs to import the "
"settings module — that's where your entire application is defined."
msgstr ""

msgid ""
"Django uses the :envvar:`DJANGO_SETTINGS_MODULE` environment variable to "
"locate the appropriate settings module. It must contain the dotted path to "
"the settings module. You can use a different value for development and "
"production; it all depends on how you organize your settings."
msgstr ""
"O Django usa a variável de ambiente :envvar:`DJANGO_SETTINGS_MODULE` para "
"localizar o módulo de definições apropriado. Este deve conter um caminho "
"pontuado para o módulo de definições. Você pode usar um valor diferente para "
"desenvolvimento e produção; Tudo depende de como você organiza suas "
"definições."

msgid ""
"If this variable isn't set, the default :file:`asgi.py` sets it to ``mysite."
"settings``, where ``mysite`` is the name of your project."
msgstr ""

msgid "Applying ASGI middleware"
msgstr ""

msgid ""
"To apply ASGI middleware, or to embed Django in another ASGI application, "
"you can wrap Django's ``application`` object in the ``asgi.py`` file. For "
"example::"
msgstr ""

msgid "How to use Django with Uvicorn"
msgstr ""

msgid ""
"Uvicorn_ is an ASGI server based on ``uvloop`` and ``httptools``, with an "
"emphasis on speed."
msgstr ""

msgid "Installing Uvicorn"
msgstr ""

msgid "You can install Uvicorn with ``pip``:"
msgstr ""

msgid "Running Django in Uvicorn"
msgstr ""

msgid ""
"When Uvicorn is installed, a ``uvicorn`` command is available which runs "
"ASGI applications. Uvicorn needs to be called with the location of a module "
"containing an ASGI application object, followed by what the application is "
"called (separated by a colon)."
msgstr ""

msgid "For a typical Django project, invoking Uvicorn would look like:"
msgstr ""

msgid ""
"In development mode, you can add ``--reload`` to cause the server to reload "
"any time a file is changed on disk."
msgstr ""

msgid ""
"For more advanced usage, please read the `Uvicorn documentation <Uvicorn_>`_."
msgstr ""

msgid "Deploying Django using Uvicorn and Gunicorn"
msgstr ""

msgid ""
"Gunicorn_ is a robust web server that implements process monitoring and "
"automatic restarts. This can be useful when running Uvicorn in a production "
"environment."
msgstr ""

msgid "To install Uvicorn and Gunicorn, use the following:"
msgstr ""

msgid "Then start Gunicorn using the Uvicorn worker class like this:"
msgstr ""

msgid "Deployment checklist"
msgstr "Lista de verificação para distribuição"

msgid ""
"The internet is a hostile environment. Before deploying your Django project, "
"you should take some time to review your settings, with security, "
"performance, and operations in mind."
msgstr ""

msgid ""
"Django includes many :doc:`security features </topics/security>`. Some are "
"built-in and always enabled. Others are optional because they aren't always "
"appropriate, or because they're inconvenient for development. For example, "
"forcing HTTPS may not be suitable for all websites, and it's impractical for "
"local development."
msgstr ""
"O Django inclui muitos :doc:`security features </topics/security>`. Agumas "
"são embutidas e sempre habilitadas. Outras são opcionais porque nem sempre "
"são apropriadas, ou porque são inconvenientes para desenvolvimento. Por "
"exemplo, forçar HTTPS talvez não seja bom para todos os websites e não "
"prático para desenvolvimento local."

msgid ""
"Performance optimizations are another category of trade-offs with "
"convenience. For instance, caching is useful in production, less so for "
"local development. Error reporting needs are also widely different."
msgstr ""
"Otimização de desempenho são outra categoria de \"perde-ganha\" com a "
"conveniência. Por exemplo, \"cache\" é útil em produção, mas não em "
"desenvolvimento. Necessidades de relatórios de erros também são amplamente "
"diferentes."

msgid "The following checklist includes settings that:"
msgstr "As seguinte lista de verificação inclui configurações que:"

msgid ""
"must be set properly for Django to provide the expected level of security;"
msgstr ""
"devem ser configuradas propriamente para que o Django forneça o nível "
"esperado de segurança."

msgid "are expected to be different in each environment;"
msgstr "espera-se que sejam diferentes  em cada ambiente."

msgid "enable optional security features;"
msgstr "habilitam características de segurança opcionais;"

msgid "enable performance optimizations;"
msgstr "habilitam otimização de desempenho."

msgid "provide error reporting."
msgstr "fornece relatório de erro."

msgid ""
"Many of these settings are sensitive and should be treated as confidential. "
"If you're releasing the source code for your project, a common practice is "
"to publish suitable settings for development, and to use a private settings "
"module for production."
msgstr ""
"Muitas destas configurações são sensíveis e devem ser tratadas "
"confidencialmente. Se você está publicando o código fonte do seu projeto, "
"uma prática comum é publicar configurações adequadas para desenvolvimento, e "
"usar o módulo de configuração para produção."

msgid "Run ``manage.py check --deploy``"
msgstr "Execute ``manage.py check --deploy``"

msgid ""
"Some of the checks described below can be automated using the :option:`check "
"--deploy` option. Be sure to run it against your production settings file as "
"described in the option's documentation."
msgstr ""
"Algumas das verificações descritas abaixo podem ser automatizadas usando a "
"opção :option:`check --deploy`. Assegure-se de executá-lo com o arquivo de "
"configuração como descrito  na documentação de configuração."

msgid "Critical settings"
msgstr "Configurações críticas."

msgid ":setting:`SECRET_KEY`"
msgstr ":setting:`SECRET_KEY`"

msgid ""
"**The secret key must be a large random value and it must be kept secret.**"
msgstr ""
"**A chave secreta deve ser um valor randômico e longo e deve ser mantido em "
"segredo**"

msgid ""
"Make sure that the key used in production isn't used anywhere else and avoid "
"committing it to source control. This reduces the number of vectors from "
"which an attacker may acquire the key."
msgstr ""
"Tenha ceteza que a chave usada em produção não é usada em nenhum outro local "
"e evite \"commitar\" isso no código fonte. Isso reduz o número de vetores "
"dos quais um atacante possa acessar a chave."

msgid ""
"Instead of hardcoding the secret key in your settings module, consider "
"loading it from an environment variable::"
msgstr ""
"Ao invés de \"hardecodear\" a chave secreta no módulo de configuração, "
"considere carrega-lo de uma variável de ambiente::"

msgid "or from a file::"
msgstr "ou de um arquivo::"

msgid "If rotating secret keys, you may use :setting:`SECRET_KEY_FALLBACKS`::"
msgstr ""

msgid ""
"Ensure that old secret keys are removed from ``SECRET_KEY_FALLBACKS`` in a "
"timely manner."
msgstr ""

msgid ""
"The ``SECRET_KEY_FALLBACKS`` setting was added to support rotating secret "
"keys."
msgstr ""

msgid ":setting:`DEBUG`"
msgstr ":setting:`DEBUG`"

msgid "**You must never enable debug in production.**"
msgstr "**Nunca habilite o debug em produção**"

msgid ""
"You're certainly developing your project with :setting:`DEBUG = True "
"<DEBUG>`, since this enables handy features like full tracebacks in your "
"browser."
msgstr ""
"Certamente você desenvolvimento seu projeto com  :setting:`DEBUG = True "
"<DEBUG>`, já que isso habilita características convenientes como \"tracebakcs"
"\" no seu browser."

msgid ""
"For a production environment, though, this is a really bad idea, because it "
"leaks lots of information about your project: excerpts of your source code, "
"local variables, settings, libraries used, etc."
msgstr ""
"Para o ambiente de produção, embora, isso é realmente uma má idéia, porque "
"ele abre uma série de informações sobre seu projeto: dicas de seu código "
"fonte, variáveis locais, configurações, bibliotecas usadas, etc."

msgid "Environment-specific settings"
msgstr "Configurações específicas de configurações"

msgid ":setting:`ALLOWED_HOSTS`"
msgstr ":setting:`ALLOWED_HOSTS`"

msgid ""
"When :setting:`DEBUG = False <DEBUG>`, Django doesn't work at all without a "
"suitable value for :setting:`ALLOWED_HOSTS`."
msgstr ""
"Quando :setting:`DEBUG = False <DEBUG>`, o Django não irá funcionar de "
"maneira alguma sem um valor adequado para o :setting:`ALLOWED_HOSTS`."

msgid ""
"This setting is required to protect your site against some CSRF attacks. If "
"you use a wildcard, you must perform your own validation of the ``Host`` "
"HTTP header, or otherwise ensure that you aren't vulnerable to this category "
"of attacks."
msgstr ""
"Essa configuração é requerida para proteger seu site de ataques CSRF. Se "
"usar um caracter corínga, você deve fazer sua própria validação do cabeçalho "
"HTTP do ``Host``, ou de outra maneira tenha certeza que você não está "
"vulnerável a esse tipo de ataque."

msgid ""
"You should also configure the web server that sits in front of Django to "
"validate the host. It should respond with a static error page or ignore "
"requests for incorrect hosts instead of forwarding the request to Django. "
"This way you'll avoid spurious errors in your Django logs (or emails if you "
"have error reporting configured that way). For example, on nginx you might "
"set up a default server to return \"444 No Response\" on an unrecognized "
"host:"
msgstr ""

msgid ":setting:`CACHES`"
msgstr ":setting:`CACHES`"

msgid ""
"If you're using a cache, connection parameters may be different in "
"development and in production. Django defaults to per-process :ref:`local-"
"memory caching <local-memory-caching>` which may not be desirable."
msgstr ""
"Se você estiver usando um \"cache\", os parâmetros de conexão do embiente de "
"desenvolvimento talvez sejam diferentes dos parâmetros de produção. O padrão "
"do Django é \"per-processo\" :ref:`local-memory caching <local-memory-"
"caching>` o qual talvez não seja o desejável."

msgid ""
"Cache servers often have weak authentication. Make sure they only accept "
"connections from your application servers."
msgstr ""
"Servidores de \"cache\" tem em geral uma autenticação fraca. Assegure-se que "
"somente aceite conexões de seus servidores de aplicações."

msgid ":setting:`DATABASES`"
msgstr ":setting:`DATABASES`"

msgid ""
"Database connection parameters are probably different in development and in "
"production."
msgstr ""
"Parâmetros de conexões de bancos de dados são provavelmente diferentes em "
"desenvolvimento e em produção."

msgid ""
"Database passwords are very sensitive. You should protect them exactly like :"
"setting:`SECRET_KEY`."
msgstr ""
"Senhas de bancos de dados são muito sensíveis. Você deve protegê-las tal "
"como o :setting:`SECRET_KEY`."

msgid ""
"For maximum security, make sure database servers only accept connections "
"from your application servers."
msgstr ""
"Para máxima segurança, certifique que os servidores de bancos de dados "
"somente aceitem conexões de seus servidores de aplicação."

msgid "If you haven't set up backups for your database, do it right now!"
msgstr "Se não configurou backup para seu banco de dados, faça isso já!"

msgid ":setting:`EMAIL_BACKEND` and related settings"
msgstr ":setting:`EMAIL_BACKEND` e configurações relacionadas"

msgid "If your site sends emails, these values need to be set correctly."
msgstr ""
"Se seu site envia e-mails, estes valores precisam ser definidos corretamente."

msgid ""
"By default, Django sends email from webmaster@localhost and root@localhost. "
"However, some mail providers reject email from these addresses. To use "
"different sender addresses, modify the :setting:`DEFAULT_FROM_EMAIL` and :"
"setting:`SERVER_EMAIL` settings."
msgstr ""
"Por padrão, o Django envia email de webmaster@localhost e root@localhost. "
"Entretanto, alguns provedores de email rejeitam emails destes endereços. "
"Para usar endereços de envio diferentes, modifique as configurações :setting:"
"`DEFAULT_FROM_EMAIL` e :setting:`SERVER_EMAIL` ."

msgid ":setting:`STATIC_ROOT` and :setting:`STATIC_URL`"
msgstr ":setting:`STATIC_ROOT` e :setting:`STATIC_URL`"

msgid ""
"Static files are automatically served by the development server. In "
"production, you must define a :setting:`STATIC_ROOT` directory where :"
"djadmin:`collectstatic` will copy them."
msgstr ""
"Arquivos estáticos são automaticamente servidos pelo servidor de "
"desenvolvimento. Em produção, você deve definir o diretório :setting:"
"`STATIC_ROOT` onde o :djadmin:`collectstatic` irá copiá-los."

msgid "See :doc:`/howto/static-files/index` for more information."
msgstr "Veja :doc:`/howto/static-files/index` para mais informações."

msgid ":setting:`MEDIA_ROOT` and :setting:`MEDIA_URL`"
msgstr ":setting:`MEDIA_ROOT` e :setting:`MEDIA_URL`"

msgid ""
"Media files are uploaded by your users. They're untrusted! Make sure your "
"web server never attempts to interpret them. For instance, if a user uploads "
"a ``.php`` file, the web server shouldn't execute it."
msgstr ""
"Arquivos de media são enviados por usuários. Eles não são confiáveis! "
"Assegure-se que seu servidor web nunca tente interpretá-los. Por exemplo, se "
"um usuário enviar um arquivo ``.php``, o servidor web não deve executá-lo."

msgid "Now is a good time to check your backup strategy for these files."
msgstr ""
"Agora é uma boa hora para verificar sua estratégia de backup para estes "
"arquivos."

msgid "HTTPS"
msgstr "HTTPS"

msgid ""
"Any website which allows users to log in should enforce site-wide HTTPS to "
"avoid transmitting access tokens in clear. In Django, access tokens include "
"the login/password, the session cookie, and password reset tokens. (You "
"can't do much to protect password reset tokens if you're sending them by "
"email.)"
msgstr ""
"Qualquer website que possibilita autenticação de usuários deveria exigir "
"HTTPS em todo o site para evitar a transmissão de tokens planos. No Djano, "
"os tokes de acesso incluem o login/senha, a \"cookie\" da sessão e o token "
"de reset de senha. (Não é possível fazer muito para proteger bem os tokens "
"de reset de senha se são enviados via email)."

msgid ""
"Protecting sensitive areas such as the user account or the admin isn't "
"sufficient, because the same session cookie is used for HTTP and HTTPS. Your "
"web server must redirect all HTTP traffic to HTTPS, and only transmit HTTPS "
"requests to Django."
msgstr ""
"Proteger áreas sensíveis como a conta do usuário e o admin não são "
"sificientes, porque o mesmo \"cookie\" de sessão é usado para HTTP e HTTPS. "
"Seu servidor WEB deve redirecionar todas as requisições HTTP para HTTPS, e "
"somente transmitir requests HTTPS para o Django."

msgid "Once you've set up HTTPS, enable the following settings."
msgstr ""
"Uma vez que tenha configurado HTTPS, habilite as seguintes configurações."

msgid ":setting:`CSRF_COOKIE_SECURE`"
msgstr ":setting:`CSRF_COOKIE_SECURE`"

msgid ""
"Set this to ``True`` to avoid transmitting the CSRF cookie over HTTP "
"accidentally."
msgstr ""
"Defina este como ``True`` para evitar transmissão do \"cookie\" de CSRF "
"através de HTTP acidentalmente."

msgid ":setting:`SESSION_COOKIE_SECURE`"
msgstr ":setting:`SESSION_COOKIE_SECURE`"

msgid ""
"Set this to ``True`` to avoid transmitting the session cookie over HTTP "
"accidentally."
msgstr ""
"Defina este como ``True`` para evitar transmissão do \"cookie\" da sessão "
"através de HTTP acidentalmente."

msgid "Performance optimizations"
msgstr "Otimizações de desempenho."

msgid ""
"Setting :setting:`DEBUG = False <DEBUG>` disables several features that are "
"only useful in development. In addition, you can tune the following settings."
msgstr ""
"A Configuração :setting:`DEBUG = False <DEBUG>` desabilita muitas "
"características que são úteis somente em desenvolvimento. Além disso, você "
"pode ajustar as seguintes configurações."

msgid "Sessions"
msgstr "Sessões"

msgid ""
"Consider using :ref:`cached sessions <cached-sessions-backend>` to improve "
"performance."
msgstr ""

msgid ""
"If using database-backed sessions, regularly :ref:`clear old sessions "
"<clearing-the-session-store>` to avoid storing unnecessary data."
msgstr ""

msgid ":setting:`CONN_MAX_AGE`"
msgstr ":setting:`CONN_MAX_AGE`"

msgid ""
"Enabling :ref:`persistent database connections <persistent-database-"
"connections>` can result in a nice speed-up when connecting to the database "
"accounts for a significant part of the request processing time."
msgstr ""
"Habilitando :ref:`persistent database connections <persistent-database-"
"connections>` pode resultar em um bom aumento de velocidade no tempo de "
"processamento de requisições quando se conecta a contas do banco de dados."

msgid "This helps a lot on virtualized hosts with limited network performance."
msgstr ""
"Isso ajuda muito em Hosts virtualizados com desempenho de rede limitado."

msgid ":setting:`TEMPLATES`"
msgstr ":setting:`TEMPLATES`"

msgid ""
"Enabling the cached template loader often improves performance drastically, "
"as it avoids compiling each template every time it needs to be rendered. "
"When :setting:`DEBUG = False <DEBUG>`, the cached template loader is enabled "
"automatically. See :class:`django.template.loaders.cached.Loader` for more "
"information."
msgstr ""

msgid "Error reporting"
msgstr "Relatório de erro"

msgid ""
"By the time you push your code to production, it's hopefully robust, but you "
"can't rule out unexpected errors. Thankfully, Django can capture errors and "
"notify you accordingly."
msgstr ""
"Na hora em que o código é enviado para produção, espera-se robustez, mas não "
"podemos ter erros inexperados. Menos mal, o Django pode capturar estes erros "
"e noticá-los de acordo."

msgid ":setting:`LOGGING`"
msgstr ":setting:`LOGGING`"

msgid ""
"Review your logging configuration before putting your website in production, "
"and check that it works as expected as soon as you have received some "
"traffic."
msgstr ""
"Reveja a sua configuração de log antes de colocar seu website em produção, e "
"verifique se este está funcionando como esperado tão logo receba algum "
"tráfego."

msgid "See :doc:`/topics/logging` for details on logging."
msgstr "Veja :doc:`/topics/logging` para detalhes de log."

msgid ":setting:`ADMINS` and :setting:`MANAGERS`"
msgstr ":setting:`ADMINS` e :setting:`MANAGERS`"

msgid ":setting:`ADMINS` will be notified of 500 errors by email."
msgstr ":setting:`ADMINS` será notificado de erros do tipo 500 por email."

msgid ""
":setting:`MANAGERS` will be notified of 404 errors. :setting:"
"`IGNORABLE_404_URLS` can help filter out spurious reports."
msgstr ""
":setting:`MANAGERS` serão notificados de erros do tipo 404. :setting:"
"`IGNORABLE_404_URLS` pode ajudar a filtrar erros ilegítimos."

msgid ""
"See :doc:`/howto/error-reporting` for details on error reporting by email."
msgstr ""
"Veja :doc:`/howto/error-reporting` para detalhes sobre relatórios de erros "
"por email."

msgid "Error reporting by email doesn't scale very well"
msgstr "Relatórios de erros por email não escalam muito bem."

msgid ""
"Consider using an error monitoring system such as Sentry_ before your inbox "
"is flooded by reports. Sentry can also aggregate logs."
msgstr ""
"Considere usar um sistema de monitoramento de erros tal como o Sentry_ antes "
"que sua caixa postal seja cheia de relatórios. O Sentry pode também agregar "
"logs."

msgid "Customize the default error views"
msgstr "Customize as views de erro padrão"

msgid ""
"Django includes default views and templates for several HTTP error codes. "
"You may want to override the default templates by creating the following "
"templates in your root template directory: ``404.html``, ``500.html``, ``403."
"html``, and ``400.html``. The :ref:`default error views <error-views>` that "
"use these templates should suffice for 99% of web applications, but you can :"
"ref:`customize them <customizing-error-views>` as well."
msgstr ""

msgid "How to deploy Django"
msgstr ""

msgid ""
"Django is full of shortcuts to make web developers' lives easier, but all "
"those tools are of no use if you can't easily deploy your sites. Since "
"Django's inception, ease of deployment has been a major goal."
msgstr ""

msgid ""
"There are many options for deploying your Django application, based on your "
"architecture or your particular business needs, but that discussion is "
"outside the scope of what Django can give you as guidance."
msgstr ""

msgid ""
"Django, being a web framework, needs a web server in order to operate. And "
"since most web servers don't natively speak Python, we need an interface to "
"make that communication happen."
msgstr ""

msgid "Django currently supports two interfaces: WSGI and ASGI."
msgstr ""

msgid ""
"`WSGI`_ is the main Python standard for communicating between web servers "
"and applications, but it only supports synchronous code."
msgstr ""

msgid ""
"`ASGI`_ is the new, asynchronous-friendly standard that will allow your "
"Django site to use asynchronous Python features, and asynchronous Django "
"features as they are developed."
msgstr ""

msgid ""
"You should also consider how you will handle :doc:`static files </howto/"
"static-files/deployment>` for your application, and how to handle :doc:"
"`error reporting</howto/error-reporting>`."
msgstr ""

msgid ""
"Finally, before you deploy your application to production, you should run "
"through our :doc:`deployment checklist<checklist>` to ensure that your "
"configurations are suitable."
msgstr ""

msgid "How to authenticate against Django's user database from Apache"
msgstr ""

msgid ""
"Since keeping multiple authentication databases in sync is a common problem "
"when dealing with Apache, you can configure Apache to authenticate against "
"Django's :doc:`authentication system </topics/auth/index>` directly. This "
"requires Apache version >= 2.2 and mod_wsgi >= 2.0. For example, you could:"
msgstr ""
"Uma vez que manter múltiplos banco de dados de autenticação é um problema "
"comum quando se trata do Apache, você pode configurar o Apache para "
"autenticar diretamente no Django :doc:`authentication system </topics/auth/"
"index>`. Isso requer o Apache versão >= 2.2 e mod_wsgi >= 2.0. Por exemplo "
"você poderia:"

msgid ""
"Serve static/media files directly from Apache only to authenticated users."
msgstr ""
"Servir arquivos estáticos/media diretamente do Apache somente para usuários "
"autenticados"

msgid ""
"Authenticate access to a Subversion_ repository against Django users with a "
"certain permission."
msgstr ""
"Autenticar o acesso a um respositório Subversion_ para usuários Django com "
"uma certa permissão."

msgid "Allow certain users to connect to a WebDAV share created with mod_dav_."
msgstr ""
"Possibilita certos usuários a conectar a um compartilhamento WebDav criado "
"com mod_dav_."

msgid ""
"If you have installed a :ref:`custom user model <auth-custom-user>` and want "
"to use this default auth handler, it must support an ``is_active`` "
"attribute. If you want to use group based authorization, your custom user "
"must have a relation named 'groups', referring to a related object that has "
"a 'name' field. You can also specify your own custom mod_wsgi auth handler "
"if your custom cannot conform to these requirements."
msgstr ""
"Se você tiver instalado um: ref:`custom user model <auth-custom-user>` e "
"quiser usar esse manipulador de autenticação padrão, ele deve suportar um "
"atributo ``is_active``. Se você quiser usar a autorização baseada em grupo, "
"seu usuário personalizado deve ter uma relação chamada 'groups', referindo-"
"se a um objeto relacionado que tenha um campo 'nome'. Você também pode "
"especificar seu próprio manipulador de autenticação personalizado mod_wsgi "
"se sua costomização não puder estar em conformidade com esses requisitos."

msgid "Authentication with ``mod_wsgi``"
msgstr "Autenticação com ``mod_wsgi``"

msgid ""
"The use of ``WSGIApplicationGroup %{GLOBAL}`` in the configurations below "
"presumes that your Apache instance is running only one Django application. "
"If you are running more than one Django application, please refer to the "
"`Defining Application Groups`_ section of the mod_wsgi docs for more "
"information about this setting."
msgstr ""
"O uso do ``WSGIApplicationGroup %{GLOBAL}`` nas configurações abaixo presume "
"que a instância de Apache está rodando somente uma aplicação Django. Se "
"estiver rodando mais de uma aplicação Django, por favor refira-se a seção "
"`Defining Application Groups`_ da documentaçao mod_wsgi para maiores "
"informações sobre essa configuração."

msgid ""
"Make sure that mod_wsgi is installed and activated and that you have "
"followed the steps to set up :doc:`Apache with mod_wsgi </howto/deployment/"
"wsgi/modwsgi>`."
msgstr ""

msgid ""
"Next, edit your Apache configuration to add a location that you want only "
"authenticated users to be able to view:"
msgstr ""
"Depois, altere a configuração do Apache para adicionar um local que queira "
"que somente usuários autenticados sejam capazes de ver:"

msgid ""
"The ``WSGIAuthUserScript`` directive tells mod_wsgi to execute the "
"``check_password`` function in specified wsgi script, passing the user name "
"and password that it receives from the prompt. In this example, the "
"``WSGIAuthUserScript`` is the same as the ``WSGIScriptAlias`` that defines "
"your application :doc:`that is created by django-admin startproject </howto/"
"deployment/wsgi/index>`."
msgstr ""
"A diretiva ``WSGIAuthUserScript`` diz ao mod_wsgi para executar função "
"``check_password`` no script  wsgi especificado, passando o usuário e senha "
"que recebeu do \"prompt\". Neste exemplo, o ``WSGIAuthUserScript`` é o mesmo "
"que o ``WSGIScriptAlias`` que é quem define sua aplicação :doc:`that is "
"created by django-admin startproject </howto/deployment/wsgi/index>`."

msgid "Using Apache 2.2 with authentication"
msgstr "Usando Apache 2.2 com autenticação"

msgid "Make sure that ``mod_auth_basic`` and ``mod_authz_user`` are loaded."
msgstr ""
"Certifique-se que ``mod_auth_basic`` e o ``mod_authz_user`` foram carregados."

msgid ""
"These might be compiled statically into Apache, or you might need to use "
"LoadModule to load them dynamically in your ``httpd.conf``:"
msgstr ""
"Esses podem ser compilados estaticamente dentro do Apache, ou é necessário "
"usar o LoadModule para carregá-los dinamicamente no seu ``httpd.conf``:"

msgid ""
"Finally, edit your WSGI script ``mysite.wsgi`` to tie Apache's "
"authentication to your site's authentication mechanisms by importing the "
"``check_password`` function::"
msgstr ""
"Finalmente, altere seu script WSGI ``mysite.wsgi`` para conectar a "
"autenticação do Apache ao mecanismo de autenticação do seu site importando a "
"função ``check_password``::"

msgid ""
"Requests beginning with ``/secret/`` will now require a user to authenticate."
msgstr ""
"Requisições começando com ``/secret/`` não requererão autenticação do "
"usuário."

msgid ""
"The mod_wsgi `access control mechanisms documentation`_ provides additional "
"details and information about alternative methods of authentication."
msgstr ""
"O mod_wsgi `access control mechanisms documentation`_ fornece detalhes "
"adicionais e finromações sobre métodos alternativos de autenticação."

msgid "Authorization with ``mod_wsgi`` and Django groups"
msgstr "Autorização com ``mod_wsgi`` e grupos do Django"

msgid ""
"mod_wsgi also provides functionality to restrict a particular location to "
"members of a group."
msgstr ""
"mod_wsgi também fornece funcionalidade para restringir membros de um grupo a "
"um local particular."

msgid "In this case, the Apache configuration should look like this:"
msgstr "Neste caso, a configuração do Apache se pareça com essa:"

msgid ""
"To support the ``WSGIAuthGroupScript`` directive, the same WSGI script "
"``mysite.wsgi`` must also import the ``groups_for_user`` function which "
"returns a list groups the given user belongs to."
msgstr ""
"Para suportar a diretiva ``WSGIAuthGroupScript``, o mesmo script WSGI "
"``mysite.wsgi`` deve importar também a função  ``groups_for_user`` que "
"retorna uma lista de grupos aos quais o usuário pertence."

msgid ""
"Requests for ``/secret/`` will now also require user to be a member of the "
"\"secret-agents\" group."
msgstr ""
"Requisições para ``/secret/`` irão agora requerer que o usuário seja membro "
"do grupo \"secret-agents\"."

msgid "How to use Django with Gunicorn"
msgstr "Como usar o Django com o Gunicorn"

msgid ""
"Gunicorn_ ('Green Unicorn') is a pure-Python WSGI server for UNIX. It has no "
"dependencies and can be installed using ``pip``."
msgstr ""

msgid "Installing Gunicorn"
msgstr "Instalando o Gunicorn"

msgid ""
"Install gunicorn by running ``python -m pip install gunicorn``. For more "
"details, see the `gunicorn documentation`_."
msgstr ""

msgid "Running Django in Gunicorn as a generic WSGI application"
msgstr "Rodando Django em Gunicorn como  uma aplicação WSGI genérica."

msgid ""
"When Gunicorn is installed, a ``gunicorn`` command is available which starts "
"the Gunicorn server process. The simplest invocation of gunicorn is to pass "
"the location of a module containing a WSGI application object named "
"``application``, which for a typical Django project would look like:"
msgstr ""

msgid ""
"This will start one process running one thread listening on "
"``127.0.0.1:8000``. It requires that your project be on the Python path; the "
"simplest way to ensure that is to run this command from the same directory "
"as your ``manage.py`` file."
msgstr ""
"Isso irá iniciar um processo de uma thread escutando na ``127.0.0.1:8000``. "
"Isso requer que seu projeto esteja no path Python; a maneira mais simples de "
"verificar isso é rodar este comando do memso diretório que seu arquivo "
"``manage.py``"

msgid "See Gunicorn's `deployment documentation`_ for additional tips."
msgstr "Veja  `deployment documentation`_  do Gunicorn para dicas adicionais"

msgid "How to deploy with WSGI"
msgstr "Como implementar com WSGI"

msgid ""
"Django's primary deployment platform is WSGI_, the Python standard for web "
"servers and applications."
msgstr ""
"A principal plataforma de deploy do Django é WSGI_, o padrão Python para "
"servidores web e aplicações."

msgid ""
"Django's :djadmin:`startproject` management command sets up a minimal "
"default WSGI configuration for you, which you can tweak as needed for your "
"project, and direct any WSGI-compliant application server to use."
msgstr ""

msgid ""
"Django includes getting-started documentation for the following WSGI servers:"
msgstr "O Django inclui documentação básica para os seguintes servidores WSGI:"

msgid ""
"The key concept of deploying with WSGI is the ``application`` callable which "
"the application server uses to communicate with your code. It's commonly "
"provided as an object named ``application`` in a Python module accessible to "
"the server."
msgstr ""
"O conceito chave para implantação com WSGI é o executável ``application`` o "
"qual o servidor de aplicação usa para se comunicar com seu código. Isso é "
"comumente fornecido como um objeto chamado ``application`` em um módulo "
"Python acessível ao servidor."

msgid ""
"The :djadmin:`startproject` command creates a file :file:`<project_name>/"
"wsgi.py` that contains such an ``application`` callable."
msgstr ""
"O comando :djadmin:`startproject` cria um arquivo  :file:`<project_name>/"
"wsgi.py` que contém a tal ``application`` executável. "

msgid ""
"It's used both by Django's development server and in production WSGI "
"deployments."
msgstr ""
"Ele é usado tanto para o servidor de desenvolvimento do Django quanto para a "
"implantação WSGI para produção."

msgid ""
"WSGI servers obtain the path to the ``application`` callable from their "
"configuration. Django's built-in server, namely the :djadmin:`runserver` "
"command, reads it from the :setting:`WSGI_APPLICATION` setting. By default, "
"it's set to ``<project_name>.wsgi.application``, which points to the "
"``application`` callable in :file:`<project_name>/wsgi.py`."
msgstr ""
"Servidores WSGI obtém o caminho para o executável da ``application`` da sua "
"configuração. O servidor embutido do Django, comando denominado :djadmin:"
"`runserver`, lê isso da definição :setting:`WSGI_APPLICATION`. Por padrão, "
"está definido como  ``<project_name>.wsgi.application``, o que aponta para o "
"executável de ``application`` no  :file:`<project_name>/wsgi.py`."

msgid ""
"When the WSGI server loads your application, Django needs to import the "
"settings module — that's where your entire application is defined."
msgstr ""
"QUando o servidor WSGI carrega sua aplicação, o Django precisa importar o "
"módulo de definições que é onde toda a sua aplicação é definida."

msgid ""
"If this variable isn't set, the default :file:`wsgi.py` sets it to ``mysite."
"settings``, where ``mysite`` is the name of your project. That's how :"
"djadmin:`runserver` discovers the default settings file by default."
msgstr ""
"Se essa variáve não está setada, o padrão :file:`wsgi.py` define isso como "
"``mysite.settings``, onde ``mysite`` é o nome do seu projeto. Assim é o "
"padrão de como o :djadmin:`runserver` descobre o arquivo de definições "
"padrão."

msgid ""
"Since environment variables are process-wide, this doesn't work when you run "
"multiple Django sites in the same process. This happens with mod_wsgi."
msgstr ""
"Uma vez que as variáveis de ambiente são para todo o processo, isso não "
"funciona quando você executa múltiplos Django sites  no mesmo processo. Isso "
"acontece com mod_wsgi."

msgid ""
"To avoid this problem, use mod_wsgi's daemon mode with each site in its own "
"daemon process, or override the value from the environment by enforcing ``os."
"environ[\"DJANGO_SETTINGS_MODULE\"] = \"mysite.settings\"`` in your :file:"
"`wsgi.py`."
msgstr ""
"Para evitar este problema, use o daemon do mod_wsgi com cada site em seu "
"próprio processo, ou substitua  o valor do ambiente forçando ``os."
"environ[\"DJANGO_SETTINGS_MODULE\"] = \"mysite.settings\"`` no seu :file:"
"`wsgi.py`."

msgid "Applying WSGI middleware"
msgstr "Aplicando o middleware WSGI"

msgid ""
"To apply :pep:`WSGI middleware <3333#middleware-components-that-play-both-"
"sides>` you can wrap the application object. For instance you could add "
"these lines at the bottom of :file:`wsgi.py`::"
msgstr ""

msgid ""
"You could also replace the Django WSGI application with a custom WSGI "
"application that later delegates to the Django WSGI application, if you want "
"to combine a Django application with a WSGI application of another framework."
msgstr ""
"Poderia também substituir a aplicação WSGI Django por uma aplicação WSGI que "
"mais tarde delega à aplicação WSGI Django, se quiser combinar uma aplicação "
"Django com uma aplicação WSGI de um outro framework."

msgid "How to use Django with Apache and ``mod_wsgi``"
msgstr "Como usar o Django com Apache e ``mod_wsgi``"

msgid ""
"Deploying Django with Apache_ and `mod_wsgi`_ is a tried and tested way to "
"get Django into production."
msgstr ""
"Implementar Django com Apache_ e `mod_wsgi`_ é uma forma testada e "
"experimentada de colocar o Django em produção."

msgid ""
"mod_wsgi is an Apache module which can host any Python WSGI_ application, "
"including Django. Django will work with any version of Apache which supports "
"mod_wsgi."
msgstr ""
"O mod_wsgi é um módulo Apache o quam pode hospedar qualquer aplicação Python "
"WSGI_, incluindo Django. Django irá funcionar com qualquer versão do Apache "
"que suporte mod_wsgi."

msgid ""
"The `official mod_wsgi documentation`_ is your source for all the details "
"about how to use mod_wsgi. You'll probably want to start with the "
"`installation and configuration documentation`_."
msgstr ""
"A `official mod_wsgi documentation`_ é sua fonte para todos os detalhes "
"sobre como usar mod_wsgi. Você provavelmente quer começar com `installation "
"and configuration documentation`_."

msgid "Basic configuration"
msgstr "Configuração Básica"

msgid ""
"Once you've got mod_wsgi installed and activated, edit your Apache server's "
"`httpd.conf`_ file and add the following."
msgstr ""

msgid ""
"The first bit in the ``WSGIScriptAlias`` line is the base URL path you want "
"to serve your application at (``/`` indicates the root url), and the second "
"is the location of a \"WSGI file\" -- see below -- on your system, usually "
"inside of your project package (``mysite`` in this example). This tells "
"Apache to serve any request below the given URL using the WSGI application "
"defined in that file."
msgstr ""
"A primeira parte da linha ``WSGIScriptAlias`` é a URL base que você quer "
"servir sua aplicação (``/`` indica a URL raiz),  e a segunda é o local do "
"arquivo \"WSGI\" -- veja abaixo -- no seu sistema, geralmente dentro do "
"pacote do seu projeto (``mysite`` neste exemplo). Isso diz ao Apache para "
"servir qualquer requisição abaixo da URL informada usando a aplicação WSGI "
"definida naquele arquivo."

msgid ""
"If you install your project's Python dependencies inside a :mod:`virtual "
"environment <venv>`, add the path using ``WSGIPythonHome``. See the "
"`mod_wsgi virtual environment guide`_ for more details."
msgstr ""

msgid ""
"The ``WSGIPythonPath`` line ensures that your project package is available "
"for import on the Python path; in other words, that ``import mysite`` works."
msgstr ""
"A linha ``WSGIPythonPath`` assegura que o pacote do seu projeto está "
"disponível no Python path para ser importado; em outras palavras, que "
"``import mysite`` funcione."

msgid ""
"The ``<Directory>`` piece ensures that Apache can access your :file:`wsgi."
"py` file."
msgstr ""

msgid ""
"Next we'll need to ensure this :file:`wsgi.py` with a WSGI application "
"object exists. As of Django version 1.4, :djadmin:`startproject` will have "
"created one for you; otherwise, you'll need to create it. See the :doc:`WSGI "
"overview documentation</howto/deployment/wsgi/index>` for the default "
"contents you should put in this file, and what else you can add to it."
msgstr ""
"Agora precisamos assegurar que este arquivo :file:`wsgi.py` com objeto de "
"aplicação WSGI exista. Desde de o Django versão 1.4, :djadmin:`startproject` "
"terá criado um para você; se não, você precisará criá-lo. Veja :doc:"
"`Documentação geral WSGI </howto/deployment/wsgi/index>` para o conteúdo "
"padrão que você deveria colocar neste arquivo, e o que mais você pode "
"adicionar a ele."

msgid ""
"If multiple Django sites are run in a single mod_wsgi process, all of them "
"will use the settings of whichever one happens to run first. This can be "
"solved by changing::"
msgstr ""
"Se múltiplos sites Django estiverem rodando em um único processo mod_wsgi, "
"todos eles irão usar as definições daquele que executar primeiro. Isso pode "
"ser resolvido alterando::"

msgid "in ``wsgi.py``, to::"
msgstr "em ``wsgi.py``, para::"

msgid ""
"or by :ref:`using mod_wsgi daemon mode<daemon-mode>` and ensuring that each "
"site runs in its own daemon process."
msgstr ""
"ou por :ref:`usando o mode daemon do mod_wsgi<daemon-mode>` e assegurando "
"que cada site está rodando no seu próprio processo deamon."

msgid "Fixing ``UnicodeEncodeError`` for file uploads"
msgstr "Arrumando o ``UnicodeEncodeError`` para uploads de arquivos"

msgid ""
"If you get a ``UnicodeEncodeError`` when uploading or writing files with "
"file names or content that contains non-ASCII characters, make sure Apache "
"is configured to support UTF-8 encoding:"
msgstr ""

msgid ""
"A common location to put this configuration is ``/etc/apache2/envvars``."
msgstr ""
"Um lugar comum para colocar essa configuração é em ``/etc/apache2/envvars``."

msgid ""
"Alternatively, if you are :ref:`using mod_wsgi daemon mode<daemon-mode>` you "
"can add ``lang`` and ``locale`` options to the ``WSGIDaemonProcess`` "
"directive:"
msgstr ""

msgid ""
"See the :ref:`unicode-files` section of the Unicode reference guide for "
"details."
msgstr ""
"Veja a seção :ref:`unicode-files` do guia de referência de unicode para "
"detalhes."

msgid "Using ``mod_wsgi`` daemon mode"
msgstr "Usando ``mod_wsgi`` no modo deamon"

msgid ""
"\"Daemon mode\" is the recommended mode for running mod_wsgi (on non-Windows "
"platforms). To create the required daemon process group and delegate the "
"Django instance to run in it, you will need to add appropriate "
"``WSGIDaemonProcess`` and ``WSGIProcessGroup`` directives. A further change "
"required to the above configuration if you use daemon mode is that you can't "
"use ``WSGIPythonPath``; instead you should use the ``python-path`` option to "
"``WSGIDaemonProcess``, for example:"
msgstr ""
"\"Modo Deamon\" é o modo recomendado para rodar mod_wsgi (em plataforma não "
"Windows). Para criar o grupo de processos deamon requerido e delegar o "
"Django para rodar dentro, precisa adicionar as diretivas "
"``WSGIDaemonProcess`` e ``WSGIProcessGroup``. Um outra mudança requerida na "
"configuração acima se usar deamon mode é que não se pode usar o "
"``WSGIPythonPath``; no lugar deve usar a opção ``python-path`` para "
"``WSGIDaemonProcess``, por exemplo:"

msgid ""
"If you want to serve your project in a subdirectory (``https://example.com/"
"mysite`` in this example), you can add ``WSGIScriptAlias`` to the "
"configuration above:"
msgstr ""
"Se quer servir seu projeto em um subdiretório (``https://example.com/"
"mysite`` neste exemplo), você pode adicionar ``WSGIScriptAlias`` a "
"configuração acima:"

msgid ""
"See the official mod_wsgi documentation for `details on setting up daemon "
"mode`_."
msgstr ""
"Veja a documentação oficial do mod_wsgi para  `details on setting up daemon "
"mode`_"

msgid "Serving files"
msgstr "Servindo arquivos"

msgid ""
"Django doesn't serve files itself; it leaves that job to whichever web "
"server you choose."
msgstr ""

msgid ""
"We recommend using a separate web server -- i.e., one that's not also "
"running Django -- for serving media. Here are some good choices:"
msgstr ""

msgid "Nginx_"
msgstr "Nginx_"

msgid "A stripped-down version of Apache_"
msgstr "Uma versão mais enxuta do Apache_"

msgid ""
"If, however, you have no option but to serve media files on the same Apache "
"``VirtualHost`` as Django, you can set up Apache to serve some URLs as "
"static media, and others using the mod_wsgi interface to Django."
msgstr ""
"Se, porém, você não tem opção de servir arquivos de media na mesmo "
"VirtualHost Apache que está o Django, você pode configurar o Apache para "
"servir algumas URLs como media estática, e outros usando a interface "
"mod_wsgi para  Django."

msgid ""
"This example sets up Django at the site root, but serves ``robots.txt``, "
"``favicon.ico``, and anything in the ``/static/`` and ``/media/`` URL space "
"as a static file. All other URLs will be served using mod_wsgi:"
msgstr ""
"Este exemplo define o DJango como raiz do site, mas serve ``robots.txt``, "
"``favicon.ico``, e qualquer coisa nas URLs ``/static/``  e ``/media`` como "
"arquivos estáticos. Todas as outra URLs serão servidas usando o mod_wsgi:"

msgid "Serving the admin files"
msgstr "Persistindo arquivos do admin"

msgid ""
"When :mod:`django.contrib.staticfiles` is in :setting:`INSTALLED_APPS`, the "
"Django development server automatically serves the static files of the admin "
"app (and any other installed apps). This is however not the case when you "
"use any other server arrangement. You're responsible for setting up Apache, "
"or whichever web server you're using, to serve the admin files."
msgstr ""

msgid ""
"The admin files live in (:source:`django/contrib/admin/static/admin`) of the "
"Django distribution."
msgstr ""

msgid ""
"We **strongly** recommend using :mod:`django.contrib.staticfiles` to handle "
"the admin files (along with a web server as outlined in the previous "
"section; this means using the :djadmin:`collectstatic` management command to "
"collect the static files in :setting:`STATIC_ROOT`, and then configuring "
"your web server to serve :setting:`STATIC_ROOT` at :setting:`STATIC_URL`), "
"but here are three other approaches:"
msgstr ""

msgid ""
"Create a symbolic link to the admin static files from within your document "
"root (this may require ``+FollowSymLinks`` in your Apache configuration)."
msgstr ""
"Crie um link simbólico para os arquivos estáticos do admin de dentro do seu "
"\"document root\"(isso talvez requeira ``+FollowSymLinks``na sua "
"configuração do Apache). "

msgid ""
"Use an ``Alias`` directive, as demonstrated above, to alias the appropriate "
"URL (probably :setting:`STATIC_URL` + ``admin/``) to the actual location of "
"the admin files."
msgstr ""
"Use uma diretiva ``Alias``, como demonstrado acima, para apelidar a URL "
"apropriada (provavelmente : settings:`SATTIC_URL`+ ``admin/``) para o local "
"real dos arquivos do admin."

msgid ""
"Copy the admin static files so that they live within your Apache document "
"root."
msgstr ""
"Copie os arquivos estáticos do admin para que entã eles fiquem dentro do "
"\"document root\" do Apache."

msgid "Authenticating against Django's user database from Apache"
msgstr "Autenticação do banco de dados de usuário do Django vindo do Apache."

msgid ""
"Django provides a handler to allow Apache to authenticate users directly "
"against Django's authentication backends. See the :doc:`mod_wsgi "
"authentication documentation </howto/deployment/wsgi/apache-auth>`."
msgstr ""
"O Django disponibiliza um facilitador para habilitar o Apache a autenticar "
"usuários diretamente no backend de autenticação do Django. veja   :doc:"
"`documentação de autenticação do mod_wsgi  </howto/deployment/wsgi/apache-"
"auth>`."

msgid "How to use Django with uWSGI"
msgstr "Como usar Django com uWSGI"

msgid ""
"uWSGI_ is a fast, self-healing and developer/sysadmin-friendly application "
"container server coded in pure C."
msgstr ""
"uWSGI_ é um sevidor de container de aplicação feito em C puro, rápido, auto-"
"ajustável e amigável a desenvolvedores e administradores de sistema."

msgid ""
"The uWSGI docs offer a `tutorial`_ covering Django, nginx, and uWSGI (one "
"possible deployment setup of many). The docs below are focused on how to "
"integrate Django with uWSGI."
msgstr ""
"A documentação do uWSGI oferecem um  `tutorial`_ cobrindo Django, nginx e "
"uWSGI (uma possível implantaçao dentre muitas). A documentação abaixo foca "
"em como integrar o Django com uWSGI."

msgid "Prerequisite: uWSGI"
msgstr "Prerequisito: uWSGI"

msgid ""
"The uWSGI wiki describes several `installation procedures`_. Using pip, the "
"Python package manager, you can install any uWSGI version with a single "
"command. For example:"
msgstr ""
"A wiki uWSGI descreve vários `instalation procedures`_. Usando o pip, o "
"gerenciador de pacotes do Python, é possível instalar o uWSGI com um único "
"comando. Por exemplo:"

msgid "uWSGI model"
msgstr "Modelo uWSGI"

msgid ""
"uWSGI operates on a client-server model. Your web server (e.g., nginx, "
"Apache) communicates with a ``django-uwsgi`` \"worker\" process to serve "
"dynamic content."
msgstr ""

msgid "Configuring and starting the uWSGI server for Django"
msgstr "Configurando e iniciando o servidor uWSGI para o Django"

msgid ""
"uWSGI supports multiple ways to configure the process. See uWSGI's "
"`configuration documentation`_."
msgstr ""
"uWSGI fornece múltiplas maneiras de configurar o processo. Veja uWSGI's "
"`configuration documentation`_ e `examples`_."

msgid "Here's an example command to start a uWSGI server:"
msgstr ""

msgid ""
"This assumes you have a top-level project package named ``mysite``, and "
"within it a module :file:`mysite/wsgi.py` that contains a WSGI "
"``application`` object. This is the layout you'll have if you ran ``django-"
"admin startproject mysite`` (using your own project name in place of "
"``mysite``) with a recent version of Django. If this file doesn't exist, "
"you'll need to create it. See the :doc:`/howto/deployment/wsgi/index` "
"documentation for the default contents you should put in this file and what "
"else you can add to it."
msgstr ""
"Asume-se que tem um pacote do projeto no nível mais alto chamado ``mysite``, "
"e dentro deste um módulo :file:`mysite/wsgi.py` que contém um objeto "
"``applicação`` WSGI. Este é o layout que terá se executar ``django-admin "
"startproject mysite`` (usando so seu próprio nome de projeto do lugar do "
"``mysite``) com a recente versão do Django. Se este arquivo não existe, é "
"necessário criá-lo. Veja a documentação em :doc:`/howto/deployment/wsgi/"
"index` para o conteúdo padrão que deve ser colocado neste arquivo e  que "
"você pode adicionar."

msgid "The Django-specific options here are:"
msgstr "As opções específicas para o Django são:"

msgid ""
"``chdir``: The path to the directory that needs to be on Python's import "
"path -- i.e., the directory containing the ``mysite`` package."
msgstr ""
"``chdir``: O caminho do diretório necessário estar no Python path -- isto é, "
"o diretório que contém o pacote ``mysite``."

msgid ""
"``module``: The WSGI module to use -- probably the ``mysite.wsgi`` module "
"that :djadmin:`startproject` creates."
msgstr ""
"``module``: O módulo WSGI a ser usado -- provavelmente o módulo ``mysite."
"wsgi`` que o  :djadmin:`startproject` cria."

msgid ""
"``env``: Should probably contain at least :envvar:`DJANGO_SETTINGS_MODULE`."
msgstr ""

msgid "``home``: Optional path to your project virtual environment."
msgstr ""

msgid "Example ini configuration file:"
msgstr ""

msgid "Example ini configuration file usage:"
msgstr ""

msgid ""
"If you get a ``UnicodeEncodeError`` when uploading files with file names "
"that contain non-ASCII characters, make sure uWSGI is configured to accept "
"non-ASCII file names by adding this to your ``uwsgi.ini``:"
msgstr ""

msgid ""
"See the uWSGI docs on `managing the uWSGI process`_ for information on "
"starting, stopping and reloading the uWSGI workers."
msgstr ""
"Veja a documentação do uWSGI no `managing the uWSGI process`_ para "
"informações sobre iniciar, parar e recarregar os uWSGI workers."

msgid "How to manage error reporting"
msgstr ""

msgid ""
"When you're running a public site you should always turn off the :setting:"
"`DEBUG` setting. That will make your server run much faster, and will also "
"prevent malicious users from seeing details of your application that can be "
"revealed by the error pages."
msgstr ""
"Quando estiver rondando um site público você deve sempre desligar a "
"definição :setting:`DEBUG` . Isso fará que seu servidor rode bem mais "
"rápido, e também irá evitar que usuários maliciosos vejam detalhes da sua "
"aplicação que podem ser revelados por erros em suas páginas."

msgid ""
"However, running with :setting:`DEBUG` set to ``False`` means you'll never "
"see errors generated by your site -- everyone will instead see your public "
"error pages. You need to keep track of errors that occur in deployed sites, "
"so Django can be configured to create reports with details about those "
"errors."
msgstr ""

msgid "Email reports"
msgstr "Relatórios por email."

msgid "Server errors"
msgstr "Erros do servidor"

msgid ""
"When :setting:`DEBUG` is ``False``, Django will email the users listed in "
"the :setting:`ADMINS` setting whenever your code raises an unhandled "
"exception and results in an internal server error (strictly speaking, for "
"any response with an HTTP status code of 500 or greater). This gives the "
"administrators immediate notification of any errors. The :setting:`ADMINS` "
"will get a description of the error, a complete Python traceback, and "
"details about the HTTP request that caused the error."
msgstr ""
"Quando :setting:`DEBUG` é ``False``, Django irá enviar um email aos usuários "
"listados no :setting:`ADMINS` mesmo que seu código levante uma exceção e "
"resulte em um erro interno ( falando estritamente, para qualquer response "
"com um código de status de 500 ou maior). Isso dá ao administrador uma "
"notificação imediata de quaisquer erros. Os :setting:`ADMINS` irão rceber "
"uma descrição do erro, um Traceback completo do Python, e detalhes da "
"requisição HTTP causada pelo erro."

msgid ""
"In order to send email, Django requires a few settings telling it how to "
"connect to your mail server. At the very least, you'll need to specify :"
"setting:`EMAIL_HOST` and possibly :setting:`EMAIL_HOST_USER` and :setting:"
"`EMAIL_HOST_PASSWORD`, though other settings may be also required depending "
"on your mail server's configuration. Consult :doc:`the Django settings "
"documentation </ref/settings>` for a full list of email-related settings."
msgstr ""
"Para enviar o email, o Django requer algumas configurações dizendo a ele "
"como se conectar ao seu servidor de email. No mínimo é necessário "
"especificar :setting:`EMAIL_HOST` e possivelmente :setting:`EMAIL_HOST_USER` "
"e :setting:`EMAIL_HOST_PASSWORD`, embora outras configurações tambem sejam "
"requeridas dependendo da configuração do seu servidor de email. Consulte o :"
"doc:`Documentação de configurações do Django </ref/settings>` para uma lista "
"completa de configurações relacionadas a email."

msgid ""
"By default, Django will send email from root@localhost. However, some mail "
"providers reject all email from this address. To use a different sender "
"address, modify the :setting:`SERVER_EMAIL` setting."
msgstr ""
"Por padrão, o Django envia email do root@localhost. Contudo, alguns "
"provedores de email rejeitam todos os email deste endereço. Para usar um "
"endereço de remetente diferente, modifique a configuração :setting:"
"`SERVER_EMAIL`"

msgid ""
"To activate this behavior, put the email addresses of the recipients in the :"
"setting:`ADMINS` setting."
msgstr ""
"Para ativar este comportamento, coloque o endereço de email dos "
"destinatários na definição do :setting:`ADMINS`"

msgid ""
"Server error emails are sent using the logging framework, so you can "
"customize this behavior by :doc:`customizing your logging configuration </"
"topics/logging>`."
msgstr ""
"Emails de erros de servidores são enviados usando o framework de log, e você "
"pode customizár seu comportamento por :doc:`customizando sua configuração de "
"log </topics/logging>`."

msgid "404 errors"
msgstr "Erros 404"

msgid ""
"Django can also be configured to email errors about broken links (404 \"page "
"not found\" errors). Django sends emails about 404 errors when:"
msgstr ""
"O Django pode ser configurado para enviar emails com erros sobre links "
"quebrados (erros 404 \"página não encontrada\"). O Django envia emails com "
"erros 404 quando:"

msgid ":setting:`DEBUG` is ``False``;"
msgstr ":setting:`DEBUG` é ``False``;"

msgid ""
"Your :setting:`MIDDLEWARE` setting includes :class:`django.middleware.common."
"BrokenLinkEmailsMiddleware`."
msgstr ""
"Sua definição de :setting:`MIDDLEWARE` inclue :class:`django.middleware."
"common.BrokenLinkEmailsMiddleware`."

msgid ""
"If those conditions are met, Django will email the users listed in the :"
"setting:`MANAGERS` setting whenever your code raises a 404 and the request "
"has a referer. It doesn't bother to email for 404s that don't have a referer "
"-- those are usually people typing in broken URLs or broken web bots. It "
"also ignores 404s when the referer is equal to the requested URL, since this "
"behavior is from broken web bots too."
msgstr ""

msgid ""
":class:`~django.middleware.common.BrokenLinkEmailsMiddleware` must appear "
"before other middleware that intercepts 404 errors, such as :class:`~django."
"middleware.locale.LocaleMiddleware` or :class:`~django.contrib.flatpages."
"middleware.FlatpageFallbackMiddleware`. Put it toward the top of your :"
"setting:`MIDDLEWARE` setting."
msgstr ""

msgid ""
"You can tell Django to stop reporting particular 404s by tweaking the :"
"setting:`IGNORABLE_404_URLS` setting. It should be a list of compiled "
"regular expression objects. For example::"
msgstr ""
"Você pode dizer ao Django para parar de reportar 404s ajustando a definição "
"do :setting:`IGNORABLE_404_URLS`. Isso deve ser uma lista de objetos "
"compilados de expressões regulares. Por exeplo::"

msgid ""
"In this example, a 404 to any URL ending with ``.php`` or ``.cgi`` will "
"*not* be reported. Neither will any URL starting with ``/phpmyadmin/``."
msgstr ""
"Neste exemplo, um 404 para qualquer URL com ``.php``ou ``.cgi`` *não* será "
"reportado. Nem nenhuma URL começando com ``/phpadmin/``."

msgid ""
"The following example shows how to exclude some conventional URLs that "
"browsers and crawlers often request::"
msgstr ""
"O exemplo seguinte mostra como excluir algumas URLs convencionais que "
"\"borwsers\" e \"crawlers\" requisitam com frequência."

msgid ""
"(Note that these are regular expressions, so we put a backslash in front of "
"periods to escape them.)"
msgstr ""
"(repare que essas são expressões regulares, então coloca-se uma barra "
"invertida na frente dos pontos para que não sejam substituidos.)"

msgid ""
"If you'd like to customize the behavior of :class:`django.middleware.common."
"BrokenLinkEmailsMiddleware` further (for example to ignore requests coming "
"from web crawlers), you should subclass it and override its methods."
msgstr ""
"Se quer personalizar o comportamentdo do :class:`django.middleware.common."
"BrokenLinkEmailsMiddleware` mais adiante (por exemplo para ignorar "
"requisições vindas de rastreadores web), você deve criar uma subclasse e "
"sobrescreva seus métodos."

msgid ""
"404 errors are logged using the logging framework. By default, these log "
"records are ignored, but you can use them for error reporting by writing a "
"handler and :doc:`configuring logging </topics/logging>` appropriately."
msgstr ""
"Erros 404 são logados usando o framework logging. Por padrão, estes "
"registros de log são ignorados, mas você pode usá-los para relatório de "
"erros sobrescrevendo o \"handlers\" e o :doc:`configuring logging </topics/"
"logging>` apropriadamente."

msgid "Filtering error reports"
msgstr "Filtrando relatórios de erros"

msgid ""
"Filtering sensitive data is a hard problem, and it's nearly impossible to "
"guarantee that sensitive data won't leak into an error report. Therefore, "
"error reports should only be available to trusted team members and you "
"should avoid transmitting error reports unencrypted over the internet (such "
"as through email)."
msgstr ""

msgid "Filtering sensitive information"
msgstr "Filtrando Informações sensíveis"

msgid ""
"Error reports are really helpful for debugging errors, so it is generally "
"useful to record as much relevant information about those errors as "
"possible. For example, by default Django records the `full traceback`_ for "
"the exception raised, each `traceback frame`_’s local variables, and the :"
"class:`~django.http.HttpRequest`’s :ref:`attributes<httprequest-attributes>`."
msgstr ""
"Relatórios de erros são de grande ajuda para detectar falhas, sempre é util "
"registrar o máximo de informação sobre falhas quanto possível. Por exemplo, "
"por padrão o Django registra "

msgid ""
"However, sometimes certain types of information may be too sensitive and "
"thus may not be appropriate to be kept track of, for example a user's "
"password or credit card number. So in addition to filtering out settings "
"that appear to be sensitive as described in the :setting:`DEBUG` "
"documentation, Django offers a set of function decorators to help you "
"control which information should be filtered out of error reports in a "
"production environment (that is, where :setting:`DEBUG` is set to "
"``False``): :func:`sensitive_variables` and :func:"
"`sensitive_post_parameters`."
msgstr ""
"Algumas vezes certos tipos de informação talvez sejam muito sensíveis e "
"talvez não seja apropriado manter rastros, por exemplo uma senha de usuário "
"ou número do cartão de crédito. Então para filtrar definições que aparentam "
"ser sensíveis como descrito na documentação do :setting:`DEBUG`, o Django "
"oferece um conjunto de decoradores de função para auxiliar no controle de "
"qual informação deve ser filtrada para fora dos relatórios de erro em um "
"ambiente de produção (isto é, onde :setting:`DEBUG` é definido como "
"``False``): :func:`sensitive_variables` e :func:`sensitive_post_parameters`."

msgid ""
"If a function (either a view or any regular callback) in your code uses "
"local variables susceptible to contain sensitive information, you may "
"prevent the values of those variables from being included in error reports "
"using the ``sensitive_variables`` decorator::"
msgstr ""
"Se uma função (uma view ou callback) no seu código usa variavéis locais que "
"venham guardar informação sigilosa, voce deve reguasdar o valor dessas "
"variavéis de serem expostas nos relatórios de erros usando o decorator "
"''sensitive_variables''"

msgid ""
"In the above example, the values for the ``user``, ``pw`` and ``cc`` "
"variables will be hidden and replaced with stars (``**********``) in the "
"error reports, whereas the value of the ``name`` variable will be disclosed."
msgstr ""

msgid ""
"To systematically hide all local variables of a function from error logs, do "
"not provide any argument to the ``sensitive_variables`` decorator::"
msgstr ""
"Para esconder sistematicamente todas as variáveis locais de uma fução dos "
"logs de erros, não forneça argumento ao decorador ``sensitive_variables``::"

msgid "When using multiple decorators"
msgstr "Quando usar multiplos decorators"

msgid ""
"If the variable you want to hide is also a function argument (e.g. "
"'``user``’ in the following example), and if the decorated function has "
"multiple decorators, then make sure to place ``@sensitive_variables`` at the "
"top of the decorator chain. This way it will also hide the function argument "
"as it gets passed through the other decorators::"
msgstr ""
"Se a variável que você quer esconder é também um argumento da função (ex.: "
"``user`` no exemplo a seguir), e si a função \"decorada\" tem múltimplos "
"\"decorators\",  então tenha certeza de posiionar o "
"``@sensitive_variables``  no topo da lista de \"decorators\". Desta maneira, "
"serão escondidos também  o argumento da função enquanto passa pelos outros "
"\"decorators\"::"

msgid ""
"Due to the machinery needed to cross the sync/async boundary, :func:"
"`~asgiref.sync.sync_to_async` and :func:`~asgiref.sync.async_to_sync` are "
"**not** compatible with ``sensitive_variables()``."
msgstr ""

msgid ""
"If using these adapters with sensitive variables, ensure to audit exception "
"reporting, and consider implementing a :ref:`custom filter <custom-error-"
"reports>` if necessary."
msgstr ""

msgid ""
"If one of your views receives an :class:`~django.http.HttpRequest` object "
"with :attr:`POST parameters<django.http.HttpRequest.POST>` susceptible to "
"contain sensitive information, you may prevent the values of those "
"parameters from being included in the error reports using the "
"``sensitive_post_parameters`` decorator::"
msgstr ""
"Se uma de suas \"views\" recebe um objeto :class:`~django.http.HttpRequest` "
"com :attr:`parâmetros do POST<django.http.HttpRequest.POST>` suscetível a "
"conter informação sensível, é possível  evitar que os valores destes "
"parâmetros sejam incluídos no relatório de erros usando o \"decorator\" "
"``sensitive_post_parameters`` ::"

msgid ""
"In the above example, the values for the ``pass_word`` and "
"``credit_card_number`` POST parameters will be hidden and replaced with "
"stars (``**********``) in the request's representation inside the error "
"reports, whereas the value of the ``name`` parameter will be disclosed."
msgstr ""

msgid ""
"To systematically hide all POST parameters of a request in error reports, do "
"not provide any argument to the ``sensitive_post_parameters`` decorator::"
msgstr ""
"Para esconder sistematicamente todos os parâmetros do POST de uma requisição "
"em um relatório de erro relatório, não forneça nenhum arguento para o "
"\"decorator\"  ``sensitive_post_parameters``::"

msgid ""
"All POST parameters are systematically filtered out of error reports for "
"certain :mod:`django.contrib.auth.views` views (``login``, "
"``password_reset_confirm``, ``password_change``, and ``add_view`` and "
"``user_change_password`` in the ``auth`` admin) to prevent the leaking of "
"sensitive information such as user passwords."
msgstr ""
"Todos os parâmentros do POST são sistematicamente filtrados do relatório "
"para certas \"views\"   :mod:`django.contrib.auth.views`  (``login``, "
"``password_reset_confirm``, ``password_change``, e ``add_view`` e "
"``user_change_password`` no ``auth`` admin) para prevenir o vazamento de "
"informação sensível tal como as senhas de usuários."

msgid "Custom error reports"
msgstr "Relatórios de erros personalizados"

msgid ""
"All :func:`sensitive_variables` and :func:`sensitive_post_parameters` do is, "
"respectively, annotate the decorated function with the names of sensitive "
"variables and annotate the ``HttpRequest`` object with the names of "
"sensitive POST parameters, so that this sensitive information can later be "
"filtered out of reports when an error occurs. The actual filtering is done "
"by Django's default error reporter filter: :class:`django.views.debug."
"SafeExceptionReporterFilter`. This filter uses the decorators' annotations "
"to replace the corresponding values with stars (``**********``) when the "
"error reports are produced. If you wish to override or customize this "
"default behavior for your entire site, you need to define your own filter "
"class and tell Django to use it via the :setting:"
"`DEFAULT_EXCEPTION_REPORTER_FILTER` setting::"
msgstr ""

msgid ""
"You may also control in a more granular way which filter to use within any "
"given view by setting the ``HttpRequest``’s ``exception_reporter_filter`` "
"attribute::"
msgstr ""
"Você pode controlar de uma maneira mais granular qual filtro usar dentro de "
"qualquer \"view\" configurando o atributo ``exception_reporter_filter`` do "
"``HttpRequest``::"

msgid ""
"Your custom filter class needs to inherit from :class:`django.views.debug."
"SafeExceptionReporterFilter` and may override the following attributes and "
"methods:"
msgstr ""

msgid ""
"The string value to replace sensitive value with. By default it replaces the "
"values of sensitive variables with stars (``**********``)."
msgstr ""

msgid ""
"A compiled regular expression object used to match settings and ``request."
"META`` values considered as sensitive. By default equivalent to::"
msgstr ""

msgid "``HTTP_COOKIE`` was added."
msgstr ""

msgid ""
"Returns ``True`` to activate the filtering in :meth:`get_post_parameters` "
"and :meth:`get_traceback_frame_variables`. By default the filter is active "
"if :setting:`DEBUG` is ``False``. Note that sensitive ``request.META`` "
"values are always filtered along with sensitive setting values, as described "
"in the :setting:`DEBUG` documentation."
msgstr ""

msgid ""
"Returns the filtered dictionary of POST parameters. Sensitive values are "
"replaced with :attr:`cleansed_substitute`."
msgstr ""

msgid ""
"Returns the filtered dictionary of local variables for the given traceback "
"frame. Sensitive values are replaced with :attr:`cleansed_substitute`."
msgstr ""

msgid ""
"If you need to customize error reports beyond filtering you may specify a "
"custom error reporter class by defining the :setting:"
"`DEFAULT_EXCEPTION_REPORTER` setting::"
msgstr ""

msgid ""
"The exception reporter is responsible for compiling the exception report "
"data, and formatting it as text or HTML appropriately. (The exception "
"reporter uses :setting:`DEFAULT_EXCEPTION_REPORTER_FILTER` when preparing "
"the exception report data.)"
msgstr ""

msgid ""
"Your custom reporter class needs to inherit from :class:`django.views.debug."
"ExceptionReporter`."
msgstr ""

msgid ""
"Property that returns a :class:`pathlib.Path` representing the absolute "
"filesystem path to a template for rendering the HTML representation of the "
"exception. Defaults to the Django provided template."
msgstr ""

msgid ""
"Property that returns a :class:`pathlib.Path` representing the absolute "
"filesystem path to a template for rendering the plain-text representation of "
"the exception. Defaults to the Django provided template."
msgstr ""

msgid "Return a dictionary containing traceback information."
msgstr ""

msgid ""
"This is the main extension point for customizing exception reports, for "
"example::"
msgstr ""

msgid "Return HTML version of exception report."
msgstr ""

msgid "Used for HTML version of debug 500 HTTP error page."
msgstr ""

msgid "Return plain text version of exception report."
msgstr ""

msgid ""
"Used for plain text version of debug 500 HTTP error page and email reports."
msgstr ""

msgid ""
"As with the filter class, you may control which exception reporter class to "
"use within any given view by setting the ``HttpRequest``’s "
"``exception_reporter_class`` attribute::"
msgstr ""

msgid ""
"You can also set up custom error reporting by writing a custom piece of :ref:"
"`exception middleware <exception-middleware>`. If you do write custom error "
"handling, it's a good idea to emulate Django's built-in error handling and "
"only report/log errors if :setting:`DEBUG` is ``False``."
msgstr ""
"Você pode também configurar um relatório de erro personalizado escrevendo um "
"pedaço personalizado :ref:`middleware de exceção <exception-middleware>`. Se "
"escrever um tratamento de erros personalizado, é uma boa idéia emular o "
"tratamento de erro do Django e somente reportar/logar erros se :setting:"
"`DEBUG` é ``False``."

msgid "\"How-to\" guides"
msgstr "Guias de \"como fazer\""

msgid ""
"Here you'll find short answers to \"How do I....?\" types of questions. "
"These how-to guides don't cover topics in depth -- you'll find that material "
"in the :doc:`/topics/index` and the :doc:`/ref/index`. However, these guides "
"will help you quickly accomplish common tasks."
msgstr ""
"Aqui você irá encontrar respostas curtas para tipos de perguntas \"Como eu "
"faço ...?\" Estes guias  de como não cobre tópicos em profundidade -- você "
"irá achar esse material em :doc:`/topics/index` e the :doc:`/ref/index`. "
"Contudo, este guia irá lhe ajudar a fazer tarefas comuns rapidamente."

msgid ""
"The `Django community aggregator`_, where we aggregate content from the "
"global Django community. Many writers in the aggregator write this sort of "
"how-to material."
msgstr ""
"O `Django community aggregator`_, onde nós juntamos conteúdo da comunidade "
"Django global. Muitos escritores do \"aggregator\" escrevem esse tipo de "
"material."

msgid "How to provide initial data for models"
msgstr ""

msgid ""
"It's sometimes useful to prepopulate your database with hard-coded data when "
"you're first setting up an app. You can provide initial data with migrations "
"or fixtures."
msgstr ""

msgid "Provide initial data with migrations"
msgstr ""

msgid ""
"To automatically load initial data for an app, create a :ref:`data migration "
"<data-migrations>`. Migrations are run when setting up the test database, so "
"the data will be available there, subject to :ref:`some limitations <test-"
"case-serialized-rollback>`."
msgstr ""

msgid "Provide data with fixtures"
msgstr ""

msgid ""
"You can also provide data using :ref:`fixtures <fixtures-explanation>`, "
"however, this data isn't loaded automatically, except if you use :attr:`."
"TransactionTestCase.fixtures`."
msgstr ""

msgid ""
"A fixture is a collection of data that Django knows how to import into a "
"database. The most straightforward way of creating a fixture if you've "
"already got some data is to use the :djadmin:`manage.py dumpdata <dumpdata>` "
"command. Or, you can write fixtures by hand; fixtures can be written as "
"JSON, XML or YAML (with PyYAML_ installed) documents. The :doc:"
"`serialization documentation </topics/serialization>` has more details about "
"each of these supported :ref:`serialization formats <serialization-formats>`."
msgstr ""
"Uma fixture é uma coleção de dados que o Django sabe como importar para o "
"banco de dados. A maneira mais fácil de criar uma \"fixture\" se você já "
"tem  algum dado é usar o comando :djadmin:`manage.py dumpdata <dumpdata>`. "
"Ou, você pode escrever fixtures manualmente; \"fixtures\" podem ser escritas "
"como documentos JSON, XML ou YAML (com PyYAML_ installed). O :doc:"
"`documentos de serialização </topics/serialization>` tem mais detalhes sobre "
"cada um destes :ref:`formatos de serialização <serialization-formats>`."

msgid ""
"As an example, though, here's what a fixture for a ``Person`` model might "
"look like in JSON:"
msgstr ""

msgid "And here's that same fixture as YAML:"
msgstr "E aqui a mesma \"fixture\" como YAML:"

msgid "You'll store this data in a ``fixtures`` directory inside your app."
msgstr ""
"Você armazenará este dado em um diretório ``fixtures`` dentro de sua app."

msgid ""
"You can load data by calling :djadmin:`manage.py loaddata <loaddata>` "
"``<fixturename>``, where ``<fixturename>`` is the name of the fixture file "
"you've created. Each time you run :djadmin:`loaddata`, the data will be read "
"from the fixture and reloaded into the database. Note this means that if you "
"change one of the rows created by a fixture and then run :djadmin:`loaddata` "
"again, you'll wipe out any changes you've made."
msgstr ""

msgid "Tell Django where to look for fixture files"
msgstr ""

msgid ""
"By default, Django looks for fixtures in the ``fixtures`` directory inside "
"each app for, so the command ``loaddata sample`` will find the file ``my_app/"
"fixtures/sample.json``. This works with relative paths as well, so "
"``loaddata my_app/sample`` will find the file ``my_app/fixtures/my_app/"
"sample.json``."
msgstr ""

msgid ""
"Django also looks for fixtures in the list of directories provided in the :"
"setting:`FIXTURE_DIRS` setting."
msgstr ""

msgid ""
"To completely prevent default search form happening, use an absolute path to "
"specify the location of your fixture file, e.g. ``loaddata /path/to/sample``."
msgstr ""

msgid "Namespace your fixture files"
msgstr ""

msgid ""
"Django will use the first fixture file it finds whose name matches, so if "
"you have fixture files with the same name in different applications, you "
"will be unable to distinguish between them in your ``loaddata`` commands. "
"The easiest way to avoid this problem is by *namespacing* your fixture "
"files. That is, by putting them inside a directory named for their "
"application, as in the relative path example above."
msgstr ""

msgid ""
"Fixtures are also used by the :ref:`testing framework <topics-testing-"
"fixtures>` to help set up a consistent test environment."
msgstr ""
"As \"Fixtures\" são também usadas pelo :ref:`testing framework <topics-"
"testing-fixtures>` para auxiliar na configuração de um ambiente de teste "
"consistente."

msgid "How to integrate Django with a legacy database"
msgstr ""

msgid ""
"While Django is best suited for developing new applications, it's quite "
"possible to integrate it into legacy databases. Django includes a couple of "
"utilities to automate as much of this process as possible."
msgstr ""
"Enquanto o Django é melhor para desenvolver novas aplicações, é possível "
"integrá-lo a um banco de dados existente. O Django inclue algumas "
"ferramentas para automatzar tanto quanto possível o processo."

msgid ""
"This document assumes you know the Django basics, as covered in the :doc:"
"`tutorial </intro/tutorial01>`."
msgstr ""
"Este documento assume que você conhece o básico de django, como coberto em :"
"doc:`tutorial </intro/tutorial01>`."

msgid ""
"Once you've got Django set up, you'll follow this general process to "
"integrate with an existing database."
msgstr ""
"Uma vez que tenha o Django configurado, seguirá este processo geral para "
"integrar com o banco de dados existente."

msgid "Give Django your database parameters"
msgstr "Forneça ao Django os parâmetros do seu banco de dados."

msgid ""
"You'll need to tell Django what your database connection parameters are, and "
"what the name of the database is. Do that by editing the :setting:"
"`DATABASES` setting and assigning values to the following keys for the "
"``'default'`` connection:"
msgstr ""
"Você precisa informar ao Django quais são ps parâmetros de conexão do seu "
"banco de dados, e o nome do banco de dados. Faça isso editando a definição :"
"setting:`DATABASES` e assinalando os valores das seguintes chaver para a "
"conexão ``'default'``:"

msgid ":setting:`NAME`"
msgstr ":setting:`NAME`"

msgid ":setting:`ENGINE <DATABASE-ENGINE>`"
msgstr ":setting:`ENGINE <DATABASE-ENGINE>`"

msgid ":setting:`USER`"
msgstr ":setting:`USER`"

msgid ":setting:`PASSWORD`"
msgstr ":setting:`PASSWORD`"

msgid ":setting:`HOST`"
msgstr ":setting:`HOST`"

msgid ":setting:`PORT`"
msgstr ":setting:`PORT`"

msgid "Auto-generate the models"
msgstr "Criar automaticamente os modelos"

msgid ""
"Django comes with a utility called :djadmin:`inspectdb` that can create "
"models by introspecting an existing database. You can view the output by "
"running this command:"
msgstr ""

msgid "Save this as a file by using standard Unix output redirection:"
msgstr ""

msgid ""
"This feature is meant as a shortcut, not as definitive model generation. See "
"the :djadmin:`documentation of inspectdb <inspectdb>` for more information."
msgstr ""
"Este comandoé um atalho, não um gerador de modelos definitivos. Veja o :"
"djadmin:`documentation of inspectdb <inspectdb>` para mais informações."

msgid ""
"Once you've cleaned up your models, name the file ``models.py`` and put it "
"in the Python package that holds your app. Then add the app to your :setting:"
"`INSTALLED_APPS` setting."
msgstr ""
"Uma vez que tenha limpado seus modelos, nomeie  arquivo ``models.py``e "
"coloque-o no pacote Python que contém sua aplicação. Entã adicione a app "
"dentro da sua definição de :setting:`INSTALLED_APPS`."

msgid ""
"By default, :djadmin:`inspectdb` creates unmanaged models. That is, "
"``managed = False`` in the model's ``Meta`` class tells Django not to manage "
"each table's creation, modification, and deletion::"
msgstr ""
"Por padrão, o :djadmin:`inspectdb` cria modelos não gerenciáveis. Quer "
"dizer, ``managed = False`` na ``Meta`` classe do modelo, diz ao Django para "
"não gerenciar a criação, modificação e deleção  de cada tabela:: "

msgid ""
"If you do want to allow Django to manage the table's lifecycle, you'll need "
"to change the :attr:`~django.db.models.Options.managed` option above to "
"``True`` (or remove it because ``True`` is its default value)."
msgstr ""

msgid "Install the core Django tables"
msgstr "Instalando as Tabelas do núcleo do Django."

msgid ""
"Next, run the :djadmin:`migrate` command to install any extra needed "
"database records such as admin permissions and content types:"
msgstr ""

msgid "Test and tweak"
msgstr "Teste e ajustes"

msgid ""
"Those are the basic steps -- from here you'll want to tweak the models "
"Django generated until they work the way you'd like. Try accessing your data "
"via the Django database API, and try editing objects via Django's admin "
"site, and edit the models file accordingly."
msgstr ""
"Estes são os passos básicos -- daqui em diante você irá querer ajustar os "
"modelos que o Django gerou até que funcionem do jeito que você goste. Tente "
"acessar seus dados através da API de banco de dados do Django, e tente editá-"
"los via o site admin do Django, e edite o arquivo de modelo de acordo."

msgid "How to configure and use logging"
msgstr ""

msgid ":ref:`Django logging reference <logging-ref>`"
msgstr ""

msgid ":ref:`Django logging overview <logging-explanation>`"
msgstr ""

msgid ""
"Django provides a working :ref:`default logging configuration <default-"
"logging-configuration>` that is readily extended."
msgstr ""

msgid "Make a basic logging call"
msgstr ""

msgid ""
"To send a log message from within your code, you place a logging call into "
"it."
msgstr ""

msgid "Don't be tempted to use logging calls in ``settings.py``."
msgstr ""

msgid ""
"The way that Django logging is configured as part of the ``setup()`` "
"function means that logging calls placed in ``settings.py`` may not work as "
"expected, because *logging will not be set up at that point*. To explore "
"logging, use a view function as suggested in the example below."
msgstr ""

msgid ""
"First, import the Python logging library, and then obtain a logger instance "
"with :py:func:`logging.getLogger`. Provide the ``getLogger()`` method with a "
"name to identify it and the records it emits. A good option is to use "
"``__name__`` (see :ref:`naming-loggers` below for more on this) which will "
"provide the name of the current Python module as a dotted path::"
msgstr ""

msgid "It's a good convention to perform this declaration at module level."
msgstr ""

msgid ""
"And then in a function, for example in a view, send a record to the logger::"
msgstr ""

msgid ""
"When this code is executed, a :py:class:`~logging.LogRecord` containing that "
"message will be sent to the logger. If you're using Django's default logging "
"configuration, the message will appear in the console."
msgstr ""

msgid ""
"The ``WARNING`` level used in the example above is one of several :ref:"
"`logging severity levels <topic-logging-parts-loggers>`: ``DEBUG``, "
"``INFO``, ``WARNING``, ``ERROR``, ``CRITICAL``. So, another example might "
"be::"
msgstr ""

msgid ""
"Records with a level lower than ``WARNING`` will not appear in the console "
"by default. Changing this behavior requires additional configuration."
msgstr ""

msgid "Customize logging configuration"
msgstr ""

msgid ""
"Although Django's logging configuration works out of the box, you can "
"control exactly how your logs are sent to various destinations - to log "
"files, external services, email and so on - with some additional "
"configuration."
msgstr ""

msgid "You can configure:"
msgstr ""

msgid "logger mappings, to determine which records are sent to which handlers"
msgstr ""

msgid "handlers, to determine what they do with the records they receive"
msgstr ""

msgid ""
"filters, to provide additional control over the transfer of records, and "
"even modify records in-place"
msgstr ""

msgid ""
"formatters, to convert :class:`~logging.LogRecord` objects to a string or "
"other form for consumption by human beings or another system"
msgstr ""

msgid ""
"There are various ways of configuring logging. In Django, the :setting:"
"`LOGGING` setting is most commonly used. The setting uses the :ref:"
"`dictConfig format <logging-config-dictschema>`, and extends the :ref:"
"`default logging configuration <default-logging-definition>`."
msgstr ""

msgid ""
"See :ref:`configuring-logging` for an explanation of how your custom "
"settings are merged with Django's defaults."
msgstr ""

msgid ""
"See the :mod:`Python logging documentation <python:logging.config>` for "
"details of other ways of configuring logging. For the sake of simplicity, "
"this documentation will only consider configuration via the ``LOGGING`` "
"setting."
msgstr ""

msgid "Basic logging configuration"
msgstr ""

msgid "When configuring logging, it makes sense to"
msgstr ""

msgid "Create a ``LOGGING`` dictionary"
msgstr ""

msgid "In your ``settings.py``::"
msgstr ""

msgid ""
"It nearly always makes sense to retain and extend the default logging "
"configuration by setting ``disable_existing_loggers`` to ``False``."
msgstr ""

msgid "Configure a handler"
msgstr ""

msgid ""
"This example configures a single handler named ``file``, that uses Python's :"
"class:`~logging.FileHandler` to save logs of level ``DEBUG`` and higher to "
"the file ``general.log`` (at the project root):"
msgstr ""

msgid ""
"Different handler classes take different configuration options. For more "
"information on available handler classes, see the :class:`~django.utils.log."
"AdminEmailHandler` provided by Django and the various :py:mod:`handler "
"classes <logging.handlers>` provided by Python."
msgstr ""

msgid ""
"Logging levels can also be set on the handlers (by default, they accept log "
"messages of all levels). Using the example above, adding:"
msgstr ""

msgid ""
"would define a handler configuration that only accepts records of level "
"``DEBUG`` and higher."
msgstr ""

msgid "Configure a logger mapping"
msgstr ""

msgid ""
"To send records to this handler, configure a logger mapping to use it for "
"example:"
msgstr ""

msgid ""
"The mapping's name determines which log records it will process. This "
"configuration (``''``) is *unnamed*. That means that it will process records "
"from *all* loggers (see :ref:`naming-loggers` below on how to use the "
"mapping name to determine the loggers for which it will process records)."
msgstr ""

msgid ""
"It will forward messages of levels ``DEBUG`` and higher to the handler named "
"``file``."
msgstr ""

msgid ""
"Note that a logger can forward messages to multiple handlers, so the "
"relation between loggers and handlers is many-to-many."
msgstr ""

msgid "If you execute::"
msgstr ""

msgid ""
"in your code, you will find that message in the file ``general.log`` in the "
"root of the project."
msgstr ""

msgid "Configure a formatter"
msgstr ""

msgid ""
"By default, the final log output contains the message part of each :class:"
"`log record <logging.LogRecord>`. Use a formatter if you want to include "
"additional data. First name and define your formatters - this example "
"defines formatters named ``verbose`` and ``simple``:"
msgstr ""

msgid ""
"The ``style`` keyword allows you to specify ``{`` for :meth:`str.format` or "
"``$`` for :class:`string.Template` formatting; the default is ``$``."
msgstr ""

msgid ""
"See :ref:`logrecord-attributes` for the :class:`~logging.LogRecord` "
"attributes you can include."
msgstr ""

msgid ""
"To apply a formatter to a handler, add a ``formatter`` entry to the "
"handler's dictionary referring to the formatter by name, for example:"
msgstr ""

msgid "Use logger namespacing"
msgstr ""

msgid ""
"The unnamed logging configuration ``''`` captures logs from any Python "
"application. A named logging configuration will capture logs only from "
"loggers with matching names."
msgstr ""

msgid ""
"The namespace of a logger instance is defined using :py:func:`~logging."
"getLogger`. For example in ``views.py`` of ``my_app``::"
msgstr ""

msgid ""
"will create a logger in the ``my_app.views`` namespace. ``__name__`` allows "
"you to organize log messages according to their provenance within your "
"project's applications automatically. It also ensures that you will not "
"experience name collisions."
msgstr ""

msgid ""
"A logger mapping named ``my_app.views`` will capture records from this "
"logger:"
msgstr ""

msgid ""
"A logger mapping named ``my_app`` will be more permissive, capturing records "
"from loggers anywhere within the ``my_app`` namespace (including ``my_app."
"views``, ``my_app.utils``, and so on):"
msgstr ""

msgid "You can also define logger namespacing explicitly::"
msgstr ""

msgid "and set up logger mappings accordingly."
msgstr ""

msgid "Using logger hierarchies and propagation"
msgstr ""

msgid ""
"Logger naming is *hierarchical*. ``my_app`` is the parent of ``my_app."
"views``, which is the parent of ``my_app.views.private``. Unless specified "
"otherwise, logger mappings will propagate the records they process to their "
"parents - a record from a logger in the ``my_app.views.private`` namespace "
"will be handled by a mapping for both ``my_app`` and ``my_app.views``."
msgstr ""

msgid ""
"To manage this behavior, set the propagation key on the mappings you define::"
msgstr ""

msgid ""
"``propagate`` defaults to ``True``. In this example, the logs from ``my_app."
"views.private`` will not be handled by the parent, but logs from ``my_app."
"views`` will."
msgstr ""

msgid "Configure responsive logging"
msgstr ""

msgid ""
"Logging is most useful when it contains as much information as possible, but "
"not information that you don't need - and how much you need depends upon "
"what you're doing. When you're debugging, you need a level of information "
"that would be excessive and unhelpful if you had to deal with it in "
"production."
msgstr ""

msgid ""
"You can configure logging to provide you with the level of detail you need, "
"when you need it. Rather than manually change configuration to achieve this, "
"a better way is to apply configuration automatically according to the "
"environment."
msgstr ""

msgid ""
"For example, you could set an environment variable ``DJANGO_LOG_LEVEL`` "
"appropriately in your development and staging environments, and make use of "
"it in a logger mapping thus::"
msgstr ""

msgid ""
"\\- so that unless the environment specifies a lower log level, this "
"configuration will only forward records of severity ``WARNING`` and above to "
"its handler."
msgstr ""

msgid ""
"Other options in the configuration (such as the ``level`` or ``formatter`` "
"option of handlers) can be similarly managed."
msgstr ""

msgid "How to create CSV output"
msgstr ""

msgid ""
"This document explains how to output CSV (Comma Separated Values) "
"dynamically using Django views. To do this, you can either use the Python "
"CSV library or the Django template system."
msgstr ""
"Este documento explica como emitir CSV (valores separados por vírgulas) "
"dinamicamente usando \"views\" do Django. Para fazer isso, você pode usar a "
"biblioteca CSV do Python ou o sistema de templates do Django."

msgid "Using the Python CSV library"
msgstr "Usando a biblioteca CSV do Python."

msgid ""
"Python comes with a CSV library, :mod:`csv`. The key to using it with Django "
"is that the :mod:`csv` module's CSV-creation capability acts on file-like "
"objects, and Django's :class:`~django.http.HttpResponse` objects are file-"
"like objects."
msgstr ""
"Python vem com uma biblioteca CSV, :mod:`csv`. A chave para usá-lo com "
"Django é que a capacidade CSV-creation do módulo :mod:`csv`  age como um "
"objeto \"file-like\", e aos objetos da class:`~django.http.HttpResponse` do "
"Django são objetos \"file-like\"."

msgid "Here's an example::"
msgstr "Aqui está um exemplo"

msgid ""
"The code and comments should be self-explanatory, but a few things deserve a "
"mention:"
msgstr ""
"O código e comentário devem ser auto-explanaveis, mas algumas coisas merecem "
"uma menção."

msgid ""
"The response gets a special MIME type, :mimetype:`text/csv`. This tells "
"browsers that the document is a CSV file, rather than an HTML file. If you "
"leave this off, browsers will probably interpret the output as HTML, which "
"will result in ugly, scary gobbledygook in the browser window."
msgstr ""
"A resposta recebe um tipo MIME especial :mimetype:`text/csv`. Isso diz ao "
"browser que o documento é um arquivo CSV, ao invés de um arquivo HTML. Se "
"deixar isso desligado, os browsers vão provavelmente interpretar a resposta "
"como HTML, o qual irá resultar em uma feia e assustadora gobbledygook na "
"janela do seu browser."

msgid ""
"The response gets an additional ``Content-Disposition`` header, which "
"contains the name of the CSV file. This filename is arbitrary; call it "
"whatever you want. It'll be used by browsers in the \"Save as...\" dialog, "
"etc."
msgstr ""
"A resposta recebe um cabeçalho adicional ``Content-Dispoition``, o qual "
"contém o nome do arquivo CSV. Este nome de arquivo e arbitrário; chame isso "
"do que você quiser. Ele será usado pelo browser no diálogo \"Salvar como..."
"\", etc."

msgid ""
"You can hook into the CSV-generation API by passing ``response`` as the "
"first argument to ``csv.writer``. The ``csv.writer`` function expects a file-"
"like object, and :class:`~django.http.HttpResponse` objects fit the bill."
msgstr ""

msgid ""
"For each row in your CSV file, call ``writer.writerow``, passing it an :term:"
"`iterable`."
msgstr ""
"Para cada linha no seu arquivo CSV, chamar o método ``writer.writerow``, "
"passando um :term:`iterable`."

msgid ""
"The CSV module takes care of quoting for you, so you don't have to worry "
"about escaping strings with quotes or commas in them. Pass ``writerow()`` "
"your raw strings, and it'll do the right thing."
msgstr ""

msgid "Streaming large CSV files"
msgstr "Transmitindo grandes arquivos CSV"

msgid ""
"When dealing with views that generate very large responses, you might want "
"to consider using Django's :class:`~django.http.StreamingHttpResponse` "
"instead. For example, by streaming a file that takes a long time to generate "
"you can avoid a load balancer dropping a connection that might have "
"otherwise timed out while the server was generating the response."
msgstr ""
"Quando lida com \"views\" que geram respostas muito grandes, talvez queira "
"considerar usar o :class:`~django.http.StreamingHttpResponse` do Django no "
"lugar. Por exemplo, por trasmitir em fluxo contínuo ou \"streaming\" um "
"arquivo que leva muito tempo para ser gerado você pode evitar que a conexão "
"seja perdida tentando balancear a carga que talvez expire enquanto o "
"servidor estava gerando a resposta."

msgid ""
"In this example, we make full use of Python generators to efficiently handle "
"the assembly and transmission of a large CSV file::"
msgstr ""
"Neste exemplo, fazemos uso total de geradores Python para manipular "
"eficientemente a montagem e transmissão de um grande arquivo CSV::"

msgid "Using the template system"
msgstr "Usando o sistema de template."

msgid ""
"Alternatively, you can use the :doc:`Django template system </topics/"
"templates>` to generate CSV. This is lower-level than using the convenient "
"Python :mod:`csv` module, but the solution is presented here for "
"completeness."
msgstr ""
"Uma alternatica, você pode usar o :doc:`sistema de tempaltes do Django </"
"topics/templates>` para gerar CSV. Isso é mais baixo nível que usar o "
"conveniente módulo Python :mod:`csv`, mas a solução é apresentada aqui para "
"para abrangência."

msgid ""
"The idea here is to pass a list of items to your template, and have the "
"template output the commas in a :ttag:`for` loop."
msgstr ""
"A idéia aqui é passar uma lista de itens para seu template, e ter a saida do "
"template as vírgulas em um loop :ttag:`for`."

msgid "Here's an example, which generates the same CSV file as above::"
msgstr "Aqui um exemplo, o qual gera o mesmo arquivo CSV que acima::"

msgid ""
"The only difference between this example and the previous example is that "
"this one uses template loading instead of the CSV module. The rest of the "
"code -- such as the ``content_type='text/csv'`` -- is the same."
msgstr ""
"A única diferença entre este exemplo e o exemplo anterior é que este usa "
"carga de template ao invés do módulo CSV. O resto do código -- tal como "
"``content_type='text/csv'`` --  é o mesmo."

msgid ""
"Then, create the template ``my_template_name.txt``, with this template code:"
msgstr ""
"Então, crie o template ``my_template_name.txt``,  com este código no "
"template:"

msgid ""
"This short template iterates over the given data and displays a line of CSV "
"for each row. It uses the :tfilter:`addslashes` template filter to ensure "
"there aren't any problems with quotes."
msgstr ""

msgid "Other text-based formats"
msgstr "Outros formatos baseados em texto."

msgid ""
"Notice that there isn't very much specific to CSV here -- just the specific "
"output format. You can use either of these techniques to output any text-"
"based format you can dream of. You can also use a similar technique to "
"generate arbitrary binary data; see :doc:`/howto/outputting-pdf` for an "
"example."
msgstr ""
"Note que não tem muita coisa específica sobre CSV aqui -- apenas o formato "
"de saída. Você pode usar qualquer uma destas técnicas para qualquer formato "
"texto que você imagine. Você também pode usar essa técnica para gerar dados "
"binários arbitrários; veja :doc:`/howto/outputting-pdf` por exemplo."

msgid "How to create PDF files"
msgstr ""

msgid ""
"This document explains how to output PDF files dynamically using Django "
"views. This is made possible by the excellent, open-source ReportLab_ Python "
"PDF library."
msgstr ""
"Este documnto explica como gerar arquivos PDF dinamicamente usando \"views\" "
"Django. Isso é possível através da excelente, biblioteca Python de código-"
"aberto RepostLab_ ."

msgid ""
"The advantage of generating PDF files dynamically is that you can create "
"customized PDFs for different purposes -- say, for different users or "
"different pieces of content."
msgstr ""
"A vantagem de gerar arquivos PDF dinamicamente é que você pode criar PDFs "
"personalizados para diferentes propósitos -- vamos dizer, para diferentes "
"usuários ou diferentes partes de conteúdo."

msgid ""
"For example, Django was used at kusports.com_ to generate customized, "
"printer-friendly NCAA tournament brackets, as PDF files, for people "
"participating in a March Madness contest."
msgstr ""
"Por exemplo, o DJango foi usado no kusports.com_ para gerar relatórios "
"personalizados, prontos para impressão, de pontuação de torneio da NCAA, "
"como arquivos PDF, para pessoas que participam do concurso March Madness."

msgid "Install ReportLab"
msgstr "Instalar o ReportLab"

msgid ""
"The ReportLab library is :pypi:`available on PyPI <reportlab>`. A `user "
"guide`_ (not coincidentally, a PDF file) is also available for download. You "
"can install ReportLab with ``pip``:"
msgstr ""

msgid ""
"Test your installation by importing it in the Python interactive interpreter:"
msgstr ""

msgid "If that command doesn't raise any errors, the installation worked."
msgstr "Se o comando não emitir nenhum erro, a instalação funciona."

msgid "Write your view"
msgstr "Escreva sua \"view\""

msgid ""
"The key to generating PDFs dynamically with Django is that the ReportLab API "
"acts on file-like objects, and Django's :class:`~django.http.FileResponse` "
"objects accept file-like objects."
msgstr ""
"A chave para gerar PDFs dinamicamente com Django é que a API do ReportLab "
"atua em objetos tipo arquivo, e objetos da classe do Django :class:`~django."
"http.FileResponse` aceitam objetivos tipo arquivo."

msgid "Here's a \"Hello World\" example::"
msgstr "Aqui um exemplo \"Hello World\"::"

msgid ""
"The response will automatically set the MIME type :mimetype:`application/"
"pdf` based on the filename extension. This tells browsers that the document "
"is a PDF file, rather than an HTML file or a generic :mimetype:`application/"
"octet-stream` binary content."
msgstr ""

msgid ""
"When ``as_attachment=True`` is passed to ``FileResponse``, it sets the "
"appropriate ``Content-Disposition`` header and that tells web browsers to "
"pop-up a dialog box prompting/confirming how to handle the document even if "
"a default is set on the machine. If the ``as_attachment`` parameter is "
"omitted, browsers will handle the PDF using whatever program/plugin they've "
"been configured to use for PDFs."
msgstr ""

msgid ""
"You can provide an arbitrary ``filename`` parameter. It'll be used by "
"browsers in the \"Save as...\" dialog."
msgstr ""
"Você pode fornecer um parâmetro ``filename`` arbitrário. Ele será usado para "
"os navegadores na caixa de diálogo \"Salvar como...\"."

msgid ""
"You can hook into the ReportLab API: The same buffer passed as the first "
"argument to ``canvas.Canvas`` can be fed to the :class:`~django.http."
"FileResponse` class."
msgstr ""

msgid ""
"Note that all subsequent PDF-generation methods are called on the PDF object "
"(in this case, ``p``) -- not on ``buffer``."
msgstr ""
"Note que todas os methods de geração de PDF subsequentes são chamados no "
"objeto PDF (nesse caso, ``p``) -- não no ``buffer``."

msgid ""
"Finally, it's important to call ``showPage()`` and ``save()`` on the PDF "
"file."
msgstr ""
"E finalmente, é importante chamar ``showPage()`` e o  ``save()`` no arquivo "
"PDF."

msgid ""
"ReportLab is not thread-safe. Some of our users have reported odd issues "
"with building PDF-generating Django views that are accessed by many people "
"at the same time."
msgstr ""
"O ReposrtLab não tem mecanismos de segurança para ser usado de maneira "
"concorrente, ou não é thread-safe. Alguns de nossos usuários tem relatado "
"problemas ímpares ao gerar PDF em \"views\" Django que são acessadas por "
"muitos usuários ao mesmo tempo."

msgid "Other formats"
msgstr "Outros formatos"

msgid ""
"Notice that there isn't a lot in these examples that's PDF-specific -- just "
"the bits using ``reportlab``. You can use a similar technique to generate "
"any arbitrary format that you can find a Python library for. Also see :doc:`/"
"howto/outputting-csv` for another example and some techniques you can use "
"when generated text-based formats."
msgstr ""
"Note que não tem muito nestes exemplos que seja especificamente sobre PDF -- "
"apenas as partes usando ``reportlab``. Você pode usar técnicas similares "
"para gerar qualquer outro formato arbitrário para a qual você encontre uma "
"bilioteca Python. Veja também :doc:`/howto/outputting-csv` para outro "
"exemplo e algumas técnicas que você pode usar quando quiser gerar fomatos "
"baseados em texto. "

msgid ""
"Django Packages provides a `comparison of packages <https://djangopackages."
"org/grids/g/pdf/>`_ that help generate PDF files from Django."
msgstr ""
"O Django Packages fornece uma ferramenta para `comparação de pacotes "
"<https://djangopackages.org/grids/g/pdf/>`_ que auxiliam a geração de "
"arquivos PDF com o Django"

msgid "How to override templates"
msgstr ""

msgid ""
"In your project, you might want to override a template in another Django "
"application, whether it be a third-party application or a contrib "
"application such as ``django.contrib.admin``. You can either put template "
"overrides in your project's templates directory or in an application's "
"templates directory."
msgstr ""
"No seu projeto, você pode querer sobrescrever um template em outra aplicação "
"Django, seja ela uma aplicação de terceiros ou uma aplicação contrib, como "
"``django.contrib.admin`` Você pode colocar os templates sobrescritos no seu "
"diretório de templates ou em um diretório de templates de aplicação."

msgid ""
"If you have app and project templates directories that both contain "
"overrides, the default Django template loader will try to load the template "
"from the project-level directory first. In other words, :setting:`DIRS "
"<TEMPLATES-DIRS>` is searched before :setting:`APP_DIRS <TEMPLATES-"
"APP_DIRS>`."
msgstr ""
"Se você tem diretórios de templates de projeto e aplicação em que ambos "
"contenham sobrescritas, o carregador de templates padrão do Django tentará "
"carregar o template a partir do diretório de nível de projeto primeiro. Em "
"outras palavras, :settings:`DIRS <TEMPLATES-DIRS>` é procurado antes de :"
"settings:`APP_DIRS <TEMPLATES-APP_DIRS>`."

msgid ""
"Read :ref:`overriding-built-in-widget-templates` if you're looking to do "
"that."
msgstr ""
"Leia :ref:`overriding-built-in-widget-templates` se você estiver procurando "
"fazer isso."

msgid "Overriding from the project's templates directory"
msgstr "Sobrescrevendo do diretório de templates do projeto."

msgid ""
"First, we'll explore overriding templates by creating replacement templates "
"in your project's templates directory."
msgstr ""
"Primeiro, iremos explorar a sobrescrita de templates criando templates de "
"substituição no seu diretório de templates do projeto."

msgid ""
"Let's say you're trying to override the templates for a third-party "
"application called ``blog``, which provides the templates ``blog/post.html`` "
"and ``blog/list.html``. The relevant settings for your project would look "
"like::"
msgstr ""
"Vamos dizer que você esteja tentado sobrescrever os templates de uma "
"aplicação de terceiros chamada ``blog``, que provê os templates ``blog/post."
"html`` e ``blog/list.html``. As configurações relevantes do seu projeto irão "
"parecer com::"

msgid ""
"The :setting:`TEMPLATES` setting and ``BASE_DIR`` will already exist if you "
"created your project using the default project template. The setting that "
"needs to be modified is :setting:`DIRS<TEMPLATES-DIRS>`."
msgstr ""
"A configuração :setting:`TEMPLATES` e ``BASE_DIR`` irá existir se você tiver "
"criado o seu projeto usando o template padrão de projeto. A configuração que "
"precisa ser modificada é :setting:`DIRS<TEMPLATES-DIRS>`."

msgid ""
"These settings assume you have a ``templates`` directory in the root of your "
"project. To override the templates for the ``blog`` app, create a folder in "
"the ``templates`` directory, and add the template files to that folder:"
msgstr ""
"Essas configurações assumem que você tenha um diretório ``templates`` na "
"raiz do seu projeto. Para sobrescrever os templates para a aplicação "
"``blog``, crie um diretório no diretório ``templates``, e adicione os "
"arquivos de template nessa pasta recém criada."

msgid ""
"The template loader first looks for templates in the ``DIRS`` directory. "
"When the views in the ``blog`` app ask for the ``blog/post.html`` and ``blog/"
"list.html`` templates, the loader will return the files you just created."
msgstr ""
"O carregador de template primeiro procura por templates no diretório "
"``DIRS``. Quando as views na aplicação ``blog`` pedirem pelos templates "
"``blog/post.html```e ``blog/list.html``, o carregador irá retornar os "
"arquivos que você acabou de criar."

msgid "Overriding from an app's template directory"
msgstr "Sobrescrevendo de um diretório de template de aplicação."

msgid ""
"Since you're overriding templates located outside of one of your project's "
"apps, it's more common to use the first method and put template overrides in "
"a project's templates folder. If you prefer, however, it's also possible to "
"put the overrides in an app's template directory."
msgstr ""
"Já que você está sobrescrevendo templates localizados fora de uma de suas "
"aplicações do projeto, é mais comum usar o primeiro método e adicionar "
"templates que sobrescrevem na pasta de templates do projeto. Se você "
"preferir, entretanto, é possível colocar as sobrescritas em um diretório de "
"templates da aplicação."

msgid ""
"First, make sure your template settings are checking inside app directories::"
msgstr ""
"Primeiro, tenha certeza que as suas configurações de template estão "
"verificando dentro dos diretórios de aplicação::"

msgid ""
"If you want to put the template overrides in an app called ``myapp`` and the "
"templates to override are named ``blog/list.html`` and ``blog/post.html``, "
"then your directory structure will look like:"
msgstr ""
"Se você quer colocar as sobrescritas de templates em uma aplicação chamada "
"``myapp`` e os templates a serem sobrescritos são chamados ``blog/list."
"html`` e ``blog/post.html``, então sua estrutura de diretório será parecida "
"com isso:"

msgid ""
"With :setting:`APP_DIRS<TEMPLATES-APP_DIRS>` set to ``True``, the template "
"loader will look in the app's templates directory and find the templates."
msgstr ""
"Com a configuração :setting:`APP_DIRS<TEMPLATES-APP_DIRS>` definida como "
"``True``, o carregador de templates irá procurar no diretório de templates "
"de aplicação e encontrar os templates."

msgid "Extending an overridden template"
msgstr ""

msgid ""
"With your template loaders configured, you can extend a template using the :"
"ttag:`{% extends %}<extends>` template tag whilst at the same time "
"overriding it. This can allow you to make small customizations without "
"needing to reimplement the entire template."
msgstr ""

msgid ""
"For example, you can use this technique to add a custom logo to the ``admin/"
"base_site.html`` template:"
msgstr ""

msgid "``templates/admin/base_site.html``"
msgstr ""

msgid "Key points to note:"
msgstr ""

msgid ""
"The example creates a file at ``templates/admin/base_site.html`` that uses "
"the configured project-level ``templates`` directory to override ``admin/"
"base_site.html``."
msgstr ""

msgid ""
"The new template extends ``admin/base_site.html``, which is the same "
"template as is being overridden."
msgstr ""

msgid ""
"The template replaces just the ``branding`` block, adding a custom logo, and "
"using ``block.super`` to retain the prior content."
msgstr ""

msgid ""
"The rest of the template is inherited unchanged from ``admin/base_site."
"html``."
msgstr ""

msgid ""
"This technique works because the template loader does not consider the "
"already loaded override template (at ``templates/admin/base_site.html``) "
"when resolving the ``extends`` tag. Combined with ``block.super`` it is a "
"powerful technique to make small customizations."
msgstr ""

msgid "How to deploy static files"
msgstr ""

msgid ""
"For an introduction to the use of :mod:`django.contrib.staticfiles`, see :"
"doc:`/howto/static-files/index`."
msgstr ""
"Para uma introdução ao uso de :mod:`django.contrib.staticfiles`, veja :doc:`/"
"howto/static-files/index`."

msgid "Serving static files in production"
msgstr "Servindo arquivos estáticos em produção"

msgid ""
"The basic outline of putting static files into production consists of two "
"steps: run the :djadmin:`collectstatic` command when static files change, "
"then arrange for the collected static files directory (:setting:"
"`STATIC_ROOT`) to be moved to the static file server and served. Depending "
"the ``staticfiles`` :setting:`STORAGES` alias, files may need to be moved to "
"a new location manually or the :func:`post_process <django.contrib."
"staticfiles.storage.StaticFilesStorage.post_process>` method of the "
"``Storage`` class might take care of that."
msgstr ""

msgid ""
"As with all deployment tasks, the devil's in the details. Every production "
"setup will be a bit different, so you'll need to adapt the basic outline to "
"fit your needs. Below are a few common patterns that might help."
msgstr ""

msgid "Serving the site and your static files from the same server"
msgstr "Servindo o site e os arquivos estáticos de um mesmo servidor."

msgid ""
"If you want to serve your static files from the same server that's already "
"serving your site, the process may look something like:"
msgstr ""
"Se você quer servir arquivos estáticos do mesmo servidor que já está "
"servindo seu site , o processo talvez se pareça com algo como:"

msgid "Push your code up to the deployment server."
msgstr "Envie seu código para o servidor de deploy."

msgid ""
"On the server, run :djadmin:`collectstatic` to copy all the static files "
"into :setting:`STATIC_ROOT`."
msgstr ""
"No servidor, execute: :djadmin:`collectstatic` para copiar todos os arquivos "
"estáticos para dentro de :setting:`STATIC_ROOT`."

msgid ""
"Configure your web server to serve the files in :setting:`STATIC_ROOT` under "
"the URL :setting:`STATIC_URL`. For example, here's :ref:`how to do this with "
"Apache and mod_wsgi <serving-files>`."
msgstr ""
"Configure seu servidor Web para servir seus arquivos em :setting:"
"`STATIC_ROOT` sob a URL :setting:`STATIC_URL`. Por exemplo, aqui :ref:`como "
"fazer isso com Apache e mod_wsgi <serving-files>`."

msgid ""
"You'll probably want to automate this process, especially if you've got "
"multiple web servers."
msgstr ""
"Você irá provavelmente querer automatizar o processo, especialmente se você "
"possuir múltiplos servidores web."

msgid "Serving static files from a dedicated server"
msgstr "Servindo arquivos estáticos atráves de um servidor dedicado"

msgid ""
"Most larger Django sites use a separate web server -- i.e., one that's not "
"also running Django -- for serving static files. This server often runs a "
"different type of web server -- faster but less full-featured. Some common "
"choices are:"
msgstr ""

msgid ""
"Configuring these servers is out of scope of this document; check each "
"server's respective documentation for instructions."
msgstr ""
"A configuração destes servidores estão fora do escopo deste documento; "
"verifique a respectiva documentação de cada um para instruções."

msgid ""
"Since your static file server won't be running Django, you'll need to modify "
"the deployment strategy to look something like:"
msgstr ""
"Já que seu servidor de arquivos estáticos não irão rodar um Django, você irá "
"precisar modificar a estratégia para algo como:"

msgid "When your static files change, run :djadmin:`collectstatic` locally."
msgstr ""
"Quando seus arquivos estáticos mudarem, execute :djadmin:`collectstatic`  "
"localmente."

msgid ""
"Push your local :setting:`STATIC_ROOT` up to the static file server into the "
"directory that's being served. `rsync <https://rsync.samba.org/>`_ is a "
"common choice for this step since it only needs to transfer the bits of "
"static files that have changed."
msgstr ""
"Coloque seu  :setting:`STATIC_ROOT` local no servidor de arquivo estático "
"dentro do diretório que esta sendo servido. O  `rsync <https://rsync.samba."
"org/>`_ é uma opção comum para este passo já que ele precisa transferir "
"somente as partes dos arquivos estáticos quesofreram mudanças."

msgid "Serving static files from a cloud service or CDN"
msgstr "Servindo arquivos estáticos de um serviço em nuvem ou CDN"

msgid ""
"Another common tactic is to serve static files from a cloud storage provider "
"like Amazon's S3 and/or a CDN (content delivery network). This lets you "
"ignore the problems of serving static files and can often make for faster-"
"loading web pages (especially when using a CDN)."
msgstr ""

msgid ""
"When using these services, the basic workflow would look a bit like the "
"above, except that instead of using ``rsync`` to transfer your static files "
"to the server you'd need to transfer the static files to the storage "
"provider or CDN."
msgstr ""
"Quando usar estes serviços, o processo básico será parecido como o acima, "
"exceto que no lugar de usar o ``rsync`` para transferir seus arquivos "
"estáticos para o servidor, você irá precisa transferir os arquivos estáticos "
"para fornecedor do armazenamento ou CDN."

msgid ""
"There's any number of ways you might do this, but if the provider has an "
"API, you can use a :doc:`custom file storage backend </howto/custom-file-"
"storage>` to integrate the CDN with your Django project. If you've written "
"or are using a 3rd party custom storage backend, you can tell :djadmin:"
"`collectstatic` to use it by setting ``staticfiles`` in :setting:`STORAGES`."
msgstr ""

msgid ""
"For example, if you've written an S3 storage backend in ``myproject.storage."
"S3Storage`` you could use it with::"
msgstr ""
"Por exemplo, se você escreveu um backend de armazenamento para o S3 em "
"``myproject.storage.S3Storage`` você poderia ele com:"

msgid ""
"Once that's done, all you have to do is run :djadmin:`collectstatic` and "
"your static files would be pushed through your storage package up to S3. If "
"you later needed to switch to a different storage provider, you may only "
"have to change ``staticfiles`` in the :setting:`STORAGES` setting."
msgstr ""

msgid ""
"For details on how you'd write one of these backends, see :doc:`/howto/"
"custom-file-storage`. There are 3rd party apps available that provide "
"storage backends for many common file storage APIs. A good starting point is "
"the `overview at djangopackages.org <https://djangopackages.org/grids/g/"
"storage-backends/>`_."
msgstr ""
"Para detalhes sobre como escrever um destes backends, veja :doc:`/howto/"
"custom-file-storage`. Existem aplicações de terceiros disponíveis que "
"fornecem backends de armazenamento para muitas APIs comuns de armazenamento "
"comuns. Um bom começo é uma  `olhada geral no djangopackages.com <https://"
"www.djangopackages.com/grids/g/storage-backends/>`_."

msgid "The :setting:`STORAGES` setting was added."
msgstr ""

msgid "Learn more"
msgstr "Aprenda mais"

msgid ""
"For complete details on all the settings, commands, template tags, and other "
"pieces included in :mod:`django.contrib.staticfiles`, see :doc:`the "
"staticfiles reference </ref/contrib/staticfiles>`."
msgstr ""
"Para detalhes completos sobre todas as configurações, comandos, tags de "
"templates, e outras partes incluidas em :mod:`django.contrib.staticfiles`, "
"veja  :doc:`a referencia de arquivos estáticos </ref/contrib/staticfiles>`."

msgid "How to manage static files (e.g. images, JavaScript, CSS)"
msgstr ""

msgid ""
"Websites generally need to serve additional files such as images, "
"JavaScript, or CSS. In Django, we refer to these files as \"static files\".  "
"Django provides :mod:`django.contrib.staticfiles` to help you manage them."
msgstr ""
"Sites geralmente precisam servir arquivos adicionais como imagens, "
"JavaScript, ou CSS. No Django, nós nos referimos a estes arquivos como "
"\"arquivos estáticos\". O Django fornece  :mod:`django.contrib.staticfiles` "
"para ajudar você a gerenciar eles. "

msgid "This page describes how you can serve these static files."
msgstr "Está página descreve como você pode servir estes arquivos estáticos."

msgid "Configuring static files"
msgstr "Configurando arquivos estáticos"

msgid ""
"Make sure that ``django.contrib.staticfiles`` is included in your :setting:"
"`INSTALLED_APPS`."
msgstr ""
"Certifique-se de que ``django.contrib.staticfiles`` está incluído no seu :"
"setting:`INSTALLED_APPS`."

msgid "In your settings file, define :setting:`STATIC_URL`, for example::"
msgstr ""
"Em seu arquivo de configurações, defina :setting:`STATIC_URL`, por exemplo::"

msgid ""
"In your templates, use the :ttag:`static` template tag to build the URL for "
"the given relative path using the configured ``staticfiles`` :setting:"
"`STORAGES` alias."
msgstr ""

msgid ""
"Store your static files in a folder called ``static`` in your app. For "
"example ``my_app/static/my_app/example.jpg``."
msgstr ""
"Armazene seus arquivos estáticos no diretório chamado ``static`` dentro da "
"sua app. Por exemplo ``my_app/static/my_app/example.jpg``."

msgid "Serving the files"
msgstr "Servindo os arquivos"

msgid ""
"In addition to these configuration steps, you'll also need to actually serve "
"the static files."
msgstr ""
"Além desses passos de configuração, você também vai precisar servir os "
"arquivos estáticos."

msgid ""
"During development, if you use :mod:`django.contrib.staticfiles`, this will "
"be done automatically by :djadmin:`runserver` when :setting:`DEBUG` is set "
"to ``True`` (see :func:`django.contrib.staticfiles.views.serve`)."
msgstr ""
"Durante o desenvolvimento, se você usar :mod:`django.contrib.staticfiles`, "
"isso será feito automaticamente pelo :djadmin:`runserver` quando :setting:"
"`DEBUG` está definido como ``True`` (veja :func:`django.contrib.staticfiles."
"views.serve`). "

msgid ""
"This method is **grossly inefficient** and probably **insecure**, so it is "
"**unsuitable for production**."
msgstr ""
"Este método é **grosseiramente ineficiente** e provavelmente **inseguro**, "
"então isso é **impróprio para produção**."

msgid ""
"See :doc:`/howto/static-files/deployment` for proper strategies to serve "
"static files in production environments."
msgstr ""
"Veja :doc:`/howto/static-files/deployment` para estratégias apropriadas para "
"servir arquivos estáticos em ambientes de produção."

msgid ""
"Your project will probably also have static assets that aren't tied to a "
"particular app. In addition to using a ``static/`` directory inside your "
"apps, you can define a list of directories (:setting:`STATICFILES_DIRS`) in "
"your settings file where Django will also look for static files. For "
"example::"
msgstr ""
"Seu projeto irá provavelmente ter ativos estáticos que não estão amarrados a "
"uma app em particular. Além de usar um diretório ``static/`` dentro de sua "
"app, você pode definir uma lista de diretórios (:setting:`STATICFILES_DIRS`) "
"no seu arquivo de configurações onde o Django também irá procurar por "
"arquivos estáticos. Por exemplo::"

msgid ""
"See the documentation for the :setting:`STATICFILES_FINDERS` setting for "
"details on how ``staticfiles`` finds your files."
msgstr ""
"Veja a documentação para a definição do :setting:`STATICFILES_FINDERS` para "
"detalhes sobre como o ``staticfiles`` encontra seus arquivos."

msgid "Static file namespacing"
msgstr "*Namespacing* de arquivos estáticos"

msgid ""
"Now we *might* be able to get away with putting our static files directly in "
"``my_app/static/`` (rather than creating another ``my_app`` subdirectory), "
"but it would actually be a bad idea. Django will use the first static file "
"it finds whose name matches, and if you had a static file with the same name "
"in a *different* application, Django would be unable to distinguish between "
"them. We need to be able to point Django at the right one, and the best way "
"to ensure this is by *namespacing* them. That is, by putting those static "
"files inside *another* directory named for the application itself."
msgstr ""

msgid ""
"You can namespace static assets in :setting:`STATICFILES_DIRS` by "
"specifying :ref:`prefixes <staticfiles-dirs-prefixes>`."
msgstr ""

msgid "Serving static files during development"
msgstr "Servindo arquivos estáticos durante o desenvolvimento"

msgid ""
"If you use :mod:`django.contrib.staticfiles` as explained above, :djadmin:"
"`runserver` will do this automatically when :setting:`DEBUG` is set to "
"``True``. If you don't have ``django.contrib.staticfiles`` in :setting:"
"`INSTALLED_APPS`, you can still manually serve static files using the :func:"
"`django.views.static.serve` view."
msgstr ""
"Se você usa o :mod:`django.contrib.staticfiles` como explicado acima, :"
"djadmin:`runserver` vai fazer isso automaticamente quando :settings:`DEBUG` "
"estiver configurado como ``True``. Se você não tem ``django.contrib."
"staticfiles`` em :setting:`INSTALLED_APPS`, você ainda pode manualmente "
"servir arquivos estáticos usando a view :func:`django.views.static.serve`."

msgid ""
"This is not suitable for production use! For some common deployment "
"strategies, see :doc:`/howto/static-files/deployment`."
msgstr ""
"Isso não é apropriado para uso em produção! Para algumas estratégias de "
"deploy, veja :doc:`/howto/static-files/deployment`."

msgid ""
"For example, if your :setting:`STATIC_URL` is defined as ``static/``, you "
"can do this by adding the following snippet to your ``urls.py``::"
msgstr ""

msgid ""
"This helper function works only in debug mode and only if the given prefix "
"is local (e.g. ``static/``) and not a URL (e.g. ``http://static.example.com/"
"``)."
msgstr ""

msgid ""
"Also this helper function only serves the actual :setting:`STATIC_ROOT` "
"folder; it doesn't perform static files discovery like :mod:`django.contrib."
"staticfiles`."
msgstr ""
"Esta função de auxiliar serve somente o diretório atual :setting:"
"`STATIC_ROOT`; ela não faz a busca de arquivos estáticos como :mod:`django."
"contrib.staticfiles`."

msgid ""
"Finally, static files are served via a wrapper at the WSGI application "
"layer. As a consequence, static files requests do not pass through the "
"normal :doc:`middleware chain </topics/http/middleware>`."
msgstr ""

msgid "Serving files uploaded by a user during development"
msgstr ""
"Servindo arquivos que foram enviados pelo usuário durante o desenvolvimento"

msgid ""
"During development, you can serve user-uploaded media files from :setting:"
"`MEDIA_ROOT` using the :func:`django.views.static.serve` view."
msgstr ""
"Durante o desenvolvimento, você pode entregar arquivos de mídia enviados "
"pelos usuários através do :setting:`MEDIA_ROOT` usando a view :func:`django."
"views.static.serve`."

msgid ""
"For example, if your :setting:`MEDIA_URL` is defined as ``media/``, you can "
"do this by adding the following snippet to your :setting:`ROOT_URLCONF`::"
msgstr ""

msgid ""
"This helper function works only in debug mode and only if the given prefix "
"is local (e.g. ``media/``) and not a URL (e.g. ``http://media.example.com/"
"``)."
msgstr ""

msgid ""
"When running tests that use actual HTTP requests instead of the built-in "
"testing client (i.e. when using the built-in :class:`LiveServerTestCase "
"<django.test.LiveServerTestCase>`) the static assets need to be served along "
"the rest of the content so the test environment reproduces the real one as "
"faithfully as possible, but ``LiveServerTestCase`` has only very basic "
"static file-serving functionality: It doesn't know about the finders feature "
"of the ``staticfiles`` application and assumes the static content has "
"already been collected under :setting:`STATIC_ROOT`."
msgstr ""
"Ao executar testes que usam requisições HTTP reais ao invés do cliente de "
"teste embutido (isto é, quando se usa a :class:`LiveServerTestCase <django."
"test.LiveServerTestCase>` do Django) o conteúdo estático precisa ser servido "
"junto com o resto do conteúdo então o ambiente de teste reproduz o real tão "
"fielmente quanto possível, mas ``LiveServeTestCase`` tem somente "
"funcionalidades de servidor muito básicas de arquivos: Ele não sabe sobre as "
"funcionalidades de procura da aplicação ``staticfiles`` e assume que o "
"conteúdo estático já tenha sido coletado no :setting:`STATIC_ROOT`."

msgid ""
"Because of this, ``staticfiles`` ships its own :class:`django.contrib."
"staticfiles.testing.StaticLiveServerTestCase`, a subclass of the built-in "
"one that has the ability to transparently serve all the assets during "
"execution of these tests in a way very similar to what we get at development "
"time with ``DEBUG = True``, i.e. without having to collect them using :"
"djadmin:`collectstatic` first."
msgstr ""
"Por causa disso, ``staticfiles`` vem com sua própria :class:`django.contrib."
"staticfiles.testing.StaticLiveServerTestCase`, uma subclasse daquela que vem "
"embutida que tem a habilidade de servir de maneira transparente todos os "
"ativos durante a execução destes testes de uma maneira similar a que temos "
"em tempo de desenvolvimento com ``DEBUG = True``, isto é, sem precisar "
"coletá-los usando o :djadmin:`collectstatic` antes."

msgid "Deployment"
msgstr "Deploy"

msgid ""
":mod:`django.contrib.staticfiles` provides a convenience management command "
"for gathering static files in a single directory so you can serve them "
"easily."
msgstr ""
":mod:`django.contrib.staticfiles` fornece um comando de gerenciamento "
"conveniente para juntar arquivos estáticos em um único diretório para você "
"poder servi-los facilmente."

msgid ""
"Set the :setting:`STATIC_ROOT` setting to the directory from which you'd "
"like to serve these files, for example::"
msgstr ""
"Defina a configuração do :setting:`STATIC_ROOT` para o diretório do qual "
"você gostaria de servir estes arquivos, por exemplo::"

msgid "Run the :djadmin:`collectstatic` management command:"
msgstr ""

msgid ""
"This will copy all files from your static folders into the :setting:"
"`STATIC_ROOT` directory."
msgstr ""
"Isso irá copiar todos os arquivos dos seus diretórios estáticos para dentro "
"do diretório definido em :setting:`STATIC_ROOT`."

msgid ""
"Use a web server of your choice to serve the files. :doc:`/howto/static-"
"files/deployment` covers some common deployment strategies for static files."
msgstr ""
"Use um servidor Web de sua escolha para servir os arquivos. O :doc:`/howto/"
"static-files/deployment` cobre algumas estratégias de deploy comuns para "
"arquivos estáticos."

msgid ""
"This document has covered the basics and some common usage patterns. For "
"complete details on all the settings, commands, template tags, and other "
"pieces included in :mod:`django.contrib.staticfiles`, see :doc:`the "
"staticfiles reference </ref/contrib/staticfiles>`."
msgstr ""
"Este documento cobriu o básico e alguns padrões comuns de uso. Para detalhes "
"completos sobre todas as configurações, comandos, tags de templates, e "
"outras partes incluidas em :mod:`django.contrib.staticfiles`, veja a :doc:"
"`referência de arquivos estáticos </ref/contrib/staticfiles>`."

msgid "How to upgrade Django to a newer version"
msgstr ""

msgid ""
"While it can be a complex process at times, upgrading to the latest Django "
"version has several benefits:"
msgstr ""
"Apesar de ser um processo complexo as vezes, atualizar a versão do Django "
"tem muitos benefícios:"

msgid "New features and improvements are added."
msgstr "Novas características e melhorias são adicionadas."

msgid "Bugs are fixed."
msgstr "Erros são ajustados."

msgid ""
"Older version of Django will eventually no longer receive security updates. "
"(see :ref:`supported-versions-policy`)."
msgstr ""
"Versões anteriores do Django eventualmente não irão receber atualizações de "
"segurança. (veja :ref:`supported-versions-policy`)."

msgid ""
"Upgrading as each new Django release is available makes future upgrades less "
"painful by keeping your code base up to date."
msgstr ""
"Atualizando assim que cada versão do Django fica disponível faz com que "
"futuras atualizações sejam menos dolorosas, por mantendo sua base de código "
"atualizada."

msgid ""
"Here are some things to consider to help make your upgrade process as smooth "
"as possible."
msgstr ""
"Aqui alguns pontos para considerar para ajudar fazer seu processo de "
"atualização mais suave tanto quanto possível."

msgid "Required Reading"
msgstr "Leitura requerida"

msgid ""
"If it's your first time doing an upgrade, it is useful to read the :doc:"
"`guide on the different release processes </internals/release-process>`."
msgstr ""
"Se esta é sua primeira vez fazendo uma atualização, é útil ler o :doc:`guia "
"sobre o processo de atualizações diferente </internals/release-process>`."

msgid ""
"Afterward, you should familiarize yourself with the changes that were made "
"in the new Django version(s):"
msgstr ""

msgid ""
"Read the :doc:`release notes </releases/index>` for each 'final' release "
"from the one after your current Django version, up to and including the "
"version to which you plan to upgrade."
msgstr ""
"Leia as :doc:`notas sobre a edição </releases/index>` para cara edição a "
"partir da sua versão de Django corrente, até e inclusive a versão do Django "
"pra qual que você planeja atualizar."

msgid ""
"Look at the :doc:`deprecation timeline</internals/deprecation>` for the "
"relevant versions."
msgstr ""
"Dê uma olhada no :doc:`linha do tempo da depreciação</internals/"
"deprecation>` para as versões relevantes."

msgid ""
"Pay particular attention to backwards incompatible changes to get a clear "
"idea of what will be needed for a successful upgrade."
msgstr ""
"Preste uma atenção particular a incompatibilidades das mudanças nas versões "
"anteriores para ter uma idéia clara do que será necessário para uma "
"atualização de sucesso."

msgid ""
"If you're upgrading through more than one feature version (e.g. 2.0 to 2.2), "
"it's usually easier to upgrade through each feature release incrementally "
"(2.0 to 2.1 to 2.2) rather than to make all the changes for each feature "
"release at once. For each feature release, use the latest patch release (e."
"g. for 2.1, use 2.1.15)."
msgstr ""

msgid ""
"The same incremental upgrade approach is recommended when upgrading from one "
"LTS to the next."
msgstr ""
"A mesma abordagem de atualização incremental é recomendada quando for "
"atualizar de um lançamento LTS para outro."

msgid "Dependencies"
msgstr "Dependências"

msgid ""
"In most cases it will be necessary to upgrade to the latest version of your "
"Django-related dependencies as well. If the Django version was recently "
"released or if some of your dependencies are not well-maintained, some of "
"your dependencies may not yet support the new Django version. In these cases "
"you may have to wait until new versions of your dependencies are released."
msgstr ""
"Na maioria dos casos para atualizar para a última versão do Django será "
"necessário atualizar as dependências do Django também. Se a versão do Django "
"foi lançada recentemente ou se algumas de suas dependências não são muito "
"bem mantidas, algumas dependências podem não dar suporte a versão do Django. "
"Nestes casos você terá que esperar até que a nova versão das dependências "
"sejam lançadas."

msgid "Resolving deprecation warnings"
msgstr "Resolvendo alertas de descontinuidade"

msgid ""
"Before upgrading, it's a good idea to resolve any deprecation warnings "
"raised by your project while using your current version of Django. Fixing "
"these warnings before upgrading ensures that you're informed about areas of "
"the code that need altering."
msgstr ""
"Antes de atualizar, é uma boa idéia resolver qualquer alerta de "
"descontinuidade emitido pelo projeto enquanto estiver usando sua versão do "
"Django atual. Resolvendo estes alertas antes da atualização assegure-se que "
"você tenha informações de todas as áreas do código que precisam de alteração."

msgid ""
"In Python, deprecation warnings are silenced by default. You must turn them "
"on using the ``-Wa`` Python command line option or the :envvar:"
"`PYTHONWARNINGS` environment variable. For example, to show warnings while "
"running tests:"
msgstr ""
"Em Python, avisos de código obsoleto são silenciados por padrão. Você deve "
"ativá-los usando a opção de linha de comando Python ``-Wa``, ou então a "
"variável de ambiente :envvar:`PYTHONWARNINGS`. Por exemplo, para exibir "
"alerta durante a execução de testes:"

msgid ""
"If you're not using the Django test runner, you may need to also ensure that "
"any console output is not captured which would hide deprecation warnings. "
"For example, if you use `pytest <https://docs.pytest.org/>`__:"
msgstr ""

msgid ""
"Resolve any deprecation warnings with your current version of Django before "
"continuing the upgrade process."
msgstr ""
"Resolva qualquer alerta de descontinuidade com sua versão atual do Django "
"antes de continuar o processo de atualização."

msgid ""
"Third party applications might use deprecated APIs in order to support "
"multiple versions of Django, so deprecation warnings in packages you've "
"installed don't necessarily indicate a problem. If a package doesn't support "
"the latest version of Django, consider raising an issue or sending a pull "
"request for it."
msgstr ""
"Aplicações de terceiros talvez usem APIs obsoletas  para suporta múltiplas "
"versões do Django, então alertas de descontinuidade em pacotes que você "
"tenha instalado não indicam necessariamente um problema. Se um pacote não dá "
"suporte a última versão do Django, considere enviar uma \"issue\" ou um "
"\"pull request\" para ele."

msgid "Installation"
msgstr "Instalação"

msgid ""
"Once you're ready, it is time to :doc:`install the new Django version </"
"topics/install>`. If you are using a :mod:`virtual environment <venv>` and "
"it is a major upgrade, you might want to set up a new environment with all "
"the dependencies first."
msgstr ""

msgid ""
"If you installed Django with pip_, you can use the ``--upgrade`` or ``-U`` "
"flag:"
msgstr ""
"Se você tiver instalado Django com pip_, você pode usar a flag ``--upgrade`` "
"ou ``-U``."

msgid ""
"When the new environment is set up, :doc:`run the full test suite </topics/"
"testing/overview>` for your application. Again, it's useful to turn on "
"deprecation warnings on so they're shown in the test output (you can also "
"use the flag if you test your app manually using ``manage.py runserver``):"
msgstr ""
"Quando o novo ambiente estiver definido, :doc:`rode todo pacote de teste  </"
"topics/testing/overview>` para sua aplicação. De novo, é útil ligar os "
"alertas de descontinuidade de modo que sejam mostrados na saída dos testes "
"(você também pode usar a \"flag\" se testar sua aplicação manualmente usando "
"``manage.py runserver``):"

msgid ""
"After you have run the tests, fix any failures. While you have the release "
"notes fresh in your mind, it may also be a good time to take advantage of "
"new features in Django by refactoring your code to eliminate any deprecation "
"warnings."
msgstr ""
"Depois que rodar os testes, concerte as falhas. Enquanto você tem as notas "
"da versão frescas na sua cabeça, talvez seja uma boa hora para tirar "
"vantagem das novas características do Django refatorando o código para "
"eliminar qualquer alerta de descontinuidade."

msgid ""
"When you are sufficiently confident your app works with the new version of "
"Django, you're ready to go ahead and :doc:`deploy </howto/deployment/index>` "
"your upgraded Django project."
msgstr ""
"Quando você estiver suficientemente confiante que sua aplicação funciona com "
"a nova versão do Django, você está pronto para ir em frente e :doc:"
"`implantar </howto/deployment/index>` seu projeto com Django atualizado."

msgid ""
"If you are using caching provided by Django, you should consider clearing "
"your cache after upgrading. Otherwise you may run into problems, for "
"example, if you are caching pickled objects as these objects are not "
"guaranteed to be pickle-compatible across Django versions. A past instance "
"of incompatibility was caching pickled :class:`~django.http.HttpResponse` "
"objects, either directly or indirectly via the :func:`~django.views."
"decorators.cache.cache_page` decorator."
msgstr ""
"Se você estiver usando o cache fornecido pelo Django, você deve considerar "
"limpar o cache depois da atualização. De outro modo você pode ter problemas, "
"por exemplo, se você estiver mantendo em cache objetos serializados e estes "
"objetos não tem garantia de compatibilidade de serialização entre as versões "
"do Django. Um problema de incompatibilidade no passado foi o cache de "
"objetos :class:`~django.http.HttpResponse` serializados, diretamente ou "
"indiretamente via o decorador :func:`~django.views.decorators.cache."
"cache_page`."

msgid "How to install Django on Windows"
msgstr "Como instalar o Django no Windows"

msgid ""
"This document will guide you through installing Python 3.8 and Django on "
"Windows. It also provides instructions for setting up a virtual environment, "
"which makes it easier to work on Python projects. This is meant as a "
"beginner's guide for users working on Django projects and does not reflect "
"how Django should be installed when developing patches for Django itself."
msgstr ""

msgid ""
"The steps in this guide have been tested with Windows 10. In other versions, "
"the steps would be similar. You will need to be familiar with using the "
"Windows command prompt."
msgstr ""

msgid "Install Python"
msgstr "Instalando Python"

msgid ""
"Django is a Python web framework, thus requiring Python to be installed on "
"your machine. At the time of writing, Python 3.8 is the latest version."
msgstr ""

msgid ""
"To install Python on your machine go to https://www.python.org/downloads/. "
"The website should offer you a download button for the latest Python "
"version. Download the executable installer and run it. Check the boxes next "
"to \"Install launcher for all users (recommended)\" then click \"Install Now"
"\"."
msgstr ""

msgid ""
"After installation, open the command prompt and check that the Python "
"version matches the version you installed by executing:"
msgstr ""

msgid "For more details, see :doc:`python:using/windows` documentation."
msgstr ""

msgid "About ``pip``"
msgstr "Sobre o ``pip``"

msgid ""
":pypi:`pip` is a package manager for Python and is included by default with "
"the Python installer. It helps to install and uninstall Python packages "
"(such as Django!). For the rest of the installation, we'll use ``pip`` to "
"install Python packages from the command line."
msgstr ""

msgid "Setting up a virtual environment"
msgstr ""

msgid ""
"It is best practice to provide a dedicated environment for each Django "
"project you create. There are many options to manage environments and "
"packages within the Python ecosystem, some of which are recommended in the "
"`Python documentation <https://packaging.python.org/guides/tool-"
"recommendations/>`_. Python itself comes with :doc:`venv <python:tutorial/"
"venv>` for managing environments which we will use for this guide."
msgstr ""

msgid ""
"To create a virtual environment for your project, open a new command prompt, "
"navigate to the folder where you want to create your project and then enter "
"the following:"
msgstr ""

msgid ""
"This will create a folder called 'project-name' if it does not already exist "
"and set up the virtual environment. To activate the environment, run:"
msgstr ""

msgid ""
"The virtual environment will be activated and you'll see \"(project-name)\" "
"next to the command prompt to designate that. Each time you start a new "
"command prompt, you'll need to activate the environment again."
msgstr ""

msgid "Install Django"
msgstr "Instalando Django"

msgid ""
"Django can be installed easily using ``pip`` within your virtual environment."
msgstr ""
"O Django pode ser facilmente instalado dentro de seu ambiente virtual usando "
"o ``pip``."

msgid ""
"In the command prompt, ensure your virtual environment is active, and "
"execute the following command:"
msgstr ""

msgid "This will download and install the latest Django release."
msgstr "Isso irá baixar e instalar a última versão do Django."

msgid ""
"After the installation has completed, you can verify your Django "
"installation by executing ``django-admin --version`` in the command prompt."
msgstr ""
"Depois que a instalação for concluída, você pode verificar sua instalação do "
"Django executando ``django-admin --version`` na linha de comando."

msgid ""
"See :ref:`database-installation` for information on database installation "
"with Django."
msgstr ""
"Veja :ref:`database-installation` para informações sobre a instalação do "
"banco de dados com Django."

msgid "Colored terminal output"
msgstr ""

msgid ""
"A quality-of-life feature adds colored (rather than monochrome) output to "
"the terminal. In modern terminals this should work for both CMD and "
"PowerShell. If for some reason this needs to be disabled, set the "
"environmental variable :envvar:`DJANGO_COLORS` to ``nocolor``."
msgstr ""

msgid ""
"On older Windows versions, or legacy terminals, :pypi:`colorama` must be "
"installed to enable syntax coloring:"
msgstr ""

msgid "See :ref:`syntax-coloring` for more information on color settings."
msgstr ""

msgid "Common pitfalls"
msgstr "Armadilhas comuns"

msgid ""
"If ``django-admin`` only displays the help text no matter what arguments it "
"is given, there is probably a problem with the file association in Windows. "
"Check if there is more than one environment variable set for running Python "
"scripts in ``PATH``. This usually occurs when there is more than one Python "
"version installed."
msgstr ""
"Se o  ``django-admin`` somente mostra o texto de ajuda não importando quais "
"argumentos lhe é dado, provavelmente tem um problema com a associação do "
"arquivo no windows. Verifique se existe mais de uma variável de ambiente "
"definida para rodar os scripts Python no ``PATH``. Isso normalmente ocorre "
"quando existe mais de uma versão de Python instalada."

msgid ""
"If you are connecting to the internet behind a proxy, there might be "
"problems in running the command ``py -m pip install Django``. Set the "
"environment variables for proxy configuration in the command prompt as "
"follows:"
msgstr ""

msgid ""
"In general, Django assumes that ``UTF-8`` encoding is used for I/O. This may "
"cause problems if your system is set to use a different encoding. Recent "
"versions of Python allow setting the :envvar:`PYTHONUTF8` environment "
"variable in order to force a ``UTF-8`` encoding. Windows 10 also provides a "
"system-wide setting by checking ``Use Unicode UTF-8 for worldwide language "
"support`` in :menuselection:`Language --> Administrative Language Settings --"
"> Change system locale` in system settings."
msgstr ""

msgid "How to create database migrations"
msgstr ""

msgid ""
"This document explains how to structure and write database migrations for "
"different scenarios you might encounter. For introductory material on "
"migrations, see :doc:`the topic guide </topics/migrations>`."
msgstr ""
"Este documento explica como estruturar e a escrever migrações de banco de "
"dados para diferentes cenários que você talvez encontre. Para um material "
"introdutório sobre migrações, veja :doc:`o tópico guia</topics/migrations>`."

msgid "Data migrations and multiple databases"
msgstr "Migrações de dados e múltiplos bancos de dados"

msgid ""
"When using multiple databases, you may need to figure out whether or not to "
"run a migration against a particular database. For example, you may want to "
"**only** run a migration on a particular database."
msgstr ""
"Quando usar múltiplos bancos de dados, você talvez necessite entender onde "
"rodar e onde não rodar migrações para um banco de dados em partiular. Por "
"exemplo, você talvez queira **somente** rodar migrações em um banco de dados "
"particular."

msgid ""
"In order to do that you can check the database connection's alias inside a "
"``RunPython`` operation by looking at the ``schema_editor.connection.alias`` "
"attribute::"
msgstr ""
"Para fazer isso você pode verificar o alias da conexão com o banco de dados "
"dentro de uma operação ``RunPython`` olhando no attributo ``schema_editor."
"connection.alias``::"

msgid ""
"You can also provide hints that will be passed to the :meth:"
"`allow_migrate()` method of database routers as ``**hints``:"
msgstr ""
"Você pode fornecer dicas que serão passadas para o método :meth:"
"`allow_migrate()` do roteador de banco de dados como ``**hints``:"

msgid "``myapp/dbrouters.py``"
msgstr ""

msgid "Then, to leverage this in your migrations, do the following::"
msgstr "Então para aproveitar isso em suas migrações, faça o seguinte::"

msgid ""
"If your ``RunPython`` or ``RunSQL`` operation only affects one model, it's "
"good practice to pass ``model_name`` as a hint to make it as transparent as "
"possible to the router. This is especially important for reusable and third-"
"party apps."
msgstr ""
"Se você executar ``RunPython`` ou ``RunSQL`` as operações só irão afetar um "
"modelo, e é uma boa prática passar ``model_name`` como uma dica para que "
"fique tão transparente quanto possível para o roteador. Isso é especialmente "
"importante para reutilização e aplicações de terceiros."

msgid "Migrations that add unique fields"
msgstr "Migrações que adicionam campos \"unique\""

msgid ""
"Applying a \"plain\" migration that adds a unique non-nullable field to a "
"table with existing rows will raise an error because the value used to "
"populate existing rows is generated only once, thus breaking the unique "
"constraint."
msgstr ""
"Aplicar uma migração \"sem customizações\" que adicione um campo não nulo e "
"\"unique\" a uma table com registros existentes irá emitir um erro porque o "
"valor usado para popular os registros existente é gerado somente uma vez, "
"então quebrando a regra de \"unique\"."

msgid ""
"Therefore, the following steps should be taken. In this example, we'll add a "
"non-nullable :class:`~django.db.models.UUIDField` with a default value. "
"Modify the respective field according to your needs."
msgstr ""
"Portanto, os seguintes passos devem ser seguidos. Neste exemplo, nós iremos "
"adicionar um :class:`~django.db.models.UUIDField` não-nulo com um valor "
"padrão. Modifique o campo respectivo de acordo com suas necessidades."

msgid ""
"Add the field on your model with ``default=uuid.uuid4`` and ``unique=True`` "
"arguments (choose an appropriate default for the type of the field you're "
"adding)."
msgstr ""
"Adicione o campo no seu modelo com ``default=uuid.uuid4`` e argumentos "
"``unique=True`` (escolha um padrão apropriado para o tipo de campor que você "
"está adicionando)."

msgid ""
"Run the :djadmin:`makemigrations` command. This should generate a migration "
"with an ``AddField`` operation."
msgstr ""
"Execute o comando :djadmin:`makemigrations` . Isso deve gerar uma migração "
"com uma operação ``AddField``."

msgid ""
"Generate two empty migration files for the same app by running "
"``makemigrations myapp --empty`` twice. We've renamed the migration files to "
"give them meaningful names in the examples below."
msgstr ""
"Gera dois arquivos de migrações vazios para a mesma aplicação rodando "
"``makemigrations myapp --empty`` duas vezes. Renomeamos os arquivos de "
"migração para dara eles nomes significativos nos exemplos abaixo"

msgid ""
"Copy the ``AddField`` operation from the auto-generated migration (the first "
"of the three new files) to the last migration, change ``AddField`` to "
"``AlterField``, and add imports of ``uuid`` and ``models``. For example:"
msgstr ""
"Copie a operação ``AddField`` da migração gerada automatcamente (a primeira "
"dos três arquivos novos) para a última migração, troque ``AddField`` para "
"``AlterField``, e adicione as importações de ``uuid`` e ``models```. Por "
"exemplo:"

msgid "``0006_remove_uuid_null.py``"
msgstr ""

msgid ""
"Edit the first migration file. The generated migration class should look "
"similar to this:"
msgstr ""
"Edite o primeiro arquivo da migração. A classe de migração gerada deve se "
"parecer com isso:"

msgid "``0004_add_uuid_field.py``"
msgstr ""

msgid ""
"Change ``unique=True`` to ``null=True`` -- this will create the intermediary "
"null field and defer creating the unique constraint until we've populated "
"unique values on all the rows."
msgstr ""
"Mude ``unique=True`` para ``null=True`` -- isso irá criar o campo nullo "
"imtermediário e adiar a criação da restrição \"unique\" até que tenhamos "
"populado os valores únicos em todas os registros."

msgid ""
"In the first empty migration file, add a :class:`~django.db.migrations."
"operations.RunPython` or :class:`~django.db.migrations.operations.RunSQL` "
"operation to generate a unique value (UUID in the example) for each existing "
"row. Also add an import of ``uuid``. For example:"
msgstr ""
"No primeiro arquivo de migração vazio, adicione a operação :class:`~django."
"db.migrations.operations.RunPython` ou a :class:`~django.db.migrations."
"operations.RunSQL`  para gerar um valor único (UUID por exemplo) para cada "
"linha existente.  Também adicione uma importação de ``uuid``. Por exemplo:"

msgid "``0005_populate_uuid_values.py``"
msgstr ""

msgid ""
"Now you can apply the migrations as usual with the :djadmin:`migrate` "
"command."
msgstr ""
"Agora você pode aplicar as migrações como de costume com o comando :djadmin:"
"`migrate`."

msgid ""
"Note there is a race condition if you allow objects to be created while this "
"migration is running. Objects created after the ``AddField`` and before "
"``RunPython`` will have their original ``uuid``’s overwritten."
msgstr ""
"Note que há uma condição de concorrência se você deixar com que objetos "
"sejam criados enquanto essa migração está rodando. Objetos criados depois do "
"``AddField``e antes do ``RunPython`` terão seus ``uuid``'s sobrescritos."

msgid "Non-atomic migrations"
msgstr "Migrações não atômicas"

msgid ""
"On databases that support DDL transactions (SQLite and PostgreSQL), "
"migrations will run inside a transaction by default. For use cases such as "
"performing data migrations on large tables, you may want to prevent a "
"migration from running in a transaction by setting the ``atomic`` attribute "
"to ``False``::"
msgstr ""
"Em banco de dados que suportam transações DDL (SQLite e PostgreSQL), as "
"migrações são executadas por padrão dentro de uma transação. Em casos como "
"migrações de dados em grandes tabelas, você talvez queira evitar que uma "
"migração rode em uma transação definindo o atributo ``atomic`` como "
"``False``::"

msgid ""
"Within such a migration, all operations are run without a transaction. It's "
"possible to execute parts of the migration inside a transaction using :func:"
"`~django.db.transaction.atomic()` or by passing ``atomic=True`` to "
"``RunPython``."
msgstr ""
"Dentro de uma migração como esta, todas as operações rodam sem uma "
"transação. É possível executar partes da migração dentro de uma transação "
"usando :func:`~django.db.transaction.atomic()` ou passando ``atomic=True`` "
"para ``RunPython``."

msgid ""
"Here's an example of a non-atomic data migration that updates a large table "
"in smaller batches::"
msgstr ""
"Aqui um exemplo de uma migração de dados não atômica que atualiza uma grande "
"tabela em pequenas partes."

msgid ""
"The ``atomic`` attribute doesn't have an effect on databases that don't "
"support DDL transactions (e.g. MySQL, Oracle). (MySQL's `atomic DDL "
"statement support <https://dev.mysql.com/doc/refman/en/atomic-ddl.html>`_ "
"refers to individual statements rather than multiple statements wrapped in a "
"transaction that can be rolled back.)"
msgstr ""
"O atributo ``atomic`` não tem nenhum efeito em bancos de dados que não "
"suportam transações DDL (ex. MySQL, Oracle). (`O suporte para transações DDL "
"atômicas <https://dev.mysql.com/doc/refman/en/atomic-ddl.html>`_  do MySQL  "
"refere-se a instruções individuais, em vez de várias instruções envolvidas "
"em uma transação que pode ser revertida.)"

msgid "Controlling the order of migrations"
msgstr "Controlando a ordem das migrações"

msgid ""
"Django determines the order in which migrations should be applied not by the "
"filename of each migration, but by building a graph using two properties on "
"the ``Migration`` class: ``dependencies`` and ``run_before``."
msgstr ""
"O django determina a ordem em que as migrações devem ser aplicadas não pelo "
"nome do arquivo de cada migração, mas através da construção de um gráfico "
"usando duas propriedade na classe ``Migration``: ``dependencies`` e "
"``run_before``."

msgid ""
"If you've used the :djadmin:`makemigrations` command you've probably already "
"seen ``dependencies`` in action because auto-created migrations have this "
"defined as part of their creation process."
msgstr ""
"Se você estiver usando o comando :djadmin:`makemigration` você provavelmente "
"já viu ``dependencies`` em ação por conta das migrações auto-criadas "
"possuirem esta definição como parte do processo de criação."

msgid "The ``dependencies`` property is declared like this::"
msgstr "A propridade ``dependencies`` está declarada como isto::"

msgid ""
"Usually this will be enough, but from time to time you may need to ensure "
"that your migration runs *before* other migrations. This is useful, for "
"example, to make third-party apps' migrations run *after* your :setting:"
"`AUTH_USER_MODEL` replacement."
msgstr ""
"Normalmente isso será o bastante, mas de tempos em tempos você poderá "
"precisar se assegurar de que sua migração execute *antes*  de outras "
"migrações. Isso é útil, por exemplo, para fazer migrações de aplicações de "
"terceiros executem *depois* de substituir seu :setting:`AUTH_USER_MODEL`."

msgid ""
"To achieve this, place all migrations that should depend on yours in the "
"``run_before`` attribute on your ``Migration`` class::"
msgstr ""
"Para conseguir isso, coloque todas as migrações que devem depender das suas "
"no atributo  ``run_before`` na sua classe ``Migration``::"

msgid ""
"Prefer using ``dependencies`` over ``run_before`` when possible. You should "
"only use ``run_before`` if it is undesirable or impractical to specify "
"``dependencies`` in the migration which you want to run after the one you "
"are writing."
msgstr ""
"Prefira usar ``dependencies`` ao ``run_before`` quando possível. Você deve "
"somente usar o ``run_before`` se não é desejável ou impraticável especificar "
"``dependencies`` na migração qual você quer rodar depois da que está "
"escrevendo."

msgid "Migrating data between third-party apps"
msgstr "Migrando dados entre aplicativos de terceiros"

msgid ""
"You can use a data migration to move data from one third-party application "
"to another."
msgstr ""
"Pode-se usar migração de dados para mover dados de um aplicativo de "
"terceiros até outro aplicativo."

msgid ""
"If you plan to remove the old app later, you'll need to set the "
"``dependencies`` property based on whether or not the old app is installed. "
"Otherwise, you'll have missing dependencies once you uninstall the old app. "
"Similarly, you'll need to catch :exc:`LookupError` in the ``apps."
"get_model()`` call that retrieves models from the old app. This approach "
"allows you to deploy your project anywhere without first installing and then "
"uninstalling the old app."
msgstr ""
"Se você planeja remover o aplicativo antigo depois, você vai precisar "
"definir propriedades de ``dependencies`` baseadas em se o aplicativo está ou "
"não instalado. Caso contrário, você terá dependências faltando uma vez que o "
"aplicativo antigo seja desinstalado. De forma similar, você precisa prestar "
"atenção no :exc:`LookupError` na função ``apps.get_model()`` que retorna "
"modelos do aplicativo antigo. Esta abordagem lhe permite implementar o seu "
"projeto em qualquer lugar sem precisar instalar primeiro e depois "
"desinstalar o aplicativo antigo."

msgid "Here's a sample migration:"
msgstr "Este é um exemplo de migração:"

msgid "``myapp/migrations/0124_move_old_app_to_new_app.py``"
msgstr "\"myapp/migrations/0124_move_old_app_to_new_app.py\""

msgid ""
"Also consider what you want to happen when the migration is unapplied. You "
"could either do nothing (as in the example above) or remove some or all of "
"the data from the new application. Adjust the second argument of the :mod:"
"`~django.db.migrations.operations.RunPython` operation accordingly."
msgstr ""
"Considere também o que você quer que aconteça quando uma migração não for "
"aplicada. Você pode não fazer nada (como no exemplo acima) ou remover alguns "
"ou todos os dados da nova aplicação. Ajuste o segundo argumento da operação :"
"mod:`~django.db.migrations.operations.RunPython` de acordo."

msgid "Changing a ``ManyToManyField`` to use a ``through`` model"
msgstr ""

msgid ""
"If you change a :class:`~django.db.models.ManyToManyField` to use a "
"``through`` model, the default migration will delete the existing table and "
"create a new one, losing the existing relations. To avoid this, you can use :"
"class:`.SeparateDatabaseAndState` to rename the existing table to the new "
"table name while telling the migration autodetector that the new model has "
"been created. You can check the existing table name through :djadmin:"
"`sqlmigrate` or :djadmin:`dbshell`. You can check the new table name with "
"the through model's ``_meta.db_table`` property. Your new ``through`` model "
"should use the same names for the ``ForeignKey``\\s as Django did. Also if "
"it needs any extra fields, they should be added in operations after :class:`."
"SeparateDatabaseAndState`."
msgstr ""

msgid ""
"For example, if we had a ``Book`` model with a ``ManyToManyField`` linking "
"to ``Author``, we could add a through model ``AuthorBook`` with a new field "
"``is_primary``, like so::"
msgstr ""

msgid "Changing an unmanaged model to managed"
msgstr "Mudando um modelo não gerenciável para gerenciável"

msgid ""
"If you want to change an unmanaged model (:attr:`managed=False <django.db."
"models.Options.managed>`) to managed, you must remove ``managed=False`` and "
"generate a migration before making other schema-related changes to the "
"model, since schema changes that appear in the migration that contains the "
"operation to change ``Meta.managed`` may not be applied."
msgstr ""
"Se quiser alterar um modelo não gerenciado (:attr:`managed=False <django.db."
"models.Options.managed>`) para gerenciado, você deve remover "
"``managed=False`` e gerar uma migração antes de fazer outras mudanças no "
"modelo relacionadas ao esquema, uma vez que alterações que aparecem na "
"migração que contém a operação para alterar o ``Meta.managed`` podem não ser "
"aplicadas."
