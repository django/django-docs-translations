# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# andrewsmedina <andrewsmedina@gmail.com>, 2016
# Augusto Rocha Nascimento <augusto@khoder.com.br>, 2016
# Carlos E C Leite <caduado@gmail.com>, 2016
# Carlos E C Leite <caduado@gmail.com>, 2014,2016
# hoisel <danielhoisel@gmail.com>, 2014
# Eduardo Henrique da S. Freitas <eduardohitek@gmail.com>, 2015
# Fernandes Macedo <masedos@gmail.com>, 2016
# Guilherme Batista Ferreira <guilherme@uft.edu.br>, 2014
# Hugo Cosme <hugutux@gmail.com>, 2015
# Kaio Cesar <tecnico.kaio@gmail.com>, 2015
# Leonam Silva <leohenryster@gmail.com>, 2016
# Marcelo Moro Brondani <mbrondani@inf.ufsm.br>, 2016
# Marco Rougeth <marco@rougeth.com>, 2016
# Sergio Garcia <sergio@ginx.com.br>, 2015
# Sergio Oliveira <seocam@seocam.com>, 2014
# Tarsis Azevedo <tarsis.azevedo@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-03-05 19:12-0600\n"
"PO-Revision-Date: 2016-06-30 22:14+0000\n"
"Last-Translator: Carlos E C Leite <caduado@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/django/django-docs/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:3
msgid "Authentication using ``REMOTE_USER``"
msgstr "Autenticação usando ``REMOTE_USER``"

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:5
msgid ""
"This document describes how to make use of external authentication sources "
"(where the Web server sets the ``REMOTE_USER`` environment variable) in your"
" Django applications.  This type of authentication solution is typically "
"seen on intranet sites, with single sign-on solutions such as IIS and "
"Integrated Windows Authentication or Apache and `mod_authnz_ldap`_, `CAS`_, "
"`Cosign`_, `WebAuth`_, `mod_auth_sspi`_, etc."
msgstr "Este documento descreve como usar fontes externas de autenticação (quando o servidor define a variável de ambiente ``REMOTE_USER``) em suas aplicações Django. Este tipo de solução de autenticação é geralmente usado em sites de intranet, com soluções single sign-on como o IIS e autenticação Integrada do Windows ou Apache e `mod_authnz_ldap`_, `CAS`_, `Cosign`_, `WebAuth`_, `mod_auth_sspi`_, etc."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:18
msgid ""
"When the Web server takes care of authentication it typically sets the "
"``REMOTE_USER`` environment variable for use in the underlying application."
"  In Django, ``REMOTE_USER`` is made available in the :attr:`request.META "
"<django.http.HttpRequest.META>` attribute.  Django can be configured to make"
" use of the ``REMOTE_USER`` value using the ``RemoteUserMiddleware`` or "
"``PersistentRemoteUserMiddleware``, and "
":class:`~django.contrib.auth.backends.RemoteUserBackend` classes found in "
":mod:`django.contrib.auth`."
msgstr "Quando o servidor Web se encarrega da autenticação ele normalmente define a variável de ambiente ``REMOTE_USER`` para uso na aplicação que está sendo executada. No Django, ``REMOTE_USER`` é disponibilizado no atributo :attr:`request.META <django.http.HttpRequest.META>`. O Django pode ser configurado para fazer uso do  ``REMOTE_USER`` usando as classes :class:`django.contrib.auth.middleware.RemoteUserMiddleware` e :class:`~django.contrib.auth.backends.RemoteUserBackend` encontrados em:mod:`django.contrib.auth`."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:28
msgid "Configuration"
msgstr "Configuração"

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:30
msgid ""
"First, you must add the "
":class:`django.contrib.auth.middleware.RemoteUserMiddleware` to the "
":setting:`MIDDLEWARE_CLASSES` setting **after** the "
":class:`django.contrib.auth.middleware.AuthenticationMiddleware`::"
msgstr "Primeiro, você deve adicionar :class:`django.contrib.auth.middleware.RemoteUserMiddleware` ao  :setting:`MIDDLEWARE_CLASSES` definindo **depois** o :class:`django.contrib.auth.middleware.AuthenticationMiddleware`::"

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:42
msgid ""
"Next, you must replace the "
":class:`~django.contrib.auth.backends.ModelBackend` with "
":class:`~django.contrib.auth.backends.RemoteUserBackend` in the "
":setting:`AUTHENTICATION_BACKENDS` setting::"
msgstr "Depois você deve substituir a :class:`~django.contrib.auth.backends.ModelBackend` por :class:`~django.contrib.auth.backends.RemoteUserBackend` na configuração :setting:`AUTHENTICATION_BACKENDS`::"

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:50
msgid ""
"With this setup, ``RemoteUserMiddleware`` will detect the username in "
"``request.META['REMOTE_USER']`` and will authenticate and auto-login that "
"user using the :class:`~django.contrib.auth.backends.RemoteUserBackend`."
msgstr "Com esta configuração, o `:class:`~django.contrib.auth.middleware.RemoteUserMiddleware` irá detectar o __username__  em ``request.META['REMOTE_USER']`` e irá autenticar e automaticamente logar aquele usuário usando o :class:`~django.contrib.auth.backends.RemoteUserBackend`."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:54
msgid ""
"Be aware that this particular setup disables authentication with the default"
" ``ModelBackend``. This means that if the ``REMOTE_USER`` value is not set "
"then the user is unable to log in, even using Django's admin interface. "
"Adding ``'django.contrib.auth.backends.ModelBackend'`` to the "
"``AUTHENTICATION_BACKENDS`` list will use ``ModelBackend`` as a fallback if "
"``REMOTE_USER`` is absent, which will solve these issues."
msgstr "Esteja ciente de que essa definição em particular desabilita a autenticação com o padrão ``ModelBackend``. Isso significa que se o valor de ``REMOTE_USER`` não estiver definido o usuário não conseguirá logar-se, mesmo utilizando a inteface do Django admin. Adicionando ``django.contrib.auth.backends.ModelBackend`` à lista ``AUTHENTICATION_BACKENDS`` ele será utilizado como um substituto se \"REMOTE_USER\" estiver ausente, e esse problema não acontecerá."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:61
msgid ""
"Django's user management, such as the views in ``contrib.admin`` and the "
":djadmin:`createsuperuser` management command, doesn't integrate with remote"
" users. These interfaces work with users stored in the database regardless "
"of ``AUTHENTICATION_BACKENDS``."
msgstr "O gerenciamento de usuários do Django, bem como as views em ``contrib.admin``, e o comando de gerenciamento :djadmin:`createsuperuser`, não fazem integração com usuários remotos. Esta interface trabalha com usuários armazenados no banco de dados independente do ``AUTHENTICATION_BACKENDS``."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:67
msgid ""
"Since the ``RemoteUserBackend`` inherits from ``ModelBackend``, you will "
"still have all of the same permissions checking that is implemented in "
"``ModelBackend``."
msgstr "Um vez que ``RemoteUserBackend`` herda de ``ModelBackend``, você ainda terá todos as mesmas permissões de verificação que estão implementadas em ``ModelBackend``."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:71
msgid ""
"If your authentication mechanism uses a custom HTTP header and not "
"``REMOTE_USER``, you can subclass ``RemoteUserMiddleware`` and set the "
"``header`` attribute to the desired ``request.META`` key.  For example::"
msgstr "Se o seu mecanismo de autenticação utilizar um cabeçalho HTTP custumizado e não o ``REMOTE_USER`, você pode utilizar a subclass ``RemoteUserMiddleware`` e definir o atributo ``header`` para atribuir a chave ``request.META``. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:82
msgid ""
"Be very careful if using a ``RemoteUserMiddleware`` subclass with a custom "
"HTTP header. You must be sure that your front-end web server always sets or "
"strips that header based on the appropriate authentication checks, never "
"permitting an end-user to submit a fake (or \"spoofed\") header value. Since"
" the HTTP headers ``X-Auth-User`` and ``X-Auth_User`` (for example) both "
"normalize to the ``HTTP_X_AUTH_USER`` key in ``request.META``, you must also"
" check that your web server doesn't allow a spoofed header using underscores"
" in place of dashes."
msgstr "Tenha muito cuidado se usar a subclasse ``RemoteUserMiddleware`` com um cabeçalho HTTP customizado. Tenha certeza que o servidor de front-end sempre defina ou retire  o cabeçalho baseado nos checks de autenticação apropriados, nunca permitindo que um usuário submeta um falso (ou falsificado) valor no cabeçalho. Já que os cabeçalhos HTTP ``X-Auth-User`` e o ``X-Auth_User`` (por exemplo) são ambos normalizados para a chave ``HTTP_X_AUTH_USER`` no ``request.META``, tem que ser verificado que o seu servidor web não aceita um cabeçalho falsificado usando \"underscores\" no lugar de traços."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:91
msgid ""
"This warning doesn't apply to ``RemoteUserMiddleware`` in its default "
"configuration with ``header = 'REMOTE_USER'``, since a key that doesn't "
"start with ``HTTP_`` in ``request.META`` can only be set by your WSGI "
"server, not directly from an HTTP request header."
msgstr "Este alerta não se aplica ao ``RemoteUserMiddleware`` na sua configuração default ``header = 'REMOTE_USER'``, já que uma chave que não inicie com ``HTTP_`` em ``request.META``  só pode ser setada pelo servidor WSGI, e não diretamente do cabeçalho da requisição HTTP"

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:96
msgid ""
"If you need more control, you can create your own authentication backend "
"that inherits from :class:`~django.contrib.auth.backends.RemoteUserBackend` "
"and override one or more of its attributes and methods."
msgstr "Se você precisa de mais controle, é possível criar seu próprio \"backend\" de autenticação que herda de :class:`~django.contrib.auth.backends.RemoteUserBackend` e sobrescreve um ou mais de seus  atributos e métodos."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:103
msgid "Using ``REMOTE_USER`` on login pages only"
msgstr "Usando ``REMOTE_USER`` apenas nas páginas de login."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:107
msgid ""
"The ``RemoteUserMiddleware`` authentication middleware assumes that the HTTP"
" request header ``REMOTE_USER`` is present with all authenticated requests. "
"That might be expected and practical when Basic HTTP Auth with ``htpasswd`` "
"or other simple mechanisms are used, but with Negotiate (GSSAPI/Kerberos) or"
" other resource intensive authentication methods, the authentication in the "
"front-end HTTP server is usually only set up for one or a few login URLs, "
"and after successful authentication, the application is supposed to maintain"
" the authenticated session itself."
msgstr "O middleware de autenticação ``RemoteUserMiddleware`` assume que o cabeçalho ``REMOTE_USER`` da requisição HTTP está presente em todas as requisições autenticadas. Isso é   esperado e até prático quando usado em uma autenticação HTTP básica com ``htpasswd`` ou um outro mecanismo simples, más com uma requisição Negotiate (GSSAPI/Kerberos)  ou  outro método de autenticação de fontes intensivas, a autenticação no servidor HTTP de front-end é comumente configurada para uma ou algumas poucas URLS de login, e depois de uma autenticação bem sucedida, é esperado que a aplicação mantenha a sessão de autenticação por conta própria."

#: ../../../../sources/1.9/docs/howto/auth-remote-user.txt:116
msgid ""
":class:`~django.contrib.auth.middleware.PersistentRemoteUserMiddleware` "
"provides support for this use case. It will maintain the authenticated "
"session until explicit logout by the user. The class can be used as a drop-"
"in replacement of "
":class:`~django.contrib.auth.middleware.RemoteUserMiddleware` in the "
"documentation above."
msgstr ":class:`~django.contrib.auth.middleware.PersistentRemoteUserMiddleware` provê suporte para este caso de uso. Ele manterá a sessão de autenticação até o logout explicito do usuário. A classe pode ser usada como um substituto constante para :class:`~django.contrib.auth.middleware.RemoteUserMiddleware` na documentação acima."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:3
msgid "Writing a custom storage system"
msgstr "Escrevendo um sistema de armazenamento custumizado"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:7
msgid ""
"If you need to provide custom file storage -- a common example is storing "
"files on some remote system -- you can do so by defining a custom storage "
"class. You'll need to follow these steps:"
msgstr "Se você precisa de um armazenador de arquivos customizados -- um exemplo comum é armazenar arquivos em algum sistema remoto -- você pode faze-lo definido uma classe de armazenamento customizada. Você precisará seguir estes passos:"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:11
msgid ""
"Your custom storage system must be a subclass of "
"``django.core.files.storage.Storage``::"
msgstr "O seu Sistema de armazenamento customizado deve ser uma subclasse de ``django.core.files.storage.Storage``::"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:19
msgid ""
"Django must be able to instantiate your storage system without any "
"arguments. This means that any settings should be taken from "
"``django.conf.settings``::"
msgstr "Django deve ser capaz de instanciar o seu sistema de armazenamento sem nenhum argumento. Isso significa que quaisquer definições devem ser tomada a partir de ``django.conf.settings``::"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:31
msgid ""
"Your storage class must implement the :meth:`_open()` and :meth:`_save()` "
"methods, along with any other methods appropriate to your storage class. See"
" below for more on these methods."
msgstr "A classe de armazenamento deve implementar  os métodos :meth:`_open()` e :meth:`_save()`, além de qualquer outro método apropriado a sua classe. Veja abaixo mais sobre estes métodos."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:35
msgid ""
"In addition, if your class provides local file storage, it must override the"
" ``path()`` method."
msgstr "E mais, se sua classe permite armazenamento local de arquivo, esta deve sobrescrever o método ``path()``."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:38
msgid ""
"Your storage class must be :ref:`deconstructible <custom-deconstruct-"
"method>` so it can be serialized when it's used on a field in a migration. "
"As long as your field has arguments that are themselves :ref:`serializable "
"<migration-serializing>`, you can use the "
"``django.utils.deconstruct.deconstructible`` class decorator for this "
"(that's what Django uses on FileSystemStorage)."
msgstr "Sua classe de armazenamento deve ser  :ref:`\"desconstruível\" <custom-deconstruct-method>` para que possa ser \"serializado\" quando usado em um campo na \"migration\". Uma vez que seus campos têm argumentos que são eles mesmos :ref:`serializáveis <migration-serializing>`, é possível usar o \"decorator\"de classe ``django.utils.deconstruct.deconstructible`` para isso (que é usado pelo Django no FileSystemStorage)."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:45
msgid ""
"By default, the following methods raise `NotImplementedError` and will "
"typically have to be overridden:"
msgstr "Por padrão, os seguintes métodos geram `NotImplementedError`  e normalmente tem que ser sobrescritos."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:48
msgid ":meth:`Storage.delete`"
msgstr ":meth:`Storage.delete`"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:49
msgid ":meth:`Storage.exists`"
msgstr ":meth:`Storage.exists`"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:50
msgid ":meth:`Storage.listdir`"
msgstr ":meth:`Storage.listdir`"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:51
msgid ":meth:`Storage.size`"
msgstr ":meth:`Storage.size`"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:52
msgid ":meth:`Storage.url`"
msgstr " :meth:`Storage.url` "

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:54
msgid ""
"Note however that not all these methods are required and may be deliberately"
" omitted. As it happens, it is possible to leave each method unimplemented "
"and still have a working Storage."
msgstr "Note porém que nem todos estes métodos são requeridos e talvez deliberadamente omitidos. Caso isso ocorra, é possível deixar cada método não implementado e ainda ter um armazenamento que funcione."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:58
msgid ""
"By way of example, if listing the contents of certain storage backends turns"
" out to be expensive, you might decide not to implement `Storage.listdir`."
msgstr "A título de exemplo, se listar o conteúdo de certas infraestruturas de armazenamento acaba por ser caro, você pode decidir não aplicar o `Storage.listdir`."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:61
msgid ""
"Another example would be a backend that only handles writing to files. In "
"this case, you would not need to implement any of the above methods."
msgstr "Outro exemplo seria um backend que só lida com a escrita de arquivos. Neste caso, não seria necessário implementar qualquer um dos métodos acima."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:64
msgid ""
"Ultimately, which of these methods are implemented is up to you. Leaving "
"some methods unimplemented will result in a partial (possibly broken) "
"interface."
msgstr "Em última análise, quais destes métodos são implementados depende de você. Deixando de implementar alguns métodos irá resultar em uma interface parcial (possivelmente quebrada)."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:67
msgid ""
"You'll also usually want to use hooks specifically designed for custom "
"storage objects. These are:"
msgstr "Você também pode querer usar hooks feitos especificamente para objetos de storage personalizados. Estes são os seguintes:"

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:72
msgid "**Required**."
msgstr "**Obrigatório**."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:74
msgid ""
"Called by ``Storage.open()``, this is the actual mechanism the storage class"
" uses to open the file. This must return a ``File`` object, though in most "
"cases, you'll want to return some subclass here that implements logic "
"specific to the backend storage system."
msgstr "Chamado por `` Storage.open () ``, este é o mecanismo real da classe de armazenamento utiliza para abrir o arquivo. Isso deve retornar um objeto `` File``, embora na maioria dos casos, você vai querer retornar alguma subclasse aqui que implementa a lógica específica para o back-end do sistema de armazenamento."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:81
msgid ""
"Called by ``Storage.save()``. The ``name`` will already have gone through "
"``get_valid_name()`` and ``get_available_name()``, and the ``content`` will "
"be a ``File`` object itself."
msgstr "Chamado por `` Storage.save () ``. O `` name`` já terá passado por `` get_valid_name ()`` e ``get_available_name ()``, e o` `content`` será ele mesmo um objeto ``File``."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:85
msgid ""
"Should return the actual name of name of the file saved (usually the "
"``name`` passed in, but if the storage needs to change the file name return "
"the new name instead)."
msgstr "Deve retornar o nome real do nome do arquivo salvo (geralmente o ``name`` passado, mas se o armazenamento precisa mudar o nome do arquivo retorna então retorna o novo nome)."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:91
msgid ""
"Returns a filename suitable for use with the underlying storage system. The "
"``name`` argument passed to this method is either the original filename sent"
" to the server or, if ``upload_to`` is a callable, the filename returned by "
"that method after any path information is removed. Override this to "
"customize how non-standard characters are converted to safe filenames."
msgstr "Retorna um nome de arquivo adequado para uso com o sistema de armazenamento subjacente. O argumento ``name`` passado para esse método é o nome do arquivo original enviado para o servidor ou, se `` upload_to`` é um \"callable\" (método), o nome do arquivo retornado por esse método depois de qualquer informação de caminho é removido. Substitua isso para customizar como caracteres fora de padrão são convertidos para nomes de arquivos seguros."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:99
msgid ""
"In older versions, this method was not called when ``upload_to`` was a "
"callable."
msgstr "Em versões antigas, este método não foi chamado quando `` upload_to`` era executado."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:102
msgid ""
"The code provided on ``Storage`` retains only alpha-numeric characters, "
"periods and underscores from the original filename, removing everything "
"else."
msgstr "O código fornecido em `` Storage`` guarda apenas os caracteres alfanuméricos, períodos e \"underscore\" do nome do arquivo original, removendo qualquer outra cosa."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:107
msgid ""
"Returns a filename that is available in the storage mechanism, possibly "
"taking the provided filename into account. The ``name`` argument passed to "
"this method will have already cleaned to a filename valid for the storage "
"system, according to the ``get_valid_name()`` method described above."
msgstr "Retorna um nome de arquivo que está disponível no mecanismo de armazenamento, possivelmente levando em conta o nome do arquivo fornecido. O argumento ``name`` passado para este método já terá sido limpo para um nome de arquivo válido para o sistema de armazenamento, de acordo com o `` get_valid_name () `` método descrito acima."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:112
msgid ""
"The length of the filename will not exceed ``max_length``, if provided. If a"
" free unique filename cannot be found, a :exc:`SuspiciousFileOperation "
"<django.core.exceptions.SuspiciousOperation>` exception is raised."
msgstr "O comprimento do nome do arquivo não será superior a `` max_length``, se informado. Se um nome de arquivo único não pode ser encontrado, a: exc: `SuspiciousFileOperation <django.core.exceptions.SuspiciousOperation> `Exceção é gerada."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:116
msgid ""
"If a file with ``name`` already exists, an underscore plus a random 7 "
"character alphanumeric string is appended to the filename before the "
"extension."
msgstr "Se um ``name`` de um arquivo já existe, um \"underscore\" mais uma seqüência alfanumérica 7 caracteres aleatórios é anexado ao nome do arquivo antes da extensão."

#: ../../../../sources/1.9/docs/howto/custom-file-storage.txt:121
msgid "The ``max_length`` argument was added."
msgstr "O argumento ``max_length`` foi adicionado."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:3
msgid "Custom Lookups"
msgstr "Pesquisas personalizadas"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:7
msgid ""
"Django offers a wide variety of :ref:`built-in lookups <field-lookups>` for "
"filtering (for example, ``exact`` and ``icontains``). This documentation "
"explains how to write custom lookups and how to alter the working of "
"existing lookups. For the API references of lookups, see the "
":doc:`/ref/models/lookups`."
msgstr "Django oferece uma grande variedade de: ref: `pesquisas embutidos <field-lookups> `Para filtragem (por exemplo,` `e` `exact`` icontains``). Esta documentação explica como escrever lookups personalizadas e como alterar o funcionamento de lookups existentes. Para as referências da API de lookups, consulte o: doc: `/ ref / models / lookups`."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:13
msgid "A simple lookup example"
msgstr "Um simples exemple de pesquisa"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:15
msgid ""
"Let's start with a simple custom lookup. We will write a custom lookup "
"``ne`` which works opposite to ``exact``. "
"``Author.objects.filter(name__ne='Jack')`` will translate to the SQL::"
msgstr "Vamos iniciar com uma simples pesquisa personalizada. Escreveremos uma simples pesquisa ``ne`` que funciona em frente ao ``exato``. ``Author.objects.filter(name__ne='Jack') traduzindo para SQL."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:21
msgid ""
"This SQL is backend independent, so we don't need to worry about different "
"databases."
msgstr "Este SQL é independente, por isso, não precisa se preocupar com os bancos de dados diferentes."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:24
msgid ""
"There are two steps to making this work. Firstly we need to implement the "
"lookup, then we need to tell Django about it. The implementation is quite "
"straightforward::"
msgstr "Há duas etapas para fazer este trabalho. Em primeiro lugar precisamos implementar a \"lookup\", então precisamos dizer ao Django sobre ele. A implementação é bastante simples ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:39
msgid ""
"To register the ``NotEqual`` lookup we will just need to call "
"``register_lookup`` on the field class we want the lookup to be available. "
"In this case, the lookup makes sense on all ``Field`` subclasses, so we "
"register it with ``Field`` directly::"
msgstr "Para registrar a lookup ``NotEqual`` precisamos somente chamar ``register_lookup`` no campo da classe que queremos que a lookup esteja disponível. Neste caso, a lookup faz sentido em todos os  ``Field`` da sub-classe, então registramos isso com `` Field`` diretamente ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:47
msgid "Lookup registration can also be done using a decorator pattern::"
msgstr "O registro da \"lookup\" também pode ser feito usando um pattern decorador ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:57
msgid "The ability to use the decorator pattern was added."
msgstr "foi adicionado a capacidade de usar o pattern decorator."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:59
msgid ""
"We can now use ``foo__ne`` for any field ``foo``. You will need to ensure "
"that this registration happens before you try to create any querysets using "
"it. You could place the implementation in a ``models.py`` file, or register "
"the lookup in the ``ready()`` method of an ``AppConfig``."
msgstr "Agora podemos usar `` foo__ne`` para qualquer campo `` foo``. Tenha certeza de registrar antes de tentar criar qualquer \"querysets\" que o use. É possível colocar a implementação no `` models.py``, ou registar a lookup no método ``ready()`` do `` AppConfig``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:64
msgid ""
"Taking a closer look at the implementation, the first required attribute is "
"``lookup_name``. This allows the ORM to understand how to interpret "
"``name__ne`` and use ``NotEqual`` to generate the SQL. By convention, these "
"names are always lowercase strings containing only letters, but the only "
"hard requirement is that it must not contain the string ``__``."
msgstr "Olhando mais perto da implementação, o primeiro atributo obrigatório é `` lookup_name``. Isso permite que o ORM entenda como interpretar `` name__ne`` e use `` NotEqual`` para gerar o SQL. Por convenção, estes nomes são sempre em strings caixa baixa contendo apenas letras, mas a única exigência é que não contenha a string `` __``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:70
msgid ""
"We then need to define the ``as_sql`` method. This takes a ``SQLCompiler`` "
"object, called ``compiler``,  and the active database connection. "
"``SQLCompiler`` objects are not documented, but the only thing we need to "
"know about them is that they have a ``compile()`` method which returns a "
"tuple containing a SQL string, and the parameters to be interpolated into "
"that string. In most cases, you don't need to use it directly and can pass "
"it on to ``process_lhs()`` and ``process_rhs()``."
msgstr "Precisamos então definir o método `as_sql``. Isso requer um objeto ``SQLCompiler``, chamado `` compiler``, e a conexão do banco de dados ativo. Objetos ``SQLCompiler`` não são documentados, mas a única coisa que precisamos saber sobre eles é que eles têm um método ``compile()`` que retorna uma tupla contendo uma string SQL, e os parâmetros a serem interpolados dentro da string. Na maioria dos casos, você não precisará usá-lo diretamente e pode passá-lo para ``process_lhs() `` e `` process_rhs()``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:78
msgid ""
"A ``Lookup`` works against two values, ``lhs`` and ``rhs``, standing for "
"left-hand side and right-hand side. The left-hand side is usually a field "
"reference, but it can be anything implementing the :ref:`query expression "
"API <query-expression>`. The right-hand is the value given by the user. In "
"the example ``Author.objects.filter(name__ne='Jack')``, the left-hand side "
"is a reference to the ``name`` field of the ``Author`` model, and ``'Jack'``"
" is the right-hand side."
msgstr "A ``Lookup`` trabalha em dois valores, e ``lhs`` e  ``rhs``, entendendo como left-hand side e right-hand side. O lado esquerdo é geralmente uma referência de campo, mas pode ser qualquer coisa que implemente :ref: `query expression API <query-expression>`. O lado direito é o valor dado pelo usuário. No exemplo ``Author.objects.filter (name__ne = 'Jack') ``, o lado esquerdo é uma referência para o campo ``name`` campo do modelo ``Author``, e `` 'Jack ' `` é o lado direito."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:86
msgid ""
"We call ``process_lhs`` and ``process_rhs`` to convert them into the values "
"we need for SQL using the ``compiler`` object described before. These "
"methods return tuples containing some SQL and the parameters to be "
"interpolated into that SQL, just as we need to return from our ``as_sql`` "
"method. In the above example, ``process_lhs`` returns "
"``('\"author\".\"name\"', [])`` and ``process_rhs`` returns ``('\"%s\"', "
"['Jack'])``. In this example there were no parameters for the left hand "
"side, but this would depend on the object we have, so we still need to "
"include them in the parameters we return."
msgstr "Nós chamamos e ``process_lhs`` e  ``process_rhs`` para convertê-los para os valores que precisamos para SQL usando o objeto ``compiler`` descrito antes. Esses métodos retornam tuplas contendo alguns SQL e os parâmetros a serem interpolados dentro deste SQL, assim como nós precisamos para retornar do nosso método ``as_sql``. No exemplo acima, ``process_lhs`` retorna ``( \"autor\". \"Nome\" ', []) `` e ``process_rhs`` retorna ``( \"% s\"', [ 'Jack' ])``. Neste exemplo não havia parâmetros para o lado esquerdo, mas isso depende do objeto que temos, portanto ainda precisamos incluí-los nos parâmetros que retornamos."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:95
msgid ""
"Finally we combine the parts into a SQL expression with ``<>``, and supply "
"all the parameters for the query. We then return a tuple containing the "
"generated SQL string and the parameters."
msgstr "Finalmente combinamos as peças em uma expressão SQL com ``<>``, e fornecemos todos os parâmetros para a consulta. Em seguida retornamos uma tupla contendo a string SQL gerada e os parâmetros."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:100
msgid "A simple transformer example"
msgstr "Um exemplo simples transformador"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:102
msgid ""
"The custom lookup above is great, but in some cases you may want to be able "
"to chain lookups together. For example, let's suppose we are building an "
"application where we want to make use of the ``abs()`` operator. We have an "
"``Experiment`` model which records a start value, end value, and the change "
"(start - end). We would like to find all experiments where the change was "
"equal to a certain amount (``Experiment.objects.filter(change__abs=27)``), "
"or where it did not exceed a certain amount "
"(``Experiment.objects.filter(change__abs__lt=27)``)."
msgstr "A lookup personalizado acima é boa, mas em alguns casos você queira ser capaz de lookups encadeadas. Por exemplo, vamos supor que estamos construindo uma aplicação onde queremos fazer uso do operador ``abs()``. Temos um modelo ``Experiment`` que registra um valor inicial, o valor final e a mudança (início - fim). Gostaríamos de encontrar todos os experimentos em que a alteração foi igual a uma certa quantidade ( ``Experiment.objects.filter (change__abs = 27)``), ou onde não exceda um certo montante ( ``Experiment.objects.filter (change__abs__lt = 27)``)."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:112
msgid ""
"This example is somewhat contrived, but it nicely demonstrates the range of "
"functionality which is possible in a database backend independent manner, "
"and without duplicating functionality already in Django."
msgstr "Este exemplo é um pouco artificial, mas demonstra muito bem a gama de funcionalidades que é possível de uma maneira independente em um backend de banco de dados., e sem duplicar funcionalidades já existentes no Django."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:116
msgid ""
"We will start by writing a ``AbsoluteValue`` transformer. This will use the "
"SQL function ``ABS()`` to transform the value before comparison::"
msgstr "Vamos começar por escrever um tradutor ``AbsoluteValue``. Isto irá usar a função SQL ``ABS ()`` para transformar o valor antes da comparação::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:125
msgid "Next, let's register it for ``IntegerField``::"
msgstr "Em seguida, vamos registrá-lo para `` IntegerField`` ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:130
msgid ""
"We can now run the queries we had before. "
"``Experiment.objects.filter(change__abs=27)`` will generate the following "
"SQL::"
msgstr "agora podemos executar as queries que tínhamos antes. ``Experiment.objects.filter (change__abs = 27) `` irá gerar o seguinte SQL ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:135
msgid ""
"By using ``Transform`` instead of ``Lookup`` it means we are able to chain "
"further lookups afterwards. So "
"``Experiment.objects.filter(change__abs__lt=27)`` will generate the "
"following SQL::"
msgstr "Ao usar `` Transform`` ao invés de ``Lookup`` isso significa que somos capazes de encadear lookups umas as outras. Então ``Experiment.objects.filter (change__abs__lt = 27)`` irá gerar o seguinte SQL ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:142
msgid ""
"Note that in case there is no other lookup specified, Django interprets "
"``change__abs=27`` as ``change__abs__exact=27``."
msgstr "Note-se que no caso não há nenhuma outra lookup especificada, o Django interpreta ``change__abs = 27`` como ``change__abs__exact = 27``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:145
msgid ""
"When looking for which lookups are allowable after the ``Transform`` has "
"been applied, Django uses the ``output_field`` attribute. We didn't need to "
"specify this here as it didn't change, but supposing we were applying "
"``AbsoluteValue`` to some field which represents a more complex type (for "
"example a point relative to an origin, or a complex number) then we may have"
" wanted to specify that the transform returns a ``FloatField`` type for "
"further lookups. This can be done by adding an ``output_field`` attribute to"
" the transform::"
msgstr "Quando olhamos par quais lookups são permitidas depois de ter aplicado o  ``Trnasform``, Django usa o atibuto `òutput_field``. Não é necessário especificar isso aqui, já que não muda, más supondo que fosse aplicado ``AbsoluteValue``para algum campo que represente um tipo mais complexo (por exemplo um ponto reativo a uma origem ou um número complexo) então talvez quereríamos especificar  que retornasse um tipo ``FloatField`` para próximas lookups. Isso pode ser feito adicionando um atributo `òutput_field``ao transform::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:163
msgid ""
"This ensures that further lookups like ``abs__lte`` behave as they would for"
" a ``FloatField``."
msgstr "Isso garante que novas pesquisas como ``abs__lte`` se comportem como fariam para um ``FloatField``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:167
msgid "Writing an efficient ``abs__lt`` lookup"
msgstr "Escrevendo uma lookup ``abs__lt`` eficiente"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:169
msgid ""
"When using the above written ``abs`` lookup, the SQL produced will not use "
"indexes efficiently in some cases. In particular, when we use "
"``change__abs__lt=27``, this is equivalent to ``change__gt=-27`` AND "
"``change__lt=27``. (For the ``lte`` case we could use the SQL ``BETWEEN``)."
msgstr "Quando usado a lookup ``abs`` escrita acima, o SQL gerado não irá usar índices  de maneira eficiente em alguns casos. Em particular, quando usado ``change__abs__lt=27``, é equivalente a ``change__gt=-27`` e ``change__lt=27``. (Para o caso ``lte`` podemos usar o SQL ``BETWEEN``)."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:174
msgid ""
"So we would like ``Experiment.objects.filter(change__abs__lt=27)`` to "
"generate the following SQL::"
msgstr "Então nós gostaríamos ``Experiment.objects.filter (change__abs__lt=27)`` para gerar o seguinte SQL::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:179
msgid "The implementation is::"
msgstr "A implementação é::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:194
msgid ""
"There are a couple of notable things going on. First, "
"``AbsoluteValueLessThan`` isn't calling ``process_lhs()``. Instead it skips "
"the transformation of the ``lhs`` done by ``AbsoluteValue`` and uses the "
"original ``lhs``. That is, we want to get ``\"experiments\".\"change\"`` not"
" ``ABS(\"experiments\".\"change\")``. Referring directly to ``self.lhs.lhs``"
" is safe as ``AbsoluteValueLessThan`` can be accessed only from the "
"``AbsoluteValue`` lookup, that is the ``lhs`` is always an instance of "
"``AbsoluteValue``."
msgstr "Há algumas coisas notáveis ​​acontecendo. Em primeiro lugar, ``AbsoluteValueLessThan`` não está chamando ``process_lhs ()``. Em vez disso ele ignora a transformação do ``lhs`` feito por ``AbsoluteValue`` e usa o ``lhs`` original. Ou seja, queremos pegar `` \"experiments\".\"change\" `` não ``ABS( \"experiments\". \"change\") ``. Referindo-se diretamente a ``self.lhs.lhs`` é tão seguro quanto ``AbsoluteValueLessThan``  pode ser acessado diretamente da lookup ``AbsoluteValue``, que é a ``lhs`` é sempre uma instância de ``AbsoluteValue``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:202
msgid ""
"Notice also that  as both sides are used multiple times in the query the "
"params need to contain ``lhs_params`` and ``rhs_params`` multiple times."
msgstr "Note também que como ambos os lados são usados ​​várias vezes na consulta os parâmetros precisam conter ``lhs_params`` e ``rhs_params`` várias vezes."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:205
msgid ""
"The final query does the inversion (``27`` to ``-27``) directly in the "
"database. The reason for doing this is that if the ``self.rhs`` is something"
" else than a plain integer value (for example an ``F()`` reference) we can't"
" do the transformations in Python."
msgstr "A consulta final faz a inversão ( ``27`` para `` -27``) diretamente no banco de dados. A razão para isso é que, se o `` self.rhs`` é algo mais do que um valor inteiro simples (por exemplo, uma referência ``F()`` ) que não podemos fazer as transformações em Python."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:211
msgid ""
"In fact, most lookups with ``__abs`` could be implemented as range queries "
"like this, and on most database backends it is likely to be more sensible to"
" do so as you can make use of the indexes. However with PostgreSQL you may "
"want to add an index on ``abs(change)`` which would allow these queries to "
"be very efficient."
msgstr "Na verdade, a maioria das lookups com ``__abs`` poderias ser implementadas como consultas de intervalos como esta, e na maioria dos backends de banco de dados, é provável que seja mais sensato fazê-lo já que podería fazer uso dos índices. No entanto, com PostgreSQL você pode querer adicionar um índice em na ``abs(change)`` o que permitiria que essas consultas serem muito eficientes."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:218
msgid "A bilateral transformer example"
msgstr "Um exemplo bilateral transformador"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:220
msgid ""
"The ``AbsoluteValue`` example we discussed previously is a transformation "
"which applies to the left-hand side of the lookup. There may be some cases "
"where you want the transformation to be applied to both the left-hand side "
"and the right-hand side. For instance, if you want to filter a queryset "
"based on the equality of the left and right-hand side insensitively to some "
"SQL function."
msgstr "O exemplo ``AbsoluteValue`` discutido anteriormente é uma transformação que se aplica para o lado esquerdo da lookup. Pode haver alguns casos onde você quer que a transformação seja aplicada tanto para o lado esquerdo quanto para o lado direito. Por exemplo, se você quiser filtrar um queryset com base em uma igualdade de lado esquerdo e direito inperseptível para alguma função SQL."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:226
msgid ""
"Let's examine the simple example of case-insensitive transformation here. "
"This transformation isn't very useful in practice as Django already comes "
"with a bunch of built-in case-insensitive lookups, but it will be a nice "
"demonstration of bilateral transformations in a database-agnostic way."
msgstr "Vamos examinar o exemplo simples de transformação case-insensitive aqui. Essa transformação não é muito útil na prática, como Django já vem com um monte de pesquisas de maiúsculas e minúsculas embutidos, mas será uma boa demonstração de transformações bilaterais de uma forma agnóstica ao banco de dados."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:231
msgid ""
"We define an ``UpperCase`` transformer which uses the SQL function "
"``UPPER()`` to transform the values before comparison. We define "
":attr:`bilateral = True <django.db.models.Transform.bilateral>` to indicate "
"that this transformation should apply to both ``lhs`` and ``rhs``::"
msgstr "Definimos um transformador ``UpperCase`` que usa a função SQL ``UPPER()`` para transformar os valores antes de comparação. Definimos :attr: `bilateral = True <django.db.models.Transform.bilateral>` para indicar que essa transformação deverá aplicar-se a ``lhs`` e ``rhs``::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:243
msgid "Next, let's register it::"
msgstr "Em seguida, registre ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:249
msgid ""
"Now, the queryset ``Author.objects.filter(name__upper=\"doe\")`` will "
"generate a case insensitive query like this::"
msgstr "Agora, o queryset ``Author.objects.filter(name__upper = \"doe\")`` irá gerar uma query case-insensitive como esta::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:255
msgid "Writing alternative implementations for existing lookups"
msgstr "Escrever implementações alternativas para pesquisas existentes"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:257
msgid ""
"Sometimes different database vendors require different SQL for the same "
"operation. For this example we will rewrite a custom implementation for "
"MySQL for the NotEqual operator. Instead of ``<>`` we will be using ``!=`` "
"operator. (Note that in reality almost all databases support both, including"
" all the official databases supported by Django)."
msgstr "Às vezes, diferentes fornecedores de banco de dados requerem diferentes SQL para a mesma operação. Para este exemplo, vamos reescrever uma implementação personalizada para o MySQL para o operador NotEqual. Em vez de ``<>`` usaremos o operador ``!=``. (Note que, na realidade, quase todos os bancos de dados suportam ambos, incluindo todas as bases de dados oficiais apoiados por Django)."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:263
msgid ""
"We can change the behavior on a specific backend by creating a subclass of "
"``NotEqual`` with a ``as_mysql`` method::"
msgstr "Nós podemos mudar o comportamento em um backend específico, criando uma subclasse de ``NotEqual`` com um método ``as_mysql`` ::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:275
msgid ""
"We can then register it with ``Field``. It takes the place of the original "
"``NotEqual`` class as it has the same ``lookup_name``."
msgstr "Podemos então registrá-lo com ``Field``. Ele toma o lugar da classe ``NotEqual`` original já que tem o mesmo ``lookup_name``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:278
msgid ""
"When compiling a query, Django first looks for ``as_%s % connection.vendor``"
" methods, and then falls back to ``as_sql``. The vendor names for the in-"
"built backends are ``sqlite``, ``postgresql``, ``oracle`` and ``mysql``."
msgstr "Ao compilar uma consulta, Django primeiro procura pelos métodos ``as_%s % connection.vendor``, e depois para ``as_sql``. Os nomes de fornecedores para os back-ends suportador são  ``sqlite``, ``postgresql``, ``oracle``  e ``mysql``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:283
msgid "How Django determines the lookups and transforms which are used"
msgstr "Como o Django determina as lookups e transformações que são usados"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:285
msgid ""
"In some cases you may wish to dynamically change which ``Transform`` or "
"``Lookup`` is returned based on the name passed in, rather than fixing it. "
"As an example, you could have a field which stores coordinates or an "
"arbitrary dimension, and wish to allow a syntax like "
"``.filter(coords__x7=4)`` to return the objects where the 7th coordinate has"
" value 4. In order to do this, you would override ``get_lookup`` with "
"something like::"
msgstr "Em alguns casos, talvez queira mudar dinamicamente qual ``Transform`` ou ``Lookup`` é devolvido com base no nome passado, em vez de corrigi-lo. Como exemplo, é possível ter um campo que armazena coordenadas ou uma dimensão arbitrária, e deseja permitir que uma sintaxe como ``.filter (coords__x7=4)`` para retornar os objetos onde a 7ª coordenada tem valor 4. Para fazer isso, substitua ``get_lookup`` com algo como::"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:303
msgid ""
"You would then define ``get_coordinate_lookup`` appropriately to return a "
"``Lookup`` subclass which handles the relevant value of ``dimension``."
msgstr "Defina então o `` get_coordinate_lookup`` adequadamente para retornar uma subclasse ``Lookup`` que lida com o valor relevante da ``dimension``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:306
msgid ""
"There is a similarly named method called ``get_transform()``. "
"``get_lookup()`` should always return a ``Lookup`` subclass, and "
"``get_transform()`` a ``Transform`` subclass. It is important to remember "
"that ``Transform`` objects can be further filtered on, and ``Lookup`` "
"objects cannot."
msgstr "Existe um método de nome semelhante chamado ``get_transform() ``. `` Get_lookup () `` deve sempre retornar uma subclasse de ``Lookup``, e ``get_transform()`` uma subclasse de  ``Transform``. É importante lembrar que objetos do tipo ``Transform`` podem ainda ser filtrados, e objetos do tipo ``Lookup`` não podem."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:311
msgid ""
"When filtering, if there is only one lookup name remaining to be resolved, "
"we will look for a ``Lookup``. If there are multiple names, it will look for"
" a ``Transform``. In the situation where there is only one name and a "
"``Lookup`` is not found, we look for a ``Transform`` and then the ``exact`` "
"lookup on that ``Transform``. All call sequences always end with a "
"``Lookup``. To clarify:"
msgstr "Ao filtrar, se houver apenas um nome lookup remanescente a ser resolvido, olhamos para um ``Lookup``. Se houver vários nomes, ele irá procurar por um ``Transform``. Em uma situação onde há apenas um nome e um ``Lookup`` não é encontrado, procuramos por um ``Transform`` e então o  lookup ``exact`` naquele ``Transform``. Todas as sequências de chamadas sempre terminam com um ``Lookup``. Para esclarecer:"

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:317
msgid ""
"``.filter(myfield__mylookup)`` will call ``myfield.get_lookup('mylookup')``."
msgstr "``.filter(myfield__mylookup)`` irá chamar `myfield.get_lookup('mylookup')``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:318
msgid ""
"``.filter(myfield__mytransform__mylookup)`` will call "
"``myfield.get_transform('mytransform')``, and then "
"``mytransform.get_lookup('mylookup')``."
msgstr "``.filter(myfield__mytransform__mylookup)`` irá chamar ``myfield.get_transform('mytransform')``, e  em seguida ``mytransform.get_lookup('mylookup')``."

#: ../../../../sources/1.9/docs/howto/custom-lookups.txt:321
msgid ""
"``.filter(myfield__mytransform)`` will first call "
"``myfield.get_lookup('mytransform')``, which will fail, so it will fall back"
" to calling ``myfield.get_transform('mytransform')`` and then "
"``mytransform.get_lookup('exact')``."
msgstr "``.filter(myfield__mytransform)`` irá chamar primeiro ``myfield.get_lookup( 'mytransform')``, o qual irá falhar, por isso vai retornar e chamar ``myfield.get_transform('mytransform')`` e em seguida, ``mytransform.get_lookup( \"exact\")``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:3
msgid "Writing custom ``django-admin`` commands"
msgstr "Escrevendo comandos do ``Django Admin`` personalizados"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:7
msgid ""
"Applications can register their own actions with ``manage.py``. For example,"
" you might want to add a ``manage.py`` action for a Django app that you're "
"distributing. In this document, we will be building a custom ``closepoll`` "
"command for the ``polls`` application from the "
":doc:`tutorial</intro/tutorial01>`."
msgstr "Os aplicativos podem registrar suas próprias ações com ``manage.py``. Por exemplo, você pode querer adicionar uma ação ``manage.py`` para uma aplicação Django que você está distribuindo. Neste documento, construiremos um comando customizado ``closepoll`` para a aplicação ``polls`` do :doc:`tutorial</intro/tutorial01>`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:13
msgid ""
"To do this, just add a ``management/commands`` directory to the application."
" Django will register a ``manage.py`` command for each Python module in that"
" directory whose name doesn't begin with an underscore. For example::"
msgstr "Pra tal, adicione um diretório  ``management/commands``  a sua aplicação. O Django irá registrar um comando ``manage.py`` para cada módulo Python dentro deste diretório, cujo o nome não inicie com underscore. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:29
msgid ""
"On Python 2, be sure to include ``__init__.py`` files in both the "
"``management`` and ``management/commands`` directories as done above or your"
" command will not be detected."
msgstr "Em Python 2, tenha certeza de incluir arquivo ``__init__.py`` em ambos os diretórios ``management`` e ``management/commands`` como feito acima ou seus comandos  não serão detectados."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:33
msgid ""
"In this example, the ``closepoll`` command will be made available to any "
"project that includes the ``polls`` application in "
":setting:`INSTALLED_APPS`."
msgstr "Neste exemplo, o comando ``closepoll`` estará disponível a qualquer projeto que inclui a aplicativo ``polls`` em :setting: `INSTALLED_APPS`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:36
msgid ""
"The ``_private.py`` module will not be available as a management command."
msgstr "O módulo ``_private.py`` não estará disponível como um \"management command\""

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:38
msgid ""
"The ``closepoll.py`` module has only one requirement -- it must define a "
"class ``Command`` that extends :class:`BaseCommand` or one of its "
":ref:`subclasses<ref-basecommand-subclasses>`."
msgstr "O módulo ``closepoll.py`` tem apenas uma exigência -- deve definir uma classe ``Command`` que se extende :class:`BaseCommand` ou um dos seus :ref:`subclasses<refbasecommandsubclasses>`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:42
msgid "Standalone scripts"
msgstr "scripts autônomos"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:44
msgid ""
"Custom management commands are especially useful for running standalone "
"scripts or for scripts that are periodically executed from the UNIX crontab "
"or from Windows scheduled tasks control panel."
msgstr "\"Management-comands\" customizados, são especialmente úteis para a execução de scripts independentes ou para scripts que são periodicamente executadas a partir do crontab do UNIX ou do painel de controle de tarefas agendadas do Windows."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:48
msgid ""
"To implement the command, edit ``polls/management/commands/closepoll.py`` to"
" look like this::"
msgstr "Para implementar o comando, edite ``polls/management/command/closepoll.py`` para que fique assim::"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:74
msgid ""
"Before Django 1.8, management commands were based on the :py:mod:`optparse` "
"module, and positional arguments were passed in ``*args`` while optional "
"arguments were passed in ``**options``. Now that management commands use "
":py:mod:`argparse` for argument parsing, all arguments are passed in "
"``**options`` by default, unless you name your positional arguments to "
"``args`` (compatibility mode). You are encouraged to exclusively use "
"``**options`` for new commands."
msgstr "Antes de Django 1.8, comandos de gerenciamento foram baseados no módulo :py:mod:`optparse` e ​​argumentos posicionais eram passados ​​em ``*args`` enquanto argumentos opcionais eram passados ​​em ``**options``. Agora que os comandos de gerenciamento usam  :py:mod:`argparse` para fazer o parser dos argumentos, todos os argumentos são passados ​​em ``**options`` por padrão, a menos que argumentos posicionais sejam nomeados para ``args`` (modo de compatibilidade). Encorajamos a usar exclusivamente ``**options`` para novos comandos."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:85
msgid ""
"When you are using management commands and wish to provide console output, "
"you should write to ``self.stdout`` and ``self.stderr``, instead of printing"
" to ``stdout`` and ``stderr`` directly. By using these proxies, it becomes "
"much easier to test your custom command. Note also that you don't need to "
"end messages with a newline character, it will be added automatically, "
"unless you specify the ``ending`` parameter::"
msgstr "Quando estiver usando comandos de gerenciamento e desejar enviar a saída para console, deve se escrever para o  `` self.stdout`` e ``self.stderr``, em vez de imprimir para o ``stdout`` e ``stderr`` diretamente. Ao usar esses proxies, torna-se muito mais fácil para testar o seu comando personalizado. Observe também que você não precisa terminar mensagens com um caractere de nova linha, este será adicionado automaticamente, a menos que você especifique o parâmetro ``ending``::"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:95
msgid ""
"The new custom command can be called using ``python manage.py closepoll "
"<poll_id>``."
msgstr "O novo comando personalizado pode ser chamado usando ``python manage.py closepoll <poll_id>``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:98
msgid ""
"The ``handle()`` method takes one or more ``poll_ids`` and sets "
"``poll.opened`` to ``False`` for each one. If the user referenced any "
"nonexistent polls, a :exc:`CommandError` is raised. The ``poll.opened`` "
"attribute does not exist in the :doc:`tutorial</intro/tutorial01>` and was "
"added to ``polls.models.Poll`` for this example."
msgstr "O método ``handle()`` recebe um ou mais ``poll_ids`` e define ``poll.opened`` como ``False`` para cada um. Se o usuário referenciar um \"poll\" não existente, um :exc:`CommandError` é levantada. O atributo ``poll.opened`` não existe no :doc:`tutorial </intro/tutorial01>` e foi adicionado a ``polls.models.Poll`` para este exemplo."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:107
msgid "Accepting optional arguments"
msgstr "Aceitando argumentos opcionais"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:109
msgid ""
"The same ``closepoll`` could be easily modified to delete a given poll "
"instead of closing it by accepting additional command line options. These "
"custom options can be added in the :meth:`~BaseCommand.add_arguments` method"
" like this::"
msgstr "O mesmo ``closepoll`` poderia ser facilmente modificado para excluir uma determinada \"poll\", ao invés de fechá-lo, aceitando as opções de linha de comando adicionais. Estas opções personalizadas podem ser adicionadas no método :meth:`~BaseCommand.add_arguments` como este::"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:133
msgid ""
"Previously, only the standard :py:mod:`optparse` library was supported and "
"you would have to extend the command ``option_list`` variable with "
"``optparse.make_option()``."
msgstr "Anteriormente, somente a biblioteca padrão :py:mod:`optparse`  era aceita e era necessário \"extender\" a variável do comando ``option_list`` com` `optparse.make_option()``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:137
msgid ""
"The option (``delete`` in our example) is available in the options dict "
"parameter of the handle method. See the :py:mod:`argparse` Python "
"documentation for more about ``add_argument`` usage."
msgstr "A opção ( ``delete`` no nosso exemplo) está disponível no parâmetro dict das opções do método \"hanfle()\". Veja  :py:mod:`argparse` na documentaçao do Python para saber mais sobre o uso do ``add_argument``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:141
msgid ""
"In addition to being able to add custom command line options, all "
":doc:`management commands</ref/django-admin>` can accept some default "
"options such as :option:`--verbosity` and :option:`--traceback`."
msgstr "Além de ser capaz de adicionar opções de linha de comando personalizada, todos :doc:`comandos de gereciamento</ref/django-admin>`  aceitam algumas opções padrão, tais como :opção:`--verbosity` e :opção:`--traceback`. "

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:148
msgid "Management commands and locales"
msgstr "Comandos de Gerenciamento e localidades"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:150
msgid ""
"By default, the :meth:`BaseCommand.execute` method deactivates translations "
"because some commands shipped with Django perform several tasks (for "
"example, user-facing content rendering and database population) that require"
" a project-neutral string language."
msgstr "Por padrão, o método :meth:`BaseCommand.execute` desativa traduções porque alguns comandos internos do Django executam várias tarefas (por exemplo, renderização de conteúdo voltado ao usuário e popular o banco de dados) que exigem uma língua neutra no  projeto."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:157
msgid ""
"In previous versions, Django forced the \"en-us\" locale instead of "
"deactivating translations."
msgstr "Nas versões anteriores, o Django forçou a localização para \"en-us\" ao invés de desativar traduções."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:160
msgid ""
"If, for some reason, your custom management command needs to use a fixed "
"locale, you should manually activate and deactivate it in your "
":meth:`~BaseCommand.handle` method using the functions provided by the I18N "
"support code::"
msgstr "Se por algum motivo, o seu comando personalizado de gerenciamento precisar usar um local fixo, é necessário que o suporte a \"locale\" seja  ativar e desativado manualmente no método :meth:`~BaseCommand.handle` usando as funções fornecidas pelo código de apoio I18N::"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:186
msgid ""
"Another need might be that your command simply should use the locale set in "
"settings and Django should be kept from deactivating it. You can achieve it "
"by using the :data:`BaseCommand.leave_locale_alone` option."
msgstr "Outra necessidade pode ser que o seu comando simplesmente deva utilizar a definição de \"locale\" definido no \"settings\" e o Django deve ser mantido sem desativá-lo. Você pode fazer isso usando a opção :data:`BaseCommand.leave_locale_alone`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:190
msgid ""
"When working on the scenarios described above though, take into account that"
" system management commands typically have to be very careful about running "
"in non-uniform locales, so you might need to:"
msgstr "Ao trabalhar nos cenários descritos acima, porém, considere que comandos de gerenciamento de sistemas em tipicamente que ser muito cuidadosos sobre o funcionamento em locais não-uniformes, de modo que você pode precisar:"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:194
msgid ""
"Make sure the :setting:`USE_I18N` setting is always ``True`` when running "
"the command (this is a good example of the potential problems stemming from "
"a dynamic runtime environment that Django commands avoid offhand by "
"deactivating translations)."
msgstr "Verifique se o :setting:`USE_I18N` é sempre ``True`` ao executar o comando (este é um bom exemplo dos potenciais problemas decorrentes de um ambiente de execução dinâmico que comandos do Django evitam desativando traduções)."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:199
msgid ""
"Review the code of your command and the code it calls for behavioral "
"differences when locales are changed and evaluate its impact on predictable "
"behavior of your command."
msgstr "Rever o código do seu comando e o código que este chama para diferenças de comportamento quando os locais são alteradas e avaliar o seu impacto sobre o comportamento previsível de seu comando."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:204
#: ../../../../sources/1.9/docs/howto/static-files/index.txt:143
#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:69
msgid "Testing"
msgstr "ensaio"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:206
msgid ""
"Information on how to test custom management commands can be found in the "
":ref:`testing docs <topics-testing-management-commands>`."
msgstr "Informações sobre como testar comandos de gerenciamento personalizado pode ser encontrada no :ref:`documentação de teste <topics-testing-management-commands>`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:210
msgid "Command objects"
msgstr "Objetos Command"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:214
msgid "The base class from which all management commands ultimately derive."
msgstr "A classe base a partir da qual todos os comandos de gestão, em última análise derivam."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:216
msgid ""
"Use this class if you want access to all of the mechanisms which parse the "
"command-line arguments and work out what code to call in response; if you "
"don't need to change any of that behavior, consider using one of its "
":ref:`subclasses<ref-basecommand-subclasses>`."
msgstr "Use esta classe se você quer acesso a todos os mecanismos que realizam o parse dos argumentos da linha de comando e verificar que código chamar em resposta; se você não precisa mudar nada deste comportamento, considere usar um desses :ref:`subclasses<refbasecommand-subclasses>`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:221
msgid ""
"Subclassing the :class:`BaseCommand` class requires that you implement the "
":meth:`~BaseCommand.handle` method."
msgstr "Subclasssing  a classe :class:`BaseCommand` requer que você implemente o método :meth:`~BaseCommand.handle`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:225
msgid "Attributes"
msgstr "Atributos"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:227
msgid ""
"All attributes can be set in your derived class and can be used in "
":class:`BaseCommand`’s :ref:`subclasses<ref-basecommand-subclasses>`."
msgstr "Todos os atributos podem ser definidos em sua classe derivada e pode ser usado nas :ref:`subclasses<ref-basecommand-subclasses>` de :class:`BaseCommand`  "

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:232
msgid ""
"A string listing the arguments accepted by the command, suitable for use in "
"help messages; e.g., a command which takes a list of application names might"
" set this to '<app_label app_label ...>'."
msgstr "A string que lista os argumentos aceitos pelo comando, adequado para o uso em mensagens de ajuda; ex., um comando que tem uma lista de nomes de aplicativos pode definir isso como '<app_label app_label ...>'."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:239
msgid ""
"This should be done now in the :meth:`~BaseCommand.add_arguments()` method, "
"by calling the ``parser.add_argument()`` method. See the ``closepoll`` "
"example above."
msgstr "Isto deve ser feito agora no método :meth:`~BaseCommand.add_arguments()`,  chamando o método ``parser.add_argument()``. Veja o exemplo ``closepoll`` acima."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:245
msgid ""
"A boolean indicating whether the command needs to be able to import Django "
"settings; if ``True``, ``execute()`` will verify that this is possible "
"before proceeding. Default value is ``True``."
msgstr "Um booleano que indica se o comando precisa ser capaz de importar configurações do Django; Se ``True``, ``execute()`` irá verificar se isso é possível antes de prosseguir. O valor padrão é ``True``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:252
msgid ""
"A short description of the command, which will be printed in the help "
"message when the user runs the command ``python manage.py help <command>``."
msgstr "Uma breve descrição do comando, que será impresso na mensagem de ajuda quando o usuário executar o comando ``python manage.py help <command>``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:260
msgid ""
"If your command defines mandatory positional arguments, you can customize "
"the message error returned in the case of missing arguments. The default is "
"output by :py:mod:`argparse` (\"too few arguments\")."
msgstr "Se o seu comando define argumentos posicionais obrigatórios, você pode personalizar a mensagem de erro devolvida em caso de falta de argumentos. O padrão é a saída por :py:mod:`argparse` (\"poucos argumentos\")."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:266
msgid ""
"This is the list of ``optparse`` options which will be fed into the "
"command's ``OptionParser`` for parsing arguments."
msgstr "Esta é a lista de opções do ``optparse`` que serão alimentados no comando do ``OptionParser`` para análise."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:271
msgid ""
"You should now override the :meth:`~BaseCommand.add_arguments` method to add"
" custom arguments accepted by your command. See :ref:`the example above "
"<custom-commands-options>`."
msgstr "Deve-se agora sobrescrever o método :meth:`~BaseCommand.add_arguments` para adicionar os argumentos personalizados aceitos pelo seu comando. Veja :ref:`o exemplo acima <customcommands-options>`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:277
msgid ""
"A boolean indicating whether the command outputs SQL statements; if "
"``True``, the output will automatically be wrapped with ``BEGIN;`` and "
"``COMMIT;``. Default value is ``False``."
msgstr "Um booleano que indica como os comandos retornam SQL \"statements\"; Se ``True``, a saída será automaticamente envolvido com ``BEGIN;`` e ``COMMIT;``. O valor padrão é ``False``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:283
msgid ""
"A boolean; if ``True``, the entire Django project will be checked for "
"potential problems prior to executing the command. Default value is "
"``True``."
msgstr "Um booleano; Se ``True``, todo o projeto Django será verificado sobre potenciais problemas antes de executar o comando. O valor padrão é ``True``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:288
msgid ""
"A boolean indicating whether the locale set in settings should be preserved "
"during the execution of the command instead of being forcibly set to 'en-"
"us'."
msgstr "Um booleano que indica se o local definido nas configurações devem se preservado durante a execução do comando em vez de ser forçosamente definido como 'en-us'."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:291
msgid "Default value is ``False``."
msgstr "O valor padrão é ``False``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:293
msgid ""
"Make sure you know what you are doing if you decide to change the value of "
"this option in your custom command if it creates database content that is "
"locale-sensitive and such content shouldn't contain any translations (like "
"it happens e.g. with django.contrib.auth permissions) as making the locale "
"differ from the de facto default 'en-us' might cause unintended effects. "
"Seethe `Management commands and locales`_ section above for further details."
msgstr "Verifique se sabe o que você está fazendo se decidir mudar o valor dessa opção em seu comando personalizado se ele cria conteúdo de banco de dados que é sensível ao local e tal conteúdo não deve conter quaisquer traduções (como acontece por exemplo com permissões em django.contrib.auth) fazendo com que o o local diferente do padrão de fato 'en-us' pode causar efeitos indesejados. Veja a seção  `comandos de gestão e locales`_ acima para mais detalhes."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:301
msgid ""
"This option can't be ``False`` when the "
":data:`~BaseCommand.can_import_settings` option is set to ``False`` too "
"because attempting to set the locale needs access to settings. This "
"condition will generate a :exc:`CommandError`."
msgstr "Esta opção não pode ser ``False`` quando a opção :data:`~BaseCommand.can_import_settings` está definido como ``False`` também porque a tentativa de definir a localidade precisa de acesso às configurações. Esta condição irá gerar um :exc:`CommandError`."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:308
msgid ""
"An instance attribute that helps create colored output when writing to "
"``stdout`` or ``stderr``. For example::"
msgstr "Um atributo de instância que ajuda a criar uma saída colorida quando se escreve no ``stdout`` ou ``stderr``. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:313
msgid ""
"See :ref:`syntax-coloring` to learn how to modify the color palette and to "
"see the available styles (use uppercased versions of the \"roles\" described"
" in that section)."
msgstr "Veja :ref:`sintaxe-coloring` para aprender como modificar a paleta de cores e ver os estilos disponíveis (use caixa-alta das versões das opções descritas nessa seção)."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:317
msgid ""
"If you pass the :option:`--no-color` option when running your command, all "
"``self.style()`` calls will return the original string uncolored."
msgstr "Se você passar a opção :option:`--no-color` ao executar o seu comando, todas as chamadas ``self.style()`` retornarão a string original sem colorir."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:321
msgid "Methods"
msgstr "Métodos"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:323
msgid ""
":class:`BaseCommand` has a few methods that can be overridden but only the "
":meth:`~BaseCommand.handle` method must be implemented."
msgstr ":Class:`BaseCommand` tem alguns métodos que podem ser sobrescritos mas apenas o método :meth:`~BaseCommand.handle` deve ser implementado."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:326
msgid "Implementing a constructor in a subclass"
msgstr "Implementando um construtor em uma subclasse"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:328
msgid ""
"If you implement ``__init__`` in your subclass of :class:`BaseCommand`, you "
"must call :class:`BaseCommand`’s ``__init__``::"
msgstr "Se você implementar ``__init__`` em sua subclasse de :class:`BaseCommand`, você deve chamar: o ``__init__`` do class:` BaseCommand`::"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:340
msgid ""
"Entry point to add parser arguments to handle command line arguments passed "
"to the command. Custom commands should override this method to add both "
"positional and optional arguments accepted by the command. Calling "
"``super()`` is not needed when directly subclassing ``BaseCommand``."
msgstr "Ponto de entrada que recebe argumentos do \"parser\" para manipular comandos passados pela linha de comando. Comandos personalizados devem sobrescrever este método para adicionar ambos argumentos posicionais ou opicionais que sejam aceitos pelo comando. Não é necessário chamar o ``super()`` quando for uma subclasse de  ``BaseCommand``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:347
msgid ""
"Returns the Django version, which should be correct for all built-in Django "
"commands. User-supplied commands can override this method to return their "
"own version."
msgstr "Retorna a versão do Django, que deve estar correto para todos os comandos internos do Django. É possível sobrescrever este método para que comandos fornecidos pelo usuário possam  retornar a sua própria versão."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:353
msgid ""
"Tries to execute this command, performing system checks if needed (as "
"controlled by the :attr:`requires_system_checks` attribute). If the command "
"raises a :exc:`CommandError`, it's intercepted and printed to stderr."
msgstr "Tenta executar este comando, realizando verificações de sistemas se necessário (como controlado pelo atributo :attr:`requires_system_checks`). Se o comando gerar um :exc:`CommandError`, este é interceptado e impresso no stderr."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:357
msgid "Calling a management command in your code"
msgstr "Chamando um comando de gestão dentro do seu código"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:359
msgid ""
"``execute()`` should not be called directly from your code to execute a "
"command. Use :func:`~django.core.management.call_command` instead."
msgstr "``execute()`` não deve ser chamado diretamente do seu código para executar um comando. Ao invés disso, use :func:`~django.core.management.call_command` ."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:364
msgid ""
"The actual logic of the command. Subclasses must implement this method."
msgstr "A lógica real do comando. Subclasses devem implementar este método."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:366
msgid ""
"It may return a Unicode string which will be printed to ``stdout`` (wrapped "
"by ``BEGIN;`` and ``COMMIT;`` if :attr:`output_transaction` is ``True``)."
msgstr "Ele pode retornar uma string Unicode que será impresso para ``stdout`` (envolvido por ``BEGIN;`` e `` COMMIT; `` se :attr:`output_transaction` for ``True``)."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:371
msgid ""
"Uses the system check framework to inspect the entire Django project for "
"potential problems. Serious problems are raised as a :exc:`CommandError`; "
"warnings are output to stderr; minor notifications are output to stdout."
msgstr "Usa a estrutura de verificação do sistema para inspecionar todo o projeto Django para os potenciais problemas. Graves problemas são levantados como :exc:`CommandError`; avisos são enviados para stderr; notificações menos importantes são enviados para stdout."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:375
msgid ""
"If ``app_configs`` and ``tags`` are both ``None``, all system checks are "
"performed. ``tags`` can be a list of check tags, like ``compatibility`` or "
"``models``."
msgstr "Se  ambos ``app_configs`` e  ``tags`` forem  ``None``, todas as verificações do sistema são realizadas. `` Tags`` pode ser uma lista tags de checagem, como ``compatibility`` ou ``models``."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:382
msgid "``BaseCommand`` subclasses"
msgstr "Subclasses de ``BaseCommand``"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:386
msgid ""
"A management command which takes one or more installed application labels as"
" arguments, and does something with each of them."
msgstr "Um comando de gestão que recebe como argumento um ou mais \"labels\" de aplicações instaladas, e faz alguma coisa com cada um deles."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:389
msgid ""
"Rather than implementing :meth:`~BaseCommand.handle`, subclasses must "
"implement :meth:`~AppCommand.handle_app_config`, which will be called once "
"for each application."
msgstr "Melhor que implementar :meth:`~ BaseCommand.handle`, as subclasses devem implementar :meth:` ~AppCommand.handle_app_config`, que será chamado uma vez para cada aplicação."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:395
msgid ""
"Perform the command's actions for ``app_config``, which will be an "
":class:`~django.apps.AppConfig` instance corresponding to an application "
"label given on the command line."
msgstr "Executar ações do comando para ``app_config``, o qual será uma instância de :class:`~django.apps.AppConfig` correspondente a um label do aplicativo informado na linha de comando."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:401
msgid ""
"A management command which takes one or more arbitrary arguments (labels) on"
" the command line, and does something with each of them."
msgstr "Um comando de gestão que recebe um ou mais argumentos arbitrários (\"labels\") na linha de comando, e faz alguma coisa com cada um deles."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:404
msgid ""
"Rather than implementing :meth:`~BaseCommand.handle`, subclasses must "
"implement :meth:`~LabelCommand.handle_label`, which will be called once for "
"each label."
msgstr "Em vez de implementar :meth:`~BaseCommand.handle`, subclasses devem implementar :meth:`~LabelCommand.handle_label`, que será chamado uma vez para cada etiqueta."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:409
msgid ""
"Perform the command's actions for ``label``, which will be the string as "
"given on the command line."
msgstr "Executar ações do comando para ``label``, que será a string como  informada na linha de comando."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:416
msgid "Use :class:`BaseCommand` instead, which takes no arguments by default."
msgstr "Use :class:`BaseCommand` no lugar, que por padrão não tem argumentos."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:418
msgid "A command which takes no arguments on the command line."
msgstr "Um comando que não recebe argumentos da linha de comando"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:420
msgid ""
"Rather than implementing :meth:`~BaseCommand.handle`, subclasses must "
"implement :meth:`~NoArgsCommand.handle_noargs`; :meth:`~BaseCommand.handle` "
"itself is overridden to ensure no arguments are passed to the command."
msgstr "Ao invés de implementar o :meth:`~BaseCommand.handle`, subclasses devem implementar :meth:`~NoArgsCommand.handle_noargs`; :meth:`~BaseCommand.handle` que será sobrescrito para ter certeza que nenhum argumento foi passado do comando"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:426
msgid "Perform this command's actions"
msgstr "Executar ações deste comando"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:429
msgid "Command exceptions"
msgstr "Exceções de comando"

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:433
msgid ""
"Exception class indicating a problem while executing a management command."
msgstr "classe de exceção que indica um problema ao executar um comando de gestão."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:435
msgid ""
"If this exception is raised during the execution of a management command "
"from a command line console, it will be caught and turned into a nicely-"
"printed error message to the appropriate output stream (i.e., stderr); as a "
"result, raising this exception (with a sensible description of the error) is"
" the preferred way to indicate that something has gone wrong in the "
"execution of a command."
msgstr "Se esta exceção é gerada durante a execução de um comando de gerenciamento chamado do console da linha de comando, ele será capturado e transformado em uma mensagem de erro devidamente impresso para a saída apropriada (isto é, stderr); como resultado, gerar essa exceção (com uma descrição sensata do erro) é a maneira preferida para indicar que algo deu errado na execução de um comando."

#: ../../../../sources/1.9/docs/howto/custom-management-commands.txt:441
msgid ""
"If a management command is called from code through "
":func:`~django.core.management.call_command`, it's up to you to catch the "
"exception when needed."
msgstr "Se um comando de gestão é chamado do código através do :func:`~django.core.management.call_command`, cabe a você capturar a exceção quando necessário."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:3
msgid "Writing custom model fields"
msgstr "Escrevendo campos personalizados de modelos."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:8
msgid "Introduction"
msgstr "Introdução"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:10
msgid ""
"The :doc:`model reference </topics/db/models>` documentation explains how to"
" use Django's standard field classes -- "
":class:`~django.db.models.CharField`, :class:`~django.db.models.DateField`, "
"etc. For many purposes, those classes are all you'll need. Sometimes, "
"though, the Django version won't meet your precise requirements, or you'll "
"want to use a field that is entirely different from those shipped with "
"Django."
msgstr "A documentação :doc:`referência de modelo </topics/db/models>` explica como usar as classes de campo padrão do Django --:class:`~django.db.models.CharField`, :class:`~django.db.models.DateField`, etc. Para muitos propósitos, essas classes são tudo o que você precisará. Às vezes, porém, a versão Django não vai atender às suas necessidades específicas, ou você vai querer usar um campo que é totalmente diferente daqueles fornecidos com Django."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:17
msgid ""
"Django's built-in field types don't cover every possible database column "
"type -- only the common types, such as ``VARCHAR`` and ``INTEGER``. For more"
" obscure column types, such as geographic polygons or even user-created "
"types such as `PostgreSQL custom types`_, you can define your own Django "
"``Field`` subclasses."
msgstr "Os tipos de campos embutidos no Django não cobrem todas os possíveis tipos de colunas do banco de dados -- somente os tipos comuns, tais como ``VARCHAR``e `ÌNTEGER``. Para tipos de colunas mais obscuros, tal como polígonos geográficos ou ainda tipos criados pelo usuário como `PostgreSQL custom Types`__, é possível definir sua própria subclasse de ``Field`` do Django."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:24
msgid ""
"Alternatively, you may have a complex Python object that can somehow be "
"serialized to fit into a standard database column type. This is another case"
" where a ``Field`` subclass will help you use your object with your models."
msgstr "Por outro lado, pode haver um tipo complexo de objeto no Python que pode de alguma maneira ser serializado para que se encaixe em um tipo de coluna padrão no banco de dados. Este é um outro caso onde uma subclasse de ``Field`` pode ajudar a utilizar o objeto com o \"models\"."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:29
msgid "Our example object"
msgstr "Nosso objeto de exemplo"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:31
msgid ""
"Creating custom fields requires a bit of attention to detail. To make things"
" easier to follow, we'll use a consistent example throughout this document: "
"wrapping a Python object representing the deal of cards in a hand of "
"Bridge_. Don't worry, you don't have to know how to play Bridge to follow "
"this example. You only need to know that 52 cards are dealt out equally to "
"four players, who are traditionally called *north*, *east*, *south* and "
"*west*.  Our class looks something like this::"
msgstr "Criar campos personalizados requer um pouco de atenção. Para que seja mais fácil de acompanhar, usaremos um exemplo consistente através desta documentação: um objeto Python que represente a coleção de cartas de uma mão de Bridge_. Não se preocupe, não é necessário saber como jogar Bridge para entender o exemplo. É necessário saber que 52 cartas são distribuídas igualmente para 4 jogadores, os quais são tradicionalmente chamados *north* (norte), *east* (leste), *south* (sul) and *west* (oeste). Nossa classe se parece com isso::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:53
msgid ""
"This is just an ordinary Python class, with nothing Django-specific about "
"it. We'd like to be able to do things like this in our models (we assume the"
" ``hand`` attribute on the model is an instance of ``Hand``)::"
msgstr "Esta é somente uma classe Python comum,  não tem nada específico do Django.  Gostaríamos de  ser capazes de fazer coisas como essa no nosso modelo (assumimos que o atributo ``hand`` do modelo é uma instância de ``Hand``)::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:64
msgid ""
"We assign to and retrieve from the ``hand`` attribute in our model just like"
" any other Python class. The trick is to tell Django how to handle saving "
"and loading such an object."
msgstr "Atribuimos ou lemos o valor do atributo ``hand`` no nosso modelo como em qualquer outra classe Python. Este truque é para dizer ao Django como manipular a gravação e a leitura como um objeto."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:68
msgid ""
"In order to use the ``Hand`` class in our models, we **do not** have to "
"change this class at all. This is ideal, because it means you can easily "
"write model support for existing classes where you cannot change the source "
"code."
msgstr "Para utilizar a classe ``Hand`` em nossos modelos, nós **não** precisamos alterar essa classe em nada. Isso é ideal, porque quer dizer que podemos facilmente escrever modelos de suporte para classes existentes cujo o código fonte não pode ser alterado."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:73
msgid ""
"You might only be wanting to take advantage of custom database column types "
"and deal with the data as standard Python types in your models; strings, or "
"floats, for example. This case is similar to our ``Hand`` example and we'll "
"note any differences as we go along."
msgstr "Você pode estar querendo tirar vantagem dos tipos customizados de colunas de banco de dados e lidar com o dado como um tipo de dado Python padrão nos seus modelos; Este caso é similar ao nosso exemplo ``Hand``  e iremos explicitar qualquer diferença enquanto continuamos."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:79
msgid "Background theory"
msgstr "A teoria por trás."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:82
msgid "Database storage"
msgstr "Armazenamento no Banco de Dados."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:84
msgid ""
"The simplest way to think of a model field is that it provides a way to take"
" a normal Python object -- string, boolean, ``datetime``, or something more "
"complex like ``Hand`` -- and convert it to and from a format that is useful "
"when dealing with the database (and serialization, but, as we'll see later, "
"that falls out fairly naturally once you have the database side under "
"control)."
msgstr "A maneira mais simples de pensar em um campo de modelo, é que ele fornece uma maneira de converter um objeto Python normal --string, boolean, ``datetime``, ou alguma coisa mais complexa como o ``Hand``-- para ou de um formato que seja útil quando interagir com o banco de dados (e serialização, mas, como veremos mais tarde isso parece bastante natural uma vez que você tenha o lado do banco de dados sob controle). "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:90
msgid ""
"Fields in a model must somehow be converted to fit into an existing database"
" column type. Different databases provide different sets of valid column "
"types, but the rule is still the same: those are the only types you have to "
"work with. Anything you want to store in the database must fit into one of "
"those types."
msgstr "Campos em um modelo devem ser de alguma maneira convertidos para que se encaixem em um tipo de coluna de banco de dados já existente. Bancos de dados diferentes provêem diferentes tipos de colunas, mas a regra ainda é a mesma: aqueles são os únicos dados que se tem para trabalhar. Qualquer coisa que se queira guardar em um banco de dados deve se encaixar em um daqueles tipos. "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:96
msgid ""
"Normally, you're either writing a Django field to match a particular "
"database column type, or there's a fairly straightforward way to convert "
"your data to, say, a string."
msgstr "Normalmente, ou você está escrevendo um campo Django para lidar com um tipo de coluna de banco de dados em particular, ou existe uma maneira bastante simples  de converter seu dado para, por exemplo, uma string."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:100
msgid ""
"For our ``Hand`` example, we could convert the card data to a string of 104 "
"characters by concatenating all the cards together in a pre-determined order"
" -- say, all the *north* cards first, then the *east*, *south* and *west* "
"cards. So ``Hand`` objects can be saved to text or character columns in the "
"database."
msgstr "Para o nosso exemplo ``Hand`, podemos converter o dado carta para uma string de 104 caracteres concatenando todos as cartas juntas em uma ordem pré-determinada --por exemplo, primeiro todos os *north*, depois os *east*, *south* e *west*. Então os objetos ``Hand`` podem ser salvos em colunas do tipo texto ou caracter em um banco de dados."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:106
msgid "What does a field class do?"
msgstr "O que uma classe campo faz?"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:108
msgid ""
"All of Django's fields (and when we say *fields* in this document, we always"
" mean model fields and not :doc:`form fields </ref/forms/fields>`) are "
"subclasses of :class:`django.db.models.Field`. Most of the information that "
"Django records about a field is common to all fields -- name, help text, "
"uniqueness and so forth. Storing all that information is handled by "
"``Field``. We'll get into the precise details of what ``Field`` can do later"
" on; for now, suffice it to say that everything descends from ``Field`` and "
"then customizes key pieces of the class behavior."
msgstr "Todos os campos do Django (e quando dizemos *campo* neste documento, sempre queremos dizer campos do modelo e não :doc:`campos de forms </ref/forms/fields>`) são subclasses de :class:`django.db.models.Field`. A maioria das informações que o Django registra sobre um campo é comum a todos os campos --name, help text, uniqueness e por diante. Armazenar toda essa informação é papel de ``Field``. Iremos entrar em detalhes precisos do que o ``Field`` pode fazer mais tarde; por agora, basta dizer que tudo descende de ``Field`` e então customizamos partes chaves do comportamento da classe."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:117
msgid ""
"It's important to realize that a Django field class is not what is stored in"
" your model attributes. The model attributes contain normal Python objects. "
"The field classes you define in a model are actually stored in the ``Meta`` "
"class when the model class is created (the precise details of how this is "
"done are unimportant here). This is because the field classes aren't "
"necessary when you're just creating and modifying attributes. Instead, they "
"provide the machinery for converting between the attribute value and what is"
" stored in the database or sent to the :doc:`serializer "
"</topics/serialization>`."
msgstr "É importante dizer que a classe de campo do Django não é o que é armazenado no seus atributos do modelo. Os atributos dos modelos contém objetos Python normais. As classes de campo que são definidas em um modelo são na verdade armazenadas dentro da classe ``Meta`` quando a classe é criada (os detalhes precisos de como isso é feito são importantes aqui). Isso é porque as classes de campos não são necessárias enquanto se está modificando atributos. Na verdade, eles fornecem o maquinário para conversão entre o valor do atributo e o que é armazenado no banco de dados ou enviado para o :doc:`serializador </topics/serialization>`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:126
msgid ""
"Keep this in mind when creating your own custom fields. The Django ``Field``"
" subclass you write provides the machinery for converting between your "
"Python instances and the database/serializer values in various ways (there "
"are differences between storing a value and using a value for lookups, for "
"example). If this sounds a bit tricky, don't worry -- it will become clearer"
" in the examples below. Just remember that you will often end up creating "
"two classes when you want a custom field:"
msgstr "Tenha isso em mente ao criar seus próprios campos. A subclasse ``Field`` do Django que você escreve provê o maquinário para conversão entre suas instancias Python e os valores do banco de dados/serializador de várias maneiras (existe uma diferença entre armazenar um valor e usar um valor para lookups por exemplo). Se isso lhe soa um pouco confuso, não se preocupe -- se tornará claro no exemplo abaixo. Mas lembre que muitas vezes acabará por criar duas classes quando quiser um campo personalizado:"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:134
msgid ""
"The first class is the Python object that your users will manipulate. They "
"will assign it to the model attribute, they will read from it for displaying"
" purposes, things like that. This is the ``Hand`` class in our example."
msgstr "A primeira classe é o objeto Python que os usuários irão manipular. Irão assinalar isso a um atributo de model, lerão para mostrar, coisas assim. Esta é a classe ``Hand`` em nosso exemplo."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:139
msgid ""
"The second class is the ``Field`` subclass. This is the class that knows how"
" to convert your first class back and forth between its permanent storage "
"form and the Python form."
msgstr "A segunda classe é a subclasse ``Field``. Essa é a classe que sabe como converter sua classe entre sua forma de armazenamento permanente e a forma do Python e vice-versa."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:144
msgid "Writing a field subclass"
msgstr "Escrevendo uma subclasse de campo"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:146
msgid ""
"When planning your :class:`~django.db.models.Field` subclass, first give "
"some thought to which existing :class:`~django.db.models.Field` class your "
"new field is most similar to. Can you subclass an existing Django field and "
"save yourself some work? If not, you should subclass the "
":class:`~django.db.models.Field` class, from which everything is descended."
msgstr "Quando estiver panejando sua subclasse de :class:`~django.db.models.Field`, primeiro de uma com qual classe já existente :class:`~django.db.models.Field` seu campo se parece mais. É possível fazer uma subclasse de campo Django já existente  e economizar algum trabalho ? Caso não, você deve construir uma subclasse de :class:`~django.db.models.Field`, da qual tudo descende."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:152
msgid ""
"Initializing your new field is a matter of separating out any arguments that"
" are specific to your case from the common arguments and passing the latter "
"to the ``__init__()`` method of :class:`~django.db.models.Field` (or your "
"parent class)."
msgstr "Iniciar seu novo campo é uma questão de separar quaisquer argumentos que são específicos para seu caso dos argumentos comuns e passar este último para o método ``__init__()`` da :class:`~django.db.models.Field` (ou sua classe pai)."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:157
msgid ""
"In our example, we'll call our field ``HandField``. (It's a good idea to "
"call your :class:`~django.db.models.Field` subclass ``<Something>Field``, so"
" it's easily identifiable as a :class:`~django.db.models.Field` subclass.) "
"It doesn't behave like any existing field, so we'll subclass directly from "
":class:`~django.db.models.Field`::"
msgstr "No nosso exemplo, iremos chamar nosso campo de ``HandField``. (é uma boa idéia chamar sua subclasse :class:`~django.db.models.Field`  ``<AgumaCoisa>Field``, então ela fica facilmente identificável como uma subclasse de  :class:`~django.db.models.Field`) . Nosso campo não se comporta como nenhum outro campo existente, então iremos herdar diretamente de  :class:`~django.db.models.Field`::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:173
msgid ""
"Our ``HandField`` accepts most of the standard field options (see the list "
"below), but we ensure it has a fixed length, since it only needs to hold 52 "
"card values plus their suits; 104 characters in total."
msgstr "Nosso ``HandField`` aceita a maioria das opções dos campos padrão (veja a lista abaixo), mas asseguramos que ele tenha um comprimento fixo, já que só precisa de 52 valores de carta mais seus naipes; 104 caracteres no total. "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:179
msgid ""
"Many of Django's model fields accept options that they don't do anything "
"with. For example, you can pass both "
":attr:`~django.db.models.Field.editable` and "
":attr:`~django.db.models.DateField.auto_now` to a "
":class:`django.db.models.DateField` and it will simply ignore the "
":attr:`~django.db.models.Field.editable` parameter "
"(:attr:`~django.db.models.DateField.auto_now` being set implies "
"``editable=False``). No error is raised in this case."
msgstr "Muitos dos modelos do Django aceitam opções que estes nunca usam pra nada. Por exemplo, é possível passar ambos os :attr:`~django.db.models.Field.editable` e :attr:`~django.db.models.DateField.auto_now` para  um :class:`django.db.models.DateField` e o parâmetro :attr:`~django.db.models.Field.editable`  será ignorado (:attr:`~django.db.models.DateField.auto_now` sendo definido implica em ``editable=False``). Nenhum erro é gerado neste caso."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:188
msgid ""
"This behavior simplifies the field classes, because they don't need to check"
" for options that aren't necessary. They just pass all the options to the "
"parent class and then don't use them later on. It's up to you whether you "
"want your fields to be more strict about the options they select, or to use "
"the simpler, more permissive behavior of the current fields."
msgstr "Este comportamento simplifica as classes de campos, porque não precisam checar opções que não são necessárias. Apenas passam todas as opções para a classe mãe e estes não são usados mais tarde. Você decide se quer que seus campos sejam mais rigorosos sobre as opções que eles selecionam, ou usar o mais simples, um comportamento mais permissivo dos campos existentes."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:194
msgid "The ``Field.__init__()`` method takes the following parameters:"
msgstr "O método ``Field.__init__()`` recebe os seguintes parâmetros:"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:196
msgid ":attr:`~django.db.models.Field.verbose_name`"
msgstr ":attr:`~django.db.models.Field.verbose_name`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:197
msgid "``name``"
msgstr "``name``"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:198
msgid ":attr:`~django.db.models.Field.primary_key`"
msgstr ":attr:`~django.db.models.Field.primary_key`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:199
msgid ":attr:`~django.db.models.CharField.max_length`"
msgstr ":attr:`~django.db.models.CharField.max_length`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:200
msgid ":attr:`~django.db.models.Field.unique`"
msgstr ":attr:`~django.db.models.Field.unique`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:201
msgid ":attr:`~django.db.models.Field.blank`"
msgstr ":attr:`~django.db.models.Field.blank`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:202
msgid ":attr:`~django.db.models.Field.null`"
msgstr ":attr:`~django.db.models.Field.null`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:203
msgid ":attr:`~django.db.models.Field.db_index`"
msgstr ":attr:`~django.db.models.Field.db_index`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:204
msgid ""
"``rel``: Used for related fields (like :class:`ForeignKey`). For advanced "
"use only."
msgstr "``rel``: Usado para campos relacionados (como :class:`ForeignKey`). Somente para uso avançado."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:206
msgid ":attr:`~django.db.models.Field.default`"
msgstr ":attr:`~django.db.models.Field.default`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:207
msgid ":attr:`~django.db.models.Field.editable`"
msgstr ":attr:`~django.db.models.Field.editable`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:208
msgid ""
"``serialize``: If ``False``, the field will not be serialized when the model"
" is passed to Django's :doc:`serializers </topics/serialization>`. Defaults "
"to ``True``."
msgstr "``serialize``: se ``False``, o campo não será \"serializado\" quando o modelo for passado para os  :doc:`serializadores </topics/serialization>`. Padrão é ``True``."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:211
msgid ":attr:`~django.db.models.Field.unique_for_date`"
msgstr ":attr:`~django.db.models.Field.unique_for_date`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:212
msgid ":attr:`~django.db.models.Field.unique_for_month`"
msgstr ":attr:`~django.db.models.Field.unique_for_month`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:213
msgid ":attr:`~django.db.models.Field.unique_for_year`"
msgstr ":attr:`~django.db.models.Field.unique_for_year`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:214
msgid ":attr:`~django.db.models.Field.choices`"
msgstr ":attr:`~django.db.models.Field.choices`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:215
msgid ":attr:`~django.db.models.Field.help_text`"
msgstr ":attr:`~django.db.models.Field.help_text`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:216
msgid ":attr:`~django.db.models.Field.db_column`"
msgstr ":attr:`~django.db.models.Field.db_column`"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:217
msgid ""
":attr:`~django.db.models.Field.db_tablespace`: Only for index creation, if "
"the backend supports :doc:`tablespaces </topics/db/tablespaces>`. You can "
"usually ignore this option."
msgstr ":attr:`~django.db.models.Field.db_tablespace`: Somente para a criação de índice, se o \"backend\" suportar :doc:`tablespaces </topics/db/tablespaces>`. Normalmente é possível ignorar essa opção."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:220
msgid ""
":attr:`~django.db.models.Field.auto_created`: ``True`` if the field was "
"automatically created, as for the :class:`~django.db.models.OneToOneField` "
"used by model inheritance. For advanced use only."
msgstr ":attr:`~django.db.models.Field.auto_created`: ``True`` se o campo foi criado automaticamente, como para o :class:`~django.db.models.OneToOneField` usado pela herança de modelo. Somente para uso avançado."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:224
msgid ""
"All of the options without an explanation in the above list have the same "
"meaning they do for normal Django fields. See the :doc:`field documentation "
"</ref/models/fields>` for examples and details."
msgstr "Todas as opções sem uma explicação na lista acima tem o mesmo significado que os campos normais do Django. veja a :doc:`field documentation </ref/models/fields>` para exemplos e detalhes."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:231
msgid "Field deconstruction"
msgstr "A descontrução do Campo"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:233
msgid ""
"The counterpoint to writing your ``__init__()`` method is writing the "
"``deconstruct()`` method. This method tells Django how to take an instance "
"of your new field and reduce it to a serialized form - in particular, what "
"arguments to pass to ``__init__()`` to re-create it."
msgstr "O contraponto de escrever seu método ``__init__()``é escrever o método ``deconstruct()``. Este método diz ao Django como pegar uma instância do seu novo campo e reduzi-la para uma forma \"serializada\" em particular, e quais argumentos passar para ``__init__()`` para recriá-lo. "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:238
msgid ""
"If you haven't added any extra options on top of the field you inherited "
"from, then there's no need to write a new ``deconstruct()`` method. If, "
"however, you're changing the arguments passed in ``__init__()`` (like we are"
" in ``HandField``), you'll need to supplement the values being passed."
msgstr "Se não foram adicionadas opções extras ao campo que foi herdado, então não há necessidade de reescrever o método ``deconstruct()``. Por outro lado,  se você mudar os argumentos passados no ``__init__()`` (como em ``HandField``), será preciso complementar os argumentos sendo passados."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:243
msgid ""
"The contract of ``deconstruct()`` is simple; it returns a tuple of four "
"items: the field's attribute name, the full import path of the field class, "
"the positional arguments (as a list), and the keyword arguments (as a dict)."
" Note this is different from the ``deconstruct()`` method :ref:`for custom "
"classes <custom-deconstruct-method>` which returns a tuple of three things."
msgstr "O contrato da ``deconstruct()``é simples; ele retorna uma tupla de quatro item: o atributo \"name\" do campo, o path completo  de importação da classe do campo, os argumentos posicionais (como lista), e os argumentos nomeados (como dicionários).  Note que é diferente do método ``deconstruct()`` :ref:`para classes customizadas <custom-deconstruct-method>` o qual retorna uma tupla de 3 elementos "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:249
msgid ""
"As a custom field author, you don't need to care about the first two values;"
" the base ``Field`` class has all the code to work out the field's attribute"
" name and import path. You do, however, have to care about the positional "
"and keyword arguments, as these are likely the things you are changing."
msgstr "Como autor do campo customizado, não é necessário se preocupar sobre os dois primeiros valores; a classe ``Field`` básica tem todo o código para o atributo \"name\" e \"import path\" funcionar. Entretanto, devemos nos preocupar com o argumentos posicionais e os nomeados, já que estes são as alterações que fizemos"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:254
msgid ""
"For example, in our ``HandField`` class we're always forcibly setting "
"max_length in ``__init__()``. The ``deconstruct()`` method on the base "
"``Field`` class will see this and try to return it in the keyword arguments;"
" thus, we can drop it from the keyword arguments for readability::"
msgstr "Por exemplo, na nossa classe \"HandField\" sempre somos forçados a definir max_length em \" __init __ () \". O método \"deconstruct()\"  da classe base \"Field\" ierá tentar retornar os argumentos da palavra-chave; assim, podemos lançar a partir dos argumentos palavras-chaves para facilitar a leitura ::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:272
msgid ""
"If you add a new keyword argument, you need to write code to put its value "
"into ``kwargs`` yourself::"
msgstr "Se você adicionar um novo argumento palavra-chave, você mesmo precisa codificar e colocar o valor dentro da variável \"kwargs\". "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:291
msgid ""
"More complex examples are beyond the scope of this document, but remember - "
"for any configuration of your Field instance, ``deconstruct()`` must return "
"arguments that you can pass to ``__init__`` to reconstruct that state."
msgstr "Exemplos mais complexos estão além do escopo deste documento, mas lembre - para qualquer configuração da sua instância de Field, o ``deconstruct()`` tem que retornar argumentos que se possa passar para o ``__init__`` para reconstruir aquele estado."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:295
msgid ""
"Pay extra attention if you set new default values for arguments in the "
"``Field`` superclass; you want to make sure they're always included, rather "
"than disappearing if they take on the old default value."
msgstr "Preste atenção extra se foram definidos novos valores padrão para argumentos na superclasse do ``Field``, tem que ter certeza de que estes são sempre incluídos, ao invés de desaparecer se recebem o valor antigo."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:299
msgid ""
"In addition, try to avoid returning values as positional arguments; where "
"possible, return values as keyword arguments for maximum future "
"compatibility. Of course, if you change the names of things more often than "
"their position in the constructor's argument list, you might prefer "
"positional, but bear in mind that people will be reconstructing your field "
"from the serialized version for quite a while (possibly years), depending "
"how long your migrations live for."
msgstr "E mais, tente evitar retornar valores como argumentos posicionais; onde for possível, retorne valores como argumentos \"nomeados\" para compatibilidade máxima no futuro. Claro, se os nomes são trocados mais frequentemente que as posições na lista do construtor, talvez seja preferível o posicional, mas tenha em mente que as pessoas estarão reconstruindo seu campo a partir da verão serializada por algum tempo (talvez anos), dependendo de quanto tempo suas migrações sobrevivam."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:306
msgid ""
"You can see the results of deconstruction by looking in migrations that "
"include the field, and you can test deconstruction in unit tests by just "
"deconstructing and reconstructing the field::"
msgstr "É possível ver os resultados de desconstrução olhando as migrações que incluem o campo, e é possível testar a desconstrução com \"unit tests\" somente desconstruindo e reconstruindo o campo::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:315
msgid "Documenting your custom field"
msgstr "Documentando o seu campo"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:317
msgid ""
"As always, you should document your field type, so users will know what it "
"is. In addition to providing a docstring for it, which is useful for "
"developers, you can also allow users of the admin app to see a short "
"description of the field type via the :doc:`django.contrib.admindocs "
"</ref/contrib/admin/admindocs>` application. To do this simply provide "
"descriptive text in a :attr:`~Field.description` class attribute of your "
"custom field. In the above example, the description displayed by the "
"``admindocs`` application for a ``HandField`` will be 'A hand of cards "
"(bridge style)'."
msgstr "Como sempre, é devido documentar o tipo do campo, então os usuários irão saber o que é. Além disso prover uma \"docstring\" para ele, que é útil para desenvolvedores, é possível permitir que usuários da aplicação admin vejam uma pequena descrição do tipo do campo através do  :doc:`django.contrib.admindocs </ref/contrib/admin/admindocs>` . Para tal simplesmente forneça um texto descritivo no atributo  :attr:`~Field.description` da classe do seu campo personalizado. NO evento acima, a descrição mostrada pela aplicação  ``admindocs`` para o  ``HandField`` será 'A hand of cards (bridge style)'."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:326
msgid ""
"In the :mod:`django.contrib.admindocs` display, the field description is "
"interpolated with ``field.__dict__`` which allows the description to "
"incorporate arguments of the field. For example, the description for "
":class:`~django.db.models.CharField` is::"
msgstr "No display do :mod:`django.contrib.admindocs`, a descrição do campo é interpolada com ``field.__dict__`` o qual habilita a descrição incorporar argumentos do campo. Por exemplo, a descrição para :class:`~django.db.models.CharField` é::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:334
msgid "Useful methods"
msgstr "Métodos úteis"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:336
msgid ""
"Once you've created your :class:`~django.db.models.Field` subclass, you "
"might consider overriding a few standard methods, depending on your field's "
"behavior. The list of methods below is in approximately decreasing order of "
"importance, so start from the top."
msgstr "Uma vez criada a subclasse de :class:`~django.db.models.Field`, você deve considerar sobrescrever um poucos métodos, dependendo do comportamento do seu campo. A lista de métodos abaixo está mais ou menos em uma ordem decrescente de importância, então comece do topo."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:344
msgid "Custom database types"
msgstr "Tipos de banco de dados personalizados"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:346
msgid ""
"Say you've created a PostgreSQL custom type called ``mytype``. You can "
"subclass ``Field`` and implement the :meth:`~Field.db_type` method, like "
"so::"
msgstr "Vamos dizer que você tenha criado um tipo personalizado para o PostgreSQL chamado ``mytype``. Você pode herdar de ``Field`` e implementar o método :meth:`~Field.db_type`, como a::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:355
msgid ""
"Once you have ``MytypeField``, you can use it in any model, just like any "
"other ``Field`` type::"
msgstr "Uma vez que tenha ``MyTypeField``, pode usá-lo em qualquer modelo, tal como qualquer outro tipo ``Field``::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:362
msgid ""
"If you aim to build a database-agnostic application, you should account for "
"differences in database column types. For example, the date/time column type"
" in PostgreSQL is called ``timestamp``, while the same column in MySQL is "
"called ``datetime``. The simplest way to handle this in a "
":meth:`~Field.db_type` method is to check the "
"``connection.settings_dict['ENGINE']`` attribute."
msgstr "Se o seu objetivo é criar uma aplicação agnóstica quanto ao banco de dados, deve levar em conta as diferenças nos tipos de colunas no banco de dados. Por exemplo, a tipo date/time para o PostgreSQL é chamado``timestamp`` enquanto que para o MySQL é chamado ``datetime``. O jeito mais simples de lidar com isso é no método :meth:`~Field.db_type` verificar o atributo   ``connection.settings_dict['ENGINE']``."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:368
#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:510
#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:682
msgid "For example::"
msgstr "Por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:377
msgid ""
"The :meth:`~Field.db_type` method is called by Django when the framework "
"constructs the ``CREATE TABLE`` statements for your application -- that is, "
"when you first create your tables. It is also called when constructing a "
"``WHERE`` clause that includes the model field -- that is, when you retrieve"
" data using QuerySet methods like ``get()``, ``filter()``, and ``exclude()``"
" and have the model field as an argument. It's not called at any other time,"
" so it can afford to execute slightly complex code, such as the "
"``connection.settings_dict`` check in the above example."
msgstr "O método :meth:`~Field.db_type` é chamado pelo Django quando o framework  constrói o comando ``CREATE TABLE`` para sua aplicação -- que é, quando as tabelas são criadas pela primeira vez. É chamado também quando está construindo a cláusula ``WHERE``  -- quer dizer, quando dados são recebidos usando métodos de QuerySet como ``get()``, ``filter()``, e ``exclude()`` e tem o campo do modelo como argumento. O método não é chamado em nenhum outro momento, isso permite que se execute códigos relativamente complexos, tal como na verificação em ``connection.settings_dict`` no código acima."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:386
msgid ""
"Some database column types accept parameters, such as ``CHAR(25)``, where "
"the parameter ``25`` represents the maximum column length. In cases like "
"these, it's more flexible if the parameter is specified in the model rather "
"than being hard-coded in the ``db_type()`` method. For example, it wouldn't "
"make much sense to have a ``CharMaxlength25Field``, shown here::"
msgstr "Alguns tipos de coluna do banco de dados aceitam parâmetros, como ``CHAR(25)``, onde o parâmetro ``25`` representa o tamanho máximo da coluna. Em casos como este, é mais flexível se o parâmetro for especificado no modelo ao invés de ser hard-coded no método ``db_type()``. Por exemplo, não faria muito sentido  ter  ``CharMaxlength25Field``, mostrado aqui::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:402
msgid ""
"The better way of doing this would be to make the parameter specifiable at "
"run time -- i.e., when the class is instantiated. To do that, just implement"
" ``Field.__init__()``, like so::"
msgstr "O melhor jeito de fazer isso seria fazer o parâmetro ser especificado em tempo de execução -- isto é, quando a classe é instanciada. Para fazer isso, basta implementar ``Field.__init__()``, como em::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:420
msgid ""
"Finally, if your column requires truly complex SQL setup, return ``None`` "
"from :meth:`.db_type`. This will cause Django's SQL creation code to skip "
"over this field. You are then responsible for creating the column in the "
"right table in some other way, of course, but this gives you a way to tell "
"Django to get out of the way."
msgstr "Finalmente, se sua coluna requer que defina um SQL realmente complexo, retorne ``None`` do :meth:`.db_type`. Isso irá fazer que o código de criação de SQL do Django ignore este campo. Então você é o responsável por criar a coluna na tabela correta de alguma outra maneira, claro, isso é uma maneira de dizer ao Django para sair do caminho."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:429
msgid "Converting values to Python objects"
msgstr "Convertendo valores para objetos Python"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:433
msgid ""
"Historically, Django provided a metaclass called ``SubfieldBase`` which "
"always called :meth:`~Field.to_python` on assignment. This did not play "
"nicely with custom database transformations, aggregation, or values queries,"
" so it has been replaced with :meth:`~Field.from_db_value`."
msgstr "Historicamente, o Django fornece uma metaclassa chamada ``SubfieldBase`` que sempre chama :meth:`~Field.to_python` na atribuição. Isso não funciona bem com transformação, agregções, ou queries de valores customizadaos, então teve que ser trocado com o :meth:`~Field.from_db_value`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:438
msgid ""
"If your custom :class:`~Field` class deals with data structures that are "
"more complex than strings, dates, integers, or floats, then you may need to "
"override :meth:`~Field.from_db_value` and :meth:`~Field.to_python`."
msgstr "Se sua classe customizada de :class:`~Field` lida com estruturas de dados mais complexas que  strings, datas, inteiros, or floats, então talvez precise sobrescrever o :meth:`~Field.from_db_value` e :meth:`~Field.to_python`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:442
msgid ""
"If present for the field subclass, ``from_db_value()`` will be called in all"
" circumstances when the data is loaded from the database, including in "
"aggregates and :meth:`~django.db.models.query.QuerySet.values` calls."
msgstr "Se presente para a subclasse do campo, ``from_db_value()`` será chamado em todas as circunstâncias quando dados são lidos do banco de dados, incluindo em agregacões e chamadas do :meth:`~django.db.models.query.QuerySet.values` ."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:446
msgid ""
"``to_python()`` is called by deserialization and during the "
":meth:`~django.db.models.Model.clean` method used from forms."
msgstr "o ``to_python()`` é chamado pela deserialização e durante o método :meth:`~django.db.models.Model.clean` usado nos forms."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:449
msgid ""
"As a general rule, ``to_python()`` should deal gracefully with any of the "
"following arguments:"
msgstr "Como regra geral, ``to_python()``deve lidar tranquilamente com qualquer dos seguintes argumentos:"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:452
msgid ""
"An instance of the correct type (e.g., ``Hand`` in our ongoing example)."
msgstr "Uma instância do tipo correto (ex., ``Hand``no nosso exemplo corrente)."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:454
msgid "A string"
msgstr "Uma string"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:456
msgid "``None`` (if the field allows ``null=True``)"
msgstr "``None``(se o campo permitir ``null=True``)"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:458
msgid ""
"In our ``HandField`` class, we're storing the data as a VARCHAR field in the"
" database, so we need to be able to process strings and ``None`` in the "
"``from_db_value()``. In ``to_python()``, we need to also handle ``Hand`` "
"instances::"
msgstr "Na nossa classe ``HandField``, estamos armazendo os dados como campo VARCHAR no banco de dados, então temos que ser capazes de processar strings e ``None`` no ``from_db_value()``. No ``to_python()``, precisamos também lidar com instâncias de ``Hand``::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:495
msgid ""
"Notice that we always return a ``Hand`` instance from these methods. That's "
"the Python object type we want to store in the model's attribute."
msgstr "Perceba que sempre retornamos uma instância destes métodos. Este é o tipo do objeto Python que queremos armazenar no atributo do modelo."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:498
msgid ""
"For ``to_python()``, if anything goes wrong during value conversion, you "
"should raise a :exc:`~django.core.exceptions.ValidationError` exception."
msgstr "Para ``to_python()``, se qualquer coisa der errado durante a conversão do valor, deve-se gerar a exceção :exc:`~django.core.exceptions.ValidationError`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:504
msgid "Converting Python objects to query values"
msgstr "Convertendo objetos Python para valores em queries"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:506
msgid ""
"Since using a database requires conversion in both ways, if you override "
":meth:`~Field.to_python` you also have to override "
":meth:`~Field.get_prep_value` to convert Python objects back to query "
"values."
msgstr "Uma vez que usar um banco de dados requer conversão em ambos os sentidos, se sobrescrever o :meth:`~Field.to_python` é necessário sobrescrever também :meth:`~Field.get_prep_value` para converter os objetos Python de novo em valores de query."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:521
msgid ""
"If your custom field uses the ``CHAR``, ``VARCHAR`` or ``TEXT`` types for "
"MySQL, you must make sure that :meth:`.get_prep_value` always returns a "
"string type. MySQL performs flexible and unexpected matching when a query is"
" performed on these types and the provided value is an integer, which can "
"cause queries to include unexpected objects in their results. This problem "
"cannot occur if you always return a string type from "
":meth:`.get_prep_value`."
msgstr "Caso seu campo personalizado use os tipos ``CHAR``, ``VARCHAR`` or ``TEXT`` parao MySQL, assegure que o :meth:`.get_prep_value` sempre retorne um tipo string. O MySQL responde a pesquisa de maneira variável e inesperada quando uma query é executada com estes tipos e o valor fornecido é um inteiro, o que pode resultar em queries qeu contenham objetos inesperados nos seus resultados. Este problema não pode ocorrer se sempre retornar um tipo string do :meth:`.get_prep_value`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:532
msgid "Converting query values to database values"
msgstr "Convertendo valores de queries para valores de banco de dados"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:534
msgid ""
"Some data types (for example, dates) need to be in a specific format before "
"they can be used by a database backend. :meth:`~Field.get_db_prep_value` is "
"the method where those conversions should be made. The specific connection "
"that will be used for the query is passed as the ``connection`` parameter. "
"This allows you to use backend-specific conversion logic if it is required."
msgstr "Alguns tipos de dados (por exemplo datas) precisam estar em um formato específico antes deles poderem ser usados por um \"backend\" de banco de dados. O :meth:`~Field.get_db_prep_value` é um método onde estas conversões devem ser feitas. A conexão específica que será usada para a query é passada pelo parâmetro ``connection``. Isso lhe possibilita usar a lógica de conversão espeçifica para um backend se isso for necessário."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:541
msgid ""
"For example, Django uses the following method for its :class:`BinaryField`::"
msgstr "Por exemplo, o Django usa o seguinte método para isso :class:`BinaryField`::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:550
msgid ""
"In case your custom field needs a special conversion when being saved that "
"is not the same as the conversion used for normal query parameters, you can "
"override :meth:`~Field.get_db_prep_save`."
msgstr "No caso do seu campo personalizado precisar de uma conversão especial quando for salvo e isso não é o mesmo que a conversão usada para parâmetros de query, você pode sobrescrever :meth:`~Field.get_db_prep_save`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:557
msgid "Preprocessing values before saving"
msgstr "Processando valores antes de salvar"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:559
msgid ""
"If you want to preprocess the value just before saving, you can use "
":meth:`~Field.pre_save`. For example, Django's "
":class:`~django.db.models.DateTimeField` uses this method to set the "
"attribute correctly in the case of "
":attr:`~django.db.models.DateField.auto_now` or "
":attr:`~django.db.models.DateField.auto_now_add`."
msgstr "Caso queira processar o valor logo antes de salvar, use :meth:`~Field.pre_save`. Por exemplo, o :class:`~django.db.models.DateTimeField`  do Django usa este método para atribuir o atributo correto no caso de :attr:`~django.db.models.DateField.auto_now`  ou :attr:`~django.db.models.DateField.auto_now_add`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:565
msgid ""
"If you do override this method, you must return the value of the attribute "
"at the end. You should also update the model's attribute if you make any "
"changes to the value so that code holding references to the model will "
"always see the correct value."
msgstr "Caso reescreva este método, é devido retornar o valor do atributo no fim. Deve-se também atualizar o atributo do modelo se houve mudanças no valor para que o código que mantenha referencias ao modelo  sempre veja o valor correto."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:573
msgid "Preparing values for use in database lookups"
msgstr "Preparando valores para uso em filtros de banco de dados "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:575
msgid ""
"As with value conversions, preparing a value for database lookups is a two "
"phase process."
msgstr "Assim como conversões de valores, preparar o valor para um filtro de banco de dados é um processo de duas fazes"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:578
msgid ""
":meth:`.get_prep_lookup` performs the first phase of lookup preparation: "
"type conversion and data validation."
msgstr ":meth:`.get_prep_lookup` executa a primeira fase da preparação da pesquisa: conversão de tipo e validação de dados"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:581
msgid ""
"Prepares the ``value`` for passing to the database when used in a lookup (a "
"``WHERE`` constraint in SQL). The ``lookup_type`` parameter will be one of "
"the valid Django filter lookups: ``exact``, ``iexact``, ``contains``, "
"``icontains``, ``gt``, ``gte``, ``lt``, ``lte``, ``in``, ``startswith``, "
"``istartswith``, ``endswith``, ``iendswith``, ``range``, ``year``, "
"``month``, ``day``, ``isnull``, ``search``, ``regex``, and ``iregex``."
msgstr "Prepare o ``valor`` para passá-lo para o banco de daods quando usado em uma pesquisa (uma cláusula ``WHERE`` no SQL). O parâmetro ``lookup_type`` será um dos filtros válidos do Django sendo filtros: ``exact``, ``iexact``, ``contains``, ``icontains``, ``gt``, ``gte``, ``lt``, ``lte``, ``in``, ``startswith``, ``istartswith``, ``endswith``, ``iendswith``, ``range``, ``year``, ``month``, ``day``, ``isnull``, ``search``, ``regex``, and ``iregex``."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:588
msgid ""
"If you are using :doc:`custom lookups </howto/custom-lookups>`, the "
"``lookup_type`` can be any ``lookup_name`` used by the project's custom "
"lookups."
msgstr "Se você estiver usando  :doc:`filtros personlizados </howto/custom-lookups>`, o ``lookup_type`` pode ser qualquer  ``lookup_name`` usado pelos filtros personalizados do projeto  ."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:591
msgid ""
"Your method must be prepared to handle all of these ``lookup_type`` values "
"and should raise either a ``ValueError`` if the ``value`` is of the wrong "
"sort (a list when you were expecting an object, for example) or a "
"``TypeError`` if your field does not support that type of lookup. For many "
"fields, you can get by with handling the lookup types that need special "
"handling for your field and pass the rest to the "
":meth:`~Field.get_db_prep_lookup` method of the parent class."
msgstr "Seu método deve estar preparado para lidar com todos estes valores de ``lookup_type`` e deve emitir um ``ValueError`` se o ``value`` é do tipo errado (uma lista quando deveria ser um objeto, por exemplo) ou um ``TypeError`` se o seu campo não aceita aquele tipo de filtro. Para muitos campos, você pode começar por tratar os tipos de filtros que recisam de uma tratamento especil para seu campo e passar o resto para o método :meth:`~Field.get_db_prep_lookup` da classe pai. "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:599
msgid ""
"If you needed to implement :meth:`.get_db_prep_save`, you will usually need "
"to implement :meth:`.get_prep_lookup`. If you don't, :meth:`.get_prep_value`"
" will be called by the default implementation, to manage ``exact``, ``gt``, "
"``gte``, ``lt``, ``lte``, ``in`` and ``range`` lookups."
msgstr "se você precisou implementar o  :meth:`.get_db_prep_save`, normalmente você precisará implementar o :meth:`.get_prep_lookup`. Se não, :meth:`.get_prep_value` será chamado pela implementação padrão, para lidar com os filtros ``exact``, ``gt``, ``gte``, ``lt``, ``lte``, ``in`` and ``range``. "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:604
msgid ""
"You may also want to implement this method to limit the lookup types that "
"could be used with your custom field type."
msgstr "Talvez você queira implementar este método para limitar os tipos de filtros que possam ser usados com seu campo personalizado."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:607
msgid ""
"Note that, for ``\"range\"`` and ``\"in\"`` lookups, ``get_prep_lookup`` "
"will receive a list of objects (presumably of the right type) and will need "
"to convert them to a list of things of the right type for passing to the "
"database. Most of the time, you can reuse ``get_prep_value()``, or at least "
"factor out some common pieces."
msgstr "Note que, para os filtros ``range``e `ìn``, o ``get_grep_lookup`` receberá  uma lista de objetos (presumidamente do tipo certo) e será preciso converte-los em uma lista de strings do tipo correto para passar para o banco de dados. Na maior parte do tempo, é possível reutilizar ``get_prep_value()``, ou no mínimo fatorar algumas partes comuns."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:613
msgid ""
"For example, the following code implements ``get_prep_lookup`` to limit the "
"accepted lookup types to ``exact`` and ``in``::"
msgstr "Por exemplo, o código seguinte implementa o ``get_prep_lookup`` para limitar os tipos de filtros aceitos para ``exact`` e `ìn`::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:628
msgid ""
"For performing database-specific data conversions required by a lookup, you "
"can override :meth:`~Field.get_db_prep_lookup`."
msgstr "Para tratar conversões de dados específicos de um banco de dado requeridos por um filtro, reescreva o :meth:`~Field.get_db_prep_lookup`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:634
msgid "Specifying the form field for a model field"
msgstr "Especificando o campo de um formulário para o campo de um modelo."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:636
msgid ""
"To customize the form field used by :class:`~django.forms.ModelForm`, you "
"can override :meth:`~Field.formfield`."
msgstr "Para personalizar o campo de formulário usado pelo :class:`~django.forms.ModelForm`, você pode reescrever o :meth:`~Field.formfield`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:639
msgid ""
"The form field class can be specified via the ``form_class`` and "
"``choices_form_class`` arguments; the latter is used if the field has "
"choices specified, the former otherwise. If these arguments are not "
"provided, :class:`~django.forms.CharField` or "
":class:`~django.forms.TypedChoiceField` will be used."
msgstr "A classe do campo de formulário pode ser especificada via o ``form_class`` e os argumentos de  ``choices_form_class``; o último é especificado se o campo tiver opções (choices) especificadas, do contrário o primeiro. Se estes argumentos não são fornecidos, será usada a :class:`~django.forms.CharField` ou :class:`~django.forms.TypedChoiceField`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:645
msgid ""
"All of the ``kwargs`` dictionary is passed directly to the form field's "
"``__init__()`` method. Normally, all you need to do is set up a good default"
" for the ``form_class`` (and maybe ``choices_form_class``) argument and then"
" delegate further handling to the parent class. This might require you to "
"write a custom form field (and even a form widget). See the :doc:`forms "
"documentation </topics/forms/index>` for information about this."
msgstr "Todos os dicionários ``kwargs`` é passado diretamente para o método `__init__()`` do campo do formulário. Normalmente, tudo o que você precisa fazer é definir um bom padrão para o argumento do  ``form_class`` (e talvez ``choices_form_class``) e delegar futuras manipulações para a classe pai. Isso talvez requeira que seja escrito um campo de form personalizado (e mesmo o widget de formulário). Veja o :doc:`forms documentation </topics/forms/index>` para informações sobre isso."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:652
msgid ""
"Continuing our ongoing example, we can write the :meth:`~Field.formfield` "
"method as::"
msgstr "Continuando nosso exemplo em andamento, podemos escrever o método :meth:`~Field.formfield`  como::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:665
msgid ""
"This assumes we've imported a ``MyFormField`` field class (which has its own"
" default widget). This document doesn't cover the details of writing custom "
"form fields."
msgstr "Isso assume que importamos uma classe de campo ``MyModelField`` (o qual tem seu próprio widget padrão). Este documento não cobre os detalhes de escrever um campo de formulário personalizado."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:675
msgid "Emulating built-in field types"
msgstr "Emulando tipos de campos internos. "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:677
msgid ""
"If you have created a :meth:`.db_type` method, you don't need to worry about"
" :meth:`.get_internal_type` -- it won't be used much. Sometimes, though, "
"your database storage is similar in type to some other field, so you can use"
" that other field's logic to create the right column."
msgstr "Se você criou um método :meth:`.db_type`, não precisa se preocupar sobre  :meth:`.get_internal_type` -- isso não será usado muito. As vezes, porém, seu armazenamento no banco de dados é similar em tipo a outro campo, então você pode usar a lógica deste outro campo para criar a coluna correta."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:690
msgid ""
"No matter which database backend we are using, this will mean that "
":djadmin:`migrate` and other SQL commands create the right column type for "
"storing a string."
msgstr "Não importa qual backend de banco de dados que esteja sendo usado, isso quer dizer que  o :djadmin:`migrate` e outros comandos SQL criam o tipo de coluna correto para armazenar uma string."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:694
msgid ""
"If :meth:`.get_internal_type` returns a string that is not known to Django "
"for the database backend you are using -- that is, it doesn't appear in "
"``django.db.backends.<db_name>.base.DatabaseWrapper.data_types`` -- the "
"string will still be used by the serializer, but the default "
":meth:`~Field.db_type` method will return ``None``. See the documentation of"
" :meth:`~Field.db_type` for reasons why this might be useful. Putting a "
"descriptive string in as the type of the field for the serializer is a "
"useful idea if you're ever going to be using the serializer output in some "
"other place, outside of Django."
msgstr "Se o :meth:`.get_internal_type`  retorna uma string que não é conhecida para o Django para o backend de banco de dados que está sendo usado -- que é, ele não aparece no  ``django.db.backends.<db_name>.base.DatabaseWrapper.data_types`` -- a string ainda será usada pelo serializador, mas o método padrão :meth:`~Field.db_type` retornará ``None``. Veja a documentação do :meth:`~Field.db_type` pelas razões pelas quais este talvez seja útil. "

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:706
msgid "Converting field data for serialization"
msgstr "Convertendo dado do campo para serialização"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:708
msgid ""
"To customize how the values are serialized by a serializer, you can override"
" :meth:`~Field.value_to_string`. Using ``value_from_object()`` is the best "
"way to get the field's value prior to serialization. For example, since our "
"``HandField`` uses strings for its data storage anyway, we can reuse some "
"existing conversion code::"
msgstr "Para customizar a maneira como os valores são serializados por um serializador, sobrescreva o :meth:`~Field.value_to_string`. Usando o  ``value_from_object()`` ;e o melhor jeito de pegar os valores dos campos antes da serialização. Por exemplo, já que de qualqer forma a ``HandField`` usa strings para armazenar os dados, podemos usar alguns códigos de conversão existentes::"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:722
msgid "Some general advice"
msgstr "Alguns avisos gerais"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:724
msgid ""
"Writing a custom field can be a tricky process, particularly if you're doing"
" complex conversions between your Python types and your database and "
"serialization formats. Here are a couple of tips to make things go more "
"smoothly:"
msgstr "Escrever um campo personalizado pode ser um pouco complicado, particularmente se estiver fazendo conversões complexas entre tipos Python e o banco de dados e formatos de serialização. Aqui algumas dicas par fazer as coisas mais tranquilas."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:729
msgid ""
"Look at the existing Django fields (in "
":file:`django/db/models/fields/__init__.py`) for inspiration. Try to find a "
"field that's similar to what you want and extend it a little bit, instead of"
" creating an entirely new field from scratch."
msgstr "Olhe para os campos existentes no Django  (em :file:`django/db/models/fields/__init__.py`)  para inspação. Tente encontrar um campo que seja similar ao o que você quer extender um pouco, ao invés de criar um inteiramente novo desde o início."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:734
msgid ""
"Put a ``__str__()`` (``__unicode__()`` on Python 2) method on the class "
"you're wrapping up as a field. There are a lot of places where the default "
"behavior of the field code is to call "
":func:`~django.utils.encoding.force_text` on the value. (In our examples in "
"this document, ``value`` would be a ``Hand`` instance, not a ``HandField``)."
" So if your ``__str__()`` method (``__unicode__()`` on Python 2) "
"automatically converts to the string form of your Python object, you can "
"save yourself a lot of work."
msgstr "Coloque um método ``__str__()`` (``__unicode__()`` em Python 2)  na classe que você está construindo como um campo. Há vários lugares  onde o comportamento padrão do código do campo é chamar :func:`~django.utils.encoding.force_text` para o valor. (Em nossos exemplos no nosso documento, ``value`` pode ser uma instância de  ``Hand``, e não um  ``HandField``). Então se o seu método ``__str__()`` (``__unicode__()`` on Python 2) automaticamente converter para o formato string do seu objeto Python, você pode economizar muito trabalho."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:744
msgid "Writing a ``FileField`` subclass"
msgstr "Escrevendo uma subclasse  ``FileField``"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:746
msgid ""
"In addition to the above methods, fields that deal with files have a few "
"other special requirements which must be taken into account. The majority of"
" the mechanics provided by ``FileField``, such as controlling database "
"storage and retrieval, can remain unchanged, leaving subclasses to deal with"
" the challenge of supporting a particular type of file."
msgstr "Além dos métodos acima, campos que lidam com arquivos tem alguns outros requerimentos especiais que devem ser levados em conta. A maioria dos mecanismos fornecidos pelo ``FileField`, como controlar o armazenamento e leitura na base de dados, podem permanecer inalterados, deixando as subclasses lidarem com o desafio de dar suporte a um tipo de arquivo particular."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:752
msgid ""
"Django provides a ``File`` class, which is used as a proxy to the file's "
"contents and operations. This can be subclassed to customize how the file is"
" accessed, and what methods are available. It lives at "
"``django.db.models.fields.files``, and its default behavior is explained in "
"the :doc:`file documentation </ref/files/file>`."
msgstr "O Django fornece uma classe ``File``, a qual é usada como um proxy para conteúdos e operações de arquivos . Isso pode ser herdado para customizar como o arquivo é acessado, e quais métodos estão disponíveis. Isso está em ``django.db.models.fields.files``, e seu comportamento padrão é explicado no :doc:`arquivo documentação</ref/files/file>`."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:758
msgid ""
"Once a subclass of ``File`` is created, the new ``FileField`` subclass must "
"be told to use it. To do so, simply assign the new ``File`` subclass to the "
"special ``attr_class`` attribute of the ``FileField`` subclass."
msgstr "Uma vez que uma subclasse de ``File`` é criada, a nova subclasse ``FileField`` deve ser informada para usá-lo. Para isso, simplesmente passe a nova subclasse de ``File`` para o atributo especial ``attr_class`` da subclasse de ``FileField``."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:763
msgid "A few suggestions"
msgstr "Algumas sugestões"

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:765
msgid ""
"In addition to the above details, there are a few guidelines which can "
"greatly improve the efficiency and readability of the field's code."
msgstr "Além dos detalhes acima, tem algumas orientações as quais podem melhorar muito a eficiência e a legibilidade do código do campo."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:768
msgid ""
"The source for Django's own ``ImageField`` (in "
"``django/db/models/fields/files.py``) is a great example of how to subclass "
"``FileField`` to support a particular type of file, as it incorporates all "
"of the techniques described above."
msgstr "O código fonte para o  ``ImageField`` do Django (em ``django/db/models/fields/files.py``) é um bom exemplo de como herdar ``FileField`` para dar suporte ao um tipo de arquivo em particular, já que ele incorpora todas as técnicas descritas acima."

#: ../../../../sources/1.9/docs/howto/custom-model-fields.txt:773
msgid ""
"Cache file attributes wherever possible. Since files may be stored in remote"
" storage systems, retrieving them may cost extra time, or even money, that "
"isn't always necessary. Once a file is retrieved to obtain some data about "
"its content, cache as much of that data as possible to reduce the number of "
"times the file must be retrieved on subsequent calls for that information."
msgstr "Faça o cache dos atributos do arquivo sempre que possível. Uma vez que é possível que arquivos sejam armazenados em sistemas de armazenamento remotos, recuperá-los talvez requeira tempo extra, ou mesmo dinheiro, que não é sempre necessário. Uma vez que o arquivo é recuperado para obter alguns dados sobre seu conteúdo, faça o cache de dados o quanto possível para reduzir o número de vezes que o arquivo deve ser recuperado em chamadas subsequentes para aquela informação. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:3
msgid "Custom template tags and filters"
msgstr "\"Template tags\" e filtros customizados"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:5
msgid ""
"Django's template language comes with a wide variety of :doc:`built-in tags "
"and filters </ref/templates/builtins>` designed to address the presentation "
"logic needs of your application. Nevertheless, you may find yourself needing"
" functionality that is not covered by the core set of template primitives. "
"You can extend the template engine by defining custom tags and filters using"
" Python, and then make them available to your templates using the :ttag:`{% "
"load %}<load>` tag."
msgstr "A linguagem de templates do Django vem com uma variedade de :doc:`built-in tags e filtros </ref/templates/builtins>` projetados para atender as necessidades da lógica de apresentação da sua aplicação. Mesmo assim, talvez precise de uma funcionalidade que não está coberta pelo conjunto das primitivas do template. É possível estender o engine de templates definindo tags e filtros customizados usando Python, e então torná-los disponíveis para seus templates usando a tag :ttag:`{% load %}<load>` ."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:14
msgid "Code layout"
msgstr "Layout do código"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:16
msgid ""
"The most common place to specify custom template tags and filters is inside "
"a Django app. If they relate to an existing app, it makes sense to bundle "
"them there; otherwise, they can be added to a new app. When a Django app is "
"added to :setting:`INSTALLED_APPS`, any tags it defines in the conventional "
"location described below are automatically made available to load within "
"templates."
msgstr "O lugar mais comum para especificar tags e filtros customizados é dentro de uma app Django. Se eles estão relacionados a uma app existente, faz sentido empacotá-los ali; se não eles podem ser adicionados a uma nova app. Quando uma app Django é adicionada ao :setting:`INSTALLED_APPS`, qualquer tag que estiver definida em um local convencional descrito abaixo ficam automaticamente disponíveis para serem carregadas dentro dos templates."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:22
msgid ""
"The app should contain a ``templatetags`` directory, at the same level as "
"``models.py``, ``views.py``, etc. If this doesn't already exist, create it -"
" don't forget the ``__init__.py`` file to ensure the directory is treated as"
" a Python package."
msgstr "A app deve conter um diretório ``templatetags``, no mesmo nível que o ``models.py`, ``views.py`, etc. Se este ainda não existe, crie - não esqueça o arquivo ``__init__.py`` para ter certeza que o diretório é tratado como um pacote Python."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:27
msgid "Development server won't automatically restart"
msgstr "O servidor de desenvolvimento não irá reiniciar automaticamente"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:29
msgid ""
"After adding the ``templatetags``  module, you will need to restart your "
"server before you can use the tags or filters in templates."
msgstr "Depois de adicionar o módulo ``templatags``, será preciso reiniciar o servidor antes que seja possível utilizar as tags ou filtros nos tempates."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:32
msgid ""
"Your custom tags and filters will live in a module inside the "
"``templatetags`` directory. The name of the module file is the name you'll "
"use to load the tags later, so be careful to pick a name that won't clash "
"with custom tags and filters in another app."
msgstr "As tags e filtros personalizados irão ficar em um módulo dentro do diretório ``templatetags`. O nome do arquivo do módulo é o nome que será usado para carregar as tags mais tarde, então tenha cuidado em escolher um nome que não conflite com tags e filtros customizados de outras apps."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:37
msgid ""
"For example, if your custom tags/filters are in a file called "
"``poll_extras.py``, your app layout might look like this::"
msgstr "Por exemplo, se suas tags/filtros customizados estão em um arquivo chamado ``poll_extras.py`, o layout da app deve parecer como isso::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:48
msgid "And in your template you would use the following:"
msgstr "E no seu template você deveria usar o seguinte:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:54
msgid ""
"The app that contains the custom tags must be in :setting:`INSTALLED_APPS` "
"in order for the :ttag:`{% load %}<load>` tag to work. This is a security "
"feature: It allows you to host Python code for many template libraries on a "
"single host machine without enabling access to all of them for every Django "
"installation."
msgstr "A app que contém a tag personalizada deve estar em :setting:`INSTALLED_APPS` para que a tag :ttag:`{% load %}<load>` funcione. Essa é uma característica de segurança: isso permite servir código Python para muitas bibliotecas de template em uma única máquina servidora sem habilitar acesso cada instalação de Django."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:59
msgid ""
"There's no limit on how many modules you put in the ``templatetags`` "
"package. Just keep in mind that a :ttag:`{% load %}<load>` statement will "
"load tags/filters for the given Python module name, not the name of the app."
msgstr "Não há limites de quantos módulos são colocados dentro do pacote ``templatetags``. Apenas mantenha em mente que um comando :ttag:`{% load %}<load>` irá carregar tags/filters para o nome do módulo Python, e não o nome da app."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:63
msgid ""
"To be a valid tag library, the module must contain a module-level variable "
"named ``register`` that is a ``template.Library`` instance, in which all the"
" tags and filters are registered. So, near the top of your module, put the "
"following::"
msgstr "Para ser uma biblioteca de tags válida, o módulo deve conter uma variável do nível do módulo chamado ``register`` que é uma instância de ``template.Library``, na qual todas as tags e filtros são registrados. Então, próximo ao topo do seu módulo, coloque o seguinte::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:74
msgid ""
"Alternatively, template tag modules can be registered through the "
"``'libraries'`` argument to "
":class:`~django.template.backends.django.DjangoTemplates`. This is useful if"
" you want to use a different label from the template tag module name when "
"loading template tags. It also enables you to register tags without "
"installing an application."
msgstr "Um alternativa, é que módulos de tags de template podem ser registradas através do argumento ``'libraries'`` do :class:`~django.template.backends.django.DjangoTemplates`. Isso é útil se você quer um \"label\" diferente para o módulo da tag de quando carregar os templates. Isso também habilita o registro de tags sem instalar a aplicação."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:81
msgid "Behind the scenes"
msgstr "Por trás das cenas."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:83
msgid ""
"For a ton of examples, read the source code for Django's default filters and"
" tags. They're in ``django/template/defaultfilters.py`` and "
"``django/template/defaulttags.py``, respectively."
msgstr "Para uma tonelada de exemplos, leia o código fonte das tags e filtros padrão do Django. Eles estão em  ``django/template/defaultfilters.py`` e ``django/template/defaulttags.py``, respectivamente."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:87
msgid "For more information on the :ttag:`load` tag, read its documentation."
msgstr "Para maiores informações sobre a tag :ttag:`load` tag, leia sua documentação"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:92
msgid "Writing custom template filters"
msgstr "Escrevendo filtros de templates personalizados"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:94
msgid ""
"Custom filters are just Python functions that take one or two arguments:"
msgstr "Filtros customizados são apenas funções Python que recebem um ou dois argumentos:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:96
msgid "The value of the variable (input) -- not necessarily a string."
msgstr "O valor da variável (input) -- não necessariamente uma string."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:97
msgid ""
"The value of the argument -- this can have a default value, or be left out "
"altogether."
msgstr "O valor do argumento -- este pode ter um valor padrão, ou ser deixado de fora."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:100
msgid ""
"For example, in the filter ``{{ var|foo:\"bar\" }}``, the filter ``foo`` "
"would be passed the variable ``var`` and the argument ``\"bar\"``."
msgstr "Por exemplo, no filtro ``{{ var|foo:\"bar\" }}``, ao filtro ``foo`` seria passada a variável ``var`` e o argumento ``\"bar\"``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:103
msgid ""
"Since the template language doesn't provide exception handling, any "
"exception raised from a template filter will be exposed as a server error. "
"Thus, filter functions should avoid raising exceptions if there is a "
"reasonable fallback value to return. In case of input that represents a "
"clear bug in a template, raising an exception may still be better than "
"silent failure which hides the bug."
msgstr "Uma vez que a linguagem de template não fornece manipulação de  exceções, qualquer exceção vinda de um filtro de template será exposta como um erro de servidor. Sendo assim, funções de filtros devem evitar enviar exceções se houver um valor substituto razoável para retornar. No caso de uma entrada que representa claramente um bug em um template, enviar uma exceção talvez ainda seja melhor que uma falha silenciosa a qual esconde o bug."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:110
msgid "Here's an example filter definition::"
msgstr "Aqui um exemplo de definição de filtro::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:116
msgid "And here's an example of how that filter would be used:"
msgstr "E aqui um exemplo de como aquele filtro poderia ser usado:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:122
msgid ""
"Most filters don't take arguments. In this case, just leave the argument out"
" of your function. Example::"
msgstr "Muitos filtros não recebem argumentos. Neste caso, somente deixe o argumento fora de sua função. Exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:130
msgid "Registering custom filters"
msgstr "Registrando filtros customizados"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:134
msgid ""
"Once you've written your filter definition, you need to register it with "
"your ``Library`` instance, to make it available to Django's template "
"language::"
msgstr "Uma vez que tenha escrito sua definição do filtro, é preciso registrá-lo com sua instância de ``Library``, para fazer com que esteja disponível para a linguagem de template do Django."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:140
msgid "The ``Library.filter()`` method takes two arguments:"
msgstr "O Método ``Library.filter()`` recebe dois argumentos:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:142
msgid "The name of the filter -- a string."
msgstr "O nome do filtro -- uma string."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:143
#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:962
msgid ""
"The compilation function -- a Python function (not the name of the function "
"as a string)."
msgstr "A função de compilação -- uma função Python (não o nome da função como uma string)"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:146
msgid "You can use ``register.filter()`` as a decorator instead::"
msgstr "Você pode, ao invés, usar ``register.filter()`` como um decorador::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:156
msgid ""
"If you leave off the ``name`` argument, as in the second example above, "
"Django will use the function's name as the filter name."
msgstr "Se deixar de passar o argumento ``name``, como no segundo exemplo acima, o Django irá usar o nome da função como nome do filtro."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:159
msgid ""
"Finally, ``register.filter()`` also accepts three keyword arguments, "
"``is_safe``, ``needs_autoescape``, and ``expects_localtime``. These "
"arguments are described in :ref:`filters and auto-escaping <filters-auto-"
"escaping>` and :ref:`filters and time zones <filters-timezones>` below."
msgstr "Finalmente,  ``register.filter()`` também aceita três argumentos nomeados, ``is_safe``, ``needs_autoescape``, e ``expects_localtime``. Estes argumentos são descrito em  :ref:`filters and auto-escaping <filters-auto-escaping>` e :ref:`filters and time zones <filters-timezones>` abaixo."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:165
msgid "Template filters that expect strings"
msgstr "Filtros de templates que recebem strings"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:169
msgid ""
"If you're writing a template filter that only expects a string as the first "
"argument, you should use the decorator ``stringfilter``. This will convert "
"an object to its string value before being passed to your function::"
msgstr "Se você está escrevendo um filtro de template que somente aceita uma string como primeiro argumento, deveria usar o decorador ``stringfilter``. Isso irá converter um objeto para seu valor string antes de ser passado pela sua função::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:183
msgid ""
"This way, you'll be able to pass, say, an integer to this filter, and it "
"won't cause an ``AttributeError`` (because integers don't have ``lower()`` "
"methods)."
msgstr "Desta maneira, você será capaz de passar, vamos dizer, um inteiro para este filtro, e isso não irá causar um ``AttributeError`` (porque inteiros não possuem os métodos ``lower()``)."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:190
msgid "Filters and auto-escaping"
msgstr "Filtros e auto-escaping"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:192
msgid ""
"When writing a custom filter, give some thought to how the filter will "
"interact with Django's auto-escaping behavior. Note that three types of "
"strings can be passed around inside the template code:"
msgstr "Quando escrevendo um filtro personalizado, reflita sobre como o filtro irá interagir com o comportamento do auto-escaping do django. Veja que tes tipos de strings podem ser passadas dentro do código do template:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:196
msgid ""
"**Raw strings** are the native Python ``str`` or ``unicode`` types. On "
"output, they're escaped if auto-escaping is in effect and presented "
"unchanged, otherwise."
msgstr "**Raw strings** são os tipos nativos do Python ``str``ou ``unicode``. Na saída, eles são \"escaped\", se \"auto-escaping\" tiver efeitivo, caso contrário são apresentados sem mudança."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:200
msgid ""
"**Safe strings** are strings that have been marked safe from further "
"escaping at output time. Any necessary escaping has already been done. "
"They're commonly used for output that contains raw HTML that is intended to "
"be interpreted as-is on the client side."
msgstr "**Safe strings** são strings que tenham sido marcadas como seguras para futuros \"escaping\" no tempo de saída. Qualquer \"escaping\" necessário já foi feito. Eles são comumente usados para saídas que contenham HTML puro que se destina a ser interpretado como estão do lado do cliente."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:205
msgid ""
"Internally, these strings are of type ``SafeBytes`` or ``SafeText``. They "
"share a common base class of ``SafeData``, so you can test for them using "
"code like::"
msgstr "Internamente, estas strings são do tipo ``SafeBytes``ou ``SafeText``. Eles compartilham uma classe de base comum do ``SafeData``, então você pode testá-los usando código como::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:213
msgid ""
"**Strings marked as \"needing escaping\"** are *always* escaped on output, "
"regardless of whether they are in an :ttag:`autoescape` block or not. These "
"strings are only escaped once, however, even if auto-escaping applies."
msgstr "**Strings marcados como \"needing escaping\"** são *sempre* \"escaped\"na saida, independetemente se estão dentro de um bloco :ttag:`autoescape`  ou não. Estas strings somente \"escaped\"uma vez, contudo, mesmo se \"auto-escaping\" se aplica."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:218
msgid ""
"Internally, these strings are of type ``EscapeBytes`` or ``EscapeText``. "
"Generally you don't have to worry about these; they exist for the "
"implementation of the :tfilter:`escape` filter."
msgstr "Internamente essas strings são do tipo ``EscapeBytes`` ou ``EscapeText``, geralmente você não precisa se preocupar com isso; eles existem para a implementação interna do filtro :tfilter:`escape`."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:222
msgid "Template filter code falls into one of two situations:"
msgstr "Código de filtros de templates caem em um das duas situações:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:224
msgid ""
"Your filter does not introduce any HTML-unsafe characters (``<``, ``>``, "
"``'``, ``\"`` or ``&``) into the result that were not already present. In "
"this case, you can let Django take care of all the auto-escaping handling "
"for you. All you need to do is set the ``is_safe`` flag to ``True`` when you"
" register your filter function, like so::"
msgstr "Seu filtro não introduz qualquer caracter HTML inseguro (``<``, ``>``, ``'``, ``\"`` or ``&``) no resultado que ainda não foi apresentado. Neste caso, você pode deixar o Django cuidar de toda a manipulação do \"auto-espacaping\" pra você. Tudo o que precisa é definir a \"flag\" `ìs_safe``para ``True`` quando registrar a função do filtro, como::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:234
msgid ""
"This flag tells Django that if a \"safe\" string is passed into your filter,"
" the result will still be \"safe\" and if a non-safe string is passed in, "
"Django will automatically escape it, if necessary."
msgstr "A \"flag\" diz ao Django que se uma string \"segura\" é passada para seu filtro, o resultado ainda será \"seguro\" e se uma string não segura é passada, Django irá automaticamente fazer o \"escape\", se necessário."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:238
msgid ""
"You can think of this as meaning \"this filter is safe -- it doesn't "
"introduce any possibility of unsafe HTML.\""
msgstr "Você pode entender isso como \"este filtro é seguro -- ele não introduz qualquer possibilidade de HTML não seguro\""

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:241
msgid ""
"The reason ``is_safe`` is necessary is because there are plenty of normal "
"string operations that will turn a ``SafeData`` object back into a normal "
"``str`` or ``unicode`` object and, rather than try to catch them all, which "
"would be very difficult, Django repairs the damage after the filter has "
"completed."
msgstr "A razão da necessidade do ``is_safe`` é porque existem muitas operações de string normais que tornarão um objeto ``SafeData`` de volta em uma ``str`` normal ou um objeto  ``unicode`` e, melhor que tentar capturar todos eles, o que pode ser muito difícil, o Django repara o defeito depois que o filtro tenha terminado."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:247
msgid ""
"For example, suppose you have a filter that adds the string ``xx`` to the "
"end of any input. Since this introduces no dangerous HTML characters to the "
"result (aside from any that were already present), you should mark your "
"filter with ``is_safe``::"
msgstr "Por exemplo, suponha que tenha um filtro que adiciona a string ``xx``ao final de uma entrada. Uma vez que isso não introduz nenhum caracter HTML perigoso para o resultado (além daqueles que já estão presentes), você deveria marcar seu filtro como ``is_safe``::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:256
msgid ""
"When this filter is used in a template where auto-escaping is enabled, "
"Django will escape the output whenever the input is not already marked as "
"\"safe\"."
msgstr "Quando o filtro é usado em um template onde a auto-substituição está habilitada, o Django irá fazer a substituição na saída sempre que a entrada ainda não estiver marcada como \"safe\"."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:260
msgid ""
"By default, ``is_safe`` is ``False``, and you can omit it from any filters "
"where it isn't required."
msgstr "Por padrão, ``is_safe`` é ``falso``, e você pode omiti-lo em qualquer filtro onde ele não é requerido."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:263
msgid ""
"Be careful when deciding if your filter really does leave safe strings as "
"safe. If you're *removing* characters, you might inadvertently leave "
"unbalanced HTML tags or entities in the result. For example, removing a "
"``>`` from the input might turn ``<a>`` into ``<a``, which would need to be "
"escaped on output to avoid causing problems. Similarly, removing a semicolon"
" (``;``) can turn ``&amp;`` into ``&amp``, which is no longer a valid entity"
" and thus needs further escaping. Most cases won't be nearly this tricky, "
"but keep an eye out for any problems like that when reviewing your code."
msgstr "Tenha cuidado quando estiver decidindo se o seu filtro realmente irá deixar strings seguras como \"safe\". Se estiver \"removendo\" caracteres, poderia deixar  tags HTML ou entidades incompletas no resultado. Por exemplo, removendo um ``>``de uma entrada poderia tornar ``<a>`` em um ``<a``, que poderia ser necessário fazer o \"escape\" na saída para evitar causar problemas. Similar a isso, removendo um ponto-e-vírgula (``;``) pode tornar um ``& amp;`` em um  ``& amp`` , o qual não é mais uma entidade válida e assim precisa realizar o \"escape\". A maioria dos casos nem chegarão perto de ser complicados assim, mas fique de olho para qualquer problema como este quando revisar seu código. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:273
msgid ""
"Marking a filter ``is_safe`` will coerce the filter's return value to a "
"string.  If your filter should return a boolean or other non-string value, "
"marking it ``is_safe`` will probably have unintended consequences (such as "
"converting a boolean False to the string 'False')."
msgstr "Fazendo um filtro ``is_safe`` obriga que este retorne um valor do tipo string. Se o seu filtro deveria retornar uma boolean ou outro valor que não uma string, marcar isso como ``is_safe`` provavelmente terá  consequências inexperadas (tal como converter um booleano \"False\" para a string  'False')."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:279
msgid ""
"Alternatively, your filter code can manually take care of any necessary "
"escaping. This is necessary when you're introducing new HTML markup into the"
" result. You want to mark the output as safe from further escaping so that "
"your HTML markup isn't escaped further, so you'll need to handle the input "
"yourself."
msgstr "Uma alternativa, o código do seu filtro pode manualmente cuidar das substituições necessárias. Isso é necessário quando adicionar uma marcação HTML ao resultado. Você quer marcar a saída como segura de substituições posteriores,  então suas marcação HTML não será substituída, e precisará tratar a entrada por conta própria."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:285
msgid ""
"To mark the output as a safe string, use "
":func:`django.utils.safestring.mark_safe`."
msgstr "Para marcar a saída como saída segura, use :func:`django.utils.safestring.mark_safe`."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:288
msgid ""
"Be careful, though. You need to do more than just mark the output as safe. "
"You need to ensure it really *is* safe, and what you do depends on whether "
"auto-escaping is in effect. The idea is to write filters that can operate in"
" templates where auto-escaping is either on or off in order to make things "
"easier for your template authors."
msgstr "Porém, tenha cuidado. É necessário mais que marcar a saída como segura. É necessário ter certeza que isso *é* realmente seguro, e o que fará depende se a auto-substituição está fazendo efeito. A idéia é escrever filtros que podem operar em templates onde o auto-escaping está ligado ou desligado de modo a tornar as coisas mais fáceis para os autores de templates."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:294
msgid ""
"In order for your filter to know the current auto-escaping state, set the "
"``needs_autoescape`` flag to ``True`` when you register your filter "
"function. (If you don't specify this flag, it defaults to ``False``). This "
"flag tells Django that your filter function wants to be passed an extra "
"keyword argument, called ``autoescape``, that is ``True`` if auto-escaping "
"is in effect and ``False`` otherwise. It is recommended to set the default "
"of the ``autoescape`` parameter to ``True``, so that if you call the "
"function from Python code it will have escaping enabled by default."
msgstr "Para que seu filtro saiba o estado corrente do estado da auto-substituição, defina a flag ``needs_autoescape`` como ``True`` quando registrar o filtro. (se não especificar esa flag, seu valor padrão é ``False``). Esta flag dia ao Django que sua função do filtro quer que seja passado um argumento extra, chamado ``autoescape`, que é ``True`` se está em efeito e ``False``caso contrário. É recomendado definir o padrão do parâmetro ``autoescape`` para ``True``, então se a função for chamado de um código Python esta terá a substituição habilitada por padrão."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:303
msgid ""
"For example, let's write a filter that emphasizes the first character of a "
"string::"
msgstr "Por exemplo, vamos escrever um filtro que enfatiza o primeiro caracter de uma string::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:322
msgid ""
"The ``needs_autoescape`` flag and the ``autoescape`` keyword argument mean "
"that our function will know whether automatic escaping is in effect when the"
" filter is called. We use ``autoescape`` to decide whether the input data "
"needs to be passed through ``django.utils.html.conditional_escape`` or not. "
"(In the latter case, we just use the identity function as the \"escape\" "
"function.) The ``conditional_escape()`` function is like ``escape()`` except"
" it only escapes input that is **not** a ``SafeData`` instance. If a "
"``SafeData`` instance is passed to ``conditional_escape()``, the data is "
"returned unchanged."
msgstr "A flag ``needs_autoescape`` e o argumento nomeado ``autoescape`` implicam que nossa função irá sabe se a substituição automática está efetiva quando o filtro for chamado. Usamos o ``autoescape`` para decidir se o data de entrada precisa ser acessado através do ``django.utils.html.conditional_escape`` ou não. (No último caso, usamos a função identidade como função de \"substituição\"). A função ``conditional_escape()`` é como ``escape()`` exceto que somente substitui a entrada que **não** é instância de  ``SafeData``. Se uma instância de ``SafeData`` é passada para a ``conditional_escape()``, o dado é retornado sem mudanças."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:332
msgid ""
"Finally, in the above example, we remember to mark the result as safe so "
"that our HTML is inserted directly into the template without further "
"escaping."
msgstr "Finalmente, no exemplo acima, relembramos de marcar resultados como seguros assim que o HTML é inserido diretamente no template sem outras substituições."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:336
msgid ""
"There's no need to worry about the ``is_safe`` flag in this case (although "
"including it wouldn't hurt anything). Whenever you manually handle the auto-"
"escaping issues and return a safe string, the ``is_safe`` flag won't change "
"anything either way."
msgstr "Não precisa se preocupar com a flag ``is_safe``  neste caso (embora inclui-la não faria nenhum mal). Mesmo que trate manualmente a auto-substituição e retorne uma string segura, a flag ``is_safe`` não alterará nada de nenhum modo."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:341
msgid "Avoiding XSS vulnerabilities when reusing built-in filters"
msgstr "Evitando vulnerabilidade XSS quando reusar filtros embutidos."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:345
msgid ""
"Django's built-in filters have ``autoescape=True`` by default in order to "
"get the proper autoescaping behavior and avoid a cross-site script "
"vulnerability."
msgstr "Os fiiltros embutidos do Django tem por padrão ``autoescape=True`` para que receba propriamente o comportamento da auto-substituição e evite a vulnerabilidade de \"cross-site\" ."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:349
msgid ""
"In older versions of Django, be careful when reusing Django's built-in "
"filters as ``autoescape`` defaults to ``None``. You'll need to pass "
"``autoescape=True`` to get autoescaping."
msgstr "Em versões antigas do Djagno, tenha cuidado quando reutilizar filtros embutidos como ``autoescape`` definidos por padrão como ``None``. Será necessário passar ``autoescape=True`` para ter a auto-substituição."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:353
msgid ""
"For example, if you wanted to write a custom filter called "
"``urlize_and_linebreaks`` that combined the :tfilter:`urlize` and "
":tfilter:`linebreaksbr` filters, the filter would look like::"
msgstr "Por exemplo, se quer escrever um filtro personalizado chamado ``urlize_and_linebreaks``que combine os filtros :tfilter:`urlize` e :tfilter:`linebreaksbr`, o filtro deveria parecer com::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:366
msgid "Then:"
msgstr "Então:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:372
msgid "would be equivalent to:"
msgstr "seria equivalente a:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:381
msgid "Filters and time zones"
msgstr "Filtros e fusos horários "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:383
msgid ""
"If you write a custom filter that operates on :class:`~datetime.datetime` "
"objects, you'll usually register it with the ``expects_localtime`` flag set "
"to ``True``::"
msgstr "Se escrever filtros personalizados que operam objetos  :class:`~datetime.datetime`, geralmente registra-se com a flag ``expects_localtime``definido como ``True``::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:394
msgid ""
"When this flag is set, if the first argument to your filter is a time zone "
"aware datetime, Django will convert it to the current time zone before "
"passing it to your filter when appropriate, according to :ref:`rules for "
"time zones conversions in templates <time-zones-in-templates>`."
msgstr "Quando esta flag está definida, se o primeiro argumento do seu filtro é uma date-time que leva em consideração o fuso-horário, o Django irá convertê-lo para o fuso-horário corrente antes de passa-lo para o filtro quando apropriado, de acordo com :ref:`rules for time zones conversions in templates <time-zones-in-templates>`. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:402
msgid "Writing custom template tags"
msgstr "Escrevendo tags de templates personalizadas."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:404
msgid ""
"Tags are more complex than filters, because tags can do anything. Django "
"provides a number of shortcuts that make writing most types of tags easier. "
"First we'll explore those shortcuts, then explain how to write a tag from "
"scratch for those cases when the shortcuts aren't powerful enough."
msgstr "Tags são mais complexas que filtros, porque as tags podem fazer qualquer coisa. Django fornece inúmeros atalhos para fazer com que a escrita de várias tags seja mais fácil. Primeiro iremos explorar estes atalhos, e então explicar como escrever uma tag do início  para aqueles casos em que os atalhos não são poderosos o suficiente."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:412
msgid "Simple tags"
msgstr "Tags simples"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:416
msgid ""
"Many template tags take a number of arguments -- strings or template "
"variables -- and return a result after doing some processing based solely on"
" the input arguments and some external information. For example, a "
"``current_time`` tag might accept a format string and return the time as a "
"string formatted accordingly."
msgstr "Muitas tags de templates recebem inúmeros argumentos -- strings ou variáveis de templates -- e retornam um resultado depois de fazer algum processamento baseado somente nos argumentos de entrada e alguma informação externa. Por exemplo, uma tag ``current_time`` aceitaria uma string de formato e retorna a hora como uma string formatada de acordo."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:422
msgid ""
"To ease the creation of these types of tags, Django provides a helper "
"function, ``simple_tag``. This function, which is a method of "
"``django.template.Library``, takes a function that accepts any number of "
"arguments, wraps it in a ``render`` function and the other necessary bits "
"mentioned above and registers it with the template system."
msgstr "Para facilitar a criação destes tipos de tags, Django fornece uma função de auxílio, ``simple_tag``. Essa função, a qual é um método de ``django.template.Library``, tem uma função que recebe qualquer número de parâmetros, empacota isso em uma função ``renderizadora`` junto com os \"bits\" mencionados acima e o registra com o sistema de templates."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:428
msgid "Our ``current_time`` function could thus be written like this::"
msgstr "Nossa função ``current_time`` poderia então ser escrita assim::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:439
msgid "A few things to note about the ``simple_tag`` helper function:"
msgstr "Algumas coisas para perceber sobre a função de auxílio ``simple_tag``:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:441
msgid ""
"Checking for the required number of arguments, etc., has already been done "
"by the time our function is called, so we don't need to do that."
msgstr "A checagem do número de arrgumentos, etc, já foi feito na hora em que a função é chamada, então não precisamos faze-lo."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:443
msgid ""
"The quotes around the argument (if any) have already been stripped away, so "
"we just receive a plain string."
msgstr "As aspas ao redor do argumento (se existem) já foram retiradas, então recebemos uma string simples."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:445
msgid ""
"If the argument was a template variable, our function is passed the current "
"value of the variable, not the variable itself."
msgstr "Se o argumento era uma variável de template, é passada par a nossa função o valor atual da variável, e não a própria variável."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:448
msgid ""
"Unlike other tag utilities, ``simple_tag`` passes its output through "
":func:`~django.utils.html.conditional_escape` if the template context is in "
"autoescape mode, to ensure correct HTML and protect you from XSS "
"vulnerabilities."
msgstr "Diferente de outras ferramentas de tag,  ``simple_tag`` passa sua saida através do  :func:`~django.utils.html.conditional_escape` se o contexto do tempte está no modo auto-substituição, para assegurar o HTML e proteger da vulnerabilidade XSS."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:453
msgid ""
"If additional escaping is not desired, you will need to use "
":func:`~django.utils.safestring.mark_safe` if you are absolutely sure that "
"your code does not contain XSS vulnerabilities. For building small HTML "
"snippets, use of :func:`~django.utils.html.format_html` instead of "
"``mark_safe()`` is strongly recommended."
msgstr "Se substituições adicionais não são desejadas, é necessário usar :func:`~django.utils.safestring.mark_safe`  se você tem a certeza absoluta que seu código não contém vulnerabilidade XSS. Para construir pequenos fragmentos de HTML, é fortemente recomendado usar :func:`~django.utils.html.format_html` ao invés de ``mark_safe()``"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:461
msgid ""
"Auto-escaping for ``simple_tag`` as described in the previous two paragraphs"
" was added."
msgstr "A auto-substituição par ``simple_tag``como descrito acima nos dois parágrafos anteriores foi adicionado."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:464
msgid ""
"If your template tag needs to access the current context, you can use the "
"``takes_context`` argument when registering your tag::"
msgstr "Se a template tag precisa acessar o contexto corrente, você pode usar o argumento ``takes_context`` quando registrá-la::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:472
msgid "Note that the first argument *must* be called ``context``."
msgstr "Perceba que o primeiro argumento **deve** ser chamado \"context\"."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:474
msgid ""
"For more information on how the ``takes_context`` option works, see the "
"section on :ref:`inclusion tags<howto-custom-template-tags-inclusion-tags>`."
msgstr "Para maiores informações sobre como a opção ``takes_context`` funciona, veja a seção :ref:`inclusion tags<howto-custom-template-tags-inclusion-tags>`."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:477
msgid "If you need to rename your tag, you can provide a custom name for it::"
msgstr "Se você precisar renomear a tag, você pode fornecer um nome personalizado para ele::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:485
msgid ""
"``simple_tag`` functions may accept any number of positional or keyword "
"arguments. For example::"
msgstr "As funções ``simple_tag`` aceitam qualquer número de argumentos posicionais ou nomeados. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:495
#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:643
msgid ""
"Then in the template any number of arguments, separated by spaces, may be "
"passed to the template tag. Like in Python, the values for keyword arguments"
" are set using the equal sign (\"``=``\") and must be provided after the "
"positional arguments. For example:"
msgstr "Então no template qualquer número de argumentos, separados por espaços podem ser passados para a atg de template. Como em Python, os valores para argumentos nomeados são definidos usando o sinal de igua (\"`=`\") e devem ser fornecidos depois dos argumentos posicionais. Por exemplo:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:506
msgid ""
"It's possible to store the tag results in a template variable rather than "
"directly outputting it. This is done by using the ``as`` argument followed "
"by the variable name. Doing so enables you to output the content yourself "
"where you see fit:"
msgstr "É possível armazenar os resultados da tag em uma variável de template ao invés de enviar para a saída diretamente. Isso é feito utilizando o argumento ``as`` seguido de um nome de variável. Fazendo isso é possível posicionar o conteúdo onde você achar cabido."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:519
msgid "Inclusion tags"
msgstr "Tags de inclusão"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:523
msgid ""
"Another common type of template tag is the type that displays some data by "
"rendering *another* template. For example, Django's admin interface uses "
"custom template tags to display the buttons along the bottom of the "
"\"add/change\" form pages. Those buttons always look the same, but the link "
"targets change depending on the object being edited -- so they're a perfect "
"case for using a small template that is filled with details from the current"
" object. (In the admin's case, this is the ``submit_row`` tag.)"
msgstr "Outro tipo de tag de template é o tipo que mostra alguns dados renderizados por *outro* template. Por exemplo, a interface do Admin do Django usa tags de tempate para mostrar os botões ao longo do final das páginas de formulários \"add/change\". Esses botões sempre parecem os mesmos, mas o link de destino mudam dependendo do objeto sendo editado -- então são um perfeito caso para usar um template pequeno que é preenchido com detalhes do objeto atual. (No caso do Admin, essa é a tag ``submit_row``.)"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:531
msgid "These sorts of tags are called \"inclusion tags\"."
msgstr "Este tipo de Tag são chamadas \"tags de inclusão\""

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:533
msgid ""
"Writing inclusion tags is probably best demonstrated by example. Let's write"
" a tag that outputs a list of choices for a given ``Poll`` object, such as "
"was created in the :ref:`tutorials <creating-models>`. We'll use the tag "
"like this:"
msgstr "Escrever tags de inclusão é provavelmente melhor demonstrado através de exemplos. Vamos escrever uma Tag que devolve uma lista de opções para um dado objeto ``Poll``, tal como o que foi criado no :ref:`tutorials <creating-models>`. Usaremos a tag assim:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:541
msgid "...and the output will be something like this:"
msgstr "... e a saída será algo como:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:551
msgid ""
"First, define the function that takes the argument and produces a dictionary"
" of data for the result. The important point here is we only need to return "
"a dictionary, not anything more complex. This will be used as a template "
"context for the template fragment. Example::"
msgstr "Primeiro defina a função que recebe os argumentos e produz um dicionário de dados para o resultado. O ponto importante aqui é que precisamos somente retornar um dicionário, não algo mais complexo. Isso será usado como um contexto para o fragmento de template. Exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:560
msgid ""
"Next, create the template used to render the tag's output. This template is "
"a fixed feature of the tag: the tag writer specifies it, not the template "
"designer. Following our example, the template is very simple:"
msgstr "Depois, criamos o template que irá renderizar a saída da tag. Este template é uma característica fixa da tag: o autor da tag especifica isso, não o designer de template. Seguindo o exemplo, o template é muito simples."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:572
msgid ""
"Now, create and register the inclusion tag by calling the "
"``inclusion_tag()`` method on a ``Library`` object. Following our example, "
"if the above template is in a file called ``results.html`` in a directory "
"that's searched by the template loader, we'd register the tag like this::"
msgstr "Agora, crie e registre a tag de inclusão chamando o método ``inclusion_tag()`` em um objeto do tipo ``Library``. Seguindo nosso exemplo, se o exemplo acima é um arquivo chamado ``results.html`` em um diretório que é procurado pelo template loader, nós regitramos a tag assim::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:582
msgid ""
"Alternatively it is possible to register the inclusion tag using a "
":class:`django.template.Template` instance::"
msgstr "Alternativamente é possível registrar a tag de inclusão usando uma instância de :class:`django.template.Template`::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:589
msgid "...when first creating the function."
msgstr "... quando criar a função pela primeira vez."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:591
msgid ""
"Sometimes, your inclusion tags might require a large number of arguments, "
"making it a pain for template authors to pass in all the arguments and "
"remember their order. To solve this, Django provides a ``takes_context`` "
"option for inclusion tags. If you specify ``takes_context`` in creating a "
"template tag, the tag will have no required arguments, and the underlying "
"Python function will have one argument -- the template context as of when "
"the tag was called."
msgstr "Algumas vezes, sua tag de inclusão requer um número grande de argumentos, tornando uma dor de cabeça para autores dos templates passar todos os argumentos e lembrar sua ordem. Para resolver isso, o Django fornece uma opção ``takes_context`` para tags de inclusão. Se o especificado o ``takes_context`` na criação da tag de template, a tag não terá argumentos requeridos, e a função Python implícita terá um argumento -- o contexto do template quando a tag foi chamada. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:598
msgid ""
"For example, say you're writing an inclusion tag that will always be used in"
" a context that contains ``home_link`` and ``home_title`` variables that "
"point back to the main page. Here's what the Python function would look "
"like::"
msgstr "Por exemplo, digamos que esteja escrevendo uma tag de inclusão que sempre será usada em um contexto que contém as variásveis ``home_link`` e ``home_title`` que apontam de volta para a página principal. Aqui como a  função Python deveria parecer::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:609
msgid ""
"Note that the first parameter to the function *must* be called ``context``."
msgstr "Repare que o primeiro parâmetro para a função *deve* ser chamado de ``context``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:611
msgid ""
"In that ``register.inclusion_tag()`` line, we specified "
"``takes_context=True`` and the name of the template. Here's what the "
"template ``link.html`` might look like:"
msgstr "Na linha  ``register.inclusion_tag()``, especificamos o ``takes_context=True`` e o nome do template. Aqui o que o template ``link.html`` deve se parecer:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:619
msgid ""
"Then, any time you want to use that custom tag, load its library and call it"
" without any arguments, like so:"
msgstr "Então, qualquer momento que queira usar a tag personalizada, carregue sua biblioteca e chame-a sem nenhum argumento, como:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:626
msgid ""
"Note that when you're using ``takes_context=True``, there's no need to pass "
"arguments to the template tag. It automatically gets access to the context."
msgstr "Repare que quando estiver usando  ``takes_context=True``, não tem necessidade de passar argumentos para a tag de template. Esta tem acessa o contexto automaticamente."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:629
msgid ""
"The ``takes_context`` parameter defaults to ``False``. When it's set to "
"``True``, the tag is passed the context object, as in this example. That's "
"the only difference between this case and the previous ``inclusion_tag`` "
"example."
msgstr "O parâmetro padrão para ``takes_context`` é ``False``. Quando definido como ``True``, para tag é passado o objeto contexto, como neste exemplo. Este é a única diferença entre este caso e o exemplo ``inclusion_tag`` anterior. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:633
msgid ""
"``inclusion_tag`` functions may accept any number of positional or keyword "
"arguments. For example::"
msgstr "Funções ``inclusion_tag`` podem aceitar qualquer número de argumentos posicionais ou nomeados. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:653
msgid "Assignment tags"
msgstr "Tags de atribuição"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:659
msgid ""
"``simple_tag`` can now store results in a template variable and should be "
"used instead."
msgstr "``simple_tag`` agora pode armazenar resultados em uma variável de template e deve ser usado no lugar."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:662
msgid ""
"To ease the creation of tags setting a variable in the context, Django "
"provides a helper function, ``assignment_tag``. This function works the same"
" way as :meth:`~django.template.Library.simple_tag` except that it stores "
"the tag's result in a specified context variable instead of directly "
"outputting it."
msgstr "Para facilitar a criação de tags capazes de setar uma variável no contexto, o Django fornece uma função de auxílio, ``assignment_tag``. Essa função funciona do mesmo jeito que :meth:`~django.template.Library.simple_tag` exceto que é capaz de armazenar o resultado de uma tag em uma variável de contexto especificada  ao invés de diretamente na saída."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:667
msgid ""
"Our earlier ``current_time`` function could thus be written like this::"
msgstr "Nossa função ``current_time`` anterior pode então ser escrita como esta::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:673
msgid ""
"You may then store the result in a template variable using the ``as`` "
"argument followed by the variable name, and output it yourself where you see"
" fit:"
msgstr "Então é possível armazenar o resultado em uma variável de template usando o argumento ``as`` seguido pelo nome da variável, e você pode mostrá-lo onde se encaixa melhor."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:682
msgid "Advanced custom template tags"
msgstr "Tags personalizadas avançadas"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:684
msgid ""
"Sometimes the basic features for custom template tag creation aren't enough."
" Don't worry, Django gives you complete access to the internals required to "
"build a template tag from the ground up."
msgstr "As vezes as funções básicas para criação das tags de template não são o suficiente. Não se preocupe, o Django lhe dá completo acesso as \"coisas\"internas requeridas para construir uma tag de template do zero."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:689
msgid "A quick overview"
msgstr "Um rápida visão geral"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:691
msgid ""
"The template system works in a two-step process: compiling and rendering. To"
" define a custom template tag, you specify how the compilation works and how"
" the rendering works."
msgstr "O sistema de templates funciona em um processo de 2 passos.: compilação e renderização. Para definir uma tag de template personalizada, é necessário especificar como a compilação funcionar e como a renderização funciona."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:695
msgid ""
"When Django compiles a template, it splits the raw template text into "
"''nodes''. Each node is an instance of ``django.template.Node`` and has a "
"``render()`` method. A compiled template is, simply, a list of ``Node`` "
"objects. When you call ``render()`` on a compiled template object, the "
"template calls ``render()`` on each ``Node`` in its node list, with the "
"given context. The results are all concatenated together to form the output "
"of the template."
msgstr "Quando Django compila um template, o texto do template original é dividido em \"nós\". Cada nó é uma instância de ``django.template.Node`` e tem um método ``render()``. Um template compilado é, simplesmente, uma lista de objetos ``Node``.  Quando chama ``render()`` em um objeto template compilado, o template chama ``render()``para cada ``Node`` na sua lista de nós, com o dado contexto. Os resultados são todos concatenados juntos para formar a saída do template."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:702
msgid ""
"Thus, to define a custom template tag, you specify how the raw template tag "
"is converted into a ``Node`` (the compilation function), and what the node's"
" ``render()`` method does."
msgstr "Então, para definir uma tag de template personalizada, especifique como a tag de template original é convertida em um ``Node`` (a a função de compilação), e o que o método ``reder()``do nó faz."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:707
msgid "Writing the compilation function"
msgstr "Escrevendo a função de compilação"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:709
msgid ""
"For each template tag the template parser encounters, it calls a Python "
"function with the tag contents and the parser object itself. This function "
"is responsible for returning a ``Node`` instance based on the contents of "
"the tag."
msgstr "Para cada tag de template que o analisador de templates encontra, ele chama uma função Python com o conteúdo da tag e o próprio objeto analisador. Essa função é responsável por retornar uma instância de ``Node`` baseada no conteúdo da tag."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:713
msgid ""
"For example, let's write a full implementation of our simple template tag, "
"``{% current_time %}``, that displays the current date/time, formatted "
"according to a parameter given in the tag, in :func:`~time.strftime` syntax."
" It's a good idea to decide the tag syntax before anything else. In our "
"case, let's say the tag should be used like this:"
msgstr "Por exemplo, vamos escrever toda a implementação de uma simples tag de template, ``{% current_time %}``, que mostra a data/hora corrente., formatada de acordo com um parâmetro passado na tag, na syntax :func:`~time.strftime`. É uma boa idéia decidir a syntax antes de qualquer outro. No nosso caso, vamos dizer que a tag deveria ser assim:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:723
msgid ""
"The parser for this function should grab the parameter and create a ``Node``"
" object::"
msgstr "O analisador para essa função deve pegar os criar um objeto ``Node``::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:742
#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:794
msgid "Notes:"
msgstr "Notas:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:744
msgid ""
"``parser`` is the template parser object. We don't need it in this example."
msgstr "``parser`` é o objeto analisador do template. Nós não precisamos dele neste exemplo."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:747
msgid ""
"``token.contents`` is a string of the raw contents of the tag. In our "
"example, it's ``'current_time \"%Y-%m-%d %I:%M %p\"'``."
msgstr "``token.contents`` é uma string com o conteúdo original da tag, seu ``'current_time \"%Y-%m-%d %I:%M %p\"'``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:750
msgid ""
"The ``token.split_contents()`` method separates the arguments on spaces "
"while keeping quoted strings together. The more straightforward "
"``token.contents.split()`` wouldn't be as robust, as it would naively split "
"on *all* spaces, including those within quoted strings. It's a good idea to "
"always use ``token.split_contents()``."
msgstr "O método ``token.split_contents()`` separa os argumentos por espaços enquanto mantém strings entre aspas, juntas. Mais direto o ``token.contents.split()`` não seria tão robusto já que ingenuamente dividiria *todos* os espaços, incluindo aqueles dentro de aspas. É uma boa idéia usar sempre o ``token.split_contents()``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:756
msgid ""
"This function is responsible for raising "
"``django.template.TemplateSyntaxError``, with helpful messages, for any "
"syntax error."
msgstr "Essa função é responsável for informar o ``django.template.TemplateSyntaxError``, com mensagens de ajuda, para qualquer erro de sintaxe."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:760
msgid ""
"The ``TemplateSyntaxError`` exceptions use the ``tag_name`` variable. Don't "
"hard-code the tag's name in your error messages, because that couples the "
"tag's name to your function. ``token.contents.split()[0]`` will ''always'' "
"be the name of your tag -- even when the tag has no arguments."
msgstr "As exceções ``TemplateSyntaxError`` usam a variável ``tag_name``. Não coloque nomes de tags dentro de suas mensagens de erro, porque isso amarra o nome da tag a sua função. ``token.contents.split()[0]``  ''sempre'' será o nome da sua tag -- mesmo quando sua tag não tem argumentos."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:766
msgid ""
"The function returns a ``CurrentTimeNode`` with everything the node needs to"
" know about this tag. In this case, it just passes the argument -- "
"``\"%Y-%m-%d %I:%M %p\"``. The leading and trailing quotes from the template"
" tag are removed in ``format_string[1:-1]``."
msgstr "A função retorna um ``CurrentTimeNode`` com tudo que o nó precisa para conhecer sobre sua tag. Neste caso, ele apenas passa o argumento -- ``\"%Y-%m-%d %I:%M %p\"``. As aspas (direita e esquerda) da tag de template estão removidas em ``format_string[1:-1]``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:771
msgid ""
"The parsing is very low-level. The Django developers have experimented with "
"writing small frameworks on top of this parsing system, using techniques "
"such as EBNF grammars, but those experiments made the template engine too "
"slow. It's low-level because that's fastest."
msgstr "O analisador é muito baixo nível. Os desenvolvedores do Django experimentaram escrever pequenos frameworks baseados no sistema analisador (\"parser\"), usando técnicas como a gramática EBNF, mas estes experimentos tornaram o motor de template muito lento. É baixo-nível porque é rápido. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:777
msgid "Writing the renderer"
msgstr "Escrevendo o \"renderizador\""

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:779
msgid ""
"The second step in writing custom tags is to define a ``Node`` subclass that"
" has a ``render()`` method."
msgstr "O segundo passo para escrever uma tag personalizada é definir uma subclasse de  ``Node`` que tenha um método ``render()``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:782
msgid "Continuing the above example, we need to define ``CurrentTimeNode``::"
msgstr "Continuando o exemplo acima, precisamso definir ``CurrentTimeNode``::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:796
msgid ""
"``__init__()`` gets the ``format_string`` from ``do_current_time()``. Always"
" pass any options/parameters/arguments to a ``Node`` via its ``__init__()``."
msgstr "``__init__()`` recebe o ``format_string`` do ``do_current_time()``. Sempre passar opções/parametros/argumentos para um ``Node`` através de seu ``__init__()``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:800
msgid "The ``render()`` method is where the work actually happens."
msgstr "O método ``render()`` é onde o trabalho realmente acontece"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:802
msgid ""
"``render()`` should generally fail silently, particularly in a production "
"environment. In some cases however, particularly if "
"``context.template.engine.debug`` is ``True``, this method may raise an "
"exception to make debugging easier. For example, several core tags raise "
"``django.template.TemplateSyntaxError`` if they receive the wrong number or "
"type of arguments."
msgstr "``render()`` deve geralmente falhar silenciosamente, particularmente no ambiente de produção. Em alguns casos porém, particularmente se  ``context.template.engine.debug`` for ``True``, este método pode indicar uma exceção para ficar mais fácil debugar. Por exemplo, muitas tags do core inviam   ``django.template.TemplateSyntaxError`` se eles receberem o número errado ou tipo de argumentos."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:809
msgid ""
"Ultimately, this decoupling of compilation and rendering results in an "
"efficient template system, because a template can render multiple contexts "
"without having to be parsed multiple times."
msgstr "Por último, este desacomplamento entre compilação e renderização resulta em um sistema de template mais eficiente, porque o template pode renderizar múltiplos contextos ser ter que ser analisado (\"parsed\")  múltiplas vezes."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:816
msgid "Auto-escaping considerations"
msgstr "Considerações sobre auto-substituição"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:818
msgid ""
"The output from template tags is **not** automatically run through the auto-"
"escaping filters (with the exception of "
":meth:`~django.template.Library.simple_tag` as described above). However, "
"there are still a couple of things you should keep in mind when writing a "
"template tag."
msgstr "A saída da tag de template *não* passa automaticamente pelos filtros de auto-substituição (com exceção do :meth:`~django.template.Library.simple_tag` como descrito acima). Porém, ainda existem algumas coisas para se ter em mente quando escrever uma tag de template."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:824
msgid ""
"If the ``render()`` function of your template stores the result in a context"
" variable (rather than returning the result in a string), it should take "
"care to call ``mark_safe()`` if appropriate. When the variable is ultimately"
" rendered, it will be affected by the auto-escape setting in effect at the "
"time, so content that should be safe from further escaping needs to be "
"marked as such."
msgstr "Se a função ``render()`` do seu template armazena o resultado em uma variável de contexto (ao invés de retornar o resultado em uma string), ele deve tomar o cuidado de chamar ``mark_safe()``se apropriado. Quando a variável é renderizada, ela será afetada pela definição do auto-substituição em efeito na hora, então o conteúdo que deve ser ignorado em futuras substituições deve ser marcado como tal."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:831
msgid ""
"Also, if your template tag creates a new context for performing some sub-"
"rendering, set the auto-escape attribute to the current context's value. The"
" ``__init__`` method for the ``Context`` class takes a parameter called "
"``autoescape`` that you can use for this purpose. For example::"
msgstr "Também, se sua tag cria um novo contexto para realizar algum sub renderização, defina o atributo de auto-substituição para o valor do contexto corrente. O método ``__init__`` da classe ``Context`` recebe um parâmetro chamado ``autoescape`` que pode ser usado para este propósito. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:843
msgid ""
"This is not a very common situation, but it's useful if you're rendering a "
"template yourself. For example::"
msgstr "Isso não é uma situação muito comum, mas é útil se você está renderizando você mesmo o template. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:852
msgid ""
"The ``template`` attribute of ``Context`` objects was added in Django 1.8. "
":meth:`context.template.engine.get_template "
"<django.template.Engine.get_template>` must be used instead of "
":func:`django.template.loader.get_template` because the latter now returns a"
" wrapper whose ``render`` method doesn't accept a "
":class:`~django.template.Context`."
msgstr "O atributo ``template`` dos objetos ``Context`` foi adicionado no Django 1.8. :meth:`context.template.engine.get_template <django.template.Engine.get_template>` deve ser usado no lugar da :func:`django.template.loader.get_template` porque o último retorna um wrapper (função invólucro) cujo o método ``render`` não aceita a :class:`~django.template.Context`."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:859
msgid ""
"If we had neglected to pass in the current ``context.autoescape`` value to "
"our new ``Context`` in this example, the results would have *always* been "
"automatically escaped, which may not be the desired behavior if the template"
" tag is used inside a :ttag:`{% autoescape off %}<autoescape>` block."
msgstr "Se negligenciássemos ao passar o valor no corrente ``context.autoescape`` para ao novo ``Context`` neste exemplo, os resultados seriam *sempre* automaticamente substituidos, o que pode não ser o comportamento desejável se a tg de template for usada dentro de um bloco  :ttag:`{% autoescape off %}<autoescape>` ."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:867
msgid "Thread-safety considerations"
msgstr "Considerações sobre segurança de \"thread\""

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:869
msgid ""
"Once a node is parsed, its ``render`` method may be called any number of "
"times. Since Django is sometimes run in multi-threaded environments, a "
"single node may be simultaneously rendering with different contexts in "
"response to two separate requests. Therefore, it's important to make sure "
"your template tags are thread safe."
msgstr "Uma vez que o nó tenha sido analisado, seu método ``render`` pode ser chamado qualquer número de vezes. Uma vez que o Django roda algumas vezes em ambientes multi-threaded, um nó pode ser renderizado simultaneamente com diferentes contextos em resposta a dois requests diferentes. Por isso, é importante que suas tags de templates são segurara para \"threads\"."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:875
msgid ""
"To make sure your template tags are thread safe, you should never store "
"state information on the node itself. For example, Django provides a builtin"
" :ttag:`cycle` template tag that cycles among a list of given strings each "
"time it's rendered:"
msgstr "Para ter certeza que sua tag de template é segura para rodar em threads, nunca deve armazenar informação no próprio nó. Por exemplo, Django fornece a template tag :ttag:`cycle` que alterna os intens de uma lista de strings cada vez que é renderizada:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:888
msgid ""
"A naive implementation of ``CycleNode`` might look something like this::"
msgstr "Uma implementação ingênua do ``CycleNode`` talvez se pareça como algo assim::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:900
msgid ""
"But, suppose we have two templates rendering the template snippet from above"
" at the same time:"
msgstr "Mas, suponha que temos dois templates renderizando o pedaço de template acima ao mesmo tempo."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:903
msgid ""
"Thread 1 performs its first loop iteration, ``CycleNode.render()`` returns "
"'row1'"
msgstr "Thread 1 realiza sua primeira iteração, ``CycleNode.render()`` returns 'row1'"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:905
msgid ""
"Thread 2 performs its first loop iteration, ``CycleNode.render()`` returns "
"'row2'"
msgstr "Thread 2 realiza sua primeira iteração, ``CycleNode.render()`` returns 'row2'"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:907
msgid ""
"Thread 1 performs its second loop iteration, ``CycleNode.render()`` returns "
"'row1'"
msgstr "Thread 1 realiza sua segunda iteração, ``CycleNode.render()`` returns 'row2'"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:909
msgid ""
"Thread 2 performs its second loop iteration, ``CycleNode.render()`` returns "
"'row2'"
msgstr "Thread 2 realiza sua segunda iteração, ``CycleNode.render()`` returns 'row2'"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:912
msgid ""
"The CycleNode is iterating, but it's iterating globally. As far as Thread 1 "
"and Thread 2 are concerned, it's always returning the same value. This is "
"obviously not what we want!"
msgstr "O CycleNode está iterando, más iterando globalmente. Tanto quanto Thread 1 e Thread 2 são problemas, eles retornam sempre o mesmo valor. Isso não é obviamente o que queremos !"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:916
msgid ""
"To address this problem, Django provides a ``render_context`` that's "
"associated with the ``context`` of the template that is currently being "
"rendered. The ``render_context`` behaves like a Python dictionary, and "
"should be used to store ``Node`` state between invocations of the ``render``"
" method."
msgstr "Para resolver o problema, o Django provê o ``render_context`` que associado com o ``context`` do  template que está correntemente sendo renderizado. O  ``render_context`` se comporta como um dicionário Python, e deve ser usado para armazenar os estados do ``Node`` entre chamadas do método ``render``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:921
msgid ""
"Let's refactor our ``CycleNode`` implementation to use the "
"``render_context``::"
msgstr "Vamos refatorar nosso implementação do ``CycleNode``  para usar o ``render_context``::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:933
msgid ""
"Note that it's perfectly safe to store global information that will not "
"change throughout the life of the ``Node`` as an attribute. In the case of "
"``CycleNode``, the ``cyclevars`` argument doesn't change after the ``Node`` "
"is instantiated, so we don't need to put it in the ``render_context``. But "
"state information that is specific to the template that is currently being "
"rendered, like the current iteration of the ``CycleNode``, should be stored "
"in the ``render_context``."
msgstr "Note que é perfeitamente seguro armazenar informação global que não irá se alterar através da vida do ``Node`` como um atributo. No caso do ``CycleNode``, o argumento ``cyclevars`` não muda depois que ``Node`` é instanciado., então não precisamos colocá-lo no ``render_context``. Mas informações do estado que é específica para o template que está sendo renderizado no momento, como a citeração corrente do ``CycleNode``, deve ser armazenado no ``render_context``"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:942
msgid ""
"Notice how we used ``self`` to scope the ``CycleNode`` specific information "
"within the ``render_context``. There may be multiple ``CycleNodes`` in a "
"given template, so we need to be careful not to clobber another node's state"
" information. The easiest way to do this is to always use ``self`` as the "
"key into ``render_context``. If you're keeping track of several state "
"variables, make ``render_context[self]`` a dictionary."
msgstr "Note como usamos o ``self`` como escopo para a informação específica do ``CycleNode`` dentro do ``render_context``. Pode haver múltiplos ``CycleNodes`` em um dado template, então é preciso ter cuidado para não conflitar outra informação de estado do nó.  A maneira mais fácil de fazer isso é sempre usar ``self`` como chave dentro do ``render_context``. Se está acompanhando várias variáveis de estado faça do ``render_context[self]`` um dicionário."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:950
msgid "Registering the tag"
msgstr "Registrando a tag"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:952
msgid ""
"Finally, register the tag with your module's ``Library`` instance, as "
"explained in :ref:`writing custom template filters<howto-writing-custom-"
"template-tags>` above. Example::"
msgstr "Finalmente, registre a tag com sua instancia de ``Library`` do modelo, como explicado em :ref:`writing custom template filters<howto-writing-custom-template-tags>` acima. Exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:958
msgid "The ``tag()`` method takes two arguments:"
msgstr "O método ``tag()`` recebe dois argumentos:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:960
msgid ""
"The name of the template tag -- a string. If this is left out, the name of "
"the compilation function will be used."
msgstr "O nome da template tag -- uma string. Se não for informado, o nome da função de compilação será usado. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:965
msgid ""
"As with filter registration, it is also possible to use this as a "
"decorator::"
msgstr "Assim como o registro de um filtro, também é possível usá-lo como \"decorator\"::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:975
msgid ""
"If you leave off the ``name`` argument, as in the second example above, "
"Django will use the function's name as the tag name."
msgstr "Se não informado o argumento ``name``, como no segundo exemplo acima, o Django irá usar o nome da função como nome da tag."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:979
msgid "Passing template variables to the tag"
msgstr "Passando variáveis de template para a tag."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:981
msgid ""
"Although you can pass any number of arguments to a template tag using "
"``token.split_contents()``, the arguments are all unpacked as string "
"literals. A little more work is required in order to pass dynamic content (a"
" template variable) to a template tag as an argument."
msgstr "Embora você possa passar qualquer número de argumentos para uma tag de template usando ``token.split_contents()``, os argumentos são todos \"desempacotados\" como strings literais. Um pouco mais de trabalho é requerido para que passe o conteúdo dinamicamente (uma variável de template) para uma tag de template como argumento."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:986
msgid ""
"While the previous examples have formatted the current time into a string "
"and returned the string, suppose you wanted to pass in a "
":class:`~django.db.models.DateTimeField` from an object and have the "
"template tag format that date-time:"
msgstr "Enquando os exemplos anteriores formataram a hora corrente como string e retornaram uma string, suponha que queira passar um :class:`~django.db.models.DateTimeField` de um objeto e a template tag formate o date-time:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:995
msgid "Initially, ``token.split_contents()`` will return three values:"
msgstr "Inicialmente, ``token.split_contents()`` irá retornar três valores:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:997
msgid "The tag name ``format_time``."
msgstr "O nome da tag ``format_time``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:998
msgid ""
"The string ``'blog_entry.date_updated'`` (without the surrounding quotes)."
msgstr "A string ``'blog_entry.date_updated'`` (sem as aspas)."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1000
msgid ""
"The formatting string ``'\"%Y-%m-%d %I:%M %p\"'``. The return value from "
"``split_contents()`` will include the leading and trailing quotes for string"
" literals like this."
msgstr "A string de formatação ``'\"%Y-%m-%d %I:%M %p\"'``. O valor retornado do ``split_contents()`` irá incluir as aspas para string literais como esta."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1004
msgid "Now your tag should begin to look like this::"
msgstr "Agora sua tag deve começar a parecer com isso::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1022
msgid ""
"You also have to change the renderer to retrieve the actual contents of the "
"``date_updated`` property of the ``blog_entry`` object.  This can be "
"accomplished by using the ``Variable()`` class in ``django.template``."
msgstr "Também é necessário alterar o renderizador para retornar o conteúdo atual da propriedade ``date_update`` do objeto ``blog_entry``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1026
msgid ""
"To use the ``Variable`` class, simply instantiate it with the name of the "
"variable to be resolved, and then call ``variable.resolve(context)``. So, "
"for example::"
msgstr "Para usar a class ``Variable``, simplesmente instancie-a com o nome da variável a ser resolvida, e então ``variable.resolve(context)``. Então por exemplo::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1042
msgid ""
"Variable resolution will throw a ``VariableDoesNotExist`` exception if it "
"cannot resolve the string passed to it in the current context of the page."
msgstr "A resolução da variável irá lançar uma excessão ``VariableDoesNotExist`` se não conseguir resolver a string recebida no contexto corrente da página."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1046
msgid "Setting a variable in the context"
msgstr "Definindo uma variável no contexto"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1048
msgid ""
"The above examples simply output a value. Generally, it's more flexible if "
"your template tags set template variables instead of outputting values. That"
" way, template authors can reuse the values that your template tags create."
msgstr "Os exemplos acima simplesmente retornam um valor. Geralmente, é mais flexível se suas tags de template definem variáveis ao invés de retornar valores. Desde modo, autores de templates podem reutilizar valores que suas tags de templates criam."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1052
msgid ""
"To set a variable in the context, just use dictionary assignment on the "
"context object in the ``render()`` method. Here's an updated version of "
"``CurrentTimeNode`` that sets a template variable ``current_time`` instead "
"of outputting it::"
msgstr "Para definir uma variável no contexto, apenas use no objeto de contexto uma passagem de parâmetros por dicionário no método ``render()``. Aqui uma versão atualizada de ``CurrentTimeNode`` que definie uma variável de template ``current_time`` ao invés de retornar uma saída::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1067
msgid ""
"Note that ``render()`` returns the empty string. ``render()`` should always "
"return string output. If all the template tag does is set a variable, "
"``render()`` should return the empty string."
msgstr "Repare que ``render()`` retorna uma string vazia. ``render()`` deve sempre retornar uma string como saída. Se tudo que a tag de template faz é definir uma variável, ``render()`` deve retornar uma string vazia."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1071
msgid "Here's how you'd use this new version of the tag:"
msgstr "Aqui como você deveria usar a nova versão da tag:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1077
msgid "Variable scope in context"
msgstr "Escopo da variável no context"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1079
msgid ""
"Any variable set in the context will only be available in the same ``block``"
" of the template in which it was assigned. This behavior is intentional; it "
"provides a scope for variables so that they don't conflict with context in "
"other blocks."
msgstr "Qualquer variável definida no contexto somente estará disponível no mesmo \"bloco\" do template no qual ele foi definido. Este comportamento é intencional; ele fornece um escopo para as variáveis que então não conflitam com o contexto de outros blocos."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1084
msgid ""
"But, there's a problem with ``CurrentTimeNode2``: The variable name "
"``current_time`` is hard-coded. This means you'll need to make sure your "
"template doesn't use ``{{ current_time }}`` anywhere else, because the ``{% "
"current_time %}`` will blindly overwrite that variable's value. A cleaner "
"solution is to make the template tag specify the name of the output "
"variable, like so:"
msgstr "Mas, tem um problema com ``CurrentTimeNode2``:  O nome da variável ``current_time`` está \"hardecodeada\". Isso significa que tem que ter certeza seu template não usa ``{{ current_time }}`` em nenhum outro lugar, porque o  ``{% current_time %}`` irá redefinir o valor da variável. Uma solução mais limpa é fazer a tag de template especificar o nome da variável de saída, como:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1096
msgid ""
"To do that, you'll need to refactor both the compilation function and "
"``Node`` class, like so::"
msgstr "Para fazer isso, será preciso refatorar tanto a função de compilação e a classe de ``Node`, como::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1128
msgid ""
"The difference here is that ``do_current_time()`` grabs the format string "
"and the variable name, passing both to ``CurrentTimeNode3``."
msgstr "A diferença aqui é que ``do_current_time()`` pega a string de formato e o nome da variável passando ambos para ``CurrenteNode3``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1131
msgid ""
"Finally, if you only need to have a simple syntax for your custom context-"
"updating template tag, consider using the "
":meth:`~django.template.Library.simple_tag` shortcut, which supports "
"assigning the tag results to a template variable."
msgstr "Finalmente, se você precisa ter somente uma sinatxe simples para sua tag de template personalizada que atualiza o contexto, considere usar o atalho :meth:`~django.template.Library.simple_tag`, o qual possibilita passar os resultados de uma tag para uma variável de template."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1137
msgid "Parsing until another block tag"
msgstr "\"Parsing\" até outra bloco de tag."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1139
msgid ""
"Template tags can work in tandem. For instance, the standard :ttag:`{% "
"comment %}<comment>` tag hides everything until ``{% endcomment %}``. To "
"create a template tag such as this, use ``parser.parse()`` in your "
"compilation function."
msgstr "Tags de templates podem trabalhar em tandem. Por exemplo, a tag padrão :ttag:`{% comment %}<comment>` esconde tudo até ``{% endcomment %}``. Para criar uma tag de template coo esta, use ``parser.parse()`` na sua função de compilação."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1144
msgid "Here's how a simplified ``{% comment %}`` tag might be implemented::"
msgstr "Aqui como uma tag  ``{% comment %}`` simplificada pode ser implmentada::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1156
msgid ""
"The actual implementation of :ttag:`{% comment %}<comment>` is slightly "
"different in that it allows broken template tags to appear between ``{% "
"comment %}`` and ``{% endcomment %}``. It does so by calling "
"``parser.skip_past('endcomment')`` instead of "
"``parser.parse(('endcomment',))`` followed by "
"``parser.delete_first_token()``, thus avoiding the generation of a node "
"list."
msgstr " A implementação atual da :ttag:`{% comment %}<comment>` é ligeiramente diferente na medida que permite que tags de templates \"quebradas\"  apareçam entre ``{% comment %}`` e ``{% endcomment %}``. Faz isso chamando ``parser.skip_past('endcomment')`` no lugar de  ``parser.parse(('endcomment',))`` seguido por ``parser.delete_first_token()``, assim evitando gerar uma lista de nós. "

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1163
msgid ""
"``parser.parse()`` takes a tuple of names of block tags ''to parse until''. "
"It returns an instance of ``django.template.NodeList``, which is a list of "
"all ``Node`` objects that the parser encountered ''before'' it encountered "
"any of the tags named in the tuple."
msgstr "``parser.parse()``  recebe uma tupla de nomes de blocos de tags para parsear. Ele retorna uma instância de ``django.template.NodeList``,  que é uma lista de todos os objetos ``Node`` que o analisador encontrou \"antes\" que tenha encontrado qualquer nome de tags na tupla."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1168
msgid ""
"In ``\"nodelist = parser.parse(('endcomment',))\"`` in the above example, "
"``nodelist`` is a list of all nodes between the ``{% comment %}`` and ``{% "
"endcomment %}``, not counting ``{% comment %}`` and ``{% endcomment %}`` "
"themselves."
msgstr "Em ``\"nodelist = parser.parse(('endcomment',))\"`` no exemplo acima, ``nodelist`` é uma lista de todos os nós entre o``{% comment %}`` e ``{% endcomment %}``, sem contar os próprios ``{% comment %}`` e ``{% endcomment %}``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1173
msgid ""
"After ``parser.parse()`` is called, the parser hasn't yet \"consumed\" the "
"``{% endcomment %}`` tag, so the code needs to explicitly call "
"``parser.delete_first_token()``."
msgstr "Depois que ``parser.parse()`` é chamado, o analisaor sintático ainda não \"consumiu\" a tag ``{% endcomment %}``, então o código precisa chamar explicitamente o ``parser.delete_first_token()``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1177
msgid ""
"``CommentNode.render()`` simply returns an empty string. Anything between "
"``{% comment %}`` and ``{% endcomment %}`` is ignored."
msgstr "``CommentNode.render()`` simplesmente retorna uma string vazia. Qualquer coisa entre ``{% comment %}`` e ``{% endcomment %}`` é ignorado."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1181
msgid "Parsing until another block tag, and saving contents"
msgstr "Analisando sintaticamente até um outro bloco da tag, e armazenando seu conteúdo."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1183
msgid ""
"In the previous example, ``do_comment()`` discarded everything between ``{% "
"comment %}`` and ``{% endcomment %}``. Instead of doing that, it's possible "
"to do something with the code between block tags."
msgstr "No exemplo anterior, ``do_comment()`` descartou tudo entre``{% comment %}`` e ``{% endcomment %}``. Ao invés de fazer isso, é possível fazer alguma coisa com o código que está dentro do bloco de tags."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1187
msgid ""
"For example, here's a custom template tag, ``{% upper %}``, that capitalizes"
" everything between itself and ``{% endupper %}``."
msgstr "Por exemplo, aqui uma tag de template, ``{% upper %}``, que coloca todas as letras em maiúsculo de tudo entre ela e  ``{% endupper %}``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1190
msgid "Usage:"
msgstr "Uso:"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1196
msgid ""
"As in the previous example, we'll use ``parser.parse()``. But this time, we "
"pass the resulting ``nodelist`` to the ``Node``::"
msgstr "Como no exemplo anterior, usaremos ``parser.parse()``. Mas agora, passamos o ``nodelist`` resultante para o ``Node``::"

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1211
msgid ""
"The only new concept here is the ``self.nodelist.render(context)`` in "
"``UpperNode.render()``."
msgstr "O único conceito novo aqui é o ``self.nodelist.render(context)`` no ``UpperNode.render()``."

#: ../../../../sources/1.9/docs/howto/custom-template-tags.txt:1214
msgid ""
"For more examples of complex rendering, see the source code of :ttag:`{% for"
" %}<for>` in ``django/template/defaulttags.py`` and :ttag:`{% if %}<if>` in "
"``django/template/smartif.py``."
msgstr "Para mais exemplos de renderização mais complexas, veja o código fonte da :ttag:`{% for %}<for>` em ``django/template/defaulttags.py`` e :ttag:`{% if %}<if>` em ``django/template/smartif.py``."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:3
msgid "Deployment checklist"
msgstr "Lista de verificação para distribuição"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:5
msgid ""
"The Internet is a hostile environment. Before deploying your Django project,"
" you should take some time to review your settings, with security, "
"performance, and operations in mind."
msgstr "A internet é um ambiente hostil. Antes de distribuir um projeto Django, você deve perder algum tempo para revisar suas configurações, com segurança, desempenho, e operações em mente."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:9
msgid ""
"Django includes many :doc:`security features </topics/security>`. Some are "
"built-in and always enabled. Others are optional because they aren't always "
"appropriate, or because they're inconvenient for development. For example, "
"forcing HTTPS may not be suitable for all websites, and it's impractical for"
" local development."
msgstr "O Django inclui muitos :doc:`security features </topics/security>`. Agumas são embutidas e sempre habilitadas. Outras são opcionais porque nem sempre são apropriadas, ou porque são inconvenientes para desenvolvimento. Por exemplo, forçar HTTPS talvez não seja bom para todos os websites e não prático para desenvolvimento local."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:15
msgid ""
"Performance optimizations are another category of trade-offs with "
"convenience. For instance, caching is useful in production, less so for "
"local development. Error reporting needs are also widely different."
msgstr "Otimização de desempenho são outra categoria de \"perde-ganha\" com a conveniência. Por exemplo, \"cache\" é útil em produção, mas não em desenvolvimento. Necessidades de relatórios de erros também são amplamente diferentes."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:19
msgid "The following checklist includes settings that:"
msgstr "As seguinte lista de verificação inclui configurações que:"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:21
msgid ""
"must be set properly for Django to provide the expected level of security;"
msgstr "devem ser configuradas propriamente para que o Django fornece o nível esperado de segurança."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:22
msgid "are expected to be different in each environment;"
msgstr "espera-se que sejam diferentes  em cada ambiente."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:23
msgid "enable optional security features;"
msgstr "habilitam características de segurança opcionais;"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:24
msgid "enable performance optimizations;"
msgstr "habilitam otimização de desempenho."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:25
msgid "provide error reporting."
msgstr "fornece relatório de erro."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:27
msgid ""
"Many of these settings are sensitive and should be treated as confidential. "
"If you're releasing the source code for your project, a common practice is "
"to publish suitable settings for development, and to use a private settings "
"module for production."
msgstr "Muitas destas configurações são sensíveis e devem ser tratadas confidencialmente. Se você está publicando o código fonte do seu projeto, uma prática comum é publicar configurações adequadas para desenvolvimento, e usar o módulo de configuração para produção."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:33
msgid "Run ``manage.py check --deploy``"
msgstr "Execute ``manage.py check --deploy``"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:35
msgid ""
"Some of the checks described below can be automated using the :option:`check"
" --deploy` option. Be sure to run it against your production settings file "
"as described in the option's documentation."
msgstr "Algumas das verificações descritas abaixo podem ser automatizadas usando a opção :option:`check --deploy`. Assegure-se de executá-lo com o arquivo de configuração como descrito  na documentação de configuração."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:40
msgid "Critical settings"
msgstr "Configurações críticas."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:43
msgid ":setting:`SECRET_KEY`"
msgstr ":setting:`SECRET_KEY`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:45
msgid ""
"**The secret key must be a large random value and it must be kept secret.**"
msgstr "**A chave secreta deve ser um valor randômico e longo e deve ser mantido em segredo**"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:47
msgid ""
"Make sure that the key used in production isn't used anywhere else and avoid"
" committing it to source control. This reduces the number of vectors from "
"which an attacker may acquire the key."
msgstr "Tenha ceteza que a chave usada em produção não é usada em nenhum outro local e evite \"commitar\" isso no código fonte. Isso reduz o número de vetores dos quais um atacante possa acessar a chave."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:51
msgid ""
"Instead of hardcoding the secret key in your settings module, consider "
"loading it from an environment variable::"
msgstr "Ao invés de \"hardecodear\" a chave secreta no módulo de configuração, considere carrega-lo de uma variável de ambiente::"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:57
msgid "or from a file::"
msgstr "ou de um arquivo::"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:63
msgid ":setting:`DEBUG`"
msgstr ":setting:`DEBUG`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:65
msgid "**You must never enable debug in production.**"
msgstr "**Nunca habilite o debug em produção**"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:67
msgid ""
"You're certainly developing your project with :setting:`DEBUG = True "
"<DEBUG>`, since this enables handy features like full tracebacks in your "
"browser."
msgstr "Certamente você desenvolvimento seu projeto com  :setting:`DEBUG = True <DEBUG>`, já que isso habilita características convenientes como \"tracebakcs\" no seu browser."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:70
msgid ""
"For a production environment, though, this is a really bad idea, because it "
"leaks lots of information about your project: excerpts of your source code, "
"local variables, settings, libraries used, etc."
msgstr "Para o ambiente de produção, embora, isso é realmente uma má idéia, porque ele abre uma série de informações sobre seu projeto: dicas de seu código fonte, variáveis locais, configurações, bibliotecas usadas, etc."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:75
msgid "Environment-specific settings"
msgstr "Configurações específicas de configurações"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:78
msgid ":setting:`ALLOWED_HOSTS`"
msgstr ":setting:`ALLOWED_HOSTS`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:80
msgid ""
"When :setting:`DEBUG = False <DEBUG>`, Django doesn't work at all without a "
"suitable value for :setting:`ALLOWED_HOSTS`."
msgstr "Quando :setting:`DEBUG = False <DEBUG>`, o Django não irá funcionar de maneira alguma sem um valor adequado para o :setting:`ALLOWED_HOSTS`."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:83
msgid ""
"This setting is required to protect your site against some CSRF attacks. If "
"you use a wildcard, you must perform your own validation of the ``Host`` "
"HTTP header, or otherwise ensure that you aren't vulnerable to this category"
" of attacks."
msgstr "Essa configuração é requerida para proteger seu site de ataques CSRF. Se usar um caracter corínga, você deve fazer sua própria validação do cabeçalho HTTP do ``Host``, ou de outra maneira tenha certeza que você não está vulnerável a esse tipo de ataque."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:88
msgid ""
"You should also configure the Web server that sits in front of Django to "
"validate the host. It should respond with a static error page or ignore "
"requests for incorrect hosts instead of forwarding the request to Django. "
"This way you'll avoid spurious errors in your Django logs (or emails if you "
"have error reporting configured that way). For example, on nginx you might "
"setup a default server to return \"444 No Response\" on an unrecognized "
"host:"
msgstr "Deve-se também configurar o servidor Web que está a frente do Django para validar o host. Ele deve responder com um erro de página estática ou ignorar a requisição para hosts incorretos ao invés de repassar o request para o Django. Desta maneira evitará erros espurios no seu log do Django (ou emails se tiver configurado para isso). Por exemplo, no nginx talvez configure o servidor padrão para retornar \"444 no response\" quando host não reconhecido:"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:103
msgid ":setting:`CACHES`"
msgstr ":setting:`CACHES`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:105
msgid ""
"If you're using a cache, connection parameters may be different in "
"development and in production."
msgstr "Se está usando \"cache\", parâmetros de conexões talvez sejam diferentes em desenvolvimento e em produção."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:108
msgid ""
"Cache servers often have weak authentication. Make sure they only accept "
"connections from your application servers."
msgstr "Servidores de \"cache\" tem em geral uma autenticação fraca. Assegure-se que somente aceite conexões de seus servidores de aplicações."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:111
msgid ""
"If you're using Memcached, consider using :ref:`cached sessions <cached-"
"sessions-backend>` to improve performance."
msgstr "Se estiver usando Memcached, considere usar :ref:`sessões cacheadas <cached-sessions-backend>`  para melhorar o desempenho."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:115
msgid ":setting:`DATABASES`"
msgstr ":setting:`DATABASES`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:117
msgid ""
"Database connection parameters are probably different in development and in "
"production."
msgstr "Parâmetros de conexões de bancos de dados são provavelmente diferentes em desenvolvimento e em produção."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:120
msgid ""
"Database passwords are very sensitive. You should protect them exactly like "
":setting:`SECRET_KEY`."
msgstr "Senhas de bancos de dados são muito sensíveis. Você deve protegê-las tal como o :setting:`SECRET_KEY`."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:123
msgid ""
"For maximum security, make sure database servers only accept connections "
"from your application servers."
msgstr "Para máxima segurança, certifique que os servidores de bancos de dados somente aceitem conexões de seus servidores de aplicação."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:126
msgid "If you haven't set up backups for your database, do it right now!"
msgstr "Se não configurou backup para seu banco de dados, faça isso já!"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:129
msgid ":setting:`EMAIL_BACKEND` and related settings"
msgstr ":setting:`EMAIL_BACKEND` e configurações relacionadas"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:131
msgid "If your site sends emails, these values need to be set correctly."
msgstr "Se seu site envia e-mails, estes valores precisam ser definidos corretamente."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:133
msgid ""
"By default, Django sends email from webmaster@localhost and root@localhost. "
"However, some mail providers reject email from these addresses. To use "
"different sender addresses, modify the :setting:`DEFAULT_FROM_EMAIL` and "
":setting:`SERVER_EMAIL` settings."
msgstr "Por padrão, o Django envia email de webmaster@localhost e root@localhost. Entretanto, alguns provedores de email rejeitam emails destes endereços. Para usar endereços de envio diferentes, modifique as configurações :setting:`DEFAULT_FROM_EMAIL` e :setting:`SERVER_EMAIL` ."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:139
msgid ":setting:`STATIC_ROOT` and :setting:`STATIC_URL`"
msgstr ":setting:`STATIC_ROOT` e :setting:`STATIC_URL`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:141
msgid ""
"Static files are automatically served by the development server. In "
"production, you must define a :setting:`STATIC_ROOT` directory where "
":djadmin:`collectstatic` will copy them."
msgstr "Arquivos estáticos são automaticamente servidos pelo servidor de desenvolvimento. Em produção, você deve definir o diretório :setting:`STATIC_ROOT` onde o :djadmin:`collectstatic` irá copiá-los."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:145
msgid "See :doc:`/howto/static-files/index` for more information."
msgstr "Veja :doc:`/howto/static-files/index` para mais informações."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:148
msgid ":setting:`MEDIA_ROOT` and :setting:`MEDIA_URL`"
msgstr ":setting:`MEDIA_ROOT` e :setting:`MEDIA_URL`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:150
msgid ""
"Media files are uploaded by your users. They're untrusted! Make sure your "
"web server never attempt to interpret them. For instance, if a user uploads "
"a ``.php`` file , the web server shouldn't execute it."
msgstr "Arquivos de media são enviados por usuários. Não são confiáveis! Assegure-se que seu servidor web nunca tente interpretá-los. Por exemplo, se um usuário enviar um arquivo ``.php``, o servidor web não deve executá-lo."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:154
msgid "Now is a good time to check your backup strategy for these files."
msgstr "Agora é uma boa hora para verificar sua estratégia de backup para estes arquivos."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:157
msgid "HTTPS"
msgstr "HTTPS"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:159
msgid ""
"Any website which allows users to log in should enforce site-wide HTTPS to "
"avoid transmitting access tokens in clear. In Django, access tokens include "
"the login/password, the session cookie, and password reset tokens. (You "
"can't do much to protect password reset tokens if you're sending them by "
"email.)"
msgstr "Qualquer website que possibilita autenticação de usuários deveria exigir HTTPS em todo o site para evitar a transmissão de tokens planos. No Djano, os tokes de acesso incluem o login/senha, a \"cookie\" da sessão e o token de reset de senha. (Não é possível fazer muito para proteger bem os tokens de reset de senha se são enviados via email)."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:164
msgid ""
"Protecting sensitive areas such as the user account or the admin isn't "
"sufficient, because the same session cookie is used for HTTP and HTTPS. Your"
" web server must redirect all HTTP traffic to HTTPS, and only transmit HTTPS"
" requests to Django."
msgstr "Proteger áreas sensíveis como a conta do usuário e o admin não são sificientes, porque o mesmo \"cookie\" de sessão é usado para HTTP e HTTPS. Seu servidor WEB deve redirecionar todas as requisições HTTP para HTTPS, e somente transmitir requests HTTPS para o Django."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:169
msgid "Once you've set up HTTPS, enable the following settings."
msgstr "Uma vez que tenha configurado HTTPS, habilite as seguintes configurações."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:172
msgid ":setting:`CSRF_COOKIE_SECURE`"
msgstr ":setting:`CSRF_COOKIE_SECURE`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:174
msgid ""
"Set this to ``True`` to avoid transmitting the CSRF cookie over HTTP "
"accidentally."
msgstr "Defina este como ``True`` para evitar transmissão do \"cookie\" de CSRF através de HTTP acidentalmente."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:178
msgid ":setting:`SESSION_COOKIE_SECURE`"
msgstr ":setting:`SESSION_COOKIE_SECURE`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:180
msgid ""
"Set this to ``True`` to avoid transmitting the session cookie over HTTP "
"accidentally."
msgstr "Defina este como ``True`` para evitar transmissão do \"cookie\" da sessão através de HTTP acidentalmente."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:184
msgid "Performance optimizations"
msgstr "Otimizações de desempenho."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:186
msgid ""
"Setting :setting:`DEBUG = False <DEBUG>` disables several features that are "
"only useful in development. In addition, you can tune the following "
"settings."
msgstr "A Configuração :setting:`DEBUG = False <DEBUG>` desabilita muitas características que são úteis somente em desenvolvimento. Além disso, você pode ajustar as seguintes configurações."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:190
msgid ":setting:`CONN_MAX_AGE`"
msgstr ":setting:`CONN_MAX_AGE`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:192
msgid ""
"Enabling :ref:`persistent database connections <persistent-database-"
"connections>` can result in a nice speed-up when connecting to the database "
"accounts for a significant part of the request processing time."
msgstr "Habilitando :ref:`persistent database connections <persistent-database-connections>` pode resultar em um bom aumento de velocidade no tempo de processamento de requisições quando se conecta a contas do banco de dados."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:197
msgid ""
"This helps a lot on virtualized hosts with limited network performance."
msgstr "Isso ajuda muito os Hosts virtualizados com desempenho de network limitado."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:200
msgid ":setting:`TEMPLATES`"
msgstr ":setting:`TEMPLATES`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:202
msgid ""
"Enabling the cached template loader often improves performance drastically, "
"as it avoids compiling each template every time it needs to be rendered. See"
" the :ref:`template loaders docs <template-loaders>` for more information."
msgstr "Habilitando o cache do carregador de \"templates\" muitas vezes aumenta o desempenho dramaticamente, já que isso evita compilar cada template todas as vezes que precisa ser renderizado. Veja o :ref:`template loaders docs <template-loaders>` para mais informações. "

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:207
#: ../../../../sources/1.9/docs/howto/error-reporting.txt:3
msgid "Error reporting"
msgstr "Relatório de erro"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:209
msgid ""
"By the time you push your code to production, it's hopefully robust, but you"
" can't rule out unexpected errors. Thankfully, Django can capture errors and"
" notify you accordingly."
msgstr "Na hora em que o código é enviado para produção, espera-se robustez, mas não podemos ter erros inexperados. Menos mal, o Django pode capturar estes erros e noticá-los de acordo."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:214
msgid ":setting:`LOGGING`"
msgstr ":setting:`LOGGING`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:216
msgid ""
"Review your logging configuration before putting your website in production,"
" and check that it works as expected as soon as you have received some "
"traffic."
msgstr "Reveja a sua configuração de log antes de colocar seu website em produção, e verifique se este está funcionando como esperado tão logo receba algum tráfego."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:219
msgid "See :doc:`/topics/logging` for details on logging."
msgstr "Veja :doc:`/topics/logging` para detalhes de log."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:222
msgid ":setting:`ADMINS` and :setting:`MANAGERS`"
msgstr ":setting:`ADMINS` e :setting:`MANAGERS`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:224
msgid ":setting:`ADMINS` will be notified of 500 errors by email."
msgstr ":setting:`ADMINS` será notificado de erros to tipo 500 por email."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:226
msgid ""
":setting:`MANAGERS` will be notified of 404 errors. "
":setting:`IGNORABLE_404_URLS` can help filter out spurious reports."
msgstr ":setting:`MANAGERS` serão notificados de erros do tipo 404. :setting:`IGNORABLE_404_URLS` pode ajudar a filtrar erros ilegítimos."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:229
msgid ""
"See :doc:`/howto/error-reporting` for details on error reporting by email."
msgstr "Veja :doc:`/howto/error-reporting` para detalhes sobre relatórios de erros por email."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:231
msgid "Error reporting by email doesn't scale very well"
msgstr "Relatórios de erros por email não escalam muito bem."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:233
msgid ""
"Consider using an error monitoring system such as Sentry_ before your inbox "
"is flooded by reports. Sentry can also aggregate logs."
msgstr "Considere usar um sistema de monitoramento de erros tal como o Sentry_ antes que sua caixa postal seja cheia de relatórios. O Sentry pode também agregar logs."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:239
msgid "Customize the default error views"
msgstr "Customize as views de erro padrão"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:241
msgid ""
"Django includes default views and templates for several HTTP error codes. "
"You may want to override the default templates by creating the following "
"templates in your root template directory: ``404.html``, ``500.html``, "
"``403.html``, and ``400.html``. The default views should suffice for 99% of "
"Web applications, but if you desire to customize them, see these "
"instructions which also contain details about the default templates:"
msgstr "O Django inclui várias \"views\" e \"templates\" padrão para vários erros HTTP. Talvez você queira sobrescrever os templates padrão criando os seguintes templates na raiz do seu diretório de template: ``404.html``, ``500.html``, ``403.html``, and ``400.html``. As \"views\" padrão devem bastar para 99% das aplicações Web, mas se desejar customizá-las, veja essas instruções as quais também contém detalhes sobre os templates padrão."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:248
msgid ":ref:`http_not_found_view`"
msgstr ":ref:`http_not_found_view`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:249
msgid ":ref:`http_internal_server_error_view`"
msgstr ":ref:`http_internal_server_error_view`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:250
msgid ":ref:`http_forbidden_view`"
msgstr ":ref:`http_forbidden_view`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:251
msgid ":ref:`http_bad_request_view`"
msgstr ":ref:`http_bad_request_view`"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:254
msgid "Python Options"
msgstr "Opções Python"

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:256
msgid ""
"It's strongly recommended that you invoke the Python process running your "
"Django application using the `-R`_ option or with the "
":envvar:`PYTHONHASHSEED` environment variable set to ``random``. This option"
" is enabled by default starting with Python 3.3."
msgstr "É fortemente recomendável que os processos Python que executam a aplicação Django use a opção `-R` ou com a variável de ambiente :envvar:`PYTHONHASHSEED` definida como ``random``. Essa opção está por padrão habilitada a começar com o Python 3.3."

#: ../../../../sources/1.9/docs/howto/deployment/checklist.txt:261
msgid ""
"These options help protect your site from denial-of-service (DoS) attacks "
"triggered by carefully crafted inputs. Such an attack can drastically "
"increase CPU usage by causing worst-case performance when creating ``dict`` "
"instances. See `oCERT advisory #2011-003 "
"<http://www.ocert.org/advisories/ocert-2011-003.html>`_ for more "
"information."
msgstr "Essas opções ajudam a proteger seu site de ataques de \"negação de serviço\" (DoS) disparados por entradas cuidadosamente elaboradas. Como um ataque que pode aumentar drasticamente o uso da CPU causando um cenário de pior desempenho quando cria instâncias de ``dict``. Veja  `oCERT advisory #2011-003 <http://www.ocert.org/advisories/ocert-2011-003.html>`_ para mais informações."

#: ../../../../sources/1.9/docs/howto/deployment/index.txt:3
msgid "Deploying Django"
msgstr "Implantação Django"

#: ../../../../sources/1.9/docs/howto/deployment/index.txt:5
msgid ""
"Django's chock-full of shortcuts to make Web developer's lives easier, but "
"all those tools are of no use if you can't easily deploy your sites. Since "
"Django's inception, ease of deployment has been a major goal."
msgstr "O Django está repleto de atalhos para fazer a vida dos desenvolvedores mais fácil, mas todas essas ferramentas não tem serventia se você não pode facilmente implantar seus sites. desde o começo do Django, a facilidade de implantação tem sido seu maior objetivo."

#: ../../../../sources/1.9/docs/howto/deployment/index.txt:15
msgid ""
"If you're new to deploying Django and/or Python, we'd recommend you try "
":doc:`mod_wsgi </howto/deployment/wsgi/modwsgi>` first. In most cases it'll "
"be the easiest, fastest, and most stable deployment choice."
msgstr "Se você é novo na implantação de Django e/ou Python, recomendamos que tente primeiro doc:`mod_wsgi </howto/deployment/wsgi/modwsgi>`. Na maioria dos casos esta será a mais fácil, rápida e mais estável escolha para implantação."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:3
#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:236
msgid "Authenticating against Django's user database from Apache"
msgstr "Autenticação do usuário Django vindo do Apache."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:5
msgid ""
"Since keeping multiple authentication databases in sync is a common problem "
"when dealing with Apache, you can configure Apache to authenticate against "
"Django's :doc:`authentication system </topics/auth/index>` directly. This "
"requires Apache version >= 2.2 and mod_wsgi >= 2.0. For example, you could:"
msgstr "Uma vez que manter múltiplos banco de dados de autenticação é um problema comum quando se trata do Apache, você pode configurar o Apache para autenticar diretamente no Django :doc:`authentication system </topics/auth/index>`. Isso requer o Apache versão >= 2.2 e mod_wsgi >= 2.0. Por exemplo você poderia:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:10
msgid ""
"Serve static/media files directly from Apache only to authenticated users."
msgstr "Servir arquivos estáticos/media diretamente do Apache para usuários autenticados"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:12
msgid ""
"Authenticate access to a Subversion_ repository against Django users with a "
"certain permission."
msgstr "Autenticar o acesso a um respositório Subversion_ para usuários Django com uma certa permissão."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:15
msgid ""
"Allow certain users to connect to a WebDAV share created with mod_dav_."
msgstr "Possibilita certos usuários a conectar a um compartilhamento WebDav criado com mod_dav_."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:18
msgid ""
"If you have installed a :ref:`custom User model <auth-custom-user>` and want"
" to use this default auth handler, it must support an ``is_active`` "
"attribute. If you want to use group based authorization, your custom user "
"must have a relation named 'groups', referring to a related object that has "
"a 'name' field. You can also specify your own custom mod_wsgi auth handler "
"if your custom cannot conform to these requirements."
msgstr "Se você instalou um  :ref:`custom User model <auth-custom-user>` e quer usar a autenticador padrão, ele tem que ter um atributo ``is_active``. Se quer usar autoriações baseadas em \"grupo\", seu usuário personalizado deve ter uma relação chamada 'groups', referenciando um objeto relacional que tenha o campo 'name'. Você ainda pode especificar seu próprio autenticador mod_wsgi personalizado se sua personalização não puder atingir esses requerimentos. "

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:29
msgid "Authentication with ``mod_wsgi``"
msgstr "Autenticação com ``mod_wsgi``"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:33
msgid ""
"The use of ``WSGIApplicationGroup %{GLOBAL}`` in the configurations below "
"presumes that your Apache instance is running only one Django application. "
"If you are running more than one Django application, please refer to the "
"`Defining Application Groups`_ section of the mod_wsgi docs for more "
"information about this setting."
msgstr "O uso do ``WSGIApplicationGroup %{GLOBAL}`` nas configurações abaixo presume que a instância de Apache está rodando somente uma aplicação Django. Se estiver rodando mais de uma aplicação Django, por favor refira-se a seção `Defining Application Groups`_ da documentaçao mod_wsgi para maiores informações sobre essa configuração."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:39
msgid ""
"Make sure that mod_wsgi is installed and activated and that you have "
"followed the steps to setup :doc:`Apache with mod_wsgi "
"</howto/deployment/wsgi/modwsgi>`."
msgstr "Certifique-se que o mod_wsgi está instalado e ativo e que seguiu os passos para configuração  :doc:`Apache with mod_wsgi </howto/deployment/wsgi/modwsgi>`."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:43
msgid ""
"Next, edit your Apache configuration to add a location that you want only "
"authenticated users to be able to view:"
msgstr "Depois, altere a configuração do Apache para adicionar um local que queira que somente usuários autenticados sejam capazes de ver:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:62
msgid ""
"The ``WSGIAuthUserScript`` directive tells mod_wsgi to execute the "
"``check_password`` function in specified wsgi script, passing the user name "
"and password that it receives from the prompt. In this example, the "
"``WSGIAuthUserScript`` is the same as the ``WSGIScriptAlias`` that defines "
"your application :doc:`that is created by django-admin startproject "
"</howto/deployment/wsgi/index>`."
msgstr "A diretiva ``WSGIAuthUserScript`` diz ao mod_wsgi para executar função ``check_password`` no script  wsgi especificado, passando o usuário e senha que recebeu do \"prompt\". Neste exemplo, o ``WSGIAuthUserScript`` é o mesmo que o ``WSGIScriptAlias`` que é quem define sua aplicação :doc:`that is created by django-admin startproject </howto/deployment/wsgi/index>`."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:69
msgid "Using Apache 2.2 with authentication"
msgstr "Usando Apache 2.2 com autenticação"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:71
msgid "Make sure that ``mod_auth_basic`` and ``mod_authz_user`` are loaded."
msgstr "Certifique-se que ``mod_auth_basic`` e o ``mod_authz_user`` estão \"carregados\"."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:73
msgid ""
"These might be compiled statically into Apache, or you might need to use "
"LoadModule to load them dynamically in your ``httpd.conf``:"
msgstr "Esses podem ser compilados estaticamente dentro do Apache, ou é necessário usar o LoadModule para carregá-los dinamicamente no seu ``httpd.conf``:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:81
msgid ""
"Finally, edit your WSGI script ``mysite.wsgi`` to tie Apache's "
"authentication to your site's authentication mechanisms by importing the "
"``check_password`` function::"
msgstr "Finalmente, altere seu script WSGI ``mysite.wsgi`` para conectar a autenticação do Apache ao mecanismo de autenticação do seu site importando a função ``check_password``::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:95
msgid ""
"Requests beginning with ``/secret/`` will now require a user to "
"authenticate."
msgstr "Requisições começando com ``/secret/`` não requererão autenticação do usuário."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:97
msgid ""
"The mod_wsgi `access control mechanisms documentation`_ provides additional "
"details and information about alternative methods of authentication."
msgstr "O mod_wsgi `access control mechanisms documentation`_ fornece detalhes adicionais e finromações sobre métodos alternativos de autenticação."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:104
msgid "Authorization with ``mod_wsgi`` and Django groups"
msgstr "Autorização co ``mod_wsgi`` e grupos do Django"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:106
msgid ""
"mod_wsgi also provides functionality to restrict a particular location to "
"members of a group."
msgstr "O mod_wsgi também fornece funcionalidade para restringir  membros de um grupo a um local particular."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:109
msgid "In this case, the Apache configuration should look like this:"
msgstr "Neste caso, a configuração do Apache se pareça com essa:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:128
msgid ""
"To support the ``WSGIAuthGroupScript`` directive, the same WSGI script "
"``mysite.wsgi`` must also import the ``groups_for_user`` function which "
"returns a list groups the given user belongs to."
msgstr "Para suportar a diretiva ``WSGIAuthGroupScript``, o mesmo script WSGI ``mysite.wsgi`` deve importar também a função  ``groups_for_user`` que retorna uma lista de grupos aos quais o usuário pertence."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/apache-auth.txt:136
msgid ""
"Requests for ``/secret/`` will now also require user to be a member of the "
"\"secret-agents\" group."
msgstr "Agora as requisições para ``/secret/`` irão requerer que o usuário seja membro do grupo \"secret-agents\"."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:3
msgid "How to use Django with Gunicorn"
msgstr "Como usar o Django com o Gunicorn"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:7
msgid ""
"Gunicorn_ ('Green Unicorn') is a pure-Python WSGI server for UNIX. It has no"
" dependencies and is easy to install and use."
msgstr "O Gunicorn_ ('Green Unicorn') é um seridor WSGI para Unix feito em Python puro. Ele não tem depedências e é fácil de instalar e usar."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:13
msgid "Installing Gunicorn"
msgstr "Instalando o Gunicorn"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:15
msgid ""
"Installing gunicorn is as easy as ``pip install gunicorn``. For more "
"details, see the `gunicorn documentation`_."
msgstr "Instalar o Gunicorn é tão fácil quando ``pip install gunicorn``.  Para mais detalhes, veja a `gunicorn documentation`_."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:21
msgid "Running Django in Gunicorn as a generic WSGI application"
msgstr "Rodando Django em Gunicorn como  uma aplicação WSGI genérica."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:23
msgid ""
"When Gunicorn is installed, a ``gunicorn`` command is available which starts"
" the Gunicorn server process. At its simplest, gunicorn just needs to be "
"called with the location of a module containing a WSGI application object "
"named `application`. So for a typical Django project, invoking gunicorn "
"would look like::"
msgstr "Quando Gunicorn é instalado, um comando ``gunicorn`` é disponibilizado para iniciar o o processo servidor do Gunicorn. Na sua forma mais simples, gunicorn somente precisa ser chamado com a localização do módulo contendo o objeto da aplicação WSGI nomeado `application`. Então para um típico projeto Django, chamar o gunicorn deve parecer com::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:31
msgid ""
"This will start one process running one thread listening on "
"``127.0.0.1:8000``. It requires that your project be on the Python path; the"
" simplest way to ensure that is to run this command from the same directory "
"as your ``manage.py`` file."
msgstr "Isso irá iniciar um processo de uma thread escutando na ``127.0.0.1:8000``. Isso requer que seu projeto esteja no path Python; a maneira mais simples de verificar isso é rodar este comando do memso diretório que seu arquivo ``manage.py``"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/gunicorn.txt:35
msgid "See Gunicorn's `deployment documentation`_ for additional tips."
msgstr "Veja a  `deployment documentation`_  do Gunicorn para dicas adicionais"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:3
msgid "How to deploy with WSGI"
msgstr "Como implantar com WSGI"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:5
msgid ""
"Django's primary deployment platform is WSGI_, the Python standard for web "
"servers and applications."
msgstr "A principal plataforma de implantação do Django é WSGI_, o padrão Python para servidores web e aplicações."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:10
msgid ""
"Django's :djadmin:`startproject` management command sets up a simple default"
" WSGI configuration for you, which you can tweak as needed for your project,"
" and direct any WSGI-compliant application server to use."
msgstr "O comando de gerenciamento do Django :djadmin:`startproject` define uma configuração  WSGI simples padrão para você, que você pode ajustar conforme necessário para o seu projeto , e direcionar qualquer servidor de aplicações compatível com WSGI para uso."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:14
msgid ""
"Django includes getting-started documentation for the following WSGI "
"servers:"
msgstr "O Django inclui documentação básica para os seguintes seervidores WSGI:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:25
msgid "The ``application`` object"
msgstr "O objeto ``Application``"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:27
msgid ""
"The key concept of deploying with WSGI is the ``application`` callable which"
" the application server uses to communicate with your code. It's commonly "
"provided as an object named ``application`` in a Python module accessible to"
" the server."
msgstr "O conceito chave para implantação com WSGI é o executável ``application`` o qual o servidor de aplicação usa para se comunicar com seu código. Isso é comumente fornecido como um objeto chamado ``application`` em um módulo Python acessível ao servidor."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:32
msgid ""
"The :djadmin:`startproject` command creates a file "
":file:`<project_name>/wsgi.py` that contains such an ``application`` "
"callable."
msgstr "O comando :djadmin:`startproject` cria um arquivo  :file:`<project_name>/wsgi.py` que contém a tal ``application`` executável. "

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:35
msgid ""
"It's used both by Django's development server and in production WSGI "
"deployments."
msgstr "Ele é usado tanto para o servidor de desenvolvimento do Django quanto para a implantação WSGI para produção."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:38
msgid ""
"WSGI servers obtain the path to the ``application`` callable from their "
"configuration. Django's built-in server, namely the :djadmin:`runserver` "
"command, read it from the :setting:`WSGI_APPLICATION` setting. By default, "
"it's set to ``<project_name>.wsgi.application``, which points to the "
"``application`` callable in :file:`<project_name>/wsgi.py`."
msgstr "Servidores WSGI obtem o caminho para o executável ``application``  a partir da sua configuração. O servidor embutido do Django, nomeadamente o comando :djadmin:`runserver`, lê isso da configuração do :setting:`WSGI_APPLICATION`. Por padrão, é definido pelo  ``<project_name>.wsgi.application``, o qual aponta para o executável  ``application`` em :file:`<project_name>/wsgi.py`."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:45
msgid "Configuring the settings module"
msgstr "Configurando o módulo de definições."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:47
msgid ""
"When the WSGI server loads your application, Django needs to import the "
"settings module — that's where your entire application is defined."
msgstr "QUando o servidor WSGI carrega sua aplicação, o Django precisa importar o módulo de definições que é onde toda a sua aplicação é definida."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:50
msgid ""
"Django uses the :envvar:`DJANGO_SETTINGS_MODULE` environment variable to "
"locate the appropriate settings module. It must contain the dotted path to "
"the settings module. You can use a different value for development and "
"production; it all depends on how you organize your settings."
msgstr "O Django usa a variável de ambiente :envvar:`DJANGO_SETTINGS_MODULE` para localizar o módulo de definições apropriado. Este deve conter um caminho pontuado para o módulo de definições. Você pode usar um valor diferente para desenvolvimento e produção; Tudo depende de como você organiza suas definições."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:55
msgid ""
"If this variable isn't set, the default :file:`wsgi.py` sets it to "
"``mysite.settings``, where ``mysite`` is the name of your project. That's "
"how :djadmin:`runserver` discovers the default settings file by default."
msgstr "Se essa variáve não está setada, o padrão :file:`wsgi.py` define isso como ``mysite.settings``, onde ``mysite`` é o nome do seu projeto. Assim é o padrão de como o :djadmin:`runserver` descobre o arquivo de definições padrão."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:61
msgid ""
"Since environment variables are process-wide, this doesn't work when you run"
" multiple Django sites in the same process. This happens with mod_wsgi."
msgstr "Uma vez que as variáveis de ambiente são para todo o processo, isso não funciona quando você executa múltiplos Django sites  no mesmo processo. Isso acontece com mod_wsgi."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:64
msgid ""
"To avoid this problem, use mod_wsgi's daemon mode with each site in its own "
"daemon process, or override the value from the environment by enforcing "
"``os.environ[\"DJANGO_SETTINGS_MODULE\"] = \"mysite.settings\"`` in your "
":file:`wsgi.py`."
msgstr "Para evitar este problema, use o daemon do mod_wsgi com cada site em seu próprio processo, ou substitua  o valor do ambiente forçando ``os.environ[\"DJANGO_SETTINGS_MODULE\"] = \"mysite.settings\"`` no seu :file:`wsgi.py`."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:71
msgid "Applying WSGI middleware"
msgstr "Aplicando o middleware WSGI"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:73
msgid ""
"To apply `WSGI middleware`_ you can simply wrap the application object. For "
"instance you could add these lines at the bottom of :file:`wsgi.py`::"
msgstr "Pra aplicar o `WSGI middleware`_ você pode simplesmente envolver o objeto da aplicação. Por exemplo, você pode adicionar essas linhas no final do  :file:`wsgi.py`::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:79
msgid ""
"You could also replace the Django WSGI application with a custom WSGI "
"application that later delegates to the Django WSGI application, if you want"
" to combine a Django application with a WSGI application of another "
"framework."
msgstr "Poderia também substituir a aplicação WSGI Django por uma aplicação WSGI que mais tarde delega à aplicação WSGI Django, se quiser combinar uma aplicação Django com uma aplicação WSGI de um outro framework."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/index.txt:87
msgid ""
"Some third-party WSGI middleware do not call ``close`` on the response "
"object after handling a request. In those cases the "
":data:`~django.core.signals.request_finished` signal isn't sent. This can "
"result in idle connections to database and memcache servers."
msgstr "Algumas middleware WSGI de terceiros não chamam ``close`` no objeto de resposta depois de manipular um request. Nestes casos o sinal :data:`~django.core.signals.request_finished` não é enviado. Isso pode resultar em conexões inativas no banco e em servidores memcache."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:3
msgid "How to use Django with Apache and ``mod_wsgi``"
msgstr "Como usar o Django com Apache e ``mod_wsgi``"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:5
msgid ""
"Deploying Django with Apache_ and `mod_wsgi`_ is a tried and tested way to "
"get Django into production."
msgstr "Implantar Django com Apache_ e `mod_wsgi`_ é uma forma testada e experimentada de colocar o Django em produção."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:11
msgid ""
"mod_wsgi is an Apache module which can host any Python WSGI_ application, "
"including Django. Django will work with any version of Apache which supports"
" mod_wsgi."
msgstr "O mod_wsgi é um módulo Apache o quam pode hospedar qualquer aplicação Python WSGI_, incluindo Django. Django irá funcionar com qualquer versão do Apache que suporte mod_wsgi."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:17
msgid ""
"The `official mod_wsgi documentation`_ is fantastic; it's your source for "
"all the details about how to use mod_wsgi. You'll probably want to start "
"with the `installation and configuration documentation`_."
msgstr "A `official mod_wsgi documentation`_ é fantastica; É o sua fonte para todos os detalhes sobre como usar  mod_wsgi. Você provavelmente irá querer começar com `installation and configuration documentation`_."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:25
msgid "Basic configuration"
msgstr "Configuração Básica"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:27
msgid ""
"Once you've got mod_wsgi installed and activated, edit your Apache server's "
"`httpd.conf`_ file (or a `virtual host`_ file) and add the following. If you"
" are using a version of Apache older than 2.4, replace ``Require all "
"granted`` with ``Allow from all`` and also add the line ``Order deny,allow``"
" above it."
msgstr "Uma vez que tenha o mod_wsgi instalado e ativado, edit o arquivo `httpd.conf`_ do seu servidor Apache (ou um arquivo `virtual host`_ ) e adicione o seguinte. Se estiver usando uma versão do Apache anterior a 2.4, substitua ``Require all granted`` com ``Allow from all`` e também adicione a linha ``Order deny,allow`` acima dele."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:46
msgid ""
"The first bit in the ``WSGIScriptAlias`` line is the base URL path you want "
"to serve your application at (``/`` indicates the root url), and the second "
"is the location of a \"WSGI file\" -- see below -- on your system, usually "
"inside of your project package (``mysite`` in this example). This tells "
"Apache to serve any request below the given URL using the WSGI application "
"defined in that file."
msgstr "A primeira parte da linha ``WSGIScriptAlias`` é a URL base que você quer servir sua aplicação (``/`` indica a URL raiz),  e a segunda é o local do arquivo \"WSGI\" -- veja abaixo -- no seu sistema, geralmente dentro do pacote do seu projeto (``mysite`` neste exemplo). Isso diz ao Apache para servir qualquer requisição abaixo da URL informada usando a aplicação WSGI definida naquele arquivo."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:53
msgid ""
"The ``WSGIPythonPath`` line ensures that your project package is available "
"for import on the Python path; in other words, that ``import mysite`` works."
msgstr "A linha ``WSGIPythonPath`` assegura que o pacote do seu projeto está disponível no Python path para ser importado; em outras palavras, que ``import mysite`` funcione."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:56
msgid ""
"The ``<Directory>`` piece just ensures that Apache can access your "
":file:`wsgi.py` file."
msgstr "A parte ``<Directory>`` somente assegura que o Apache pode acessar seu arquivo :file:`wsgi.py`."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:59
msgid ""
"Next we'll need to ensure this :file:`wsgi.py` with a WSGI application "
"object exists. As of Django version 1.4, :djadmin:`startproject` will have "
"created one for you; otherwise, you'll need to create it. See the :doc:`WSGI"
" overview documentation</howto/deployment/wsgi/index>` for the default "
"contents you should put in this file, and what else you can add to it."
msgstr "Agora precisamos assegurar que este arquivo :file:`wsgi.py` com objeto de aplicação WSGI exista. Desde de o Django versão 1.4, :djadmin:`startproject` terá criado um para você; se não, você precisará criá-lo. Veja :doc:`Documentação geral WSGI </howto/deployment/wsgi/index>` para o conteúdo padrão que você deveria colocar neste arquivo, e o que mais você pode adicionar a ele."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:67
msgid ""
"If multiple Django sites are run in a single mod_wsgi process, all of them "
"will use the settings of whichever one happens to run first. This can be "
"solved by changing::"
msgstr "Se multiplas instâncias de sites Django estão rodando em um único processo WSGI, todos eles irão usar as definições daquele que rodou primeiro. Isso pode ser resolvido mudando::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:73
msgid "in ``wsgi.py``, to::"
msgstr "em ``wsgi.py``, para::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:77
msgid ""
"or by :ref:`using mod_wsgi daemon mode<daemon-mode>` and ensuring that each "
"site runs in its own daemon process."
msgstr "ou por :ref:`usando o mode daemon do mod_wsgi<daemon-mode>` e assegurando que cada site está rodando no seu próprio processo deamon."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:80
#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:111
msgid "Fixing ``UnicodeEncodeError`` for file uploads"
msgstr "Arrumando o ``UnicodeEncodeError`` para uploads de arquivos"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:82
msgid ""
"If you get a ``UnicodeEncodeError`` when uploading files with file names "
"that contain non-ASCII characters, make sure Apache is configured to accept "
"non-ASCII file names::"
msgstr "Se houver um erro ``UnicodeEncodeError`` quando fizer o upload de arquivos que contenham caracteres não ASCII, tenha certeza que o Apache está configurado para aceitar arquivos com nomes não ASCII::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:89
msgid ""
"A common location to put this configuration is ``/etc/apache2/envvars``."
msgstr "Um lugar comum para colocar essa configuração é em ``/etc/apache2/envvars``."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:91
#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:119
msgid ""
"See the :ref:`unicode-files` section of the Unicode reference guide for "
"details."
msgstr "Veja a seção :ref:`unicode-files` do guia de referência de unicode para detalhes."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:95
msgid "Using a ``virtualenv``"
msgstr "Usando um ``virtualenv``"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:97
msgid ""
"If you install your project's Python dependencies inside a `virtualenv`_, "
"you'll need to add the path to this virtualenv's ``site-packages`` directory"
" to your Python path as well. To do this, add an additional path to your "
"``WSGIPythonPath`` directive, with multiple paths separated by a colon "
"(``:``) if using a UNIX-like system, or a semicolon (``;``) if using "
"Windows. If any part of a directory path contains a space character, the "
"complete argument string to ``WSGIPythonPath`` must be quoted:"
msgstr "Se as dependências do seu projeto estão instaladas dentro de um `virtualenv`_, será necessário adicionar o path do diretório ``site-packages`` do virtualenv ao \"Python path\" também. Para fazer isso, adicione um caminho adicional a sua diretiva ``WSGIPythonPath``, com múltimplos caminhos separados por dois-pontos (``:``)  se estiver usando um sistema UNIX-like, ou um ponto-e-vírgula  (``;``) se estiver usando window. Se qualquer parte do caminho do diretório contiver um caracter espaço, o argumento string todo par  ``WSGIPythonPath`` deve estar entre aspas:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:109
msgid ""
"Make sure you give the correct path to your virtualenv, and replace "
"``python3.X`` with the correct Python version (e.g. ``python3.4``)."
msgstr "Assegure-se de dar o caminho correto para o seu virtualenv, e troque ``python3.x``com a versão correta do Python (ex.: ``Python3.4``)."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:117
msgid "Using ``mod_wsgi`` daemon mode"
msgstr "Usando ``mod_wsgi`` no modo deamon"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:119
msgid ""
"\"Daemon mode\" is the recommended mode for running mod_wsgi (on non-Windows"
" platforms). To create the required daemon process group and delegate the "
"Django instance to run in it, you will need to add appropriate "
"``WSGIDaemonProcess`` and ``WSGIProcessGroup`` directives. A further change "
"required to the above configuration if you use daemon mode is that you can't"
" use ``WSGIPythonPath``; instead you should use the ``python-path`` option "
"to ``WSGIDaemonProcess``, for example:"
msgstr "\"Modo Deamon\" é o modo recomendado para rodar mod_wsgi (em plataforma não Windows). Para criar o grupo de processos deamon requerido e delegar o Django para rodar dentro, precisa adicionar as diretivas ``WSGIDaemonProcess`` e ``WSGIProcessGroup``. Um outra mudança requerida na configuração acima se usar deamon mode é que não se pode usar o ``WSGIPythonPath``; no lugar deve usar a opção ``python-path`` para ``WSGIDaemonProcess``, por exemplo:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:132
msgid ""
"If you want to serve your project in a subdirectory "
"(``https://example.com/mysite`` in this example), you can add "
"``WSGIScriptAlias`` to the configuration above:"
msgstr "Se quer servir seu projeto em um subdiretório (``https://example.com/mysite`` neste exemplo), você pode adicionar ``WSGIScriptAlias`` a configuração acima:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:140
msgid ""
"See the official mod_wsgi documentation for `details on setting up daemon "
"mode`_."
msgstr "Veja a documentação oficial do mod_wsgi para  `details on setting up daemon mode`_"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:148
msgid "Serving files"
msgstr "Servindo arquivos"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:150
msgid ""
"Django doesn't serve files itself; it leaves that job to whichever Web "
"server you choose."
msgstr "O Django não serve arquivos, deixa este trabalho para qualquer web server que você escolha."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:153
msgid ""
"We recommend using a separate Web server -- i.e., one that's not also "
"running Django -- for serving media. Here are some good choices:"
msgstr "Recomendamos usar um Web Server separado -- isto é, um que não esteja rodando o Django -- para servir media. Aqui algums boas escolhas:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:156
#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:73
msgid "Nginx_"
msgstr "Nginx_"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:157
#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:74
msgid "A stripped-down version of Apache_"
msgstr "Uma versão mais enxuta do Apache_"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:159
msgid ""
"If, however, you have no option but to serve media files on the same Apache "
"``VirtualHost`` as Django, you can set up Apache to serve some URLs as "
"static media, and others using the mod_wsgi interface to Django."
msgstr "Se, porém, você não tem opção de servir arquivos de media na mesmo VirtualHost Apache que está o Django, você pode configurar o Apache para servir algumas URLs como media estática, e outros usando a interface mod_wsgi para  Django."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:163
msgid ""
"This example sets up Django at the site root, but serves ``robots.txt``, "
"``favicon.ico``, and anything in the ``/static/`` and ``/media/`` URL space "
"as a static file. All other URLs will be served using mod_wsgi:"
msgstr "Este exemplo define o DJango como raiz do site, mas serve ``robots.txt``, ``favicon.ico``, e qualquer coisa nas URLs ``/static/``  e ``/media`` como arquivos estáticos. Todas as outra URLs serão servidas usando o mod_wsgi:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:191
msgid ""
"If you are using a version of Apache older than 2.4, replace ``Require all "
"granted`` with ``Allow from all`` and also add the line ``Order deny,allow``"
" above it."
msgstr "Se estiver usando uma versão de Apache menor que 2.4, substitua ``Require all granted`` por ``Allow from all`` e também adicione a linha  ``Order deny,allow`` acima deste."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:206
msgid "Serving the admin files"
msgstr "Persistindo arquivos do admin"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:208
msgid ""
"When :mod:`django.contrib.staticfiles` is in :setting:`INSTALLED_APPS`, the "
"Django development server automatically serves the static files of the admin"
" app (and any other installed apps). This is however not the case when you "
"use any other server arrangement. You're responsible for setting up Apache, "
"or whichever Web server you're using, to serve the admin files."
msgstr "Quando :mod:`django.contrib.staticfiles` está em :setting:`INSTALLED_APPS`, o servidor de desenvolvimento do Django serve automaticamente os arquivos estáticos da app admin (e de qualquer outra app instalada). Isso não é o caso quando é usado qualquer outro arranjo de servidor. Voc^é o responsável por configurar o Apache, ou qualquer outro servidor Web que esteja usando, para server arquivos do admin."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:214
msgid ""
"The admin files live in (:file:`django/contrib/admin/static/admin`) of the "
"Django distribution."
msgstr "Os arquivos do admin ficam em  (:file:`django/contrib/admin/static/admin`) da distribuição Django."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:217
msgid ""
"We **strongly** recommend using :mod:`django.contrib.staticfiles` to handle "
"the admin files (along with a Web server as outlined in the previous "
"section; this means using the :djadmin:`collectstatic` management command to"
" collect the static files in :setting:`STATIC_ROOT`, and then configuring "
"your Web server to serve :setting:`STATIC_ROOT` at :setting:`STATIC_URL`), "
"but here are three other approaches:"
msgstr "**Fortemente** recomendamos usar :mod:`django.contrib.staticfiles` para tratar dos arquivos do admin (junto com um servidor Web como delineado na seção anterior; isso quer dizer usar o comando de gerenciamento :djadmin:`collectstatic` para coletar os arquivos estáticos em  :setting:`STATIC_ROOT`, e então configurar seu servidor Web para servir :setting:`STATIC_ROOT` at :setting:`STATIC_URL`), mas aqui estão três outras maneiras:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:224
msgid ""
"Create a symbolic link to the admin static files from within your document "
"root (this may require ``+FollowSymLinks`` in your Apache configuration)."
msgstr "Crie um link simbólico para os arquivos estáticos do admin de dentro do seu \"document root\"(isso talvez requeira ``+FollowSymLinks``na sua configuração do Apache). "

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:228
msgid ""
"Use an ``Alias`` directive, as demonstrated above, to alias the appropriate "
"URL (probably :setting:`STATIC_URL` + ``admin/``) to the actual location of "
"the admin files."
msgstr "Use uma diretiva ``Alias``, como demonstrado acima, para apelidar a URL apropriada (provavelmente : settings:`SATTIC_URL`+ ``admin/``) para o local real dos arquivos do admin."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:232
msgid ""
"Copy the admin static files so that they live within your Apache document "
"root."
msgstr "Copie os arquivos estáticos do admin para que entã eles fiquem dentro do \"document root\" do Apache."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/modwsgi.txt:238
msgid ""
"Django provides a handler to allow Apache to authenticate users directly "
"against Django's authentication backends. See the :doc:`mod_wsgi "
"authentication documentation </howto/deployment/wsgi/apache-auth>`."
msgstr "O Django disponibiliza um facilitador para habilitar o Apache a autenticar usuários diretamente no backend de autenticação do Django. veja   :doc:`documentação de autenticação do mod_wsgi  </howto/deployment/wsgi/apache-auth>`."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:3
msgid "How to use Django with uWSGI"
msgstr "Como usar Django com uWSGI"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:7
msgid ""
"uWSGI_ is a fast, self-healing and developer/sysadmin-friendly application "
"container server coded in pure C."
msgstr "uWSGI_ é um sevidor de container de aplicação feito em C puro, rápido, auto-ajustável e amigável a desenvolvedores e administradores de sistema."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:14
msgid ""
"The uWSGI docs offer a `tutorial`_ covering Django, nginx, and uWSGI (one "
"possible deployment setup of many). The docs below are focused on how to "
"integrate Django with uWSGI."
msgstr "A documentação do uWSGI oferecem um  `tutorial`_ cobrindo Django, nginx e uWSGI (uma possível implantaçao dentre muitas). A documentação abaixo foca em como integrar o Django com uWSGI."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:21
msgid "Prerequisite: uWSGI"
msgstr "Prerequisito: uWSGI"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:23
msgid ""
"The uWSGI wiki describes several `installation procedures`_. Using pip, the "
"Python package manager, you can install any uWSGI version with a single "
"command. For example:"
msgstr "A wiki uWSGI descreve vários `instalation procedures`_. Usando o pip, o gerenciador de pacotes do Python, é possível instalar o uWSGI com um único comando. Por exemplo:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:39
msgid ""
"Some distributions, including Debian and Ubuntu, ship an outdated version of"
" uWSGI that does not conform to the WSGI specification. Versions prior to "
"1.2.6 do not call ``close`` on the response object after handling a request."
" In those cases the :data:`~django.core.signals.request_finished` signal "
"isn't sent. This can result in idle connections to database and memcache "
"servers."
msgstr "Algumas distribuições, incluindo o Debian e Ubuntu, trazem uma versão desatualizada do uWSGI que não está em conformidade com as especificação uWSGI. Versões anteriores a 1.2.6 não chamam o ``close`` do objeto response após tratar uma requisição. Nestes caso o :data:`~django.core.signals.request_finished` não é enviado. Isso pode resultar em conexões inativas com o banco de dados e servidores memcache."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:47
msgid "uWSGI model"
msgstr "Modelo uWSGI"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:49
msgid ""
"uWSGI operates on a client-server model. Your Web server (e.g., nginx, "
"Apache) communicates with a django-uwsgi \"worker\" process to serve dynamic"
" content. See uWSGI's `background documentation`_ for more detail."
msgstr "o uWSGI opera em um modelo cliente-servidor. Seu servidor Web (ex.: nginx, Apache) se comunica com um processo \"worker\" django-uwsgi para servir conteúdo dinâmico. Veja a uWSGI `background documentation`_ para mais detalhes."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:56
msgid "Configuring and starting the uWSGI server for Django"
msgstr "Configurando e iniciando o servidor uWSGI para o Django"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:58
msgid ""
"uWSGI supports multiple ways to configure the process. See uWSGI's "
"`configuration documentation`_ and `examples`_."
msgstr "uWSGI fornece múltiplas maneiras de configurar os processos. Veja uWSGI's `configuration documentation`_ e `examples`_."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:64
msgid "Here's an example command to start a uWSGI server::"
msgstr "Aqui um exemplo de um comando para iniciar um servior uWSGI::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:79
msgid ""
"This assumes you have a top-level project package named ``mysite``, and "
"within it a module :file:`mysite/wsgi.py` that contains a WSGI "
"``application`` object. This is the layout you'll have if you ran ``django-"
"admin startproject mysite`` (using your own project name in place of "
"``mysite``) with a recent version of Django. If this file doesn't exist, "
"you'll need to create it. See the :doc:`/howto/deployment/wsgi/index` "
"documentation for the default contents you should put in this file and what "
"else you can add to it."
msgstr "Asume-se que tem um pacote do projeto no nível mais alto chamado ``mysite``, e dentro deste um módulo :file:`mysite/wsgi.py` que contém um objeto ``applicação`` WSGI. Este é o layout que terá se executar ``django-admin startproject mysite`` (usando so seu próprio nome de projeto do lugar do ``mysite``) com a recente versão do Django. Se este arquivo não existe, é necessário criá-lo. Veja a documentação em :doc:`/howto/deployment/wsgi/index` para o conteúdo padrão que deve ser colocado neste arquivo e  que você pode adicionar."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:87
msgid "The Django-specific options here are:"
msgstr "As opções específicas para o Django são:"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:89
msgid ""
"``chdir``: The path to the directory that needs to be on Python's import "
"path -- i.e., the directory containing the ``mysite`` package."
msgstr "``chdir``: O caminho do diretório necessário estar no Python path -- isto é, o diretório que contém o pacote ``mysite``."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:91
msgid ""
"``module``: The WSGI module to use -- probably the ``mysite.wsgi`` module "
"that :djadmin:`startproject` creates."
msgstr "``module``: O módulo WSGI a ser usado -- provavelmente o módulo ``mysite.wsgi`` que o  :djadmin:`startproject` cria."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:93
msgid "``env``: Should probably contain at least ``DJANGO_SETTINGS_MODULE``."
msgstr "``env``: deve provavelmente conter  pelo menos o ``DJANGO_SETTINGS_MODULE``."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:94
msgid "``home``: Optional path to your project virtualenv."
msgstr "``home``: caminho opcional para o virtualenv do projeto."

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:96
msgid "Example ini configuration file::"
msgstr "Exemplo do arquivo ini de configuração::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:107
msgid "Example ini configuration file usage::"
msgstr "Exemplo de uso do arquivo ini de configuração::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:113
msgid ""
"If you get a ``UnicodeEncodeError`` when uploading files with file names "
"that contain non-ASCII characters, make sure uWSGI is configured to accept "
"non-ASCII file names by adding this to your ``uwsgi.ini``::"
msgstr "Se receber um ``UnicodeEncodeError``quando fizer upload de arquivos com nomes que contenham caraceteres não ASCII, tenha certeza de configurar o uWSGI para aceitar nome de arquivos não ASCII adicionando isso ao seu ``uwsgi.ini``::"

#: ../../../../sources/1.9/docs/howto/deployment/wsgi/uwsgi.txt:122
msgid ""
"See the uWSGI docs on `managing the uWSGI process`_ for information on "
"starting, stopping and reloading the uWSGI workers."
msgstr "Veja a documentação do uWSGI no `managing the uWSGI process`_ para informações sobre iniciar, parar e recarregar os uWSGI workers."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:5
msgid ""
"When you're running a public site you should always turn off the "
":setting:`DEBUG` setting. That will make your server run much faster, and "
"will also prevent malicious users from seeing details of your application "
"that can be revealed by the error pages."
msgstr "Quando estiver rondando um site público você deve sempre desligar a definição :setting:`DEBUG` . Isso fará que seu servidor rode bem mais rápido, e também irá evitar que usuários maliciosos vejam detalhes da sua aplicação que podem ser revelados por erros em suas páginas."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:10
msgid ""
"However, running with :setting:`DEBUG` set to ``False`` means you'll never "
"see errors generated by your site -- everyone will just see your public "
"error pages. You need to keep track of errors that occur in deployed sites, "
"so Django can be configured to create reports with details about those "
"errors."
msgstr "Contudo, rodar com :setting:`DEBUG` definido como ``False``quer dizer que você nunca verá os erros gerados pelo seu site -- todos verão somente sua página pública de erro. É necessário rastrear os erros que ocorrem em sites publicados, então o Django pode ser configurado para criar relatorios com detahes sobre este erros."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:16
msgid "Email reports"
msgstr "Relatórios por email."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:19
msgid "Server errors"
msgstr "Erros do servidors"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:21
msgid ""
"When :setting:`DEBUG` is ``False``, Django will email the users listed in "
"the :setting:`ADMINS` setting whenever your code raises an unhandled "
"exception and results in an internal server error (HTTP status code 500). "
"This gives the administrators immediate notification of any errors. The "
":setting:`ADMINS` will get a description of the error, a complete Python "
"traceback, and details about the HTTP request that caused the error."
msgstr "Quando :setting:`DEBUG` é definido ``False``, Django irá enviar emails para os usuários listados na configuração :setting:`ADMINS` sempre que seu código gerar uma exceção não tratada e resulta em um erro interno do servidor  (código de status HTTP 500). Isso dá aos administradores uma notificação imediata de qualquer erro. O  :setting:`ADMINS` receberá uma descrição do erro, uma histórico Python completo, e detalhes sobre a requisição HTTP que causou o erro."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:30
msgid ""
"In order to send email, Django requires a few settings telling it how to "
"connect to your mail server. At the very least, you'll need to specify "
":setting:`EMAIL_HOST` and possibly :setting:`EMAIL_HOST_USER` and "
":setting:`EMAIL_HOST_PASSWORD`, though other settings may be also required "
"depending on your mail server's configuration. Consult :doc:`the Django "
"settings documentation </ref/settings>` for a full list of email-related "
"settings."
msgstr "Para enviar o email, o Django requer algumas configurações dizendo a ele como se conectar ao seu servidor de email. No mínimo é necessário especificar :setting:`EMAIL_HOST` e possivelmente :setting:`EMAIL_HOST_USER` e :setting:`EMAIL_HOST_PASSWORD`, embora outras configurações tambem sejam requeridas dependendo da configuração do seu servidor de email. Consulte o :doc:`Documentação de configurações do Django </ref/settings>` para uma lista completa de configurações relacionadas a email."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:39
msgid ""
"By default, Django will send email from root@localhost. However, some mail "
"providers reject all email from this address. To use a different sender "
"address, modify the :setting:`SERVER_EMAIL` setting."
msgstr "Por padrão, o Django envia email do root@localhost. Contudo, alguns provedores de email rejeitam todos os email deste endereço. Para usar um endereço de remetente diferente, modifique a configuração :setting:`SERVER_EMAIL`"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:43
msgid ""
"To activate this behavior, put the email addresses of the recipients in the "
":setting:`ADMINS` setting."
msgstr "Para ativar este comportamento, coloque o endereço de email dos destinatários na definição do :setting:`ADMINS`"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:48
msgid ""
"Server error emails are sent using the logging framework, so you can "
"customize this behavior by :doc:`customizing your logging configuration "
"</topics/logging>`."
msgstr "Emails de erros de servidores são enviados usando o framework de log, e você pode customizár seu comportamento por :doc:`customizando sua configuração de log </topics/logging>`."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:53
msgid "404 errors"
msgstr "Erros 404"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:55
msgid ""
"Django can also be configured to email errors about broken links (404 \"page"
" not found\" errors). Django sends emails about 404 errors when:"
msgstr "O Django pode ser configurado para enviar emails com erros sobre links quebrados (erros 404 \"página não encontrada\"). O Django envia emails com erros 404 quando:"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:58
msgid ":setting:`DEBUG` is ``False``;"
msgstr ":setting:`DEBUG` é ``False``;"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:60
msgid ""
"Your :setting:`MIDDLEWARE_CLASSES` setting includes "
":class:`django.middleware.common.BrokenLinkEmailsMiddleware`."
msgstr "Sua definição de :setting:`MIDDLEWARE_CLASSES` incluem :class:`django.middleware.common.BrokenLinkEmailsMiddleware`."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:63
msgid ""
"If those conditions are met, Django will email the users listed in the "
":setting:`MANAGERS` setting whenever your code raises a 404 and the request "
"has a referer. It doesn't bother to email for 404s that don't have a referer"
" -- those are usually just people typing in broken URLs or broken Web bots. "
"It also ignores 404s when the referer is equal to the requested URL, since "
"this behavior is from broken Web bots too."
msgstr "Se estas condições são encontradas, o Django irá enviar emails aos usuários listados na definição de :setting:`MANAGERS`  sempre que seu código gerar um 404 e o request possui um HTTP Referer. Ele não se preocupa em enviar email para 404 que não tenham um HTTP Referer -- estes são geralmente pessoas digitando URLs quebradas ou robôs Web quebrados. Ele também ignora 404s quando o referente é igual a URL requisitada, já que este comportamento provém também de robôs Web quebrados."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:72
msgid ""
"In older versions, 404s were not ignored when the referer was equal to the "
"requested URL."
msgstr "Em versões mais antigas, 404s não eram ignorados quando o HTTP Referer era igual a URL de request."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:77
msgid ""
":class:`~django.middleware.common.BrokenLinkEmailsMiddleware` must appear "
"before other middleware that intercepts 404 errors, such as "
":class:`~django.middleware.locale.LocaleMiddleware` or "
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`. "
"Put it towards the top of your :setting:`MIDDLEWARE_CLASSES` setting."
msgstr ":class:`~django.middleware.common.BrokenLinkEmailsMiddleware` deve aparecer antes de outros \"middlewares\" que interceptam 404, tal como :class:`~django.middleware.locale.LocaleMiddleware` ou :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`. Coloque-o na parte superior do seu :setting:`MIDDLEWARE_CLASSES` setting."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:83
msgid ""
"You can tell Django to stop reporting particular 404s by tweaking the "
":setting:`IGNORABLE_404_URLS` setting. It should be a list of compiled "
"regular expression objects. For example::"
msgstr "Você pode dizer ao Django para parar de reportar 404s ajustando a definição do :setting:`IGNORABLE_404_URLS`. Isso deve ser uma lista de objetos compilados de expressões regulares. Por exeplo::"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:93
msgid ""
"In this example, a 404 to any URL ending with ``.php`` or ``.cgi`` will "
"*not* be reported. Neither will any URL starting with ``/phpmyadmin/``."
msgstr "Neste exemplo, um 404 para qualquer URL com ``.php``ou ``.cgi`` *não* será reportado. Nem nenhuma URL começando com ``/phpadmin/``."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:96
msgid ""
"The following example shows how to exclude some conventional URLs that "
"browsers and crawlers often request::"
msgstr "O exemplo seguinte mostra como excluir algumas URLs convencionais que \"borwsers\" e \"crawlers\" requisitam com frequência."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:106
msgid ""
"(Note that these are regular expressions, so we put a backslash in front of "
"periods to escape them.)"
msgstr "(repare que essas são expressões regulares, então coloca-se uma barra invertida na frente dos pontos para que não sejam substituidos.)"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:109
msgid ""
"If you'd like to customize the behavior of "
":class:`django.middleware.common.BrokenLinkEmailsMiddleware` further (for "
"example to ignore requests coming from web crawlers), you should subclass it"
" and override its methods."
msgstr "Se quer personalizar o comportamentdo do :class:`django.middleware.common.BrokenLinkEmailsMiddleware` mais adiante (por exemplo para ignorar requisições vindas de rastreadores web), você deve criar uma subclasse e sobrescreva seus métodos."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:116
msgid ""
"404 errors are logged using the logging framework. By default, these log "
"records are ignored, but you can use them for error reporting by writing a "
"handler and :doc:`configuring logging </topics/logging>` appropriately."
msgstr "Erros 404 são logados usando o framework logging. Por padrão, estes registros de log são ignorados, mas você pode usá-los para relatório de erros sobrescrevendo o \"handlers\" e o :doc:`configuring logging </topics/logging>` apropriadamente."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:123
msgid "Filtering error reports"
msgstr "Filtrando relatórios de erros"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:127
msgid ""
"Filtering sensitive data is a hard problem, and it's nearly impossible to "
"guarantee that sensitive won't leak into an error report. Therefore, error "
"reports should only be available to trusted team members and you should "
"avoid transmitting error reports unencrypted over the Internet (such as "
"through email)."
msgstr "Filtrar dados sensíveis é um problema difícil, e é quase impossível garantir que dados sensíveis não vão vazar dentro de um relatório de erro. Portanto, relatórios de erros soment devem ser disponibilizados para membros confiáveis do time e você deveria evitar transmitir relatórios de erros sem incriptação através da internet (tal como através de um e-mail)."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:134
msgid "Filtering sensitive information"
msgstr "Filtrando Informações sensíveis"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:138
msgid ""
"Error reports are really helpful for debugging errors, so it is generally "
"useful to record as much relevant information about those errors as "
"possible. For example, by default Django records the `full traceback`_ for "
"the exception raised, each `traceback frame`_’s local variables, and the "
":class:`~django.http.HttpRequest`’s :ref:`attributes<httprequest-"
"attributes>`."
msgstr "Relatórios de erros são de grande ajuda para detectar falhas, sempre é util registrar o máximo de informação sobre falhas quanto possível. Por exemplo, por padrão o Django registra "

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:144
msgid ""
"However, sometimes certain types of information may be too sensitive and "
"thus may not be appropriate to be kept track of, for example a user's "
"password or credit card number. So Django offers a set of function "
"decorators to help you control which information should be filtered out of "
"error reports in a production environment (that is, where :setting:`DEBUG` "
"is set to ``False``): :func:`sensitive_variables` and "
":func:`sensitive_post_parameters`."
msgstr "Entratanto, as vezes certos tipos de informação por ser tão delicada obviamente nao é apropriado expor seu conteudo, por exemplo uma senha de usuário ou um numero de cartão de crédito. Para isso o Django oferece um conjunto de decoradores de funções para ajudar voce a gerenciar quais informações devem ser deixadas de fora de relatórios de erro em ambiente de produção "

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:156
msgid ""
"If a function (either a view or any regular callback) in your code uses "
"local variables susceptible to contain sensitive information, you may "
"prevent the values of those variables from being included in error reports "
"using the ``sensitive_variables`` decorator::"
msgstr "Se uma função (uma view ou callback) no seu código usa variavéis locais que venham guardar informação sigilosa, voce deve reguasdar o valor dessas variavéis de serem expostas nos relatórios de erros usando o decorator ''sensitive_variables''"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:170
msgid ""
"In the above example, the values for the ``user``, ``pw`` and ``cc`` "
"variables will be hidden and replaced with stars (`**********`) in the error"
" reports, whereas the value of the ``name`` variable will be disclosed."
msgstr "No exemplo anterior, os valores de \"user\", \"pw\" e \"cc\" serão ocultados e trocados por asteríscos (`**********`) nos relatórios de erros, onde quer que o valor da variavel  \"name\"  seja  exibido."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:175
msgid ""
"To systematically hide all local variables of a function from error logs, do"
" not provide any argument to the ``sensitive_variables`` decorator::"
msgstr "Para esconder sistematicamente todas as variáveis locais de uma fução dos logs de erros, não forneça argumento ao decorador ``sensitive_variables``::"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:182
msgid "When using multiple decorators"
msgstr "Quando usar multiplos decorators"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:184
msgid ""
"If the variable you want to hide is also a function argument (e.g. "
"'``user``’ in the following example), and if the decorated function has "
"multiple decorators, then make sure to place ``@sensitive_variables`` at the"
" top of the decorator chain. This way it will also hide the function "
"argument as it gets passed through the other decorators::"
msgstr "Se a variável que você quer esconder é também um argumento da função (ex.: ``user`` no exemplo a seguir), e si a função \"decorada\" tem múltimplos \"decorators\",  então tenha certeza de posiionar o ``@sensitive_variables``  no topo da lista de \"decorators\". Desta maneira, serão escondidos também  o argumento da função enquanto passa pelos outros \"decorators\"::"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:198
msgid ""
"If one of your views receives an :class:`~django.http.HttpRequest` object "
"with :attr:`POST parameters<django.http.HttpRequest.POST>` susceptible to "
"contain sensitive information, you may prevent the values of those "
"parameters from being included in the error reports using the "
"``sensitive_post_parameters`` decorator::"
msgstr "Se uma de suas \"views\" recebe um objeto :class:`~django.http.HttpRequest` com :attr:`parâmetros do POST<django.http.HttpRequest.POST>` suscetível a conter informação sensível, é possível  evitar que os valores destes parâmetros sejam incluídos no relatório de erros usando o \"decorator\" ``sensitive_post_parameters`` ::"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:214
msgid ""
"In the above example, the values for the ``pass_word`` and "
"``credit_card_number`` POST parameters will be hidden and replaced with "
"stars (`**********`) in the request's representation inside the error "
"reports, whereas the value of the ``name`` parameter will be disclosed."
msgstr "No exemplo acima, os valores dos para parâmetros ``pass_word`` e ``credit_card_number`` do POST serão escondidos e substituídos por asteríscos (`**********`) na representação da requisição dentro do relatório de erro, independente de onde o valor do parâmetro  ``name`` seja mostrado."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:219
msgid ""
"To systematically hide all POST parameters of a request in error reports, do"
" not provide any argument to the ``sensitive_post_parameters`` decorator::"
msgstr "Para esconder sistematicamente todos os parâmetros do POST de uma requisição em um relatório de erro relatório, não forneça nenhum arguento para o \"decorator\"  ``sensitive_post_parameters``::"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:226
msgid ""
"All POST parameters are systematically filtered out of error reports for "
"certain :mod:`django.contrib.auth.views` views (``login``, "
"``password_reset_confirm``, ``password_change``, and ``add_view`` and "
"``user_change_password`` in the ``auth`` admin) to prevent the leaking of "
"sensitive information such as user passwords."
msgstr "Todos os parâmentros do POST são sistematicamente filtrados do relatório para certas \"views\"   :mod:`django.contrib.auth.views`  (``login``, ``password_reset_confirm``, ``password_change``, e ``add_view`` e ``user_change_password`` no ``auth`` admin) para prevenir o vazamento de informação sensível tal como as senhas de usuários."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:235
msgid "Custom error reports"
msgstr "Relatórios de erros personalizados"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:237
msgid ""
"All :func:`sensitive_variables` and :func:`sensitive_post_parameters` do is,"
" respectively, annotate the decorated function with the names of sensitive "
"variables and annotate the ``HttpRequest`` object with the names of "
"sensitive POST parameters, so that this sensitive information can later be "
"filtered out of reports when an error occurs. The actual filtering is done "
"by Django's default error reporter filter: "
":class:`django.views.debug.SafeExceptionReporterFilter`. This filter uses "
"the decorators' annotations to replace the corresponding values with stars "
"(`**********`) when the error reports are produced. If you wish to override "
"or customize this default behavior for your entire site, you need to define "
"your own filter class and tell Django to use it via the "
":setting:`DEFAULT_EXCEPTION_REPORTER_FILTER` setting::"
msgstr "Tudo que :func:`sensitive_variables` e :func:`sensitive_post_parameters` fazem é, respectivamente, anota a função decorada com os nomes  das variáveis sensíveis e anota o objeto ``HttpRequest`` com o nome dos parâmetros sensíveis do POST, tal que essa informação sensível pode mais tarde ser filtrada dos relatórios quando um erro ocorrer. O filtro é feito pelo filtro de relatório de erros padrão do Django : :class:`django.views.debug.SafeExceptionReporterFilter`. Este filtro usa a anotação de decoradores para substituir os valores correspondentes por asteríscos (`**********`) quando o relatório é produzido. Se quiser sobrescrever ou customizar o compartamento padrão para todo o site, é preciso definir sua própria classe de filtro e indicar ao Django para usá-la através da definição :setting:`DEFAULT_EXCEPTION_REPORTER_FILTER` ::"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:252
msgid ""
"You may also control in a more granular way which filter to use within any "
"given view by setting the ``HttpRequest``’s ``exception_reporter_filter`` "
"attribute::"
msgstr "Você pode controlar de uma maneira mais granular qual filtro usar dentro de qualquer \"view\" configurando o atributo ``exception_reporter_filter`` do ``HttpRequest``::"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:263
msgid ""
"Your custom filter class needs to inherit from "
":class:`django.views.debug.SafeExceptionReporterFilter` and may override the"
" following methods:"
msgstr "A classe personalizada precisa herdar de :class:`django.views.debug.SafeExceptionReporterFilter` e talvez sobrescrever os seguintes métodos:"

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:271
msgid ""
"Returns ``True`` to activate the filtering operated in the other methods. By"
" default the filter is active if :setting:`DEBUG` is ``False``."
msgstr "Retorna ``True`` para ativar a filtragem operada nos outros métodos. Por padrão o filtro é ativo se  :setting:`DEBUG` é ``False``."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:276
msgid ""
"Returns the filtered dictionary of POST parameters. By default it replaces "
"the values of sensitive parameters with stars (`**********`)."
msgstr "Retorna o dicionário filtrado dos parâmetros do POST. Por padrão ele substitui os valores dos parâmetros sensíveis por asteríscos  (`**********`)."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:281
msgid ""
"Returns the filtered dictionary of local variables for the given traceback "
"frame. By default it replaces the values of sensitive variables with stars "
"(`**********`)."
msgstr "Retorna o dicionário filtrado de variáveis globais para um dado quadro do \"traceback\". Por padrão  ele substitui os valores de variáveis sensíveis por asteríscos (`**********`)."

#: ../../../../sources/1.9/docs/howto/error-reporting.txt:287
msgid ""
"You can also set up custom error reporting by writing a custom piece of "
":ref:`exception middleware <exception-middleware>`. If you do write custom "
"error handling, it's a good idea to emulate Django's built-in error handling"
" and only report/log errors if :setting:`DEBUG` is ``False``."
msgstr "Você pode também configurar um relatório de erro personalizado escrevendo um pedaço personalizado :ref:`middleware de exceção <exception-middleware>`. Se escrever um tratamento de erros personalizado, é uma boa idéia emular o tratamento de erro do Django e somente reportar/logar erros se :setting:`DEBUG` é ``False``."

#: ../../../../sources/1.9/docs/howto/index.txt:3
msgid "\"How-to\" guides"
msgstr "Guias \"como\""

#: ../../../../sources/1.9/docs/howto/index.txt:5
msgid ""
"Here you'll find short answers to \"How do I....?\" types of questions. "
"These how-to guides don't cover topics in depth -- you'll find that material"
" in the :doc:`/topics/index` and the :doc:`/ref/index`. However, these "
"guides will help you quickly accomplish common tasks."
msgstr "Aqui você irá encontrar respostas curtas para tipos de perguntas \"Como eu faço ...?\" Estes guias  de como não cobre tópicos em profundidade -- você irá achar esse material em :doc:`/topics/index` e the :doc:`/ref/index`. Contudo, este guia irá lhe ajudar a fazer tarefas comuns rapidamente."

#: ../../../../sources/1.9/docs/howto/index.txt:34
msgid ""
"The `Django community aggregator`_, where we aggregate content from the "
"global Django community. Many writers in the aggregator write this sort of "
"how-to material."
msgstr "O `Django community aggregator`_, onde nós juntamos conteúdo da comunidade Django global. Muitos escritores do \"aggregator\" escrevem esse tipo de material."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:3
msgid "Providing initial data for models"
msgstr "Fornecendo dados iniciais para modelos."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:5
msgid ""
"It's sometimes useful to pre-populate your database with hard-coded data "
"when you're first setting up an app. You can provide initial data via "
"fixtures."
msgstr "Algumas vezes é útil pré-popular seu banco de dados com dados codificados no sistema quando  se está configurando uma aplicação pela primeira vez. Você pode fornecer dados iniciais através das \"fixtures\"."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:11
msgid "Providing initial data with fixtures"
msgstr "Fornecendo dados iniciais com \"fixtures\""

#: ../../../../sources/1.9/docs/howto/initial-data.txt:13
msgid ""
"A fixture is a collection of data that Django knows how to import into a "
"database. The most straightforward way of creating a fixture if you've "
"already got some data is to use the :djadmin:`manage.py dumpdata <dumpdata>`"
" command. Or, you can write fixtures by hand; fixtures can be written as "
"JSON, XML or YAML (with PyYAML_ installed) documents. The "
":doc:`serialization documentation </topics/serialization>` has more details "
"about each of these supported :ref:`serialization formats <serialization-"
"formats>`."
msgstr "Uma fixture é uma coleção de dados que o Django sabe como importar para o banco de dados. A maneira mais fácil de criar uma \"fixture\" se você já tem  algum dado é usar o comando :djadmin:`manage.py dumpdata <dumpdata>`. Ou, você pode escrever fixtures manualmente; \"fixtures\" podem ser escritas como documentos JSON, XML ou YAML (com PyYAML_ installed). O :doc:`documentos de serialização </topics/serialization>` tem mais detalhes sobre cada um destes :ref:`formatos de serialização <serialization-formats>`."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:23
msgid ""
"As an example, though, here's what a fixture for a simple ``Person`` model "
"might look like in JSON:"
msgstr "Como exemplo, no entanto, aqui o que uma \"fixture\" para um simples modelo ``Person`` se parece no formato json."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:47
msgid "And here's that same fixture as YAML:"
msgstr "E aqui a mesma \"fixtre\" como YAML:"

#: ../../../../sources/1.9/docs/howto/initial-data.txt:62
msgid "You'll store this data in a ``fixtures`` directory inside your app."
msgstr "Você armazenará este dado em um diretório ``fixtures`` dentro de sua app."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:64
msgid ""
"Loading data is easy: just call :djadmin:`manage.py loaddata <loaddata>` "
"``<fixturename>``, where ``<fixturename>`` is the name of the fixture file "
"you've created. Each time you run :djadmin:`loaddata`, the data will be read"
" from the fixture and re-loaded into the database. Note this means that if "
"you change one of the rows created by a fixture and then run "
":djadmin:`loaddata` again, you'll wipe out any changes you've made."
msgstr "Carregar dados é simples: apenas chame :djadmin:`manage.py loaddata <loaddata>` ``<fixturename>``, onde ``<fixturename>`` é o nome do arquivo de \"fixture\" que você criou. Cada vez que executar :djadmin:`loaddata`, os dados serão lidos da \"fixture\" e recarregados no banco de dados. Isso significa que se você alterar uma de suas linhas do banco de dados criadas por uma fixture e então executar :djadmin:`loaddata`  denovo, você irá perder qualquer alteração que tenha feito."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:72
msgid "Where Django finds fixture files"
msgstr "Onde o Django encontra arquivos de \"fixture\""

#: ../../../../sources/1.9/docs/howto/initial-data.txt:74
msgid ""
"By default, Django looks in the ``fixtures`` directory inside each app for "
"fixtures. You can set the :setting:`FIXTURE_DIRS` setting to a list of "
"additional directories where Django should look."
msgstr "Por padrão, o Django procura por \"fixtures\" no diretório ``fixtures`` dentro de cada app. Você definir a :setting:`FIXTURE_DIRS` como uma lista de diretórios adicionais onde o Django deve procurar."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:78
msgid ""
"When running :djadmin:`manage.py loaddata <loaddata>`, you can also specify "
"a path to a fixture file, which overrides searching the usual directories."
msgstr "Quando chamar :djadmin:`manage.py loaddata <loaddata>`, você pode especificar um caminho para o arquivo de \"fixture\", o qual é procurado no lugar dos diretórios usuais."

#: ../../../../sources/1.9/docs/howto/initial-data.txt:84
msgid ""
"Fixtures are also used by the :ref:`testing framework <topics-testing-"
"fixtures>` to help set up a consistent test environment."
msgstr "As \"Fixtures\" são também usadas pelo :ref:`testing framework <topics-testing-fixtures>` para auxiliar na configuração de um ambiente de teste consistente."

#: ../../../../sources/1.9/docs/howto/jython.txt:3
msgid "Running Django on Jython"
msgstr "Rodando o Django no Jython"

#: ../../../../sources/1.9/docs/howto/jython.txt:7
msgid ""
"Jython_ is an implementation of Python that runs on the Java platform (JVM)."
" This document will get you up and running with Django on top of Jython."
msgstr "O Jython_  é uma implmentação de Python que roda na plataforma Java (JVM). Este documento lhe colocará de pé rodando o Django com Jython."

#: ../../../../sources/1.9/docs/howto/jython.txt:11
msgid "Installing Jython"
msgstr "instalando Jython"

#: ../../../../sources/1.9/docs/howto/jython.txt:13
msgid ""
"Django works with Jython versions 2.7b2 and higher. See the Jython_ website "
"for download and installation instructions."
msgstr "O Django funciona com Jython nas versões 2.7b2 e superiores. Veja o website do Jython_ para instruções para baixar e instalar."

#: ../../../../sources/1.9/docs/howto/jython.txt:19
msgid "Creating a servlet container"
msgstr "Criando um container servlet."

#: ../../../../sources/1.9/docs/howto/jython.txt:21
msgid ""
"If you just want to experiment with Django, skip ahead to the next section; "
"Django includes a lightweight Web server you can use for testing, so you "
"won't need to set up anything else until you're ready to deploy Django in "
"production."
msgstr "Se você quiser  somente fazer um experimento com Django, vá direto para a próxima seção; o Django inclue um servidor Web leve que pode ser usado para teste, então você não precisa configurar mais nada até que esteja pronto para fazer a implantação em produção do Django."

#: ../../../../sources/1.9/docs/howto/jython.txt:25
msgid ""
"If you want to use Django on a production site, use a Java servlet "
"container, such as `Apache Tomcat`_. Full JavaEE applications servers such "
"as `GlassFish`_ or `JBoss`_ are also OK, if you need the extra features they"
" include."
msgstr "Se quer usar o Django em uma site em produção, use um container \"servlet\" Java, tal como `Apache Tomcat`_. Servidores de aplicações JavaEE completos como `GlassFish`_ ou `JBoss`_ são também OK, se você precisa das características extras que eles incluem."

#: ../../../../sources/1.9/docs/howto/jython.txt:34
msgid "Installing Django"
msgstr "Instalando o Django"

#: ../../../../sources/1.9/docs/howto/jython.txt:36
msgid ""
"The next step is to install Django itself. This is exactly the same as "
"installing Django on standard Python, so see :ref:`removing-old-versions-of-"
"django` and :ref:`install-django-code` for instructions."
msgstr "O próximo passo é instalar o próprio Django. É o mesmo que instalar om Django no Python padrão, então veja  :ref:`removing-old-versions-of-django` e :ref:`install-django-code` para instruções."

#: ../../../../sources/1.9/docs/howto/jython.txt:42
msgid "Installing Jython platform support libraries"
msgstr "Instalando bibliotecas de suporte a plataforma Java"

#: ../../../../sources/1.9/docs/howto/jython.txt:44
msgid ""
"The `django-jython`_ project contains database backends and management "
"commands for Django/Jython development. Note that the builtin Django "
"backends won't work on top of Jython."
msgstr "O projeto `django-jython`_ contém \"backends\" de bancos de dados e comandos de gerenciamento para o desenvolvimento Django/Jython. Note que os backends embutidos do Django não funcionarão sob o Jython."

#: ../../../../sources/1.9/docs/howto/jython.txt:50
msgid ""
"To install it, follow the `installation instructions`_ detailed on the "
"project website. Also, read the `database backends`_ documentation there."
msgstr "Para instalá-los, siga a `installation instructions`_ detalhadas no website do projeto. Também, leia a documentação aqui `database backends`_."

#: ../../../../sources/1.9/docs/howto/jython.txt:57
msgid "Differences with Django on Jython"
msgstr "Diferenças do Django no Jython"

#: ../../../../sources/1.9/docs/howto/jython.txt:61
msgid ""
"At this point, Django on Jython should behave nearly identically to Django "
"running on standard Python. However, are a few differences to keep in mind:"
msgstr "Até este ponto, Django sobre o Jython deve se comportar quase identico ao Django rodando em Python padrão. Embora, existam algumas diferenças para se manter em mente:"

#: ../../../../sources/1.9/docs/howto/jython.txt:64
msgid ""
"Remember to use the ``jython`` command instead of ``python``. The "
"documentation uses ``python`` for consistency, but if you're using Jython "
"you'll want to mentally replace ``python`` with ``jython`` every time it "
"occurs."
msgstr "Lembre-se de usar o comando ``Jython`` invés do ``python``. A documentação usa ``python`` para consistência, mas se estiver usando Jython você irá querer substituir mentalmente ``python`` por ``jython`` toda vez que citado."

#: ../../../../sources/1.9/docs/howto/jython.txt:69
msgid ""
"Similarly, you'll need to use the ``JYTHONPATH`` environment variable "
"instead of ``PYTHONPATH``."
msgstr "Igualmente, irá querer usar a variável de ambiente ``JYTHONPATH`` no lugar de ``PYTHONPATH``."

#: ../../../../sources/1.9/docs/howto/jython.txt:72
msgid "Any part of Django that requires `Pillow`_ will not work."
msgstr "Qualquer parte do Django que use `Pillow`_ não irá funcionar."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:3
msgid "Integrating Django with a legacy database"
msgstr "Integrando o Django com banco de dados legados."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:5
msgid ""
"While Django is best suited for developing new applications, it's quite "
"possible to integrate it into legacy databases. Django includes a couple of "
"utilities to automate as much of this process as possible."
msgstr "Enquanto o Django é melhor para desenvolver novas aplicações, é possível integrá-lo a um banco de dados existente. O Django inclue algumas ferramentas para automatzar tanto quanto possível o processo."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:9
msgid ""
"This document assumes you know the Django basics, as covered in the "
":doc:`tutorial </intro/tutorial01>`."
msgstr "Este documento assume que você conhece o básico de django, como coberto em :doc:`tutorial </intro/tutorial01>`."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:12
msgid ""
"Once you've got Django set up, you'll follow this general process to "
"integrate with an existing database."
msgstr "Uma vez que tenha o Django configurado, seguirá este processo geral para integrar com o banco de dados existente."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:16
msgid "Give Django your database parameters"
msgstr "Forneça ao Django os parâmetros do seu banco de dados."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:18
msgid ""
"You'll need to tell Django what your database connection parameters are, and"
" what the name of the database is. Do that by editing the "
":setting:`DATABASES` setting and assigning values to the following keys for "
"the ``'default'`` connection:"
msgstr "Você precisa informar ao Django quais são ps parâmetros de conexão do seu banco de dados, e o nome do banco de dados. Faça isso editando a definição :setting:`DATABASES` e assinalando os valores das seguintes chaver para a conexão ``'default'``:"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:23
msgid ":setting:`NAME`"
msgstr ":setting:`NAME`"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:24
msgid ":setting:`ENGINE <DATABASE-ENGINE>`"
msgstr ":setting:`ENGINE <DATABASE-ENGINE>`"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:25
msgid ":setting:`USER`"
msgstr ":setting:`USER`"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:26
msgid ":setting:`PASSWORD`"
msgstr ":setting:`PASSWORD`"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:27
msgid ":setting:`HOST`"
msgstr ":setting:`HOST`"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:28
msgid ":setting:`PORT`"
msgstr ":setting:`PORT`"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:31
msgid "Auto-generate the models"
msgstr "Criar automaticamente os modelos"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:35
msgid ""
"Django comes with a utility called :djadmin:`inspectdb` that can create "
"models by introspecting an existing database. You can view the output by "
"running this command::"
msgstr "O Django vem com uma ferramenta chamada :djadmin:`inspectdb` que pode criar os modelos introspectando o banco de dados existente. Você pode verificar a saida rodando este comando::"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:41
msgid "Save this as a file by using standard Unix output redirection::"
msgstr "Salve isso como um arquivo usando o redirecionamento padrão da saída Unix."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:45
msgid ""
"This feature is meant as a shortcut, not as definitive model generation. See"
" the :djadmin:`documentation of inspectdb <inspectdb>` for more information."
msgstr "Este comandoé um atalho, não um gerador de modelos definitivos. Veja o :djadmin:`documentation of inspectdb <inspectdb>` para mais informações."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:48
msgid ""
"Once you've cleaned up your models, name the file ``models.py`` and put it "
"in the Python package that holds your app. Then add the app to your "
":setting:`INSTALLED_APPS` setting."
msgstr "Uma vez que tenha limpado seus modelos, nomeie  arquivo ``models.py``e coloque-o no pacote Python que contém sua aplicação. Entã adicione a app dentro da sua definição de :setting:`INSTALLED_APPS`."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:52
msgid ""
"By default, :djadmin:`inspectdb` creates unmanaged models. That is, "
"``managed = False`` in the model's ``Meta`` class tells Django not to manage"
" each table's creation, modification, and deletion::"
msgstr "Por padrão, o :djadmin:`inspectdb` cria modelos não gerenciáveis. Quer dizer, ``managed = False`` na ``Meta`` classe do modelo, diz ao Django para não gerenciar a criação, modificação e deleção  de cada tabela:: "

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:63
msgid ""
"If you do want to allow Django to manage the table's lifecycle, you'll need "
"to change the :attr:`~django.db.models.Options.managed` option above to "
"``True`` (or simply remove it because ``True`` is its default value)."
msgstr "Se você quer permitir que o Django gerencie o ciclo de vida das tabelas, é necessário alterar a opção :attr:`~django.db.models.Options.managed` acima para ``True``  ( ou simplesmente removê-la porque ``True`` é o valor padrão). "

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:68
msgid "Install the core Django tables"
msgstr "Instalando as Tabelas do núcleo do Django."

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:70
msgid ""
"Next, run the :djadmin:`migrate` command to install any extra needed "
"database records such as admin permissions and content types::"
msgstr "A seguir, execute o comando :djadmin:`migrate` para instalar qualquer registro necessário de banco de dados tal como permissões do admin e tipos de conteúdo::"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:76
msgid "Test and tweak"
msgstr "Teste e ajustes"

#: ../../../../sources/1.9/docs/howto/legacy-databases.txt:78
msgid ""
"Those are the basic steps -- from here you'll want to tweak the models "
"Django generated until they work the way you'd like. Try accessing your data"
" via the Django database API, and try editing objects via Django's admin "
"site, and edit the models file accordingly."
msgstr "Estes são os passos básicos -- daqui em diante você irá querer ajustar os modelos que o Django gerou até que funcionem do jeito que você goste. Tente acessar seus dados através da API de banco de dados do Django, e tente editá-los via o site admin do Django, e edite o arquivo de modelo de acordo."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:3
msgid "Outputting CSV with Django"
msgstr "Emitindo CSV com Django"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:5
msgid ""
"This document explains how to output CSV (Comma Separated Values) "
"dynamically using Django views. To do this, you can either use the Python "
"CSV library or the Django template system."
msgstr "Este documento explica como emitir CSV (valores separados por vírgulas) dinamicamente usando \"views\" do Django. Para fazer isso, você pode usar a biblioteca CSV do Python ou o sistema de templates do Django."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:10
msgid "Using the Python CSV library"
msgstr "Usando a biblioteca CSV do Python."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:12
msgid ""
"Python comes with a CSV library, :mod:`csv`. The key to using it with Django"
" is that the :mod:`csv` module's CSV-creation capability acts on file-like "
"objects, and Django's :class:`~django.http.HttpResponse` objects are file-"
"like objects."
msgstr "Python vem com uma biblioteca CSV, :mod:`csv`. A chave para usá-lo com Django é que a capacidade CSV-creation do módulo :mod:`csv`  age como um objeto \"file-like\", e aos objetos da class:`~django.http.HttpResponse` do Django são objetos \"file-like\"."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:16
msgid "Here's an example::"
msgstr "Aqui está um exemplo"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:32
#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:69
msgid ""
"The code and comments should be self-explanatory, but a few things deserve a"
" mention:"
msgstr "O código e comentário devem ser auto-explanaveis, mas algumas coisas merecem uma menção."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:35
msgid ""
"The response gets a special MIME type, :mimetype:`text/csv`. This tells "
"browsers that the document is a CSV file, rather than an HTML file. If you "
"leave this off, browsers will probably interpret the output as HTML, which "
"will result in ugly, scary gobbledygook in the browser window."
msgstr "A resposta recebe um tipo MIME especial :mimetype:`text/csv`. Isso diz ao browser que o documento é um arquivo CSV, ao invés de um arquivo HTML. Se deixar isso desligado, os browsers vão provavelmente interpretar a resposta como HTML, o qual irá resultar em uma feia e assustadora gobbledygook na janela do seu browser."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:40
msgid ""
"The response gets an additional ``Content-Disposition`` header, which "
"contains the name of the CSV file. This filename is arbitrary; call it "
"whatever you want. It'll be used by browsers in the \"Save as...\" dialog, "
"etc."
msgstr "A resposta recebe um cabeçalho adicional ``Content-Dispoition``, o qual contém o nome do arquivo CSV. Este nome de arquivo e arbitrário; chame isso do que você quiser. Ele será usado pelo browser no diálogo \"Salvar como...\", etc."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:44
msgid ""
"Hooking into the CSV-generation API is easy: Just pass ``response`` as the "
"first argument to ``csv.writer``. The ``csv.writer`` function expects a "
"file-like object, and :class:`~django.http.HttpResponse` objects fit the "
"bill."
msgstr "Utilizar a API do CSV-generation é fácil: Apenas passe ``response``como o primeiro argumento para ``csv.writer``. A função ``csv.writer`` espera um objeto \"file-like\", e o objetos :class:`~django.http.HttpResponse` é um \"file-loke\"."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:49
msgid ""
"For each row in your CSV file, call ``writer.writerow``, passing it an "
"iterable object such as a list or tuple."
msgstr "Para cada linha no seu arquivo CSV, chame ``writer.writerow``, passando-o para um objeto interável tal como uma lista ou tupla."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:52
msgid ""
"The CSV module takes care of quoting for you, so you don't have to worry "
"about escaping strings with quotes or commas in them. Just pass "
"``writerow()`` your raw strings, and it'll do the right thing."
msgstr "O módulo CSV cuida das aspas pra você, então não tem que se preocupar em substituir strings com aspas ou vírgulas. Apenas passe as string para ``writerow()``, e ele fará a coisa certa."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:56
msgid "Handling Unicode on Python 2"
msgstr "Manipulando unicode no Python 2"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:58
msgid ""
"Python 2's :mod:`csv` module does not support Unicode input. Since Django "
"uses Unicode internally this means strings read from sources such as "
":class:`~django.http.HttpRequest` are potentially problematic. There are a "
"few options for handling this:"
msgstr "O móduo  :mod:`csv` do Python 2's não suporta entrada unicode. E já que o Django usa Unicode internamente isso significa que strings lidas do código fonte tal como :class:`~django.http.HttpRequest` são potencialmente problemáticas. Existem algumas opções para lidar com isso:"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:63
msgid "Manually encode all Unicode objects to a compatible encoding."
msgstr "Manualmente encode todas os objetos Unicode para um encode compatível."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:65
msgid ""
"Use the ``UnicodeWriter`` class provided in the `csv module's examples "
"section`_."
msgstr "Use a class ``UnicodeWriter`` fornecida no `csv module's examples section`_."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:68
msgid ""
"Use the `python-unicodecsv module`_, which aims to be a drop-in replacement "
"for :mod:`csv` that gracefully handles Unicode."
msgstr "Use o `python-unicodecsv module`_, o qual objetiva ser um substituto para o :mod:`csv` que normalmente lida com Unicode."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:71
msgid ""
"For more information, see the Python documentation of the :mod:`csv` module."
msgstr "Para mais informação, veja a documentação Python do módulo :mod:`csv`."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:79
msgid "Streaming large CSV files"
msgstr "Transmitindo grandes arquivos CSV"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:81
msgid ""
"When dealing with views that generate very large responses, you might want "
"to consider using Django's :class:`~django.http.StreamingHttpResponse` "
"instead. For example, by streaming a file that takes a long time to generate"
" you can avoid a load balancer dropping a connection that might have "
"otherwise timed out while the server was generating the response."
msgstr "Quando lida com \"views\" que geram respostas muito grandes, talvez queira considerar usar o :class:`~django.http.StreamingHttpResponse` do Django no lugar. Por exemplo, por trasmitir em fluxo contínuo ou \"streaming\" um arquivo que leva muito tempo para ser gerado você pode evitar que a conexão seja perdida tentando balancear a carga que talvez expire enquanto o servidor estava gerando a resposta."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:87
msgid ""
"In this example, we make full use of Python generators to efficiently handle"
" the assembly and transmission of a large CSV file::"
msgstr "Neste exemplo, fazemos uso total de geradores Python para manipular eficientemente a montagem e transmissão de um grande arquivo CSV::"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:117
msgid "Using the template system"
msgstr "Usando o sistema de template."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:119
msgid ""
"Alternatively, you can use the :doc:`Django template system "
"</topics/templates>` to generate CSV. This is lower-level than using the "
"convenient Python :mod:`csv` module, but the solution is presented here for "
"completeness."
msgstr "Uma alternatica, você pode usar o :doc:`sistema de tempaltes do Django </topics/templates>` para gerar CSV. Isso é mais baixo nível que usar o conveniente módulo Python :mod:`csv`, mas a solução é apresentada aqui para para abrangência."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:123
msgid ""
"The idea here is to pass a list of items to your template, and have the "
"template output the commas in a :ttag:`for` loop."
msgstr "A idéia aqui é passar uma lista de itens para seu template, e ter a saida do template as vírgulas em um loop :ttag:`for`."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:126
msgid "Here's an example, which generates the same CSV file as above::"
msgstr "Aqui um exemplo, o qual gera o mesmo arquivo CSV que acima::"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:150
msgid ""
"The only difference between this example and the previous example is that "
"this one uses template loading instead of the CSV module. The rest of the "
"code -- such as the ``content_type='text/csv'`` -- is the same."
msgstr "A única diferença entre este exemplo e o exemplo anterior é que este usa carfa de template ao invés do módulo CSV. O resto do código -- tal como ``content_type='text/csv'`` --  é o mesmo."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:154
msgid ""
"Then, create the template ``my_template_name.txt``, with this template code:"
msgstr "Então, crie o template ``my_template_name.txt``,  com este código no template:"

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:161
msgid ""
"This template is quite basic. It just iterates over the given data and "
"displays a line of CSV for each row. It uses the :tfilter:`addslashes` "
"template filter to ensure there aren't any problems with quotes."
msgstr "Este template é bem básico. Ele somente itera sobre o dado enviado e mostra uma linha de CSV para cada linha. Isso usa o filtro de template :tfilter:`addslashes` para se assegurar que não haverá nenhum problema com aspas."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:166
msgid "Other text-based formats"
msgstr "Outros formatos baseados e texto."

#: ../../../../sources/1.9/docs/howto/outputting-csv.txt:168
msgid ""
"Notice that there isn't very much specific to CSV here -- just the specific "
"output format. You can use either of these techniques to output any text-"
"based format you can dream of. You can also use a similar technique to "
"generate arbitrary binary data; see :doc:`/howto/outputting-pdf` for an "
"example."
msgstr "Note que não tem muita coisa específica sobre CSV aqui -- apenas o formato de saída. Você pode usar qualquer uma destas técnicas para qualquer formato texto que você imagine. Você também pode usar essa técnica para gerar dados binários arbitrários; veja :doc:`/howto/outputting-pdf` por exemplo."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:3
msgid "Outputting PDFs with Django"
msgstr "Gerando PDFs com o Django"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:5
msgid ""
"This document explains how to output PDF files dynamically using Django "
"views. This is made possible by the excellent, open-source ReportLab_ Python"
" PDF library."
msgstr "Este documnto explica como gerar arquivos PDF dinamicamente usando \"views\" Django. Isso é possível através da excelente, biblioteca Python de código-aberto RepostLab_ ."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:9
msgid ""
"The advantage of generating PDF files dynamically is that you can create "
"customized PDFs for different purposes -- say, for different users or "
"different pieces of content."
msgstr "A vantagem de gerar arquivos PDF dinamicamente é que você pode criar PDFs personalizados para diferentes propósitos -- vamos dizer, para diferentes usuários ou diferentes partes de conteúdo."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:13
msgid ""
"For example, Django was used at kusports.com_ to generate customized, "
"printer-friendly NCAA tournament brackets, as PDF files, for people "
"participating in a March Madness contest."
msgstr "Por exemplo, o DJango foi usado no kusports.com_ para gerar relatórios personalizados, prontos para impressão, de pontuação de torneio da NCAA, como arquivos PDF, para pessoas que participam do concurso March Madness."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:21
msgid "Install ReportLab"
msgstr "Instalar o ReportLab"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:23
msgid ""
"The ReportLab library is `available on PyPI`_. A `user guide`_ (not "
"coincidentally, a PDF file) is also available for download. You can install "
"ReportLab with ``pip``:"
msgstr "A biblioteca RepostLab está  disponível  `available on PyPI`_. Um guia de usuário em `user guide`_ (não coincidentemente um arquivo PDF) está disponível para download. Você pode instalar o ReportLab com ``pip``:"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:31
msgid ""
"Test your installation by importing it in the Python interactive "
"interpreter::"
msgstr "Teste sua instalação importando no interpretador interativo Python::"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:35
msgid "If that command doesn't raise any errors, the installation worked."
msgstr "Se o comando não emitir nenhum erro, a instalação funciona."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:41
msgid "Write your view"
msgstr "Escreva sua \"view\""

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:43
msgid ""
"The key to generating PDFs dynamically with Django is that the ReportLab API"
" acts on file-like objects, and Django's :class:`~django.http.HttpResponse` "
"objects are file-like objects."
msgstr "A chave para gerar PDF dinamicamente com Django é que a API do ReportLab atua como um objeto \"file-like\", e os :class:`~django.http.HttpResponse` do Django são objetos \"file-like\"."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:47
msgid "Here's a \"Hello World\" example::"
msgstr "Aqui um exemplo \"Hello World\"::"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:72
msgid ""
"The response gets a special MIME type, :mimetype:`application/pdf`. This "
"tells browsers that the document is a PDF file, rather than an HTML file. If"
" you leave this off, browsers will probably interpret the output as HTML, "
"which would result in ugly, scary gobbledygook in the browser window."
msgstr "A resposta HTTP tem um tipo MIME especial, :mimetype:`application/pdf`. Isso indica ao browser que o documento é um arquivo PDF, ao invés de arquivo HTML. Se deixar isso de fora, o browser provavelmente irá interpretar o ontúdo como HTML, o qual deve resultar em uma feia, assustadora \"sopa de ltrinhas\" no browser."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:78
msgid ""
"The response gets an additional ``Content-Disposition`` header, which "
"contains the name of the PDF file. This filename is arbitrary: Call it "
"whatever you want. It'll be used by browsers in the \"Save as...\" dialog, "
"etc."
msgstr "A resposta HTTP também tem um cabeçalho adicional  ``Content-Disposition``, o qual contém o nome do arquivo PDF. Este nome de arquivo é arbitrário: Chame como quizer. Isso será usado pelo browser na caixa de diálogo \"Salvar como...\", etc."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:82
msgid ""
"The ``Content-Disposition`` header starts with ``'attachment; '`` in this "
"example. This forces Web browsers to pop-up a dialog box "
"prompting/confirming how to handle the document even if a default is set on "
"the machine. If you leave off ``'attachment;'``, browsers will handle the "
"PDF using whatever program/plugin they've been configured to use for PDFs. "
"Here's what that code would look like::"
msgstr "O cabeçalho HTTP ``Content-Disposition`` começa com ``attachment;`` neste exemplo. Isso força o browser a mostrar uma caixa de diálogo perguntando/confirmando como manipular o documento mesmo que exista um padrão definido no computador. Se deixar sem o ``'attachment;'``, os browsers usarão qualquer programa/plugin que estejam configurados para usar com PDF. Aqui como o código se parece::"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:91
msgid ""
"Hooking into the ReportLab API is easy: Just pass ``response`` as the first "
"argument to ``canvas.Canvas``. The ``Canvas`` class expects a file-like "
"object, and :class:`~django.http.HttpResponse` objects fit the bill."
msgstr "Acessar a API do ReportLab é fácil: apenas passe o ``response`` como primeiro argumento para ``canvas.Canvas`. A classe ``Canvas`` espera um objeto \"file-like\", e os objetos :class:`~django.http.HttpResponse` se encaixam na definição."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:96
msgid ""
"Note that all subsequent PDF-generation methods are called on the PDF object"
" (in this case, ``p``) -- not on ``response``."
msgstr "Note que todos os métodos subsequentes para geração do PDF são chamados  a partir do objeto (neste caso , ``p``) -- e não do ``response``."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:99
msgid ""
"Finally, it's important to call ``showPage()`` and ``save()`` on the PDF "
"file."
msgstr "E finalmente, é importante chamar ``showPage()`` e o  ``save()`` no arquivo PDF."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:104
msgid ""
"ReportLab is not thread-safe. Some of our users have reported odd issues "
"with building PDF-generating Django views that are accessed by many people "
"at the same time."
msgstr "O ReposrtLab não tem mecanismos de segurança para ser usado de maneira concorrente, ou não é thread-safe. Alguns de nossos usuários tem relatado problemas ímpares ao gerar PDF em \"views\" Django que são acessadas por muitos usuários ao mesmo tempo."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:109
msgid "Complex PDFs"
msgstr "PDFs complexos"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:111
msgid ""
"If you're creating a complex PDF document with ReportLab, consider using the"
" :mod:`io` library as a temporary holding place for your PDF file. This "
"library provides a file-like object interface that is particularly "
"efficient. Here's the above \"Hello World\" example rewritten to use "
":mod:`io`::"
msgstr "Se estiver contruindo documentos PDFs complexos com o ReportLab, considere usar a bilioteca :mod:`io` como um lucar temporário de armazenamento do seu arquivo PDF. Essa biblioteca fornece uma  objeto \"file-like\" como interface que é particularmente eficiente. Aqui o mesmo exemplo \"Hello World\" de antes, reescrito com uso do :mod:`io`::"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:145
msgid "Further resources"
msgstr "Outras fontes"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:147
msgid ""
"PDFlib_ is another PDF-generation library that has Python bindings. To use "
"it with Django, just use the same concepts explained in this article."
msgstr "PDFlib_ é uma outra bibliotea de geração de PDF que tem API, ou \"bindings\" para Python. Para usá-lo com o Django, apenas use os mesmos conceitos explanados neste artigo."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:149
msgid ""
"`XHTML2PDF`_ is yet another PDF-generation library. It ships with an example"
" of how to integrate it with Django."
msgstr "`XHTML2PDF`_ é ainda uma outra biblioteca para gerar PDF. Ele vêm com um exemplo de como integrá-lo com o Django."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:151
msgid ""
"HTMLdoc_ is a command-line script that can convert HTML to PDF. It doesn't "
"have a Python interface, but you can escape out to the shell using "
"``system`` or ``popen`` and retrieve the output in Python."
msgstr "HTMLdoc_ é um script para a linha de comando que pode converter HTML para PDF. Ele nao tem uma interface para Python. Mas você pode usá-lo acessando o \"shell\" através do ``system`` ou ``popen`` e retornar a saída para o Python."

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:160
msgid "Other formats"
msgstr "Outros Formatos"

#: ../../../../sources/1.9/docs/howto/outputting-pdf.txt:162
msgid ""
"Notice that there isn't a lot in these examples that's PDF-specific -- just "
"the bits using ``reportlab``. You can use a similar technique to generate "
"any arbitrary format that you can find a Python library for. Also see "
":doc:`/howto/outputting-csv` for another example and some techniques you can"
" use when generated text-based formats."
msgstr "Note que não tem muito nestes exemplos que seja especificamente sobre PDF -- apenas as partes usando ``reportlab``. Você pode usar técnicas similares para gerar qualquer outro formato arbitrário para a qual você encontre uma bilioteca Python. Veja também :doc:`/howto/outputting-csv` para outro exemplo e algumas técnicas que você pode usar quando quiser gerar fomatos baseados em texto. "

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:3
msgid "Deploying static files"
msgstr "Deploy de arquivos estáticos"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:7
msgid ""
"For an introduction to the use of :mod:`django.contrib.staticfiles`, see "
":doc:`/howto/static-files/index`."
msgstr "Para uma introdução ao uso de :mod:`django.contrib.staticfiles`, veja :doc:`/howto/static-files/index`."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:13
msgid "Serving static files in production"
msgstr "Servindo arquivos estáticos em produção"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:15
msgid ""
"The basic outline of putting static files into production is simple: run the"
" :djadmin:`collectstatic` command when static files change, then arrange for"
" the collected static files directory (:setting:`STATIC_ROOT`) to be moved "
"to the static file server and served. Depending on "
":setting:`STATICFILES_STORAGE`, files may need to be moved to a new location"
" manually or the :func:`post_process "
"<django.contrib.staticfiles.storage.StaticFilesStorage.post_process>` method"
" of the ``Storage`` class might take care of that."
msgstr "O esquama básico para colocar arquivos estáticos em produção é simples: execute o comando :djadmin:`collectstatic` quando houver mudanças nos arquivos estáticos, então faça os arranjos para que o diretório de arquivos estáticos (:setting:`STATIC_ROOT`) seja movido para o servidor de arquivos estátios e o sirva. Dependendo do :setting:`STATICFILES_STORAGE`, os arquivos talvez precisem ser movidos manualmente para um novo local ou o método :func:`post_process <django.contrib.staticfiles.storage.StaticFilesStorage.post_process>` da classe ``Storage`` talvez o faça."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:23
msgid ""
"Of course, as with all deployment tasks, the devil's in the details. Every "
"production setup will be a bit different, so you'll need to adapt the basic "
"outline to fit your needs. Below are a few common patterns that might help."
msgstr "Claro, como todas as tarefas de implantação, os problemas estão nos detalhes. Cada configuração de produção será um pouco diferente, então você irá precisar adaptar o esquema básico para atender suas necessidades. Abaixo estã alguns padrões que podem ajudar."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:28
msgid "Serving the site and your static files from the same server"
msgstr "Servindo o site e os arquivos estáticos de um mesmo servidor."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:30
msgid ""
"If you want to serve your static files from the same server that's already "
"serving your site, the process may look something like:"
msgstr "Se você quer servir arquivos estáticos do mesmo servidor que já está servindo seu site , o processo talvez se parece com algo como:"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:33
msgid "Push your code up to the deployment server."
msgstr "Suba seu código para o servidor de deploy."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:34
msgid ""
"On the server, run :djadmin:`collectstatic` to copy all the static files "
"into :setting:`STATIC_ROOT`."
msgstr "No servidor, execute: :djadmin:`collectstatic` para que copie todos os arquivos estáticos para dentro de :setting:`STATIC_ROOT`."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:36
msgid ""
"Configure your web server to serve the files in :setting:`STATIC_ROOT` under"
" the URL :setting:`STATIC_URL`. For example, here's :ref:`how to do this "
"with Apache and mod_wsgi <serving-files>`."
msgstr "Configure seu servidor Web para servir seus arquivos em :setting:`STATIC_ROOT` sob a URL :setting:`STATIC_URL`. Por exemplo, aqui :ref:`como fazer isso com Apache e mod_wsgi <serving-files>`."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:40
msgid ""
"You'll probably want to automate this process, especially if you've got "
"multiple web servers. There's any number of ways to do this automation, but "
"one option that many Django developers enjoy is `Fabric "
"<http://fabfile.org/>`_."
msgstr "Você provavelmente irá querer automatizar esse processo, principalmente se você tem múltiplos servidores web. Existem várias maneiras de fazer essa automação, mas uma opção que muitos desenvolvedores Django gostam é o `Fabric <http://fabfile.org/>`_."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:45
msgid ""
"Below, and in the following sections, we'll show off a few example fabfiles "
"(i.e. Fabric scripts) that automate these file deployment options. The "
"syntax of a fabfile is fairly straightforward but won't be covered here; "
"consult `Fabric's documentation <http://docs.fabfile.org/>`_, for a complete"
" explanation of the syntax."
msgstr "Abaixo, e nas seções seguintes, mostraremos alguns exemplos de \"fabfiles\" (isto é scripts fabric) que automatizam essas opções para colocar arquivos em produção. A sintaxe de um fabfile é bastante simples más não será coberto aqui; consulte`a documentação do Fabric <http://docs.fabfile.org/>`_, para uma explicação completa sobre a sintaxe."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:51
msgid ""
"So, a fabfile to deploy static files to a couple of web servers might look "
"something like::"
msgstr "Então, um fabfile para implantar arquivos estáticos em alguns servidores web pode ser algo como::"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:67
msgid "Serving static files from a dedicated server"
msgstr "Servindo arquivos estáticos atráves de um servidor dedicado"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:69
msgid ""
"Most larger Django sites use a separate Web server -- i.e., one that's not "
"also running Django -- for serving static files. This server often runs a "
"different type of web server -- faster but less full-featured. Some common "
"choices are:"
msgstr "A maioria dos grandes sites Django usam um servidor Web separado – isto é, um que não está servindo também um site Django – para servir arquivos estáticos. Este servidor roda um tipo diferente de servidor web – mais rápido, mas sem tantas funcionalidades. Algumas opções são:"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:79
msgid ""
"Configuring these servers is out of scope of this document; check each "
"server's respective documentation for instructions."
msgstr "A configuração destes servidores estão fora do escopo deste documento; verifique a respectiva documentação de cada um para instruções."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:82
msgid ""
"Since your static file server won't be running Django, you'll need to modify"
" the deployment strategy to look something like:"
msgstr "Já que seu servidor de arquivos estáticos não irão rodar um Django, você irá precisar modificar a estratégia para algo como:"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:85
msgid "When your static files change, run :djadmin:`collectstatic` locally."
msgstr "Quando seus arquivos estáticos mudarem, execute :djadmin:`collectstatic`  localmente."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:87
msgid ""
"Push your local :setting:`STATIC_ROOT` up to the static file server into the"
" directory that's being served. `rsync <https://rsync.samba.org/>`_ is a "
"common choice for this step since it only needs to transfer the bits of "
"static files that have changed."
msgstr "Coloque seu  :setting:`STATIC_ROOT` local no servidor de arquivo estático dentro do diretório que esta sendo servido. O  `rsync <https://rsync.samba.org/>`_ é uma opção comum para este passo já que ele precisa transferir somente as partes dos arquivos estáticos quesofreram mudanças."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:92
msgid "Here's how this might look in a fabfile::"
msgstr "Aqui está como isso pode parar no fabfile::"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:115
msgid "Serving static files from a cloud service or CDN"
msgstr "Servindo arquivos estáticos de um servidor \"cloud\" ou CDN"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:117
msgid ""
"Another common tactic is to serve static files from a cloud storage provider"
" like Amazon's S3 and/or a CDN (content delivery network). This lets you "
"ignore the problems of serving static files and can often make for faster-"
"loading webpages (especially when using a CDN)."
msgstr "Uma outra tática comum é servir arquivos estáticos de um fornecedor de armazenamento na \"cloud\" como o S3 da Amazom e/ou um CDN (Content delivery network). Isso deixa você ignorar os problemas de servir arquivos estáticos e pode muitas vezes fazer páginas web serem carregadas mais rapidamente (especialmente quando em uma CDN)."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:122
msgid ""
"When using these services, the basic workflow would look a bit like the "
"above, except that instead of using ``rsync`` to transfer your static files "
"to the server you'd need to transfer the static files to the storage "
"provider or CDN."
msgstr "Quando usar estes serviços, o processo básico será parecido como o acima, exceto que no lugar de usar o ``rsync`` para transferir seus arquivos estáticos para o servidor, você irá precisa transferir os arquivos estáticos para fornecedor do armazenamento ou CDN."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:126
msgid ""
"There's any number of ways you might do this, but if the provider has an API"
" a :doc:`custom file storage backend </howto/custom-file-storage>` will make"
" the process incredibly simple. If you've written or are using a 3rd party "
"custom storage backend, you can tell :djadmin:`collectstatic` to use it by "
"setting :setting:`STATICFILES_STORAGE` to the storage engine."
msgstr "Existem inúmeras maneiras para fazer isso, mas se o provedor tem uma API um :doc:`backend personalizado para armazenamento de arquivo </howto/custom-file-storage>` fará o processo incrivelmente simples. Se você escreveu ou está usando um \"backend\" de armazenamento personalizado de terceiros, você pode avisar o :djadmin:`collectstatic` para usá-lo definindo :setting:`STATICFILES_STORAGE` para o mecanismo de armazenamento."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:132
msgid ""
"For example, if you've written an S3 storage backend in "
"``myproject.storage.S3Storage`` you could use it with::"
msgstr "Por exemplo, se você escreveu um backend de armazenamento para o S3 em ``myproject.storage.S3Storage`` você poderia usar isso com:"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:137
msgid ""
"Once that's done, all you have to do is run :djadmin:`collectstatic` and "
"your static files would be pushed through your storage package up to S3. If "
"you later needed to switch to a different storage provider, it could be as "
"simple as changing your :setting:`STATICFILES_STORAGE` setting."
msgstr "Uma vez isso feito, tudo que tem a fazer é executar :djadmin:`collectstatic` e seus arquivos estáticos deveriam ser então colocados através do seu pacote de armazenamento no S3. Se você mais tarde precisar trocar para um provedor de armazenamento diferente, isso deveria ser tão fácil quanto alterar suas configurações no :setting:`STATICFILES_STORAGE`. "

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:142
msgid ""
"For details on how you'd write one of these backends, see :doc:`/howto"
"/custom-file-storage`. There are 3rd party apps available that provide "
"storage backends for many common file storage APIs. A good starting point is"
" the `overview at djangopackages.com <https://www.djangopackages.com/grids/g"
"/storage-backends/>`_."
msgstr "Para detalhes sobre como escrever um destes backends, veja :doc:`/howto/custom-file-storage`. Existem aplicações de terceiros disponíveis que fornecem backends de armazenamento para muitas APIs de armazenamento comuns. Um bom começo é dar uma  `olhada no djangopackages.com <https://www.djangopackages.com/grids/g/storage-backends/>`_."

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:149
#: ../../../../sources/1.9/docs/howto/static-files/index.txt:184
msgid "Learn more"
msgstr "Aprenda mais"

#: ../../../../sources/1.9/docs/howto/static-files/deployment.txt:151
msgid ""
"For complete details on all the settings, commands, template tags, and other"
" pieces included in :mod:`django.contrib.staticfiles`, see :doc:`the "
"staticfiles reference </ref/contrib/staticfiles>`."
msgstr "Para detalhes completos sobre todas as configurações, comandos, tags de templates, e outras partes incluídas em :mod:`django.contrib.staticfiles`, veja  :doc:`a referencia de arquivos estáticos </ref/contrib/staticfiles>`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:3
msgid "Managing static files (e.g. images, JavaScript, CSS)"
msgstr "Gerenciamento de arquivos estáticos (exemplo: imagens, JavaScript, CSS)"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:5
msgid ""
"Websites generally need to serve additional files such as images, "
"JavaScript, or CSS. In Django, we refer to these files as \"static files\"."
"  Django provides :mod:`django.contrib.staticfiles` to help you manage them."
msgstr "Os sites web geralmente precisam servir arquivos adicionais como imagens, JavaScript, ou CSS. No Django, nós nos referímos a estes arquivos como \"arquivos estáticos\". O Django fornece  :mod:`django.contrib.staticfiles` para ajudar você a lidar com eles. "

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:9
msgid "This page describes how you can serve these static files."
msgstr "Está página descreve como você pode servir estes arquivos estáticos."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:12
msgid "Configuring static files"
msgstr "Configurando arquivos estáticos"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:14
msgid ""
"Make sure that ``django.contrib.staticfiles`` is included in your "
":setting:`INSTALLED_APPS`."
msgstr "Certifique-se de que ``django.contrib.staticfiles`` está incluído no seu ::setting::`INSTALLED_APPS`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:17
msgid "In your settings file, define :setting:`STATIC_URL`, for example::"
msgstr "Em seu arquivo de configurações, defina :setting:`STATIC_URL`, por exemplo::"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:21
msgid ""
"In your templates, either hardcode the url like "
"``/static/my_app/myexample.jpg`` or, preferably, use the :ttag:`static"
"<staticfiles-static>` template tag to build the URL for the given relative "
"path by using the configured :setting:`STATICFILES_STORAGE` storage (this "
"makes it much easier when you want to switch to a content delivery network "
"(CDN) for serving static files)."
msgstr "Nos seus templates, ou coloque manualmente a url como ``/static/my_app/myexample.jpg`` ou, preferivelmente, use a tag de template :ttag:`static<staticfiles-static>` para construir a URL para o dado caminho relativo usando o  armazenamento configurado em :setting:`STATICFILES_STORAGE` (isso torna mais fácil quando você quiser trocar para um CDN - (content delivery network) para servir arquivos estáticos)."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:35
msgid ""
"Store your static files in a folder called ``static`` in your app. For "
"example ``my_app/static/my_app/myimage.jpg``."
msgstr "Armazene seus arquivos estáticos no diretório chamado ``static`` dentro da sua app. Por exemplo ``my_app/static/my_app/myimage.jpg``."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:38
msgid "Serving the files"
msgstr "Servindo os arquivos"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:40
msgid ""
"In addition to these configuration steps, you'll also need to actually serve"
" the static files."
msgstr "Além desses passos de configurações, você também vai precisar servir os arquivos estáticos."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:43
msgid ""
"During development, if you use :mod:`django.contrib.staticfiles`, this will "
"be done automatically by :djadmin:`runserver` when :setting:`DEBUG` is set "
"to ``True`` (see :func:`django.contrib.staticfiles.views.serve`)."
msgstr "Durante o desenvolvimento, se você usar :mod:`django.contrib.staticfiles`, isso será feito automaticamente pelo :djadmin:`runserver` quando :setting:`DEBUG` está definido como ``True``(veja :func:`django.contrib.staticfiles.views.serve`). "

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:47
msgid ""
"This method is **grossly inefficient** and probably **insecure**, so it is "
"**unsuitable for production**."
msgstr "Este método é **grosseiramente ineficiente** e provavelmente **inseguro**, então isso é **impróprio para produção**."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:50
msgid ""
"See :doc:`/howto/static-files/deployment` for proper strategies to serve "
"static files in production environments."
msgstr "Veja :doc:`/howto/static-files/deployment` para estratégias apropriadas para servir arquivos estáticos em ambientes de produção."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:53
msgid ""
"Your project will probably also have static assets that aren't tied to a "
"particular app. In addition to using a ``static/`` directory inside your "
"apps, you can define a list of directories (:setting:`STATICFILES_DIRS`) in "
"your settings file where Django will also look for static files. For "
"example::"
msgstr "Seu projeto irá provavelmente ter ativos estáticos que não estão amarrados a uma app em particular. Além de usar um diretório ``static/`` dentro de sua app, você pode definir uma lista de diretórios (:setting:`STATICFILES_DIRS`) no seu arquivo de configurações onde o Django também irá procurar por arquivos estáticos. Por exemplo::"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:63
msgid ""
"See the documentation for the :setting:`STATICFILES_FINDERS` setting for "
"details on how ``staticfiles`` finds your files."
msgstr "Veja a documentação para a definição do :setting:`STATICFILES_FINDERS` para detalhes sobre como o ``staticfiles`` encontra seus arquivos."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:66
msgid "Static file namespacing"
msgstr "\"namespacing\" de arquivos estáticos"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:68
msgid ""
"Now we *might* be able to get away with putting our static files directly in"
" ``my_app/static/`` (rather than creating another ``my_app`` subdirectory), "
"but it would actually be a bad idea. Django will use the first static file "
"it finds whose name matches, and if you had a static file with the same name"
" in a *different* application, Django would be unable to distinguish between"
" them. We need to be able to point Django at the right one, and the easiest "
"way to ensure this is by *namespacing* them. That is, by putting those "
"static files inside *another* directory named for the application itself."
msgstr "Agora somos capazes de resolver isso colocando nossos arquivos diretamente em ``my_app/static/`` (ao invés de criar outro subdiretório ``my_app``), mas isso seria na verdade uma má idéia. O Django irá usar o primeiro arquivo estático que encontrar com o mesmo nome, e se você tiver um arquivo estático com o mesmo nome em uma outra aplicação, o Django será incapaz de distinguir entre eles. Precisamos ser capazes de apontar ao Django o arquivo correto, e a maneira mais fácil de fazer isso é *contextualizando* eles. Isso é, colocando aqueles arquivos estáticos dentro de um *outro* diretório nomeado para aquela aplicação específica. "

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:81
msgid "Serving static files during development."
msgstr "Servindo arquivos estáticos durante desenvolvimento."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:83
msgid ""
"If you use :mod:`django.contrib.staticfiles` as explained above, "
":djadmin:`runserver` will do this automatically when :setting:`DEBUG` is set"
" to ``True``. If you don't have ``django.contrib.staticfiles`` in "
":setting:`INSTALLED_APPS`, you can still manually serve static files using "
"the :func:`django.contrib.staticfiles.views.serve` view."
msgstr "Se você usa :mod:`django.contrib.staticfiles` como explicado acima, :djadmin:`runserver` irá fazer isso automaticamente quando o :setting:`DEBUG` está definido como ``True``. Se você não tem ``django.contrib.staticfiles`` no :setting:`INSTALLED_APPS`, você ainda pode servir arquivos estáticos manualmente usando a \"view\" :func:`django.contrib.staticfiles.views.serve`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:89
#: ../../../../sources/1.9/docs/howto/static-files/index.txt:121
msgid ""
"This is not suitable for production use! For some common deployment "
"strategies, see :doc:`/howto/static-files/deployment`."
msgstr "Isso não é apropriado para uso em produção!. Para algumas estratégias de implantação, veja :doc:`/howto/static-files/deployment`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:92
msgid ""
"For example, if your :setting:`STATIC_URL` is defined as ``/static/``, you "
"can do this by adding the following snippet to your urls.py::"
msgstr "Por exemplo, se seu :setting:`STATIC_URL` está definido como ``/static/``, você pode fazê-lo adicionando o seguinte pedaço de código no seu urls.py::"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:104
msgid ""
"This helper function works only in debug mode and only if the given prefix "
"is local (e.g. ``/static/``) and not a URL (e.g. "
"``http://static.example.com/``)."
msgstr "A função de auxílio funciona somente em mode de depuração e somente se o dado prefixo for local (ex.: ``/static/``)  e não uma URL  (ex.: ``http://static.example.com/``)."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:108
msgid ""
"Also this helper function only serves the actual :setting:`STATIC_ROOT` "
"folder; it doesn't perform static files discovery like "
":mod:`django.contrib.staticfiles`."
msgstr "Ainda esta função de auxílio somente serve o diretório atual :setting:`STATIC_ROOT`; ela não faz a procura de arquivos estáticos como :mod:`django.contrib.staticfiles`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:115
msgid "Serving files uploaded by a user during development."
msgstr "Servindo arquivos enviados por um usuário durante o desenvolvimento."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:117
msgid ""
"During development, you can serve user-uploaded media files from "
":setting:`MEDIA_ROOT` using the "
":func:`django.contrib.staticfiles.views.serve` view."
msgstr "Durante o desenvolvimento, você pode servir arquivos de media dos usuários através do :setting:`MEDIA_ROOT`  usando a \"view\"  :func:`django.contrib.staticfiles.views.serve`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:124
msgid ""
"For example, if your :setting:`MEDIA_URL` is defined as ``/media/``, you can"
" do this by adding the following snippet to your urls.py::"
msgstr "Por exemplo, se o seu :setting:`MEDIA_URL` está definido como ``/media/``, você pode faze-lo adicionando o seguinte pedaço de código no seu urls.py::"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:136
msgid ""
"This helper function works only in debug mode and only if the given prefix "
"is local (e.g. ``/media/``) and not a URL (e.g. "
"``http://media.example.com/``)."
msgstr "Essa função de auxílio funciona somente em mode de depuração e somente se o dado prefixo for local (ex.: ``/media/``) e não uma URL  (e.g. ``http://media.example.com/``)."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:145
msgid ""
"When running tests that use actual HTTP requests instead of the built-in "
"testing client (i.e. when using the built-in :class:`LiveServerTestCase "
"<django.test.LiveServerTestCase>`) the static assets need to be served along"
" the rest of the content so the test environment reproduces the real one as "
"faithfully as possible, but ``LiveServerTestCase`` has only very basic "
"static file-serving functionality: It doesn't know about the finders feature"
" of the ``staticfiles`` application and assumes the static content has "
"already been collected under :setting:`STATIC_ROOT`."
msgstr "Ao executar testes que usam requisições HTTP reais ao invés do cliente de teste embutido (isto é, quando se usa a :class:`LiveServerTestCase <django.test.LiveServerTestCase>` do Django) o conteúdo estático precisa ser servido junto com o resto do conteúdo então o ambiente de teste reproduz o real tão fielmente quanto possível, mas ``LiveServeTestCase`` tem somente funcionalidades de servidor de arquivos muito básicas. Ele não sabe sobre as caraceterísticas de procura da aplicação ``staticfiles`` e assume que o conteúdo estático já tenha sido coletado pelo :setting:`STATIC_ROOT`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:154
msgid ""
"Because of this, ``staticfiles`` ships its own "
":class:`django.contrib.staticfiles.testing.StaticLiveServerTestCase`, a "
"subclass of the built-in one that has the ability to transparently serve all"
" the assets during execution of these tests in a way very similar to what we"
" get at development time with ``DEBUG = True``, i.e. without having to "
"collect them using :djadmin:`collectstatic` first."
msgstr "Por causa disso, ``staticfiles`` vem com sua própria :class:`django.contrib.staticfiles.testing.StaticLiveServerTestCase`, uma subclasse daquela que vem embutida uma que tem a habilidade de servir de maneira transparente todos os ativos durante a execução destes testes de uma maneira similar a que temos em tempo de desenvovlimento com ``DEBUG = TRUE``, isto é, sem coletá-los usando antes o :djadmin:`collectstatic`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:162
#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:87
msgid "Deployment"
msgstr "Implantação"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:164
msgid ""
":mod:`django.contrib.staticfiles` provides a convenience management command "
"for gathering static files in a single directory so you can serve them "
"easily."
msgstr ":mod:`django.contrib.staticfiles` fornece um comando de gerenciamento conveniente para juntar arquivos estáticos e um único diretório então você pode servi-los facilmente."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:167
msgid ""
"Set the :setting:`STATIC_ROOT` setting to the directory from which you'd "
"like to serve these files, for example::"
msgstr "Defina a configuração do :setting:`STATIC_ROOT` para o diretorio do qual você gostaria de servir estes arquivos, por exemplo::"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:172
msgid "Run the :djadmin:`collectstatic` management command::"
msgstr "Execute o comando de gerenciamento :djadmin:`collectstatic` ::"

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:176
msgid ""
"This will copy all files from your static folders into the "
":setting:`STATIC_ROOT` directory."
msgstr "Isso irá copiar todos os arquivos dos diretórios \"static\" para dentro do diretório definido em :setting:`STATIC_ROOT`."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:179
msgid ""
"Use a web server of your choice to serve the files. :doc:`/howto/static-"
"files/deployment` covers some common deployment strategies for static files."
msgstr "Use um servidor Web de sua escolha para servir os arquivos. O :doc:`/howto/static-files/deployment` cobre algumas estratégias de implantações comuns para arquivos estáticos."

#: ../../../../sources/1.9/docs/howto/static-files/index.txt:186
msgid ""
"This document has covered the basics and some common usage patterns. For "
"complete details on all the settings, commands, template tags, and other "
"pieces included in :mod:`django.contrib.staticfiles`, see :doc:`the "
"staticfiles reference </ref/contrib/staticfiles>`."
msgstr "Este documento cobriu o básico e alguns padrões de uso comum. Para detalhes completos sobre todas as configurações, comandos, tags de templates, e outras partes incluídas em :mod:`django.contrib.staticfiles`, veja a :doc:`referência de arquivos estáticos </ref/contrib/staticfiles>`."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:3
msgid "Upgrading Django to a newer version"
msgstr "Atualizando o Django para uma nova versão"

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:5
msgid ""
"While it can be a complex process at times, upgrading to the latest Django "
"version has several benefits:"
msgstr "Enquanto que isso pode ser as vezes um processo complexo, atualizar a versão do Django tem muitos benefícios:"

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:8
msgid "New features and improvements are added."
msgstr "Novas características e melhorias são adicionadas."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:9
msgid "Bugs are fixed."
msgstr "Erros são ajustados."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:10
msgid ""
"Older version of Django will eventually no longer receive security updates. "
"(see :ref:`backwards-compatibility-policy`)."
msgstr "Antigas versões do Django eventualmente não irão receber atualizações de segurança.  (veja :ref:`backwards-compatibility-policy`)."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:12
msgid ""
"Upgrading as each new Django release is available makes future upgrades less"
" painful by keeping your code base up to date."
msgstr "Atualizando assim que cada versão do Django fica disponível faz com que futuras atualizações sejam menos dolorosas, por mantendo sua base de código atualizada."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:15
msgid ""
"Here are some things to consider to help make your upgrade process as smooth"
" as possible."
msgstr "Aqui alguns pontos para considerar para ajudar fazer seu process ode atualização mais suave tanto quanto possível."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:19
msgid "Required Reading"
msgstr "Leitura requerida"

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:21
msgid ""
"If it's your first time doing an upgrade, it is useful to read the "
":doc:`guide on the different release processes </internals/release-"
"process>`."
msgstr "Se esta é sua primeira vez fazendo uma atualização, é útil ler o :doc:`guia sobre o proesso de atualizações diferente </internals/release-process>`."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:24
msgid ""
"Afterwards, you should familiarize yourself with the changes that were made "
"in the new Django version(s):"
msgstr "Depois você deveria familiarizar-se com as mudanças que foram feitas na(s) verõe(s) nova(s) do Django."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:27
msgid ""
"Read the :doc:`release notes </releases/index>` for each 'final' release "
"from the one after your current Django version, up to and including the "
"version to which you plan to upgrade."
msgstr "Leia o :doc:`notas sobre a edição </releases/index>` para cara edição a partir da sua versão de Django corrente, até e inclusive a versão do Django pra qual que você planeja atualizar."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:30
msgid ""
"Look at the :doc:`deprecation timeline</internals/deprecation>` for the "
"relevant versions."
msgstr "Dê uma olhada no :doc:`linha do tempo da depreciação</internals/deprecation>` para as versões relevantes."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:33
msgid ""
"Pay particular attention to backwards incompatible changes to get a clear "
"idea of what will be needed for a successful upgrade."
msgstr "Preste uma atenção particular a imcompatibilidades das mudanças nas versões anteriores para ter uma idéia clara do que será necessário para uma atualização de sucesso."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:37
msgid "Dependencies"
msgstr "Dependências"

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:39
msgid ""
"In most cases it will be necessary to upgrade to the latest version of your "
"Django-related dependencies as well. If the Django version was recently "
"released or if some of your dependencies are not well-maintained, some of "
"your dependencies may not yet support the new Django version. In these cases"
" you may have to wait until new versions of your dependencies are released."
msgstr "Na marioria dos casos para atualizar para a última versão do Django será necessário atualiar as dependências do Django também. Se a versão do Django foi lançada recentemente ou se algumas de suas dependências não são muito bem mantidas, algumas dependências podem não dar suporte a versão do Django. Nestes casos você terá que esperar até que a nova versão das dependências sejam lançadas."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:46
msgid "Installation"
msgstr "Instalação"

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:48
msgid ""
"Once you're ready, it is time to :doc:`install the new Django version "
"</topics/install>`. If you are using virtualenv_ and it is a major upgrade, "
"you might want to set up a new environment with all the dependencies first."
msgstr "Uma vez que esteja pronto, é hora de :doc:`Instale a nova versão do Django </topics/install>`. Se estiver usando o virtualenv_ e for uma atualização grande, você talvez queira configurar um novo ambiente com todas as depoendências primeiro."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:52
msgid ""
"Exactly which steps you will need to take depends on your installation "
"process. The most convenient way is to use pip_ with the ``--upgrade`` or "
"``-U`` flag:"
msgstr "Os passos exatos que serão necessários depende do seu processo de inatalação. O jeito mais conveniente é usar o pip_ com ``--upgrade`` ou o parametro ``-U``:"

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:59
msgid "pip_ also automatically uninstalls the previous version of Django."
msgstr "O pip_ também automaticamente desinstala as versões anteriores do Django."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:61
msgid ""
"If you use some other installation process, you might have to manually "
":ref:`uninstall the old Django version <removing-old-versions-of-django>` "
"and should look at the complete installation instructions."
msgstr "Se você usa outros processos de instalação, tavez seja necessário manualmente :ref:`desinstalar a versão antig do Django <removing-old-versions-of-django>` e deve dar uma olhada nas instruções completas de instalação."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:71
msgid ""
"When the new environment is set up, :doc:`run the full test suite "
"</topics/testing/overview>` for your application. In Python 2.7+, "
"deprecation warnings are silenced by default. It is useful to turn the "
"warnings on so they are shown in the test output (you can also use the flag "
"if you test your app manually using ``manage.py runserver``):"
msgstr "Quando o novo ambiente é configurado, :doc:`rode a aplicação de teste completa </topics/testing/overview>` para sua aplicação. No Python 2.7+, os alertas sobre descontinuidade são desligados por padrão. É útil ligar os alertas para que eles sejam mostrados nas saídas dos testes (você pode também usar os parâmetros se você testa sua aplicação manualmente usando ``manage.py runserver``):"

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:81
msgid ""
"After you have run the tests, fix any failures. While you have the release "
"notes fresh in your mind, it may also be a good time to take advantage of "
"new features in Django by refactoring your code to eliminate any deprecation"
" warnings."
msgstr "Depois que rodar os testes, concerte as falhas. Enquanto você tem as notas da versão frescas na sa cabeça, talvez seja uma boa hora para tirar vantagem das novas caraceterísticas do Django refatorando o código para eliminar qualquer alerta de descontinuidade."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:89
msgid ""
"When you are sufficiently confident your app works with the new version of "
"Django, you're ready to go ahead and :doc:`deploy </howto/deployment/index>`"
" your upgraded Django project."
msgstr "Quando você estiver suficientemente confiante que sua aplicação funciona com a nova versão do Django, você está pronto para ir em frente e :doc:`implantar </howto/deployment/index>` seu projeto com Django atualizado."

#: ../../../../sources/1.9/docs/howto/upgrade-version.txt:93
msgid ""
"If you are using caching provided by Django, you should consider clearing "
"your cache after upgrading. Otherwise you may run into problems, for "
"example, if you are caching pickled objects as these objects are not "
"guaranteed to be pickle-compatible across Django versions. A past instance "
"of incompatibility was caching pickled :class:`~django.http.HttpResponse` "
"objects, either directly or indirectly via the "
":func:`~django.views.decorators.cache.cache_page` decorator."
msgstr "Se você estiver usando o cache fornecido pelo Django, você deve considerar limpar o cache depois da atualização. De outro modo você pode ter problemas, por exemplo, se você estiver mantendo em cache objetos serializados e estes objetos não tem garantia de compatibilidade de serialização entre as versões do Django. Um problema de imcompatibilidade no passado foi o cache de objetos :class:`~django.http.HttpResponse` serializados, diretamente ou indiretamente via o decorador :func:`~django.views.decorators.cache.cache_page`."

#: ../../../../sources/1.9/docs/howto/windows.txt:3
msgid "How to install Django on Windows"
msgstr "Como instalar o Django no Windows"

#: ../../../../sources/1.9/docs/howto/windows.txt:5
msgid ""
"This document will guide you through installing Python 3.5 and Django on "
"Windows. It also provides instructions for installing `virtualenv`_ and "
"`virtualenvwrapper`_, which make it easier to work on Python projects. This "
"is meant as a beginner's guide for users working on Django projects and does"
" not reflect how Django should be installed when developing patches for "
"Django itself."
msgstr "este documento irá lhe guiar através da instalação do Python 3.5 e Django no Windows. Ele também fornece instruções para instalar o `virtualenv`_ e `virtualenvwrapper`_, os quais facilitam trabalhar com projetos Python. Ele serve como um guia de iniciantes para os usuários trabalhando em projetos Django e não reflete como o Django deveria ser instalado quando for para desenvolver \"patches\" para o próprio Django."

#: ../../../../sources/1.9/docs/howto/windows.txt:12
msgid ""
"The steps in this guide have been tested with Windows 7, 8, and 10. In other"
" versions, the steps would be similar. You will need to be familiar with "
"using the Windows command prompt."
msgstr "Os passos para este guia foram testados no windows 7, 8, e 10. Em outras versões, os passos devem ser similares. Você deve estar familiarizado com o uso da linha de comando do Windows."

#: ../../../../sources/1.9/docs/howto/windows.txt:17
msgid "Install Python"
msgstr "Instalando Python"

#: ../../../../sources/1.9/docs/howto/windows.txt:19
msgid ""
"Django is a Python web framework, thus requiring Python to be installed on "
"your machine. At the time of writing, Python 3.5 is the latest version."
msgstr "Django é um framework web Python, então requer que o Python seja instalado no computador. Enquanto escrevo, o Python 3.5 é a última versão."

#: ../../../../sources/1.9/docs/howto/windows.txt:22
msgid ""
"To install Python on your machine go to https://python.org/downloads/. The "
"website should offer you a download button for the latest Python version. "
"Download the executable installer and run it. Check the box next to ``Add "
"Python 3.5 to PATH`` and then click ``Install Now``."
msgstr "Para instalar o Python na sua máquina acesse https://python.org/downloads/. O site web deve oferecer um botão para baixar a última versão do Python. Baixe o executável do instalador e execute-o. Selecione a opçao próximo a ``Add Python 3.5 to PATH`` e então clique ``Install Now``."

#: ../../../../sources/1.9/docs/howto/windows.txt:27
msgid ""
"After installation, open the command prompt and check that the Python "
"version matches the version you installed by executing::"
msgstr "Depois da instalação, abra a linha comando e verifique se a versão do Python é a mesma que a versão instalada executando::"

#: ../../../../sources/1.9/docs/howto/windows.txt:33
msgid "About ``pip``"
msgstr "Sobre o ``pip``"

#: ../../../../sources/1.9/docs/howto/windows.txt:35
msgid ""
"`pip`_ is a package manage for Python. It makes installing and uninstalling "
"Python packages (such as Django!) very easy. For the rest of the "
"installation, we'll use ``pip`` to install Python packages from the command "
"line."
msgstr "O `pip`_ é o gerenciador de pacotes do Python. Ele faz com que instalar e desinstalar pacotes Python (tal como Django) muito fácil. Para o resto da instalação, usaremos o ``pip`` para instalar pacotes Python da linha de comando."

#: ../../../../sources/1.9/docs/howto/windows.txt:42
msgid "Install ``virtualenv`` and ``virtualenvwrapper``"
msgstr "Instalando ``virtualenv`` e ``virtualenvwrapper``"

#: ../../../../sources/1.9/docs/howto/windows.txt:44
msgid ""
"`virtualenv`_ and `virtualenvwrapper`_ provide a dedicated environment for "
"each Django project you create. While not mandatory, this is considered a "
"best practice and will save you time in the future when you're ready to "
"deploy your project. Simply type::"
msgstr "O `virtualenv`_ e `virtualenvwrapper`_  nos dá um ambiente dedicado para cada projeto Django que você criar. Enquanto isso não é obrigatório, é considerado a melhor prática e irá lhe economizar tempo no futuro quando estiver pronto para implantar seu sistema. Simplesmente digite:"

#: ../../../../sources/1.9/docs/howto/windows.txt:51
msgid "Then create a virtual environment for your project::"
msgstr "Então crie um ambiente virtual para seu projeto::"

#: ../../../../sources/1.9/docs/howto/windows.txt:55
msgid ""
"The virtual environment will be activated automatically and you'll see "
"\"(myproject)\" next to the command prompt to designate that. If you start a"
" new command prompt, you'll need to activate the environment again using::"
msgstr "O ambiente virtual será ativado automaticamente e você irá ver \"(myproject)\" próximo ao \"prompt\" na linha de comando que indica isso. Se você iniciar uma noa linha de comando, você irá precisar ativar o ambiente novamente usando::"

#: ../../../../sources/1.9/docs/howto/windows.txt:65
msgid "Install Django"
msgstr "Instalando Django"

#: ../../../../sources/1.9/docs/howto/windows.txt:67
msgid "Django can be installed easily using ``pip``."
msgstr "O Django pode ser instaladao facilmente usando o ``pip``."

#: ../../../../sources/1.9/docs/howto/windows.txt:69
msgid "In the command prompt, execute the following command::"
msgstr "Na linha de comando, execute o seguinte comando::"

#: ../../../../sources/1.9/docs/howto/windows.txt:73
msgid "This will download and install the latest Django release."
msgstr "Isso irá baixar e instalar a última versão do Django."

#: ../../../../sources/1.9/docs/howto/windows.txt:75
msgid ""
"After the installation has completed, you can verify your Django "
"installation by executing ``django-admin --version`` in the command prompt."
msgstr "Depois que a instalação for concluída, você pode verificar sua instalação do Django executando ``django-admin --version`` na linha de comando."

#: ../../../../sources/1.9/docs/howto/windows.txt:78
msgid ""
"See :ref:`database-installation` for information on database installation "
"with Django."
msgstr "Veja :ref:`database-installation` para informações sobre instalação do banco de dados com Django."

#: ../../../../sources/1.9/docs/howto/windows.txt:82
msgid "Common pitfalls"
msgstr "Armadilhas comuns"

#: ../../../../sources/1.9/docs/howto/windows.txt:84
msgid ""
"If ``django-admin`` only displays the help text no matter what arguments it "
"is given, there is probably a problem with the file association in Windows. "
"Check if there is more than one environment variable set for running Python "
"scripts in ``PATH``. This usually occurs when there is more than one Python "
"version installed."
msgstr "Se o  ``django-admin`` somente mostra o texto de help não importando quais argumentos lhe é dado, provavelmente tem um problema com a associação do arquivo no windows. Verifique se existe mais de uma variável de ambiente definida para rodar os scripts Python no ``PATH``. Isso occore quando existe mais de uma versão de Python instalada."

#: ../../../../sources/1.9/docs/howto/windows.txt:90
msgid ""
"If you are connecting to the internet behind a proxy, there might be problem"
" in running the command ``pip install django``. Set the environment "
"variables for proxy configuration in the command prompt as follows::"
msgstr "Se você está conectado na internet atrás de um proxy, pode haver um problema ao rodar o comando ``pip install django``. Defina as variáveis de ambiente para configuração do proxy na linha de comando como a seguir::"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:3
msgid "Writing database migrations"
msgstr "Escrevendo migrações de banco de dados"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:5
msgid ""
"This document explains how to structure and write database migrations for "
"different scenarios you might encounter. For introductory material on "
"migrations, see :doc:`the topic guide </topics/migrations>`."
msgstr "Este documento explica como estruturar e a escrever migrações de banco de dados para diferentes cenários que você talvez encontre. "

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:12
msgid "Data migrations and multiple databases"
msgstr "Migrações de dados e múltimplos bancos de dados"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:14
msgid ""
"When using multiple databases, you may need to figure out whether or not to "
"run a migration against a particular database. For example, you may want to "
"**only** run a migration on a particular database."
msgstr "Quando isar múltimplos bancos de dados, você talvez precisse entender onde rodar e onde não rodar migrações para um banco de dados em partiular. Por exemplo, você talvez queira **somente** rodar migrações para um banco de dados em particular."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:18
msgid ""
"In order to do that you can check the database connection's alias inside a "
"``RunPython`` operation by looking at the ``schema_editor.connection.alias``"
" attribute::"
msgstr "Para fazer isso você pode verificar o alias da conexão com o banco de dados dentro de uma operação ``RunPython`` olhando no attributo ``schema_editor.connection.alias``::"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:41
msgid ""
"You can also provide hints that will be passed to the "
":meth:`allow_migrate()` method of database routers as ``**hints``:"
msgstr "Você pode fornecer dicas que serão passadas para o método :meth:`allow_migrate()` do roteador de banco de dados como ``**hints``:"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:54
msgid "Then, to leverage this in your migrations, do the following::"
msgstr "Então para aproveitar isso em suas migrações, faça o seguinte::"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:72
msgid ""
"If your ``RunPython`` or ``RunSQL`` operation only affects one model, it's "
"good practice to pass ``model_name`` as a hint to make it as transparent as "
"possible to the router. This is especially important for reusable and third-"
"party apps."
msgstr "Se você executar ``RunPython`` ou ``RunSQL`` as operações só irão afetar um modelo, e isso é uma boa passar ``model_name`` como uma dica para que fique tão tranaprente quanto possível para o roteador. Isso é especialmente importante para reutilização e applicações de terceiros."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:77
msgid "Migrations that add unique fields"
msgstr "Migrações que adicionam campos \"unique\""

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:79
msgid ""
"Applying a \"plain\" migration that adds a unique non-nullable field to a "
"table with existing rows will raise an error because the value used to "
"populate existing rows is generated only once, thus breaking the unique "
"constraint."
msgstr "Aplicar uma migração \"sem customizações\" que adicione um campo não nulo e \"unique\" a uma table com registros existentes irá emitir um erro porque o valor usado para popular os registros existente é gerado somente uma vez, então quebrando o \"contraint\" \"unique\"."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:83
msgid ""
"Therefore, the following steps should be taken. In this example, we'll add a"
" non-nullable :class:`~django.db.models.UUIDField` with a default value. "
"Modify the respective field according to your needs."
msgstr "Portanto, os seguintes passos devem ser seguidos. Neste exemplo, nós iremos adicionar um :class:`~django.db.models.UUIDField` não-nulo com um valor padrão. Modifique o campo respectivo de acordo com suas necessidades."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:87
msgid ""
"Add the field on your model with ``default=uuid.uuid4`` and ``unique=True`` "
"arguments (choose an appropriate default for the type of the field you're "
"adding)."
msgstr "Adicione o campo no seu modelo com ``default=uuid.uuid4`` e argumentos ``unique=True`` (escolha um padrão apropriado para o tipo de campor que você está adicionando)."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:91
msgid ""
"Run the :djadmin:`makemigrations` command. This should generate a migration "
"with an ``AddField`` operation."
msgstr "Execute o comando :djadmin:`makemigrations` . Isso deve gerar uma migração com uma operação ``AddField``."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:94
msgid ""
"Generate two empty migration files for the same app by running "
"``makemigrations myapp --empty`` twice. We've renamed the migration files to"
" give them meaningful names in the examples below."
msgstr "Gera dois arquivos de migrações vazios para a mesma aplicação rodando ``makemigrations myapp --empty`` duas vezes. Renomeamos os arquivos de migração para dara eles nomes significativos nos exemplos abaixo"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:98
msgid ""
"Copy the ``AddField`` operation from the auto-generated migration (the first"
" of the three new files) to the last migration and change ``AddField`` to "
"``AlterField``. For example:"
msgstr "Copie a operação ``AddField`` da migração gerada automaticamente (o primeiro dos três novos arquivos) para a última migração e altere ``AddFiled`` para ``AlterField``. Por exemplo:"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:127
msgid ""
"Edit the first migration file. The generated migration class should look "
"similar to this:"
msgstr "Edite o primeiro arquivo da migração. A classe de migração gerada deve se parecer com isso:"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:147
msgid ""
"Change ``unique=True`` to ``null=True`` -- this will create the intermediary"
" null field and defer creating the unique constraint until we've populated "
"unique values on all the rows."
msgstr "Mude ``unique=True`` para ``null=True`` -- isso irá criar o campo nullo imtermediário e adiar a criação da restrição \"unique\" até que tenhamos populado os valores únicos em todas os registros."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:151
msgid ""
"In the first empty migration file, add a "
":class:`~django.db.migrations.operations.RunPython` or "
":class:`~django.db.migrations.operations.RunSQL` operation to generate a "
"unique value (UUID in the example) for each existing row. For example:"
msgstr "No primeiro arquivo de migração vazio, adicione um :class:`~django.db.migrations.operations.RunPython` ou uma operaçãoi :class:`~django.db.migrations.operations.RunSQL` para gerar os valores únicos(UUID no exemplo) para cada registro existente. Por exemplo:"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:183
msgid ""
"Now you can apply the migrations as usual with the :djadmin:`migrate` "
"command."
msgstr "Agora você pode aplicar as migrações como de costume com o comando :djadmin:`migrate`."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:185
msgid ""
"Note there is a race condition if you allow objects to be created while this"
" migration is running. Objects created after the ``AddField`` and before "
"``RunPython`` will have their original ``uuid``’s overwritten."
msgstr "Note que há uma condição de concorrência se você deixar com que objetos sejam criados enquanto essa migração está rodando. Objetos criados depois do ``AddField``e antes do ``RunPython`` terão seus ``uuid``'s sobrescritos."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:190
msgid "Controlling the order of migrations"
msgstr "Controlando a ordem das migrações"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:192
msgid ""
"Django determines the order in which migrations should be applied not by the"
" filename of each migration, but by building a graph using two properties on"
" the ``Migration`` class: ``dependencies`` and ``run_before``."
msgstr "django determina a ordem em que as migrações não devem ser aplicadas pelo nome do arquivo de cada migração, mas através da construção de um gráfico usando duas propriedade na classe ``Migration``: ``dependencies`` e ``run_before``."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:196
msgid ""
"If you've used the :djadmin:`makemigrations` command you've probably already"
" seen ``dependencies`` in action because auto-created migrations have this "
"defined as part of their creation process."
msgstr "se você estiver usando o comando :djadmin:`makemigration` você provavelmente já viu ``dependencies`` em ação por causa da migration auto-criada, tendo esta definição como parte do processo de criação."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:200
msgid "The ``dependencies`` property is declared like this::"
msgstr "A propridade ``dependencies`` está declarada como isto::"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:210
msgid ""
"Usually this will be enough, but from time to time you may need to ensure "
"that your migration runs *before* other migrations. This is useful, for "
"example, to make third-party apps' migrations run *after* your "
":setting:`AUTH_USER_MODEL` replacement."
msgstr "Normalmente isso é o bastante, mas de vez enquando você pode assegurar que sua migração rode *antes*  de outras migrações. Isso é útil, por exemplo, para fazer migrações de aplicações de terceiros rodar *depois* de substituir seu :setting:`AUTH_USER_MODEL`."

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:215
msgid ""
"To achieve this, place all migrations that should depend on yours in the "
"``run_before`` attribute on your ``Migration`` class::"
msgstr "Para conseguir isso, coloque todas as migrações que devem depender das suas no atributo  ``run_before`` na sua classe ``Migration``::"

#: ../../../../sources/1.9/docs/howto/writing-migrations.txt:225
msgid ""
"Prefer using ``dependencies`` over ``run_before`` when possible. You should "
"only use ``run_before`` if it is undesirable or impractical to specify "
"``dependencies`` in the migration which you want to run after the one you "
"are writing."
msgstr "Prefira usar ``dependencies`` ao ``run_before`` quando possível. Você deve somente usar o ``run_before`` se ele não é desejável ou impraticável para especificar ``dependencies`` na migração qual você quer rodar depois da que está escrevendo."
