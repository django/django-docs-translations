# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# Adiyat Mubarak <adiyatmubarak@gmail.com>, 2018
# Bagus Aji Santoso <baguzzzaji@gmail.com>, 2016
# Claude Paroz <claude@2xlibre.net>, 2020
# Fery Setiawan <gembelweb@gmail.com>, 2015-2022
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2020
# oon arfiandwi <oon.arfiandwi@gmail.com>, 2018
# phyxkal miutwo <haikalvidya@gmail.com>, 2018
# Zaki Akhmad <za@python.or.id>, 2016
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-03 02:10-0500\n"
"PO-Revision-Date: 2022-04-02 20:00+0000\n"
"Last-Translator: Fery Setiawan <gembelweb@gmail.com>\n"
"Language-Team: Indonesian (http://www.transifex.com/django/django-docs/"
"language/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "Writing your first patch for Django"
msgstr "Menulis tambalan pertama anda untuk Django"

msgid "Introduction"
msgstr "Kata Pengantar"

msgid ""
"Interested in giving back to the community a little? Maybe you've found a "
"bug in Django that you'd like to see fixed, or maybe there's a small feature "
"you want added."
msgstr ""
"Tertarik membalas kepada komunitas kecil? Mungkin Anda menemukan bug di "
"Django yang ingin Anda perbaiki, atau mungkin ada fitur kecil yang ingin "
"Anda tambahkan."

msgid ""
"Contributing back to Django itself is the best way to see your own concerns "
"addressed. This may seem daunting at first, but it's a well-traveled path "
"with documentation, tooling, and a community to support you. We'll walk you "
"through the entire process, so you can learn by example."
msgstr ""
"Membantu kembali ke Django adalah cara terbaik untuk melihat alamat "
"perhatian anda. ini mungkin terlihat menakutkan awalnya, tetapi itu adalah "
"jalur bepergian-dengan-baik dengan dokumentasi, peralatan, dan komunitas "
"untuk mendukung anda. Kami akan berjalan melalui proses keseluruhan, "
"sehingga anda dapat belajar berdasarkan contoh."

msgid "Who's this tutorial for?"
msgstr "Untuk siapa saja tutorial ini?"

msgid ""
"If you are looking for a reference on the details of making code "
"contributions, see the :doc:`/internals/contributing/writing-code/index` "
"documentation."
msgstr ""
"Jika anda mencari acuan pada rincian dari membuat bantuan kode, lihat "
"dokumentasi :doc:`/internals/contributing/writing-code/index`."

msgid ""
"For this tutorial, we expect that you have at least a basic understanding of "
"how Django works. This means you should be comfortable going through the "
"existing tutorials on :doc:`writing your first Django app</intro/"
"tutorial01>`. In addition, you should have a good understanding of Python "
"itself. But if you don't, `Dive Into Python`__ is a fantastic (and free) "
"online book for beginning Python programmers."
msgstr ""
"Untuk tutorial ini, kami berharap bahwa anda mempunyai setidaknya pengertian "
"dasar bagaimana Django bekerja. Ini berarti anda harus nyaman melalui "
"tutorial yang ada pada :doc:`writing your first Django app</intro/"
"tutorial01>`. Sebagai tambahan, anda harus mempunyai pemahaman bagus dari "
"Phyton itu sendiri. Tetapi jika anda tidak, `Dive Into Python`__ adalah luar "
"biasa (dan gratis) buku daring untuk programer pemula Phyton."

msgid ""
"Those of you who are unfamiliar with version control systems and Trac will "
"find that this tutorial and its links include just enough information to get "
"started. However, you'll probably want to read some more about these "
"different tools if you plan on contributing to Django regularly."
msgstr ""
"Bagi anda yang tidak akrab dengan vesi kendali sistem dan Trac akan "
"menemukan bahwa tutorial ini dan tautannya memasukkan informasi cukup untuk "
"memulai. Bagaimanapun, anda akan mungkin membaca beberapa lebih alat berbeda "
"jika anda berencana sering untuk membantu Django."

msgid ""
"For the most part though, this tutorial tries to explain as much as "
"possible, so that it can be of use to the widest audience."
msgstr ""
"Untuk sebagian besar, tutorial ini mencoba menjelaskan sebanyak mungkin, "
"sehingga itu dapat digunakan pada pendengar luas."

msgid "Where to get help:"
msgstr "Dimana mendapatkan bantuan:"

msgid ""
"If you're having trouble going through this tutorial, please post a message "
"to |django-developers| or drop by `#django-dev on irc.libera.chat`__ to chat "
"with other Django users who might be able to help."
msgstr ""
"Jika anda sedang memiliki masalah melalui tutorial ini, harap tempatkan "
"sebuah pesan pada |django-developers| atau jatuhkan `#django-dev pada irc."
"libera.chat`__ untuk mengobrol dengan pengguna Django lain yang mungkin "
"dapat membantu."

msgid "What does this tutorial cover?"
msgstr "Tutorial ini meliputi apa?"

msgid ""
"We'll be walking you through contributing a patch to Django for the first "
"time. By the end of this tutorial, you should have a basic understanding of "
"both the tools and the processes involved. Specifically, we'll be covering "
"the following:"
msgstr ""
"Kami akan berjalan bersama anda dalam membantu tambakan ke Django untuk "
"pertama kali. Pada akhir tutorial ini, anda harus mempunyai pengertian dasar "
"dari kedua alat dan pengolahan yang terlibat. Khususnya, kami akan "
"mencangkup berikut:"

msgid "Installing Git."
msgstr "Memasang Git"

msgid "Downloading a copy of Django's development version."
msgstr "Mengunduh salinan versi pengembangan Django."

msgid "Running Django's test suite."
msgstr "Menjalankan rangkaian percobaan Django."

msgid "Writing a test for your patch."
msgstr "Menulis percobaan untuk tambalan anda."

msgid "Writing the code for your patch."
msgstr "Menulis kode untuk tambalan anda."

msgid "Testing your patch."
msgstr "Mencoba tambahan anda."

msgid "Submitting a pull request."
msgstr "Mengajukan pull request"

msgid "Where to look for more information."
msgstr "Dimana mencari untuk informasi lebih."

msgid ""
"Once you're done with the tutorial, you can look through the rest of :doc:"
"`Django's documentation on contributing</internals/contributing/index>`. It "
"contains lots of great information and is a must read for anyone who'd like "
"to become a regular contributor to Django. If you've got questions, it's "
"probably got the answers."
msgstr ""
"Sekali anda selesai dengan tutorial, anda dapat mencari sisa dari :doc:"
"`Django's documentation on contributing</internals/contributing/index>`. Itu "
"mengandung banyak informasi hebat dan harus dibaca untuk siapapun yang suka "
"menjadi penyumbang rutin ke Django. Jika anda mendapatkan pertanyaan, itu "
"mungkin mendapatkan jawaban."

msgid "Python 3 required!"
msgstr "Python 3 wajib!"

msgid ""
"The current version of Django doesn't support Python 2.7. Get Python 3 at "
"`Python's download page <https://www.python.org/downloads/>`_ or with your "
"operating system's package manager."
msgstr ""
"Versi Django ini tidak mendukung Python 2.7. Dapatkan Python 3 di `Halaman "
"unduh Python <https://www.python.org/downloads/>`_ atau menggunakan paket "
"manajer dari sistem operasi yang Anda gunakan."

msgid "For Windows users"
msgstr "Untuk pengguna Windows"

msgid ""
"See :ref:`install_python_windows` on Windows docs for additional guidance."
msgstr ""
"Lihat :ref:`install_python_windows` di dokumen Windows untuk panduan "
"tambahan."

msgid "Code of Conduct"
msgstr "Kode Etik"

msgid ""
"As a contributor, you can help us keep the Django community open and "
"inclusive. Please read and follow our `Code of Conduct <https://www."
"djangoproject.com/conduct/>`_."
msgstr ""
"Sebagai penyumbang, anda dapat membantu kami menjaga komunitas Django "
"terbuka dan inklusif. Silahkan baca dan ikuti ``Code of Conduct <https://www."
"djangoproject.com/conduct/>`_ kami."

msgid "Installing Git"
msgstr "Memasang Git"

msgid ""
"For this tutorial, you'll need Git installed to download the current "
"development version of Django and to generate patch files for the changes "
"you make."
msgstr ""
"Untuk tutorial ini, anda akan membutuhkan Git terpasang untuk mengunduh "
"versi pengembangan saat ini dari Django dan membangkitkan berkas tambalan "
"untuk perubahan anda buat."

msgid ""
"To check whether or not you have Git installed, enter ``git`` into the "
"command line. If you get messages saying that this command could not be "
"found, you'll have to download and install it, see `Git's download page`__."
msgstr ""
"Untuk memeriksa apakah atau tidak anda telah terpasang Git, masukkan ``git`` "
"ke baris perintah. Jika anda mendapatkan pesan dimana perintah ini tidak "
"ditemukan, anda akan perlu mengunduh dan memasangnya, lihat `Halaman unduh "
"Git`__."

msgid ""
"If you're not that familiar with Git, you can always find out more about its "
"commands (once it's installed) by typing ``git help`` into the command line."
msgstr ""
"Jika anda tidak akrab dengan Git, anda dapat selalu menemukan lebih tentang "
"perintahnya (pertama dia dipasang) dengan mengetik ``git help`` kedalam "
"baris perintah."

msgid "Getting a copy of Django's development version"
msgstr "Mendapatkan salinan versi pengembangan Django"

msgid ""
"The first step to contributing to Django is to get a copy of the source "
"code. First, `fork Django on GitHub <https://github.com/django/django/"
"fork>`__. Then, from the command line, use the ``cd`` command to navigate to "
"the directory where you'll want your local copy of Django to live."
msgstr ""
"Langkah pertama untuk membantu Django adalah mendapatkan sebuah salinan dari "
"kode sumber. Pertama, `fork Django on GitHub <https://github.com/django/"
"django/fork>`__. Kemudian, dari baris perintah, gunakan perintah ``cd`` "
"untuk melayari ke direktori dimana anda akan ingin salinan lokal anda dari "
"Django menjadi langsung."

msgid "Download the Django source code repository using the following command:"
msgstr "Unduh gudang kode sumber Django menggunakan perintah berikut:"

msgid "Low bandwidth connection?"
msgstr "Hubungan lebar pita rendah?"

msgid ""
"You can add the ``--depth 1`` argument to ``git clone`` to skip downloading "
"all of Django's commit history, which reduces data transfer from  ~250 MB to "
"~70 MB."
msgstr ""
"Anda dapat menambah argumen ``--depth 1`` pada ``git clone`` untuk melewati "
"pengunduhan semua dari riwayat penyerahan Django, yang mengurangi "
"perpindahan data dari ~250 MB menjadi ~70 MB."

msgid ""
"Now that you have a local copy of Django, you can install it just like you "
"would install any package using ``pip``. The most convenient way to do so is "
"by using a *virtual environment*, which is a feature built into Python that "
"allows you to keep a separate directory of installed packages for each of "
"your projects so that they don't interfere with each other."
msgstr ""
"Sekarang dimana anda memiliki salinan lokal Django, anda dapat memasang itu "
"seperti anda memasang paket apapun menggunakan ``pip``. Cara paling nyaman "
"melakukannya adalah dengan menggunakan *virtual environment*, yaitu fitur "
"dibangun kedalam Python yang mengizinkan anda menjaga direktori terpisah "
"dari paket-paket terpasang untuk setiap dari proyek-proyek anda sehingga "
"mereka tidak mengganggu satu sama lain."

msgid ""
"It's a good idea to keep all your virtual environments in one place, for "
"example in ``.virtualenvs/`` in your home directory."
msgstr ""
"Itu adalah ide bagus menjaga semua lingkungan maya anda dalam satu tempat, "
"sebagai contoh dalam ``.virtualenvs/`` di direktori rumah anda."

msgid "Create a new virtual environment by running:"
msgstr "Buat lingkungan maya baru dengan menjalankan:"

msgid "The path is where the new environment will be saved on your computer."
msgstr "Jalur dimana lingkungan baru akan disimpan ke komputer anda."

msgid ""
"The final step in setting up your virtual environment is to activate it:"
msgstr "langkah akhir dalam mengatur lingkungan maya adalah mengaktifkan itu:"

msgid ""
"If the ``source`` command is not available, you can try using a dot instead:"
msgstr ""
"Jika perintah ``source`` tidak tersedua, anda dapat mencoba menggunakan "
"titik:"

msgid ""
"You have to activate the virtual environment whenever you open a new "
"terminal window."
msgstr ""
"Anda harus mengaktifkan lingkungan virtual setiap kali Anda membuka jendela "
"terminal baru."

msgid "To activate your virtual environment on Windows, run:"
msgstr "Untuk mengaktifkan lingkungan maya pada Windows, jalankan:"

msgid ""
"The name of the currently activated virtual environment is displayed on the "
"command line to help you keep track of which one you are using. Anything you "
"install through ``pip`` while this name is displayed will be installed in "
"that virtual environment, isolated from other environments and system-wide "
"packages."
msgstr ""
"Nama dari lingkungan maya diaktivasi sekarang ditampilkan pada baris "
"perintah untuk membantu anda melacak dimana yang anda sedang gunakan. Apapun "
"anda pasang melalui ``pip`` selagi nama ini ditampilkan akan dipasang dalam "
"lingkungan maya, terpencil dari lingkungan dan paket-paket sistem-lebar."

msgid "Go ahead and install the previously cloned copy of Django:"
msgstr "Lanjutkan dan pasang klon salinan sebelumnya dari Django:"

msgid ""
"The installed version of Django is now pointing at your local copy by "
"installing in editable mode. You will immediately see any changes you make "
"to it, which is of great help when writing your first patch."
msgstr ""
"Versi Django terpasang sekarang menunjuk pada salinan lokal anda dengan "
"memasang dalam suasana data disunting. Anda akan segera melihat perubahan "
"apapun anda buat kepadanya, dimana adalah bantuan besar ketika menulis "
"tambalan pertama anda."

msgid "Creating projects with a local copy of Django"
msgstr "Membuat proyek dengan salinan lokal Django"

msgid ""
"It may be helpful to test your local changes with a Django project. First "
"you have to create a new virtual environment, :ref:`install the previously "
"cloned local copy of Django in editable mode <intro-contributing-install-"
"local-copy>`, and create a new Django project outside of your local copy of "
"Django. You will immediately see any changes you make to Django in your new "
"project, which is of great help when writing your first patch."
msgstr ""
"Itu mungkin membantu mencoba perubahan lokal anda dengan sebuah proyek "
"Django. Pertama anda harus membuat sebuah lingkungan maya baru, :ref:"
"`install the previously cloned local copy of Django in editable mode <intro-"
"contributing-install-local-copy>`, dan buat sebuah proyek baru diluar dari "
"salinan lokal Django anda. Anda akan segera melihat perubahan apapun anda "
"buat pada proyek baru anda, yang sangat membantu ketika menulis tambalan "
"pertama anda."

msgid "Running Django's test suite for the first time"
msgstr "Menjalankan rangkaian percobaan Django untuk pertama kali"

msgid ""
"When contributing to Django it's very important that your code changes don't "
"introduce bugs into other areas of Django. One way to check that Django "
"still works after you make your changes is by running Django's test suite. "
"If all the tests still pass, then you can be reasonably sure that your "
"changes work and haven't broken other parts of Django. If you've never run "
"Django's test suite before, it's a good idea to run it once beforehand to "
"get familiar with its output."
msgstr ""
"Ketika membantu Django adalah sangat penting bahwa perubahan kode anda tidak "
"memperkenalkan kesalahan kedalam kawasan Django lain. Satu cara untuk "
"memeriksa bahwa Django masih bekerja setelah anda membuat perubahan anda "
"adalah dengan menjalankan deretan percobaan Django. Jika semua percobaan "
"masih terlewati, lalu anda cukup yakin bahwa perubahan anda bekerja dan "
"tidak merusak bagian lain dari Django. Jika anda tidak pernah menjalankan "
"deretan percobaan Django sebelumnya, adalah ide bagus untuk menjalankannya "
"sekali sebelumnya untuk lebih akrab dengan keluarannya."

msgid ""
"Before running the test suite, enter the Django ``tests/`` directory using "
"the ``cd tests`` command, and install test dependencies by running:"
msgstr ""
"Sebelum menjalankan deretan pengujian, masukkan direktori ``tests/`` Django "
"menggunakan perintah ``cd tests`` dan pasang ketergantungan pengujian dengan "
"menjalankan:"

msgid ""
"If you encounter an error during the installation, your system might be "
"missing a dependency for one or more of the Python packages. Consult the "
"failing package's documentation or search the web with the error message "
"that you encounter."
msgstr ""
"Jika anda mengalami sebuah kesalahan selama pemasangan, sisem anda mungkin "
"kehilangan ketergantungan untuk satu atau lebih paket Python. Obrolkan "
"dokumentasi paket yang gagal atau cari di jaringan dengan pesan kesalahan "
"yang anda alami."

msgid ""
"Now we are ready to run the test suite. If you're using GNU/Linux, macOS, or "
"some other flavor of Unix, run:"
msgstr ""
"Sekarang kita siap menjalankan deretan percobaan. Jika anda menggunakan GNU/"
"Linux, macOS, atau beberapa Unix rasa lainnya, jalankan:"

msgid ""
"Now sit back and relax. Django's entire test suite has thousands of tests, "
"and it takes at least a few minutes to run, depending on the speed of your "
"computer."
msgstr ""
"Sekarang duduk dan rileks. Keseluruhan rangkaian pengujian Django mempunyai "
"ribuan pengujian, dan itu membutuhkan paling sedikit beberapa menit untuk "
"dijalankan, tergantung pada kecepatan komputer anda."

msgid ""
"While Django's test suite is running, you'll see a stream of characters "
"representing the status of each test as it completes. ``E`` indicates that "
"an error was raised during a test, and ``F`` indicates that a test's "
"assertions failed. Both of these are considered to be test failures. "
"Meanwhile, ``x`` and ``s`` indicated expected failures and skipped tests, "
"respectively. Dots indicate passing tests."
msgstr ""
"Selagi deretan percobaan Django berjalan, anda akan melihat aliran karakter "
"mewakili keadaan dari setiap percobaan sampai itu lengkap. ``E`` menunjukkan "
"bahwa sebuah kesalahan memunculkan selama percobaan, dan ``F`` menunjukkan "
"bahwa tuntutan percobaan gagal. Kedua dari ini dipertimbangkan menjadi "
"kegagalan percobaan. Sementara itu, ``x`` dan ``s`` menunjukkan diharapkan "
"kegagalan dan melewati percobaan, masing-masing. Titik menunjukkan percobaan "
"lolos."

msgid ""
"Skipped tests are typically due to missing external libraries required to "
"run the test; see :ref:`running-unit-tests-dependencies` for a list of "
"dependencies and be sure to install any for tests related to the changes you "
"are making (we won't need any for this tutorial). Some tests are specific to "
"a particular database backend and will be skipped if not testing with that "
"backend. SQLite is the database backend for the default settings. To run the "
"tests using a different backend, see :ref:`running-unit-tests-settings`."
msgstr ""
"Lewati percobaan biasanya karena kehilangan pustaka luar yang diwajibkan "
"untuk menjalankan percobaan; lihat :ref:`running-unit-tests-dependencies` "
"untuk daftar dari ketergantungan dan pastikan memasang tiap untuk percobaan "
"terhubung ke perubahan anda sedang buat (kami tidak akan butuh untuk "
"tutorial ini). Beberapa percobaan sangat khusus pada backend basisdata "
"tertentu dan akan dilewati jika tidak dicobakan dengan backend itu. SQLite "
"adalah backend basisdata untuk pengaturan awal. Untuk menjalankan percobaan "
"menggunakan backend berbeda, lihat :ref:`running-unit-tests-settings`."

msgid ""
"Once the tests complete, you should be greeted with a message informing you "
"whether the test suite passed or failed. Since you haven't yet made any "
"changes to Django's code, the entire test suite **should** pass. If you get "
"failures or errors make sure you've followed all of the previous steps "
"properly. See :ref:`running-unit-tests` for more information."
msgstr ""
"Ketika percobaan lengkap, anda akan disapa dengan pesan menginformasikan "
"bahwa deretan percobaan lulus atau gagal. Sejak anda tidak mempunyai "
"perubahan apapun ke kode Django, deretan percobaan seluruhnya **harus** "
"lulus. Jika anda mendapatkan kegagalan atau kesalahan pastikan anda telah "
"mengikuti langkah sebelumnya dengan benar. Lihat :ref:`running-unit-tests` "
"untuk informasi lebih."

msgid ""
"Note that the latest Django \"main\" branch may not always be stable. When "
"developing against \"main\", you can check `Django's continuous integration "
"builds`__ to determine if the failures are specific to your machine or if "
"they are also present in Django's official builds. If you click to view a "
"particular build, you can view the \"Configuration Matrix\" which shows "
"failures broken down by Python version and database backend."
msgstr ""
"Catat bahwacabang \"main\"  Django mungkin tidak selalu stabil. Ketika "
"mengembangkan terhadap \"main\", anda dapat memeriksa `Django's continuous "
"integration builds`__ untuk menentukan jika kegagalan spesifik pada mesin "
"anda atau jika mereka juga hadir dalam bangunan resmi Django. Jika anda "
"mengklik untuk melihat bangunan tertentu, anda dapat melihat \"Configuration "
"Matrix\" yang menunjukkan kegagalan dipecah oleh versi Python dan backend "
"basisdata."

msgid ""
"For this tutorial and the ticket we're working on, testing against SQLite is "
"sufficient, however, it's possible (and sometimes necessary) to :ref:`run "
"the tests using a different database <running-unit-tests-settings>`."
msgstr ""
"Untuk tutorial ini dan tiket yang kita sedang bekerja, percobaan terhadap "
"SQLite adalah cukup, bagaimanapun, ini memungkinkan (dan terkadang butuh) "
"untuk :ref:`menjalankan percobaan menggunakan basisdata berbeda <running-"
"unit-tests-settings>`."

msgid "Working on a feature"
msgstr "Bekerja pada fitur"

msgid ""
"For this tutorial, we'll work on a \"fake ticket\" as a case study. Here are "
"the imaginary details:"
msgstr ""
"Untuk pengajaran tambahan ini, kami akan bekerja pada \"tiket palsu\" "
"sebagai sebuah kasus pelajaran. Disini adalah rincian gambaran:"

msgid "Ticket #99999 -- Allow making toast"
msgstr "Tiket #99999 -- Mengizinkan membuat tos"

msgid ""
"Django should provide a function ``django.shortcuts.make_toast()`` that "
"returns ``'toast'``."
msgstr ""
"Django harus menyediakan sebuah fungsi ``django.shortcuts.make_toast()`` "
"yang mengembalikan ``'toast'``."

msgid "We'll now implement this feature and associated tests."
msgstr "Kami akan menerapkan fitur ini dan percobaan terkait."

msgid "Creating a branch for your patch"
msgstr "Membuat sebuah cabang untuk tambalan anda"

msgid "Before making any changes, create a new branch for the ticket:"
msgstr "Sebelum membuat perubahan apapun, buat sebuah cabang baru untuk tiket:"

msgid ""
"You can choose any name that you want for the branch, \"ticket_99999\" is an "
"example. All changes made in this branch will be specific to the ticket and "
"won't affect the main copy of the code that we cloned earlier."
msgstr ""
"Anda dapat memilih nama apapun yang anda ingin untuk cabang, "
"\"ticket_99999\" adalah sebuah contoh. Semua perubahan dibuat dalam cabang "
"ini akan khusus pada tiket dan tidak akan mempengaruhi salinan uta,a dari "
"kode yang kami kloning diawal."

msgid "Writing some tests for your ticket"
msgstr "Menulis beberapa percobaan untuk tiket anda"

msgid ""
"In most cases, for a patch to be accepted into Django it has to include "
"tests. For bug fix patches, this means writing a regression test to ensure "
"that the bug is never reintroduced into Django later on. A regression test "
"should be written in such a way that it will fail while the bug still exists "
"and pass once the bug has been fixed. For patches containing new features, "
"you'll need to include tests which ensure that the new features are working "
"correctly. They too should fail when the new feature is not present, and "
"then pass once it has been implemented."
msgstr ""
"Dalam kebanyakan kasus, untuk tambalan diterima kedalam Django dia harus "
"disertakan percobaan. Untuk tambalan perbaikan kesalahan, ini berarti "
"menulis percobaan pemulihan untuk memastikan bahwa kesalahan tidak pernah "
"diperkenalkan kembali kedalam Django kemudian. Percobaan pemulihan harus "
"ditulis dalam cara tersebut yang dia akan gagal selama kesalahan masih ada "
"dan lulus ketika kesalahan telah diperbaiki. Untuk tambalan mengandung fitur "
"baru, anda akan butuh menyertakan percobaan yang memastikan fitur baru "
"bekerja dengan benar. Mereka juga akan gagal ketika fitur baru tidak hadir, "
"dan lalu lulus ketika dia telah diterapkan."

msgid ""
"A good way to do this is to write your new tests first, before making any "
"changes to the code. This style of development is called `test-driven "
"development`__ and can be applied to both entire projects and single "
"patches. After writing your tests, you then run them to make sure that they "
"do indeed fail (since you haven't fixed that bug or added that feature yet). "
"If your new tests don't fail, you'll need to fix them so that they do. After "
"all, a regression test that passes regardless of whether a bug is present is "
"not very helpful at preventing that bug from reoccurring down the road."
msgstr ""
"Jalan baik untuk melakukannya ini adalah pertama menulis percobaan baru "
"anda, sebelum membuat perubahan apapun ke kode. Gaya ini dari pengembangan "
"dipanggil `test-driven development`__ dan dapat diberlakukan untuk kedua "
"proyek keseluruhan dan tambalan tunggal. Setelah menulis percobaan anda, "
"anda kemudian jalankan mereka untuk memastikan bahwa mereka memang gagal "
"(sejak anda belum memperbaiki kesalahan tersebut atau ditambahkan fitur "
"tersebut). Jika percobaan baru anda tidak gagal, anda akan butuh memperbaiki "
"mereka sehingga mereka melakukannya. Lagipula, percobaan pemulihan yang "
"lulus tanpa memperhatikan apakah kesalahan hadir tidak sangat membantu dalam "
"mencegah kesalahan dari terjadi di jalan."

msgid "Now for our hands-on example."
msgstr "Sekarang untuk contoh meneruskan kami."

msgid "Writing a test for ticket #99999"
msgstr "Menulir percobaan untuk tiket #99999"

msgid ""
"In order to resolve this ticket, we'll add a ``make_toast()`` function to "
"the ``django.shortcuts`` module. First we are going to write a test that "
"tries to use the function and check that its output looks correct."
msgstr ""
"Untuk menyelesaikan tiket ini, kami akan menambahkan sebuah fungsi "
"``make_toast()`` ke dalam modul ``django.shortcuts``. Pertama kami akan "
"menulis sebuah pengujian yang mencoba menggunakan fungsi dan memeriksa bahwa "
"keluarannya terlihat benar."

msgid ""
"Navigate to Django's ``tests/shortcuts/`` folder and create a new file "
"``test_make_toast.py``. Add the following code::"
msgstr ""
"Kemudikan ke folder ``tests/shortcuts/`` Django dan buat sebuah berkas baru "
"``test_make_toast.py``. Tambah kode berikut::"

msgid "This test checks that the ``make_toast()`` returns ``'toast'``."
msgstr ""
"Percobaan ini memeriksa bahwa ``make_toast()`` mengembalikan ``'toast'``."

msgid "But this testing thing looks kinda hard..."
msgstr "Tetapi percobaan ini terlihat sangat sulit..."

msgid ""
"If you've never had to deal with tests before, they can look a little hard "
"to write at first glance. Fortunately, testing is a *very* big subject in "
"computer programming, so there's lots of information out there:"
msgstr ""
"Jika anda tidak pernah berurusan dengan percobaan sebelumnya, mereka dapat "
"kelihatan sedikir sulit untuk menulis pandangan pertama. Untungnya, "
"percobaan adalah subyek *sangat* besar di pemrograman komputer, sehingga "
"terdapat banyak informasi diluar sana:"

msgid ""
"A good first look at writing tests for Django can be found in the "
"documentation on :doc:`/topics/testing/overview`."
msgstr ""
"Tampilan bagus pertama pada penulisan percobaan untuk Django dapat ditemukan "
"di dokumentasi pada :doc:`/topics/testing/overview`."

msgid ""
"Dive Into Python (a free online book for beginning Python developers) "
"includes a great `introduction to Unit Testing`__."
msgstr ""
"Dive Into Python (sebuah buku daring bebas untuk pengembang Phyton pemula) "
"termasuk `Perkenalan ke Unit Percobaan`__ hebat."

msgid ""
"After reading those, if you want something a little meatier to sink your "
"teeth into, there's always the Python :mod:`unittest` documentation."
msgstr ""
"Setelah membaca itu, jika anda ingin sesuatu sedikit daging untuk "
"menengelamkan gigi anda kedalamnya, selalu ada dokumentasi :mod:`unittest` "
"Python."

msgid "Running your new test"
msgstr "Menjalankan percobaan baru anda"

msgid ""
"Since we haven't made any modifications to ``django.shortcuts`` yet, our "
"test should fail. Let's run all the tests in the ``shortcuts`` folder to "
"make sure that's really what happens. ``cd`` to the Django ``tests/`` "
"directory and run:"
msgstr ""
"Sejak kami belum membuat perubahan apapun pada ``django.shortcuts``, "
"percobaan kami harus gagal. Mari kita jalankan semua percobaan dalam folder "
"``shortcuts`` untuk memastikan bahwa itu memang terjadi. ``cd`` ke direktori "
"``tests/`` Django dan jalankan:"

msgid ""
"If the tests ran correctly, you should see one failure corresponding to the "
"test method we added, with this error::"
msgstr ""
"Jika percobaan berjalan dengan benar, anda harus melihat satu kegagalan "
"berhubungan pada metode percobaan kami tambahkan, dengan kesalahan ini::"

msgid ""
"If all of the tests passed, then you'll want to make sure that you added the "
"new test shown above to the appropriate folder and file name."
msgstr ""
"Jika semua percobaan dilewati, kemudian anda akan ingin memastikan bahwa "
"anda menambahkan percobaan terbaru ditampilkan diatas pada folder dan nama "
"berkas sesuai."

msgid "Writing the code for your ticket"
msgstr "Menulis kode untuk tiket anda"

msgid "Next we'll be adding the ``make_toast()`` function."
msgstr "Selanjutnya kami akan menambahkan fungsi ``make_toast()``."

msgid ""
"Navigate to the ``django/`` folder and open the ``shortcuts.py`` file. At "
"the bottom, add::"
msgstr ""
"Kemudikan ke folder ``django/`` dan buka berkas ``shortcuts.py``. Pada "
"bagian bawah, tambah::"

msgid ""
"Now we need to make sure that the test we wrote earlier passes, so we can "
"see whether the code we added is working correctly. Again, navigate to the "
"Django ``tests/`` directory and run:"
msgstr ""
"Sekarang kami butuh memastikan bahwa percobaan kami tulis sebelumnya lolos, "
"jadi kami dapat melihat apakah kode kami tambahkan bekerja dengan benar. "
"Kembali, kemudikan ke direktori ``tests/`` Django dan jalankan:"

msgid ""
"Everything should pass. If it doesn't, make sure you correctly added the "
"function to the correct file."
msgstr ""
"Semuanya harus dilewatkan. Jika itu tidak, pastikan anda dengan benar "
"menambahkan fungsi ke berkas benar."

msgid "Running Django's test suite for the second time"
msgstr "Menjalankan rangkaian percobaan Django untuk kedua kali"

msgid ""
"Once you've verified that your patch and your test are working correctly, "
"it's a good idea to run the entire Django test suite to verify that your "
"change hasn't introduced any bugs into other areas of Django. While "
"successfully passing the entire test suite doesn't guarantee your code is "
"bug free, it does help identify many bugs and regressions that might "
"otherwise go unnoticed."
msgstr ""
"Setelah anda memngecek bahwa tambalan anda dan percobaan anda bekerja dengan "
"benar, adalah ide bagus menjalankan deretan percobaan Django seluruhnya "
"untuk memastikan bahwa perubahan anda tidak memperkenalkan kesalahan apapun "
"kedalam kawasan lain dari Django. Selagi berhasil melewati deretan percobaan "
"keseluruhan tidak menjamin kode anda bebas kesalahan, itu membantu "
"mencirikan banyak kesalahan dan pemulihan yang mungkin sebaliknya luput dari "
"perhatian."

msgid ""
"To run the entire Django test suite, ``cd`` into the Django ``tests/`` "
"directory and run:"
msgstr ""
"Untuk menjalankan seluruh rangkaian percobaan Django, ``cd`` kedalam "
"direktori ``test/`` Django dan jalankan:"

msgid "Writing Documentation"
msgstr "Menulis Dokumentasi"

msgid ""
"This is a new feature, so it should be documented. Open the file ``docs/"
"topics/http/shortcuts.txt`` and add the following at the end of the file::"
msgstr ""
"Ini adalah fitur baru, jadi itu harus didokumentasikan. Buka berkas ``docs/"
"topics/http/shortcuts.txt`` dan tambah berikut pada akhir dari berkas::"

msgid ""
"Since this new feature will be in an upcoming release it is also added to "
"the release notes for the next version of Django. Open the release notes for "
"the latest version in ``docs/releases/``, which at time of writing is ``2.2."
"txt``. Add a note under the \"Minor Features\" header::"
msgstr ""
"Sejak fitur ini akan berada dalam terbitan akan datang itu juga akan "
"ditambahkan ke catatan terbitan untuk versi selanjutnya dari Django. Buka "
"catatan terbitan untuk versi terakhir dalam ``docs/releases/``, yang pada "
"saat penulisan ini ``2.2.txt``. Tambah sebuah catatan dibawah kepala \"Minor "
"Features\"::"

msgid ""
"For more information on writing documentation, including an explanation of "
"what the ``versionadded`` bit is all about, see :doc:`/internals/"
"contributing/writing-documentation`. That page also includes an explanation "
"of how to build a copy of the documentation locally, so you can preview the "
"HTML that will be generated."
msgstr ""
"Untuk informasi lebih dalam menulis dokumen, termasuk penjelasan dari apa "
"semua tentang bit ``versionadded``, lihat :doc:`/internals/contributing/"
"writing-documentation`. Halaman itu juga menyertakan sebuah penjelasan dari "
"bagaimana membangun salinan dari dokumentasi secara lokal, sehingga anda "
"dapat meninjau HTML yang akan dibangkitkan."

msgid "Previewing your changes"
msgstr "Pratinjau perubahan anda"

msgid ""
"Now it's time to go through all the changes made in our patch. To stage all "
"the changes ready for commit, run:"
msgstr ""
"Sekarang saatnya melalui semua perubahan dibuat dalam tambalan kami. Untuk "
"melancarkan semua perubahan siap diserahkan, jalankan:"

msgid ""
"Then display the differences between your current copy of Django (with your "
"changes) and the revision that you initially checked out earlier in the "
"tutorial with:"
msgstr ""
"Kemudian tampilkan perbedaan diantara salinan saat ini dari Django (dengan "
"perubahan anda) dan perbaikan yang anda awali periksa di paling awal dengan "
"petunjuk penggunaan:"

msgid "Use the arrow keys to move up and down."
msgstr "Gunakan kunci panah untuk pindah ke atas dan ke bawah."

msgid ""
"When you're done previewing the patch, hit the ``q`` key to return to the "
"command line. If the patch's content looked okay, it's time to commit the "
"changes."
msgstr ""
"Ketika anda selesai meninjau tambalan, kenai kunci ``q`` untuk kembali ke "
"baris perintah. Jika isi tambalan terlihat oke, waktunya memperbaiki "
"perubahan."

msgid "Committing the changes in the patch"
msgstr "Memperbaiki perubahan di tambalan"

msgid "To commit the changes:"
msgstr "Memperbaiki perubahan:"

msgid ""
"This opens up a text editor to type the commit message. Follow the :ref:"
"`commit message guidelines <committing-guidelines>` and write a message like:"
msgstr ""
"Ini membuka penyunting teks untuk mengetik pesanperbaikan. Ikuti :ref:"
"`commit message guidelines <committing-guidelines>` dan tulis sebuah pesan "
"seperti:"

msgid "Pushing the commit and making a pull request"
msgstr "Mendorong perbaikan dan membuat sebuah pull request"

msgid ""
"After committing the patch, send it to your fork on GitHub (substitute "
"\"ticket_99999\" with the name of your branch if it's different):"
msgstr ""
"Setelah menyerahkan tambalan, kirim itu ke cabang dari  GitHub (mengganti "
"\"ticket_99999\" dengan nama dari cabang anda jika itu berbeda):"

msgid ""
"You can create a pull request by visiting the `Django GitHub page <https://"
"github.com/django/django/>`_. You'll see your branch under \"Your recently "
"pushed branches\". Click \"Compare & pull request\" next to it."
msgstr ""
"Anda dapat membuat sebuah pull request dengan mengunjungi `Django GitHub "
"page <https://github.com/django/django/>`_. Anda akan melihat cabang anda "
"dibawah \"Your recently pushed branches\". Klik \"Compare & pull request\" "
"dekatnya."

msgid ""
"Please don't do it for this tutorial, but on the next page that displays a "
"preview of the patch, you would click \"Create pull request\"."
msgstr ""
"Harap jangan melakukan itu untuk tutorial ini. tetapi pada halaman "
"selanjutnya yang memperlihatkan tinjauan dari tambalan, anda akan mengklik "
"\"Create pull request\"."

msgid "Next steps"
msgstr "Langkah-langkah selanjutnya"

msgid ""
"Congratulations, you've learned how to make a pull request to Django! "
"Details of more advanced techniques you may need are in :doc:`/internals/"
"contributing/writing-code/working-with-git`."
msgstr ""
"Selamat, anda telah belajar bagaimana membuat sebuah pull request pada "
"Django! Rincian dari teknik-teknik lebih lanjut anda mungkin butuh adalah "
"di :doc:`/internals/contributing/writing-code/working-with-git`."

msgid ""
"Now you can put those skills to good use by helping to improve Django's "
"codebase."
msgstr ""
"Sekarang anda dapat menaruh keahlian-keahlian tersebut untuk penggunaan "
"bagus dengan membantu memperbaiki kode dasar Django."

msgid "More information for new contributors"
msgstr "Informasi lebih untuk penyumbang baru"

msgid ""
"Before you get too into writing patches for Django, there's a little more "
"information on contributing that you should probably take a look at:"
msgstr ""
"Sebelum anda terlalu kedalam menulis tambalan untuk Django, terdapat sedikit "
"informasi lebih di bantuan yang anda harus mungkin lihat pada:"

msgid ""
"You should make sure to read Django's documentation on :doc:`claiming "
"tickets and submitting patches </internals/contributing/writing-code/"
"submitting-patches>`. It covers Trac etiquette, how to claim tickets for "
"yourself, expected coding style for patches, and many other important "
"details."
msgstr ""
"Anda harus pastikan membaca dokumentasi Django di :doc:`claiming tickets and "
"submitting patches </internals/contributing/writing-code/submitting-"
"patches>`. Itu melingkup tata cara Trac, bagaimana menyatakan tiket untuk "
"anda sendiri, gaya pengkodean yang diharapkan untuk tambalan, dan banyak "
"rincian penting lain."

msgid ""
"First time contributors should also read Django's :doc:`documentation for "
"first time contributors</internals/contributing/new-contributors/>`. It has "
"lots of good advice for those of us who are new to helping out with Django."
msgstr ""
"Pertama kali penyumbang harus juga membaca :doc:`documentation for first "
"time contributors</internals/contributing/new-contributors/>`. Django. Itu "
"mempunyai banyak saran baik untuk siapa dari kita yang baru untuk dibantu "
"dengan Django."

msgid ""
"After those, if you're still hungry for more information about contributing, "
"you can always browse through the rest of :doc:`Django's documentation on "
"contributing</internals/contributing/index>`. It contains a ton of useful "
"information and should be your first source for answering any questions you "
"might have."
msgstr ""
"Setelah itu, jika anda masih terburu-buru untuk informasi lebih tentang "
"bantuan, anda dapat selalu menjelajah melalui sisa :doc:`Django's "
"documentation on contributing</internals/contributing/index>`. Itu "
"mengandung ton dari informasi berguna dan harus menjadi sumber pertama anda "
"untuk menjawab pertanyaan papun anda mungkin punya."

msgid "Finding your first real ticket"
msgstr "Temukan tiket sungguhan pertama anda"

msgid ""
"Once you've looked through some of that information, you'll be ready to go "
"out and find a ticket of your own to write a patch for. Pay special "
"attention to tickets with the \"easy pickings\" criterion. These tickets are "
"often much simpler in nature and are great for first time contributors. Once "
"you're familiar with contributing to Django, you can move on to writing "
"patches for more difficult and complicated tickets."
msgstr ""
"Ketika anda telah mencari beberapa informasi itu, anda akan siap keluar dan "
"menemukan tiket dari milik anda untuk menulis tambalan. Perhatian khusus ke "
"tiket dengan standar \"pemetikan mudah\". Tiket ini sering banyak sederhana "
"di alam dan hebat untuk pertama kali penyumbang. Ketika anda akrab dengan "
"membantu ke Django, anda dapat pindah ke menulis tambalan untuk tiket lebih "
"sulit dan rumit."

msgid ""
"If you just want to get started already (and nobody would blame you!), try "
"taking a look at the list of `easy tickets that need patches`__ and the "
"`easy tickets that have patches which need improvement`__. If you're "
"familiar with writing tests, you can also look at the list of `easy tickets "
"that need tests`__. Remember to follow the guidelines about claiming tickets "
"that were mentioned in the link to Django's documentation on :doc:`claiming "
"tickets and submitting patches </internals/contributing/writing-code/"
"submitting-patches>`."
msgstr ""
"Jika Anda hanya ingin memulai saja (dan tidak seorangpun akan menyalahkan "
"anda!), coba lihat dari daftar `easy tickets that need patches`__ dan `easy "
"tickets that have patches which need improvement`__. Jika anda akrab dengan "
"percobaan menulis, anda dapat juga melihat daftar `easy tickets that need "
"tests`__. Ingatlah untuk mengikuti panduan mengenai klaim tiket yang "
"disebutkan dalam tautan pada dokumentasi Django di :doc:`claiming tickets "
"and submitting patches </internals/contributing/writing-code/submitting-"
"patches>`."

msgid "What's next after creating a pull request?"
msgstr "Apa selanjutnya setelah membuat sebuah pull request?"

msgid ""
"After a ticket has a patch, it needs to be reviewed by a second set of eyes. "
"After submitting a pull request, update the ticket metadata by setting the "
"flags on the ticket to say \"has patch\", \"doesn't need tests\", etc, so "
"others can find it for review. Contributing doesn't necessarily always mean "
"writing a patch from scratch. Reviewing existing patches is also a very "
"helpful contribution. See :doc:`/internals/contributing/triaging-tickets` "
"for details."
msgstr ""
"Setelah tiket mempunyai tambalan, itu butuh ditinjau dengan sekumpulan mata "
"kedua. Setelah mengajukan permintaan penarikan, perbaharui metadata tiket "
"dengan mengatur bendera di tiket untuk mengatakan \"punya tambalan\", "
"\"tidak butuh percobaan\", dll, sehingga lainnya dapat menemukannya untuk "
"ditinjau. Membantu tidak perlu selalu berarti menulis tambalan dari awal. "
"Meninjau tambalan yang ada juga sangat membantu. Lihat :doc:`/internals/"
"contributing/triaging-tickets` untuk rinci."

msgid "Getting started"
msgstr "Mulai"

msgid ""
"New to Django? Or to web development in general? Well, you came to the right "
"place: read this material to quickly get up and running."
msgstr ""
"Baru pada Django? Atau pengembang jaringan secara umum? Baiklah, anda datang "
"ke tempat yang benar: baca bahan ini untuk cepat bangun dan berlari:"

msgid ""
"If you're new to Python_, you might want to start by getting an idea of what "
"the language is like. Django is 100% Python, so if you've got minimal "
"comfort with Python you'll probably get a lot more out of Django."
msgstr ""
"Jika anda baru terhadap Phyton_, anda mungkin ingin memulai dengan "
"mendapatkan ide dari seperti apa bahasanya. Django 100% Phyton, jadi jika "
"anda telah mendapatkan minimal kenyamanan dengan Phyton anda mungkin "
"mendapatkan lebih dari Django."

msgid ""
"If you're new to programming entirely, you might want to start with this "
"`list of Python resources for non-programmers`_"
msgstr ""
"Jika anda baru terhadap pemrogramam, anda mungkin ingin memulai dengan "
"`daftar dari sumber daya Python untuk bukan-programmer`_ ini."

msgid ""
"If you already know a few other languages and want to get up to speed with "
"Python quickly, we recommend `Dive Into Python`_. If that's not quite your "
"style, there are many other `books about Python`_."
msgstr ""
"Jika anda sudah mengetahui sedikit bahasa lain dan ingin membangun kecepatan "
"dengan Phyton dengan cepat, kami menganjurkan `Dive Into Python`_. Jika itu "
"bukan gaya anda, terdapat banyak `buku tentang Python`_ lain."

msgid "Quick install guide"
msgstr "Panduan pasang cepat"

msgid ""
"Before you can use Django, you'll need to get it installed. We have a :doc:"
"`complete installation guide </topics/install>` that covers all the "
"possibilities; this guide will guide you to a minimal installation that'll "
"work while you walk through the introduction."
msgstr ""
"Sebelum anda dapat menggunakan Django, anda akan butuh itu terpasang. Kami "
"memiliki sebuah :doc:`complete installation guide </topics/install>` yang "
"mencangkup semua kemungkinan; panduan ini akan memandu anda pada pemasangan "
"minimal yang akan bekerja selagi anda berjalan di pengenalan."

msgid "Install Python"
msgstr "Pasang Phyton"

msgid ""
"Being a Python web framework, Django requires Python. See :ref:`faq-python-"
"version-support` for details. Python includes a lightweight database called "
"SQLite_ so you won't need to set up a database just yet."
msgstr ""
"Menjadi seorang kerangka kerja jaringan Python, Django membutuhkan Python. "
"Lihat :ref:`faq-python-version-support` untuk rincian. Pyton memasukkan "
"basisdata ringan disebut SQLite_ sehingga anda belum perlu menyetel "
"basisdata."

msgid ""
"Get the latest version of Python at https://www.python.org/downloads/ or "
"with your operating system's package manager."
msgstr ""
"Dapatkan versi terakhir dari Python pada https://www.python.org/downloads/ "
"atau dengan pengelola paket sistem operasi anda. "

msgid ""
"You can verify that Python is installed by typing ``python`` from your "
"shell; you should see something like::"
msgstr ""
"Anda dapat memeriksa bahwa Phyton telah dipasang dengan mengetik ``python` "
"dari shell anda; anda akan melihat sesuatu seperti::"

msgid "Set up a database"
msgstr "Mengatur basisdata"

msgid ""
"This step is only necessary if you'd like to work with a \"large\" database "
"engine like PostgreSQL, MariaDB, MySQL, or Oracle. To install such a "
"database, consult the :ref:`database installation information <database-"
"installation>`."
msgstr ""
"Langkah ini hanya dibutuhkan jika anda ingin bekerja dengan mesin basisdata "
"\"large\" seperti PostgreSQL, MariaDB, MySQL, atau Oracle. Untuk memasang "
"basisdata tersebut, obrolkan :ref:`database installation information "
"<database-installation>`."

msgid "Install Django"
msgstr "Pasang Django"

msgid "You've got three options to install Django:"
msgstr "Anda memiliki tiga pilihan untuk memasang Django:"

msgid ""
":ref:`Install an official release <installing-official-release>`. This is "
"the best approach for most users."
msgstr ""
":ref:`Pasang sebuah terbitan resmi <installing-official-release>`. Ini "
"adalah pendekatan terbaik untuk kebanyakan pengguna."

msgid ""
"Install a version of Django :ref:`provided by your operating system "
"distribution <installing-distribution-package>`."
msgstr ""
"Memasang versi dari Django :ref:`provided by your operating system "
"distribution <installing-distribution-package>`."

msgid ""
":ref:`Install the latest development version <installing-development-"
"version>`. This option is for enthusiasts who want the latest-and-greatest "
"features and aren't afraid of running brand new code. You might encounter "
"new bugs in the development version, but reporting them helps the "
"development of Django. Also, releases of third-party packages are less "
"likely to be compatible with the development version than with the latest "
"stable release."
msgstr ""
":ref:`Install the latest development version <installing-development-"
"version>`. Pilihan ini untuk penggemar yang ingin fitur terakhir-dan-"
"terhebat dan tidak takut menjalankan merek kode baru. Anda mungkin "
"menghadapi kesalahan baru dalam versi pengembangan, tetapi melaporkan mereka "
"membantu pengembangan dari Django. Juga, terbitan paket pihak-ketiga "
"sepertinya sedikit sesuai dengan versi pengembangan daripada dengan terbitan "
"stabil terakhir."

msgid ""
"Always refer to the documentation that corresponds to the version of Django "
"you're using!"
msgstr ""
"Selalu mengacu ke dokumentasi yang terhubung ke versi Django yang anda "
"gunakan!"

msgid ""
"If you do either of the first two steps, keep an eye out for parts of the "
"documentation marked **new in development version**. That phrase flags "
"features that are only available in development versions of Django, and they "
"likely won't work with an official release."
msgstr ""
"Jika anda melakukan salah satu dari pertama dua langkah, awasi untuk bagian "
"dari dokumentasi ditandai **baru di versi pengembangan**. Fitur bendera "
"frase itu yang hanya tersedia di versi pengembangan Django, dan mereka "
"mungkin tidak bekerjad dengan terbitan resmi."

msgid "Verifying"
msgstr "Memeriksa"

msgid ""
"To verify that Django can be seen by Python, type ``python`` from your "
"shell. Then at the Python prompt, try to import Django:"
msgstr ""
"Untuk memeriksa bahwa Django dapat dilihat oleh Phyton, jenis ``python`` "
"dari shell anda. Lalu pada prompt Phyton, coba mengimpor Django:"

msgid "You may have another version of Django installed."
msgstr "Anda mungkin mempunyai versi lain Django terpasang."

msgid "That's it!"
msgstr "Itu dia!"

msgid ""
"That's it -- you can now :doc:`move onto the tutorial </intro/tutorial01>`."
msgstr ""
"Itu dia -- anda sekarang dapat :doc:`pindah ke tutorial </intro/tutorial01>`."

msgid "Django at a glance"
msgstr "Django sekilas"

msgid ""
"Because Django was developed in a fast-paced newsroom environment, it was "
"designed to make common web development tasks fast and easy. Here's an "
"informal overview of how to write a database-driven web app with Django."
msgstr ""
"Karena Django dikembangkan dalam lingkungan ruang redaksi yang serba cepat, "
"itu dirancang untuk membuat tugas-tugas pengembangan jaringan umum cepat dan "
"mudah. Ini adalah sebuah tinjauan tidak resmi dari bagaimana menulis sebuah "
"aplikasi jaringan berbasis basisdata dengan Django."

msgid ""
"The goal of this document is to give you enough technical specifics to "
"understand how Django works, but this isn't intended to be a tutorial or "
"reference -- but we've got both! When you're ready to start a project, you "
"can :doc:`start with the tutorial </intro/tutorial01>` or :doc:`dive right "
"into more detailed documentation </topics/index>`."
msgstr ""
"Tujuan dari dokumen ini adalah memberikan anda spesifik teknik yang cukup "
"untuk memahami bagaimana Django bekerja, tetapi ini tidak diperuntukkan "
"menjadi tutorial atau acuan -- tetapi kami telah mendapatkan keduanya! "
"Ketika anda siap memulai proyek, anda dapat:doc:`start with the tutorial </"
"intro/tutorial01>` atau :doc:`dive right into more detailed documentation </"
"topics/index>`."

msgid "Design your model"
msgstr "Rancang model anda"

msgid ""
"Although you can use Django without a database, it comes with an `object-"
"relational mapper`_ in which you describe your database layout in Python "
"code."
msgstr ""
"Meskipun anda dapat menggunakan Django tanpa basisdata, dia datang dengan "
"`object-relational mapper`_ dimana anda menggambarkan tata letak basisdata "
"anda di kode Phyton."

msgid ""
"The :doc:`data-model syntax </topics/db/models>` offers many rich ways of "
"representing your models -- so far, it's been solving many years' worth of "
"database-schema problems. Here's a quick example:"
msgstr ""
":doc:`data-model syntax </topics/db/models>` menawarkan banyak jalan kaya "
"dari mewakilkan model anda -- sejauh ini, dia telah menyelesaikan banyak "
"tahun berharga dari masalah skema-basisdata. Ini adalah contoh cepat:"

msgid "``mysite/news/models.py``"
msgstr ""

msgid "Install it"
msgstr "Pasang dia"

msgid ""
"Next, run the Django command-line utilities to create the database tables "
"automatically:"
msgstr ""
"Selanjutnya, jalankan peralatan baris-perintah Django untuk membuat tabel "
"basisdata secara otomatis:"

msgid ""
"The :djadmin:`makemigrations` command looks at all your available models and "
"creates migrations for whichever tables don't already exist. :djadmin:"
"`migrate` runs the migrations and creates tables in your database, as well "
"as optionally providing :doc:`much richer schema control </topics/"
"migrations>`."
msgstr ""
"Perintah :djadmin:`makemigrations` mencari semua model anda yang tersedia "
"dan membuat perpindahan untuk tabel-tabel mana saja yang tidak ada. :djadmin:"
"`migrate` menjalan perpindahan dan membuat tabel-tabel dalam basisdata anda, "
"dan juga pilihan menyediakan :doc:`much richer schema control </topics/"
"migrations>`."

msgid "Enjoy the free API"
msgstr "Nikmati API bebas"

msgid ""
"With that, you've got a free, and rich, :doc:`Python API </topics/db/"
"queries>` to access your data. The API is created on the fly, no code "
"generation necessary::"
msgstr ""
"Dengan itu, anda mendapatkan bebas, dan kaya, :doc:`Python API </topics/db/"
"queries>` untuk mengakses data anda. API dibuat dengan cepat, tidak ada "
"pembangkitan kode yang diperlukan::"

msgid ""
"A dynamic admin interface: it's not just scaffolding -- it's the whole house"
msgstr ""
"Sebuah antarmuka admin dinamisL ini bukan hanya perancah -- ini adalah "
"keseluruhan rumah"

msgid ""
"Once your models are defined, Django can automatically create a "
"professional, production ready :doc:`administrative interface </ref/contrib/"
"admin/index>` -- a website that lets authenticated users add, change and "
"delete objects. The only step required is to register your model in the "
"admin site:"
msgstr ""
"Sekali model anda telah ditentukan, Django dapat otomatis membuat "
"profesional, siap produksi :doc:`administrative interface </ref/contrib/"
"admin/index>` -- sebuah situs jaringan yang membuat pengguna "
"terautentifikasi menambah, merubah dan menghapus objek. Satu-satunya langkah "
"dibutuhkan adalah mendaftarkan model anda dalam situs admin:"

msgid "``mysite/news/admin.py``"
msgstr ""

msgid ""
"The philosophy here is that your site is edited by a staff, or a client, or "
"maybe just you -- and you don't want to have to deal with creating backend "
"interfaces only to manage content."
msgstr ""
"Filosofi disini adalah bahwa situs anda disunting oleh staf, atau klien, "
"atau mungkin hanya anda -- dan anda tidak ingin berhubungan dengan membuat "
"antarmuka backend hanya untuk mengelola isi."

msgid ""
"One typical workflow in creating Django apps is to create models and get the "
"admin sites up and running as fast as possible, so your staff (or clients) "
"can start populating data. Then, develop the way data is presented to the "
"public."
msgstr ""
"Satu alurkerja khas dalam membuat aplikasi Django adalah membuat model dan "
"mendapatkan situs admin hidup dan berjalan secepat mungkin, jadi staf anda "
"9atau klien) dapat mulai mengumpulkan data. Lalu, mengembangkan jalur data "
"dihadirkan ke umum."

msgid "Design your URLs"
msgstr "Rancang URL anda"

msgid ""
"A clean, elegant URL scheme is an important detail in a high-quality web "
"application. Django encourages beautiful URL design and doesn't put any "
"cruft in URLs, like ``.php`` or ``.asp``."
msgstr ""
"Bersih, skema URL elegan adalah rincian penting dalam aplikasi jaringan "
"berkualitas tinggi. Django mendorong rancangan URL cantik dan tidak menaruh "
"kata kasar apapun dalam URL, seperti ``.php`` atau ``.asp``. "

msgid ""
"To design URLs for an app, you create a Python module called a :doc:`URLconf "
"</topics/http/urls>`. A table of contents for your app, it contains a "
"mapping between URL patterns and Python callback functions. URLconfs also "
"serve to decouple URLs from Python code."
msgstr ""
"Untuk merancang URL untuk sebuah aplikasi, anda buat sebuah modul Python "
"dipanggil :doc:`URLconf </topics/http/urls>`. Sebuah tabel dari isi aplikasi "
"anda, itu mengandung pemetaan diantara pola URL dan fungsi panggilan kembali "
"Python. URLconfs juga melayani untuk memisahkan URL dari kode Python."

msgid ""
"Here's what a URLconf might look like for the ``Reporter``/``Article`` "
"example above:"
msgstr ""
"Ini adalah apa URLconf mungkin terlihat seperti untuk ``Reporter``/"
"``Article`` contoh diatas:"

msgid "``mysite/news/urls.py``"
msgstr ""

msgid ""
"The code above maps URL paths to Python callback functions (\"views\"). The "
"path strings use parameter tags to \"capture\" values from the URLs. When a "
"user requests a page, Django runs through each path, in order, and stops at "
"the first one that matches the requested URL. (If none of them matches, "
"Django calls a special-case 404 view.) This is blazingly fast, because the "
"paths are compiled into regular expressions at load time."
msgstr ""
"Kode diatas memetakan jalur URL pada fungsi callback Python (\"views\"). "
"String jalur menggunakan etiket parameter untuk \"menangkap\" nilai-nilai "
"dari URL. Ketika seorang pengguna meminta sebuah halaman, Django menjalankan "
"setiap jalur, dalam urutan, dan berhenti pada satu pertama uang cocok dengan "
"URL diminta. (Jika tidak ada dari mereka cocok, Django memanggil tampilan "
"kasus-khusus 404). Ini sangat cepat, karena jalur disusun kedalam reguler "
"expression pada waktu muat."

msgid ""
"Once one of the URL patterns matches, Django calls the given view, which is "
"a Python function. Each view gets passed a request object -- which contains "
"request metadata -- and the values captured in the pattern."
msgstr ""
"Ketika satu dari pola URL cocok, Django memanggil tampilan yang diberikan, "
"yaitu sebuah fungsi Python. Setiap tampilan mendapatkan perlewatan sebuah "
"permintaan obyek -- yang mengandung permintaan metadata -- dan nilai-nilai "
"ditangkap dalam pola."

msgid ""
"For example, if a user requested the URL \"/articles/2005/05/39323/\", "
"Django would call the function ``news.views.article_detail(request, "
"year=2005, month=5, pk=39323)``."
msgstr ""
"Sebagai contoh, jika sebuah pengguna meminta URL \"/articles/2005/05/39323/"
"\", Django akan memanggil fungsi ``news.views.article_detail(request, "
"year=2005, month=5, pk=39323)``."

msgid "Write your views"
msgstr "Tulis tampilan anda"

msgid ""
"Each view is responsible for doing one of two things: Returning an :class:"
"`~django.http.HttpResponse` object containing the content for the requested "
"page, or raising an exception such as :class:`~django.http.Http404`. The "
"rest is up to you."
msgstr ""
"Setiap tampilan bertanggung jawab untuk melalukan satu dari dua hal: "
"Mengembalikan sebuah obyek :class:`~django.http.HttpResponse` mengandung isi "
"untuk halaman diminta, atau menerbitkan pengecualian seperti :class:`~django."
"http.Http404`. Sisanya terserah anda."

msgid ""
"Generally, a view retrieves data according to the parameters, loads a "
"template and renders the template with the retrieved data. Here's an example "
"view for ``year_archive`` from above:"
msgstr ""
"Umumnya, tampilan mengambil data menurut parameter, memuat cetakan dan "
"menjadikan cetakan dengan data terambil. Disini adalah sebuah contoh "
"tampilan untuk ``year_archive`` dari atas:"

msgid "``mysite/news/views.py``"
msgstr ""

msgid ""
"This example uses Django's :doc:`template system </topics/templates>`, which "
"has several powerful features but strives to stay simple enough for non-"
"programmers to use."
msgstr ""
"Ini contoh menggunakan :doc:`template system </topics/templates>` Django, "
"yang mempunyai beberapa fitur kuat tetapi bekerja keras untuk tetap cukup "
"sederhana untuk digunakan bagi bukan-programmer."

msgid "Design your templates"
msgstr "Rancang cetakan anda"

msgid "The code above loads the ``news/year_archive.html`` template."
msgstr "Kode diatas memuat cetakan ``news/year_archive.html``."

msgid ""
"Django has a template search path, which allows you to minimize redundancy "
"among templates. In your Django settings, you specify a list of directories "
"to check for templates with :setting:`DIRS <TEMPLATES-DIRS>`. If a template "
"doesn't exist in the first directory, it checks the second, and so on."
msgstr ""
"Django mempunyai sebuah cetakan jalur pencarian, yang mengizinkan anda "
"mengecilkan kelebihan antara cetakan. Di pengaturan Django anda, anda "
"menjelaskan daftar direktori untuk memeriksa untuk cetakan dengan :setting:"
"`DIRS <TEMPLATES-DIRS>`. Jika cetakan tidak ada di direktori pertama, dia "
"memeriksa yang kedua, dan selanjutnya."

msgid ""
"Let's say the ``news/year_archive.html`` template was found. Here's what "
"that might look like:"
msgstr ""
"Mari kita katakan cetakan ``news/year_archive.html`` telah ditemukan. Disini "
"apa yang mungkin terlihat seperti:"

msgid "``mysite/news/templates/news/year_archive.html``"
msgstr ""

msgid ""
"Variables are surrounded by double-curly braces. ``{{ article.headline }}`` "
"means \"Output the value of the article's headline attribute.\" But dots "
"aren't used only for attribute lookup. They also can do dictionary-key "
"lookup, index lookup and function calls."
msgstr ""
"Variabel dikelilingi oleh kurung kurawal ganda. ``{{ article.headline }}`` "
"berarti \"Nilai keluaran dari atribut kepala berita artikel.\" Tetapi titik "
"tidak digunakan hanya untuk mencari atribut. Mereka juga dapat melakukan "
"mencari kuncu-kamus, mencari index dan pemanggilan fungsi."

msgid ""
"Note ``{{ article.pub_date|date:\"F j, Y\" }}`` uses a Unix-style \"pipe"
"\" (the \"|\" character). This is called a template filter, and it's a way "
"to filter the value of a variable. In this case, the date filter formats a "
"Python datetime object in the given format (as found in PHP's date function)."
msgstr ""
"Catat ``{{ article.pub_date|date:\"F j, Y\" }}`` menggunakan gaya-Unix \"pipe"
"\" (karakter \"|\"). Ini dipanggil saringan cetakan, dan itu adalah jalan "
"untuk menyaring nilai dari variabel. Di kasus ini, tanggal menyaring "
"membentuk obyek tanggal waktu Phyton di bentuk yang fiberikan (seperti "
"ditemukan di fungsi tanggal PHP)."

msgid ""
"You can chain together as many filters as you'd like. You can write :ref:"
"`custom template filters <howto-writing-custom-template-filters>`. You can "
"write :doc:`custom template tags </howto/custom-template-tags>`, which run "
"custom Python code behind the scenes."
msgstr ""
"Anda dapat merantai bersama sebanyak saringan yang anda suka. Anda dapat "
"menulis :ref:`saringan cetakan penyesuaian <howto-writing-custom-template-"
"filters>`. Anda dapat menulis :doc:`label cetakan penyesuaian </howto/custom-"
"template-tags>`, yang menjalankan kode Phyton disesuaikan dibelakang layar."

msgid ""
"Finally, Django uses the concept of \"template inheritance\". That's what "
"the ``{% extends \"base.html\" %}`` does. It means \"First load the template "
"called 'base', which has defined a bunch of blocks, and fill the blocks with "
"the following blocks.\" In short, that lets you dramatically cut down on "
"redundancy in templates: each template has to define only what's unique to "
"that template."
msgstr ""
"Akhirnya, Django menggunakan konsep dari \"cetakan turunan\". Itu apa yang "
"``{% extends \"base.html\" %}`` lakukan. Dia berarti \"Pertama muat cetakan "
"disebut 'base', yang menentukan segerombolan blok, dan isi blok dengan blok "
"berikut.\" Pendeknya, itu membiarkan anda secara dramatis memotong kelebihan "
"di cetakan: setiap cetakan harus menentukan hanya apa yang unik ke cetakan "
"tersebut."

msgid ""
"Here's what the \"base.html\" template, including the use of :doc:`static "
"files </howto/static-files/index>`, might look like:"
msgstr ""
"Disini adalah apa cetakan \"base.html\", termasuk penggunaan :doc:`berkas "
"statis </howto/static-files/index>`, mungkin terlihat seperti:"

msgid "``mysite/templates/base.html``"
msgstr ""

msgid ""
"Simplistically, it defines the look-and-feel of the site (with the site's "
"logo), and provides \"holes\" for child templates to fill. This means that a "
"site redesign can be done by changing a single file -- the base template."
msgstr ""
"Secara sederhana, itu menentukan lihat-dan-rasakan dari situs (dengan logo "
"situs), dan menyediakan \"holes\" untuk cetakan anak untuk diisi. Ini "
"berarti bahwa sebuah situs dirancang kembali dapat dilakukan dengan merubah "
"berkas tunggal -- cetakan dasar."

msgid ""
"It also lets you create multiple versions of a site, with different base "
"templates, while reusing child templates. Django's creators have used this "
"technique to create strikingly different mobile versions of sites by only "
"creating a new base template."
msgstr ""
"Ini juga memungkinkan anda membuat banyak versi situs, dengan cetakan dasar "
"berbada, selagi menggunakan kembali cetakan anak. Pembuar Django harus "
"menggunakan teknik ini untuk membuat sangat mencolok versi ponsel yang "
"berbeda dari situs dengan hanya membuat sebuah cetakan dasar baru."

msgid ""
"Note that you don't have to use Django's template system if you prefer "
"another system. While Django's template system is particularly well-"
"integrated with Django's model layer, nothing forces you to use it. For that "
"matter, you don't have to use Django's database API, either. You can use "
"another database abstraction layer, you can read XML files, you can read "
"files off disk, or anything you want. Each piece of Django -- models, views, "
"templates -- is decoupled from the next."
msgstr ""
"Catatan bahwa anda tidak harus menggunakan sistem cetakan Django jika anda "
"memilih sistem lain. Selama sistem cetakan Django terutama terpadu-baik "
"dengan lapisan model Django, tidak ada paksaan anda menggunakannya. untuk "
"keadaan itu, anda tidak harus menggunakan API basisdata Django, salah satu. "
"Anda dapat menggunakan lapisan abstraksi basisdata lain, anda dapat membaca "
"berkas XML, anda dapat membaca berkas cakram. Setiap potongan Django -- "
"model, tampilan, cetakan -- dipisahkan dari selanjutnya."

msgid "This is just the surface"
msgstr "Ini hanya permukaan"

msgid ""
"This has been only a quick overview of Django's functionality. Some more "
"useful features:"
msgstr ""
"Ini hanya ikhtisar cepat dari fungsi Django. Beberapa fitur lebih berguna:"

msgid ""
"A :doc:`caching framework </topics/cache>` that integrates with memcached or "
"other backends."
msgstr ""
"Sebuah :doc:`kerangka tembolok </topics/cache>` yang dipadukan dengan "
"memcache atau backend lain."

msgid ""
"A :doc:`syndication framework </ref/contrib/syndication>` that lets you "
"create RSS and Atom feeds by writing a small Python class."
msgstr ""
":doc:`syndication framework </ref/contrib/syndication>` yang memungkinkan "
"anda membuat umpan RSS dan Atom dengan menulis sebuah kelas kecil Python."

msgid ""
"More attractive automatically-generated admin features -- this overview "
"barely scratched the surface."
msgstr ""
"Lebih atraktif fitur-fitur admin dibangkitkan-otomatis -- gambaran ini "
"nyaris tidak tergores di permukaan."

msgid ""
"The next steps are for you to `download Django`_, read :doc:`the tutorial </"
"intro/tutorial01>` and join `the community`_. Thanks for your interest!"
msgstr ""
"Langkah selanjutnya adalah untuk anda `download Django`_, baca :doc:`the "
"tutorial </intro/tutorial01>` dan gabung `the community`_. Terima kasih "
"untuk minat anda!"

msgid "Advanced tutorial: How to write reusable apps"
msgstr "Tutorial lanjut: Bagaimana menulis aplikasi digunakan kembali"

msgid ""
"This advanced tutorial begins where :doc:`Tutorial 7 </intro/tutorial07>` "
"left off. We'll be turning our web-poll into a standalone Python package you "
"can reuse in new projects and share with other people."
msgstr ""
"Tutorial lanjutan memulai dimana :doc:`Tutorial 7 </intro/tutorial07>` "
"ditinggalkan. Kami akan emrubah jaringan jejak pendapat kami menjadi sebuah "
"paket Python berdisi sendiri anda dapat gunakan dalam proyek baru dan "
"berbagi dengan orang lain."

msgid ""
"If you haven't recently completed Tutorials 1–7, we encourage you to review "
"these so that your example project matches the one described below."
msgstr ""
"Jika anda belum melengkapi Tutorial 1–7, kami mendorong anda meninjau ini "
"sehingga proyek contoh anda cocok satu yang digambarkan dibawah."

msgid "Reusability matters"
msgstr "Hal-hal dapat digunakan kembali"

msgid ""
"It's a lot of work to design, build, test and maintain a web application. "
"Many Python and Django projects share common problems. Wouldn't it be great "
"if we could save some of this repeated work?"
msgstr ""
"Adalah pekerjaan banyak untuk merancang, membangun, mencoba dan merawat "
"aplikasi jaringan. Banyak proyek Phyton dan Django berbagi masalah umum. "
"Bukankah bagus jika kami dapat menyimpan beberapa pekerjaan berulang ini?"

msgid ""
"Reusability is the way of life in Python. `The Python Package Index (PyPI) "
"<https://pypi.org/>`_ has a vast range of packages you can use in your own "
"Python programs. Check out `Django Packages <https://djangopackages.org>`_ "
"for existing reusable apps you could incorporate in your project. Django "
"itself is also a normal Python package. This means that you can take "
"existing Python packages or Django apps and compose them into your own web "
"project. You only need to write the parts that make your project unique."
msgstr ""
"Dapat digunakan kembali adalah cara hidup  dalam Python. `The Python Package "
"Index (PyPI) <https://pypi.org/>`_ memiliki jangkauan luas dari paket-paket "
"anda dapat gunakan dalam program Python anda. Periksa `Django Packages "
"<https://djangopackages.org>`_ untuk aplikasi-aplikasi yang dapat digunakan "
"kembali yang anda anda dapat bekerjasama dalam proyek anda. Django itu "
"sendiri merupakan paket biasa Python. Ini berarti bahwa anda dapat mengambil "
"paket Python yang ada atau aplikasi Django dan menyusun mereka kedalam "
"proyek jaringan anda sendiri. Anda hanya butuh menulis bagian yang membuat "
"proyek anda unik."

msgid ""
"Let's say you were starting a new project that needed a polls app like the "
"one we've been working on. How do you make this app reusable? Luckily, "
"you're well on the way already. In :doc:`Tutorial 1 </intro/tutorial01>`, we "
"saw how we could decouple polls from the project-level URLconf using an "
"``include``. In this tutorial, we'll take further steps to make the app easy "
"to use in new projects and ready to publish for others to install and use."
msgstr ""
"Mari kita katakan anda sedang memulai proyek baru yang butuh aplikasi jejak "
"pendapat seperti satu yang kite telah kerjakan. Bagaimana anda ingin membuat "
"aplikasi ini dapat digunakan kembali? Untungnya, anda sudah sedang dalam "
"perjalanan. Dalam :doc:`Tutorial 1 </intro/tutorial01>`, kai lihat bagaimana "
"kami dapat memisahkan jejak pendapat dari URLconf tingkat-proyek menggunakan "
"``include``. Dalam tutorial ini, kami akan mengambil langkah lebih jauh "
"untuk membuat aplikasi lebih mudah digunakan dalam proyek baru dan siap "
"untuk diterbitkan untuk lainnya untuk dipasang dan digunakan."

msgid "Package? App?"
msgstr "Paket? Aplikasi?"

msgid ""
"A Python :term:`package` provides a way of grouping related Python code for "
"easy reuse. A package contains one or more files of Python code (also known "
"as \"modules\")."
msgstr ""
":term:`package` Python menyediakan cara pengelompokkan terhubung kode Python "
"untuk memudahkan penggunaan kembali. Sebuah paket mengandung satu atau lebih "
"berkas dari kode Python (juga dikenal sebagai \"modul\")."

msgid ""
"A package can be imported with ``import foo.bar`` or ``from foo import "
"bar``. For a directory (like ``polls``) to form a package, it must contain a "
"special file ``__init__.py``, even if this file is empty."
msgstr ""
"Sebuah paket dapat diimpor dengan ``import foo.bar`` atau ``from foo import "
"bar``. Untuk direktori (seperti ``polls``) untuk membentuk paket, dia harus "
"mengandung berkas khusus ``__init__.py``, bahkan jika berkas ini kosong."

msgid ""
"A Django *application* is a Python package that is specifically intended for "
"use in a Django project. An application may use common Django conventions, "
"such as having ``models``, ``tests``, ``urls``, and ``views`` submodules."
msgstr ""
"Sebuah *aplikasi* Django adalah sebuah paket Python yang khususnya "
"diperuntukkan untuk penggunaan dalam sebuah proyek Django. Sebuah aplikasi "
"mungkin menggunakan kebiasaan umum Django, seperti memiliki submodul "
"``models``, ``tests``, ``urls``, dan ``views``."

msgid ""
"Later on we use the term *packaging* to describe the process of making a "
"Python package easy for others to install. It can be a little confusing, we "
"know."
msgstr ""
"Kemudian kami menggunakan istilah *pemaketan* untuk menggambarkan pengolahan "
"dalam membuat paket Phyton mudah untuk lainnya untuk dipasang. Dia dapat "
"sedikit membingungkan, kami tahu."

msgid "Your project and your reusable app"
msgstr "Proyek anda dan aplikasi digunakan kembali anda"

msgid "After the previous tutorials, our project should look like this::"
msgstr "Setelah tutorial sebelumnya, proyek kami harusnya seperti ini::"

msgid ""
"You created ``mysite/templates`` in :doc:`Tutorial 7 </intro/tutorial07>`, "
"and ``polls/templates`` in :doc:`Tutorial 3 </intro/tutorial03>`. Now "
"perhaps it is clearer why we chose to have separate template directories for "
"the project and application: everything that is part of the polls "
"application is in ``polls``. It makes the application self-contained and "
"easier to drop into a new project."
msgstr ""
"Anda membuat ``mysite/template`` di doc:Tutorial 7 </intro/tutorial07>`, dan "
"``polls/templates` di :doc: Tutorial 3 </intro/tutorial03>`. Sekarang tampak "
"lebih jelas mengapa kita memilih direktori templat yang berbeda untuk "
"project dan aplikasi: semua yang merupakan bagian aplikasi polls di dalam "
"``polls`. Hal ini membuat aplikasi berdiri-sendiri dan lebih mudah untuk "
"membuat projek baru."

msgid ""
"The ``polls`` directory could now be copied into a new Django project and "
"immediately reused. It's not quite ready to be published though. For that, "
"we need to package the app to make it easy for others to install."
msgstr ""
"Direktori ``polls`` sekarang dapat disalin kedalam proyek Django baru dan "
"segera digunakan kembali. Dia tidak siap untuk diterbitkan. Untuk itu, kami "
"butuh untuk memaketkan aplikasi agar membuatnya mudah untuk lainnya dipasang."

msgid "Installing some prerequisites"
msgstr "Memasang beberapa prasyarat"

msgid ""
"The current state of Python packaging is a bit muddled with various tools. "
"For this tutorial, we're going to use setuptools_ to build our package. It's "
"the recommended packaging tool (merged with the ``distribute`` fork). We'll "
"also be using `pip`_ to install and uninstall it. You should install these "
"two packages now. If you need help, you can refer to :ref:`how to install "
"Django with pip<installing-official-release>`. You can install "
"``setuptools`` the same way."
msgstr ""
"Keadaan saat ini dari pemaketan Phyton adalah sedikit karut dengan alat "
"beragam. Untuk tutorial ini, kami akan menggunakan setuptools_ untuk "
"membangun paket kami. Ini adalah alat pemaketan disarankan (digabungkan "
"dengan ``mengedarkan`` cabang). Kami akan juga menggunakan `pip`_ untuk "
"memasan dan melepasnya. Anda harus memasang dua paket ini sekarang. Jika "
"anda butuh bantuan, anda dapat mengacu ke :ref:`how to install Django with "
"pip<installing-official-release>`. Anda dapat memasang ``setuptools`` cara "
"sama."

msgid "Packaging your app"
msgstr "Memaketkan aplikasi anda"

msgid ""
"Python *packaging* refers to preparing your app in a specific format that "
"can be easily installed and used. Django itself is packaged very much like "
"this. For a small app like polls, this process isn't too difficult."
msgstr ""
"*Pemaketan* Phyton mengacu pada menyiapkan aplikasi anda di bentuk khusus "
"yang dapat mudah dipasang dan digunakan. Django itu sendiri dipaketkan "
"seperti ini. Untuk aplikasi jecil seperti jejak pendapat, pengolahan ini "
"tidak terlalu sulit."

msgid ""
"First, create a parent directory for ``polls``, outside of your Django "
"project. Call this directory ``django-polls``."
msgstr ""
"Pertama, buat direktori induk untuk ``polls``, diluar dari proyek Django "
"anda. Panggil direktori ini ``django-polls``."

msgid "Choosing a name for your app"
msgstr "Memilih nama dari aplikasi anda"

msgid ""
"When choosing a name for your package, check resources like PyPI to avoid "
"naming conflicts with existing packages. It's often useful to prepend "
"``django-`` to your module name when creating a package to distribute. This "
"helps others looking for Django apps identify your app as Django specific."
msgstr ""
"Ketika memilih nama untuk paket anda, periksa sumber daya seperti PyPI untuk "
"menghindari penamaan bertentangan dengan paket yang anda. Ini sering berguna "
"untuk menambahkan ``django-`` ke nama modul ketika membuat paket untuk "
"dibagikan. Ini membantu lainnya mencari aplikasi Django mencirikan aplikasi "
"anda sebagai khas Django."

msgid ""
"Application labels (that is, the final part of the dotted path to "
"application packages) *must* be unique in :setting:`INSTALLED_APPS`. Avoid "
"using the same label as any of the Django :doc:`contrib packages </ref/"
"contrib/index>`, for example ``auth``, ``admin``, or ``messages``."
msgstr ""
"Label aplikasi (yaitu, bagian akhir dari jalur bertitik ke paket aplikasi) "
"*harus* unik di :setting:`INSTALLED_APPS`. Hindari menggunakan label sama "
"seperti Django :doc:`contrib packages </ref/contrib/index>`, sebagai contoh "
"``auth``, ``admin``, or ``messages``."

msgid "Move the ``polls`` directory into the ``django-polls`` directory."
msgstr "Pindahkan direktori ``poll`` kedalam direktori ``django-polls``."

msgid "Create a file ``django-polls/README.rst`` with the following contents:"
msgstr "Buat berkas ``django-polls/README.rst`` dengan isi berikut:"

msgid "``django-polls/README.rst``"
msgstr ""

msgid ""
"Create a ``django-polls/LICENSE`` file. Choosing a license is beyond the "
"scope of this tutorial, but suffice it to say that code released publicly "
"without a license is *useless*. Django and many Django-compatible apps are "
"distributed under the BSD license; however, you're free to pick your own "
"license. Just be aware that your licensing choice will affect who is able to "
"use your code."
msgstr ""
"Buat berkas ``django-polls/LICENSE``. Memilih lisensi diluar lingkup dari "
"tutorial ini, tetapi mencukupinya untuk dikatakan bahwa kode diterbitkan "
"umum tanpa lisensi adalah *tidak berguna*. Django dan banyak aplikasi Sesuai-"
"Django disebarkan dibawah lisensi BSD; bagaimanapun, anda bebas mengambil "
"lisensi anda sendiri. Hanya waspada bahwa pilihan lisensi anda akan "
"mempengaruhi siapa yang dapat menggunakan kode anda."

msgid ""
"Next we'll create ``pyproject.toml``, ``setup.cfg``, and ``setup.py`` files "
"which detail how to build and install the app. A full explanation of these "
"files is beyond the scope of this tutorial, but the `setuptools "
"documentation <https://setuptools.pypa.io/en/latest/>`_ has a good "
"explanation. Create the ``django-polls/pyproject.toml``, ``django-polls/"
"setup.cfg``, and ``django-polls/setup.py`` files with the following contents:"
msgstr ""
"Selanjutnya kami akan membuat berkas ``pyproject.toml``, ``setup.cfg``, dan "
"``setup.py`` yang merinci bagaimana membangun dan memasang aplikasi. "
"Penjelasan penuh dari berkas ini diluar cakupan tutorial, tetapi `setuptools "
"documentation <https://setuptools.pypa.io/en/latest/>`_ mempunyai penjelasan "
"yang bagus. Buat berkas ``django-polls/pyproject.toml``, ``django-polls/"
"setup.cfg``, dan ``django-polls/setup.py`` dengan isi berikut:"

msgid "``django-polls/pyproject.toml``"
msgstr ""

msgid "``django-polls/setup.cfg``"
msgstr ""

msgid "``django-polls/setup.py``"
msgstr ""

msgid ""
"Only Python modules and packages are included in the package by default. To "
"include additional files, we'll need to create a ``MANIFEST.in`` file. The "
"setuptools docs referred to in the previous step discuss this file in more "
"detail. To include the templates, the ``README.rst`` and our ``LICENSE`` "
"file, create a file ``django-polls/MANIFEST.in`` with the following contents:"
msgstr ""
"Hanya modul dan paket Phyton yang disertakan dalam paket secara awal. Untuk "
"menyertakan berkas tambahan, kami akan butuh membuat berkas ``MANIFEST.in``. "
"Dokumentasi alat pengaturan mengacu di langkah sebelumnya obrolkan berkas "
"ini lebih rinci. Untuk menyertakan cetakan, berkas ``README.rst`` dan "
"``LICENSE`` kami, membuat sebuah berkas ``django-polls/MANIFEST.in`` dengan "
"isi berikut:"

msgid "``django-polls/MANIFEST.in``"
msgstr ""

msgid ""
"It's optional, but recommended, to include detailed documentation with your "
"app. Create an empty directory ``django-polls/docs`` for future "
"documentation. Add an additional line to ``django-polls/MANIFEST.in``::"
msgstr ""
"Ini adalah pilihan, tetapi disarankan, untuk menyertakan dokumentasi rinci "
"dengan aplikasi anda. Buat direktori kosong ``django-polls/docs`` untuk "
"dokumentasi akan datang. Tambah sebuah tambahan baris pada ``django-polls/"
"MANIFEST.in``::"

msgid ""
"Note that the ``docs`` directory won't be included in your package unless "
"you add some files to it. Many Django apps also provide their documentation "
"online through sites like `readthedocs.org <https://readthedocs.org>`_."
msgstr ""
"Catat bahwa direktori ``docs`` tidak akan disertakan dalam paket anda "
"meskipun anda menambahkan beberapa berkas ke dalamnya. Banyak aplikasi "
"Django juga menyediakan dokumentasi darin mereka melalui situs seperti "
"`readthedocs.org <https://readthedocs.org>`_."

msgid ""
"Try building your package with ``python setup.py sdist`` (run from inside "
"``django-polls``). This creates a directory called ``dist`` and builds your "
"new package, ``django-polls-0.1.tar.gz``."
msgstr ""
"Coba membangun paket anda dengan ``python setup.py sdist`` (jalankan dari "
"dalam ``django-polls``). Ini membuat direktori dipanggil ``dist`` dan bangun "
"paket baru anda, ``django-polls-0.1.tar.gz``."

msgid ""
"For more information on packaging, see Python's `Tutorial on Packaging and "
"Distributing Projects <https://packaging.python.org/tutorials/packaging-"
"projects/>`_."
msgstr ""
"Untuk informasi lebih pada pemaketan, lihat `Tutorial on Packaging and "
"Distributing Projects <https://packaging.python.org/tutorials/packaging-"
"projects/>`_  Python."

msgid "Using your own package"
msgstr "Menggunakan paket anda sendiri"

msgid ""
"Since we moved the ``polls`` directory out of the project, it's no longer "
"working. We'll now fix this by installing our new ``django-polls`` package."
msgstr ""
"Sejak kami memindahkan direktori ``polls`` diluar proyek, dia tidak lagi "
"bekerja. Kami akan sekarang memperbaiki ini dengan memasang paket ``django-"
"polls`` baru."

msgid "Installing as a user library"
msgstr "Memasang sebagai pustaka pengguna"

msgid ""
"The following steps install ``django-polls`` as a user library. Per-user "
"installs have a lot of advantages over installing the package system-wide, "
"such as being usable on systems where you don't have administrator access as "
"well as preventing the package from affecting system services and other "
"users of the machine."
msgstr ""
"Langkah berikut memasang ``django-polls`` sebagai pustaka pengguna. Tiap-"
"pengguna pasang mempunyai banyak keuntungan lebih memasang paket lebar-"
"sistem, seperti menjadi berguna di sistem dimana anda tidak mempunyai akses "
"administrator sama halnya mencegah paket dari layanan sistem terpengaruh dan "
"pengguna lain dari mesin."

msgid ""
"Note that per-user installations can still affect the behavior of system "
"tools that run as that user, so using a virtual environment is a more robust "
"solution (see below)."
msgstr ""
"Catat bahwa per pemasangan pengguna dapat masih mempengaruhi perilaku "
"peralatan sistem yang dijalankan pengguna tersebut, jadi menggunakan "
"lingkunan maya adalah pemecahan yang lebih kokoh (lihat dibawah)."

msgid ""
"To install the package, use pip (you already :ref:`installed it <installing-"
"reusable-apps-prerequisites>`, right?)::"
msgstr ""
"Untuk memasang paket, gunakan pip (anda sudah :ref:`memasangnya <installing-"
"reusable-apps-prerequisites>`, benar?)::"

msgid ""
"With luck, your Django project should now work correctly again. Run the "
"server again to confirm this."
msgstr ""
"Dengan keberuntungan, proyek Django anda seharusnya sekarang bekerja dengan "
"benar kembali. Jalankan peladen kembali untuk menegaskan ini."

msgid "To uninstall the package, use pip::"
msgstr "Untuk melepas paket. gunakan pip::"

msgid "Publishing your app"
msgstr "Keluarkan aplikasi anda"

msgid ""
"Now that we've packaged and tested ``django-polls``, it's ready to share "
"with the world! If this wasn't just an example, you could now:"
msgstr ""
"Sekarang bahwa kita telah memaketkan dan mengujikan ``django-polls``, dia "
"sudah siap dibagi dengan dunia! Jika ini bukan contoh, anda dapat "
"melakukannya sekarang:"

msgid "Email the package to a friend."
msgstr "Surel paket ke teman."

msgid "Upload the package on your website."
msgstr "Unggah paket di situs jaringan anda."

msgid ""
"Post the package on a public repository, such as `the Python Package Index "
"(PyPI)`_. `packaging.python.org <https://packaging.python.org>`_ has `a good "
"tutorial <https://packaging.python.org/tutorials/packaging-projects/"
"#uploading-the-distribution-archives>`_ for doing this."
msgstr ""
"Tempatkan paket pada gudang umum, seperti `the Python Package Index "
"(PyPI)`_. `packaging.python.org <https://packaging.python.org>`_ mempunyai "
"`a good tutorial <https://packaging.python.org/tutorials/packaging-projects/"
"#uploading-the-distribution-archives>`_ untuk melakukan ini."

msgid "Installing Python packages with a virtual environment"
msgstr "Menginstal paket Python dengan lingkungan virtual"

msgid ""
"Earlier, we installed the polls app as a user library. This has some "
"disadvantages:"
msgstr ""
"Sebelumnya, kami memasalang aplikasi poling sebagai pustaka pengguna. Ini "
"mempunyai beberapa kerugian:"

msgid ""
"Modifying the user libraries can affect other Python software on your system."
msgstr ""
"Merubah pustaka pengguna dapat berakibat perangkat lunak Phyton lain di "
"sistem anda."

msgid ""
"You won't be able to run multiple versions of this package (or others with "
"the same name)."
msgstr ""
"Anda tidak dapat menjalankan versi banyak dari paket ini (atau lainnya "
"dengan nama sama disini)."

msgid ""
"Typically, these situations only arise once you're maintaining several "
"Django projects. When they do, the best solution is to use :doc:`venv "
"<python:tutorial/venv>`. This tool allows you to maintain multiple isolated "
"Python environments, each with its own copy of the libraries and package "
"namespace."
msgstr ""
"Khususnya, keadaan ini dapat hanya muncul ketika anda sedang merawat "
"beberapa proyek Django. Ketika mereka melakukannya, pemecahan terbaik adalah "
"menggunakan :doc:`venv <python:tutorial/venv>`. Alat ini mengizinkan anda "
"merawat banyak lingkungan Python terpencil, masing-masing dengan salinannya "
"sendiri dari pustaka dan paket namespace."

msgid "Writing your first Django app, part 1"
msgstr "Menulis aplikasi Django pertama anda, bagian 1"

msgid "Let's learn by example."
msgstr "Mari kita belajar berdasarkan contoh."

msgid ""
"Throughout this tutorial, we'll walk you through the creation of a basic "
"poll application."
msgstr ""
"Melalui tutorial ini, kami akan memandu anda melalui pembuatan aplikasi "
"jejak pendapat dasar."

msgid "It'll consist of two parts:"
msgstr "Dia akan terdiri dari dua bagian:"

msgid "A public site that lets people view polls and vote in them."
msgstr ""
"Situs umum yang membiarkan orang melihat jejak pendapat dan memilih mereka."

msgid "An admin site that lets you add, change, and delete polls."
msgstr ""
"Situs admin yang membiarkan anda menambah, merubah, dan menghapus jejak "
"pendapat."

msgid ""
"We'll assume you have :doc:`Django installed </intro/install>` already. You "
"can tell Django is installed and which version by running the following "
"command in a shell prompt (indicated by the $ prefix):"
msgstr ""
"Kami akan beranggapan anda telah mempunyai :doc:`Django installed </intro/"
"install>`. Anda dapat memberitahu Django terpasang dan versi mana dengan "
"menjalankan perintah berikut dalam sebuah shell prompt (ditunjukkan oleh "
"awalan $):"

msgid ""
"If Django is installed, you should see the version of your installation. If "
"it isn't, you'll get an error telling \"No module named django\"."
msgstr ""
"Jika Django telah terpasang, anda harus melihat versi dari pemasangan anda. "
"Jika dia tidak, anda akan mendapatkan kesalahan mengatakan \"Tidak ada modul "
"bernama django\"."

msgid ""
"This tutorial is written for Django |version|, which supports Python 3.8 and "
"later. If the Django version doesn't match, you can refer to the tutorial "
"for your version of Django by using the version switcher at the bottom right "
"corner of this page, or update Django to the newest version. If you're using "
"an older version of Python, check :ref:`faq-python-version-support` to find "
"a compatible version of Django."
msgstr ""
"Tutorial ini ditulis untuk Django |version|, yang mendukung Python 3.8 dan "
"terakhir. Jika versi Django tidak cocok, anda dapat mengacu pada tutorial "
"untuk version Django anda dengan menggunakan pengganti versi terletak di "
"pojok kanan bawah dari halaman ini, atau perbaharui Django ke versi terbaru. "
"Jika anda sedang menggunakan versi terlama Python, periksa :ref:`faq-python-"
"version-support` untuk menemukan kesesuaian versi dari Django."

msgid ""
"See :doc:`How to install Django </topics/install>` for advice on how to "
"remove older versions of Django and install a newer one."
msgstr ""
"Lihat :doc:`How to install Django </topics/install>` untuk saran bagaimana "
"memindahkan versi lama Django dan memasang satu yang baru."

msgid ""
"If you're having trouble going through this tutorial, please head over to "
"the :doc:`Getting Help</faq/help>` section of the FAQ."
msgstr ""
"Jika anda memiliki masalah melalui tutorial ini, harap geser ke :doc:"
"`Getting Help</faq/help>` bagian dari FAQ."

msgid "Creating a project"
msgstr "Membuat proyek"

msgid ""
"If this is your first time using Django, you'll have to take care of some "
"initial setup. Namely, you'll need to auto-generate some code that "
"establishes a Django :term:`project` -- a collection of settings for an "
"instance of Django, including database configuration, Django-specific "
"options and application-specific settings."
msgstr ""
"Jika ini adalah pertama kali anda menggunakan Django, anda harus berhati-"
"hati dari beberapa pengaturan awal. Yaitu, anda butuh membangkitkan-otomatis "
"beberapa kode yang membangun Django :term:`project` -- kumpulan dari "
"pengaturan untuk contoh DJango, termasuk konfigurasi basisdata, pilihan "
"khusus-Django dan pengaturan khusus-aplikasi."

msgid ""
"From the command line, ``cd`` into a directory where you'd like to store "
"your code, then run the following command:"
msgstr ""
"Dari baris perintah, ``cd`` kedalam direktori dimana anda ingin menyimpan "
"kode anda, lalu jalankan perintah berikut:"

msgid ""
"This will create a ``mysite`` directory in your current directory. If it "
"didn't work, see :ref:`troubleshooting-django-admin`."
msgstr ""
"Ini akan membuat direktori ``mysite`` di direktori anda saat ini. Jika itu "
"tidak bekerja, lihat :ref:`troubleshooting-django-admin`."

msgid ""
"You'll need to avoid naming projects after built-in Python or Django "
"components. In particular, this means you should avoid using names like "
"``django`` (which will conflict with Django itself) or ``test`` (which "
"conflicts with a built-in Python package)."
msgstr ""
"Anda akan butuh menghindari penamaan proyek setelah memasang-tetap komponen "
"Phyton atau Django. Khususnya, ini berarti anda harus menghindari "
"menggunakan nama seperti ``django`` (yang akan bertentangan dengan Django "
"itu sendiri) atau ``test`` (yang bertentangan dengan paket Phyton memasang-"
"tetap)."

msgid "Where should this code live?"
msgstr "Dimana seharusnya kode ini tinggal?"

msgid ""
"If your background is in plain old PHP (with no use of modern frameworks), "
"you're probably used to putting code under the web server's document root "
"(in a place such as ``/var/www``). With Django, you don't do that. It's not "
"a good idea to put any of this Python code within your web server's document "
"root, because it risks the possibility that people may be able to view your "
"code over the web. That's not good for security."
msgstr ""
"Jika latar belakang anda adalah PHP tua murni (dengan tidak menggunakan "
"kerangka kerja moderen), anda mungkin terbiasa menaruh kode dibawah akar "
"dokumen peladen jaringan (di tempat seperti ``/var/www``). Dengan Django, "
"anda tidak perlu melakukan itu. Itu bukan ide bagus menaruh apapun dari kode "
"Python ini dalam akar dokumen peladen jaringan anda, karena itu beresiko "
"kemungkinan orang mungkin dapat melihat tampilan kode anda melalui jaringan. "
"Itu tidak bagus untuk keamanan."

msgid ""
"Put your code in some directory **outside** of the document root, such as :"
"file:`/home/mycode`."
msgstr ""
"Taruh kode anda di beberapa direktori **diluar** akar dokumen, seperti :file:"
"`/home/mycode`."

msgid "Let's look at what :djadmin:`startproject` created::"
msgstr "Mari kita lihat seperti apa :djadmin:`startproject` dibuat::"

msgid "These files are:"
msgstr "Berkas ini adalah:"

msgid ""
"The outer :file:`mysite/` root directory is a container for your project. "
"Its name doesn't matter to Django; you can rename it to anything you like."
msgstr ""
"Direktori akar terluar :file:`mysite/` adalah wadah untuk proyek anda. "
"Namanya tidak masalah pada Django; anda dapat menamai kembali itu pada "
"apapun anda sukai. "

msgid ""
":file:`manage.py`: A command-line utility that lets you interact with this "
"Django project in various ways. You can read all the details about :file:"
"`manage.py` in :doc:`/ref/django-admin`."
msgstr ""
":file:`manage.py`: Sebuah kegunaan baris-perintah yang membiarkan anda "
"berinteraksi dengan proyek Django ono di beragam jalan. Anda dapat membaca "
"semua rincian tentang :file:`manage.py` di :doc:`/ref/django-admin`."

msgid ""
"The inner :file:`mysite/` directory is the actual Python package for your "
"project. Its name is the Python package name you'll need to use to import "
"anything inside it (e.g. ``mysite.urls``)."
msgstr ""
"Direktori :file:`mysite/` sebelah dalam adalah paket Phyton sesungguhnya "
"untuk proyek anda. Namanya adalah nama paket Phyton anda akan butuh untuk "
"digunakan mengimpor apapun didalamnya (sebagai contoh ``mysite.urls``)."

msgid ""
":file:`mysite/__init__.py`: An empty file that tells Python that this "
"directory should be considered a Python package. If you're a Python "
"beginner, read :ref:`more about packages <tut-packages>` in the official "
"Python docs."
msgstr ""
":file:`mysite/__init__.py`: Sebuah berkas kosong yang memberitahu Python "
"bahwa pelipat ini harus mempertimbangkan paket Python. Jika anda adalah "
"pemula Python, baca :ref:`more about packages <tut-packages>` di dokumen "
"resmi Python."

msgid ""
":file:`mysite/settings.py`: Settings/configuration for this Django "
"project.  :doc:`/topics/settings` will tell you all about how settings work."
msgstr ""
":file:`mysite/settings.py`: Pengaturan/konfigurasi untuk proyek Django ini. :"
"doc:`/topics/settings` akan mengatakan anda semua tentang bagaimana "
"pengaturan bekerja."

msgid ""
":file:`mysite/urls.py`: The URL declarations for this Django project; a "
"\"table of contents\" of your Django-powered site. You can read more about "
"URLs in :doc:`/topics/http/urls`."
msgstr ""
":file:`mysite/urls.py`: Deklarasi URL untuk proyek Django ini; \"tabel isi\" "
"dari situs Ditenagai-Django anda. Anda dapat membaca lebih tentang URL di :"
"doc:`/topics/http/urls`."

msgid ""
":file:`mysite/asgi.py`: An entry-point for ASGI-compatible web servers to "
"serve your project. See :doc:`/howto/deployment/asgi/index` for more details."
msgstr ""
":file:`mysite/asgi.py`: Sebuah titik-masukan untukpeladen jaringan cocok-"
"ASGI untuk melayani proyek anda. Lihat :doc:`/howto/deployment/asgi/index` "
"untuk rincian lebih."

msgid ""
":file:`mysite/wsgi.py`: An entry-point for WSGI-compatible web servers to "
"serve your project. See :doc:`/howto/deployment/wsgi/index` for more details."
msgstr ""
":file:`mysite/wsgi.py`: Sebuah titik-masukan untuk peladen jaringan sesuai-"
"WSGI untuk meladeni proyek anda. Lihat :doc:`/howto/deployment/wsgi/index` "
"untuk lebih rinci."

msgid "The development server"
msgstr "Peladen pengembangan"

msgid ""
"Let's verify your Django project works. Change into the outer :file:`mysite` "
"directory, if you haven't already, and run the following commands:"
msgstr ""
"Mari kita periksa proyek Django anda bekerja. Perubahan di dalam direktori :"
"file:`mysite` terluar, jika anda belum siap, dan jalankan perintah berikut:"

msgid "You'll see the following output on the command line:"
msgstr "Anda akan melihat keluaran berikut pada baris perintah:"

msgid ""
"Ignore the warning about unapplied database migrations for now; we'll deal "
"with the database shortly."
msgstr ""
"Abaikan peringatan tentang perpindahan basisdata tidak diberlakukan untuk "
"sekarang; kami akan berurusan dengan basisdata segera."

msgid ""
"You've started the Django development server, a lightweight web server "
"written purely in Python. We've included this with Django so you can develop "
"things rapidly, without having to deal with configuring a production server "
"-- such as Apache -- until you're ready for production."
msgstr ""
"Anda telah memulai peladen pengembangan Django, peladen jaringan ringan "
"ditulis dalam Python. Kami telah menyertakan ini dalam Django sehingga anda "
"dapt mengembangkan hal-hal dengan cepat, tanpa harus berurusan dengan "
"konfigurasi peladen produksi-- seperti Apache -- sampai anda siap untuk "
"produksi."

msgid ""
"Now's a good time to note: **don't** use this server in anything resembling "
"a production environment. It's intended only for use while developing. "
"(We're in the business of making web frameworks, not web servers.)"
msgstr ""
"Sekarang adalah waktu bagus untuk dicatat: **jangan** gunakan peladen ini "
"dalam dalam segala hal yang menyerupai lingkungan produksi. Itu hanya "
"diperuntukkan untuk penggunaan selagi pengembangan. (Kami berada di bisnis "
"dari membuat kerangka kerja jaringan, bukan peladen jaringan.)"

msgid ""
"Now that the server's running, visit http://127.0.0.1:8000/ with your web "
"browser. You'll see a \"Congratulations!\" page, with a rocket taking off. "
"It worked!"
msgstr ""
"Sekarang peladen sedang berjalan, kunjungi http://127.0.0.1:8000/ dengan "
"peramban jaringan anda. Anda akan melihat halaman \"Congratulations!\", "
"dengan sebuah roket meluncur. Itu bekerja!"

msgid "Changing the port"
msgstr "Merubah pangkalan"

msgid ""
"By default, the :djadmin:`runserver` command starts the development server "
"on the internal IP at port 8000."
msgstr ""
"Secara awal, perintah :djadmin:`runserver` memulai peladen pengembangan di "
"IP internal pada pangkalan 8000."

msgid ""
"If you want to change the server's port, pass it as a command-line argument. "
"For instance, this command starts the server on port 8080:"
msgstr ""
"Jika anda ingin merubah pangkalan peladen, lewati sebagai penjelasan baris-"
"perintah. Sebagai contoh, perintah ini menyalakan peladan pada pangkalan "
"8080:"

msgid ""
"If you want to change the server's IP, pass it along with the port. For "
"example, to listen on all available public IPs (which is useful if you are "
"running Vagrant or want to show off your work on other computers on the "
"network), use:"
msgstr ""
"Jika anda ingin merubah IP peladen, lewatkan bersama dengan pangkalan. Jadi "
"untuk mendengar semua IP umum (berguna jika anda ingin sedang menjalankan "
"Vagrant atau ingin menunjukkan pekerjaan anda pada komputer lain pada "
"jaringan), gunakan:"

msgid ""
"**0** is a shortcut for **0.0.0.0**. Full docs for the development server "
"can be found in the :djadmin:`runserver` reference."
msgstr ""
"**0** adalah sebuah jalan pintas untuk **0.0.0.0**. Dokumentasi penuh untuk "
"peladen pengembangan dapat ditemukan dalam acuan :djadmin:`runserver`."

msgid "Automatic reloading of :djadmin:`runserver`"
msgstr "Otomatis memuat kembali :djadmin:`runserver`"

msgid ""
"The development server automatically reloads Python code for each request as "
"needed. You don't need to restart the server for code changes to take "
"effect. However, some actions like adding files don't trigger a restart, so "
"you'll have to restart the server in these cases."
msgstr ""
"Peladen pengembangan otomatis memuat kembali kode Phyton untuk setiap "
"permintaan sesuai kebutuhan. Anda tidak butuh memulai kembali peladen untuk "
"perubahan kode agar berpengaruh. Bagaimanapun, beberapa tindakan seperti "
"menambahkan berkas tidak akan memicu mulai kembali, sehingga anda harus "
"memulai kembali peladen dalam kasus ini."

msgid "Creating the Polls app"
msgstr "Membuat aplikasi jejak pendapat"

msgid ""
"Now that your environment -- a \"project\" -- is set up, you're set to start "
"doing work."
msgstr ""
"Sekarang bahwa lingkungan anda -- sebuah \"proyek\" -- sedang diatur, anda "
"sudah untuk siap memulai pekerjaan."

msgid ""
"Each application you write in Django consists of a Python package that "
"follows a certain convention. Django comes with a utility that automatically "
"generates the basic directory structure of an app, so you can focus on "
"writing code rather than creating directories."
msgstr ""
"Setiap aplikasi anda tulis dalam Django terdiri dari paket Phyton yang "
"mengikuti ketentuan tertentu Django datang dengan kegunaan yang otomatis "
"membangkitkan struktur direktori dasar dari sebuah aplikasi, sehingga anda "
"dapat fokus pada menulis kode daripada membuat direktori."

msgid "Projects vs. apps"
msgstr "Proyek lawan aplikasi"

msgid ""
"What's the difference between a project and an app? An app is a web "
"application that does something -- e.g., a blog system, a database of public "
"records or a small poll app. A project is a collection of configuration and "
"apps for a particular website. A project can contain multiple apps. An app "
"can be in multiple projects."
msgstr ""
"Apa perbedaan diantara proyek dan aplikasi? Aplikasi adalah aplikasi "
"jaringan yang melakukan sesuatu -- yaitu, sitem blog, basisdata dari rekaman "
"umum atau aplikasi poling kecil. Proyek adalah kumpulan dari konfigurasi dan "
"aplikasi untuk situs jaringan tertentu. Proyek dapat mengandung banyak "
"aplikasi. Sebuah aplikasi dapat berada dalam banyak proyek."

msgid ""
"Your apps can live anywhere on your :ref:`Python path <tut-searchpath>`. In "
"this tutorial, we'll create our poll app in the same directory as your :file:"
"`manage.py` file so that it can be imported as its own top-level module, "
"rather than a submodule of ``mysite``."
msgstr ""
"Aplikasi anda dapat tinggal dimanapun dalam :ref:`Python path <tut-"
"searchpath>` anda. Dalam petunjuk ini, kami akan membuat aplikasi jejak "
"pendapat dalam direktori yang sama dengan berkas :file:`manage.py` anda "
"sehingga itu dapat diimpor sebagai modul tingkat-atas sendiri, daripada sub "
"modul dari ``mysite``."

msgid ""
"To create your app, make sure you're in the same directory as :file:`manage."
"py` and type this command:"
msgstr ""
"Untuk membuat aplikasi anda, pastikan anda berada di direktori sama sebagai :"
"file:`manage.py` dan ketik perintah ini:"

msgid "That'll create a directory :file:`polls`, which is laid out like this::"
msgstr "Itu akan membuat direktori :file:`polls`, yang ditata seperti ini:: "

msgid "This directory structure will house the poll application."
msgstr "Struktur direktori ini akan merumahkan aplikasi jejak pendapat."

msgid "Write your first view"
msgstr "Tulis tampilan pertama anda"

msgid ""
"Let's write the first view. Open the file ``polls/views.py`` and put the "
"following Python code in it:"
msgstr ""
"Mari kita menulis tampilan pertama. Buka berkas ``polls/views.py`` dan taruh "
"kode Phyton berikut didalamnya:"

msgid "``polls/views.py``"
msgstr ""

msgid ""
"This is the simplest view possible in Django. To call the view, we need to "
"map it to a URL - and for this we need a URLconf."
msgstr ""
"Ini adalah kemungkinan tampilan sederhana di Django. Untuk memanggil "
"tampilan, kami butuh memetakannya ke URL - dan untuk ini kami butuh URLconf."

msgid ""
"To create a URLconf in the polls directory, create a file called ``urls."
"py``. Your app directory should now look like::"
msgstr ""
"Untuk membuat URLconf dalam direktori jejak pendapat, buat berkas disebut "
"``urls.py``. Direktori aplikasi anda seharusnya kelihatan seperti::"

msgid "In the ``polls/urls.py`` file include the following code:"
msgstr "Di berkas ``polls/urls.py`` sertakan kode berikut:"

msgid "``polls/urls.py``"
msgstr ""

msgid ""
"The next step is to point the root URLconf at the ``polls.urls`` module. In "
"``mysite/urls.py``, add an import for ``django.urls.include`` and insert an :"
"func:`~django.urls.include` in the ``urlpatterns`` list, so you have:"
msgstr ""
"Langkah selanjutnya adalah menunjuk akar URLconf pada modul ``polls.urls``. "
"Dalam ``mysite/urls.py``, tambah sebuah impor untuk ``django.urls.include`` "
"dan masukkan sebuah :func:`~django.urls.include` dalam daftar "
"``urlpatterns``, sehingga anda memiliki:"

msgid "``mysite/urls.py``"
msgstr ""

msgid ""
"The :func:`~django.urls.include` function allows referencing other URLconfs. "
"Whenever Django encounters :func:`~django.urls.include`, it chops off "
"whatever part of the URL matched up to that point and sends the remaining "
"string to the included URLconf for further processing."
msgstr ""
"Fungsi :func:`~django.urls.include` mengizinkan mengacu URLconf lain. "
"Kapanpun Django menghadapi :func:`~django.urls.include`, Itu memotong bagian "
"apapun dar URL cocok ke titik itu dan mengirim string sisa ke URLconf "
"disertakan untuk pengolahan lebih lanjut."

msgid ""
"The idea behind :func:`~django.urls.include` is to make it easy to plug-and-"
"play URLs. Since polls are in their own URLconf (``polls/urls.py``), they "
"can be placed under \"/polls/\", or under \"/fun_polls/\", or under \"/"
"content/polls/\", or any other path root, and the app will still work."
msgstr ""
"Ide dibelakan :func:`~django.urls.include` adalah membuat itu mudah pasang-"
"dan-mainkan URL. Sejak jejak pendapat dalam URLconf mereka sendiri (``polls/"
"urls.py``), mereka dapat dipasang dibawah \"/polls/\", atau dibawah \"/"
"fun_polls/\", atau dibawah \"/content/polls/\", atau jalur akar lain apapun, "
"dan aplikasi masih bisa bekerja."

msgid "When to use :func:`~django.urls.include()`"
msgstr "Kapan menggunakan :func:`~django.urls.include()`"

msgid ""
"You should always use ``include()`` when you include other URL patterns. "
"``admin.site.urls`` is the only exception to this."
msgstr ""
"Anda harus selalu menggunakan ``include()`` ketika anda menyertakan pola URL "
"lain. ``admin.site.urls`` hanya pengecualian untuk ini."

msgid ""
"You have now wired an ``index`` view into the URLconf. Verify it's working "
"with the following command:"
msgstr ""
"Anda sekarang harus mengikat tampilan ``index`` kedalam URLconf. Periksa "
"pekerjaannya dengan perintah berikut:"

msgid ""
"Go to http://localhost:8000/polls/ in your browser, and you should see the "
"text \"*Hello, world. You're at the polls index.*\", which you defined in "
"the ``index`` view."
msgstr ""
"Pergi ke http://localhost:8000/polls/ di perambah anda, dan anda seharusnya "
"melihat teks \"*Halo, dunia. Anda sedang berada di index jejak pendapat.*\", "
"yang anda tentukan di tampilan ``index``."

msgid "Page not found?"
msgstr "Laman tidak ditemukan?"

msgid ""
"If you get an error page here, check that you're going to http://"
"localhost:8000/polls/ and not http://localhost:8000/."
msgstr ""
"JIka anda mendapat sebuah kesalahan halaman disini, periksa bahwa anda akan "
"ke http://localhost:8000/polls/ dan bukan http://localhost:8000/."

msgid ""
"The :func:`~django.urls.path` function is passed four arguments, two "
"required: ``route`` and ``view``, and two optional: ``kwargs``, and "
"``name``. At this point, it's worth reviewing what these arguments are for."
msgstr ""
"Fungsi :func:`~django.urls.path` melewatkan empat argumen, dua dibutuhkan: "
"``route`` dan ``view``, dua pilihan: ``kwargs``, dan ``name``. Pada titik "
"ini, itu berharga meninjau kembali untuk apa argumen-argumen ini."

msgid ":func:`~django.urls.path` argument: ``route``"
msgstr ":func:`~django.urls.path` argument: ``route``"

msgid ""
"``route`` is a string that contains a URL pattern. When processing a "
"request, Django starts at the first pattern in ``urlpatterns`` and makes its "
"way down the list, comparing the requested URL against each pattern until it "
"finds one that matches."
msgstr ""
"``route`` adalah sebuah string yang mengandung sebuah pola URL. Ketika "
"mengolah sebuah permintaan, Django mulai pada pola pertama dalam "
"``urlpatterns`` dan membuat itu turun ke daftar, membandingkan URL diminta "
"terhadap setiap pola sampai itu menemukan satu yang cocok. "

msgid ""
"Patterns don't search GET and POST parameters, or the domain name. For "
"example, in a request to ``https://www.example.com/myapp/``, the URLconf "
"will look for ``myapp/``. In a request to ``https://www.example.com/myapp/?"
"page=3``, the URLconf will also look for ``myapp/``."
msgstr ""
"Pola-pola tidak mencari parameter GET dan POST, atau nama ranah. Sebagai "
"contoh, dalam sebuah permintaan pada ``https://www.example.com/myapp/``, "
"URLconf akan mencari untuk ``myapp/``. Dalam sebuah permintaan pada "
"``https://www.example.com/myapp/?page=3``, URLconf akan juga mencari untuk "
"``myapp/``."

msgid ":func:`~django.urls.path` argument: ``view``"
msgstr "argumen :func:`~django.urls.path: ``view``"

msgid ""
"When Django finds a matching pattern, it calls the specified view function "
"with an :class:`~django.http.HttpRequest` object as the first argument and "
"any \"captured\" values from the route as keyword arguments. We'll give an "
"example of this in a bit."
msgstr ""
"Ketika Django menemukan sebuah pola cocok, itu memanggil fungsi tampilan "
"khusus dengan sebuah obyek :class:`~django.http.HttpRequest` seperti argumen "
"pertama dan nilai-nilai apapun \"ditangkap\" dari rute sebagai argumen "
"katakunci. Kami akan memberikan sebuah contoh dari ini dalam sebuah bit."

msgid ":func:`~django.urls.path` argument: ``kwargs``"
msgstr "argumen :func:`~django.urls.path: ``kwargs``"

msgid ""
"Arbitrary keyword arguments can be passed in a dictionary to the target "
"view. We aren't going to use this feature of Django in the tutorial."
msgstr ""
"Argumen kata kunci yang berubah-ubah dapat dilewatkan di kamus ke tampilan "
"sasaran. Kami tidak akan menggunakan fitur Django ini di tutorial ini."

msgid ":func:`~django.urls.path` argument: ``name``"
msgstr "argumen :func:`~django.urls.path`: ``name``"

msgid ""
"Naming your URL lets you refer to it unambiguously from elsewhere in Django, "
"especially from within templates. This powerful feature allows you to make "
"global changes to the URL patterns of your project while only touching a "
"single file."
msgstr ""
"Menamai URL anda membiarkan anda menunjuk ke kejelasannya dari di tempat "
"lain di Django, khususnya dari dalam cetakan. Fitur kuat ini mengizinkan "
"anda membuat perubahan global pada corak URL dari proyek anda selagi hanya "
"menyentuh berkas tunggal."

msgid ""
"When you're comfortable with the basic request and response flow, read :doc:"
"`part 2 of this tutorial </intro/tutorial02>` to start working with the "
"database."
msgstr ""
"Ketika anda nyaman dengan permintaan dasar dan aliran tanggapan, baca :doc:"
"`bagian 2 dari tutorial ini </intro/tutorial02>` utuk memulai bekerja dengan "
"basisdata."

msgid "Writing your first Django app, part 2"
msgstr "Menulis aplikasi Django kedua anda, bagian 2"

msgid ""
"This tutorial begins where :doc:`Tutorial 1 </intro/tutorial01>` left off. "
"We'll set up the database, create your first model, and get a quick "
"introduction to Django's automatically-generated admin site."
msgstr ""
"Ttutorial ini memulai dimana :doc:`Tutorial 1 </intro/tutorial01>` "
"ditinggalkan. Kami akan menyetelbasisdata, buat model pertama anda, dan "
"dapatkan pengenalan cepat pada dibangkitkan-otomatis situs admin Django."

msgid "Database setup"
msgstr "Pengaturan basisdata"

msgid ""
"Now, open up :file:`mysite/settings.py`. It's a normal Python module with "
"module-level variables representing Django settings."
msgstr ""
"Sekarang, buka :file:`mysite/settings.py`. Dia adalah modul Phyton biasa "
"dengan variabel tingkat-modul mewakili pengaturan Django."

msgid ""
"By default, the configuration uses SQLite. If you're new to databases, or "
"you're just interested in trying Django, this is the easiest choice. SQLite "
"is included in Python, so you won't need to install anything else to support "
"your database. When starting your first real project, however, you may want "
"to use a more scalable database like PostgreSQL, to avoid database-switching "
"headaches down the road."
msgstr ""
"Secara awalan, konfiurasi menggunakan SQLite. Jika anda baru pada basisdata, "
"atau anda hanya tertarik dalam mencoba Django, ini adalah pilihan termudah. "
"SQlite disertakan di Python, jadi anda tidak butuh memasang apapun lagi "
"untuk mendukung basisdata anda. Ketika memulai proyek pertama anda "
"sesungguhnya, bagaimanapun, anda mungkin ingin menggunakan basisdata lebih "
"dapat diukur seperti PostgreSQL, untuk menghindari pusing pertukarang-"
"basisdata di jalan."

msgid ""
"If you wish to use another database, install the appropriate :ref:`database "
"bindings <database-installation>` and change the following keys in the :"
"setting:`DATABASES` ``'default'`` item to match your database connection "
"settings:"
msgstr ""
"Jika anda berharap menggunakan basisdata lain, pasang :ref:`database "
"bindings <database-installation>` yang sesuai dan rubah kunci berikut di "
"barang :setting:`DATABASES` ``'default'`` untuk mencocokkan pengaturan "
"hubungan basisdata anda:"

msgid ""
":setting:`ENGINE <DATABASE-ENGINE>` -- Either ``'django.db.backends."
"sqlite3'``, ``'django.db.backends.postgresql'``, ``'django.db.backends."
"mysql'``, or ``'django.db.backends.oracle'``. Other backends are :ref:`also "
"available <third-party-notes>`."
msgstr ""
":setting:`ENGINE <DATABASE-ENGINE>` -- Salah satu ``'django.db.backends."
"sqlite3'``, ``'django.db.backends.postgresql'``, ``'django.db.backends."
"mysql'``, atau ``'django.db.backends.oracle'``. Backend lainnya adalah :ref:"
"`juga tersedia <third-party-notes>`."

msgid ""
":setting:`NAME` -- The name of your database. If you're using SQLite, the "
"database will be a file on your computer; in that case, :setting:`NAME` "
"should be the full absolute path, including filename, of that file. The "
"default value, ``BASE_DIR / 'db.sqlite3'``, will store the file in your "
"project directory."
msgstr ""
":setting:`NAME` -- Nama dari basisdata anda. Jika anda menggunakan SQLite, "
"basisdata akan diberkaskan dalam komputer anda; dalam kasus itu, :setting:"
"`NAME` harus berupa jalur mutlak, termasuk nama berkas, dari berkas itu. "
"Nilai awalan, ``BASE_DIR / 'db.sqlite3'``, akan menyimpan berkas dalam "
"direktori proyek anda."

msgid ""
"If you are not using SQLite as your database, additional settings such as :"
"setting:`USER`, :setting:`PASSWORD`, and :setting:`HOST` must be added. For "
"more details, see the reference documentation for :setting:`DATABASES`."
msgstr ""
"Jika anda tidak menggunakan SQlite sebagai basisdata anda, pengaturan "
"tambahan seperti :setting:`USER`, :setting:`PASSWORD`, dan :setting:`HOST` "
"harus ditambahkan. Untuk lebih rinci, lihat acuan dukumentasi untuk :setting:"
"`DATABASES`."

msgid "For databases other than SQLite"
msgstr "Untuk basis data selain SQLite."

msgid ""
"If you're using a database besides SQLite, make sure you've created a "
"database by this point. Do that with \"``CREATE DATABASE database_name;``\" "
"within your database's interactive prompt."
msgstr ""
"Jika anda menggunakan basisdata selain SQLite, pastikan anda membuat "
"basisdata terlebih dahulu. Lakukan dengan \"``CREATE_DATABASE database_name;"
"``\" melalui prompt interaktif basisdata."

msgid ""
"Also make sure that the database user provided in :file:`mysite/settings.py` "
"has \"create database\" privileges. This allows automatic creation of a :ref:"
"`test database <the-test-database>` which will be needed in a later tutorial."
msgstr ""
"Juga pastikan bahwa basisdata yang disiapkan dalam :file:`mysite/settings."
"py` memiliki izin untuk \"membuat database\". Hal ini memungkinkan untuk "
"membuat :ref:`test database <the-test-database>` yang akan dibutuhkan nanti "
"dalam tutorial."

msgid ""
"If you're using SQLite, you don't need to create anything beforehand - the "
"database file will be created automatically when it is needed."
msgstr ""
"Jika anda sedang menggunakan SQlite, anda tidak butuh membuat apapun "
"sebelumnya - berkas basisdata akan dibuat otomatis ketika dia dibutuhkan."

msgid ""
"While you're editing :file:`mysite/settings.py`, set :setting:`TIME_ZONE` to "
"your time zone."
msgstr ""
"Ketika anda menyunting :file:`mysite/settings.py`, setel :setting:"
"`TIME_ZONE` ke zona waktu anda."

msgid ""
"Also, note the :setting:`INSTALLED_APPS` setting at the top of the file. "
"That holds the names of all Django applications that are activated in this "
"Django instance. Apps can be used in multiple projects, and you can package "
"and distribute them for use by others in their projects."
msgstr ""
"Juga, catat pengaturan :setting:`INSTALLED_APPS` pada bagian atas berkas. "
"Yang menahan nama dari semua aplikasi Django yang diaktifkan di instance "
"Django. Aplikasi dapat digunakan d banyak proyek, dan anda dapat memaketkan "
"dan menyebarkan mereka untuk digunakan oleh lainnya di proyek mereka."

msgid ""
"By default, :setting:`INSTALLED_APPS` contains the following apps, all of "
"which come with Django:"
msgstr ""
"Secara awal, :setting:`INSTALLED_APPS` mengandung aplikasi berikut, semua "
"yang datang dengan Django:"

msgid ":mod:`django.contrib.admin` -- The admin site. You'll use it shortly."
msgstr ""
":mod:`django.contrib.admin` -- Situs admin. Anda akan menggunakannya segera."

msgid ":mod:`django.contrib.auth` -- An authentication system."
msgstr ":mod:`django.contrib.auth` -- Sebuah sistem pembuktian keaslian."

msgid ":mod:`django.contrib.contenttypes` -- A framework for content types."
msgstr ":mod:`django.contrib.contenttypes` -- Sebuah kerangka untuk jenis isi."

msgid ":mod:`django.contrib.sessions` -- A session framework."
msgstr ":mod:`django.contrib.sessions` -- Sebuah kerangka sesi."

msgid ":mod:`django.contrib.messages` -- A messaging framework."
msgstr "mod:`django.contrib.messages` -- Kerangka pesan."

msgid ""
":mod:`django.contrib.staticfiles` -- A framework for managing static files."
msgstr ""
":mod:`django.contrib.staticfiles` -- Kerangka untuk mengelola berkas statis."

msgid ""
"These applications are included by default as a convenience for the common "
"case."
msgstr ""
"Aplikasi ini disertakan secara awal sebagai kenyamanan untuk kasus umum."

msgid ""
"Some of these applications make use of at least one database table, though, "
"so we need to create the tables in the database before we can use them. To "
"do that, run the following command:"
msgstr ""
"Beberapa aplikasi ini memanfaatkan setidaknya satu tabel basisdata, "
"meskipun, jadi kami butuh untuk membuat tabel di basisdata sebelum kami "
"dapat menggunakannya. Untuk melakukannya, jalankan perintah berikut:"

msgid ""
"The :djadmin:`migrate` command looks at the :setting:`INSTALLED_APPS` "
"setting and creates any necessary database tables according to the database "
"settings in your :file:`mysite/settings.py` file and the database migrations "
"shipped with the app (we'll cover those later). You'll see a message for "
"each migration it applies. If you're interested, run the command-line client "
"for your database and type ``\\dt`` (PostgreSQL), ``SHOW TABLES;`` (MariaDB, "
"MySQL), ``.tables`` (SQLite), or ``SELECT TABLE_NAME FROM USER_TABLES;`` "
"(Oracle) to display the tables Django created."
msgstr ""
"Perintah :djadmin:`migrate` mencari :setting:`INSTALLED_APPS` setelan dan "
"membuat tabel database yang diperlukan menurut pengaturan basisdata anda "
"dalam berkas :file:`mysite/settings.py` dan perpindahan basisdata disertai "
"dengan aplikasi (kami akan membahas itu nanti). Anda akan melihat sebuah "
"pesan untuk setiap perpindahan yang sudah dilakukan, jalankan baris-perintah "
"klien untuk basisdata anda dan ketik ``\\dt`` (PostgreSQL), ``SHOW TABLES;`` "
"(MariaDB, MySQL), ``.tables`` (SQLite), atau ``SELECT TABLE_NAME FROM "
"USER_TABLES;`` (Oracle) untuk menampilkan tabel-tabel Django yang dibuat."

msgid "For the minimalists"
msgstr "Untuk minimalis"

msgid ""
"Like we said above, the default applications are included for the common "
"case, but not everybody needs them. If you don't need any or all of them, "
"feel free to comment-out or delete the appropriate line(s) from :setting:"
"`INSTALLED_APPS` before running :djadmin:`migrate`. The :djadmin:`migrate` "
"command will only run migrations for apps in :setting:`INSTALLED_APPS`."
msgstr ""
"Seperti yang kami katakan diatas, aplikasi awal disertakan untuk kasus umum, "
"tetapi tidak setiap orang membutuhkan mereka. Jika anda tidak membutuhkan "
"sebagian atau semua dari mereka, silahkan komentari atau hapus baris yang "
"diinginkan dari :setting:`INSTALLED_APPS` sebelum menjalankan :djadmin:"
"`migrate`. Perintah :djadmin:`migrate` akan hanya menjalankan pemindahan "
"tempat untuk aplikasi di :setting:`INSTALLED_APPS`."

msgid "Creating models"
msgstr "Membuat model"

msgid ""
"Now we'll define your models -- essentially, your database layout, with "
"additional metadata."
msgstr ""
"Sekarang kami akan menentukan model anda -- Pada dasarnya, tata letak "
"basisdata anda, dengan metadata tambahan."

msgid "Philosophy"
msgstr "Filosofi"

msgid ""
"A model is the single, definitive source of information about your data. It "
"contains the essential fields and behaviors of the data you're storing. "
"Django follows the :ref:`DRY Principle <dry>`. The goal is to define your "
"data model in one place and automatically derive things from it."
msgstr ""
"Sebuah model adalah tunggal, sumber tetap dari informasi tentang data anda. "
"Itu mengandung bidang yang diperlukan dan perilaku dari data anda sedang "
"simpan. Django mengikuti :ref:`DRY Principle <dry>`. Tujuannya adalah untuk "
"menentukan model data dalam satu tempat dan otomatis mengambil hal-hal dari "
"itu."

msgid ""
"This includes the migrations - unlike in Ruby On Rails, for example, "
"migrations are entirely derived from your models file, and are essentially a "
"history that Django can roll through to update your database schema to match "
"your current models."
msgstr ""
"Ini termasuk perpindahan - tidak seperti dalam Ruby On Rails, sebagai "
"contoh, perpindahan seluruhnya diturunkan dari berkas model anda, dan "
"dasarnya sebuah sejarah dimana Django bisa berguling untuk memperbaharui "
"skema basisdata anda agar cocok ke model anda saat ini."

msgid ""
"In our poll app, we'll create two models: ``Question`` and ``Choice``. A "
"``Question`` has a question and a publication date. A ``Choice`` has two "
"fields: the text of the choice and a vote tally. Each ``Choice`` is "
"associated with a ``Question``."
msgstr ""
"Dalam aplikasi jejak pendapat kami, kami akan membuat dua model: "
"``Question`` dan ``Choice``. ``Question`` memiliki pertanyaan dan tanggal "
"penerbitan. ``Choice`` memiliki dua bidang: teks dari pilihan dan "
"perhitungan pilihan. Setiap ``Choice`` dikaitkan dengan ``Question``."

msgid ""
"These concepts are represented by Python classes. Edit the :file:`polls/"
"models.py` file so it looks like this:"
msgstr ""
"Konsep ini diwakilkan oleh kelas Python. Sunting berkas :file:`polls/models."
"py` sehingga terlihat seperti ini:"

msgid "``polls/models.py``"
msgstr ""

msgid ""
"Here, each model is represented by a class that subclasses :class:`django.db."
"models.Model`. Each model has a number of class variables, each of which "
"represents a database field in the model."
msgstr ""
"Disini, setiap model diwakilkan dengan kelas yang subkelas :class:`django.db."
"models.Model`. Masing-masing model mempunyai sejumlah variabel kelas, "
"setiapnya mewakilkan sebuah bidang basisdata dalam model."

msgid ""
"Each field is represented by an instance of a :class:`~django.db.models."
"Field` class -- e.g., :class:`~django.db.models.CharField` for character "
"fields and :class:`~django.db.models.DateTimeField` for datetimes. This "
"tells Django what type of data each field holds."
msgstr ""
"Setiap bidang diwakilkan oleh contoh dari kelas :class:`~django.db.models."
"Field` class -- sebagai contoh :class:`~django.db.models.CharField` untuk "
"bidang karakter dan :class:`~django.db.models.DateTimeField` untuk tanggal "
"waktu. Ini memberitahu Django jenis apa dari data setiap bidang yang "
"disimpan."

msgid ""
"The name of each :class:`~django.db.models.Field` instance (e.g. "
"``question_text`` or ``pub_date``) is the field's name, in machine-friendly "
"format. You'll use this value in your Python code, and your database will "
"use it as the column name."
msgstr ""
"Nama dari setiap instance :class:`~django.db.models.Field` (sebagai contoh "
"`question_text`` or ``pub_date``) adalah nama bidang, di bentuk mesin-"
"bersahabat. Anda akan menggunakan nilai ini di kode Phyton, dan basisdata "
"anda akan menggunakannya sebagai nama kolom."

msgid ""
"You can use an optional first positional argument to a :class:`~django.db."
"models.Field` to designate a human-readable name. That's used in a couple of "
"introspective parts of Django, and it doubles as documentation. If this "
"field isn't provided, Django will use the machine-readable name. In this "
"example, we've only defined a human-readable name for ``Question.pub_date``. "
"For all other fields in this model, the field's machine-readable name will "
"suffice as its human-readable name."
msgstr ""
"Anda dapat menggunakan pilihan argumen penempatan pertama pada :class:"
"`~django.db.models.Field` untuk merancang nama dapat dibaca-manusia. Itu "
"digunakan di pasangan bagian mawas diri dari Django dan dia mengganda "
"sebagai dokumentasi. Jika bidang ini tidak disediakan, Django akan "
"menggunakan nama dapat dibaca-manusia. Di contoh ini, kami telah hanya "
"menentukan nama dapat dibaca-manusia untuk ``Question.pub_date``. Untuk "
"semua bidang lain di model ini, nama dapat dibaca-mesin akan mencukupi "
"sebagai nama dapat dibaca-manusia nya."

msgid ""
"Some :class:`~django.db.models.Field` classes have required arguments. :"
"class:`~django.db.models.CharField`, for example, requires that you give it "
"a :attr:`~django.db.models.CharField.max_length`. That's used not only in "
"the database schema, but in validation, as we'll soon see."
msgstr ""
"Beberapa kelas :class:`~django.db.models.Field` mempunyai argumen wajib. :"
"class:`~django.db.models.CharField`, sebagai contoh, membutuhkan anda "
"memberikannya sebuah :attr:`~django.db.models.CharField.max_length`. Yang "
"digunakan tidak hanya untuk di skema basisdata, tetapi di pengesahan, "
"seperti yang segera kita lihat."

msgid ""
"A :class:`~django.db.models.Field` can also have various optional arguments; "
"in this case, we've set the :attr:`~django.db.models.Field.default` value of "
"``votes`` to 0."
msgstr ""
"Sebuah :class:`~django.db.models.Field` dapa juga mempunyai beragam argumen "
"pilihan; dalam kasus ini, kami telah menyetel nilai :attr:`~django.db.models."
"Field.default` dari ``pilih`` ke 0.  "

msgid ""
"Finally, note a relationship is defined, using :class:`~django.db.models."
"ForeignKey`. That tells Django each ``Choice`` is related to a single "
"``Question``. Django supports all the common database relationships: many-to-"
"one, many-to-many, and one-to-one."
msgstr ""
"Akhirnya, catatan hubungan ditentukan, menggunakan  :class:`~django.db."
"models.ForeignKey`. Yang mengatakan Django setiap ``Choice`` terhubung pada "
"``Question`` tunggal. Django mendukung semua hubungan basisdata umum: banyak-"
"ke-satu, banyak-ke-banyak, dan satu-ke-satu."

msgid "Activating models"
msgstr "Mengaktifkan model"

msgid ""
"That small bit of model code gives Django a lot of information. With it, "
"Django is able to:"
msgstr ""
"Ada banyak informasi yang dapat disampaikan oleh beberapa baris contoh kode "
"di atas. Dengan kode ini, Django dapat melakukan:"

msgid "Create a database schema (``CREATE TABLE`` statements) for this app."
msgstr "Buat skema basisdata (pernyataan ``CREATE TABLE``) untuk aplikasi ini."

msgid ""
"Create a Python database-access API for accessing ``Question`` and "
"``Choice`` objects."
msgstr ""
"Buat API akses-basisdata Phyton untuk mengakses obyek ``Pertanyaan`` dan "
"``Pilihan``."

msgid ""
"But first we need to tell our project that the ``polls`` app is installed."
msgstr ""
"Tetapi pertama kami butuh untuk memberitahu proyek kam bahwa aplikasi "
"``jejak pendapat`` telah terpasang."

msgid ""
"Django apps are \"pluggable\": You can use an app in multiple projects, and "
"you can distribute apps, because they don't have to be tied to a given "
"Django installation."
msgstr ""
"Aplikasi Django dapat ``ditanam``: Anda dapat menggunakan sebuah aplikasi "
"dalam banyak proyek, dan anda dapat menyebarkan aplikasi, karena mereka "
"tidak harus diikat pada pemasangan Django yang diberikan."

msgid ""
"To include the app in our project, we need to add a reference to its "
"configuration class in the :setting:`INSTALLED_APPS` setting. The "
"``PollsConfig`` class is in the :file:`polls/apps.py` file, so its dotted "
"path is ``'polls.apps.PollsConfig'``. Edit the :file:`mysite/settings.py` "
"file and add that dotted path to the :setting:`INSTALLED_APPS` setting. "
"It'll look like this:"
msgstr ""
"Untuk menyertakan aplikasi di proyek kami, kami butuh menambahkan acuan pada "
"kelas konfigurasinya di pengaturan :setting:`INSTALLED_APPS`. Kelas "
"``PollsConfig`` ada di berkas :file:`polls/apps.py`, jadi jalur bertitiknya "
"adalah ``'polls.apps.PollsConfig'``. Sunting berkas :file:`mysite/settings."
"py` dan tambah jalur bertitik itu ke pengaturan :setting:`INSTALLED_APPS`. "
"itu akan terlihat seperti ini:"

msgid "``mysite/settings.py``"
msgstr ""

msgid ""
"Now Django knows to include the ``polls`` app. Let's run another command:"
msgstr ""
"Sekarang Django tahu menyertakan aplikasi  ``polls``. Mari kita jalankan "
"perintah lain:"

msgid "You should see something similar to the following:"
msgstr "Anda harus melihat sesuatu yang mirip pada berikut:"

msgid ""
"By running ``makemigrations``, you're telling Django that you've made some "
"changes to your models (in this case, you've made new ones) and that you'd "
"like the changes to be stored as a *migration*."
msgstr ""
"Dengan menjalankan ``makemigrations``, anda mengatakan ke Django bahwa anda "
"telah membuat beberapa perubahan di model anda (dalam kasus ini, anda telah "
"membuat satu baru) dan itu anda ingin perubahan disimpan sebagai *migration*."

msgid ""
"Migrations are how Django stores changes to your models (and thus your "
"database schema) - they're files on disk. You can read the migration for "
"your new model if you like; it's the file ``polls/migrations/0001_initial."
"py``. Don't worry, you're not expected to read them every time Django makes "
"one, but they're designed to be human-editable in case you want to manually "
"tweak how Django changes things."
msgstr ""
"Perpindahan adalah bagaimana Django menyimpan perubahan ke model anda (dan "
"dengan demikian skema basisdata anda) - mereka adalah berkas-berkas di "
"cakram. Anda dapat membaca perpindahan untuk model baru anda jika anda suka; "
"itu adalah berkas ``polls/migrations/0001_initial.py``. Jangan khawatir, "
"anda tidak diharapkan membaca mereka setiap waktu Django membuatnya, tetapi "
"mereka dirancang untuk menjadi dapat-disunting-manusia dalam kasus anda "
"ingin secara manual mengutik bagaimana Django merubah hal-hal."

msgid ""
"There's a command that will run the migrations for you and manage your "
"database schema automatically - that's called :djadmin:`migrate`, and we'll "
"come to it in a moment - but first, let's see what SQL that migration would "
"run. The :djadmin:`sqlmigrate` command takes migration names and returns "
"their SQL:"
msgstr ""
"Terdapat perintah yang akan menjalankan perpindahan tempat untuk anda dan "
"mengelola skema basisdata anda otomatis - itu disebut :djadmin:`migrate`, "
"dan kami akan datang ke dia sebentar lagi - tetapi pertama mari kita lihat "
"SQL apa yang memindahkan tempat akan berjalan. Perintah :djadmin:"
"`sqlmigrate` mengambil nama perpindahan tempat dan mengembalikan SQL mereka:"

msgid ""
"You should see something similar to the following (we've reformatted it for "
"readability):"
msgstr ""
"Anda harus melihat sesuatu mirip pada berikut (kami telah membentuk kembali "
"dia untuk dapat dibaca):"

msgid "Note the following:"
msgstr "Catatan berikut: "

msgid ""
"The exact output will vary depending on the database you are using. The "
"example above is generated for PostgreSQL."
msgstr ""
"Keluaran pasti akan bermacam tergantung di basisdata anda gunakan. Contoh "
"diatas adalah membangkitkan untuk PostgreSQL."

msgid ""
"Table names are automatically generated by combining the name of the app "
"(``polls``) and the lowercase name of the model -- ``question`` and "
"``choice``. (You can override this behavior.)"
msgstr ""
"Nama tabel otomatis dibangkitkan dengan memadukan nama dari aplikasi "
"(``polls``) dan nama huruf kecil dari model -- ``question`` and ``choice``. "
"(Anda dapat menimpa kebiasaan ini.)"

msgid ""
"Primary keys (IDs) are added automatically. (You can override this, too.)"
msgstr "Kunci utama (ID) ditambahkan otomatis. (Anda dapat menimpa ini, juga.)"

msgid ""
"By convention, Django appends ``\"_id\"`` to the foreign key field name. "
"(Yes, you can override this, as well.)"
msgstr ""
"Berdasarkan kebiasaan, Django menambahkan ``\"_id\"`` ke nama bidang foreign "
"key. (Ya, anda dapat menimpa ini, juga.)"

msgid ""
"The foreign key relationship is made explicit by a ``FOREIGN KEY`` "
"constraint. Don't worry about the ``DEFERRABLE`` parts; it's telling "
"PostgreSQL to not enforce the foreign key until the end of the transaction."
msgstr ""
"Hubungan foreign key dibuat jelas dengan batasan ``FOREIGN KEY``. Jangan "
"khawatir mengenai bagian ``DEFERRABLE``; itu menceritakan PostgreSQL agar "
"tidak memaksa foreign key sampai akhir transaksi."

msgid ""
"It's tailored to the database you're using, so database-specific field types "
"such as ``auto_increment`` (MySQL), ``serial`` (PostgreSQL), or ``integer "
"primary key autoincrement`` (SQLite) are handled for you automatically. Same "
"goes for the quoting of field names -- e.g., using double quotes or single "
"quotes."
msgstr ""
"Dia disesuaiakan ke basisdata anda gunakan, jadi jenis bidang basisdata-"
"khusus seperti ``auto_increment`` (MySQL), ``serial`` (PostgreSQL), atau "
"``integer primary key autoincrement`` (SQLite) ditangani untuk anda "
"otomatis. Sama berlaku untuk mengutio nama bidang -- sebagai contoh, gunakan "
"kutip ganda atau kutip tunggal."

msgid ""
"The :djadmin:`sqlmigrate` command doesn't actually run the migration on your "
"database - instead, it prints it to the screen so that you can see what SQL "
"Django thinks is required. It's useful for checking what Django is going to "
"do or if you have database administrators who require SQL scripts for "
"changes."
msgstr ""
"Perintah :djadmin:`sqlmigrate` sebenarnya tidak menjalankan perpindahan pada "
"basisdata anda - malahan, itu mencetak nya ke layar shingga anda dapat "
"melihat apa yang Django SQL pikir dibutuhkan. Itu sangat berguna untuk "
"memeriksa apak yang Django akan lakukan atau jika anda memiliki "
"administrator basisdata yang membutuhkan tulisan SQL untuk perubahan."

msgid ""
"If you're interested, you can also run :djadmin:`python manage.py check "
"<check>`; this checks for any problems in your project without making "
"migrations or touching the database."
msgstr ""
"Jika anda tertarik, anda dapat juga menjalankan :djadmin:`python periksa "
"manage.py <check>`; pemeriksaan ini untuk masalah apapun di proyek anda "
"tanpa membuat perindahan tempat atau menyentuk basisdata."

msgid ""
"Now, run :djadmin:`migrate` again to create those model tables in your "
"database:"
msgstr ""
"Sekarang, jalankan :djadmin:`migrate` kembali untuk membuat tabel model "
"tersebut di basisdata anda:"

msgid ""
"The :djadmin:`migrate` command takes all the migrations that haven't been "
"applied (Django tracks which ones are applied using a special table in your "
"database called ``django_migrations``) and runs them against your database - "
"essentially, synchronizing the changes you made to your models with the "
"schema in the database."
msgstr ""
"Perintah :djadmin:`migrate` membawa semua pemindahan tempat yang belum "
"diberlakukan (Django melacak yang mana diberlakukan menggunakan tabel khusus "
"di basisdata anda disebut ``django_migrations``) dan menjalankan mereka "
"terhadap basisdata anda - pada dasarnya, sinkronisasi perubahan anda buat ke "
"model anda dengan skema di basisdata."

msgid ""
"Migrations are very powerful and let you change your models over time, as "
"you develop your project, without the need to delete your database or tables "
"and make new ones - it specializes in upgrading your database live, without "
"losing data. We'll cover them in more depth in a later part of the tutorial, "
"but for now, remember the three-step guide to making model changes:"
msgstr ""
"Pemindahan tempat adalah sangat kuat dan membuat anda merubah model anda "
"lembur, ketika anda mengembangkan proyek anda, tanpa buth menghapus "
"basisdata anda atau tabel dan membuat satu yang baru - Dia khusus dalam "
"meningkatkan basisdata langsung, tanpa kehilangan data. Kami akan melingkupi "
"mereka lebih dalam di bagian kemudian dari tutorial, tetapi untuk sekarang, "
"ingat panduan tiga-langkah untuk membuat perubahan model:"

msgid "Change your models (in ``models.py``)."
msgstr "Rubah model anda (di``models.py``)."

msgid ""
"Run :djadmin:`python manage.py makemigrations <makemigrations>` to create "
"migrations for those changes"
msgstr ""
"Jalankan :djadmin:`python manage.py makemigrations <makemigrations>` untuk "
"membuat perpindahan tempat untuk perubahan tersebut"

msgid ""
"Run :djadmin:`python manage.py migrate <migrate>` to apply those changes to "
"the database."
msgstr ""
"Jalankan :djadmin:`python manage.py migrate <migrate>` untuk memberlakukan "
"perubahan tersebut ke basisdata."

msgid ""
"The reason that there are separate commands to make and apply migrations is "
"because you'll commit migrations to your version control system and ship "
"them with your app; they not only make your development easier, they're also "
"usable by other developers and in production."
msgstr ""
"Alasan bahwa ada perintah terpisah untuk membuat dan memberlakukan "
"perpindahan karena anda akan menyerahkan perpindahan ke sistem kendali versi "
"anda dan mengirimkan mereka dengan aplikasi anda; mereka tidak hanya membuat "
"pengembangan anda lebih mudah, mereka juga berguna oleh pengembang-"
"pengembang lain dan dalam produksi."

msgid ""
"Read the :doc:`django-admin documentation </ref/django-admin>` for full "
"information on what the ``manage.py`` utility can do."
msgstr ""
"Baca  :doc:`django-admin documentation </ref/django-admin>` untuk informasi "
"penuh pada apa kegunaan ``manage.py`` dapat lakukan."

msgid "Playing with the API"
msgstr "Bermain dengan API"

msgid ""
"Now, let's hop into the interactive Python shell and play around with the "
"free API Django gives you. To invoke the Python shell, use this command:"
msgstr ""
"Sekarang, mari kita melompat ke dalam shell Phyton dan bermain dengan API "
"bebas Django yang diberikan ke anda. Untuk memintah shell Phyton, gunakan "
"perintah ini:"

msgid ""
"We're using this instead of simply typing \"python\", because :file:`manage."
"py` sets the :envvar:`DJANGO_SETTINGS_MODULE` environment variable, which "
"gives Django the Python import path to your :file:`mysite/settings.py` file."
msgstr ""
"Kami menggunakan ini daripada hanya mengetik \"python\", karena :file:"
"`manage.py` menyetel variabel lingkungan :envvar:`DJANGO_SETTINGS_MODULE`, "
"yang memberikan Django jalur impor Python ke berkas :file:`mysite/settings."
"py` anda."

msgid ""
"Once you're in the shell, explore the :doc:`database API </topics/db/"
"queries>`::"
msgstr ""
"Sekali anda telah di kerang, jelajahi  :doc:`API basisdata </topics/db/"
"queries>`::"

msgid ""
"Wait a minute. ``<Question: Question object (1)>`` isn't a helpful "
"representation of this object. Let's fix that by editing the ``Question`` "
"model (in the ``polls/models.py`` file) and adding a :meth:`~django.db."
"models.Model.__str__` method to both ``Question`` and ``Choice``:"
msgstr ""
"Tunggu dulu. ``<Question: Question object (1)>`` bukanlah perwakilan "
"membantu dari obyek ini. Mari kita perbaiki itu dengan menyunting modl "
"``Question`` (dalam berkas  ``polls/models.py``) dan menambahkan sebuah "
"metode :meth:`~django.db.models.Model.__str__` pada kedua ``Question`` dan "
"``Choice``:"

msgid ""
"It's important to add :meth:`~django.db.models.Model.__str__` methods to "
"your models, not only for your own convenience when dealing with the "
"interactive prompt, but also because objects' representations are used "
"throughout Django's automatically-generated admin."
msgstr ""
"Sangat penting menambahkan cara :meth:`~django.db.models.Model.__str__` ke "
"model anda, tidak hanya kenyamanan anda ketika berurusan dengan prompt "
"interaktif, tetapi juga karena perwakilan obyek digunakan di seluruh admin "
"dibangkitkan-otomatis Django."

msgid "Let's also add a custom method to this model:"
msgstr "Mari kita tambahkan sebuah metode penyesuaian pada model ini:"

msgid ""
"Note the addition of ``import datetime`` and ``from django.utils import "
"timezone``, to reference Python's standard :mod:`datetime` module and "
"Django's time-zone-related utilities in :mod:`django.utils.timezone`, "
"respectively. If you aren't familiar with time zone handling in Python, you "
"can learn more in the :doc:`time zone support docs </topics/i18n/timezones>`."
msgstr ""
"Catat tambahand dari ``import datetime`` dan ``from django.utils import "
"timezone``, untuk mengacu standar Phyton modul :mod:`datetime` dan kegunaan "
"zona-waktu-terhubung Django di :mod:`django.utils.timezone`, masing-masing. "
"Jika anda belum akrab dengan penanganan zona waktu di Phyton, anda dapat "
"mempelajari lebih di :doc:`dokumen dukungan zona waktu </topics/i18n/"
"timezones>`."

msgid ""
"Save these changes and start a new Python interactive shell by running "
"``python manage.py shell`` again::"
msgstr ""
"Simpan perubahan ini dan mulai shell interaktif Phyton baru dengan "
"menjalankan `python manage.py shell`` kembali::"

msgid ""
"For more information on model relations, see :doc:`Accessing related objects "
"</ref/models/relations>`. For more on how to use double underscores to "
"perform field lookups via the API, see :ref:`Field lookups <field-lookups-"
"intro>`. For full details on the database API, see our :doc:`Database API "
"reference </topics/db/queries>`."
msgstr ""
"Untuk informasi lebih di kaitan model, lihat :doc:`Accessing related objects "
"</ref/models/relations>`. Untuk lebih bagaimana menggunakan garis bawah "
"ganda untuk melakukan bidang lookup melalui API, lihat :ref:`Field lookups "
"<field-lookups-intro>`. Untuk rincian penuh di basisdata API, lihat :doc:"
"`Database API reference </topics/db/queries>` kami."

msgid "Introducing the Django Admin"
msgstr "Memperkenalkan Admin Django"

msgid ""
"Generating admin sites for your staff or clients to add, change, and delete "
"content is tedious work that doesn't require much creativity. For that "
"reason, Django entirely automates creation of admin interfaces for models."
msgstr ""
"Membangkitkan situs admin untuk staf atau klien anda untuk menambah, "
"merubah, dan menghapus isi adalah pekerjaan membosankan yang tidak "
"membutuhkan banyak kreatifitas. Untuk alasan itu, Django sepenuhnya "
"otomatisasi pembuatan antarmuka admin untuk model."

msgid ""
"Django was written in a newsroom environment, with a very clear separation "
"between \"content publishers\" and the \"public\" site. Site managers use "
"the system to add news stories, events, sports scores, etc., and that "
"content is displayed on the public site. Django solves the problem of "
"creating a unified interface for site administrators to edit content."
msgstr ""
"Django ditulis di lingkungan ruang berita, dengan pemisahan jelas antara "
"situs \"penerbit umum\" dan \"umum\". Pengelola situs menggunakan sistem "
"untuk menambahkan cerita berita, acara, skor olahraga, dll. dan isi itu "
"ditampilkan di situs umum. Django mengatasi masalah dari pembuatan antarmuka "
"terpadu untuk administrator situs untuk menyunting isi."

msgid ""
"The admin isn't intended to be used by site visitors. It's for site managers."
msgstr ""
"Admin tidak diperuntukkan untuk digunakan oleh pengunjung situs. Itu untuk "
"pengelola situs."

msgid "Creating an admin user"
msgstr "Membuat pengguna admin"

msgid ""
"First we'll need to create a user who can login to the admin site. Run the "
"following command:"
msgstr ""
"Pertama kami akan butuh membuat pengguna yang dapat masuk ke situs admin. "
"Jalankan perintah berikut:"

msgid "Enter your desired username and press enter."
msgstr "Masukkan nama pengguna anda inginkan dan tekan enter."

msgid "You will then be prompted for your desired email address:"
msgstr "Anda akan diarahkan ke alamat surel yang anda inginkan:"

msgid ""
"The final step is to enter your password. You will be asked to enter your "
"password twice, the second time as a confirmation of the first."
msgstr ""
"Langkah akhir adalah memasukkan sandi anda. Anda akan diminta memasukkan "
"sandi anda dua kali, kedua kali sebagai penegasan dari yang pertama."

msgid "Start the development server"
msgstr "Nyalakan peladen pengembangan"

msgid ""
"The Django admin site is activated by default. Let's start the development "
"server and explore it."
msgstr ""
"Situs Admin Django diaktifkan secara awal. Mari kita nyalakan peladen "
"pengembangan dan jelajahi dia."

msgid "If the server is not running start it like so:"
msgstr "Jika peladen tidak berjalan nyalakan seperti biasa:"

msgid ""
"Now, open a web browser and go to \"/admin/\" on your local domain -- e.g., "
"http://127.0.0.1:8000/admin/. You should see the admin's login screen:"
msgstr ""
"Sekarang, buka peramban jaringan dan pergi ke \"/admin/\" di domain lokal "
"anda -- yaitu, http://127.0.0.1:8000/admin/. Anda seharusnya melihan layar "
"masuk admin:"

msgid "Django admin login screen"
msgstr "Layar masuk admin Django"

msgid ""
"Since :doc:`translation </topics/i18n/translation>` is turned on by default, "
"if you set :setting:`LANGUAGE_CODE`, the login screen will be displayed in "
"the given language (if Django has appropriate translations)."
msgstr ""
"Sejak :doc:`translation </topics/i18n/translation>` dinyalakan secara "
"awalan, jika anda mensetel :setting:`LANGUAGE_CODE`, layar masuk akan "
"ditampilkan dalam bahasa yang diberikan (jika Django memiliki terjemahan "
"yang sesuai)."

msgid "Enter the admin site"
msgstr "Masuk situs admin"

msgid ""
"Now, try logging in with the superuser account you created in the previous "
"step. You should see the Django admin index page:"
msgstr ""
"Sekarang, coba masuk dengan akun superuser anda telah buat di langkah "
"sebelumnya. Anda seharusnya melihat halaman index admin Django:"

msgid "Django admin index page"
msgstr "Halaman indeks admin Django"

msgid ""
"You should see a few types of editable content: groups and users. They are "
"provided by :mod:`django.contrib.auth`, the authentication framework shipped "
"by Django."
msgstr ""
"Anda seharusnya melihat beberapa jenis isi dapat disunting: kelompok dan "
"pengguna. Mereka disediakan oleh :mod:`django.contrib.auth`, kerangka "
"pembuktian keaslian dikirim oleh Django."

msgid "Make the poll app modifiable in the admin"
msgstr "Buat aplikasi jejak pendapat dapat di rubah di admin"

msgid "But where's our poll app? It's not displayed on the admin index page."
msgstr ""
"Tetapi dimana aplikasi jejak pendapat kami? DIa tidak ditampilkan di halaman "
"index admin."

msgid ""
"Only one more thing to do: we need to tell the admin that ``Question`` "
"objects have an admin interface. To do this, open the :file:`polls/admin.py` "
"file, and edit it to look like this:"
msgstr ""
"Hanya satu hal lagi untuk dilakukan: kami butuh memberitahu admin bahwa "
"obyek ``Question`` memiliki antarmuka admin. Untuk melakukan ini, buka "
"berkas :file:`polls/admin.py`, dan sunting itu untuk terlihat seperti ini:"

msgid "``polls/admin.py``"
msgstr ""

msgid "Explore the free admin functionality"
msgstr "Jelajahi fungsi admin bebas"

msgid ""
"Now that we've registered ``Question``, Django knows that it should be "
"displayed on the admin index page:"
msgstr ""
"Sekarang kita telah mendaftarkan ``Question``, Django mengetahui bahwa itu "
"harus ditampilkan di halaman index admin:"

msgid "Django admin index page, now with polls displayed"
msgstr ""
"Halaman indeks admin Django, sekarang dengan pemungutan suara ditampilkan"

msgid ""
"Click \"Questions\". Now you're at the \"change list\" page for questions. "
"This page displays all the questions in the database and lets you choose one "
"to change it. There's the \"What's up?\" question we created earlier:"
msgstr ""
"Klik ``Question``. Sekarang anda berada di halaman \"change list\" untuk "
"pertanyaan. Halaman ini menampilkan semua pertanyaan di basisdata dan "
"membiarkan anda memilih satu untuk merubahnya. Ada pertanyaan \"Ada apa? "
"kami buat sebelumnya:"

msgid "Polls change list page"
msgstr "Halaman daftar rubah pemungutan suara"

msgid "Click the \"What's up?\" question to edit it:"
msgstr "Klik pertanyaan \"Ada apa?\" untuk menyuntingnya:"

msgid "Editing form for question object"
msgstr "Menyunting formulir untuk objek pertanyaan"

msgid "Things to note here:"
msgstr "Hal-hal untuk dicatat disini:"

msgid "The form is automatically generated from the ``Question`` model."
msgstr "Formulir otomatis dibangkitkan dari model ``Question``."

msgid ""
"The different model field types (:class:`~django.db.models.DateTimeField`, :"
"class:`~django.db.models.CharField`) correspond to the appropriate HTML "
"input widget. Each type of field knows how to display itself in the Django "
"admin."
msgstr ""
"Jenis bidang model berbeda ((:class:`~django.db.models.DateTimeField`, :"
"class:`~django.db.models.CharField`) berhubungan ke widget masukan HTML "
"sesuai. Setiap jenis dari bidang mengetahui bagaimana menampilkan diri "
"sendiri di admin Django."

msgid ""
"Each :class:`~django.db.models.DateTimeField` gets free JavaScript "
"shortcuts. Dates get a \"Today\" shortcut and calendar popup, and times get "
"a \"Now\" shortcut and a convenient popup that lists commonly entered times."
msgstr ""
"Setiap :class:`~django.db.models.DateTimeField` mendapatkan jalan pintas "
"Javascript bebas. Tanggal mendapatkan jalan pintas \"Hari ini\" dan popup "
"kalender, dan waktu mendapatkan jalan pintas \"Sekarang\" dan popup nyaman "
"yang menampilkan waktu dimasukkan umum."

msgid "The bottom part of the page gives you a couple of options:"
msgstr "Bagian bawah halaman memberikan anda pasangan pilihan:"

msgid ""
"Save -- Saves changes and returns to the change-list page for this type of "
"object."
msgstr ""
"Simpan -- Simpan perubahan dan kembalikan halaman daftar-rubah untuk jenis "
"ini dari obyek."

msgid ""
"Save and continue editing -- Saves changes and reloads the admin page for "
"this object."
msgstr ""
"Simpan dan lanjutkan menyunting -- Simpan perubahan dan muat kembali halaman "
"admin untuk obyek ini."

msgid ""
"Save and add another -- Saves changes and loads a new, blank form for this "
"type of object."
msgstr ""
"Simpan dan tambah lain -- Simpan perubahan dan muat baru, formulir kosong "
"untuk jenis ini dari obyek."

msgid "Delete -- Displays a delete confirmation page."
msgstr "Hapus -- Tampilkan halaman penegasan hapus."

msgid ""
"If the value of \"Date published\" doesn't match the time when you created "
"the question in :doc:`Tutorial 1</intro/tutorial01>`, it probably means you "
"forgot to set the correct value for the :setting:`TIME_ZONE` setting. Change "
"it, reload the page and check that the correct value appears."
msgstr ""
"Jika nilai \"Tanggal diterbitkan\" tidak cocok waktu ketika anda membuat "
"pertanyaan di :doc:`Tutorial 1</intro/tutorial01>`, itu kemungkinan berarti "
"anda lupa untuk mengatur nilai benar untuk pengaturan :setting:`TIME_ZONE`. "
"Rubah itu, muat kembali halaman dan periksa bahwa nilai benar muncul."

msgid ""
"Change the \"Date published\" by clicking the \"Today\" and \"Now\" "
"shortcuts. Then click \"Save and continue editing.\" Then click \"History\" "
"in the upper right. You'll see a page listing all changes made to this "
"object via the Django admin, with the timestamp and username of the person "
"who made the change:"
msgstr ""
"Rubah \"Tanggal diterbitkan\" dengan mengklik jalan pintas \"Hari ini\" dan "
"\"Sekarang\". Lalu klik \"Simpan dan lanjut menyunting\". Lalu klik \"Sejarah"
"\" di kanan atas. Anda akan melihat halaman menampilkan semua perubahan yang "
"dibuat pada obyek ini melalui admin Django, dengan stempel waktu dan nama "
"pengguna dari orang yang membuat perubahan:"

msgid "History page for question object"
msgstr "Halaman riwayat untuk objek pertanyaan"

msgid ""
"When you're comfortable with the models API and have familiarized yourself "
"with the admin site, read :doc:`part 3 of this tutorial</intro/tutorial03>` "
"to learn about how to add more views to our polls app."
msgstr ""
"Ketika anda sudah nyaman dengan API model dan telah mengakrabkan diri anda "
"dengan situs admin, baca :doc:`part 3 of this tutorial</intro/tutorial03>` "
"untuk mempelajari tentang bagaimana menambahkan tampilan lebih ke aplikasi "
"jejak pendapat kami."

msgid "Writing your first Django app, part 3"
msgstr "Menulis aplikasi Django pertama anda, bagian 3"

msgid ""
"This tutorial begins where :doc:`Tutorial 2 </intro/tutorial02>` left off. "
"We're continuing the web-poll application and will focus on creating the "
"public interface -- \"views.\""
msgstr ""
"Tutorial ini memulai dimana :doc:`Tutorial 2 </intro/tutorial02>` "
"ditinggalkan. Kami akan melanjutkan aplikasi poling jaringan dan akan fokus "
"pada membuat antarmuka umum -- \"views.\""

msgid "Overview"
msgstr "Ikhtisar"

msgid ""
"A view is a \"type\" of web page in your Django application that generally "
"serves a specific function and has a specific template. For example, in a "
"blog application, you might have the following views:"
msgstr ""
"Sebuah tampilan adalah \"type\" dari halaman jaringan dalam aplikasi Django "
"anda yang umumnya melayani fungsi khusus dan mempunyai cetakan khusus. "
"Sebagai contoh, dalam sebuah aplikasi blog, anda mungkin memiliki tampilan "
"berikut:"

msgid "Blog homepage -- displays the latest few entries."
msgstr "Halaman rumah Blog -- menampilkan sedikit masukan terakhir."

msgid "Entry \"detail\" page -- permalink page for a single entry."
msgstr ""
"Halaman \"rincian\" masukan -- halaman permalink untuk masukan tunggal."

msgid ""
"Year-based archive page -- displays all months with entries in the given "
"year."
msgstr ""
"Halaman arsip berdasarkan-tahun -- menampilkan semua bulan dengan masukan di "
"tahun yang diberikan."

msgid ""
"Month-based archive page -- displays all days with entries in the given "
"month."
msgstr ""
"Halaman arsip berdasarkan-bulan -- menampilkan semua hari dengan masukan di "
"bulan yang diberikan."

msgid "Day-based archive page -- displays all entries in the given day."
msgstr ""
"Halaman arsip berdasarkan-hari -- menampilkan semua masukan di hari yang "
"diberikan."

msgid "Comment action -- handles posting comments to a given entry."
msgstr ""
"Tindakan komentar -- menangani penempatan komentar pada masukan yang "
"diberikan."

msgid "In our poll application, we'll have the following four views:"
msgstr ""
"Di aplikasi jejak pendapat kami, kami akan mempunyai empat tampilan berikut:"

msgid "Question \"index\" page -- displays the latest few questions."
msgstr ""
"Halaman \"index\" pertanyaan -- menampilkan sedikit pertanyaan terakhir."

msgid ""
"Question \"detail\" page -- displays a question text, with no results but "
"with a form to vote."
msgstr ""
"Halaman \"index\" pertanyaan -- menampilkan teks pertanyaan, dengan tidak "
"ada hasil tetapi dengan formulir untuk memilih."

msgid ""
"Question \"results\" page -- displays results for a particular question."
msgstr ""
"Halaman \"hasil\" pertanyaan -- menampilkan hasil untuk pertanyaan tertentu."

msgid ""
"Vote action -- handles voting for a particular choice in a particular "
"question."
msgstr ""
"Tindakan pilih -- menangani pemilihan untuk pilihan tertentu di pertanyaan "
"tertentu."

msgid ""
"In Django, web pages and other content are delivered by views. Each view is "
"represented by a Python function (or method, in the case of class-based "
"views). Django will choose a view by examining the URL that's requested (to "
"be precise, the part of the URL after the domain name)."
msgstr ""
"Di Django, halaman jaringan dan isi lain dikirimkan oleh tampilan. Setiap "
"tampilan diwakulkan oleh fungsi Python (atau metode, dalam kasus tampilan "
"berdasarkan-kelas). Django akan memilih sebuah tampilan dengan mencoba URL "
"yang diminta (tepatnya, bagian dari URL setelah nama ranah)."

msgid ""
"Now in your time on the web you may have come across such beauties as ``ME2/"
"Sites/dirmod.htm?sid=&type=gen&mod=Core+Pages&gid=A6CD4967199A42D9B65B1B``. "
"You will be pleased to know that Django allows us much more elegant *URL "
"patterns* than that."
msgstr ""
"Sekarang dalam waktu anda di jaringan anda mungkin menemukan keindahan "
"seperti ``ME2/Sites/dirmod.htm?sid=&type=gen&mod=Core"
"+Pages&gid=A6CD4967199A42D9B65B1B``. Anda akan senang mengetahuinya bahwa "
"Django mengizinkan kami lebih elegan *URL patterns* daripada itu."

msgid ""
"A URL pattern is the general form of a URL - for example: ``/newsarchive/"
"<year>/<month>/``."
msgstr ""
"Sebuah pola URL adalah bentuk umum dari URL - sebagai contoh: ``/newsarchive/"
"<year>/<month>/``."

msgid ""
"To get from a URL to a view, Django uses what are known as 'URLconfs'. A "
"URLconf maps URL patterns to views."
msgstr ""
"Untuk mendapatkan URL dari tampilan (view), Django menggunakan yang disebut "
"'URLconfs'. Sebuah URLconf memetakan pola URL ke views."

msgid ""
"This tutorial provides basic instruction in the use of URLconfs, and you can "
"refer to :doc:`/topics/http/urls` for more information."
msgstr ""
"Tutorial ini menyediakan perintah dasar dalam menggunakan URLconf, dan anda "
"dapat mengacu pada :doc:`/topics/http/urls` untuk informasi lebih."

msgid "Writing more views"
msgstr "Menulis tampilan lebih"

msgid ""
"Now let's add a few more views to ``polls/views.py``. These views are "
"slightly different, because they take an argument:"
msgstr ""
"Sekarang mari kita menambahkan tampilan lebih pada ``polls/views.py``. "
"Tampilan ini sedikit berbeda karena mereka mangambil argumen:"

msgid ""
"Wire these new views into the ``polls.urls`` module by adding the following :"
"func:`~django.urls.path` calls:"
msgstr ""
"Ikat tampilan-tampilan baru ini kedalam modul ``polls.urls`` dengan "
"menambahkan panggilan :func:`~django.urls.path` berikut:"

msgid ""
"Take a look in your browser, at \"/polls/34/\". It'll run the ``detail()`` "
"method and display whatever ID you provide in the URL. Try \"/polls/34/"
"results/\" and \"/polls/34/vote/\" too -- these will display the placeholder "
"results and voting pages."
msgstr ""
"Lihatlah di perambah anda, pada \"/polls/34/\". Itu akan menjalankan cara "
"``detail()`` dan menampilkan ID apapun anda sediakan di URL. Coba \"/"
"polls/34/results/\" dan \"/polls/34/vote/\" juga -- ini akan menampilkan "
"hasil placeholder dan halaman pemilihan."

msgid ""
"When somebody requests a page from your website -- say, \"/polls/34/\", "
"Django will load the ``mysite.urls`` Python module because it's pointed to "
"by the :setting:`ROOT_URLCONF` setting. It finds the variable named "
"``urlpatterns`` and traverses the patterns in order. After finding the match "
"at ``'polls/'``, it strips off the matching text (``\"polls/\"``) and sends "
"the remaining text -- ``\"34/\"`` -- to the 'polls.urls' URLconf for further "
"processing. There it matches ``'<int:question_id>/'``, resulting in a call "
"to the ``detail()`` view like so::"
msgstr ""
"Ketika seseorang meminta sebuah halaman dari situs jaringan anda -- katakan, "
"\"/polls/34/\", Django akan memuat modul Python ``mysite.urls`` karena itu "
"ditunjuk dengan pengaturan :setting:`ROOT_URLCONF`. Itu menemukan variabel "
"bernama ``urlpatterns`` dan melintasi pola dalam urutan. Setelah menemukan "
"kecocokan pada ``'polls/'``, itu memotong teks pencocokan (``'polls/'``) dan "
"mengirim teks sisa -- ``\"34/\"`` -- ke URLconf 'polls.urls' untuk "
"pengolahan lebih lanjut. Disana itu cocok ``'<int:question_id>/'``, "
"menghasilkan dalam sebuah panggilan ke tampilan ``detail()`` seperti itu::"

msgid ""
"The ``question_id=34`` part comes from ``<int:question_id>``. Using angle "
"brackets \"captures\" part of the URL and sends it as a keyword argument to "
"the view function. The ``question_id`` part of the string defines the name "
"that will be used to identify the matched pattern, and the ``int`` part is a "
"converter that determines what patterns should match this part of the URL "
"path. The colon (``:``) separates the converter and pattern name."
msgstr ""
"Bagian ``question_id=34`` datang dari ``<int:question_id>``. Menggunakan "
"kurung sudut \"menangkap\" bagian dari URL dan mengirimnya sebagai argumen "
"kata kunci ke fungsi tampilan. Bagian``question_id`` dari string menentukan "
"nama yang akan digunakan untuk mencirikan pola cocok, dan bagian ``int`` "
"adalah merubah yang menentukan pola apa yang harus cocok pada bagian ini "
"dari jalur URL. Titik dua (``:``) memisahkan perubah dan pola nama."

msgid "Write views that actually do something"
msgstr "Tulis tampilan yang sebenarnya melakukan sesuatu"

msgid ""
"Each view is responsible for doing one of two things: returning an :class:"
"`~django.http.HttpResponse` object containing the content for the requested "
"page, or raising an exception such as :exc:`~django.http.Http404`. The rest "
"is up to you."
msgstr ""
"Setiap tampilan bertanggung jawab untuk melakukan satu dari dua hal: "
"mengembalikan sebuah obyek :class:`~django.http.HttpResponse` mengandung isi "
"untuk halaman diminta, atau menimbulkan sebuah pengecualian seperti :exc:"
"`~django.http.Http404`. Sisanya terserah anda."

msgid ""
"Your view can read records from a database, or not. It can use a template "
"system such as Django's -- or a third-party Python template system -- or "
"not. It can generate a PDF file, output XML, create a ZIP file on the fly, "
"anything you want, using whatever Python libraries you want."
msgstr ""
"Tampilan anda dapat membaca rekaman dari basisdata, atau tidak. Dia dapat "
"menggunakan cetakan sistem seperti DJango -- atau sistem cetakan Phyton "
"pihak-ketiga -- atau tidak. Dia dapat membangkitkan berkas PDF, mengeluarkan "
"XML, membuat berkas ZIP dengan cepat, apapun anda inginkan, menggunakan "
"pustaka Phyton apapun anda inginkan."

msgid ""
"All Django wants is that :class:`~django.http.HttpResponse`. Or an exception."
msgstr ""
"Semua Django inginkan adalah :class:`~django.http.HttpResponse`. Atau sebuah "
"pengecualian."

msgid ""
"Because it's convenient, let's use Django's own database API, which we "
"covered in :doc:`Tutorial 2 </intro/tutorial02>`. Here's one stab at a new "
"``index()`` view, which displays the latest 5 poll questions in the system, "
"separated by commas, according to publication date:"
msgstr ""
"Karena sangat nyaman, mari kita menggunakan API basisdata Django sendiri, "
"yang akan melingkupi di :doc:`Tutorial 2 </intro/tutorial02>`. Ini satu "
"tikaman pada tampilan ``index()`` baru, yang menampilka pertanyaan jejak "
"pendapat 5 terakhir di sistem, dipisahkan oleh koma, menurut tanggal "
"penerbitan:"

msgid ""
"There's a problem here, though: the page's design is hard-coded in the view. "
"If you want to change the way the page looks, you'll have to edit this "
"Python code. So let's use Django's template system to separate the design "
"from Python by creating a template that the view can use."
msgstr ""
"Tidak ada masalah disini, meskipun: rancangan halaman adalah kode-keras di "
"tampilan. Jika anda ingin merubah cara tampilan halaman, anda harus "
"menyunting kode Phyton ini. Jadi mari kita menggunakan sistem cetakan Django "
"untuk memisahkan rancangan dari Phyton dengan membuat cetakan yang tampilan "
"dapat digunakan."

msgid ""
"First, create a directory called ``templates`` in your ``polls`` directory. "
"Django will look for templates in there."
msgstr ""
"Pertama, buat direktori disebut ``templates`` di direktori``polls``. Django "
"akan mencari cetakan disana. "

msgid ""
"Your project's :setting:`TEMPLATES` setting describes how Django will load "
"and render templates. The default settings file configures a "
"``DjangoTemplates`` backend whose :setting:`APP_DIRS <TEMPLATES-APP_DIRS>` "
"option is set to ``True``. By convention ``DjangoTemplates`` looks for a "
"\"templates\" subdirectory in each of the :setting:`INSTALLED_APPS`."
msgstr ""
"Pengaturan :setting:`TEMPLATES` proyek anda menggambarkan bagaimana Django "
"akan memuat dan membuat halaman. Pengaturan awal berkas mengkonfigurasikan "
"backend ``DjangoTemplates`` yang pilihan :setting:`APP_DIRS <TEMPLATES-"
"APP_DIRS>` adalah disetel ke ``True``. Berdasarkan kaidah "
"``DjangoTemplates`` mencari untuk subdirektori :cetakan\" dalam setiap :"
"setting:`INSTALLED_APPS`."

msgid ""
"Within the ``templates`` directory you have just created, create another "
"directory called ``polls``, and within that create a file called ``index."
"html``. In other words, your template should be at ``polls/templates/polls/"
"index.html``. Because of how the ``app_directories`` template loader works "
"as described above, you can refer to this template within Django as ``polls/"
"index.html``."
msgstr ""
"Dalam direktori ``templates`` anda telah buat, buat direktori lain disebut "
"``polls``, dan didalamnya buat sebuah berkas dipanggil ``index.html``. "
"Dengan kata lain, cetakan anda harus di ``polls/templates/polls/index."
"html``. Karena bagaimana pemuat cetakan ``app_directories`` bekerja seperti "
"digambarkan diatas, anda dapat mengacu pada cetakan ini dalam Django sebagai "
"``polls/index.html``."

msgid "Template namespacing"
msgstr "Namespacing cetakan"

msgid ""
"Now we *might* be able to get away with putting our templates directly in "
"``polls/templates`` (rather than creating another ``polls`` subdirectory), "
"but it would actually be a bad idea. Django will choose the first template "
"it finds whose name matches, and if you had a template with the same name in "
"a *different* application, Django would be unable to distinguish between "
"them. We need to be able to point Django at the right one, and the best way "
"to ensure this is by *namespacing* them. That is, by putting those templates "
"inside *another* directory named for the application itself."
msgstr ""
"Sekarang kami *mungkin* dapat lolos dengan menaruh cetakan kami secara "
"langsung dalam ``polls/templates`` (daripada membuat subdirektori ``polls`` "
"lain). tetapi itu sebenarnya ide buruk. Django akan memilih cetakan pertama "
"dia temukan yang namanya cocok, dan jika anda memiliki cetakan dengan nama "
"sana dalam aplikasi *berbeda*, Django tidak dapat membedakan mereka. Kami "
"butuh dapat menunjuk Django pada satuyang benar, dan cara terbaik adalah "
"memastikan ini dengan *namespace* merena. Yaitu, dengan menaruh cetakan "
"tersebut didalam direktori *lain* bernama aplikasi itu sendiri."

msgid "Put the following code in that template:"
msgstr "Taruh kode berikut di cetakan itu:"

msgid "``polls/templates/polls/index.html``"
msgstr ""

msgid ""
"To make the tutorial shorter, all template examples use incomplete HTML. In "
"your own projects you should use `complete HTML documents`__."
msgstr ""
"Untuk membuat tutorial lebih pendek, semua contoh cetakan menggunakan HTML "
"tidak lengkap. Dalam proyek anda sendiri anda harus menggunakan `complete "
"HTML documents`__. "

msgid ""
"Now let's update our ``index`` view in ``polls/views.py`` to use the "
"template:"
msgstr ""
"Sekarang mari kita perbaharui tampilan ``index`` di ``polls/views.py`` untuk "
"menggunakan cetakan:"

msgid ""
"That code loads the template called  ``polls/index.html`` and passes it a "
"context. The context is a dictionary mapping template variable names to "
"Python objects."
msgstr ""
"Kode memuat cetakan disebut ``polls/index.html`` dan melewatkannya ke "
"konteks. Konteks adalah kamus variabel cetakan pemetaan dinamai untuk obyek "
"Phyton."

msgid ""
"Load the page by pointing your browser at \"/polls/\", and you should see a "
"bulleted-list containing the \"What's up\" question from :doc:`Tutorial 2 </"
"intro/tutorial02>`. The link points to the question's detail page."
msgstr ""
"Muat halaman dengan menunjuk perambah anda pada \"/polls/\", dan anda akan "
"melihat daftar-bullet mengandung pertanyaan \"Ada apa\" dari :doc:`Tutorial "
"2 </intro/tutorial02>`. Tautan menunjuk ke halaman rincian pertanyaan."

msgid "A shortcut: :func:`~django.shortcuts.render`"
msgstr "Jalan pintas: :func:`~django.shortcuts.render`"

msgid ""
"It's a very common idiom to load a template, fill a context and return an :"
"class:`~django.http.HttpResponse` object with the result of the rendered "
"template. Django provides a shortcut. Here's the full ``index()`` view, "
"rewritten:"
msgstr ""
"Itu adalah dialek umum untuk memuat cetakan, isi konteks dan mengembalikan "
"sebuah obyek :class:`~django.http.HttpResponse` dengan hasil dari cetakan "
"dibuat. Django menyediakan jalan pintas. Disini tampilan ``index()`` penuh, "
"ditulis kembali:"

msgid ""
"Note that once we've done this in all these views, we no longer need to "
"import :mod:`~django.template.loader` and :class:`~django.http.HttpResponse` "
"(you'll want to keep ``HttpResponse`` if you still have the stub methods for "
"``detail``, ``results``, and ``vote``)."
msgstr ""
"Catat bahwa sekali kami telah selesaikan ini di semua tampilan ini, kami "
"tidak lagi butuh mengimpor :mod:`~django.template.loader` dan :class:"
"`~django.http.HttpResponse` (anda akan ingin menjaga ``HttpResponse`` jika "
"anda masih mempunyai potongan cara untuk ``detail``, ``results``, dan "
"``vote``)."

msgid ""
"The :func:`~django.shortcuts.render` function takes the request object as "
"its first argument, a template name as its second argument and a dictionary "
"as its optional third argument. It returns an :class:`~django.http."
"HttpResponse` object of the given template rendered with the given context."
msgstr ""
"Fungsi :func:`~django.shortcuts.render` mengambil permintaan obyek sebagai "
"argumen pertamanya, nama cetakan sebagai argumen keduanya dan kamus sebagai "
"pilihan argumen ketiganya. Dia mengembalikan sebuah obyek :class:`~django."
"http.HttpResponse` dari cetakan diberikan dibangun dengan konteks yang "
"diberikan."

msgid "Raising a 404 error"
msgstr "Menaikkan kesalahan 404"

msgid ""
"Now, let's tackle the question detail view -- the page that displays the "
"question text for a given poll. Here's the view:"
msgstr ""
"Sekarang, mari kita mengerjakan tampilan rincian pertanyaan -- halaman yang "
"menampilkan teks pertanyaan untuk jejak pertanyaan yang diberikan. Inilah "
"tampilan:"

msgid ""
"The new concept here: The view raises the :exc:`~django.http.Http404` "
"exception if a question with the requested ID doesn't exist."
msgstr ""
"Konsep baru disini: Tapilan memunculkan pengecualian :exc:`~django.http."
"Http404` jika sebuah pertanyaan dengan ID diminta tidak ada."

msgid ""
"We'll discuss what you could put in that ``polls/detail.html`` template a "
"bit later, but if you'd like to quickly get the above example working, a "
"file containing just:"
msgstr ""
"Kami akan berunding apa anda dapat taruh di cetakan ``polls/detail.html`` "
"itu kemudian, tetapi jika anda suka mendapatkan cepat contoh diatas bekerja, "
"sebuah berkas mengandung hanya:"

msgid "``polls/templates/polls/detail.html``"
msgstr ""

msgid "will get you started for now."
msgstr "akan membantu anda mulai untuk sekarang."

msgid "A shortcut: :func:`~django.shortcuts.get_object_or_404`"
msgstr "Jalan pintas: :func:`~django.shortcuts.get_object_or_404`"

msgid ""
"It's a very common idiom to use :meth:`~django.db.models.query.QuerySet.get` "
"and raise :exc:`~django.http.Http404` if the object doesn't exist. Django "
"provides a shortcut. Here's the ``detail()`` view, rewritten:"
msgstr ""
"Adalah dialek umum untuk menggunakan :meth:`~django.db.models.query.QuerySet."
"get` dan menimbulkan :exc:`~django.http.Http404` jika obyek tidak ada. "
"Django menyediakan jalan pintas. Ini tampilan `detail()``, ditulis kembali:"

msgid ""
"The :func:`~django.shortcuts.get_object_or_404` function takes a Django "
"model as its first argument and an arbitrary number of keyword arguments, "
"which it passes to the :meth:`~django.db.models.query.QuerySet.get` function "
"of the model's manager. It raises :exc:`~django.http.Http404` if the object "
"doesn't exist."
msgstr ""
"Fungsi :func:`~django.shortcuts.get_object_or_404` mengambil model Django "
"sebagai argumen pertamanya dan angka sewenang-wenang dari kata kunci "
"argumen, yang dia melalui fungsi :meth:`~django.db.models.query.QuerySet."
"get` dari pengelola model. Dia menimbulkan :exc:`~django.http.Http404` jika "
"obyek tidak ada."

msgid ""
"Why do we use a helper function :func:`~django.shortcuts.get_object_or_404` "
"instead of automatically catching the :exc:`~django.core.exceptions."
"ObjectDoesNotExist` exceptions at a higher level, or having the model API "
"raise :exc:`~django.http.Http404` instead of :exc:`~django.core.exceptions."
"ObjectDoesNotExist`?"
msgstr ""
"Kenapa kami menggunakan fungsi pembantu :func:`~django.shortcuts."
"get_object_or_404` daripada otomatis menangkap pengecualian :exc:`~django."
"core.exceptions.ObjectDoesNotExist` pada tingkatan lebih tinggi, atau "
"mempunyai API model menimbulkan :exc:`~django.http.Http404` daripada :exc:"
"`~django.core.exceptions.ObjectDoesNotExist`?"

msgid ""
"Because that would couple the model layer to the view layer. One of the "
"foremost design goals of Django is to maintain loose coupling. Some "
"controlled coupling is introduced in the :mod:`django.shortcuts` module."
msgstr ""
"Karena itu akan memasangkan lapisan model ke lapisan tampilan. Satu dari "
"terutama sasaran rancangan dari Django adalah merawat sambungan longgar. "
"Beberapa sambungan terkendali diperkenalkan di modul :mod:`django.shortcuts`."

msgid ""
"There's also a :func:`~django.shortcuts.get_list_or_404` function, which "
"works just as :func:`~django.shortcuts.get_object_or_404` -- except using :"
"meth:`~django.db.models.query.QuerySet.filter` instead of :meth:`~django.db."
"models.query.QuerySet.get`. It raises :exc:`~django.http.Http404` if the "
"list is empty."
msgstr ""
"Terdapat juga sebuah fungsi :func:`~django.shortcuts.get_list_or_404`, yang "
"bekerja hanya sebagai :func:`~django.shortcuts.get_object_or_404` -- kecuali "
"menggunakan :meth:`~django.db.models.query.QuerySet.filter` daripada :meth:"
"`~django.db.models.query.QuerySet.get`. Itu memunculkan :exc:`~django.http."
"Http404` jika daftar kosong."

msgid "Use the template system"
msgstr "Gunakan sistem cetakan"

msgid ""
"Back to the ``detail()`` view for our poll application. Given the context "
"variable ``question``, here's what the ``polls/detail.html`` template might "
"look like:"
msgstr ""
"Kembali ke tampilan ``detail()`` untuk aplikasi jejak pendapat kami. "
"Diberikan variabel konteks ``question``, disini adalah apa cetakan ``polls/"
"detail.html`` mungkin kelihatan seperti:"

msgid ""
"The template system uses dot-lookup syntax to access variable attributes. In "
"the example of ``{{ question.question_text }}``, first Django does a "
"dictionary lookup on the object ``question``. Failing that, it tries an "
"attribute lookup -- which works, in this case. If attribute lookup had "
"failed, it would've tried a list-index lookup."
msgstr ""
"Sistem cetakan menggunakan sintaks dot-lookup untuk mengakses atribut "
"variabel. Di contoh dari ``{{ question.question_text }}``, pertama Django "
"melakukan lookup perkamusan pada obyek ``question``. Kegagalan itu, dia "
"mencoba sebuah atribut lookup -- yang bekerja, di kasus ini. Jika atribut "
"lookup telah gagal, dia akan mencoba list-index lookup."

msgid ""
"Method-calling happens in the :ttag:`{% for %}<for>` loop: ``question."
"choice_set.all`` is interpreted as the Python code ``question.choice_set."
"all()``, which returns an iterable of ``Choice`` objects and is suitable for "
"use in the :ttag:`{% for %}<for>` tag."
msgstr ""
"Pemanggilan-cara terjadi di :ttag:`{% for %}<for>` loop: ``question."
"choice_set.all`` adalah ditafsirkan sebagai kode Phyton ``question."
"choice_set.all()``, yang mengembalikan berulang obyek ``Choice`` dan cocok "
"untuk digunakan di etiket :ttag:`{% for %}<for>`."

msgid ""
"See the :doc:`template guide </topics/templates>` for more about templates."
msgstr ""
"Lihat :doc:`panduan cetakan </topics/templates>` untuk lebih tentang cetakan."

msgid "Removing hardcoded URLs in templates"
msgstr "Memindahkan URL kode keras di cetakan"

msgid ""
"Remember, when we wrote the link to a question in the ``polls/index.html`` "
"template, the link was partially hardcoded like this:"
msgstr ""
"Ingat, ketika kami menulis tautan ke pertanyaan di cetakan ``polls/index."
"html``, tautan sebagian dikodekan keras seperti ini:"

msgid ""
"The problem with this hardcoded, tightly-coupled approach is that it becomes "
"challenging to change URLs on projects with a lot of templates. However, "
"since you defined the name argument in the :func:`~django.urls.path` "
"functions in the ``polls.urls`` module, you can remove a reliance on "
"specific URL paths defined in your url configurations by using the ``{% url "
"%}`` template tag:"
msgstr ""
"Masalah dengan kodekeras ini, pendekatan erat adalah bahwa itu menjadi "
"menantang untuk merubah URL pada proyek dengan banyak cetakan. Bagaimanapun, "
"sejak anda menentukan argumen nama dalam fungsi-fungsi :func:`~django.urls."
"path` dalam modul ``polls.urls``, anda dapat memindahkan kepercayaan pada "
"jalur URL khusus ditentukan dalam konfigurasi url anda dengan menggunakan "
"etiket cetakan ``{% url %}``."

msgid ""
"The way this works is by looking up the URL definition as specified in the "
"``polls.urls`` module. You can see exactly where the URL name of 'detail' is "
"defined below::"
msgstr ""
"Cara ini bekerja adalah dengan mencari pengertian URL seperti yang "
"ditentukan di modul ``polls.urls``. Anda dapat melihat sebenarnya dimana "
"nama URL dari 'rincian' ditentukan dibawah::"

msgid ""
"If you want to change the URL of the polls detail view to something else, "
"perhaps to something like ``polls/specifics/12/`` instead of doing it in the "
"template (or templates) you would change it in ``polls/urls.py``::"
msgstr ""
"Jika anda ingin merubah URL dari tampilan rinci jejak pendapat ke sesuatu "
"lain, mungkin ke sesuatu seperti ``polls/specifics/12/`` dibandingkan "
"melakukannya di cetakan (atau cetakan-cetakan) anda akan merubahnya di "
"``polls/urls.py``::"

msgid "Namespacing URL names"
msgstr "Nama URL namespacing"

msgid ""
"The tutorial project has just one app, ``polls``. In real Django projects, "
"there might be five, ten, twenty apps or more. How does Django differentiate "
"the URL names between them? For example, the ``polls`` app has a ``detail`` "
"view, and so might an app on the same project that is for a blog. How does "
"one make it so that Django knows which app view to create for a url when "
"using the ``{% url %}`` template tag?"
msgstr ""
"Proyek tutorial hanya punya satu aplikasi, ``polls``. Di proyek Django "
"nyata, mungkin ada lima, sepuluh, dua puluh aplikasi atau lebih. Bagaimana "
"Django membedakan nama URL diantara mereka? Sebagai contoh, aplikasi "
"``polls`` mempunyai tampilan ``detail``, dan mungkin sebuah aplikasi di "
"proyek sama yaitu untuk sebuah blog. Bagaimana satu membuatnya sehingga "
"Django mengetahui tampilan aplikasi mana untuk membuat untuk sebuah url "
"ketika menggunakan etiket cetakan ``{% url %}``?"

msgid ""
"The answer is to add namespaces to your  URLconf. In the ``polls/urls.py`` "
"file, go ahead and add an ``app_name`` to set the application namespace:"
msgstr ""
"Jawabannya adalah menambahkan namespace ke URLconf anda. Di berkas ``polls/"
"urls.py``, lanjutkan dan tambah ``app_name`` untuk mengatur namespace "
"aplikasi:"

msgid "Now change your ``polls/index.html`` template from:"
msgstr "Sekarang rubah cetakan  ``polls/index.html`` anda dari:"

msgid "to point at the namespaced detail view:"
msgstr "untuk menunjuk tampilan rincian namespace:"

msgid ""
"When you're comfortable with writing views, read :doc:`part 4 of this "
"tutorial </intro/tutorial04>` to learn the basics about form processing and "
"generic views."
msgstr ""
"Ketika anda nyaman dengan menulis tampilan, baca :doc:`part 4 of this "
"tutorial </intro/tutorial04>` untuk mempelajari dasar tentang pengolahan "
"formulir dan tampilan umum."

msgid "Writing your first Django app, part 4"
msgstr "Menulis aplikasi Django pertama anda, bagian 4"

msgid ""
"This tutorial begins where :doc:`Tutorial 3 </intro/tutorial03>` left off. "
"We're continuing the web-poll application and will focus on form processing "
"and cutting down our code."
msgstr ""
"Tutorial ini memulai dimana :doc:`Tutorial 3 </intro/tutorial03>` "
"ditinggalkan. Kami sedang melanjutkan aplikasi poling jaringan dan akan "
"fokus pada pengolahan formulit dan memotong kode kami."

msgid "Write a minimal form"
msgstr "Tulis sebuah formulir minimal"

msgid ""
"Let's update our poll detail template (\"polls/detail.html\") from the last "
"tutorial, so that the template contains an HTML ``<form>`` element:"
msgstr ""
"Mari kita memperbaharui cetakan rincian jejak pendapat (\"polls/detail.html"
"\") dari tutorial terakhir, sehingga cetakan mengandung sebuah unsur "
"``<form>`` HTML:"

msgid "A quick rundown:"
msgstr "Laporan cepat :"

msgid ""
"The above template displays a radio button for each question choice. The "
"``value`` of each radio button is the associated question choice's ID. The "
"``name`` of each radio button is ``\"choice\"``. That means, when somebody "
"selects one of the radio buttons and submits the form, it'll send the POST "
"data ``choice=#`` where # is the ID of the selected choice. This is the "
"basic concept of HTML forms."
msgstr ""
"Cetakan diatas menampilkan tombol radio untuk setiap pilihan pertanyaan. "
"``nilai`` dari setiap tombol adalah ID pilihan pertanyaan dikaitkan. "
"``name`` dari setiap tombol radio adalah ``\"pilihan\"``. itu berarti, "
"ketika seseorang memilih satu dari tombol radio dan mengajukan formulir, itu "
"akan mengirim data POST ``choice=#`` dimana # adalah ID dari pilihan "
"terpilih. Ini adalah konsep dasar dari formulir HTML."

msgid ""
"We set the form's ``action`` to ``{% url 'polls:vote' question.id %}``, and "
"we set ``method=\"post\"``. Using ``method=\"post\"`` (as opposed to "
"``method=\"get\"``) is very important, because the act of submitting this "
"form will alter data server-side. Whenever you create a form that alters "
"data server-side, use ``method=\"post\"``. This tip isn't specific to "
"Django; it's good web development practice in general."
msgstr ""
"Kami mensetel ``action`` formulir menjadi ``{% url 'polls:vote' question.id "
"%}``, dan kami mensetel ``method=\"post\"``. Menggunakan ``method=\"post\"`` "
"(sebagai lawan ``method=\"get\"``) adalah sangat penting, karena tindakan "
"mengajukan formulir ini akan merubah data sisi-peladen. Kapanpun anda "
"membuat sebuah formulir yang merubah data sisi-peladen, gunakan ``method="
"\"post\"``. Saran ini tidak khusus pada Django; itu adalah praktik "
"pengembangan jaringan baik secara umum."

msgid ""
"``forloop.counter`` indicates how many times the :ttag:`for` tag has gone "
"through its loop"
msgstr ""
"``forloop.counter`` mengindikasikan seberapa kali the :ttag:`untuk` etiket "
"telah melalui putarannya"

msgid ""
"Since we're creating a POST form (which can have the effect of modifying "
"data), we need to worry about Cross Site Request Forgeries. Thankfully, you "
"don't have to worry too hard, because Django comes with a helpful system for "
"protecting against it. In short, all POST forms that are targeted at "
"internal URLs should use the :ttag:`{% csrf_token %}<csrf_token>` template "
"tag."
msgstr ""
"Sejak kami membuat formulir POST (yang dapat memiliki pengaruh dari merubah "
"data), kami perlu khawatir mengenai Cross Site Request Forgeries. Untungnya, "
"anda tidak perlu khawatir terlalu keras, karena Django datang dengan sistem "
"sangat membantu untuk perlindungan terhadapnya. Pendeknya, semua formulir "
"POST yang menyasarkan pada URL dalam harus menggunakan etiket cetakan :ttag:"
"`{% csrf_token %}<csrf_token>`."

msgid ""
"Now, let's create a Django view that handles the submitted data and does "
"something with it. Remember, in :doc:`Tutorial 3 </intro/tutorial03>`, we "
"created a URLconf for the polls application that includes this line:"
msgstr ""
"Sekarang, mari kita membuat tampilan Django yang menangani data diajukan dan "
"melakukan sesuatu dengannya. Ingat, di :doc:`Tutorial 3 </intro/"
"tutorial03>`, kami membuat URLconf untuk aplikasi jejak pendapat yang "
"menyertakan baris ini:"

msgid ""
"We also created a dummy implementation of the ``vote()`` function. Let's "
"create a real version. Add the following to ``polls/views.py``:"
msgstr ""
"Kami juga membuat penerapan tiruan dari fungsi ``vote()``. mari kita membuat "
"versi sebenarnya. Tambah berikut ke ``polls/views.py``:"

msgid ""
"This code includes a few things we haven't covered yet in this tutorial:"
msgstr "Kode ini menyertakan beberapa hal kami belum tangani di tutorial ini:"

msgid ""
":attr:`request.POST <django.http.HttpRequest.POST>` is a dictionary-like "
"object that lets you access submitted data by key name. In this case, "
"``request.POST['choice']`` returns the ID of the selected choice, as a "
"string. :attr:`request.POST <django.http.HttpRequest.POST>` values are "
"always strings."
msgstr ""
":attr:`request.POST <django.http.HttpRequest.POST>` adalah obyek seperti-"
"kamus yang membiarkan anda akses data diajukan oleh nama kunci. Di kasus "
"ini, ``request.POST['choice']`` mengembalikan ID dari pilihan terpilih, "
"sebagai string. Nilai :attr:`request.POST <django.http.HttpRequest.POST>` "
"selalu string."

msgid ""
"Note that Django also provides :attr:`request.GET <django.http.HttpRequest."
"GET>` for accessing GET data in the same way -- but we're explicitly using :"
"attr:`request.POST <django.http.HttpRequest.POST>` in our code, to ensure "
"that data is only altered via a POST call."
msgstr ""
"Catat bahwa Django juga menyediakan :attr:`request.GET <django.http."
"HttpRequest.GET>` untuk mengakses data GET di cara sama -- tetapi kami "
"eksplisit menggunakan :attr:`request.POST <django.http.HttpRequest.POST>` di "
"kode kami, untuk memastikan bahwa data hanya diubah melalui panggilan POST."

msgid ""
"``request.POST['choice']`` will raise :exc:`KeyError` if ``choice`` wasn't "
"provided in POST data. The above code checks for :exc:`KeyError` and "
"redisplays the question form with an error message if ``choice`` isn't given."
msgstr ""
"``request.POST['choice']`` akan menaikkan :exc:`KeyError` jika ``pilihan`` "
"tidak disediakan di data POST. Kode diatas memeriksa untuk :exc:`KeyError` "
"dan menampilkan kembali formulir pertanyaan dengan pesan kesalahan jika "
"``pilihan`` tidak diberikan."

msgid ""
"After incrementing the choice count, the code returns an :class:`~django."
"http.HttpResponseRedirect` rather than a normal :class:`~django.http."
"HttpResponse`. :class:`~django.http.HttpResponseRedirect` takes a single "
"argument: the URL to which the user will be redirected (see the following "
"point for how we construct the URL in this case)."
msgstr ""
"Setelah menaikkan jumlah pilihan, kode mengembalikan sebuah :class:`~django."
"http.HttpResponseRedirect` daripada :class:`~django.http.HttpResponse` "
"biasa. :class:`~django.http.HttpResponseRedirect` mengambil argumen tunggal: "
"URL dimana pengguna akan dialihkan (lihat titik berikut untuk bagaimana "
"membangun URL di kasus ini)."

msgid ""
"As the Python comment above points out, you should always return an :class:"
"`~django.http.HttpResponseRedirect` after successfully dealing with POST "
"data. This tip isn't specific to Django; it's good web development practice "
"in general."
msgstr ""
"Seperti ditunjukkan komentar Python diatas, aanda harus selalu "
"mengembalikan :class:`~django.http.HttpResponseRedirect` setelah berhasil "
"berurusan dengan data POST. Saran ini tidak khusus pada Django; itu adalah "
"praktik pengembangan jaringan bagus secara umum."

msgid ""
"We are using the :func:`~django.urls.reverse` function in the :class:"
"`~django.http.HttpResponseRedirect` constructor in this example. This "
"function helps avoid having to hardcode a URL in the view function. It is "
"given the name of the view that we want to pass control to and the variable "
"portion of the URL pattern that points to that view. In this case, using the "
"URLconf we set up in :doc:`Tutorial 3 </intro/tutorial03>`, this :func:"
"`~django.urls.reverse` call will return a string like ::"
msgstr ""
"Kami sedang menggunakan fungsi :func:`~django.urls.reverse` di pembangun :"
"class:`~django.http.HttpResponseRedirect` di contoh ini. Fungsi ini membantu "
"mengindari memiliki URL kode keras di fungsi tampilan. Itu diberikan nama "
"dari tampilan yang kami ingin melewatkan kendali ke dan bagian variabel dari "
"corak URL yang menunjuk ke tampilan itu. Dalam kasus ini, menggunakan "
"URLconf kami setel di :doc:`Tutorial 3 </intro/tutorial03>`, panggilan :func:"
"`~django.urls.reverse` ini akan mengembalikan deretan karakter seperti ::"

msgid ""
"where the ``3`` is the value of ``question.id``. This redirected URL will "
"then call the ``'results'`` view to display the final page."
msgstr ""
"dimana ``3`` adalah nilai dari ``question.id``. Ini URL dialihkan akan "
"memanggil tampilan ``'results'`` untuk menampilkan halaman akhir."

msgid ""
"As mentioned in :doc:`Tutorial 3 </intro/tutorial03>`, ``request`` is an :"
"class:`~django.http.HttpRequest` object. For more on :class:`~django.http."
"HttpRequest` objects, see the :doc:`request and response documentation </ref/"
"request-response>`."
msgstr ""
"Seperti disebutkan di :doc:`Tutorial 3 </intro/tutorial03>`, ``request`` "
"adalah sebuah obyek :class:`~django.http.HttpRequest`. Untuk lebih pada "
"obyek :class:`~django.http.HttpRequest`, lihat :doc:`permintaan dan "
"tanggapan dokumentasi </ref/request-response>`."

msgid ""
"After somebody votes in a question, the ``vote()`` view redirects to the "
"results page for the question. Let's write that view:"
msgstr ""
"Setelah seseorang memilih di pertanyaan, tampilan ``vote()`` mengalihkan ke "
"halaman hasil untuk pertanyaan. Mari kita tulis tampilan itu:"

msgid ""
"This is almost exactly the same as the ``detail()`` view from :doc:`Tutorial "
"3 </intro/tutorial03>`. The only difference is the template name. We'll fix "
"this redundancy later."
msgstr ""
"Ini hampir tepat sama seperti tampilan ``detail()`` dari :doc:`Tutorial 3 </"
"intro/tutorial03>`. Perbedaannya adalah hanya nama cetakan. Kami akan "
"memperbaiki kelebihan ini kemudian."

msgid "Now, create a ``polls/results.html`` template:"
msgstr "Sekarang, buat cetakan ``polls/result.html``:"

msgid "``polls/templates/polls/results.html``"
msgstr ""

msgid ""
"Now, go to ``/polls/1/`` in your browser and vote in the question. You "
"should see a results page that gets updated each time you vote. If you "
"submit the form without having chosen a choice, you should see the error "
"message."
msgstr ""
"Sekarang, pergi ke ``/polls/1/`` di perambah anda dan pilih di pertanyaan. "
"Anda seharusnya melihat halaman hasil yang mendapatkan pembaharuan setiap "
"waktu anda memilih. Jika anda mengajukan formulir tanpa memilih pilihan, "
"anda akan melihat pesan kesalahan."

msgid ""
"The code for our ``vote()`` view does have a small problem. It first gets "
"the ``selected_choice`` object from the database, then computes the new "
"value of ``votes``, and then saves it back to the database. If two users of "
"your website try to vote at *exactly the same time*, this might go wrong: "
"The same value, let's say 42, will be retrieved for ``votes``. Then, for "
"both users the new value of 43 is computed and saved, but 44 would be the "
"expected value."
msgstr ""
"Kode untuk tampilan ``vote()`` kami mempunyai masalah kecil. Dia pertama "
"mendapatkan obyek ``selected_choice`` dari basistada, lalu menghitung nilai "
"baru dari ``votes``, dan lalu menyimpan kembali ke basisdata. Jika dua "
"pengguna dari situs jaringan anda mencoba memilih *tepatnya waktu sama*, ini "
"mungkin menjadi salah: nilai sama, mari kita katakan 42, akan ditarik untuk "
"``votes``. Lalu, untuk kedua pengguna nilai baru dari 43 dihitung dan "
"disimpan, tetapi 44 akan menjadi nilai diharapkan."

msgid ""
"This is called a *race condition*. If you are interested, you can read :ref:"
"`avoiding-race-conditions-using-f` to learn how you can solve this issue."
msgstr ""
"Ini disebut *kondisi jarang*. Jika anda tertarik, anda dapat membaca :ref:"
"`avoiding-race-conditions-using-f` untuk mempelajari bagaimana anda dapat "
"mengatasi masalah ini."

msgid "Use generic views: Less code is better"
msgstr "Gunakan tampilan umum: Sedikit kode lebih baik"

msgid ""
"The ``detail()`` (from :doc:`Tutorial 3 </intro/tutorial03>`) and "
"``results()`` views are very short -- and, as mentioned above, redundant. "
"The ``index()`` view, which displays a list of polls, is similar."
msgstr ""
"Tampilan ``detail()`` (from :doc:`Tutorial 3 </intro/tutorial03>`) dan "
"``results()`` sangat pendek -- dand seperti disebutkan diatas, berlebih-"
"lebihan. Tampilan ``index()``, yang menampilkan daftar dari jejak pendapat, "
"adalah mirip."

msgid ""
"These views represent a common case of basic web development: getting data "
"from the database according to a parameter passed in the URL, loading a "
"template and returning the rendered template. Because this is so common, "
"Django provides a shortcut, called the \"generic views\" system."
msgstr ""
"Tampilan ini mewakili kasus umum dari pengembangan dasar jaringan: "
"mendapatkan data dari basisdata menurut sebuah parameter dilewatkan dalam "
"URL, membuat sebuah cetakan dan mengembalikan cetakan yang dibangun. Karena "
"ini sudah umum, Django menyediakan jalan pintas, disebut sistem \"generic "
"views\"."

msgid ""
"Generic views abstract common patterns to the point where you don't even "
"need to write Python code to write an app."
msgstr ""
"Tampilan umum meringkaskan corak umum ke titik dimana anda tidak butuh "
"menulis kode Phyton untuk menulis sebuah aplikasi."

msgid ""
"Let's convert our poll app to use the generic views system, so we can delete "
"a bunch of our own code. We'll have to take a few steps to make the "
"conversion. We will:"
msgstr ""
"Mari rubah aplikasi jejak pendapat kami menggunakan sistem tampilan umum, "
"sehingga kami dapat menghapus sekelompok dari kode milik kami. Kami harus "
"mengambil beberapa langkah untuk membuat perubahan. Kami akan:"

msgid "Convert the URLconf."
msgstr "Rubah URLconf."

msgid "Delete some of the old, unneeded views."
msgstr "Hapus beberapa lama, tampilan tidak dibutuhkan."

msgid "Introduce new views based on Django's generic views."
msgstr "Memperkenalkan tampilan baru berbasis pada tampilan umum Django."

msgid "Read on for details."
msgstr "Membaca untuk rinci."

msgid "Why the code-shuffle?"
msgstr "Kenapa kode dikocok?"

msgid ""
"Generally, when writing a Django app, you'll evaluate whether generic views "
"are a good fit for your problem, and you'll use them from the beginning, "
"rather than refactoring your code halfway through. But this tutorial "
"intentionally has focused on writing the views \"the hard way\" until now, "
"to focus on core concepts."
msgstr ""
"Umumnya, ketika menulis aplikasi Django, anda akan menilai apakah tampilan "
"umum cocok untuk masalah anda, dan anda akan menggunakan mereka dari mulai, "
"daripada mengurai kembali kode anda setengah jalan. Tetapi tutorial ini "
"sengaja fokus pada penulisan tampilan \"cara sulit\" sampai sekarang, untuk "
"fokus pada konsep inti."

msgid "You should know basic math before you start using a calculator."
msgstr ""
"Anda harus mengetahui matematika dasar sebelum mulai menggunakan penghitung."

msgid "Amend URLconf"
msgstr "Merubah URLconf"

msgid "First, open the ``polls/urls.py`` URLconf and change it like so:"
msgstr "Pertama, buka URLconf ``polls/urls.py`` dan rubah nya seperti itu:"

msgid ""
"Note that the name of the matched pattern in the path strings of the second "
"and third patterns has changed from ``<question_id>`` to ``<pk>``."
msgstr ""
"Catata bahwa nama dari pola tercocok dalam jalur string dari pola kedua dan "
"ketiga telah berubah dari ``<question_id>`` to ``<pk>``."

msgid "Amend views"
msgstr "Merubah tampilan"

msgid ""
"Next, we're going to remove our old ``index``, ``detail``, and ``results`` "
"views and use Django's generic views instead. To do so, open the ``polls/"
"views.py`` file and change it like so:"
msgstr ""
"Selanjutnya, kami akan memindahkan tampilan ``index``, ``detail``, dan "
"``results`` lama dan menggunakan tampilan umum Django. Untuk melakukannya, "
"buka berkas ``polls/views.py`` dan rubah seperti itu:"

msgid ""
"We're using two generic views here: :class:`~django.views.generic.list."
"ListView` and :class:`~django.views.generic.detail.DetailView`. "
"Respectively, those two views abstract the concepts of \"display a list of "
"objects\" and \"display a detail page for a particular type of object.\""
msgstr ""
"Kami sedang menggunaan dua tampilan umum disini: :class:`~django.views."
"generic.list.ListView` dan :class:`~django.views.generic.detail.DetailView`. "
"Masing-masing, kedua tampilan tersebut meringkaskan \"menampilkan daftar "
"obyek\" dan \"menampilan halaman rinci untuk jenis khusus dari obyek.\""

msgid ""
"Each generic view needs to know what model it will be acting upon. This is "
"provided using the ``model`` attribute."
msgstr ""
"Setiap tampilan umum butuh diketahui model apa akan bertindak. Ini "
"disediakan menggunakan atribut ``model``."

msgid ""
"The :class:`~django.views.generic.detail.DetailView` generic view expects "
"the primary key value captured from the URL to be called ``\"pk\"``, so "
"we've changed ``question_id`` to ``pk`` for the generic views."
msgstr ""
"Tampilan umum :class:`~django.views.generic.detail.DetailView` mengharapkan "
"nilai kunci utama ditangkap dari URL untuk dipanggil ``\"pk\"``, jadi kami "
"telah merubah ``question_id`` menjadi ``pk`` untuk tampilan umum."

msgid ""
"By default, the :class:`~django.views.generic.detail.DetailView` generic "
"view uses a template called ``<app name>/<model name>_detail.html``. In our "
"case, it would use the template ``\"polls/question_detail.html\"``. The "
"``template_name`` attribute is used to tell Django to use a specific "
"template name instead of the autogenerated default template name. We also "
"specify the ``template_name`` for the ``results`` list view -- this ensures "
"that the results view and the detail view have a different appearance when "
"rendered, even though they're both a :class:`~django.views.generic.detail."
"DetailView` behind the scenes."
msgstr ""
"Secara awal, tampilan umum :class:`~django.views.generic.detail.DetailView` "
"menggunakan cetakan dipanggil ``<app name>/<model name>_detail.html``. Di "
"kasus kami, dia akan menggunakan cetakan ``\"polls/question_detail.html\"``. "
"Atribut ``template_name`` digunakan untuk memberitahu Django untuk "
"menggunakan cetakan spesifik dibandingkan dari nama cetakan awal otomatis "
"dibangkitkan. Kami juga menentukan ``template_name`` untuk tampilan daftar "
"``results`` -- ini memastikan bahwa tampilan hasil dan tampilan rinci "
"mempunyai penampilan ebrbeda ketika dibentuk, bahkan mereka berdua :class:"
"`~django.views.generic.detail.DetailView` dibelakang layar."

msgid ""
"Similarly, the :class:`~django.views.generic.list.ListView` generic view "
"uses a default template called ``<app name>/<model name>_list.html``; we use "
"``template_name`` to tell :class:`~django.views.generic.list.ListView` to "
"use our existing ``\"polls/index.html\"`` template."
msgstr ""
"Demikian pula, tampilan umum :class:`~django.views.generic.list.ListView` "
"menggunakan cetakan awal disebut ``<app name>/<model name>_list.html``; kami "
"menggunakan ``template_name`` untuk memberitahu :class:`~django.views."
"generic.list.ListView` untuk menggunakan cetakan ``\"polls/index.html\"`` "
"kami yang ada."

msgid ""
"In previous parts of the tutorial, the templates have been provided with a "
"context that contains the ``question`` and ``latest_question_list`` context "
"variables. For ``DetailView`` the ``question`` variable is provided "
"automatically -- since we're using a Django model (``Question``), Django is "
"able to determine an appropriate name for the context variable. However, for "
"ListView, the automatically generated context variable is ``question_list``. "
"To override this we provide the ``context_object_name`` attribute, "
"specifying that we want to use ``latest_question_list`` instead. As an "
"alternative approach, you could change your templates to match the new "
"default context variables -- but it's a lot easier to tell Django to use the "
"variable you want."
msgstr ""
"Dalam bagian sebelumnya dari tutorial, cetakan telah disediakan dengan "
"sebuah konteks yang mengandung variabel konteks ``question`` dan "
"``latest_question_list``. Untuk ``DetailView`` variabel ``question`` adalah "
"disediakan otomatis -- sejak kami menggunakan model Django (``Question``), "
"Django dapat menentukan sebuah nama sesuai untuk variabel konteks. "
"Bagaimanapun untuk ListView, variabel konteks dibangkitkan otomatos adalah "
"``question_list``. Untuk menimpa ini kami menyediakan atribut "
"``context_object_name``, menentukan apa yang kita ingin gunakan "
"``latest_question_list``. Sebagai sebuah pendekatan alternatif, anda dapat "
"merubah cetakan anda untuk mencocokkan dengan variabel konteks awalan baru "
"-- tetapi itu lebih mudah memberitahu Django untuk menggunakan varaibel anda "
"inginkan."

msgid "Run the server, and use your new polling app based on generic views."
msgstr ""
"Jalankan peladen, dan gunakan aplikasi jejak pendapat baru anda berdasarkan "
"tampilan umum."

msgid ""
"For full details on generic views, see the :doc:`generic views documentation "
"</topics/class-based-views/index>`."
msgstr ""
"Untuk rincian penuh pada tampilan umum, lihat :doc:`dokumentasi tampilan "
"umum </topics/class-based-views/index>`."

msgid ""
"When you're comfortable with forms and generic views, read :doc:`part 5 of "
"this tutorial</intro/tutorial05>` to learn about testing our polls app."
msgstr ""
"Ketika anda nyaman dengan formulir dan tampilan umum, baca :doc:`bagian 5 "
"dari tutorial ini</intro/tutorial05>` untuk mempelajari tentang aplikasi "
"jejak pendapat kami."

msgid "Writing your first Django app, part 5"
msgstr "Menulis aplikasi Django pertama anda, bagian 5"

msgid ""
"This tutorial begins where :doc:`Tutorial 4 </intro/tutorial04>` left off. "
"We've built a web-poll application, and we'll now create some automated "
"tests for it."
msgstr ""
"Tutorial ini memulai dimana :doc:`Tutorial 4 </intro/tutorial04>` "
"ditinggalkan. Kami telah membangun aplikasi poling jaringan, dan kami akan "
"membuat beberapa pengujian otomatis untuk itu."

msgid "Introducing automated testing"
msgstr "Memperkenalkan percobaan otomatis"

msgid "What are automated tests?"
msgstr "Apakah percobaan otomatis?"

msgid "Tests are routines that check the operation of your code."
msgstr "Percobaan adalah rutin yang memeriksa tindakan dari kode anda."

msgid ""
"Testing operates at different levels. Some tests might apply to a tiny "
"detail (*does a particular model method return values as expected?*) while "
"others examine the overall operation of the software (*does a sequence of "
"user inputs on the site produce the desired result?*). That's no different "
"from the kind of testing you did earlier in :doc:`Tutorial 2 </intro/"
"tutorial02>`, using the :djadmin:`shell` to examine the behavior of a "
"method, or running the application and entering data to check how it behaves."
msgstr ""
"Percobaan beroperasi di tingkatan berbeda. Beberapa percobaan mungkin "
"berlaku ke rincian kecil (*apakah cara model khas mengembalikan nilai sesuai "
"diharapkan?*) selama lainnya menguji operasi keseluruhan dari perangkat "
"keras (*apakah urutan dari masukan pengguna di situs menghasilkan hasil yang "
"diinginkan?*). Itu tidak berbeda dari beragam percobaan anda lakukan "
"sebelumnya di :doc:`Tutorial 2 </intro/tutorial02>`, menggunakan :djadmin:"
"`shell` untuk menguji kebiasaan cara, atau menjalankan aplikasi dan "
"memasukkan data untuk diperiksa bagaimana kebiasaannya."

msgid ""
"What's different in *automated* tests is that the testing work is done for "
"you by the system. You create a set of tests once, and then as you make "
"changes to your app, you can check that your code still works as you "
"originally intended, without having to perform time consuming manual testing."
msgstr ""
"Apa perbedaan di percobaan *otomatis* dimana percobaan bekerja selesai untuk "
"anda oleh sistem. Anda membuat kumpulan percobaan sekali, dan lalu ketika "
"anda membuat perubahan ke aplikasi anda, anda dapat memeriksa kode anda "
"masih bekerja seperti anda inginkan aslinya, tanpa harus melakukan percobaan "
"manual memakan waktu."

msgid "Why you need to create tests"
msgstr "Mengapa anda butuh membuat percobaan"

msgid "So why create tests, and why now?"
msgstr "Jadi mengapa membuat percobaan, dan jenapa sekarang?"

msgid ""
"You may feel that you have quite enough on your plate just learning Python/"
"Django, and having yet another thing to learn and do may seem overwhelming "
"and perhaps unnecessary. After all, our polls application is working quite "
"happily now; going through the trouble of creating automated tests is not "
"going to make it work any better. If creating the polls application is the "
"last bit of Django programming you will ever do, then true, you don't need "
"to know how to create automated tests. But, if that's not the case, now is "
"an excellent time to learn."
msgstr ""
"Anda mungkin merasa bahwa anda sangat cukup hanya belajar Python/Django, dan "
"tidak mempunyai hal lain untuk belajar dan melakukan nampak luar biasa dan "
"mungkin tidak perlu. Setelah semua, aplikasi jejak pendapat bekerja sangat "
"gembira sekarang; melalui masalah dari pembuatan percobaan otomatis tidak "
"akan membuatnya bekerja lebih baik. Jika membuat aplikasi jejak pendapat "
"adalah hal terakhir dari pemrograman Django anda pernah lakukan, lalu benar, "
"anda tidak butuh membuat percobaan otomatis. Tetapi, jika itu bukan "
"kasusnya, sekarang adalah waktu yang tepat untuk belajar."

msgid "Tests will save you time"
msgstr "Percobaan akan menyelematkan waktu anda"

msgid ""
"Up to a certain point, 'checking that it seems to work' will be a "
"satisfactory test. In a more sophisticated application, you might have "
"dozens of complex interactions between components."
msgstr ""
"Sampai titik tertentu, 'memeriksa itu kelihatannya bekerja' akan menjadi "
"percobaan memuaskan. Di lebih aplikasi menakjubkan, anda mungkin mempunyai "
"lusinan interaksi rumit antara komponen."

msgid ""
"A change in any of those components could have unexpected consequences on "
"the application's behavior. Checking that it still 'seems to work' could "
"mean running through your code's functionality with twenty different "
"variations of your test data to make sure you haven't broken something - not "
"a good use of your time."
msgstr ""
"Kesempatan dalam tiap komponen tersebut dapat memiliki konsekuensi tidak "
"diharapkan pada perilaku aplikasi. Memeriksa bahwa itu 'terlihat masih "
"bekerja' dapat berarti berjalan melalui kegunaan kode anda dengan dua puluh "
"ragam perbedaan dari percobaan data anda untuk memastikan ada belum memrusak "
"sesuatu - bukan penggunaan bagus dari waktu anda."

msgid ""
"That's especially true when automated tests could do this for you in "
"seconds. If something's gone wrong, tests will also assist in identifying "
"the code that's causing the unexpected behavior."
msgstr ""
"Itu terutama benar ketika percobaan otomatis dapat melakukan ini untuk anda "
"dalam hitungan detik. Jika sesuatu berjalan salah, percobaan akan juga "
"membantu mencirikan kode yang menyebabkan kebiasaan tidak diharapkan."

msgid ""
"Sometimes it may seem a chore to tear yourself away from your productive, "
"creative programming work to face the unglamorous and unexciting business of "
"writing tests, particularly when you know your code is working properly."
msgstr ""
"Terkadang dia kelihatan bertugas untuk menyobek air mata anda jauh dari "
"produktif anda, bekerja pemrograman kreatif untuk menghadapi bisnis tidak "
"menarik dan tidak menggairahkan dari percobaan penulisan terutama ketika "
"anda mengetahui kode anda bekerja dengan benar."

msgid ""
"However, the task of writing tests is a lot more fulfilling than spending "
"hours testing your application manually or trying to identify the cause of a "
"newly-introduced problem."
msgstr ""
"Bagaimanapun, tugas dari menulis percobaan adalah banyak lebih mengisi "
"daripada menghabiskan berjam-jam mencoba aplikasi anda secara manual atau "
"mencoba mencirikan penyebab dari masalah baru yang diperkenalkan."

msgid "Tests don't just identify problems, they prevent them"
msgstr "Percobaan tidak hanya mencirikan masalah, mereka mencegah masalah"

msgid ""
"It's a mistake to think of tests merely as a negative aspect of development."
msgstr ""
"Adalah sebuah kesalahan berpikir percobaan hanya aspek negatif dari "
"pengembangan."

msgid ""
"Without tests, the purpose or intended behavior of an application might be "
"rather opaque. Even when it's your own code, you will sometimes find "
"yourself poking around in it trying to find out what exactly it's doing."
msgstr ""
"Tanpa percobaan, tujuan atau kebiasaan dimaksud dari aplikasi mungkin agak "
"buram. Bahkan ketika itu kode anda sendiri, anda akan terkadang menemukan "
"diri anda mangaduk-aduknya dan mencoba menemukan apa sebenarnya yang dia "
"lakukan."

msgid ""
"Tests change that; they light up your code from the inside, and when "
"something goes wrong, they focus light on the part that has gone wrong - "
"*even if you hadn't even realized it had gone wrong*."
msgstr ""
"Percobaan merubah itu; mereka menyalakan kode anda dari dalam, dan ketika "
"sesuatu menjadi salah, mereka fokus menyalakan bagian yang berjalan salah - "
"*bahkan jika anda belum menyadarinya telah berjalan salah*."

msgid "Tests make your code more attractive"
msgstr "Percobaan membuat kode anda lebih menarik"

msgid ""
"You might have created a brilliant piece of software, but you will find that "
"many other developers will refuse to look at it because it lacks tests; "
"without tests, they won't trust it. Jacob Kaplan-Moss, one of Django's "
"original developers, says \"Code without tests is broken by design.\""
msgstr ""
"Anda mungkin telah membuat potongan perangkat keras hebat, tetapi anda akan "
"menemukan bahwa pengembang lain akan menolat melihatnya karena itu kurang "
"dicoba; tanpa dicoba, mereka tidak akan mempercayainya. Jacob Kaplan-Moss, "
"satu dari pengembang asli Django, katakan \"Kode tanpa percobaan adalah "
"rusak berdasarkan rancangan.\""

msgid ""
"That other developers want to see tests in your software before they take it "
"seriously is yet another reason for you to start writing tests."
msgstr ""
"Bahwa pengembang lain ingin melihat percobaan di perangkat lunak anda "
"sebelum mereka mengambilnya secara sungguh-sungguh adalah alasan lain untuk "
"anda untuk memulai menulis percobaan."

msgid "Tests help teams work together"
msgstr "Percobaan membantu tim bekerja bersama"

msgid ""
"The previous points are written from the point of view of a single developer "
"maintaining an application. Complex applications will be maintained by "
"teams. Tests guarantee that colleagues don't inadvertently break your code "
"(and that you don't break theirs without knowing). If you want to make a "
"living as a Django programmer, you must be good at writing tests!"
msgstr ""
"Titik sebelumnya ditulis dari sudut pandang dari pengembang tunggal merawat "
"sebuah aplikasi. Aplikasi rumit akan dirawat oleh tim. Jaminan percobaan "
"dimana rekan tidak sengaja merusak kode anda (dan bahwa anda tidak merusak "
"kode mereka tanpa diketahui). Jika anda ingin membuat hidup seperti "
"pemrogram Django, anda harus menjadi bagus pada penulisan percobaan!"

msgid "Basic testing strategies"
msgstr "Strategi percobaan dasar"

msgid "There are many ways to approach writing tests."
msgstr "Terdapat banyak cara untuk mendekatkan penulisan percobaan"

msgid ""
"Some programmers follow a discipline called \"`test-driven development`_\"; "
"they actually write their tests before they write their code. This might "
"seem counter-intuitive, but in fact it's similar to what most people will "
"often do anyway: they describe a problem, then create some code to solve it. "
"Test-driven development formalizes the problem in a Python test case."
msgstr ""
"Beberapa pemrogram mengikuti disiplin dipanggil \"`test-driven development`_"
"\"; mereka sebenarnya menulis percobaan mereka sebelum mereka menulis kode "
"mereka. Ini mungkin terlihat kontra-intuitif, tetapi kenyataannya itu mirip "
"pada apa kebanyakan orang akan sering lakukan: mereka menggambarkan masalah, "
"kemudian membuat beberapa kode untuk menyelesaikannya. Pengembangan didorong-"
"percobaan memformalkan masalah dalam kasus percobaan Python."

msgid ""
"More often, a newcomer to testing will create some code and later decide "
"that it should have some tests. Perhaps it would have been better to write "
"some tests earlier, but it's never too late to get started."
msgstr ""
"Lebih sering, pendatang baru untuk mencoba akan membuat beberapa kode dan "
"kemudan memutuskan bahwa itu harus mempunyai beberapa percobaan. Mungkin itu "
"akan lebih baik untuk menulis beberapa percobaan lebih awal, tetapi itu "
"tidak pernah terlampat untuk mulai."

msgid ""
"Sometimes it's difficult to figure out where to get started with writing "
"tests. If you have written several thousand lines of Python, choosing "
"something to test might not be easy. In such a case, it's fruitful to write "
"your first test the next time you make a change, either when you add a new "
"feature or fix a bug."
msgstr ""
"Terkadang adalah sangat sulit mencari tahu dimana untuk mulai dengan menulis "
"percobaan. Jika anda telah menulis beberapa ribu baris Phyton, memilih "
"sesuatu untuk dicoba mungkin tidak mudah. Di kasus seperti itu, adalah "
"bermanfaat untuk menulis percobaan pertama anda lain kali anda membuat "
"perubahan, salah satu anda menambahkan fitur atau memperbaiki kesalahan."

msgid "So let's do that right away."
msgstr "Jadi mari kita melakukannya segera."

msgid "Writing our first test"
msgstr "Menulis percobaan pertama kami"

msgid "We identify a bug"
msgstr "Kami mencirikan kesalahan"

msgid ""
"Fortunately, there's a little bug in the ``polls`` application for us to fix "
"right away: the ``Question.was_published_recently()`` method returns "
"``True`` if the ``Question`` was published within the last day (which is "
"correct) but also if the ``Question``’s ``pub_date`` field is in the future "
"(which certainly isn't)."
msgstr ""
"Untungnya, terdapat kesalahan sedikit di aplikasi ``polls`` untuk kami "
"perbaiki segera: cara ``Question.was_published_recently()`` mengembalikan "
"``True`` jika ``Question`` telah diterbitkan dalam hari terakhir (yang "
"benar) tetapi juga jika bidang ``pub_date`` ``Question`` di masa depan (yang "
"tentu tidak)."

msgid ""
"Confirm the bug by using the :djadmin:`shell` to check the method on a "
"question whose date lies in the future:"
msgstr ""
"Tegaskan kesalahan dengan menggunakan :djadmin:`shell` untuk memeriksa "
"metode pada sebuah pertanyaan dimana tanggal berbohong di masa datang:"

msgid "Since things in the future are not 'recent', this is clearly wrong."
msgstr ""
"Sejak hal-hal di masa depan tidak 'baru terjadi', hal ini jelaslah salah."

msgid "Create a test to expose the bug"
msgstr "Buat percobaan untuk membuka kesalahan"

msgid ""
"What we've just done in the :djadmin:`shell` to test for the problem is "
"exactly what we can do in an automated test, so let's turn that into an "
"automated test."
msgstr ""
"Apa yang kita telah lakukan di :djadmin:`shell` untuk mencoba masalah adalah "
"sebenarnya kami dapat lakukan di percobaan otomatis, jadi mari kita rubah "
"itu menjadi percobaan otomatis."

msgid ""
"A conventional place for an application's tests is in the application's "
"``tests.py`` file; the testing system will automatically find tests in any "
"file whose name begins with ``test``."
msgstr ""
"Tempat biasa untuk percobaan aplikasi adalah di berkas aplikasi ``tests."
"py``; sistem percobaan akan otomatis menemukan percobaan di berkas apapun "
"yang namanya dimulai dengan ``test``."

msgid ""
"Put the following in the ``tests.py`` file in the ``polls`` application:"
msgstr "Taruh berikut di berkas ``tests.py`` di aplikasi ``polls`` :"

msgid "``polls/tests.py``"
msgstr ""

msgid ""
"Here we have created a :class:`django.test.TestCase` subclass with a method "
"that creates a ``Question`` instance with a ``pub_date`` in the future. We "
"then check the output of ``was_published_recently()`` - which *ought* to be "
"False."
msgstr ""
"Disini kami telah membuat sebuah subkelas :class:`django.test.TestCase` "
"dengan sebuah metode yang membuat sebuah contoh ``Question`` dengan "
"``pub_date`` di masa depan. Kami kemudian memeriksa keluaran dari "
"``was_published_recently()`` - yang *mungkin* menjadi False."

msgid "Running tests"
msgstr "Menjalankan percobaan"

msgid "In the terminal, we can run our test:"
msgstr "Pada terminal, kita dapat menjalankan percobaan kita:"

msgid "and you'll see something like::"
msgstr "dan anda akan lihat sesuatu seperti::"

msgid "Different error?"
msgstr "Kesalahan berbeda?"

msgid ""
"If instead you're getting a ``NameError`` here, you may have missed a step "
"in :ref:`Part 2 <tutorial02-import-timezone>` where we added imports of "
"``datetime`` and ``timezone`` to ``polls/models.py``. Copy the imports from "
"that section, and try running your tests again."
msgstr ""
"Jika sebaliknya anda mendapatkannya ``NameError`` disini, anda mungkin "
"kehilangan langkah dalam :ref:`Part 2 <tutorial02-import-timezone>` dimana "
"kami menambahkan import dari ``datetime`` dan ``timezone`` pada ``polls/"
"models.py``. Salin import dari bagian itu, dan coba jalankan percobaan anda "
"kembali."

msgid "What happened is this:"
msgstr "Apa yang terjadi adalah ini:"

msgid "``manage.py test polls`` looked for tests in the ``polls`` application"
msgstr ""
"``manage.py test polls`` untuk melihat percobaan pada aplikasi ``polls``"

msgid "it found a subclass of the :class:`django.test.TestCase` class"
msgstr "itu menemukan subkelas dari kelas  :class:`django.test.TestCase`"

msgid "it created a special database for the purpose of testing"
msgstr "itu membuat basisdata khusus untuk tujuan percobaan"

msgid "it looked for test methods - ones whose names begin with ``test``"
msgstr "Itu mencari cara percobaan - satu yang namanya dimulai dengan ``test``"

msgid ""
"in ``test_was_published_recently_with_future_question`` it created a "
"``Question`` instance whose ``pub_date`` field is 30 days in the future"
msgstr ""
"di ``test_was_published_recently_with_future_question`` dia membuat sebuah "
"instance ``Question`` yang bidang ``pub_date`` adalah 30 hari di masa depan"

msgid ""
"... and using the ``assertIs()`` method, it discovered that its "
"``was_published_recently()`` returns ``True``, though we wanted it to return "
"``False``"
msgstr ""
"... dan menggunakan cara ``assertIs()``, itu menemukan bahwa "
"``was_published_recently()`` mengembalikan ``True``, meskipun kami "
"menginginkannya mengembalikan ``False``."

msgid ""
"The test informs us which test failed and even the line on which the failure "
"occurred."
msgstr ""
"Percobaan menginformasikan kami yang mana percobaan gagal dan bahkan baris "
"di mana kegagalan muncul."

msgid "Fixing the bug"
msgstr "Memperbaiki kesalahan"

msgid ""
"We already know what the problem is: ``Question.was_published_recently()`` "
"should return ``False`` if its ``pub_date`` is in the future. Amend the "
"method in ``models.py``, so that it will only return ``True`` if the date is "
"also in the past:"
msgstr ""
"Kami sudah mengetahui bahwa masalahnya adalah: ``Question."
"was_published_recently()`` harus mengembalikan ``False`` jika ``pub_date`` "
"nya berada di masa depan. Merubah cara di ``models.py``, sehingga dia hanya "
"mengembalikan ``True`` jika tanggal juga berada di masa lampau:"

msgid "and run the test again::"
msgstr "dan jalankan percobaan kembali::"

msgid ""
"After identifying a bug, we wrote a test that exposes it and corrected the "
"bug in the code so our test passes."
msgstr ""
"Setelah mengenali sebuah bug, kami menulis tes untuk menemukannya dan "
"memperbaiki bug yang ada di dalam kode sehingga tes yang kami buat dapat "
"berjalan lancar."

msgid ""
"Many other things might go wrong with our application in the future, but we "
"can be sure that we won't inadvertently reintroduce this bug, because "
"running the test will warn us immediately. We can consider this little "
"portion of the application pinned down safely forever."
msgstr ""
"Banyak hal lain mungkin akan berjalan salah dengan aplikasi kami dimasa akan "
"datang, tetapi kami yakin bahwa kami secara tidak sengaja memperkenalkan "
"kembali kesalahan ini, karena menjalankan percobaan akan memperingati kami "
"segera. Kami dapat membertimbangkan posi kecil ini dari aplikasi dijabarkan "
"dengan aman selamanya"

msgid "More comprehensive tests"
msgstr "Percobaan lebih luas"

msgid ""
"While we're here, we can further pin down the ``was_published_recently()`` "
"method; in fact, it would be positively embarrassing if in fixing one bug we "
"had introduced another."
msgstr ""
"Selama kami disini, kami dapat lebih jauh berpikir cara "
"``was_published_recently()``; kenyataannya, dia akan sangat memaslukan jika "
"dalam memperbaiki satu kesalahan kami telah memunculkan yang lain."

msgid ""
"Add two more test methods to the same class, to test the behavior of the "
"method more comprehensively:"
msgstr ""
"Tambah dua lagi cara percobaan ke kelas yang sama, untuk mencoba kebiasaan "
"dari cara lebih menyeluruh:"

msgid ""
"And now we have three tests that confirm that ``Question."
"was_published_recently()`` returns sensible values for past, recent, and "
"future questions."
msgstr ""
"Dan sekarang kami mempunyai tiga percobaan yang menegaskan bahwa ``Question."
"was_published_recently()`` mengembalikan nilai bijaksana untuk pertanyaan "
"masa lampau, saat ini, dan masa depan."

msgid ""
"Again, ``polls`` is a minimal application, but however complex it grows in "
"the future and whatever other code it interacts with, we now have some "
"guarantee that the method we have written tests for will behave in expected "
"ways."
msgstr ""
"Kembali, ``polls`` adalah aplikasi minimal, tetapi bagaimanapun itu rumit "
"tumbuh dimasa depan dan apapun kode lain itu berinteraksi, kami sekarang "
"memiliki beberapa jaminan bahwa metode kami memiliki tes tertulis untuk akan "
"berperilaku dengan cara yang diharapkan."

msgid "Test a view"
msgstr "Percobaan tampilan"

msgid ""
"The polls application is fairly undiscriminating: it will publish any "
"question, including ones whose ``pub_date`` field lies in the future. We "
"should improve this. Setting a ``pub_date`` in the future should mean that "
"the Question is published at that moment, but invisible until then."
msgstr ""
"Aplikasi jejak pendapat cukup tidak diskriminatif:  dia akan menerbitkan "
"pertanyaan apapun, termasuk satu dimana bidang ``pub_date`` terletak di masa "
"depan. Kami harus meningkatkan ini. Pengaturan ``pub_date`` di masa depan "
"berarti bahwa Pertanyaan di terbitkan pada saat itu, tetapi tidak terlihat "
"sampai saat itu."

msgid "A test for a view"
msgstr "Sebuah percobaan untuk tampilan"

msgid ""
"When we fixed the bug above, we wrote the test first and then the code to "
"fix it. In fact that was an example of test-driven development, but it "
"doesn't really matter in which order we do the work."
msgstr ""
"Ketika kami memperbaiki kesalahan diatas, kami menulis percobaan pertama "
"dulu dan kemudian kode untuk memperbaiki itu. Kenyataanya bahwa sebauh "
"contoh dari pengembangan dikendalikan-percobaan, tapi itu tidak masalah "
"bagaimana kita melakukan pekerjaan."

msgid ""
"In our first test, we focused closely on the internal behavior of the code. "
"For this test, we want to check its behavior as it would be experienced by a "
"user through a web browser."
msgstr ""
"Di percobaan pertama anda, kami fokus lebih dekat pada kebiasaan internal "
"dari kode. Untuk percobaan ini, kami ingin memeriksa kebiasaannya seperti "
"akan berpengalaman oleh pengguna melalui perambah jaringan."

msgid ""
"Before we try to fix anything, let's have a look at the tools at our "
"disposal."
msgstr ""
"Sebelum kami mencoba memperbaiki apapun, mari kita melihat pada alat di "
"pembuangan kami."

msgid "The Django test client"
msgstr "Klien percobaan Django"

msgid ""
"Django provides a test :class:`~django.test.Client` to simulate a user "
"interacting with the code at the view level.  We can use it in ``tests.py`` "
"or even in the :djadmin:`shell`."
msgstr ""
"Django menyediakan percobaan :class:`~django.test.Client` untuk menirukan "
"antarmuka pengguna dengan kode di tingkatan tampilan. Kami dapat "
"menggunakannya di ``tests.py`` atau bahkan di :djadmin:`shell`."

msgid ""
"We will start again with the :djadmin:`shell`, where we need to do a couple "
"of things that won't be necessary in ``tests.py``. The first is to set up "
"the test environment in the :djadmin:`shell`:"
msgstr ""
"Kami akan mulai kembali dengan :djadmin:`shell`, dimana kami butuh melakukan "
"beberapa hal yang tidak diperlukan dalam ``tests.py``. Pertama adalah "
"mensetel lingkungan percobaan dalam :djadmin:`shell`:"

msgid ""
":meth:`~django.test.utils.setup_test_environment` installs a template "
"renderer which will allow us to examine some additional attributes on "
"responses such as ``response.context`` that otherwise wouldn't be available. "
"Note that this method *does not* set up a test database, so the following "
"will be run against the existing database and the output may differ slightly "
"depending on what questions you already created. You might get unexpected "
"results if your ``TIME_ZONE`` in ``settings.py`` isn't correct. If you don't "
"remember setting it earlier, check it before continuing."
msgstr ""
":meth:`~django.test.utils.setup_test_environment` memasang sebuah pembangun "
"cetakan yang akan mengizinkan kita menguji beberapa tambahan atribut pada "
"tanggapan seperti ``response.context`` yang sebaliknya tidak akan tersedia. "
"Catat bahwa metode ini *tidak* mensetel basisdata percobaan, sehingga "
"berikut akan berjalan terhadap basisdata yang ada dan keluaran mungkin "
"sedikit berbeda tergantung pada pertanyaan apa anda telah buat. Anda mungkin "
"mendapatkan hasil yang tidak diharapkan jika ``TIME_ZONE`` dalam ``settings."
"py`` tidak benar. Jika anda tidak ingat menyetel itu di awal, periksa itu "
"sebelum melanjutkan."

msgid ""
"Next we need to import the test client class (later in ``tests.py`` we will "
"use the :class:`django.test.TestCase` class, which comes with its own "
"client, so this won't be required)::"
msgstr ""
"Selanjutnya kami butuh mengimpor kelas klien percobaan (nanti di ``tests."
"py`` kami akan menggunakan kelas :class:`django.test.TestCase`, yang datang "
"dengan klien sendirinya, jadi ini tidak akan diwajibkan)::"

msgid "With that ready, we can ask the client to do some work for us::"
msgstr ""
"Dengan itu siap, kami dapat meminta klien melakukan beberapa pekerjaan untuk "
"kami::"

msgid "Improving our view"
msgstr "Memperbaiki tampilan kami"

msgid ""
"The list of polls shows polls that aren't published yet (i.e. those that "
"have a ``pub_date`` in the future). Let's fix that."
msgstr ""
"Daftar jejak pendapat menunjukkan jejak pendapat yang belum diterbitkan "
"(yaitu itu yang mempunyai ``pub_date`` di masa depan). Mari kita perbaiki "
"itu."

msgid ""
"In :doc:`Tutorial 4 </intro/tutorial04>` we introduced a class-based view, "
"based on :class:`~django.views.generic.list.ListView`:"
msgstr ""
"Di :doc:`Tutorial 4 </intro/tutorial04>` kami memperkenalkan tampilan "
"berdasarkan-kelas, berdasarkan pada :class:`~django.views.generic.list."
"ListView`:"

msgid ""
"We need to amend the ``get_queryset()`` method and change it so that it also "
"checks the date by comparing it with ``timezone.now()``. First we need to "
"add an import:"
msgstr ""
"Kami butuh merubah cara ``get_queryset()`` dan merubahnya sehingga dia juga "
"memeriksa tanggal dengan membandingkannya dengan ``timezone.now()``. Pertama "
"kami butuh menambahkan sebuah impor:"

msgid "and then we must amend the ``get_queryset`` method like so:"
msgstr "dan lalu kami harus merubah cara ``get_queryset`` seperti begitu:"

msgid ""
"``Question.objects.filter(pub_date__lte=timezone.now())`` returns a queryset "
"containing ``Question``\\s whose ``pub_date`` is less than or equal to - "
"that is, earlier than or equal to - ``timezone.now``."
msgstr ""
"``Question.objects.filter(pub_date__lte=timezone.now())`` mengembalikan "
"queryset mengandung ``Question`` dimana ``pub_date`` kurang dari atau sama "
"dengan - yaitu, lebih awal dari atau sama dengan - ``timezone.now``."

msgid "Testing our new view"
msgstr "Menguji tampilan baru kami"

msgid ""
"Now you can satisfy yourself that this behaves as expected by firing up "
"``runserver``, loading the site in your browser, creating ``Questions`` with "
"dates in the past and future, and checking that only those that have been "
"published are listed. You don't want to have to do that *every single time "
"you make any change that might affect this* - so let's also create a test, "
"based on our :djadmin:`shell` session above."
msgstr ""
"Sekarang anda dapat memuaskan diri anda sendiri bahwa perilaku ini sesuai "
"diharapkan dengan menyiapkan ``runserver``, memuat situs dalam peramban "
"anda, membuat ``Questions`` dengan tanggal dalam lampau dan masa datang, dan "
"memeriksa bahwa hanya itu yang telah diterbitkan yang di daftarkan. Anda "
"tidak ingin melakukan bahwa *setiap waktu anda membuat perubahan apapun yang "
"mungkin mempengaruhi ini* -  jadi mari kita juga membuat percobaan, "
"berdasarkan pada sesi :djadmin:`shell` kami diatas. "

msgid "Add the following to ``polls/tests.py``:"
msgstr "Tambah berikut ke ``polls/tests.py``:"

msgid ""
"and we'll create a shortcut function to create questions as well as a new "
"test class:"
msgstr ""
"dan kami akan membuat fungsi jalan pintas untuk membuat pertanyaan dan juga "
"kelas percobaan baru:"

msgid "Let's look at some of these more closely."
msgstr "Mari kita lihat beberapa ini lebih dekat."

msgid ""
"First is a question shortcut function, ``create_question``, to take some "
"repetition out of the process of creating questions."
msgstr ""
"Pertama adalah fungsi jalan pintas pertanyaan, ``create_question``, utuk "
"mengambil beberapa perulangan dari pengolahan membuat pertanyaan."

msgid ""
"``test_no_questions`` doesn't create any questions, but checks the message: "
"\"No polls are available.\" and verifies the ``latest_question_list`` is "
"empty. Note that the :class:`django.test.TestCase` class provides some "
"additional assertion methods. In these examples, we use :meth:`~django.test."
"SimpleTestCase.assertContains()` and :meth:`~django.test.TransactionTestCase."
"assertQuerysetEqual()`."
msgstr ""
"``test_no_questions`` tidak membuat pertanyaan apapun, tetapi periksa pesan: "
"\"Tidak ada jejak pendapat tersedia.\" dan memeriksa "
"``latest_question_list`` adalah kosong. Catat bahwa kelas :class:`django."
"test.TestCase` menyediakan beberapa tambahan metode tuntutan. Dalam contoh "
"ini, kami menggunakan :meth:`~django.test.SimpleTestCase.assertContains()` "
"dan :meth:`~django.test.TransactionTestCase.assertQuerysetEqual()`."

msgid ""
"In ``test_past_question``, we create a question and verify that it appears "
"in the list."
msgstr ""
"Dalam ``test_past_question``, kami membuat sebuah pertanyaan dan memeriksa "
"bahwa jika itu muncul dalam daftar."

msgid ""
"In ``test_future_question``, we create a question with a ``pub_date`` in the "
"future. The database is reset for each test method, so the first question is "
"no longer there, and so again the index shouldn't have any questions in it."
msgstr ""
"Dalam ``test_future_question``, kami membuat sebuah pertanyaan dengan "
"``pub_date`` di masa depan. Basisdata disetel kembali untuk setiap metode "
"pengujian, jadi pertanyaan pertama tidak lagi disana, dan kembali indeks "
"jangan mempunyai pertanyaan apapun di dalamnya."

msgid ""
"And so on. In effect, we are using the tests to tell a story of admin input "
"and user experience on the site, and checking that at every state and for "
"every new change in the state of the system, the expected results are "
"published."
msgstr ""
"Dan sebagainya, Sebenarnya, kami menggunakan percobaan untuk memberitahu "
"cerita masukan admin dan pengalaman pengguna di situs, dan memeriksa bahwa "
"oada setiap tahapan dan setiap perubahan baru dari sistem, hasil yang "
"diharapkan diterbitkan."

msgid "Testing the ``DetailView``"
msgstr "Menguji ``DetailView``"

msgid ""
"What we have works well; however, even though future questions don't appear "
"in the *index*, users can still reach them if they know or guess the right "
"URL. So we need to add a similar  constraint to ``DetailView``:"
msgstr ""
"Apa yang telah kita kerjakan baik; meskipun pertanyaan masa depan tidak "
"muncul di *indeks*, pengguna dapat masih mencapai mereka jika mereka tahu "
"atau menebak URL yang tepat. Jadi kami butuh pembatas sama ke ``DetailView``:"

msgid ""
"We should then add some tests, to check that a ``Question`` whose "
"``pub_date`` is in the past can be displayed, and that one with a "
"``pub_date`` in the future is not:"
msgstr ""
"Kami harus menambahkan beberapa percobaan, untuk memeriksa bahwa "
"``Question`` yang ``pub_date`` di masa lalu dapat ditampilkan, dan yang satu "
"itu dengan ``pub_date`` di masa depan tidak:"

msgid "Ideas for more tests"
msgstr "Ide untuk percobaan lebih"

msgid ""
"We ought to add a similar ``get_queryset`` method to ``ResultsView`` and "
"create a new test class for that view. It'll be very similar to what we have "
"just created; in fact there will be a lot of repetition."
msgstr ""
"Kami seharusnya untuk menambahkan cara ``get_queryset`` mirip ke "
"``ResultsView`` dan membuat kelas percobaan baru untuk tampilan itu. Itu "
"akan sangat mirip pada apa kami telah buat; faktanya akan ada banyak "
"pengulangan."

msgid ""
"We could also improve our application in other ways, adding tests along the "
"way. For example, it's silly that ``Questions`` can be published on the site "
"that have no ``Choices``. So, our views could check for this, and exclude "
"such ``Questions``. Our tests would create a ``Question`` without "
"``Choices`` and then test that it's not published, as well as create a "
"similar ``Question`` *with* ``Choices``, and test that it *is* published."
msgstr ""
"Kami dapat juga memperbaiki aplikasi kami di cara lain, menambahkan "
"percobaan selama perjalanan. Sebagai contoh, adalah gila bahwa ``Questions`` "
"dapat diterbitkan di situs yang tidak mempunyai ``Choices``. Jadi, tampilan "
"kami dapat memeriksa untuk ini, dan tidak menyertakan ``Questions`` seperti "
"itu. Percobaan kami akan membuat sebuah``Question`` tanpa ``Choices`` dan "
"lalu mencoba bahwa dia tidak diterbitkan, sama halnya membuat ``Question`` "
"mirip *dengan* ``Choices``, dan mencoba bahwa *telah* diterbitkan."

msgid ""
"Perhaps logged-in admin users should be allowed to see unpublished "
"``Questions``, but not ordinary visitors. Again: whatever needs to be added "
"to the software to accomplish this should be accompanied by a test, whether "
"you write the test first and then make the code pass the test, or work out "
"the logic in your code first and then write a test to prove it."
msgstr ""
"Mungkin pengguna admin masuk harus diizinkan melihat ``Questions`` tidak "
"terbit, tetapi bukan asli pengunjung. Kembali: apapun kebutuhan untuk "
"ditambahkan ke perangkat lunak untuk menyelesaikan ini harus disertai dengan "
"percobaan, apakah anda menulis percobaan dahulu dan lalu membuat kode "
"melewati percobaan, atau bekerja logis di kode anda pertama dan lalu menulis "
"percobaan untuk membuktikannya."

msgid ""
"At a certain point you are bound to look at your tests and wonder whether "
"your code is suffering from test bloat, which brings us to:"
msgstr ""
"Pada beberapa titik anda terikat untuk melihat percobaan anda dan berharap "
"apakah kode anda menderita dari percobaan gelembung, yang membawa kami "
"kepada:"

msgid "When testing, more is better"
msgstr "Ketika percobaan, lebih baik"

msgid ""
"It might seem that our tests are growing out of control. At this rate there "
"will soon be more code in our tests than in our application, and the "
"repetition is unaesthetic, compared to the elegant conciseness of the rest "
"of our code."
msgstr ""
"Ini mungkin kelihatan bahwa percobaan kami tumbuh tidak terkendali. Pada "
"tingkatan ini akan anda lebih kode di percobaan kami daripada di aplikasi "
"kami, dan pengulangan tidak indah, dibandingkan ke keringkasan elegan dari "
"sisa kode kami."

msgid ""
"**It doesn't matter**. Let them grow. For the most part, you can write a "
"test once and then forget about it. It will continue performing its useful "
"function as you continue to develop your program."
msgstr ""
"**Itu tidak masalah**. Biarkan mereka tumbuh. Untuk kebanyakan, anda dapat "
"menulis percobaan sekali dan lalu melukapan tentang itu. Itu akan terus "
"melakukan fungsi yang berguna ketika anda melanjutkan mengembangkan program "
"anda."

msgid ""
"Sometimes tests will need to be updated. Suppose that we amend our views so "
"that only ``Questions`` with ``Choices`` are published. In that case, many "
"of our existing tests will fail - *telling us exactly which tests need to be "
"amended to bring them up to date*, so to that extent tests help look after "
"themselves."
msgstr ""
"Terkadang percobaan akan butuh diperbaharui. Menduga itu kami merubah "
"tampilan kami sehingga hanya ``Questions`` dengan ``Choices`` yang "
"diterbitkan. Dalam kasus itu, banyak dari percobaan kami yang ada akan gagal "
"- *katakan ke kami tepatnya percobaan mana butuh dirubah untuk membawanya "
"selalu terbaru, jadi pada tingkatan percobaan itu membantu menjaga diri "
"mereka sendiri."

msgid ""
"At worst, as you continue developing, you might find that you have some "
"tests that are now redundant. Even that's not a problem; in testing "
"redundancy is a *good* thing."
msgstr ""
"Yang terburuk, ketika anda melanjutkan mengembangkan, anda mungkin menemukan "
"bahwa anda mempunyai beberapa percobaan yang sekarang berlebihan. Bahkan itu "
"bukan masalah; dalam percobaan adalah hal *bagus*."

msgid ""
"As long as your tests are sensibly arranged, they won't become unmanageable. "
"Good rules-of-thumb include having:"
msgstr ""
"Selama percobaan anda menyadari diatur, mereka tidak akan menjadi tidak "
"dapat diatur.  Aturan-dari-jempol bagis termasuk mempunyai:"

msgid "a separate ``TestClass`` for each model or view"
msgstr "terpisah ``TestClass`` untuk setiap model atau tampilan"

msgid "a separate test method for each set of conditions you want to test"
msgstr ""
"sebuah cara percobaan terpisah untuk setiap kumpulan kondisi anda ingin diuji"

msgid "test method names that describe their function"
msgstr "Nama cara percobaan yang menggambarkan fungsi mereka"

msgid "Further testing"
msgstr "Percobaan lebih jauh"

msgid ""
"This tutorial only introduces some of the basics of testing. There's a great "
"deal more you can do, and a number of very useful tools at your disposal to "
"achieve some very clever things."
msgstr ""
"Tutorial ini hanya memperkenalkan beberapa dasar dari percobaan. Terdapat "
"urusan hebat anda dapat lakukan, dan sejumlah alat sangat berguna pada "
"penyelesaian anda untuk mencapai beberapa hal sangat cakap."

msgid ""
"For example, while our tests here have covered some of the internal logic of "
"a model and the way our views publish information, you can use an \"in-"
"browser\" framework such as Selenium_ to test the way your HTML actually "
"renders in a browser. These tools allow you to check not just the behavior "
"of your Django code, but also, for example, of your JavaScript. It's quite "
"something to see the tests launch a browser, and start interacting with your "
"site, as if a human being were driving it! Django includes :class:`~django."
"test.LiveServerTestCase` to facilitate integration with tools like Selenium."
msgstr ""
"Sebagai contoh, selama percobaan kami telah dicakupi beberapa dari logika "
"internal dari model dan cara tampilan kami menerbitkan informasi, anda dapat "
"menggunakan kerangka \"di-perambah\" seperti Selenium_ untuk mencoba cara "
"HTML anda sebenarnya membangun di perambah. Alat ini mengizinkan anda untuk "
"memeriksa bukan hanya kebiasaan kode Django, tetapi juga, sebagai contoh, "
"dari Javascript anda. Ini cukup sesuatu untuk melihat percobaan meluncurkan "
"perambah, dan mulai berinteraksi dengan situs anda, sebagai jika menjadi "
"manusia mengemudikannya! Django menyertakan :class:`~django.test."
"LiveServerTestCase` untuk memfasilitasi dengan alat seperti Selenium."

msgid ""
"If you have a complex application, you may want to run tests automatically "
"with every commit for the purposes of `continuous integration`_, so that "
"quality control is itself - at least partially - automated."
msgstr ""
"Jika anda mempunyai aplikasi rumit, anda mungkin ingin menjalankan percobaan "
"otomatis dengan setiap penyerahan untuk tujuan dari `perpaduan kelanjutan`_, "
"sehingga kendali kualitas itu sendiri - setidaknya sebagian - otomatis."

msgid ""
"A good way to spot untested parts of your application is to check code "
"coverage. This also helps identify fragile or even dead code. If you can't "
"test a piece of code, it usually means that code should be refactored or "
"removed. Coverage will help to identify dead code. See :ref:`topics-testing-"
"code-coverage` for details."
msgstr ""
"Sebuah jalan bagus untuk menempatkan bagian belum dicoba dari aplikasi anda "
"adalah memeriksa cakupan kode. Ini juga membantu mencirikan kode rapuh atau "
"bahkan mati. Jika anda tidak dapat mencoba potongan kode, biasanya berarti "
"kode harus diuraikan kembali atau dipindahkan. Cakupan akan membantu "
"mencirikan kode mati. Lihat :ref:`topics-testing-code-coverage` untuk "
"rincian. "

msgid ""
":doc:`Testing in Django </topics/testing/index>` has comprehensive "
"information about testing."
msgstr ""
"doc:`Testing in Django </topics/testing/index>` mempunyai informasi luas "
"tentang percobaan."

msgid "What's next?"
msgstr "Apa Selanjutnya? "

msgid ""
"For full details on testing, see :doc:`Testing in Django </topics/testing/"
"index>`."
msgstr ""
"Untuk rincian penuh di percobaan, lihat :doc:`Percobaan di Django </topics/"
"testing/index>`."

msgid ""
"When you're comfortable with testing Django views, read :doc:`part 6 of this "
"tutorial</intro/tutorial06>` to learn about static files management."
msgstr ""
"Ketika anda nyaman dengan percobaan tampilan Django, baca :doc:`bagian 6 "
"dari tutorial ini</intro/tutorial06>` untuk mempelajari tentang pengelolaan "
"berkas statis."

msgid "Writing your first Django app, part 6"
msgstr "Menulis aplikasi Django pertama anda, bagian 6"

msgid ""
"This tutorial begins where :doc:`Tutorial 5 </intro/tutorial05>` left off. "
"We've built a tested web-poll application, and we'll now add a stylesheet "
"and an image."
msgstr ""
"Tutorial ini memulai dimana :doc:`Tutorial 5 </intro/tutorial05>` "
"ditinggalkan. Kami telah membangun sebuah aplikasi poling jaringan, dan kami "
"akan menambahkan  lembar gaya dan gambar."

msgid ""
"Aside from the HTML generated by the server, web applications generally need "
"to serve additional files — such as images, JavaScript, or CSS — necessary "
"to render the complete web page. In Django, we refer to these files as "
"\"static files\"."
msgstr ""
"Disamping dari HTML dibangkitkan oleh peladen, aplikasi jaringan umumnya "
"butuh melayani berkas-berkas tambahan - seperti gambar, JavaScript, atau CSS "
"- perlu untuk membangun halaman jaringan lengkap. Di Django, kami mengacu "
"pada berkas-berkas ini sebagai \"berkas statis\"."

msgid ""
"For small projects, this isn't a big deal, because you can keep the static "
"files somewhere your web server can find it. However, in bigger projects -- "
"especially those comprised of multiple apps -- dealing with the multiple "
"sets of static files provided by each application starts to get tricky."
msgstr ""
"Untuk proyek kecil, ini bukan urusan yang besar, karena anda dapat menyimpan "
"berkas statis disuatu tempat peladen jaringan anda dapat menemukan itu. "
"Bagaimanapun, dalam proyek terbesar, -- khususnya yang terdiri dari aplikasi "
"- aplikasi banyak -- berhubungan dengan banyak kumpulan dari berkas statis "
"disediakan oleh setiap aplikasi mulai menjadi rumit."

msgid ""
"That's what ``django.contrib.staticfiles`` is for: it collects static files "
"from each of your applications (and any other places you specify) into a "
"single location that can easily be served in production."
msgstr ""
"Itulah ``django.contrib.staticfiles`` diperuntukkan: dia mengumpulkan berkas "
"statis dari setiap aplikasi anda (dan tempat lain apapun anda tentukan) "
"kedalam tempat tunggal yang dapat dengan mudah dilayani di produksi."

msgid "Customize your *app's* look and feel"
msgstr "Sesuaikan *aplikasi* anda penampilan dan perasaan "

msgid ""
"First, create a directory called ``static`` in your ``polls`` directory. "
"Django will look for static files there, similarly to how Django finds "
"templates inside ``polls/templates/``."
msgstr ""
"Pertama, buat sebuah direktori dipanggil ``static`` di direktori ``polls`` "
"anda. Django akan mencari berkas statis disana, sama halnya bagaimana Django "
"menemukan cetakan didalam ``polls/templates/``."

msgid ""
"Django's :setting:`STATICFILES_FINDERS` setting contains a list of finders "
"that know how to discover static files from various sources. One of the "
"defaults is ``AppDirectoriesFinder`` which looks for a \"static\" "
"subdirectory in each of the :setting:`INSTALLED_APPS`, like the one in "
"``polls`` we just created. The admin site uses the same directory structure "
"for its static files."
msgstr ""
"Pengaturan Django :setting:`STATICFILES_FINDERS` mengandung daftar dari "
"penemu yang mengetahui bagaimana menemukan berkas statis dari beragam "
"sumber. Satu dari awalnya adalah ``AppDirectoriesFinder`` yang mencari "
"subdirektori \"statis\" di setiap dari :setting:`INSTALLED_APPS`, seperti "
"satu di ``polls`` kami telah buat. Situs admin menggunakan struktur "
"direktori sama untuk berkas statis nya."

msgid ""
"Within the ``static`` directory you have just created, create another "
"directory called ``polls`` and within that create a file called ``style."
"css``. In other words, your stylesheet should be at ``polls/static/polls/"
"style.css``. Because of how the ``AppDirectoriesFinder`` staticfile finder "
"works, you can refer to this static file in Django as ``polls/style.css``, "
"similar to how you reference the path for templates."
msgstr ""
"Dalam direktori ``static`` anda telah buat, buat direktori lain dipanggil "
"``polls`` dan dalam itu buat sebuah berkas dipanggil ``style.css``. Dengan "
"kata lain, gaya kertas anda harus di ``polls/static/polls/style.css``. "
"karena bagaimana pencari berkas statis ``AppDirectoriesFinder`` bekerja, "
"anda dapat mengacu ke berkas statis ini dalam Django sebagai ``polls/style."
"css``, mirip bgaimana anda mengacukan jalur untuk cetakan."

msgid "Static file namespacing"
msgstr "Namespacing berkas statis"

msgid ""
"Just like templates, we *might* be able to get away with putting our static "
"files directly in ``polls/static`` (rather than creating another ``polls`` "
"subdirectory), but it would actually be a bad idea. Django will choose the "
"first static file it finds whose name matches, and if you had a static file "
"with the same name in a *different* application, Django would be unable to "
"distinguish between them. We need to be able to point Django at the right "
"one, and the best way to ensure this is by *namespacing* them. That is, by "
"putting those static files inside *another* directory named for the "
"application itself."
msgstr ""
"Sama seperti cetakan, kita * mungkin * bisa lolos dengan meletakkan file "
"statis kita secara langsung dalam ``polls/static`` (daripada membuat "
"subdirektori ``polls`` lain), tetapi itu sebenarnya adalah ide buruk. Django "
"akan memmilih berkas statis pertama dia temukan yang namanya cocok, dan jika "
"anda memiliki berkas statis dengan nama sama dalam aplikasi *berbeda*, "
"Django tidak dapat membedakan diantara mereka. Kami butuh dapat menunjuk "
"Django pada satu yang benar, dan cara terbaik untuk memastikan ini adalah "
"dengan *namespace*. Yaitu, dengan menaruh berkas-berkas statis itu didalam "
"direktori *lain* dinamai untuk aplikasi itu sendiri."

msgid ""
"Put the following code in that stylesheet (``polls/static/polls/style.css``):"
msgstr ""
"Taruh kode berikut di stylesheet itu (``polls/static/polls/style.css``):"

msgid "``polls/static/polls/style.css``"
msgstr ""

msgid ""
"Next, add the following at the top of ``polls/templates/polls/index.html``:"
msgstr ""
"Selanjutnya, tambahkan berikut pada atas ``polls/templates/polls/index."
"html``: "

msgid ""
"The ``{% static %}`` template tag generates the absolute URL of static files."
msgstr ""
"Etiket cetakan ``{% static %}`` membagnkitkan URL mutlak dari berkas-berkas "
"tetap."

msgid "That's all you need to do for development."
msgstr "Itu semua yang anda butuhkan untuk pengembangan."

msgid "Start the server (or restart it if it's already running):"
msgstr "Mulai peladen (atau mulai kembali jika sudah berjalan):"

msgid ""
"Reload ``http://localhost:8000/polls/`` and you should see that the question "
"links are green (Django style!) which means that your stylesheet was "
"properly loaded."
msgstr ""
"Memuat kembali ``http://localhost:8000/polls/`` dan anda harus melihat bahwa "
"tautan pertanyaan adalah hijau (gaya Django!) yang berarti bahwa lembar gaya "
"anda dengan benar dimuat."

msgid "Adding a background-image"
msgstr "Menambahkan gambar-latar belakang"

msgid ""
"Next, we'll create a subdirectory for images. Create an ``images`` "
"subdirectory in the ``polls/static/polls/`` directory. Inside this "
"directory, put an image called ``background.gif``. In other words, put your "
"image in ``polls/static/polls/images/background.gif``."
msgstr ""
"Selanjutnya, kami akan membuat subdirektori untuk gambar. Buat sebuah "
"sibdirektori ``images`` di direktori ``polls/static/polls/``. Didalam "
"direktori ini, taruh sebuah gambar dipanggil ``background.gif``. Dengan kata "
"lain, taruh gambar anda di ``polls/static/polls/images/background.gif``."

msgid "Then, add to your stylesheet (``polls/static/polls/style.css``):"
msgstr "Lalu, tambahkan ke stylesheet anda (``polls/static/polls/style.css``):"

msgid ""
"Reload ``http://localhost:8000/polls/`` and you should see the background "
"loaded in the top left of the screen."
msgstr ""
"Muat kembali ``http://localhost:8000/polls/`` dan anda harus melihat latar "
"belakang dimuat di kiri atas dari layar."

msgid ""
"The ``{% static %}`` template tag is not available for use in static files "
"which aren't generated by Django, like your stylesheet. You should always "
"use **relative paths** to link your static files between each other, because "
"then you can change :setting:`STATIC_URL` (used by the :ttag:`static` "
"template tag to generate its URLs) without having to modify a bunch of paths "
"in your static files as well."
msgstr ""
"Etiket cetakan``{% static %}`` tidak tersedia untuk digunakan dalam berkas "
"tetap yang tidak dibangkitkan oleh Django, seperti lembar gaya anda. Anda "
"harus selalu menggunakan **relative paths** untuk mengkaitkan berkas tetap "
"anda diantara satu sama lain, karena kemudian anda dapat merubah :setting:"
"`STATIC_URL` (digunakan oleh etiket cetakan :ttag:`static` untuk "
"membangkitkanURL nya) tanpa harus merubah sekelompok jalur dalam berkas "
"tetap anda juga."

msgid ""
"These are the **basics**. For more details on settings and other bits "
"included with the framework see :doc:`the static files howto </howto/static-"
"files/index>` and :doc:`the staticfiles reference </ref/contrib/"
"staticfiles>`. :doc:`Deploying static files </howto/static-files/"
"deployment>` discusses how to use static files on a real server."
msgstr ""
"Ini adalah **dasar**. Untuk lebih rinci di pengaturan dan lainnya disertakan "
"dengan kerangka lihat :doc:`bagaimana berkas statis </howto/static-files/"
"index>` dan :doc:`acuan berkas statis </ref/contrib/staticfiles>`. :doc:"
"`Menyebarkan berkas statis </howto/static-files/deployment>` mengobrolkan "
"bagaimana menggunakan berkas statis di peladen sebenarnya."

msgid ""
"When you're comfortable with the static files, read :doc:`part 7 of this "
"tutorial </intro/tutorial07>` to learn how to customize Django's "
"automatically-generated admin site."
msgstr ""
"Ketika anda nyaman dengan berkas statis, baca :doc:`bagian 7 dari tutorial "
"ini </intro/tutorial07>` untuk belajar bagaimana menyesuaikan pembangkitan-"
"otomatis Django situs admin."

msgid "Writing your first Django app, part 7"
msgstr "Menulis aplikasi Django kedua anda, bagian 7"

msgid ""
"This tutorial begins where :doc:`Tutorial 6 </intro/tutorial06>` left off. "
"We're continuing the web-poll application and will focus on customizing "
"Django's automatically-generated admin site that we first explored in :doc:"
"`Tutorial 2 </intro/tutorial02>`."
msgstr ""
"Tutorial ini memulai dimana :doc:`Tutorial 6 </intro/tutorial06>` "
"ditinggalkan. Kami sedang melanjutkan aplikasi poling-jaringan dan akan "
"fokus pada menyesuaikan pembangkitan otomatis situs admin Django yang "
"pertama kami jelajahi dalam in :doc:`Tutorial 2 </intro/tutorial02>`."

msgid "Customize the admin form"
msgstr "Sesuaikan bentuk admin"

msgid ""
"By registering the ``Question`` model with ``admin.site."
"register(Question)``, Django was able to construct a default form "
"representation. Often, you'll want to customize how the admin form looks and "
"works. You'll do this by telling Django the options you want when you "
"register the object."
msgstr ""
"Dengan mendaftarkan model ``Question`` dengan ``admin.site."
"register(Question)``, Django dapat membangun bentuk perwakilan awal. Sering, "
"anda akan menginginkan menyesuaikan bagaimana bentuk admin kelihatan dan "
"bekerja. Anda akan melakukan ini dengan memberitahu Django pilihan anda "
"ingin ketika anda mendaftar obyek."

msgid ""
"Let's see how this works by reordering the fields on the edit form. Replace "
"the ``admin.site.register(Question)`` line with:"
msgstr ""
"Mari kita lihat bagaimana ini bekerja dengan mengurutkan kembali bidang di "
"formulir sunting. Ganti baris ``admin.site.register(Question)`` dengan:"

msgid ""
"You'll follow this pattern -- create a model admin class, then pass it as "
"the second argument to ``admin.site.register()`` -- any time you need to "
"change the admin options for a model."
msgstr ""
"Anda akan mengikuti corak ini -- buat sebuah kelas admin model, kemudian "
"lewati dia sebagai argumen kedua ke ``admin.site.register()`` -- setiap saat "
"anda butuh merubah pilihan admin untuk sebuah model."

msgid ""
"This particular change above makes the \"Publication date\" come before the "
"\"Question\" field:"
msgstr ""
"Perubahan khusus ini diatas membuat \"Tanggal penerbitan\" datang sebelum "
"bidang \"Pertanyaan\" :"

msgid "Fields have been reordered"
msgstr "Bidang-bidang telah diurutkan kembali"

msgid ""
"This isn't impressive with only two fields, but for admin forms with dozens "
"of fields, choosing an intuitive order is an important usability detail."
msgstr ""
"Ini tidak hebat dengan hanya dua bidang, tetapi untuk bentuk admin dengan "
"lusinan bidang, memilih urutan intuitif adalah rincian kegunaan penting."

msgid ""
"And speaking of forms with dozens of fields, you might want to split the "
"form up into fieldsets:"
msgstr ""
"Dan berbicara formulir dengan lusinan bidang, anda mungkin ingin memisahkan "
"formulir menjadi kumpulan bidang:"

msgid ""
"The first element of each tuple in :attr:`~django.contrib.admin.ModelAdmin."
"fieldsets` is the title of the fieldset. Here's what our form looks like now:"
msgstr ""
"Unsur pertama dari setiap tuple di :attr:`~django.contrib.admin.ModelAdmin."
"fieldsets` adalah judul dari fieldset. Ini adalah apa formulir kami "
"kelihatan seperti sekarang:"

msgid "Form has fieldsets now"
msgstr "Formulir sekarang mempunyai kumpulan bidang"

msgid "Adding related objects"
msgstr "Menambahkan obyek terhubung"

msgid ""
"OK, we have our Question admin page, but a ``Question`` has multiple "
"``Choice``\\s, and the admin page doesn't display choices."
msgstr ""
"OKE, kami mempunyai halaman admin Pertanyaan, tetapi ``Question`` mempunyai "
"banyak ``Choice``, dan halaman admin tidak menampilkan pilihan."

msgid "Yet."
msgstr "Masih."

msgid ""
"There are two ways to solve this problem. The first is to register "
"``Choice`` with the admin just as we did with ``Question``:"
msgstr ""
"Ada dua cara menyelesaikan masalah ini. pertama adalah mendaftarkan "
"``Choice`` dengan admin seperti yang kami lakukan dengan ``Question``:"

msgid ""
"Now \"Choices\" is an available option in the Django admin. The \"Add choice"
"\" form looks like this:"
msgstr ""
"Sekarang \"Pilihan\" adalah pilihan tersedia di admin Django. Bentuk "
"\"Tambah pilihan\" kelihatan seperti ini:"

msgid "Choice admin page"
msgstr "Halaman admin pilihan"

msgid ""
"In that form, the \"Question\" field is a select box containing every "
"question in the database. Django knows that a :class:`~django.db.models."
"ForeignKey` should be represented in the admin as a ``<select>`` box. In our "
"case, only one question exists at this point."
msgstr ""
"Di bentuk itu, bidang \"Pertanyaan\" adalah kotak pilih mengandung setiap "
"pertanyaan di basisdata. Django mengetahui bahwa :class:`~django.db.models."
"ForeignKey` harus diwakilkan di admin sebagai kotal ``<select>``. Di kasus "
"kami, hanya satu pertanyaan ada di titik ini."

msgid ""
"Also note the \"Add Another\" link next to \"Question.\" Every object with a "
"``ForeignKey`` relationship to another gets this for free. When you click "
"\"Add Another\", you'll get a popup window with the \"Add question\" form. "
"If you add a question in that window and click \"Save\", Django will save "
"the question to the database and dynamically add it as the selected choice "
"on the \"Add choice\" form you're looking at."
msgstr ""
"Juga catat tautan \"Tambah lainnya\" dekat ke \"Pertanyaan\". Setiap obyek "
"dengan hubungan ``ForeignKey``  ke lainnya mendapatkan ini untuk bebas. "
"Ketika anda klik \"Tambah Lainnya\", anda akan mendapatkan jendela popup "
"dengan bentuk \"Tambah pertanyaan\". Jika anda menambah pertanyaan di "
"jendela itu dan klik \"Simpan\", Django akan menyimpan pertanyaan di "
"basisdata dan secara dinamis menambahkannya sebagai pilihan terpilih pada "
"bentuk \"Tambah Pilihan\" yang anda cari."

msgid ""
"But, really, this is an inefficient way of adding ``Choice`` objects to the "
"system. It'd be better if you could add a bunch of Choices directly when you "
"create the ``Question`` object. Let's make that happen."
msgstr ""
"Tetapi, sungguh, ini bukan cara efisien dari menambahkan obyek ``Choice`` ke "
"sistem. Akan lebih baik jika anda dapat menambahkan sekumpulan Pilihan "
"langsung ketika anda membuat obyek ``Question``. Mari kita membuatnya "
"terjadi."

msgid ""
"Remove the ``register()`` call for the ``Choice`` model. Then, edit the "
"``Question`` registration code to read:"
msgstr ""
"Pindahkan pemanggilan ``register()`` untuk model ``Choice``. Lalu, sunting "
"kode pendaftaran ``Question`` untuk dibaca:"

msgid ""
"This tells Django: \"``Choice`` objects are edited on the ``Question`` admin "
"page. By default, provide enough fields for 3 choices.\""
msgstr ""
"Ini memberitahu Django: \"obyek ``Choice`` sedang disunting pada halaman "
"admin ``Question``. Secara awal, cukup menyediakan bidang untuk 3 pilihan.\""

msgid "Load the \"Add question\" page to see how that looks:"
msgstr ""
"Muat halaman \"Tambahan pertanyaan\" untuk melihat bagaimana kelihatannya:"

msgid "Add question page now has choices on it"
msgstr "Halaman tambah pertanyaan sekarang mempunyai pilihan didalamnya"

msgid ""
"It works like this: There are three slots for related Choices -- as "
"specified by ``extra`` -- and each time you come back to the \"Change\" page "
"for an already-created object, you get another three extra slots."
msgstr ""
"Dia bekerja seperti ini: Terdapat tiga bagian untuk Pilihan terhubung -- "
"sesuai ditentukan oleh ``extra`` -- dan setiap waktu anda kembali ke halaman "
"\"Rubah\" untuk obyek sudah-sibuat, anda mendapatkan tiga ekstra bagian lain."

msgid ""
"At the end of the three current slots you will find an \"Add another Choice"
"\" link.  If you click on it, a new slot will be added. If you want to "
"remove the added slot, you can click on the X to the top right of the added "
"slot. This image shows an added slot:"
msgstr ""
"Di akhir dari tiga petak saat ini anda akan menemukan sebuah tautan \"Tambah "
"Pilihan lain\". Jika mengkliknya, petak baru akan ditambahkan. Jika anda "
"ingin menambahkan petak, anda dapat mengklik pada X di kanan atas dari petak "
"ditambah. Gambar dibawah ini menunjukkan sebuah petak ditambah:"

msgid "Additional slot added dynamically"
msgstr "Tempat tambahan ditambahkan secara dinamis"

msgid ""
"One small problem, though. It takes a lot of screen space to display all the "
"fields for entering related ``Choice`` objects. For that reason, Django "
"offers a tabular way of displaying inline related objects. To use it, change "
"the ``ChoiceInline`` declaration to read:"
msgstr ""
"Satu masalah kecil, meskipun. Itu mengambil banyak lahan layar untuk "
"menampilkan semua bidang untuk memasukkan objek ``Choice`` terkait. Untuk "
"alasan itu, Django menawarkan cara datar dari menampilkan objek terkait di "
"barisan. Untuk menggunakan itu, rubah pernyataan  ``ChoiceInline`` untuk "
"membaca:"

msgid ""
"With that ``TabularInline`` (instead of ``StackedInline``), the related "
"objects are displayed in a more compact, table-based format:"
msgstr ""
"Dengan ``TabularInline`` (daripada ``StackedInline``), obyek terhubung "
"ditampilkan lebih rapat, bentuk berbasiskan-tabel:"

msgid "Add question page now has more compact choices"
msgstr "Halaman tambah pertanyaan sekarang mempunyai lebih pilihan ringkas"

msgid ""
"Note that there is an extra \"Delete?\" column that allows removing rows "
"added using the \"Add Another Choice\" button and rows that have already "
"been saved."
msgstr ""
"Catat bahwa terdapat kolom \"Hapus?\" tambahan yang mengizinkan memindahkan "
"baris ditambahkan menggunakan tombol \"Tambah Pilihan Lain\" dan baris telah "
"disimpan."

msgid "Customize the admin change list"
msgstr "Sesuaiakan daftar perubahan admin"

msgid ""
"Now that the Question admin page is looking good, let's make some tweaks to "
"the \"change list\" page -- the one that displays all the questions in the "
"system."
msgstr ""
"Sekarang bahwa halaman admin Question kelihatan bagus, mari kita membuat "
"beberapa perubahan untuk \"daftar rubah\" halaman -- satu yang menampilkan "
"semua pertanyaan di sistem."

msgid "Here's what it looks like at this point:"
msgstr "Inilah yang terlihat seperti pada saat ini:"

msgid ""
"By default, Django displays the ``str()`` of each object. But sometimes it'd "
"be more helpful if we could display individual fields. To do that, use the :"
"attr:`~django.contrib.admin.ModelAdmin.list_display` admin option, which is "
"a tuple of field names to display, as columns, on the change list page for "
"the object:"
msgstr ""
"Secara awal, Django menampilkan ``str()`` dari setiap obyek. Tetapi "
"terkadang itu akan lebih membantu jika kami dapat menampilkan bidang secara "
"masing-masing. untuk melakukannya, gunakan pilihan admin :attr:`~django."
"contrib.admin.ModelAdmin.list_display`, yang merupakan tuple dari nama "
"bidang untuk ditampilkan, sebagai kolom, pada halaman daftar perubahan untuk "
"obyek:"

msgid ""
"For good measure, let's also include the ``was_published_recently()`` method "
"from :doc:`Tutorial 2 </intro/tutorial02>`:"
msgstr ""
"Untuk ukuran terbaik, mari juta juga sertakan metode "
"``was_published_recently()`` dari :doc:`Tutorial 2 </intro/tutorial02>`:"

msgid "Now the question change list page looks like this:"
msgstr "Sekarang pertanyaan halaman daftar perubahan kelihatan seperti ini:"

msgid "Polls change list page, updated"
msgstr "Halaman daftar rubah pemungutan suara, diperbaharui"

msgid ""
"You can click on the column headers to sort by those values -- except in the "
"case of the ``was_published_recently`` header, because sorting by the output "
"of an arbitrary method is not supported. Also note that the column header "
"for ``was_published_recently`` is, by default, the name of the method (with "
"underscores replaced with spaces), and that each line contains the string "
"representation of the output."
msgstr ""
"Anda dapat meng klik di kepala kolom untuk mengurutkan nilai tersebut -- "
"kecuali di kasus kepala ``was_published_recently``, karena mengurutkan "
"berdasarkan keluaran dari cara sewenang-wenang tidak didukung. Juga catat "
"bahwa kepala kolom untuk ``was_published_recently`` adalah, secara awal, "
"nama dari cara (dengan garis bawah ditandai dengan spasi), dan setiap baris "
"mengandung string mewakili dari keluaran."

msgid ""
"You can improve that by using the :func:`~django.contrib.admin.display` "
"decorator on that method (in :file:`polls/models.py`), as follows:"
msgstr ""
"Anda dapat meningkatkan itu dengan menggunakan penghias :func:`~django."
"contrib.admin.display` pada metode itu (dalam :file:`polls/models.py`), "
"sebagai berikut:"

msgid ""
"For more information on the properties configurable via the decorator, see :"
"attr:`~django.contrib.admin.ModelAdmin.list_display`."
msgstr ""
"Untuk informasi lebih pada properti yang dapat dikonfigurasikan melalui "
"penghias lihat :attr:`~django.contrib.admin.ModelAdmin.list_display`."

msgid ""
"Edit your :file:`polls/admin.py` file again and add an improvement to the "
"``Question`` change list page: filters using the :attr:`~django.contrib."
"admin.ModelAdmin.list_filter`. Add the following line to ``QuestionAdmin``::"
msgstr ""
"Sunting berkas :file:`polls/admin.py` anda kembali dan tambah perbaikan ke "
"halaman daftar perubahan ``Question`` : saringan menggunakan :attr:`~django."
"contrib.admin.ModelAdmin.list_filter`. Tambah baris berikut ke "
"``QuestionAdmin``::"

msgid ""
"That adds a \"Filter\" sidebar that lets people filter the change list by "
"the ``pub_date`` field:"
msgstr ""
"Itu menambahkan batang sisi \"Saringan\" yang membiarkan orang menyaring "
"daftar perubahan dengan bidang ``pub_date``:"

msgid ""
"The type of filter displayed depends on the type of field you're filtering "
"on. Because ``pub_date`` is a :class:`~django.db.models.DateTimeField`, "
"Django knows to give appropriate filter options: \"Any date\", \"Today\", "
"\"Past 7 days\", \"This month\", \"This year\"."
msgstr ""
"Jenis dari saringan ditampilkan tergantung pada jenis dari bidang anda "
"saringkan. karena ``pub_date`` adalah sebuah :class:`~django.db.models."
"DateTimeField`, Django mengetahui untuk memberikan pilihan saringan sesuai: "
"\"Tanggal kapanpun\", \"7 hari terakhir\",\" Bulan ini\", \"Tahun ini\"."

msgid "This is shaping up well. Let's add some search capability::"
msgstr ""
"Ini adalah pembentukan baik. Mari kita menambahkan beberapa kemampuan "
"pencarian ::"

msgid ""
"That adds a search box at the top of the change list. When somebody enters "
"search terms, Django will search the ``question_text`` field. You can use as "
"many fields as you'd like -- although because it uses a ``LIKE`` query "
"behind the scenes, limiting the number of search fields to a reasonable "
"number will make it easier for your database to do the search."
msgstr ""
"Itu menambah kotak pencarian di bagian atas dari daftar rubah. Ketika "
"seseorang memasukkan istilah pencarian, Django akan mencari bidang "
"``question_text``. Anda dapat menggunakan sebanyak bidang anda suka -- "
"meskipun karena itu menggunakan query ``LIKE`` dibelakang layar, membatasi "
"angka bidan gpencarian untuk angka yang beralasan akan membuatnya mudah bagi "
"basisdata anda melakukan pencarian."

msgid ""
"Now's also a good time to note that change lists give you free pagination. "
"The default is to display 100 items per page. :attr:`Change list pagination "
"<django.contrib.admin.ModelAdmin.list_per_page>`, :attr:`search boxes "
"<django.contrib.admin.ModelAdmin.search_fields>`, :attr:`filters <django."
"contrib.admin.ModelAdmin.list_filter>`, :attr:`date-hierarchies <django."
"contrib.admin.ModelAdmin.date_hierarchy>`, and :attr:`column-header-ordering "
"<django.contrib.admin.ModelAdmin.list_display>` all work together like you "
"think they should."
msgstr ""
"Sekarang juga waktu bagus untuk mencatat bahwa daftar perubahan diberikan ke "
"anda bebas halaman Awalnya adalah menampilkan 100 barang per halaman. :attr:"
"`Change list pagination <django.contrib.admin.ModelAdmin.list_per_page>`, :"
"attr:`search boxes <django.contrib.admin.ModelAdmin.search_fields>`, :attr:"
"`filters <django.contrib.admin.ModelAdmin.list_filter>`, :attr:`date-"
"hierarchies <django.contrib.admin.ModelAdmin.date_hierarchy>`, dan :attr:"
"`column-header-ordering <django.contrib.admin.ModelAdmin.list_display>` "
"semua kerja bersama seperti anda berpikir mereka seharusnya."

msgid "Customize the admin look and feel"
msgstr "Sesuaikan admin lihat dan rasakan"

msgid ""
"Clearly, having \"Django administration\" at the top of each admin page is "
"ridiculous. It's just placeholder text."
msgstr ""
"Jelas, mempunyai \"Administrasi Django\" pada atas dari setiap halaman admin "
"adalah menggelikan. Itu adalah hanya teks placeholder."

msgid ""
"You can change it, though, using Django's template system. The Django admin "
"is powered by Django itself, and its interfaces use Django's own template "
"system."
msgstr ""
"Anda dapat merubahnya, meskipun, menggunakan sistem cetakan Django. Admin "
"Django ditenagai oleh Django itu sendiri, dan antarmukanya menggunakan "
"sistem cetakan Django sendiri."

msgid "Customizing your *project's* templates"
msgstr "Menyesuaikan cetakan *proyek* anda"

msgid ""
"Create a ``templates`` directory in your project directory (the one that "
"contains ``manage.py``). Templates can live anywhere on your filesystem that "
"Django can access. (Django runs as whatever user your server runs.) However, "
"keeping your templates within the project is a good convention to follow."
msgstr ""
"Buat sebuah direktori ``templates`` di proyek direktori anda (satu yang "
"mengandung ``manage.py``). Cetakan dapat berada di mana saja di sistem "
"berkas anda yang Django dapat akses. (Django berjalan saat pengguna apapun "
"peladen anda berjalan.) Bagaimanapun, menjaga cetakan dalam proyek adalah "
"kebiasaan bagus untuk diikuti."

msgid ""
"Open your settings file (:file:`mysite/settings.py`, remember) and add a :"
"setting:`DIRS <TEMPLATES-DIRS>` option in the :setting:`TEMPLATES` setting:"
msgstr ""
"Buka berkas pengaturan anda (:file:`mysite/settings.py`, ingat) dan tambah "
"pilihan :setting:`DIRS <TEMPLATES-DIRS>` di pengaturan :setting:`TEMPLATES` :"

msgid ""
":setting:`DIRS <TEMPLATES-DIRS>` is a list of filesystem directories to "
"check when loading Django templates; it's a search path."
msgstr ""
":setting:`DIRS <TEMPLATES-DIRS>` adalah daftar dari direktori sistem berkas "
"untuk memeriksa ketika memuat cetakan Django; dia adalah jalur pencarian."

msgid "Organizing templates"
msgstr "Mengatur cetakan"

msgid ""
"Just like the static files, we *could* have all our templates together, in "
"one big templates directory, and it would work perfectly well. However, "
"templates that belong to a particular application should be placed in that "
"application's template directory (e.g. ``polls/templates``) rather than the "
"project's (``templates``). We'll discuss in more detail in the :doc:"
"`reusable apps tutorial </intro/reusable-apps>` *why* we do this."
msgstr ""
"Sama seperti berkas-berkas tetap, kami *dapat* mempunyai semua cetakan "
"bersama-sama, dalam satu direktori cetakan besar, dan itu akan bekerja "
"sempurna. Bagaimanapun, cetakan-cetakan yang milik aplikasi tertentu harus "
"ditempatkan dalam direktori cetakan aplikasi (contoh ``polls/"
"templates``) daripada (``templates``) proyek. Kami akan mengobrolkan lebih "
"rinci dalam  :doc:`reusable apps tutorial ` *mengapa* kami melakukan ini."

msgid ""
"Now create a directory called ``admin`` inside ``templates``, and copy the "
"template ``admin/base_site.html`` from within the default Django admin "
"template directory in the source code of Django itself (``django/contrib/"
"admin/templates``) into that directory."
msgstr ""
"Sekarang buat sebuah direktori disebut ``admin`` didalam ``templates``, dan "
"salin cetakan ``admin/base_site.html`` dari dalam direktori cetakan admin "
"Django awal di kode sumber dari Django itu sendiri (``django/contrib/admin/"
"templates``) kedalam direktori itu."

msgid "Where are the Django source files?"
msgstr "Dimana berkas sumber Django?"

msgid ""
"If you have difficulty finding where the Django source files are located on "
"your system, run the following command:"
msgstr ""
"Jika anda mempunyai kesulitan dimana berkas sumber Django ditempatkan di "
"sistem anda, jalankan perintah berikut:"

msgid ""
"Then, edit the file and replace ``{{ site_header|default:_('Django "
"administration') }}`` (including the curly braces) with your own site's name "
"as you see fit. You should end up with a section of code like:"
msgstr ""
"Kemudian, sunting berkas dan ganti ``{{ site_header|default:_('Django "
"administration') }}`` (termasuk tanda buka kurung bergelombang) dengan nama "
"situs anda sendiri untuk melihatnya cocok. Anda akan berakhir dengan bagian "
"seperti kode:"

msgid ""
"We use this approach to teach you how to override templates. In an actual "
"project, you would probably use the :attr:`django.contrib.admin.AdminSite."
"site_header` attribute to more easily make this particular customization."
msgstr ""
"Kami menggunakan pendekatan ini untuk mengajarkan anda bagaimana menimpa "
"cetakan. Di proyek sesungguhnya, anda mungkin menggunakan atribut :attr:"
"`django.contrib.admin.AdminSite.site_header` untuk lebih mudah membuat "
"penyesuaian tertentu."

msgid ""
"This template file contains lots of text like ``{% block branding %}`` and "
"``{{ title }}``. The ``{%`` and ``{{`` tags are part of Django's template "
"language. When Django renders ``admin/base_site.html``, this template "
"language will be evaluated to produce the final HTML page, just like we saw "
"in :doc:`Tutorial 3 </intro/tutorial03>`."
msgstr ""
"Berkas cetakan ini mengandung banyak teks seperti ``{% block branding %}`` "
"dan ``{{ title }}``. Etiket ``{%`` dan ``{{`` adalah bagian dari bahasa "
"cetakan Django. Ketika Django membangun ``admin/base_site.html``, bahasa "
"cetakan akan menilai untuk menghasilkan halaman HTML akhir, sama seeprti "
"kami lihat di :doc:`Tutorial 3 </intro/tutorial03>`."

msgid ""
"Note that any of Django's default admin templates can be overridden. To "
"override a template, do the same thing you did with ``base_site.html`` -- "
"copy it from the default directory into your custom directory, and make "
"changes."
msgstr ""
"Catat bahwa cetakan admin awalan Django dapat ditimpa. Untuk menimpa "
"cetakan, lakukan hal sama anda lakukan dengan ``base_site.html`` -- salin "
"itu dari direktori awalan kedalam direktori penyesuaian anda, dan buat "
"perubahan."

msgid "Customizing your *application's* templates"
msgstr "Menyesuaikan cetakan *aplikasi* anda"

msgid ""
"Astute readers will ask: But if :setting:`DIRS <TEMPLATES-DIRS>` was empty "
"by default, how was Django finding the default admin templates? The answer "
"is that, since :setting:`APP_DIRS <TEMPLATES-APP_DIRS>` is set to ``True``, "
"Django automatically looks for a ``templates/`` subdirectory within each "
"application package, for use as a fallback (don't forget that ``django."
"contrib.admin`` is an application)."
msgstr ""
"Pembaca cerdik akan bertanya: Tetapi jika :setting:`DIRS <TEMPLATES-DIRS>` "
"kosong secara awal, bagaimana Django menemukan cetakan admin awal? "
"Jawabannya adalah, sejak :setting:`APP_DIRS <TEMPLATES-APP_DIRS>` disetel ke "
"``True``, Django otomatis mencari subdirektori ``templates/`` dalam setiap "
"paket aplikasi, untuk digunakan sebagai kembali (jangan lupa bahwa ``django."
"contrib.admin`` adalah sebuah aplikasi)."

msgid ""
"Our poll application is not very complex and doesn't need custom admin "
"templates. But if it grew more sophisticated and required modification of "
"Django's standard admin templates for some of its functionality, it would be "
"more sensible to modify the *application's* templates, rather than those in "
"the *project*. That way, you could include the polls application in any new "
"project and be assured that it would find the custom templates it needed."
msgstr ""
"Aplikasi jejak pendapat kami tidak sangat rumit dan tidak butuh penyesuaian "
"cetakan admin. Tetapi jika itu tumbuh lebih mutkahir dan membutuhkan "
"perubahan dari cetakan admin standar Django untuk beberapa fungsinya, itu "
"akan lebih bijaksana untuk merubah cetakan *aplikasi*, daripada itu di "
"*proyek*. Lewat situ, anda dapat menyertakan aplikasi jejak pendapat di "
"proyek baru apapun dan terjamin bahwa dia akan menemukan cetakan penyesuaian "
"dia butuhkan."

msgid ""
"See the :ref:`template loading documentation <template-loading>` for more "
"information about how Django finds its templates."
msgstr ""
"Lihat :ref:`dokumentasi memuat cetakan <template-loading>` untuk informasi "
"lebih tentang bagaimana Django menemukan cetakannya."

msgid "Customize the admin index page"
msgstr "Sesuaikan halaman index admin"

msgid ""
"On a similar note, you might want to customize the look and feel of the "
"Django admin index page."
msgstr ""
"Pada catatan sama, anda mungkin ingin menyesuaikan penampilan dan rasa dari "
"halaman index admin Django."

msgid ""
"By default, it displays all the apps in :setting:`INSTALLED_APPS` that have "
"been registered with the admin application, in alphabetical order. You may "
"want to make significant changes to the layout. After all, the index is "
"probably the most important page of the admin, and it should be easy to use."
msgstr ""
"Secara awal, dia menampilkan semua aplikasi di :setting:`INSTALLED_APPS` "
"yang telah didaftarkan dengan aplikasi admin, dalam urutan alfabet. Anda "
"mungkin ingin membuat perubahan signifikan pada tata letak. Lagi pula, index "
"mungkin halaman paling penting dari admin, dan dia harus mudah digunakan."

msgid ""
"The template to customize is ``admin/index.html``. (Do the same as with "
"``admin/base_site.html`` in the previous section -- copy it from the default "
"directory to your custom template directory). Edit the file, and you'll see "
"it uses a template variable called ``app_list``. That variable contains "
"every installed Django app. Instead of using that, you can hard-code links "
"to object-specific admin pages in whatever way you think is best."
msgstr ""
"Cetakan untuk menyesuaian adalah ``admin/index.html``. (Lakukan sama dengan "
"``admin/base_site.html`` di bagian sebelumnya --  salin dia dari direktori "
"awal ke direktori cetakan penyesuaian anda). Sunting berkas, dan anda akan "
"melihatnya menggunakan ceriabel cetakan dipanggil ``app_list``. Variabel itu "
"mengandung setiap aplikasi Django terpasang. Dari pada menggunakan itu, anda "
"dapat kode-keras tautan ke halaman admin di jalan apapun anda pikir terbaik."

msgid ""
"The beginner tutorial ends here. In the meantime, you might want to check "
"out some pointers on :doc:`where to go from here </intro/whatsnext>`."
msgstr ""
"Tutorial pemula berakhir disini. Sementara itu, anda mungkin ingin memeriksa "
"beberapa titik di :doc:`kemana pergi dari sini </intro/whatsnext>`."

msgid ""
"If you are familiar with Python packaging and interested in learning how to "
"turn polls into a \"reusable app\", check out :doc:`Advanced tutorial: How "
"to write reusable apps</intro/reusable-apps>`."
msgstr ""
"Jika anda akrab dengan pemaketan Phyton dan tertarik dalam belajar bagaimana "
"mengubah jejak pendapat menjadi \"aplikasi digunakan kembali\", periksa  :"
"doc:`Tutorial Lanjut: Bagaimana menulis aplikasi digunakan kembali</intro/"
"reusable-apps>`."

msgid "What to read next"
msgstr "Apa yang akan dibaca selanjutnya"

msgid ""
"So you've read all the :doc:`introductory material </intro/index>` and have "
"decided you'd like to keep using Django. We've only just scratched the "
"surface with this intro (in fact, if you've read every single word, you've "
"read about 5% of the overall documentation)."
msgstr ""
"Jadi anda telah membaca semua :doc:`bahan perkenalan </intro/index>` dan "
"telah memutuskan anda akan tetap menggunakan Django. Kami hanya menggores "
"permukaan dengan pengenalan ini (kenyataannya, jika anda telah membaca "
"setiap kata tunggal, anda telah membaca tentang 5% dari dokumentasi "
"keseluruhan)."

msgid "So what's next?"
msgstr "Lalu apa selanjutnya?"

msgid ""
"Well, we've always been big fans of learning by doing. At this point you "
"should know enough to start a project of your own and start fooling around. "
"As you need to learn new tricks, come back to the documentation."
msgstr ""
"Baiklah, kami selalu penggemar besar dari belajar berdasarkan melakukan. "
"Pada titik ini anda harus cukup tahu untuk mulai proyek dari milik anda dan "
"mulai bermain-main. Ketika anda butuh belajar trik baru, datang kembali ke "
"dokumentasi."

msgid ""
"We've put a lot of effort into making Django's documentation useful, clear "
"and as complete as possible. The rest of this document explains more about "
"how the documentation works so that you can get the most out of it."
msgstr ""
"Kami menaruh banyak usaha dalam membuat dokumentasi Django berguna, bersih "
"dan selengkap mungkin. Sisa dari dokumen ini menjelaskan lebih tentang "
"bagaimana dokumentasi bekerja sehingga anda bisa mendapatkan yang terbaik "
"dari itu."

msgid ""
"(Yes, this is documentation about documentation. Rest assured we have no "
"plans to write a document about how to read the document about "
"documentation.)"
msgstr ""
"(Ya, dokumentasi ini tentang dokumentasi. Sisanya dijamin kami tidak punya "
"rencana untuk menulis dokumen tentang bagaimana membaca dokumen tentang "
"dokumentasi.)"

msgid "Finding documentation"
msgstr "Menemukan dokumentasi"

msgid ""
"Django's got a *lot* of documentation -- almost 450,000 words and counting "
"-- so finding what you need can sometimes be tricky. A good place to start "
"is the :ref:`genindex`. We also recommend using the builtin search feature."
msgstr ""
"Django mendapatkan *banyak* dokumentasi -- hampir 450,000 kata dan terus "
"berhitung -- sehingga menemukan apa yang anda butuhkan terkadang sulit. "
"Tempat bagus untuk memulai adalah :ref:`genindex`. Kami juga menganjurkan "
"menggunakan fitur pencarian siap pakai."

msgid "Or you can just browse around!"
msgstr "Atau anda hanya menjelajah sekitar!"

msgid "How the documentation is organized"
msgstr "Bagaimana dokumentasi diatur"

msgid ""
"Django's main documentation is broken up into \"chunks\" designed to fill "
"different needs:"
msgstr ""
"Dokumentasi utama Django dipecah menjadi \"potongan\" rancangan untuk "
"mengisi kebutuhan berbeda:"

msgid ""
"The :doc:`introductory material </intro/index>` is designed for people new "
"to Django -- or to web development in general. It doesn't cover anything in "
"depth, but instead gives a high-level overview of how developing in Django "
"\"feels\"."
msgstr ""
"The :doc:`introductory material </intro/index>` dirancang untuk orang baru "
"pada Django -- atau ke pengembangan jaringan secara umum. Dia tidak "
"mencangkup apapun lebih dalam, tetapi daripada memberikan tinjauan tingkat-"
"tinggi dari bagaimana mengembangkan dalam \"feels\" Django."

msgid ""
"The :doc:`topic guides </topics/index>`, on the other hand, dive deep into "
"individual parts of Django. There are complete guides to Django's :doc:"
"`model system </topics/db/index>`, :doc:`template engine </topics/"
"templates>`, :doc:`forms framework </topics/forms/index>`, and much more."
msgstr ""
":doc:`panduan topik </topics/index>`, di tangan lain, gali lebih dalam ke "
"bagian tersendiri dari Django. Terdapat panduan lengkap ke :doc:`sistem "
"model </topics/db/index>` Django, :doc:`mesin cetakan </topics/templates>`, :"
"doc:`kerangka bentuk </topics/forms/index>`, dan banyak lagi."

msgid ""
"This is probably where you'll want to spend most of your time; if you work "
"your way through these guides you should come out knowing pretty much "
"everything there is to know about Django."
msgstr ""
"Ini mungkin dimana anda ingin menghabiskan banyak waktu anda; jika anda "
"bekerja jalan anda melalui panduan ini anda harus keluar mengetahui hampir "
"segala sesuatu yang ada untuk diketahui tentang Django."

msgid ""
"Web development is often broad, not deep -- problems span many domains. "
"We've written a set of :doc:`how-to guides </howto/index>` that answer "
"common \"How do I ...?\" questions. Here you'll find information about :doc:"
"`generating PDFs with Django </howto/outputting-pdf>`, :doc:`writing custom "
"template tags </howto/custom-template-tags>`, and more."
msgstr ""
"Pengembangan jaringan sering melebar, tidak dalam -- masalah menjangkau "
"banyak ranah. Kami telah menulis sekumpulan :doc:`how-to guides </howto/"
"index>` yang menjawab umum pertanyaan \"Bagaimana Saya ...?\". Disini anda "
"akan menemukan informasi tentang :doc:`membangkitkan PDF dengan Django </"
"howto/outputting-pdf>`, :doc:`menulis penyesuaian etiket cetakan </howto/"
"custom-template-tags>`, dan lagi."

msgid ""
"Answers to really common questions can also be found in the :doc:`FAQ </faq/"
"index>`."
msgstr ""
"Jawaban pertanyaan sangat umum dapat ditemukan di :doc:`FAQ </faq/index>`."

msgid ""
"The guides and how-to's don't cover every single class, function, and method "
"available in Django -- that would be overwhelming when you're trying to "
"learn. Instead, details about individual classes, functions, methods, and "
"modules are kept in the :doc:`reference </ref/index>`. This is where you'll "
"turn to find the details of a particular function or whatever you need."
msgstr ""
"Panduan dan bagaimana-untuk tidak mencangkup setiap kelas tunggal, fungsi, "
"dan cara tersedia di Django -- itu akan besar sekali ketika anda mencoba "
"belajar. Sebagai gantinya, rincian tentang kelas, fungsi, cara dan modul "
"tersendiri terjaga di :doc:`reference </ref/index>`. Ini adalah dimana anda "
"akan merubah menemukan rincian dari fungsi tertentu atau apapun anda "
"butuhkan."

msgid ""
"If you are interested in deploying a project for public use, our docs have :"
"doc:`several guides</howto/deployment/index>` for various deployment setups "
"as well as a :doc:`deployment checklist</howto/deployment/checklist>` for "
"some things you'll need to think about."
msgstr ""
"Jika anda tertarik menyebarkan sebuah proyek untuk penggunaan umum, dokumen "
"kami mempunyai :doc:`beberapa panduan</howto/deployment/index>` untuk "
"beragam pengaturan pengembangan sama halnya :doc:`daftar centang penyebaran</"
"howto/deployment/checklist>` untuk sesuatu anda akan butuh untuk dipikirkan."

msgid ""
"Finally, there's some \"specialized\" documentation not usually relevant to "
"most developers. This includes the :doc:`release notes </releases/index>` "
"and :doc:`internals documentation </internals/index>` for those who want to "
"add code to Django itself, and a :doc:`few other things that don't fit "
"elsewhere </misc/index>`."
msgstr ""
"Akhirnya, ada beberapa dokumentasi \"specialized\" tidak biasanya terkait "
"pada kebanyakan pengembang. Ini menyertakan :doc:`release notes </releases/"
"index>` dan :doc:`internals documentation </internals/index>` untuk mereka "
"yang ingin menambahkan kode ke Django itu sendiri, dan :doc:`few other "
"things that don't fit elsewhere </misc/index>`."

msgid "How documentation is updated"
msgstr "Bagaimana dokumentasi diperbaharui"

msgid ""
"Just as the Django code base is developed and improved on a daily basis, our "
"documentation is consistently improving. We improve documentation for "
"several reasons:"
msgstr ""
"Hanya sebagai basis kode Django dikembangkan dan diperbaiki pada permulaan "
"harian, dokumentasi kami terus-menerus diperbaiki. Kami memperbaiki "
"dokumentasi untuk beberapa alasan:"

msgid "To make content fixes, such as grammar/typo corrections."
msgstr ""
"Untuk membuat isi tetap, seperti pembetulan tata bahasa/kesalahan ketik."

msgid ""
"To add information and/or examples to existing sections that need to be "
"expanded."
msgstr ""
"Untuk menambahkan informasi dan/atau contoh pada bagian yang ada yang butuh "
"diperluas."

msgid ""
"To document Django features that aren't yet documented. (The list of such "
"features is shrinking but exists nonetheless.)"
msgstr ""
"Pada dokumen fitur Django yang belum didokumentasikan. (Daftar seperti fitur "
"itu menyusut tapi tetap ada.)"

msgid ""
"To add documentation for new features as new features get added, or as "
"Django APIs or behaviors change."
msgstr ""
"Untuk menambahkan dokumentasi untuk fitur baru sebagai fitur baru "
"ditambahkan, atau API Django atau perubahan kebiasaan."

msgid ""
"Django's documentation is kept in the same source control system as its "
"code. It lives in the :source:`docs` directory of our Git repository. Each "
"document online is a separate text file in the repository."
msgstr ""
"Dokumentasi Django dijaga dalam sistem kendali sumber yang sama seperti "
"kodenya. Itu berada di direktori the :source:`docs` dari gudang Git kami. "
"Setiap dokumen daring adalah berkas teks terpisah dalam gudang."

msgid "Where to get it"
msgstr "Dimana mendapatkannya"

msgid ""
"You can read Django documentation in several ways. They are, in order of "
"preference:"
msgstr ""
"Anda dapat membaca dokumentasi Django dalam beberapa cara. Mereka adalah, "
"urutan pilihan:"

msgid "On the web"
msgstr "Dalam jaringan"

msgid ""
"The most recent version of the Django documentation lives at https://docs."
"djangoproject.com/en/dev/. These HTML pages are generated automatically from "
"the text files in source control. That means they reflect the \"latest and "
"greatest\" in Django -- they include the very latest corrections and "
"additions, and they discuss the latest Django features, which may only be "
"available to users of the Django development version. (See :ref:`differences-"
"between-doc-versions` below.)"
msgstr ""
"Versi paling saat ini dari dokumentasi Django berada pada https://docs."
"djangoproject.com/en/dev/. Halaman-halaman HTML ini dibangkitkan otomatis "
"dari berkas-berkas teks dalam kendali sumber. Itu berarti mereka "
"mencerminkan \"terakhir dan terhebat\" dalam Django -- mereka menyertakan "
"perbaikan dan penambahan sangat terakhir, dan mereka mengobrolkan fitur-"
"fitur Django terakhir, yang mungkin tersedia pada pengguna dari versi "
"pengembangan Django (Lihat :ref:`differences-between-doc-versions` dibawah.)"

msgid ""
"We encourage you to help improve the docs by submitting changes, corrections "
"and suggestions in the `ticket system`_. The Django developers actively "
"monitor the ticket system and use your feedback to improve the documentation "
"for everybody."
msgstr ""
"Kami mendorong anda untuk membantu perbaikan dokumen dengan mengajukan "
"perubahan, pembenaran dan saran di `sistem tiket`_. Pengembang Django secara "
"aktif mengawasi sistem tiket  dan menggunakan umpan balik anda untuk "
"memperbaiki dokumentasi untuk semua orang."

msgid ""
"Note, however, that tickets should explicitly relate to the documentation, "
"rather than asking broad tech-support questions. If you need help with your "
"particular Django setup, try the |django-users| mailing list or the `#django "
"IRC channel`_ instead."
msgstr ""
"Catat, bagaimanapun, tiket itu harus secara eksplisit berhubungan ke "
"dokumentasi, dari pada menanyakan pertanyaan dukunan-teknis luas. Jika anda "
"butuh bantuan dengan pengaturan Django khususnya, coba |django-users| daftar "
"penyuratan atau `#django IRC channel`_."

msgid "In plain text"
msgstr "Dalam teks polos"

msgid ""
"For offline reading, or just for convenience, you can read the Django "
"documentation in plain text."
msgstr ""
"Untuk membaca tanpa jaringan, atau hanya untuk kenyamanan, anda dapat "
"membaca dokumentasi Django di teks polos."

msgid ""
"If you're using an official release of Django, the zipped package (tarball) "
"of the code includes a ``docs/`` directory, which contains all the "
"documentation for that release."
msgstr ""
"Jika anda sedang menggunakan terbitan resmi dari Django, paket terkompresi "
"(tarball) dari kode menyertakan direktori ``docs/``, yang mengandung semua "
"dokumentasi untuk terbitan itu."

msgid ""
"If you're using the development version of Django (aka the main branch), the "
"``docs/`` directory contains all of the documentation. You can update your "
"Git checkout to get the latest changes."
msgstr ""
"Jika anda sedang menggunakan versi pengembangan dari Django (alias cabang "
"utama), direktori ``docs/`` mengandung semua dokumentasi. Anda dapat "
"memperbaharui pemeriksaan Git untuk mendapatkan perubahan terakhir."

msgid ""
"One low-tech way of taking advantage of the text documentation is by using "
"the Unix ``grep`` utility to search for a phrase in all of the "
"documentation. For example, this will show you each mention of the phrase "
"\"max_length\" in any Django document:"
msgstr ""
"Hanya jalan teknik-rendah dari mengambil keuntungan dari teks dokumentasi "
"dengan menggunakan kegunaan ``grep`` Unix untuk mencari frase di semua "
"dokumentasi. Sebagai contoh, ini akan menunjukkan anda setiap sebutan dari "
"frase \"max_length\" di dokumen Django:"

msgid "As HTML, locally"
msgstr "Sebagai HTML, secara lokal"

msgid ""
"You can get a local copy of the HTML documentation following a few steps:"
msgstr ""
"Anda bisa mendapatkan salinan lokal dari dokumentasi HTML mengikuti sedikit "
"langkah-langkah:"

msgid ""
"Django's documentation uses a system called Sphinx__ to convert from plain "
"text to HTML. You'll need to install Sphinx by either downloading and "
"installing the package from the Sphinx website, or with ``pip``:"
msgstr ""
"Dokumentasi Django menggunakan sebuah sistem disebut Sphinx__ untuk merubah "
"dari teks polos ke HTML. Anda akan butuh memasang Sphinx dengan salah satu "
"mengunduh dan memasang paket dari situs jaringan Sphinx, atau dengan ``pip``:"

msgid ""
"Then, use the included ``Makefile`` to turn the documentation into HTML:"
msgstr ""
"Kemudian, gunakan ``Makefile`` disertakan untuk mengubah dokumentasi menjadi "
"HTML:"

msgid "You'll need `GNU Make`__ installed for this."
msgstr "Anda akan butuh `GNU Make`__ memasang untuk ini."

msgid "If you're on Windows you can alternatively use the included batch file:"
msgstr ""
"Jika anda berada di Windows anda dapat cara lain menggunakan berkas kumpulan "
"disertakan:"

msgid "The HTML documentation will be placed in ``docs/_build/html``."
msgstr "Dokumentasi HTML akan ditempatkan di ``docs/_build/html``."

msgid "Differences between versions"
msgstr "Perbedaan diantara versi"

msgid ""
"The text documentation in the main branch of the Git repository contains the "
"\"latest and greatest\" changes and additions. These changes include "
"documentation of new features targeted for Django's next :term:`feature "
"release <Feature release>`. For that reason, it's worth pointing out our "
"policy to highlight recent changes and additions to Django."
msgstr ""
"Dokumentasi teks dalam cabang utama dari gudang Git mengandung perubahan dan "
"penambahan \"latest and greatest\". Perubahan ini termasuk dokumentasi dari "
"fitur baru disasarkan untuk :term:`feature release <Feature release>` Django "
"selanjutnya. Untuk alasan itu, sangat berharga menunjuk kebijakan kami untuk "
"menggarisbawahi perubahan terakhir danpenambahan pada Django."

msgid "We follow this policy:"
msgstr "Kami mengikuti kebijakan ini:"

msgid ""
"The development documentation at https://docs.djangoproject.com/en/dev/ is "
"from the main branch. These docs correspond to the latest feature release, "
"plus whatever features have been added/changed in the framework since then."
msgstr ""
"Dokumentasi pengembangan pada https://docs.djangoproject.com/en/dev/ berasal "
"dari cabang utama. Dokumen ini berkaitan pada terbitan terakhir akan datang, "
"ditambah fitur apapun telah ditambah/dirubah dalam kerangka kerja sejak itu."

msgid ""
"As we add features to Django's development version, we update the "
"documentation in the same Git commit transaction."
msgstr ""
"Ketika kami menambahkan fitur-fitur ke versi pengembangan Django, kami "
"memperbaharui dokumentasi dalam transaksi penyerahan Git yang sama."

msgid ""
"To distinguish feature changes/additions in the docs, we use the phrase: "
"\"New in Django Development version\" for the version of Django that hasn't "
"been released yet, or \"New in version X.Y\" for released versions."
msgstr ""
"Untuk membedakan perubahan/penambahan fitur dalam dokumen, kami menggunakan "
"frasa: \"Baru dalam versi Pengembangan Django\" untuk versi Django yang "
"belum diterbitkan,.atau \"Baru dalam versi X.Y\" untuk versi diterbitkan."

msgid ""
"Documentation fixes and improvements may be backported to the last release "
"branch, at the discretion of the merger, however, once a version of Django "
"is :ref:`no longer supported<supported-versions-policy>`, that version of "
"the docs won't get any further updates."
msgstr ""
"Perbaikan dan peningkatan dokumentasi mungkin dihubungkan pada cabang "
"terbitan terakhir, at kebijaksanaan penggabungan, bagaimanapun, sekali versi "
"Django :ref:`no longer supported<supported-versions-policy>`, versi tersebut "
"dari dokumentasi tidak akan mendapatkan pembaharuan lanjutan."

msgid ""
"The `main documentation web page`_ includes links to documentation for "
"previous versions. Be sure you are using the version of the docs "
"corresponding to the version of Django you are using!"
msgstr ""
"`main documentation web page`_ menyertakan tautan ke dokumentasi untuk versi "
"sebelumnya. Pastikan anda sedang menggunakan versi dari dokumen  sesuai pada "
"versi Django anda sedang gunakan!"
