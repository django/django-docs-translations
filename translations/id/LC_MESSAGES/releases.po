# SOME DESCRIPTIVE TITLE.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
#
# Translators:
# Claude Paroz <claude@2xlibre.net>, 2020
# Fery Setiawan <gembelweb@gmail.com>, 2015-2019
# Ichlasul Affan <ichlaffterlalu@gmail.com>, 2020
# oon arfiandwi (OonID) <oon.arfiandwi@gmail.com>, 2016
# oon arfiandwi (OonID) <oon.arfiandwi@gmail.com>, 2018
# Sutrisno Efendi <kangfend@gmail.com>, 2018
# Zaki Akhmad <za@python.or.id>, 2018
msgid ""
msgstr ""
"Project-Id-Version: django-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-04 12:41-0500\n"
"PO-Revision-Date: 2013-04-02 20:02+0000\n"
"Last-Translator: Claude Paroz <claude@2xlibre.net>, 2020\n"
"Language-Team: Indonesian (http://app.transifex.com/django/django-docs/"
"language/id/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: id\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "Django version 0.95 release notes"
msgstr "Catatan terbitan Django versi 0.95"

msgid "Welcome to the Django 0.95 release."
msgstr "Selamat datang di terbitan Django 0.95."

msgid ""
"This represents a significant advance in Django development since the 0.91 "
"release in January 2006. The details of every change in this release would "
"be too extensive to list in full, but a summary is presented below."
msgstr ""
"Ini mewakili peningkatan signifikan di pengembangan Django sejak terbitan "
"0.91 di Januari 2006. Rincian dari setiap perubahan di terbitan ini akan "
"terlalu panjang untuk di daftarkan, tetapi ringkasan dihadirkan dibawah."

msgid "Suitability and API stability"
msgstr "Kesesuaian dan Kestabilan API"

msgid ""
"This release is intended to provide a stable reference point for developers "
"wanting to work on production-level applications that use Django."
msgstr ""
"Terbitan ini bermaksud untuk menyediakan titik acuan stabil untuk "
"pemngembang ingin bekerja pada aplikasi tingkat-produksi yang menggunakan "
"Django."

msgid ""
"However, it's not the 1.0 release, and we'll be introducing further changes "
"before 1.0. For a clear look at which areas of the framework will change "
"(and which ones will *not* change) before 1.0, see the ``api-stability.txt`` "
"file, which lives in the docs/ directory of the distribution."
msgstr ""
"Bagaimanapun, ini bukan terbiatan 1.0, dan kami akan memperkenalkan "
"perubahan lebih lanjut sebelum 1.0. Untuk tampilan bersih yang kawasan dari "
"kerangka akan berubah (dan yang mana *tidak* akan berubah) sebelum 1.0, "
"lihat berkas ``api-stability.txt``, yang berada di direktori docs/ dari "
"penyebaran."

msgid ""
"You may have a need to use some of the features that are marked as \"subject "
"to API change\" in that document, but that's OK with us as long as it's OK "
"with you, and as long as you understand APIs may change in the future."
msgstr ""
"Anda mungkin butuh menggunakan beberapa fitur yang ditandai sebagai \"subyek "
"ke perubahan API\" di dokumen itu, tetapi tidak masalah dengan kami selama "
"itu OKE dengan anda, dan selama anda memahami API mungkin berubah di masa "
"depan."

msgid ""
"Fortunately, most of Django's core APIs won't be changing before version "
"1.0. There likely won't be as big of a change between 0.95 and 1.0 versions "
"as there was between 0.91 and 0.95."
msgstr ""
"Untungnya, kebanyakan inti API Django tidak akan berubah sebelum versi 1.0. "
"Ada kemungkinan tidak akan sebesar perubahan diantara versi 0.95 dan 1.0 "
"seperti ada  diantara 0.91 dan 0.95."

msgid "Changes and new features"
msgstr "Perubahan dan fitur baru"

msgid ""
"The major changes in this release (for developers currently using the 0.91 "
"release) are a result of merging the 'magic-removal' branch of development. "
"This branch removed a number of constraints in the way Django code had to be "
"written that were a consequence of decisions made in the early days of "
"Django, prior to its open-source release. It's now possible to write more "
"natural, Pythonic code that works as expected, and there's less \"black "
"magic\" happening behind the scenes."
msgstr ""
"Perubahan utama di terbitan ini (untuk pengembang saat ini menggunakan "
"terbitan 0.91) adalah hasil penggabungan cabang 'magic-removal' dai "
"pengembangan Cabang ini memindahkan sejumlah kendala di jalan kode Django "
"harus ditulis yang merupakan konsekuensi dari keputusan yang dibuat hari "
"sebelumnya dari Django, sebelumnya terbitan sumber terbukanya. DIa sekaran "
"mungkin ditulis lebih alami, kode Python yang bekerja sesuai harapan, dan "
"terdapat sedikit \"black magic\" terjadi dibelakang layar."

msgid ""
"Aside from that, another main theme of this release is a dramatic increase "
"in usability. We've made countless improvements in error messages, "
"documentation, etc., to improve developers' quality of life."
msgstr ""
"Disamping dari itu, tema utama lain dai terbitan ini adalah peningkatan "
"dramatis dalam penggunakan. Kami telah membuat perbaikan tidak terhitung di "
"pesan kesalahan, dokumentasi, dll, untuk memperbaiki kualias kehidupan "
"pengembang."

msgid "The new features and changes introduced in 0.95 include:"
msgstr "Fitur baru dan perubahan diperkenalkan di 0.95 termasuk:"

msgid ""
"Django now uses a more consistent and natural filtering interface for "
"retrieving objects from the database."
msgstr ""
"Django sekarang menggunakan antarmuka penyaringan lebih konsisten dan alami "
"untuk mengambil obyek dari basisdata."

msgid ""
"User-defined models, functions and constants now appear in the module "
"namespace they were defined in. (Previously everything was magically "
"transferred to the ``django.models.*`` namespace.)"
msgstr ""
"Model ditentukan-pengguna, fungsi dan konstanta sekarang muncul di namespace "
"modul mereka telah tentukan. (Sebelumnya semuanya adalah secara ajaib "
"dipindahkan ke namespace django.namespace.*)"

msgid ""
"Some optional applications, such as the FlatPage, Sites and Redirects apps, "
"have been decoupled and moved into ``django.contrib``. If you don't want to "
"use these applications, you no longer have to install their database tables."
msgstr ""
"Beberapa pilihan aplikasi, seperti aplikasi FlatPage, Sites dan Redirects, "
"telah dipisahkan dan dipindah kedalam ``django.contrib``. Jika anda tidak "
"menggunakan aplikasi ini, anda tidak lagi harus memasang tabel-tabel "
"basisdata mereka."

msgid "Django now has support for managing database transactions."
msgstr "Django sekarang telah mendukung untuk mengelola transaksi basisdata"

msgid ""
"We've added the ability to write custom authentication and authorization "
"backends for authenticating users against alternate systems, such as LDAP."
msgstr ""
"Kami telah menambahkan kemampuan untuk menulis backend pembuktian keaslian "
"dan otorisasi penyesuaian untuk membuktikan keaslian pengguna terhadap "
"sistem bergilir, seperti LDAP."

msgid ""
"We've made it easier to add custom table-level functions to models, through "
"a new \"Manager\" API."
msgstr ""
"Kami telah membuatnya lebih mudah untuk menambahkan fungsi tingkatan-tabel "
"penyesuaian untuk model, melalui sebuah API \"Pengelola\" baru."

msgid ""
"It's now possible to use Django without a database. This simply means that "
"the framework no longer requires you to have a working database set up just "
"to serve dynamic pages. In other words, you can just use URLconfs/views on "
"their own. Previously, the framework required that a database be configured, "
"regardless of whether you actually used it."
msgstr ""
"Sekarang memungkinkan menggunakan Django tanpa basisdata. Mudah disini "
"berarti bahwa kerangka kerja tidak lagi membutuhkan anda untuk memiliki "
"setelan basisdata yang bekerja hanya untuk melayani halaman dinamis. Dengan "
"kata lain, anda dapat hanya menggunakan URLconfs/views pada milik mereka "
"sendiri. Sebelumnya, kerangka kerja mewajibkan bahwa sebuah basisdata untuk "
"dikonfigurasi, tanpa memperhatikan apakah anda sebenarnya menggunakannya."

msgid ""
"It's now more explicit and natural to override ``save()`` and ``delete()`` "
"methods on models, rather than needing to hook into the ``pre_save()`` and "
"``post_save()`` method hooks."
msgstr ""

msgid ""
"Individual pieces of the framework now can be configured without requiring "
"the setting of an environment variable. This permits use of, for example, "
"the Django templating system inside other applications."
msgstr ""
"Potongan tersendiri dari kerangka sekarang dapat dikonfigurasi tanpa "
"membutuhkan pengaturan dari sebuah variabel lingkungan. Ini mengizinkan "
"penggunaan, sebagai contoh, sistem pencetakan Django di dalam aplikasi lain."

msgid ""
"More and more parts of the framework have been internationalized, as we've "
"expanded internationalization (i18n) support. The Django codebase, including "
"code and templates, has now been translated, at least in part, into 31 "
"languages. From Arabic to Chinese to Hungarian to Welsh, it is now possible "
"to use Django's admin site in your native language."
msgstr ""
"Lebih dan lebih bagian dari kerangka telah di internasionalisasikan, sesuai "
"yang kami telah luaskan dukungan internasionalisasi (i18n). Basis kode "
"Django, termasuk kode dan cetakan, telah diterjemahkan, setidaknya dalam "
"bagian, kedalam 31 bahasa. Dari Arab ke China ke Hogoria ke Wales, sekarang "
"memungkinkan menggunakan situs admin Django dalam bahasa asli anda."

msgid ""
"The number of changes required to port from 0.91-compatible code to the 0.95 "
"code base are significant in some cases. However, they are, for the most "
"part, reasonably routine and only need to be done once. A list of the "
"necessary changes is described in the `Removing The Magic`_ wiki page. There "
"is also an easy checklist_ for reference when undertaking the porting "
"operation."
msgstr ""
"Sejumlah perubahan wajib untuk menghubungkan dari kode sepadan -0.91 ke kode "
"dasar 0.95 adalah penting dalam beberapa kasus. Bagaimanapun, mereka adalah, "
"untuk kebanyakan bagian, cukup rutin dan hanya butuh dilakukan sekali. "
"Sebuah daftar dari perubahan yang dibutuhkan digambarkan dalam halaman wiki "
"`Removing The Magic`_ . Ada juga daftar centang mudah untuk acuan ketika "
"berusaha melakukan tindakan penghubungan."

msgid "Problem reports and getting help"
msgstr "Laporan masalah dan mendapatkn bantuan"

msgid ""
"Need help resolving a problem with Django? The documentation in the "
"distribution is also available :doc:`online </index>` at the `Django "
"website`_. The :doc:`FAQ </faq/index>` document is especially recommended, "
"as it contains a number of issues that come up time and again."
msgstr ""
"Butuh bantuan menyelesaikan sebuah masalah dengan Django? Dokumentasi dalam "
"sebaran juga tersedia :doc:`online </index>`  pada `Django website`_. "
"Dokumen :doc:`FAQ </faq/index>` khususnya dianjurkan, seperti mengandung "
"sejumlah masalah yang datang dan kembali."

msgid ""
"For more personalized help, the `django-users`_ mailing list is a very "
"active list, with more than 2,000 subscribers who can help you solve any "
"sort of Django problem. We recommend you search the archives first, though, "
"because many common questions appear with some regularity, and any "
"particular problem may already have been answered."
msgstr ""
"Untuk bantuan lebih pribadi, daftar penyuratan `django-users`_ adalah daftar "
"sangat aktif, dengan lebih dari 2.000 pelanggan yang dapat membantu anda "
"menyelesaikan semacam masalah Django. Kami menganjurkan anda mencari arsip "
"terlebih dahulu, meskipun, karena banyak pertanyaan umum muncul dengan "
"beberapa ketetapan, dan masalah tertentu apapun mungkin sudah telah dijawab."

msgid ""
"Finally, for those who prefer the more immediate feedback offered by IRC, "
"there's a ``#django`` channel on ``irc.libera.chat`` that is regularly "
"populated by Django users and developers from around the world. Friendly "
"people are usually available at any hour of the day -- to help, or just to "
"chat."
msgstr ""

msgid "Thanks for using Django!"
msgstr "Terima kasih untuk menggunakan Django!"

msgid "The Django Team July 2006"
msgstr "Tim Django Juli 2006"

msgid "Django version 0.96 release notes"
msgstr "Catatan terbitan Django versi 0.96"

msgid "Welcome to Django 0.96!"
msgstr "Selamat datang di Django 0.96!"

msgid ""
"The primary goal for 0.96 is a cleanup and stabilization of the features "
"introduced in 0.95. There have been a few small `backwards-incompatible "
"changes`_ since 0.95, but the upgrade process should be fairly simple and "
"should not require major changes to existing applications."
msgstr ""
"Sasaran utama untuk 0.96 adalah pembersihan dan stabilitas dari fitur yang "
"diperkenalkan dalam 0.95. Ada beberapa `backwards-incompatible changes`_ "
"kecil sejak 0.95, tetapi proses peningkatan harus mudah dan harus tidak "
"membutuhkan perubahan besar pada aplikasi yang ada."

msgid ""
"However, we're also releasing 0.96 now because we have a set of backwards-"
"incompatible changes scheduled for the near future. Once completed, they "
"will involve some code changes for application developers, so we recommend "
"that you stick with Django 0.96 until the next official release; then you'll "
"be able to upgrade in one step instead of needing to make incremental "
"changes to keep up with the development version of Django."
msgstr ""
"Bagaimanapun, kami juga menerbitkan 0.96 sekarang karena kami mempunyai "
"kumpulan jadwal perubahan bertentangan-kebelakang untuk tidak lama lagi. "
"Sekali lengkap, mereka akan melibatkan beberapa kode perubahan untuk "
"pengembang aplikasi, sehingga kami menganjurkan bahwa anda menempel dengan "
"Django 0.96 sampai terbitan resmi selanjutnya; kemudian anda akan dapat "
"meningkatkan dalam satu langkah daripada membutuhkan untuk membuat "
"peningkatan perubahan untuk menjaga dengan pengembangan versi Django."

msgid "Backwards-incompatible changes"
msgstr "Perubahan bertentangan-kebelakang"

msgid ""
"The following changes may require you to update your code when you switch "
"from 0.95 to 0.96:"
msgstr ""
"Perubahan berikut mungkin membutuhkan anda memperbaharui kode anda ketika "
"anda mengganti dari 0.95 ke 0.96:"

msgid "``MySQLdb`` version requirement"
msgstr "Versi wajib ``MySQLdb``"

msgid ""
"Due to a bug in older versions of the ``MySQLdb`` Python module (which "
"Django uses to connect to MySQL databases), Django's MySQL backend now "
"requires version 1.2.1p2 or higher of ``MySQLdb``, and will raise exceptions "
"if you attempt to use an older version."
msgstr ""
"Dikarenakan kesalahan di versi terlama dari modul Python ``MySQLdb`` (dimana "
"Django gunakan untuk menghubung ke basisdata MySQL), backend MySQL Django "
"sekarang membutuhkan versi 1.2.1p2 atau lebih tinggi dari ``MySQLdb``, dan "
"akan memunculkan pengecualian jika anda berusaha menggunakan sebuah versi "
"terlama."

msgid ""
"If you're currently unable to upgrade your copy of ``MySQLdb`` to meet this "
"requirement, a separate, backwards-compatible backend, called \"mysql_old\", "
"has been added to Django. To use this backend, change the "
"``DATABASE_ENGINE`` setting in your Django settings file from this::"
msgstr ""
"Jika anda sedang saat ini tidak dapat meningkatkan salinan anda dari "
"``MySQLdb`` untuk memenuhi persyaratan ini, terpisah, backend kesesuaian-"
"kebelakang, dipanggil \"mysql_old\", telah ditambahkan ke Django. Untuk "
"menggunakan backend ini, rubah pengaturan ``DATABASE_ENGINE`` di berkas "
"pengaturan Django anda dari ini::"

msgid "to this::"
msgstr "untuk ini::"

msgid ""
"However, we strongly encourage MySQL users to upgrade to a more recent "
"version of ``MySQLdb`` as soon as possible, The \"mysql_old\" backend is "
"provided only to ease this transition, and is considered deprecated; aside "
"from any necessary security fixes, it will not be actively maintained, and "
"it will be removed in a future release of Django."
msgstr ""
"Bagaimanapun, kami sangat mendorong pengguna MySQL untuk meningkatkan lebih "
"versi saat ini dari ``MySQLdb`` secepat mungkin, backend \"mysql_old\" "
"disediakan hanya untuk memudahkan perpindahan ini, dan dipertimbangkan "
"diusangkan, disamping dari perbaikan keamanan yang diperlukan, itu tidak "
"akan aktif dirawat, dan itu akan dipindahkan di terbitan akan datang dari "
"Django."

msgid ""
"Also, note that some features, like the new ``DATABASE_OPTIONS`` setting "
"(see the :doc:`databases documentation </ref/databases>` for details), are "
"only available on the \"mysql\" backend, and will not be made available for "
"\"mysql_old\"."
msgstr ""
"Juga, catat bahwa beberapa fitur, seperti pengaturan ``DATABASE_OPTIONS`` "
"baru (lihat :doc:`databases documentation </ref/databases>` untuk rincian), "
"hanya tersedia pada backend \"mysql\", dan tidak akan tersedia untuk "
"\"mysql_old\"."

msgid "Database constraint names changed"
msgstr "Nama-nama pembatas basisdata berubah"

msgid ""
"The format of the constraint names Django generates for foreign key "
"references have changed slightly. These names are generally only used when "
"it is not possible to put the reference directly on the affected column, so "
"they are not always visible."
msgstr ""
"Bentuk dari batasan nama Django dibangkitkan untuk acuan foreign key telah "
"berubah sedikit. Nama-nama ini umumnya hanya digunakan ketika itu tidak "
"memungkinkan menaruh acuan secara langsung pada kolom terpengaruh, jadi "
"mereka tidak selalu nampak."

msgid ""
"The effect of this change is that running ``manage.py reset`` and similar "
"commands against an existing database may generate SQL with the new form of "
"constraint name, while the database itself contains constraints named in the "
"old form; this will cause the database server to raise an error message "
"about modifying nonexistent constraints."
msgstr ""
"Pengaruh dari perubahan ini bahwa menjalankan ``manage.py reset`` dan "
"erintah-perintah mirip terhadap basisdata yang ada mungkin membangkitkan SQL "
"dengan bentuk baru dari batasan nama, selagi basisdata itu sendiri "
"mengandung batasan bernama dalam bentuk lama; ini akan menyebabkan peladen "
"basisdata memunculkan sebuah pesan kesalahan tentang merubah batasan-batasan "
"yang tidak ada."

msgid "If you need to work around this, there are two methods available:"
msgstr "Jika anda butuh memecahkan ini, terdapat dua metode tersedia:"

msgid ""
"Redirect the output of ``manage.py`` to a file, and edit the generated SQL "
"to use the correct constraint names before executing it."
msgstr ""
"Alihkan keluaran dari ``manage.py`` ke berkas, dan rubah SQL dibangkitkan "
"untuk menggunakan nama batasan yang benar sebelum menjalankannya."

msgid ""
"Examine the output of ``manage.py sqlall`` to see the new-style constraint "
"names, and use that as a guide to rename existing constraints in your "
"database."
msgstr ""
"Ujikan keluaran dari ``manage.py sqlall`` untuk melihat bnama batasan gaya-"
"baru, dan gunakan itu sebagai panduan untuk menamai kembali batasan yang ada "
"dalam basisdata anda."

msgid "Name changes in ``manage.py``"
msgstr "Perubahan nama di ``manage.py``"

msgid ""
"A few of the options to ``manage.py`` have changed with the addition of "
"fixture support:"
msgstr ""
"Sedikit pilihan pada ``manage.py`` telah berubah dengan penambahan dukungan "
"perlengkapan tetap:"

msgid ""
"There are new ``dumpdata`` and ``loaddata`` commands which, as you might "
"expect, will dump and load data to/from the database. These commands can "
"operate against any of Django's supported serialization formats."
msgstr ""
"Ada perintah ``dumpdata`` dan ``loaddata`` baru yang, mungkin anda harapkan, "
"akan mengeluarkan dan memuat data ke/dari basisdata. Perintah ini dapat "
"beroperasi terhadap bentuk serialisasi terdukung Django apapun."

msgid ""
"The ``sqlinitialdata`` command has been renamed to ``sqlcustom`` to "
"emphasize that ``loaddata`` should be used for data (and ``sqlcustom`` for "
"other custom SQL -- views, stored procedures, etc.)."
msgstr ""
"Perintah ``sqlinitialdata`` telah dinamai kembali menjadi ``sqlcustom`` "
"untuk menegaskan bahwa ``loaddata`` harus digunakan untuk data (dan "
"``sqlcustom`` untuk SQL penyesuaian lain -- view, store procedure, dll.)."

msgid "The vestigial ``install`` command has been removed. Use ``syncdb``."
msgstr "Vestigial perintah ``install`` telah dipindahkan. Gunakan ``syncdb``."

msgid "Backslash escaping changed"
msgstr "Pelolosan backslash berubah"

msgid ""
"The Django database API now escapes backslashes given as query parameters. "
"If you have any database API code that matches backslashes, and it was "
"working before (despite the lack of escaping), you'll have to change your "
"code to \"unescape\" the slashes one level."
msgstr ""
"API basisdata Django sekarang meloloskan garis miring kebelakang yang "
"diberikan sebagai parameter permintaan. Jika anda mempunyai kode API "
"basisdata apapun yang cocok dengan garis miring kebelakang, dan dia bekerja "
"sebelumnya (meskipun kurang dari pelolosa), anda harus merubah kode anda ke "
"\"unescape\" garis miring satu tingkat."

msgid "For example, this used to work::"
msgstr "Sebagai contoh, ini berguna untuk bekerja::"

msgid "The above is now incorrect, and should be rewritten as::"
msgstr "Diatas sekarang tidak benar, dan harus di tulis kembali sebagai::"

msgid "Removed ENABLE_PSYCO setting"
msgstr "Pindahkan pengaturan ENABLE_PSYCO"

msgid ""
"The ``ENABLE_PSYCO`` setting no longer exists. If your settings file "
"includes ``ENABLE_PSYCO`` it will have no effect; to use Psyco_, we "
"recommend writing a middleware class to activate it."
msgstr ""
"Pengaturan ``ENABLE_PSYCO`` tidak lagi ada. Jika berkas pengaturan anda "
"termasuk ``ENABLE_PSYCO`` itu tidak akan mempunyai efek; untuk menggunakan "
"Psyco_, kami menganjurkan menulis kelas middleware untuk mengaktifkannya."

msgid "What's new in 0.96?"
msgstr "Apa yang baru di 0.96?"

msgid ""
"This revision represents over a thousand source commits and over four "
"hundred bug fixes, so we can't possibly catalog all the changes. Here, we "
"describe the most notable changes in this release."
msgstr ""
"Perbaikan ini mewakili lebih dari ribuan perbaikan dan lebih empat ratus "
"perbaikan kesalahan, jadi kami tidak mungkin mengkatalogkan semua perubahan. "
"Disini, kami menggambarkkan keterangan paling berubah di terbitan ini."

msgid "New forms library"
msgstr "Pustaka formulir baru"

msgid ""
"``django.newforms`` is Django's new form-handling library. It's a "
"replacement for ``django.forms``, the old form/manipulator/validation "
"framework.  Both APIs are available in 0.96, but over the next two releases "
"we plan to switch completely to the new forms system, and deprecate and "
"remove the old system."
msgstr ""
"``django.newforms`` adalah pustaka penanganan-formulir baru Django. Dia "
"pengganti untuk ``django.forms``, kerangka kerja form/manipulator/validation "
"lama. Kedua API tersedia dalam 0.96, tetapi diatas dua terbitan selanjutnya "
"kami berencana mengganti seluruhnya ke sistem formulir baru, dan "
"mengusangkan dan memindahkan sistem lama."

msgid "There are three elements to this transition:"
msgstr "Ada tiga unsur ke peralihan ini:"

msgid ""
"We've copied the current ``django.forms`` to ``django.oldforms``. This "
"allows you to upgrade your code *now* rather than waiting for the backwards-"
"incompatible change and rushing to fix your code after the fact.  Just "
"change your import statements like this::"
msgstr ""
"Kami menyalin ``django.forms`` saat ini ke ``django.oldforms``. Ini "
"mengizinkan anda meningkatkan kode anda *sekarang* daripada menunggu untuk "
"perubahan ketidakcocokan-kebelakang dan buru-buru memperbaiki kode anda "
"setelah fakta. Cukup rubah pernyataan impor anda seperti ini::"

msgid ""
"The next official release of Django will move the current ``django."
"newforms`` to ``django.forms``. This will be a backwards-incompatible "
"change, and anyone still using the old version of ``django.forms`` at that "
"time will need to change their import statements as described above."
msgstr ""
"Terbitan resmi selanjutnya dari Django akan memindahkan ``django.newforms`` "
"saat ini ke ``django.forms``. Ini akan menjadi perubahan kecocokan-"
"kebelakang, dan siapapun masih menggunakan versi lama dari ``django.forms`` "
"pada waktu itu akan butuh merubah pernyataan impor mereka seperti "
"digambarkan diatas."

msgid "The next release after that will completely remove ``django.oldforms``."
msgstr ""
"Terbitan selanjutnya setelahnya akan sepenuhnya memindahkan ``django."
"oldforms``."

msgid ""
"Although the ``newforms`` library will continue to evolve, it's ready for "
"use for most common cases. We recommend that anyone new to form handling "
"skip the old forms system and start with the new."
msgstr ""
"Meskipun pustaka ``newforms`` akan lanjut berkembang, dia siap untuk "
"digunakan untuk kebanyakan kasus umum. Kami menganjurkan bahwa seiapapun "
"baru terhadap penanganan formulir lewati sistem formulir baru dan mulai "
"dengan yang baru."

msgid ""
"For more information about ``django.newforms``, read the :doc:`newforms "
"documentation </topics/forms/index>`."
msgstr ""
"Untuk info lebih lanjut mengenai ``django.newforms``, baca :doc:`newforms "
"documentation </topics/forms/index>`."

msgid "URLconf improvements"
msgstr "Perbaikan URLconf "

msgid ""
"You can now use any callable as the callback in URLconfs (previously, only "
"strings that referred to callables were allowed). This allows a much more "
"natural use of URLconfs. For example, this URLconf::"
msgstr ""
"Anda dapat sekarang menggunakan callable apapun sebagai callback dalam "
"URLconf (sebelumnya, hanya deretan karakter yang mengacu pada dapat "
"dipanggil yang diizinkan). Ini mengizinkan lebih banyak penggunaan alami "
"dari URLconf. Sebagai contoh, ini URLconf::"

msgid "can now be rewritten as::"
msgstr "sekarang dapat ditulis kembali sebagai::"

msgid ""
"One useful application of this can be seen when using decorators; this "
"change allows you to apply decorators to views *in your URLconf*. Thus, you "
"can make a generic view require login very easily::"
msgstr ""
"Satu aplikasi berguna dari ini dapat dilihat ketika menggunakan decorator; "
"perubahan ini mengizinkan anda memberlakukan decorator untuk melihat *dalam "
"URLconf anda*. Dengan demikian, anda dapat membuat tampilan umum dibutuhkan "
"masuk sangat mudah::"

msgid ""
"Note that both syntaxes (strings and callables) are valid, and will continue "
"to be valid for the foreseeable future."
msgstr ""
"Catat bahwa kedua sintaksis (deretan karakter dan callable) adalah sah, dan "
"akan tetap sah untuk masa akan datang."

msgid "The test framework"
msgstr "Kerangka percobaan"

msgid ""
"Django now includes a test framework so you can start transmuting fear into "
"boredom (with apologies to Kent Beck). You can write tests based on :mod:"
"`doctest` or :mod:`unittest` and test your views with a simple test client."
msgstr ""
"Django sekarang menyertakan sebuah kerangka percobaan sehingga anda dapat "
"memulai mengubah ketakutan dan kebosanan (dengan permintaan maaf kepada Kent "
"Beck). Anda dapat menulis percobaan berdasaran pada :mod:`doctest` atau :mod:"
"`unittest` dan ujikan tampilan anda dengan percobaan klien sederhana."

msgid ""
"There is also new support for \"fixtures\" -- initial data, stored in any of "
"the supported :doc:`serialization formats </topics/serialization>`, that "
"will be loaded into your database at the start of your tests. This makes "
"testing with real data much easier."
msgstr ""
"Terdapat juga dukungan untuk \"fixtures\" -- data awal, disimpan pada :doc:"
"`serialisasi bentuk </topics/serialization>` yang didukung, yang akan dimuat "
"kedalam basisdata anda pada awal percobaan anda. Ini membuat percobaan "
"dengan data sesungguhnya lebih mudah."

msgid ""
"See :doc:`the testing documentation </topics/testing/index>` for the full "
"details."
msgstr ""
"Lihat :doc:`dokumentasi percobaan </topics/testing/index>` untuk rincian "
"penuh."

msgid "Improvements to the admin interface"
msgstr "Perbaikan terhadap antarmuka admin"

msgid ""
"A small change, but a very nice one: dedicated views for adding and updating "
"users have been added to the admin interface, so you no longer need to worry "
"about working with hashed passwords in the admin."
msgstr ""
"Sebuah perubahan kecil, tetapi sangat bagus: tampilan ditujukan untuk "
"menambahkan dan memperbaharui pengguna yang telah ditambahkan ke antarmuka "
"admin, sehingga anda tidak lagi khawatir tentang bekerja dengan sandi diacak "
"dalam admin."

msgid "Thanks"
msgstr "Terima kasih"

msgid ""
"Since 0.95, a number of people have stepped forward and taken a major new "
"role in Django's development. We'd like to thank these people for all their "
"hard work:"
msgstr ""
"Sejak 0,95, sejumlah orang telah melangkah maju dan mengambil peran baru "
"utama dalam pengembangan Django. Kami ingin berterima kasih kepada orang-"
"orang ini untuk semua kerja keras mereka:"

msgid ""
"Russell Keith-Magee and Malcolm Tredinnick for their major code "
"contributions. This release wouldn't have been possible without them."
msgstr ""
"Russell Keith-Magee dan Malcolm Tredinnick untuk sumbangan kode utama "
"mereka. Terbitan ini tidak akan mungkin tanpa mereka."

msgid ""
"Our new release manager, James Bennett, for his work in getting out 0.95.1, "
"0.96, and (hopefully) future release."
msgstr ""
"Pengelola terbitan baru kami, James Bennett, untuk pekerjaannya dalam "
"mengeluarkan 0.95.1, 0.96, dan (semoga) terbitan mendatang."

msgid ""
"Our ticket managers Chris Beaven (aka SmileyChris), Simon Greenhill, Michael "
"Radziej, and Gary Wilson. They agreed to take on the monumental task of "
"wrangling our tickets into nicely cataloged submission. Figuring out what to "
"work on is now about a million times easier; thanks again, guys."
msgstr ""
"Pengelola tiket kami Chris Beaven (dikenal sebagai SmileyChris), Simon "
"Greenhill, Michael Radziej, dan Gary Wilson. Mereka setuju untuk mengambil "
"tugas penting dari perselisihan tiket kami kedalam pengajuan katalog yang "
"baik. Mencari tahu apa yang dikerjakan adalah sekarang tentang sejuta waktu "
"lebih mudah; terima kasih kembali, teman-teman."

msgid ""
"Everyone who submitted a bug report, patch or ticket comment. We can't "
"possibly thank everyone by name -- over 200 developers submitted patches "
"that went into 0.96 -- but everyone who's contributed to Django is listed "
"in :source:`AUTHORS`."
msgstr ""

msgid "Django 1.0 release notes"
msgstr "Catatan terbitan Django 1.0"

msgid "Welcome to Django 1.0!"
msgstr "Selamat datang di Django 1.0!"

msgid ""
"We've been looking forward to this moment for over three years, and it's "
"finally here. Django 1.0 represents the largest milestone in Django's "
"development to date: a web framework that a group of perfectionists can "
"truly be proud of."
msgstr ""

msgid ""
"Django 1.0 represents over three years of community development as an Open "
"Source project. Django's received contributions from hundreds of developers, "
"been translated into fifty languages, and today is used by developers on "
"every continent and in every kind of job."
msgstr ""
"Django 1.0 mewakili lebih 3 tahun dari pengembangan komunitas sebagai proyek "
"Sumber Terbuka. Django menerima bantuan dari ribuan pengembang, telah "
"diterjemahkan kedalam 50 bahasa, dan hari ini digunakan oleh pengembang pada "
"setiap benua dan dalam setiap macam pekerjaan."

msgid ""
"An interesting historical note: when Django was first released in July 2005, "
"the initial released version of Django came from an internal repository at "
"revision number 8825. Django 1.0 represents revision 8961 of our public "
"repository. It seems fitting that our 1.0 release comes at the moment where "
"community contributions overtake those made privately."
msgstr ""
"Sebuah catatan riwayat menarik: ketika Django pertama kali terbit di Juli "
"2005, versi terbitan awal dari Django datang dari gudang internal pada angka "
"perbaikan 8825. Django 1.0 mewakili perbaikan 8961 dari gudang umum kami. "
"Dia kelihatannya sesuai bahwa terbitan 1.0 kami datang pada saat dimana "
"bantuan komunitas mengambil alih yang dibuat secara pribadi."

msgid "Stability and forwards-compatibility"
msgstr "Kestabilan dan kesesuaian kedepan"

msgid ""
"The release of Django 1.0 comes with a promise of API stability and forwards-"
"compatibility. In a nutshell, this means that code you develop against "
"Django 1.0 will continue to work against 1.1 unchanged, and you should need "
"to make only minor changes for any 1.X release."
msgstr ""
"Terbitan Django 1.0 dengan janji dari kestabilan API dan kesesuaian didepan. "
"dalam kulit kacang, ini berarti bahwa kode anda kembangkan terhadap Django "
"1.0 akan berlanjut bekerja terhadap 1.1 tidak dirubah, dan anda harus butuh "
"membuat hanya perubahan kecil untuk tiap terbitan 1.x."

msgid ""
"See the :doc:`API stability guide </misc/api-stability>` for full details."
msgstr ""
"Lihat :doc:`Panduan stabilitas API </misc/api-stability>` untuk rincian "
"penuh."

msgid ""
"Django 1.0 has a number of backwards-incompatible changes from Django 0.96. "
"If you have apps written against Django 0.96 that you need to port, see our "
"detailed porting guide:"
msgstr ""
"Django 1.0 mempunyai sejumlah perubahan bertentangan-kebelakang dari Django "
"0.96. Jika anda mempunyai aplikasi ditulis terhadap Django 0.96 yang anda "
"butuh menautkannya, lihat panduan tautan rincian kami:"

msgid ""
"A complete list of backwards-incompatible changes can be found at https://"
"code.djangoproject.com/wiki/BackwardsIncompatibleChanges."
msgstr ""
"Daftar lengkap dari perubahan bertentangan-kebelakang dapat ditemukan pada "
"https://code.djangoproject.com/wiki/BackwardsIncompatibleChanges."

msgid "What's new in Django 1.0"
msgstr "Apa yang baru di Django 1.0"

msgid "A *lot*!"
msgstr "*banyak*!"

msgid ""
"Since Django 0.96, we've made over 4,000 code commits, fixed more than 2,000 "
"bugs, and edited, added, or removed around 350,000 lines of code. We've also "
"added 40,000 lines of new documentation, and greatly improved what was "
"already there."
msgstr ""
"Sejak Django 0.96, kami telah membuat lebih 4,000 kode penyerahan, "
"memperbaiki lebih dari 2,000 kesalahan, dan menyunting, menambahkan, atau "
"memindahkan sekitar 350,000 baris kode. Kami juga telah menambahkan 40,000 "
"baris dari dokumentasi baru, dan secara hebat meningkatkan apa yang telah "
"ada disana."

msgid ""
"In fact, new documentation is one of our favorite features of Django 1.0, so "
"we might as well start there. First, there's a new documentation site:"
msgstr ""
"Sebenarnya, dokumentasi baru adalah satu dari fitur kesukaan kami dari "
"Django 1.0, jadi kami mungkin juga mulai disana. Pertama, terdapat situs "
"dokumentasi baru:"

msgid "https://docs.djangoproject.com/"
msgstr "https://docs.djangoproject.com/"

msgid ""
"The documentation has been greatly improved, cleaned up, and generally made "
"awesome. There's now dedicated search, indexes, and more."
msgstr ""
"Dokumentasi telah sangat ditingkatkan, dibersihkan, dan umumnya dibuat "
"mengagumkan. Sekarang terdapat pencarian khusus, indeks, dan lebih."

msgid ""
"We can't possibly document everything that's new in 1.0, but the "
"documentation will be your definitive guide. Anywhere you see something like:"
msgstr ""
"Kami tidak dapat mungkin mendokumentasikan semuanya yang baru dalam 1.0, "
"tetapi dokumentasi akan menjadi panduan pasti anda. Dimanapun anda melihat "
"sesuatu seperti:"

msgid "This feature is new in Django 1.0"
msgstr "Fitur ini baru di Django 1.0"

msgid "You'll know that you're looking at something new or changed."
msgstr "Anda akan mengetahui bahwa anda mencari sesuatu baru atau berubah."

msgid "The other major highlights of Django 1.0 are:"
msgstr "Sorotan utama lain dari Django 1.0 adalah:"

msgid "Refactored admin application"
msgstr ""

msgid ""
"The Django administrative interface (``django.contrib.admin``) has been "
"completely refactored; admin definitions are now completely decoupled from "
"model definitions (no more ``class Admin`` declaration in models!), "
"rewritten to use Django's new form-handling library (introduced in the 0.96 "
"release as ``django.newforms``, and now available as simply ``django."
"forms``) and redesigned with extensibility and customization in mind. Full "
"documentation for the admin application is available online in the official "
"Django documentation:"
msgstr ""
"Antarmuka administratif Django (``django.contrib.admin``) telah sepenuhnya "
"di refaktor; antarmuka admin sekarang dipisahkan dari pengertian model "
"(tidak ada lagi pernyataan ``class Admin`` dalam model!) penulisan kembali "
"untuk menggunakan pustaka penanganan formulir baru Django (diperkenalkan di "
"terbitan 0.96 sebagai ``django.newforms``, dan sekarang tersedia sebagai "
"cukup ``django.forms``) dan merancang kembali dengan perpanjangan dan "
"penyesuaian dalam pikiran. Dokumentasi penuh untuk aplikasi admin tersedia "
"daring di dokumentasi Django resmi:"

msgid "See the :doc:`admin reference </ref/contrib/admin/index>` for details"
msgstr "Lihat :doc:`acuan admin </ref/contrib/admin/index>` untuk rinci"

msgid "Improved Unicode handling"
msgstr "Penanganan perbaikan Unicode"

msgid ""
"Django's internals have been refactored to use Unicode throughout; this "
"drastically simplifies the task of dealing with non-Western-European content "
"and data in Django. Additionally, utility functions have been provided to "
"ease interoperability with third-party libraries and systems which may or "
"may not handle Unicode gracefully. Details are available in Django's Unicode-"
"handling documentation."
msgstr ""
"Internal Django telah di refaktor untuk menggunakan Unicode di seluruhnya; "
"ini secara drastis menyederhanakan tugas dari berhubungan dengan isi bukan "
"Eropa Barat dan data di Django. Sebagai tambahan, fungsi kegunaan telah "
"disediakan untuk memudahkan dapat digunakan dengan pustaka pihak ketiga dan "
"sistem yang mungkin tidak menangani Unicode anggun. Rincian tersedia di "
"dokumentasi penanganan Unicode Django."

msgid "See :doc:`/ref/unicode`."
msgstr "Lihat :doc:`/ref/unicode`."

msgid "An improved ORM"
msgstr "ORM yang diperbaiki"

msgid ""
"Django's object-relational mapper -- the component which provides the "
"mapping between Django model classes and your database, and which mediates "
"your database queries -- has been dramatically improved by a massive "
"refactoring. For most users of Django this is backwards-compatible; the "
"public-facing API for database querying underwent a few minor changes, but "
"most of the updates took place in the ORM's internals. A guide to the "
"changes, including backwards-incompatible modifications and mentions of new "
"features opened up by this refactoring, is `available on the Django wiki`__."
msgstr ""
"Pemeta hubungan obyek Django -- komponen yang menyediakanpemetaan diantara "
"kelas-kelas model Django dan basisdata anda, dan yang menengahi permintaan "
"basisdata anda -- telah secara dramatis diperbaiki oleh refaktor besar-"
"besaran. Untuk kebanyakan pengguna Django ini adakah kesesuaian kebelakangl "
"API muka-umum untuk permintaan basisdata menjalani seikit kecil perubahan, "
"tetapi kebanyakan dari perbaharuan mengambil tempat di internal ORM. Panduan "
"pada perubahan berdasarkan refaktor ini, adalah `available on the Django "
"wiki`__."

msgid "Automatic escaping of template variables"
msgstr "Pelolosan otomatis dari variabel cetakan"

msgid ""
"To provide improved security against cross-site scripting (XSS) "
"vulnerabilities, Django's template system now automatically escapes the "
"output of variables. This behavior is configurable, and allows both "
"variables and larger template constructs to be marked as safe (requiring no "
"escaping) or unsafe (requiring escaping). A full guide to this feature is in "
"the documentation for the :ttag:`autoescape` tag."
msgstr ""
"Untuk menyediakan perbaikan keamanan terhadap kerentanan cross-site "
"scripting (XSS), Sistem cetakan Django sekarang otomatis meloloskan keluaran "
"dari variabel. Perilaku ini dapat dikonfigurasi, dan mengizinkan kedua "
"variabel dan bangunan cetakan lebih besar untuk ditandai sebagai aman (tidak "
"membutuhkan pelolosan) atau tidak aman (membutuhkan pelolosan). Panduan "
"penuh pada fitur ini di dokumentasi untuk etiket :ttag:`autoescape`."

msgid "``django.contrib.gis`` (GeoDjango)"
msgstr "``django.contrib.gis`` (GeoDjango)"

msgid ""
"A project over a year in the making, this adds world-class GIS (`Geographic "
"Information Systems`_) support to Django, in the form of a ``contrib`` "
"application. Its documentation is currently being maintained externally, and "
"will be merged into the main Django documentation shortly. Huge thanks go to "
"Justin Bronn, Jeremy Dunck, Brett Hoerner and Travis Pinney for their "
"efforts in creating and completing this feature."
msgstr ""
"Sebuah proyek lebih dari setahun dalam membuat, ini menambahkan dukungan GIS "
"(`Geographic Information Systems`_) kelas dunia pada Django, dalam formulir "
"dari sebuah aplikasi ``contrib``. Dokumentasinya saat ini sedang dirawat "
"secara ekternal, dan akan digabungkan kedalam dokumentasi Django segera. "
"Terima kasih sebesar-besarnya ditujukan ke Justin Bronn, Jeremy Dunck, Brett "
"Hoerner dan Travis Pinney dalam membuat dan melengkapi fitur ini."

msgid "See :doc:`GeoDjango </ref/contrib/gis/index>` for details."
msgstr ""

msgid "Pluggable file storage"
msgstr "Penyimpanan berkas dapat ditanam"

msgid ""
"Django's built-in ``FileField`` and ``ImageField`` now can take advantage of "
"pluggable file-storage backends, allowing extensive customization of where "
"and how uploaded files get stored by Django. For details, see :doc:`the "
"files documentation </topics/files>`; big thanks go to Marty Alchin for "
"putting in the hard work to get this completed."
msgstr ""
"``FileField`` dan ``ImageField`` siap pakai Django sekarang dapat mengambil "
"keuntungan dari backend penimpanan berkas dapat ditanam, mengizinkan "
"penyesuaian luas dari dimana dan bagaimana mengunggah berkas-berkas disimpan "
"oleh Django. Untuk rincian, lihat :doc:`the files documentation </topics/"
"files>`; terima kasih besar ditujukan kepada Marty Alchin untuk menaruh di "
"pekerjaan keras untuk mendapatkan ini selesai."

msgid "Jython compatibility"
msgstr "Kesesuaian Jython"

msgid ""
"Thanks to a lot of work from Leo Soto during a Google Summer of Code "
"project, Django's codebase has been refactored to remove incompatibilities "
"with `Jython`_, an implementation of Python written in Java, which runs "
"Python code on the Java Virtual Machine. Django is now compatible with the "
"forthcoming Jython 2.5 release."
msgstr ""
"Terima kasih kepada banyak kerja dari Leo Soto selama Google Summer of Code "
"project, basiskode Django telah direfaktor untuk memindahkan ketidaksesuaian "
"dengan ``Jython`_, sebuah penerapan dari Python ditulis dalam Java, yang "
"menjalankan kode Python pada Java Virtual Machine. Django sekarang cocok "
"dengan terbitan Jython 2.5 yang akan datang."

msgid "Generic relations in forms and admin"
msgstr "Hubungan umum di formulir dan admin"

msgid ""
"Classes are now included in ``django.contrib.contenttypes`` which can be "
"used to support generic relations in both the admin interface and in end-"
"user forms. See :ref:`the documentation for generic relations <generic-"
"relations>` for details."
msgstr ""
"Kelas-kelas sekarang disertakan dalam ``django.contrib.contenttypes`` yang "
"dapat digunakan untuk mendukung hubungan umum dalam kedua antarmuka admin "
"dan formulir pengguna akhir. Lihat :ref:`the documentation for generic "
"relations <generic-relations>` untuk rincian."

msgid "``INSERT``/``UPDATE`` distinction"
msgstr "Perbedaan ``INSERT``/``UPDATE``"

msgid ""
"Although Django's default behavior of having a model's ``save()`` method "
"automatically determine whether to perform an ``INSERT`` or an ``UPDATE`` at "
"the SQL level is suitable for the majority of cases, there are occasional "
"situations where forcing one or the other is useful. As a result, models can "
"now support an additional parameter to ``save()`` which can force a specific "
"operation."
msgstr ""
"Meskipun perilaku awal Django dari memiliki sebuah metode ``save()`` model "
"otomatis menentukan apakah untuk melakukan sebuah ``INSERT`` atau sebuah "
"``UPDATE`` pada tingkat SQL adalah cocok untuk mayoritas dari kasus, ada "
"keadaan kadang-kadang dimana memaksa satu atau lainnya adalah berguna. "
"Sebagai hasil, mode sekarang dapat mendukung parameter tambahan pada "
"``save()`` yang dapat memaksa tindakan khusus."

msgid "See :ref:`ref-models-force-insert` for details."
msgstr "Lihat :ref:`ref-models-force-insert` untuk rincian."

msgid "Split ``CacheMiddleware``"
msgstr "Pisah ``CacheMiddleware``"

msgid ""
"Django's ``CacheMiddleware`` has been split into three classes: "
"``CacheMiddleware`` itself still exists and retains all of its previous "
"functionality, but it is now built from two separate middleware classes "
"which handle the two parts of caching (inserting into and reading from the "
"cache) separately, offering additional flexibility for situations where "
"combining these functions into a single middleware posed problems."
msgstr ""
"``CacheMiddleware`` Django telah dipisah kedalam tiga kelas-kelas: "
"``CacheMiddleware`` itu sendiri masih ada dan menyimpan semua kegunaan "
"sebelumnya, tetapi itu sekarang dibangun dari dua middleware kelas terpisah "
"yang menangani dua bagian dari penyimpanan sementara(memasukkan kedalam dan "
"membaca dari penyimpanan) secara terpisah, menawarkan tambahan fleksibel "
"untuk keadaan dimana menggabungkan fungsi ini kedalam middleware tunggal "
"menjadi masalah."

msgid ""
"Full details, including updated notes on appropriate use, are in :doc:`the "
"caching documentation </topics/cache>`."
msgstr ""
"Rincian penuh, termasuk catatan terbaru pada penggunaan sesuai, berada di :"
"doc:`the caching documentation </topics/cache>`. "

msgid "Refactored ``django.contrib.comments``"
msgstr "Refaktor ``django.contrib.comments``"

msgid ""
"As part of a Google Summer of Code project, Thejaswi Puthraya carried out a "
"major rewrite and refactoring of Django's bundled comment system, greatly "
"increasing its flexibility and customizability."
msgstr ""
"Sebagai bagian dari Google Summer dari Code project, Thejaswi Puthraya "
"membawa penulisan kembali utama dan refaktor sistem komentar gabungan "
"Django, sangat meningkatkan fleksibilitas dan penyesuaian."

msgid "Removal of deprecated features"
msgstr "Pemindahan fitur usang"

msgid ""
"A number of features and methods which had previously been marked as "
"deprecated, and which were scheduled for removal prior to the 1.0 release, "
"are no longer present in Django. These include imports of the form library "
"from ``django.newforms`` (now located simply at ``django.forms``), the "
"``form_for_model`` and ``form_for_instance`` helper functions (which have "
"been replaced by ``ModelForm``) and a number of deprecated features which "
"were replaced by the dispatcher, file-uploading and file-storage refactoring "
"introduced in the Django 1.0 alpha releases."
msgstr ""

msgid "Known issues"
msgstr "Masalah yang diketahui"

msgid ""
"We've done our best to make Django 1.0 as solid as possible, but "
"unfortunately there are a couple of issues that we know about in the release."
msgstr ""
"Kami telah melakukan terbaik kami untuk membuat Django 1.0 sekokoh mungkin, "
"tetapi sayangnya ada sepasang masalah yang kami ketahui di terbitan."

msgid "Multi-table model inheritance with ``to_field``"
msgstr "Warisan model banyak-tabel dengan ``to_field``"

msgid ""
"If you're using :ref:`multiple table model inheritance <multi-table-"
"inheritance>`, be aware of this caveat: child models using a custom "
"``parent_link`` and ``to_field`` will cause database integrity errors. A set "
"of models like the following are **not valid**::"
msgstr ""
"Jika anda sedang menggunakan :ref:`multiple table model inheritance <multi-"
"table-inheritance>`, sadarilah dari surat keberatan ini: model anak "
"menggunakan penyesuaian ``parent_link`` dan ``to_field`` akan menyebabkan "
"kesalahan kesatuan basisdata. Sekumpulan model seperti berikut adalah "
"**tidak sah**::"

msgid "This bug will be fixed in the next release of Django."
msgstr "Kesalahan ini akan diperbaiki di terbitan selanjutnya dari Django."

msgid "Caveats with support of certain databases"
msgstr "Peringatan dengan dukungan basisdata tertentu"

msgid ""
"Django attempts to support as many features as possible on all database "
"backends. However, not all database backends are alike, and in particular "
"many of the supported database differ greatly from version to version. It's "
"a good idea to checkout our :doc:`notes on supported database </ref/"
"databases>`:"
msgstr ""
"Django berusaha mendukung sebanyak fitur yang mungkin pada semua backend "
"basisdata. Bagaimanapun, tidak semua backend basisdata sama, dan dalam "
"tertentu banyak dari basisdata didukung sangat beda dari versi ke versi. Itu "
"adalah ide bagus untuk memeriksa :doc:`notes on supported database </ref/"
"databases>` kami:"

msgid ":ref:`mysql-notes`"
msgstr ":ref:`mysql-notes`"

msgid ":ref:`sqlite-notes`"
msgstr ":ref:`sqlite-notes`"

msgid ":ref:`oracle-notes`"
msgstr ":ref:`oracle-notes`"

msgid "Porting your apps from Django 0.96 to 1.0"
msgstr "Menghubungkan aplikasi anda dari Django 0.96 ke 1.0"

msgid "Django 1.0 breaks compatibility with 0.96 in some areas."
msgstr "Django 1.0 memutus kesesuaian dengan 0.96 di beberapa kawasan."

msgid ""
"This guide will help you port 0.96 projects and apps to 1.0. The first part "
"of this document includes the common changes needed to run with 1.0. If "
"after going through the first part your code still breaks, check the section "
"`Less-common Changes`_ for a list of a bunch of less-common compatibility "
"issues."
msgstr ""
"Panduan ini akan membantu anda menghubungkan proyek 0.96 dan apliaksi ke "
"1.0. Bagian pertama dari dokumen ini termasuk perubahan umum dibutuhkan "
"untuk berjalan dengan 1.0. Jika setelah melalui bagian pertama kode anda "
"masih rusak, periksa bagian `Less-common Changes`_ untuk daftar ikatan "
"masalah kesesuaian yang kurang umum."

msgid ""
"The :doc:`1.0 release notes </releases/1.0>`. That document explains the new "
"features in 1.0 more deeply; the porting guide is more concerned with "
"helping you quickly update your code."
msgstr ""
":doc:`1.0 release notes </releases/1.0>`. Dokumen itu menjelaskan fitur-"
"fitur baru di 1.0 lebih dalam; panduan menghubungkan lebih diperhatikan "
"dengan bantuan anda dengan cepat memperbaharui kode anda."

msgid "Common changes"
msgstr "Perubahan umum"

msgid ""
"This section describes the changes between 0.96 and 1.0 that most users will "
"need to make."
msgstr ""
"Bagian ini menggambarkan perubahan diantara 0.96 dan 1.0 yang paling "
"pengguna butuhkan untuk dibuat."

msgid "Use Unicode"
msgstr "Gunakan Unicode"

msgid ""
"Change string literals (``'foo'``) into Unicode literals (``u'foo'``). "
"Django now uses Unicode strings throughout. In most places, raw strings will "
"continue to work, but updating to use Unicode literals will prevent some "
"obscure problems."
msgstr ""
"Merubah harfiah deretan karakter (``'foo'``) menjadi harfiah Unicode "
"(``u'foo'``). Django sekarang menggunakan deretan karakter Unicode "
"seluruhnya. Di kebanyakan tempat, deretan karakter mentah akan lanjut "
"bekerja, tetapi memperbaharui untuk menggunakan harfiah Unicode akan "
"mencegah pengaburan beberapa masalah."

msgid "See :doc:`/ref/unicode` for full details."
msgstr "Lihat :doc:`/ref/unicode` untuk rincian penuh."

msgid "Models"
msgstr "Model"

msgid "Common changes to your models file:"
msgstr "Perubahan umum ke berkas model anda:"

msgid "Rename ``maxlength`` to ``max_length``"
msgstr "Namai kembali ``maxlength`` ke ``max_length``"

msgid ""
"Rename your ``maxlength`` argument to ``max_length`` (this was changed to be "
"consistent with form fields):"
msgstr ""
"Namai kembali argumen ``maxlength`` anda ke ``max_length`` (ini dirubah agar "
"selaras dengan bidang-bidang formulir):"

msgid "Replace ``__str__`` with ``__unicode__``"
msgstr "Ganti ``__str__`` dengan ``__unicode__``"

msgid ""
"Replace your model's ``__str__`` function with a ``__unicode__`` method, and "
"make sure you `use Unicode`_ (``u'foo'``) in that method."
msgstr ""
"Ganti fungsi ``__str__`` model anda dengan metode ``__unicode__``, dan "
"pastikan anda `use Unicode`_ (``u'foo'``) di metode itu."

msgid "Remove ``prepopulated_from``"
msgstr "Pindahkan ``prepopulated_from``"

msgid ""
"Remove the ``prepopulated_from`` argument on model fields. It's no longer "
"valid and has been moved to the ``ModelAdmin`` class in ``admin.py``. See "
"`the admin`_, below, for more details about changes to the admin."
msgstr ""
"Pindahkan argumen ``prepopulated_from`` pada bidang model. Itu tidak lagi "
"sah dan telah dipindahkan ke kelas ``ModelAdmin`` di ``admin.py``. Lihat "
"`the admin`_, dibawah ini, untuk rincian lebih tentang dirubah ke admin."

msgid "Remove ``core``"
msgstr "Pindahkan ``core``"

msgid ""
"Remove the ``core`` argument from your model fields. It is no longer "
"necessary, since the equivalent functionality (part of :ref:`inline editing "
"<admin-inlines>`) is handled differently by the admin interface now. You "
"don't have to worry about inline editing until you get to `the admin`_ "
"section, below. For now, remove all references to ``core``."
msgstr ""
"Pindahkan argumen ``core`` dari bidang model anda. itu tidak lagi "
"dibutuhkan, sejak kegunaan yang setara (bagian dari :ref:`inline editing "
"<admin-inlines>`) ditangani dengan berbeda oleh antarmuka admin sekarang. "
"Anda tidak harus khawatir tentang penyuntingan berderet sampai anda menuju "
"bagian `the admin`_, dibawah. Untuk sekarang, pindahkan semua acuan ke "
"``core``."

msgid "Replace ``class Admin:`` with ``admin.py``"
msgstr "Ganti ``class Admin:`` dengan ``admin.py``"

msgid ""
"Remove all your inner ``class Admin`` declarations from your models. They "
"won't break anything if you leave them, but they also won't do anything. To "
"register apps with the admin you'll move those declarations to an ``admin."
"py`` file; see `the admin`_ below for more details."
msgstr ""
"Pindahkan semua pernyataan ``class Admin`` sebelah dalam dari model anda. "
"Mereka tidak merusak apapun jika anda meninggalkan mereka, tetapi mereka "
"juga tidak akan melakukan apapun. Untuk mendaftarkan aplikasi dengan admin "
"anda akan pindahkan pernyataan itu ke berkas ``admin.py``; lihat `the "
"admin`_ dibawah untuk lebih rinci."

msgid ""
"A contributor to djangosnippets__ has written a script that'll `scan your "
"models.py and generate a corresponding admin.py`__."
msgstr ""
"Seorang penyumbang pada djangosnippets__ telah menuli skembali sebuah "
"tulisan yang akan `scan your models.py and generate a corresponding admin."
"py`__."

msgid "Example"
msgstr "Contoh"

msgid ""
"Below is an example ``models.py`` file with all the changes you'll need to "
"make:"
msgstr ""
"DIbawah ini adalah sebuah contoh berkas ``models.py`` dengan semua perubahan "
"anda ingin buat:"

msgid "Old (0.96) ``models.py``::"
msgstr "Lama (0.96) ``models.py``::"

msgid "New (1.0) ``models.py``::"
msgstr "Baru (1.0) ``models.py``::"

msgid "New (1.0) ``admin.py``::"
msgstr "Baru (1.0) ``admin.py``::"

msgid "The Admin"
msgstr "Admin"

msgid ""
"One of the biggest changes in 1.0 is the new admin. The Django "
"administrative interface (``django.contrib.admin``) has been completely "
"refactored; admin definitions are now completely decoupled from model "
"definitions, the framework has been rewritten to use Django's new form-"
"handling library and redesigned with extensibility and customization in mind."
msgstr ""
"Satu dari perubahan terbesar di 1.0 adalah admin baru. Antarmuka "
"administratif Django (``django.contrib.admin``) telah sepenuhnya di "
"refaktor; pengertian admin sekarang sepenuhnya dipisahkan dari pengertian "
"model, kerangka kerja telah ditulis kembali untuk menggunakan pustaka "
"penanganan formulir baru Django dan dirancang kembali dengan perpanjangan "
"dan penyesuaian dalam pikiran."

msgid ""
"Practically, this means you'll need to rewrite all of your ``class Admin`` "
"declarations. You've already seen in `models`_ above how to replace your "
"``class Admin`` with an ``admin.site.register()`` call in an ``admin.py`` "
"file. Below are some more details on how to rewrite that ``Admin`` "
"declaration into the new syntax."
msgstr ""

msgid "Use new inline syntax"
msgstr "Gunakan sintaksis berderet yang baru"

msgid ""
"The new ``edit_inline`` options have all been moved to ``admin.py``. Here's "
"an example:"
msgstr ""
"Pilihan ``edit_inline`` baru semua telah dipindahkan ke ``admin.py``. Ini "
"adalah contoh:"

msgid "Old (0.96)::"
msgstr "Lama (0.96)::"

msgid "New (1.0)::"
msgstr "Baru (1.0)::"

msgid "See :ref:`admin-inlines` for more details."
msgstr "Lihat :ref:`admin-inlines` untuk rinci."

msgid "Simplify ``fields``, or use ``fieldsets``"
msgstr "Sederhanakan ``fields``, atau gunakan ``fieldsets``"

msgid ""
"The old ``fields`` syntax was quite confusing, and has been simplified. The "
"old syntax still works, but you'll need to use ``fieldsets`` instead."
msgstr ""
"Sintaksis ``fields`` lama sangat membingungkan, dan telah disederhanakan. "
"Sintaksis lama masih bekerja, tetapi anda akan butuh menggunakan "
"``fieldsets`` sebagai gantinya."

msgid ""
"More detailed information about the changes and the reasons behind them can "
"be found on the `NewformsAdminBranch wiki page`__"
msgstr ""
"Informasi lebih rinci mengenai perubahan dan alasan dibelakang mereka dapat "
"ditemukan pada `NewformsAdminBranch wiki page`__"

msgid ""
"The new admin comes with a ton of new features; you can read about them in "
"the :doc:`admin documentation </ref/contrib/admin/index>`."
msgstr ""
"Admin baru datang dengan satu ton fitur baru; anda dapat membaca tentang "
"mereka di :doc:`admin documentation </ref/contrib/admin/index>`."

msgid "URLs"
msgstr "URL"

msgid "Update your root ``urls.py``"
msgstr "Perbaharui akar ``urls.py`` anda."

msgid ""
"If you're using the admin site, you need to update your root ``urls.py``."
msgstr ""
"Jika anda menggunakan situs admin, anda butuh memperbaharui akar ``urls.py`` "
"anda."

msgid "Old (0.96) ``urls.py``::"
msgstr "Lama (0.96) ``urls.py``::"

msgid "New (1.0) ``urls.py``::"
msgstr "Baru (1.0) ``urls.py``::"

msgid "Views"
msgstr "View"

msgid "Use ``django.forms`` instead of ``newforms``"
msgstr "Gunakan ``django.forms`` sebagai gantinya ``newforms``"

msgid ""
"Replace ``django.newforms`` with ``django.forms`` -- Django 1.0 renamed the "
"``newforms`` module (introduced in 0.96) to plain old ``forms``. The "
"``oldforms`` module was also removed."
msgstr ""
"Ganti ``django.newforms`` dengan ``django.forms`` -- Django 1.0 dinamai "
"kembali modul ``newforms`` (diperkenalkan di 0.96) untuk ``forms`` lama "
"kosong. Modul ``oldforms`` juga dipindahkan."

msgid ""
"If you're already using the ``newforms`` library, and you used our "
"recommended ``import`` statement syntax, all you have to do is change your "
"import statements."
msgstr ""
"Jika anda sudah menggunakan pustaka ``newforms``, dan anda menggunakan "
"anjuran kami sintaksis pernyataan ``import``, semua anda harus lakukan "
"adalah merubah pernyataan impor anda."

msgid "Old::"
msgstr "Lama::"

msgid "New::"
msgstr "Baru::"

msgid ""
"If you're using the old forms system (formerly known as ``django.forms`` and "
"``django.oldforms``), you'll have to rewrite your forms. A good place to "
"start is the :doc:`forms documentation </topics/forms/index>`"
msgstr ""
"Jika anda sedang menggunakan sistem formulir lama (dahulu dikenal sebagai "
"``django.forms`` dan ``django.oldforms``), anda akan harus menuli skembali "
"formulir anda. Tempat bagus untuk memulai adalah :doc:`forms documentation </"
"topics/forms/index>`"

msgid "Handle uploaded files using the new API"
msgstr "Menangani berkas terunggah menggunakan API baru"

msgid ""
"Replace use of uploaded files -- that is, entries in ``request.FILES`` -- as "
"simple dictionaries with the new :class:`~django.core.files.uploadedfile."
"UploadedFile`. The old dictionary syntax no longer works."
msgstr ""
"Rubah penggunaan berkas-berkas terunggah -- yaitu, masukan di ``request."
"FILES`` -- sebagai kamus sederhana dengan :class:`~django.core.files."
"uploadedfile.UploadedFile` baru. Sintaksis kamus lama tidak lagi bekerja."

msgid "Thus, in a view like::"
msgstr "Jadi, dalam tampilan seperti::"

msgid "...you'd need to make the following changes:"
msgstr "...anda butuh membuat perubahan berikut:"

msgid "Old (0.96)"
msgstr "Lama (0.96)"

msgid "New (1.0)"
msgstr "Baru (1.0)"

msgid "``f['content']``"
msgstr "``f['content']``"

msgid "``f.read()``"
msgstr "``f.read()``"

msgid "``f['filename']``"
msgstr "``f['filename']``"

msgid "``f.name``"
msgstr "``f.name``"

msgid "``f['content-type']``"
msgstr "``f['content-type']``"

msgid "``f.content_type``"
msgstr "``f.content_type``"

msgid "Work with file fields using the new API"
msgstr "Bekerja dengan bidang berkas menggunakan API baru"

msgid ""
"The internal implementation of :class:`django.db.models.FileField` have "
"changed. A visible result of this is that the way you access special "
"attributes (URL, filename, image size, etc.) of these model fields has "
"changed. You will need to make the following changes, assuming your model's :"
"class:`~django.db.models.FileField` is called ``myfile``:"
msgstr ""
"Penerapan internal dari :class:`django.db.models.FileField` telah berubah. "
"Hasil nampak dari ini adalah bahwa cara anda mengakses atribut khusus (URL, "
"berkas nama, ukuran gambar, dll.) dari bidang model ini telah berubah. Anda "
"akan butuh membuat perubahan berikut, menganggap :class:`~django.db.models."
"FileField` model anda dipanggil ``myfile``:"

msgid "``myfile.get_content_filename()``"
msgstr "``myfile.get_content_filename()``"

msgid "``myfile.content.path``"
msgstr "``myfile.content.path``"

msgid "``myfile.get_content_url()``"
msgstr "``myfile.get_content_url()``"

msgid "``myfile.content.url``"
msgstr "``myfile.content.url``"

msgid "``myfile.get_content_size()``"
msgstr "``myfile.get_content_size()``"

msgid "``myfile.content.size``"
msgstr "``myfile.content.size``"

msgid "``myfile.save_content_file()``"
msgstr "``myfile.save_content_file()``"

msgid "``myfile.content.save()``"
msgstr "``myfile.content.save()``"

msgid "``myfile.get_content_width()``"
msgstr "``myfile.get_content_width()``"

msgid "``myfile.content.width``"
msgstr "``myfile.content.width``"

msgid "``myfile.get_content_height()``"
msgstr "``myfile.get_content_height()``"

msgid "``myfile.content.height``"
msgstr "``myfile.content.height``"

msgid ""
"Note that the ``width`` and ``height`` attributes only make sense for :class:"
"`~django.db.models.ImageField` fields. More details can be found in the :doc:"
"`model API </ref/models/fields>` documentation."
msgstr ""
"Catat bahwa atribut ``width`` dan ``height`` hanya masuk akal untuk bidang :"
"class:`~django.db.models.ImageField`. Rincian lebih dapat ditemukan di "
"dokumentasi :doc:`model API </ref/models/fields>`."

msgid "Use ``Paginator`` instead of ``ObjectPaginator``"
msgstr "Gunakan ``Paginator`` daripada ``ObjectPaginator``"

msgid ""
"The ``ObjectPaginator`` in 0.96 has been removed and replaced with an "
"improved version, :class:`django.core.paginator.Paginator`."
msgstr ""
"``ObjectPaginator`` di 0.96 telah dipindahkan dan diganti dengan versi "
"diperbaiki, :class:`django.core.paginator.Paginator`."

msgid "Templates"
msgstr "Templat"

msgid "Learn to love autoescaping"
msgstr "Belajar mencintai pelolosan otomatis"

msgid ""
"By default, the template system now automatically HTML-escapes the output of "
"every variable. To learn more, see :ref:`automatic-html-escaping`."
msgstr ""
"Secara awal, sistem cetakan sekarang otomatis meloloskan HTML keluaran "
"setiap variabel. Untuk mempelajari lebih, lihat :ref:`automatic-html-"
"escaping`."

msgid ""
"To disable auto-escaping for an individual variable, use the :tfilter:`safe` "
"filter:"
msgstr ""
"Untuk meniadakan pelolosan otomatis untuk variabel tersendiri, gunakan :"
"tfilter:`safe` filter:"

msgid ""
"To disable auto-escaping for an entire template, wrap the template (or just "
"a particular section of the template) in the :ttag:`autoescape` tag:"
msgstr ""
"Untuk meniadakan pelolosan otomatis untuk keseluruhan cetakan, bungkus "
"cetakan (atau cukup bagian tertentu dari cetakan) di etiket :ttag:"
"`autoescape`: "

msgid "Less-common changes"
msgstr "Perubahan kurang umum"

msgid ""
"The following changes are smaller, more localized changes. They should only "
"affect more advanced users, but it's probably worth reading through the list "
"and checking your code for these things."
msgstr ""
"Perubahan berikut lebih kecil, lebih perubahan lokal. Mereka hanya "
"berpengaruh lebih pengguna lanjutan, tetapi itu mungkin bernilai baik "
"membaca melalui daftar dan memeriksa kode anda untuk hal-hal ini."

msgid "Signals"
msgstr "Sinyal"

msgid "Add ``**kwargs`` to any registered signal handlers."
msgstr "Tambah ``**kwargs`` pada setiap penangan sinyal terdaftar."

msgid ""
"Connect, disconnect, and send signals via methods on the :class:`~django."
"dispatch.Signal` object instead of through module methods in ``django."
"dispatch.dispatcher``."
msgstr ""
"Hubungkan, putuskan, dan kirim sinyal melalui metode pada obyek :class:"
"`~django.dispatch.Signal` daripada melalui modul metode di ``django.dispatch."
"dispatcher``."

msgid ""
"Remove any use of the ``Anonymous`` and ``Any`` sender options; they no "
"longer exist. You can still receive signals sent by any sender by using "
"``sender=None``"
msgstr ""
"Pindahkan tiap penggunaan pilihan pengirim ``Anonymous`` dan ``Any``; mereka "
"tidak lagi ada. Anda masih dapat menerima sinyal dikirim oleh pengirim "
"dengan menggunakan ``sender=None``"

msgid ""
"Make any custom signals you've declared into instances of :class:`django."
"dispatch.Signal` instead of anonymous objects."
msgstr ""
"Buat sinyal penyesuaian apa saja anda telah nyatakan kedalam instance dari :"
"class:`django.dispatch.Signal` sebagai ganti dari obyek anonim."

msgid "Here's quick summary of the code changes you'll need to make:"
msgstr "Berikut rekap dari perubahan kode yang perlu anda lakukan:"

msgid "``def callback(sender)``"
msgstr "``def callback(sender)``"

msgid "``def callback(sender, **kwargs)``"
msgstr "``def callback(sender, **kwargs)``"

msgid "``sig = object()``"
msgstr "``sig = object()``"

msgid "``sig = django.dispatch.Signal()``"
msgstr "``sig = django.dispatch.Signal()``"

msgid "``dispatcher.connect(callback, sig)``"
msgstr "``dispatcher.connect(callback, sig)``"

msgid "``sig.connect(callback)``"
msgstr "``sig.connect(callback)``"

msgid "``dispatcher.send(sig, sender)``"
msgstr "``dispatcher.send(sig, sender)``"

msgid "``sig.send(sender)``"
msgstr "``sig.send(sender)``"

msgid "``dispatcher.connect(callback, sig, sender=Any)``"
msgstr "``dispatcher.connect(callback, sig, sender=Any)``"

msgid "``sig.connect(callback, sender=None)``"
msgstr "``sig.connect(callback, sender=None)``"

msgid "Comments"
msgstr "Komentar"

msgid ""
"If you were using Django 0.96's ``django.contrib.comments`` app, you'll need "
"to upgrade to the new comments app introduced in 1.0. See the upgrade guide "
"for details."
msgstr ""
"Jika anda menggunakan aplikasi ``django.contrib.comments`` Django 0.96, anda "
"akan btuuh meningkatkan ke aplikasi komentar baru diperkenalkan di 1.0. "
"Lihat panduan peningkatan untuk rincian."

msgid "Template tags"
msgstr "Tag templat"

msgid ":ttag:`spaceless` tag"
msgstr "Etiket :ttag:`spaceless`"

msgid ""
"The ``spaceless`` template tag now removes *all* spaces between HTML tags, "
"instead of preserving a single space."
msgstr ""
"Template tag ``spaceless`` sekarang menghapus *semua* spasi diantara tag "
"HTML, alih-alih mempertahankan satu buah spasi."

msgid "Local flavors"
msgstr "Rasa lokal"

msgid "U.S. local flavor"
msgstr "Rasa lokal U.S"

msgid ""
"``django.contrib.localflavor.usa`` has been renamed to ``django.contrib."
"localflavor.us``. This change was made to match the naming scheme of other "
"local flavors. To migrate your code, all you need to do is change the "
"imports."
msgstr ""
"``django.contrib.localflavor.usa`` telah dinamai kembali ke ``django.contrib."
"localflavor.us``. Perubahan ini dibuat untuk mencocokan penamaan skema dari "
"rasa lokal lainnya. Untuk memindahkan kode anda, anda yang butuh lakukan "
"adalah merubah impor."

msgid "Sessions"
msgstr "Sesi"

msgid "Getting a new session key"
msgstr "Mendapatkan kunci sesi baru"

msgid ""
"``SessionBase.get_new_session_key()`` has been renamed to "
"``_get_new_session_key()``. ``get_new_session_object()`` no longer exists."
msgstr ""
"``SessionBase.get_new_session_key()`` telah dinamai kembali menjadi "
"``_get_new_session_key()``. ``get_new_session_object()`` tidak lagi ada."

msgid "Fixtures"
msgstr "Perlengkapan"

msgid "Loading a row no longer calls ``save()``"
msgstr "Memuat sebuah baris yang tidak memanggil ``save()``"

msgid ""
"Previously, loading a row automatically ran the model's ``save()`` method. "
"This is no longer the case, so any fields (for example: timestamps) that "
"were auto-populated by a ``save()`` now need explicit values in any fixture."
msgstr ""
"Sebelumnya, memuat sebuah baris secara otomatis menjalankan metode "
"``save()`` model. Ini bukan lagi kasus, jadi tiap bidang (sebagai contoh: "
"timestamp) yang dikumpulkan otomatis oleh ``save()`` sekarang butuh nilai "
"eksplisit di tiap perlengkapan tetap."

msgid "Settings"
msgstr "Pengaturan"

msgid "Better exceptions"
msgstr "Pengecualian terbaik"

msgid ""
"The old :exc:`EnvironmentError` has split into an :exc:`ImportError` when "
"Django fails to find the settings module and a :exc:`RuntimeError` when you "
"try to reconfigure settings after having already used them."
msgstr ""
":exc:`EnvironmentError` lama telah dipisah menjadi :exc:`ImportError` ketika "
"Django gagal menemukan modul pengaturan dan :exc:`RuntimeError` ketika anda "
"mencoba mengkonfigurasi kembali pengaturan setelah selesai menggunakan "
"mereka."

msgid ":setting:`LOGIN_URL` has moved"
msgstr ":setting:`LOGIN_URL` telah dipindahkan"

msgid ""
"The :setting:`LOGIN_URL` constant moved from ``django.contrib.auth`` into "
"the ``settings`` module. Instead of using ``from django.contrib.auth import "
"LOGIN_URL`` refer to :setting:`settings.LOGIN_URL <LOGIN_URL>`."
msgstr ""
"Ketetapan :setting:`LOGIN_URL` dipindah dari ``django.contrib.auth`` kedalam "
"modul ``settings``. Daripada menggunakan ``from django.contrib.auth import "
"LOGIN_URL`` mengacu pada :setting:`settings.LOGIN_URL <LOGIN_URL>`."

msgid ":setting:`APPEND_SLASH` behavior has been updated"
msgstr "Perilaku :setting:`APPEND_SLASH` telah diperbaharui"

msgid ""
"In 0.96, if a URL didn't end in a slash or have a period in the final "
"component of its path, and :setting:`APPEND_SLASH` was True, Django would "
"redirect to the same URL, but with a slash appended to the end. Now, Django "
"checks to see whether the pattern without the trailing slash would be "
"matched by something in your URL patterns. If so, no redirection takes "
"place, because it is assumed you deliberately wanted to catch that pattern."
msgstr ""
"Di 0.96, jika sebuah URL tidak berakhir di garis miring atau mempunyai titik "
"di akhir komponen dari jalurnya, dan :setting:`APPEND_SLASH` adalah True, "
"Django akan mengalihkan ke URL sama, tetapi dengan tanda miring ditambahkan "
"pada akhir. Sekarang, Django memeriksa apakah pola tanpa ekor garis miring "
"akan cocok oleh sesuatu di pola URL anda. Jika demikian, tidak ada "
"pengalihan, karena itu dianggap anda sengaja ingin menangkap pola itu."

msgid ""
"For most people, this won't require any changes. Some people, though, have "
"URL patterns that look like this::"
msgstr ""
"Untuk kebanyakan orang, ini tidak akan membutuhkan perubahan. Beberapa "
"orang, meskipun, mempunyai pola URL yang terlihat seperti ini::"

msgid ""
"Previously, those patterns would have been redirected to have a trailing "
"slash. If you always want a slash on such URLs, rewrite the pattern as::"
msgstr ""
"Sebelumnya, pola itu akan dialihkan untuk mempunyai sebuah ekor garis "
"miring. Jika anda selalu ingin garis miring pada URL itu, tulis kembali pola "
"sebagai::"

msgid "Smaller model changes"
msgstr "Perubahan model kecil"

msgid "Different exception from ``get()``"
msgstr "Pengecualian berbeda dari ``get()``"

msgid ""
"Managers now return a :exc:`~django.core.exceptions.MultipleObjectsReturned` "
"exception instead of :exc:`AssertionError`:"
msgstr ""
"Pengelola sekarang mengembalikan pengecualian :exc:`~django.core.exceptions."
"MultipleObjectsReturned` daripada :exc:`AssertionError`:"

msgid "``LazyDate`` has been fired"
msgstr "``LazyDate`` telah dinyalakan"

msgid "The ``LazyDate`` helper class no longer exists."
msgstr "Kelas pembantu ``LazyDate`` tidak lagi ada."

msgid ""
"Default field values and query arguments can both be callable objects, so "
"instances of ``LazyDate`` can be replaced with a reference to ``datetime."
"datetime.now``:"
msgstr ""
"Nilai bidang awalan dan permintaan argumen keduanya obyek callable, jadi "
"instance dari ``LazyDate`` dapat diganti dengan acuan pada ``datetime."
"datetime.now``:"

msgid "``DecimalField`` is new, and ``FloatField`` is now a proper float"
msgstr "``DecimalField`` adalah baru, dan ``FloatField`` sekarang float tepat."

msgid ""
"If you forget to make this change, you will see errors about ``FloatField`` "
"not taking a ``max_digits`` attribute in ``__init__``, because the new "
"``FloatField`` takes no precision-related arguments."
msgstr ""
"Jika anda lupa membuat perubahan ini, anda akan melihat kesalahan tentang "
"``FloatField`` bukan mengambil atribut ``max_digits`` di ``__init__``, "
"karena ``FloatField`` baru mengambil argumen terkait tidak teliti."

msgid ""
"If you're using MySQL or PostgreSQL, no further changes are needed. The "
"database column types for ``DecimalField`` are the same as for the old "
"``FloatField``."
msgstr ""
"Jika anda sedang menggunakan MySQL atau PostgreSQL, tidak dibtuuhkan "
"perubahan lebih lanjut. Jenis kolom basisdata untuk ``DecimalField`` adalah "
"sama untuk ``FloatField`` lama."

msgid ""
"If you're using SQLite, you need to force the database to view the "
"appropriate columns as decimal types, rather than floats. To do this, you'll "
"need to reload your data. Do this after you have made the change to using "
"``DecimalField`` in your code and updated the Django code."
msgstr ""
"Jika anda menggunakan SQLite, anda butuh memaksa basisdata melihat kolom "
"yang sesuai sebagai jenis desimal, daripada float. untuk melakukan ini, anda "
"akan butuh memuat kembali data anda. Lakukam ini setelah anda membuat "
"perubahan untuk menggunakan ``DecimalField`` di kode anda dan kode Django "
"diperbaharui."

msgid "**Back up your database first!**"
msgstr "**Sokong basisdata anda dahulu!**"

msgid ""
"For SQLite, this means making a copy of the single file that stores the "
"database (the name of that file is the ``DATABASE_NAME`` in your ``settings."
"py`` file)."
msgstr ""

msgid ""
"To upgrade each application to use a ``DecimalField``, you can do the "
"following, replacing ``<app>`` in the code below with each app's name:"
msgstr ""
"Untuk meningkatkan setiap aplikasi untuk menggunakan sebuah "
"``DecimalField``, anda dapat melakukan berikut, mengganti ``<app>`` di kode "
"dibawah ini dengan setiap nama aplikasi:"

msgid "Notes:"
msgstr "Catatan:"

msgid ""
"It's important that you remember to use XML format in the first step of this "
"process. We are exploiting a feature of the XML data dumps that makes "
"porting floats to decimals with SQLite possible."
msgstr ""
"Itu sangat penting bahwa anda mengingat untuk menggunakan bentuk XML dalam "
"langkah pertama dari pengolahan ini. Kami sedang menggunakan fitur dari data "
"buangan XML yang membuat belokan float ke desimal dengan SQLite memungkinkan."

msgid ""
"In the second step you will be asked to confirm that you are prepared to "
"lose the data for the application(s) in question. Say yes; we'll restore "
"this data in the third step."
msgstr ""

msgid ""
"``DecimalField`` is not used in any of the apps shipped with Django prior to "
"this change being made, so you do not need to worry about performing this "
"procedure for any of the standard Django models."
msgstr ""
"``DecimalField`` tidak digunakan di tiap aplikasi yang dibekali dengan "
"Django sebelum perubahan ini dibuat, jadi anda tidak butuh khawatir tentang "
"melakukan prosedur ini untuk tiap model Django standar."

msgid ""
"If something goes wrong in the above process, just copy your backed up "
"database file over the original file and start again."
msgstr ""
"Jika sesuatu berjalan salah di pengolahan diatas, cukup salin berkas "
"basisdata sokongan anda terhadap berkas asli dan mulai kembali."

msgid "Internationalization"
msgstr "Internasionalisasi"

msgid ":func:`django.views.i18n.set_language` now requires a POST request"
msgstr ""
":func:`django.views.i18n.set_language` sekarang membutuhkan permintaan POST"

msgid ""
"Previously, a GET request was used. The old behavior meant that state (the "
"locale used to display the site) could be changed by a GET request, which is "
"against the HTTP specification's recommendations. Code calling this view "
"must ensure that a POST request is now made, instead of a GET. This means "
"you can no longer use a link to access the view, but must use a form "
"submission of some kind (e.g. a button)."
msgstr ""
"Sebelumnya, permintaan GET telah digunakan. Perilaku lama berarti bahwa "
"keadaan (lokal digunakan untuk menampilkan situs) dapat berubah dengan "
"permintaan GET, yaitu terhadap anjuran spesifikasi HTTP. Kode memanggil "
"tampilan ini harus memastikan bahwa permintaan POST sekaragn dibuat, sebagai "
"gantinya GET. Ini berarti anda tidak dapat lagi menggunakan tautan mengakses "
"tampilan, tetapi harus menggunakan pengajuan formulir dari sejenis (sebagai "
"contoh tombol). "

msgid "``_()`` is no longer in builtins"
msgstr "``_()`` tidak lagi siap pakai"

msgid ""
"``_()`` (the callable object whose name is a single underscore) is no longer "
"monkeypatched into builtins -- that is, it's no longer available magically "
"in every module."
msgstr ""
"``_()`` (obyek callable yang namanya adalah garis bawah tunggal) tidak lagi "
"monkeypatch kedalam siap pakai -- yaitu, itu tidak lagi tersedia secara "
"ajaib di setiap modul."

msgid ""
"If you were previously relying on ``_()`` always being present, you should "
"now explicitly import ``ugettext`` or ``ugettext_lazy``, if appropriate, and "
"alias it to ``_`` yourself::"
msgstr ""
"Jika anda sebelumnya bergantung pada ``_()`` selalu menjadi hadir, anda "
"harus sekarang secara eksplisit mengimpor ``ugettext`` atau "
"``ugettext_lazy``, jika sesuai, dan namai itu menjadi ``_`` anda sendiri::"

msgid "HTTP request/response objects"
msgstr "Obyek HTTP request/response"

msgid "Dictionary access to ``HttpRequest``"
msgstr "Akses kamus ke ``HttpRequest`` "

msgid ""
"``HttpRequest`` objects no longer directly support dictionary-style access; "
"previously, both ``GET`` and ``POST`` data were directly available on the "
"``HttpRequest`` object (e.g., you could check for a piece of form data by "
"using ``if 'some_form_key' in request`` or by reading "
"``request['some_form_key']``. This is no longer supported; if you need "
"access to the combined ``GET`` and ``POST`` data, use ``request.REQUEST`` "
"instead."
msgstr ""
"Obyek ``HttpRequest`` tidak lagi langsung mendukung akses gaya kamus; "
"sebelumnya, kedua data ``GET`` dan ``POST`` langsung tersedia pada obyek "
"``HttpRequest`` (sebagai contoh, anda dapat memeriksa untuk potongan dari "
"formulir data dengan menggunakan ``if 'some_form_key' in request`` atau "
"dengan membaca ``request['some_form_key']``. Ini tidak lagi didukung; jika "
"anda butuh akses untuk mengkombinasikan data ``GET`` dan ``POST``, gunakan "
"``request.REQUEST`` sebagai gantinya."

msgid ""
"It is strongly suggested, however, that you always explicitly look in the "
"appropriate dictionary for the type of request you expect to receive "
"(``request.GET`` or ``request.POST``); relying on the combined ``request."
"REQUEST`` dictionary can mask the origin of incoming data."
msgstr ""
"Itu sangat disarankan, bagaimanapun, bahwa anda selalu secara eksplisit "
"mencari di kamus yang sesuai untuk jenis dari permintaan anda harapkan untuk "
"menerima (``request.GET`` or ``request.POST``); bergantung pada gabungan "
"kamus ``request.REQUEST`` dapat menutup data datang asli."

msgid "Accessing ``HTTPResponse`` headers"
msgstr "Mengakses kepala ``HTTPResponse``"

msgid ""
"``django.http.HttpResponse.headers`` has been renamed to ``_headers`` and :"
"class:`~django.http.HttpResponse` now supports containment checking "
"directly. So use ``if header in response:`` instead of ``if header in "
"response.headers:``."
msgstr ""
"``django.http.HttpResponse.headers`` telah dinamai kembali ke ``_headers`` "
"dan :class:`~django.http.HttpResponse` sekarang mendukung penahanan "
"pemeriksaan secara langsung. Jadi gunakan ``if header in response:`` "
"daripada ``if header in response.headers:``."

msgid "Generic relations"
msgstr "Hubungan umum"

msgid "Generic relations have been moved out of core"
msgstr "Hubungan umum telah dipindahkan keluar dari inti"

msgid ""
"The generic relation classes -- ``GenericForeignKey`` and "
"``GenericRelation`` -- have moved into the :mod:`django.contrib."
"contenttypes` module."
msgstr ""
"Kelas-kelas hubungan umum -- ``GenericForeignKey`` dan ``GenericRelation`` "
"-- telah dipindahkan kedalam modul :mod:`django.contrib.contenttypes`."

msgid "Testing"
msgstr "Pengujian"

msgid ":meth:`django.test.Client.login` has changed"
msgstr "meth:`django.test.Client.login` telah berubah"

msgid "Management commands"
msgstr "Pengelolaan perintah"

msgid "Running management commands from your code"
msgstr "Menjalankan pengelolaan perintah dari kode anda"

msgid ":mod:`django.core.management` has been greatly refactored."
msgstr ":mod:`django.core.management` telah direfaktor."

msgid ""
"Calls to management services in your code now need to use ``call_command``. "
"For example, if you have some test code that calls flush and load_data::"
msgstr ""
"Panggilan pada pengelolaan pelayanan di kode anda sekarang butuh untuk "
"menggunakan ``call_command``. Sebagai contoh, jika anda mempunyai beberapa "
"percobaan yang memanggil flush dan load_data::"

msgid "...you'll need to change this code to read::"
msgstr "...anda akan butuh merubah kdoe ini untuk dibaca::"

msgid "Subcommands must now precede options"
msgstr "Sub perintah sekarang harus mendahulukan pilihan"

msgid ""
"``django-admin.py`` and ``manage.py`` now require subcommands to precede "
"options. So:"
msgstr ""
"``django-admin.py`` dan ``manage.py`` sekarang membutuhkan sub perintah "
"untuk mendahulukan pilihan. Jadi:"

msgid "...no longer works and should be changed to:"
msgstr "...tidak lagi bekerja dan harus dirubah menjadi:"

msgid "Syndication"
msgstr "Kongsi"

msgid "``Feed.__init__`` has changed"
msgstr "``Feed.__init__`` telah berubah"

msgid ""
"The ``__init__()`` method of the syndication framework's ``Feed`` class now "
"takes an ``HttpRequest`` object as its second parameter, instead of the "
"feed's URL. This allows the syndication framework to work without requiring "
"the sites framework. This only affects code that subclasses ``Feed`` and "
"overrides the ``__init__()`` method, and code that calls ``Feed.__init__()`` "
"directly."
msgstr ""
"metode ``__init__()`` dari kongsi kelas ``Feed`` kerangka kerja sekarang "
"mengambil sebuah obyek ``HttpRequest`` sebagai parameter keduanya, daripada "
"URL umpan. Ini mengizinkan kongsi kerangka kerja untuk bekerja tanpa "
"membutuhkan kerangka kerja situs. Ini hanya mempengaruhi kode yang subkelas "
"``Feed`` dan menimpa metode ``__init__()``, dan kode yang memanggil ``Feed."
"__init__()`` secara langsung."

msgid "Data structures"
msgstr "Struktur data"

msgid "``SortedDictFromList`` is gone"
msgstr "`SortedDictFromList`` telah pergi"

msgid ""
"``django.newforms.forms.SortedDictFromList`` was removed. ``django.utils."
"datastructures.SortedDict`` can now be instantiated with a sequence of "
"tuples."
msgstr ""
"``django.newforms.forms.SortedDictFromList`` telah dipindahkan. ``django."
"utils.datastructures.SortedDict`` sekarang dapat membuat obyek dengan urutan "
"dari tuple-tuple."

msgid "To update your code:"
msgstr "Untuk memperbaharui kode anda:"

msgid ""
"Use ``django.utils.datastructures.SortedDict`` wherever you were using "
"``django.newforms.forms.SortedDictFromList``."
msgstr ""
"Gunakan ``django.utils.datastructures.SortedDict`` dimanapun anda "
"menggunakan ``django.newforms.forms.SortedDictFromList``."

msgid ""
"Because ``django.utils.datastructures.SortedDict.copy`` doesn't return a "
"deepcopy as ``SortedDictFromList.copy()`` did, you will need to update your "
"code if you were relying on a deepcopy. Do this by using ``copy.deepcopy`` "
"directly."
msgstr ""
"Karena ``django.utils.datastructures.SortedDict.copy`` tidak mengemblikan "
"salinan dalam sebagai ``SortedDictFromList.copy()`` lakukan, anda akan butuh "
"memperbaharui kode anda jika anda bergantung pada saliann dalam. Lakukan ini "
"dengan menggunakan ``copy.deepcopy`` secara langsung."

msgid "Database backend functions"
msgstr "Fungsi basisdata backend"

msgid "Database backend functions have been renamed"
msgstr "Fungsi basisdata backend telah diubah namanya"

msgid ""
"Almost *all* of the database backend-level functions have been renamed and/"
"or relocated. None of these were documented, but you'll need to change your "
"code if you're using any of these functions, all of which are in :mod:"
"`django.db`:"
msgstr ""
"Hampir *semua* dari fungsi tingkatan backend basisdata telah dinamai kembali "
"dan/atau ditempatkan kembali. Tidak ada dari ini didokumentasikan, tetapi "
"anda akan butuh merubah kode anda jika anda sedang menggunakan tiap fungsi "
"ini, semua dari yang berada di :mod:`django.db`:"

msgid "``backend.get_autoinc_sql``"
msgstr "``backend.get_autoinc_sql``"

msgid "``connection.ops.autoinc_sql``"
msgstr "``connection.ops.autoinc_sql``"

msgid "``backend.get_date_extract_sql``"
msgstr "``backend.get_date_extract_sql``"

msgid "``connection.ops.date_extract_sql``"
msgstr "``connection.ops.date_extract_sql``"

msgid "``backend.get_date_trunc_sql``"
msgstr "``backend.get_date_trunc_sql``"

msgid "``connection.ops.date_trunc_sql``"
msgstr "``connection.ops.date_trunc_sql``"

msgid "``backend.get_datetime_cast_sql``"
msgstr "``backend.get_datetime_cast_sql``"

msgid "``connection.ops.datetime_cast_sql``"
msgstr "``connection.ops.datetime_cast_sql``"

msgid "``backend.get_deferrable_sql``"
msgstr "``backend.get_deferrable_sql``"

msgid "``connection.ops.deferrable_sql``"
msgstr "``connection.ops.deferrable_sql``"

msgid "``backend.get_drop_foreignkey_sql``"
msgstr "``backend.get_drop_foreignkey_sql``"

msgid "``connection.ops.drop_foreignkey_sql``"
msgstr "``connection.ops.drop_foreignkey_sql``"

msgid "``backend.get_fulltext_search_sql``"
msgstr "``backend.get_fulltext_search_sql``"

msgid "``connection.ops.fulltext_search_sql``"
msgstr "`connection.ops.fulltext_search_sql``"

msgid "``backend.get_last_insert_id``"
msgstr "``backend.get_last_insert_id``"

msgid "``connection.ops.last_insert_id``"
msgstr "``connection.ops.last_insert_id``"

msgid "``backend.get_limit_offset_sql``"
msgstr "``backend.get_limit_offset_sql``"

msgid "``connection.ops.limit_offset_sql``"
msgstr "``connection.ops.limit_offset_sql``"

msgid "``backend.get_max_name_length``"
msgstr "``backend.get_max_name_length``"

msgid "``connection.ops.max_name_length``"
msgstr "``connection.ops.max_name_length``"

msgid "``backend.get_pk_default_value``"
msgstr "``backend.get_pk_default_value``"

msgid "``connection.ops.pk_default_value``"
msgstr "``connection.ops.pk_default_value``"

msgid "``backend.get_random_function_sql``"
msgstr "``backend.get_random_function_sql``"

msgid "``connection.ops.random_function_sql``"
msgstr "``connection.ops.random_function_sql``"

msgid "``backend.get_sql_flush``"
msgstr "``backend.get_sql_flush``"

msgid "``connection.ops.sql_flush``"
msgstr "``connection.ops.sql_flush``"

msgid "``backend.get_sql_sequence_reset``"
msgstr "``backend.get_sql_sequence_reset``"

msgid "``connection.ops.sequence_reset_sql``"
msgstr "``connection.ops.sequence_reset_sql``"

msgid "``backend.get_start_transaction_sql``"
msgstr "``backend.get_start_transaction_sql``"

msgid "``connection.ops.start_transaction_sql``"
msgstr "``connection.ops.start_transaction_sql``"

msgid "``backend.get_tablespace_sql``"
msgstr "``backend.get_tablespace_sql``"

msgid "``connection.ops.tablespace_sql``"
msgstr "``connection.ops.tablespace_sql``"

msgid "``backend.quote_name``"
msgstr "``backend.quote_name``"

msgid "``connection.ops.quote_name``"
msgstr "``connection.ops.quote_name``"

msgid "``backend.get_query_set_class``"
msgstr "``backend.get_query_set_class``"

msgid "``connection.ops.query_set_class``"
msgstr "``connection.ops.query_set_class``"

msgid "``backend.get_field_cast_sql``"
msgstr "``backend.get_field_cast_sql``"

msgid "``connection.ops.field_cast_sql``"
msgstr "``connection.ops.field_cast_sql``"

msgid "``backend.get_drop_sequence``"
msgstr "``backend.get_drop_sequence``"

msgid "``connection.ops.drop_sequence_sql``"
msgstr "``connection.ops.drop_sequence_sql``"

msgid "``backend.OPERATOR_MAPPING``"
msgstr "``backend.OPERATOR_MAPPING``"

msgid "``connection.operators``"
msgstr "``connection.operators``"

msgid "``backend.allows_group_by_ordinal``"
msgstr "``backend.allows_group_by_ordinal``"

msgid "``connection.features.allows_group_by_ordinal``"
msgstr "``connection.features.allows_group_by_ordinal``"

msgid "``backend.allows_unique_and_pk``"
msgstr "``backend.allows_unique_and_pk``"

msgid "``connection.features.allows_unique_and_pk``"
msgstr "``connection.features.allows_unique_and_pk``"

msgid "``backend.autoindexes_primary_keys``"
msgstr "``backend.autoindexes_primary_keys``"

msgid "``connection.features.autoindexes_primary_keys``"
msgstr "``connection.features.autoindexes_primary_keys``"

msgid "``backend.needs_datetime_string_cast``"
msgstr "``backend.needs_datetime_string_cast``"

msgid "``connection.features.needs_datetime_string_cast``"
msgstr "``connection.features.needs_datetime_string_cast``"

msgid "``backend.needs_upper_for_iops``"
msgstr "``backend.needs_upper_for_iops``"

msgid "``connection.features.needs_upper_for_iops``"
msgstr "``connection.features.needs_upper_for_iops``"

msgid "``backend.supports_constraints``"
msgstr "``backend.supports_constraints``"

msgid "``connection.features.supports_constraints``"
msgstr "``connection.features.supports_constraints``"

msgid "``backend.supports_tablespaces``"
msgstr "``backend.supports_tablespaces``"

msgid "``connection.features.supports_tablespaces``"
msgstr "``connection.features.supports_tablespaces``"

msgid "``backend.uses_case_insensitive_names``"
msgstr "``backend.uses_case_insensitive_names``"

msgid "``connection.features.uses_case_insensitive_names``"
msgstr "``connection.features.uses_case_insensitive_names``"

msgid "``backend.uses_custom_queryset``"
msgstr "``backend.uses_custom_queryset``"

msgid "``connection.features.uses_custom_queryset``"
msgstr "``connection.features.uses_custom_queryset``"

msgid "Django 1.0.1 release notes"
msgstr "Catatan terbitan Django 1.0.1"

msgid "Welcome to Django 1.0.1!"
msgstr "Selamat datang di Django 1.0.1!"

msgid ""
"This is the first \"bugfix\" release in the Django 1.0 series, improving the "
"stability and performance of the Django 1.0 codebase. As such, Django 1.0.1 "
"contains no new features (and, pursuant to :doc:`our compatibility policy </"
"misc/api-stability/>`, maintains backwards compatibility with Django 1.0), "
"but does contain a number of fixes and other improvements. Django 1.0.1 is a "
"recommended upgrade for any development or deployment currently using or "
"targeting Django 1.0."
msgstr ""
"Ini adalah terbitan \"bugfix\" pertama di rangkaian Django 1.0, meningkatkan "
"kestabilan dan penampilan dari basis kode Django 1.0. Dengan demikian, "
"Django 1.0.1 tidak mengandung fitur baru (dan, sesuai pada :doc:`our "
"compatibility policy </misc/api-stability/>`, perawatan kesesuaian "
"kebelakang dengan Django 1.0), tetapi mengandung sejumlah dari perbaikan dan "
"perbaharuan lainnya. Django 1.0.1 adalah peningkatan yang dianjurkan untuk "
"tiap pengembangan atau penyebaran saat ini menggunakan atau menyasar Django "
"1.0."

msgid "Fixes and improvements in Django 1.0.1"
msgstr "Perbaikan dan pembetulan di Django 1.0.1"

msgid ""
"Django 1.0.1 contains over two hundred fixes to the original Django 1.0 "
"codebase; full details of every fix are available in `the history of the 1.0."
"X branch`_, but here are some of the highlights:"
msgstr ""
"Django 1.0.1 mengandung lebih dua ratus perbaikan pada basis kode Django 1.0 "
"asli; rincian penuh dari setiap perbaikan tersedia di `the history of the "
"1.0.X branch`_, tetapi ini ada beberapa dari sorotan:"

msgid ""
"Several fixes in ``django.contrib.comments``, pertaining to RSS feeds of "
"comments, default ordering of comments and the XHTML and "
"internationalization of the default templates for comments."
msgstr ""
"Beberapa perbaikan di ``django.contrib.comments``, berkaitan pada umpan RSS "
"dari komentar, urutan awal dari komentar dan XHTML dan internasionalisasi "
"dari cetakan awal untuk komentar."

msgid ""
"Multiple fixes for Django's support of Oracle databases, including "
"pagination support for GIS QuerySets, more efficient slicing of results and "
"improved introspection of existing databases."
msgstr ""
"Banyak perbaikan untuk dukungan Django dari basisdata Oracle, termasuk "
"dukungan penomoran untuk QuerySet GIS, lebih efisien memotong dan "
"ditingkatkan interospeksi dari basisdata yang ada."

msgid ""
"Several fixes for query support in the Django object-relational mapper, "
"including repeated setting and resetting of ordering and fixes for working "
"with ``INSERT``-only queries."
msgstr ""
"Beberapa perbaikan untuk dukungan permintaan di pemetaan hubungan obyek "
"Django, termasuk pengaturan berulang dan mengatur kembali dari urutan dan "
"perbaikan untuk bekerja dengan permintaan ``INSERT``-only."

msgid "Multiple fixes for inline forms in formsets."
msgstr "Banyak perbaikan untuk formulir berderet di kumpulan formulir."

msgid ""
"Multiple fixes for ``unique`` and ``unique_together`` model constraints in "
"automatically-generated forms."
msgstr ""
"Banyak perbaikan untuk batasan model ``unique`` dan ``unique_together`` "
"dalam formulir dibangkitkan otomatis."

msgid ""
"Fixed support for custom callable ``upload_to`` declarations when handling "
"file uploads through automatically-generated forms."
msgstr ""
"Diperbaiki dukungan untuk callable penyesuaian pernyataan ``upload_to`` "
"ketika menangani unggahan berkas melalui formulir dibangkitkan otomatis."

msgid ""
"Fixed support for sorting an admin change list based on a callable "
"attributes in ``list_display``."
msgstr ""
"Diperbaiki dukungan untuk mengurutkan daftar perubahan admin berdasarkan "
"pada atribut callable dalam ``list_display``."

msgid ""
"A fix to the application of autoescaping for literal strings passed to the "
"``join`` template filter. Previously, literal strings passed to ``join`` "
"were automatically escaped, contrary to :ref:`the documented behavior for "
"autoescaping and literal strings <string-literals-and-automatic-escaping>`. "
"Literal strings passed to ``join`` are no longer automatically escaped, "
"meaning you must now manually escape them; this is an incompatibility if you "
"were relying on this bug, but not if you were relying on escaping behaving "
"as documented."
msgstr ""
"Sebuah perbaikan ke aplikasi dari pelolosan otomatis untuk deretan karakter "
"harfiah dilewatkan ke penyaring cetakan ``join``. Sebelumnya, deretan "
"karakter harfiah dilewatkan ke ``join`` secara otomatis diloloskan, "
"kebalikan pada :ref:`the documented behavior for autoescaping and literal "
"strings <string-literals-and-automatic-escaping>`. Deretan karakter harfiah "
"dilewatkan ke ``join`` tidak lagi secara otomatis dilewatkan, berarti anda "
"sekarang harus meloloskan mereka secara manual; ini adalah ketidaksesuaian "
"jika anda sedang bergantung pada kesalahan ini, tetapi tidak jika anda "
"sedang bergantung pada meloloskan berperilaku seperti didokumentasi."

msgid ""
"Improved and expanded translation files for many of the languages Django "
"supports by default."
msgstr ""
"Peningkatan dan perluasan berkas-berkas terjemahan untuk banyak dukungan "
"bahasa Django secara awal."

msgid ""
"And as always, a large number of improvements to Django's documentation, "
"including both corrections to existing documents and expanded and new "
"documentation."
msgstr ""
"Dan seperti selalu, sejumlah besar dari peningkatan pada dokumentasi Django, "
"termasuk perbaikan kedua pada dokumen yang ada dan dokumentasi baru."

msgid "Django 1.0.2 release notes"
msgstr "Catatan terbitan Django 1.0.2"

msgid "Welcome to Django 1.0.2!"
msgstr "Selamat datang di Django 1.0.2!"

msgid ""
"This is the second \"bugfix\" release in the Django 1.0 series, improving "
"the stability and performance of the Django 1.0 codebase. As such, Django "
"1.0.2 contains no new features (and, pursuant to :doc:`our compatibility "
"policy </misc/api-stability>`, maintains backwards compatibility with Django "
"1.0.0), but does contain a number of fixes and other improvements. Django "
"1.0.2 is a recommended upgrade for any development or deployment currently "
"using or targeting Django 1.0."
msgstr ""
"Ini adalah terbitan \"bugfix\" kedua di rangkaian Django 1.0, meningkatkan "
"kestabilan dan penampilan dari basis kode Django 1.0. Dengan demikian, "
"Django 1.0.2 tidak mengandung fitur baru (dan, sesuai pada :doc:`our "
"compatibility policy </misc/api-stability>`, merawat kesesuaian kebelakang "
"dengan Django 1.0.0), tetapi megnandung sejumlah perbaikan dan peningkatan "
"lain. Django 1.0.2 dianjurkan ditingkatkan untuk tiap pengembangan atau "
"penyebaran saat ini menggunakan atau menyasar Django 1.0."

msgid "Fixes and improvements in Django 1.0.2"
msgstr "Perbaikan dan pembetulan di Django 1.0.2"

msgid ""
"The primary reason behind this release is to remedy an issue in the recently-"
"released Django 1.0.1; the packaging scripts used for Django 1.0.1 omitted "
"some directories from the final release package, including one directory "
"required by ``django.contrib.gis`` and part of Django's unit-test suite."
msgstr ""
"Alasan utama dibelakang terbitan ini adalah untuk memperbaiki sebuah masalah "
"di terbitan saat ini Django 1.0.1; tulisan paket digunakan untuk Django "
"1.0.1 menghilangkan beberapa pelipat dari paket terbitan akhir, termasuk "
"satu direktori diwajibkan oleh ``django.contrib.gis`` dan bagian deretan "
"percobaan satuan Django."

msgid ""
"Django 1.0.2 contains updated packaging scripts, and the release package "
"contains the directories omitted from Django 1.0.1. As such, this release "
"contains all of the fixes and improvements from Django 1.0.1; see :doc:`the "
"Django 1.0.1 release notes </releases/1.0.1>` for details."
msgstr ""
"Django 1.0.2 mengandung tulisan paket terperbaharui, dan paket terbitan "
"mengandung direktori dihilangkan dari Django 1.0.1. Dengan demikian, "
"terbitan ini mengandung semua perbaikan dan peningkatan dari Django 1.0.1; "
"lihat :doc:`the Django 1.0.1 release notes </releases/1.0.1>` untuk rincian."

msgid "Additionally, in the period since Django 1.0.1 was released:"
msgstr "Selain itu, pada periode sejak Django 1.0 telah diterbitkan:"

msgid "Updated Hebrew and Danish translations have been added."
msgstr "Terjemahan Ibrani dan Denmark diperbaharui telah ditambahkan."

msgid ""
"The default ``__repr__`` method of Django models has been made more robust "
"in the face of bad Unicode data coming from the ``__unicode__`` method; "
"rather than raise an exception in such cases, ``repr()`` will now contain "
"the string \"[Bad Unicode data]\" in place of the invalid Unicode."
msgstr ""
"Metode ``__repr__`` awalan dari model Django telah dibuat lebih kuat dalam "
"menghadapi data Unicode buruk datang dari cara ``__unicode__``; daripada "
"memunculkan sebuah pengecualian di kasus seperti itu, ``repr()`` akan "
"sekarang mengandung deretan karakter \"[Bad Unicode data]\" ditempat dari "
"Unicode tidak sah."

msgid ""
"A bug involving the interaction of Django's ``SafeUnicode`` class and the "
"MySQL adapter has been resolved; ``SafeUnicode`` instances (generated, for "
"example, by template rendering) can now be assigned to model attributes and "
"saved to MySQL without requiring an explicit intermediate cast to "
"``unicode``."
msgstr ""
"Sebuah kesalahan melibatkan interaksi dari kelas ``SafeUnicode`` Django dan "
"penyadur MySQL telah terselesaikan; instance ``SafeUnicode`` (dibangkitkan, "
"sebagai contoh, dengan membangun cetakan) dapat sekarang diberikan ke "
"atribut model dan disimpan ke MySQL tanpa membutuhkan pemasukan menegah "
"secara eksplisit pada intermediate"

msgid ""
"A bug affecting filtering on a nullable ``DateField`` in SQLite has been "
"resolved."
msgstr ""
"Sebuah kesalahan menyaring di ``DateField`` nullable dalam SQLite telah "
"terselesaikan."

msgid ""
"Several updates and improvements have been made to Django's documentation."
msgstr ""
"Beberapa pembaharuan dan peningkatan telah dibuat pada dokumentasi Django."

msgid "Django 1.1 release notes"
msgstr "Catatan terbitan Django 1.1"

msgid "July 29, 2009"
msgstr "29 Juli 2009"

msgid "Welcome to Django 1.1!"
msgstr "Selamat datang di Django 1.1!"

msgid ""
"Django 1.1 includes a number of nifty :ref:`new features <whats-new-1.1>`, "
"lots of bug fixes, and an easy upgrade path from Django 1.0."
msgstr ""
"Django 1.1 menyertakan sejumlah dari :ref:`new features <whats-new-1.1>` "
"bagus, banyak perbaikan kesalahan, dan jalur peningkatan mudah dari Django "
"1.0."

msgid "Backwards-incompatible changes in 1.1"
msgstr "Perubahan bertentangan kebelakang di 1.1"

msgid ""
"Django has a policy of :doc:`API stability </misc/api-stability>`. This "
"means that, in general, code you develop against Django 1.0 should continue "
"to work against 1.1 unchanged. However, we do sometimes make backwards-"
"incompatible changes if they're necessary to resolve bugs, and there are a "
"handful of such (minor) changes between Django 1.0 and Django 1.1."
msgstr ""
"Django mempunyai sebuah kebijakan :doc:`API stability </misc/api-"
"stability>`. Ini berarti bahwa, secara umum, kode anda kembangkan terhadap "
"Django 1.0 harus lanjut bekerja terhadap tanpa perubahan 1.1. Bagaimanapun, "
"kami melakukan terkadang membuat perubahan bertentangan kebelakang jika "
"mereka butuh untuk menyelesaikan kesalahan, dan ada bantuan dari perubahan "
"(kecil) seperti itu diantara Django 1.0 dan Django 1.1."

msgid ""
"Before upgrading to Django 1.1 you should double-check that the following "
"changes don't impact you, and upgrade your code if they do."
msgstr ""
"Sebelum meningkatkan ke Django 1.1 anda harus memeriksa kembali bahwa "
"perubahan berikut tidak berdampak anda, dan tingkatkan kode anda jika mereka "
"lakukan."

msgid "Changes to constraint names"
msgstr "Perubahan pada batasan nama"

msgid ""
"Django 1.1 modifies the method used to generate database constraint names so "
"that names are consistent regardless of machine word size. This change is "
"backwards incompatible for some users."
msgstr ""
"Django 1.1 merubah cara yang digunakan untuk membangkitkan nama batasan "
"basisdata sehingga nama selaras tanpa memperhatikan ukuran kata mesin. "
"Perubahan ini bertentangan kebelakang untuk beberapa pengguna."

msgid ""
"If you are using a 32-bit platform, you're off the hook; you'll observe no "
"differences as a result of this change."
msgstr ""
"Jika anda sedang menggunakan serambi32-bit, anda diluar hubungan; anda akan "
"mengamati tidak ada perbedaan sebagai hasil dari perubahan ini."

msgid ""
"However, **users on 64-bit platforms may experience some problems** using "
"the ``reset`` management command. Prior to this change, 64-bit platforms "
"would generate a 64-bit, 16 character digest in the constraint name; for "
"example:"
msgstr ""

msgid ""
"Following this change, all platforms, regardless of word size, will generate "
"a 32-bit, 8 character digest in the constraint name; for example:"
msgstr ""

msgid ""
"As a result of this change, you will not be able to use the ``reset`` "
"management command on any table made by a 64-bit machine. This is because "
"the new generated name will not match the historically generated name; as a "
"result, the SQL constructed by the reset command will be invalid."
msgstr ""
"Sebagai hasil dari perubahan ini, anda tidak akan dapat menggunakan perintah "
"pengelolaan ``reset`` pada setiap tabel dibuat oleh mesin 64-bit. Ini karena "
"nama dibangkitkan baru tidak akan cocok secara riwayat nama dibangkitkan; "
"sebagai hasilnya, SQL dibangun oleh perintah pengaturan kembali akan tidak "
"sah."

msgid ""
"If you need to reset an application that was created with 64-bit "
"constraints, you will need to manually drop the old constraint prior to "
"invoking ``reset``."
msgstr ""
"Jika anda butuh menyetek kembali sebuah aplikasi yang telah dibuat dengan "
"batasan 64-bit, anda akan butuh secara manual menjatuhkan batasan lama "
"sebelum meminta ``reset``."

msgid "Test cases are now run in a transaction"
msgstr "Kasus percobaan sekarang berjalan di transaksi."

msgid ""
"Django 1.1 runs tests inside a transaction, allowing better test performance "
"(see `test performance improvements`_ for details)."
msgstr ""
"Django 1.1 menjalankan percobaan didalam transaksi, mengizinkan penampilan "
"percobaan terbaik (lihat `test performance improvements`_ untuk rincian)."

msgid ""
"This change is slightly backwards incompatible if existing tests need to "
"test transactional behavior, if they rely on invalid assumptions about the "
"test environment, or if they require a specific test case ordering."
msgstr ""
"Perubahan ini sedikit bertentangan kebelakang jika percobaan yang ada butuh "
"mencoba perilaku transaksional, jika mereka bergantung pada prasangka tidak "
"sah tentang lingkungan percobaan, atau jika mereka membutuhkan sebuah urutan "
"kasus percobaan khusus."

msgid ""
"For these cases, :class:`~django.test.TransactionTestCase` can be used "
"instead. This is a just a quick fix to get around test case errors revealed "
"by the new rollback approach; in the long-term tests should be rewritten to "
"correct the test case."
msgstr ""
"Untuk kasus-kasus ini, :class:`~django.test.TransactionTestCase` dapat "
"digunakan sebagai gantinya. Ini hanya perbaikan cepat untuk berkeliling-"
"keliling kesalahan kasus percobaan terungkap oleh pendekatan rollback baru; "
"di percobaan jangka panjang harus ditulis kembali untuk memperbaiki "
"percobaan kasus."

msgid "Removed ``SetRemoteAddrFromForwardedFor`` middleware"
msgstr "Pindahkan middleware ``SetRemoteAddrFromForwardedFor``"

msgid ""
"For convenience, Django 1.0 included an optional middleware class -- "
"``django.middleware.http.SetRemoteAddrFromForwardedFor`` -- which updated "
"the value of ``REMOTE_ADDR`` based on the HTTP ``X-Forwarded-For`` header "
"commonly set by some proxy configurations."
msgstr ""
"Untuk kenyamanan, Django 1.0 menyertakan sebuah kelas middleware pilihan -- "
"``django.middleware.http.SetRemoteAddrFromForwardedFor`` -- yang "
"memperbaharui nilai dari ``REMOTE_ADDR`` berdasarkan pada kepala HTTP ``X-"
"Forwarded-For`` umumnya disetel oleh beberapa konfigurasi proxy."

msgid ""
"It has been demonstrated that this mechanism cannot be made reliable enough "
"for general-purpose use, and that (despite documentation to the contrary) "
"its inclusion in Django may lead application developers to assume that the "
"value of ``REMOTE_ADDR`` is \"safe\" or in some way reliable as a source of "
"authentication."
msgstr ""
"Itu telah ditunjukkan bahwa mekanisme ini tidak dapat dibuat cukup handal "
"untuk penggunaan tujuan tertentu, dan bahwa (meskipun dokumentasi ke "
"kebalikan) penyertaannya di Django mungkin membawa pengembang aplikasi "
"menganggap bahwa nilai dari ``REMOTE_ADDR`` adalah \"safe\" atau di beberapa "
"jalan dapat dihandalkan sebagai sumber otentifikasi."

msgid ""
"While not directly a security issue, we've decided to remove this middleware "
"with the Django 1.1 release. It has been replaced with a class that does "
"nothing other than raise a ``DeprecationWarning``."
msgstr ""
"Selagi tidak secara langsung masalah keamanan, kami telah memutuskan untuk "
"memindahkan middleware ini dengan terbitan Django 1.1. Itu telah diganti "
"dengan kelas yang tidak melakukan apapun selaiin menampilkan "
"``DeprecationWarning``."

msgid "If you've been relying on this middleware, the easiest upgrade path is:"
msgstr ""
"Jika anda telah bergantung pada middleware ini, jalur peningkatan termudah "
"adalah:"

msgid "Examine `the code as it existed before it was removed`__."
msgstr "Uji `the code as it existed before it was removed`__."

msgid ""
"Verify that it works correctly with your upstream proxy, modifying it to "
"support your particular proxy (if necessary)."
msgstr ""
"Periksa bahwa itu bekerja dengan benar dengan proxy hulu anda, merubahnya "
"untuk mendukung proxy tertentu anda (jika dibutuhkan)."

msgid ""
"Introduce your modified version of ``SetRemoteAddrFromForwardedFor`` as a "
"piece of middleware in your own project."
msgstr ""
"Memperkenalkan versi dirubah anda dari ``SetRemoteAddrFromForwardedFor`` "
"sebagai potongan dari middleware di proyek anda sendiri."

msgid "Names of uploaded files are available later"
msgstr "Nama dari berkas terunggah tersedia kemudian"

msgid ""
"In Django 1.0, files uploaded and stored in a model's :class:`FileField` "
"were saved to disk before the model was saved to the database. This meant "
"that the actual file name assigned to the file was available before saving. "
"For example, it was available in a model's pre-save signal handler."
msgstr ""
"Di Django 1.0, berkas-berkas terunggah dan disimpan dalam sebuah :class:"
"`FileField` model disimpan ke cakram sebelum model disimpan ke basisdata. "
"Ini berarti bahwa nama berkas sebenarnya diberikan ke berkas telah tersedia "
"sebelum disimpan. Sebagai contoh, itu telah tersedia dalam pengangan sinyal "
"pra-simpan model."

msgid ""
"In Django 1.1 the file is saved as part of saving the model in the database, "
"so the actual file name used on disk cannot be relied on until *after* the "
"model has been saved."
msgstr ""
"Di Django 1.1 berkas disimpan sebagai bagian dari menyimpan model di "
"basisdata, jadi nama berkas sebenarnya digunakan pada cakram tidak dapat "
"bergantung sampai *sesudah* model telah disimpan."

msgid "Changes to how model formsets are saved"
msgstr "Perubahan pada bagaimana model formset disimpan"

msgid ""
"In Django 1.1, :class:`~django.forms.models.BaseModelFormSet` now calls "
"``ModelForm.save()``."
msgstr ""
"Dalam Django 1.1, :class:`~django.forms.models.BaseModelFormSet` sekarang "
"memanggil ``ModelForm.save()``."

msgid ""
"This is backwards-incompatible if you were modifying ``self.initial`` in a "
"model formset's ``__init__``, or if you relied on the internal "
"``_total_form_count`` or ``_initial_form_count`` attributes of BaseFormSet. "
"Those attributes are now public methods."
msgstr ""
"Ini adalah bertentangan-kebelakang jika anda sedang merubah ``self.initial`` "
"dalam model ``__init__`` formset, atau jika anda bergantung pada atribut "
"internal ``_total_form_count`` atau ``_initial_form_count`` dari "
"BaseFormSet. Atribut tersebut sekarang adalah metode umum."

msgid "Fixed the ``join`` filter's escaping behavior"
msgstr "Diperbaiki perilaku pelolosan saringan ``join``"

msgid ""
"The :tfilter:`join` filter no longer escapes the literal value that is "
"passed in for the connector."
msgstr ""
"Penyaring :tfilter:`join` tidak lagi meloloskan nilai harfiah yang "
"dilewatkan untuk penghubung."

msgid ""
"This is backwards incompatible for the special situation of the literal "
"string containing one of the five special HTML characters. Thus, if you were "
"writing ``{{ foo|join:\"&\" }}``, you now have to write ``{{ foo|join:\"&amp;"
"\" }}``."
msgstr ""
"Bertentangan kebelakang ini untuk keadaan khusus dari deretan karakter "
"harfiah mengandung satu dari lima karakter HTML khusus. Jadi, jika anda "
"sedang menulis ``{{ foo|join:\"&\" }}``, anda sekarang harus menulis "
"``{{ foo|join:\"&amp;\" }}``."

msgid ""
"The previous behavior was a bug and contrary to what was documented and "
"expected."
msgstr ""
"Perilaku sebelumnya adalah sebuah kesalahan dan kebalikan ke apa yang telah "
"didokumentasikan dan diharapkan."

msgid "Permanent redirects and the ``redirect_to()`` generic view"
msgstr "Pengalihan tetap dan tampilan umum ``redirect_to()``"

msgid ""
"Django 1.1 adds a ``permanent`` argument to the ``django.views.generic."
"simple.redirect_to()`` view. This is technically backwards-incompatible if "
"you were using the ``redirect_to`` view with a format-string key called "
"'permanent', which is highly unlikely."
msgstr ""
"Django 1.1 menambahkan argumen ``permanent`` ke tampilan ``django.views."
"generic.simple.redirect_to()``. Ini secara teknis bertentangan kebelakang "
"jika anda menggunakan tampilan ``redirect_to`` dengan kunci bentuk-deretan "
"karakter disebut 'permanent', yang sangat tidak mungkin."

msgid "Features deprecated in 1.1"
msgstr "Fitur usang di 1.1"

msgid "One feature has been marked as deprecated in Django 1.1:"
msgstr "Satu fitur telah ditandai sebagai usang di Django 1.1:"

msgid ""
"You should no longer use ``AdminSite.root()`` to register that admin views. "
"That is, if your URLconf contains the line::"
msgstr ""
"Anda jangan lagi menggunakan ``AdminSite.root()`` untuk mendaftar tampilan "
"admin itu. Yaitu, jika URLconf anda mengandung baris::"

msgid "You should change it to read::"
msgstr "Anda harus merubahnya untuk membaca::"

msgid ""
"You should begin to remove use of this feature from your code immediately."
msgstr ""
"Anda harus mulai memindahkan penggunaan fitur ini dari kode anda segera."

msgid ""
"``AdminSite.root`` will raise a ``PendingDeprecationWarning`` if used in "
"Django 1.1. This warning is hidden by default. In Django 1.2, this warning "
"will be upgraded to a ``DeprecationWarning``, which will be displayed "
"loudly. Django 1.3 will remove ``AdminSite.root()`` entirely."
msgstr ""
"``AdminSite.root`` akan menimbulkan ``PendingDeprecationWarning`` jika "
"digunakan di Django 1.1. Peringatan ini disembunyikan secara awal. Di Django "
"1.2, peringatan ini akan ditingkatkan ke ``DeprecationWarning``, yang akan "
"ditampilkan mencolok. Django 1.3 akan memindahkan ``AdminSite.root()`` "
"sepenuhnya."

msgid ""
"For more details on our deprecation policies and strategy, see :doc:`/"
"internals/release-process`."
msgstr ""
"Untuk rincian lebih pada kebijakan dan strategi pengusangan kami, lihat :doc:"
"`/internals/release-process`."

msgid "What's new in Django 1.1"
msgstr "Apa yang baru di Django 1.1"

msgid ""
"Quite a bit: since Django 1.0, we've made 1,290 code commits, fixed 1,206 "
"bugs, and added roughly 10,000 lines of documentation."
msgstr ""
"Cukup sedikit: sejak Django 1.0, kami telah membuat 1,290 kode perbaikan, "
"memperbaiki 1,206 kesalahan, dan menambahkan kurang lebih 10,000 baris "
"dokumentasi."

msgid "The major new features in Django 1.1 are:"
msgstr "Fitur baru utama di Django 1.1 adalah:"

msgid "ORM improvements"
msgstr "Perbaikan ORM"

msgid ""
"Two major enhancements have been added to Django's object-relational mapper "
"(ORM): aggregate support, and query expressions."
msgstr ""
"Dua peningkatan utama telah ditambahkan pada object-relational mapper (ORM) "
"Django: mengumpulkan dukungan, dan pernyatana permintaan."

msgid "Aggregate support"
msgstr "Pengumpulan dukungan"

msgid ""
"It's now possible to run SQL aggregate queries (i.e. ``COUNT()``, ``MAX()``, "
"``MIN()``, etc.) from within Django's ORM. You can choose to either return "
"the results of the aggregate directly, or else annotate the objects in a :"
"class:`~django.db.models.query.QuerySet` with the results of the aggregate "
"query."
msgstr ""
"Sekarang memungkinkan menjalankan permintaan kumpulan SQL (yaitu "
"``COUNT()``, ``MAX()``, ``MIN()``, dll.) dari dalam ORM Django. Anda dapat "
"memilih ke antara mengembalikan hasil dari pengumpulan secara langsung, atau "
"lainnya memberikan keterangan pbjek di :class:`~django.db.models.query."
"QuerySet` dengan hasil dari pengumpulan permintaan."

msgid ""
"This feature is available as new :meth:`~django.db.models.query.QuerySet."
"aggregate` and :meth:`~django.db.models.query.QuerySet.annotate` methods, "
"and is covered in detail in :doc:`the ORM aggregation documentation </topics/"
"db/aggregation>`."
msgstr ""
"Fitur ini tersedia sebagai metode :meth:`~django.db.models.query.QuerySet."
"aggregate` dan :meth:`~django.db.models.query.QuerySet.annotate` baru, dan "
"melingkupi rincian di :doc:`the ORM aggregation documentation </topics/db/"
"aggregation>`."

msgid "Query expressions"
msgstr "Ungkapan permintaan"

msgid ""
"Queries can now refer to another field on the query and can traverse "
"relationships to refer to fields on related models. This is implemented in "
"the new :class:`~django.db.models.F` object; for full details, including "
"examples, consult the :class:`F expressions documentation <django.db.models."
"F>`."
msgstr ""
"Permintaan sekarang dapat mengacu pada bidang lain pada permintaan dan dapat "
"melintasi hubungan untuk mengacu ke bidang-bidang pada model-model terkait. "
"Ini diterapkan dalam obyek :class:`~django.db.models.F` batu; untuk rincian "
"lengkap, termasuk contoh-contoh, periksa :class:`F expressions documentation "
"<django.db.models.F>`."

msgid "Model improvements"
msgstr "Perbaikan model"

msgid "A number of features have been added to Django's model layer:"
msgstr "Sejumlah fitur telah ditambahkan ke lapisan model Django:"

msgid "\"Unmanaged\" models"
msgstr "Model \"Unmanaged\""

msgid ""
"You can now control whether or not Django manages the life-cycle of the "
"database tables for a model using the :attr:`~Options.managed` model option. "
"This defaults to ``True``, meaning that Django will create the appropriate "
"database tables in ``syncdb`` and remove them as part of the ``reset`` "
"command. That is, Django *manages* the database table's lifecycle."
msgstr ""
"Anda sekarang dapat mengendalikan apakah atau tidak Django mengelola siklus-"
"hidup dari tabel-tabel basisdata untuk model menggunakan pilihan model :attr:"
"`~Options.managed`. Ini awal pada ``True``, berarti bahwa Django akan "
"membuat tabel-tabel basisdata sesuai di ``syncdb`` dan memindahkan mereka "
"sebagai bagian dari perintah ``reset``. Yaitu, Django *mengelola* siklus "
"hidup tabel-tabel basisdata."

msgid ""
"If you set this to ``False``, however, no database table creating or "
"deletion will be automatically performed for this model. This is useful if "
"the model represents an existing table or a database view that has been "
"created by some other means."
msgstr ""
"Jika anda menyetel ini ke ``False``, bagaimanapun, tidak ada pembautan atau "
"penghapusan tabel basisdata akan otomatis dilakukan untuk model ini. Ini "
"berguna jika model mewakili sebuah tabel atau tampilan basisdata yang ada "
"yang telah dibuat oleh beberapa cara lain."

msgid ""
"For more details, see the documentation for the :attr:`~Options.managed` "
"option."
msgstr ""
"Untuk lebih rinci, lihat dokumentasi untuk pilihan :attr:`~Options.managed`."

msgid "Proxy models"
msgstr "Model proxy"

msgid ""
"You can now create :ref:`proxy models <proxy-models>`: subclasses of "
"existing models that only add Python-level (rather than database-level) "
"behavior and aren't represented by a new table. That is, the new model is a "
"*proxy* for some underlying model, which stores all the real data."
msgstr ""
"Anda sekarang dapat membuat subkelas :ref:`proxy models <proxy-models>`: "
"dari model yang ada yang hanya menambahkan tingkat-Python (daripada tingkat-"
"basisdata) dan tidak diwakili oleh tabel baru. yaitu, model baru adalah "
"sebuah *proxy* untuk beberapa model pokok, yang menyimpan semua data "
"sungguhan."

msgid ""
"All the details can be found in the :ref:`proxy models documentation <proxy-"
"models>`. This feature is similar on the surface to unmanaged models, so the "
"documentation has an explanation of :ref:`how proxy models differ from "
"unmanaged models <proxy-vs-unmanaged-models>`."
msgstr ""
"Semua rincian dapat ditemukan di :ref:`dokumentasi model proxy <proxy-"
"models>`. Fitur ini mirip pada permukaan model tidak dikendalikan, jadi "
"dokumentasi punya penjelasan dari :ref:`bagaimana model proxy berbeda dari "
"models tidak dikendalikan <proxy-vs-unmanaged-models>`."

msgid "Deferred fields"
msgstr "Bidang ditangguhkan"

msgid ""
"In some complex situations, your models might contain fields which could "
"contain a lot of data (for example, large text fields), or require expensive "
"processing to convert them to Python objects. If you know you don't need "
"those particular fields, you can now tell Django not to retrieve them from "
"the database."
msgstr ""
"Di beberapa keadaan rumit, model anda mungkin mengandung bidang yang dapat "
"mengandung banyak data (sebagai contoh, bidang teks besar), atau membutuhkan "
"pengolahan mahal untuk merubah mereka menjadi obyek Python. Jika anda "
"mengetahui anda tidak butuh bidang khusus itu, anda sekarang dapat "
"memberitahu Django tidak mengambil mereka dari basisdata."

msgid ""
"You'll do this with the new queryset methods :meth:`~django.db.models.query."
"QuerySet.defer` and :meth:`~django.db.models.query.QuerySet.only`."
msgstr ""
"Anda akan melakukan ini dengan metode queryset :meth:`~django.db.models."
"query.QuerySet.defer` dan :meth:`~django.db.models.query.QuerySet.only`."

msgid "Testing improvements"
msgstr "Mencoba perbaikan"

msgid ""
"A few notable improvements have been made to the :doc:`testing framework </"
"topics/testing/index>`."
msgstr ""
"Sedikit perbaikan penting telah dibuat pada :doc:`testing framework </topics/"
"testing/index>`."

msgid "Test performance improvements"
msgstr "Pengujian perbaikan penampilan"

msgid ""
"Tests written using Django's :doc:`testing framework </topics/testing/"
"index>` now run dramatically faster (as much as 10 times faster in many "
"cases)."
msgstr ""
"Perobaan ditulis menggunakan :doc:`testing framework </topics/testing/"
"index>` Django sekarang berjalan lebih cepat secara dramatis (sebanyak 10 "
"kali lebih cepat di banyak kasus)."

msgid ""
"This was accomplished through the introduction of transaction-based tests: "
"when using :class:`django.test.TestCase`, your tests will now be run in a "
"transaction which is rolled back when finished, instead of by flushing and "
"re-populating the database. This results in an immense speedup for most "
"types of unit tests. See the documentation for :class:`TestCase` and :class:"
"`TransactionTestCase` for a full description, and some important notes on "
"database support."
msgstr ""
"Ini telah diselesaikan melalui pengenalan dari percobaan berdasar transaksi: "
"ketika menggunakan :class:`django.test.TestCase`, percobaan anda akan "
"berjalan sekarang di transaksi yang digulung kembali ketika selesai, "
"daripada membilas dan mengumpulkan kembali basisdata. Hasil ini dalam "
"percepatan besar untuk kebanyakan jenis dari satuan percobaan. Lihat "
"dokumentasi untuk :class:`TestCase` dan :class:`TransactionTestCase` untuk "
"gambaran penuh, dan beberapa catatan penting pada dukungan basisdata."

msgid "Test client improvements"
msgstr "Pengujian perbaikan klien"

msgid ""
"A couple of small -- but highly useful -- improvements have been made to the "
"test client:"
msgstr ""
"Beberapa kecil -- tetapi sangat berguna -- perbaikan telah dibuat pada klien "
"percobaan:"

msgid ""
"The test :class:`Client` now can automatically follow redirects with the "
"``follow`` argument to :meth:`Client.get` and :meth:`Client.post`. This "
"makes testing views that issue redirects simpler."
msgstr ""
"Percobaan :class:`Client` sekarang dapat otomatis mengikuti pengalihan "
"dengan argumen ``follow`` pada :meth:`Client.get` and :meth:`Client.post`. "
"Ini membuat tampilan percobaan yang menerbitkan pengalihan lebih sederhana."

msgid ""
"It's now easier to get at the template context in the response returned the "
"test client: you'll simply access the context as ``request.context[key]``. "
"The old way, which treats ``request.context`` as a list of contexts, one for "
"each rendered template in the inheritance chain, is still available if you "
"need it."
msgstr ""
"Sekarang lebih mudah mendapatkan cetakan konteks di tanggapan mengembalikan "
"percobaan klien: anda akan cukup mengakses konteks sebagai ``request."
"context[key]``. Cara lama, yang memperlakukan ``request.context`` sebagai "
"dafar konteks, satu untuk setiap cetakan dibangun di rantai warisan, masih "
"tersedia jika anda membutuhkannya."

msgid "New admin features"
msgstr "Fitur admin baru"

msgid ""
"Django 1.1 adds a couple of nifty new features to Django's admin interface:"
msgstr ""
"Django 1.1 menambahkan beberapa fitur baru yang bagus pada antarmuka admin "
"Django:"

msgid "Editable fields on the change list"
msgstr "Bidang dapat dirubah pada daftar perubahan"

msgid ""
"You can now make fields editable on the admin list views via the new :ref:"
"`list_editable <admin-list-editable>` admin option. These fields will show "
"up as form widgets on the list pages, and can be edited and saved in bulk."
msgstr ""
"Anda sekarang dapat membuat bidang disunting pada tampilan daftar admin "
"melalui pilihan admin :ref:`list_editable <admin-list-editable>` baru. "
"Bidang-bidang ini akan menampilkan widget formulir pada daftar halaman, dan "
"dpat disunting dan disimpan dalam jumlah besar."

msgid "Admin \"actions\""
msgstr "Admin \"actions\""

msgid ""
"You can now define :doc:`admin actions </ref/contrib/admin/actions>` that "
"can perform some action to a group of models in bulk. Users will be able to "
"select objects on the change list page and then apply these bulk actions to "
"all selected objects."
msgstr ""
"Anda sekarang dapat menentukan :doc:`admin actions </ref/contrib/admin/"
"actions>` yang dapat melakukan beberapa tindakan pada sekelompok model dalam "
"jumlah besar. Pengguna akan dapat memilih obyek pada perubahan daftar "
"halaman dan kemudian memberlakukan tindakan dalam jumlah besar ini pada "
"semua obyek terpilih."

msgid ""
"Django ships with one pre-defined admin action to delete a group of objects "
"in one fell swoop."
msgstr ""
"Django dibekali dengan satu tindakan admin pra penentuan untuk menghapus "
"sebuah kelompok dari obyek di sekali kejadian."

msgid "Conditional view processing"
msgstr "Pengolahan tampilan bersyarat"

msgid ""
"Django now has much better support for :doc:`conditional view processing </"
"topics/conditional-view-processing>` using the standard ``ETag`` and ``Last-"
"Modified`` HTTP headers. This means you can now easily short-circuit view "
"processing by testing less-expensive conditions. For many views this can "
"lead to a serious improvement in speed and reduction in bandwidth."
msgstr ""
"Django sekarang mempunyai lebih baik dukungan untuk :doc:`conditional view "
"processing </topics/conditional-view-processing>` menggunakan standar kepala "
"HTTP ``ETag`` dan ``Last-Modified``. Ini berarti anda sekarang dapat dengan "
"mudah mengolah tampilan arus-pendek dengan mencoba persyaratan lebih-murah. "
"Untuk banyak tampilan ini dapat membawa ke perbaikan berat dalam kecepatan "
"dan pengurangan di pita lebar."

msgid "URL namespaces"
msgstr "Namespace URL"

msgid ""
"Django 1.1 improves :ref:`named URL patterns <naming-url-patterns>` with the "
"introduction of URL \"namespaces.\""
msgstr ""
"Django 1.1 memperbaiki :ref:`named URL patterns <naming-url-patterns>` "
"dengan perkenalan dari URL \"namespaces.\""

msgid ""
"In short, this feature allows the same group of URLs, from the same "
"application, to be included in a Django URLConf multiple times, with varying "
"(and potentially nested) named prefixes which will be used when performing "
"reverse resolution. In other words, reusable applications like Django's "
"admin interface may be registered multiple times without URL conflicts."
msgstr ""
"Pendeknya, fitur ini mengizinkan kelompok sama dari URL, dari aplikasi sama, "
"untuk disertakan di Django URLConf beberapa kali, dengan beragam (dan "
"kemungkinan bersarang) awalan bernama yang akan digunakan ketika melakukan "
"membalikkan keputusan. Dengan kata lain, aplikasi digunakan kembali seperti "
"antarmuka admin Django mungkin mendaftar beberapa kali tanpa pertentangan "
"URL."

msgid ""
"For full details, see :ref:`the documentation on defining URL namespaces "
"<topics-http-defining-url-namespaces>`."
msgstr ""
"Untuk rincian penuh, lihat :ref:`the documentation on defining URL "
"namespaces <topics-http-defining-url-namespaces>`."

msgid "GeoDjango"
msgstr "GeoDjango"

msgid ""
"In Django 1.1, :doc:`GeoDjango </ref/contrib/gis/index>` (i.e. ``django."
"contrib.gis``) has several new features:"
msgstr ""

msgid ""
"Support for SpatiaLite_ -- a spatial database for SQLite -- as a spatial "
"backend."
msgstr ""
"Dukungan untuk SpatiaLite_ -- basisdata spasial untuk SQLite -- sebagai "
"backend spasial."

msgid ""
"Geographic aggregates (``Collect``, ``Extent``, ``MakeLine``, ``Union``) and "
"``F`` expressions."
msgstr ""
"Pengumpulan geografis pernyataan (``Collect``, ``Extent``, ``MakeLine``, "
"``Union``) dan ``F``."

msgid ""
"New ``GeoQuerySet`` methods: ``collect``, ``geojson``, and ``snap_to_grid``."
msgstr ""
"Metode ``GeoQuerySet`` baru: ``collect``, ``geojson``, dan ``snap_to_grid``."

msgid "A new list interface methods for ``GEOSGeometry`` objects."
msgstr "Daftar antarmuka metode baru dari obyek ``GEOSGeometry``."

msgid "For more details, see the GeoDjango documentation."
msgstr "Untuk lebih rinci, lihat dokumentasi GeoDjango."

msgid "Other improvements"
msgstr "Perbaikan lain"

msgid "Other new features and changes introduced since Django 1.0 include:"
msgstr "Fitur baru dan perubahan diperkenalkan sejak Django 1.0 termasuk:"

msgid ""
"The :doc:`CSRF protection middleware </ref/csrf>` has been split into two "
"classes -- ``CsrfViewMiddleware`` checks incoming requests, and "
"``CsrfResponseMiddleware`` processes outgoing responses. The combined "
"``CsrfMiddleware`` class (which does both) remains for backwards-"
"compatibility, but using the split classes is now recommended in order to "
"allow fine-grained control of when and where the CSRF processing takes place."
msgstr ""
":doc:`CSRF protection middleware </ref/csrf>` telah dipisah menjadi dua "
"kelas -- ``CsrfViewMiddleware`` memeriksa permintaan datang, dan "
"``CsrfResponseMiddleware`` mengolah tanggapan keluar. Paduan kelas "
"``CsrfMiddleware`` (yang melakukan keduanya) tetap untuk kesesuaian-"
"kebelakang, tetapi menggunakan kelas-kelas terpisah sekarang dianjurkan agar "
"mengizinkan kendali jaringan-halus dari ketika dan dimana pengolahan CSRF "
"mengambil tempat.+"

msgid ""
"``reverse()`` and code which uses it (e.g., the ``{% url %}`` template tag) "
"now works with URLs in Django's administrative site, provided that the admin "
"URLs are set up via ``include(admin.site.urls)`` (sending admin requests to "
"the ``admin.site.root`` view still works, but URLs in the admin will not be "
"\"reversible\" when configured this way)."
msgstr ""
"`reverse()`` dan kode yang menggunakannya (sebagai contoh, etiket cetakan "
"``{% url %}``) sekarang bekerja dengan URL di situs administratif Django, "
"asalkan URL admin disetel melalui ``include(admin.site.urls)`` (mengirim "
"permintaan admin ke tampilan ``admin.site.root`` masih bekerja, tetapi URL "
"di admin tidak akan \"reversible\" ketika mengkonfigurasi cara ini)."

msgid ""
"The ``include()`` function in Django URLconf modules can now accept "
"sequences of URL patterns (generated by ``patterns()``) in addition to "
"module names."
msgstr ""
"Fungsi ``include()`` di modul Django URLconf sekarang dapat menerima urutan "
"dari pola URL (dibangkitkan oleh ``patterns()``) sebagai tambahan ke nama "
"modul."

msgid ""
"Instances of Django forms (see :doc:`the forms overview </topics/forms/"
"index>`) now have two additional methods, ``hidden_fields()`` and "
"``visible_fields()``, which return the list of hidden -- i.e., ``<input "
"type=\"hidden\">`` -- and visible fields on the form, respectively."
msgstr ""
"Contoh dari formulir Django (lihat :doc:`the forms overview </topics/forms/"
"index>`) sekarang mempunyai dua metode tambahan, ``hidden_fields()`` dan "
"``visible_fields()``, yang mengembalikan daftar dari tersembunyi -- yaitu, "
"``<input type=\"hidden\">`` -- dan bidang-bidang nampak pada formulir, "
"masing-masing."

msgid ""
"The ``redirect_to`` generic view now accepts an additional keyword argument "
"``permanent``. If ``permanent`` is ``True``, the view will emit an HTTP "
"permanent redirect (status code 301). If ``False``, the view will emit an "
"HTTP temporary redirect (status code 302)."
msgstr ""
"Tampilan umum ``redirect_to`` sekarang menerima sebuah argumen kata kunci "
"tambahan ``permanent``. Jika ``permanent`` adalah ``True``, tampilan akan "
"mengeluarkan pengalihan tetap HTTP (kode keadaan 301). Jika ``False``, "
"tampilan akan mengeluarkan pengalihan sementara HTTP (kode keadaan 302)."

msgid ""
"A new database lookup type -- ``week_day`` -- has been added for "
"``DateField`` and ``DateTimeField``. This type of lookup accepts a number "
"between 1 (Sunday) and 7 (Saturday), and returns objects where the field "
"value matches that day of the week. See :ref:`the full list of lookup types "
"<field-lookups>` for details."
msgstr ""
"Jenis pencarian basisdata baru -- ``week_day`` -- telah ditambahkan untuk "
"``DateField`` dan ``DateTimeField``. Jenis ini dari pencarian menerima angka "
"diantara 1 (Minggu) dan 7 (Sabtu), dan mengembalikan sebuah obyek dimana "
"nilai bidang cocok hari itu dari minggu. Lihat :ref:`the full list of lookup "
"types <field-lookups>` untuk rincian."

msgid ""
"The ``{% for %}`` tag in Django's template language now accepts an optional "
"``{% empty %}`` clause, to be displayed when ``{% for %}`` is asked to loop "
"over an empty sequence. See :doc:`the list of built-in template tags </ref/"
"templates/builtins>` for examples of this."
msgstr ""
"Etiket ``{% for %}`` di bahasa cetakan Django sekarang menerima sebuah "
"pilihan klausa ``{% empty %}``, untuk ditampilkan ketika ``{% for %}`` "
"diminta berputar terhadap urutan kosong. Lihat :doc:`the list of built-in "
"template tags </ref/templates/builtins>` untuk contoh dari ini."

msgid ""
"The :djadmin:`dumpdata` management command now accepts individual model "
"names as arguments, allowing you to export the data just from particular "
"models."
msgstr ""
"Perintah pengelolaan :djadmin:`dumpdata` sekarang menerima nama model "
"tersendiri sebagai argumen, mengizinkan anda untuk mengekspor data cukup "
"dari model tertentu."

msgid ""
"There's a new :tfilter:`safeseq` template filter which works just like :"
"tfilter:`safe` for lists, marking each item in the list as safe."
msgstr ""
"Ada cetakan penyaring :tfilter:`safeseq` baru yang bekerja seperti :tfilter:"
"`safe` untuk daftar, menandai setiap barang di daftar sebagai safe."

msgid ""
":doc:`Cache backends </topics/cache>` now support ``incr()`` and ``decr()`` "
"commands to increment and decrement the value of a cache key. On cache "
"backends that support atomic increment/decrement -- most notably, the "
"memcached backend -- these operations will be atomic, and quite fast."
msgstr ""
":doc:`Cache backends </topics/cache>` sekarang mendukung perintah ``incr()`` "
"dan ``decr()`` untuk menaikkan dan menurunkan nilai dari kunci tembolok. "
"Pada backend tembolok yang mendukung menaik/menurun kecil -- paling "
"terutama, memcache backend -- tindakan ini akan menjadi kecil, dan sangat "
"cepat."

msgid ""
"Django now can :doc:`easily delegate authentication to the web server </"
"howto/auth-remote-user>` via a new authentication backend that supports the "
"standard ``REMOTE_USER`` environment variable used for this purpose."
msgstr ""

msgid ""
"There's a new :func:`django.shortcuts.redirect` function that makes it "
"easier to issue redirects given an object, a view name, or a URL."
msgstr ""
"Ada fungsi :func:`django.shortcuts.redirect` baru yang membuatnya lebih "
"mudah mengeluarkan pengalihan yang diberikan sebuah obyek, nama tampilan, "
"atau URL."

msgid ""
"The ``postgresql_psycopg2`` backend now supports :ref:`native PostgreSQL "
"autocommit <postgresql-notes>`. This is an advanced, PostgreSQL-specific "
"feature, that can make certain read-heavy applications a good deal faster."
msgstr ""
"Backend ``postgresql_psycopg2`` sekarang mendukung :ref:`native PostgreSQL "
"autocommit <postgresql-notes>`. Ini merupakan lanjutan, fitur khusus-"
"PostgreSQL, yang dapat membuat aplikasi tertentu membaca-berat menjadi lebih "
"cepat."

msgid "What's next?"
msgstr "Apa Selanjutnya? "

msgid ""
"We'll take a short break, and then work on Django 1.2 will begin -- no rest "
"for the weary! If you'd like to help, discussion of Django development, "
"including progress toward the 1.2 release, takes place daily on the |django-"
"developers| mailing list and in the ``#django-dev`` IRC channel on ``irc."
"libera.chat``. Feel free to join the discussions!"
msgstr ""

msgid ""
"Django's online documentation also includes pointers on how to contribute to "
"Django:"
msgstr ""
"Dokumentasi daring Django juga menyertakan petunjuk pada bagaimana membantu "
"Django:"

msgid ":doc:`How to contribute to Django </internals/contributing/index>`"
msgstr ":doc:`How to contribute to Django </internals/contributing/index>`"

msgid ""
"Contributions on any level -- developing code, writing documentation or "
"simply triaging tickets and helping to test proposed bugfixes -- are always "
"welcome and appreciated."
msgstr ""
"Bantuan pada tiap tingkatan -- mengembangkan kode, menulis dokumentasi atau "
"hanya mendahulukan tiket dan membantu untuk mencoba perbaikan kesalahan yang "
"diajukan  -- selalu disambut dan dihargai."

msgid "And that's the way it is."
msgstr "Dan itulah cara itu."

msgid "Django 1.1.2 release notes"
msgstr "Catatan terbitan Django 1.1.2"

msgid "Welcome to Django 1.1.2!"
msgstr "Selamat datang di Django 1.1.2!"

msgid ""
"This is the second \"bugfix\" release in the Django 1.1 series, improving "
"the stability and performance of the Django 1.1 codebase."
msgstr ""
"Ini adalah terbitan \"bugfix\" kedua di rangkaian Django 1.1, memperbaiki "
"kestabilan dan penampilan dari basis kode Django 1.1."

msgid ""
"Django 1.1.2 maintains backwards compatibility with Django 1.1.0, but "
"contain a number of fixes and other improvements. Django 1.1.2 is a "
"recommended upgrade for any development or deployment currently using or "
"targeting Django 1.1."
msgstr ""
"Django 1.1.2 merawat kesesuaian kebelakang dengan Django 1.1.0, tetapi "
"mengandung sejumlah perbaikan dan pembetulan lainnya. Django 1.1.2 adalah "
"peningkatan yang dianjurkan untuk setiap pengembangan atau penyebaran saat "
"ini menggunakan atau menyasar Django 1.1."

msgid ""
"For full details on the new features, backwards incompatibilities, and "
"deprecated features in the 1.1 branch, see the :doc:`/releases/1.1`."
msgstr ""
"Untuk rincian penuh pada fitur baru, ketidaksesuaian kebelakang, dan fitur "
"diusangkan di cabang 1.1, lihat :doc:`/releases/1.1`."

msgid "Backwards-incompatible changes in 1.1.2"
msgstr "Perubahan bertentangan kebelakang di 1.1.2"

msgid "Test runner exit status code"
msgstr "Kode keadaan keluar penjalan percobaan"

msgid ""
"The exit status code of the test runners (``tests/runtests.py`` and ``python "
"manage.py test``) no longer represents the number of failed tests, since a "
"failure of 256 or more tests resulted in a wrong exit status code.  The exit "
"status code for the test runner is now 0 for success (no failing tests) and "
"1 for any number of test failures.  If needed, the number of test failures "
"can be found at the end of the test runner's output."
msgstr ""
"Kode keadaan keluar dari penjalan percobaan (``tests/runtests.py`` dan "
"``python manage.py test``) tidak lagi mewakili sejumlah percobaan gagal, "
"sejak kegagalan dari 256 atu lebih percobaan dihasilkan di kode keadaan "
"keluar salah. Kode keadaan keluar untuk penjalan percobaan sekarang 0 untuk "
"berhasil (tidak ada kegagalan percobaan) dan 1 untuk tiap angka dari "
"kegagalan percobaan. Jika dibutuhkan, sejumlah kegagalan percobaan dapat "
"ditemukan di akhir dari keluaran penjalan percobaan. "

msgid "Cookie encoding"
msgstr "Menyandi kue"

msgid ""
"To fix bugs with cookies in Internet Explorer, Safari, and possibly other "
"browsers, our encoding of cookie values was changed so that the characters "
"comma and semi-colon are treated as non-safe characters, and are therefore "
"encoded as ``\\054`` and ``\\073`` respectively.  This could produce "
"backwards incompatibilities, especially if you are storing comma or semi-"
"colon in cookies and have JavaScript code that parses and manipulates cookie "
"values client-side."
msgstr ""
"Untuk memperbaiki kesalahan dengan kue di Internet Explorer, Safari, dan "
"kemungkinan peramban lain, penyandian kami dari nilai kue telah dirubah "
"sehingga karakter koma dan titika koma diperlakukan sebagai karakter tidak-"
"aman, dan karena itu di sandikan masing-masing sebagai ``\\054`` dan "
"``\\073``. Ini dapat menghasilkan ketidaksesuaian kebelakang, khususnya jika "
"anda menyimpan koma atau titik koma di kue dan memiliki kode JavaScript dan "
"merubah nilai kue di sisi klien."

msgid "One new feature"
msgstr "Satu fitur baru"

msgid ""
"Ordinarily, a point release would not include new features, but in the case "
"of Django 1.1.2, we have made an exception to this rule. Django 1.2 (the "
"next major release of Django) will contain a feature that will improve "
"protection against Cross-Site Request Forgery (CSRF) attacks. This feature "
"requires the use of a new :ttag:`csrf_token` template tag in all forms that "
"Django renders."
msgstr ""
"Biasanya, titik terbitan akan tidak menyertakan fitur baru, tetapi di kasus "
"Django 1.1.2, kami telah membuat sebuah pengecualian pada aturan ini. Django "
"1.2 (terbitan utama selanjutnya dari Django) akan mengandung sebuah fitur "
"yang akan memperbaiki terhadap serangan Cross-Site Request Forgery (CSRF). "
"Fitur ini membutuhkan penggunakaan etiket cetakan :ttag:`csrf_token` baru di "
"semua formulir yang Django bangun."

msgid ""
"To make it easier to support both 1.1.X and 1.2.X versions of Django with "
"the same templates, we have decided to introduce the :ttag:`csrf_token` "
"template tag to the 1.1.X branch. In the 1.1.X branch, :ttag:`csrf_token` "
"does nothing - it has no effect on templates or form processing. However, it "
"means that the same template will work with Django 1.2."
msgstr ""
"Untuk membuatnya lebih mudah untuk mendukung kedua versi 1.1.X dan 1.2.X "
"dari Django dengan cetakan sama, kami telah memutuskan memperkenalkan etiket "
"cetakan :ttag:`csrf_token` pada cabang 1.1.X. Di cabang 1.1.X, :ttag:"
"`csrf_token` tidak melakukan apapun - itu tidak mempunyai pengaruh pada "
"cetakan atau pengolahan formulir, itu berarti bahwa cetakan sama akan "
"bekerja dengan Django 1.2."

msgid "Django 1.1.3 release notes"
msgstr "Catatan terbitan Django 1.1.3"

msgid "Welcome to Django 1.1.3!"
msgstr "Selamat datang di Django 1.1.3!"

msgid ""
"This is the third \"bugfix\" release in the Django 1.1 series, improving the "
"stability and performance of the Django 1.1 codebase."
msgstr ""
"Ini adalah terbitan \"bugfix\" ketiga di rangkaian Django 1.1, memperbaiki "
"kestabilan dan penampilan dari kode dasar Django 1.1."

msgid ""
"With one exception, Django 1.1.3 maintains backwards compatibility with "
"Django 1.1.2. It also contains a number of fixes and other improvements. "
"Django 1.1.2 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.1."
msgstr ""
"Dengan satu pengecualian, Django 1.1.3 merawat kesesuaian kebelakang dengan "
"Django 1.1.2. Itu juga mengandung sejumlah perbaikan dan pembetulan lainnya. "
"Django 1.1.2 adalah peningkatan dianjurkan untuk setiap pengembangan dan "
"penyebaran saat ini menggunakan atau menyasar Django 1.1."

msgid "Backwards incompatible changes"
msgstr "Perubahan bertentangan kebelakang"

msgid "Restricted filters in admin interface"
msgstr "Batasan penyaring di antarmuka admin"

msgid ""
"The Django administrative interface, ``django.contrib.admin``, supports "
"filtering of displayed lists of objects by fields on the corresponding "
"models, including across database-level relationships. This is implemented "
"by passing lookup arguments in the querystring portion of the URL, and "
"options on the ModelAdmin class allow developers to specify particular "
"fields or relationships which will generate automatic links for filtering."
msgstr ""
"Antarmuka administratif Django, ``django.contrib.admin``, mendukung "
"penyaringan dari daftar ditampilkan dari obyek-obyek oleh bidang-bidang pada "
"model sesuai, termasuk hubungan lintas tingkat-basisdata. Ini diterapkan "
"dengan melewatkan argumen pencarian di bagian querystring dari URL, dan "
"pilihan pada kelas ModelAfmin mengizinkan pengembang untuk menentukan bidang-"
"bidang atau hubungan khusus yang akan membangkitkan tautan otomatis untuk "
"penyaringan."

msgid ""
"One historically-undocumented and -unofficially-supported feature has been "
"the ability for a user with sufficient knowledge of a model's structure and "
"the format of these lookup arguments to invent useful new filters on the fly "
"by manipulating the querystring."
msgstr ""
"Satu riwayat tidak didokumetasi dan fitur -dukungan-tidak resmi telah mampu "
"untuk pengguna dengan pengetahuan cukup dari struktur model dan bentuk dari "
"argumen pencarian ini untuk membuat penyaring baru berguna dengan cepat "
"dengan merubah permintaan deretan karakter."

msgid ""
"However, it has been demonstrated that this can be abused to gain access to "
"information outside of an admin user's permissions; for example, an attacker "
"with access to the admin and sufficient knowledge of model structure and "
"relations could construct query strings which -- with repeated use of "
"regular-expression lookups supported by the Django database API -- expose "
"sensitive information such as users' password hashes."
msgstr ""
"Bagaimanapun, itu telah ditunjukkan bahwa ini dapat disalahgunakan untuk "
"mendapatkan akses ke informasi diluar dari perizinan pengguna admin; sebagai "
"contoh, seorang penyerang dengan akses ke admin dan pengetahun yang cukup "
"dari struktur model dan hubungan dapat membangun permintaan deretan karakter "
"yang -- dengan penggunaan berulang pencarian pernyataan biasa didukung oleh "
"API basisdata Django -- membuka informasi sensitif seperti acakan sandi "
"pengguna."

msgid ""
"To remedy this, ``django.contrib.admin`` will now validate that querystring "
"lookup arguments either specify only fields on the model being viewed, or "
"cross relations which have been explicitly allowed by the application "
"developer using the preexisting mechanism mentioned above. This is backwards-"
"incompatible for any users relying on the prior ability to insert arbitrary "
"lookups."
msgstr ""

msgid "Django 1.1.4 release notes"
msgstr "Catatan terbitan Django 1.1.4"

msgid "Welcome to Django 1.1.4!"
msgstr "Selamat datang di Django 1.1.4!"

msgid ""
"This is the fourth \"bugfix\" release in the Django 1.1 series, improving "
"the stability and performance of the Django 1.1 codebase."
msgstr ""
"Ini adalah terbitan \"bugfix\" keempat di rangkaian Django 1.1, memperbaiki "
"kestabilan dan penampilan dari kode dasar Django 1.1."

msgid ""
"With one exception, Django 1.1.4 maintains backwards compatibility with "
"Django 1.1.3. It also contains a number of fixes and other improvements. "
"Django 1.1.4 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.1."
msgstr ""
"Dengan satu pengecualian, Django 1.1.4 merawat kesesuaian kebelakang dengan "
"Django 1.1.3. Itu juga mengandung sejumlah perbaikan dan pembetulan lainnya. "
"Django 1.1.4 adalah peningkatan dianjurkan untuk setiap pengembangan dan "
"penyebaran saat ini menggunakan atau menyasar Django 1.1."

msgid "CSRF exception for AJAX requests"
msgstr "Pengecualian CSRF untuk permintaan AJAX"

msgid ""
"Django includes a CSRF-protection mechanism, which makes use of a token "
"inserted into outgoing forms. Middleware then checks for the token's "
"presence on form submission, and validates it."
msgstr ""
"Django menyertakan mekanisme perlindungan CSRF, yang memanfaatkan token "
"dimasukkan kedalam formulir keluar. Middleware kemudian memeriksa untuk "
"kehadiran token pada pengajuan formulir, dan mengecek itu."

msgid ""
"Prior to Django 1.2.5, our CSRF protection made an exception for AJAX "
"requests, on the following basis:"
msgstr ""
"Sebelum Django 1.2.5, perlindungan CSRF kami membuat sebuah pengecualian "
"untuk permintaan AJAX, pada dasar berikut:"

msgid ""
"Many AJAX toolkits add an X-Requested-With header when using XMLHttpRequest."
msgstr ""
"Banyak alat bantu AJAX menambahkan sebuah kepala X-Requested-With ketika "
"menggunakan XMLHttpRequest."

msgid "Browsers have strict same-origin policies regarding XMLHttpRequest."
msgstr "Peramban mempunyai kebijakan asli-sama ketat mengenai XMLHttpRequest."

msgid ""
"In the context of a browser, the only way that a custom header of this "
"nature can be added is with XMLHttpRequest."
msgstr ""
"Di konteks dari peramban, hanya cara yang kepala penyesuaian dari sifat ini "
"dapat ditambahkan adalah dengan XMLHttpRequest."

msgid ""
"Therefore, for ease of use, we did not apply CSRF checks to requests that "
"appeared to be AJAX on the basis of the X-Requested-With header. The Ruby on "
"Rails web framework had a similar exemption."
msgstr ""
"Karena itu, untuk mudah penggunaan, kami tidak memberlakukan pemeriksanaan "
"CSRF untuk meminta yang muncul menjadi AJAX pada dasar dari kepala X-"
"Requested-With. Kerangka kerja jaringan Ruby on Rails mempunyai pengecualian "
"yang sama."

msgid ""
"Recently, engineers at Google made members of the Ruby on Rails development "
"team aware of a combination of browser plugins and redirects which can allow "
"an attacker to provide custom HTTP headers on a request to any website. This "
"can allow a forged request to appear to be an AJAX request, thereby "
"defeating CSRF protection which trusts the same-origin nature of AJAX "
"requests."
msgstr ""
"Baru saja, insinyur di Google membuat anggota dari tim pengembangan Ruby on "
"Rails menyadari dari perpaduan dari plugin peramban dan pengalihan yang "
"dapat mengizinkan seorang penyerang menyediakan kepala HTTP penyesuaian pada "
"permintaan ke tiap situs jaringan. Ini dapat mengizinkan permintaan tiruan "
"muncul menjadi permintaan AJAX, sehingga mengalahkan perlindungan CSRF yang "
"percaya sifat asli-sama dari permintaan AJAX.+"

msgid ""
"Michael Koziarski of the Rails team brought this to our attention, and we "
"were able to produce a proof-of-concept demonstrating the same vulnerability "
"in Django's CSRF handling."
msgstr ""
"Michael Koziarski dari tim Rails membawa ini ke perhatian kami, dan kami "
"dapat menghasilkan bukti dari konsep menunjukkan kerentanan sama di "
"penanganan CSRF Django."

msgid ""
"To remedy this, Django will now apply full CSRF validation to all requests, "
"regardless of apparent AJAX origin. This is technically backwards-"
"incompatible, but the security risks have been judged to outweigh the "
"compatibility concerns in this case."
msgstr ""
"Untuk memperbaiki ini, Django akan sekarang memberlakukan pengesagan CSRF "
"penuh ke semua permintaan, tanpa memperhatikan asal jelas AJAX. Ini secara "
"teknis bertentangan kebelakang, tetapi resiko keamanan telah dijatuhkan "
"lebih besar perhatian kesesuaian dalam kasus ini."

msgid ""
"Additionally, Django will now accept the CSRF token in the custom HTTP "
"header X-CSRFTOKEN, as well as in the form submission itself, for ease of "
"use with popular JavaScript toolkits which allow insertion of custom headers "
"into all AJAX requests."
msgstr ""
"Tambahannya, Django akan sekarang menerima token CSRF dalam kepala HTTP "
"penyesuaian X-CSRFTOKEN, sama halnya di pengajuan formulir itu sendiri, "
"untuk mudah penggunaan dengan alat bantu JavaScript terkenal yang "
"mengizinkan pemasukan kepala penyesuaian kedalam semua permintaan AJAX."

msgid ""
"Please see the :ref:`CSRF docs for example jQuery code <csrf-ajax>` that "
"demonstrates this technique, ensuring that you are looking at the "
"documentation for your version of Django, as the exact code necessary is "
"different for some older versions of Django."
msgstr ""
"Silahkan lihat :ref:`CSRF docs for example jQuery code <csrf-ajax>` yang "
"menunjukkan teknik ini, memastikan bahwa anda mencari di dokumentasi untuk "
"versi Django anda, seperti kode tepat diperlukan berbeda untuk beberapa "
"versi terlama dari Django."

msgid "Django 1.10 release notes"
msgstr "Catatan terbitan Django 1.10"

msgid "*August 1, 2016*"
msgstr "*Agustus 1, 2016*"

msgid "Welcome to Django 1.10!"
msgstr "Selamat datang di Django 1.10!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.10>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.10>` "
"you'll want to be aware of when upgrading from Django 1.9 or older versions. "
"We've :ref:`dropped some features <removed-features-1.10>` that have reached "
"the end of their deprecation cycle, and we've :ref:`begun the deprecation "
"process for some features <deprecated-features-1.10>`."
msgstr ""
"Catatan terbitan ini melingkupi :ref:`new features <whats-new-1.10>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.10>` anda ingin sadari dari ketika meningkatkan dari Django "
"1.9 atau versi terlama. Kami telah :ref:`dropped some features <removed-"
"features-1.10>` yang telah mencapai akhir dari siklus pengusangan mereka, "
"dan kami telah :ref:`begun the deprecation process for some features "
"<deprecated-features-1.10>`."

msgid ""
"See the :doc:`/howto/upgrade-version` guide if you're updating an existing "
"project."
msgstr ""
"Lihat panduan :doc:`/howto/upgrade-version` jika anda sedang memperbaharui "
"proyek yang ada."

msgid "Python compatibility"
msgstr "Kesesuaian Python"

msgid ""
"Like Django 1.9, Django 1.10 requires Python 2.7, 3.4, or 3.5. We **highly "
"recommend** and only officially support the latest release of each series."
msgstr ""
"Seperti Django 1.9, Django 1.10 membutuhkan Python 2.7, 3.4, atau 3.5. Kami "
"**sangat menganjurkan** dan hanya secara resmi mendukung terbitan terakhir "
"dari setiap rangkaian."

msgid "What's new in Django 1.10"
msgstr "Apa yang baru di Django 1.10"

msgid "Full text search for PostgreSQL"
msgstr "Pencarian teks penuh untuk PostgreSQL"

msgid ""
"``django.contrib.postgres`` now includes a :doc:`collection of database "
"functions </ref/contrib/postgres/search>` to allow the use of the full text "
"search engine. You can search across multiple fields in your relational "
"database, combine the searches with other lookups, use different language "
"configurations and weightings, and rank the results by relevance."
msgstr ""
"``django.contrib.postgres`` sekarang menyertakan :doc:`collection of "
"database functions </ref/contrib/postgres/search>` untuk mengizinkan "
"penggunaan dari pencarian teks penuh mesin pencarian. Anda dapat mencari "
"lintas bidang banyak di hubungan basisdata, memadukan pencarian dengan "
"pencarian lain, menggunakan konfigurasi dan pembobotan bahasa berbeda, dan "
"memangkatkan hasil berdasarkan pertalian."

msgid ""
"It also now includes trigram support, using the :lookup:`trigram_similar` "
"lookup, and the :class:`~django.contrib.postgres.search.TrigramSimilarity` "
"and :class:`~django.contrib.postgres.search.TrigramDistance` expressions."
msgstr ""
"Itu juga sekarang menyertakan dukungan trigram, menggunakan pencarian :"
"lookup:`trigram_similar`, dan pernyataan :class:`~django.contrib.postgres."
"search.TrigramSimilarity` dan :class:`~django.contrib.postgres.search."
"TrigramDistance`."

msgid "New-style middleware"
msgstr "Middleware gaya-baru"

msgid ""
":doc:`A new style of middleware is introduced </topics/http/middleware>` to "
"solve the lack of strict request/response layering of the old-style of "
"middleware described in `DEP 0005 <https://github.com/django/deps/blob/main/"
"final/0005-improved-middleware.rst>`_. You'll need to :ref:`adapt old, "
"custom middleware <upgrading-middleware>` and switch from the "
"``MIDDLEWARE_CLASSES`` setting to the new :setting:`MIDDLEWARE` setting to "
"take advantage of the improvements."
msgstr ""

msgid "Official support for Unicode usernames"
msgstr "Dukungan resmi untuk nama pengguna Unicode"

msgid ""
"The :class:`~django.contrib.auth.models.User` model in ``django.contrib."
"auth`` originally only accepted ASCII letters and numbers in usernames. "
"Although it wasn't a deliberate choice, Unicode characters have always been "
"accepted when using Python 3."
msgstr ""
"Model  :class:`~django.contrib.auth.models.User` dalam ``django.contrib."
"auth`` aslinya hanya menerima huruf ASCII dan angka dalam nama penggna. "
"Meskipun itu bukan pilhan disengaja, karakter Unicode selalu diterima ketika "
"menggunakan Python 3."

msgid ""
"The username validator now explicitly accepts Unicode characters by default "
"on Python 3 only."
msgstr ""
"Validator username saat ini menerima karakter Unicode secara default hanya "
"di Python 3."

msgid ""
"Custom user models may use the new :class:`~django.contrib.auth.validators."
"ASCIIUsernameValidator` or :class:`~django.contrib.auth.validators."
"UnicodeUsernameValidator`."
msgstr ""
"Penyesuaian model user mungkin menggunakan :class:`~django.contrib.auth."
"validators.ASCIIUsernameValidator` atau :class:`~django.contrib.auth."
"validators.UnicodeUsernameValidator`."

msgid "Minor features"
msgstr "Fitur kecil"

msgid ":mod:`django.contrib.admin`"
msgstr ":mod:`django.contrib.admin`"

msgid ""
"For sites running on a subpath, the default :attr:`URL for the \"View site\" "
"link <django.contrib.admin.AdminSite.site_url>` at the top of each admin "
"page will now point to ``request.META['SCRIPT_NAME']`` if set, instead of ``/"
"``."
msgstr ""
"Untuk situs-situs berjalan pada subjalur, :attr:`URL awal untuk tautan "
"\"View site\" <django.contrib.admin.AdminSite.site_url>` pada atas dari "
"setiap halaman admin akan sekarang menunjuk ke ``request."
"META['SCRIPT_NAME']`` jika disetel, daripada ``/``."

msgid ""
"The success message that appears after adding or editing an object now "
"contains a link to the object's change form."
msgstr ""
"Pesan berhasil yang muncul setelah menambahkan atau menyunting sebuah obyek "
"sekarang mengandung sebuah tautan ke formulir rubah obyek."

msgid ""
"All inline JavaScript is removed so you can enable the ``Content-Security-"
"Policy`` HTTP header if you wish."
msgstr ""
"Semua deretan JavaScript dipindahkan jadi anda dapat mengadakan kepala HTTP "
"``Content-Security-Policy`` jika anda ingin."

msgid ""
"The new :attr:`InlineModelAdmin.classes <django.contrib.admin."
"InlineModelAdmin.classes>` attribute allows specifying classes on inline "
"fieldsets. Inlines with a ``collapse`` class will be initially collapsed and "
"their header will have a small \"show\" link."
msgstr ""
"Atribut :attr:`InlineModelAdmin.classes <django.contrib.admin."
"InlineModelAdmin.classes>` baru mengizinkan menetapkan kelas-kelas pada "
"deretam kumpulan bidang. Berderet dengan kelas ``collapse`` akan awalnya "
"diruntuhkan dan kepala mereka akan mempunyai tautan \"show\" kecil."

msgid ""
"If a user doesn't have the add permission, the ``object-tools`` block on a "
"model's changelist will now be rendered (without the add button). This makes "
"it easier to add custom tools in this case."
msgstr ""

msgid ""
"The :class:`~django.contrib.admin.models.LogEntry` model now stores change "
"messages in a JSON structure so that the message can be dynamically "
"translated using the current active language. A new ``LogEntry."
"get_change_message()`` method is now the preferred way of retrieving the "
"change message."
msgstr ""
"Model :class:`~django.contrib.admin.models.LogEntry` sekarang menyimpan "
"pesan-pesan berubah di struktur JSON sehingga pesan dapat secara dinamis "
"diterjemahkan menggunakan bahasa aktif saat ini. Metode ``LogEntry."
"get_change_message()`` baru sekarang dipilih dari mengambil pesan berubah."

msgid ""
"Selected objects for fields in ``ModelAdmin.raw_id_fields`` now have a link "
"to object's change form."
msgstr ""
"Obyek terpilih untuk bidang di ``ModelAdmin.raw_id_fields`` sekarang "
"mempunyai sebuah tautan ke formulir rubah obyek."

msgid ""
"Added \"No date\" and \"Has date\" choices for ``DateFieldListFilter`` if "
"the field is nullable."
msgstr ""
"Ditambahkan pilihan \"No date\" dan \"Has date\" untuk "
"``DateFieldListFilter`` jika bidang adalah nullable."

msgid ""
"The jQuery library embedded in the admin is upgraded from version 2.1.4 to "
"2.2.3."
msgstr ""
"Pustaka jQuery ditanam di admin ditingkatkan dari versi 2.1.4 ke 2.2.3."

msgid ":mod:`django.contrib.auth`"
msgstr ":mod:`django.contrib.auth`"

msgid ""
"Added support for the :ref:`Argon2 password hash <argon2_usage>`. It's "
"recommended over PBKDF2, however, it's not the default as it requires a "
"third-party library."
msgstr ""
"Ditambahkan dukungan untuk :ref:`Argon2 password hash <argon2_usage>`. "
"Dianjurkan terhadap PBKDF2, bagaimanapun, itu bukan awal seperti itu "
"membutuhkan pustaka pihak-ketiga."

msgid ""
"The default iteration count for the PBKDF2 password hasher has been "
"increased by 25%. This backwards compatible change will not affect users who "
"have subclassed ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` to "
"change the default value."
msgstr ""
"Perhitungan perulangan awal untuk pengacak sandi PBKDF2 telah ditingkatkan "
"oleh 25%. Perubahan kesesuaian kebelakang tidak akan mempengaruhi pengguna "
"yang mempunyai subkelas ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` "
"untuk merubah nilai awal."

msgid ""
"The ``django.contrib.auth.views.logout()`` view sends \"no-cache\" headers "
"to prevent an issue where Safari caches redirects and prevents a user from "
"being able to log out."
msgstr ""
"Tampilan ``django.contrib.auth.views.logout()`` mengirim kepala \"no-cache\" "
"untuk mencegah sebuah masalah dimana cache Safari pengalihan dan mencegah "
"seorang pengguna menjadi dapat keluar."

msgid ""
"Added the optional ``backend`` argument to :func:`django.contrib.auth.login` "
"to allow using it without credentials."
msgstr ""
"Ditambahkan argumen pilihan  ``backend`` pada :func:`django.contrib.auth."
"login` untuk menggunakan itu tanpa without surat pengenal."

msgid ""
"The new :setting:`LOGOUT_REDIRECT_URL` setting controls the redirect of the "
"``django.contrib.auth.views.logout()`` view, if the view doesn't get a "
"``next_page`` argument."
msgstr ""
"Pengaturan :setting:`LOGOUT_REDIRECT_URL` baru mengendalikan pengalihan dari "
"tampilan :func:`~django.contrib.auth.views.logout()`, jika tampilan tidak "
"mendapatkan argumen ``next_page``."

msgid ""
"The new ``redirect_authenticated_user`` parameter for the ``django.contrib."
"auth.views.login()`` view allows redirecting authenticated users visiting "
"the login page."
msgstr ""
"Parameter ``redirect_authenticated_user`` baru untuk tampilan ``django."
"contrib.auth.views.login()`` mengizinkan pengalihan pengguna "
"terautentifikasi mengunjungi halaman masuk."

msgid ""
"The new :class:`~django.contrib.auth.backends.AllowAllUsersModelBackend` "
"and :class:`~django.contrib.auth.backends.AllowAllUsersRemoteUserBackend` "
"ignore the value of ``User.is_active``, while :class:`~django.contrib.auth."
"backends.ModelBackend` and :class:`~django.contrib.auth.backends."
"RemoteUserBackend` now reject inactive users."
msgstr ""
":class:`~django.contrib.auth.backends.AllowAllUsersModelBackend` dan :class:"
"`~django.contrib.auth.backends.AllowAllUsersRemoteUserBackend` baru "
"mengabaikan nilai dari ``User.is_active``, selagi :class:`~django.contrib."
"auth.backends.ModelBackend` dan :class:`~django.contrib.auth.backends."
"RemoteUserBackend` sekarang menolak pengguna tidak aktif."

msgid ":mod:`django.contrib.gis`"
msgstr ":mod:`django.contrib.gis`"

msgid ""
":ref:`Distance lookups <distance-lookups>` now accept expressions as the "
"distance value parameter."
msgstr ""
":ref:`Distance lookups <distance-lookups>` sekarang menerima pernyataan "
"sebagai jarak parameter nilai."

msgid ""
"The new :attr:`GEOSGeometry.unary_union <django.contrib.gis.geos."
"GEOSGeometry.unary_union>` property computes the union of all the elements "
"of this geometry."
msgstr ""
"Harta :attr:`GEOSGeometry.unary_union <django.contrib.gis.geos.GEOSGeometry."
"unary_union>` baru menghitung gabungan dari semua unsur dari geometri ini."

msgid ""
"Added the :meth:`GEOSGeometry.covers() <django.contrib.gis.geos.GEOSGeometry."
"covers>` binary predicate."
msgstr ""
"Ditambahkan sebutan biner :meth:`GEOSGeometry.covers() <django.contrib.gis."
"geos.GEOSGeometry.covers>`."

msgid ""
"Added the :meth:`GDALBand.statistics() <django.contrib.gis.gdal.GDALBand."
"statistics>` method and :attr:`~django.contrib.gis.gdal.GDALBand.mean` and :"
"attr:`~django.contrib.gis.gdal.GDALBand.std` attributes."
msgstr ""
"Ditambahkan metode :meth:`GDALBand.statistics() <django.contrib.gis.gdal."
"GDALBand.statistics>` dan atribut :attr:`~django.contrib.gis.gdal.GDALBand."
"mean` dan :attr:`~django.contrib.gis.gdal.GDALBand.std`."

msgid ""
"Added support for the :class:`~django.contrib.gis.db.models.MakeLine` "
"aggregate and :class:`~django.contrib.gis.db.models.functions.GeoHash` "
"function on SpatiaLite."
msgstr ""
"Ditambahkan dukungan untuk pengumpulan fungsi :class:`~django.contrib.gis.db."
"models.MakeLine` dan :class:`~django.contrib.gis.db.models.functions."
"GeoHash` pada SpatiaLite."

msgid ""
"Added support for the :class:`~django.contrib.gis.db.models.functions."
"Difference`, :class:`~django.contrib.gis.db.models.functions.Intersection`, "
"and :class:`~django.contrib.gis.db.models.functions.SymDifference` functions "
"on MySQL."
msgstr ""
"Ditambahkan dukungan untuk fungsi :class:`~django.contrib.gis.db.models."
"functions.Difference`, :class:`~django.contrib.gis.db.models.functions."
"Intersection`, dan :class:`~django.contrib.gis.db.models.functions."
"SymDifference` pada MySQL."

msgid "Added support for instantiating empty GEOS geometries."
msgstr "Ditambahkan dukungan untuk instantisi geometri GEOS kosong."

msgid ""
"The new :attr:`~django.contrib.gis.geos.WKTWriter.trim` and :attr:`~django."
"contrib.gis.geos.WKTWriter.precision` properties of :class:`~django.contrib."
"gis.geos.WKTWriter` allow controlling output of the fractional part of the "
"coordinates in WKT."
msgstr ""
"Harta :attr:`~django.contrib.gis.geos.WKTWriter.trim` dan :attr:`~django."
"contrib.gis.geos.WKTWriter.precision` baru dari :class:`~django.contrib.gis."
"geos.WKTWriter` mengizinkan mengendalikan keluaran dari bagian pecahan dari "
"kordinat di WKT."

msgid ""
"Added the :attr:`LineString.closed <django.contrib.gis.geos.LineString."
"closed>` and :attr:`MultiLineString.closed <django.contrib.gis.geos."
"MultiLineString.closed>` properties."
msgstr ""
"Ditambahkan harta :attr:`LineString.closed <django.contrib.gis.geos."
"LineString.closed>` dan :attr:`MultiLineString.closed <django.contrib.gis."
"geos.MultiLineString.closed>`."

msgid ""
"The :doc:`GeoJSON serializer </ref/contrib/gis/serializers>` now outputs the "
"primary key of objects in the ``properties`` dictionary if specific fields "
"aren't specified."
msgstr ""
":doc:`GeoJSON serializer </ref/contrib/gis/serializers>` sekarang "
"mengeluarkan primary key dari obyek di kamus ``properties`` jika bidang "
"tertentu tidak ditetapkan."

msgid ""
"The ability to replicate input data on the :meth:`GDALBand.data() <django."
"contrib.gis.gdal.GDALBand.data>` method was added. Band data can now be "
"updated with repeated values efficiently."
msgstr ""
"Kemampuan melipat data masukan pada metode :meth:`GDALBand.data() <django."
"contrib.gis.gdal.GDALBand.data>` telah ditambahkan. Pita data sekarang dapat "
"diperbaharui dengan nilai berulang secara efisien."

msgid ""
"Added database functions :class:`~django.contrib.gis.db.models.functions."
"IsValid` and :class:`~django.contrib.gis.db.models.functions.MakeValid`, as "
"well as the :lookup:`isvalid` lookup, all for PostGIS. This allows filtering "
"and repairing invalid geometries on the database side."
msgstr ""
"Ditambahkan fungsi basisdata :class:`~django.contrib.gis.db.models.functions."
"IsValid` dan :class:`~django.contrib.gis.db.models.functions.MakeValid`, "
"sama halnya seperti pencarian :lookup:`isvalid`, semua untuk PostGIS. Ini "
"mengizinkan menyaring dan memperbaiki geometri tidak sah pada sisi basisdata."

msgid ""
"Added raster support for all :doc:`spatial lookups </ref/contrib/gis/"
"geoquerysets>`."
msgstr ""
"Ditambahkan dukungan raster untuk semua :doc:`spatial lookups </ref/contrib/"
"gis/geoquerysets>`."

msgid ":mod:`django.contrib.postgres`"
msgstr ":mod:`django.contrib.postgres`"

msgid ""
"For convenience, :class:`~django.contrib.postgres.fields.HStoreField` now "
"casts its keys and values to strings."
msgstr ""
"Untuk meyakinkan, :class:`~django.contrib.postgres.fields.HStoreField` "
"sekarang memberikan kunci dan nilainya ke deretan karakter."

msgid ":mod:`django.contrib.sessions`"
msgstr ":mod:`django.contrib.sessions`"

msgid ""
"The :djadmin:`clearsessions` management command now removes file-based "
"sessions."
msgstr ""
"Perintah pengelolaan :djadmin:`clearsessions` sekarang memindahkan sesi "
"berdasarkan-berkas."

msgid ":mod:`django.contrib.sites`"
msgstr ":mod:`django.contrib.sites`"

msgid ""
"The :class:`~django.contrib.sites.models.Site` model now supports :ref:"
"`natural keys <topics-serialization-natural-keys>`."
msgstr ""
"Model :class:`~django.contrib.sites.models.Site` sekarang mendukung :ref:"
"`natural keys <topics-serialization-natural-keys>`."

msgid ":mod:`django.contrib.staticfiles`"
msgstr ":mod:`django.contrib.staticfiles`"

msgid ""
"The :ttag:`static` template tag now uses ``django.contrib.staticfiles`` if "
"it's in ``INSTALLED_APPS``. This is especially useful for third-party apps "
"which can now always use ``{% load static %}`` (instead of ``{% load "
"staticfiles %}`` or ``{% load static from staticfiles %}``) and not worry "
"about whether or not the ``staticfiles`` app is installed."
msgstr ""
"Etiket cetakan :ttag:`static` sekarang menggunakan ``django.contrib."
"staticfiles`` jika itu didalam ``INSTALLED_APPS``. Ini khususnya berguna "
"untuk aplikasi pihak ketiga yang dapat sekarang selalu menggunakan ``{% load "
"static %}`` (sebagai gantinya dari ``{% load staticfiles %}`` atau ``{% load "
"static from staticfiles %}``) dan tidak khawatir tentang apakah atau tidak "
"aplikasi ``staticfiles`` terpasang."

msgid ""
"You can :ref:`more easily customize <customize-staticfiles-ignore-patterns>` "
"the ``collectstatic --ignore`` option with a custom ``AppConfig``."
msgstr ""
"Anda dapat :ref:`more easily customize 1` pilihan ``collectstatic --ignore`` "
"dengan ``AppConfig`` penyesuaian."

msgid "Cache"
msgstr "Tembolok"

msgid "The file-based cache backend now uses the highest pickling protocol."
msgstr ""
"Backend tembolok berdasarkan-berkas sekarang menggunakan protokol pengasaman "
"tertinggi."

msgid "CSRF"
msgstr "CSRF"

msgid ""
"The default :setting:`CSRF_FAILURE_VIEW`, ``views.csrf.csrf_failure()`` now "
"accepts an optional ``template_name`` parameter, defaulting to ``'403_csrf."
"html'``, to control the template used to render the page."
msgstr ""
":setting:`CSRF_FAILURE_VIEW` awal, ``views.csrf.csrf_failure()`` sekarang "
"menerima sebuah pilihan parameter ``template_name``, awal ke ``'403_csrf."
"html'``, untuk mengendalikan cetakan digunakan untuk membangun halaman."

msgid ""
"To protect against `BREACH`_ attacks, the CSRF protection mechanism now "
"changes the form token value on every request (while keeping an invariant "
"secret which can be used to validate the different tokens)."
msgstr ""
"Untuk melindungi terhadap serangan `BREACH`_, mekanisme perlindungan CSRF "
"sekarang merubah nilai token formulir pada setiap permintaan (selagi menjaga "
"sebuah rahasia tidak berubah yang dapat digunakan untuk mensahkan token "
"berbeda)."

msgid "Database backends"
msgstr "Backend basisdata"

msgid "Temporal data subtraction was unified on all backends."
msgstr "Pengurangan data sementara telah digabungkan pada semua backend."

msgid ""
"If the database supports it, backends can set ``DatabaseFeatures."
"can_return_ids_from_bulk_insert=True`` and implement ``DatabaseOperations."
"fetch_returned_insert_ids()`` to set primary keys on objects created using "
"``QuerySet.bulk_create()``."
msgstr ""
"Jika basisdata mendukungnya, backend dapat menyetel ``DatabaseFeatures."
"can_return_ids_from_bulk_insert=True`` dan menerapkan ``DatabaseOperations."
"fetch_returned_insert_ids()`` untuk menyetel primary key pada obyek dibuat "
"menggunakan ``QuerySet.bulk_create()``."

msgid ""
"Added keyword arguments to the ``as_sql()`` methods of various expressions "
"(``Func``, ``When``, ``Case``, and ``OrderBy``) to allow database backends "
"to customize them without mutating ``self``, which isn't safe when using "
"different database backends. See the ``arg_joiner`` and ``**extra_context`` "
"parameters of :meth:`Func.as_sql() <django.db.models.Func.as_sql>` for an "
"example."
msgstr ""
"Ditambahkan argumen kata kunci pada metode ``as_sql()`` dari beragam "
"pernyataan (``Func``, ``When``, ``Case``, dan ``OrderBy``) untuk mengizinkan "
"backend basisdata untuk menyesuaikan mereka tanpa mengubah ``self``, yang "
"tidak aman menggunakan backend basisdata berbeda. Lihat parameter "
"``arg_joiner`` dan ``**extra_context`` dari :meth:`Func.as_sql() <django.db."
"models.Func.as_sql>` untuk sebuah contoh."

msgid "File Storage"
msgstr "Penyimpanan Berkas"

msgid ""
"Storage backends now present a timezone-aware API with new methods :meth:"
"`~django.core.files.storage.Storage.get_accessed_time`, :meth:`~django.core."
"files.storage.Storage.get_created_time`, and :meth:`~django.core.files."
"storage.Storage.get_modified_time`. They return a timezone-aware "
"``datetime`` if :setting:`USE_TZ` is ``True`` and a naive ``datetime`` in "
"the local timezone otherwise."
msgstr ""
"Backend penyimpanan sekarang menghadirkan API sadar-zona waktu dengan metode "
"baru :meth:`~django.core.files.storage.Storage.get_accessed_time`, :meth:"
"`~django.core.files.storage.Storage.get_created_time`, dan :meth:`~django."
"core.files.storage.Storage.get_modified_time`. Mereka mengembalikan "
"``datetime`` waspada zona waktu jika :setting:`USE_TZ` adalah ``True`` dan "
"``datetime`` tidak dibuat-buat di zona waktu lokal jikalau tidak."

msgid ""
"The new :meth:`Storage.generate_filename() <django.core.files.storage."
"Storage.generate_filename>` method makes it easier to implement custom "
"storages that don't use the ``os.path`` calls previously in :class:`~django."
"db.models.FileField`."
msgstr ""
"Metode :meth:`Storage.generate_filename() <django.core.files.storage.Storage."
"generate_filename>` baru membuatnya semakin mudah untuk menerapkan "
"penyimpanan penyesuaian yang tidak menggunakan ``os.path`` memanggil "
"sebelumnya di :class:`~django.db.models.FileField`."

msgid "Forms"
msgstr "Formulir"

msgid ""
"Form and widget ``Media`` is now served using :mod:`django.contrib."
"staticfiles` if installed."
msgstr ""
"Formulir dan widget ``Media`` sekarang dilayani menggunakan :mod:`django."
"contrib.staticfiles` jika terpasang."

msgid ""
"The ``<input>`` tag rendered by :class:`~django.forms.CharField` now "
"includes a ``minlength`` attribute if the field has a ``min_length``."
msgstr ""
"Etiket ``<input>`` dibangun oleh :class:`~django.forms.CharField` sekarang "
"menyertakan atribut ``minlength`` jika bidang mempunyai ``min_length``."

msgid ""
"Required form fields now have the ``required`` HTML attribute. Set the new :"
"attr:`Form.use_required_attribute <django.forms.Form."
"use_required_attribute>` attribute to ``False`` to disable it. The "
"``required`` attribute isn't included on forms of formsets because the "
"browser validation may not be correct when adding and deleting formsets."
msgstr ""
"Bidang formulir yang diwajibkan sekarang mempunyai  atribut HTML "
"``required``. Setel atribut :attr:`Form.use_required_attribute <django.forms."
"Form.use_required_attribute>` baru menjadi ``False`` untuk meniadakannya. "
"Atribut ``required`` tidak disertakan pada formulir dari formset karena "
"pengesahan peramban mungkin tidak benar ketika menambahkan dan menghapus "
"formset."

msgid "Generic Views"
msgstr "Tampilan Umum"

msgid ""
"The :class:`~django.views.generic.base.View` class can now be imported from "
"``django.views``."
msgstr ""
"Kelas :class:`~django.views.generic.base.View` sekarang dapat diimpor dari "
"``django.views``."

msgid ""
"The :func:`~django.conf.urls.i18n.i18n_patterns` helper function can now be "
"used in a root URLConf specified using :attr:`request.urlconf <django.http."
"HttpRequest.urlconf>`."
msgstr ""
"Fungsi pembantu :func:`~django.conf.urls.i18n.i18n_patterns` sekrang dapat "
"digunakan di akar URLConf ditentukan menggunakan :attr:`request.urlconf "
"<django.http.HttpRequest.urlconf>`."

msgid ""
"By setting the new ``prefix_default_language`` parameter for :func:`~django."
"conf.urls.i18n.i18n_patterns` to ``False``, you can allow accessing the "
"default language without a URL prefix."
msgstr ""
"Dengan menyetel parameter ``prefix_default_language`` baru untuk :func:"
"`~django.conf.urls.i18n.i18n_patterns` menjadi ``False``, anda dapat "
"mengizinkan mengakses bahasa awal tanpa awalan URL."

msgid ""
":func:`~django.views.i18n.set_language` now returns a 204 status code (No "
"Content) for AJAX requests when there is no ``next`` parameter in ``POST`` "
"or ``GET``."
msgstr ""
":func:`~django.views.i18n.set_language` sekarang mengembalikan kode keadaan "
"204 (Tidak ada Isi) untuk permintaan AJAX ketika tidak ada parameter "
"``next`` di ``POST`` atau ``GET``."

msgid ""
"The :class:`~django.views.i18n.JavaScriptCatalog` and :class:`~django.views."
"i18n.JSONCatalog` class-based views supersede the deprecated "
"``javascript_catalog()`` and ``json_catalog()`` function-based views. The "
"new views are almost equivalent to the old ones except that by default the "
"new views collect all JavaScript strings in the ``djangojs`` translation "
"domain from all installed apps rather than only the JavaScript strings from :"
"setting:`LOCALE_PATHS`."
msgstr ""
"Tampilan berdasarkan kelas  :class:`~django.views.i18n.JavaScriptCatalog` "
"dan :class:`~django.views.i18n.JSONCatalog` menggantikan pengusangan "
"tampilan berdasarkan fungsi ``javascript_catalog()`` dan ``json_catalog()``. "
"Tampilan baru hampir sama ke yang lama kecuali itu oleh awal tampilan baru "
"mengumpulkan semua deretan karakter JavaScript di ranag terjemahan "
"``djangojs`` dari semua aplikasi terpasang daripada hanya deretan karakter "
"JavaScript dari :setting:`LOCALE_PATHS`."

msgid "Management Commands"
msgstr "Pengelolaan perintah"

msgid ""
":func:`~django.core.management.call_command` now returns the value returned "
"from the ``command.handle()`` method."
msgstr ""
":func:`~django.core.management.call_command` sekarang mengembalikan nilai "
"dikembalikan dari metode ``command.handle()``."

msgid ""
"The new :option:`check --fail-level` option allows specifying the message "
"level that will cause the command to exit with a non-zero status."
msgstr ""
"Pilihan :option:`check --fail-level` baru mengizinkan menentukan tingkatan "
"pesan yang akan menyebabkan perintah keluar dengan keadaan bukan nol."

msgid ""
"The new :option:`makemigrations --check` option makes the command exit with "
"a non-zero status when model changes without migrations are detected."
msgstr ""
"Pilihan :option:`makemigrations --check` baru membuat perintah keluar dengan "
"keadaan bukan nol ketika model berubah tanpa perpindahan dikenali."

msgid ""
":djadmin:`makemigrations` now displays the path to the migration files that "
"it generates."
msgstr ""
":djadmin:`makemigrations` sekarang menampilkan jalur ke berkas perpindahan "
"yang dia bangkitkan."

msgid ""
"The :option:`shell --interface` option now accepts ``python`` to force use "
"of the \"plain\" Python interpreter."
msgstr ""
"Pilihan :option:`shell --interface` sekarang menerima ``python`` untuk "
"memaksa menggunakan penafsir Python ``plain``."

msgid ""
"The new :option:`shell --command` option lets you run a command as Django "
"and exit, instead of opening the interactive shell."
msgstr ""
"Pilihan :option:`shell --command` baru membiarkan anda menjalankan perintah "
"sebagai Django dan keluar, daripada membuka shell interaktif."

msgid ""
"Added a warning to :djadmin:`dumpdata` if a proxy model is specified (which "
"results in no output) without its concrete parent."
msgstr ""
"Ditambahkan peringatan ke :djadmin:`dumpdata` jka model proxy ditentukan "
"(yang menghasilkan tidak ada keluaran) tanpa wujud induknya."

msgid ""
"The new :attr:`BaseCommand.requires_migrations_checks <django.core."
"management.BaseCommand.requires_migrations_checks>` attribute may be set to "
"``True`` if you want your command to print a warning, like :djadmin:"
"`runserver` does, if the set of migrations on disk don't match the "
"migrations in the database."
msgstr ""
"Atribut :attr:`BaseCommand.requires_migrations_checks <django.core."
"management.BaseCommand.requires_migrations_checks>` baru mungkin disetel "
"menjadi ``True`` jika anda ingin perintah anda mencetak peringatan, seperti :"
"djadmin:`runserver` lakukan, jika kumpulan dari perpindahan pada cakram "
"tidak cocok perpindahan di basisdata."

msgid ""
"To assist with testing, :func:`~django.core.management.call_command` now "
"accepts a command object as the first argument."
msgstr ""
"Untuk memandu dengan percobaan, :func:`~django.core.management.call_command` "
"sekarang menerima obyek perintah sebagai argumen pertama."

msgid ""
"The :djadmin:`shell` command supports tab completion on systems using "
"``libedit``, e.g. macOS."
msgstr ""
"Perintah :djadmin:`shell` mendukung penyelesaian label pada sistem "
"menggunakan ``libedit``, misalnya macOS."

msgid ""
"The :djadmin:`inspectdb` command lets you choose what tables should be "
"inspected by specifying their names as arguments."
msgstr ""
"Perintah :djadmin:`inspectdb` membiarkan anda memilih tabel apa harus "
"diperiksa dengan menentukan nama-nama mereka sebagai argumen."

msgid "Migrations"
msgstr "Perpindahan"

msgid "Added support for serialization of ``enum.Enum`` objects."
msgstr "Ditambahkan dukungan untuk serialisasi dari obyek ``enum.Enum``."

msgid ""
"Added the ``elidable`` argument to the :class:`~django.db.migrations."
"operations.RunSQL` and :class:`~django.db.migrations.operations.RunPython` "
"operations to allow them to be removed when squashing migrations."
msgstr ""
"Ditambahkan argumen ``elidable`` pada tindakan :class:`~django.db.migrations."
"operations.RunSQL` dan :class:`~django.db.migrations.operations.RunPython` "
"untuk mengizinkan mereka dipindahkan ketika melumat perpindahan."

msgid ""
"Added support for :ref:`non-atomic migrations <non-atomic-migrations>` by "
"setting the ``atomic`` attribute on a ``Migration``."
msgstr ""
"Ditambahkan dukungan untuk :ref:`non-atomic migrations <non-atomic-"
"migrations>` dengan mengatur atribut ``atomic`` pada ``Migration``. "

msgid ""
"The ``migrate`` and ``makemigrations`` commands now :ref:`check for a "
"consistent migration history <migration-history-consistency>`. If they find "
"some unapplied dependencies of an applied migration, "
"``InconsistentMigrationHistory`` is raised."
msgstr ""
"Perintah ``migrate`` dan ``makemigrations`` sekarang :ref:`check for a "
"consistent migration history <migration-history-consistency>`. Jika mereka "
"menemukan beberapa ketergantungan yang tidak berlaku pada sebuah perpindahan "
"yang dilakukan, ``InconsistentMigrationHistory`` muncul."

msgid ""
"The :func:`~django.db.models.signals.pre_migrate` and :func:`~django.db."
"models.signals.post_migrate` signals now dispatch their migration ``plan`` "
"and ``apps``."
msgstr ""
"Sinyal :func:`~django.db.models.signals.pre_migrate` dan :func:`~django.db."
"models.signals.post_migrate` sekarang mengirim perpindahan ``plan`` dan "
"``apps`` mereka."

msgid ""
"Reverse foreign keys from proxy models are now propagated to their concrete "
"class. The reverse relation attached by a :class:`~django.db.models."
"ForeignKey` pointing to a proxy model is now accessible as a descriptor on "
"the proxied model class and may be referenced in queryset filtering."
msgstr ""
"Membalikkan foreign key dari model proxy sekarang diperbanyak ke wujud kelas "
"mereka. Membalikkan hubungan dilampirkan oleh :class:`~django.db.models."
"ForeignKey` menunjuk ke model proxy sekarang tersedia sebagai penjelasan "
"pada kelas model yang di proxy kan dan mungkin diacukan di penyaring "
"queryset."

msgid ""
"The new :meth:`Field.rel_db_type() <django.db.models.Field.rel_db_type>` "
"method returns the database column data type for fields such as "
"``ForeignKey`` and ``OneToOneField`` that point to another field."
msgstr ""
"Metode :meth:`Field.rel_db_type() <django.db.models.Field.rel_db_type>` baru "
"mengembalikan jenis data basisdata untuk bidang seperti ``ForeignKey`` dan "
"``OneToOneField`` yang menunjuk ke bidang lain."

msgid ""
"The :attr:`~django.db.models.Func.arity` class attribute is added to :class:"
"`~django.db.models.Func`. This attribute can be used to set the number of "
"arguments the function accepts."
msgstr ""
"Atribut kelas :attr:`~django.db.models.Func.arity` ditambahkan ke :class:"
"`~django.db.models.Func`. Atribut ini dapat digunakan untuk menyetel "
"sejumlah argumen fungis penerimaan."

msgid ""
"Added :class:`~django.db.models.BigAutoField` which acts much like an :class:"
"`~django.db.models.AutoField` except that it is guaranteed to fit numbers "
"from ``1`` to ``9223372036854775807``."
msgstr ""
"Ditambahkan :class:`~django.db.models.BigAutoField` yang bertindak seperti "
"sebuah pengecualian :class:`~django.db.models.AutoField` yang di jaminkan "
"untuk mencocokkan angka dari  ``1`` sampai ``9223372036854775807``."

msgid ""
":meth:`QuerySet.in_bulk() <django.db.models.query.QuerySet.in_bulk>` may be "
"called without any arguments to return all objects in the queryset."
msgstr ""
":meth:`QuerySet.in_bulk() <django.db.models.query.QuerySet.in_bulk>` mungkin "
"dipanggil tanpa argumen apapun untuk mengembalikan semua obyek di queryset."

msgid ""
":attr:`~django.db.models.ForeignKey.related_query_name` now supports app "
"label and class interpolation using the ``'%(app_label)s'`` and "
"``'%(class)s'`` strings."
msgstr ""
":attr:`~django.db.models.ForeignKey.related_query_name` sekarang mendukung "
"label aplikasi dan penyisipan kelas menggunakan deretan karakter "
"``'%(app_label)s'`` dan ``'%(class)s'``."

msgid "Allowed overriding model fields inherited from abstract base classes."
msgstr ""
"Diizinkan mengutamakan bidang model diwariskan dari kelas-kelas berdasarkan "
"abstrak."

msgid ""
"The :func:`~django.db.models.prefetch_related_objects` function is now a "
"public API."
msgstr ""
"Fungsi :func:`~django.db.models.prefetch_related_objects` sekarang APU umum."

msgid ""
":meth:`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>` "
"sets the primary key on objects when using PostgreSQL."
msgstr ""
":meth:`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>` "
"menyetel primary key pada obyek ketika menggunakan PostgreSQL."

msgid "Added the :class:`~django.db.models.functions.Cast` database function."
msgstr ""
"Ditambahkan fungsi basisdata :class:`~django.db.models.functions.Cast`."

msgid ""
"A proxy model may now inherit multiple proxy models that share a common non-"
"abstract parent class."
msgstr ""
"Sebuah model proxy mungkin sekarang mewarisi banyak model proxy yang berbagi "
"kelas induk bukan-abstrak umum."

msgid ""
"Added :class:`~django.db.models.functions.Extract` functions to extract "
"datetime components as integers, such as year and hour."
msgstr ""
"Ditambahkan fungsi-fungsi :class:`~django.db.models.functions.Extract`  "
"untuk mengambil komponen-komponen datetime sebagai integer, seperti tahun "
"dan jam."

msgid ""
"Added :class:`~django.db.models.functions.Trunc` functions to truncate a "
"date or datetime to a significant component. They enable queries like sales-"
"per-day or sales-per-hour."
msgstr ""
"Ditambahkan fungsi-fungsi  :class:`~django.db.models.functions.Trunc` untuk "
"memotong tanggal atau datetime pada komponen penting. Mereka mengadakan "
"permintaan seperti penjualan-per-hari atau penjualan-per-jam."

msgid ""
"``Model.__init__()`` now sets values of virtual fields from its keyword "
"arguments."
msgstr ""
"``Model.__init__()`` sekarang menyetel nilai dari bidang maya dari argumen "
"kata kuncinya."

msgid ""
"The new :attr:`Meta.base_manager_name <django.db.models.Options."
"base_manager_name>` and :attr:`Meta.default_manager_name <django.db.models."
"Options.default_manager_name>` options allow controlling the :attr:`~django."
"db.models.Model._base_manager` and :attr:`~django.db.models.Model."
"_default_manager`, respectively."
msgstr ""
"Pilihan :attr:`Meta.base_manager_name <django.db.models.Options."
"base_manager_name>` dan :attr:`Meta.default_manager_name <django.db.models."
"Options.default_manager_name>` baru mengizinkan mengendalikan :attr:`~django."
"db.models.Model._base_manager` dan :attr:`~django.db.models.Model."
"_default_manager`, masing-masing."

msgid "Requests and Responses"
msgstr "Permintaan dan Tanggapan"

msgid "Added ``request.user`` to the debug view."
msgstr "Ditambahkan ``request.user`` pada tampilan mencai kesalahan."

msgid ""
"Added :class:`~django.http.HttpResponse` methods :meth:`~django.http."
"HttpResponse.readable()` and :meth:`~django.http.HttpResponse.seekable()` to "
"make an instance a stream-like object and allow wrapping it with :py:class:"
"`io.TextIOWrapper`."
msgstr ""
"Ditambahkan metode :class:`~django.http.HttpResponse` :meth:`~django.http."
"HttpResponse.readable()` dan :meth:`~django.http.HttpResponse.seekable()` "
"untuk membuat sebuah contoh obyek seperti-arus dan mengizinkan membungkusnya "
"dengan :py:class:`io.TextIOWrapper`."

msgid ""
"Added the :attr:`HttpRequest.content_type <django.http.HttpRequest."
"content_type>` and :attr:`~django.http.HttpRequest.content_params` "
"attributes which are parsed from the ``CONTENT_TYPE`` header."
msgstr ""
"Ditambahkan atribut :attr:`HttpRequest.content_type <django.http.HttpRequest."
"content_type>` dan :attr:`~django.http.HttpRequest.content_params` yang "
"diuraikan dari kepala ``CONTENT_TYPE``."

msgid ""
"The parser for ``request.COOKIES`` is simplified to better match the "
"behavior of browsers. ``request.COOKIES`` may now contain cookies that are "
"invalid according to :rfc:`6265` but are possible to set via ``document."
"cookie``."
msgstr ""
"Pengurai untuk ``request.COOKIES`` disederhanakan untuk perilaku pencocokan "
"lebih baik dari peramban ``request.COOKIES`` sekarang mengandung kue yang "
"tidak sah menurut :rfc:`6265` tetapi memunginkan menyetel melalui ``document."
"cookie``. "

msgid "Serialization"
msgstr "Serialisasi"

msgid ""
"The ``django.core.serializers.json.DjangoJSONEncoder`` now knows how to "
"serialize lazy strings, typically used for translatable content."
msgstr ""
"``django.core.serializers.json.DjangoJSONEncoder`` sekarang mengetahui "
"bagaimana menserialisasikan deretan karakter lazy, khususnya digunakan untuk "
"isi terjemahan."

msgid ""
"Added the ``autoescape`` option to the :class:`~django.template.backends."
"django.DjangoTemplates` backend and the :class:`~django.template.Engine` "
"class."
msgstr ""
"Ditambahkan pilihan ``autoescape`` pada backend :class:`~django.template."
"backends.django.DjangoTemplates` dan kelas :class:`~django.template.Engine`."

msgid ""
"Added the ``is`` and ``is not`` comparison operators to the :ttag:`if` tag."
msgstr ""
"Ditambahkan penghubung perbandingan ``is`` dan ``is not`` pada etiket :ttag:"
"`if`. "

msgid ""
"Allowed :tfilter:`dictsort` to order a list of lists by an element at a "
"specified index."
msgstr ""
"Diizinkan :tfilter:`dictsort` untuk mengurutkan daftar dari daftar oleh "
"unsur pada indeks yang ditentukan."

msgid ""
"The :func:`~django.template.context_processors.debug` context processor "
"contains queries for all database aliases instead of only the default alias."
msgstr ""
"Pengolah konteks :func:`~django.template.context_processors.debug` "
"mengandung permintaan untuk semua nama lain basisdata daripada hanya nama "
"lain awalan."

msgid ""
"Added relative path support for string arguments of the :ttag:`extends` and :"
"ttag:`include` template tags."
msgstr ""
"Ditambahkan dukungan jalur relatif untuk argumen deretan karakter dari "
"etiket cetakan :ttag:`extends` dan :ttag:`include`."

msgid "Tests"
msgstr "Pengujian"

msgid ""
"To better catch bugs, :class:`~django.test.TestCase` now checks deferrable "
"database constraints at the end of each test."
msgstr ""
"Untuk penangkapan kesalahan lebih baik, :class:`~django.test.TestCase` "
"sekarang memeriksa batasan basisdata dapat ditunda pada akhir setiap "
"percobaan."

msgid ""
"Tests and test cases can be :ref:`marked with tags <topics-tagging-tests>` "
"and run selectively with the new :option:`test --tag` and :option:`test --"
"exclude-tag` options."
msgstr ""
"Percobaan dan kasus percobaan dapat di :ref:`marked with tags <topics-"
"tagging-tests>` dan dijalankan dipilih-pilih dengan pilihan :option:`test --"
"tag` dan :option:`test --exclude-tag` baru."

msgid ""
"You can now login and use sessions with the test client even if :mod:`django."
"contrib.sessions` is not in :setting:`INSTALLED_APPS`."
msgstr ""
"Anda sekarang dapat masuk dan menggunakan sesi dengan klien percobaan bahkan "
"jika :mod:`django.contrib.sessions` tidak di :setting:`INSTALLED_APPS`."

msgid ""
"An addition in :func:`django.setup()` allows URL resolving that happens "
"outside of the request/response cycle (e.g. in management commands and "
"standalone scripts) to take :setting:`FORCE_SCRIPT_NAME` into account when "
"it is set."
msgstr ""
"Sebuah tambahan di :func:`django.setup()` mengizinkan URL menangani yang "
"terjadi diluar dari siklus permintaan/tanggapan (sebagai contoh di perintah "
"pengelolaan dan tulisan berdiri sendiri) untuk mengambil :setting:"
"`FORCE_SCRIPT_NAME` kedalam akun ketiks dia disetel."

msgid "Validators"
msgstr "Pengesah"

msgid ""
":class:`~django.core.validators.URLValidator` now limits the length of "
"domain name labels to 63 characters and the total length of domain names to "
"253 characters per :rfc:`1034`."
msgstr ""
":class:`~django.core.validators.URLValidator` sekarang membatasi panjang "
"dari label nama ranah sampai 63 karakter dan jumlah panjang dari nama ranah "
"sampai 253 karakter per :rfc:`1034`."

msgid ""
":func:`~django.core.validators.int_list_validator` now accepts an optional "
"``allow_negative`` boolean parameter, defaulting to ``False``, to allow "
"negative integers."
msgstr ""
":func:`~django.core.validators.int_list_validator` sekarang menerima sebuah "
"pilihan ``allow_negative`` parameter boolean, nilai awal ke ``False``, untuk "
"mengizinkan integer negatif."

msgid "Backwards incompatible changes in 1.10"
msgstr "Perubahan bertentangan kebelakang di 1.10"

msgid ""
"In addition to the changes outlined in this section, be sure to review the :"
"ref:`removed-features-1.10` for the features that have reached the end of "
"their deprecation cycle and therefore been removed. If you haven't updated "
"your code within the deprecation timeline for a given feature, its removal "
"may appear as a backwards incompatible change."
msgstr ""
"Sebagai tambahan pada uraian berubah di bagian ini, pastikan meninjau :ref:"
"`removed-features-1.10` untuk fitur yang telah mencapai akhir dari siklus "
"pengusangan mereka dan karena itu telah dipindahkan. Jika anda belum "
"memperbaharui kode anda dalam linimasa pengusangan untuk fitur diberikan, "
"perpindahan ini mungkin muncul sebagai perubahan ketidaksesuaian kebelakang."

msgid "Database backend API"
msgstr "API backend basisdata"

msgid ""
"GIS's ``AreaField`` uses an unspecified underlying numeric type that could "
"in practice be any numeric Python type. ``decimal.Decimal`` values retrieved "
"from the database are now converted to ``float`` to make it easier to "
"combine them with values used by the GIS libraries."
msgstr ""
"``AreaField`` GIS menggunakan jenis numerik dasar tidak ditentukan yang "
"dapat dalam praktiknya menjadi jenis Python numerik apapun. Nilai ``decimal."
"Decimal`` diambil dari basisdata sekarang dirubah menjadi ``float`` untuk "
"membuatnya lebih mudah memadukan mereka dengan nilai-nilai digunakan oleh "
"pustaka GIS."

msgid ""
"In order to enable temporal subtraction you must set the "
"``supports_temporal_subtraction`` database feature flag to ``True`` and "
"implement the ``DatabaseOperations.subtract_temporals()`` method. This "
"method should return the SQL and parameters required to compute the "
"difference in microseconds between the ``lhs`` and ``rhs`` arguments in the "
"datatype used to store :class:`~django.db.models.DurationField`."
msgstr ""
"Untuk mengadakan pengurangan sementara anda harus menyetel bendera fitur "
"basisdata ``supports_temporal_subtraction`` menjadi ``True`` dan menerapkan "
"metode ``DatabaseOperations.subtract_temporals()``. Cara ini harus "
"mengembalikan SQL dan parameter yang dibutuhkan untuk menghitung perbedaan "
"dalam mikrodetik diantara argumen ``lhs`` dan ``rhs`` di jenis data "
"digunakan untuk menyimpan :class:`~django.db.models.DurationField`."

msgid ""
"``select_related()`` prohibits non-relational fields for nested relations"
msgstr ""
"``select_related()`` melarang bidang bukan-berhubungan untuk hubungan "
"bersarang"

msgid ""
"Django 1.8 added validation for non-relational fields in "
"``select_related()``:"
msgstr ""

msgid "But it didn't prohibit nested non-relation fields as it does now:"
msgstr ""

msgid ""
"``_meta.get_fields()`` returns consistent reverse fields for proxy models"
msgstr ""
"``_meta.get_fields()`` mengembalikan kesesuaian bidang membalikkan untuk "
"model proxy"

msgid ""
"Before Django 1.10, the :meth:`~django.db.models.options.Options.get_fields` "
"method returned different reverse fields when called on a proxy model "
"compared to its proxied concrete class. This inconsistency was fixed by "
"returning the full set of fields pointing to a concrete class or one of its "
"proxies in both cases."
msgstr ""
"Sebelum Django 1.10, metode :meth:`~django.db.models.options.Options."
"get_fields` mengembalikan bidang membalikkan yang berbeda ketika dipanggil "
"pada model dibandingkan pada wujud kelas yang diwakilkan. Ketidaksesuaian "
"telah diperbaiki dengan mengembalikan sekumpulan penuh dari bidang-bidang "
"menunjuk ke kelas berwujud atau satu dari wakilnya di kedua kasus."

msgid ""
":attr:`AbstractUser.username <django.contrib.auth.models.User.username>` "
"``max_length`` increased to 150"
msgstr ""
":attr:`AbstractUser.username <django.contrib.auth.models.User.username>` "
"``max_length`` ditingkatkan sampai 150"

msgid ""
"A migration for :attr:`django.contrib.auth.models.User.username` is "
"included. If you have a custom user model inheriting from ``AbstractUser``, "
"you'll need to generate and apply a database migration for your user model."
msgstr ""
"Sebuah perpindahan :attr:`django.contrib.auth.models.User.username` "
"disertakan. Jika anda mempunyai model pengguna penyesuaian diwariskan dari "
"``AbstractUser``, anda akan butuh membangkitkan dan berlakukan perpindahan "
"basisdata untuk model pengguna anda."

msgid ""
"We considered an increase to 254 characters to more easily allow the use of "
"email addresses (which are limited to 254 characters) as usernames but "
"rejected it due to a MySQL limitation.  When using the ``utf8mb4`` encoding "
"(recommended for proper Unicode support), MySQL can only create unique "
"indexes with 191 characters by default. Therefore, if you need a longer "
"length, please use a custom user model."
msgstr ""
"Kami mempertimbangkan peningkatan sampai 254 karakter untuk lebih mudah "
"mengizinkan penggunaan alamat surel (yang terbatas sampai 254 karakter) "
"sebagai nama pengguna tetapi ditolak karena batasan MySQL. Ketika "
"menggunakan penyandian ``utf8mb4`` (dianjurkan untuk dukungan Unicode "
"sesuai), MySQL dapat hanya membuat indeks unik dengan 191 karakter secara "
"awal. Karena itu, jika anda butuh panjang lebih, harap gunakan model "
"pengguna penyesuaian."

msgid ""
"If you want to preserve the 30 character limit for usernames, use a custom "
"form when creating a user or changing usernames::"
msgstr ""
"Jika anda ingin menyediakan batas 30 karakter untuk nama pengguna, gunakan "
"formulir penyesuaian ketika membuat pengguna atau merubah nama pengguna::"

msgid ""
"If you wish to keep this restriction in the admin, set ``UserAdmin."
"add_form`` to use this form::"
msgstr ""
"Jika anda berharap menjaga batasan ini di admin, setel ``UserAdmin."
"add_form`` untuk menggunakan formulir ini::"

msgid "Dropped support for PostgreSQL 9.1"
msgstr "Dibuang dukungan untuk PostgreSQL 9.1"

msgid ""
"Upstream support for PostgreSQL 9.1 ends in September 2016. As a "
"consequence, Django 1.10 sets PostgreSQL 9.2 as the minimum version it "
"officially supports."
msgstr ""
"Dukungan hulu untuk PostgreSQL 9.1 berakhir di September 2016. Sebagai "
"konsekuensinya, Django 1.10 menyetel PostgreSQL 9.2 sebagai versi minimal "
"dia secara resmi dukung."

msgid "``runserver`` output goes through logging"
msgstr "Keluaran ``runserver`` melewati pencatatan"

msgid ""
"Request and response handling of the ``runserver`` command is sent to the :"
"ref:`django-server-logger` logger instead of to ``sys.stderr``. If you "
"disable Django's logging configuration or override it with your own, you'll "
"need to add the appropriate logging configuration if you want to see that "
"output::"
msgstr ""
"Menangani permintaan dan tanggapan dari perintah ``runserver`` dikirim ke "
"pencatat :ref:`django-server-logger` sebagai gantinya pada ``sys.stderr``. "
"Jika anda meniadakan konfigurasi pencatatan Django atau menimpa dengan anda "
"sendiri, anda akan butuh menambahkan konfigurasi pencatatan yang sesuai jika "
"anda ingin melihat keluaran itu::"

msgid "``auth.CustomUser`` and ``auth.ExtensionUser`` test models were removed"
msgstr ""
"Model percobaan ``auth.CustomUser`` dan ``auth.ExtensionUser`` dipindahkan."

msgid ""
"Since the introduction of migrations for the contrib apps in Django 1.8, the "
"tables of these custom user test models were not created anymore making them "
"unusable in a testing context."
msgstr ""
"Sejak perkenalan dari perpindahan untuk bantuan aplikasi di Django 1.8, "
"tabel dari model percobaan pengguna penyesuaian ini tidak dibuat lagi "
"membuat mereka tidak berguna dalam konteks percobaan."

msgid ""
"Apps registry is no longer auto-populated when unpickling models outside of "
"Django"
msgstr ""
"Registrar aplikasi tidak lagi otomatis dikumpulkan ketika membongkar model "
"diluar Django"

msgid ""
"The apps registry is no longer auto-populated when unpickling models. This "
"was added in Django 1.7.2 as an attempt to allow unpickling models outside "
"of Django, such as in an RQ worker, without calling ``django.setup()``, but "
"it creates the possibility of a deadlock. To adapt your code in the case of "
"RQ, you can `provide your own worker script <https://python-rq.org/docs/"
"workers/>`_ that calls ``django.setup()``."
msgstr ""

msgid "Removed null assignment check for non-null foreign key fields"
msgstr ""
"Dipindahkan pemeriksaan penugasan null untuk bidang foreign key bukan-null"

msgid ""
"In older versions, assigning ``None`` to a non-nullable ``ForeignKey`` or "
"``OneToOneField`` raised ``ValueError('Cannot assign None: \"model.field\" "
"does not allow null values.')``. For consistency with other model fields "
"which don't have a similar check, this check is removed."
msgstr ""
"Dalam versi terlama, menugaskan ``None`` pada ``ForeignKey`` atau "
"``OneToOneField`` nukan-null memunculkan ``ValueError('Cannot assign None: "
"\"model.field\" does not allow null values.')``. Untuk ketidakkonsistenan "
"dengan bidang model lain yang tidak mempunyai pemeriksaan sama, pemeriksaan "
"ini dipindahkan."

msgid ""
"Removed weak password hashers from the default ``PASSWORD_HASHERS`` setting"
msgstr ""
"Dipindahkan pengacak sandi lemah dari pengaturan ``PASSWORD_HASHERS`` awal"

msgid ""
"Django 0.90 stored passwords as unsalted MD5. Django 0.91 added support for "
"salted SHA1 with automatic upgrade of passwords when a user logs in. Django "
"1.4 added PBKDF2 as the default password hasher."
msgstr ""
"Django 0.90 menyimpan sandi sebagai MD5 tidak tergarami. Django 0.91 "
"ditambahkan dukungan untuk SHA1 tergarami dengan peningkatan otomatis dari "
"sandi ketika penggina masuk. Django 1.4 ditambahkan PBKDF2 sebagai pengacak "
"sandi awal."

msgid ""
"If you have an old Django project with MD5 or SHA1 (even salted) encoded "
"passwords, be aware that these can be cracked fairly easily with today's "
"hardware. To make Django users acknowledge continued use of weak hashers, "
"the following hashers are removed from the default :setting:"
"`PASSWORD_HASHERS` setting::"
msgstr ""
"Jika anda mempunyai proyek Django lama dengan MD5 atau SHA1 (bahkan "
"tergarami) sandi dikodekan, sadarilah bahwa ini dapat dirusak dengan mudah "
"dengan perangkat keras hari ini. Untuk membuat pengguna Django mengakui "
"penggunaan berkelanjutan dari pengacak lemah, pencampur berikut dipindahkan "
"dari :setting:`PASSWORD_HASHERS` setting awal::"

msgid ""
"Consider using a :ref:`wrapped password hasher <wrapping-password-hashers>` "
"to strengthen the hashes in your database. If that's not feasible, add the :"
"setting:`PASSWORD_HASHERS` setting to your project and add back any hashers "
"that you need."
msgstr ""
"Pertimbangkan menggunakan :ref:`wrapped password hasher <wrapping-password-"
"hashers>` untuk menguatkan campuran di basisdata anda. Jika itu tidak layak, "
"tambah pengaturan :setting:`PASSWORD_HASHERS` ke proyek anda dan tambah "
"kembali pencampur apapun yang anda butuhkan."

msgid ""
"You can check if your database has any of the removed hashers like this::"
msgstr ""
"Anda dapat memeriksa jika basisdata anda mempunyai tiap dari pengacak "
"dipindahkan seperti ini::"

msgid ""
"``Field.get_prep_lookup()`` and ``Field.get_db_prep_lookup()`` methods are "
"removed"
msgstr ""
"Metode ``Field.get_prep_lookup()`` dan ``Field.get_db_prep_lookup()`` "
"dipindahkan."

msgid ""
"If you have a custom field that implements either of these methods, register "
"a custom lookup for it. For example::"
msgstr ""
"Jika anda mempunyai bidang penyesuaian yang menerapkan baik metode ini, "
"mendaftarkan pencarian penyesuaian untuknya. Sebagai contoh::"

msgid "Support for SpatiaLite < 3.0 and GEOS < 3.3 is dropped."
msgstr "Dukungan untuk SpatiaLite < 3.0 dan GEOS < 3.3 dibuang."

msgid ""
"The ``add_postgis_srs()`` backwards compatibility alias for ``django.contrib."
"gis.utils.add_srs_entry()`` is removed."
msgstr ""
"Nama lain kesesuaian kebelakang ``add_postgis_srs()`` untuk ``django.contrib."
"gis.utils.add_srs_entry()`` dipindahkan."

msgid ""
"On Oracle/GIS, the :class:`~django.contrib.gis.db.models.functions.Area` "
"aggregate function now returns a ``float`` instead of ``decimal.Decimal``. "
"(It's still wrapped in a measure of square meters.)"
msgstr ""
"Pada Oracle/GIS, fungsi pengumpulan :class:`~django.contrib.gis.db.models."
"functions.Area` sekarang mengembalikan ``float`` daripada ``decimal."
"Decimal``. (Itu masih dibungkus dalam ukuran meter persegi.)"

msgid ""
"The default :class:`~django.contrib.gis.geos.GEOSGeometry` representation "
"(WKT output) is trimmed by default. That is, instead of ``POINT "
"(23.0000000000000000 5.5000000000000000)``, you'll get ``POINT (23 5.5)``."
msgstr ""
"Perwakilan :class:`~django.contrib.gis.geos.GEOSGeometry` awal (keluaran "
"WKT) dipangkas secara awal. Yaitu, daripada ``POINT (23.0000000000000000 "
"5.5000000000000000)``, anda akan mendapatkan ``POINT (23 5.5)``."

msgid ""
"Maximum size of a request body and the number of GET/POST parameters is "
"limited"
msgstr ""
"Ukuran maksimum dari permintaan badan dan angka dari parameter GET/POST "
"dibatasi"

msgid ""
"Two new settings help mitigate denial-of-service attacks via large requests:"
msgstr ""
"Dua pengaturan baru membantu mengurangi serangan denial-of-service melalui "
"permintaan besar:"

msgid ""
":setting:`DATA_UPLOAD_MAX_MEMORY_SIZE` limits the size that a request body "
"may be. File uploads don't count toward this limit."
msgstr ""

msgid ""
":setting:`DATA_UPLOAD_MAX_NUMBER_FIELDS` limits the number of GET/POST "
"parameters that are parsed."
msgstr ""
":setting:`DATA_UPLOAD_MAX_NUMBER_FIELDS` membatasi angka dari parameter GET/"
"POST yang diuraikan."

msgid ""
"Applications that receive unusually large form posts may need to tune these "
"settings."
msgstr ""
"Aplikasi yang menerima penempatan formulir tidak biasanya besar mungkin "
"butuh merubah pengaturan ini."

msgid "Miscellaneous"
msgstr "Bermacam-macam"

msgid ""
"The ``repr()`` of a ``QuerySet`` is wrapped in ``<QuerySet >`` to "
"disambiguate it from a plain list when debugging."
msgstr ""
"``repr()`` dari ``QuerySet`` dibungkus dalam ``<QuerySet >`` untuk "
"memindahkan kedua artian nya dari daftar kosong ketika mencari kesalahan."

msgid ""
"``utils.version.get_version()`` returns :pep:`440` compliant release "
"candidate versions (e.g. '1.10rc1' instead of '1.10c1')."
msgstr ""
"``utils.version.get_version()`` mengembalikan :pep:`440` versi calon "
"terbitan (sebagai contoh '1.10rc1' instead of '1.10c1')."

msgid ""
"CSRF token values are now required to be strings of 64 alphanumerics; values "
"of 32 alphanumerics, as set by older versions of Django by default, are "
"automatically replaced by strings of 64 characters. Other values are "
"considered invalid. This should only affect developers or users who replace "
"these tokens."
msgstr ""
"Nilai token CSRF sekarang diwajibkan menjadi deretan karakter 64 "
"alfanumerik; nilai dari 32 alfanumerik, seperti disetel oleh versi terlama "
"Django secara awal, otomatis diganti dengan deretan karakter dari 64 "
"karakter. Nilai lain dianggap tidak sah. Ini harus hanya mempengaruhi "
"pengembang atau pengguna yang mengganti token ini."

msgid ""
"The ``LOGOUT_URL`` setting is removed as Django hasn't made use of it since "
"pre-1.0. If you use it in your project, you can add it to your project's "
"settings. The default value was ``'/accounts/logout/'``."
msgstr ""
"Pengaturan ``LOGOUT_URL`` dipindahkan sebagai Django belum membuat "
"menggunakannya sejak pra-1.0. Jika anda ingin menggunakannya di proyek anda, "
"anda dapat menambahkannya ke pengaturan proyek anda. Nilai awal adalah ``'/"
"accounts/logout/'``."

msgid ""
"Objects with a ``close()`` method such as files and generators passed to :"
"class:`~django.http.HttpResponse` are now closed immediately instead of when "
"the WSGI server calls ``close()`` on the response."
msgstr ""
"Obyek dengan metode ``close()`` seperti berkas dan pembangkit dilewatkan ke :"
"class:`~django.http.HttpResponse` sekarang ditutup segera sebagai gantinya "
"ketika peladen WSGI memanggil ``close()`` pada tanggapan."

msgid ""
"A redundant ``transaction.atomic()`` call in ``QuerySet.update_or_create()`` "
"is removed. This may affect query counts tested by ``TransactionTestCase."
"assertNumQueries()``."
msgstr ""
"Memanggil ``transaction.atomic()`` berlebihan dalam ``QuerySet."
"update_or_create()`` dipindahkan. Ini mungkin mempengaruhi permintaan "
"perhitungan dicoba oleh ``TransactionTestCase.assertNumQueries()``."

msgid ""
"Support for ``skip_validation`` in ``BaseCommand.execute(**options)`` is "
"removed. Use ``skip_checks`` (added in Django 1.7) instead."
msgstr ""
"Dukungan untuk ``skip_validation`` di ``BaseCommand.execute(**options)`` "
"dipindahkan. Gunakan ``skip_checks`` (ditambahkan di Django 1.7) sebagai "
"gantinya."

msgid ""
":djadmin:`loaddata` now raises a ``CommandError`` instead of showing a "
"warning when the specified fixture file is not found."
msgstr ""
":djadmin:`loaddata` sekarang memunculkan sebuah ``CommandError`` sebagai "
"gantinya dari menampilkan sebuah peringatan ketika berkas peralatan tetap "
"ditentukan tidak ditemukan."

msgid ""
"Instead of directly accessing the ``LogEntry.change_message`` attribute, "
"it's now better to call the ``LogEntry.get_change_message()`` method which "
"will provide the message in the current language."
msgstr ""
"Daripada secara langsung mengakses atribut ``LogEntry.change_message``, "
"sekarang lebih baik memanggil metode ``LogEntry.get_change_message()`` yang "
"akan menyediakan pesan di bahasa saat ini."

msgid ""
"The default error views now raise ``TemplateDoesNotExist`` if a nonexistent "
"``template_name`` is specified."
msgstr ""
"Tampilan kesalahan awal sekarang menampilkan ``TemplateDoesNotExist`` jika "
"``template_name`` tidak ada ditentukan."

msgid ""
"The unused ``choices`` keyword argument of the ``Select`` and "
"``SelectMultiple`` widgets' ``render()`` method is removed. The ``choices`` "
"argument of the ``render_options()`` method is also removed, making "
"``selected_choices`` the first argument."
msgstr ""
"Argumen kata kunci ``choices`` tidak digunakan dari widgets ``Select`` dan "
"``SelectMultiple`` metode ``render()`` dipindahkan. Argumen ``choices`` dari "
"metode ``render_options()`` juga dipindahkan, membuat ``selected_choices`` "
"argumen pertama."

msgid ""
"Tests that violate deferrable database constraints will now error when run "
"on a database that supports deferrable constraints."
msgstr ""
"Percobaan yang melanggar penundaan batasan basisdatasekarang akan salah "
"ketika berjalan pada sebuah basisdata yang mendukung batasan penundaan."

msgid ""
"Built-in management commands now use indexing of keys in ``options``, e.g. "
"``options['verbosity']``, instead of ``options.get()`` and no longer perform "
"any type coercion. This could be a problem if you're calling commands using "
"``Command.execute()`` (which bypasses the argument parser that sets a "
"default value) instead of :func:`~django.core.management.call_command`. "
"Instead of calling ``Command.execute()``, pass the command object as the "
"first argument to ``call_command()``."
msgstr ""
"Perintah pengelolaan pasang-tetap sekarang menggunakan pengindeksan dari "
"kunci di ``options``, sebagai contoh ``options['verbosity']``, daripada "
"``options.get()`` dan tidak lagi melakukan jenis paksaan apapun. Ini dapat "
"menjadi sebuah masalah jika anda sedang memanggil perintah menggunakan "
"``Command.execute()`` (yang melewatkan pengurai argumen yang menyetel nilai "
"awalan) daripada :func:`~django.core.management.call_command`. Daripada "
"memanggil ``Command.execute()``, lewati obyek perintah sebagai argumen "
"pertama untuk ``call_command()``."

msgid ""
":class:`~django.contrib.auth.backends.ModelBackend` and :class:`~django."
"contrib.auth.backends.RemoteUserBackend` now reject inactive users. This "
"means that inactive users can't login and will be logged out if they are "
"switched from ``is_active=True`` to ``False``. If you need the previous "
"behavior, use the new :class:`~django.contrib.auth.backends."
"AllowAllUsersModelBackend` or :class:`~django.contrib.auth.backends."
"AllowAllUsersRemoteUserBackend` in :setting:`AUTHENTICATION_BACKENDS` "
"instead."
msgstr ""
":class:`~django.contrib.auth.backends.ModelBackend` dan :class:`~django."
"contrib.auth.backends.RemoteUserBackend` sekarang menolak pengguna tidak "
"aktif. Ini berarti bahwa pengguna tidak aktif tidak dapat masuk dan akan "
"keluar jika mereka diganti dari ``is_active=True`` menjadi ``False``. Jika "
"anda butuh perilaku sebelumnya, gunakan :class:`~django.contrib.auth."
"backends.AllowAllUsersModelBackend` atau :class:`~django.contrib.auth."
"backends.AllowAllUsersRemoteUserBackend` di :setting:"
"`AUTHENTICATION_BACKENDS` sebagai gantinya."

msgid ""
"In light of the previous change, the test client's :meth:`~django.test."
"Client.login()` method no longer always rejects inactive users but instead "
"delegates this decision to the authentication backend. :meth:`~django.test."
"Client.force_login()` also delegates the decision to the authentication "
"backend, so if you're using the default backends, you need to use an active "
"user."
msgstr ""
"Dalam terangnya perubahan sebelumnya, percobaan metode :meth:`~django.test."
"Client.login()` klien tidak lagi selalu menolak pengguna tidak aktif tetapi "
"malahan menugaskan keputusan ini ke backend otentifikasi. :meth:`~django."
"test.Client.force_login()` juga menugaskan keputusan ke backend "
"otentifikasi, jadi jika anda sedang menggunakan backend awal, anda butuh "
"menggunakan pengguna aktif."

msgid ""
":func:`django.views.i18n.set_language` may now return a 204 status code for "
"AJAX requests."
msgstr ""
":func:`django.views.i18n.set_language` sekarang mungkin mengembalikan kode "
"keadaan 204 untuk permintaan AJAX."

msgid ""
"The ``base_field`` attribute of :class:`~django.contrib.postgres.fields."
"RangeField` is now a type of field, not an instance of a field.  If you have "
"created a custom subclass of :class:`~django.contrib.postgres.fields."
"RangeField`, you should change the ``base_field`` attribute."
msgstr ""
"Atribut ``base_field`` dari :class:`~django.contrib.postgres.fields."
"RangeField` sekarang jenis dari bidang, bukan sebuah instance dari bidang. "
"Jika anda telah membuat subkelas penyesuaian dari :class:`~django.contrib."
"postgres.fields.RangeField`, anda harus merubah atribut ``base_field``."

msgid ""
"Middleware classes are now initialized when the server starts rather than "
"during the first request."
msgstr ""
"Kelas-kelas middleware sekarang diinisialisasikan ketika peladen mulai "
"daripada selama permintaan pertama."

msgid ""
"If you override ``is_authenticated()`` or ``is_anonymous()`` in a custom "
"user model, you must convert them to attributes or properties as described "
"in :ref:`the deprecation note <user-is-auth-anon-deprecation>`."
msgstr ""
"Jika anda menimpa ``is_authenticated()`` atau ``is_anonymous()`` dalam model "
"pengguna penyesuaian, anda harus merubah mereka ke atribut atau sifat "
"seperti digambarkan di :ref:`the deprecation note <user-is-auth-anon-"
"deprecation>`."

msgid ""
"When using :attr:`ModelAdmin.save_as=True <django.contrib.admin.ModelAdmin."
"save_as>`, the \"Save as new\" button now redirects to the change view for "
"the new object instead of to the model's changelist. If you need the "
"previous behavior, set the new :attr:`ModelAdmin.save_as_continue <django."
"contrib.admin.ModelAdmin.save_as_continue>` attribute to ``False``."
msgstr ""
"Ketika menggunakan :attr:`ModelAdmin.save_as=True <django.contrib.admin."
"ModelAdmin.save_as>`, tombol \"Save as new\" sekarang mengalihkan ke merubah "
"tampilan untuk obyek baru daripada ke daftar rubah model. Jika anda butuh "
"perilaku sebelumnya, setel atribut :attr:`ModelAdmin.save_as_continue "
"<django.contrib.admin.ModelAdmin.save_as_continue>` baru menjadi ``False``."

msgid ""
"Required form fields now have the ``required`` HTML attribute. Set the :attr:"
"`Form.use_required_attribute <django.forms.Form.use_required_attribute>` "
"attribute to ``False`` to disable it. You could also add the ``novalidate`` "
"attribute to ``<form>`` if you don't want browser validation. To disable the "
"``required`` attribute on custom widgets, override the :meth:`Widget."
"use_required_attribute() <django.forms.Widget.use_required_attribute>` "
"method."
msgstr ""
"Bidang-bidang formulir diwajibkan sekarang mempunyai atribut HTML "
"``required``. Setel atribut :attr:`Form.use_required_attribute <django.forms."
"Form.use_required_attribute>` menjadi ``False`` untuk meniadakannya. Anda "
"dapat juga menambah atribut ``novalidate`` pada ``<form>`` jika anda tidak "
"ingin pengesahan peramban. Untuk meniadakan atribut ``required`` pada widget "
"penyesuaian, menimpa metode :meth:`Widget.use_required_attribute() <django."
"forms.Widget.use_required_attribute>`."

msgid ""
"The WSGI handler no longer removes content of responses from ``HEAD`` "
"requests or responses with a ``status_code`` of 100-199, 204, or 304. Most "
"web servers already implement this behavior. Responses retrieved using the "
"Django test client continue to have these \"response fixes\" applied."
msgstr ""

msgid ""
"``Model.__init__()`` now receives ``django.db.models.DEFERRED`` as the value "
"of deferred fields."
msgstr ""
"``Model.__init__()`` sekarang menerima ``django.db.models.DEFERRED`` sebagai "
"nilai dari bidang-bidang yang ditangguhkan."

msgid ""
"The ``Model._deferred`` attribute is removed as dynamic model classes when "
"using ``QuerySet.defer()`` and ``only()`` is removed."
msgstr ""
"Atribut ``Model._deferred`` dpindahkan sebagai kelas-kelas model dinamis "
"ketika menggunakan ``QuerySet.defer()`` dan ``only()`` dipindahkan."

msgid ""
":meth:`Storage.save() <django.core.files.storage.Storage.save>` no longer "
"replaces ``'\\'`` with ``'/'``. This behavior is moved to :class:`~django."
"core.files.storage.FileSystemStorage` since this is a storage specific "
"implementation detail. Any Windows user with a custom storage implementation "
"that relies on this behavior will need to implement it in the custom "
"storage's ``save()`` method."
msgstr ""
":meth:`Storage.save() <django.core.files.storage.Storage.save>` tidak lagi "
"mengganti ``'\\'`` dengan ``'/'``. Perilaku ini dipindahkan ke :class:"
"`~django.core.files.storage.FileSystemStorage` sejak ini adalah rincian "
"penerapan penyimpanan khusus. Tiap pengguna Windows dengan penerapan "
"penyimpanan penyesuaian yang mengandalkan pada perilaku ini akan butuh "
"menerapkannya di metode ``save()`` penyimpanan penyesuaian."

msgid ""
"Private :class:`~django.db.models.FileField` methods "
"``get_directory_name()`` and ``get_filename()`` are no longer called (and "
"are now deprecated) which is a backwards incompatible change for users "
"overriding those methods on custom fields. To adapt such code, override "
"``FileField.generate_filename()`` or :meth:`Storage.generate_filename() "
"<django.core.files.storage.Storage.generate_filename>` instead. It might be "
"possible to use :attr:`~django.db.models.FileField.upload_to` also."
msgstr ""
"Metode :class:`~django.db.models.FileField` pribadi ``get_directory_name()`` "
"dan ``get_filename()`` tidak lagi dipanggil (dan sekarang diusangkan) yaitu "
"perubahan ketidaksesuaian kebelakang untuk pengguna mengutamakan metode-"
"metode tersebut pada bidang penyesuaian. Untuk menyesuaikan kode seperti "
"itu, timpa ``FileField.generate_filename()`` atau :meth:`Storage."
"generate_filename() <django.core.files.storage.Storage.generate_filename>` "
"sebagai gantinya. Itu dapat memungkinkan menggunakan :attr:`~django.db."
"models.FileField.upload_to` juga."

msgid ""
"The subject of mail sent by ``AdminEmailHandler`` is no longer truncated at "
"989 characters. If you were counting on a limited length, truncate the "
"subject yourself."
msgstr ""
"Subjek dari surel dikirim oleh ``AdminEmailHandler`` tidak lagi dipotong "
"pada karakter 989. Jika anda menghitung pada batasan panjang, potong subjek "
"anda sendiri."

msgid ""
"Private expressions ``django.db.models.expressions.Date`` and ``DateTime`` "
"are removed. The new :class:`~django.db.models.functions.Trunc` expressions "
"provide the same functionality."
msgstr ""
"Pernyataan pribadi ``django.db.models.expressions.Date`` dan "
"``DateTime`` dipindahkan. Pernyataan :class:`~django.db.models.functions."
"Trunc` baru menyediakan kegunaan sama."

msgid ""
"The ``_base_manager`` and ``_default_manager`` attributes are removed from "
"model instances. They remain accessible on the model class."
msgstr ""
"Atribut ``_base_manager`` dan ``_default_manager`` dipindahkan dari instance "
"model. Mereka tetap dapat diakses pada kelas model."

msgid ""
"Accessing a deleted field on a model instance, e.g. after ``del obj.field``, "
"reloads the field's value instead of raising ``AttributeError``."
msgstr ""
"Mengakses bidang terhapus pada instance model, sebagai contoh setelah `del "
"obj.field``, muat kembali nilai bidang daripada memunculkan "
"``AttributeError``."

msgid ""
"If you subclass ``AbstractBaseUser`` and override ``clean()``, be sure it "
"calls ``super()``. :meth:`.AbstractBaseUser.normalize_username` is called in "
"a new :meth:`.AbstractBaseUser.clean` method."
msgstr ""
"Jika anda subkelas ``AbstractBaseUser`` dan menimpa ``clean()``, pastikan "
"itu memanggil ``super()``. :meth:`.AbstractBaseUser.normalize_username` "
"dipanggil di metode :meth:`.AbstractBaseUser.clean` baru."

msgid ""
"Private API ``django.forms.models.model_to_dict()`` returns a queryset "
"rather than a list of primary keys for ``ManyToManyField``\\s."
msgstr ""
"API pribadi ``django.forms.models.model_to_dict()`` mengembalikan sebuah "
"queryset daripada sebuah daftar dari primary key untuk ``ManyToManyField``."

msgid ""
"If ``django.contrib.staticfiles`` is installed, the :ttag:`static`  template "
"tag uses the ``staticfiles`` storage to construct the URL rather than simply "
"joining the value with ``STATIC_ROOT``. The new approach encodes the URL, "
"which could be backwards-incompatible in cases such as including a fragment "
"in a path, e.g. ``{% static 'img.svg#fragment' %}``, since the ``#`` is "
"encoded as ``%23``. To adapt, move the fragment outside the template tag: "
"``{% static 'img.svg' %}#fragment``."
msgstr ""
"Jika ``django.contrib.staticfiles`` dipasang, etiket cetakan :ttag:`static` "
"menggunakan penyimpanan ``staticfiles`` untuk membangun URL daripada cukup "
"menggabungkan nilai dengan ``STATIC_ROOT``. Pendekatan baru menyandi URL, "
"yang mungkin ketidaksesuaian-kebelakang di kasus seperti menyertakan sebuah "
"fragmen dalam sebuah jalur, sebagai contoh ``{% static 'img.svg#fragment' %}"
"``, sejak ``#`` disandikan sebagai ``%23``. Untuk menyesuaikan, pindah "
"fragmen diluar etiket cetakan: ``{% static 'img.svg' %}#fragment``."

msgid ""
"When ``USE_L10N`` is ``True``, localization is now applied for the :tfilter:"
"`date` and :tfilter:`time` filters when no format string is specified. The "
"``DATE_FORMAT`` and ``TIME_FORMAT`` specifiers from the active locale are "
"used instead of the settings of the same name."
msgstr ""

msgid "Features deprecated in 1.10"
msgstr "Fitur-fitur diusangkan di 1.10"

msgid "Direct assignment to a reverse foreign key or many-to-many relation"
msgstr ""
"Penugasan langsung untuk membalikkan foreign key atau hubungan many-to-many."

msgid "Instead of assigning related objects using direct assignment:"
msgstr ""

msgid ""
"Use the :meth:`~django.db.models.fields.related.RelatedManager.set` method "
"added in Django 1.9:"
msgstr ""

msgid ""
"This prevents confusion about an assignment resulting in an implicit save."
msgstr ""
"Ini mencegah kebingungan tentang sebuah penugasan menghasilkan sebuah "
"tersirat tersimpan."

msgid "Non-timezone-aware :class:`~django.core.files.storage.Storage` API"
msgstr "API :class:`~django.core.files.storage.Storage` bukan-sadar-zona waktu"

msgid ""
"The old, non-timezone-aware methods ``accessed_time()``, ``created_time()``, "
"and ``modified_time()`` are deprecated in favor of the new ``get_*_time()`` "
"methods."
msgstr ""
"Yang lama, metode bukan-sadar-zona waktu ``accessed_time()``, "
"``created_time()``, dan ``modified_time()`` diusangkan dalam mendukung dari "
"metode ``get_*_time()`` baru."

msgid ""
"Third-party storage backends should implement the new methods and mark the "
"old ones as deprecated. Until then, the new ``get_*_time()`` methods on the "
"base :class:`~django.core.files.storage.Storage` class convert "
"``datetime``\\s from the old methods as required and emit a deprecation "
"warning as they do so."
msgstr ""
"Backend penyimpanan pihak-ketiga harus menerapkan metode baru dan tandai "
"satu yang lama sebagai diusangkan. Sampai kemudian, cara ``get_*_time()`` "
"baru pada kelas :class:`~django.core.files.storage.Storage` dasar merubah "
"``datetime`` dari metode lama sebagai diwajibkan dan mengeluarkan peringatan "
"pengusangan seperti mereka lakukan."

msgid ""
"Third-party storage backends may retain the old methods as long as they wish "
"to support earlier versions of Django."
msgstr ""
"Backend penyimpanan pihak ketiga mungkin mempertahankan metode lama selama "
"mereka berharap mendukung versi sebelumnya dari Django."

msgid ""
"The ``get_srid()`` and ``set_srid()`` methods of :class:`~django.contrib.gis."
"geos.GEOSGeometry` are deprecated in favor of the :attr:`~django.contrib.gis."
"geos.GEOSGeometry.srid` property."
msgstr ""
"Metode ``get_srid()`` dan ``set_srid()`` dari :class:`~django.contrib.gis."
"geos.GEOSGeometry` diusangkan dalam mendukung dari milik :attr:`~django."
"contrib.gis.geos.GEOSGeometry.srid`."

msgid ""
"The ``get_x()``, ``set_x()``, ``get_y()``, ``set_y()``, ``get_z()``, and "
"``set_z()`` methods of :class:`~django.contrib.gis.geos.Point` are "
"deprecated in favor of the ``x``, ``y``, and ``z`` properties."
msgstr ""
"Metode ``get_x()``, ``set_x()``, ``get_y()``, ``set_y()``, ``get_z()``, dan "
"``set_z()`` dari :class:`~django.contrib.gis.geos.Point` diusangkan dalam "
"mendukung dari milik ``x``, ``y``, dan ``z``."

msgid ""
"The ``get_coords()`` and ``set_coords()`` methods of :class:`~django.contrib."
"gis.geos.Point` are deprecated in favor of the ``tuple`` property."
msgstr ""
"Metode ``get_coords()`` dan ``set_coords()`` dari :class:`~django.contrib."
"gis.geos.Point` diusangkan dalam mendukung dari milik ``tuple``."

msgid ""
"The ``cascaded_union`` property of :class:`~django.contrib.gis.geos."
"MultiPolygon` is deprecated in favor of the :attr:`~django.contrib.gis.geos."
"GEOSGeometry.unary_union` property."
msgstr ""
"``cascaded_union`` milik dari :class:`~django.contrib.gis.geos.MultiPolygon` "
"diusangkan dalam mendukung dari milik :attr:`~django.contrib.gis.geos."
"GEOSGeometry.unary_union`."

msgid ""
"The ``django.contrib.gis.utils.precision_wkt()`` function is deprecated in "
"favor of :class:`~django.contrib.gis.geos.WKTWriter`."
msgstr ""
"Fungsi ``django.contrib.gis.utils.precision_wkt()`` diusangkan dalam "
"mendukung dari :class:`~django.contrib.gis.geos.WKTWriter`."

msgid "``CommaSeparatedIntegerField`` model field"
msgstr "Bidang model ``CommaSeparatedIntegerField``"

msgid ""
"``CommaSeparatedIntegerField`` is deprecated in favor of :class:`~django.db."
"models.CharField` with the :func:`~django.core.validators."
"validate_comma_separated_integer_list` validator::"
msgstr ""
"``CommaSeparatedIntegerField`` diusangkan dalam mendukung :class:`~django.db."
"models.CharField` dengan pengesah :func:`~django.core.validators."
"validate_comma_separated_integer_list`::"

msgid ""
"If you're using Oracle, ``CharField`` uses a different database field  type "
"(``NVARCHAR2``) than ``CommaSeparatedIntegerField`` (``VARCHAR2``). "
"Depending on your database settings, this might imply a different encoding, "
"and thus a different length (in bytes) for the same contents. If your stored "
"values are longer than the 4000 byte limit of ``NVARCHAR2``, you should use "
"``TextField`` (``NCLOB``) instead. In this case, if you have any queries "
"that group by the field (e.g. annotating the model with an aggregation or "
"using ``distinct()``) you'll need to change them (to defer the field)."
msgstr ""
"Jika anda menggunakan Oracle, ``CharField`` menggunakan jenis bidang "
"basisdata berbeda (``NVARCHAR2``) daripada ``CommaSeparatedIntegerField`` "
"(``VARCHAR2``). Tergantung pada pengaturan basisdata anda, ini mungkin "
"berarti pengkodean berbeda, dan demikian panjang berbeda (dalam byte) untuk "
"isi sama. Jika anda menyimpan nilai lebih panjang dari batasan 4000 byte "
"dari ``NVARCHAR2``, anda harus menggunakan ``TextField`` (``NCLOB``) sebagai "
"gantinya. Dalam kasus ini, jika anda mempunyai permintaan apapun yang "
"dikelompokkan berdasarkan bidang (sebagai contoh keterangan model dengan "
"kumpulan atau menggunakan ``distinct()``) anda akan butuh merubah mereka "
"(untuk menunda bidang)."

msgid ""
"Using a model name as a query lookup when ``default_related_name`` is set"
msgstr ""
"Menggunakan sebuah nama model sebagai permintaan pencarian ketika "
"``default_related_name`` disetel"

msgid "Assume the following models::"
msgstr "Menganggap model berikut:"

msgid ""
"In older versions, :attr:`~django.db.models.Options.default_related_name` "
"couldn't be used as a query lookup. This is fixed and support for the old "
"lookup name is deprecated. For example, since ``default_related_name`` is "
"set in model ``Bar``, instead of using the model name ``bar`` as the lookup:"
msgstr ""

msgid "use the default_related_name ``bars``:"
msgstr ""

msgid "``__search`` query lookup"
msgstr "``__search`` permintaan pencarian"

msgid ""
"The ``search`` lookup, which supports MySQL only and is extremely limited in "
"features, is deprecated. Replace it with a custom lookup::"
msgstr ""
"Pencarian ``search``, yang mendukung hanya MySQL dan sangat terbataas dalam "
"fitur, diusangkan. Ganti itu dengan pencarian penyesuaian::"

msgid ""
"Using ``User.is_authenticated()`` and ``User.is_anonymous()`` as methods"
msgstr ""
"Menggunakan ``User.is_authenticated()`` dan ``User.is_anonymous()`` sebagai "
"metode."

msgid ""
"The ``is_authenticated()`` and ``is_anonymous()`` methods of :class:`~django."
"contrib.auth.models.AbstractBaseUser` and :class:`~django.contrib.auth."
"models.AnonymousUser` classes are now properties. They will still work as "
"methods until Django 2.0, but all usage in Django now uses attribute access."
msgstr ""
"Metode ``is_authenticated()`` dan ``is_anonymous()`` dari kelas-kelas :class:"
"`~django.contrib.auth.models.AbstractBaseUser` dan :class:`~django.contrib."
"auth.models.AnonymousUser` sekarang milik. Mereka akan masih bekerja sebagai "
"cara sampai Django 2.0, tetapi semua penggunaan di Django sekarang "
"menggunakan akses atribut."

msgid ""
"For example, if you use :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware` and want to know whether the user is currently "
"logged-in you would use::"
msgstr ""
"Sebagai contoh, jika anda menggunakan :class:`~django.contrib.auth."
"middleware.AuthenticationMiddleware` dan ingin mengetahui apakah pengguna "
"saat ini masuk anda akan menggunakan::"

msgid "instead of ``request.user.is_authenticated()``."
msgstr "daripada ``request.user.is_authenticated()``."

msgid ""
"This change avoids accidental information leakage if you forget to call the "
"method, e.g.::"
msgstr ""
"Perubahan ini menghindari kecelakaan kebocoran informasi jika anda lupa "
"memanggil metode, sebagai contoh::"

msgid ""
"If you override these methods in a custom user model, you must change them "
"to properties or attributes."
msgstr ""
"Jika anda menimpa metode ini di penyesuaian model pengguna, anda harus "
"merubah mereka menjadi milik atau atribut."

msgid ""
"Django uses a ``CallableBool`` object to allow these attributes to work as "
"both a property and a method. Thus, until the deprecation period ends, you "
"cannot compare these properties using the ``is`` operator. That is, the "
"following won't work::"
msgstr ""
"Django menggunakan sebuah obyek ``CallableBool`` untuk mengizinkan atribut "
"ini bekerja sebagai kedua milik dan metode. Demikian, hingga periode "
"pengusangan berakhir, dan anda tidak dapat membandingkan milik ini menggukan "
"penghubung ``is``. Dengan kata lain, berikut tidak akan bekerja::"

msgid ""
"Custom manager classes available through ``prefetch_related`` must define a "
"``_apply_rel_filters()`` method"
msgstr ""
"Kelas-kelas penyesuaian pengelola tersedia melalui ``prefetch_related`` "
"harus menentukan sebuah metode ``_apply_rel_filters()``."

msgid ""
"If you defined a custom manager class available through :meth:`~django.db."
"models.query.QuerySet.prefetch_related` you must make sure it defines a "
"``_apply_rel_filters()`` method."
msgstr ""
"Jika anda menentukan penyesuaian kelas pengelola tersedia melalui :meth:"
"`~django.db.models.query.QuerySet.prefetch_related` anda harus memastikan "
"itu menentukan sebuah metode ``_apply_rel_filters()``."

msgid ""
"This method must accept a :class:`~django.db.models.query.QuerySet` instance "
"as its single argument and return a filtered version of the queryset for the "
"model instance the manager is bound to."
msgstr ""
"Metode ini harus menerima sebuah instance :class:`~django.db.models.query."
"QuerySet` sebagai arumen tunggalnya dan mengembalikan versi tersaring dari "
"queryset untuk instance model terikat ke pengelola."

msgid "The \"escape\" half of ``django.utils.safestring``"
msgstr "\"escape\" setengah dari ``django.utils.safestring`` "

msgid ""
"The ``mark_for_escaping()`` function and the classes it uses: "
"``EscapeData``, ``EscapeBytes``, ``EscapeText``, ``EscapeString``, and "
"``EscapeUnicode`` are deprecated."
msgstr ""
"Fungsi ``mark_for_escaping()`` dan kelas-kelas dia gunakan: ``EscapeData``, "
"``EscapeBytes``, ``EscapeText``, ``EscapeString``, dan ``EscapeUnicode`` "
"diusangkan."

msgid ""
"As a result, the \"lazy\" behavior of the ``escape`` filter (where it would "
"always be applied as the last filter no matter where in the filter chain it "
"appeared) is deprecated. The filter will change to immediately apply :func:"
"`~django.utils.html.conditional_escape` in Django 2.0."
msgstr ""
"Sebagai hasil, perilaku \"lazy\" dari penyaring ``escape`` (dimana dia akan "
"selalu diberlakukan sebagai penyaring terakhir tidak penting dimana di "
"rantai penyaring dia muncul) diusangkan. Penyaring akan berubah dengan "
"segera memberlakukan :func:`~django.utils.html.conditional_escape` di Django "
"2.0."

msgid "``Manager.use_for_related_fields`` and inheritance changes"
msgstr "Perubahan ``Manager.use_for_related_fields`` dan warisan"

msgid ""
"``Manager.use_for_related_fields`` is deprecated in favor of setting :attr:"
"`Meta.base_manager_name <django.db.models.Options.base_manager_name>` on the "
"model."
msgstr ""
"``Manager.use_for_related_fields`` diusangkan dalam mendukung dari "
"pengaturan :attr:`Meta.base_manager_name <django.db.models.Options."
"base_manager_name>` pada model."

msgid ""
"Model ``Manager`` inheritance will follow MRO inheritance rules in Django "
"2.0, changing the current behavior where managers defined on non-abstract "
"base classes aren't inherited by child classes. A deprecating warning with "
"instructions on how to adapt your code is raised if you have any affected "
"managers. You'll either redeclare a manager from an abstract model on the "
"child class to override the manager from the concrete model, or you'll set "
"the model's ``Meta.manager_inheritance_from_future=True`` option to opt-in "
"to the new inheritance behavior."
msgstr ""
"Warisan model ``Manager`` akan mengikuti aturan warisan MRO di Django 2.0, "
"merubah perilaku saat ini dimana pengelola ditentukan pada kelas-kelas dasar "
"bukan-abstrak tidak diwariskan oleh kelas-kelas anak. Sebuah peringatan "
"pengusangan dengan petunjuk pada bagaimana menyesuaikan kode anda "
"dimunculkan jika anda mempunyai apapun pengelola terpengaruhi. Anda akan "
"antara menyatakan kembali seorang pengelola dari sebuah model abstrak pada "
"kelas anak untuk menimpa pengelola dari model berwujud, atau anda akan "
"menyetel pilihan ``Meta.manager_inheritance_from_future=True`` model untuk "
"dimasukkan ke perilaku warisan baru."

msgid ""
"During the deprecation period, ``use_for_related_fields`` will be honored "
"and raise a warning, even if a ``base_manager_name`` is set. This allows "
"third-party code to preserve legacy behavior while transitioning to the new "
"API. The warning can be silenced by setting "
"``silence_use_for_related_fields_deprecation=True`` on the manager."
msgstr ""
"Selama masa pengusangan, ``use_for_related_fields`` akan dihormati dan "
"menampilkan sebuah peringatan, bahkan jika sebuah ``base_manager_name`` "
"disetel. Ini mengizinkan kode pihak-ketiga untuk menjaga perilaku warisan "
"selagi transisi ke API baru. Peringatan dapat didiamkan dengan mengatur "
"``silence_use_for_related_fields_deprecation=True`` pada pengelola."

msgid ""
"The ``makemigrations --exit`` option is deprecated in favor of the :option:"
"`makemigrations --check` option."
msgstr ""
"Pilihan ``makemigrations --exit`` diusangkan dalam mendukung dari pilihan :"
"option:`makemigrations --check`."

msgid ""
"``django.utils.functional.allow_lazy()`` is deprecated in favor of the new :"
"func:`~django.utils.functional.keep_lazy` function which can be used with a "
"more natural decorator syntax."
msgstr ""
"``django.utils.functional.allow_lazy()`` diusangkan dalam mendukung dari "
"fungsi :func:`~django.utils.functional.keep_lazy` baru yang dapat digunakan "
"dengan sintaksis penghias alami."

msgid ""
"The ``shell --plain`` option is deprecated in favor of ``-i python`` or ``--"
"interface python``."
msgstr ""
"Pilihan ``shell --plain`` diusangkan dalam mendukung dari ``-i python`` atau "
"``--interface python``."

msgid ""
"Importing from the ``django.core.urlresolvers`` module is deprecated in "
"favor of its new location, :mod:`django.urls`."
msgstr ""
"Mengimpor dari modul ``django.core.urlresolvers`` diusangkan dalam mendukung "
"dari tempat barunya, :mod:`django.urls`."

msgid ""
"The template ``Context.has_key()`` method is deprecated in favor of ``in``."
msgstr ""
"Metode ``Context.has_key()`` cetakan diusangkan dalam mendukung ``in``."

msgid ""
"The private attribute ``virtual_fields`` of ``Model._meta`` is deprecated in "
"favor of ``private_fields``."
msgstr ""
"Atribut pribadi ``virtual_fields`` dari ``Model._meta`` diusangkan dalam "
"mendukung dari ``private_fields``."

msgid ""
"The private keyword arguments ``virtual_only`` in ``Field."
"contribute_to_class()`` and ``virtual`` in ``Model._meta.add_field()`` are "
"deprecated in favor of ``private_only`` and ``private``, respectively."
msgstr ""
"Argumen kata kunci pribadi ``virtual_only`` di ``Field."
"contribute_to_class()`` dan ``virtual`` di ``Model._meta.add_field()`` "
"diusangkan dalam mendukung dari ``private_only`` dan ``private``, masing-"
"masing."

msgid ""
"The ``javascript_catalog()`` and ``json_catalog()`` views are deprecated in "
"favor of class-based views :class:`~django.views.i18n.JavaScriptCatalog` "
"and :class:`~django.views.i18n.JSONCatalog`."
msgstr ""
"Tampilan ``javascript_catalog()`` dan ``json_catalog()`` diusangkan dalam "
"mendukung dari tampilan berdasarkan-kelas :class:`~django.views.i18n."
"JavaScriptCatalog` dan :class:`~django.views.i18n.JSONCatalog`."

msgid ""
"In multi-table inheritance, implicit promotion of a ``OneToOneField`` to a "
"``parent_link`` is deprecated. Add ``parent_link=True`` to such fields."
msgstr ""
"Di warisan banyak-tabel, promosi tersirat dari ``OneToOneField`` ke "
"``parent_link`` diusangkan. Tambah ``parent_link=True`` untuk bidang "
"tersebut."

msgid ""
"The private API ``Widget._format_value()`` is made public and renamed to :"
"meth:`~django.forms.Widget.format_value`. The old name will work through a "
"deprecation period."
msgstr ""
"API pribadi ``Widget._format_value()`` dibuat umum dan dinamai kembali "
"menjadi :meth:`~django.forms.Widget.format_value`. Nama lama akan bekerja "
"sampai masa pengusangan."

msgid ""
"Private ``FileField`` methods ``get_directory_name()`` and "
"``get_filename()`` are deprecated in favor of performing this work in :meth:"
"`Storage.generate_filename() <django.core.files.storage.Storage."
"generate_filename>`)."
msgstr ""
"Metode ``FileField`` pribadi ``get_directory_name()`` dan ``get_filename()`` "
"diusangkan dalam mendukung dari penampilan pekerjaan ini di :meth:`Storage."
"generate_filename() <django.core.files.storage.Storage.generate_filename>`)."

msgid ""
"Old-style middleware that uses  ``settings.MIDDLEWARE_CLASSES`` are "
"deprecated. :ref:`Adapt old, custom middleware <upgrading-middleware>` and "
"use the new :setting:`MIDDLEWARE` setting."
msgstr ""
"Middleware gaya-lama yang menggunakan ``settings.MIDDLEWARE_CLASSES`` "
"diusangkan. :ref:`Adapt old, custom middleware <upgrading-middleware>` dan "
"menggunakan pengaturan :setting:`MIDDLEWARE` baru."

msgid "Features removed in 1.10"
msgstr "Fitur-fitur dipindahkan di 1.10"

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 1.10. See :ref:`deprecated-features-1.8` for details, "
"including how to remove usage of these features."
msgstr ""
"Fitur-fitur ini telah mencapai akhir dari siklus pengusangannya dan "
"dipindahkan di Django 1.10. Lihat :ref:`deprecated-features-1.8` untuk "
"rincian, termasuk bagaimana memindahkan penggunaan dari fitur-fitur ini. "

msgid ""
"Support for calling a ``SQLCompiler`` directly as an alias for calling its "
"``quote_name_unless_alias`` method is removed."
msgstr ""
"Dukungan untuk memanggil ``SQLCompiler`` secara langsung sebagai sebuah nama "
"lain untuk memanggil metode ``quote_name_unless_alias`` nya dipindahkan."

msgid ""
"The ``cycle`` and ``firstof`` template tags are removed from the ``future`` "
"template tag library."
msgstr ""
"Etiket cetakan ``cycle`` dan ``firstof`` dipindahkan dari pustaka etiket "
"cetakan ``future``."

msgid "``django.conf.urls.patterns()`` is removed."
msgstr "``django.conf.urls.patterns()`` dipindahkan."

msgid ""
"Support for the ``prefix`` argument to ``django.conf.urls.i18n."
"i18n_patterns()`` is removed."
msgstr ""
"Dukungan untuk argumen ``prefix`` pada ``django.conf.urls.i18n."
"i18n_patterns()`` dipindahkan."

msgid "``SimpleTestCase.urls`` is removed."
msgstr "``SimpleTestCase.urls`` dipindahkan."

msgid ""
"Using an incorrect count of unpacked values in the ``for`` template tag "
"raises an exception rather than failing silently."
msgstr ""
"Menggunakan perhitungan salah dari nilai dibuka di etiket cetakan ``for`` "
"memunculkan sebuah pengecualian daripada gagal diam-diam."

msgid ""
"The ability to :func:`~django.urls.reverse` URLs using a dotted Python path "
"is removed."
msgstr ""
"Kemampuan untuk :func:`~django.urls.reverse` URL menggunakan jalur Python "
"bertitik dipindahkan. "

msgid ""
"The ability to use a dotted Python path for the ``LOGIN_URL`` and "
"``LOGIN_REDIRECT_URL`` settings is removed."
msgstr ""
"Kemampuan menggunakan jalur Python bertitik untuk pengaturan ``LOGIN_URL`` "
"dan ``LOGIN_REDIRECT_URL`` dipindahkan."

msgid "Support for ``optparse`` is dropped for custom management commands."
msgstr ""
"Dukungan untuk ``optparse`` dibuang untuk perintah pengelolaan penyesuaian."

msgid "The class ``django.core.management.NoArgsCommand`` is removed."
msgstr "Kelas ``django.core.management.NoArgsCommand`` dipindahkan."

msgid "``django.core.context_processors`` module is removed."
msgstr "Modul ``django.core.context_processors`` dipindahkan."

msgid "``django.db.models.sql.aggregates`` module is removed."
msgstr "Modul ``django.db.models.sql.aggregates`` dipindahkan."

msgid "``django.contrib.gis.db.models.sql.aggregates`` module is removed."
msgstr "Modul ``django.contrib.gis.db.models.sql.aggregates`` dipindahkan."

msgid ""
"The following methods and properties of ``django.db.sql.query.Query`` are "
"removed:"
msgstr ""
"Metode dan milik berikut dari ``django.db.sql.query.Query`` dipindahkan:"

msgid "Properties: ``aggregates`` and ``aggregate_select``"
msgstr "Milik: ``aggregates`` dan ``aggregate_select``"

msgid ""
"Methods: ``add_aggregate``, ``set_aggregate_mask``, and "
"``append_aggregate_mask``."
msgstr ""
"Metode: ``add_aggregate``, ``set_aggregate_mask``, dan "
"``append_aggregate_mask``."

msgid "``django.template.resolve_variable`` is removed."
msgstr "``django.template.resolve_variable`` dipindahkan."

msgid ""
"The following private APIs are removed from :class:`django.db.models.options."
"Options` (``Model._meta``):"
msgstr ""
"API pribadi berikut dipindahkan dari :class:`django.db.models.options."
"Options` (``Model._meta``):"

msgid "``get_field_by_name()``"
msgstr "``get_field_by_name()``"

msgid "``get_all_field_names()``"
msgstr "``get_all_field_names()``"

msgid "``get_fields_with_model()``"
msgstr "``get_fields_with_model()``"

msgid "``get_concrete_fields_with_model()``"
msgstr "``get_concrete_fields_with_model()``"

msgid "``get_m2m_with_model()``"
msgstr "``get_m2m_with_model()``"

msgid "``get_all_related_objects()``"
msgstr "``get_all_related_objects()``"

msgid "``get_all_related_objects_with_model()``"
msgstr "``get_all_related_objects_with_model()``"

msgid "``get_all_related_many_to_many_objects()``"
msgstr "``get_all_related_many_to_many_objects()``"

msgid "``get_all_related_m2m_objects_with_model()``"
msgstr "``get_all_related_m2m_objects_with_model()``"

msgid ""
"The ``error_message`` argument of ``django.forms.RegexField`` is removed."
msgstr ""
"Argumen ``error_message`` dari ``django.forms.RegexField`` dipindahkan."

msgid "The ``unordered_list`` filter no longer supports old style lists."
msgstr "Penyaring ``unordered_list`` tidak mendukung lagi daftar gaya lama."

msgid "Support for string ``view`` arguments to ``url()`` is removed."
msgstr ""
"Dukungan untuk deretan karakter argumen ``view`` pada ``url()`` dipindahkan."

msgid ""
"The backward compatible shim  to rename ``django.forms.Form._has_changed()`` "
"to ``has_changed()`` is removed."
msgstr ""
"Shim kesesuaian kebelakang untuk menamai kembali ``django.forms.Form."
"_has_changed()`` pada ``has_changed()`` dipindahkan."

msgid "The ``removetags`` template filter is removed."
msgstr "Penyaring cetakan ``removetags`` dipindahkan."

msgid ""
"The ``remove_tags()`` and ``strip_entities()`` functions in ``django.utils."
"html`` is removed."
msgstr ""
"Fungsi ``remove_tags()`` dan ``strip_entities()`` di ``django.utils.html`` "
"dipindahkan."

msgid ""
"The ``is_admin_site`` argument to ``django.contrib.auth.views."
"password_reset()`` is removed."
msgstr ""
"Argumen ``is_admin_site`` pada ``django.contrib.auth.views."
"password_reset()`` dipindahkan. "

msgid "``django.db.models.field.subclassing.SubfieldBase`` is removed."
msgstr "``django.db.models.field.subclassing.SubfieldBase`` dipindahkan."

msgid "``django.utils.checksums`` is removed."
msgstr "``django.utils.checksums`` dipindahkan."

msgid ""
"The ``original_content_type_id`` attribute on ``django.contrib.admin.helpers."
"InlineAdminForm`` is removed."
msgstr ""
"Atribut ``original_content_type_id`` pada ``django.contrib.admin.helpers."
"InlineAdminForm`` dipindahkan."

msgid ""
"The backwards compatibility shim to allow ``FormMixin.get_form()`` to be "
"defined with no default value for its ``form_class`` argument is removed."
msgstr ""
"Shim kesesuaian kebelakang mengizinkan ``FormMixin.get_form()`` untuk "
"ditentukan dengan nilai tidak ada awalan untuk argumen ``form_class`` nya "
"dipindahkan."

msgid ""
"The following settings are removed, and you must upgrade to the :setting:"
"`TEMPLATES` setting:"
msgstr ""
"Pengaturan berikut telah dihapus, anda harus ubah menjadi pengaturan :"
"setting:`TEMPLATES`:"

msgid "``ALLOWED_INCLUDE_ROOTS``"
msgstr "``ALLOWED_INCLUDE_ROOTS``"

msgid "``TEMPLATE_CONTEXT_PROCESSORS``"
msgstr "``TEMPLATE_CONTEXT_PROCESSORS``"

msgid "``TEMPLATE_DEBUG``"
msgstr "``TEMPLATE_DEBUG``"

msgid "``TEMPLATE_DIRS``"
msgstr "``TEMPLATE_DIRS``"

msgid "``TEMPLATE_LOADERS``"
msgstr "``TEMPLATE_LOADERS``"

msgid "``TEMPLATE_STRING_IF_INVALID``"
msgstr "``TEMPLATE_STRING_IF_INVALID``"

msgid ""
"The backwards compatibility alias ``django.template.loader.BaseLoader`` is "
"removed."
msgstr ""
"Nama lain kesesuaian kebelakang ``django.template.loader.BaseLoader`` "
"dipindahkan."

msgid ""
"Django template objects returned by :func:`~django.template.loader."
"get_template` and :func:`~django.template.loader.select_template` no longer "
"accept a :class:`~django.template.Context` in their :meth:`~django.template."
"backends.base.Template.render()` method."
msgstr ""
"Obyek cetakan Django dikembalikan oleh :func:`~django.template.loader."
"get_template` dan :func:`~django.template.loader.select_template` tidak lagi "
"menerima sebuah :class:`~django.template.Context` di metode :meth:`~django."
"template.backends.base.Template.render()` mereka."

msgid ""
":doc:`Template response APIs </ref/template-response>` enforce the use of :"
"class:`dict` and backend-dependent template objects instead of :class:"
"`~django.template.Context` and :class:`~django.template.Template` "
"respectively."
msgstr ""
":doc:`Template response APIs </ref/template-response>` memaksa penggunaan "
"dari :class:`dict` dan obyek cetakan tergantung-backend daripada masing-"
"masing :class:`~django.template.Context` dan :class:`~django.template."
"Template`."

msgid ""
"The ``current_app`` parameter for the following function and classes is "
"removed:"
msgstr ""
"Parameter ``current_app`` untuk fungsi dan kelas-kelas berikut dipindahkan:"

msgid "``django.shortcuts.render()``"
msgstr "``django.shortcuts.render()``"

msgid "``django.template.Context()``"
msgstr "``django.template.Context()``"

msgid "``django.template.RequestContext()``"
msgstr "``django.template.RequestContext()``"

msgid "``django.template.response.TemplateResponse()``"
msgstr "``django.template.response.TemplateResponse()``"

msgid ""
"The ``dictionary`` and ``context_instance`` parameters for the following "
"functions are removed:"
msgstr ""
"Parameter ``dictionary`` dan ``context_instance`` untuk fungsi berikut "
"dipindahkan:"

msgid "``django.shortcuts.render_to_response()``"
msgstr "``django.shortcuts.render_to_response()``"

msgid "``django.template.loader.render_to_string()``"
msgstr "``django.template.loader.render_to_string()``"

msgid "The ``dirs`` parameter for the following functions is removed:"
msgstr "Parameter ``dirs`` untuk fungsi berikut dipindahkan:"

msgid "``django.template.loader.get_template()``"
msgstr "``django.template.loader.get_template()``"

msgid "``django.template.loader.select_template()``"
msgstr "``django.template.loader.select_template()``"

msgid ""
"Session verification is enabled regardless of whether or not ``'django."
"contrib.auth.middleware.SessionAuthenticationMiddleware'`` is in "
"``MIDDLEWARE_CLASSES``. ``SessionAuthenticationMiddleware`` no longer has "
"any purpose and can be removed from ``MIDDLEWARE_CLASSES``. It's kept as a "
"stub until Django 2.0 as a courtesy for users who don't read this note."
msgstr ""
"Pengecekan sesi diadakan tanpa memperhatikan apakah atau tidak ``'django."
"contrib.auth.middleware.SessionAuthenticationMiddleware'`` di "
"``MIDDLEWARE_CLASSES``. ``SessionAuthenticationMiddleware`` tidak lagi "
"mempunyai tujuan apapun dan dapat dipindahkan dari ``MIDDLEWARE_CLASSES``. "
"Itu dijaga sebagai potongan sampai Django 2.0 sebagai basa-basi untuk "
"pengguna yang tidak membaca catatan ini."

msgid "Private attribute ``django.db.models.Field.related`` is removed."
msgstr "Atribut pribadi ``django.db.models.Field.related`` dipindahkan."

msgid "The ``--list`` option of the ``migrate`` management command is removed."
msgstr "Pilihan ``--list`` dari perintah pengelolaan ``migrate`` dipindahkan."

msgid "The ``ssi`` template tag is removed."
msgstr "Etiket cetakan ``ssi`` dipindahkan."

msgid ""
"Support for the ``=`` comparison operator in the ``if`` template tag is "
"removed."
msgstr ""
"Mendukung untuk penghubung perbandingan ``=`` di etiket cetakan ``if`` "
"dipindahkan."

msgid ""
"The backwards compatibility shims to allow ``Storage.get_available_name()`` "
"and ``Storage.save()`` to be defined without a ``max_length`` argument are "
"removed."
msgstr ""
"Shim kesesuaian kebelakang mengizinkan ``Storage.get_available_name()`` dan "
"``Storage.save()`` untuk ditentukan tanpa sebuah argumen ``max_length`` "
"dipindahkan."

msgid ""
"Support for the legacy ``%(<foo>)s`` syntax in ``ModelFormMixin."
"success_url`` is removed."
msgstr ""
"Dukungan untuk warisan sintaksis ``%(<foo>)s`` di ``ModelFormMixin."
"success_url`` dipindahkan."

msgid ""
"``GeoQuerySet`` aggregate methods ``collect()``, ``extent()``, "
"``extent3d()``, ``make_line()``, and ``unionagg()`` are removed."
msgstr ""
"``GeoQuerySet`` kumpulan metode ``collect()``, ``extent()``, ``extent3d()``, "
"``make_line()``, dan ``unionagg()`` dipindahkan."

msgid ""
"The ability to specify ``ContentType.name`` when creating a content type "
"instance is removed."
msgstr ""
"Kemampuan untuk menentukan ``ContentType.name`` ketika membuat instance "
"jenis isi dipindahkan."

msgid "Support for the old signature of ``allow_migrate`` is removed."
msgstr "Dukungan untuk tandatangan lama dari ``allow_migrate`` dipindahkan."

msgid ""
"Support for the syntax of ``{% cycle %}`` that uses comma-separated "
"arguments is removed."
msgstr ""
"Dukungan untuk sintaksis ``{% cycle %}`` yang menggunakan argumen dipisah-"
"koma dipindahkan."

msgid ""
"The warning that :class:`~django.core.signing.Signer` issued when given an "
"invalid separator is now a ``ValueError``."
msgstr ""
"Peringatan yang :class:`~django.core.signing.Signer` muncul ketika pemisah "
"tidak sah yang diberikan sekarang menjadi sebuah pengecualian."

msgid "Django 1.10.1 release notes"
msgstr "Catatan terbitan Django 1.10.1"

msgid "*September 1, 2016*"
msgstr "*September 1, 2016*"

msgid "Django 1.10.1 fixes several bugs in 1.10."
msgstr "Django 1.10.1 memperbaiki beberapa kesalahan di 1.10."

msgid "Bugfixes"
msgstr "Perbaikan kesalahan"

msgid ""
"Fixed a crash in MySQL connections where ``SELECT @@SQL_AUTO_IS_NULL`` "
"doesn't return a result (:ticket:`26991`)."
msgstr ""
"Diperbaiki sebuah kegagalan di hubungan MySQL dimana ``SELECT "
"@@SQL_AUTO_IS_NULL`` tidak mengembalikan sebuah hasil (:ticket:`26991`)."

msgid ""
"Allowed ``User.is_authenticated`` and ``User.is_anonymous`` properties to be "
"compared using ``==``, ``!=``, and ``|`` (:ticket:`26988`, :ticket:`27154`)."
msgstr ""
"Diizinkan sifat ``User.is_authenticated`` dan ``User.is_anonymous`` untuk "
"dibandingkan menggunakan ``==``, ``!=``, dan ``|`` (:ticket:`26988`, :ticket:"
"`27154`)."

msgid ""
"Removed the broken ``BaseCommand.usage()`` method which was for ``optparse`` "
"support (:ticket:`27000`)."
msgstr ""
"Dipindahkan metode ``BaseCommand.usage()`` rusak yang untuk dukungan "
"``optparse`` (:ticket:`27000`)."

msgid ""
"Fixed a checks framework crash with an empty ``Meta.default_permissions`` (:"
"ticket:`26997`)."
msgstr ""
"Diperbaiki sebuah pemeriksaan kegagalan kerangka kerja dengan sebuah ``Meta."
"default_permissions`` kosong (:ticket:`26997`)."

msgid ""
"Fixed a regression in the number of queries when using ``RadioSelect`` with "
"a ``ModelChoiceField`` form field (:ticket:`27001`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam angka dari permintaan ketika menggunakan "
"``RadioSelect`` dengan bidang formulir ``ModelChoiceField`` (:ticket:"
"`27001`)."

msgid ""
"Fixed a crash if ``request.META['CONTENT_LENGTH']`` is an empty string (:"
"ticket:`27005`)."
msgstr ""
"Diperbaiki sebuah kegagalan jika ``request.META['CONTENT_LENGTH']`` adalah "
"deretan karakter kosong (:ticket:`27005`)."

msgid ""
"Fixed the ``isnull`` lookup on a ``ForeignKey`` with its ``to_field`` "
"pointing to a ``CharField`` or pointing to a ``CharField`` defined with "
"``primary_key=True`` (:ticket:`26983`)."
msgstr ""
"Diperbaiki pencarian ``isnull`` pada sebuah ``ForeignKey`` dengan "
"``to_field`` nya menunjuk ke sebuah ``CharField`` atau menunjuk ke sebuah "
"``CharField`` ditentukan dengan ``primary_key=True`` (:ticket:`26983`)."

msgid ""
"Prevented the ``migrate`` command from raising "
"``InconsistentMigrationHistory`` in the presence of unapplied squashed "
"migrations (:ticket:`27004`)."
msgstr ""
"Dicegah perintah ``migrate`` dari memunculkan "
"``InconsistentMigrationHistory`` di kehadiran dari perpindahan lumatan tidak "
"diberlakukan (:ticket:`27004`)."

msgid ""
"Fixed a regression in ``Client.force_login()`` which required specifying a "
"``backend`` rather than automatically using the first one if multiple "
"backends are configured (:ticket:`27027`)."
msgstr ""
"Diperbaiki sebuah pemulihan di ``Client.force_login()`` yang dibutuhkan "
"menentukan sebuah ``backend`` daripada otomatis menggunakan satu yang "
"pertama jika banyak backend dikonfigurasi (:ticket:`27027`)."

msgid ""
"Made ``QuerySet.bulk_create()`` properly initialize model instances on "
"backends, such as PostgreSQL, that support returning the IDs of the created "
"records so that many-to-many relationships can be used on the new objects (:"
"ticket:`27026`)."
msgstr ""
"Membuat ``QuerySet.bulk_create()`` secara benar menginisialisasi instance "
"model pada backend, seperti PostgreSQL, yang mendukung mengembalikan ID dari "
"rekaman dibuat sehingga hubungan many-to-many dapat digunakan pada obyek "
"baru (:ticket:`27026`)."

msgid ""
"Fixed crash of ``django.views.static.serve()`` with ``show_indexes`` enabled "
"(:ticket:`26973`)."
msgstr ""
"Diperbaiki kegagalan dari ``django.views.static.serve()`` dengan "
"``show_indexes`` diadakan (:ticket:`26973`)."

msgid ""
"Fixed ``ClearableFileInput`` to avoid the ``required`` HTML attribute when "
"initial data exists (:ticket:`27037`)."
msgstr ""
"Diperbaiki ``ClearableFileInput`` untuk menghindari atribut HTML "
"``required`` ketika data inisial ada (:ticket:`27037`)."

msgid ""
"Fixed annotations with database functions when combined with lookups on "
"PostGIS (:ticket:`27014`)."
msgstr ""
"Diperbaiki keterangan dengan fungsi basisdata ketika dipadukan dengan "
"pencarian pada PostGIS (:ticket:`27014`)."

msgid ""
"Reallowed the ``{% for %}`` tag to unpack any iterable (:ticket:`27058`)."
msgstr ""
"Diizinkan kembali etiket ``{% for %}`` untuk membuka setiap dapat berulang (:"
"ticket:`27058`)."

msgid ""
"Made ``makemigrations`` skip inconsistent history checks on non-default "
"databases if database routers aren't in use or if no apps can be migrated to "
"the database (:ticket:`27054`, :ticket:`27110`, :ticket:`27142`)."
msgstr ""
"Membuat ``makemigrations`` melewati pemeriksaan riwayat tidak tetap pada "
"basisdata bukan-awalan jika perute basisdata tidak digunakan atau jika bukan "
"aplikasi dapat dipindahkan ke basisdata (:ticket:`27054`, :ticket:`27110`, :"
"ticket:`27142`)."

msgid ""
"Removed duplicated managers in ``Model._meta.managers`` (:ticket:`27073`)."
msgstr ""
"Dipindahkan pengelola ganda dalam ``Model._meta.managers`` (:ticket:`27073`)."

msgid ""
"Fixed ``contrib.admindocs`` crash when a view is in a class, such as some of "
"the admin views (:ticket:`27018`)."
msgstr ""
"Diperbaiki kegagalan ``contrib.admindocs`` ketika sebuah tampilan ada di "
"sebuah kelas, seperti beberapa dari tampilan admin (:ticket:`27018`)."

msgid ""
"Reverted a few admin checks that checked ``field.many_to_many`` back to "
"``isinstance(field, models.ManyToManyField)`` since it turned out the checks "
"weren't suitable to be generalized like that (:ticket:`26998`)."
msgstr ""
"Dikembalikan sedikit pemeriksaan admin yang memeriksa ``field.many_to_many`` "
"kembali ke ``isinstance(field, models.ManyToManyField)`` sejak itu ternyata "
"pemeriksaan tidak cocok untuk disamaratakan seperti itu (:ticket:`26998`)."

msgid ""
"Added the database alias to the ``InconsistentMigrationHistory`` message "
"raised by ``makemigrations`` and ``migrate`` (:ticket:`27089`)."
msgstr ""
"Ditambahkan nama lain basisdata pada pesan ``InconsistentMigrationHistory`` "
"dimunculkan oleh ``makemigrations`` dan ``migrate`` (:ticket:`27089`)."

msgid ""
"Fixed the creation of ``ContentType`` and ``Permission`` objects for models "
"of applications without migrations when calling the ``migrate`` command with "
"no migrations to apply (:ticket:`27044`)."
msgstr ""
"Diperbaiki pembuatan dari obyek ``ContentType`` dan ``Permission`` untuk "
"model dari aplikasi tanpa perpndahan ketika memanggil perintah ``migrate`` "
"dengan tidak ada perpindahan untuk diberlakukan (:ticket:`27044`)."

msgid ""
"Included the already applied migration state changes in the ``Apps`` "
"instance provided to the ``pre_migrate`` signal receivers to allow "
"``ContentType`` renaming to be performed on model rename (:ticket:`27100`)."
msgstr ""
"Disertakan perubahan keadaan perpindahan sudah diberlakukan di instance "
"``App`` disediakan ke penerima sinyal ``pre_migrate`` untuk mengizinkan "
"penamaan kembali ``ContentType`` pada penamaan kembali model (:ticket:"
"`27100`)."

msgid ""
"Reallowed subclassing ``UserCreationForm`` without ``USERNAME_FIELD`` in "
"``Meta.fields`` (:ticket:`27111`)."
msgstr ""
"Diizinkan kembali mensubkelaskan ``UserCreationForm`` tanpa "
"``USERNAME_FIELD`` di ``Meta.fields`` (:ticket:`27111`)."

msgid ""
"Fixed a regression in model forms where model fields with a ``default`` that "
"didn't appear in POST data no longer used the ``default`` (:ticket:`27039`)."
msgstr ""
"Diperbaiki pemulihan di formulir model dimana bidang model dengan "
"``default`` yang tidak muncul di data POST tidak lagi menggunakan "
"``default`` (:ticket:`27039`)."

msgid "Django 1.10.2 release notes"
msgstr "Catatan terbitan Django 1.10.2"

msgid "*October 1, 2016*"
msgstr "*1 Oktober 2016*"

msgid "Django 1.10.2 fixes several bugs in 1.10.1."
msgstr "Django 1.10.2 memperbaiki beberapa kesalahan di 1.10.1."

msgid ""
"Fixed a crash in MySQL database validation where ``SELECT @@sql_mode`` "
"doesn't return a result (:ticket:`27180`)."
msgstr ""
"Diperbaiki sebuah kegagalan di pengesahan basisdata MySQL dimana ``SELECT "
"@@sql_mode`` tidak mengembalikan sebuah hasil (:ticket:`27180`)."

msgid ""
"Allowed combining ``contrib.postgres.search.SearchQuery`` with more than one "
"``&`` or ``|`` operators (:ticket:`27143`)."
msgstr ""
"Diizinkan memadukan ``contrib.postgres.search.SearchQuery`` dengan lebih "
"dari satu penghubung ``&`` atau ``|`` (:ticket:`27143`)."

msgid ""
"Disabled system check for URL patterns beginning with a '/' when "
"``APPEND_SLASH=False`` (:ticket:`27238`)."
msgstr ""
"Meniadakan pemeriksaan sistem untuk pola URL dimulai dengan sebuah '/' "
"ketika ``APPEND_SLASH=False`` (:ticket:`27238`)."

msgid ""
"Fixed model form ``default`` fallback for ``CheckboxSelectMultiple``, "
"``MultiWidget``, ``FileInput``, ``SplitDateTimeWidget``, "
"``SelectDateWidget``, and ``SplitArrayWidget`` (:ticket:`27186`). Custom "
"widgets affected by this issue should implement :meth:`~django.forms.Widget."
"value_omitted_from_data`."
msgstr ""
"Diperbaiki formulir model fallback ``default`` untuk "
"``CheckboxSelectMultiple``, ``MultiWidget``, ``FileInput``, "
"``SplitDateTimeWidget``, ``SelectDateWidget``, dan ``SplitArrayWidget`` (:"
"ticket:`27186`). Widget penyesuaian dipengaruhi oleh masalah ini harus "
"menerapkan :meth:`~django.forms.Widget.value_omitted_from_data`."

msgid ""
"Fixed a crash in ``runserver`` logging during a \"Broken pipe\" error (:"
"ticket:`27271`)."
msgstr ""
"Diperbaiki sebuah kegagalan di mencatat ``runserver`` selama kesalahan "
"\"Broken pipe\" (:ticket:`27271`)."

msgid ""
"Fixed a regression where unchanged localized date/time fields were listed as "
"changed in the admin's model history messages (:ticket:`27302`)."
msgstr ""
"Diperbaiki sebuah pemulihan dimana bidang tanggal/waktu lokal tidak berubah "
"didaftarkan sebagai berubah di pesan riwayat model admin (:ticket:`27302`)."

msgid "Django 1.10.3 release notes"
msgstr "Catatan terbitan Django 1.10.3"

msgid "*November 1, 2016*"
msgstr "*1 November 2016*"

msgid "Django 1.10.3 fixes two security issues and several bugs in 1.10.2."
msgstr ""
"Django 1.10.3 memperbaiki dua masalah keamanan dan beberapa kesalahan di "
"1.10.2."

msgid "User with hardcoded password created when running tests on Oracle"
msgstr ""
"Pengguna dengan sandi kode keras dibuat ketika menjalankan percobaan pada "
"Oracle"

msgid ""
"When running tests with an Oracle database, Django creates a temporary "
"database user. In older versions, if a password isn't manually specified in "
"the database settings ``TEST`` dictionary, a hardcoded password is used. "
"This could allow an attacker with network access to the database server to "
"connect."
msgstr ""
"Ketika menjalankan percobaan dengan basisdata Oracle, Django membuat "
"basisdata sementara pengguna. Di versi terlama, jika sandi tidak secara "
"manual ditentukan di pengaturan basisdata kamus ``TEST``, sebuah kode keras "
"sandi digunakan. Inidapat mengizinkan penyerang dengan akses jaringan ke "
"peladen basisdata untuk terhubung."

msgid ""
"This user is usually dropped after the test suite completes, but not when "
"using the ``manage.py test --keepdb`` option or if the user has an active "
"session (such as an attacker's connection)."
msgstr ""
"Pengguna ini biasanya dibuang setelah rangkaian percobaan selesai, tetapi "
"tidak ketika menggunakan pilihan ``manage.py test --keepdb`` atau jika "
"pengguna mempunyai sesi aktif (seperti seorang hubungan penyerang)."

msgid "A randomly generated password is now used for each test run."
msgstr ""
"Secara acak sandi dibangkitkan sekarang digunakan untuk setiap pejalan "
"percobaan."

msgid "DNS rebinding vulnerability when ``DEBUG=True``"
msgstr "Kerentanan pengikatan kembali DNS ketika ``DEBUG=True``"

msgid ""
"Older versions of Django don't validate the ``Host`` header against "
"``settings.ALLOWED_HOSTS`` when ``settings.DEBUG=True``. This makes them "
"vulnerable to a `DNS rebinding attack <https://benmmurphy.github.io/"
"blog/2016/07/11/rails-webconsole-dns-rebinding/>`_."
msgstr ""
"Versi terlama dari Django tidak mensahakn kepala ``Host`` terhadap "
"``settings.ALLOWED_HOSTS`` ketika ``settings.DEBUG=True``. Ini membuat "
"mereka rentan pada `DNS rebinding attack <https://benmmurphy.github.io/"
"blog/2016/07/11/rails-webconsole-dns-rebinding/>`_."

msgid ""
"While Django doesn't ship a module that allows remote code execution, this "
"is at least a cross-site scripting vector, which could be quite serious if "
"developers load a copy of the production database in development or connect "
"to some production services for which there's no development instance, for "
"example. If a project uses a package like the ``django-debug-toolbar``, then "
"the attacker could execute arbitrary SQL, which could be especially bad if "
"the developers connect to the database with a superuser account."
msgstr ""
"Selagi Django tidak dibekali modul yang mengizinkan pengerjaan kode secara "
"terpencil, ini setidaknya vektor cross-site scripting, yang dapat sangat "
"serius jika pengembang memuat salinan dari basisdata produksi di "
"pengembangan atau terhubung ke beberapa layanan produksi untuk dimana tidak "
"ada instance pengembangan, sebagai contoh. Jika sebuah proyek menggunakan "
"sebuah paket seperti ``django-debug-toolbar``, kemudian penyerang dapa "
"menjalankan SQL yang berubah-ubah, yang dapat khususnya buruk jika "
"pengembang terhubung ke basisdata dengan akun superuser."

msgid ""
"``settings.ALLOWED_HOSTS`` is now validated regardless of ``DEBUG``. For "
"convenience, if ``ALLOWED_HOSTS`` is empty and ``DEBUG=True``, the following "
"variations of localhost are allowed ``['localhost', '127.0.0.1', '::1']``. "
"If your local settings file has your production ``ALLOWED_HOSTS`` value, you "
"must now omit it to get those fallback values."
msgstr ""
"``settings.ALLOWED_HOSTS`` sekarang disahkan meskipun ``DEBUG``. Untuk "
"kemnyamanan, jika ``ALLOWED_HOSTS`` adalah kosong dan ``DEBUG=True``, "
"perbedaan berikut dari localhost diizinkan ``['localhost', '127.0.0.1', "
"'::1']``. Jika berkas pengaturan lokal anda mempunyai produksi anda nilai "
"``ALLOWED_HOSTS``, anda harus sekarang menghilangkan itu untuk mendapatkan "
"nilai fallback tersebut."

msgid ""
"Allowed ``User.is_authenticated`` and ``User.is_anonymous`` properties to be "
"tested for ``set`` membership (:ticket:`27309`)."
msgstr ""
"Diizinkan milik ``User.is_authenticated`` dan ``User.is_anonymous`` untuk "
"dicobakan untuk ``set`` keanggotaan (:ticket:`27309`)."

msgid ""
"Fixed a performance regression when running ``migrate`` in projects with "
"``RenameModel`` operations (:ticket:`27279`)."
msgstr ""
"Diperbaiki sebuah pemulihan penampilan ketika menjalankan ``migrate`` di "
"proyek dengan tindakan ``RenameModel`` (:ticket:`27279`)."

msgid ""
"Added ``model_name`` to the ``allow_migrate()`` calls in ``makemigrations`` "
"(:ticket:`27200`)."
msgstr ""
"Ditambahkan ``model_name`` pada panggilan ``allow_migrate()`` di "
"``makemigrations`` (:ticket:`27200`)."

msgid ""
"Made the ``JavaScriptCatalog`` view respect the ``packages`` argument; "
"previously it was ignored (:ticket:`27374`)."
msgstr ""
"Membuat tampilan ``JavaScriptCatalog`` mematuhi argumen ``packages``; "
"sebelumnya dia diabaikan (:ticket:`27374`)."

msgid ""
"Fixed ``QuerySet.bulk_create()`` on PostgreSQL when the number of objects is "
"a multiple plus one of ``batch_size`` (:ticket:`27385`)."
msgstr ""
"Diperbaiki ``QuerySet.bulk_create()`` pada PostgreSQL ketika sejumlah obyek "
"adalah banyak ditambah satu dari ``batch_size`` (:ticket:`27385`)."

msgid ""
"Prevented ``i18n_patterns()`` from using too much of the URL as the language "
"to fix a use case for ``prefix_default_language=False`` (:ticket:`27063`)."
msgstr ""
"Dicegah ``i18n_patterns()`` dari menggunakan terlalu banyak dari URL sebagai "
"bahasa untuk memperbaki kasus penggunaan untuk "
"``prefix_default_language=False`` (:ticket:`27063`)."

msgid ""
"Replaced a possibly incorrect redirect from ``SessionMiddleware`` when a "
"session is destroyed in a concurrent request with a ``SuspiciousOperation`` "
"to indicate that the request can't be completed (:ticket:`27363`)."
msgstr ""
"Diganti sebuah kemungkinan pengalihan tidak benar dari ``SessionMiddleware`` "
"ketika sebuah sesi dihancurkan di permintaan yang berbarengan dengan sebuah "
"``SuspiciousOperation`` untuk mengarahkan bahwa permintaan tidak dapat "
"dilengkapi (:ticket:`27363`)."

msgid "Django 1.10.4 release notes"
msgstr "Catatan terbitan Django 1.10.4"

msgid "*December 1, 2016*"
msgstr "*1 Desmber, 2016*"

msgid "Django 1.10.4 fixes several bugs in 1.10.3."
msgstr "Django 1.10.4 memperbaiki beberapa kesalahan di 1.10.3."

msgid ""
"Quoted the Oracle test user's password in queries to fix the \"ORA-00922: "
"missing or invalid option\" error when the password starts with a number or "
"special character (:ticket:`27420`)."
msgstr ""
"Dikutip sandi pengguna percobaan Oracle dalam permintaan untuk memperbaiki "
"kesalahan \"ORA-00922: missing or invalid option\" ketika sandi dimulai "
"dengan sebuah angka atau karakter khusus (:ticket:`27420`)."

msgid ""
"Fixed incorrect ``app_label`` / ``model_name`` arguments for "
"``allow_migrate()`` in ``makemigrations`` migration consistency checks (:"
"ticket:`27461`)."
msgstr ""
"Diperbaiki argumen ``app_label`` / ``model_name`` tidak benar untuk  "
"``allow_migrate()`` di pemeriksaan kemantapan perpindahan ``makemigrations`` "
"(:ticket:`27461`)."

msgid ""
"Made ``Model.delete(keep_parents=True)`` preserve parent reverse "
"relationships in multi-table inheritance (:ticket:`27407`)."
msgstr ""
"Dibuat ``Model.delete(keep_parents=True)`` menjaga hubungan membalikkan "
"induk di warisan tabel-banyak (:ticket:`27407`)."

msgid ""
"Fixed a ``QuerySet.update()`` crash on SQLite when updating a "
"``DateTimeField`` with an ``F()`` expression and a ``timedelta`` (:ticket:"
"`27544`)."
msgstr ""
"Diperbaiki sebuah kegagalan ``QuerySet.update()`` padaSQLite ketika "
"memperbaharui sebuah ``DateTimeField`` dengan sebuah pernyataan  ``F()`` dan "
"``timedelta`` (:ticket:`27544`). "

msgid ""
"Prevented ``LocaleMiddleware`` from redirecting on URLs that should return "
"404 when using ``prefix_default_language=False`` (:ticket:`27402`)."
msgstr ""
"Dicegah ``LocaleMiddleware`` dari menjadi pengalihan pada URL yang harus "
"mengembalikan 404 ketika menggunakan ``prefix_default_language=False`` (:"
"ticket:`27402`)."

msgid ""
"Prevented an unnecessary index from being created on an InnoDB "
"``ForeignKey`` when the field was added after the model was created (:ticket:"
"`27558`)."
msgstr ""
"Dicegah indeks tidak perlu dari sedang dibuat pada sebuah ``ForeignKey`` "
"InnoDB ketika bidang telah ditambahkan setelah model dibuat (:ticket:"
"`27558`)."

msgid "Django 1.10.5 release notes"
msgstr "Catatan terbitan Django 1.10.5"

msgid "*January 4, 2017*"
msgstr "*4 Januari 2017*"

msgid "Django 1.10.5 fixes several bugs in 1.10.4."
msgstr "Django 1.10.5 memperbaiki beberapa kesalahan di 1.10.4."

msgid ""
"Fixed a crash in the debug view if ``request.user`` can't be retrieved, such "
"as if the database is unavailable (:ticket:`27567`)."
msgstr ""
"Diperbaiki sebuah kegagalan di tampilan mencari kesalahan jika ``request."
"user`` tidak dapat ditarik, seperti jika basisdata tidak tersedia (:ticket:"
"`27567`)."

msgid ""
"Fixed occasional missing plural forms in ``JavaScriptCatalog`` (:ticket:"
"`27418`)."
msgstr ""
"Diperbaiki terkadang kehilangan formulir jamak di ``JavaScriptCatalog`` (:"
"ticket:`27418`)."

msgid ""
"Fixed a regression in the ``timesince`` and ``timeuntil`` filters that "
"caused incorrect results for dates in a leap year (:ticket:`27637`)."
msgstr ""
"Diperbaiki sebuah pemulihan di penyaring ``timesince`` dan ``timeuntil`` "
"yang menyebabkan hasil untuk tanggal di tahun kabisat (:ticket:`27637`)."

msgid ""
"Fixed a regression where ``collectstatic`` overwrote newer files in remote "
"storages (:ticket:`27658`)."
msgstr ""
"Diperbaiki sebuah pemulihan dimana ``collectstatic`` menimpa berkas terbaru "
"di penyimpanan terpencil (:ticket:`27658`)."

msgid "Django 1.10.6 release notes"
msgstr "Catatan terbitan Django 1.10.6"

msgid "*March 1, 2017*"
msgstr "*1 Maret 2017*"

msgid "Django 1.10.6 fixes several bugs in 1.10.5."
msgstr "Django 1.10.6 memperbaiki beberapa kesalahan di 1.10.5."

msgid ""
"Fixed ``ClearableFileInput``’s \"Clear\" checkbox on model form fields where "
"the model field has a ``default`` (:ticket:`27805`)."
msgstr ""
"Diperbaiki kotak centang \"Clear\" ``ClearableFileInput`` pada bidang "
"formulir model dimana bidang model mempunyai sebuah ``default`` (:ticket:"
"`27805`)."

msgid ""
"Fixed ``RequestDataTooBig`` and ``TooManyFieldsSent`` exceptions crashing "
"rather than generating a bad request response (:ticket:`27820`)."
msgstr ""
"Diperbaiki pengecualian kegagalan ``RequestDataTooBig`` dan "
"``TooManyFieldsSent`` daripada membangkitan tanggapan permintaan buruk (:"
"ticket:`27820`)."

msgid ""
"Fixed a crash on Oracle and PostgreSQL when subtracting ``DurationField`` or "
"``IntegerField`` from ``DateField`` (:ticket:`27828`)."
msgstr ""
"Diperbaiki sebuah kegagalan pada Oracle dan PostgreSQL ketika mengurangkan  "
"``DurationField`` atau ``IntegerField`` dari ``DateField`` (:ticket:`27828`)."

msgid ""
"Fixed query expression date subtraction accuracy on PostgreSQL for "
"differences larger than a month (:ticket:`27856`)."
msgstr ""
"Diperbaiki keakuratan pengurangan tanggal pernyataan permintaan pada "
"PostgreSQL untuk  perbedaan besar dari sebuah bulan (:ticket:`27856`)."

msgid ""
"Fixed a ``GDALException`` raised by ``GDALClose`` on GDAL ≥ 2.0 (:ticket:"
"`27479`)."
msgstr ""
"Diperbaiki ``GDALException`` dimunculkan oleh ``GDALClose`` pada GDAL ≥ 2.0 "
"(:ticket:`27479`)."

msgid "Django 1.10.7 release notes"
msgstr "Catatan terbitan Django 1.10.7"

msgid "*April 4, 2017*"
msgstr "*4 April 2017*"

msgid "Django 1.10.7 fixes two security issues and a bug in 1.10.6."
msgstr ""
"Django 1.10.7 memperbaiki dua masalah keamanan dan beberapa kesalahan di "
"1.10.6."

msgid ""
"CVE-2017-7233: Open redirect and possible XSS attack via user-supplied "
"numeric redirect URLs"
msgstr ""
"CVE-2017-7233: Pengalihan terbuka dan kemungkinan serangan XSS melalui URL "
"pengalihan numerik diberikan-pengguna"

msgid ""
"Django relies on user input in some cases  (e.g. ``django.contrib.auth.views."
"login()`` and :doc:`i18n </topics/i18n/index>`) to redirect the user to an "
"\"on success\" URL. The security check for these redirects (namely ``django."
"utils.http.is_safe_url()``) considered some numeric URLs (e.g. "
"``http:999999999``) \"safe\" when they shouldn't be."
msgstr ""
"Django bergantung pada masukan pengguna dalam beberapa kasus (misalnya "
"``django.contrib.auth.views.login()`` dan :doc:`i18n </topics/i18n/index>`) "
"untuk mengalihkan pengguna ke sebuah URL \"sukses\". Pemeriksaan keamanan "
"untuk pengalihan ini (namanya ``django.utils.http.is_safe_url()``) dianggap "
"beberapa numerik URL (misalnya ``http:999999999``) \"aman\" padahal "
"seharusnya tidak."

msgid ""
"Also, if a developer relies on ``is_safe_url()`` to provide safe redirect "
"targets and puts such a URL into a link, they could suffer from an XSS "
"attack."
msgstr ""
"Juga, jika seorang pengembang bergantung pada ``is_safe_url()`` untuk "
"menyediakan sasaran pengalihan dan menaruh URL seperti itu kedalam sebuah "
"tautan, mereka dapat menderita dari serangan XSS."

msgid ""
"CVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``"
msgstr ""
"CVE-2017-7234: Kerentanan pengalihan terbuka dalam ``django.views.static."
"serve()``"

msgid ""
"A maliciously crafted URL to a Django site using the :func:`~django.views."
"static.serve` view could redirect to any other domain. The view no longer "
"does any redirects as they don't provide any known, useful functionality."
msgstr ""
"URL yang dibuat berbahaya pada situs Django menggunakan tampilan :func:"
"`~django.views.static.serve` dapat mengalihkan ke ranah lain. Tampilan tidak "
"lagi melakukan pengalihan apapun ketika mereka tidak memberikan apapun yang "
"diketahui, fungsionalitas berguna."

msgid ""
"Note, however, that this view has always carried a warning that it is not "
"hardened for production use and should be used only as a development aid."
msgstr ""
"Catat, bagaimanapun bahwa tampilan ini selalu membawa peringatan yang itu "
"tidak mengeras untuk penggunaan produksi dan harus digunakan hanya sebagai "
"bantuan pengembangan."

msgid ""
"Made admin's ``RelatedFieldWidgetWrapper`` use the wrapped widget's "
"``value_omitted_from_data()`` method (:ticket:`27905`)."
msgstr ""
"Dibuat ``RelatedFieldWidgetWrapper`` admin menggunakan dibungkus metode "
"``value_omitted_from_data()`` widget (:ticket:`27905`)."

msgid ""
"Fixed model form ``default`` fallback for ``SelectMultiple`` (:ticket:"
"`27993`)."
msgstr ""
"Diperbaiki fallback ``default`` formulir model untuk ``SelectMultiple`` (:"
"ticket:`27993`)."

msgid "Django 1.10.8 release notes"
msgstr "Catatan terbitan Django 1.10.8"

msgid "*September 5, 2017*"
msgstr "*5 September 2017*"

msgid "Django 1.10.8 fixes a security issue in 1.10.7."
msgstr "Django 1.10.8 memperbaiki masalah keamanan di 1..10.7."

msgid ""
"CVE-2017-12794: Possible XSS in traceback section of technical 500 debug page"
msgstr ""
"CVE-2017-12794: Kemungkinan XSS dalam melacak kembali bagian dari halaman "
"teknis mencari kesalahan 500"

msgid ""
"In older versions, HTML autoescaping was disabled in a portion of the "
"template for the technical 500 debug page. Given the right circumstances, "
"this allowed a cross-site scripting attack. This vulnerability shouldn't "
"affect most production sites since you shouldn't run with ``DEBUG = True`` "
"(which makes this page accessible) in your production settings."
msgstr ""
"Dalam versi terlama, pelolosan otomatis HTML ditiadakan dalam bagian dari "
"cetakan untuk halaman teknis mencari kesalahan 500. Memberikan keadaan "
"benar, ini mengizinkan serangan cross-site scripting. Kerentanan ini tidak "
"harus mempengaruhi kebanyakan situs-situs produksi sejak anda tidak harus "
"menjalankan dengan ``DEBUG = True`` (yang membuat halaman ini dapat diakses) "
"dalam pengaturan produksi anda."

msgid "Django 1.11 release notes"
msgstr "Catatan terbitan Django 1.11"

msgid "Welcome to Django 1.11!"
msgstr "Selamat datang di Django 1.11!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.11>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.11>` "
"you'll want to be aware of when upgrading from Django 1.10 or older "
"versions. We've :ref:`begun the deprecation process for some features "
"<deprecated-features-1.11>`."
msgstr ""
"Catatan terbitan ini mencangkup :ref:`new features <whats-new-1.11>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.11>` anda akan ingin waspadai ketika meningkatkan dari Django "
"1.10 atau versi terlama. Kami telah :ref:`begun the deprecation process for "
"some features <deprecated-features-1.11>`."

msgid ""
"Django 1.11 is designated as a :term:`long-term support release <Long-term "
"support release>`. It will receive security updates for at least three years "
"after its release. Support for the previous LTS, Django 1.8, will end in "
"April 2018."
msgstr ""

msgid ""
"Django 1.11 requires Python 2.7, 3.4, 3.5, 3.6, or 3.7 (as of 1.11.17). We "
"**highly recommend** and only officially support the latest release of each "
"series."
msgstr ""
"Django 1.11 mewajibkan Python 2.7, 3.4, 3.5, 3.6, atau 3.7 (pada 1.11.17). "
"Kami **sangat menganjurkan** dan hanya resmi mendukung terbitan terakhir "
"setiap rangkaian."

msgid ""
"The Django 1.11.x series is the last to support Python 2. The next major "
"release, Django 2.0, will only support Python 3.4+."
msgstr ""
"Rangkaian Django 1.11.x adalah terakhir untuk mendukung Python 2. Terbitan "
"utama selanjutnya, Django 2.0, hanya akan mendukung Python 3.4+."

msgid "Deprecating warnings are no longer loud by default"
msgstr "Peringatan pengusangan tidak lagi kencang secara awalan"

msgid ""
"Unlike older versions of Django, Django's own deprecation warnings are no "
"longer displayed by default. This is consistent with Python's default "
"behavior."
msgstr ""
"Tidak seperti versi terlama dari Django, peringatan-peringatan pengusangan "
"sendiri Django tidak lagi ditampilkan secara awalan. Ini tetap dengan "
"perilaku awalan Python."

msgid ""
"This change allows third-party apps to support both Django 1.11 LTS and "
"Django 1.8 LTS without having to add code to avoid deprecation warnings."
msgstr ""
"Perubahan ini mengizinkan aplikasi pihak-ketiga untuk mendukung kedua Django "
"1.11 LTS dan Django 1.8 LTS tanpa harus menghindari peringatan-peringatan "
"pengusangan."

msgid ""
"Following the release of Django 2.0, we suggest that third-party app authors "
"drop support for all versions of Django prior to 1.11. At that time, you "
"should be able run your package's tests using ``python -Wd`` so that "
"deprecation warnings do appear. After making the deprecation warning fixes, "
"your app should be compatible with Django 2.0."
msgstr ""
"Berikut terbitan dari Django 2.0, kami menyarankan bahwa penulis apikasi "
"pihak-ketiga menjatuhkan dukungan untuk semua versi Django sebelum 1.11. "
"Pada waktu itu, anda harus dapat menjalankan percobaan paket menggunakan "
"``python -Wd`` sehingga peringatan pengusangan muncul. Setelah membuat "
"perbaikan peringatan pengusangan, aplikasi anda harus cocok dengan Django "
"2.0."

msgid "What's new in Django 1.11"
msgstr "Apa yang baru di Django 1.11"

msgid "Class-based model indexes"
msgstr "Indeks model berdasarkan-kelas"

msgid ""
"The new :mod:`django.db.models.indexes` module contains classes which ease "
"creating database indexes. Indexes are added to models using the :attr:`Meta."
"indexes <django.db.models.Options.indexes>` option."
msgstr ""
"Modul :mod:`django.db.models.indexes` baru mengandung kelas-kelas yang "
"memudahkan membuat indeks basisdata. Indeks-indeks ditambahkan ke model-"
"model menggunakan pilihan :attr:`Meta.indexes <django.db.models.Options."
"indexes>`."

msgid ""
"The :class:`~django.db.models.Index` class creates a b-tree index, as if you "
"used :attr:`~django.db.models.Field.db_index` on the model field or :attr:"
"`~django.db.models.Options.index_together` on the model ``Meta`` class. It "
"can be subclassed to support different index types, such as :class:`~django."
"contrib.postgres.indexes.GinIndex`. It also allows defining the order (ASC/"
"DESC) for the columns of the index."
msgstr ""
"Kelas :class:`~django.db.models.Index` membuat sebuah indeks b-tree, seolah-"
"olah anda menggunakan :attr:`~django.db.models.Field.db_index` pada bidang "
"model atau :attr:`~django.db.models.Options.index_together` pada model kelas "
"``Meta``. Itu dapat disubkelaskan untuk mendukung jenis-jenis indeks "
"berbeda, seperti :class:`~django.contrib.postgres.indexes.GinIndex`. Itu "
"juga mengizinkan menentukan urutan (ASC/DEC) untuk kolom-kolom dari indeks."

msgid "Template-based widget rendering"
msgstr "Membangun widget berdasarkan-cetakan"

msgid ""
"To ease customizing widgets, form widget rendering is now done using the "
"template system rather than in Python. See :doc:`/ref/forms/renderers`."
msgstr ""
"Untuk memudahkan menyesuaian widget, membangun widget formulir sekarang "
"selesai menggunakan sistem cetakan daripada dalam Python. Lihat :doc:`/ref/"
"forms/renderers`."

msgid ""
"You may need to adjust any custom widgets that you've written for a few :ref:"
"`backwards incompatible changes <template-widget-incompatibilities-1-11>`."
msgstr ""
"Anda mungkin butuh menyesuaikan widget penyesuaian apapun yang anda telah "
"tulis untuk sedikit :ref:`backwards incompatible changes <template-widget-"
"incompatibilities-1-11>`."

msgid "``Subquery`` expressions"
msgstr "Ungkapan ``Subquery``"

msgid ""
"The new :class:`~django.db.models.Subquery` and :class:`~django.db.models."
"Exists` database expressions allow creating explicit subqueries. Subqueries "
"may refer to fields from the outer queryset using the :class:`~django.db."
"models.OuterRef` class."
msgstr ""
"Pernyataan basisdata :class:`~django.db.models.Subquery` and :class:`~django."
"db.models.Exists` baru mengizinkan membuat sub permintaan jelas. Sub "
"permintaan mungkin mengacu ke bidang-bidang dari queryset terluar "
"menggunakan kelas :class:`~django.db.models.OuterRef`. "

msgid ""
":attr:`.ModelAdmin.date_hierarchy` can now reference fields across relations."
msgstr ""
":attr:`.ModelAdmin.date_hierarchy` sekarang dapat mengacu bidang-bidang "
"terhadap hubungan."

msgid ""
"The new :meth:`ModelAdmin.get_exclude() <django.contrib.admin.ModelAdmin."
"get_exclude>` hook allows specifying the exclude fields based on the request "
"or model instance."
msgstr ""
"Kaitan :meth:`ModelAdmin.get_exclude() <django.contrib.admin.ModelAdmin."
"get_exclude>` baru mengizinkan menentukan bidang-bidang dikecualikan "
"berdasarkan pada permintaan atau instance model."

msgid ""
"The ``popup_response.html`` template can now be overridden per app, per "
"model, or by setting the :attr:`.ModelAdmin.popup_response_template` "
"attribute."
msgstr ""
"Cetakan ``popup_response.html`` sekarang dapat ditimpa per aplikasi, per "
"model, atau dengan mengatur atribut :attr:`.ModelAdmin."
"popup_response_template`."

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased by "
"20%."
msgstr ""
"Hitungan perulangan awalan untuk pencampur sandi PBKDF2 meningkat sebesar "
"20%."

msgid ""
"The :class:`~django.contrib.auth.views.LoginView` and :class:`~django."
"contrib.auth.views.LogoutView` class-based views supersede the deprecated "
"``login()`` and ``logout()`` function-based views."
msgstr ""
"Tampilan berdasarkan-kelas :class:`~django.contrib.auth.views.LoginView` "
"and :class:`~django.contrib.auth.views.LogoutView` menggantikan tampilan "
"berdasarkan-fungsi ``login()`` dan ``logout()`` yang diusangkan."

msgid ""
"The :class:`~django.contrib.auth.views.PasswordChangeView`, :class:`~django."
"contrib.auth.views.PasswordChangeDoneView`, :class:`~django.contrib.auth."
"views.PasswordResetView`, :class:`~django.contrib.auth.views."
"PasswordResetDoneView`, :class:`~django.contrib.auth.views."
"PasswordResetConfirmView`, and :class:`~django.contrib.auth.views."
"PasswordResetCompleteView` class-based views supersede the deprecated "
"``password_change()``, ``password_change_done()``, ``password_reset()``, "
"``password_reset_done()``, ``password_reset_confirm()``, and "
"``password_reset_complete()`` function-based views."
msgstr ""
"Tampilan berdasarkan-kelas The :class:`~django.contrib.auth.views."
"PasswordChangeView`, :class:`~django.contrib.auth.views."
"PasswordChangeDoneView`, :class:`~django.contrib.auth.views."
"PasswordResetView`, :class:`~django.contrib.auth.views."
"PasswordResetDoneView`, :class:`~django.contrib.auth.views."
"PasswordResetConfirmView`, dan :class:`~django.contrib.auth.views."
"PasswordResetCompleteView` menggantikan tampilan berdasarkan-fungsi "
"``password_change()``, ``password_change_done()``, ``password_reset()``, "
"``password_reset_done()``, ``password_reset_confirm()``, dan "
"``password_reset_complete()`` yang diusangkan."

msgid ""
"The new ``post_reset_login`` attribute for :class:`~django.contrib.auth."
"views.PasswordResetConfirmView` allows automatically logging in a user after "
"a successful password reset. If you have multiple "
"``AUTHENTICATION_BACKENDS`` configured, use the ``post_reset_login_backend`` "
"attribute to choose which one to use."
msgstr ""
"Atribut ``post_reset_login`` baru untuk :class:`~django.contrib.auth.views."
"PasswordResetConfirmView` mengizinkan secara otomatis masuk seorang pengguna "
"setelah berhasil menyetel kembali sandi. Jika anda mempunyai banyak "
"``AUTHENTICATION_BACKENDS`` dikonfigurasi, gunakan atribut "
"``post_reset_login_backend`` untuk memilih yang mana satu digunakan."

msgid ""
"To avoid the possibility of leaking a password reset token via the HTTP "
"Referer header (for example, if the reset page includes a reference to CSS "
"or JavaScript hosted on another domain), the :class:`~django.contrib.auth."
"views.PasswordResetConfirmView` (but not the deprecated "
"``password_reset_confirm()`` function-based view) stores the token in a "
"session and redirects to itself to present the password change form to the "
"user without the token in the URL."
msgstr ""
"Untuk menghindari kemungkinan kebocoran token menyetel kembali sandi melalui "
"kepala HTTP Referer (sebagai contoh, jika halaman menyetel kembali "
"menyertakan sebuah acuan pada CSS atau JavaScript disimpan pada ranah "
"lain), :class:`~django.contrib.auth.views.PasswordResetConfirmView` (tetapi "
"bukan tampilan berdasarkan-fungsi ``password_reset_confirm()`` yang "
"diusangkan) menyimpan token dalam sebuah sesi dan mengalihkan ke itu sendiri "
"untuk menghadirkan formulir rubah sandi ke pengguna tanpa token dalam URL."

msgid ""
":func:`~django.contrib.auth.update_session_auth_hash` now rotates the "
"session key to allow a password change to invalidate stolen session cookies."
msgstr ""
":func:`~django.contrib.auth.update_session_auth_hash` sekarang memutar kunci "
"sesi untuk mengizinkan perubahan sandi untuk kue sesi dicuri tidak sah."

msgid ""
"The new ``success_url_allowed_hosts`` attribute for :class:`~django.contrib."
"auth.views.LoginView` and :class:`~django.contrib.auth.views.LogoutView` "
"allows specifying a set of hosts that are safe for redirecting after login "
"and logout."
msgstr ""
"Atribut ``success_url_allowed_hosts`` baru untuk :class:`~django.contrib."
"auth.views.LoginView` dan :class:`~django.contrib.auth.views.LogoutView` "
"mengizinkan menentukan sekumpulan dari rumah yang aman untuk pengalihan "
"setelah masuk dan keluar."

msgid ""
"Added password validators ``help_text`` to :class:`~django.contrib.auth."
"forms.UserCreationForm`."
msgstr ""
"Ditambahkan pengesah sandi ``help_text`` pada :class:`~django.contrib.auth."
"forms.UserCreationForm`."

msgid ""
"The ``HttpRequest`` is now passed to :func:`~django.contrib.auth."
"authenticate` which in turn passes it to the authentication backend if it "
"accepts a ``request`` argument."
msgstr ""
"``HttpRequest`` sekarang dilewatkan ke :func:`~django.contrib.auth."
"authenticate` yang gilirannya melewatkan itu ke backend autentifikasi jika "
"itu menerima sebuah argumen ``request``."

msgid ""
"The :func:`~django.contrib.auth.signals.user_login_failed` signal now "
"receives a ``request`` argument."
msgstr ""
"Sinyal :func:`~django.contrib.auth.signals.user_login_failed` sekarang "
"menerima sebuah argumen ``request``."

msgid ""
":class:`~django.contrib.auth.forms.PasswordResetForm` supports custom user "
"models that use an email field named something other than ``'email'``. Set :"
"attr:`CustomUser.EMAIL_FIELD <django.contrib.auth.models.CustomUser."
"EMAIL_FIELD>` to the name of the field."
msgstr ""
":class:`~django.contrib.auth.forms.PasswordResetForm` mendukung penyesuaian "
"pengguna model-model yang menggunakan sebuah bidang surel bernama sesuatu "
"selain ``'email'``. Setel :attr:`CustomUser.EMAIL_FIELD <django.contrib.auth."
"models.CustomUser.EMAIL_FIELD>` ke nama dari bidang."

msgid ""
":func:`~django.contrib.auth.get_user_model` can now be called at import "
"time, even in modules that define models."
msgstr ""
":func:`~django.contrib.auth.get_user_model` sekarang dapat dipanggil pada "
"waktu impor, bahkan dalam modeul-modul yang menentukan model-model."

msgid ":mod:`django.contrib.contenttypes`"
msgstr ":mod:`django.contrib.contenttypes`"

msgid ""
"When stale content types are detected in the :djadmin:"
"`remove_stale_contenttypes` command, there's now a list of related objects "
"such as ``auth.Permission``\\s that will also be deleted. Previously, only "
"the content types were listed (and this prompt was after ``migrate`` rather "
"than in a separate command)."
msgstr ""
"Ketika jenis isi basi dikenali dalam perintah :djadmin:"
"`remove_stale_contenttypes`, ada sekarang daftar dari obyek terkait seperti "
"``auth.Permission`` yang akan juga dihapus. Sebelumnya, hanya jenis isi yang "
"ditampilkan (dan penunjukan ini setelah ``migrate`` daripada dalam perintah "
"terpisah). "

msgid ""
"The new :meth:`.GEOSGeometry.from_gml` and :meth:`.OGRGeometry.from_gml` "
"methods allow creating geometries from GML."
msgstr ""
"Metode :meth:`.GEOSGeometry.from_gml` dan :meth:`.OGRGeometry.from_gml` baru "
"mengizinkan membuat geometri dari GML."

msgid "Added support for the :lookup:`dwithin` lookup on SpatiaLite."
msgstr ""
"Ditambahkan dukungan untuk pencarian :lookup:`dwithin` pada SpatiaLite."

msgid ""
"The :class:`~django.contrib.gis.db.models.functions.Area` function, :class:"
"`~django.contrib.gis.db.models.functions.Distance` function, and distance "
"lookups now work with geodetic coordinates on SpatiaLite."
msgstr ""
"Fungsi :class:`~django.contrib.gis.db.models.functions.Area`, :class:"
"`~django.contrib.gis.db.models.functions.Distance` function, dan pencarian "
"tujuan sekarang bekerja dengan kordinat geodetik pada SpatiaLite."

msgid ""
"The OpenLayers-based form widgets now use ``OpenLayers.js`` from ``https://"
"cdnjs.cloudflare.com`` which is more suitable for production use than the "
"old ``https://openlayers.org/`` source. They are also updated to use "
"OpenLayers 3."
msgstr ""
"Widget formulir  OpenLayers-based sekarang menggunakan ``OpenLayers.js`` "
"dari ``https://cdnjs.cloudflare.com`` yaitu lebih cocok untuk penggunaan "
"produksi dari pada sumber lama ``https://openlayers.org/``. Mereka juga "
"memperbaharui untuk menggunakan 3."

msgid "PostGIS migrations can now change field dimensions."
msgstr "Perpindahan PostGIS sekarang dapat merubah bidang dimensi."

msgid ""
"Added the ability to pass the ``size``, ``shape``, and ``offset`` parameters "
"when creating :class:`~django.contrib.gis.gdal.GDALRaster` objects."
msgstr ""
"Menambahkan kemampuan untuk memberikan parameter ``size``, ``shape``, dan "
"``offset`` ketika membuat objek :class:`~django.contrib.gis.gdal.GDALRaster`."

msgid ""
"Added SpatiaLite support for the :class:`~django.contrib.gis.db.models."
"functions.IsValid` function, :class:`~django.contrib.gis.db.models.functions."
"MakeValid` function, and :lookup:`isvalid` lookup."
msgstr ""
"Ditambahkan dukungan SpatiaLite untuk fungsi :class:`~django.contrib.gis.db."
"models.functions.IsValid`, fungsi :class:`~django.contrib.gis.db.models."
"functions.MakeValid`, dan pencarian :lookup:`isvalid`."

msgid ""
"Added Oracle support for the :class:`~django.contrib.gis.db.models.functions."
"AsGML` function, :class:`~django.contrib.gis.db.models.functions."
"BoundingCircle` function, :class:`~django.contrib.gis.db.models.functions."
"IsValid` function, and :lookup:`isvalid` lookup."
msgstr ""
"Ditambahkan dukungan Oracle untuk fungsi :class:`~django.contrib.gis.db."
"models.functions.AsGML`, fungsi :class:`~django.contrib.gis.db.models."
"functions.BoundingCircle`, fungsi :class:`~django.contrib.gis.db.models."
"functions.IsValid` function, dan pencarian :lookup:`isvalid`."

msgid ""
"The new ``distinct`` argument for :class:`~django.contrib.postgres."
"aggregates.StringAgg` determines if concatenated values will be distinct."
msgstr ""
"Argumen ``distinct`` baru untuk :class:`~django.contrib.postgres.aggregates."
"StringAgg` ditentukan jika nilai-nilai gabungan akan dibedakan."

msgid ""
"The new :class:`~django.contrib.postgres.indexes.GinIndex` and :class:"
"`~django.contrib.postgres.indexes.BrinIndex` classes allow creating ``GIN`` "
"and ``BRIN`` indexes in the database."
msgstr ""
"Kelas-kelas :class:`~django.contrib.postgres.indexes.GinIndex` dan :class:"
"`~django.contrib.postgres.indexes.BrinIndex` baru mengizinkan membuat indeks-"
"indeks ``GIN`` dan ``BRIN`` dalam basisdata."

msgid ""
"``django.contrib.postgres.fields.JSONField`` accepts a new ``encoder`` "
"parameter to specify a custom class to encode data types not supported by "
"the standard encoder."
msgstr ""

msgid ""
"The new ``CIText`` mixin and :class:`~django.contrib.postgres.operations."
"CITextExtension` migration operation allow using PostgreSQL's ``citext`` "
"extension for case-insensitive lookups. Three fields are provided: "
"``CICharField``, ``CIEmailField``, and ``CITextField``."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.aggregates.JSONBAgg` allows "
"aggregating values as a JSON array."
msgstr ""
":class:`~django.contrib.postgres.aggregates.JSONBAgg` baru mengizinkan "
"menggabungkan nilai-nilai sebagai larik JSON."

msgid ""
"The :class:`~django.contrib.postgres.fields.HStoreField` (model field) and :"
"class:`~django.contrib.postgres.forms.HStoreField` (form field) allow "
"storing null values."
msgstr ""
":class:`~django.contrib.postgres.fields.HStoreField` (bidang model) dan :"
"class:`~django.contrib.postgres.forms.HStoreField` (bidang formulir) "
"mengizinkan menyimpan nilai null."

msgid ""
"Memcached backends now pass the contents of :setting:`OPTIONS <CACHES-"
"OPTIONS>` as keyword arguments to the client constructors, allowing for more "
"advanced control of client behavior. See the :ref:`cache arguments "
"<cache_arguments>` documentation for examples."
msgstr ""
"Backend memcached sekarang melewatkan isi dari :setting:`OPTIONS 1` sebagai "
"argumen katakunci ke pembangun klien, mengizinkan untuk pengendalian lebih "
"lanjut dari perulaku klien. Lihat dokumentasi :ref:`cache arguments 2` "
"sebagai contoh."

msgid ""
"Memcached backends now allow defining multiple servers as a comma-delimited "
"string in :setting:`LOCATION <CACHES-LOCATION>`, for convenience with third-"
"party services that use such strings in environment variables."
msgstr ""
"Backend memcached sekarang mengizinkan banyak peladen sebagai string comma-"
"delimited dalam :setting:`LOCATION 1`, untuk kenyamanan dengan layanan pihak-"
"ketiga yang menggunakan string tersebut dalam variabel lingkungan."

msgid ""
"Added the :setting:`CSRF_USE_SESSIONS` setting to allow storing the CSRF "
"token in the user's session rather than in a cookie."
msgstr ""
"Ditambahkan pengaturan :setting:`CSRF_USE_SESSIONS` untuk mengizinkan "
"menyimpan token CSRF dalam sesi pengguna daripada dalam sebuah kue."

msgid ""
"Added the ``skip_locked`` argument to :meth:`.QuerySet.select_for_update()` "
"on PostgreSQL 9.5+ and Oracle to execute queries with ``FOR UPDATE SKIP "
"LOCKED``."
msgstr ""
"Ditambahkan argumen ``skip_locked`` pada :meth:`.QuerySet."
"select_for_update()` pada  PostgreSQL 9.5+ dan Oracle untuk menjalankan "
"permintaan dengan ``FOR UPDATE SKIP LOCKED``."

msgid ""
"Added the :setting:`TEST['TEMPLATE'] <TEST_TEMPLATE>` setting to let "
"PostgreSQL users specify a template for creating the test database."
msgstr ""
"Ditambahkan pengaturan :setting:`TEST['TEMPLATE'] <TEST_TEMPLATE>` untuk "
"membuat pengguna PostgreSQL menentukan sebuah cetakan untuk membuat "
"basisdata percobaan."

msgid ""
":meth:`.QuerySet.iterator()` now uses `server-side cursors`_ on PostgreSQL. "
"This feature transfers some of the worker memory load (used to hold query "
"results) to the database and might increase database memory usage."
msgstr ""

msgid ""
"Added MySQL support for the ``'isolation_level'`` option in :setting:"
"`OPTIONS` to allow specifying the :ref:`transaction isolation level <mysql-"
"isolation-level>`. To avoid possible data loss, it's recommended to switch "
"from MySQL's default level, repeatable read, to read committed."
msgstr ""
"Ditambahkan dukungan MySQL untuk pilihan ``'isolation_level'`` dalam :"
"setting:`OPTIONS` untuk mengizinkan menentukan :ref:`transaction isolation "
"level <mysql-isolation-level>`. Untuk menghindari kemungkinan data hilang, "
"itu dianjurkan untuk mengganti dari tingkat awalan MySQL, pembacaan "
"berulang, untuk membaca diperbaiki."

msgid "Added support for ``cx_Oracle`` 5.3."
msgstr "Ditambahkan dukungan untuk ``cx_Oracle`` 5.3."

msgid "Email"
msgstr "Surel"

msgid ""
"Added the :setting:`EMAIL_USE_LOCALTIME` setting to allow sending SMTP date "
"headers in the local time zone rather than in UTC."
msgstr ""
"Ditambahkan pengaturan :setting:`EMAIL_USE_LOCALTIME` untuk mengizinkan "
"mengirimkan kepala tanggal SMTP dalam zona waktu lokal daripada dalam UTC."

msgid ""
"``EmailMessage.attach()`` and ``attach_file()`` now fall back to MIME type :"
"mimetype:`application/octet-stream` when binary content that can't be "
"decoded as UTF-8 is specified for a :mimetype:`text/*` attachment."
msgstr ""

msgid ""
"To make it wrappable by :class:`io.TextIOWrapper`, :class:`~django.core."
"files.File` now has the ``readable()``, ``writable()``, and ``seekable()`` "
"methods."
msgstr ""
"Untuk membuatnya dapat dibungkus oleh :class:`io.TextIOWrapper`, :class:"
"`~django.core.files.File` sekarang mempunyai metode ``readable()``, "
"``writable()``, dan ``seekable()``."

msgid ""
"The new ``empty_value`` attribute on :class:`~django.forms.CharField`, :"
"class:`~django.forms.EmailField`, :class:`~django.forms.RegexField`, :class:"
"`~django.forms.SlugField`, and :class:`~django.forms.URLField` allows "
"specifying the Python value to use to represent \"empty\"."
msgstr ""

msgid ""
"The new :meth:`Form.get_initial_for_field() <django.forms.Form."
"get_initial_for_field>` method returns initial data for a form field."
msgstr ""
"Metode :meth:`Form.get_initial_for_field() <django.forms.Form."
"get_initial_for_field>` baru mengembalikan data inisial untuk sebuah bidang "
"formulir."

msgid ""
"Number formatting and the :setting:`NUMBER_GROUPING` setting support non-"
"uniform digit grouping."
msgstr ""
"Pembentukan angka dan pengaturan :setting:`NUMBER_GROUPING` dukungan "
"pengelompokan angka bukan-seragam."

msgid ""
"The new :option:`loaddata --exclude` option allows excluding models and apps "
"while loading data from fixtures."
msgstr ""
"Pilihan :option:`loaddata --exclude` baru mengizinkan tidak menyertakan "
"model dan aplikasi selagi memuat data dari peralatan tetap."

msgid ""
"The new :option:`diffsettings --default` option allows specifying a settings "
"module other than Django's default settings to compare against."
msgstr ""
"Pilihan :option:`diffsettings --default` baru mengizinkan menentukan modul "
"pengaturan selain dari pengaturan awalan Django untuk dibandingkan."

msgid ""
"``app_label``\\s arguments now limit the :option:`showmigrations --plan` "
"output."
msgstr ""
"Argumen ``app_label`` sekarang membatasi keluaran :option:`showmigrations --"
"plan`."

msgid "Added support for serialization of ``uuid.UUID`` objects."
msgstr "Ditambahkan dukungan untuk serialisasi dari obyek ``uuid.UUID``."

msgid ""
"Added support for callable values in the ``defaults`` argument of :meth:"
"`QuerySet.update_or_create() <django.db.models.query.QuerySet."
"update_or_create>` and :meth:`~django.db.models.query.QuerySet."
"get_or_create`."
msgstr ""
"Ditambahkan dukungan untuk nilai dapat dipanggil dalam argumen ``defaults`` "
"dari :meth:`QuerySet.update_or_create() <django.db.models.query.QuerySet."
"update_or_create>` dan :meth:`~django.db.models.query.QuerySet."
"get_or_create`."

msgid ""
":class:`~django.db.models.ImageField` now has a default :data:`~django.core."
"validators.validate_image_file_extension` validator. (This validator moved "
"to the form field in :doc:`Django 1.11.2 <1.11.2>`.)"
msgstr ""
":class:`~django.db.models.ImageField` sekarang mempunyai pengesah awalan :"
"data:`~django.core.validators.validate_image_file_extension`. (Pengesah ini "
"pindah dari bidang formulir dalam :doc:`Django 1.11.2 <1.11.2>`.)"

msgid ""
"Added support for time truncation to :class:`~django.db.models.functions."
"Trunc` functions."
msgstr ""
"Ditambahkan dukungan untuk pemotongan waktu pada fungsi-fungsi :class:"
"`~django.db.models.functions.Trunc`."

msgid ""
"Added the :class:`~django.db.models.functions.ExtractWeek` function to "
"extract the week from :class:`~django.db.models.DateField` and :class:"
"`~django.db.models.DateTimeField` and exposed it through the :lookup:`week` "
"lookup."
msgstr ""
"Ditambahkan fungsi :class:`~django.db.models.functions.ExtractWeek` untuk "
"mengambil minggu dari :class:`~django.db.models.DateField` dan :class:"
"`~django.db.models.DateTimeField` dan dibuka melalui pencarian :lookup:"
"`week`."

msgid ""
"Added the :class:`~django.db.models.functions.TruncTime` function to "
"truncate :class:`~django.db.models.DateTimeField` to its time component and "
"exposed it through the :lookup:`time` lookup."
msgstr ""
"Ditambahkan fungsi :class:`~django.db.models.functions.TruncTime` untuk "
"memotong :class:`~django.db.models.DateTimeField` ke komponen waktunya dan "
"dibuka melalui pencarian :lookup:`time`."

msgid ""
"Added support for expressions in :meth:`.QuerySet.values` and :meth:`~."
"QuerySet.values_list`."
msgstr ""
"Ditambahkan dukungan untuk pernyataan dalam :meth:`.QuerySet.values` dan :"
"meth:`~.QuerySet.values_list`."

msgid ""
"Added support for query expressions on lookups that take multiple arguments, "
"such as ``range``."
msgstr ""
"Ditambahkan dukungan untuk pernyataan permintaan yang mengambil banyak "
"argumen, seperti ``range``."

msgid ""
"You can now use the ``unique=True`` option with :class:`~django.db.models."
"FileField`."
msgstr ""
"Anda dapat sekarang menggunakan pilihan ``unique=True`` dengan :class:"
"`~django.db.models.FileField`."

msgid ""
"Added the ``nulls_first`` and ``nulls_last`` parameters to :class:"
"`Expression.asc() <django.db.models.Expression.asc>` and :meth:`~django.db."
"models.Expression.desc` to control the ordering of null values."
msgstr ""
"Ditambahkan parameter ``nulls_first`` dan ``nulls_last`` ke :class:"
"`Expression.asc() <django.db.models.Expression.asc>` dan :meth:`~django.db."
"models.Expression.desc` untuk mengendalikan urutan dari nilai-nilai null."

msgid ""
"The new ``F`` expression ``bitleftshift()`` and ``bitrightshift()`` methods "
"allow :ref:`bitwise shift operations <using-f-expressions-in-filters>`."
msgstr ""
"Pernyataan ``F`` baru metode ``bitleftshift()`` dan ``bitrightshift()`` "
"mengizinkan :ref:`bitwise shift operations <using-f-expressions-in-"
"filters>`. "

msgid ""
"Added :meth:`.QuerySet.union`, :meth:`~.QuerySet.intersection`, and :meth:`~."
"QuerySet.difference`."
msgstr ""
"Ditambahkan :meth:`.QuerySet.union`, :meth:`~.QuerySet.intersection`, dan :"
"meth:`~.QuerySet.difference`."

msgid "Added :meth:`QueryDict.fromkeys() <django.http.QueryDict.fromkeys>`."
msgstr ""
"Ditambahkan :meth:`QueryDict.fromkeys() <django.http.QueryDict.fromkeys>`."

msgid ""
":class:`~django.middleware.common.CommonMiddleware` now sets the ``Content-"
"Length`` response header for non-streaming responses."
msgstr ""
":class:`~django.middleware.common.CommonMiddleware` sekarang menyetel kepala "
"tanggapan ``Content-Length`` untuk tanggapan bukan-aliran."

msgid ""
"Added the :setting:`SECURE_HSTS_PRELOAD` setting to allow appending the "
"``preload`` directive to the ``Strict-Transport-Security`` header."
msgstr ""
"Ditambahkan pengaturan :setting:`SECURE_HSTS_PRELOAD` untuk mengizinkan "
"menambahkan petunjuk ``preload`` ke kepala ``Strict-Transport-Security``."

msgid ""
":class:`~django.middleware.http.ConditionalGetMiddleware` now adds the "
"``ETag`` header to responses."
msgstr ""
":class:`~django.middleware.http.ConditionalGetMiddleware` sekarang "
"menambahkan kepala ``ETag`` pada tanggapan."

msgid ""
"The new ``django.core.serializers.base.Serializer.stream_class`` attribute "
"allows subclasses to customize the default stream."
msgstr ""
"Atribut ``django.core.serializers.base.Serializer.stream_class`` baru "
"mengizinkan subkelas untuk menyesuaiakan aliran awalan."

msgid ""
"The encoder used by the :ref:`JSON serializer <serialization-formats-json>` "
"can now be customized by passing a ``cls`` keyword argument to the "
"``serializers.serialize()`` function."
msgstr ""
"Penyandi digunakan oleh :ref:`JSON serializer 1` dapat disesuaikan dengan "
"melewatkan argumen katakunci ``cls`` pada fungsi ``serializers.serialize()``."

msgid ""
":class:`~django.core.serializers.json.DjangoJSONEncoder` now serializes :"
"class:`~datetime.timedelta` objects (used by :class:`~django.db.models."
"DurationField`)."
msgstr ""
":class:`~django.core.serializers.json.DjangoJSONEncoder` sekarang "
"menserialkan obyek :class:`~datetime.timedelta` (digunakan oleh :class:"
"`~django.db.models.DurationField`)."

msgid ""
":meth:`~django.utils.safestring.mark_safe` can now be used as a decorator."
msgstr ""
":meth:`~django.utils.safestring.mark_safe` sekarang dapat digunakan sebagai "
"penghias."

msgid ""
"The :class:`~django.template.backends.jinja2.Jinja2` template backend now "
"supports context processors by setting the ``'context_processors'`` option "
"in :setting:`OPTIONS <TEMPLATES-OPTIONS>`."
msgstr ""
"Backend cetakan :class:`~django.template.backends.jinja2.Jinja2` sekarang "
"mendukung pengolah konteks dengan mengatur pilihan ``'context_processors'`` "
"dalam :setting:`OPTIONS 1`."

msgid ""
"The :ttag:`regroup` tag now returns ``namedtuple``\\s instead of "
"dictionaries so you can unpack the group object directly in a loop, e.g. "
"``{% for grouper, list in regrouped %}``."
msgstr ""
"Etiket :ttag:`regroup` sekarang mengembalikan ``namedtuple`` daripada "
"dictionay sehingga anda dapat mengeluarkan kelompok obyek langsung dalam "
"putaran, sebagai contoh ``{% for grouper, list in regrouped %}``."

msgid ""
"Added a :ttag:`resetcycle` template tag to allow resetting the sequence of "
"the :ttag:`cycle` template tag."
msgstr ""
"Ditambahkan etiket cetakan :ttag:`resetcycle` untuk mengizinkan mengatur "
"kembali urutan dari etiket cetakan :ttag:`cycle`."

msgid ""
"You can now specify specific directories for a particular :class:`filesystem."
"Loader <django.template.loaders.filesystem.Loader>`."
msgstr ""
"Anda sekarang dapat menentukan direktori khusus untuk  :class:`filesystem."
"Loader <django.template.loaders.filesystem.Loader>` tertentu."

msgid ""
"Added :meth:`.DiscoverRunner.get_test_runner_kwargs` to allow customizing "
"the keyword arguments passed to the test runner."
msgstr ""
"Ditambahkan :meth:`.DiscoverRunner.get_test_runner_kwargs` untuk mengizinkan "
"penyesuaian argumen katakunci dilewatkan ke penjalan percobaan."

msgid ""
"Added the :option:`test --debug-mode` option to help troubleshoot test "
"failures by setting the :setting:`DEBUG` setting to ``True``."
msgstr ""
"Ditambahkan pilihan :option:`test --debug-mode` untuk membantu memecahkan "
"masalah kegagalan percobaan dengan mengatur pengaturan :setting:`DEBUG` "
"menjadi ``True``."

msgid ""
"The new :func:`django.test.utils.setup_databases` (moved from ``django.test."
"runner``) and :func:`~django.test.utils.teardown_databases` functions make "
"it easier to build custom test runners."
msgstr ""
":func:`django.test.utils.setup_databases` baru (dipindah dari ``django.test."
"runner``) dan fungsi :func:`~django.test.utils.teardown_databases` "
"membuatnya lebih mudah membangun pejalan percobaan penyesuaian."

msgid ""
"Added support for :meth:`python:unittest.TestCase.subTest`’s when using the :"
"option:`test --parallel` option."
msgstr ""
"Ditambahkan dukungan untuk :meth:`python:unittest.TestCase.subTest` ketika "
"menggunakan  pilihan :option:`test --parallel`."

msgid ""
"``DiscoverRunner`` now runs the system checks at the start of a test run. "
"Override the :meth:`.DiscoverRunner.run_checks` method if you want to "
"disable that."
msgstr ""
"``DiscoverRunner`` sekarang menjalankan pemeriksaan sistem pada awal dari "
"penjalanan percobaan. Timpa metode :meth:`.DiscoverRunner.run_checks` jika "
"anda ingin meniadakan itu."

msgid ""
"Added :class:`~django.core.validators.FileExtensionValidator` to validate "
"file extensions and :data:`~django.core.validators."
"validate_image_file_extension` to validate image files."
msgstr ""
"Ditambahkan :class:`~django.core.validators.FileExtensionValidator` untuk "
"mensahkan berkas tambahan dan :data:`~django.core.validators."
"validate_image_file_extension` untuk mensahkan berkas-berkas gambar."

msgid "Backwards incompatible changes in 1.11"
msgstr "Perubahan ketidaksesuaian kebelakang dalam 1.11"

msgid ""
"To simplify the codebase and because it's easier to install than when "
"``contrib.gis`` was first released, :ref:`gdalbuild` is now a required "
"dependency for GeoDjango. In older versions, it's only required for SQLite."
msgstr ""
"Untuk memudahkan basiskode dan karena itu lebih mudah memasang daripada "
"ketika ``contrib.gis`` terbitan pertama, :ref:`gdalbuild` sekarang "
"membutuhkan ketergantungan untuk GeoDjango. Dalam versi terlama, itu hanya "
"dibutuhkan untuk SQLite."

msgid ""
"``contrib.gis.maps`` is removed as it interfaces with a retired version of "
"the Google Maps API and seems to be unmaintained. If you're using it, :"
"ticket:`let us know <14284>`."
msgstr ""

msgid "The ``GEOSGeometry`` equality operator now also compares SRID."
msgstr ""
"Penghubung persamaan ``GEOSGeometry`` sekarang juga membandingkan SRID."

msgid ""
"The OpenLayers-based form widgets now use OpenLayers 3, and the ``gis/"
"openlayers.html`` and ``gis/openlayers-osm.html`` templates have been "
"updated. Check your project if you subclass these widgets or extend the "
"templates. Also, the new widgets work a bit differently than the old ones. "
"Instead of using a toolbar in the widget, you click to draw, click and drag "
"to move the map, and click and drag a point/vertex/corner to move it."
msgstr ""
"Widget formulir berdasarkan-OpenLayer sekarang menggunakan OpenLayer 3, dan "
"cetakan ``gis/openlayers.html`` dan ``gis/openlayers-osm.html`` telah "
"diperbaharui. Periksa proyek anda jika anda mensubkelaskan widget-widget ini "
"atau memperpanjang cetakan. Juga, widget baru bekerja sedikit berbeda "
"daripada satu yang lama. Daripada menggunakan sebuah alat batang dalam "
"widget, anda klik untuk menggambar, klik dan seret untuk memindahkan peta, "
"dan klik dan seret titik, vertex/sudut untuk memindahkan itu."

msgid "Support for SpatiaLite < 4.0 is dropped."
msgstr "Dukungan untuk SpatiaLite < 4.0 telah dibuang."

msgid "Support for GDAL 1.7 and 1.8 is dropped."
msgstr "Dukungan untuk GDAL 1.7 dan 1.8 telah dibuang."

msgid ""
"The widgets in ``contrib.gis.forms.widgets`` and the admin's "
"``OpenLayersWidget`` use the :doc:`form rendering API </ref/forms/"
"renderers>` rather than ``loader.render_to_string()``. If you're using a "
"custom widget template, you'll need to be sure your form renderer can locate "
"it. For example, you could use the :class:`~django.forms.renderers."
"TemplatesSetting` renderer."
msgstr ""
"Widget dalam ``contrib.gis.forms.widgets`` dan ``OpenLayersWidget`` admin "
"menggunakan :doc:`form rendering API 1` daripada daripada ``loader."
"render_to_string()``. Jika anda sedang menggunakan cetakan widget "
"penyesuaian, anda akan butuh memastikan formulir anda dibangun dapat "
"menempatkan itu. Sebagai contoh, anda dapat juga menggunakan pembangun :"
"class:`~django.forms.renderers.TemplatesSetting`."

msgid ""
"``collectstatic`` may now fail during post-processing when using a hashed "
"static files storage if a reference loop exists (e.g. ``'foo.css'`` "
"references ``'bar.css'`` which itself references ``'foo.css'``) or if the "
"chain of files referencing other files is too deep to resolve in several "
"passes. In the latter case, increase the number of passes using :attr:`."
"ManifestStaticFilesStorage.max_post_process_passes`."
msgstr ""
"``collectstatic`` mungkin sekarang gagal selama penempatan-pengolahan ketika "
"menggunakan sebuah penyimpanan berkas statis dicampur jika perulangan "
"terkait ada (sebagai contoh ``'foo.css'`` mengacu ``'bar.css'`` yang itu "
"sendiri mengacu ``'foo.css'``) atau jika rantai dari berkas-berkas mengacu "
"berkas-berkas lain terlalu dalam untuk dipecahkan dalam beberapa perlewatan. "
"Dalam kasus terakhir, meningkatkan sejumlah perlewatan menggunakan :attr:`."
"ManifestStaticFilesStorage.max_post_process_passes`."

msgid ""
"When using ``ManifestStaticFilesStorage``, static files not found in the "
"manifest at runtime now raise a ``ValueError`` instead of returning an "
"unchanged path. You can revert to the old behavior by setting :attr:`."
"ManifestStaticFilesStorage.manifest_strict` to ``False``."
msgstr ""
"Ketika menggunakan ``ManifestStaticFilesStorage``, berkas-berkas statis "
"tidak ditemukan dalam manifest pada waktu berjalan sekarang memunculkan "
"``ValueError`` daripada mengembalikan jalur tidak berubah. Anda dapat "
"merubah ke perilaku lama dengan mengatur :attr:`.ManifestStaticFilesStorage."
"manifest_strict` menjadi ``False``."

msgid ""
"This section describes changes that may be needed in third-party database "
"backends."
msgstr ""
"Bagian ini menjelaskan perubahan yang mungkin diperlukan oleh backend basis "
"data pihak ketiga."

msgid ""
"The ``DatabaseOperations.time_trunc_sql()`` method is added to support "
"``TimeField`` truncation. It accepts a ``lookup_type`` and ``field_name`` "
"arguments and returns the appropriate SQL to truncate the given time field "
"``field_name`` to a time object with only the given specificity. The "
"``lookup_type`` argument can be either ``'hour'``, ``'minute'``, or "
"``'second'``."
msgstr ""
"Metode ``DatabaseOperations.time_trunc_sql()`` ditambahkan untuk mendukung "
"pemotongan ``TimeField``. Itu menerima argumen ``lookup_type`` dan "
"``field_name`` dan mengembalikan SQL sesuai untuk memotong bidang waktu yang "
"diberikan pada sebuah obyek waktu dengan hanya diberikan kekhususan. Argumen "
"``lookup_type`` dapat salsah satu ``'hour'``, ``'minute'``, atau "
"``'second'``. "

msgid ""
"The ``DatabaseOperations.datetime_cast_time_sql()`` method is added to "
"support the :lookup:`time` lookup. It accepts a ``field_name`` and "
"``tzname`` arguments and returns the SQL necessary to cast a datetime value "
"to time value."
msgstr ""
"Metode ``DatabaseOperations.datetime_cast_time_sql()`` ditambahkan untuk "
"mendukung pencarian :lookup:`time`. Itu menerima argumen ``field_name`` dan "
"``tzname`` dan mengembalikan SQL yang dibutuhkan untuk membuang nilai "
"datetime menjadi nilai waktu."

msgid ""
"To enable ``FOR UPDATE SKIP LOCKED`` support, set ``DatabaseFeatures."
"has_select_for_update_skip_locked = True``."
msgstr ""
"Untuk mengadakan dukungan ``FOR UPDATE SKIP LOCKED``, setel "
"``DatabaseFeatures.has_select_for_update_skip_locked = True``."

msgid ""
"The new ``DatabaseFeatures.supports_index_column_ordering`` attribute "
"specifies if a database allows defining ordering for columns in indexes. The "
"default value is ``True`` and the ``DatabaseIntrospection."
"get_constraints()`` method should include an ``'orders'`` key in each of the "
"returned dictionaries with a list of ``'ASC'`` and/or ``'DESC'`` values "
"corresponding to the ordering of each column in the index."
msgstr ""

msgid ""
":djadmin:`inspectdb` no longer calls ``DatabaseIntrospection.get_indexes()`` "
"which is deprecated. Custom database backends should ensure all types of "
"indexes are returned by ``DatabaseIntrospection.get_constraints()``."
msgstr ""
":djadmin:`inspectdb` tidak lagi memanggil ``DatabaseIntrospection."
"get_indexes()`` yang diusangkan. Backend basisdata penyesuaian harus "
"memastikan semua jenis dari indeks dikembalikan oleh ``DatabaseIntrospection."
"get_constraints()``."

msgid ""
"Renamed the ``ignores_quoted_identifier_case`` feature to "
"``ignores_table_name_case`` to more accurately reflect how it is used."
msgstr ""
"Namai kembali fitur ``ignores_quoted_identifier_case`` untuk "
"``ignores_table_name_case`` untuk lebih akurat mencerminkan bagaimana itu "
"digunakan."

msgid ""
"The ``name`` keyword argument is added to the ``DatabaseWrapper."
"create_cursor(self, name=None)`` method to allow usage of server-side "
"cursors on backends that support it."
msgstr ""
"Argumen kata kunci ``name`` ditambahkan ke metode ``DatabaseWrapper."
"create_cursor(self, name=None)`` untuk mengizinkan penggunaan dari kursor "
"sisi-peladen pada backend yang mendukung itu."

msgid "Dropped support for PostgreSQL 9.2 and PostGIS 2.0"
msgstr "Dibuang dukungan untuk PostgreSQL 9.2 dan PostGIS 2.0"

msgid ""
"Upstream support for PostgreSQL 9.2 ends in September 2017. As a "
"consequence, Django 1.11 sets PostgreSQL 9.3 as the minimum version it "
"officially supports."
msgstr ""
"Dukungan hulu untuk PostgreSQL 9.2 berakhir dalam September 2017. Sebagai "
"konsekuensinya, Django 1.11 menyetel  PostgreSQL 9.3 sebagai versi minimal "
"itu secara resmi dukung. "

msgid ""
"Support for PostGIS 2.0 is also removed as PostgreSQL 9.2 is the last "
"version to support it."
msgstr ""
"Dukungan untuk PostGIS 2.0 juga dipindahkan sebagai PostgreSQL 9.2 adalah "
"versi terakhir untuk mendukung itu. "

msgid ""
"Also, the minimum supported version of psycopg2 is increased from 2.4.5 to "
"2.5.4."
msgstr ""
"Juga, versi didukung minimal dari psycopg2 ditingkatkan dari 2.4.5 menjadi "
"2.5.4."

msgid "``LiveServerTestCase`` binds to port zero"
msgstr "``LiveServerTestCase`` mengikat ke port nol"

msgid ""
"Rather than taking a port range and iterating to find a free port, "
"``LiveServerTestCase`` binds to port zero and relies on the operating system "
"to assign a free port. The ``DJANGO_LIVE_TEST_SERVER_ADDRESS`` environment "
"variable is no longer used, and as it's also no longer used, the ``manage.py "
"test --liveserver`` option is removed."
msgstr ""
"Daripada mengambil jangkauan port dan mengulang menemukan port bebas, "
"``LiveServerTestCase`` mengikat port ke nol dan bergantung pada sistem "
"operasi untuk memberikan port bebas. Variabel lingkungan "
"``DJANGO_LIVE_TEST_SERVER_ADDRESS`` tidak lagi digunakan, dan ketika itu "
"tidak lagi digunakan, pilihan ``manage.py test --liveserver`` dipindahkan."

msgid ""
"If you need to bind ``LiveServerTestCase`` to a specific port, use the "
"``port`` attribute added in Django 1.11.2."
msgstr ""
"Jika anda butuh mengikat ``LiveServerTestCase`` pada port khusus, gunakan "
"atribut ``port`` ditambahkan dalam Django 1.11.2."

msgid ""
"Protection against insecure redirects in :mod:`django.contrib.auth` and "
"``i18n`` views"
msgstr ""
"Perlindungan terhadap pengalihan tidak aman dalam tampilan :mod:`django."
"contrib.auth` dan ``i18n``"

msgid ""
"``LoginView``, ``LogoutView`` (and the deprecated function-based "
"equivalents), and :func:`~django.views.i18n.set_language` protect users from "
"being redirected to non-HTTPS ``next`` URLs when the app is running over "
"HTTPS."
msgstr ""
"``LoginView``, ``LogoutView`` (dan setara berdasarkan-fungsi diusangkan), "
"dan :func:`~django.views.i18n.set_language` melindungi pengguna dari sedang "
"dialigkan ke bukan-HTTPS url ``next`` ketika aplikasi sedang berjalan "
"terhadap HTTPS."

msgid ""
"``QuerySet.get_or_create()`` and ``update_or_create()`` validate arguments"
msgstr ""
"Argumen pengecekan ``QuerySet.get_or_create()`` dan ``update_or_create()``"

msgid ""
"To prevent typos from passing silently, :meth:`~django.db.models.query."
"QuerySet.get_or_create` and :meth:`~django.db.models.query.QuerySet."
"update_or_create` check that their arguments are model fields. This should "
"be backwards-incompatible only in the fact that it might expose a bug in "
"your project."
msgstr ""
"Untuk mencegah salah ketik dari melewatkan secara diam, :meth:`~django.db."
"models.query.QuerySet.get_or_create` dan :meth:`~django.db.models.query."
"QuerySet.update_or_create` memeriksa bahwa argumen mereka adalah bidang "
"model. Ini harus berupa ketidaksesuaian-kebelakang hanya dalam fakta bahwa "
"itu mungkin mengungkapkan kesalahan dalam proyek anda."

msgid ""
"``pytz`` is a required dependency and support for ``settings.TIME_ZONE = "
"None`` is removed"
msgstr ""
"``pytz`` adalah ketergantungan diwajibkan dan mendukung untuk ``settings."
"TIME_ZONE = None`` dipindahkan "

msgid ""
"To simplify Django's timezone handling, ``pytz`` is now a required "
"dependency. It's automatically installed along with Django."
msgstr ""
"Untuk menyerdahanakan penanganan zona waktu Django, ``pytz`` sekarang "
"membutuhkan ketergantungan. Itu otomatis memasang bersama dengan Django."

msgid ""
"Support for ``settings.TIME_ZONE = None`` is removed as the behavior isn't "
"commonly used and is questionably useful. If you want to automatically "
"detect the timezone based on the system timezone, you can use :pypi:"
"`tzlocal`::"
msgstr ""

msgid ""
"This works similar to ``settings.TIME_ZONE = None`` except that it also sets "
"``os.environ['TZ']``. `Let us know <https://groups.google.com/g/django-"
"developers/c/OAV3FChfuPM/discussion>`__ if there's a use case where you find "
"you can't adapt your code to set a ``TIME_ZONE``."
msgstr ""

msgid "HTML changes in admin templates"
msgstr "Perubahan HTML dalam cetakan admin"

msgid ""
"``<p class=\"help\">`` is replaced with a ``<div>`` tag to allow including "
"lists inside help text."
msgstr ""
"``<p class=\"help\">`` diganti dengan etiket ``<div>`` untuk mengizinkan "
"daftar di dalam teks bantuan. "

msgid ""
"Read-only fields are wrapped in ``<div class=\"readonly\">...</div>`` "
"instead of ``<p>...</p>`` to allow any kind of HTML as the field's content."
msgstr ""
"Bidang-bidang hanya-baca dibungkus dalam ``1...1`` daripada ``2...2`` untuk "
"mengizinkan apapun dari HTML sebagai isi bidang."

msgid "Changes due to the introduction of template-based widget rendering"
msgstr "Perubahan karena perkenalan dari membangun widget berdasarkan-cetakan"

msgid "Some undocumented classes in ``django.forms.widgets`` are removed:"
msgstr ""
"Beberapa kelas-kelas tidak terdokumentasi dalam ``django.forms.widgets`` "
"dipindahkan: "

msgid "``SubWidget``"
msgstr "``SubWidget``"

msgid ""
"``RendererMixin``, ``ChoiceFieldRenderer``, ``RadioFieldRenderer``, "
"``CheckboxFieldRenderer``"
msgstr ""
"``RendererMixin``, ``ChoiceFieldRenderer``, ``RadioFieldRenderer``, "
"``CheckboxFieldRenderer``"

msgid "``ChoiceInput``, ``RadioChoiceInput``, ``CheckboxChoiceInput``"
msgstr "``ChoiceInput``, ``RadioChoiceInput``, ``CheckboxChoiceInput``"

msgid "The undocumented ``Select.render_option()`` method is removed."
msgstr "Metode ``Select.render_option()`` tidak didokumentasikan dipindahkan."

msgid ""
"The ``Widget.format_output()`` method is removed. Use a custom widget "
"template instead."
msgstr ""
"Metode  ``Widget.format_output()`` dipindahkan. Gunakan cetakan widget "
"penyesuaian sebagai gantinya."

msgid ""
"Some widget values, such as ``<select>`` options, are now localized if "
"``settings.USE_L10N=True``. You could revert to the old behavior with custom "
"widget templates that uses the :ttag:`localize` template tag to turn off "
"localization."
msgstr ""
"Beberapa nilai widget, seperti pilihan ``1``, sekarang dipelokalan jika "
"``settings.USE_L10N=True``. Anda dapat merubah ke perilaku lama dengan "
"cetakan widget penyesuaian yang menggunakan etiket cetakan :ttag:`localize` "
"untuk mematikan pelokalan."

msgid ""
"``django.template.backends.django.Template.render()`` prohibits non-dict "
"context"
msgstr ""
"``django.template.backends.django.Template.render()`` melarang konteks bukan-"
"dict"

msgid ""
"For compatibility with multiple template engines, ``django.template.backends."
"django.Template.render()`` (returned from high-level template loader APIs "
"such as ``loader.get_template()``) must receive a dictionary of context "
"rather than ``Context`` or ``RequestContext``. If you were passing either of "
"the two classes, pass a dictionary instead -- doing so is backwards-"
"compatible with older versions of Django."
msgstr ""
"Untuk kesesuaian dengan banyak cetakan mesin, ``django.template.backends."
"django.Template.render()`` (dikembalikan dari API pemuat cetakan tingkat-"
"tinggi seperti ``loader.get_template()``) harus menerima sebuah dictionary "
"dari konteks daripada ``Context`` atau ``RequestContext``. Jika anda sedang "
"melewatkan antara dua kelas, lewatkan dictionary sebagai gantinya -- "
"melakukan itu kesesuaian-kebelakang dengan versi terlama dari Django."

msgid "Model state changes in migration operations"
msgstr "Perubahan keadaan model dalam tindakan perpindahan"

msgid ""
"To improve the speed of applying migrations, rendering of related models is "
"delayed until an operation that needs them (e.g. ``RunPython``). If you have "
"a custom operation that works with model classes or model instances from the "
"``from_state`` argument in ``database_forwards()`` or "
"``database_backwards()``, you must render model states using the "
"``clear_delayed_apps_cache()`` method as described in :ref:`writing your own "
"migration operation <writing-your-own-migration-operation>`."
msgstr ""
"Untuk meningkatkan kecepatan dari memberlakukan perpindahan, membangun dari "
"model terkait ditunda sampai sebuah tindakan yang butuh mereka (sebagai "
"contoh ``RunPython``). Jika anda mempunyai tindakan penyesuaian yang bekerja "
"dengan kelas-kelas model atau instance mode dari argumen ``from_state`` "
"dalam ``database_forwards()`` atau ``database_backwards()``, anda harus "
"membangun keadaan model menggunakan metode ``clear_delayed_apps_cache()`` "
"seperti digambarkan dalam :ref:`writing your own migration operation 1`."

msgid "Server-side cursors on PostgreSQL"
msgstr "Kursor sisi-peladen pada PostgreSQL"

msgid ""
"The change to make :meth:`.QuerySet.iterator()` use server-side cursors on "
"PostgreSQL prevents running Django with PgBouncer in transaction pooling "
"mode. To reallow that, use the :setting:`DISABLE_SERVER_SIDE_CURSORS "
"<DATABASE-DISABLE_SERVER_SIDE_CURSORS>` setting (added in Django 1.11.1) in :"
"setting:`DATABASES`."
msgstr ""

msgid "See :ref:`transaction-pooling-server-side-cursors` for more discussion."
msgstr ""
"Lihat :ref:`transaction-pooling-server-side-cursors` untuk obrolan lebih."

msgid ""
"If no items in the feed have a ``pubdate`` or ``updateddate`` attribute, :"
"meth:`SyndicationFeed.latest_post_date() <django.utils.feedgenerator."
"SyndicationFeed.latest_post_date>` now returns the current UTC date/time, "
"instead of a datetime without any timezone information."
msgstr ""
"Jika tidak ada barang dalam umpan mempunyai atribut ``pubdate`` atau "
"``updateddate``, :meth:`SyndicationFeed.latest_post_date() <django.utils."
"feedgenerator.SyndicationFeed.latest_post_date>` sekarang mengembalikan date/"
"time UTC saat ini, daripada datetime tanpa informasi zona waktu apapun."

msgid ""
"CSRF failures are logged to the ``django.security.csrf`` logger instead of "
"``django.request``."
msgstr ""
"Kegagalan CSRF dicatat ke pencatat ``django.security.csrf`` daripada "
"``django.request``."

msgid ""
":setting:`ALLOWED_HOSTS` validation is no longer disabled when running "
"tests. If your application includes tests with custom host names, you must "
"include those host names in :setting:`ALLOWED_HOSTS`. See :ref:`topics-"
"testing-advanced-multiple-hosts`."
msgstr ""
"Pengesahan :setting:`ALLOWED_HOSTS`  tidak lagi ditiadakan ketika "
"menjalankan percobaan. Jika aplikasi anda termasuk percobaan dengan nama "
"rumah penyesuaian, anda harus menyertakan nama rumah tersebut dalam :setting:"
"`ALLOWED_HOSTS`. Lihat :ref:`topics-testing-advanced-multiple-hosts`."

msgid ""
"Using a foreign key's id (e.g. ``'field_id'``) in ``ModelAdmin."
"list_display`` displays the related object's ID. Remove the ``_id`` suffix "
"if you want the old behavior of the string representation of the object."
msgstr ""
"Menggunakan id foreign key (sebagai contoh ``'field_id'``) dalam "
"``ModelAdmin.list_display`` menampilan ID obyek terkait. Pindahkan akhiran "
"``_id`` jika anda ingin perilaku lama dari string mewakili dari obyek."

msgid ""
"In model forms, :class:`~django.db.models.CharField` with ``null=True`` now "
"saves ``NULL`` for blank values instead of empty strings."
msgstr ""
"Dalam formulir model, :class:`~django.db.models.CharField` dengan "
"``null=True`` sekarang menyimpan nilai ``NULL`` daripada string kosong."

msgid ""
"On Oracle, :meth:`Model.validate_unique() <django.db.models.Model."
"validate_unique>` no longer checks empty strings for uniqueness as the "
"database interprets the value as ``NULL``."
msgstr ""
"Pada Oracle, :meth:`Model.validate_unique() <django.db.models.Model."
"validate_unique>` tidak lagi memeriksa string kosong untuk keunikan sebagai "
"penafsir basisdata nilai sebagai ``NULL``."

msgid ""
"If you subclass :class:`.AbstractUser` and override ``clean()``, be sure it "
"calls ``super()``. :meth:`.BaseUserManager.normalize_email` is called in a "
"new :meth:`.AbstractUser.clean` method so that normalization is applied in "
"cases like model form validation."
msgstr ""
"Jika anda mensubkelaskan :class:`.AbstractUser` dan menimpa ``clean()``, "
"pastikan itu memanggil ``super()``. :meth:`.BaseUserManager.normalize_email` "
"dipanggil dalam sebuah metode :meth:`.AbstractUser.clean` baru sehingga "
"nomarlisasi diberlakukan dalam kasus-kasus seperti pengesahan formulir model."

msgid ""
"``EmailField`` and ``URLField`` no longer accept the ``strip`` keyword "
"argument. Remove it because it doesn't have an effect in older versions of "
"Django as these fields always strip whitespace."
msgstr ""
"``EmailField`` dan ``URLField`` tidak lagi menerima argumen katakunci "
"``strip``. Pindahkan itu karena itu tidak mempunyai pengaruh dalam versi "
"terlama dari Django ketika bidang ini selalu menghilangkan ruang putih."

msgid ""
"The ``checked`` and ``selected`` attribute rendered by form widgets now uses "
"HTML5 boolean syntax rather than XHTML's ``checked='checked'`` and "
"``selected='selected'``."
msgstr ""
"Atribut ``checked`` and ``selected`` dibangun dengan widget formulir "
"sekarang menggunakan sintaksis boolean HTML5 daripada ``checked='checked'`` "
"and ``selected='selected'`` XHTML."

msgid ""
":meth:`RelatedManager.add() <django.db.models.fields.related.RelatedManager."
"add>`, :meth:`~django.db.models.fields.related.RelatedManager.remove`, :meth:"
"`~django.db.models.fields.related.RelatedManager.clear`, and :meth:`~django."
"db.models.fields.related.RelatedManager.set` now clear the "
"``prefetch_related()`` cache."
msgstr ""
":meth:`RelatedManager.add() <django.db.models.fields.related.RelatedManager."
"add>`, :meth:`~django.db.models.fields.related.RelatedManager.remove`, :meth:"
"`~django.db.models.fields.related.RelatedManager.clear`, dan :meth:`~django."
"db.models.fields.related.RelatedManager.set` sekarang membersihkan cache "
"``prefetch_related()``. "

msgid ""
"To prevent possible loss of saved settings, :func:`~django.test.utils."
"setup_test_environment` now raises an exception if called a second time "
"before calling :func:`~django.test.utils.teardown_test_environment`."
msgstr ""
"Untuk mencegah kemungkinan kehilangan dari pengaturan disimpan, :func:"
"`~django.test.utils.setup_test_environment` sekarang memunculkan sebuah "
"pengecualian jika dipanggil satu detik sebelum memanggil :func:`~django.test."
"utils.teardown_test_environment`."

msgid ""
"The undocumented ``DateTimeAwareJSONEncoder`` alias for :class:`~django.core."
"serializers.json.DjangoJSONEncoder` (renamed in Django 1.0) is removed."
msgstr ""
"Nama lain ``DateTimeAwareJSONEncoder`` tidak terdokumentasi untuk :class:"
"`~django.core.serializers.json.DjangoJSONEncoder` (dinamai kembali dalam "
"Django 1.0) dipindahkan."

msgid ""
"The :class:`cached template loader <django.template.loaders.cached.Loader>` "
"is now enabled if :setting:`OPTIONS['loaders'] <TEMPLATES-OPTIONS>` isn't "
"specified and :setting:`OPTIONS['debug'] <TEMPLATES-OPTIONS>` is ``False`` "
"(the latter option defaults to the value of :setting:`DEBUG`). This could be "
"backwards-incompatible if you have some :ref:`template tags that aren't "
"thread safe <template_tag_thread_safety>`."
msgstr ""

msgid ""
"The prompt for stale content type deletion no longer occurs after running "
"the ``migrate`` command. Use the new :djadmin:`remove_stale_contenttypes` "
"command instead."
msgstr ""
"Penunjukan untuk penghapusan jenis isi basi tidak lagi muncul setelah "
"menjalankan perintah ``migrate``. Gunakan perintah :djadmin:"
"`remove_stale_contenttypes` baru sebagai gantinya."

msgid ""
"The admin's widget for ``IntegerField`` uses ``type=\"number\"`` rather than "
"``type=\"text\"``."
msgstr ""
"Widget admin untuk ``IntegerField`` menggunakan ``type=\"number\"`` daripada "
"``type=\"text\"``.  "

msgid ""
"Conditional HTTP headers are now parsed and compared according to the :rfc:"
"`7232` Conditional Requests specification rather than the older :rfc:`2616`."
msgstr ""
"Kepala HTTP bersyarat sekarang diuraikan dan dibandingkan menurut rfc:"
"`7232` spesifikasi Permintaan Bersyarat daripada yang lama :rfc:`2616`."

msgid ""
":func:`~django.utils.cache.patch_response_headers` no longer adds a ``Last-"
"Modified`` header. According to the :rfc:`7234#section-4.2.2`, this header "
"is useless alongside other caching headers that provide an explicit "
"expiration time, e.g. ``Expires`` or ``Cache-Control``. :class:`~django."
"middleware.cache.UpdateCacheMiddleware` and :func:`~django.utils.cache."
"add_never_cache_headers` call ``patch_response_headers()`` and therefore are "
"also affected by this change."
msgstr ""
":func:`~django.utils.cache.patch_response_headers` tidak lagi menambah "
"kepala ``Last-Modified``. Menurut :rfc:`7234#section-4.2.2`, kepala ini "
"tidak berguna bersama kepala cache lain yang menyediakan sebuah waktu "
"kadaluarsa yang jelas, sebagai contoh  ``Expires`` atau ``Cache-Control``. :"
"class:`~django.middleware.cache.UpdateCacheMiddleware` dan :func:`~django."
"utils.cache.add_never_cache_headers` call ``patch_response_headers()`` dan "
"maka dari itu juga dipengaruhi oleh perubahan ini."

msgid ""
"In the admin templates, ``<p class=\"help\">`` is replaced with a ``<div>`` "
"tag to allow including lists inside help text."
msgstr ""
"Dalam cetakan admin, ``1`` diganti dengan etiket ``2`` untuk mengizinkan "
"menyertakan daftar didalam teks bantuan."

msgid ""
":class:`~django.middleware.http.ConditionalGetMiddleware` no longer sets the "
"``Date`` header as web servers set that header. It also no longer sets the "
"``Content-Length`` header as this is now done by :class:`~django.middleware."
"common.CommonMiddleware`."
msgstr ""

msgid ""
"If you have a middleware that modifies a response's content and appears "
"before ``CommonMiddleware`` in the ``MIDDLEWARE`` or ``MIDDLEWARE_CLASSES`` "
"settings, you must reorder your middleware so that responses aren't modified "
"after ``Content-Length`` is set, or have the response modifying middleware "
"reset the ``Content-Length`` header."
msgstr ""
"Jika anda mempunyai middleware yang merubah isi tanggapan dan muncul sebelum "
"``CommonMiddleware`` dalam pengaturan ``MIDDLEWARE`` atau "
"``MIDDLEWARE_CLASSES``, anda harus mengurutkan kembali middleware anda "
"sehingga tanggapan tidak dirubah setelah ``Content-Length`` disetel, atau "
"memiliki tanggapan merubah middleware menyetel kembali kepala ``Content-"
"Length``."

msgid ""
":meth:`~django.apps.AppConfig.get_model` and :meth:`~django.apps.AppConfig."
"get_models` now raise :exc:`~django.core.exceptions.AppRegistryNotReady` if "
"they're called before models of all applications have been loaded. "
"Previously they only required the target application's models to be loaded "
"and thus could return models without all their relations set up. If you need "
"the old behavior of ``get_model()``, set the ``require_ready`` argument to "
"``False``."
msgstr ""
":meth:`~django.apps.AppConfig.get_model` dan :meth:`~django.apps.AppConfig."
"get_models` sekarang memunculkan :exc:`~django.core.exceptions."
"AppRegistryNotReady` jika mereka dipanggil sebelum model dari semua aplikasi "
"telah dimuat. Sebelumnya mereka hanya membutuhkan sasaran model aplikasi "
"untuk dimuat dan demikian dapat mengembalikan model tanpa semua hubungan "
"mereka disetel. Jika anda butuh perilaku lama dari ``get_model()``, setel "
"argumen ``require_ready`` menjadi ``False``."

msgid "The unused ``BaseCommand.can_import_settings`` attribute is removed."
msgstr ""
"Atribut ``BaseCommand.can_import_settings`` tidak digunakan dipindahkan."

msgid "The undocumented ``django.utils.functional.lazy_property`` is removed."
msgstr "Internal ``django.utils.functional.lazy_property`` dipindahkan."

msgid ""
"For consistency with non-multipart requests, ``MultiPartParser.parse()`` now "
"leaves ``request.POST`` immutable. If you're modifying that ``QueryDict``, "
"you must now first copy it, e.g. ``request.POST.copy()``."
msgstr ""
"Untuk ketetapan dengan permintaan bukan-banyak-bagian, ``MultiPartParser."
"parse()`` sekarang meninggalkan ``request.POST`` kekal. Jika anda sedang "
"merubah ``QueryDict`` itu, anda harus sekarang pertama menyalin, sebagai "
"contoh ``request.POST.copy()``."

msgid "Support for ``cx_Oracle`` < 5.2 is removed."
msgstr "Dukungan untuk ``cx_Oracle`` < 5.2 telah dipindahkan."

msgid "Support for IPython < 1.0 is removed from the ``shell`` command."
msgstr ""
"Dukungan untuk IPython < 1.0 telah dipindahkan dari perintah ``shell``."

msgid ""
"The signature of private API ``Widget.build_attrs()`` changed from "
"``extra_attrs=None, **kwargs`` to ``base_attrs, extra_attrs=None``."
msgstr ""
"Tanda tangan dari API pribadi ``Widget.build_attrs()`` berubah dari "
"``extra_attrs=None, **kwargs`` menjadi ``base_attrs, extra_attrs=None``."

msgid ""
"File-like objects (e.g., :class:`~io.StringIO` and :class:`~io.BytesIO`) "
"uploaded to an :class:`~django.db.models.ImageField` using the test client "
"now require a ``name`` attribute with a value that passes the :data:`~django."
"core.validators.validate_image_file_extension` validator. See the note in :"
"meth:`.Client.post`."
msgstr ""
"Obyek seperti-berkas (sebagai contoh :class:`~io.StringIO` dan :class:`~io."
"BytesIO`) diunggah pada sebuah :class:`~django.db.models.ImageField` "
"menggunakan klien percobaan sekarang membutuhkan sebuah atribut ``name`` "
"dengan sebuah nilai yang melewatkan pengesah :data:`~django.core.validators."
"validate_image_file_extension`. Lihat catatan dalam :meth:`.Client.post`."

msgid ""
":class:`~django.db.models.FileField` now moves rather than copies the file "
"it receives. With the default file upload settings, files larger than :"
"setting:`FILE_UPLOAD_MAX_MEMORY_SIZE` now have the same permissions as "
"temporary files (often ``0o600``) rather than the system's standard umask "
"(often ``0o6644``). Set the :setting:`FILE_UPLOAD_PERMISSIONS` if you need "
"the same permission regardless of file size."
msgstr ""

msgid "Features deprecated in 1.11"
msgstr "Fitur-fitur diusangkan dalam 1.11"

msgid "``models.permalink()`` decorator"
msgstr "Penghias ``models.permalink()``"

msgid "Use :func:`django.urls.reverse` instead. For example::"
msgstr "Gunakan :func:`django.urls.reverse` sebagai gantinya. Sebagai contoh::"

msgid "becomes::"
msgstr "menjadi::"

msgid ""
"``contrib.auth``’s ``login()`` and ``logout()`` function-based views are "
"deprecated in favor of new class-based views :class:`~django.contrib.auth."
"views.LoginView` and :class:`~django.contrib.auth.views.LogoutView`."
msgstr ""
"Tampilan berdasarkan-fungsi ``login()`` dan ``logout()`` ``contrib.auth`` "
"diusangkan menduung dari tampilan berdasarkan-kelas baru :class:`~django."
"contrib.auth.views.LoginView` dan :class:`~django.contrib.auth.views."
"LogoutView`."

msgid ""
"The unused ``extra_context`` parameter of ``contrib.auth.views."
"logout_then_login()``  is deprecated."
msgstr ""
"Parameter ``extra_context`` tidak digunakan dari ``contrib.auth.views."
"logout_then_login()`` diusangkan."

msgid ""
"``contrib.auth``’s ``password_change()``, ``password_change_done()``, "
"``password_reset()``, ``password_reset_done()``, "
"``password_reset_confirm()``, and ``password_reset_complete()`` function-"
"based views are deprecated in favor of new class-based views :class:`~django."
"contrib.auth.views.PasswordChangeView`, :class:`~django.contrib.auth.views."
"PasswordChangeDoneView`, :class:`~django.contrib.auth.views."
"PasswordResetView`, :class:`~django.contrib.auth.views."
"PasswordResetDoneView`, :class:`~django.contrib.auth.views."
"PasswordResetConfirmView`, and :class:`~django.contrib.auth.views."
"PasswordResetCompleteView`."
msgstr ""
"Tampilan berdasarkan-fungsi ``contrib.auth``’s ``password_change()``, "
"``password_change_done()``, ``password_reset()``, ``password_reset_done()``, "
"``password_reset_confirm()``, dan ``password_reset_complete()`` diusangkan "
"mendukung dari tampilan berdasarkan-kelas baru :class:`~django.contrib.auth."
"views.PasswordChangeView`, :class:`~django.contrib.auth.views."
"PasswordChangeDoneView`, :class:`~django.contrib.auth.views."
"PasswordResetView`, :class:`~django.contrib.auth.views."
"PasswordResetDoneView`, :class:`~django.contrib.auth.views."
"PasswordResetConfirmView`, dan :class:`~django.contrib.auth.views."
"PasswordResetCompleteView`."

msgid ""
"``django.test.runner.setup_databases()`` is moved to :func:`django.test."
"utils.setup_databases`. The old location is deprecated."
msgstr ""
"``django.test.runner.setup_databases()`` dipindahkan ke :func:`django.test."
"utils.setup_databases`. Tempat lama diusangkan. "

msgid ""
"``django.utils.translation.string_concat()`` is deprecated in favor of :func:"
"`django.utils.text.format_lazy`. ``string_concat(*strings)`` can be replaced "
"by ``format_lazy('{}' * len(strings), *strings)``."
msgstr ""
"``django.utils.translation.string_concat()`` diusangkan mendukung :func:"
"`django.utils.text.format_lazy`. ``string_concat(*strings)`` dapat diganti "
"oleh ``format_lazy('{}' * len(strings), *strings)``."

msgid ""
"For the ``PyLibMCCache`` cache backend, passing ``pylibmc`` behavior "
"settings as top-level attributes of ``OPTIONS`` is deprecated. Set them "
"under a ``behaviors`` key within ``OPTIONS`` instead."
msgstr ""
"Untuk backend cache ``PyLibMCCache``, lewatkan pengaturan perilaku "
"``pylibmc`` sebagai atribut tingkat-atas dari ``OPTIONS`` diusangkan. Setel "
"mereka dibawah kunci ``behaviors`` dalam ``OPTIONS`` sebagai gantinya."

msgid ""
"The ``host`` parameter of ``django.utils.http.is_safe_url()`` is deprecated "
"in favor of the new ``allowed_hosts`` parameter."
msgstr ""
"Parameter ``host`` dari ``django.utils.http.is_safe_url()`` diusangkan "
"mendukung parameter ``allowed_hosts`` baru."

msgid ""
"Silencing exceptions raised while rendering the :ttag:`{% include %} "
"<include>` template tag is deprecated as the behavior is often more "
"confusing than helpful. In Django 2.1, the exception will be raised."
msgstr ""
"Mendiamkan pengecualian yang muncul selagi membangun etiket cetakan :ttag:"
"`{% include %} 1` diusangkan sebagai perilaku sering lebih membingungkan "
"daripada membantu. Dalam Django 2.1, pengecualian akan dimunculkan."

msgid ""
"``DatabaseIntrospection.get_indexes()`` is deprecated in favor of "
"``DatabaseIntrospection.get_constraints()``."
msgstr ""
"``DatabaseIntrospection.get_indexes()`` diusangkan mendukung "
"``DatabaseIntrospection.get_constraints()``."

msgid ""
":func:`~django.contrib.auth.authenticate` now passes a ``request`` argument "
"to the ``authenticate()`` method of authentication backends. Support for "
"methods that don't accept ``request`` as the first positional argument will "
"be removed in Django 2.1."
msgstr ""
":func:`~django.contrib.auth.authenticate` sekarang melewatkan sebuah argumen "
"``request`` pada metode ``authenticate()`` dari backend autentifikasi. "
"Dukungan untuk metode-metode yang tidak menerima ``request`` sebagai argumen "
"penempatan pertama akan dipindahkan dalam Django 2.1."

msgid ""
"The ``USE_ETAGS`` setting is deprecated in favor of :class:`~django."
"middleware.http.ConditionalGetMiddleware` which now adds the ``ETag`` header "
"to responses regardless of the setting. ``CommonMiddleware`` and ``django."
"utils.cache.patch_response_headers()`` will no longer set ETags when the "
"deprecation ends."
msgstr ""
"Pengaturan ``USE_ETAGS`` diusangkan mendukung :class:`~django.middleware."
"http.ConditionalGetMiddleware` yang sekarang menambah kepala ``ETag`` pada "
"tanggapan tanpa memperdulikan pengaturan. ``CommonMiddleware`` dan ``django."
"utils.cache.patch_response_headers()`` tidak akan lagi menyetel ETags ketika "
"pengusangan berakhir."

msgid ""
"``Model._meta.has_auto_field`` is deprecated in favor of checking if ``Model."
"_meta.auto_field is not None``."
msgstr ""
"``Model._meta.has_auto_field`` diusangkan mendukung dari pemeriksaan jika "
"``Model._meta.auto_field bukan None``."

msgid ""
"Using regular expression groups with ``iLmsu#`` in ``url()`` is deprecated. "
"The only group that's useful is ``(?i)`` for case-insensitive URLs, however, "
"case-insensitive URLs aren't a good practice because they create multiple "
"entries for search engines, for example. An alternative solution could be to "
"create a :data:`~django.conf.urls.handler404` that looks for uppercase "
"characters in the URL and redirects to a lowercase equivalent."
msgstr ""
"Menggunakan kelompok regular expression dengan ``iLmsu#`` dalam "
"``url()`` diusangkan. Hanya kelompok yang berguna adalah ``(?i)`` untuk URL "
"kasus-tidak-sensitif, bagaimanapun, URL kasus-tidak-sensitif bukan praktik "
"bagus karena mereka membuat banyak masukan untuk setiap mesin pencari, "
"sebagai contoh. Sebuah pemecahan lain dapat membuat :data:`~django.conf.urls."
"handler404` yang mencari karakter huruf besar dalam URL dan pengalihkan ke "
"setara huruf kecil."

msgid ""
"The ``renderer`` argument is added to the :meth:`Widget.render() <django."
"forms.Widget.render>` method. Methods that don't accept that argument will "
"work through a deprecation period."
msgstr ""
"Argumen ``renderer`` ditambahkan pada metode :meth:`Widget.render() <django."
"forms.Widget.render>`. Metode-metode yang tidak menerima bahwa argumen akan "
"bekerja melalui masa pengusangan."

msgid "Django 1.11.1 release notes"
msgstr "Catatan terbitan Django 1.11.1"

msgid "*May 6, 2017*"
msgstr "*6 Mei 2017*"

msgid "Django 1.11.1 adds a minor feature and fixes several bugs in 1.11."
msgstr ""
"Django 1.11.1 menambahkan fitur kecil dan perbaikan beberapa kesalahan dalam "
"1.11."

msgid "Allowed disabling server-side cursors on PostgreSQL"
msgstr "Diizinkan meniadakan kursor sisi-peladen pada PostgreSQL"

msgid ""
"The change in Django 1.11 to make :meth:`.QuerySet.iterator()` use server-"
"side cursors on PostgreSQL prevents running Django with PgBouncer in "
"transaction pooling mode. To reallow that, use the :setting:"
"`DISABLE_SERVER_SIDE_CURSORS <DATABASE-DISABLE_SERVER_SIDE_CURSORS>` setting "
"in :setting:`DATABASES`."
msgstr ""

msgid ""
"Made migrations respect ``Index``’s ``name`` argument. If you created a "
"named index with Django 1.11, ``makemigrations`` will create a migration to "
"recreate the index with the correct name (:ticket:`28051`)."
msgstr ""
"Dibuat perpindahan mematuhi argumen ``name`` ``Index``. Jika anda membuat "
"indeks bernama dengan Django 1.11, ``makemigrations`` akan membuat "
"perpindahan untuk membuat kembali indeks dengan nama benar (:ticket:`28051`)."

msgid ""
"Fixed a crash when using a ``__icontains`` lookup on a ``ArrayField`` (:"
"ticket:`28038`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menggunakan sebuah pencarian "
"``__icontains`` pada sebuah ``ArrayField`` (:ticket:`28038`). "

msgid ""
"Fixed a crash when using a two-tuple in ``EmailMessage``’s ``attachments`` "
"argument (:ticket:`28042`)."
msgstr ""
"Diperbaiki kegagalan ketika menggunakan dua-tuple dalam argumen lampiran "
"``EmailMessage`` (:ticket:`28042`)."

msgid ""
"Fixed ``QuerySet.filter()`` crash when it references the name of a "
"``OneToOneField`` primary key (:ticket:`28047`)."
msgstr ""
"Diperbaiki kegagalan ``QuerySet.filter()`` ketika itu mengacu nama dari "
"primary key ``OneToOneField`` (:ticket:`28047`)."

msgid ""
"Fixed empty POST data table appearing instead of \"No POST data\" in HTML "
"debug page (:ticket:`28079`)."
msgstr ""
"Diperbaiki tabel data POST kosong muncul daripada \"No POST data\" dalam "
"halaman mencari kesalahan HTML (:ticket:`28079`)."

msgid ""
"Restored ``BoundField``\\s without any ``choices`` evaluating to ``True`` (:"
"ticket:`28058`)."
msgstr ""
"Disimpan kembali ``BoundField`` tanpa ``choices`` apapun menilai menjadi "
"``True`` (:ticket:`28058`)."

msgid ""
"Prevented ``SessionBase.cycle_key()`` from losing session data if "
"``_session_cache`` isn't populated (:ticket:`28066`)."
msgstr ""
"Dicegah ``SessionBase.cycle_key()`` dari kehilangan data sesi jika "
"``_session_cache`` tidak dikunpulkan (:ticket:`28066`)."

msgid ""
"Fixed layout of ``ReadOnlyPasswordHashWidget`` (used in the admin's user "
"change page) (:ticket:`28097`)."
msgstr ""
"Diperbaiki tata letak dari ``ReadOnlyPasswordHashWidget`` (digunakan dalam "
"halaman rubah pengguna admin) (:ticket:`28097`)."

msgid ""
"Allowed prefetch calls on managers with custom ``ModelIterable`` subclasses "
"(:ticket:`28096`)."
msgstr ""
"Diizinkan mengambil panggilan pada pengelola dengan penyesuaian subkelas "
"``ModelIterable`` (:ticket:`28096`)."

msgid ""
"Fixed change password link in the ``contrib.auth`` admin for ``el``, "
"``es_MX``, and ``pt`` translations (:ticket:`28100`)."
msgstr ""
"Diperbaiki tautan rubah sandi dalam admin ``contrib.auth`` untuk terjemahan "
"``el``, ``es_MX``, dan ``pt`` (:ticket:`28100`)."

msgid ""
"Restored the output of the ``class`` attribute in the ``<ul>`` of widgets "
"that use the ``multiple_input.html`` template. This fixes ``ModelAdmin."
"radio_fields`` with ``admin.HORIZONTAL`` (:ticket:`28059`)."
msgstr ""
"Disimpan kembali keluaran dari atribut ``class`` dalam ``1`` dari widget "
"yang menggunakan cetakan ``multiple_input.html``. Ini memperbaiki "
"``ModelAdmin.radio_fields`` dengan ``admin.HORIZONTAL`` (:ticket:`28059`)."

msgid "Fixed crash in ``BaseGeometryWidget.subwidgets()`` (:ticket:`28039`)."
msgstr ""
"Diperbaiki kegagalan dalam ``BaseGeometryWidget.subwidgets()`` (:ticket:"
"`28039`). "

msgid ""
"Fixed exception reraising in ORM query execution when ``cursor.execute()`` "
"fails and the subsequent ``cursor.close()`` also fails (:ticket:`28091`)."
msgstr ""
"Diperbaiki pengecualian memunculkan kembali dalam penjalanan permintaan ORM "
"ketika ``cursor.execute()`` gagal dan yang menyusul ``cursor.close()`` juga "
"gagal (:ticket:`28091`)."

msgid ""
"Fixed a regression where ``CheckboxSelectMultiple``, ``NullBooleanSelect``, "
"``RadioSelect``, ``SelectMultiple``, and ``Select`` localized option values "
"(:ticket:`28075`)."
msgstr ""
"Diperbaiki pemulihan dimana``CheckboxSelectMultiple``, "
"``NullBooleanSelect``, ``RadioSelect``, ``SelectMultiple``, dan ``Select`` "
"membatasi nilai pilihan (:ticket:`28075`)."

msgid ""
"Corrected the stack level of unordered queryset pagination warnings (:ticket:"
"`28109`)."
msgstr ""
"Diperbaiki tingkat susunan dari peringatan halaman queryset tidak berurutan "
"(:ticket:`28109`)."

msgid ""
"Fixed a regression causing incorrect queries for ``__in`` subquery lookups "
"when models use ``ForeignKey.to_field`` (:ticket:`28101`)."
msgstr ""
"Diperbaiki pemulihan menyebabkan permintaan tidak benar untuk untuk "
"pencarian sub permintaan ``__in`` ketika model menggunakan ``ForeignKey."
"to_field`` (:ticket:`28101`)."

msgid ""
"Fixed crash when overriding the template of ``django.views.static."
"directory_index()`` (:ticket:`28122`)."
msgstr ""
"Diperbaiki kegagalan ketika menimpa cetakan dari ``django.views.static."
"directory_index()`` (:ticket:`28122`)."

msgid ""
"Fixed a regression in formset ``min_num`` validation with unchanged forms "
"that have initial data (:ticket:`28130`)."
msgstr ""
"Diperbaiki pemulihan dalam formset pengesahan ``min_num`` dengan formulir "
"tidak berubah yang mempunyai data awal (:ticket:`28130`)."

msgid "Prepared for ``cx_Oracle`` 6.0 support (:ticket:`28138`)."
msgstr "Dipersiapkan untuk dukungan ``cx_Oracle`` 6.0 (:ticket:`28138`)."

msgid ""
"Updated the ``contrib.postgres`` ``SplitArrayWidget`` to use template-based "
"widget rendering (:ticket:`28040`)."
msgstr ""
"Diperbaharui ``contrib.postgres`` ``SplitArrayWidget`` untuk menggunakan "
"membangun widget berdasarkan-cetakan (:ticket:`28040`)."

msgid ""
"Fixed crash in ``BaseGeometryWidget.get_context()`` when overriding existing "
"``attrs`` (:ticket:`28105`)."
msgstr ""
"Diperbaiki kegagalan dalam ``BaseGeometryWidget.get_context()`` ketika "
"menimpa ``attrs`` yang ada (:ticket:`28105`)."

msgid ""
"Prevented ``AddIndex`` and ``RemoveIndex`` from mutating model state (:"
"ticket:`28043`)."
msgstr ""
"Dicegah ``AddIndex`` dan ``RemoveIndex`` dari mengubah keadaan model (:"
"ticket:`28043`)."

msgid ""
"Prevented migrations from dropping database indexes from ``Meta.indexes`` "
"when changing ``Field.db_index`` to ``False`` (:ticket:`28052`)."
msgstr ""
"Dicegah perpindahan dari menjatuhkan indeks basisdata dari ``Meta."
"indexes`` ketika merubah ``Field.db_index`` menjadi ``False`` (:ticket:"
"`28052`)."

msgid ""
"Fixed a regression in choice ordering in form fields with grouped and non-"
"grouped options (:ticket:`28157`)."
msgstr ""
"Diperbaiki pemulihan dalam urutan pilihan dalam bidang formulir dengan "
"pilihan dikelompokkan dan tidak dikelompopkkan (:ticket:`28157`)."

msgid ""
"Fixed crash in  ``BaseInlineFormSet._construct_form()`` when using "
"``save_as_new`` (:ticket:`28159`)."
msgstr ""
"Diperbaiki kegagalan dalam ``BaseInlineFormSet._construct_form()`` ketika "
"menggunakan ``save_as_new`` (:ticket:`28159`)."

msgid ""
"Fixed a regression where ``Model._state.db`` wasn't set correctly on multi-"
"table inheritance parent models after saving a child model (:ticket:`28166`)."
msgstr ""
"Diperbaiki pemulihan dimana ``Model._state.db`` tidak disetel dengan benar "
"pada model induk warisan banyak-tabel setelah menyimpan model anak (:ticket:"
"`28166`)."

msgid ""
"Corrected the return type of ``ArrayField(CITextField())`` values retrieved "
"from the database (:ticket:`28161`)."
msgstr ""
"Diperbaiki jenis kembalian dari nilai ``ArrayField(CITextField())`` diambil "
"dari basisdata (:ticket:`28161`)."

msgid ""
"Fixed ``QuerySet.prefetch_related()`` crash when fetching relations in "
"nested ``Prefetch`` objects (:ticket:`27554`)."
msgstr ""
"Diperbaiki kegagalan ``QuerySet.prefetch_related()``  ketika mengambil "
"hubungan dalam obyek ``Prefetch`` bersarang (:ticket:`27554`)."

msgid ""
"Prevented hiding GDAL errors if it's not installed when using ``contrib."
"gis`` (:ticket:`28160`). (It's a required dependency as of Django 1.11.)"
msgstr ""
"Dicegah menyembungikan kesalahan GDAL jika itu tidak dipasang ketika "
"menggunakan ``contrib.gis`` (:ticket:`28160`). (itu mewajibkan "
"ketergantungan sampai Django 1.11.)"

msgid ""
"Fixed a regression causing ``__in`` lookups on a foreign key to fail when "
"using the foreign key's parent model as the lookup value (:ticket:`28175`)."
msgstr ""
"Diperbaiki pemulihan menyebabkan pencarian ``__in`` pada foreign key gagal "
"ketika menggunakan model induk foreign key sebagai nilai pencarian (:ticket:"
"`28175`). "

msgid "Django 1.11.10 release notes"
msgstr "Catatan terbitan Django 1.11.10"

msgid "*February 1, 2018*"
msgstr "*1 Februari 2018*"

msgid "Django 1.11.10 fixes a security issue and several bugs in 1.11.9."
msgstr ""
"Django 1.11.10 memperbaiki masalah keamanan dan beberapa kesalahan di 1.11.9."

msgid "CVE-2018-6188: Information leakage in ``AuthenticationForm``"
msgstr "CVE-2018-6188: Kebocoran informasi dalam ``AuthenticationForm``"

msgid ""
"A regression in Django 1.11.8 made :class:`~django.contrib.auth.forms."
"AuthenticationForm` run its ``confirm_login_allowed()`` method even if an "
"incorrect password is entered. This can leak information about a user, "
"depending on what messages ``confirm_login_allowed()`` raises. If "
"``confirm_login_allowed()`` isn't overridden, an attacker enter an arbitrary "
"username and see if that user has been set to ``is_active=False``. If "
"``confirm_login_allowed()`` is overridden, more sensitive details could be "
"leaked."
msgstr ""

msgid ""
"This issue is fixed with the caveat that ``AuthenticationForm`` can no "
"longer raise the \"This account is inactive.\" error if the authentication "
"backend rejects inactive users (the default authentication backend, "
"``ModelBackend``, has done that since Django 1.10). This issue will be "
"revisited for Django 2.1 as a fix to address the caveat will likely be too "
"invasive for inclusion in older versions."
msgstr ""

msgid ""
"Fixed incorrect foreign key nullification if a model has two foreign keys to "
"the same model and a target model is deleted (:ticket:`29016`)."
msgstr ""

msgid ""
"Fixed a regression where ``contrib.auth.authenticate()`` crashes if an "
"authentication backend doesn't accept ``request`` and a later one does (:"
"ticket:`29071`)."
msgstr ""

msgid ""
"Fixed crash when entering an invalid uuid in ``ModelAdmin.raw_id_fields`` (:"
"ticket:`29094`)."
msgstr ""

msgid "Django 1.11.11 release notes"
msgstr "Catatan terbitan Django 1.11.11"

msgid "*March 6, 2018*"
msgstr "*6 Maret 2018*"

msgid "Django 1.11.11 fixes two security issues in 1.11.10."
msgstr "Django 1.11.11 memperbaiki dua masalah keamanan di 1.11.10."

msgid ""
"CVE-2018-7536: Denial-of-service possibility in ``urlize`` and "
"``urlizetrunc`` template filters"
msgstr ""

msgid ""
"The ``django.utils.html.urlize()`` function was extremely slow to evaluate "
"certain inputs due to catastrophic backtracking vulnerabilities in two "
"regular expressions. The ``urlize()`` function is used to implement the "
"``urlize`` and ``urlizetrunc`` template filters, which were thus vulnerable."
msgstr ""

msgid ""
"The problematic regular expressions are replaced with parsing logic that "
"behaves similarly."
msgstr ""

msgid ""
"CVE-2018-7537: Denial-of-service possibility in ``truncatechars_html`` and "
"``truncatewords_html`` template filters"
msgstr ""

msgid ""
"If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods "
"were passed the ``html=True`` argument, they were extremely slow to evaluate "
"certain inputs due to a catastrophic backtracking vulnerability in a regular "
"expression. The ``chars()`` and ``words()`` methods are used to implement "
"the ``truncatechars_html`` and ``truncatewords_html`` template filters, "
"which were thus vulnerable."
msgstr ""

msgid "The backtracking problem in the regular expression is fixed."
msgstr ""

msgid "Django 1.11.12 release notes"
msgstr "Catatan terbitan Django 1.11.12"

msgid "*April 2, 2018*"
msgstr "*2 April 2018*"

msgid "Django 1.11.12 fixes two bugs in 1.11.11."
msgstr "Django 1.11.12 memperbaiki dua kesalahan yang ada pada 1.11.11."

msgid ""
"Fixed a regression in Django 1.11.8 where combining two annotated "
"``values_list()`` querysets with ``union()``, ``difference()``, or "
"``intersection()`` crashed due to mismatching columns (:ticket:`29229`)."
msgstr ""

msgid ""
"Fixed a regression in Django 1.11 where an empty choice could be initially "
"selected for the ``SelectMultiple`` and ``CheckboxSelectMultiple`` widgets (:"
"ticket:`29273`)."
msgstr ""

msgid "Django 1.11.13 release notes"
msgstr "Catatan rilis Django 1.11.13"

msgid "*May 1, 2018*"
msgstr "*1 Mei 2018*"

msgid "Django 1.11.13 fixes several bugs in 1.11.12."
msgstr "Django 1.11.13 memperbaiki beberapa kesalahan yang ada pada 1.11.12."

msgid ""
"Fixed a regression in Django 1.11.8 where altering a field with a unique "
"constraint may drop and rebuild more foreign keys than necessary (:ticket:"
"`29193`)."
msgstr ""

msgid ""
"Fixed crashes in ``django.contrib.admindocs`` when a view is a callable "
"object, such as ``django.contrib.syndication.views.Feed`` (:ticket:`29296`)."
msgstr ""

msgid ""
"Fixed a regression in Django 1.11.12 where ``QuerySet.values()`` or "
"``values_list()`` after combining an annotated and unannotated queryset with "
"``union()``, ``difference()``, or ``intersection()`` crashed due to "
"mismatching columns (:ticket:`29286`)."
msgstr ""

msgid "Django 1.11.14 release notes"
msgstr "Catatan terbitan Django 1.11.14"

msgid "*July 2, 2018*"
msgstr "*2 Juli 2018*"

msgid "Django 1.11.14 fixes several bugs in 1.11.13."
msgstr "Django 1.11.14 memperbaiki beberapa kesalahan yang ada pada 1.11.13."

msgid ""
"Fixed ``WKBWriter.write()`` and ``write_hex()`` for empty polygons on GEOS "
"3.6.1+ (:ticket:`29460`)."
msgstr ""

msgid ""
"Fixed a regression in Django 1.10 that could result in large memory usage "
"when making edits using ``ModelAdmin.list_editable`` (:ticket:`28462`)."
msgstr ""

msgid "Django 1.11.15 release notes"
msgstr "Catatan terbitan Django 1.11.15"

msgid "*August 1, 2018*"
msgstr "*1 Agustus 2018*"

msgid "Django 1.11.15 fixes a security issue in 1.11.14."
msgstr "Django 1.11.15 memperbaiki masalah keamanan di 1.11.14."

msgid "CVE-2018-14574: Open redirect possibility in ``CommonMiddleware``"
msgstr ""

msgid ""
"If the :class:`~django.middleware.common.CommonMiddleware` and the :setting:"
"`APPEND_SLASH` setting are both enabled, and if the project has a URL "
"pattern that accepts any path ending in a slash (many content management "
"systems have such a pattern), then a request to a maliciously crafted URL of "
"that site could lead to a redirect to another site, enabling phishing and "
"other attacks."
msgstr ""

msgid ""
"``CommonMiddleware`` now escapes leading slashes to prevent redirects to "
"other domains."
msgstr ""

msgid "Django 1.11.16 release notes"
msgstr "Catatan terbitan Django 1.11.16"

msgid "*October 1, 2018*"
msgstr ""

msgid "Django 1.11.16 fixes a data loss bug in 1.11.15."
msgstr "Django 1.11.16 memperbaiki kesalahan kehilangan data di 1.11.15."

msgid ""
"Fixed a race condition in ``QuerySet.update_or_create()`` that could result "
"in data loss (:ticket:`29499`)."
msgstr ""

msgid "Django 1.11.17 release notes"
msgstr ""

msgid "*December 3, 2018*"
msgstr ""

msgid ""
"Django 1.11.17 fixes several bugs in 1.11.16 and adds compatibility with "
"Python 3.7."
msgstr ""

msgid ""
"Prevented repetitive calls to ``geos_version_tuple()`` in the ``WKBWriter`` "
"class in an attempt to fix a random crash involving ``LooseVersion`` since "
"Django 1.11.14 (:ticket:`29959`)."
msgstr ""

msgid "Django 1.11.18 release notes"
msgstr ""

msgid "*January 4, 2019*"
msgstr ""

msgid "Django 1.11.18 fixes a security issue in 1.11.17."
msgstr ""

msgid "CVE-2019-3498: Content spoofing possibility in the default 404 page"
msgstr ""

msgid ""
"An attacker could craft a malicious URL that could make spoofed content "
"appear on the default page generated by the ``django.views.defaults."
"page_not_found()`` view."
msgstr ""

msgid ""
"The URL path is no longer displayed in the default 404 template and the "
"``request_path`` context variable is now quoted to fix the issue for custom "
"templates that use the path."
msgstr ""

msgid "Django 1.11.19 release notes"
msgstr ""

msgid "*February 11, 2019*"
msgstr ""

msgid "Django 1.11.19 fixes a security issue in 1.11.18."
msgstr ""

msgid ""
"CVE-2019-6975: Memory exhaustion in ``django.utils.numberformat.format()``"
msgstr ""

msgid ""
"If ``django.utils.numberformat.format()`` -- used by ``contrib.admin`` as "
"well as the ``floatformat``, ``filesizeformat``, and ``intcomma`` templates "
"filters -- received a ``Decimal`` with a large number of digits or a large "
"exponent, it could lead to significant memory usage due to a call to ``'{:"
"f}'.format()``."
msgstr ""

msgid ""
"To avoid this, decimals with more than 200 digits are now formatted using "
"scientific notation."
msgstr ""

msgid "Django 1.11.2 release notes"
msgstr "Catatan terbitan Django 1.11.2"

msgid "*June 1, 2017*"
msgstr "*1 Juni 2017*"

msgid ""
"Django 1.11.2 adds a minor feature and fixes several bugs in 1.11.1. Also, "
"the latest string translations from Transifex are incorporated."
msgstr ""
"Django 1.11.2 menambahkan fitur kecil dan memperbaiki beberapa kesalahan "
"dalam 1.11.1. Juga, terjemahan string terakhir dari Transifex digabung."

msgid "Minor feature"
msgstr "Fitur kecil"

msgid ""
"The new ``LiveServerTestCase.port`` attribute reallows the use case of "
"binding to a specific port following the :ref:`bind to port zero "
"<liveservertestcase-port-zero-change>` change in Django 1.11."
msgstr ""
"Atribut ``LiveServerTestCase.port`` baru mengizikan kembali penggunaan kasus "
"dari mengikat port tertentu mengikuti :ref:`bind to port zero 1` dirubah "
"dalam Django 1.11."

msgid ""
"Added detection for GDAL 2.1 and 2.0, and removed detection for unsupported "
"versions 1.7 and 1.8 (:ticket:`28181`)."
msgstr ""
"Ditambahkan pengenalan untuk GDAL 2.1 dan 2.0, dan dipindahkan pengenalan "
"untuk versi tidak didukung 1.7 dan 1.8 (:ticket:`28181`)."

msgid ""
"Changed ``contrib.gis`` to raise ``ImproperlyConfigured`` rather than "
"``GDALException`` if ``gdal`` isn't installed, to allow third-party apps to "
"catch that exception (:ticket:`28178`)."
msgstr ""
"Dirubah ``contrib.gis`` untuk memunculkan ``ImproperlyConfigured`` daripada "
"``GDALException`` jika ``gdal`` tidak terpasang, untuk mengizinkan aplikasi "
"pihak-ketiga untuk menangkap pengecualian itu (:ticket:`28178`)."

msgid ""
"Fixed ``django.utils.http.is_safe_url()`` crash on invalid IPv6 URLs (:"
"ticket:`28142`)."
msgstr ""
"Diperbaiki kegagalan ``django.utils.http.is_safe_url()`` pada URL IPv6 tidak "
"sah (:ticket:`28142`)."

msgid ""
"Fixed regression causing pickling of model fields to crash (:ticket:`28188`)."
msgstr ""
"Diperbaiki pemulihan menyebabkan pickle dari bidang model untuk kegagalan (:"
"ticket:`28188`)."

msgid ""
"Fixed ``django.contrib.auth.authenticate()`` when multiple authentication "
"backends don't accept a positional ``request`` argument (:ticket:`28207`)."
msgstr ""
"Diperbaiki ``django.contrib.auth.authenticate()`` ketika banyak backend "
"autentifikasi tidak menerima sebuah argumen ``request`` penempatan (:ticket:"
"`28207`)."

msgid ""
"Fixed introspection of index field ordering on PostgreSQL (:ticket:`28197`)."
msgstr ""
"Diperbaiki interospeksi dari pengurutan bidang indeks pada PostgreSQL (:"
"ticket:`28197`)."

msgid ""
"Fixed a regression where ``Model._state.adding`` wasn't set correctly on "
"multi-table inheritance parent models after saving a child model (:ticket:"
"`28210`)."
msgstr ""
"Diperbaiki pemulihan dimana ``Model._state.adding`` tidak disetel dengan "
"benar pada model induk warisan banyak-tabel setelah menyimpan model anak (:"
"ticket:`28210`)."

msgid ""
"Allowed ``DjangoJSONEncoder`` to serialize ``django.utils.deprecation."
"CallableBool`` (:ticket:`28230`)."
msgstr ""
"Diizinkan ``DjangoJSONEncoder`` untuk menserialisasi ``django.utils."
"deprecation.CallableBool`` (:ticket:`28230`)."

msgid ""
"Relaxed the validation added in Django 1.11 of the fields in the "
"``defaults`` argument of ``QuerySet.get_or_create()`` and "
"``update_or_create()`` to reallow settable model properties (:ticket:"
"`28222`)."
msgstr ""
"Disantaikan pengesahan ditambahkan dalam Django 1.11 dalam argumen "
"``defaults`` dari ``QuerySet.get_or_create()`` dan ``update_or_create()`` "
"untuk mengizinkan kembali sifat model dapat disetel (:ticket:`28222`)."

msgid ""
"Fixed ``MultipleObjectMixin.paginate_queryset()`` crash on Python 2 if the "
"``InvalidPage`` message contains non-ASCII (:ticket:`28204`)."
msgstr ""
"Diperbaiki kegagalan ``MultipleObjectMixin.paginate_queryset()`` pada Python "
"2 jika pesan ``InvalidPage`` mengandung bukan-ASCII (:ticket:`28204`)."

msgid ""
"Prevented ``Subquery`` from adding an unnecessary ``CAST`` which resulted in "
"invalid SQL (:ticket:`28199`)."
msgstr ""
"Dicegah ``Subquery`` dari menambahkan ``CAST`` tidak diperlukan yang "
"dihasilkan dalam SQL tidak sah (:ticket:`28199`)."

msgid "Corrected detection of GDAL 2.1 on Windows (:ticket:`28181`)."
msgstr "Diperbaiki pengenalan dari GDAL 2.1 pada Windows (:ticket:`28181`)."

msgid ""
"Made date-based generic views return a 404 rather than crash when given an "
"out of range date (:ticket:`28209`)."
msgstr ""
"Dibuat tampilan umum berdasarkan-tanggal mengembalikan 404 daripada "
"kegagalan ketika diberikan sebuah tanggal diluar jangkauan (:ticket:`28209`)."

msgid ""
"Fixed a regression where ``file_move_safe()`` crashed when moving files to a "
"CIFS mount (:ticket:`28170`)."
msgstr ""
"Diperbaiki pemulihan dimana ``file_move_safe()`` gagal ketika memindahkan "
"berkas ke ikatan CIFS (:ticket:`28170`)."

msgid ""
"Moved the ``ImageField`` file extension validation added in Django 1.11 from "
"the model field to the form field to reallow the use case of storing images "
"without an extension (:ticket:`28242`)."
msgstr ""
"Dipindahkan pengesahan tambahan berkas ``ImageField`` ditambahkan di Django "
"1.11 dari bidang model pada bidang formulir untuk mengizinkan kembali "
"penggunaan kasus dari menyimpan gambar tanpa sebuah perpanjangan (:ticket:"
"`28242`)."

msgid "Django 1.11.20 release notes"
msgstr ""

msgid "Django 1.11.20 fixes a packaging error in 1.11.19."
msgstr ""

msgid "Corrected packaging error from 1.11.19 (:ticket:`30175`)."
msgstr ""

msgid "Django 1.11.21 release notes"
msgstr ""

msgid "*June 3, 2019*"
msgstr ""

msgid "Django 1.11.21 fixes a security issue in 1.11.20."
msgstr ""

msgid "CVE-2019-12308: AdminURLFieldWidget XSS"
msgstr ""

msgid ""
"The clickable \"Current URL\" link generated by ``AdminURLFieldWidget`` "
"displayed the provided value without validating it as a safe URL. Thus, an "
"unvalidated value stored in the database, or a value provided as a URL query "
"parameter payload, could result in an clickable JavaScript link."
msgstr ""

msgid ""
"``AdminURLFieldWidget`` now validates the provided value using :class:"
"`~django.core.validators.URLValidator` before displaying the clickable link. "
"You may customize the validator by passing a ``validator_class`` kwarg to "
"``AdminURLFieldWidget.__init__()``, e.g. when using :attr:`~django.contrib."
"admin.ModelAdmin.formfield_overrides`."
msgstr ""

msgid "Django 1.11.22 release notes"
msgstr ""

msgid "*July 1, 2019*"
msgstr ""

msgid "Django 1.11.22 fixes a security issue in 1.11.21."
msgstr ""

msgid ""
"CVE-2019-12781: Incorrect HTTP detection with reverse-proxy connecting via "
"HTTPS"
msgstr ""

msgid ""
"When deployed behind a reverse-proxy connecting to Django via HTTPS, :attr:"
"`django.http.HttpRequest.scheme` would incorrectly detect client requests "
"made via HTTP as using HTTPS. This entails incorrect results for :meth:"
"`~django.http.HttpRequest.is_secure`, and :meth:`~django.http.HttpRequest."
"build_absolute_uri`, and that HTTP requests would not be redirected to HTTPS "
"in accordance with :setting:`SECURE_SSL_REDIRECT`."
msgstr ""

msgid ""
"``HttpRequest.scheme`` now respects :setting:`SECURE_PROXY_SSL_HEADER`, if "
"it is configured, and the appropriate header is set on the request, for both "
"HTTP and HTTPS requests."
msgstr ""

msgid ""
"If you deploy Django behind a reverse-proxy that forwards HTTP requests, and "
"that connects to Django via HTTPS, be sure to verify that your application "
"correctly handles code paths relying on ``scheme``, ``is_secure()``, "
"``build_absolute_uri()``, and ``SECURE_SSL_REDIRECT``."
msgstr ""

msgid "Django 1.11.23 release notes"
msgstr ""

msgid "*August 1, 2019*"
msgstr ""

msgid "Django 1.11.23 fixes security issues in 1.11.22."
msgstr ""

msgid ""
"CVE-2019-14232: Denial-of-service possibility in ``django.utils.text."
"Truncator``"
msgstr ""

msgid ""
"If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods "
"were passed the ``html=True`` argument, they were extremely slow to evaluate "
"certain inputs due to a catastrophic backtracking vulnerability in a regular "
"expression. The ``chars()`` and ``words()`` methods are used to implement "
"the :tfilter:`truncatechars_html` and :tfilter:`truncatewords_html` template "
"filters, which were thus vulnerable."
msgstr ""

msgid ""
"The regular expressions used by ``Truncator`` have been simplified in order "
"to avoid potential backtracking issues. As a consequence, trailing "
"punctuation may now at times be included in the truncated output."
msgstr ""

msgid "CVE-2019-14233: Denial-of-service possibility in ``strip_tags()``"
msgstr ""

msgid ""
"Due to the behavior of the underlying ``HTMLParser``, :func:`django.utils."
"html.strip_tags` would be extremely slow to evaluate certain inputs "
"containing large sequences of nested incomplete HTML entities. The "
"``strip_tags()`` method is used to implement the corresponding :tfilter:"
"`striptags` template filter, which was thus also vulnerable."
msgstr ""

msgid ""
"``strip_tags()`` now avoids recursive calls to ``HTMLParser`` when progress "
"removing tags, but necessarily incomplete HTML entities, stops being made."
msgstr ""

msgid ""
"Remember that absolutely NO guarantee is provided about the results of "
"``strip_tags()`` being HTML safe. So NEVER mark safe the result of a "
"``strip_tags()`` call without escaping it first, for example with :func:"
"`django.utils.html.escape`."
msgstr ""

msgid ""
"CVE-2019-14234: SQL injection possibility in key and index lookups for "
"``JSONField``/``HStoreField``"
msgstr ""

msgid ""
":lookup:`Key and index lookups <jsonfield.key>` for ``django.contrib."
"postgres.fields.JSONField`` and :lookup:`key lookups <hstorefield.key>` for :"
"class:`~django.contrib.postgres.fields.HStoreField` were subject to SQL "
"injection, using a suitably crafted dictionary, with dictionary expansion, "
"as the ``**kwargs`` passed to ``QuerySet.filter()``."
msgstr ""

msgid ""
"CVE-2019-14235: Potential memory exhaustion in ``django.utils.encoding."
"uri_to_iri()``"
msgstr ""

msgid ""
"If passed certain inputs, :func:`django.utils.encoding.uri_to_iri` could "
"lead to significant memory usage due to excessive recursion when re-percent-"
"encoding invalid UTF-8 octet sequences."
msgstr ""

msgid ""
"``uri_to_iri()`` now avoids recursion when re-percent-encoding invalid UTF-8 "
"octet sequences."
msgstr ""

msgid "Django 1.11.24 release notes"
msgstr ""

msgid "*September 2, 2019*"
msgstr ""

msgid "Django 1.11.24 fixes a regression in 1.11.23."
msgstr ""

msgid ""
"Fixed crash of ``KeyTransform()`` for ``django.contrib.postgres.fields."
"JSONField`` and :class:`~django.contrib.postgres.fields.HStoreField` when "
"using on expressions with params (:ticket:`30672`)."
msgstr ""

msgid "Django 1.11.25 release notes"
msgstr ""

msgid "*October 1, 2019*"
msgstr ""

msgid "Django 1.11.25 fixes a regression in 1.11.23."
msgstr ""

msgid ""
"Fixed a crash when filtering with a ``Subquery()`` annotation of a queryset "
"containing ``django.contrib.postgres.fields.JSONField`` or :class:`~django."
"contrib.postgres.fields.HStoreField` (:ticket:`30769`)."
msgstr ""

msgid "Django 1.11.26 release notes"
msgstr ""

msgid "*November 4, 2019*"
msgstr ""

msgid "Django 1.11.26 fixes a regression in 1.11.25."
msgstr ""

msgid ""
"Fixed a crash when using a ``contains``, ``contained_by``, ``has_key``, "
"``has_keys``, or ``has_any_keys`` lookup on ``django.contrib.postgres.fields."
"JSONField``, if the right or left hand side of an expression is a key "
"transform (:ticket:`30826`)."
msgstr ""

msgid "Django 1.11.27 release notes"
msgstr ""

msgid "*December 18, 2019*"
msgstr ""

msgid "Django 1.11.27 fixes a security issue and a data loss bug in 1.11.26."
msgstr ""

msgid "CVE-2019-19844: Potential account hijack via password reset form"
msgstr ""

msgid ""
"By submitting a suitably crafted email address making use of Unicode "
"characters, that compared equal to an existing user email when lower-cased "
"for comparison, an attacker could be sent a password reset token for the "
"matched account."
msgstr ""

msgid ""
"In order to avoid this vulnerability, password reset requests now compare "
"the submitted email using the stricter, recommended algorithm for case-"
"insensitive comparison of two identifiers from `Unicode Technical Report 36, "
"section 2.11.2(B)(2)`__. Upon a match, the email containing the reset token "
"will be sent to the email address on record rather than the submitted "
"address."
msgstr ""

msgid ""
"Fixed a data loss possibility in :class:`~django.contrib.postgres.forms."
"SplitArrayField`. When using with ``ArrayField(BooleanField())``, all values "
"after the first ``True`` value were marked as checked instead of preserving "
"passed values (:ticket:`31073`)."
msgstr ""

msgid "Django 1.11.28 release notes"
msgstr ""

msgid "*February 3, 2020*"
msgstr ""

msgid "Django 1.11.28 fixes a security issue in 1.11.27."
msgstr ""

msgid "CVE-2020-7471: Potential SQL injection via ``StringAgg(delimiter)``"
msgstr ""

msgid ""
":class:`~django.contrib.postgres.aggregates.StringAgg` aggregation function "
"was subject to SQL injection, using a suitably crafted ``delimiter``."
msgstr ""

msgid "Django 1.11.29 release notes"
msgstr ""

msgid "*March 4, 2020*"
msgstr ""

msgid "Django 1.11.29 fixes a security issue in 1.11.28."
msgstr ""

msgid ""
"CVE-2020-9402: Potential SQL injection via ``tolerance`` parameter in GIS "
"functions and aggregates on Oracle"
msgstr ""

msgid ""
"GIS functions and aggregates on Oracle were subject to SQL injection, using "
"a suitably crafted ``tolerance``."
msgstr ""

msgid "Django 1.11.3 release notes"
msgstr "Catatan terbitan Django 1.11.3"

msgid "*July 1, 2017*"
msgstr "*1 Juli 2017*"

msgid "Django 1.11.3 fixes several bugs in 1.11.2."
msgstr "Django 1.11.3 memperbaiki beberapa kesalahan di 1.11.2."

msgid ""
"Removed an incorrect deprecation warning about a missing ``renderer`` "
"argument if a ``Widget.render()`` method accepts ``**kwargs`` (:ticket:"
"`28265`)."
msgstr ""
"Dipindahkan peringatan pengusangan tidak benar tentang argumen ``renderer`` "
"hilang jika sebuah metode ``Widget.render()`` menerima ``**kwargs`` (:ticket:"
"`28265`). "

msgid ""
"Fixed a regression causing ``Model.__init__()`` to crash if a field has an "
"instance only descriptor (:ticket:`28269`)."
msgstr ""
"Diperbaiki pemulihan menyebabkan kegagalan ``Model.__init__()`` jika bidang "
"mempunyai sebuah jarak hanya penjelas (:ticket:`28269`)."

msgid ""
"Fixed an incorrect ``DisallowedModelAdminLookup`` exception when using a "
"nested reverse relation in ``list_filter`` (:ticket:`28262`)."
msgstr ""
"Diperbaiki pengecualian ``DisallowedModelAdminLookup`` tidak benar ketika "
"menggunakan hubungan membalikkan bersarang dalam ``list_filter`` (:ticket:"
"`28262`)."

msgid ""
"Fixed admin's ``FieldListFilter.get_queryset()`` crash on invalid input (:"
"ticket:`28202`)."
msgstr ""
"Diperbaiki kegagalan ``FieldListFilter.get_queryset()`` admin pada masukan "
"tidak sah (:ticket:`28202`)."

msgid ""
"Fixed invalid HTML for a required ``AdminFileWidget`` (:ticket:`28278`)."
msgstr ""
"Diperbaiki HTML tidak sah untuk ``AdminFileWidget`` diwajibkan (:ticket:"
"`28278`)."

msgid ""
"Fixed model initialization to set the name of class-based model indexes for "
"models that only inherit ``models.Model`` (:ticket:`28282`)."
msgstr ""
"Diperbaiki model pengawalan untuk menyetel nama dari indeks model "
"berdasarkan-kelas untuk model hanya mewarisi ``models.Model`` (:ticket:"
"`28282`)."

msgid ""
"Fixed crash in admin's inlines when a model has an inherited non-editable "
"primary key (:ticket:`27967`)."
msgstr ""
"Diperbaiki kegagalan dalam jejeran admin ketika model mempunyai primary key "
"bukan-disunting warisan (:ticket:`27967`)."

msgid ""
"Fixed ``QuerySet.union()``, ``intersection()``, and ``difference()`` when "
"combining with an ``EmptyQuerySet`` (:ticket:`28293`)."
msgstr ""
"Diperbaiki ``QuerySet.union()``, ``intersection()``, dan ``difference()`` "
"ketika menggabungkan dengan ``EmptyQuerySet`` (:ticket:`28293`)."

msgid ""
"Prevented ``Paginator``’s unordered object list warning from evaluating a "
"``QuerySet`` (:ticket:`28284`)."
msgstr ""
"Dicegah peringatan daftar obyek tidak berurutan ``Paginator`` dari menilai "
"``QuerySet`` (:ticket:`28284`)."

msgid ""
"Fixed the value of ``redirect_field_name`` in ``LoginView``’s template "
"context. It's now an empty string (as it is for the original function-based "
"``login()`` view) if the corresponding parameter isn't sent in a request (in "
"particular, when the login page is accessed directly) (:ticket:`28229`)."
msgstr ""
"Diperbaiki nilai dari  ``redirect_field_name`` dalam konteks "
"cetakan``LoginView``. Itu sekarang sebuah string kosong (seperti itu untuk "
"tampilan ``login()`` berdasarkan-fungsi asli) jika parameter sesuai tidak "
"dikirim dalam sebuah permintaan (khususnya, ketika halaman masuk diakses "
"langsung) (:ticket:`28229`)."

msgid ""
"Prevented attribute values in the ``django/forms/widgets/attrs.html`` "
"template from being localized so that numeric attributes (e.g. ``max`` and "
"``min``) of ``NumberInput`` work correctly (:ticket:`28303`)."
msgstr ""
"Dicegah nilai atribut dalam cetakan ``django/forms/widgets/attrs.html`` dari "
"menjadi dibatasi sehingga atribut numerik (sebagai contoh ``max`` dan "
"``min``) dari ``NumberInput`` bekerja dengan benar (:ticket:`28303`)."

msgid ""
"Removed casting of the option value to a string in the template context of "
"the ``CheckboxSelectMultiple``, ``NullBooleanSelect``, ``RadioSelect``, "
"``SelectMultiple``, and ``Select`` widgets (:ticket:`28176`). In Django "
"1.11.1, casting was added in Python to avoid localization of numeric values "
"in Django templates, but this made some use cases more difficult. Casting is "
"now done in the template using the ``|stringformat:'s'`` filter."
msgstr ""
"Dipindahkan pemilihan dari nilai pilihan pada string dalam konteks cetakan "
"dari widget ``CheckboxSelectMultiple``, ``NullBooleanSelect``, "
"``RadioSelect``, ``SelectMultiple``, dan ``Select`` (:ticket:`28176`). Dalam "
"Django 1.11.1, pemilihan telah ditambahkan dalam Python untuk menghindari "
"lokalisasi dari nilai-nilai numerik dalam cetakan Django, tetapi ini membuat "
"beberapa penggunaan kasus lebih sulit. Pemilihan sekarang selesai dalam "
"cetakan menggunakan penyaring ``|stringformat:'s'``."

msgid ""
"Prevented a primary key alteration from adding a foreign key constraint if "
"``db_constraint=False`` (:ticket:`28298`)."
msgstr ""
"Dicegah perubahan primary key dari menambahkan batasan primary key jika "
"``db_constraint=False`` (:ticket:`28298`)."

msgid ""
"Fixed ``UnboundLocalError`` crash in ``RenameField`` with nonexistent field "
"(:ticket:`28350`)."
msgstr ""
"Diperbaiki kegagalan ``UnboundLocalError`` dalam ``RenameField`` dengan "
"bidang tidak ada (:ticket:`28350`)."

msgid ""
"Fixed a regression preventing a model field's ``limit_choices_to`` from "
"being evaluated when a ``ModelForm`` is instantiated (:ticket:`28345`)."
msgstr ""
"Diperbaiki pemulihan mencegah model bidang ``limit_choices_to`` dari menjadi "
"dinilai ketika ``ModelForm`` diinstansiasi (:ticket:`28345`)."

msgid "Django 1.11.4 release notes"
msgstr "Catatan terbitan Django 1.11.4"

msgid "*August 1, 2017*"
msgstr "*1 Agustus 2017*"

msgid "Django 1.11.4 fixes several bugs in 1.11.3."
msgstr "Django 1.11.4 memperbaiki beberapa kesalahan di 1.11.3."

msgid ""
"Fixed a regression in 1.11.3 on Python 2 where non-ASCII ``format`` values "
"for date/time widgets results in an empty ``value`` in the widget's HTML (:"
"ticket:`28355`)."
msgstr ""
"Diperbaiki pemulihan di 1.11.3 pada Python 2 dimana nilai ``format`` bukan-"
"ASCII untuk widget tanggal/waktu hasil dalam ``value`` kosong dalam HTML "
"widget (:ticket:`28355`)."

msgid ""
"Fixed ``QuerySet.union()`` and ``difference()`` when combining with a "
"queryset raising ``EmptyResultSet`` (:ticket:`28378`)."
msgstr ""
"Diperbaiki ``QuerySet.union()`` dan ``difference()`` ketika memadukan dengan "
"queryset memunculkan ``EmptyResultSet`` (:ticket:`28378`)."

msgid ""
"Fixed a regression in pickling of ``LazyObject`` on Python 2 when the "
"wrapped object doesn't have ``__reduce__()`` (:ticket:`28389`)."
msgstr ""
"Diperbaiki pemulihan dalam pickle dari ``LazyObject`` pada Python 2 ketika "
"obyek dibungkus tidak memiliki ``__reduce__()`` (:ticket:`28389`)."

msgid ""
"Fixed crash in ``runserver``'s ``autoreload`` with Python 2 on Windows with "
"non-``str`` environment variables (:ticket:`28174`)."
msgstr ""
"Diperbaiki kegagalan dalam ``autoreload`` ``runserver`` dengan Python 2 pada "
"Windows dengan variabel lignkunan bukan-``str`` (:ticket:`28174`)."

msgid ""
"Corrected ``Field.has_changed()`` to return ``False`` for disabled form "
"fields: ``BooleanField``, ``MultipleChoiceField``, ``MultiValueField``, "
"``FileField``, ``ModelChoiceField``, and ``ModelMultipleChoiceField``."
msgstr ""
"Diperbaiki ``Field.has_changed()`` untuk mengembalikan ``False`` untuk "
"meniadakan bidang formulir: ``BooleanField``, ``MultipleChoiceField``, "
"``MultiValueField``, ``FileField``, ``ModelChoiceField``, dan "
"``ModelMultipleChoiceField``."

msgid ""
"Fixed ``QuerySet.count()`` for ``union()``, ``difference()``, and "
"``intersection()`` queries. (:ticket:`28399`)."
msgstr ""
"Diperbaiki permintaan ``QuerySet.count()`` for ``union()``, "
"``difference()``, dan ``intersection()`` (:ticket:`28399`)."

msgid ""
"Fixed ``ClearableFileInput`` rendering as a subwidget of ``MultiWidget`` (:"
"ticket:`28414`). Custom ``clearable_file_input.html`` widget templates will "
"need to adapt for the fact that context values ``checkbox_name``, "
"``checkbox_id``, ``is_initial``, ``input_text``, ``initial_text``, and "
"``clear_checkbox_label`` are now attributes of ``widget`` rather than "
"appearing in the top-level context."
msgstr ""
"Diperbaiki membangun ``ClearableFileInput`` sebagai sub widget dari "
"``MultiWidget`` (:ticket:`28414`). Cetakan widget ``clearable_file_input."
"html`` penyesuaian akan butuh menyesuaikan untuk fakta yang nilai-nilai "
"konteks ``checkbox_name``, ``checkbox_id``, ``is_initial``, ``input_text``, "
"``initial_text``, dan ``clear_checkbox_label`` sekarang atribut-atribut dari "
"``widget`` daripada memunculkan dalam konteks tingkat-tinggi."

msgid ""
"Fixed queryset crash when using a ``GenericRelation`` to a proxy model (:"
"ticket:`28418`)."
msgstr ""
"Diperbaiki kegagalan queryset ketika menggunakan ``GenericRelation`` pada "
"model proxy (:ticket:`28418`)."

msgid "Django 1.11.5 release notes"
msgstr "Catatan terbitan Django 1.11.5"

msgid "Django 1.11.5 fixes a security issue and several bugs in 1.11.4."
msgstr ""
"Django 1.11.5 memperbaiki masalah keamanan dan beberapa kesalahan di 1.11.4."

msgid ""
"Fixed GEOS version parsing if the version has a commit hash at the end (new "
"in GEOS 3.6.2) (:ticket:`28441`)."
msgstr ""
"Diperbaiki penguraian versi GEOS jika versi mempunyai campuran commit pada "
"akhir (baru di GEOS 3.6.2) (:ticket:`28441`)."

msgid "Added compatibility for ``cx_Oracle`` 6 (:ticket:`28498`)."
msgstr "Ditambahkan kesesuaian untuk ``cx_Oracle`` 6 (:ticket:`28498`)."

msgid ""
"Fixed select widget rendering when option values are tuples (:ticket:"
"`28502`)."
msgstr ""
"Diperbaiki pemilihan membangun widget ketika nilai ilihan adalah tuple (:"
"ticket:`28502`)."

msgid ""
"Django 1.11 inadvertently changed the sequence and trigger naming scheme on "
"Oracle. This causes errors on INSERTs for some tables if "
"``'use_returning_into': False`` is in the ``OPTIONS`` part of ``DATABASES``. "
"The pre-1.11 naming scheme is now restored. Unfortunately, it necessarily "
"requires an update to Oracle tables created with Django 1.11.[1-4]. Use the "
"upgrade script in :ticket:`28451` comment 8 to update sequence and trigger "
"names to use the pre-1.11 naming scheme."
msgstr ""
"Django 1.11 secara tidak sengaja merubah urutan dan pemicu skema penamaan "
"pada Oracle. Ini menyebabkan kesalahan pada INSERT untuk beberapa tabel jika "
"``'use_returning_into': False`` adalah dalam ``OPTIONS`` bagian dari "
"``DATABASES``. Pra-1.11 skema penamaan sekarang disimpan kembali. Sayangnya, "
"itu perlu butuh sebuah pembaharuan pada tabel-tabel Oracle dibuat dengan "
"Django 1.11.[1-4]. Gunakan tulisan memperbaharui dalam :ticket:`28451` "
"komentar 8 untuk memperbaharui urutan dan pemicu nama-nama untuk menggunakan "
"skema penamaan pra-1.11."

msgid ""
"Added POST request support to ``LogoutView``, for equivalence with the "
"function-based ``logout()`` view (:ticket:`28513`)."
msgstr ""
"Ditambahkan dukungan permintaan POST pada ``LogoutView``, untuk kesetaraan "
"dengan tampilan ``logout()`` berdasarkan-fungsi (:ticket:`28513`)."

msgid ""
"Omitted ``pages_per_range`` from ``BrinIndex.deconstruct()`` if it's "
"``None`` (:ticket:`25809`)."
msgstr ""
"Dihilangkan ``pages_per_range`` dari ``BrinIndex.deconstruct()`` jika itu "
"adalah ``None`` (:ticket:`25809`)."

msgid ""
"Fixed a regression where ``SelectDateWidget`` localized the years in the "
"select box (:ticket:`28530`)."
msgstr ""
"Diperbaiki sebuah pemulihan dimana ``SelectDateWidget`` melokalkan tahun "
"dalam kotak pilihan (:ticket:`28530`)."

msgid ""
"Fixed a regression in 1.11.4 where ``runserver`` crashed with non-Unicode "
"system encodings on Python 2 + Windows (:ticket:`28487`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam 1.11.4 dimana ``runserver`` gagal dengan "
"sistem pengkodean bukan-Unicode pada Python 2 + Windows (:ticket:`28487`)."

msgid ""
"Fixed a regression in Django 1.10 where changes to a ``ManyToManyField`` "
"weren't logged in the admin change history (:ticket:`27998`) and prevented "
"``ManyToManyField`` initial data in model forms from being affected by "
"subsequent model changes (:ticket:`28543`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam Django 1.10 dimana perubahan pada "
"``ManyToManyField`` tidak tercatat dalam riwayat perubahan admin (:ticket:"
"`27998`) dan dicegah data inisial ``ManyToManyField`` dalam formulir model "
"sedang dipengaruhi oleh perubahan model selanjutnya (:ticket:`28543`)."

msgid ""
"Fixed non-deterministic results or an ``AssertionError`` crash in some "
"queries with multiple joins (:ticket:`26522`)."
msgstr ""
"Diperbaiki hasil bukan-deterministik atau sebuah kegagalan "
"``AssertionError`` dalam beberapa permintaan dengan banyak penggabungan (:"
"ticket:`26522`). "

msgid ""
"Fixed a regression in ``contrib.auth``'s ``login()`` and ``logout()`` views "
"where they ignored positional arguments (:ticket:`28550`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam tampilan-tampilan ``login()`` dan "
"``logout()`` ``contrib.auth`` dimana mereka mengabaikan penempatan argumen-"
"argumen (:ticket:`28550`)."

msgid "Django 1.11.6 release notes"
msgstr "Catatan terbitan Django 1.11.6"

msgid "*October 5, 2017*"
msgstr "*5 Oktober 2017*"

msgid "Django 1.11.6 fixes several bugs in 1.11.5."
msgstr "Django 1.11.6 memperbaiki beberapa kesalahan di 1.11.5."

msgid ""
"Made the ``CharField`` form field convert whitespace-only values to the "
"``empty_value`` when ``strip`` is enabled (:ticket:`28555`)."
msgstr ""
"DIbuat bidang formulir ``CharField`` merubah nilai hanya-ruang-putih menjadi "
"``empty_value`` ketika ``strip``diadakan (:ticket:`28555`)."

msgid ""
"Fixed crash when using the name of a model's autogenerated primary key "
"(``id``) in an ``Index``'s ``fields`` (:ticket:`28597`)."
msgstr ""
"Diperbaiki kegagalan ketika menggunakan nama dari model primary key (``id``) "
"dibangkitkan otomatis dalam sebuah ``fields`` ``Index`` (:ticket:`28597`)."

msgid ""
"Fixed a regression in Django 1.9 where a custom view error handler such as "
"``handler404`` that accesses ``csrf_token`` could cause CSRF verification "
"failures on other pages (:ticket:`28488`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam Django 1.9 dimana penangan tampilan "
"penyesuaian seperti ``handler404`` yang mengakses ``csrf_token`` dapat "
"menyebabkan kegagalan pengecekan CSRF pada halaman-halaman lain (:ticket:"
"`28488`). "

msgid "Django 1.11.7 release notes"
msgstr "Catatan terbitan Django 1.11.7"

msgid "*November 1, 2017*"
msgstr "*1 November 2017*"

msgid "Django 1.11.7 fixes several bugs in 1.11.6."
msgstr "Django 1.11.7 memperbaiki beberapa kesalahan di 1.11.6."

msgid ""
"Prevented ``cache.get_or_set()`` from caching ``None`` if the ``default`` "
"argument is a callable that returns ``None`` (:ticket:`28601`)."
msgstr ""
"Dicegah ``cache.get_or_set()`` dari cache ``None`` jika argumen ``default`` "
"dapat dipanggil yang mengembalikan ``None`` (:ticket:`28601`)."

msgid "Fixed the Basque ``DATE_FORMAT`` string (:ticket:`28710`)."
msgstr "Diperbaiki string ``DATE_FORMAT`` Basque (:ticket:`28710`)."

msgid ""
"Made ``QuerySet.reverse()`` affect ``nulls_first`` and ``nulls_last`` (:"
"ticket:`28722`)."
msgstr ""
"Membuat ``QuerySet.reverse()`` mempengaruhi ``nulls_first`` dan "
"``nulls_last`` (:ticket:`28722`)."

msgid ""
"Fixed unquoted table names in ``Subquery`` SQL when using ``OuterRef`` (:"
"ticket:`28689`)."
msgstr ""
"Diperbaiki nama tabel-tabel tidak dikutip dalam SQL ``Subquery`` ketika "
"menggunakan ``OuterRef`` (:ticket:`28689`)."

msgid "Django 1.11.8 release notes"
msgstr "Catatan terbitan Django 1.11.8"

msgid "*December 2, 2017*"
msgstr "*2 Desember 2017*"

msgid "Django 1.11.8 fixes several bugs in 1.11.7."
msgstr "Django 1.11.8 memperbaiki beberapa kesalahan di 1.11.7."

msgid ""
"Reallowed, following a regression in Django 1.10, ``AuthenticationForm`` to "
"raise the inactive user error when using ``ModelBackend`` (:ticket:`28645`)."
msgstr ""
"Mengizinkan kembali, mengikuti pemulihan di Django 1.10, "
"``AuthenticationForm`` untuk memunculkan kesalahan pengguna tidak aktif "
"ketika menggunakan ``ModelBackend`` (:ticket:`28645`). "

msgid ""
"Added support for ``QuerySet.values()`` and ``values_list()`` for "
"``union()``, ``difference()``, and ``intersection()`` queries (:ticket:"
"`28781`)."
msgstr ""
"Ditambahkan dukungan untuk ``QuerySet.values()`` dan ``values_list()`` untuk "
"permintaan ``union()``, ``difference()``, dan``intersection()``(:ticket:"
"`28781`)."

msgid ""
"Fixed incorrect index name truncation when using a namespaced ``db_table`` (:"
"ticket:`28792`)."
msgstr ""
"Diperbaiki pemotongan nama indeks tidak benar ketika menggunakan namespace "
"``db_table`` (:ticket:`28792`)."

msgid ""
"Made ``QuerySet.iterator()`` use server-side cursors on PostgreSQL after "
"``values()`` and ``values_list()`` (:ticket:`28817`)."
msgstr ""
"Dibuat ``QuerySet.iterator()`` menggunakan kursor sisi-peladen pada "
"PostgreSQL setelah ``values()`` dan ``values_list()`` (:ticket:`28817`)."

msgid ""
"Fixed crash on SQLite and MySQL when ordering by a filtered subquery that "
"uses ``nulls_first`` or ``nulls_last`` (:ticket:`28848`)."
msgstr ""
"Diperbaiki kegagalan pada SQLite dan MySQL ketika mengurutkan berdasarkan "
"subpermintaan yang menggunakan ``nulls_first`` atau ``nulls_last`` (:ticket:"
"`28848`)."

msgid ""
"Made query lookups for ``CICharField``, ``CIEmailField``, and "
"``CITextField`` use a ``citext`` cast (:ticket:`28702`)."
msgstr ""
"Dibuat pencarian permintaan untuk ``CICharField``, ``CIEmailField``, dan "
"``CITextField`` menggunakan masukan ``citext`` (:ticket:`28702`)."

msgid ""
"Fixed a regression in caching of a ``GenericForeignKey`` when the referenced "
"model instance uses multi-table inheritance (:ticket:`28856`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam cache dari ``GenericForeignKey`` ketika "
"contoh-contoh model dirujuk menggunakan warisan banyak-tabel (:ticket:"
"`28856`)."

msgid ""
"Fixed \"Cannot change column 'x': used in a foreign key constraint\" crash "
"on MySQL with a sequence of ``AlterField`` and/or ``RenameField`` operations "
"in a migration (:ticket:`28305`)."
msgstr ""
"Diperbaiki kegagalan \"Tidak dapat merubah kolom 'x': digunakan dalam sebuah "
"batasan foreign key\" pada MySQL dengan urutan dari tindakan-tindakan "
"``AlterField`` dan/atau ``RenameField`` dalam sebuah perpindahan (:ticket:"
"`28305`)."

msgid "Django 1.11.9 release notes"
msgstr "Catatan rilis Django 1.11.9"

msgid "*January 1, 2018*"
msgstr "*1 Januari 2018*"

msgid "Django 1.11.9 fixes several bugs in 1.11.8."
msgstr "Django 1.11.9 memperbaiki sejumlah bugs dari 1.11.8."

msgid ""
"Fixed a regression in Django 1.11 that added newlines between "
"``MultiWidget``'s subwidgets (:ticket:`28890`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam Django 1.11 yang ditambahkan baris baru "
"diantara subwidget ``MultiWidget`` (:ticket:`28890`)."

msgid ""
"Fixed incorrect class-based model index name generation for models with "
"quoted ``db_table`` (:ticket:`28876`)."
msgstr ""
"Diperbaiki pembangkitan nama indeks model berdasarkan-kelas tidak benar "
"untuk model-model dengan dikutip ``db_table`` (:ticket:`28876`)."

msgid ""
"Fixed incorrect foreign key constraint name for models with quoted "
"``db_table`` (:ticket:`28876`)."
msgstr ""
"Diperbaiki nama batasan foreign key tidak benar untuk model-model dengan "
"dikutip ``db_table`` (:ticket:`28876`)."

msgid ""
"Fixed a regression in caching of a ``GenericForeignKey`` when the referenced "
"model instance uses more than one level of multi-table inheritance (:ticket:"
"`28856`)."
msgstr ""
"Diperbaiki sebuah pemulihan dalam cache dari ``GenericForeignKey`` ketika "
"contoh-contoh model dirujuk menggunakan lebih dari satu tingkatan dari "
"warisan banyak-tabel (:ticket:`28856`)."

msgid "Django 1.2 release notes"
msgstr "Catatan terbitan Django 1.2"

msgid "*May 17, 2010.*"
msgstr "*Mei 17, 2010.*"

msgid "Welcome to Django 1.2!"
msgstr "Selamat datang di Django 1.2!"

msgid ""
"Nearly a year in the making, Django 1.2 packs an impressive list of :ref:"
"`new features <whats-new-1.2>` and lots of bug fixes. These release notes "
"cover the new features, as well as important changes you'll want to be aware "
"of when upgrading from Django 1.1 or older versions."
msgstr ""
"Hanpir setahun dalam membuat, Django 1.2 membungkus sebuah daftar "
"mengagumkan dari :ref:`new features <whats-new-1.2>` dan banyak perbaikan "
"kesalahan. Catatan terbitan ini mencangkupi fitur-fitur baru, sama "
"pentingnya perubahan anda akan ingin sadari ketika meningkatkan dari Django "
"1.1 atau versi terlama."

msgid "Overview"
msgstr "Ikhtisar"

msgid "Django 1.2 introduces several large, important new features, including:"
msgstr ""
"Django 1.2 memperkenalkan beberapa besar, fitur baru penting, termasuk:"

msgid ""
"Support for :ref:`multiple database connections <support-for-multiple-"
"databases>` in a single Django instance."
msgstr ""

msgid "`Model validation`_ inspired by Django's form validation."
msgstr "`Model validation`_ diilhami oleh pemeriksaan formulir Django."

msgid ""
"Vastly :ref:`improved protection against Cross-Site Request Forgery "
"<improved-csrf-protection>` (CSRF)."
msgstr ""

msgid ""
"A new :ref:`user \"messages\" framework <messages-framework>` with support "
"for cookie- and session-based message for both anonymous and authenticated "
"users."
msgstr ""

msgid ""
"Hooks for `object-level permissions`_, `permissions for anonymous users`_, "
"and :ref:`more flexible username requirements <relaxed-requirements-for-"
"usernames>`."
msgstr ""

msgid "Customization of email sending via `email backends`_."
msgstr "Penyesuaian dari pengiriman surel melalui `email backends`_."

msgid ""
"New :ref:`\"smart\" if template tag <new-in-1.2-smart-if>` which supports "
"comparison operators."
msgstr ""
"Baru :ref:`\"smart\" if template tag <new-in-1.2-smart-if>` yang mendukung "
"penghubung perbandingan."

msgid ""
"These are just the highlights; full details and a complete list of features :"
"ref:`may be found below <whats-new-1.2>`."
msgstr ""

msgid ""
"`Django Advent`_ covered the release of Django 1.2 with a series of articles "
"and tutorials that cover some of the new features in depth."
msgstr ""
"`Django Advent`_ melingkupi terbitan dari Django 1.2 dengan rangkaian dari "
"artikel dan tutorial yang melingkupi beberapa dari fitur baru secara dalam."

msgid ""
"Wherever possible these features have been introduced in a backwards-"
"compatible manner per :doc:`our API stability policy </misc/api-stability>` "
"policy."
msgstr ""
"Dimana memungkinkan fitur-fitur ini telah diperkenalkan di sikap kesesuaian-"
"kebelakang per kebijakan :doc:`our API stability policy </misc/api-"
"stability>`."

msgid ""
"However, a handful of features *have* changed in ways that, for some users, "
"will be backwards-incompatible. The big changes are:"
msgstr ""
"Bagaimanapun, bantuan dari fitur *telah* berubah dalam cara-cara yang, untuk "
"beberapa pengguna, akan bertentangan kebelakang. Perubahan besar adalah:"

msgid "Support for Python 2.3 has been dropped. See the full notes below."
msgstr "Dukungan untuk Python 2.3 telah dibuang. Lihat catatan penuh dibawah."

msgid ""
"The new CSRF protection framework is not backwards-compatible with the old "
"system. Users of the old system will not be affected until the old system is "
"removed in Django 1.4."
msgstr ""
"Kerangka kerja perlindungan CSRF baru tidak kesesuaian-kebelakang dengan "
"sistem lama. Pengguna dari sistem lama akan tidak terpengaruh sampai sistem "
"lama dipindahkan di Django 1.4."

msgid ""
"However, upgrading to the new CSRF protection framework requires a few "
"important backwards-incompatible changes, detailed in `CSRF Protection`_, "
"below."
msgstr ""
"Bagaimanapun, meningkatkan kekerangka kerja perlindungan CSRF baru "
"membutuhkan beberapa perubahan bertentangan kebelakang, rincian dalam `CSRF "
"Protection`_, dibawah."

msgid ""
"Authors of custom :class:`~django.db.models.Field` subclasses should be "
"aware that a number of methods have had a change in prototype, detailed "
"under `get_db_prep_*() methods on Field`_, below."
msgstr ""
"Penulis dari subkelas :class:`~django.db.models.Field` penyesuaian harus "
"menyadari bahwa sejumlah metode telah berubah di purwa rupa, rincian dibawah "
"`get_db_prep_*() methods on Field`_, dibawah."

msgid ""
"The internals of template tags have changed somewhat; authors of custom "
"template tags that need to store state (e.g. custom control flow tags) "
"should ensure that their code follows the new rules for `stateful template "
"tags`_"
msgstr ""
"Internal dari etiket cetakan telah berubah sedikit; penulis dari etiket "
"cetakan penyesuaian yang butuh untuk menyimpan keadaan (sebagai contoh "
"penyesuaian pengendalian aliran etiket) harus memastikan bahwa kode mereka "
"mengikuti aturan baru untuk `stateful template tags`_"

msgid ""
"The :func:`~django.contrib.auth.decorators.user_passes_test`, :func:`~django."
"contrib.auth.decorators.login_required`, and :func:`~django.contrib.auth."
"decorators.permission_required`, decorators from :mod:`django.contrib.auth` "
"only apply to functions and no longer work on methods. There's a simple one-"
"line fix :ref:`detailed below <user-passes-test-login-required-permission-"
"required>`."
msgstr ""

msgid ""
"Again, these are just the big features that will affect the most users. "
"Users upgrading from previous versions of Django are heavily encouraged to "
"consult the complete list of :ref:`backwards-incompatible changes <backwards-"
"incompatible-changes-1.2>` and the list of :ref:`deprecated features "
"<deprecated-features-1.2>`."
msgstr ""
"Kembali, ini hanya fitur besar yang akan mempengaruhi kebanyakan pengguna. "
"Pengguna meningkatkan dari versi sebelumnya dari Django didorong untuk "
"konsultasi daftar lengkap dari :ref:`backwards-incompatible changes "
"<backwards-incompatible-changes-1.2>` dan daftar dari :ref:`deprecated "
"features <deprecated-features-1.2>`."

msgid ""
"While not a new feature, it's important to note that Django 1.2 introduces "
"the first shift in our Python compatibility policy since Django's initial "
"public debut. Previous Django releases were tested and supported on 2.x "
"Python versions from 2.3 up; Django 1.2, however, drops official support for "
"Python 2.3. As such, the minimum Python version required for Django is now "
"2.4, and Django is tested and supported on Python 2.4, 2.5 and 2.6, and will "
"be supported on the as-yet-unreleased Python 2.7."
msgstr ""
"Selama bukan fitur baru, adalah penting untuk dicatat bahwa Django 1.2 "
"memperkenalkan perpindahan pertama dalam kesesuaian Python kami sejak "
"permulaan tampil umum. Terbitan Django sebelumnya telah diuji dan didukung "
"pada versi Python 2.x dari 2.3 keatas; Django 1.2, bagaimanapun, menjatuhkan "
"dukungan resmi untuk Python 2.3. Dengan demikian, versi Python minimal "
"dibutuhkan untuk Django sekarang adalah 2.4, dan Django diuji dan didukung "
"pada Python 2.4, 2.5 dan 2.6, dan akan didukung pada yang belum pernah "
"diterbitkan Python 2.7."

msgid ""
"This change should affect only a small number of Django users, as most "
"operating-system vendors today are shipping Python 2.4 or newer as their "
"default version. If you're still using Python 2.3, however, you'll need to "
"stick to Django 1.1 until you can upgrade; per :doc:`our support policy </"
"internals/release-process>`, Django 1.1 will continue to receive security "
"support until the release of Django 1.3."
msgstr ""
"Perubahan ini seharusnya berakibat hanya angka kecil dari pengguna Django, "
"seperti kebanyakan penjaja sistem operasi hari ini yang membekali Python 2.4 "
"atau memperbaharui versi awal mereka. Jika anda masih menggunakan Python "
"2.3, bagaimanapun, anda akan butuh melekat ke Django 1.1 sampai anda dapat "
"meningkatkan; per :doc:`kebijakan dukungan kami </internals/release-"
"process>`, Django 1.1 akan lanjut menerima dukungan keamanan sampai terbitan "
"dari Django 1.3."

msgid ""
"A roadmap for Django's overall 2.x Python support, and eventual transition "
"to Python 3.x, is currently being developed, and will be announced prior to "
"the release of Django 1.3."
msgstr ""
"Sebuah peta jalan untuk dukungan keseluruhan Python 2.x Django, dan akhirnya "
"berpindah ke Python 3.x, saat ini sedang dikembangkan, dan akan diumumkan "
"sebelum terbitan dari Django 1.3."

msgid "What's new in Django 1.2"
msgstr "Apa yang baru di Django 1.2"

msgid "Support for multiple databases"
msgstr "Mendukung untuk banyak basisdata"

msgid ""
"Django 1.2 adds the ability to use :doc:`more than one database </topics/db/"
"multi-db>` in your Django project. Queries can be issued at a specific "
"database with the ``using()`` method on ``QuerySet`` objects. Individual "
"objects can be saved to a specific database by providing a ``using`` "
"argument when you call ``save()``."
msgstr ""
"Django 1.2 menambahkan kemampuan untuk menggunakan :doc:`lebih dari satu "
"basisdata </topics/db/multi-db>` di proyek Django anda. Permintaan dapat "
"diterbitkan pada basisdata khusus dengan menggunakan metode ``using()`` pada "
"obyek ``QuerySet``. Obyek tersendiri dapat disimpan pada basisdata khusus "
"dengan menyediakan argumen ``using`` ketika anda memanggil ``save()``."

msgid "Model validation"
msgstr "Validasi model"

msgid ""
"Model instances now have support for :ref:`validating their own data "
"<validating-objects>`, and both model and form fields now accept "
"configurable lists of :doc:`validators </ref/validators>` specifying "
"reusable, encapsulated validation behavior. Note, however, that validation "
"must still be performed explicitly. Simply invoking a model instance's "
"``save()`` method will not perform any validation of the instance's data."
msgstr ""
"Instance model sekarang telah mendukung untuk :ref:`validating their own "
"data <validating-objects>`, dan kedua model bidang formulir sekarang "
"menerima daftar dapat dikonfigurasi dari :doc:`validators </ref/validators>` "
"menentukan dapat digunakan kembali, mengemas perilaku pengesahan. Catat, "
"bagaimanapun, pengesahan itu harus masih dilakukan secara eksplisit. Cukup "
"meminta sebuah metode ``save()`` instance model tidak akan melakukan "
"pengesahan apapun dari data instance."

msgid "Improved CSRF protection"
msgstr "Perbaikan perlindungan CSRF"

msgid ""
"Django now has much improved protection against :doc:`Cross-Site Request "
"Forgery (CSRF) attacks</ref/csrf>`. This type of attack occurs when a "
"malicious website contains a link, a form button or some JavaScript that is "
"intended to perform some action on your website, using the credentials of a "
"logged-in user who visits the malicious site in their browser. A related "
"type of attack, \"login CSRF,\" where an attacking site tricks a user's "
"browser into logging into a site with someone else's credentials, is also "
"covered."
msgstr ""
"Django sekarang mempunyai banyak peningkatan perlindungan terhadap :doc:"
"`Serangan Cross-Site Request Forgery (CSRF)</ref/csrf>`. Jenis serangan ini "
"muncuk ketika situs jahat mengandung sebuah tautan, sebuah tombol formulir "
"atau beberapa JavaScript yang berusaha melakukan beberapa tindakan pada "
"situs jaringan anda, menggunakan mandat dari pengguna masuk yang mengunjungi "
"situs jahat di peramban mereka. Jenis terkait dari serangan, \"login CSRF,\" "
"dimana sebuah situs penyerang mengelabui perambah pengguna kedalam pemasukan "
"kedalam sebuah situs dengan mandat orang lain, juga dicakupi."

msgid "Messages framework"
msgstr "Kerangka pesan"

msgid ""
"Django now includes a robust and configurable :doc:`messages framework </ref/"
"contrib/messages>` with built-in support for cookie- and session-based "
"messaging, for both anonymous and authenticated clients. The messages "
"framework replaces the deprecated user message API and allows you to "
"temporarily store messages in one request and retrieve them for display in a "
"subsequent request (usually the next one)."
msgstr ""
"Django sekarang menyertakan :doc:`kerangka pesan </ref/contrib/messages>` "
"yang kuat dan dapat dikonfigurasi dengan dukungan siap-pakai untuk berdasar "
"pesan kue- dan sesi, untuk kedua anonim dan klien terperiksa keasliannya. "
"Kerangka pesan menggantikan API pesan pengguna usang dan mengizinkan anda "
"untuk sementara menyimpan pesan dalam satu permintaan dan menarik mereka "
"untuk ditampilkan dalam permintaan berikut (biasanya selanjutnya)."

msgid "Object-level permissions"
msgstr "Tingkat-obyek perizinan"

msgid ""
"A foundation for specifying permissions at the per-object level has been "
"added. Although there is no implementation of this in core, a custom "
"authentication backend can provide this implementation and it will be used "
"by :class:`django.contrib.auth.models.User`. See the :doc:`authentication "
"docs </topics/auth/index>` for more information."
msgstr ""
"Sebuah yayasan untuk menentukan perizinan pada tingkatan per obyek telah "
"ditambahkan. Meskipun tidak ada penerapan dari ini dalam inti, backend "
"pembuktian keaslian penyesuaian dapat menyediakan penerapan ini dan akan "
"dipakai oleh :class:`django.contrib.auth.models.User`. Lihat :doc:"
"`authentication docs </topics/auth/index>` untuk informasi lebih."

msgid "Permissions for anonymous users"
msgstr "Perizinan untuk pengguna anonim"

msgid ""
"If you provide a custom auth backend with ``supports_anonymous_user`` set to "
"``True``, AnonymousUser will check the backend for permissions, just like "
"User already did.  This is useful for centralizing permission handling - "
"apps can always delegate the question of whether something is allowed or not "
"to the authorization/authentication backend. See the :doc:`authentication "
"docs </topics/auth/index>` for more details."
msgstr ""
"Jika anda menyediakan backend pembuktian keaslian penyesuaian dengan "
"``supports_anonymous_user`` disetel ke ``True``, AnonymousUser akan "
"memeriksa backend untuk perizinan, sama seperti User telah lakukan. Ini "
"sangan berguna untuk memusatkan penganganan perizinan - aplikasi dapat "
"selalu menugaskan pertanyaan apakah sesuatu diizinkan atau tidak ke backend "
"otorisasi/pembuktian keaslian. Lihat :doc:`dokumentasi pembuktian keaslian </"
"topics/auth/index>` untuk lebih rinci."

msgid "Relaxed requirements for usernames"
msgstr "Persyaratan santai untuk nama pengguna"

msgid ""
"The built-in :class:`~django.contrib.auth.models.User` model's :attr:"
"`~django.contrib.auth.models.User.username` field now allows a wider range "
"of characters, including ``@``, ``+``, ``.`` and ``-`` characters."
msgstr ""
"Bidang :class:`~django.contrib.auth.models.User` siap-pakai :attr:`~django."
"contrib.auth.models.User.username` model sekarang mengizinkan jangkauan luas "
"dari karakter, termasuk karakter ``@``, ``+``, ``.`` and ``-``."

msgid "Email backends"
msgstr "Backend surel"

msgid ""
"You can now :ref:`configure the way that Django sends email <topic-email-"
"backends>`. Instead of using SMTP to send all email, you can now choose a "
"configurable email backend to send messages. If your hosting provider uses a "
"sandbox or some other non-SMTP technique for sending mail, you can now "
"construct an email backend that will allow Django's standard :doc:`mail "
"sending methods</topics/email>` to use those facilities."
msgstr ""
"Anda dapat sekarang :ref:`mengkonfigurasi cara Django mengirim surel <topic-"
"email-backends>`. Daripada menggunakan SMTP untuk mengirim semua surel, anda "
"dapat sekarang memilih backend surel dikonfigurasi untuk mengirim surel. "
"Jika penyedia rumah anda menggunakan bak pasir atau beberapa lainnya teknik "
"bukan-SMTP untuk mengirim surat, anda dapat sekarang membangun sebuah surel "
"yang akan mengizinkan standar Django :doc:`mail sending methods</topics/"
"email>` untuk menggunakan fasilitas tersebut."

msgid ""
"This also makes it easier to debug mail sending. Django ships with backend "
"implementations that allow you to send email to a :ref:`file<topic-email-"
"file-backend>`, to the :ref:`console<topic-email-console-backend>`, or to :"
"ref:`memory<topic-email-memory-backend>`. You can even configure all email "
"to be :ref:`thrown away<topic-email-dummy-backend>`."
msgstr ""
"Ini juga membuatnya mudah untuk mencari kesalahan pengiriman surat. Django "
"mengirim dengan penerapan backend yang mengizinkan anda mengirim surat ke :"
"ref:`file<topic-email-file-backend>`, ke :ref:`console<topic-email-console-"
"backend>`, atau ke :ref:`memory<topic-email-memory-backend>`. Anda dapat "
"bahkan mengkonfigurasi semua surel untuk menjadi :ref:`thrown away<topic-"
"email-dummy-backend>`."

msgid "\"Smart\" :ttag:`if` tag"
msgstr "Etiket \"Smart\" :ttag:`if`"

msgid ""
"The :ttag:`if` tag has been upgraded to be much more powerful. First, we've "
"added support for comparison operators. No longer will you have to type:"
msgstr ""
"Etiket :ttag:`if` telah ditingkatkan ke lebih kuat. Pertama, kami telah "
"menambahkan dukungan untuk perbandingan penghubung. Tidak lagi akan anda "
"ketik:"

msgid "You can now do this:"
msgstr "Anda dapat sekarang melakukan ini:"

msgid ""
"There's really no reason to use ``{% ifequal %}`` or ``{% ifnotequal %}`` "
"anymore, unless you're the nostalgic type."
msgstr ""
"Tidak ada alasan untuk menggunakan``{% ifequal %}`` atau ``{% ifnotequal %}"
"`` lagi, meskipun anda adalah jenis yang rindu."

msgid ""
"The operators supported are ``==``, ``!=``, ``<``, ``>``, ``<=``, ``>=``, "
"``in`` and ``not in``, all of which work like the Python operators, in "
"addition to ``and``, ``or`` and ``not``, which were already supported."
msgstr ""
"Penghubung yang didukung adalah ``==``, ``!=``, ``<``, ``>``, ``<=``, "
"``>=``, ``in`` dan ``not in``, semua yang bekerja seperti penghubung Python, "
"sebagai tambahan pada ``and``, ``or`` dan ``not``, yang sudah didukung."

msgid "Also, filters may now be used in the ``if`` expression. For example:"
msgstr ""
"Juga, penyaring sekarang dapat digunakan dalam pernyataan ``if``. Sebagai "
"contoh:"

msgid "Template caching"
msgstr "Cetakan penyembunyian"

msgid ""
"In previous versions of Django, every time you rendered a template, it would "
"be reloaded from disk. In Django 1.2, you can use a :ref:`cached template "
"loader <template-loaders>` to load templates once, then cache the result for "
"every subsequent render. This can lead to a significant performance "
"improvement if your templates are broken into lots of smaller subtemplates "
"(using the ``{% extends %}`` or ``{% include %}`` tags)."
msgstr ""
"Di versi Django sebelumnya, setiap kali anda membangun sebuah cetakan, itu "
"akan dimuat kembali dari cakram. Di Django 1.2, anda dapat menggunakan :ref:"
"`cached template loader <template-loaders>` untuk memuat cetakan sekali, "
"kemudian menembolok hasil untuk setiap pembangun berikutnya. Ini akan "
"membawa ke perbaikan penampilan yang signifikan jika cetakan anda dipecah "
"kedalam banyak sub cetakan kecil (menggunakan etiket ``{% extends %}`` atau "
"``{% include %}``)."

msgid ""
"As a side effect, it is now much easier to support non-Django template "
"languages."
msgstr ""
"Sebagai efek samping, itu sekarang lebih mudah mendukung bahasa cetakan "
"bukan-Django."

msgid "Class-based template loaders"
msgstr "Pemuat cetakan berdasarkan kelas"

msgid ""
"As part of the changes made to introduce `Template caching`_  and following "
"a general trend in Django, the template loaders API has been modified to use "
"template loading mechanisms that are encapsulated in Python classes as "
"opposed to functions, the only method available until Django 1.1."
msgstr ""
"Sebagai bagian dari perubahan dibuat untuk memperkenalkan `Template "
"caching`_ dan mengikuti tren umum di Django, cetakan pemuat API telah "
"dirubah untuk menggunakan mekanisme pemuat cetakan yang dibungkus dalam "
"kelas-kelas Python sebagai lawan dari fungsi, hanya metode tersedia sampai "
"Django 1.1."

msgid ""
"All the template loaders :ref:`shipped with Django <template-loaders>` have "
"been ported to the new API but they still implement the function-based API "
"and the template core machinery still accepts function-based loaders "
"(builtin or third party) so there is no immediate need to modify your "
"``TEMPLATE_LOADERS`` setting in existing projects, things will keep working "
"if you leave it untouched up to and including the Django 1.3 release."
msgstr ""
"Semua pemuat cetakan :ref:`shipped with Django <template-loaders>` telah "
"ditaruh pada API baru tetapi mereka masih menerapkan API berdasarkan-fungsi "
"dan perlengkapan utama cetakan amsih menerima pemuat berdasarkan-fungsi "
"(siap pakai atau pihak ketiga) jadi tidak ada kebutuhan segera untuk merubah "
"pengaturan ``TEMPLATE_LOADERS`` anda dalam proyek yang ada, hal-hal akan "
"tetap bekerja jika anda membiarkannya tidak tersentuh dan menyertakan "
"terbitan Django 1.3."

msgid ""
"If you have developed your own custom template loaders we suggest to "
"consider porting them to a class-based implementation because the code for "
"backwards compatibility with function-based loaders starts its deprecation "
"process in Django 1.2 and will be removed in Django 1.4.  There is a "
"description of the API these loader classes must implement in the template "
"API reference and you can also examine the source code of the loaders "
"shipped with Django."
msgstr ""
"Jika anda telah mengembangkan pemuat cetakan penyesuaian anda kami "
"menyarankan mempertimbangkan menautkan mereka ke penerapan berdasarkan-kelas "
"karena kode untuk kesesuaian kebelakang dengan pemuat berdasarkan-fungsi "
"memulai pengolahan pengusangannya di Django 1.2 dan akan dipindahkan di "
"Django 1.4. Ada sebuah gambaran dari API kelas-kelas pemuat ini harus "
"diterapkan di acuan cetakan API dan anda dapat juga menguji kode sumber dari "
"pemuat yang dibekali dengan Django."

msgid "Natural keys in fixtures"
msgstr "Kunci alami di perlengkapan"

msgid ""
"Fixtures can now refer to remote objects using :ref:`topics-serialization-"
"natural-keys`. This lookup scheme is an alternative to the normal primary-"
"key based object references in a fixture, improving readability and "
"resolving problems referring to objects whose primary key value may not be "
"predictable or known."
msgstr ""
"Alat bantu sekarang dapat mengacu pada obyek terpencil menggunakan :ref:"
"`topics-serialization-natural-keys`. Skema pencarian ini adalah sebuah "
"pilihan lain untuk primary-key biasa berdasarkan obyek acuan di alat bantu, "
"meningkatkan kesiapan dan mengatasi masalah mengacu pada obyek yang nilai "
"primary key mungkin tidak dapat diprediksi atau dikenal."

msgid "Fast failure for tests"
msgstr "Kegagalan cepat untuk percobaan"

msgid ""
"Both the :djadmin:`test` subcommand of ``django-admin.py`` and the "
"``runtests.py`` script used to run Django's own test suite now support a ``--"
"failfast`` option. When specified, this option causes the test runner to "
"exit after encountering a failure instead of continuing with the test run. "
"In addition, the handling of ``Ctrl-C`` during a test run has been improved "
"to trigger a graceful exit from the test run that reports details of the "
"tests that were run before the interruption."
msgstr ""
"Kedua sub perintah :djadmin:`test` dari ``django-admin.py`` dan tulisan "
"``runtests.py`` digunakan untuk menjalankan deretan percobaan sendiri Django "
"sekarang mendukung -- pilihan ``--failfast``. Ketika menentukan, pilihan ini "
"menyebabkan penjalan percobaan keluar setelah menghadapi kegagalan daripada "
"melanjutkan dengan percobaan berjalan. Sebagai tambahan, penanganan dari "
"``Ctrl-C`` selama percobaan berjalan telah diperbaiki untuk memicu keluar "
"yang anggun dari percobaan berjalan yang melaporkan rincian dari percobaan "
"yang telah dijalankan sebelum gangguan."

msgid "``BigIntegerField``"
msgstr "``BigIntegerField``"

msgid ""
"Models can now use a 64-bit :class:`~django.db.models.BigIntegerField` type."
msgstr ""
"Model dapat sekarang menggunakan jenis :class:`~django.db.models."
"BigIntegerField` 64-bit."

msgid "Improved localization"
msgstr "Perbaikan lokalisasi"

msgid ""
"Django's :doc:`internationalization framework </topics/i18n/index>` has been "
"expanded with locale-aware formatting and form processing. That means, if "
"enabled, dates and numbers on templates will be displayed using the format "
"specified for the current locale. Django will also use localized formats "
"when parsing data in forms. See :doc:`/topics/i18n/formatting` for more "
"details."
msgstr ""
":doc:`internationalization framework </topics/i18n/index>` Django telah "
"diperluas dengan bentukan sadar-lokal dan pengolahan formulir. Itu berarti, "
"jika diadakan, tanggal dan angka pada cetakan akan ditampilkan menggunakan "
"bentuk ditentukan untuk lokal saat ini. Django akan juga menggunakan bentuk "
"lokalisasi ketika mengurai data dalam formulir. Lihat :doc:`/topics/i18n/"
"formatting` untuk rincian lebih."

msgid "``readonly_fields`` in ``ModelAdmin``"
msgstr "``readonly_fields`` di ``ModelAdmin``"

msgid ""
":attr:`django.contrib.admin.ModelAdmin.readonly_fields` has been added to "
"enable non-editable fields in add/change pages for models and inlines. Field "
"and calculated values can be displayed alongside editable fields."
msgstr ""
":attr:`django.contrib.admin.ModelAdmin.readonly_fields` telah ditambahkan "
"untuk mengadakan bidang tidak dapat disunting dalam halaman tambah/rubah "
"untuk model dan berderet. Bidang dan nilai dihitung dapat ditampilkan "
"bersama bidang dapat disunting."

msgid "Customizable syntax highlighting"
msgstr "Penyorotan sintaksis disesuaikan"

msgid ""
"You can now use a :envvar:`DJANGO_COLORS` environment variable to modify or "
"disable the colors used by ``django-admin.py`` to provide :ref:`syntax "
"highlighting <syntax-coloring>`."
msgstr ""

msgid "Syndication feeds as views"
msgstr "Umpan perkongsian sebagai tampilan"

msgid ""
":doc:`Syndication feeds </ref/contrib/syndication>` can now be used directly "
"as views in your :doc:`URLconf </topics/http/urls>`. This means that you can "
"maintain complete control over the URL structure of your feeds. Like any "
"other view, feeds views are passed a ``request`` object, so you can do "
"anything you would normally do with a view, like user based access control, "
"or making a feed a named URL."
msgstr ""
":doc:`Syndication feeds </ref/contrib/syndication>` sekarang dapat digunakan "
"secara langsung sebagai tampilan dalam :doc:`URLconf </topics/http/urls>` "
"anda. Ini berarti bahwa anda dapat merawat kendali sepenuhnya terhadap "
"struktur URL dari umpan anda. Seperti tampilan lainnya, tampilan umpan "
"melewatkan obyek ``request``, jadi anda dapat melakukan apapun anda akan "
"lalukan secara biasa dengan tampilan, seperti kendali akses berdasarkan "
"pengguna, atau membuat sebuah umpan URL dinamai."

msgid ""
"The most significant new feature for :doc:`GeoDjango </ref/contrib/gis/"
"index>` in 1.2 is support for multiple spatial databases.  As a result, the "
"following :ref:`spatial database backends <spatial-backends>` are now "
"included:"
msgstr ""
"Fitur baru paling penting dari :doc:`GeoDjango </ref/contrib/gis/index>` di "
"1.2 adalah mendukung untuk banyak basisdata spasial. Sebagai hasilnya, :ref:"
"`spatial database backends <spatial-backends>` berikut sekarang disertakan:"

msgid "``django.contrib.gis.db.backends.postgis``"
msgstr "``django.contrib.gis.db.backends.postgis``"

msgid "``django.contrib.gis.db.backends.mysql``"
msgstr "``django.contrib.gis.db.backends.mysql``"

msgid "``django.contrib.gis.db.backends.oracle``"
msgstr "``django.contrib.gis.db.backends.oracle``"

msgid "``django.contrib.gis.db.backends.spatialite``"
msgstr "``django.contrib.gis.db.backends.spatialite``"

msgid ""
"GeoDjango now supports the rich capabilities added in the PostGIS 1.5 "
"release. New features include support for the :ref:`geography type "
"<geography-type>` and enabling of :ref:`distance queries <distance-queries>` "
"with non-point geometries on geographic coordinate systems."
msgstr ""
"GeoDjango sekarang mendukung kemampuan kaya ditambahkan di terbitan PostGIS "
"1.5. Fitur baru termasuk dukungan untuk :ref:`geography type <geography-"
"type>` dan mengadakan :ref:`distance queries <distance-queries>` dengan "
"geometri tidak-bertitik pada sistem kordinat geografis."

msgid ""
"Support for 3D geometry fields was added, and may be enabled by setting the :"
"attr:`~django.contrib.gis.db.models.GeometryField.dim` keyword to 3 in your :"
"class:`~django.contrib.gis.db.models.GeometryField`. The :class:`~django."
"contrib.gis.db.models.Extent3D` aggregate and ``extent3d()`` ``GeoQuerySet`` "
"method were added as a part of this feature."
msgstr ""
"Dukungan untuk bidang geometri 3D telah ditambahkan, dan mungkin diadakan "
"dengan mengatur kata kunci :attr:`~django.contrib.gis.db.models."
"GeometryField.dim` menjadi 3 di :class:`~django.contrib.gis.db.models."
"GeometryField` anda. Kumpulan :class:`~django.contrib.gis.db.models."
"Extent3D` dan metode ``extent3d()`` ``GeoQuerySet`` telah ditambahkan "
"sebagai bagian dari fitur ini."

msgid ""
"The ``force_rhr()``, ``reverse_geom()``, and ``geohash()`` ``GeoQuerySet`` "
"methods are new."
msgstr ""
"Metode-metode ``GeoQuerySet`` ``force_rhr()``, ``reverse_geom()``, dan "
"``geohash()`` adalah baru."

msgid ""
"The GEOS interface was updated to use thread-safe C library functions when "
"available on the platform."
msgstr ""
"Antarmuka GEOS telah diperbaharui untuk menggunakan fungsi pustaka C thread-"
"safe ketika tersedia pada serambi."

msgid ""
"The GDAL interface now allows the user to set a :attr:`~django.contrib.gis."
"gdal.Layer.spatial_filter` on the features returned when iterating over a :"
"class:`~django.contrib.gis.gdal.Layer`."
msgstr ""
"Antarmuka GDAL sekarang mengizinkan pengguna untuk menyetel :attr:`~django."
"contrib.gis.gdal.Layer.spatial_filter` pada fitur-fitur dikembalikan ketika "
"berputar terhadap :class:`~django.contrib.gis.gdal.Layer`."

msgid ""
"Finally, :doc:`GeoDjango's documentation </ref/contrib/gis/index>` is now "
"included with Django's and is no longer hosted separately at ``geodjango."
"org``."
msgstr ""

msgid "JavaScript-assisted handling of inline related objects in the admin"
msgstr "Penanganan dibantu-JavaScript dari obyek terhubung berderet di admin"

msgid ""
"If a user has JavaScript enabled in their browser, the interface for inline "
"objects in the admin now allows inline objects to be dynamically added and "
"removed. Users without JavaScript-enabled browsers will see no change in the "
"behavior of inline objects."
msgstr ""
"Jika pengguna mempunyai JavaScript diadakan di peramban mereka, antarmuka "
"untuk obyek berderet di admin sekarang mengizinkan obyek berderet untuk "
"secara dinamis ditambahkan dan dipindahkan. Pengguna tanpa perambah diadakan-"
"JavaScript akan melihat tidak ada perubahan di perilaku dari obyek berderet."

msgid "New ``now`` template tag format specifier characters: ``c`` and ``u``"
msgstr ""
"Bentuk etiket cetakan ``Now`` baru menentukan karakter: ``c`` dan ``u``"

msgid ""
"The argument to the :ttag:`now` has gained two new format characters: ``c`` "
"to specify that a datetime value should be formatted in ISO 8601 format, and "
"``u`` that allows output of the microseconds part of a datetime or time "
"value."
msgstr ""
"Argumen pada :ttag:`now` telah mendapatkan dua bentuk karakter baru: ``c`` "
"untuk menentukan bahwa nilai tanggal waktu harus dibentukkan dalam bentuk "
"ISO 8601, dan ``u`` yang mengizinkan keluaran dari bagian mikrodetik dari "
"nilai tanggal waktu atau waktu."

msgid ""
"These are also available in others parts like the :tfilter:`date` and :"
"tfilter:`time` template filters, the ``humanize`` template tag library and "
"the new `format localization`_ framework."
msgstr ""
"Ini juga tersedia di bagian lain seperti tfilter:`date` dan :tfilter:`time` "
"template filters, pustaka etiket cetakan ``humanize`` dan kerangka kerja "
"`format localization`_ baru."

msgid "Backwards-incompatible changes in 1.2"
msgstr "Perubahan bertentangan kebelakang di 1.2"

msgid ""
"Wherever possible the new features above have been introduced in a backwards-"
"compatible manner per :doc:`our API stability policy </misc/api-stability>` "
"policy. This means that practically all existing code which worked with "
"Django 1.1 will continue to work with Django 1.2; such code will, however, "
"begin issuing warnings (see below for details)."
msgstr ""
"Dimanapun memungkinkan fitur baru diatas telah diperkenalkan dalam sikap "
"kesesuaian kebelakang per kebijakan :doc:`our API stability policy </misc/"
"api-stability>`. Ini berarti bahwa sebenarnya semua kode yang ada yang "
"bekerja dengan Django 1.1 akan berlanjut bekerja dengan Django 1.2; kode itu "
"akan, bagaimanapun, mulai menerbitkan peringatan (lihat dibaah untuk "
"rincian)."

msgid ""
"However, a handful of features *have* changed in ways that, for some users, "
"will be immediately backwards-incompatible. Those changes are detailed below."
msgstr ""
"Bagaimanapun, segenggam dari fitur-fitur *telah* berubah di cara-cara itu, "
"untuk beberapa pengguna, akan segera ketidaksesuaian kebelakang. Perubahan-"
"perubahan tersebut dirinci dibawah."

msgid "CSRF Protection"
msgstr "Proteksi CSRF"

msgid ""
"We've made large changes to the way CSRF protection works, detailed in :doc:"
"`the CSRF documentation </ref/csrf>`. Here are the major changes you should "
"be aware of:"
msgstr ""
"Kami telah membuat perubahan besar pada cara perlindungan CSRF bekerja, "
"rincian di :doc:`the CSRF documentation </ref/csrf>`. Ini adalah perubahan "
"utama anda harus sadari:"

msgid ""
"``CsrfResponseMiddleware`` and ``CsrfMiddleware`` have been deprecated and "
"will be removed completely in Django 1.4, in favor of a template tag that "
"should be inserted into forms."
msgstr ""
"``CsrfResponseMiddleware`` dan ``CsrfMiddleware`` telah diusangkan dan akan "
"dipindahkan sepenuhnya di Django 1.4, dalam mendukung dari etiket cetakan "
"yang harus dimasukkan kedalam formulir."

msgid ""
"All contrib apps use a ``csrf_protect`` decorator to protect the view. This "
"requires the use of the ``csrf_token`` template tag in the template. If you "
"have used custom templates for contrib views, you MUST READ THE UPGRADE "
"INSTRUCTIONS to fix those templates."
msgstr ""
"Semua aplikasi bantuan menggunakan penghias ``csrf_protect`` untuk "
"melindungi tampilan. Ini mewajibkan penggunaan dari etiket cetakan "
"``csrf_token`` di cetakan. Jika anda telah menggunakan cetakan penyesuaian "
"untuk tampilan bantuan, anda HARUS MEMBACA PERINTAH PENINGKATAN untuk "
"memperbaiki cetakan tersebut."

msgid "Documentation removed"
msgstr "Dokumentasi dipindahkan"

msgid ""
"The upgrade notes have been removed in current Django docs. Please refer to "
"the docs for Django 1.3 or older to find these instructions."
msgstr ""
"Catatan peningkatan telah dipindahkan di dokumen Django saat ini. Silahkan "
"mengacu ke dokumen untuk Django 1.3 atau lebih lama untuk menemukan perintah-"
"perintah ini."

msgid ""
"``CsrfViewMiddleware`` is included in ``MIDDLEWARE_CLASSES`` by default. "
"This turns on CSRF protection by default, so views that accept POST requests "
"need to be written to work with the middleware. Instructions on how to do "
"this are found in the CSRF docs."
msgstr ""
"``CsrfViewMiddleware`` disertakan dalam ``MIDDLEWARE_CLASSES`` secara "
"awalan. Ini mengubah perlindungan CSRF secara awalan, sehingga tampilan yang "
"menerima permintaan POST butuh ditulis untuk bekerja dengan middleware. "
"Petunjuk-petunjuk pada bagaimana melakukan ini ditemukan dalam dokumen CSRF."

msgid ""
"All of the CSRF has moved from contrib to core (with backwards compatible "
"imports in the old locations, which are deprecated and will cease to be "
"supported in Django 1.4)."
msgstr ""
"Semua CSRF telah dipindahkan dari bantuan ke inti (dengan impor kesesuaian "
"kebelakang di tempat lama, yang diusangkan dan akan berhenti didukung di "
"Django 1.4)."

msgid "``get_db_prep_*()`` methods on ``Field``"
msgstr "Metode ``get_db_prep_*()`` pada ``Field``"

msgid ""
"Prior to Django 1.2, a custom ``Field`` had the option of defining several "
"functions to support conversion of Python values into database-compatible "
"values. A custom field might look something like::"
msgstr ""
"Sebelum DJango 1.2, ``Field`` penyesuaian mempunyai pilihan dari menentukan "
"beberapa fungsi untuk mendukung perubahan dari nilai-nilai Python kedalam "
"nilai-nilai basisdata-sesuai. Bidang penyesuaian mungkin terlihat seperti::"

msgid ""
"In 1.2, these three methods have undergone a change in prototype, and two "
"extra methods have been introduced::"
msgstr ""
"Di 1.2, ketiga metode ini telah menjalani perubahan di purwa rupa, dan dua "
"tambahan metode telah diperkenalkan:"

msgid ""
"These changes are required to support multiple databases -- ``db_type`` and "
"``get_db_prep_*`` can no longer make any assumptions regarding the database "
"for which it is preparing. The ``connection`` argument now provides the "
"preparation methods with the specific connection for which the value is "
"being prepared."
msgstr ""
"Perubahan ini dibutuhkan untuk mendukuna banyak basisdata -- ``db_type`` dan "
"``get_db_prep_*`` dapat tidak lagi membuat perandaian apapun mengenai "
"basisdata untuk dimana itu dipersiapkan. Argumen ``connection`` sekarang "
"menyediakan metode persiapan dengan hubungan khusus untuk nilai mana sedang "
"dipesiapkan."

msgid ""
"The two new methods exist to differentiate general data-preparation "
"requirements from requirements that are database-specific. The ``prepared`` "
"argument is used to indicate to the database-preparation methods whether "
"generic value preparation has been performed. If an unprepared (i.e., "
"``prepared=False``) value is provided to the ``get_db_prep_*()`` calls, they "
"should invoke the corresponding ``get_prep_*()`` calls to perform generic "
"data preparation."
msgstr ""
"Dua metode baru yang ada untuk membedakan persyaratan persiapan-data umum "
"dari persyaratan yang merupakan basisdata-khusus. Argumen ``prepared`` "
"digunakan untuk menunjukkan pada metode persiapan-basisdata apakah persiapan "
"nilai umum telah dilakukan. Jika nilai tidak dipersiapkan (yaitu "
"``prepared=False``) disediakan pada panggilan ``get_db_prep_*()``, mereka "
"harus meminta panggilan ``get_prep_*()`` yang sesuai untuk melakukan "
"persiapan data umum."

msgid ""
"We've provided conversion functions that will transparently convert "
"functions adhering to the old prototype into functions compatible with the "
"new prototype. However, these conversion functions will be removed in Django "
"1.4, so you should upgrade your ``Field`` definitions to use the new "
"prototype as soon as possible."
msgstr ""
"Kami telah menyediakan fungsi perubahan yang akan secara terbuka merubah "
"fungsi berpegang pada purwa rupa lama kedalam fungsi sesuai dengan purwa "
"rupa baru. Bagimanapun, fungsi perubahan ini akan dipindahkan di Django 1.4, "
"jadi anda harus meningkatkan pengertian ``Field`` anda untuk menggunakan "
"purwa rupa baru secepat mungkin."

msgid ""
"If your ``get_db_prep_*()`` methods made no use of the database connection, "
"you should be able to upgrade by renaming ``get_db_prep_value()`` to "
"``get_prep_value()`` and ``get_db_prep_lookup()`` to ``get_prep_lookup()``. "
"If you require database specific conversions, then you will need to provide "
"an implementation ``get_db_prep_*`` that uses the ``connection`` argument to "
"resolve database-specific values."
msgstr ""
"Jika metode ``get_db_prep_*()`` anda membuat tidak ada penggunaan hubungan "
"basisdata, anda harus dapat meningkatkan dengan menamai kembali "
"``get_db_prep_value()`` menjadi ``get_prep_value()`` dan "
"``get_db_prep_lookup()`` menjadi ``get_prep_lookup()``. Jika anda "
"membutuhkan perubahan khusus basisdata, kemudian anda akan butuh menyediakan "
"sebuah penerapan ``get_db_prep_*`` yang menggunakan argumen ``connection`` "
"untuk menyelesaikan nilai-nilai basisdata-khsuus."

msgid "Stateful template tags"
msgstr "Etiket cetakan mempertahan keadaan"

msgid ""
"Template tags that store rendering state on their ``Node`` subclass have "
"always been vulnerable to thread-safety and other issues; as of Django 1.2, "
"however, they may also cause problems when used with the new :ref:`cached "
"template loader<template-loaders>`."
msgstr ""
"Etiket cetakan yang menyimpan keadaan membangun pada subkelas ``Node`` "
"mereka selalu rentan pada thread-safety dan masalah-masalah lain; seperti "
"Django 1.2, bagaimanapun, mereka juga menyebabkan masalah ketika digunakan "
"dengan :ref:`cached template loader<template-loaders>` baru."

msgid ""
"All of the built-in Django template tags are safe to use with the cached "
"loader, but if you're using custom template tags that come from third party "
"packages, or from your own code, you should ensure that the ``Node`` "
"implementation for each tag is thread-safe. For more information, see :ref:"
"`template tag thread safety considerations<template_tag_thread_safety>`."
msgstr ""
"Semua etiket cetakan Django siap-pakai adalah aman untuk digunakan dengan "
"pemuat disimpan sementara, tetapi jika anda sedang menggunakan etiket "
"cetakan penyesuaian yang datang dari paket pihak ketiga, atau dari kode anda "
"sendiri, anda harus memastikan bahwa penerapan ``Node`` untuk setiap etiket "
"adalah thread-safe. Untuk informasi lebih, lihat :ref:`template tag thread "
"safety considerations<template_tag_thread_safety>`."

msgid ""
"You may also need to update your templates if you were relying on the "
"implementation of Django's template tags *not* being thread safe. The :ttag:"
"`cycle` tag is the most likely to be affected in this way, especially when "
"used in conjunction with the :ttag:`include` tag. Consider the following "
"template fragment:"
msgstr ""

msgid "with a ``subtemplate.html`` that reads:"
msgstr ""

msgid "Using the non-thread-safe, pre-Django 1.2 renderer, this would output:"
msgstr ""

msgid "Using the thread-safe Django 1.2 renderer, you will instead get:"
msgstr ""

msgid ""
"This is because each rendering of the :ttag:`include` tag is an independent "
"rendering. When the :ttag:`cycle` tag was not thread safe, the state of the :"
"ttag:`cycle` tag would leak between multiple renderings of the same :ttag:"
"`include`. Now that the :ttag:`cycle` tag is thread safe, this leakage no "
"longer occurs."
msgstr ""
"Ini karena setiap membangun dari etiket :ttag:`include` adalah sebuah "
"membangun berdiri sendiri. Ketika etiket :ttag:`cycle` bukan thread safe, "
"keadaan dari etiket :ttag:`cycle` akan bocor diantara banyak membangun dari :"
"ttag:`include` yang sama. Sekarang etiket :ttag:`cycle` adalah thread safe, "
"kebocoran ini tidak lagi muncul."

msgid "``user_passes_test``, ``login_required`` and ``permission_required``"
msgstr "``user_passes_test``, ``login_required`` dan ``permission_required``"

msgid ""
"``django.contrib.auth.decorators`` provides the decorators "
"``login_required``, ``permission_required`` and ``user_passes_test``. "
"Previously it was possible to use these decorators both on functions (where "
"the first argument is 'request') and on methods (where the first argument is "
"'self', and the second argument is 'request'). Unfortunately, flaws were "
"discovered in the code supporting this: it only works in limited "
"circumstances, and produces errors that are very difficult to debug when it "
"does not work."
msgstr ""
"``django.contrib.auth.decorators`` menyediakan penghias ``login_required``, "
"``permission_required`` dan ``user_passes_test``. Sebelumnya itu "
"dimungkinkan menggunakan kedua penghias ini pada fungsi (dimana argumen "
"partama adalah 'request') dan pada cara (dimana argumen pertama adalah "
"'self', dan argumen kedua adalah 'request'). Sayangnya, kelemahan-kelemahan "
"ditemukan di kode yang mendukung ini: itu hanya bekerja di keadaan terbatas, "
"dan menghasilkan kesalahan yang sangat sulit untuk dicari kesalahan ketika "
"itu tidak bekerja."

msgid ""
"For this reason, the 'auto adapt' behavior has been removed, and if you are "
"using these decorators on methods, you will need to manually apply :func:"
"`django.utils.decorators.method_decorator` to convert the decorator to one "
"that works with methods. For example, you would change code from this::"
msgstr ""
"Untuk alasan ini, perilaku 'auto adapt' telah dipindahkan, dan jika anda "
"sedang menggunakan penghias pada metode, anda akan butuh untuk secara manual "
"memberlakukan :func:`django.utils.decorators.method_decorator` untuk merubah "
"penghias menjadi satu yang bekerja dengan cara ini. Sebagai contoh, anda "
"akan merubah kode dari ini::"

msgid "or::"
msgstr "atau::"

msgid ""
"For those of you who've been following the development trunk, this change "
"also applies to other decorators introduced since 1.1, including "
"``csrf_protect``, ``cache_control`` and anything created using "
"``decorator_from_middleware``."
msgstr ""
"Untuk siapa dari anda yang telah mengikuti tempat pengembangan, perubahan "
"ini juga berlaku ke penghias lain diperkenalkan sejak 1.1, termasuk "
"``csrf_protect``, ``cache_control`` dan apapun dibuat menggunakan "
"``decorator_from_middleware``."

msgid ":ttag:`if` tag changes"
msgstr "Etiket :ttag:`if` berubah"

msgid ""
"Due to new features in the :ttag:`if` template tag, it no longer accepts "
"'and', 'or' and 'not' as valid **variable** names. Previously, these strings "
"could be used as variable names. Now, the keyword status is always enforced, "
"and template code such as ``{% if not %}`` or ``{% if and %}`` will throw a "
"``TemplateSyntaxError``. Also, ``in`` is a new keyword and so is not a valid "
"variable name in this tag."
msgstr ""
"Dikarenakan fitur baru di etiket cetakan :ttag:`if`, itu tidak lagi menerima "
"'and', 'or' dan 'not' sebagai nama-nama **variabel** yang sah. Sebelumnya, "
"deretan karakter ini dapat digunakan sebagai nama-nama variabel. Sekarang, "
"keadaan kata kunci selau dipaksakan, dan kode cetakan seperti ``{% if not %}"
"`` atau ``{% if and %}`` akan melemparkan sebuah ``TemplateSyntaxError``. "
"Juga, ``in`` adalah sebuah kata kunci baru dan jadi nama variabel tidak sah "
"di etiket ini."

msgid "``LazyObject``"
msgstr "``LazyObject``"

msgid ""
"``LazyObject`` is an undocumented-but-often-used utility class used for "
"lazily wrapping other objects of unknown type."
msgstr ""
"``LazyObject`` adalah sebuah kelas kegunaan tidak-terdokumentasikan-tetapi-"
"sering-digunakan digunakan untuk pembungkusan malas obyek lain dari jenis "
"tidak dikenal."

msgid ""
"In Django 1.1 and earlier, it handled introspection in a non-standard way, "
"depending on wrapped objects implementing a public method named "
"``get_all_members()``. Since this could easily lead to name clashes, it has "
"been changed to use the standard Python introspection method, involving "
"``__members__`` and ``__dir__()``."
msgstr ""
"Di Django 1.1 dan paling awal, itu menangani interspeksi di jalan bukan-"
"standar, tergantung pada obyek dibungkus menerapkan metode umum dinamai "
"``get_all_members()``. Karena ini dapat dengan mudah membawa ke tabrakan "
"nama, itu telah dirubah untuk menggunakan metode standar interospeksi "
"Python, melibatkan ``__members__`` dan ``__dir__()``."

msgid ""
"If you used ``LazyObject`` in your own code and implemented the "
"``get_all_members()`` method for wrapped objects, you'll need to make a "
"couple of changes:"
msgstr ""
"Jika anda menggunakan ``LazyObject`` di kode anda sendiri dan menerapkan "
"metode ``get_all_members()`` untuk obyek dibungkus, anda akan butuh membuat "
"sepasang perubahan:"

msgid ""
"First, if your class does not have special requirements for introspection (i."
"e., you have not implemented ``__getattr__()`` or other methods that allow "
"for attributes not discoverable by normal mechanisms), you can simply remove "
"the ``get_all_members()`` method. The default implementation on "
"``LazyObject`` will do the right thing."
msgstr ""
"Pertama, jika kelas anda tidak mempunyai persyaratan khusus untuk "
"interospeksi (yaitu, anda belum menerapkan ``__getattr__()`` atau metode "
"lainnya yang mengizinkan untuk atribut tidak dapat ditemukan oleh mekanisme "
"biasa), anda dapat cukup memindahkan metode ``get_all_members()``. Penerapan "
"awal pada ``LazyObject`` akan melakukan hal benar."

msgid ""
"If you have more complex requirements for introspection, first rename the "
"``get_all_members()`` method to ``__dir__()``. This is the standard "
"introspection method for Python 2.6 and above. If you require support for "
"Python versions earlier than 2.6, add the following code to the class::"
msgstr ""
"Jika anda mempunyai persyaratan lebih rumit untuk interospeksi, pertama "
"namai kembali metode ``get_all_members()`` pada ``__dir__()``. Ini adalah "
"metode interospeksi standar untuk Python 2.6 dan diatas. Jika anda "
"membutuhkan dukungan untuk versi awal Python dari 2.6, tambah kode berikut "
"pada kelas::"

msgid "``__dict__`` on model instances"
msgstr "``__dict__`` pada instance model"

msgid ""
"Historically, the ``__dict__`` attribute of a model instance has only "
"contained attributes corresponding to the fields on a model."
msgstr ""
"Secara riwayat, atribut ``__dict__`` dari sebuah instance model mempunyai "
"hanya atribut mengandung hubungan ke bidang pada sebuah model."

msgid ""
"In order to support multiple database configurations, Django 1.2 has added a "
"``_state`` attribute to object instances. This attribute will appear in "
"``__dict__`` for a model instance. If your code relies on iterating over "
"``__dict__`` to obtain a list of fields, you must now be prepared to handle "
"or filter out the ``_state`` attribute."
msgstr ""
"Untuk mendukung konfigurasi banyak basisdata, Django 1.2 telah menambahkan "
"sebuah atribut ``_state`` pada instance obyek. Atribut ini akan muncul di "
"``__dict__`` untuk sebuah instance model. Jika kode anda bergantung pada "
"perulangan terhadap ``__dict__`` untuk mengambil daftar dari bidang, anda "
"harus sekarang bersiap untuk menangani atau menyaring atribut ``_state``."

msgid ""
"The exit status code of the test runners (``tests/runtests.py`` and ``python "
"manage.py test``) no longer represents the number of failed tests, because a "
"failure of 256 or more tests resulted in a wrong exit status code. The exit "
"status code for the test runner is now 0 for success (no failing tests) and "
"1 for any number of test failures. If needed, the number of test failures "
"can be found at the end of the test runner's output."
msgstr ""
"Kode keadaan keluar dari pejalan percobaan (``tests/runtests.py`` dan "
"``python manage.py test``) tidak lagi mewakili angka dari percobaan gagal, "
"karena sebuah kegagalan dari 256 atau percobaan lebih dihasilkan di kode "
"keadaan keluar yang salah. Kode keadaan keluar untuk pejalan percobaan "
"sekarang 0 untuk berhasil (tidak ada kegagalan percobaan) dan 1 untuk angka "
"apapun dari kegagalan percobaan. Jika dibutuhkan, angka kegagalan percobaan "
"dapat ditemukan pada akhir dari keluaran pejalan percobaan."

msgid ""
"To fix bugs with cookies in Internet Explorer, Safari, and possibly other "
"browsers, our encoding of cookie values was changed so that the comma and "
"semicolon are treated as non-safe characters, and are therefore encoded as "
"``\\054`` and ``\\073`` respectively.  This could produce backwards "
"incompatibilities, especially if you are storing comma or semi-colon in "
"cookies and have JavaScript code that parses and manipulates cookie values "
"client-side."
msgstr ""
"Untuk memperbaiki kesalahan-kesalahan dengan kue di Internet Explorer, "
"Safari, dan kemungkinan peramban lain, penyandian kami dari nilai kue telah "
"berubah sehingga koma dan titik koma diperlakukan sebagai karakter bukan-"
"aman, dan karena itu disandikan masing-masing sebagai ``\\054`` dan "
"``\\073``. Ini dapat menghasilkan ketidaksesuaian kebelakang, khususnya jika "
"anda menyimpan koma atau titik-koma di kue dan mempunyai kode JavaScript "
"yang mengurai dan merubah nilai kue di sisi-klien."

msgid "``ModelForm.is_valid()`` and ``ModelForm.errors``"
msgstr "``ModelForm.is_valid()`` dan ``ModelForm.errors``"

msgid ""
"Much of the validation work for ModelForms has been moved down to the model "
"level. As a result, the first time you call ``ModelForm.is_valid()``, access "
"``ModelForm.errors`` or otherwise trigger form validation, your model will "
"be cleaned in-place. This conversion used to happen when the model was "
"saved. If you need an unmodified instance of your model, you should pass a "
"copy to the ``ModelForm`` constructor."
msgstr ""
"Kebanyakan dari pengecekan bekerja untuk ModelForm telah diturunkan ke "
"tingkat model. Sebagai hasilnya, pertama kali anda memanggil ``ModelForm."
"is_valid()``, akses ``ModelForm.errors`` atau jika tidak memicu pengecekan "
"formulir, mode anda akan dibersihkan di-tempat. Perubahan ini biasanya "
"terjadi ketika model telah disimpan. Jika anda butuh instance tidak dirubah "
"dari model adan, anda harus melewati salinan pada pembangun ``ModelForm``."

msgid "``BooleanField`` on MySQL"
msgstr "``BooleanField`` pada MySQL"

msgid ""
"In previous versions of Django, a model's ``BooleanField`` under MySQL would "
"return its value as either ``1`` or ``0``, instead of ``True`` or ``False``; "
"for most people this wasn't a problem because ``bool`` is a subclass of "
"``int`` in Python. In Django 1.2, however, ``BooleanField`` on MySQL "
"correctly returns a real ``bool``.  The only time this should ever be an "
"issue is if you were expecting the ``repr`` of a ``BooleanField`` to print "
"``1`` or ``0``."
msgstr ""
"Di versi sebelumnya dari Django, ``BooleanField`` model dibawah MySQL akan "
"mengemblikan nilainya sebagai baik ``1`` atau ``0``, sebagai gantinya dari "
"``True`` atau ``False``; untuk kebanyakan orang ini bukanlah sebuah masalah "
"karena ``bool`` adalah sebuah subkelas dari ``int`` di Python. Di Django "
"1.2, bagaimanapun, ``BooleanField`` pada MySQL dengan ebnar mengembalikan "
"``bool`` asli. Hanya waktu ini harus pernah menjadi masalah jika anda "
"mengharapkan ``repr`` dari sebuah ``BooleanField`` untuk mencetak ``1`` atau "
"``0``."

msgid "Changes to the interpretation of ``max_num`` in FormSets"
msgstr "Perubahan pada penafsiran dari ``max_num`` di FormSets"

msgid ""
"As part of enhancements made to the handling of FormSets, the default value "
"and interpretation of the ``max_num`` parameter to the :ref:`django.forms."
"formsets.formset_factory() <formsets-max-num>` and :ref:`django.forms.models."
"modelformset_factory() <model-formsets-max-num>` functions has changed "
"slightly. This change also affects the way the :attr:`~django.contrib.admin."
"InlineModelAdmin.max_num` argument is used for inline admin objects."
msgstr ""
"Sebagai bagian dari peningkatan dibuat untuk menangani FormSet, nilai awal "
"dan penafsiran dari parameter ``max_num`` ke fungsi :ref:`django.forms."
"formsets.formset_factory() <formsets-max-num>` dan :ref:`django.forms.models."
"modelformset_factory() <model-formsets-max-num>` telah dirubah sedikit. "
"Perubahan ini juga mempengaruhi cara argumen :attr:`~django.contrib.admin."
"InlineModelAdmin.max_num` digunakan untuk obyek admin berderet."

msgid ""
"Previously, the default value for ``max_num`` was ``0`` (zero). FormSets "
"then used the boolean value of ``max_num`` to determine if a limit was to be "
"imposed on the number of generated forms. The default value of ``0`` meant "
"that there was no default limit on the number of forms in a FormSet."
msgstr ""
"Sebelumnya, nilai awalan untuk ``max_num`` adalah ``0`` (nol). FormSet "
"kemudian menggunakan nilai boolean dari ``max_num`` untuk menentukan jika "
"sebuah batasan untuk dikenakan pada sejumlah formulir yang dibangkitkan. "
"Nilai awalan dari ``0`` berarti bahwa tidak ada batasan awalan pada sejumlah "
"formulir di FormSet."

msgid ""
"Starting with 1.2, the default value for ``max_num`` has been changed to "
"``None``, and FormSets will differentiate between a value of ``None`` and a "
"value of ``0``. A value of ``None`` indicates that no limit on the number of "
"forms is to be imposed; a value of ``0`` indicates that a maximum of 0 forms "
"should be imposed. This doesn't necessarily mean that no forms will be "
"displayed -- see the :ref:`ModelFormSet documentation <model-formsets-max-"
"num>` for more details."
msgstr ""
"Dimulai dengan 1.2, nilai awalan untuk ``max_num`` telah dirubah menjadi "
"``None``, dan FormSet akan berbeda diantara sebuah nilai ``None`` dan sebuah "
"nilai ``0``. Sebuah nilai ``None`` mengindikasikan bahwa tidak ada batasan "
"pada angka dari formulir yang akan dikenakan; sebuah nilai ``0`` "
"mengindikasikan bahwa maksimum dari 0 formulir harus dikenakan. Ini tidak "
"berarti bahwa tidak ada formulir akan ditampilkan -- lihat :ref:"
"`ModelFormSet documentation <model-formsets-max-num>` untuk rincian lebih."

msgid ""
"If you were manually specifying a value of ``0`` for ``max_num``, you will "
"need to update your FormSet and/or admin definitions."
msgstr ""
"Jika anda secara manual menentukan sebuah nilai dari ``0`` untuk "
"``max_num``, anda akan butuh memperbaharui FormSet anda dan/atau pengertian "
"admin."

msgid ":ref:`1.2-js-assisted-inlines`"
msgstr ":ref:`1.2-js-assisted-inlines`"

msgid "``email_re``"
msgstr "``email_re``"

msgid ""
"An undocumented regular expression for validating email addresses has been "
"moved from ``django.form.fields`` to ``django.core.validators``. You will "
"need to update your imports if you are using it."
msgstr ""
"Regular expression tidak terdokumentasi untuk pengecekan alamat surel telah "
"dipindahkan dari ``django.form.fields`` ke ``django.core.validators``. Anda "
"akan butuh memperbaharui impor anda jika anda menggunakannya."

msgid "Features deprecated in 1.2"
msgstr "Fitur usang di 1.2"

msgid ""
"Finally, Django 1.2 deprecates some features from earlier releases. These "
"features are still supported, but will be gradually phased out over the next "
"few release cycles."
msgstr ""
"Akhirnya, Django 1.2 mengusangkan beberapa fitur dari terbitan paling awal. "
"Fitur-fitur ini masih didukung, tetapi akan secara bertahap selama beberapa "
"siklus terbitan selanjutnya."

msgid ""
"Code taking advantage of any of the features below will raise a "
"``PendingDeprecationWarning`` in Django 1.2. This warning will be silent by "
"default, but may be turned on using Python's :mod:`warnings` module, or by "
"running Python with a ``-Wd`` or ``-Wall`` flag."
msgstr ""
"Kode mengambil keuntungan dari fitur-fitur dibawah akan memunculkan sebuah "
"``PendingDeprecationWarning`` di Django 1.2. Peringatan ini akan diam secara "
"awalan, tetapi mungkin menyala menggunakan modul :mod:`warnings` Python, "
"atau dengan menjalankan Python dengan sebuah bendera ``-Wd`` atau ``-Wall``."

msgid ""
"In Django 1.3, these warnings will become a ``DeprecationWarning``, which is "
"*not* silent. In Django 1.4 support for these features will be removed "
"entirely."
msgstr ""
"Di Django 1.3, peringatan ini akan menjadi sebuah ``DeprecationWarning``, "
"yang *tidak* diam. Di Django 1.4 dukungan untuk fitur-fitur ini akan "
"dipindahkan seluruhnya."

msgid ""
"For more details, see the documentation :doc:`Django's release process </"
"internals/release-process>` and our :doc:`deprecation timeline </internals/"
"deprecation>`.`"
msgstr ""
"Untuk lebih rinci, lihat dokumentasi :doc:`pengolahan terbitan Django </"
"internals/release-process>` dan :doc:`linimasa bantahan </internals/"
"deprecation>`.` kami"

msgid "Specifying databases"
msgstr "Menentukan basisdata"

msgid ""
"Prior to Django 1.2, Django used a number of settings to control access to a "
"single database. Django 1.2 introduces support for multiple databases, and "
"as a result the way you define database settings has changed."
msgstr ""
"Sebelumnya pada Django 1.2, Django menggunakan sejumlah pengaturan untuk "
"mengendalikan akses ke basisdata tunggal. Django 1.2 memperkenalkan dukungan "
"untuk basisdata banyak, dan sebagai sebuah hasil cara anda menentukan "
"pengaturan basisdata telah berubah."

msgid ""
"Any existing Django settings file will continue to work as expected until "
"Django 1.4. Until then, old-style database settings will be automatically "
"translated to the new-style format."
msgstr ""
"Tiap pengaturan Django yang ada akan lanjut bekerja sesuai diharapkan sampai "
"Django 1.4. Sampai kemudian pengaturan basisdata gaya-lama akan otomatis "
"diterjemahkan ke bentuk gaya-baru."

msgid ""
"In the old-style (pre 1.2) format, you had a number of ``DATABASE_`` "
"settings in your settings file. For example::"
msgstr ""
"Di bentuk gaya-lama (pra 1.2), anda mempunyai sejumlah pengaturan "
"``DATABASE_`` di berkas pengaturan anda. Sebagai contoh::"

msgid ""
"These settings are now in a dictionary named :setting:`DATABASES`. Each item "
"in the dictionary corresponds to a single database connection, with the name "
"``'default'`` describing the default database connection. The setting names "
"have also been shortened. The previous sample settings would now look like "
"this::"
msgstr ""
"Pengaturan ini sekarang di kamus dinamai :setting:`DATABASES`. Setiap barang "
"di kamus berhubungan ke hubungan basisdata tunggal, dengan nama "
"``'default'`` menggambarkan hubungan basisdata awalan. Nama pengaturan juga "
"diperpendek. Contoh pengaturan sebelumnya akan terlihat seperti ini::"

msgid "This affects the following settings:"
msgstr "Ini mempengaruhi pengaturan berikut:"

msgid "Old setting"
msgstr "Pengaturan lama"

msgid "New Setting"
msgstr "Pengaturan Baru"

msgid "``DATABASE_ENGINE``"
msgstr ""

msgid ":setting:`ENGINE <DATABASE-ENGINE>`"
msgstr ":setting:`ENGINE <DATABASE-ENGINE>`"

msgid "``DATABASE_HOST``"
msgstr ""

msgid ":setting:`HOST`"
msgstr ":setting:`HOST`"

msgid "``DATABASE_NAME``"
msgstr ""

msgid ":setting:`NAME`"
msgstr ":setting:`NAME`"

msgid "``DATABASE_OPTIONS``"
msgstr ""

msgid ":setting:`OPTIONS`"
msgstr ":setting:`OPTIONS`"

msgid "``DATABASE_PASSWORD``"
msgstr ""

msgid ":setting:`PASSWORD`"
msgstr ":setting:`PASSWORD`"

msgid "``DATABASE_PORT``"
msgstr ""

msgid ":setting:`PORT`"
msgstr ":setting:`PORT`"

msgid "``DATABASE_USER``"
msgstr ""

msgid ":setting:`USER`"
msgstr ":setting:`USER`"

msgid "``TEST_DATABASE_CHARSET``"
msgstr ""

msgid ":setting:`TEST_CHARSET`"
msgstr ":setting:`TEST_CHARSET`"

msgid "``TEST_DATABASE_COLLATION``"
msgstr ""

msgid ":setting:`TEST_COLLATION`"
msgstr ":setting:`TEST_COLLATION`"

msgid "``TEST_DATABASE_NAME``"
msgstr ""

msgid ":setting:`TEST_NAME`"
msgstr ":setting:`TEST_NAME`"

msgid ""
"These changes are also required if you have manually created a database "
"connection using ``DatabaseWrapper()`` from your database backend of choice."
msgstr ""
"Perubahan ini juga dibutuhkan jika anda manual membuat sambungan basisdata "
"menggunakan ``DatabaseWrapper()`` dari pilihan backend basisdata anda."

msgid ""
"In addition to the change in structure, Django 1.2 removes the special "
"handling for the built-in database backends. All database backends must now "
"be specified by a fully qualified module name (i.e., ``django.db.backends."
"postgresql_psycopg2``, rather than just ``postgresql_psycopg2``)."
msgstr ""
"Sebagai tambahan pada perubahan di struktur, Django 1.2 memindahkan "
"penanganan khusus untuk backend basisdata siap-pakai. Semua backend "
"basisdata harus sekarang ditentukan oleh sepenuhnya nama modul berkualitas "
"(yaitu, ``django.db.backends.postgresql_psycopg2``, daripada hanya "
"``postgresql_psycopg2``)."

msgid "``postgresql`` database backend"
msgstr "Backend basisdata ``postgresql``"

msgid ""
"The ``psycopg1`` library has not been updated since October 2005. As a "
"result, the ``postgresql`` database backend, which uses this library, has "
"been deprecated."
msgstr ""
"Pustaka ``psycopg1`` belum diperbaharui sejak Oktober 2005. Sebagai "
"hasilnya, backend basisdata ``postgresql``, yang menggunakan pustaka ini, "
"telah diusangkan."

msgid ""
"If you are currently using the ``postgresql`` backend, you should migrate to "
"using the ``postgresql_psycopg2`` backend. To update your code, install the "
"``psycopg2`` library and change the :setting:`ENGINE <DATABASE-ENGINE>` "
"setting to use ``django.db.backends.postgresql_psycopg2``."
msgstr ""
"Jika anda saat ini menggunakan backend ``postgresql``, anda harus pindah "
"menggunakan backend ``postgresql_psycopg2``. Untuk memperbaharui kode anda, "
"pasang pustaka ``psycopg2`` dan rubah pengaturan :setting:`ENGINE <DATABASE-"
"ENGINE>` untuk menggunakan ``django.db.backends.postgresql_psycopg2``."

msgid "CSRF response-rewriting middleware"
msgstr "Middleware menulis kembali-tanggapan CSRF"

msgid ""
"``CsrfResponseMiddleware``, the middleware that automatically inserted CSRF "
"tokens into ``POST`` forms in outgoing pages, has been deprecated in favor "
"of a template tag method (see above), and will be removed completely in "
"Django 1.4. ``CsrfMiddleware``, which includes the functionality of "
"``CsrfResponseMiddleware`` and ``CsrfViewMiddleware``, has likewise been "
"deprecated."
msgstr ""
"``CsrfResponseMiddleware``, middleware yang secara otomatis memasukkan token "
"CSRF kedalam formulir ``POST`` dalam halaman keluar, telah diusangkan "
"mendukung dari sebuah metode etiket cetakan (lihat diatas), dan akan "
"dipindahkan seluruhnya di Django 1.4. ``CsrfMiddleware``, yang menyertakan "
"kegunaan dari ``CsrfResponseMiddleware`` dan ``CsrfViewMiddleware``, begitu "
"juga telah diusangkan."

msgid ""
"Also, the CSRF module has moved from contrib to core, and the old imports "
"are deprecated, as described in the upgrading notes."
msgstr ""
"Juga, modul CSRF telah pindah dari bantuan ke inti, dan impor lama telah "
"diusangkan, seperti dijabarkan di catatan peningkatan."

msgid "``SMTPConnection``"
msgstr "``SMTPConnection``"

msgid ""
"The ``SMTPConnection`` class has been deprecated in favor of a generic email "
"backend API. Old code that explicitly instantiated an instance of an "
"SMTPConnection::"
msgstr ""
"Kelas ``SMTPConnection`` telah diusangkan dalam mendukung dari API backend "
"surel umum. Kode lama yang secara eksplisit sipakai sebuah instance dari "
"sebuah SMTPConnection::"

msgid ""
"...should now call :meth:`~django.core.mail.get_connection()` to instantiate "
"a generic email connection::"
msgstr ""
"...harus sekarang memanggil :meth:`~django.core.mail.get_connection()` untuk "
"mencontohkan hubungan surel umum::"

msgid ""
"Depending on the value of the :setting:`EMAIL_BACKEND` setting, this may not "
"return an SMTP connection. If you explicitly require an SMTP connection with "
"which to send email, you can explicitly request an SMTP connection::"
msgstr ""
"Tergantung pada nilai dari pengaturan :setting:`EMAIL_BACKEND`, ini mungkin "
"tidak mengembalikan hubungan SMTP. Jika anda secara eksplisit membutuhkan "
"sebuah hubungan SMTP dengan yang mengirim surel, anda dapat secara eksplisit "
"meminta sebuah hubungan SMTP::"

msgid ""
"If your call to construct an instance of ``SMTPConnection`` required "
"additional arguments, those arguments can be passed to the :meth:`~django."
"core.mail.get_connection()` call::"
msgstr ""
"Jika panggilan anda untuk membangun sebuah instance dari ``SMTPConnection`` "
"membutuhkan argumen tambahan, argumen-argumen itu dapat dilewatkan ke "
"panggilan :meth:`~django.core.mail.get_connection()`::"

msgid "User Messages API"
msgstr "API Pesan Pengguna"

msgid ""
"The API for storing messages in the user ``Message`` model (via ``user."
"message_set.create``) is now deprecated and will be removed in Django 1.4 "
"according to the standard :doc:`release process </internals/release-"
"process>`."
msgstr ""
"API untuk menyimpan pesan-pesan di model ``Message`` pengguna (melalui "
"``user.message_set.create``) sekarang diusangkan dan akan dipindahkan di "
"Django 1.4 menurut ke standar :doc:`release process </internals/release-"
"process>`."

msgid "To upgrade your code, you need to replace any instances of this::"
msgstr "Untuk meningkatkan kode anda, anda butuh mengganti instance dari ini::"

msgid "...with the following::"
msgstr "...dengan berikut::"

msgid ""
"Additionally, if you make use of the method, you need to replace the "
"following::"
msgstr ""
"Tambahan, jika anda menggunakan metode , anda butuh mengganti berikut::"

msgid "...with::"
msgstr "...dengan::"

msgid ""
"For more information, see the full :doc:`messages documentation </ref/"
"contrib/messages>`. You should begin to update your code to use the new API "
"immediately."
msgstr ""
"Untuk informasi lebih, lihat :doc:`messages documentation </ref/contrib/"
"messages>` penuh. Anda harus mulai memperbaharui kode anda untuk menggunakan "
"API baru segera mungkin."

msgid "Date format helper functions"
msgstr "Fungsi pembantu bentuk tanggal"

msgid ""
"``django.utils.translation.get_date_formats()`` and ``django.utils."
"translation.get_partial_date_formats()`` have been deprecated in favor of "
"the appropriate calls to ``django.utils.formats.get_format()``, which is "
"locale-aware when ``USE_L10N`` is set to ``True``, and falls back to default "
"settings if set to ``False``."
msgstr ""

msgid "To get the different date formats, instead of writing this::"
msgstr "Untuk mendapatkan bentuk tanggal berbeda, alih-alih menulis ini::"

msgid "...use::"
msgstr "...gunakan::"

msgid "Or, when directly formatting a date value::"
msgstr "Atau, ketika secara langsung membentuk sebuah nilai tanggal::"

msgid "The same applies to the globals found in ``django.forms.fields``:"
msgstr ""
"Hal yang sama berlaku pada global ditemukan di ``django.forms.fields``:"

msgid "``DEFAULT_DATE_INPUT_FORMATS``"
msgstr "``DEFAULT_DATE_INPUT_FORMATS``"

msgid "``DEFAULT_TIME_INPUT_FORMATS``"
msgstr "``DEFAULT_TIME_INPUT_FORMATS``"

msgid "``DEFAULT_DATETIME_INPUT_FORMATS``"
msgstr "``DEFAULT_DATETIME_INPUT_FORMATS``"

msgid ""
"Use ``django.utils.formats.get_format()`` to get the appropriate formats."
msgstr ""
"Gunakan ``django.utils.formats.get_format()`` untuk mendapatkan bentuk yang "
"sesuai."

msgid "Function-based test runners"
msgstr "Pejalan percobaan berdasarkan-fungsi"

msgid ""
"Django 1.2 changes the test runner tools to use a class-based approach. Old "
"style function-based test runners will still work, but should be updated to "
"use the new :ref:`class-based runners <topics-testing-test_runner>`."
msgstr ""
"Django 1.2 merubah alat pejalan percobaan untuk menggunakan pendekatan "
"berdasarkan-kelas. Pejalan percobaan berdasarkan fungsi gaya lama akan masih "
"bekerja, tetapi harus diperbaharui untuk menggunakan :ref:`class-based "
"runners <topics-testing-test_runner>` baru."

msgid "``Feed`` in ``django.contrib.syndication.feeds``"
msgstr "``Umpan balik`` di ``django.contrib.syndication.feeds``"

msgid ""
"The ``django.contrib.syndication.feeds.Feed`` class has been replaced by "
"the :class:`django.contrib.syndication.views.Feed` class. The old ``feeds."
"Feed`` class is deprecated, and will be removed in Django 1.4."
msgstr ""
"Kelas ``django.contrib.syndication.feeds.Feed`` telah diganti oleh kelas :"
"class:`django.contrib.syndication.views.Feed`. Kelas ``feeds.Feed`` lama "
"diusangkan, dan akan dipindakan di Django 1.4."

msgid ""
"The new class has an almost identical API, but allows instances to be used "
"as views. For example, consider the use of the old framework in the "
"following :doc:`URLconf </topics/http/urls>`::"
msgstr ""
"Kelas baru mempunyai hampir API yang mirip, tetapi mengizinkan instance "
"digunakan sebagai tampilan. Sebagai contoh, pertimbangkan menggunakna "
"kerangka kerja lama di :doc:`URLconf </topics/http/urls>` berikut::"

msgid ""
"Using the new Feed class, these feeds can be deployed directly as views::"
msgstr ""
"Menggunakan kelas Feed, umpan ini dapat disebarkan secara langsung sebagai "
"tampilan::"

msgid ""
"If you currently use the ``feed()`` view, the ``LatestEntries`` class would "
"often not need to be modified apart from subclassing the new :class:`~django."
"contrib.syndication.views.Feed` class. The exception is if Django was "
"automatically working out the name of the template to use to render the "
"feed's description and title elements (if you were not specifying the "
"``title_template`` and ``description_template`` attributes). You should "
"ensure that you always specify ``title_template`` and "
"``description_template`` attributes, or provide ``item_title()`` and "
"``item_description()`` methods."
msgstr ""
"Jika anda saat ini menggunakan tampilan ``feed()``, kelas ``LatestEntries`` "
"akan sering tidak butuk dirubah sebagian dari mensubkelaskan kelas :class:"
"`~django.contrib.syndication.views.Feed` baru. Pengecualian adalah jika "
"Django otomatis bekerja dengan nama dari cetakan untuk digunakan membangun "
"gambaran umpan dan judul unsur (jika anda tidak sedang menentukan atribut "
"``title_template`` dan ``description_template``). Anda harus memastikan "
"bahwa anda selalu menentukan atribut ``title_template`` dan "
"``description_template``, atau menyediakan metode ``item_title()`` and "
"``item_description()``."

msgid ""
"However, ``LatestEntriesByCategory`` uses the ``get_object()`` method with "
"the ``bits`` argument to specify a specific category to show. In the new :"
"class:`~django.contrib.syndication.views.Feed` class, ``get_object()`` "
"method takes a ``request`` and arguments from the URL, so it would look like "
"this::"
msgstr ""
"Bagaimanapun, ``LatestEntriesByCategory`` menggunakan metode "
"``get_object()`` dengan argumen ``bits`` untuk menentukan kategori khusus "
"untuk ditampilkan. Di kelas :class:`~django.contrib.syndication.views.Feed` "
"baru, metode ``get_object()`` mengambil sebuah ``request`` dan argumen dari "
"URL, jadi itu akan terlihat seperti ini::"

msgid ""
"Additionally, the ``get_feed()`` method on ``Feed`` classes now take "
"different arguments, which may impact you if you use the ``Feed`` classes "
"directly. Instead of just taking an optional ``url`` argument, it now takes "
"two arguments: the object returned by its own ``get_object()`` method, and "
"the current ``request`` object."
msgstr ""
"Tambahannya, metode ``get_feed()`` pada kelas-kelas ``Feed`` sekarang "
"mengambil argumen berbeda, yang mungkin mempengaruhi anda jika anda "
"menggunakan kelas-kelas ``Feed``. Daripada hanya mengambil sebuah pilihan "
"argumen ``url``, itu sekarang dapat mengambil dua argumen: obyek "
"dikembalikan oleh metode ``get_object()`` itu sendiri, dan obyek ``request`` "
"saat ini."

msgid ""
"To take into account ``Feed`` classes not being initialized for each "
"request, the ``__init__()`` method now takes no arguments by default. "
"Previously it would have taken the ``slug`` from the URL and the ``request`` "
"object."
msgstr ""
"Untuk memperhitungkan kelas-kelas ``Feed`` tidak sedang diinisialisasi untuk "
"setiap permintaan, metode ``__init__()`` sekarang tidak mengambil argumen "
"secara awalan. Sebelumnya itu akan mengambil ``slug`` dari URL dan obyek "
"``request``."

msgid ""
"In accordance with `RSS best practices`_, RSS feeds will now include an "
"``atom:link`` element. You may need to update your tests to take this into "
"account."
msgstr ""
"Sesuai dengan `RSS best practices`_, umpan RSSakan sekarang menyertakan "
"sebuah unsur ``atom:link``. Anda mungkin butuh untuk memperbaharui percobaan "
"anda untuk mengambil ini kedalam akun. "

msgid ""
"For more information, see the full :doc:`syndication framework documentation "
"</ref/contrib/syndication>`."
msgstr ""
"Untuk informasi lebih, lihat :doc:`syndication framework documentation </ref/"
"contrib/syndication>` penuh."

msgid "Technical message IDs"
msgstr "ID pesan teknis"

msgid ""
"Up to version 1.1 Django used technical message IDs to provide localizers "
"the possibility to translate date and time formats. They were translatable :"
"term:`translation strings <translation string>` that could be recognized "
"because they were all upper case (for example :setting:`DATETIME_FORMAT`, :"
"setting:`DATE_FORMAT`, :setting:`TIME_FORMAT`). They have been deprecated in "
"favor of the new :doc:`/topics/i18n/formatting` infrastructure that allows "
"localizers to specify that information in a ``formats.py`` file in the "
"corresponding ``django/conf/locale/<locale name>/`` directory."
msgstr ""
"Sampai versi 1.1 Django menggunakan ID pesan teknis untuk menyediakan "
"pelokalan kemungkinan untuk menterjemahkan bentuk tanggal dan waktu. Mereka "
"dapat diterjemahkan :term:`translation strings <translation string>` yang "
"dapat dikenali karena mereka semua huruf besar (sebagai contoh :setting:"
"`DATETIME_FORMAT`, :setting:`DATE_FORMAT`, :setting:`TIME_FORMAT`). Mereka "
"telah diusangkan dalam mendukung infrastruktur :doc:`/topics/i18n/"
"formatting` baru yang mengizinkan pelokal menentukan bahwa informasi di "
"sebuah berkas ``formats.py`` di direktori ``django/conf/locale/<locale name>/"
"`` sama."

msgid ""
"To allow support for multiple databases, the GeoDjango database internals "
"were changed substantially.  The largest backwards-incompatible change is "
"that the module ``django.contrib.gis.db.backend`` was renamed to :mod:"
"`django.contrib.gis.db.backends`, where the full-fledged :ref:`spatial "
"database backends <spatial-backends>` now exist.  The following sections "
"provide information on the most-popular APIs that were affected by these "
"changes."
msgstr ""
"Untuk mengizinkan dukungan banyak basisdata, internal basisdata GeoDjango "
"berubah secara mendasar. Perubahan terbesar ketidaksesuaian-kebelakang "
"adalah bahwa modul ``django.contrib.gis.db.backend`` telah dinamai kembali "
"menjadi :mod:`django.contrib.gis.db.backends`, dimana sepenuhnya :ref:"
"`spatial database backends <spatial-backends>` sekarang ada. Bagian berikut "
"menyediakan informasi pada PI paling-terkenal yang terpengaruhi oleh "
"perubahan ini."

msgid "``SpatialBackend``"
msgstr "``SpatialBackend``"

msgid ""
"Prior to the creation of the separate spatial backends, the ``django.contrib."
"gis.db.backend.SpatialBackend`` object was provided as an abstraction to "
"introspect on the capabilities of the spatial database.  All of the "
"attributes and routines provided by ``SpatialBackend`` are now a part of the "
"``ops`` attribute of the database backend."
msgstr ""
"Sebelum pembuatan dari backend spasial terpisah, obyek ``django.contrib.gis."
"db.backend.SpatialBackend`` disediakan sebagai sebuah abstraksi untuk "
"menginterospeksi pada kemampuan dari basisdata spasial. Semua atribut dan "
"rutin disediakan oleh ``SpatialBackend`` sekarang bagian dari atribut "
"``ops`` dari backend basisdata."

msgid ""
"The old module ``django.contrib.gis.db.backend`` is still provided for "
"backwards-compatibility access to a ``SpatialBackend`` object, which is just "
"an alias to the ``ops`` module of the *default* spatial database connection."
msgstr ""
"Modul lama ``django.contrib.gis.db.backend`` masih disediakan untuk akses "
"kesesuaian-kebelakang pada sebuah obyek ``SpatialBackend``, yang hanya "
"sebuah nama lain pada modul ``ops`` dari *awalan* hubungan basisdata spasial."

msgid ""
"Users that were relying on undocumented modules and objects within ``django."
"contrib.gis.db.backend``, rather the abstractions provided by "
"``SpatialBackend``, are required to modify their code. For example, the "
"following import which would work in 1.1 and below::"
msgstr ""
"Pengguna yang bergantung pada modul tidak terdokumentasi dan obyek dalam "
"``django.contrib.gis.db.backend``, daripada abstraksi disediakan oleh "
"``SpatialBackend``, dibutuhkan untuk merubah kode mereka. Sebagai contoh, "
"impor berikut akan bekerja di 1.1 dan dibawah::"

msgid "Would need to be changed::"
msgstr "Akan perlu dirubah::"

msgid "``SpatialRefSys`` and ``GeometryColumns`` models"
msgstr "Model ``SpatialRefSys`` dan ``GeometryColumns``."

msgid ""
"In previous versions of GeoDjango, :mod:`django.contrib.gis.db.models` had "
"``SpatialRefSys`` and ``GeometryColumns`` models for querying the OGC "
"spatial metadata tables ``spatial_ref_sys`` and ``geometry_columns``, "
"respectively."
msgstr ""
"Di versi sebelumnya dari GeoDjango, :mod:`django.contrib.gis.db.models` "
"mempunyai model ``SpatialRefSys`` dan ``GeometryColumns`` untuk meminta "
"metadata spasial OGC tabel ``spatial_ref_sys`` dan ``geometry_columns``, "
"masing-masing."

msgid ""
"While these aliases are still provided, they are only for the *default* "
"database connection and exist only if the default connection is using a "
"supported spatial database backend."
msgstr ""
"Selagi nama lain ini masih disediakan, mereka hanya untuk *awalan* hubungan "
"basisdata dan hanya yang ada jika hubungan awalan menggunakan backend "
"basisdata spasial terdukung."

msgid ""
"Because the table structure of the OGC spatial metadata tables differs "
"across spatial databases, the ``SpatialRefSys`` and ``GeometryColumns`` "
"models can no longer be associated with the ``gis`` application name.  Thus, "
"no models will be returned when using the ``get_models`` method in the "
"following example:"
msgstr ""

msgid ""
"To get the correct ``SpatialRefSys`` and ``GeometryColumns`` for your "
"spatial database use the methods provided by the spatial backend:"
msgstr ""

msgid ""
"When using the models returned from the ``spatial_ref_sys()`` and "
"``geometry_columns()`` method, you'll still need to use the correct database "
"alias when querying on the non-default connection. In other words, to ensure "
"that the models in the example above use the correct database::"
msgstr ""
"Ketika menggunakan model dikembalikan dari metode ``spatial_ref_sys()`` dan "
"``geometry_columns()``, anda masih dapat menggunakan nama lain basisdata "
"yang tepat ketika meminta pada hubungan bukan-awalan. Dengan kata lain, "
"untuk memastikan bahwa model di contoh diatas menggunakan basisdata tepat::"

msgid "Language code ``no``"
msgstr "Kode bahasa ``no``"

msgid ""
"The currently used language code for Norwegian Bokmål ``no`` is being "
"replaced by the more common language code ``nb``."
msgstr ""
"Kode bahasa yang digunakan saat ini untuk Norwegia Bokmål 11no11 sedang "
"diganti oleh kode bahasa lebih umum ``nb``."

msgid "Function-based template loaders"
msgstr "Pemuat cetakan berdasarkan fungsi"

msgid ""
"Django 1.2 changes the template loading mechanism to use a class-based "
"approach. Old style function-based template loaders will still work, but "
"should be updated to use the new class-based template loaders."
msgstr ""
"Django 1.2 merubah mekanisme pemuat cetakan untuk menggunakan pendekatan "
"berdasarkan-kelas. Pemuat cetakan berdasarkan-fungsi gaya lama akan amsih "
"bekerja, tetapi harus diperbaharui untuk menggunakan pemuat cetakan "
"berdasarkan kelas yang baru."

msgid "Django 1.2.1 release notes"
msgstr "Catatan terbitan Django 1.2.1"

msgid ""
"Django 1.2.1 was released almost immediately after 1.2.0 to correct two "
"small bugs: one was in the documentation packaging script, the other was a :"
"ticket:`bug <13560>` that affected datetime form field widgets when "
"localization was enabled."
msgstr ""

msgid "Django 1.2.2 release notes"
msgstr "Catatan terbitan Django 1.2.2"

msgid "Welcome to Django 1.2.2!"
msgstr "Selamat datang di Django 1.2.2!"

msgid ""
"This is the second \"bugfix\" release in the Django 1.2 series, improving "
"the stability and performance of the Django 1.2 codebase."
msgstr ""
"Ini adalah terbitan \"bugfix\" kedua di rangkaian Django 1.2, memperbaiki "
"kestabilan dan penampilan dari basis kode Django 1.2."

msgid ""
"Django 1.2.2 maintains backwards compatibility with Django 1.2.1, but "
"contain a number of fixes and other improvements. Django 1.2.2 is a "
"recommended upgrade for any development or deployment currently using or "
"targeting Django 1.2."
msgstr ""
"Django 1.2.2 merawat kesesuaian kebelakang dengan Django 1.2.1, tetapi "
"mengandung sejumlah perbaikan dan pembetulan lainnya. Django 1.2.2 adalah "
"peningkatan yang dianjurkan untuk setiap pengembangan atau penyebaran saat "
"ini menggunakan atau menyasar Django 1.2."

msgid ""
"For full details on the new features, backwards incompatibilities, and "
"deprecated features in the 1.2 branch, see the :doc:`/releases/1.2`."
msgstr ""
"Untuk rincian penuh pada fitur baru, ketidaksesuaian kebelakang, dan fitur "
"diusangkan di cabang 1.2, lihat :doc:`/releases/1.2`."

msgid ""
"Ordinarily, a point release would not include new features, but in the case "
"of Django 1.2.2, we have made an exception to this rule."
msgstr ""
"Aslinya, titik terbitan akan tidak menyertakan fitur baru, tetapi dalam "
"kasus Django 1.2.2, kami telah membuat sebuah pengecualian pada aturan ini."

msgid ""
"In order to test a bug fix that forms part of the 1.2.2 release, it was "
"necessary to add a feature -- the ``enforce_csrf_checks`` flag -- to the :"
"ref:`test client <test-client>`. This flag forces the test client to perform "
"full CSRF checks on forms. The default behavior of the test client hasn't "
"changed, but if you want to do CSRF checks with the test client, it is now "
"possible to do so."
msgstr ""
"Untuk mencoba perbaikan kesalahan yang membentuk bagian dari terbitan 1.2.2, "
"itu perlu untuk menambahkan sebuah fitur -- bendera ``enforce_csrf_checks`` "
"-- pada :ref:`test client <test-client>`. Bendera ini memaksa klien "
"percobaan untuk melakukan pemeriksaan CSRF pada formulir. Perilaku awalan "
"dari percobaan klien belum berubah, tetapi jika anda ingin melakukan "
"pemeriksaan CSRF dengan percobaan klien, sekarang memungkinkan melakukannya."

msgid "Django 1.2.3 release notes"
msgstr "Catatan terbitan Django 1.2.3"

msgid ""
"Django 1.2.3 fixed a couple of release problems in the 1.2.2 release and was "
"released two days after 1.2.2."
msgstr ""
"Django 1.2.3 diperbaiki sepasang dari masalah terbitan di terbitan 1.2.2 dan "
"telah diterbitkan dua hari setelah 1.2.2."

msgid "This release corrects the following problems:"
msgstr "Terbitan ini memperbaiki masalah berikut:"

msgid ""
"The :commit:`patch <7f84657b6b2243cc787bdb9f296710c8d13ad0bd>` applied for "
"the security issue covered in Django 1.2.2 caused issues with non-ASCII "
"responses using CSRF tokens."
msgstr ""

msgid ""
"The patch also caused issues with some forms, most notably the user-editing "
"forms in the Django administrative interface."
msgstr ""
"Tambalan juga menyebabkan masalah dengan beberapa formulir, terutama "
"formulir penyuntingan-pengguna di antarmuka administratif Django."

msgid "The packaging manifest did not contain the full list of required files."
msgstr ""
"Wujud pemaketan tidak mengandung daftar penuh dari berkas-berkas dibutuhkan."

msgid "Django 1.2.4 release notes"
msgstr "Catatan terbitan Django 1.2.4"

msgid "Welcome to Django 1.2.4!"
msgstr "Selamat datang di Django 1.2.4!"

msgid ""
"This is the fourth \"bugfix\" release in the Django 1.2 series, improving "
"the stability and performance of the Django 1.2 codebase."
msgstr ""
"Ini adalah terbitan \"bugfix\" keempat di rangkaian Django 1.2, memperbaiki "
"kestabilan dan penampilan dari kode dasar Django 1.2."

msgid ""
"With one exception, Django 1.2.4 maintains backwards compatibility with "
"Django 1.2.3. It also contains a number of fixes and other improvements. "
"Django 1.2.4 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.2."
msgstr ""
"Dengan satu pengecualian, Django 1.2.4 merawat kesesuaian kebelakang dengan "
"Django 1.2.3. Itu juga mengandung sejumlah perbaikan dan pembetulan lainnya. "
"Django 1.2.4 adalah peningkatan dianjurkan untuk setiap pengembangan dan "
"penyebaran saat ini menggunakan atau menyasar Django 1.2."

msgid ""
"Ordinarily, a point release would not include new features, but in the case "
"of Django 1.2.4, we have made an exception to this rule."
msgstr ""
"Aslinya, titik terbitan akan tidak menyertakan fitur baru, tetapi dalam "
"kasus Django 1.2.4, kami telah membuat sebuah pengecualian pada aturan ini."

msgid ""
"One of the bugs fixed in Django 1.2.4 involves a set of circumstances "
"whereby a running a test suite on a multiple database configuration could "
"cause the original source database (i.e., the actual production database) to "
"be dropped, causing catastrophic loss of data. In order to provide a fix for "
"this problem, it was necessary to introduce a new setting -- :setting:"
"`TEST_DEPENDENCIES` -- that allows you to define any creation order "
"dependencies in your database configuration."
msgstr ""
"Satu dari perbaikan kesalahan di Django 1.2.4 melibatkan sekumpulan dari "
"keadaan dimana deretan percobaan berjalan pada konfigurasi banyak basisdata "
"dapat menyebabkan sumber asli basisdata (yaitu, basisdata produksi "
"sebenarnya) untuk dibuang, menyebabkan bencana kehilangan data. Untuk "
"menyediakan sebuah perbaikan untuk masalah ini, itu sangat penting untuk "
"memperkenalkan pengaturan baru -- :setting:`TEST_DEPENDENCIES` -- yang "
"mengizinkan anda untuk menentukan apapun pembuatan urutan ketergantungan di "
"konfigurasi basisdata anda."

msgid ""
"Most users -- even users with multiple-database configurations -- need not "
"be concerned about the data loss bug, or the manual configuration of :"
"setting:`TEST_DEPENDENCIES`. See the :ticket:`original problem report "
"<14415>` documentation on :ref:`controlling the creation order of test "
"databases <topics-testing-creation-dependencies>` for details."
msgstr ""

msgid ""
"The function-based :setting:`TEST_RUNNER` previously used to execute the "
"GeoDjango test suite, ``django.contrib.gis.tests.run_gis_tests``, was "
"finally deprecated in favor of a class-based test runner, ``django.contrib."
"gis.tests.GeoDjangoTestSuiteRunner``, added in this release."
msgstr ""
":setting:`TEST_RUNNER` berdasarkan-fungsi sebelumnya digunakan untuk "
"menjalankan deretan percobaan GeoDjango, ``django.contrib.gis.tests."
"run_gis_tests``, akhirnya diusangkan dalam mendukung pejalan percobaan "
"berdasarkan kelas, ``django.contrib.gis.tests.GeoDjangoTestSuiteRunner``, "
"ditambahkan di terbitan ini."

msgid ""
"In addition, the GeoDjango test suite is now included when :ref:`running the "
"Django test suite <running-unit-tests>` with ``runtests.py`` and using :ref:"
"`spatial database backends <spatial-backends>`."
msgstr ""
"Sebagai tambahan, deretan percobaan GeoDjango sekarang disertakan ketika :"
"ref:`running the Django test suite <running-unit-tests>` dengan ``runtests."
"py`` dan menggunakan :ref:`spatial database backends <spatial-backends>`."

msgid "Django 1.2.5 release notes"
msgstr "Catatan terbitan Django 1.2.5"

msgid "Welcome to Django 1.2.5!"
msgstr "Selamat datang di Django 1.2.5!"

msgid ""
"This is the fifth \"bugfix\" release in the Django 1.2 series, improving the "
"stability and performance of the Django 1.2 codebase."
msgstr ""
"Ini adalah terbitan \"bugfix\" kelima di rangkaian Django 1.2, memperbaiki "
"kestabilan dan penampilan dari kode dasar Django 1.2."

msgid ""
"With four exceptions, Django 1.2.5 maintains backwards compatibility with "
"Django 1.2.4. It also contains a number of fixes and other improvements. "
"Django 1.2.5 is a recommended upgrade for any development or deployment "
"currently using or targeting Django 1.2."
msgstr ""
"Dengan empat pengecualian, Django 1.2.5 merawat kesesuaian kebelakang dengan "
"Django 1.2.4. Itu juga mengandung sejumlah perbaikan dan pembetulan lainnya. "
"Django 1.2.5 adalah peningkatan dianjurkan untuk setiap pengembangan dan "
"penyebaran saat ini menggunakan atau menyasar Django 1.2."

msgid "FileField no longer deletes files"
msgstr "FileField tidak lagi menghapus berkas-berkas"

msgid ""
"In earlier Django versions, when a model instance containing a :class:"
"`~django.db.models.FileField` was deleted, :class:`~django.db.models."
"FileField` took it upon itself to also delete the file from the backend "
"storage. This opened the door to several potentially serious data-loss "
"scenarios, including rolled-back transactions and fields on different models "
"referencing the same file. In Django 1.2.5, :class:`~django.db.models."
"FileField` will never delete files from the backend storage. If you need "
"cleanup of orphaned files, you'll need to handle it yourself (for instance, "
"with a custom management command that can be run manually or scheduled to "
"run periodically via e.g. cron)."
msgstr ""
"Dalam versi paling awal Django, ketika sebuah instance model mengandung "
"sebuah :class:`~django.db.models.FileField` dihapus, :class:`~django.db."
"models.FileField` mengambil itu pada dirinya sendiri untuk juga menghapus "
"berkas dari penyimpanan backend. Ini membuat pintu untuk beberapa "
"kemungkinan skenario kehilangan-data serius, termasuk transaksi dikembalikan "
"dan bidang-bidang pada model berbeda mengacu berkas sama. Di Django 1.2.5, :"
"class:`~django.db.models.FileField` tidak pernah menghapus berkas dari "
"penyimpanan backend. Jika anda butuh membersihkan berkas-berkas tidak "
"bertuan, anda akan butuh menangani nya anda sendiri (sebagai contoh, dengan "
"perintah pengelolaan penyesuaian yang dapat berjalan secara manual atau "
"terjadwal untuk berjalan secara periodeik melalui sebagai contoh cron)."

msgid "Use of custom SQL to load initial data in tests"
msgstr "Penggunaan SQL penyesuaian untuk memuat data inisial di percobaan"

msgid ""
"Django provides a custom SQL hooks as a way to inject hand-crafted SQL into "
"the database synchronization process. One of the possible uses for this "
"custom SQL is to insert data into your database. If your custom SQL contains "
"``INSERT`` statements, those insertions will be performed every time your "
"database is synchronized. This includes the synchronization of any test "
"databases that are created when you run a test suite."
msgstr ""
"Django menyediakan pengkaitan SQL penyesuaian sebagai sebuah cara untuk "
"memasukkan SQL buah-tangan kedalam pengeolahan sinkronisasi basisdata. Satu "
"dari kemungkinan penggunaan untuk penyesuaian SQL ini adalah memasukkan data "
"kedalam basisdata anda. Jika SQL penyesuaian anda mengangund pernyataan "
"``INSERT``, pemasukan tersebut akan dilakukan setiap kali basisdata anda "
"disinkronkan. Ini termasuk sinkronisasi dari tiap basisdata percobaan yang "
"dibuat ketika anda menjalankan deretan percobaan."

msgid ""
"However, in the process of testing the Django 1.3, it was discovered that "
"this feature has never completely worked as advertised. When using database "
"backends that don't support transactions, or when using a "
"TransactionTestCase, data that has been inserted using custom SQL will not "
"be visible during the testing process."
msgstr ""
"Bagaimanapun, dalam pengolahan dari percobaan Django 1.3, itu ditemukan "
"bahwa fitur ini tidak pernah lengkap bekerja seperti diiklan. Ketika "
"menggunakan backend basisdata yang tidak mendukung transaksi, atau ketika "
"menggunakan TransactionTestCase, data yang telah dimasukkan menggunakan SQL "
"penyesuaian tidak akan nampak selama pengolahan percobaan."

msgid ""
"Unfortunately, there was no way to rectify this problem without introducing "
"a backwards incompatibility. Rather than leave SQL-inserted initial data in "
"an uncertain state, Django now enforces the policy that data inserted by "
"custom SQL will *not* be visible during testing."
msgstr ""
"Sayangnya, tidak ada cara untuk memperbaiki masalah ini tanpa memperkenalkan "
"ketidaksesuaian kebelakang. Daripada membiarkan data inisial dimasukkan SQL "
"di keadaan yang tidak menentu, Django sekarang memaksa kebijakan yang data "
"dimasukkan oleh SQL penyesuaian *tidak* akan nampak selama percobaan."

msgid ""
"This change only affects the testing process. You can still use custom SQL "
"to load data into your production database as part of the ``syncdb`` "
"process. If you require data to exist during test conditions, you should "
"either insert it using :ref:`test fixtures <topics-testing-fixtures>`, or "
"using the ``setUp()`` method of your test case."
msgstr ""
"Perubahan ini hanya mempengaruhi pengolahan percobaan. Anda masih dapat "
"menggunakan SQL penyesuaian untuk memuat data kedalam basisdata produksi "
"anda sebagai bagian dari pengolahan ``syncdb``. Jika anda membutuhkan data "
"untuk ada selama kondisi percobaan, anda harus salah satu memasukkannya "
"menggunakan :ref:`test fixtures <topics-testing-fixtures>`, atau menggunakan "
"metode ``setUp()`` dari kasus percobaan anda."

msgid "ModelAdmin.lookup_allowed signature changed"
msgstr "Tanda tangan ModelAdmin.lookup_allowed berubah"

msgid ""
"Django 1.2.4 introduced a method ``lookup_allowed`` on ``ModelAdmin``, to "
"cope with a security issue (changeset :commit:`[15033] "
"<85207a245bf09fdebe486b4c7bbcb65300f2a693>`). Although this method was never "
"documented, it seems some people have overridden ``lookup_allowed``, "
"especially to cope with regressions introduced by that changeset. While the "
"method is still undocumented and not marked as stable, it may be helpful to "
"know that the signature of this function has changed."
msgstr ""

msgid "Django 1.2.6 release notes"
msgstr "Catatan terbitan Django 1.2.6"

msgid "*September 9, 2011*"
msgstr "*September 9, 2011*"

msgid "Welcome to Django 1.2.6!"
msgstr "Selamat datang di Django 1.2.6!"

msgid ""
"This is the sixth bugfix/security release in the Django 1.2 series, fixing "
"several security issues present in Django 1.2.5.  Django 1.2.6 is a "
"recommended upgrade for all users of any Django release in the 1.2.X series."
msgstr ""
"Ini adalah terbitan keamanan/perbaikan kesalahan keenam di rangkaian Django "
"1.2, memperbaiki beberapa masalah keamanan yang hadir di Django 1.2.5. "
"Django 1.2.6 adalah peningkatan yang dianjurkan untuk semua pengguna dari "
"tiap terbitan Django di rangkaian 1.2.X."

msgid ""
"For a full list of issues addressed in this release, see the `security "
"advisory`_."
msgstr ""
"Untuk daftar penuh dari masalah-masalah yang dialamatkan, lihat `security "
"advisory`_."

msgid "Django 1.2.7 release notes"
msgstr "Catatan terbitan Django 1.2.7"

msgid "*September 10, 2011*"
msgstr "*September 10, 2011*"

msgid "Welcome to Django 1.2.7!"
msgstr "Selamat datang di Django 1.2.7!"

msgid ""
"This is the seventh bugfix/security release in the Django 1.2 series. It "
"replaces Django 1.2.6 due to problems with the 1.2.6 release tarball. Django "
"1.2.7 is a recommended upgrade for all users of any Django release in the "
"1.2.X series."
msgstr ""
"Ini adalah terbitan keamanan/perbaikan kesalahan ketujuh di rangkaian Django "
"1.2. Itu mengganti Django 1.2.6 karena masalah dengan tarball terbitan "
"1.2.6. Django 1.2.7 adalah peningkatan  dianjurkan untuk semua pengguna dari "
"tiap terbitan Django di rangkaian 1.2.X."

msgid "For more information, see the `release advisory`_."
msgstr "Untuk informasi lebih, lihat `release advisory`_."

msgid "Django 1.3 release notes"
msgstr "Catatan terbitan Django 1.3"

msgid "*March 23, 2011*"
msgstr "*23 Maret 2011*"

msgid "Welcome to Django 1.3!"
msgstr "Selamat datang di Django 1.3!"

msgid ""
"Nearly a year in the making, Django 1.3 includes quite a few :ref:`new "
"features <whats-new-1.3>` and plenty of bug fixes and improvements to "
"existing features. These release notes cover the new features in 1.3, as "
"well as some :ref:`backwards-incompatible changes <backwards-incompatible-"
"changes-1.3>` you'll want to be aware of when upgrading from Django 1.2 or "
"older versions."
msgstr ""
"Hampir setahun dalam membuat, The same applies1.3 termasuk sedikit :ref:`new "
"features <whats-new-1.3>` dan cukup dari perbaikan kesalahan dan peningkatan "
"pada fitur-fitur yang ada. Catatan terbitan ini melingkupi fitur-fitur baru "
"di 1.2, dan juga beberapa :ref:`backwards-incompatible changes <backwards-"
"incompatible-changes-1.3>` anda ingin disadari dari ketika meningkatkan dari "
"Django 1.2 atau versi terlama."

msgid ""
"Django 1.3's focus has mostly been on resolving smaller, long-standing "
"feature requests, but that hasn't prevented a few fairly significant new "
"features from landing, including:"
msgstr ""
"Fokus Django 1.3 kebanyakan pada memecahkan lebih kecil, permintaan fitur "
"yang lama berdiri, tetapi tidak mencegah sedikit fitur baru cukup dignifikan "
"dari mendarat, termasuk:"

msgid "A framework for writing `class-based views`_."
msgstr "Sebuah kerangka untuk menulis `tampilan berbasis-kelas`_."

msgid "Built-in support for `using Python's logging facilities`_."
msgstr "Dukungan siap-pakai untuk `using Python's logging facilities`_."

msgid "Contrib support for `easy handling of static files`_."
msgstr "Dukungan bantuan untuk `easy handling of static files`_."

msgid ""
"Django's testing framework now supports (and ships with a copy of) `the "
"unittest2 library`_."
msgstr ""
"Kerangka kerja percobaan Django sekarang mendukung (dan dibekali dengan "
"salinan dari) `the unittest2 library`_."

msgid ""
"Wherever possible, new features are introduced in a backwards-compatible "
"manner per :doc:`our API stability policy </misc/api-stability>` policy. As "
"a result of this policy, Django 1.3 :ref:`begins the deprecation process for "
"some features <deprecated-features-1.3>`."
msgstr ""

msgid ""
"The release of Django 1.2 was notable for having the first shift in Django's "
"Python compatibility policy; prior to Django 1.2, Django supported any 2.x "
"version of Python from 2.3 up. As of Django 1.2, the minimum requirement was "
"raised to Python 2.4."
msgstr ""
"Terbitan dari The same applies1.2 adalah penting untuk mempunyai pergantian "
"pertama di kebijakan kesesuaian Python Django; sebelum Django 1.2, Django "
"mendukung tiap versi 2.x dari Python mulai 2.3 keatas. Mulai Django 1.2, "
"persyaratan minimal telah dimunculkan pada Python 2.4."

msgid ""
"Django 1.3 continues to support Python 2.4, but will be the final Django "
"release series to do so; beginning with Django 1.4, the minimum supported "
"Python version will be 2.5. A document outlining our full timeline for "
"deprecating Python 2.x and moving to Python 3.x will be published shortly "
"after the release of Django 1.3."
msgstr ""
"Django 1.3 lanjut mendukung Python 2.4, tetapi akan menjadi rangkaian "
"terbitan Django akhir untuk melakukannya; dimuai dengan Django 1.4, versi "
"Python minimal yang didukung akan menjadi 2.5. Sebuah dokumen menguraikan "
"linimasa penuh kami untuk pengusangan Python 2.x dan berpindah ke Python 3.x "
"akan diterbitkan secepatnya setelah terbitan Django 1.3."

msgid "What's new in Django 1.3"
msgstr "Apa yang baru di Django 1.3"

msgid "Class-based views"
msgstr "Tampilan berdasarkan-kelas"

msgid ""
"Django 1.3 adds a framework that allows you to use a class as a view. This "
"means you can compose a view out of a collection of methods that can be "
"subclassed and overridden to provide common views of data without having to "
"write too much code."
msgstr ""
"Django 1.3 menambahkan sebuah keangka kerja yang mengizinkan anda "
"menggunakan kelas sebagai tampilan. Ini berarti anda dapat menyusun tampilan "
"dari kumpulan dari metode yang dapat di subkelaskan dan ditimpa untuk "
"menyesiakan tampilan umum data tanpa harus menulis kode terlalu banyak."

msgid ""
"Analogs of all the old function-based generic views have been provided, "
"along with a completely generic view base class that can be used as the "
"basis for reusable applications that can be easily extended."
msgstr ""
"Analog untuk semua tampilan umum berdasarkan-fungsi lama telah disediakam, "
"bersama dengan kelas dasar tampilan umum lengkap yang dapat digunakan "
"sebagai dasar untuk penggunaan kembali aplikasi yang dapat dengan mudah "
"diperpanjang."

msgid ""
"See :doc:`the documentation on class-based generic views</topics/class-based-"
"views/index>` for more details. There is also a document to help you "
"`convert your function-based generic views to class-based views <https://raw."
"githubusercontent.com/django/django/ea9dc9f4b03ae034c1dc080730422dda7a9c2e47/"
"docs/topics/generic-views-migration.txt>`_."
msgstr ""

msgid "Logging"
msgstr "Pencatatan"

msgid ""
"Django 1.3 adds framework-level support for Python's ``logging`` module.  "
"This means you can now easily configure and control logging as part of your "
"Django project. A number of logging handlers and logging calls have been "
"added to Django's own code as well -- most notably, the error emails sent on "
"an HTTP 500 server error are now handled as a logging activity. See :doc:"
"`the documentation on Django's logging interface </topics/logging>` for more "
"details."
msgstr ""

msgid "Extended static files handling"
msgstr "Memperpanjang penanganan berkas tetap"

msgid ""
"Django 1.3 ships with a new contrib app -- ``django.contrib.staticfiles`` -- "
"to help developers handle the static media files (images, CSS, JavaScript, "
"etc.) that are needed to render a complete web page."
msgstr ""
"Django 1.3 dibekali dengan aplikasi bantuan baru -- ``django.contrib."
"staticfiles`` -- untuk membantu pengembang manangani berkas-berkas media "
"tetap (gambar, CSS, JavaScript, dll.) yang dibutuhkan untuk membangun sebuah "
"halaman jaringan lengkap."

msgid ""
"In previous versions of Django, it was common to place static assets in :"
"setting:`MEDIA_ROOT` along with user-uploaded files, and serve them both at :"
"setting:`MEDIA_URL`. Part of the purpose of introducing the ``staticfiles`` "
"app is to make it easier to keep static files separate from user-uploaded "
"files. Static assets should now go in ``static/`` subdirectories of your "
"apps or in other static assets directories listed in :setting:"
"`STATICFILES_DIRS`, and will be served at :setting:`STATIC_URL`."
msgstr ""
"Di versi sebelummnya, itu adalah tempat umum untuk menempatkan aset tetap "
"di :setting:`MEDIA_ROOT` bersama dengan berkas-berkas diunggah-pengguna, dan "
"melayani mereka kedua di :setting:`MEDIA_URL`. Bagian dari tujuan untuk "
"memperkenalkan aplikasi ``staticfiles`` adalah untuk membuatnya lebih mudah "
"menjaga berkas-berkas tetap terpisah dari berkas-berkas terunggah-pengguna. "
"Aset tetap harus sekarang berada di subdirektori ``static/`` dari aplikasi "
"anda atau di direktori aset tetap lain terdaftar di :setting:"
"`STATICFILES_DIRS`, dan akan dilayani pada :setting:`STATIC_URL`."

msgid ""
"See the :doc:`reference documentation of the app </ref/contrib/staticfiles>` "
"for more details or learn how to :doc:`manage static files </howto/static-"
"files/index>`."
msgstr ""
"Lihat :doc:`reference documentation of the app </ref/contrib/staticfiles>` "
"untuk lebih rinci atau pelajari bagaimana untuk :doc:`manage static files </"
"howto/static-files/index>`."

msgid "``unittest2`` support"
msgstr "Dukungan ``unittest2``"

msgid ""
"Python 2.7 introduced some major changes to the ``unittest`` library, adding "
"some extremely useful features. To ensure that every Django project can "
"benefit from these new features, Django ships with a copy of :pypi:"
"`unittest2`, a copy of the Python 2.7 ``unittest`` library, backported for "
"Python 2.4 compatibility."
msgstr ""

msgid ""
"To access this library, Django provides the ``django.utils.unittest`` module "
"alias. If you are using Python 2.7, or you have installed ``unittest2`` "
"locally, Django will map the alias to the installed version of the "
"``unittest`` library. Otherwise, Django will use its own bundled version of "
"``unittest2``."
msgstr ""

msgid "To take advantage of this alias, simply use::"
msgstr "Untuk mengambil keuntungan dari nama lain ini, cukup gunakan::"

msgid "wherever you would have historically used::"
msgstr "dimanapun anda akan secara riwayat pakai:"

msgid ""
"If you want to continue to use the base ``unittest`` library, you can -- you "
"just won't get any of the nice new ``unittest2`` features."
msgstr ""

msgid "Transaction context managers"
msgstr "Pengelola konteks transaksi"

msgid ""
"Users of Python 2.5 and above may now use transaction management functions "
"as context managers. For example::"
msgstr ""
"Pengguna dari Python 2.5 dan diatas dapat sekarang menggunakan fungsi "
"pengelolaan transaksi sebagai pengelola konteks. Sebagai contoh::"

msgid "Configurable delete-cascade"
msgstr "Dapat dikonfigurasi hapus-menurun"

msgid ""
":class:`~django.db.models.ForeignKey` and :class:`~django.db.models."
"OneToOneField` now accept an :attr:`~django.db.models.ForeignKey.on_delete` "
"argument to customize behavior when the referenced object is deleted. "
"Previously, deletes were always cascaded; available alternatives now include "
"set null, set default, set to any value, protect, or do nothing."
msgstr ""
":class:`~django.db.models.ForeignKey` dan :class:`~django.db.models."
"OneToOneField` sekarang menerima sebuah argumen :attr:`~django.db.models."
"ForeignKey.on_delete` untuk menyesuaikan perilaku ketika obyek diacu "
"dihapus. Sebelumnya, penghapusan selalu menurun; cara lain tersedia sekarang "
"menyertakan setelan null, setel awalan, setel ke tiap tiap nilai, lindungi, "
"atau tidak lakukan apa-apa."

msgid ""
"For more information, see the :attr:`~django.db.models.ForeignKey.on_delete` "
"documentation."
msgstr ""
"Untuk informasi lebih, lihat dokumentasi :attr:`~django.db.models.ForeignKey."
"on_delete`."

msgid "Contextual markers and comments for translatable strings"
msgstr ""
"Penanda kontekstual dan komentar untuk deretan karakter dapat diterjemahkan"

msgid ""
"For translation strings with ambiguous meaning, you can now use the "
"``pgettext`` function to specify the context of the string."
msgstr ""
"Untuk terjemahan dertan karakter dengan arti yang menyangsingkan, anda "
"sekarang dapat menggunakan fungsi ``pgettext``  untuk menentukan konteks "
"dari deretan karakter."

msgid ""
"And if you just want to add some information for translators, you can also "
"add special translator comments in the source."
msgstr ""
"Dan jika anda hanya ingin menambahkan beberapa informasi untuk penterjemah, "
"anda dapat juga menambahkan komentar penterjemah khusus di sumber."

msgid ""
"For more information, see :ref:`contextual-markers` and :ref:`translator-"
"comments`."
msgstr ""
"Untuk informasi lebih, lihat :ref:`contextual-markers` dan :ref:`translator-"
"comments`."

msgid "Improvements to built-in template tags"
msgstr "Perbaikan pada etiket cetakan siap-pakai"

msgid ""
"A number of improvements have been made to Django's built-in template tags:"
msgstr "Sejumlah perbaikan telah dibuat pada etiket cetakan Django siap-pakai:"

msgid ""
"The :ttag:`include` tag now accepts a ``with`` option, allowing you to "
"specify context variables to the included template"
msgstr ""
"Etiket :ttag:`include` sekarang menerima sebuah pilihan ``with``, "
"mengizinkan anda menentukan konteks variabel ke cetakan yang disertakan"

msgid ""
"The :ttag:`include` tag now accepts an ``only`` option, allowing you to "
"exclude the current context from the included context"
msgstr ""
"Etiket :ttag:`include` sekarang menerima sebuah pilihan ``only``, "
"mengizinkan anda tidak menyertakan konteks saat ini dari konteks yang "
"disertakan."

msgid ""
"The :ttag:`with` tag now allows you to define multiple context variables in "
"a single :ttag:`with` block."
msgstr ""
"Etiket :ttag:`with` sekarang mengizinkan anda menentukan banyak konteks "
"variabel dalam blok :ttag:`with` tunggal."

msgid ""
"The :ttag:`load` tag now accepts a ``from`` argument, allowing you to load a "
"single tag or filter from a library."
msgstr ""
"Etiket :ttag:`load` sekarang menerima sebuah argumen ``from``, mengizinkan "
"anda memuat etiket tunggal atau penyaring dari sebuah pustaka."

msgid "TemplateResponse"
msgstr "TemplateResponse"

msgid ""
"It can sometimes be beneficial to allow decorators or middleware to modify a "
"response *after* it has been constructed by the view. For example, you may "
"want to change the template that is used, or put additional data into the "
"context."
msgstr ""
"Itu dapat terkadang bermanfaat untuk mengizinkan penghias atau middleware "
"untuk merubah sebuah tanggapan *setelah* itu telah dirancang oleh tampilan. "
"Sebagai contoh, anda ingin merubah cetakan yang digunakan, atau menaruh data "
"tambahan kedalam konteks."

msgid ""
"However, you can't (easily) modify the content of a basic :class:`~django."
"http.HttpResponse` after it has been constructed. To overcome this "
"limitation, Django 1.3 adds a new :class:`~django.template.response."
"TemplateResponse` class. Unlike basic :class:`~django.http.HttpResponse` "
"objects, :class:`~django.template.response.TemplateResponse` objects retain "
"the details of the template and context that was provided by the view to "
"compute the response. The final output of the response is not computed until "
"it is needed, later in the response process."
msgstr ""
"Bagaimanapun, anda tidak dapat (dengan mudah) merubah isi dari dasar :class:"
"`~django.http.HttpResponse` setelah itu telah dibangun. Untuk menangani "
"batasan ini, Django 1.3 menambahkan sebuah kelas :class:`~django.template."
"response.TemplateResponse` baru. Tidak seperti obyek :class:`~django.http."
"HttpResponse`, obyek :class:`~django.template.response.TemplateResponse` "
"menyimpan cetakan dan konteks yang telah disediakan oleh tampilan untuk "
"menghitung tanggapan. Keluaran akhir dari tanggapan tidak dihitung sampai "
"itu dibutuhkan, kemudian di pengolahan tanggapan."

msgid ""
"For more details, see the :doc:`documentation </ref/template-response>` on "
"the :class:`~django.template.response.TemplateResponse` class."
msgstr ""
"Untul lebih rinci, lihat :doc:`documentation </ref/template-response>` pada "
"kelas :class:`~django.template.response.TemplateResponse`."

msgid "Caching changes"
msgstr "Perubahan menemblok"

msgid ""
"Django 1.3 sees the introduction of several improvements to the Django's "
"caching infrastructure."
msgstr ""
"Django 1.3 melihat perkenalan dari beberapa perbaikan pada infrastruktur "
"penyembunyian Django."

msgid ""
"Firstly, Django now supports multiple named caches. In the same way that "
"Django 1.2 introduced support for multiple database connections, Django 1.3 "
"allows you to use the new :setting:`CACHES` setting to define multiple named "
"cache connections."
msgstr ""
"Pertama, Django sekarang mendukung banyak penyimpanan bernama. Di cara yang "
"sama bahwa Django 1.2 diperkenalkan mendukung untuk hubungan abnyak "
"basisdata, Django 1.3 mengizinkan anda menggunakan pengaturan :setting:"
"`CACHES` untuk menentukan banyak hubungan penyimpananbernama."

msgid ""
"Secondly, :ref:`versioning <cache_versioning>`, :ref:`site-wide prefixing "
"<cache_key_prefixing>` and :ref:`transformation <cache_key_transformation>` "
"have been added to the cache API."
msgstr ""
"Yang kedua, :ref:`versioning <cache_versioning>`, :ref:`site-wide prefixing "
"<cache_key_prefixing>` dan :ref:`transformation <cache_key_transformation>` "
"telah ditambahkan ke API tembolok."

msgid ""
"Thirdly, :ref:`cache key creation <using-vary-headers>` has been updated to "
"take the request query string into account on ``GET`` requests."
msgstr ""
"Ketiga, :ref:`cache key creation <using-vary-headers>` telah diperbaharui "
"untuk mengambil deretan karakter permintaan kedalam akun pada permintaan "
"``GET``."

msgid ""
"Finally, support for pylibmc_ has been added to the memcached cache backend."
msgstr ""
"Akhirnya, sukungan untuk pylibmc_ telah ditambahkan ke backend tembolok "
"memcached."

msgid ""
"For more details, see the :doc:`documentation on caching in Django</topics/"
"cache>`."
msgstr ""
"Untuk rincian lebih, lihat :doc:`documentation on caching in Django</topics/"
"cache>`. "

msgid "Permissions for inactive users"
msgstr "Perizinan untuk pengguna tidak aktif"

msgid ""
"If you provide a custom auth backend with ``supports_inactive_user`` set to "
"``True``, an inactive ``User`` instance will check the backend for "
"permissions.  This is useful for further centralizing the permission "
"handling. See the :doc:`authentication docs </topics/auth/index>` for more "
"details."
msgstr ""
"Jika anda menyediakan backend otentifikasi penyesuaian dengan "
"``supports_inactive_user`` disetel menjadi ``True``, sebuah instance "
"``User`` tidak aktif akan memeriksa backend untuk perizinan. Ini sangat "
"berguna untuk pemusatan penangan perizinan selanjutnya. Lihat :doc:"
"`authentication docs </topics/auth/index>` untuk lebih rinci."

msgid ""
"The GeoDjango test suite is now included when :ref:`running the Django test "
"suite <running-unit-tests>` with ``runtests.py`` when using :ref:`spatial "
"database backends <spatial-backends>`."
msgstr ""
"Deretan percobaan GeoDjango sekarang disertakan ketika :ref:`running the "
"Django test suite <running-unit-tests>` dengan ``runtests.py`` ketika "
"menggunakan :ref:`spatial database backends <spatial-backends>`."

msgid ":setting:`MEDIA_URL` and :setting:`STATIC_URL` must end in a slash"
msgstr ""
":setting:`MEDIA_URL` dan :setting:`STATIC_URL` harus berakhir di garis miring"

msgid ""
"Previously, the :setting:`MEDIA_URL` setting only required a trailing slash "
"if it contained a suffix beyond the domain name."
msgstr ""
"Sebelumnya, pengaturan :setting:`MEDIA_URL` hanya membutuhkan buntutan garis "
"miring jika itu mengandung sebuah akhiran diluar nama ranah."

msgid ""
"A trailing slash is now *required* for :setting:`MEDIA_URL` and the new :"
"setting:`STATIC_URL` setting as long as it is not blank. This ensures there "
"is a consistent way to combine paths in templates."
msgstr ""
"Buntutan garis miring sekarang *wajib* untuk :setting:`MEDIA_URL` dan "
"pengaturan :setting:`STATIC_URL` selama itu tidak kosong. Ini memastikan ada "
"cara tetap untuk menggabungkan jalur di cetakan. "

msgid ""
"Project settings which provide either of both settings without a trailing "
"slash will now raise a ``PendingDeprecationWarning``."
msgstr ""
"Pengaturan proyek yang menyediakan salah satu dari kedu apengaturan tanpa "
"buntutan garis miring akan sekarang memunculkan sebuah "
"``PendingDeprecationWarning``."

msgid ""
"In Django 1.4 this same condition will raise ``DeprecationWarning``, and in "
"Django 1.5 will raise an ``ImproperlyConfigured`` exception."
msgstr ""
"Di Django 1.4 kondisi yang sama ini akan memunculkan ``DeprecationWarning``, "
"dan di Django 1.5 akan memunculkan sebuah pengecualian "
"``ImproperlyConfigured``."

msgid "Everything else"
msgstr "Yang lainnya"

msgid ""
"Django :doc:`1.1 <1.1>` and :doc:`1.2 <1.2>` added lots of big ticket items "
"to Django, like multiple-database support, model validation, and a session-"
"based messages framework. However, this focus on big features came at the "
"cost of lots of smaller features."
msgstr ""
"Django :doc:`1.1 <1.1>` dan :doc:`1.2 <1.2>` ditambahkan banyak tiket barang "
"besar pada Django, seperti dukungan banyak-basisdata, pengecekan model, dan "
"kerangka kerja pesan berdasarkan-sesi. Bagaimanapun, fokus ini pada fitur-"
"fitur besar datang pada biaya banyak dari fitur-fitur terkecil."

msgid ""
"To compensate for this, the focus of the Django 1.3 development process has "
"been on adding lots of smaller, long standing feature requests. These "
"include:"
msgstr ""
"Untuk mengimbangi ini, fokus dari pengeolahan pengembangan Django 1.3 telah "
"menambahkan banyak dari terkecil, permintaan fitur yang sudah lama berjalan. "
"Ini termasuk:"

msgid ""
"Improved tools for accessing and manipulating the current :class:`~django."
"contrib.sites.models.Site` object in :doc:`the sites framework </ref/contrib/"
"sites>`."
msgstr ""
"Peningkatan alat-alat untuk mengakses dan merubah obyek :class:`~django."
"contrib.sites.models.Site` saat ini di :doc:`the sites framework </ref/"
"contrib/sites>`."

msgid "A :class:`~django.test.RequestFactory` for mocking requests in tests."
msgstr ""
":class:`~django.test.RequestFactory` untuk permintaan ejekan di percobaan."

msgid ""
"A new test assertion -- :meth:`~django.test.TransactionTestCase."
"assertNumQueries` -- making it easier to test the database activity "
"associated with a view."
msgstr ""
"Pernyataan percobaan baru -- :meth:`~django.test.TransactionTestCase."
"assertNumQueries` -- membuatnya lebih mudah untuk mencoba aktivitas "
"basisdata terkait dengan tampilan."

msgid ""
"Support for lookups spanning relations in admin's :attr:`~django.contrib."
"admin.ModelAdmin.list_filter`."
msgstr ""
"Mendukung untuk pencarian mencangkup hubungan di :attr:`~django.contrib."
"admin.ModelAdmin.list_filter` admin."

msgid "Support for HttpOnly_ cookies."
msgstr ""

msgid ""
":meth:`~django.core.mail.mail_admins()` and :meth:`~django.core.mail."
"mail_managers()` now support easily attaching HTML content to messages."
msgstr ""
":meth:`~django.core.mail.mail_admins()` dan :meth:`~django.core.mail."
"mail_managers()` sekarang mendukung dengan mudah melampirkan isi HTML pada "
"pesan."

msgid ":class:`~django.core.mail.EmailMessage` now supports CC's."
msgstr ":class:`~django.core.mail.EmailMessage` sekarang mendukung CC."

msgid ""
"Error emails now include more of the detail and formatting of the debug "
"server error page."
msgstr ""
"Surel kesalahan sekarang menyertakan lebih rinci dan berbentuk dari halaman "
"kesalahan peladen pencari kesalahan."

msgid ""
":meth:`~django.template.Library.simple_tag` now accepts a ``takes_context`` "
"argument, making it easier to write simple template tags that require access "
"to template context."
msgstr ""
":meth:`~django.template.Library.simple_tag` sekarang menerima sebuah argumen "
"``takes_context``, membuatnya lebih mudah untuk menulis etiket cetakan "
"sederhana yang membutuhkan akses ke konteks cetakan."

msgid ""
"A new :meth:`~django.shortcuts.render()` shortcut -- an alternative to "
"``django.shortcuts.render_to_response()`` providing a :class:`~django."
"template.RequestContext` by default."
msgstr ""
"Jalan pintas :meth:`~django.shortcuts.render()` baru -- sebuah jalan lain ke "
"``django.shortcuts.render_to_response()`` menyediakan sebuah :class:`~django."
"template.RequestContext` secara awal."

msgid ""
"Support for combining :class:`F expressions <django.db.models.F>` with "
"``timedelta`` values when retrieving or updating database values."
msgstr ""

msgid "Backwards-incompatible changes in 1.3"
msgstr "Perubahan bertentangan kebelakang di 1.3"

msgid "CSRF validation now applies to AJAX requests"
msgstr "Pengesahan CSRF sekarang berlaku pada permintaan AJAX"

msgid ""
"Prior to Django 1.2.5, Django's CSRF-prevention system exempted AJAX "
"requests from CSRF verification; due to `security issues`_ reported to us, "
"however, *all* requests are now subjected to CSRF verification. Consult :doc:"
"`the Django CSRF documentation </ref/csrf>` for details on how to handle "
"CSRF verification in AJAX requests."
msgstr ""
"Sebelum Django 1.2.5, sistem pencegahan CSRF Django membebaskan permintaan "
"AJAX dari pengecekan CSRF, karena `security issues`_ dilaporkan ke kami, "
"bagaimanapun, *semua* permintaan sekarang ditujukan ke pengecekan CSRF. "
"Obrolkan :doc:`the Django CSRF documentation </ref/csrf>` untuk rincian pada "
"bagimana menangani pengecekan CSRF di permintaan AJAX."

msgid ""
"Prior to Django 1.2.5, the Django administrative interface allowed filtering "
"on any model field or relation -- not just those specified in "
"``list_filter`` -- via query string manipulation. Due to security issues "
"reported to us, however, query string lookup arguments in the admin must be "
"for fields or relations specified in ``list_filter`` or ``date_hierarchy``."
msgstr ""
"Sebelum Django 1.2.5, antarmuka administratif Django mengizinkan menyaring "
"pada bidang model apapun atau hubungan -- tidak hanya itu ditentukan di "
"``list_filter`` -- melalui permintaan pengubahan deretan karakter. Karena "
"masalah keamanan dilaporkan ke kami, bagaimanapun, permintaan argumen "
"pencarian deretan karakter di admin harus untuk bidang atau hubungan "
"ditentukan di ``list_filter`` atau ``date_hierarchy``."

msgid "Deleting a model doesn't delete associated files"
msgstr "Menghapus model tidak menghapus berkas terhubung"

msgid ""
"In earlier Django versions, when a model instance containing a :class:"
"`~django.db.models.FileField` was deleted, :class:`~django.db.models."
"FileField` took it upon itself to also delete the file from the backend "
"storage. This opened the door to several data-loss scenarios, including "
"rolled-back transactions and fields on different models referencing the same "
"file. In Django 1.3, when a model is deleted the :class:`~django.db.models."
"FileField`’s ``delete()`` method won't be called. If you need cleanup of "
"orphaned files, you'll need to handle it yourself (for instance, with a "
"custom management command that can be run manually or scheduled to run "
"periodically via e.g. cron)."
msgstr ""
"Dalam versi paling awal Django, ketika sebuah instance model mengandung "
"sebuah :class:`~django.db.models.FileField` dihapus, :class:`~django.db."
"models.FileField` mengambil itu pada dirinya sendiri untuk juga menghapus "
"berkas dari penyimpanan backend. Ini membuat pintu untuk beberapa "
"kemungkinan skenario kehilangan-data serius, termasuk transaksi dikembalikan "
"dan bidang-bidang pada model berbeda mengacu berkas sama. Di Django 1.3, "
"ketika sebuah model dihapus metode ``delete()`` :class:`~django.db.models."
"FileField` tidak akan dipanggil. Jika anda butuh membersihkan berkas-berkas "
"tidak bertuan, anda akan butuh menangani nya anda sendiri (sebagai contoh, "
"dengan perintah pengelolaan penyesuaian yang dapat berjalan secara manual "
"atau terjadwal untuk berjalan secara periodeik melalui sebagai contoh cron)."

msgid "PasswordInput default rendering behavior"
msgstr "Perilaku membangun awalan PasswordInput"

msgid ""
"The :class:`~django.forms.PasswordInput` form widget, intended for use with "
"form fields which represent passwords, accepts a boolean keyword argument "
"``render_value`` indicating whether to send its data back to the browser "
"when displaying a submitted form with errors. Prior to Django 1.3, this "
"argument defaulted to ``True``, meaning that the submitted password would be "
"sent back to the browser as part of the form. Developers who wished to add a "
"bit of additional security by excluding that value from the redisplayed form "
"could instantiate a :class:`~django.forms.PasswordInput` passing "
"``render_value=False`` ."
msgstr ""
"Widget formulir :class:`~django.forms.PasswordInput`, dimaksudkan untuk "
"digunakan dengan bidang formulir yang mewakili sandi, menerima argumen kata "
"kunci boolean ``render_value`` menandakan apakah untuk mengirim datanya "
"kembali ke peramban ketika menampilkan formulir yang diajukan dengan "
"kesalahan. Sebelum pada Django 1.3, argumen ini diawalkan ke ``True``, "
"berarti bahwa sandi diajukan harus dikirim kembali ke peramban sebagai "
"bagian dari formulir. Pengembang yang berharap menambahkan sedikit keamanan "
"tambahan dengan mengecualikan nilai itu dari formulir ditampilkan kembali "
"dapat membuat instance :class:`~django.forms.PasswordInput`melewatkan "
"``render_value=False`` .+"

msgid ""
"Due to the sensitive nature of passwords, however, Django 1.3 takes this "
"step automatically; the default value of ``render_value`` is now ``False``, "
"and developers who want the password value returned to the browser on a "
"submission with errors (the previous behavior) must now explicitly indicate "
"this. For example::"
msgstr ""
"Dikarenakan sensitif alamiah dari sandi, bagaimanapun, Django 1.3 mengambil "
"langkah ini secara otomatis; nilai awalan dari ``render_value`` sekarang "
"``False``, dan pengembang yang ingin nilai sandi dikembalikan ke peramban "
"pada pengajuan dengan kesalahan (perilaku sebelumnya) harus secara tegas "
"menunjukkan ini. Sebagai contoh::"

msgid "Clearable default widget for FileField"
msgstr "Dapat dibersihkan widget awalan untuk FileField"

msgid ""
"Django 1.3 now includes a :class:`~django.forms.ClearableFileInput` form "
"widget in addition to :class:`~django.forms.FileInput`. "
"``ClearableFileInput`` renders with a checkbox to clear the field's value "
"(if the field has a value and is not required); ``FileInput`` provided no "
"means for clearing an existing file from a ``FileField``."
msgstr ""
"Django 1.3 sekarang menyertakan sebuah widget formulir :class:`~django.forms."
"ClearableFileInput` sebagai tambahan pada :class:`~django.forms.FileInput`. "
"``ClearableFileInput`` dibangun dengan kotak centang untuk membersihkan "
"nilai bidang (jika bidang mempunyai nilai dan tidak wajib), menyediakan "
"tidak ada arti untuk membersihkan berkas yang ada dari ``FileField``."

msgid ""
"``ClearableFileInput`` is now the default widget for a ``FileField``, so "
"existing forms including ``FileField`` without assigning a custom widget "
"will need to account for the possible extra checkbox in the rendered form "
"output."
msgstr ""
"``ClearableFileInput`` sekarang widget awalan untuk sebuah ``FileField``, "
"jadi formulir yang ada termasuk ``FileField`` tanpa memberikan widget "
"penyesuaian akan butuh dipertanggungjawabkan untuk kemungkinan kotan centang "
"tambahan di formulir keluaran yang dibangun."

msgid ""
"To return to the previous rendering (without the ability to clear the "
"``FileField``), use the ``FileInput`` widget in place of "
"``ClearableFileInput``. For instance, in a ``ModelForm`` for a hypothetical "
"``Document`` model with a ``FileField`` named ``document``::"
msgstr ""
"Untuk kembali ke pembangunan sebelumnya (tanpa kemampuan membersihkan "
"``FileField``), gunakan widget ``FileInput`` di tempat dari "
"``ClearableFileInput``. Sebagai contoh, di ``ModelForm`` untuk hipotesis "
"model ``Document`` dengan sebuah ``FileField`` bernama ``document``::"

msgid "New index on database session table"
msgstr "Indeks baru pada tabel sesi basisdata"

msgid ""
"Prior to Django 1.3, the database table used by the database backend for "
"the :doc:`sessions </topics/http/sessions>` app had no index on the "
"``expire_date`` column. As a result, date-based queries on the session table "
"-- such as the query that is needed to purge old sessions -- would be very "
"slow if there were lots of sessions."
msgstr ""
"Sebelum pada Django 1.3, tabel basisdata digunakan oleh backend basisdata "
"untuk :doc:`sessions </topics/http/sessions>` aplikasi tidak mempunyai "
"indeks pada kolom ``expire_date``. Sebagai hasil, permintaan berdasarkan-"
"tanggal pada tabel sesi -- seperti permintaan yang dibutuhkan untuk "
"membersihkan sesi lama- akan menjadi sangat lambat jika ada banyak sesi."

msgid ""
"If you have an existing project that is using the database session backend, "
"you don't have to do anything to accommodate this change. However, you may "
"get a significant performance boost if you manually add the new index to the "
"session table. The SQL that will add the index can be found by running the "
"``sqlindexes`` admin command:"
msgstr ""

msgid "No more naughty words"
msgstr "Tidak ada lagi kata nakal"

msgid ""
"Django has historically provided (and enforced) a list of profanities. The "
"comments app has enforced this list of profanities, preventing people from "
"submitting comments that contained one of those profanities."
msgstr ""
"Django mempunyai riwayat disediakan (dan dipaksakan) daftar dari kata-kata "
"kotor. Aplikasi komentar mempunyai daftar memaksa daftar ini dari kata-kata "
"kotor, mencegah orang dari mengajukan komentar yang mengandung satu dari "
"kata-kata kotor tersebut."

msgid ""
"Unfortunately, the technique used to implement this profanities list was "
"woefully naive, and prone to the `Scunthorpe problem`_. Improving the built-"
"in filter to fix this problem would require significant effort, and since "
"natural language processing isn't the normal domain of a web framework, we "
"have \"fixed\" the problem by making the list of prohibited words an empty "
"list."
msgstr ""
"Sayangnya, teknik digunakan untuk menerapkan daftar carut marut ini "
"menyedihkan dibuat-buat, dan cenderung pada `Scunthorpe problem`_. "
"Meningkatkan saringan siap-pakai untuk memperbaiki masalah ini akan "
"membutuhkan usaha yang signifikan, dan sejak bahasa alam mengolah bukan "
"ranah biasa dari kerangka kerja jaringan, kami telah \"memperbaiki\" masalah "
"dengan membuat daftar dari daftar kosong kata-kata terlarang."

msgid ""
"If you want to restore the old behavior, simply put a ``PROFANITIES_LIST`` "
"setting in your settings file that includes the words that you want to "
"prohibit (see the :commit:`commit that implemented this change "
"<edd767d2612d891a906268cf590571f541dd164f>` if you want to see the list of "
"words that was historically prohibited). However, if avoiding profanities is "
"important to you, you would be well advised to seek out a better, less naive "
"approach to the problem."
msgstr ""

msgid "Localflavor changes"
msgstr "Perubahan rasa lokal"

msgid ""
"Django 1.3 introduces the following backwards-incompatible changes to local "
"flavors:"
msgstr ""
"Django 1.3 memperkenalkan perubahan bertentangan kebelakang berikut ke rasa "
"lokal:"

msgid ""
"Canada (ca) -- The province \"Newfoundland and Labrador\" has had its "
"province code updated to \"NL\", rather than the older \"NF\". In addition, "
"the Yukon Territory has had its province code corrected to \"YT\", instead "
"of \"YK\"."
msgstr ""
"Canada (ca) -- Propinsi \"Newfoundland and Labrador\" telah mempunyai kode "
"propinsinya diperbaharui menjadi \"NL\", daripada yang lama \"NF\". Sebagai "
"tambahan, Yukon Territory telah mempunyai kode propinsinya diralat menjadi "
"\"YT\", daripada \"YK\"."

msgid ""
"Indonesia (id) -- The province \"Nanggroe Aceh Darussalam (NAD)\" has been "
"removed from the province list in favor of the new official designation "
"\"Aceh (ACE)\"."
msgstr ""
"Indonesia (id) -- Propinsi \"Nanggroe Aceh Darussalam (NAD)\" telah "
"dipindahkan dari daftar propinsi dalam mendukung dari penyebutan resmi baru "
"\"Aceh (ACE)\"."

msgid ""
"United States of America (us) -- The list of \"states\" used by "
"``USStateField`` has expanded to include Armed Forces postal codes. This is "
"backwards-incompatible if you were relying on ``USStateField`` not including "
"them."
msgstr ""
"United States of America (us) -- Daftar dari \"states\" digunakan oleh "
"``USStateField`` telah diperluas untuk menyertakan kode pos Pasukan "
"Bersenjata. Ini adakah bertentangan kebelakang jika anda bergantung pada "
"``USStateField`` tidak menyertakan mereka."

msgid "FormSet updates"
msgstr "Perbaharuan FormSet"

msgid ""
"In Django 1.3 ``FormSet`` creation behavior is modified slightly. "
"Historically the class didn't make a distinction between not being passed "
"data and being passed empty dictionary. This was inconsistent with behavior "
"in other parts of the framework. Starting with 1.3 if you pass in empty "
"dictionary the ``FormSet`` will raise a ``ValidationError``."
msgstr ""
"Di Django 1.3 perilaku pembuatan ``FormSet`` adalah merubah sedikit. Secara "
"riwayat kelas tidak membuat perbedaan diantara data tidak sedang dilewatkan "
"dan sedang dilewatkan kamus kosong. Ini adalah tidak konsisten dengan "
"perilaku di bagian lain dari kerangka kerja. Dimulai dengan 1.3 jika anda "
"melewatkan di kamus kosong ``FormSet`` akan memunculkan sebuah "
"``ValidationError``."

msgid "For example with a ``FormSet``:"
msgstr ""

msgid "the following code will raise a ``ValidationError``:"
msgstr ""

msgid ""
"if you need to instantiate an empty ``FormSet``, don't pass in the data or "
"use ``None``:"
msgstr ""

msgid "Callables in templates"
msgstr "Callable di cetakan"

msgid ""
"Previously, a callable in a template would only be called automatically as "
"part of the variable resolution process if it was retrieved via attribute "
"lookup. This was an inconsistency that could result in confusing and "
"unhelpful behavior:"
msgstr ""

msgid ""
"This has been resolved in Django 1.3 - the result in both cases will be "
"``u'Joe Bloggs'``. Although the previous behavior was not useful for a "
"template language designed for web designers, and was never deliberately "
"supported, it is possible that some templates may be broken by this change."
msgstr ""
"Itu telah di selesaikan di Django 1.3 - hasil di kedua kasus akan menjadi "
"``u'Joe Bloggs'``. meskipun perilaku sebelumnya tidak berguna untuk bahasa "
"cetakandirancang untuk perancang jaringan, dan tidak pernah sengaja "
"didukung, itu memungkinkan bahwa beberapa cetakan mungkin rusak oleh "
"perubahan ini."

msgid "Changed priority of translation loading"
msgstr "Dirubah prioritas dari memuat terjemahan"

msgid ""
"Work has been done to simplify, rationalize and properly document the "
"algorithm used by Django at runtime to build translations from the different "
"translations found on disk, namely:"
msgstr ""
"Pekerjaan telah diselesaikan untuk memudahkan, merasionalisasi dan algoritma "
"dokumentasi yang sesuai digunakan oleh Django pada saat berjalan untuk "
"membangun terjemahan dari terjemahan berbeda ditemukan di cakram, bernama:"

msgid ""
"For translatable literals found in Python code and templates (``'django'`` "
"gettext domain):"
msgstr ""
"Untuk harfiah dapat diterjemahkan ditemukan di kode Python dan cetakan "
"(ranah gettext ``'django'``)"

msgid ""
"Priorities of translations included with applications listed in the :setting:"
"`INSTALLED_APPS` setting were changed. To provide a behavior consistent with "
"other parts of Django that also use such setting (templates, etc.) now, when "
"building the translation that will be made available, the apps listed first "
"have higher precedence than the ones listed later."
msgstr ""
"Keutamaan dari terjemahan disertakan dengan aplikasi terdaftar di "
"pengaturan :setting:`INSTALLED_APPS` telah berubah. Untuk menyediakan sebuah "
"perilaku yang tetap dengan bagian lain dari Django yang juga menggunakan "
"pengaturan seperti itu (cetakan, dll) sekarang, ketika membangun terjemahan "
"yang akan dibuat tersedia, aplikasi terdaftar pertama mempunyai hak lebih "
"tinggi daripada satu terdaftar kemudian."

msgid ""
"Now it is possible to override the translations shipped with applications by "
"using the :setting:`LOCALE_PATHS` setting whose translations have now higher "
"precedence than the translations of :setting:`INSTALLED_APPS` applications. "
"The relative priority among the values listed in this setting has also been "
"modified so the paths listed first have higher precedence than the ones "
"listed later."
msgstr ""
"Sekarang itu dimungkinkan menimpa terjemahan dibekali dengan aplikasi dengan "
"menggunakan pengaturan :setting:`LOCALE_PATHS` yang terjemahannya sekarang "
"didahulukan lebih tinggi daripada terjemahan dari aplikasi :setting:"
"`INSTALLED_APPS`. Prioritas relatif diantara nilai-nilai terdaftar di "
"pengaturan ini juga telah dirubah jadi jalur terdaftar dahulu mempunyai "
"didahulukan lebih tinggi dari satu didaftar kemudian. "

msgid ""
"The ``locale`` subdirectory of the directory containing the settings, that "
"usually coincides with and is known as the *project directory* is being "
"deprecated in this release as a source of translations. (the precedence of "
"these translations is intermediate between applications and :setting:"
"`LOCALE_PATHS` translations). See the `corresponding deprecated features "
"section`_ of this document."
msgstr ""
"Subdirektori ``locale`` dari direktori mengandung pengaturan, yang biasanya "
"bertepatan dengan dan dikenal sebagai *direktori proyek* sedang diusangkan "
"di terbitan ini sebagai sebuah sumber dari terjemahan. (Yang didahulukan "
"dari terjemahan ini adalah pertengahan diantara aplikasi dan terjemahan :"
"setting:`LOCALE_PATHS`). Lihat `corresponding deprecated features "
"section`_dari dokumen ini."

msgid ""
"For translatable literals found in JavaScript code (``'djangojs'`` gettext "
"domain):"
msgstr ""
"Untuk terjemahan harfiah ditemukan di kode JavaScript (ranah gettext "
"``'djangojs'``):"

msgid ""
"Similarly to the ``'django'`` domain translations: Overriding of "
"translations shipped with applications by using the :setting:`LOCALE_PATHS` "
"setting is now possible for this domain too. These translations have higher "
"precedence than the translations of Python packages passed to the "
"``javascript_catalog()`` view. Paths listed first have higher precedence "
"than the ones listed later."
msgstr ""
"Mirip pada terjemahan ranah  ``'django'``: Menimpa terjemahan dikirim dengan "
"aplikasi menggunakan pengaturan :setting:`LOCALE_PATHS` sekarang "
"memungkinkan untuk ranah ini juga. Terjemahan-terjemahan ini memiliki hak "
"lebih tinggi daripada terjemahan dari paket-paket Python dilewatkan ke "
"tampilan ``javascript_catalog()``. Jalur-jalur ditampilkan mempunyai hak "
"lebih tinggi daripada satu yang ditampilkan kemudian."

msgid ""
"Translations under the ``locale`` subdirectory of the *project directory* "
"have never been taken in account for JavaScript translations and remain in "
"the same situation considering the deprecation of such location."
msgstr ""
"Terjemahan dibawah subdirektori ``locale`` dari *direktori proyek* belum "
"pernah diperhitungkan untuk terjemahan JavaScript dan tetap di keadaan sama "
"mempertimbangkan pengusangan untuk tempat tersebut."

msgid "Transaction management"
msgstr "Pengelolaan transaksi"

msgid ""
"When using managed transactions -- that is, anything but the default "
"autocommit mode -- it is important when a transaction is marked as "
"\"dirty\". Dirty transactions are committed by the ``commit_on_success`` "
"decorator or the ``django.middleware.transaction.TransactionMiddleware``, "
"and ``commit_manually`` forces them to be closed explicitly; clean "
"transactions \"get a pass\", which means they are usually rolled back at the "
"end of a request when the connection is closed."
msgstr ""
"Ketika menggunakan transaksi dapat dikelola -- yaitu, apapun tetapi suasana "
"autocommit awalan -- adalah terpenting ketika transaksi ditandai sebagai "
"\"dirty\". Transaksi dirty diperbaiki oleh penghias ``commit_on_success``  "
"atau ``django.middleware.transaction.TransactionMiddleware``, dan "
"``commit_manually`` memaksa mereka untuk ditutup secara eksplisit; "
"membersihkan transaksi \"get a pass\", yang berarti mereka biasanya "
"membatalkan transaksi pada akhir dari permintaan ketika hubungan ditutup. "

msgid ""
"Until Django 1.3, transactions were only marked dirty when Django was aware "
"of a modifying operation performed in them; that is, either some model was "
"saved, some bulk update or delete was performed, or the user explicitly "
"called ``transaction.set_dirty()``. In Django 1.3, a transaction is marked "
"dirty when *any* database operation is performed."
msgstr ""
"Sampai Django 1.3, transaksi hanya ditandai dengan kotor ketika Django telah "
"menyadari dari merubah tindakan  yang dilakukan di mereka; yaitu baik "
"beberapa model telah disimpan, beberapa perbaharuan dalam jumlah besar atau "
"hapus telah dilakukan, atau pengguna secara eksplisit memanggil "
"``transaction.set_dirty()``. Di Django 1.3, sebuah transaksi ditandai kotor "
"ketika *tiap* tindakan basisdata dilakukan."

msgid ""
"As a result of this change, you no longer need to set a transaction dirty "
"explicitly when you execute raw SQL or use a data-modifying ``SELECT``. "
"However, you *do* need to explicitly close any read-only transactions that "
"are being managed using ``commit_manually()``. For example::"
msgstr ""
"Sebagai hasil dari perubahan ini, anda tidak lagi butuh menyetel transaksi "
"kotor secara eksplisit ketika anda menjalankan SQL mentah atau menggunakan "
"data-merubah ``SELECT``. Bagaimanapun, anda *lakukan* perlu secara eksplisit "
"menutup tiap transaksi hanya-baca yang sedang diatur menggunakan "
"``commit_manually()``. Sebagai contoh::"

msgid ""
"Prior to Django 1.3, this would work without error. However, under Django "
"1.3, this will raise a :class:`~django.db.transaction."
"TransactionManagementError` because the read operation that retrieves the "
"``MyObject`` instance leaves the transaction in a dirty state."
msgstr ""
"Sebelum Django 1.3, ini akan bekerja tanpa kesalahan. Bagaimanapun, dibawah "
"Django 1.3, ini akan memunculkan sebuah :class:`~django.db.transaction."
"TransactionManagementError`  karena tindakan membaca yang mengambil instance "
"``MyObject`` meninggalkan transaksi dalam keadaan kotor."

msgid "No password reset for inactive users"
msgstr "Tidak ada penyetelan kembali sandi untuk pengguna tidak aktif"

msgid ""
"Prior to Django 1.3, inactive users were able to request a password reset "
"email and reset their password. In Django 1.3 inactive users will receive "
"the same message as a nonexistent account."
msgstr ""
"Sebelum Django 1.3, pengguna tidak aktif dapat meminta surel setel kembali "
"sandi dan menyetel kembali sandi mereka. Di Django 1.3 pengguna tidak aktif "
"akan menerima pesan sama sebagai sebuah akun yang tdak ada."

msgid "Password reset view now accepts ``from_email``"
msgstr "Tampilan penyetelan ulang sandi sekarang menerima ``from_email``"

msgid ""
"The ``django.contrib.auth.views.password_reset()`` view now accepts a "
"``from_email`` parameter, which is passed to the ``password_reset_form``’s "
"``save()`` method as a keyword argument. If you are using this view with a "
"custom password reset form, then you will need to ensure your form's "
"``save()`` method accepts this keyword argument."
msgstr ""

msgid "Features deprecated in 1.3"
msgstr "Fitur usang di 1.3"

msgid ""
"Django 1.3 deprecates some features from earlier releases. These features "
"are still supported, but will be gradually phased out over the next few "
"release cycles."
msgstr ""
"Django 1.3 mengusangkan beberapa fitur dari terbitan lebih awal. Fitur-fitur "
"ini masih didukung, tetapi akan bertahapdihapus terhadap siklus terbitan "
"selanjutnya."

msgid ""
"Code taking advantage of any of the features below will raise a "
"``PendingDeprecationWarning`` in Django 1.3. This warning will be silent by "
"default, but may be turned on using Python's :mod:`warnings` module, or by "
"running Python with a ``-Wd`` or ``-Wall`` flag."
msgstr ""
"Kode mengambil keuntungan dari tiap fitur dibawah ini akan memunculkan "
"sebuah ``PendingDeprecationWarning`` di Django 1.3. Peringatan ini akan diam "
"secara awalan, tetapi mungkin berubah menggunakan modul :mod:`warnings` "
"Python, atau dengan menjalankan Python dengan sebuah bendera ``-Wd`` atau ``-"
"Wall``."

msgid ""
"In Django 1.4, these warnings will become a ``DeprecationWarning``, which is "
"*not* silent. In Django 1.5 support for these features will be removed "
"entirely."
msgstr ""
"Di Django 1.4, peringatan ini akan menjadi ``DeprecationWarning``, yang "
"*tidak* diam. Di Django 1.5 mendukung untuk fitur-fitur ini akan dipindahkan "
"sepenuhnya."

msgid ""
"For more details, see the documentation :doc:`Django's release process </"
"internals/release-process>` and our :doc:`deprecation timeline </internals/"
"deprecation>`."
msgstr ""
"Untuk rincian lebih, lihat dokumentasi :doc:`Django's release process </"
"internals/release-process>` dan :doc:`deprecation timeline </internals/"
"deprecation>` kami."

msgid "``mod_python`` support"
msgstr "dukungan ``mod_python``"

msgid ""
"The ``mod_python`` library has not had a release since 2007 or a commit "
"since 2008. The Apache Foundation board voted to remove ``mod_python`` from "
"the set of active projects in its version control repositories, and its lead "
"developer has shifted all of his efforts toward the lighter, slimmer, more "
"stable, and more flexible ``mod_wsgi`` backend."
msgstr ""
"Pustaka ``mod_python`` belum mempunyai terbitan sejak 2007 atau perbaikan "
"sejak 2008. Badan Apache Foundation memilih untuk memindahkan ``mod_python`` "
"dari kumpulan dari proyek aktif di gudang kendali versinya, dan pimpinan "
"pengembangnya telah mengganti semua usahanya menuju lebih ringan, ramping, "
"lebih stabil, dan lebih fleksibel backend ``mod_wsgi``."

msgid ""
"If you are currently using the ``mod_python`` request handler, you should "
"redeploy your Django projects using another request handler. :doc:`mod_wsgi "
"</howto/deployment/wsgi/modwsgi>` is the request handler recommended by the "
"Django project, but FastCGI is also supported. Support for ``mod_python`` "
"deployment will be removed in Django 1.5."
msgstr ""
"Jika anda saat ini menggunakan penangan permintaan ``mod_python``, anda "
"harus menyebarkan kembali proyek Django anda menggunakan penangan permintaan "
"lain. :doc:`mod_wsgi </howto/deployment/wsgi/modwsgi>` adalah penangan "
"permintaan dianjurkan oleh proyek Django, tetapi FastCGI juga didukung. "
"Dukungan untuk penyebaran ``mod_python`` akan dipindahkan di Django 1.5."

msgid "Function-based generic views"
msgstr "Tampilan umum berdasarkan-fungsi"

msgid ""
"As a result of the introduction of class-based generic views, the function-"
"based generic views provided by Django have been deprecated. The following "
"modules and the views they contain have been deprecated:"
msgstr ""
"Sebagai hasil dari perkenalan dari tampilan umum berdasarkan-kelas, tampilan "
"umum berdasarkan fungsi disediakan oleh Django telah diusangkan. Modul-modul "
"berikut dan tampilan mereka kandung telah diusangkan: "

msgid "``django.views.generic.create_update``"
msgstr "``django.views.generic.create_update``"

msgid "``django.views.generic.date_based``"
msgstr "``django.views.generic.date_based``"

msgid "``django.views.generic.list_detail``"
msgstr "``django.views.generic.list_detail``"

msgid "``django.views.generic.simple``"
msgstr "``django.views.generic.simple``"

msgid "Test client response ``template`` attribute"
msgstr "Percobaan klien tanggapan atribut ``template``"

msgid ""
"Django's :ref:`test client <test-client>` returns :class:`~django.test."
"Response` objects annotated with extra testing information. In Django "
"versions prior to 1.3, this included a ``template`` attribute containing "
"information about templates rendered in generating the response: either "
"None, a single :class:`~django.template.Template` object, or a list of :"
"class:`~django.template.Template` objects. This inconsistency in return "
"values (sometimes a list, sometimes not) made the attribute difficult to "
"work with."
msgstr ""
"Obyek :ref:`test client <test-client>` returns :class:`~django.test."
"Response` Django diberi keterangan dengan informasi percobaan tambahan. Di "
"Django versi sebelum 1.3, ini menyertakan atribut ``template`` mengandung "
"informasi tentang cetakan dibangun dalam membangkitkan tanggapan: baik None, "
"obyek :class:`~django.template.Template` tunggal, atau daftar dari obyek :"
"class:`~django.template.Template`. Ketidakkonsistenan ini mengembalikan "
"nilai (terkadang daftar, terkadang bukan) membuat atribut sulit bekerja "
"dengannya."

msgid ""
"In Django 1.3 the ``template`` attribute is deprecated in favor of a new :"
"attr:`~django.test.Response.templates` attribute, which is always a list, "
"even if it has only a single element or no elements."
msgstr ""
"Di Django 1.3 atribut ``template`` diusangkan dalam mendukung dari atribut :"
"attr:`~django.test.Response.templates` baru, yang selalu sebuah daftar, "
"bahkan jika itu hanya mempunyai unsur tunggal atau tidak ada unsur."

msgid "``DjangoTestRunner``"
msgstr "``DjangoTestRunner``"

msgid ""
"As a result of the introduction of support for ``unittest2``, the features "
"of ``django.test.simple.DjangoTestRunner`` (including fail-fast and Ctrl-C "
"test termination) have been made redundant. In view of this redundancy, "
"``DjangoTestRunner`` has been turned into an empty placeholder class, and "
"will be removed entirely in Django 1.5."
msgstr ""

msgid "Changes to ``url`` and ``ssi``"
msgstr "Dirubah ke ``url`` dan ``ssi``"

msgid ""
"Most template tags will allow you to pass in either constants or variables "
"as arguments -- for example:"
msgstr ""

msgid ""
"allows you to specify a base template as a constant, but if you have a "
"context variable ``templ`` that contains the value ``base.html``:"
msgstr ""

msgid "is also legal."
msgstr "juga sah."

msgid ""
"However, due to an accident of history, the ``url`` and ``ssi`` are "
"different. These tags use the second, quoteless syntax, but interpret the "
"argument as a constant. This means it isn't possible to use a context "
"variable as the target of a ``url`` and ``ssi`` tag."
msgstr ""
"Bagaimanapun, karena sebuah kecelakan dari sejarah, ``url`` dan ``ssi`` "
"adalah berbeda. Etiket ini menggunakan kedua, sintaksis tanpa dikutip, "
"tetapi menafsirkan argumen sebagai ketetapan. Ini berarti itu tidak "
"memungkinkan menggunakan konteks variabel sebagai sasaran dari etiket "
"``url`` dan ``ssi``."

msgid ""
"Django 1.3 marks the start of the process to correct this historical "
"accident. Django 1.3 adds a new template library -- ``future`` -- that "
"provides alternate implementations of the ``url`` and ``ssi`` template tags. "
"This ``future`` library implement behavior that makes the handling of the "
"first argument consistent with the handling of all other variables. So, an "
"existing template that contains:"
msgstr ""

msgid "should be replaced with:"
msgstr ""

msgid ""
"The tags implementing the old behavior have been deprecated, and in Django "
"1.5, the old behavior will be replaced with the new behavior. To ensure "
"compatibility with future versions of Django, existing templates should be "
"modified to use the new ``future`` libraries and syntax."
msgstr ""
"Etiket yang menerapkan perilaku lama telah diusangkan, dan di Django 1.5, "
"perilaku lama akan diganti dengan perilaku baru. Untuk memastikan kesesuaian "
"dengan versi selanjutnya dari Django, cetakan yang ada harus dirubah "
"menggunakan pustaka-pustaka ``future`` dan sintaksis  baru."

msgid "Changes to the login methods of the admin"
msgstr "Perubahan ke cara masuk dari admin"

msgid ""
"In previous version the admin app defined login methods in multiple "
"locations and ignored the almost identical implementation in the already "
"used auth app. A side effect of this duplication was the missing adoption of "
"the changes made in :commit:`r12634 "
"<c8015052d935a99a5c8f96434b2d0cd16d8a4e14>` to support a broader set of "
"characters for usernames."
msgstr ""

msgid ""
"This release refactors the admin's login mechanism to use a subclass of the :"
"class:`~django.contrib.auth.forms.AuthenticationForm` instead of a manual "
"form validation. The previously undocumented method ``'django.contrib.admin."
"sites.AdminSite.display_login_form'`` has been removed in favor of a new :"
"attr:`~django.contrib.admin.AdminSite.login_form` attribute."
msgstr ""
"Terbitan ini refaktor mekanisme masuk admin untuk menggunakan subkelas dari :"
"class:`~django.contrib.auth.forms.AuthenticationForm` daripada pengesahan "
"formulir manual. Cara tidak terdokumentasi sebelumnya ``'django.contrib."
"admin.sites.AdminSite.display_login_form'`` telah diusangkan dalam mendukung "
"dari atribut :attr:`~django.contrib.admin.AdminSite.login_form` baru."

msgid "``reset`` and ``sqlreset`` management commands"
msgstr "Perintah pengelolaan ``reset`` dan ``sqlreset``"

msgid ""
"Those commands have been deprecated. The ``flush`` and ``sqlflush`` commands "
"can be used to delete everything. You can also use ALTER TABLE or DROP TABLE "
"statements manually."
msgstr ""
"Perintah-perintah tersebut telah diusangkan. Perintah ``flush`` dan "
"``sqlflush`` dapat digunakan untuk menghapus apapun. Anda dapat juga "
"menggunakan pernyataan ALTER TABLE atau DROP TABLE secara manual."

msgid ""
"The function-based :setting:`TEST_RUNNER` previously used to execute the "
"GeoDjango test suite, ``django.contrib.gis.tests.run_gis_tests``, was "
"deprecated for the class-based runner, ``django.contrib.gis.tests."
"GeoDjangoTestSuiteRunner``."
msgstr ""
":setting:`TEST_RUNNER` berdasarkan-fungsi sebelumnya digunakan untuk "
"menjalankan deretan percobaan GeoDjango, ``django.contrib.gis.tests."
"run_gis_tests``, akhirnya diusangkan dalam mendukung pejalan percobaan "
"berdasarkan kelas, ``django.contrib.gis.tests.GeoDjangoTestSuiteRunner``."

msgid ""
"Previously, calling :meth:`~django.contrib.gis.geos.GEOSGeometry.transform` "
"would silently do nothing when GDAL wasn't available.  Now, a :class:"
"`~django.contrib.gis.geos.GEOSException` is properly raised to indicate "
"possible faulty application code.  A warning is now raised if :meth:`~django."
"contrib.gis.geos.GEOSGeometry.transform` is called when the SRID of the "
"geometry is less than 0 or ``None``."
msgstr ""
"Sebelumnya, memanggil :meth:`~django.contrib.gis.geos.GEOSGeometry."
"transform` akan secara diam tidak melakukan apapun ketika GDAL tidak "
"tersedia. Sekarang :class:`~django.contrib.gis.geos.GEOSException` secara "
"pantas dimunculkan untuk menunjukkan kemungkinan kegagalan kode aplikasi. "
"Sebuah peringatan sekarang dimunculkan jika :meth:`~django.contrib.gis.geos."
"GEOSGeometry.transform` dipanggil ketika SRID dari geometri kurang dari 0 "
"atau ``None`` "

msgid "``CZBirthNumberField.clean``"
msgstr "``CZBirthNumberField.clean``"

msgid ""
"Previously this field's ``clean()`` method accepted a second, gender, "
"argument which allowed stronger validation checks to be made, however since "
"this argument could never actually be passed from the Django form machinery "
"it is now pending deprecation."
msgstr ""
"Sebelumnya metode ``clean()`` bidang ini menerima kedua, kelamin, argumen "
"yang mengizinkan pemeriksanaan pengesahan lebih kuat untuk dibuat, "
"bagaimanapun sejak argumen ini dapat tidak pernah sebenarnya dilewatkan dari "
"mesin-mesin formulir Django itu sekarang ditunda pengusangan. "

msgid "``CompatCookie``"
msgstr "``CompatCookie``"

msgid ""
"Previously, ``django.http`` exposed an undocumented ``CompatCookie`` class, "
"which was a bugfix wrapper around the standard library ``SimpleCookie``. As "
"the fixes are moving upstream, this is now deprecated - you should use "
"``from django.http import SimpleCookie`` instead."
msgstr ""
"Sebelumnya, ``django.http`` membedah sebuah kelas ``CompatCookie`` tidak "
"didokumentasikan, yang merupakan pembungkus perbaikan kesalahan disekitar "
"pustaka standar ``SimpleCookie``. Ketika perbaikan dipindahkan ke hulu, ini "
"sekarang diusangkan - anda harus menggunakan ``from django.http import "
"SimpleCookie`` sebagai gantinya."

msgid "Loading of *project-level* translations"
msgstr "Memuat penterjemahan *tingkatan-proyek*"

msgid ""
"This release of Django starts the deprecation process for inclusion of "
"translations located under the so-called *project path* in the translation "
"building process performed at runtime. The :setting:`LOCALE_PATHS` setting "
"can be used for the same task by adding the filesystem path to a ``locale`` "
"directory containing project-level translations to the value of that setting."
msgstr ""
"Terbitan dari Django memulai pengolahan pengusangan untuk penyertaan dari "
"terjemahan ditempatkan dibawah disebut *jalur proyek* di pengolahan "
"membangun terjemahan dilakukan pada saat runtime. Pengaturan :setting:"
"`LOCALE_PATHS` dapat digunakan untuk tugas yang sama dengan menambahkan "
"jalur sistem berkas pada direktori ``locale`` mengandung terjemahan "
"tingkatan-proyek pada nilai dari pengaturan itu."

msgid "Rationale for this decision:"
msgstr "Alasan untuk keputusan ini:"

msgid ""
"The *project path* has always been a loosely defined concept (actually, the "
"directory used for locating project-level translations is the directory "
"containing the settings module) and there has been a shift in other parts of "
"the framework to stop using it as a reference for location of assets at "
"runtime."
msgstr ""
"*jalur proyek* selalu konsep ditentukan longgar (sebenarnya, direktori "
"digunakan untuk menempatkan tingkat-proyek terjemahan adalah direktori "
"mengandung pengaturan modul) dan telah ada pergantian di bagian lain dari "
"kerangka kerja untuk menghentikan menggunakan itu sebagai sebuah acuan untuk "
"tempat dari aset pada waktu berjalan."

msgid ""
"Detection of the ``locale`` subdirectory tends to fail when the deployment "
"scenario is more complex than the basic one. e.g. it fails when the settings "
"module is a directory (ticket #10765)."
msgstr ""
"Penemuan dari subdirektori ``locale`` cenderung gagal ketika menyebarkan "
"skenario adalah lebih rumit daripada satu yang dasar. sebagai contoh dia "
"gagal ketika modul pengaturan adalah sebuah direktori (tiket #10765)."

msgid ""
"There are potential strange development- and deployment-time problems like "
"the fact that the ``project_dir/locale/`` subdir can generate spurious error "
"messages when the project directory is added to the Python path (``manage.py "
"runserver`` does this) and then it clashes with the equally named standard "
"library module, this is a typical warning message:"
msgstr ""

msgid ""
"This location wasn't included in the translation building process for "
"JavaScript literals. This deprecation removes such inconsistency."
msgstr ""
"Tempat ini tidak disertakan di pengeolahan membangun terjemahan untuk "
"harfiah JavaScript. Pengusangan ini memindahkan ketidakkonsistenan itu."

msgid "``PermWrapper`` moved to ``django.contrib.auth.context_processors``"
msgstr "``PermWrapper`` dipindah ke ``django.contrib.auth.context_processors``"

msgid ""
"In Django 1.2, we began the process of changing the location of the ``auth`` "
"context processor from ``django.core.context_processors`` to ``django."
"contrib.auth.context_processors``. However, the ``PermWrapper`` support "
"class was mistakenly omitted from that migration. In Django 1.3, the "
"``PermWrapper`` class has also been moved to ``django.contrib.auth."
"context_processors``, along with the ``PermLookupDict`` support class. The "
"new classes are functionally identical to their old versions; only the "
"module location has changed."
msgstr ""
"Di Django 1.2, kami mulai mengolah dari merubah tempat dari pengolah konteks "
"``auth`` dari ``django.core.context_processors`` menjadi ``django.contrib."
"auth.context_processors``. Bagaimanapun, ``PermWrapper``mendukung kelas "
"adalah kesalahan dihilangkan dari perpindahan itu. Di Django 1.3, kelas "
"``PermWrapper`` juga dipindahkan ke ``django.contrib.auth."
"context_processors``, bersama dengan kelas pendukung ``PermLookupDict`` . "
"Kelas-kelas baru secara kegunaan mirip pada versi lama mereka; hanya tempat "
"modul yang berubah."

msgid "Removal of ``XMLField``"
msgstr "Perpindahan ``XMLField``"

msgid ""
"When Django was first released, Django included an ``XMLField`` that "
"performed automatic XML validation for any field input. However, this "
"validation function hasn't been performed since the introduction of "
"``newforms``, prior to the 1.0 release. As a result, ``XMLField`` as "
"currently implemented is functionally indistinguishable from a simple :class:"
"`~django.db.models.TextField`."
msgstr ""
"Ketika Django pertama kali diterbitkan, Django menyertakan sebuah "
"``XMLField`` yang melakukan pengecekan XML otomatis untuk tiap bidang "
"masukan. Bagaimanapun, fungsi pengecekan ini belum dilakukan sejak "
"perkenalan dari ``newforms``, sebelum pada terbitan 1.0. Sebagai hasil, "
"``XMLField`` sebagai :class:`~django.db.models.TextField`. "

msgid ""
"For this reason, Django 1.3 has fast-tracked the deprecation of ``XMLField`` "
"-- instead of a two-release deprecation, ``XMLField`` will be removed "
"entirely in Django 1.4."
msgstr ""
"Untuk alasan ini, Django 1.3 mempunyai jalur-cepat pengusangan dari "
"``XMLField`` -- sebagai ganti dua-terbitan pengusangan, ``XMLField`` akan "
"dipindahkan seluruhnya di Django 1.4."

msgid ""
"It's easy to update your code to accommodate this change -- just replace all "
"uses of ``XMLField`` with ``TextField``, and remove the ``schema_path`` "
"keyword argument (if it is specified)."
msgstr ""
"Itu sangat mudah memperbaharui kode anda untuk menampung perubahan ini -- "
"cukup ganti semua penggunaan dari ``XMLField`` dengan``TextField``, dan "
"pindahkan argumen kata kunci ``schema_path`` (jika itu ditentukan)."

msgid "Django 1.3.1 release notes"
msgstr "Catatan terbitan Django 1.3.1"

msgid "Welcome to Django 1.3.1!"
msgstr "Selamat datang di Django 1.3.1!"

msgid ""
"This is the first security release in the Django 1.3 series, fixing several "
"security issues in Django 1.3.  Django 1.3.1 is a recommended upgrade for "
"all users of Django 1.3."
msgstr ""
"Ini adalah terbitan keamanan pertama di rangkaian Django 1.3, memperbaiki "
"beberapa masalah keamanan di Django 1.3. Django 1.3.1 adalah peningkatan "
"dianjurkan untuk semua pengguna dari Django 1.3."

msgid "Django 1.3.2 release notes"
msgstr "Catatan terbitan Django 1.3.2"

msgid "*July 30, 2012*"
msgstr "*30 Juli 2012*"

msgid ""
"This is the second security release in the Django 1.3 series, fixing several "
"security issues in Django 1.3. Django 1.3.2 is a recommended upgrade for all "
"users of Django 1.3."
msgstr ""
"Ini adalah terbitan keamanan kedua di rangkaian Django 1.3, memperbaiki "
"beberapa masalah keamanan di Django 1.3. Django 1.3.2 adalah peningkatan "
"yang dianjurkan untuk semua pengguna dari Django 1.3."

msgid "Django 1.3.3 release notes"
msgstr "Catatan terbitan Django 1.3.3"

msgid "*August 1, 2012*"
msgstr "*Agustus 1, 2012*"

msgid ""
"Following Monday's security release of :doc:`Django 1.3.2 </"
"releases/1.3.2>`, we began receiving reports that one of the fixes applied "
"was breaking Python 2.4 compatibility for Django 1.3. Since Python 2.4 is a "
"supported Python version for that release series, this release fixes "
"compatibility with Python 2.4."
msgstr ""
"Mengikuti terbitan keamananan Senin dari :doc:`Django 1.3.2 </"
"releases/1.3.2>`, kami mulai menerima laporan bahwa satu dariperbaikan yang "
"berlaku telah memutuskan kesesuaian Python 2.4 untuk Django 1.3. Sejak "
"Python 2.4 adalah versi Python yang didukung untuk rangkaian terbitan itu, "
"kesesuaian perbaikan terbitan ini dengan Python 2.4."

msgid "Django 1.3.4 release notes"
msgstr "Catatan terbitan Django 1.3.4"

msgid "*October 17, 2012*"
msgstr "*Oktober 17, 2012*"

msgid "This is the fourth release in the Django 1.3 series."
msgstr "Ini adalah terbitan ke empat di rangkaian Django 1.3."

msgid "Host header poisoning"
msgstr "Peracunan kepala Host"

msgid ""
"Some parts of Django -- independent of end-user-written applications -- make "
"use of full URLs, including domain name, which are generated from the HTTP "
"Host header. Some attacks against this are beyond Django's ability to "
"control, and require the web server to be properly configured; Django's "
"documentation has for some time contained notes advising users on such "
"configuration."
msgstr ""
"Beberapa bagian dari Django -- berdiri sendiri dari aplikasi ditulis-"
"pengguna-akhir -- menggunakan URL penuh, termasuk nama ranah, yang "
"dibangkitkan dari kepala HTTP Host. Beberapa serangan terhadap ini adalah "
"diluar kemampuan Django untuk mengendalikan, dan membutuhkan peladen "
"jaringan untuk secara benar dikonfigurasikan; Dokumentasi Django mempunyai "
"untuk terkadang mengandung catatan menganjurkan pengguna pada konfigurasi "
"tersebut."

msgid ""
"Django's own built-in parsing of the Host header is, however, still "
"vulnerable, as was reported to us recently. The Host header parsing in "
"Django 1.3.3 and Django 1.4.1 -- specifically, ``django.http.HttpRequest."
"get_host()`` -- was incorrectly handling username/password information in "
"the header. Thus, for example, the following Host header would be accepted "
"by Django when running on ``validsite.com``:"
msgstr ""

msgid ""
"Using this, an attacker can cause parts of Django -- particularly the "
"password-reset mechanism -- to generate and display arbitrary URLs to users."
msgstr ""
"Menggunakan ini, seorang penyerang dapat menyebabkan bagian dari Django -- "
"terutama mekanisme setel kembali sandi -- untuk membangkitkan dan "
"menampilkan URL berubah-ubah kepada pengguna."

msgid ""
"To remedy this, the parsing in ``HttpRequest.get_host()`` is being modified; "
"Host headers which contain potentially dangerous content (such as username/"
"password pairs) now raise the exception :exc:`django.core.exceptions."
"SuspiciousOperation`."
msgstr ""
"Untuk memperbaiki ini, mengurai di ``HttpRequest.get_host()`` sedang "
"dirubah; kepala Host yang mengandung isi kemungkinan berbahaya (seperti "
"pasangan nama pengguna/sandi) sekarang memunculkan pengecualian :exc:`django."
"core.exceptions.SuspiciousOperation`."

msgid ""
"Details of this issue were initially posted online as a `security advisory`_."
msgstr ""
"Rincian dari masalah secara inisial ditempatkan daring seperti `security "
"advisory`_. "

msgid "Django 1.3.5 release notes"
msgstr "Catatan terbitan Django 1.3.5"

msgid "*December 10, 2012*"
msgstr "*Desember 10, 2012*"

msgid ""
"Django 1.3.5 addresses two security issues present in previous Django "
"releases in the 1.3 series."
msgstr ""
"Django 1.3.5 mengalamatkan dua masalah keamanan yang hadir di terbitan "
"Django sebelumnya di rangkaian 1.3."

msgid ""
"Please be aware that this security release is slightly different from "
"previous ones. Both issues addressed here have been dealt with in prior "
"security updates to Django. In one case, we have received ongoing reports of "
"problems, and in the other we've chosen to take further steps to tighten up "
"Django's code in response to independent discovery of potential problems "
"from multiple sources."
msgstr ""
"Harap disadari bahwa terbitan keamanan ini sedikit berbeda dari satu "
"sebelumnya. Kedua masalah dialamatkan disini telah ditangani dengan sebelum "
"perbaharuan keamanan pada Django. Di satu kasus, kami telah menerima laporan "
"berjalan dari masalah-masalah, dan di lainnya kami telah memilih untuk "
"mengambil langkah-langkah selanjutnya untuk mengencangkan kode Django dalam "
"menjawab pada penemuan berdiri sendiri dari masalah potensial dari banyak "
"sumber."

msgid ""
"Several earlier Django security releases focused on the issue of poisoning "
"the HTTP Host header, causing Django to generate URLs pointing to arbitrary, "
"potentially-malicious domains."
msgstr ""
"Beberapa terbitan keamanan Django paling awal fokus pada masaalah peracunan "
"kepala Host HTTP, menyebabkan Django membangkitkan URL menunjuk ke berubah-"
"ubah, ranah berpotensi-jahat."

msgid ""
"In response to further input received and reports of continuing issues "
"following the previous release, we're taking additional steps to tighten "
"Host header validation. Rather than attempt to accommodate all features HTTP "
"supports here, Django's Host header validation attempts to support a "
"smaller, but far more common, subset:"
msgstr ""
"Dalam tanggapan pada masukan lebih lanjut yang diterima dan melaporkan dari "
"kelanjutan masalah-masalah mengikuti terbitan sebelumnya, kami mengambil "
"langkah-langkah tambahan untuk memperketat pengecekan kepala Host. Daripada "
"mencoba menampung semua fitur dukungan HTTP disini, pengecekan kepala Host "
"Django berusaha mendukung terkecil, tetapi jauh lebih umum, bagian:"

msgid ""
"Hostnames must consist of characters ``[A-Za-z0-9]`` plus hyphen ('-') or "
"dot ('.')."
msgstr ""
"Nama rumah harus terdiri dari karakter ``[A-Za-z0-9]`` ditambah strip ('-') "
"atau dot ('.')."

msgid "IP addresses -- both IPv4 and IPv6 -- are permitted."
msgstr "Alamat IP -- kedua IPv4 dan IPv6 -- diperbolehkan."

msgid "Port, if specified, is numeric."
msgstr "Pangkalan, jika ditentukan, adalah numerik."

msgid ""
"Any deviation from this will now be rejected, raising the exception :exc:"
"`django.core.exceptions.SuspiciousOperation`."
msgstr ""
"Penyimpangan apapun dari ini akan ditolak, memunculkan pengecualian :exc:"
"`django.core.exceptions.SuspiciousOperation`."

msgid "Redirect poisoning"
msgstr "Mengalihkan peracunan"

msgid ""
"Also following up on a previous issue: in July of this year, we made changes "
"to Django's HTTP redirect classes, performing additional validation of the "
"scheme of the URL to redirect to (since, both within Django's own supplied "
"applications and many third-party applications, accepting a user-supplied "
"redirect target is a common pattern)."
msgstr ""
"Juga mengikuti pada masalah sebelumnya: di Juli tahun ini, kami membuat "
"perubahan pada kelas-kelas pengalihan HTTP Django, melakukan tambahan "
"pengesahan dari skema dari URL untuk mengalihkan ke (sejak, kedua dalam "
"milik Django menyokong aplikasi dan banyak aplikasi pihak-ketiga, menerima "
"sasaran pengalihan pasokan-pengguna adalah pola umum)."

msgid ""
"Since then, two independent audits of the code turned up further potential "
"problems. So, similar to the Host-header issue, we are taking steps to "
"provide tighter validation in response to reported problems (primarily with "
"third-party applications, but to a certain extent also within Django "
"itself). This comes in two parts:"
msgstr ""
"Sejak itu, dua pemeriksaan berdiri sendiri dari kode memunculkan masalah "
"potensial lebih jauh. Jadi, mirip dengan masalah kepala_Rumah, kami "
"mengambil langkah untuk menyediakan pengecekan ketat dalam tanggapan ke "
"masalah (utamanya dengan aplikasi pihak-ketiga, tetapi pada tingkat tertentu "
"juga dalam Django itu sendiri). Ini datang di dua bagian:"

msgid ""
"1. A new utility function, ``django.utils.http.is_safe_url``, is added; this "
"function takes a URL and a hostname, and checks that the URL is either "
"relative, or if absolute matches the supplied hostname. This function is "
"intended for use whenever user-supplied redirect targets are accepted, to "
"ensure that such redirects cannot lead to arbitrary third-party sites."
msgstr ""
"1. fungsi kegunaan baru, ``django.utils.http.is_safe_url``, ditambahkan; "
"fungsi ini mengambil URL dan nama simpan, dan memeriksa bahwa URL antara "
"relatif, atau jika mutlak cocok dengan nama simpan disediakan. Fungsi ini "
"dimaksudkan untuk digunakan ketika disediakan-pengguna mengalihkan sasaran "
"diterima, untuk memastikan bahwa pengalihan itu tidak membawa ke situs pihak "
"ketiga yang berubah-ubah."

msgid ""
"2. All of Django's own built-in views -- primarily in the authentication "
"system -- which allow user-supplied redirect targets now use ``is_safe_url`` "
"to validate the supplied URL."
msgstr ""
"2. Semua tampilan siap-pakai Django -- utamanya di sistem otentifikasi -- "
"yang mengizinkan disediakan-pengguna mengalihkan sasaran sekarang "
"menggunakan ``is_safe_url`` untuk mengecek URL disediakan."

msgid "Django 1.3.6 release notes"
msgstr "Catatan terbitan Django 1.3.6"

msgid "*February 19, 2013*"
msgstr "*February 19, 2013*"

msgid ""
"Django 1.3.6 fixes four security issues present in previous Django releases "
"in the 1.3 series."
msgstr ""
"Django 1.3.6 memperbaiki empat masalah keamanan hadir di terbitan Django "
"sebelumnya di rangkaian 1.3."

msgid "This is the sixth bugfix/security release in the Django 1.3 series."
msgstr ""
"Ini adalah terbitan keamanan/perbaikan kesalahan keenam di rangkaian Django "
"1.3."

msgid ""
"Some parts of Django -- independent of end-user-written applications -- make "
"use of full URLs, including domain name, which are generated from the HTTP "
"Host header. Django's documentation has for some time contained notes "
"advising users on how to configure web servers to ensure that only valid "
"Host headers can reach the Django application. However, it has been reported "
"to us that even with the recommended web server configurations there are "
"still techniques available for tricking many common web servers into "
"supplying the application with an incorrect and possibly malicious Host "
"header."
msgstr ""

msgid ""
"For this reason, Django 1.3.6 adds a new setting, ``ALLOWED_HOSTS``, which "
"should contain an explicit list of valid host/domain names for this site. A "
"request with a Host header not matching an entry in this list will raise "
"``SuspiciousOperation`` if ``request.get_host()`` is called. For full "
"details see the documentation for the :setting:`ALLOWED_HOSTS` setting."
msgstr ""
"Untuk alasan ini, Django 1.3.6 menambahkan pengaturan baru, "
"``ALLOWED_HOSTS``,yang harus mengandung sebuah daftar eksplisit dari nama "
"ranah/host sah untuk situs ini. Sebuah permintaan dengan kepala Host tidak "
"mencocokkan sebuah masukan di daftar ini akan memunculkan "
"``SuspiciousOperation`` jika ``request.get_host()`` dipanggil. Untuk rincian "
"penuh lihat dokumentasi untuk pengaturan :setting:`ALLOWED_HOSTS`."

msgid ""
"The default value for this setting in Django 1.3.6 is ``['*']`` (matching "
"any host), for backwards-compatibility, but we strongly encourage all sites "
"to set a more restrictive value."
msgstr ""
"Nilai awalan untuk pengaturan ini di Django 1.3.6 adalah ``['*']`` "
"(mencocokkan tiap host), untuk kesesuaian-kebelakang, tetapi kami sangat "
"menganjurkan semua situs untuk mensetel nilai lebih terbatas."

msgid ""
"This host validation is disabled when ``DEBUG`` is ``True`` or when running "
"tests."
msgstr ""
"Pengesahan host ditiadakan ketika ``DEBUG`` adalah ``True`` atau ketika "
"menjalankan percobaan."

msgid "XML deserialization"
msgstr "Deserialisasi XML"

msgid ""
"The XML parser in the Python standard library is vulnerable to a number of "
"attacks via external entities and entity expansion. Django uses this parser "
"for deserializing XML-formatted database fixtures. The fixture deserializer "
"is not intended for use with untrusted data, but in order to err on the side "
"of safety in Django 1.3.6 the XML deserializer refuses to parse an XML "
"document with a DTD (DOCTYPE definition), which closes off these attack "
"avenues."
msgstr ""
"Pengurai XML di pustaka standar Python rentan pada sejumlah serangan melalui "
"entitas luar dan perpanjangan entitas. Django menggunakan pengurai ini untuk "
"deserialisasi perlengkapan basisdata berbentuk-XML. Perlengkapan "
"pendeserialisasi ini tidak dimaksudkan untuk digunakan dengan data tidak "
"dipercaya, tetapi untuk kesalahan pada sisi dari keamanan di Django 1.3.6 "
"pendeserialisasi XML menolak untuk mengurai sebuah dokumen XML dengan DTD "
"(pengertian DOCTYPE), yang menutup jalan serangan ini."

msgid ""
"These issues in the Python standard library are CVE-2013-1664 and "
"CVE-2013-1665. More information available `from the Python security team`_."
msgstr ""
"Masalah-masalah ini di pustaka standar Python adalah CVE-2013-1664 and "
"CVE-2013-1665. Informasi lebih tersedia `from the Python security team`_."

msgid ""
"Django's XML serializer does not create documents with a DTD, so this should "
"not cause any issues with the typical round-trip from ``dumpdata`` to "
"``loaddata``, but if you feed your own XML documents to the ``loaddata`` "
"management command, you will need to ensure they do not contain a DTD."
msgstr ""
"Penserial XML Django tidak membuat dokumen dengan DTD, jadi ini tidak "
"menyebabkan masalah apapun dengan berjenis pulang-pergi dari ``dumpdata`` ke "
"``loaddata``, tetapi jika anda mengumpan dokumen anda sendiri ke perintah "
"pengelolaan ``loaddata``, anda akan butuh memastikan mereka tidak mengandung "
"sebuah DTD."

msgid "Formset memory exhaustion"
msgstr "Kelelahan memori formset"

msgid ""
"Previous versions of Django did not validate or limit the form-count data "
"provided by the client in a formset's management form, making it possible to "
"exhaust a server's available memory by forcing it to create very large "
"numbers of forms."
msgstr ""
"Versi sebelumnya dari Django tidak mensahkan atau membatasi data jumlah-"
"formulir disediakan oleh klien di formulir pengelolaan formset, membuatnya "
"memungkinkan untuk menguras memory tersedia peladen dengan memaksanya "
"membuat sejumlah sangat besar dari formulir."

msgid ""
"In Django 1.3.6, all formsets have a strictly-enforced maximum number of "
"forms (1000 by default, though it can be set higher via the ``max_num`` "
"formset factory argument)."
msgstr ""
"Di Django 1.3.6, semua formset mempunyai angka maksimal dipaksakan-ketat "
"dari formulir (1000 oleh awalan, meskipun itu dapat disetel lebih tinggi "
"melalui argumen pabrik formset ``max_num``)."

msgid "Admin history view information leakage"
msgstr "Riwayat admin menampilkan kebocoran informasi"

msgid ""
"In previous versions of Django, an admin user without change permission on a "
"model could still view the Unicode representation of instances via their "
"admin history log. Django 1.3.6 now limits the admin history log view for an "
"object to users with change permission for that model."
msgstr ""

msgid "Django 1.3.7 release notes"
msgstr "Catatan terbitan Django 1.3.7"

msgid "*February 20, 2013*"
msgstr "*Februari 20, 2013*"

msgid ""
"Django 1.3.7 corrects a packaging problem with yesterday's :doc:`1.3.6 "
"release </releases/1.3.6>`."
msgstr ""
"Django 1.3.7 memperbaiki masalah pemaketan dengan :doc:`1.3.6 release </"
"releases/1.3.6>` kemarin."

msgid ""
"The release contained stray ``.pyc`` files that caused \"bad magic number\" "
"errors when running with some versions of Python. This releases corrects "
"this, and also fixes a bad documentation link in the project template "
"``settings.py`` file generated by ``manage.py startproject``."
msgstr ""
"Terbitan mengandung berkas ``.pyc`` menyimpang yang disebabkan kesalahan "
"\"angka ajaib buruk\" ketika berjalan dengan beberapa versi dari Python. "
"Terbitan ini memperbaiki ini, dan juga memperbaiki tautan dokumentasi buruk "
"di cetakan proyek berkas ``settings.py`` dibangkitkan oleh ``manage.py "
"startproject``."

msgid "Django 1.4 release notes"
msgstr "Catatan terbitan Django 1.4"

msgid "*March 23, 2012*"
msgstr "*23 Maret 2012*"

msgid "Welcome to Django 1.4!"
msgstr "Selamat datang di Django 1.4!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.4>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.4>` "
"you'll want to be aware of when upgrading from Django 1.3 or older versions. "
"We've also dropped some features, which are detailed in :ref:`our "
"deprecation plan <deprecation-removed-in-1.4>`, and we've :ref:`begun the "
"deprecation process for some features <deprecated-features-1.4>`."
msgstr ""
"Catatan terbitan ini mencangkup :ref:`new features <whats-new-1.4>`, dan "
"juga beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.4>` anda akan ingin disadari ketika meningkatkan dari Django "
"1.3 atau versi terlama. Kami telah juga membuang beberapa fitur, yang "
"rinciannya di :ref:`our deprecation plan <deprecation-removed-in-1.4>`, dan "
"kami telah  :ref:`begun the deprecation process for some features "
"<deprecated-features-1.4>`."

msgid ""
"The biggest new feature in Django 1.4 is `support for time zones`_ when "
"handling date/times. When enabled, this Django will store date/times in UTC, "
"use timezone-aware objects internally, and translate them to users' local "
"timezones for display."
msgstr ""
"Fitur baru terbesar di Django 1.4 adalah `support for time zones`_ ketika "
"menangani tanggal/waktu. Ketika mengadakan, Django ini akan menyimpan "
"tanggal/waktu dalam UTC, gunakan obyek sadar-zona waktu secara internal, dan "
"rubah mereka menjadi zona waktu lokal pengguna untuk ditampilkan."

msgid ""
"If you're upgrading an existing project to Django 1.4, switching to the "
"timezone aware mode may take some care: the new mode disallows some rather "
"sloppy behavior that used to be accepted. We encourage anyone who's "
"upgrading to check out the :ref:`timezone migration guide <time-zones-"
"migration-guide>` and the :ref:`timezone FAQ <time-zones-faq>` for useful "
"pointers."
msgstr ""
"Jika anda sedang meningkatkan sebuah proyek pada Django 1.4, mengganti ke "
"suasana sadar zona waktu mungkin mengambil beberapa perawatan: suasana baru "
"tidak mengizinkan beberapa daripada perilaku ceroboh yang biasanya diterima. "
"Kami mendorong siapapun yang meningkatkan untuk memeriksa :ref:`timezone "
"migration guide <time-zones-migration-guide>` dan :ref:`timezone FAQ <time-"
"zones-faq>` untuk petunjuk berguna."

msgid "Other notable new features in Django 1.4 include:"
msgstr "Fitur baru penting lainnya di Django 1.4 termasuk:"

msgid ""
"A number of ORM improvements, including `SELECT FOR UPDATE support`_, the "
"ability to `bulk insert <#model-objects-bulk-create-in-the-orm>`_ large "
"datasets for improved performance, and `QuerySet.prefetch_related`_, a "
"method to batch-load related objects in areas where :meth:`~django.db.models."
"query.QuerySet.select_related` doesn't work."
msgstr ""
"Sejumlah perbaikan ORM, termasuk `SELECT FOR UPDATE support`_, kemampuan "
"untuk `bulk insert <#model-objects-bulk-create-in-the-orm>`_ dataset besar "
"untuk memperbaiki penampilan, dan `QuerySet.prefetch_related`_, sebuah "
"metode untuk memuat-kumpulan terkait obyek di kawasan dimana :meth:`~django."
"db.models.query.QuerySet.select_related` tidak bekerja."

msgid ""
"Some nice security additions, including `improved password hashing`_ "
"(featuring PBKDF2_ and bcrypt_ support), new `tools for cryptographic "
"signing`_, several `CSRF improvements`_, and `simple clickjacking "
"protection`_."
msgstr ""
"Beberapa tambahan keamanan baik, termasuk `improved password hashing`_ "
"(dukungan sifat  PBKDF2_ dan bcrypt_), 'tools for cryptographic signing`_ "
"baru, beberapa `CSRF improvements`_, dan `simple clickjacking protection`_."

msgid ""
"An `updated default project layout and manage.py`_ that removes the "
"\"magic\" from prior versions. And for those who don't like the new layout, "
"you can use `custom project and app templates`_ instead!"
msgstr ""
"Sebuah `updated default project layout and manage.py`_ yang memindahkan "
"\"magic\" dari versi sebelumnya. Dan untuk siapa yang tidak suka tata letak "
"baru, anda dapat menggunakan `custom project and app templates`_ sebagai "
"gantinya!"

msgid "`Support for in-browser testing frameworks`_ (like Selenium_)."
msgstr "`Support for in-browser testing frameworks`_ (seperti Selenium_)."

msgid "... and a whole lot more; `see below <#what-s-new-in-django-1-4>`_!"
msgstr "... dan banyak lagi; `see below <#what-s-new-in-django-1-4>`_!"

msgid ""
"Wherever possible we try to introduce new features in a backwards-compatible "
"manner per :doc:`our API stability policy </misc/api-stability>` policy. "
"However, as with previous releases, Django 1.4 ships with some minor :ref:"
"`backwards incompatible changes <backwards-incompatible-1.4>`; people "
"upgrading from previous versions of Django should read that list carefully."
msgstr ""
"Dimanapun memungkinkan kami mencoba memperkenalkan fitur baru di sikap "
"bertentangan kebelakang per kebijakan :doc:`our API stability policy </misc/"
"api-stability>`. Bagaimanapun, seperti dengan terbitan sebelumnya, Django "
"1.4 dibekali dengan beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.4>` kecil; orang meningkatkan dari versi sebelumnya dari "
"Django harus membaca daftar itu hati-hati."

msgid ""
"Django 1.4 has dropped support for Python 2.4. Python 2.5 is now the minimum "
"required Python version. Django is tested and supported on Python 2.5, 2.6 "
"and 2.7."
msgstr ""
"Django 1.4 telah membuang dukungan untuk Python 2.4. Python 2.5 sekarang "
"vesi Python minimal yang diwajibkan. Django dicobakan dan didukung pada "
"Python 2.5, 2.6 and 2.7."

msgid ""
"This change should affect only a small number of Django users, as most "
"operating-system vendors today are shipping Python 2.5 or newer as their "
"default version. If you're still using Python 2.4, however, you'll need to "
"stick to Django 1.3 until you can upgrade. Per :doc:`our support policy </"
"internals/release-process>`, Django 1.3 will continue to receive security "
"support until the release of Django 1.5."
msgstr ""
"Perubahan ini seharusnya berakibat hanya angka kecil dari pengguna Django, "
"seperti kebanyakan penjaja sistem operasi hari ini yang membekali Phyton 2.5 "
"atau memperbaharui versi awal mereka. Jika anda masih menggunakan Python "
"2.4, bagaimanapun, anda akan butuh melekat ke Django 1.3 sampai anda dapat "
"meningkatkan; per :doc:`kebijakan dukungan kami </internals/release-"
"process>`, Django 1.3 akan lanjut menerima dukungan keamanan sampai terbitan "
"dari Django 1.5."

msgid ""
"Django does not support Python 3.x at this time. At some point before the "
"release of Django 1.4, we plan to publish a document outlining our full "
"timeline for deprecating Python 2.x and moving to Python 3.x."
msgstr ""
"Django tidak mendukung Python 3.x pada saat ini. Pada beberapa titik sebelum "
"terbitan Django 1.4, kami berencana menerbitkan sebuah uraian dokumen "
"linimasa penuh kami untuk pengusangan Python 2.x dan pindah ke Python 3.x."

msgid "What's new in Django 1.4"
msgstr "Apa yang baru di Django 1.4"

msgid "Support for time zones"
msgstr "Mendukung untuk zona waktu"

msgid ""
"In previous versions, Django used \"naive\" date/times (that is, date/times "
"without an associated time zone), leaving it up to each developer to "
"interpret what a given date/time \"really means\". This can cause all sorts "
"of subtle timezone-related bugs."
msgstr ""
"Di versi sebelumnya, Django menggunakan tanggal/waktu \"tidak dibuat-"
"buat\" (yaitu, tanggal/waktu tanpa zona waktu terkait), meninggalkannya ke "
"setiap pengembang untuk mengartikan apa tanggal/waktu yang diberikan \"benar-"
"benar berarti\". Ini dapat menyebabkan semua urutan halus dari kesalahan "
"terkait-zona waktu."

msgid ""
"In Django 1.4, you can now switch Django into a more correct, time-zone "
"aware mode. In this mode, Django stores date and  time information in UTC in "
"the database, uses time-zone-aware datetime objects internally and "
"translates them to the end user's time zone in templates and forms. Reasons "
"for using this feature include:"
msgstr ""
"Di Django 1.4, anda sekarang dapat mengganti Django menjadi lebih tepat, "
"suasana sadar zona-waktu. Di suasana ini, Django menyimpan informasi tanggal "
"dan waktu di UTC di basisdata, menggunakan obyek datetime waspada-zona-waktu "
"secara internal dan menterjemahkan mereka ke zona waktu pengguna akhir di "
"cetakan dan formulir. Alasan untuk menggunakan fitur ini termasuk:"

msgid "Customizing date and time display for users around the world."
msgstr ""
"Menyesuaikan tampilan tanggal dan waktu untuk pengguna disekeliling dunia."

msgid ""
"Storing datetimes in UTC for database portability and interoperability. "
"(This argument doesn't apply to PostgreSQL, because it already stores "
"timestamps with time zone information in Django 1.3.)"
msgstr ""
"Menyimpan datetime di UTC untuk basisdata mudah dibawa dan dapat "
"dioperasikan. (Argumen ini tidak berlaku pada PostgreSQL, karena itu sudah "
"menyimpan timestamp dengan informasi zona waktu di Django 1.3.)"

msgid "Avoiding data corruption problems around DST transitions."
msgstr "Menghindari masalah kerusakan data sekitar perpindahan DST."

msgid ""
"Time zone support is enabled by default in new projects created with :"
"djadmin:`startproject`. If you want to use this feature in an existing "
"project, read the :ref:`migration guide <time-zones-migration-guide>`. If "
"you encounter problems, there's a helpful :ref:`FAQ <time-zones-faq>`."
msgstr ""
"Dukungan zona waktu diadakan secara awalan di proyek baru dibuat dengan :"
"djadmin:`startproject`. Jika anda ingin menggunakan fitur ini di proyek yang "
"sudah ada, baca :ref:`migration guide <time-zones-migration-guide>`. Jika "
"anda mengalami masalah, ada bantuan :ref:`FAQ <time-zones-faq>`."

msgid "Support for in-browser testing frameworks"
msgstr "Mendukung untuk kerangka percobaan di-peramban"

msgid ""
"Django 1.4 supports integration with in-browser testing frameworks like "
"Selenium_. The new :class:`django.test.LiveServerTestCase` base class lets "
"you test the interactions between your site's front and back ends more "
"comprehensively. See the :class:`documentation<django.test."
"LiveServerTestCase>` for more details and concrete examples."
msgstr ""
"Django 1.4 mendukung perpaduan dengan kerangka percobaan di-peramban seperti "
"Selenium_. Kelas dasar :class:`django.test.LiveServerTestCase` baru "
"membiarkan anda mencoba interaksi diantara depan dan belakang situs anda "
"lebih komprehensif. Lihat :class:`documentation<django.test."
"LiveServerTestCase>` untuk lebih contoh rinci dan nyata."

msgid "Updated default project layout and ``manage.py``"
msgstr "Perbaharui tata letak proyek awal dan ``manage.py``"

msgid ""
"Django 1.4 ships with an updated default project layout and ``manage.py`` "
"file for the :djadmin:`startproject` management command. These fix some "
"issues with the previous ``manage.py`` handling of Python import paths that "
"caused double imports, trouble moving from development to deployment, and "
"other difficult-to-debug path issues."
msgstr ""
"Django 1.4 dibekali dengan tata letak proyek awalan terperbaharui dan berkas "
"``manage.py`` untuk perintah pengelolaan :djadmin:`startproject`. Ini "
"memperbaiki beberapa masalah dengan ``manage.py`` sebelumnya menangani dari "
"jalur Python impor yang menyebabkan impor ganda, masalah memindahkan dari "
"pengembangan ke penyebaran, dan masalah jalur sulit-dicari-kesalahan lainnya."

msgid ""
"The previous ``manage.py`` called functions that are now deprecated, and "
"thus projects upgrading to Django 1.4 should update their ``manage.py``. "
"(The old-style ``manage.py`` will continue to work as before until Django "
"1.6. In 1.5 it will raise ``DeprecationWarning``)."
msgstr ""
"``manage.py`` sebelumnya memanggil fungsi yang sekarang diusangkan, dan "
"dengan demikian peningkatan proyek ke Django 1.4 harus memperbaharui "
"``manage.py`` mereka. (Gaya lama ``manage.py`` akan berlanjut kerja sebagai "
"sebelum sampai Django 1.6. Di 1.5 itu akan memunculkan "
"``DeprecationWarning``)."

msgid "The new recommended ``manage.py`` file should look like this::"
msgstr "Berkas ``manage.py`` yang baru dianjurkan harus seperti ini::"

msgid ""
"``{{ project_name }}`` should be replaced with the Python package name of "
"the actual project."
msgstr ""
"``{{ project_name }}`` harus diganti dengan nama paket Python dari proyek "
"sebenarnya."

msgid ""
"If settings, URLconfs and apps within the project are imported or referenced "
"using the project name prefix (e.g. ``myproject.settings``, ``ROOT_URLCONF = "
"\"myproject.urls\"``, etc.), the new ``manage.py`` will need to be moved one "
"directory up, so it is outside the project package rather than adjacent to "
"``settings.py`` and ``urls.py``."
msgstr ""
"Jika pengaturan, URLconfs dan aplikasi dalam proyek diimpor atau diacukan "
"menggunakan awalan nama proyek (sebagai contoh ``myproject.settings``, "
"``ROOT_URLCONF = \"myproject.urls\"``, dll.), ``manage.py`` baru akan butuh "
"dipindahkan satu direktori keatas, jadi itu diluar paket proyek daripada "
"berdekatan pada ``settings.py`` dan ``urls.py``."

msgid "For instance, with the following layout:"
msgstr ""

msgid ""
"You could import ``mysite.settings``, ``mysite.urls``, and ``mysite.myapp``, "
"but not ``settings``, ``urls``, or ``myapp`` as top-level modules."
msgstr ""
"Anda dapat mengimpor ``mysite.settings``, ``mysite.urls``, dan ``mysite."
"myapp``, tetapi tidak ``settings``, ``urls``, atau ``myapp`` sebagai modul "
"tingkat-atas."

msgid ""
"Anything imported as a top-level module can be placed adjacent to the new "
"``manage.py``. For instance, to decouple ``myapp`` from the project module "
"and import it as just ``myapp``, place it outside the ``mysite/`` directory:"
msgstr ""

msgid ""
"If the same code is imported inconsistently (some places with the project "
"prefix, some places without it), the imports will need to be cleaned up when "
"switching to the new ``manage.py``."
msgstr ""
"Jika kode sama diimpor tidak tetap (beberapa tempat dengan awalan proyek, "
"beberapa tempat tanpanya). impor akan butuh dibersihkan ketika mengganti ke "
"``manage.py`` baru."

msgid "Custom project and app templates"
msgstr "Proyek penyesuaian dan cetakan aplikasi"

msgid ""
"The :djadmin:`startapp` and :djadmin:`startproject` management commands now "
"have a ``--template`` option for specifying a path or URL to a custom app or "
"project template."
msgstr ""
"Perintah pengelolaan :djadmin:`startapp` dan :djadmin:`startproject` "
"sekarang mempunyai sebuah pilihan ``--template`` untuk menentukan sebuah "
"jalur atau URL ke aplikasi penyesuaian atau cetakan proyek."

msgid ""
"For example, Django will use the ``/path/to/my_project_template`` directory "
"when you run the following command:"
msgstr ""

msgid ""
"You can also now provide a destination directory as the second argument to "
"both :djadmin:`startapp` and :djadmin:`startproject`:"
msgstr ""

msgid ""
"For more information, see the :djadmin:`startapp` and :djadmin:"
"`startproject` documentation."
msgstr ""
"Untuk informasi lebih, lihat dokumentasi :djadmin:`startapp` dan :djadmin:"
"`startproject`."

msgid "Improved WSGI support"
msgstr "Ditingkatkan dukungan WSGI"

msgid ""
"The :djadmin:`startproject` management command now adds a :file:`wsgi.py` "
"module to the initial project layout, containing a simple WSGI application "
"that can be used for :doc:`deploying with WSGI app servers</howto/deployment/"
"wsgi/index>`."
msgstr ""
"Perintah pengelolaan :djadmin:`startproject` sekarang menambahkan sebuah "
"modul :file:`wsgi.py` pada inisial tata letak proyek, mengandung aplikasi "
"WSGI sederhana yang dapat digunakan untuk :doc:`deploying with WSGI app "
"servers</howto/deployment/wsgi/index>`."

msgid ""
"The :djadmin:`built-in development server<runserver>` now supports using an "
"externally-defined WSGI callable, which makes it possible to run "
"``runserver`` with the same WSGI configuration that is used for deployment. "
"The new :setting:`WSGI_APPLICATION` setting lets you configure which WSGI "
"callable :djadmin:`runserver` uses."
msgstr ""

msgid ""
"(The ``runfcgi`` management command also internally wraps the WSGI callable "
"configured via :setting:`WSGI_APPLICATION`.)"
msgstr ""
"(Perintah pengelolaan ``runfcgi`` juga secara internal membungkus dapat "
"dipanggil WSGI dikonfigurasikan melalui :setting:`WSGI_APPLICATION`.)"

msgid "``SELECT FOR UPDATE`` support"
msgstr "Mendukung ``SELECT FOR UPDATE``"

msgid ""
"Django 1.4 includes a :meth:`QuerySet.select_for_update() <django.db.models."
"query.QuerySet.select_for_update>` method, which generates a ``SELECT ... "
"FOR UPDATE`` SQL query. This will lock rows until the end of the "
"transaction, meaning other transactions cannot modify or delete rows matched "
"by a ``FOR UPDATE`` query."
msgstr ""
"Django 1.4 menyertakan metode :meth:`QuerySet.select_for_update() <django.db."
"models.query.QuerySet.select_for_update>`, yang membangkitkan sebuah "
"permintaan SQL ``SELECT ... FOR UPDATE``. Ini akan mengunci baris sampai "
"akhir dari transaksi, yang berarti transaksi lain tidak dapat merubah atau "
"menghapus baris yang cocok oleh sebuah permintaan ``FOR UPDATE``."

msgid ""
"For more details, see the documentation for :meth:`~django.db.models.query."
"QuerySet.select_for_update`."
msgstr ""
"Untuk lebih rinci, lihat dokumentasi untuk :meth:`~django.db.models.query."
"QuerySet.select_for_update`."

msgid "``Model.objects.bulk_create`` in the ORM"
msgstr "``Model.objects.bulk_create`` di ORM"

msgid ""
"This method lets you create multiple objects more efficiently. It can result "
"in significant performance increases if you have many objects."
msgstr ""
"Metode ini membiarkan anda membuat banyak obyek lebih efisien. Itu dapat "
"menghasilkan penampilan yang signifikan meningkat jika anda mempunyai banyak "
"obyek."

msgid ""
"Django makes use of this internally, meaning some operations (such as "
"database setup for test suites) have seen a performance benefit as a result."
msgstr ""
"Django membuat penggunaan dari internal ini, berarti beberapa tindakan "
"(seperti pengaturan basisdata untuk deretan percobaan) telah melihat "
"keuntungan penampilan sebagai sebuah hasil."

msgid ""
"See the :meth:`~django.db.models.query.QuerySet.bulk_create` docs for more "
"information."
msgstr ""
"Lihat dokumentasi :meth:`~django.db.models.query.QuerySet.bulk_create` untuk "
"informasi lebih."

msgid "``QuerySet.prefetch_related``"
msgstr "``QuerySet.prefetch_related``"

msgid ""
"Similar to :meth:`~django.db.models.query.QuerySet.select_related` but with "
"a different strategy and broader scope, :meth:`~django.db.models.query."
"QuerySet.prefetch_related` has been added to :class:`~django.db.models.query."
"QuerySet`. This method returns a new ``QuerySet`` that will prefetch each of "
"the specified related lookups in a single batch as soon as the query begins "
"to be evaluated. Unlike ``select_related``, it does the joins in Python, not "
"in the database, and supports many-to-many relationships, "
"``GenericForeignKey`` and more. This allows you to fix a very common "
"performance problem in which your code ends up doing O(n) database queries "
"(or worse) if objects on your primary ``QuerySet`` each have many related "
"objects that you also need to fetch."
msgstr ""
"Serupa pada :meth:`~django.db.models.query.QuerySet.select_related` tetapi "
"dengan strategi yang berbeda dan cakupan lebih luas, :meth:`~django.db."
"models.query.QuerySet.prefetch_related` telah ditambahkan ke :class:`~django."
"db.models.query.QuerySet`. Metode ini mengembalikan sebuah ``QuerySet`` baru "
"yang akan mengambil setiap dari pencarian terkait yang ditentukan di "
"kumpulan tunggal sefera ketika permintaan mulai dinilai. Tidak seperti "
"``select_related``, itu melakukan penggabungan di Python, bukan di "
"basisdata, dan mendukung hubungan many-to-many, ``GenericForeignKey`` dan "
"lainnya. Ini mengizinkan anda memperbaiki masalah penampilan yang paling "
"umum dimana kode anda berakhir melakukan O(n) permintaan basisdata (atau "
"lebih buruk) jika obyek pada ``QuerySet`` utama setiap mempunyai banyak "
"obyek terkait yang anda juga butuh ambil. "

msgid "Improved password hashing"
msgstr "Diperbaiki mengacak sandi"

msgid ""
"Django's auth system (``django.contrib.auth``) stores passwords using a one-"
"way algorithm. Django 1.3 uses the SHA1_ algorithm, but increasing processor "
"speeds and theoretical attacks have revealed that SHA1 isn't as secure as "
"we'd like. Thus, Django 1.4 introduces a new password storage system: by "
"default Django now uses the PBKDF2_ algorithm (as recommended by NIST_). You "
"can also easily choose a different algorithm (including the popular bcrypt_ "
"algorithm). For more details, see :ref:`auth_password_storage`."
msgstr ""
"Sistem otentifikasi Django (``django.contrib.auth``) menyimpan sandi "
"menggunakan algoritma satu-jalan. Django 1.3 menggunakan algoritma SHA1_, "
"tetapi meningkarkan kecepatan pengolah dan serangan teoritis telah terungkap "
"bahwa SHA1 tidak seman kita kira. Demikian, Django 1.4 memperkenalkan sebuah "
"sistem penyimpanan sandi baru: secara awalan Django sekarang menggunakan "
"algoritma PBKDF2_ (seperti yang dianjurkan oleh NIST_). Anda dapat juga "
"dengan mudah memilih algoritma berbeda (termasuk algoritma bcrypt_ "
"terkenal). Untuk rincian lebih, lihat :ref:`auth_password_storage`."

msgid "HTML5 doctype"
msgstr "Jenis dokumen HTML5"

msgid ""
"We've switched the admin and other bundled templates to use the HTML5 "
"doctype. While Django will be careful to maintain compatibility with older "
"browsers, this change means that you can use any HTML5 features you need in "
"admin pages without having to lose HTML validity or override the provided "
"templates to change the doctype."
msgstr ""
"Kami telah mengganti cetakan admin dan gabungan lainnya untuk menggunakan "
"doctype HTML5. Selagi Django akan lebih hati-hati merawat kesesuaian dengan "
"peramban lama, perubahan ini berarti bahwa anda dapat menggunakan fitur "
"HTML5 anda butuhkan di halaman admin tanpa harus kehilangan keabsahan HTML "
"atau menimpa cetakan disediakan untuk merubah doctype."

msgid "List filters in admin interface"
msgstr "Daftar penyaring di antarmuka admin"

msgid ""
"Prior to Django 1.4, the :mod:`~django.contrib.admin` app let you specify "
"change list filters by specifying a field lookup, but it didn't allow you to "
"create custom filters. This has been rectified with a simple API (previously "
"used internally and known as \"FilterSpec\"). For more details, see the "
"documentation for :attr:`~django.contrib.admin.ModelAdmin.list_filter`."
msgstr ""
"Sebelum Django 1.4, aplikasi :mod:`~django.contrib.admin` membiarkan anda "
"menentukan daftar perubahan penyaring dengan menentukan bidang pencarian, "
"tetapi itu tidak mengizinkan anda membuat penyesuaian penyaring. Ini telah "
"diperbaiki dengan API sederhana (sebelumnya digunakan secara internal dan "
"dikenal sebagai \"FilterSpec\"). Untuk rincian lebih, lihat dokumentasi "
"untuk :attr:`~django.contrib.admin.ModelAdmin.list_filter`."

msgid "Multiple sort in admin interface"
msgstr "Urutan banyak di antarmuka admin"

msgid ""
"The admin change list now supports sorting on multiple columns. It respects "
"all elements of the :attr:`~django.contrib.admin.ModelAdmin.ordering` "
"attribute, and sorting on multiple columns by clicking on headers is "
"designed to mimic the behavior of desktop GUIs. We also added a :meth:"
"`~django.contrib.admin.ModelAdmin.get_ordering` method for specifying the "
"ordering dynamically (i.e., depending on the request)."
msgstr ""
"Daftar perubahan admin sekarang mendukung pengurutan pada banyak kolom. Itu "
"menghargai semua unsur dari atribut :attr:`~django.contrib.admin.ModelAdmin."
"ordering`, dan mengurutkan pada banyak kolom dengan mengklik pada kepala "
"dirancang pada tiruan perilaku dari GUI desktop. Kami juga menambahkan "
"metode :meth:`~django.contrib.admin.ModelAdmin.get_ordering` untuk "
"menentukan pengurutan secara dinamis (yaitu, tergantung pada permintaan)."

msgid "New ``ModelAdmin`` methods"
msgstr "Metode ``ModelAdmin`` baru"

msgid ""
"We added a :meth:`~django.contrib.admin.ModelAdmin.save_related` method to :"
"mod:`~django.contrib.admin.ModelAdmin` to ease customization of how related "
"objects are saved in the admin."
msgstr ""
"Kami menambahkan metode :meth:`~django.contrib.admin.ModelAdmin."
"save_related` pada :mod:`~django.contrib.admin.ModelAdmin` untuk penyesuaian "
"mudah dari bagaimana obyek terkait disimpan di admin."

msgid ""
"Two other new :class:`~django.contrib.admin.ModelAdmin` methods, :meth:"
"`~django.contrib.admin.ModelAdmin.get_list_display` and :meth:`~django."
"contrib.admin.ModelAdmin.get_list_display_links` enable dynamic "
"customization of fields and links displayed on the admin change list."
msgstr ""
"Dua metode :class:`~django.contrib.admin.ModelAdmin` baru lain, :meth:"
"`~django.contrib.admin.ModelAdmin.get_list_display` dan :meth:`~django."
"contrib.admin.ModelAdmin.get_list_display_links` mengadakan penyesuaian "
"dinamis dari bidang dan tautan ditampilkan pada daftar perubahan admin."

msgid "Admin inlines respect user permissions"
msgstr "Deretan admin menghormati perizinan pengguna"

msgid ""
"Admin inlines now only allow those actions for which the user has "
"permission. For ``ManyToMany`` relationships with an auto-created "
"intermediate model (which does not have its own permissions), the change "
"permission for the related model determines if the user has the permission "
"to add, change or delete relationships."
msgstr ""
"Deretan admin sekarang hanya mengizinkan tindakan tersebut untuk dimana "
"pengguna mempunyai perizinan. Untuk hubungan ``ManyToMany`` dengan model "
"menengah dibuat otomatis (yang tidak mempunyai perizinan itu sendiri), "
"perubahan perizinan untuk model terkait menentukan jika pengguna mempunyai "
"perizinan untuk menambahkan, merubah atau menghapus hubungan."

msgid "Tools for cryptographic signing"
msgstr "Alat untuk penandatangan kriptografi"

msgid ""
"Django 1.4 adds both a low-level API for signing values and a high-level API "
"for setting and reading signed cookies, one of the most common uses of "
"signing in web applications."
msgstr ""

msgid ""
"See the :doc:`cryptographic signing </topics/signing>` docs for more "
"information."
msgstr ""
"Lihat dokumen :doc:`cryptographic signing </topics/signing>` untuk informasi "
"lebih."

msgid "Cookie-based session backend"
msgstr "Backend sesi berdasarkan-kue"

msgid ""
"Django 1.4 introduces a cookie-based session backend that uses the tools "
"for :doc:`cryptographic signing </topics/signing>` to store the session data "
"in the client's browser."
msgstr ""
"Django 1.4 memperkenalkan backend sesi berdasarkan-kue yang menggunakan alat-"
"alat untuk :doc:`cryptographic signing </topics/signing>` untuk menyimpan "
"data sesi di peramban klien."

msgid ""
"Session data is signed and validated by the server, but it's not encrypted. "
"This means a user can view any data stored in the session but cannot change "
"it. Please read the documentation for further clarification before using "
"this backend."
msgstr ""
"Data sesi ditandatangani dan disahkan oleh peladen, tetapi itu tidak "
"dienkripsi. Ini berarti pengguna dapat menampilkan data apapun disimpan di "
"sesi tetapi tidak dapat merubahnya. Harap baca dokumentasi untuk penjelasan "
"lebih jauh sebelum menggunakan backend ini."

msgid ""
"See the :ref:`cookie-based session backend <cookie-session-backend>` docs "
"for more information."
msgstr ""
"Likat dok :ref:`cookie-based session backend <cookie-session-backend>` untuk "
"informasi lebih."

msgid "New form wizard"
msgstr "Wizard formulir baru"

msgid ""
"The previous ``FormWizard`` from ``django.contrib.formtools`` has been "
"replaced with a new implementation based on the class-based views introduced "
"in Django 1.3. It features a pluggable storage API and doesn't require the "
"wizard to pass around hidden fields for every previous step."
msgstr ""
"``FormWizard`` sebelumnya dari ``django.contrib.formtools`` telah diganti "
"dengan penerapan baru berdasarkan pada tampilan berdasarkan-kelas "
"diperkenalkan di Django 1.3. Fitur itu API penyimpanan dapat tertanam dan "
"tidak membutuhkan wizard untuk melewati sekeliling bidang tersembunyi untuk "
"setiap langkah sebelumnya."

msgid ""
"Django 1.4 ships with a session-based storage backend and a cookie-based "
"storage backend. The latter uses the tools for :doc:`cryptographic signing </"
"topics/signing>` also introduced in Django 1.4 to store the wizard's state "
"in the user's cookies."
msgstr ""
"Django 1.4 dibekali dengan backend penyimpanan berdasarkan-sesi dan backend "
"penyimpanan berdasarkan-kue. Terakhir menggunakan alat-alat untuk :doc:"
"`cryptographic signing </topics/signing>` juga diperkenalkan di Django 1.4 "
"untuk menyimpan keadaan wizard di kue pengguna. "

msgid "``reverse_lazy``"
msgstr "``reverse_lazy``"

msgid ""
"A lazily evaluated version of ``reverse()`` was added to allow using URL "
"reversals before the project's URLconf gets loaded."
msgstr ""
"Versi lazy dinilai dari ``reverse()`` telah ditambahkan untuk mengizinkan "
"pembalikan URL  sebelum URLconf proyek akan dimuat."

msgid "Translating URL patterns"
msgstr "Menterjemahkan pola URL"

msgid ""
"Django can now look for a language prefix in the URLpattern when using the "
"new :func:`~django.conf.urls.i18n.i18n_patterns` helper function. It's also "
"now possible to define translatable URL patterns using ``django.utils."
"translation.ugettext_lazy()``. See :ref:`url-internationalization` for more "
"information about the language prefix and how to internationalize URL "
"patterns."
msgstr ""

msgid ""
"Contextual translation support for ``{% trans %}`` and ``{% blocktrans %}``"
msgstr ""
"Terjemahan kontekstual mengukung untuk ``{% trans %}`` dan ``{% blocktrans %}"
"``"

msgid ""
"The :ref:`contextual translation<contextual-markers>` support introduced in "
"Django 1.3 via the ``pgettext`` function has been extended to the :ttag:"
"`trans` and :ttag:`blocktrans` template tags using the new ``context`` "
"keyword."
msgstr ""
"Dukungan :ref:`contextual translation<contextual-markers>` diperkenalkan di "
"Django 1.3 melalui fungsi ``pgettext`` telah diperpanjang ke etiket cetakan :"
"ttag:`trans` dan :ttag:`blocktrans` menggunakan katakunci ``context`` baru."

msgid "Customizable ``SingleObjectMixin`` URLConf kwargs"
msgstr "Disesuaikan ``SingleObjectMixin`` kwargs URLConf"

msgid ""
"Two new attributes, :attr:`pk_url_kwarg<django.views.generic.detail."
"SingleObjectMixin.pk_url_kwarg>` and :attr:`slug_url_kwarg<django.views."
"generic.detail.SingleObjectMixin.slug_url_kwarg>`, have been added to :class:"
"`~django.views.generic.detail.SingleObjectMixin` to enable the customization "
"of URLconf keyword arguments used for single object generic views."
msgstr ""
"Dua atribut baru :attr:`pk_url_kwarg<django.views.generic.detail."
"SingleObjectMixin.pk_url_kwarg>` dan :attr:`slug_url_kwarg<django.views."
"generic.detail.SingleObjectMixin.slug_url_kwarg>`, telah ditambahkan ke :"
"class:`~django.views.generic.detail.SingleObjectMixin` untuk mengadakan "
"penyesuaian dari argumen kata kunci URLConf digunakan untuk tampilan umum "
"obyek tunggal."

msgid "Assignment template tags"
msgstr "Menyerahkan etiket cetakan"

msgid ""
"A new ``assignment_tag`` helper function was added to ``template.Library`` "
"to ease the creation of template tags that store data in a specified context "
"variable."
msgstr ""
"Fungsi pembantu ``assignment_tag`` baru telah ditambahkan ke ``template."
"Library`` untuk memudahkan pembuatan etiket cetakan yang menyimpan data di "
"variabel konteks yang ditentukan."

msgid "``*args`` and ``**kwargs`` support for template tag helper functions"
msgstr ""
"Dukungan ``*args`` dan ``**kwargs`` untuk fungsi pembantu etiket cetakan "

msgid ""
"The :ref:`simple_tag<howto-custom-template-tags-simple-tags>`, :ref:"
"`inclusion_tag <howto-custom-template-tags-inclusion-tags>` and newly "
"introduced ``assignment_tag`` template helper functions may now accept any "
"number of positional or keyword arguments. For example::"
msgstr ""
":ref:`simple_tag<howto-custom-template-tags-simple-tags>`, :ref:"
"`inclusion_tag <howto-custom-template-tags-inclusion-tags>` dan baru-baru "
"diperkenalkan fungsi pembantu cetakan ``assignment_tag`` sekarang menerima "
"angka apapun dari penempatan atau argumen kata kunci. Sebagai contoh::"

msgid ""
"Then, in the template, any number of arguments may be passed to the template "
"tag. For example:"
msgstr ""
"Kemudian, di cetakan, angka apapun dari argumen mungkin dilewatkan ke etiket "
"cetakan. Sebagai contoh:"

msgid "No wrapping of exceptions in ``TEMPLATE_DEBUG`` mode"
msgstr "Tidak ada pembungkusan dari pengecualian di suasana ``TEMPLATE_DEBUG``"

msgid ""
"In previous versions of Django, whenever the ``TEMPLATE_DEBUG`` setting was "
"``True``, any exception raised during template rendering (even exceptions "
"unrelated to template syntax) were wrapped in ``TemplateSyntaxError`` and re-"
"raised. This was done in order to provide detailed template source location "
"information in the debug 500 page."
msgstr ""
"Di vesi sebelumnya dari Django, kapanpun pengaturan ``TEMPLATE_DEBUG`` "
"adalah ``True``, tiap pengecualian dimunculkan selama membangun cetakan "
"(bahkan pengecualian tidak terkait ke sintaksis cetakan) dibungkus di "
"``TemplateSyntaxError`` dan dimunculkan kembali. Ini diselesaikan untuk "
"menyediakan informasi rincian tempat sumber cetakan di mencari kesalahan "
"halaman 500."

msgid ""
"In Django 1.4, exceptions are no longer wrapped. Instead, the original "
"exception is annotated with the source information. This means that catching "
"exceptions from template rendering is now consistent regardless of the value "
"of ``TEMPLATE_DEBUG``, and there's no need to catch and unwrap "
"``TemplateSyntaxError`` in order to catch other errors."
msgstr ""
"Di Django 1.4, pengecualian tidak lagi dibungkus. Sebagai gantinya "
"pengecualian diberikan keterangan dengan informasi sumber. Ini berarti bahwa "
"menangkap pengecualian dari membangun cetakan sekarang tetap tanpa "
"memperhatikan nilai dari ``TEMPLATE_DEBUG``, dan tidak perlu menangkap dan "
"membuka ``TemplateSyntaxError`` untuk menangkap kesalahan lain. "

msgid "``truncatechars`` template filter"
msgstr "Penyaring cetakan ``truncatechars`` "

msgid ""
"This new filter truncates a string to be no longer than the specified number "
"of characters. Truncated strings end with a translatable ellipsis sequence "
"(\"...\"). See the documentation for :tfilter:`truncatechars` for more "
"details."
msgstr ""
"Penyaring baru ini memotong deretan karakter untuk tidak lebih panjang dari "
"angka yang ditentukan dari karakter. Deretan karakter diporong berakhir "
"dengan urutan tanda pengganti dapat diartikan (\"...\"). Lihat dokumentasi "
"untuk :tfilter:`truncatechars` untuk rincian lebih."

msgid "``static`` template tag"
msgstr "Etiket cetakan ``static``"

msgid ""
"The :mod:`staticfiles<django.contrib.staticfiles>` contrib app has a new "
"``static`` template tag to refer to files saved with the :setting:"
"`STATICFILES_STORAGE` storage backend. It uses the storage backend's ``url`` "
"method and therefore supports advanced features such as :ref:`serving files "
"from a cloud service<staticfiles-from-cdn>`."
msgstr ""
"Bantuan aplikasi :mod:`staticfiles<django.contrib.staticfiles>` mempunyai "
"etiket cetakan ``static`` baru untuk mengacu ke berkas-berkas disimpan "
"dengan penyimpanan backend :setting:`STATICFILES_STORAGE`. Dia menggunakan "
"metode ``url`` penyimpanan backend dan karena itu mendukung fitur lebih "
"tinggi seperti :ref:`serving files from a cloud service<staticfiles-from-"
"cdn>`."

msgid "``CachedStaticFilesStorage`` storage backend"
msgstr "Backend penyimpanan ``CachedStaticFilesStorage`` "

msgid ""
"The :mod:`staticfiles<django.contrib.staticfiles>` contrib app now has a "
"``django.contrib.staticfiles.storage.CachedStaticFilesStorage`` backend that "
"caches the files it saves (when running the :djadmin:`collectstatic` "
"management command) by appending the MD5 hash of the file's content to the "
"filename. For example, the file ``css/styles.css`` would also be saved as "
"``css/styles.55e7cbb9ba48.css``"
msgstr ""

msgid "Simple clickjacking protection"
msgstr "Perlindungan clickjacking sederhana"

msgid ""
"We've added a middleware to provide easy protection against `clickjacking "
"<https://en.wikipedia.org/wiki/Clickjacking>`_ using the ``X-Frame-Options`` "
"header. It's not enabled by default for backwards compatibility reasons, but "
"you'll almost certainly want to :doc:`enable it </ref/clickjacking/>` to "
"help plug that security hole for browsers that support the header."
msgstr ""
"Kami telah menambahkan middleware untuk menyediakan perlindungan mudah "
"terhadap `clickjacking <https://en.wikipedia.org/wiki/Clickjacking>`_ "
"menggunakan kepala ``X-Frame-Options`. Itu tidak diadakan secara awal untuk "
"alasan kesesuaian kebelakang, tetapi anda akan hampir pasti ingin :doc:"
"`enable it </ref/clickjacking/>` untuk membantu menanam lubang security "
"untuk peramban yang mendukung kepala."

msgid "CSRF improvements"
msgstr "Perbaikan CSRF"

msgid ""
"We've made various improvements to our CSRF features, including the :func:"
"`~django.views.decorators.csrf.ensure_csrf_cookie` decorator, which can help "
"with AJAX-heavy sites; protection for PUT and DELETE requests; and the :"
"setting:`CSRF_COOKIE_SECURE` and :setting:`CSRF_COOKIE_PATH` settings, which "
"can improve the security and usefulness of CSRF protection. See the :doc:"
"`CSRF docs </ref/csrf>` for more information."
msgstr ""
"Kami telah membuat beragam perbaikan untuk fitur CSRF kami, termasuk "
"penghias :func:`~django.views.decorators.csrf.ensure_csrf_cookie`, yang "
"dapat membantu dengan situs berat-AJAX; perlindungan untuk permintaan PUT "
"dan DELETE; dan pengaturan :setting:`CSRF_COOKIE_SECURE` dan :setting:"
"`CSRF_COOKIE_PATH`, yang dapat meningkatkan keamanan dan kegunaan dari "
"perlindungan CSRF. Lihat  :doc:`CSRF docs </ref/csrf>` untuk informasi lebih."

msgid "Error report filtering"
msgstr "Menyaring laporan kesalahan"

msgid ""
"We added two function decorators, :func:`~django.views.decorators.debug."
"sensitive_variables` and :func:`~django.views.decorators.debug."
"sensitive_post_parameters`, to allow designating the local variables and "
"POST parameters that may contain sensitive information and should be "
"filtered out of error reports."
msgstr ""
"Kami menambahkan dua fungsi penghias, :func:`~django.views.decorators.debug."
"sensitive_variables` dan :func:`~django.views.decorators.debug."
"sensitive_post_parameters`, untuk mengizinkan yang menunjuk variabel lokal "
"dan parameter POST yang mungkin mengandung informasi sensitif dan harus "
"disaring dari laporan kesalahan."

msgid ""
"All POST parameters are now systematically filtered out of error reports for "
"certain views (``login``, ``password_reset_confirm``, ``password_change`` "
"and ``add_view`` in :mod:`django.contrib.auth.views`, as well as "
"``user_change_password`` in the admin app) to prevent the leaking of "
"sensitive information such as user passwords."
msgstr ""
"Semua parameter POST adalah sekarang sistematis disaring keluar dari laporan "
"kesalahan untuk tampilan (``login``, ``password_reset_confirm``, "
"``password_change`` dan ``add_view`` di :mod:`django.contrib.auth.views`, "
"dan juga ``user_change_password`` di aplikasi admin) untuk mencegah "
"kebocoran dari informasi sensitif seperti sandi pengguna."

msgid ""
"You can override or customize the default filtering by writing a :ref:"
"`custom filter<custom-error-reports>`. For more information see the docs on :"
"ref:`Filtering error reports<filtering-error-reports>`."
msgstr ""
"Anda dapat menimpa atau menyesuaikan penyaringan awalan dengan menulis "
"sebuah :ref:`custom filter<custom-error-reports>`. Untuk informasi lebih "
"lihat dokumen pada :ref:`Filtering error reports<filtering-error-reports>`."

msgid "Extended IPv6 support"
msgstr "Diperpanjang dukungan IPv6"

msgid ""
"Django 1.4 can now better handle IPv6 addresses with the new :class:`~django."
"db.models.GenericIPAddressField` model field, :class:`~django.forms."
"GenericIPAddressField` form field and the validators :data:`~django.core."
"validators.validate_ipv46_address` and :data:`~django.core.validators."
"validate_ipv6_address`."
msgstr ""
"Django 1.4 sekarang dapat lebih baik menangani alamat IPv6 dengan bidang "
"model :class:`~django.db.models.GenericIPAddressField` baru, bidang "
"formuilir :class:`~django.forms.GenericIPAddressField` dan pengesah :data:"
"`~django.core.validators.validate_ipv46_address` dan :data:`~django.core."
"validators.validate_ipv6_address`."

msgid "HTML comparisons in tests"
msgstr "Perbandingan HTML di percobaan"

msgid ""
"The base classes in :mod:`django.test` now have some helpers to compare HTML "
"without tripping over irrelevant differences in whitespace, argument quoting/"
"ordering and closing of self-closing tags. You can either compare HTML "
"directly with the new :meth:`~django.test.SimpleTestCase.assertHTMLEqual` "
"and :meth:`~django.test.SimpleTestCase.assertHTMLNotEqual` assertions, or "
"use the ``html=True`` flag with :meth:`~django.test.SimpleTestCase."
"assertContains` and :meth:`~django.test.SimpleTestCase.assertNotContains` to "
"test whether the client's response contains a given HTML fragment. See the :"
"ref:`assertions documentation <assertions>` for more."
msgstr ""
"Kelas-kelas dasar di :mod:`django.test` sekarang mempunyai beberapa pembantu "
"untuk membandingkan HTML tanpa bersalah terhadap perbedaan tidak bersangkut "
"paut di ruang kosong, pengutipan/pengurutan argumen dan penutupan dari "
"etiket menutup-sendiri. Anda dapat baik membandingkan HTML secara langsung "
"dengan meth:`~django.test.SimpleTestCase.assertHTMLEqual` baru dan "
"pernyataan :meth:`~django.test.SimpleTestCase.assertHTMLNotEqual`, atau "
"gunakan bendera  ``html=True`` dengan :meth:`~django.test.SimpleTestCase."
"assertContains` dan :meth:`~django.test.SimpleTestCase.assertNotContains` "
"untuk mencoba apakah tanggapan klien mengandung potongan HTML yang "
"diberikan. Lihat :ref:`assertions documentation <assertions>` untuk lebih."

msgid "Two new date format strings"
msgstr "Dua deretan karakter bentuk tanggal baru"

msgid ""
"Two new :tfilter:`date` formats were added for use in template filters, "
"template tags and :doc:`/topics/i18n/formatting`:"
msgstr ""
"Dua bentuk :tfilter:`date` baru telah ditambahkan untuk digunakan di "
"penyaring cetakan, etiket cetakan dan :doc:`/topics/i18n/formatting`:"

msgid "``e`` -- the name of the timezone of the given datetime object"
msgstr "``e`` -- nama dari zonawaktu dari obyek datetime yang diberikan"

msgid "``o`` -- the ISO 8601 year number"
msgstr "``o`` -- Angka tahun ISO 8601"

msgid ""
"Please make sure to update your :ref:`custom format files <custom-format-"
"files>` if they contain either ``e`` or ``o`` in a format string. For "
"example a Spanish localization format previously only escaped the ``d`` "
"format character::"
msgstr ""
"Harap pastikan untuk memperbaharui :ref:`custom format files <custom-format-"
"files>` anda jika mereka mengandung baik ``e`` atau ``o`` di bentuk deretan "
"karakter. Sebagai contoh bentuk lokalisasi Spanyol sebelumnya hanya "
"diloloskan karakter bentuk ``d``::"

msgid "But now it needs to also escape ``e`` and ``o``::"
msgstr "Tetapi sekarang itu membutuhkan juga meloloskan ``e`` dan ``o``::"

msgid "For more information, see the :tfilter:`date` documentation."
msgstr "Untuk informasi lebih, lihat dokumentasi :tfilter:`date`."

msgid "Django 1.4 also includes several smaller improvements worth noting:"
msgstr ""
"Django 1.4 juga menyertakan beberapa perbaikan kecil yang tidak berharga:"

msgid ""
"A more usable stacktrace in the technical 500 page. Frames in the stack "
"trace that reference Django's framework code are dimmed out, while frames in "
"application code are slightly emphasized. This change makes it easier to "
"scan a stacktrace for issues in application code."
msgstr ""
"Stackrace lebih berguna dalam halaman 500 teknis. Kerangka-kerangka dalam "
"tumpukan jejak yang mengacu kode kerangka kode Django dikaburkan, selagi "
"kerangka-kerangka dalam kode aplikasi sedikit ditekankan. Perubahan ini "
"membuat itu lebih mudah untuk memindai stacktrace untuk diterbitkan dalam "
"kode aplikasi."

msgid ":doc:`Tablespace support </topics/db/tablespaces>` in PostgreSQL."
msgstr ":doc:`Tablespace support </topics/db/tablespaces>` di PostgreSQL."

msgid "Customizable names for :meth:`~django.template.Library.simple_tag`."
msgstr ""
"Disesuaikan nama-nama untuk :meth:`~django.template.Library.simple_tag`."

msgid ""
"In the documentation, a helpful :doc:`security overview </topics/security>` "
"page."
msgstr ""
"Di dokumentasi, halaman :doc:`security overview </topics/security>` yang "
"membantu."

msgid ""
"The ``django.contrib.auth.models.check_password`` function has been moved to "
"the :mod:`django.contrib.auth.hashers` module. Importing it from the old "
"location will still work, but you should update your imports."
msgstr ""
"Fungsi ``django.contrib.auth.models.check_password`` telah dipindahkan ke "
"modul :mod:`django.contrib.auth.hashers`. Mengimpornya dari tempat lama akan "
"masih bekerja, tetapi anda harus memperbaharui impor anda."

msgid ""
"The :djadmin:`collectstatic` management command now has a ``--clear`` option "
"to delete all files at the destination before copying or linking the static "
"files."
msgstr ""
"Perintah pengelolaan :djadmin:`collectstatic` sekarang mempunyai sebuah "
"pilihan ``--clear`` untuk menghapus semua berkas pada tujuan sebelum "
"menyalin atau menautkan berkas-berkas tetap."

msgid ""
"It's now possible to load fixtures containing forward references when using "
"MySQL with the InnoDB database engine."
msgstr ""
"Sekarang memungkinkan memuat alat bantu mengandung terusan acuan ketika "
"menggunakan MySQL dengan mesin basisdata InnoDB."

msgid ""
"A new 403 response handler has been added as ``'django.views.defaults."
"permission_denied'``. You can set your own handler by setting the value of :"
"data:`django.conf.urls.handler403`. See the documentation about :ref:`the "
"403 (HTTP Forbidden) view<http_forbidden_view>` for more information."
msgstr ""
"Penanganan tanggapan 403 baru telah ditambahkan sebagai ``'django.views."
"defaults.permission_denied'``. Anda dapat menyetel penangan anda sendiri "
"dengan mengatur nilai dari :data:`django.conf.urls.handler403`. Lihat "
"dokumentasi tentang :ref:`the 403 (HTTP Forbidden) "
"view<http_forbidden_view>` untuk informasi lebih."

msgid ""
"The :djadmin:`makemessages` command uses a new and more accurate lexer, :"
"pypi:`JsLex <jslex>`, for extracting translatable strings from JavaScript "
"files."
msgstr ""

msgid ""
"The :ttag:`trans` template tag now takes an optional ``as`` argument to be "
"able to retrieve a translation string without displaying it but setting a "
"template context variable instead."
msgstr ""
"Etiket cetakan :ttag:`trans` sekarang mengambil sebuah pilihan argumen "
"``as`` untuk dapat mengambil deretan karakter terjemahan tanpa "
"menampilkannya tetapi mengatur konteks cetakan sebagai gantinya."

msgid "The :ttag:`if` template tag now supports ``{% elif %}`` clauses."
msgstr "Etiket cetakan :ttag:`if` sekarang mendukung klausa ``{% elif %}``."

msgid ""
"If your Django app is behind a proxy, you might find the new :setting:"
"`SECURE_PROXY_SSL_HEADER` setting useful. It solves the problem of your "
"proxy \"eating\" the fact that a request came in via HTTPS. But only use "
"this setting if you know what you're doing."
msgstr ""
"Jika aplikasi Django anda dibelakang proxy, anda mungkin menemukan "
"pengaturan berguna baru :setting:`SECURE_PROXY_SSL_HEADER`. Itu "
"menyelesaikan masalah dari \"eating\" proxy fakta bahwa sebuah permintaan "
"datang dalam melalui HTTPS. Tetapi hanya menggunakan pengaturan ini jika "
"anda mengetahui apa yang anda lakukan."

msgid ""
"A new, plain-text, version of the HTTP 500 status code internal error page "
"served when :setting:`DEBUG` is ``True`` is now sent to the client when "
"Django detects that the request has originated in JavaScript code. "
"(``is_ajax()`` is used for this.)"
msgstr ""

msgid ""
"Like its HTML counterpart, it contains a collection of different pieces of "
"information about the state of the application."
msgstr ""
"Seperti pasangan HTML nya, itu mengandung kumpulan dari potongan berbeda "
"dari informasi tentang keadaan dari aplikasi."

msgid ""
"This should make it easier to read when debugging interaction with client-"
"side JavaScript."
msgstr ""
"Ini seharusnya membuatnya lebih muda untuk membaca ketika mencari kesalahan "
"interaksi dengan JavaScript sisi-klien."

msgid "Added the :option:`makemessages --no-location` option."
msgstr "Ditambahkan pilihan :option:`makemessages --no-location`."

msgid ""
"Changed the ``locmem`` cache backend to use ``pickle.HIGHEST_PROTOCOL`` for "
"better compatibility with the other cache backends."
msgstr ""
"Dirubah backend tembolok ``locmem`` untuk menggunakan ``pickle."
"HIGHEST_PROTOCOL`` untuk kesesuaian lebih baik dengan backend tembolok lain."

msgid ""
"Added support in the ORM for generating ``SELECT`` queries containing "
"``DISTINCT ON``."
msgstr ""
"Ditambahkan dukungan di ORM untuk membangkitkan permintaan ``SELECT`` "
"mengandung ``DISTINCT ON``."

msgid ""
"The ``distinct()`` ``QuerySet`` method now accepts an optional list of model "
"field names. If specified, then the ``DISTINCT`` statement is limited to "
"these fields. This is only supported in PostgreSQL."
msgstr ""
"Metode ``distinct()`` ``QuerySet`` sekarang menerima sebuah daftar pilihan "
"dari nama bidang model. Jika ditentukan, kemudian pernyataan ``DISTINCT`` "
"dibatasi pada bidang ini. Ini hanya didukung di PostgreSQL."

msgid ""
"For more details, see the documentation for :meth:`~django.db.models.query."
"QuerySet.distinct`."
msgstr ""
"Untuk lebih rinci, lihat dokumentasi untuk :meth:`~django.db.models.query."
"QuerySet.distinct`."

msgid ""
"The admin login page will add a password reset link if you include a URL "
"with the name ``'admin_password_reset'`` in your ``urls.py``, so plugging in "
"the built-in password reset mechanism and making it available is now much "
"easier. For details, see :ref:`auth_password_reset`."
msgstr ""

msgid ""
"The MySQL database backend can now make use of the savepoint feature "
"implemented by MySQL version 5.0.3 or newer with the InnoDB storage engine."
msgstr ""
"Backend basisdata MySQL dapat sekarang menggunakan fitur savapoint "
"diterapkan oleh versi MySQL 5.0.3 atau lebih baru dengan mesin penyimpanan "
"InnoDB."

msgid ""
"It's now possible to pass initial values to the model forms that are part of "
"both model formsets and inline model formsets as returned from factory "
"functions ``modelformset_factory`` and ``inlineformset_factory`` "
"respectively just like with regular formsets. However, initial values only "
"apply to extra forms, i.e. those which are not bound to an existing model "
"instance."
msgstr ""
"Sekarang memungkinkan melewati nilai awal ke formulir model yang bagian dari "
"kedua model formset dan formset model berderet sebagai dikembalikan dari "
"fungsi pabrik ``modelformset_factory`` dan ``inlineformset_factory`` masing-"
"masing cukup seperti formset biasa. Bagaimanapun, nilai awal hanya berlaku "
"pada formulir tambahan, yaitu yang tidak mengikat ke contoh model yang ada."

msgid ""
"The sitemaps framework can now handle HTTPS links using the new :attr:"
"`Sitemap.protocol <django.contrib.sitemaps.Sitemap.protocol>` class "
"attribute."
msgstr ""
"Kerangka kerja peta situs sekarang dapat menangani tautan HTPS menggunakan "
"atribut kelas :attr:`Sitemap.protocol <django.contrib.sitemaps.Sitemap."
"protocol>` baru."

msgid ""
"A new :class:`django.test.SimpleTestCase` subclass of :class:`unittest."
"TestCase` that's lighter than :class:`django.test.TestCase` and company. It "
"can be useful in tests that don't need to hit a database. See :ref:"
"`testcase_hierarchy_diagram`."
msgstr ""
"Sebuah subkelas :class:`django.test.SimpleTestCase` baru dari :class:"
"`unittest.TestCase` yaitu lebih ringan dari :class:`django.test.TestCase` "
"dan perusahaan. Itu dapat berguna di percobaan yang tidak butuh mengenai "
"basisdata. Lihat :ref:`testcase_hierarchy_diagram`."

msgid "Backwards incompatible changes in 1.4"
msgstr "Perubahan bertentangan kebelakang di 1.4"

msgid "SECRET_KEY setting is required"
msgstr "Pengaturan SECRET_KEY dibutuhkan"

msgid ""
"Running Django with an empty or known :setting:`SECRET_KEY` disables many of "
"Django's security protections and can lead to remote-code-execution "
"vulnerabilities. No Django site should ever be run without a :setting:"
"`SECRET_KEY`."
msgstr ""
"Menjalankan Django dengan sebuah :setting:`SECRET_KEY` kosong atau diketahui "
"meniadakan banyak dari perlindungan keamanan Django dan dapat membawa ke "
"kerentanan pengerjaan-kode-terpencil. Tidak ada situs Django harus berjalan "
"tanpa :setting:`SECRET_KEY`."

msgid ""
"In Django 1.4, starting Django with an empty :setting:`SECRET_KEY` will "
"raise a ``DeprecationWarning``. In Django 1.5, it will raise an exception "
"and Django will refuse to start. This is slightly accelerated from the usual "
"deprecation path due to the severity of the consequences of running Django "
"with no :setting:`SECRET_KEY`."
msgstr ""

msgid "``django.contrib.admin``"
msgstr "``django.contrib.admin``"

msgid ""
"The included administration app ``django.contrib.admin`` has for a long time "
"shipped with a default set of static files such as JavaScript, images and "
"stylesheets. Django 1.3 added a new contrib app ``django.contrib."
"staticfiles`` to handle such files in a generic way and defined conventions "
"for static files included in apps."
msgstr ""
"Aplikasi administrasi disertakan ``django.contrib.admin`` telah untuk waktu "
"lama dibekali dengan awalan sekumpulan dari berkas-berkas tetap seperti "
"JavaScript, gambar dan stylesheet. Django 1.3 ditambahkan sebuah bantuan "
"aplikasi baru ``django.contrib.staticfiles`` untuk menangani berkas seperti "
"itu di cara umum dan menentukan persetujuan untuk berkas-berkas tetap "
"disertakan di aplikasi."

msgid ""
"Starting in Django 1.4, the admin's static files also follow this "
"convention, to make the files easier to deploy. In previous versions of "
"Django, it was also common to define an ``ADMIN_MEDIA_PREFIX`` setting to "
"point to the URL where the admin's static files live on a web server. This "
"setting has now been deprecated and replaced by the more general setting :"
"setting:`STATIC_URL`. Django will now expect to find the admin static files "
"under the URL ``<STATIC_URL>/admin/``."
msgstr ""

msgid ""
"If you've previously used a URL path for ``ADMIN_MEDIA_PREFIX`` (e.g. ``/"
"media/``) simply make sure :setting:`STATIC_URL` and :setting:`STATIC_ROOT` "
"are configured and your web server serves those files correctly. The "
"development server continues to serve the admin files just like before. Read "
"the :doc:`static files howto </howto/static-files/index>` for more details."
msgstr ""

msgid ""
"If your ``ADMIN_MEDIA_PREFIX`` is set to a specific domain (e.g. ``http://"
"media.example.com/admin/``), make sure to also set your :setting:"
"`STATIC_URL` setting to the correct URL -- for example, ``http://media."
"example.com/``."
msgstr ""

msgid ""
"If you're implicitly relying on the path of the admin static files within "
"Django's source code, you'll need to update that path. The files were moved "
"from :file:`django/contrib/admin/media/` to :file:`django/contrib/admin/"
"static/admin/`."
msgstr ""
"Jika anda sedang tidak langsung bergantung pada jalur dari berkas tetap "
"admin dalam kode sumber Django, anda akan butuh memperbaharui jalur itu. "
"Berkas-berkas dipindahkan dari :file:`django/contrib/admin/media/` ke :file:"
"`django/contrib/admin/static/admin/`."

msgid "Supported browsers for the admin"
msgstr "Perambah didukung untuk admin"

msgid ""
"Django hasn't had a clear policy on which browsers are supported by the "
"admin app. Our new policy formalizes existing practices: `YUI's A-grade`_ "
"browsers should provide a fully-functional admin experience, with the "
"notable exception of Internet Explorer 6, which is no longer supported."
msgstr ""
"Django belum mempunyai kebijakan jelas pada perambah mana yang didukung oleh "
"aplikasi admin. Kebijakan baru kami meresmikan praktik yang ada: perambah "
"`YUI's A-grade`_ harus menyediakan pengalaman admin berfungsi-penuh, dengan "
"keterangan pengecualian dari Internet Explorer 6, yang tidak lagi didukung."

msgid ""
"Released over 10 years ago, IE6 imposes many limitations on modern web "
"development. The practical implications of this policy are that contributors "
"are free to improve the admin without consideration for these limitations."
msgstr ""

msgid ""
"This new policy **has no impact** on sites you develop using Django. It only "
"applies to the Django admin. Feel free to develop apps compatible with any "
"range of browsers."
msgstr ""

msgid "Removed admin icons"
msgstr "Pindahkan ikon admin"

msgid ""
"As part of an effort to improve the performance and usability of the admin's "
"change-list sorting interface and :attr:`horizontal <django.contrib.admin."
"ModelAdmin.filter_horizontal>` and :attr:`vertical <django.contrib.admin."
"ModelAdmin.filter_vertical>` \"filter\" widgets, some icon files were "
"removed and grouped into two sprite files."
msgstr ""
"Sebagai bagian dari sebuah usaha untuk meningkatkan penampilan dan kegunaan "
"dari antarmuka pengurutan daftar-rubah admin dan widget :attr:`horizontal "
"<django.contrib.admin.ModelAdmin.filter_horizontal>` dan :attr:`vertical "
"<django.contrib.admin.ModelAdmin.filter_vertical>` \"filter\", beberapa "
"berkas ikon telah dipindahkan dan dikelompokkan kedalam dua berkas sprite."

msgid ""
"Specifically: ``selector-add.gif``, ``selector-addall.gif``, ``selector-"
"remove.gif``, ``selector-removeall.gif``, ``selector_stacked-add.gif`` and "
"``selector_stacked-remove.gif`` were combined into ``selector-icons.gif``; "
"and ``arrow-up.gif`` and ``arrow-down.gif`` were combined into ``sorting-"
"icons.gif``."
msgstr ""
"Khususnya: ``selector-add.gif``, ``selector-addall.gif``, ``selector-remove."
"gif``, ``selector-removeall.gif``, ``selector_stacked-add.gif`` dan "
"``selector_stacked-remove.gif`` telah digabungkan kedalam ``selector-icons."
"gif``; dan ``arrow-up.gif`` dan ``arrow-down.gif`` telah digabungkan kedalam "
"``sorting-icons.gif``. "

msgid ""
"If you used those icons to customize the admin, then you'll need to replace "
"them with your own icons or get the files from a previous release."
msgstr ""
"Jika anda menggunakan ikon-ikon tersebut untuk menyesuaikan admin, kemudian "
"anda akan butuh mengganti mereka dengan ikon-ikon anda sendiri atau "
"mendapatkan berkas-berkas dari terbitan sebelumnya."

msgid "CSS class names in admin forms"
msgstr "Nama kelas CSS di formulir admin"

msgid ""
"To avoid conflicts with other common CSS class names (e.g. \"button\"), we "
"added a prefix (\"field-\") to all CSS class names automatically generated "
"from the form field names in the main admin forms, stacked inline forms and "
"tabular inline cells. You'll need to take that prefix into account in your "
"custom style sheets or JavaScript files if you previously used plain field "
"names as selectors for custom styles or JavaScript transformations."
msgstr ""
"Untuk menghindari pertentangan dengan nama kelas CSS umum lainnya (sebagai "
"contoh \"button\"), kami menambahkan awalan (field-\") ke semua nama kelas "
"yang otomatis dibangkitkan dari nama bidang di formulir admin utama, "
"formulir ditumpuk berderet dan sel-sel datar berderet. Anda akan butuh "
"mengambil awalan itu kedalam akun di lembaran gaya penyesuaian anda atau "
"berkas JavaScript jika anda sebelumnya menggunakan nama bidang polos sebagai "
"pemilih untuk gaya penyesuaian atau perubahan JavaScript."

msgid "Compatibility with old signed data"
msgstr "Kesesuaian dengan data lama ditandatangani"

msgid ""
"Django 1.3 changed the cryptographic signing mechanisms used in a number of "
"places in Django. While Django 1.3 kept fallbacks that would accept hashes "
"produced by the previous methods, these fallbacks are removed in Django 1.4."
msgstr ""
"Django 1.3 merubah mekanisme penandatanganan kriptografi digunakan dalam "
"sejumlah tempat di Django. Selagi Django 1.3 terus menggunakan yang akan "
"menerima acakan dihasilkan oleh metode sebelumnya, penggunaan ini akan "
"dipindahkan di Django 1.4."

msgid ""
"So, if you upgrade to Django 1.4 directly from 1.2 or earlier, you may lose/"
"invalidate certain pieces of data that have been cryptographically signed "
"using an old method. To avoid this, use Django 1.3 first for a period of "
"time to allow the signed data to expire naturally. The affected parts are "
"detailed below, with 1) the consequences of ignoring this advice and 2) the "
"amount of time you need to run Django 1.3 for the data to expire or become "
"irrelevant."
msgstr ""
"Jadi, jika anda meningkatkan ke Django 1.4 secara langsung dari 1.2 atau "
"lebih awal, anda mungkin kehilangan/membatalkan potongan tertentu dari data "
"yang telah dikriptografi ditandatangani menggunakan metode lama. Untuk "
"menghindari ini, gunakan Django 1.3 dahulu untuk masa dari waktu untuk "
"mengizinkan data ditandatangani untuk secara alamai kadaluarsa. Bagian "
"terpengaruh dirinci dibawah ini, dengan 1) akibat dari mengabaikan saran ini "
"dan 2) sejumlah waktu anda butuhkan untuk menjalankan Django 1.3 untuk data "
"menjadi kadaluarsa atau menjadi tidak bersangkut paut."

msgid "``contrib.sessions`` data integrity check"
msgstr "Pemeriksaan kesatuan data ``contrib.sessions``"

msgid ""
"Consequences: The user will be logged out, and session data will be lost."
msgstr "Konsekuensi: Pengguna akan keluar, dan data sesi akan hilang."

msgid "Time period: Defined by :setting:`SESSION_COOKIE_AGE`."
msgstr "Periode waktu: Ditentukan oleh :setting:`SESSION_COOKIE_AGE`."

msgid "``contrib.auth`` password reset hash"
msgstr "Aakan penyetelan kembali sandi ``contrib.auth``"

msgid ""
"Consequences: Password reset links from before the upgrade will not work."
msgstr ""
"Konsekuensi: Tautan setel kembai sandi dari sebelum peningkatan tidak akan "
"bekerja."

msgid "Time period: Defined by ``PASSWORD_RESET_TIMEOUT_DAYS``."
msgstr ""

msgid ""
"Form-related hashes: these have a much shorter lifetime and are relevant "
"only for the short window where a user might fill in a form generated by the "
"pre-upgrade Django instance and try to submit it to the upgraded Django "
"instance:"
msgstr ""

msgid "``contrib.comments`` form security hash"
msgstr "Campuran keamanan formulir ``contrib.comments``"

msgid ""
"Consequences: The user will see the validation error \"Security hash failed."
"\""
msgstr ""
"Konsekuensi: penggunakan akan melihat kesalahan pengesahan \"Security hash "
"failed.\""

msgid ""
"Time period: The amount of time you expect users to take filling out comment "
"forms."
msgstr ""
"Periode waktu: Sejumlah waktu anda harapkan pengguna mengisi formulir "
"komentar."

msgid "``FormWizard`` security hash"
msgstr "Campuran keamanan ``FormWizard``"

msgid ""
"Consequences: The user will see an error about the form having expired and "
"will be sent back to the first page of the wizard, losing the data entered "
"so far."
msgstr ""
"Konsekuensi: Pengguna akan melihat sebuah kesalahan tentang formulir "
"memiliki kadaluarsa dan akan dikirim kembali ke halaman pertama dari wizard, "
"kehilangan data dimasukkan sejauh ini."

msgid ""
"Time period: The amount of time you expect users to take filling out the "
"affected forms."
msgstr ""
"Periode waktu: Sejumlah waktu anda harapkan pengguna mengisi formulir "
"terpengaruh."

msgid "CSRF check"
msgstr "Pemeriksaan CSRF"

msgid ""
"Note: This is actually a Django 1.1 fallback, not Django 1.2, and it applies "
"only if you're upgrading from 1.1."
msgstr ""
"Catat: Ini adalah sebenarnya sebuah fallback Django 1.1, bukan Django 1.2, "
"dan itu berlaku hanya jika anda sedang meningkatkan dari 1.1."

msgid ""
"Consequences: The user will see a 403 error with any CSRF-protected POST "
"form."
msgstr ""
"Konsekuensi: Pengguna akan melihat kesalahan 403 dengan formulir POST "
"dilindungi-CSRF."

msgid ""
"Time period: The amount of time you expect user to take filling out such "
"forms."
msgstr ""
"Periode waktu: Sejumlah waktu anda harapkan pengguna mengisi formulir "
"seperti itu."

msgid "``contrib.auth`` user password hash-upgrade sequence"
msgstr "Urutan peningkatan-campuran sandi pengguna ``contrib.auth``"

msgid ""
"Consequences: Each user's password will be updated to a stronger password "
"hash when it's written to the database in 1.4. This means that if you "
"upgrade to 1.4 and then need to downgrade to 1.3, version 1.3 won't be able "
"to read the updated passwords."
msgstr ""
"Konsekuensi: Setiap sandi pengguna akan diperbaharui ke acakan sandi terkuat "
"ketika itu ditulis ke basisdata di 1.4. Ini berarti bahwa jika anda "
"meningkatkan ke 1.4 dan kemudian butuh untuk menurunkan ke 1.3, versi 1.3 "
"tidak akan dapat membaca sandi terperbaharui."

msgid ""
"Remedy: Set :setting:`PASSWORD_HASHERS` to use your original password "
"hashing when you initially upgrade to 1.4. After you confirm your app works "
"well with Django 1.4 and you won't have to roll back to 1.3, enable the new "
"password hashes."
msgstr ""
"Memperbaiki: Setel :setting:`PASSWORD_HASHERS` untuk menggunakan mengacak "
"sandi asli ketika anda awalnya meningkatkan ke 1.4. Setelah anda menegaskan "
"aplikasi anda bekerja baik dengan Django 1.4 dan anda tidak harus "
"mengembalikan ke 1.3, adakan acakan sandi baru."

msgid "``django.contrib.flatpages``"
msgstr "``django.contrib.flatpages``"

msgid ""
"Starting in 1.4, the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only adds a trailing slash and redirects if the "
"resulting URL refers to an existing flatpage. For example, requesting ``/"
"notaflatpageoravalidurl`` in a previous version would redirect to ``/"
"notaflatpageoravalidurl/``, which would subsequently raise a 404. Requesting "
"``/notaflatpageoravalidurl`` now will immediately raise a 404."
msgstr ""
"Memulai di 1.4, :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` hanya menambah buntutan garis miring dan "
"pengalihan jika URL dihaslikan mengacu pada sebuah flatpage yang ada. "
"Sebagai contoh, meminta ``/notaflatpageoravalidurl`` di versi sebelumnya "
"akan mengalihkan ke ``/notaflatpageoravalidurl/``, yang akan kemudian "
"memunculkan sebuah 404. Meminta ``/notaflatpageoravalidurl`` sekarang akan "
"segera memunculkan sebuah 404."

msgid ""
"Also, redirects returned by flatpages are now permanent (with 301 status "
"code), to match the behavior of :class:`~django.middleware.common."
"CommonMiddleware`."
msgstr ""
"Juga, pengalihan dikembalikan oleh flatpage sekarang tetap (dengan kode "
"keadaan 301), untuk mencocokkan perilaku dari :class:`~django.middleware."
"common.CommonMiddleware`."

msgid ""
"Serialization of :class:`~datetime.datetime` and :class:`~datetime.time`"
msgstr ""
"Serialisasi dari :class:`~datetime.datetime` dan :class:`~datetime.time`"

msgid ""
"As a consequence of time-zone support, and according to the ECMA-262 "
"specification, we made changes to the JSON serializer:"
msgstr ""
"Sebagai konsekuensi dari dukungan zona-waktu, dan menurut pada spesifikasi "
"ECMA-262, kami membuat perubahan pada penserial JSON:"

msgid ""
"It includes the time zone for aware datetime objects. It raises an exception "
"for aware time objects."
msgstr ""
"Itu termasuk zona waktu untuk obyek datetime sadar. Itu memunculkan sebuah "
"pengecualian untuk obyek waktu sadar."

msgid ""
"It includes milliseconds for datetime and time objects. There is still some "
"precision loss, because Python stores microseconds (6 digits) and JSON only "
"supports milliseconds (3 digits). However, it's better than discarding "
"microseconds entirely."
msgstr ""
"Itu menyertakan milidetik untuk obyek datetime dan time. Masih ada beberapa "
"kehilangan ketelitian, karena Python menyimpan mikrodetik (6 angka) dan JSON "
"hanya mendukung milidetik (3 angka). Bagaimanapun, itu lebih baik daripada "
"mengabaikan mikrodetik seluruhnya."

msgid ""
"We changed the XML serializer to use the ISO8601 format for datetimes. The "
"letter ``T`` is used to separate the date part from the time part, instead "
"of a space. Time zone information is included in the ``[+-]HH:MM`` format."
msgstr ""
"Kami merubah penserial XML untuk menggunakan bentuk ISO8601 untuk datetime. "
"Huruf ``T`` digunakan untuk memisahkan bagian tanggal dari bagian waktu, "
"bukannya spasi. Informasi zona waktu disertakan di bentuk ``[+-]HH:MM``."

msgid ""
"Though the serializers now use these new formats when creating fixtures, "
"they can still load fixtures that use the old format."
msgstr ""
"Meskipun penserial sekarang menggunakan bentuk baru ini ketika membuat alat "
"bantu, mereka masih dapat memuat alat bantu yang menggunakan bentuk lama."

msgid "``supports_timezone`` changed to ``False`` for SQLite"
msgstr "``supports_timezone`` dirubah ke ``False`` untuk SQLite"

msgid ""
"The database feature ``supports_timezone`` used to be ``True`` for SQLite. "
"Indeed, if you saved an aware datetime object, SQLite stored a string that "
"included an UTC offset. However, this offset was ignored when loading the "
"value back from the database, which could corrupt the data."
msgstr ""
"Fitur basisdata ``supports_timezone`` biasanya ``True`` untuk SQLite. "
"Memang, jika anda menyimpan sebuah obyek datetime sadar, SQLite menyimpan "
"sebuah deretan karakter yang disertakan sebuah perimbangan UTC. "
"Bagaimanapun, perimbangan ini telah diabaikan ketika memuat nilai kembali "
"dari basisdata, yang dapat merusak data."

msgid ""
"In the context of time-zone support, this flag was changed to ``False``, and "
"datetimes are now stored without time-zone information in SQLite. When :"
"setting:`USE_TZ` is ``False``, if you attempt to save an aware datetime "
"object, Django raises an exception."
msgstr ""
"Dalam konteks dari dukungan zona-waktu, bendera ini telah berubah menjadi "
"``False``, dan datetime sekarang disimpan tanpa informasi zona-waktu di "
"SQLite. Ketika :setting:`USE_TZ` adalah ``False``, jika anda berusaha "
"menyimpan sebuah obyek zona waktu disadari, Django memunculkan sebuah "
"pengecualian."

msgid "``MySQLdb``-specific exceptions"
msgstr "Pengecualian ``MySQLdb``-khusus"

msgid ""
"The MySQL backend historically has raised ``MySQLdb.OperationalError`` when "
"a query triggered an exception. We've fixed this bug, and we now raise :exc:"
"`django.db.DatabaseError` instead. If you were testing for ``MySQLdb."
"OperationalError``, you'll need to update your ``except`` clauses."
msgstr ""
"Riwayat backend MySQL telah memunculkan ``MySQLdb.OperationalError`` ketika "
"permintaan memicu sebuah pengecualian. Kami telah memperbaiki kesalahan ini, "
"dan kami sekarang memunculkan :exc:`django.db.DatabaseError` sebagai "
"gantinya. Jika anda sedang mencoba untuk ``MySQLdb.OperationalError``, anda "
"akan butuh memperbaharui klausa ``except`` anda."

msgid "Database connection's thread-locality"
msgstr "Thread-locality hubungan basisdata"

msgid ""
"``DatabaseWrapper`` objects (i.e. the connection objects referenced by "
"``django.db.connection`` and ``django.db.connections[\"some_alias\"]``) used "
"to be thread-local. They are now global objects in order to be potentially "
"shared between multiple threads. While the individual connection objects are "
"now global, the ``django.db.connections`` dictionary referencing those "
"objects is still thread-local. Therefore if you just use the ORM or "
"``DatabaseWrapper.cursor()`` then the behavior is still the same as before. "
"Note, however, that ``django.db.connection`` does not directly reference the "
"default ``DatabaseWrapper`` object anymore and is now a proxy to access that "
"object's attributes. If you need to access the actual ``DatabaseWrapper`` "
"object, use ``django.db.connections[DEFAULT_DB_ALIAS]`` instead."
msgstr ""
"Obyek ``DatabaseWrapper`` (yaitu hubungan obyek diacukan oleh ``django.db."
"connection`` dan ``django.db.connections[\"some_alias\"]``) biasanya thread-"
"local. Mereka sekarang obyek global untuk berpeluang berbagi diantara banyak "
"thread. Selagi hubungan obyek individu sekarang global, kamus ``django.db."
"connections`` mengacu obyek tersebut adalah masih thread-local. Karena itu "
"jika anda hanya menggunakan ORM atau ``DatabaseWrapper.cursor()`` kemudian "
"kebiasan masih sama seperti sebelumnya. Catat, bagaimanapun, bahwa ``django."
"db.connection`` tidak secara langsung mengacu awalan obyek "
"``DatabaseWrapper`` lagi dan sekarang sebuah proxy untuk mengakses atribut "
"obyek itu. Jika anda butuh mengakses obyek ``DatabaseWrapper`` sesungguhnya, "
"gunakan ``django.db.connections[DEFAULT_DB_ALIAS]`` sebagai gantinya."

msgid ""
"As part of this change, all underlying SQLite connections are now enabled "
"for potential thread-sharing (by passing the ``check_same_thread=False`` "
"attribute to ``pysqlite``). ``DatabaseWrapper`` however preserves the "
"previous behavior by disabling thread-sharing by default, so this does not "
"affect any existing code that purely relies on the ORM or on "
"``DatabaseWrapper.cursor()``."
msgstr ""

msgid ""
"Finally, while it's now possible to pass connections between threads, Django "
"doesn't make any effort to synchronize access to the underlying backend. "
"Concurrency behavior is defined by the underlying backend implementation. "
"Check their documentation for details."
msgstr ""
"Akhirnya, selagi itu sekarang mungkin untuk melewatkan hubungan diantara "
"thread, Django tidak membuat usaha apapun untuk menyelaraskan akses ke "
"backend pokok. Perilaku berulang ditentukan oleh penerapan backend pokok. "
"Periksa dokumentasi mereka untuk rincian."

msgid "``COMMENTS_BANNED_USERS_GROUP`` setting"
msgstr ""

msgid ""
"Django's comments has historically supported excluding the comments of a "
"special user group, but we've never documented the feature properly and "
"didn't enforce the exclusion in other parts of the app such as the template "
"tags. To fix this problem, we removed the code from the feed class."
msgstr ""
"Komentar Django mempunyai riwayat didukung mengeluarkan komentar dari "
"kelompok pengguna khusus, tetapi kami tidak pernah mendokumentasikan fitur "
"dengan benar dan tidak memaksa pengecualian di bagian lain dari aplikasi "
"seperti etiket cetakan. Untuk memperbaiki masalah ini, kami telah "
"menganjurkan kode dari kelas umpan."

msgid ""
"If you rely on the feature and want to restore the old behavior, use a "
"custom comment model manager to exclude the user group, like this::"
msgstr ""
"Jika anda bergantung pada fitur dan ingin menyimpan kembali perilaku lama, "
"gunakan penyesuaian pengelola model komentar untuk mengeluarkan kelompok "
"pengguna, seperti ini::"

msgid ""
"Save this model manager in your custom comment app (e.g., in "
"``my_comments_app/managers.py``) and add it your custom comment app model::"
msgstr ""
"Simpan pengelola model ini di aplikasi komentar penyesuaian anda (sebagai "
"contoh, di ``my_comments_app/managers.py``) dan tambah itu ke model aplikasi "
"komentar penyesuaian anda::"

msgid "``IGNORABLE_404_STARTS`` and ``IGNORABLE_404_ENDS`` settings"
msgstr ""

msgid ""
"Until Django 1.3, it was possible to exclude some URLs from Django's :doc:"
"`404 error reporting</howto/error-reporting>` by adding prefixes to "
"``IGNORABLE_404_STARTS`` and suffixes to ``IGNORABLE_404_ENDS``."
msgstr ""
"Sampai Django 1.3, itu memungkinkan mengeluarkan beberapa URL dari :doc:`404 "
"error reporting</howto/error-reporting>` Django dengan menambahkan awalan "
"pada ``IGNORABLE_404_STARTS`` dan akhiran pada ``IGNORABLE_404_ENDS``."

msgid ""
"In Django 1.4, these two settings are superseded by :setting:"
"`IGNORABLE_404_URLS`, which is a list of compiled regular expressions. "
"Django won't send an email for 404 errors on URLs that match any of them."
msgstr ""
"Di Django 1.4, kedua pengaturan ini adalah digantikan oleh :setting:"
"`IGNORABLE_404_URLS`, yang sebuah daftar dari regular expression yang "
"disusun. Django tidak akan mengirim sebuah surel untuk kesalahan 404 pada "
"URL yang cocok dari tiap mereka. "

msgid ""
"Furthermore, the previous settings had some rather arbitrary default values::"
msgstr ""
"Lebih lanjut, pengaturan sebelumnya mempunyai beberapa nilai awalan agak "
"berubah-ubah::"

msgid ""
"It's not Django's role to decide if your website has a legacy ``/cgi-bin/`` "
"section or a ``favicon.ico``. As a consequence, the default values of :"
"setting:`IGNORABLE_404_URLS`, ``IGNORABLE_404_STARTS``, and "
"``IGNORABLE_404_ENDS`` are all now empty."
msgstr ""
"Itu bukan peran Django untuk memutuskan jika situs jaringan anda mempunyai "
"warisan bagian ``/cgi-bin/`` atau ``favicon.ico``. Sebagai konsekuensi, "
"nilai awalan dari :setting:`IGNORABLE_404_URLS`, ``IGNORABLE_404_STARTS``, "
"dan ``IGNORABLE_404_ENDS`` semua sekarang kosong."

msgid ""
"If you have customized ``IGNORABLE_404_STARTS`` or ``IGNORABLE_404_ENDS``, "
"or if you want to keep the old default value, you should add the following "
"lines in your settings file::"
msgstr ""
"Jika anda telah menyesuaikan ``IGNORABLE_404_STARTS`` atau "
"``IGNORABLE_404_ENDS``, atau jika anda ingin menjaga nilai awalan lama, anda "
"harus menambahkan baris-baris berikut ke berkas pengaturan anda::"

msgid ""
"Don't forget to escape characters that have a special meaning in a regular "
"expression, such as periods."
msgstr ""
"Jangan lupa untuk meloloskan karakter yang mempunyai arti khusus di regular "
"expression, seperti masa."

msgid "CSRF protection extended to PUT and DELETE"
msgstr "Perlindungan CSRF diperpanjang pada PUT dan DELETE"

msgid ""
"Previously, Django's :doc:`CSRF protection </ref/csrf/>` provided protection "
"only against POST requests. Since use of PUT and DELETE methods in AJAX "
"applications is becoming more common, we now protect all methods not defined "
"as safe by :rfc:`2616` -- i.e., we exempt GET, HEAD, OPTIONS and TRACE, and "
"we enforce protection on everything else."
msgstr ""
"Sebelumnya, :doc:`CSRF protection </ref/csrf/>` Django menyediakan "
"perlindungan hanya terhadap permintaan POST. Sejak penggunaan metode PUT dan "
"DELETE di aplikasi AJAX menjadi lebih umum, kami sekarang melindungi semua "
"metode tidak ditentukan sebagai aman oleh :rfc:`2616` -- yaitu, kami "
"membebaskan  GET, HEAD, OPTIONS dan TRACE, dan kami memaksa perlindungan "
"yang lainnya."

msgid ""
"If you're using PUT or DELETE methods in AJAX applications, please see the :"
"ref:`instructions about using AJAX and CSRF <csrf-ajax>`."
msgstr ""
"Jika anda sedang menggunakan metode PUT atau DELETE di aplikasi AJAX, harap "
"melihat :ref:`instructions about using AJAX and CSRF <csrf-ajax>`."

msgid "Password reset view now accepts ``subject_template_name``"
msgstr ""
"Tampilan penyetelan ulang sandi sekarang menerima ``subject_template_name``"

msgid ""
"The ``password_reset`` view in ``django.contrib.auth`` now accepts a "
"``subject_template_name`` parameter, which is passed to the password save "
"form as a keyword argument. If you are using this view with a custom "
"password reset form, then you will need to ensure your form's ``save()`` "
"method accepts this keyword argument."
msgstr ""
"Tampilan ``password_reset`` di ``django.contrib.auth`` sekarang menerima "
"sebuah parameter ``subject_template_name``, yang dilewati ke formulir simpan "
"sandi sebagai argumen kata kunci. Jika anda sedang menggunakan tampilan ini "
"dengan penyesuaian formulir setel kembali sandi, kemudian anda akan butuh "
"memastikan metode ``save()`` formulir anda menerima argumen kata kunci ini."

msgid "``django.core.template_loaders``"
msgstr "``django.core.template_loaders``"

msgid ""
"This was an alias to ``django.template.loader`` since 2005, and we've "
"removed it without emitting a warning due to the length of the deprecation. "
"If your code still referenced this, please use ``django.template.loader`` "
"instead."
msgstr ""
"Ini adalah nama lain pada ``django.template.loader`` sejak 2005, dan kami "
"telah memindahkannya tanpa mengilangkan sebuah peringatan karena panjang "
"dari pengusangan. Jika kode anda masih mengacu ini, harap gunakan ``django."
"template.loader`` sebagai gantinya."

msgid "``django.db.models.fields.URLField.verify_exists``"
msgstr "``django.db.models.fields.URLField.verify_exists``"

msgid ""
"This functionality has been removed due to intractable performance and "
"security issues. Any existing usage of ``verify_exists`` should be removed."
msgstr ""
"Kegunaan ini telah dipindahkan karena masalah penampilan dan keamanan. Tiap "
"penggunaan yang ada dari ``verify_exists`` harus dipindahkan."

msgid "``django.core.files.storage.Storage.open``"
msgstr "``django.core.files.storage.Storage.open``"

msgid ""
"The ``open`` method of the base Storage class used to take an obscure "
"parameter ``mixin`` that allowed you to dynamically change the base classes "
"of the returned file object. This has been removed. In the rare case you "
"relied on the ``mixin`` parameter, you can easily achieve the same by "
"overriding the ``open`` method, like this::"
msgstr ""
"Metode ``open`` dari kelas Penyimpanan dasar digunakan untuk mengambil "
"sebuah parameter kabur ``mixin`` yang mengizinkan anda secara dinamis "
"merubah perubahan kelas-kelas dasar dari obyek berkas yang dikembalikan. Ini "
"telah dipindahkan. Di kasus yang jarang anda bergantung pada parameter "
"``mixin``, anda dapat dengan mudah mencapai kesamaan dengan menimpa metode "
"``open``, seperti ini::"

msgid "YAML deserializer now uses ``yaml.safe_load``"
msgstr "Deserializer YAML sekarang menggunakan ``yaml.safe_load``"

msgid ""
"``yaml.load`` is able to construct any Python object, which may trigger "
"arbitrary code execution if you process a YAML document that comes from an "
"untrusted source. This feature isn't necessary for Django's YAML "
"deserializer, whose primary use is to load fixtures consisting of simple "
"objects. Even though fixtures are trusted data, the YAML deserializer now "
"uses ``yaml.safe_load`` for additional security."
msgstr ""
"``yaml.load`` dapat membangun obyek Python aapun, yang mungkin memicu "
"pengerjaan kode berubah-ubah jika anda mengolah dokumen YAML yang datang "
"dari sumber yang tidak dipercaya. Fitur ini tidak diperlukan untuk "
"deserialisasi YAML Django, yang penggunaan utama adalah memuat perlengkapan "
"terdiri dari obyek sederhana. Bahkan meskipun perlengkapan adalah data "
"dipercaya, pendeserialisasi YAML sekarang menggunakan ``yaml.safe_load`` "
"untuk keamanan tambahan."

msgid "Session cookies now have the ``httponly`` flag by default"
msgstr "Kue sesi sekarang mempunyai bendera ``httponly`` secara awalan"

msgid ""
"Session cookies now include the ``httponly`` attribute by default to help "
"reduce the impact of potential XSS attacks. As a consequence of this change, "
"session cookie data, including ``sessionid``, is no longer accessible from "
"JavaScript in many browsers. For strict backwards compatibility, use "
"``SESSION_COOKIE_HTTPONLY = False`` in your settings file."
msgstr ""

msgid "The :tfilter:`urlize` filter no longer escapes every URL"
msgstr "Penyaring :tfilter:`urlize` tidak lagi meloloskan setiap URL"

msgid ""
"When a URL contains a ``%xx`` sequence, where ``xx`` are two hexadecimal "
"digits, :tfilter:`urlize` now assumes that the URL is already escaped and "
"doesn't apply URL escaping again. This is wrong for URLs whose unquoted form "
"contains a ``%xx`` sequence, but such URLs are very unlikely to happen in "
"the wild, because they would confuse browsers too."
msgstr ""
"Ketika URL mengandung urutan ``%xx``, dimana ``xx`` adalah dua angka "
"heksadesimal. :tfilter:`urlize` sekarang menganggap bahwa URL sudah lolos "
"dan tidak memberlakukan pelolosan URL kembali. Ini adalah salah untuk URL "
"yang formulir tidak dikutipnya mengandung urutan ``%xx``, tetapi URL "
"tersebut sangat tidak mungkin terjadi di tidak teratur, karena mereka akan "
"membingunkan  peramban juga."

msgid "``assertTemplateUsed`` and ``assertTemplateNotUsed`` as context manager"
msgstr ""
"``assertTemplateUsed`` dan ``assertTemplateNotUsed`` sebagai pengelola "
"konteks"

msgid ""
"It's now possible to check whether a template was used within a block of "
"code with :meth:`~django.test.SimpleTestCase.assertTemplateUsed` and :meth:"
"`~django.test.SimpleTestCase.assertTemplateNotUsed`. And they can be used as "
"a context manager::"
msgstr ""
"Sekarang memungkinkan memeriksa apakah cetakan telah digunakan dalam blok "
"kode dengan :meth:`~django.test.SimpleTestCase.assertTemplateUsed` dan :meth:"
"`~django.test.SimpleTestCase.assertTemplateNotUsed`. Dan mereka dapat "
"digunakan sebagai pengelola konteks::"

msgid "See the :ref:`assertion documentation<assertions>` for more."
msgstr "Lihat :ref:`assertion documentation<assertions>` untuk lebih."

msgid "Database connections after running the test suite"
msgstr "Sambungan absisdata setelah menjalankan rangkaian percobaan"

msgid ""
"The default test runner no longer restores the database connections after "
"tests' execution. This prevents the production database from being exposed "
"to potential threads that would still be running and attempting to create "
"new connections."
msgstr ""
"Penjalan percobaan awalan tidak lagi menyimpan kembali hubungan basisdata "
"setelah pengerjaan percobaan. Ini mencegah basisdata produksi dari menjadi "
"terbuka pada kemungkinan ancaman yang akan masih berjalan dan berusaha untuk "
"membuat hubungan baru."

msgid ""
"If your code relied on connections to the production database being created "
"after tests' execution, then you can restore the previous behavior by "
"subclassing ``DjangoTestRunner`` and overriding its ``teardown_databases()`` "
"method."
msgstr ""
"Jika kode anda bergantung pada hubungan ke basisdata produksi sedang dibuat "
"setelah pengerjaan percobaan, kemudian anda dapat menyimpan kembali perilaku "
"sebelumnya dengan mensubkelaskan ``DjangoTestRunner`` dan menimpa metode "
"``teardown_databases()`` nya."

msgid "Output of :djadmin:`manage.py help <help>`"
msgstr "Keluaran dari :djadmin:`manage.py help <help>`"

msgid ""
":djadmin:`manage.py help <help>` now groups available commands by "
"application. If you depended on the output of this command -- if you parsed "
"it, for example -- then you'll need to update your code. To get a list of "
"all available management commands in a script, use :djadmin:`manage.py help "
"--commands <help>` instead."
msgstr ""
":djadmin:`manage.py help <help>` sekarang mengelompokkan perintah tersedia "
"oleh aplikasi. Jika anda bergantung pada keluaran dari perintah ini -- jika "
"anda mengurainya -- kemudian anda akan butuh memperbaharui kode anda. Untuk "
"mendapatkan daftar dari semua perintah pengelolaan yang tersedia di tulisan, "
"gunakan :djadmin:`manage.py help --commands <help>` sebagai gantinya."

msgid "``extends`` template tag"
msgstr "Etiket cetakan ``extends``"

msgid ""
"Previously, the :ttag:`extends` tag used a buggy method of parsing "
"arguments, which could lead to it erroneously considering an argument as a "
"string literal when it wasn't. It now uses ``parser.compile_filter``, like "
"other tags."
msgstr ""
"Sebelumnya, etiket :ttag:`extends` menggunakan metode penuh kesalahan dalam "
"mengurai argumen, yang dapat membawa ke keliruan itu mengingat sebuah "
"argumen sebagai harfiah deretan karakter ketika itu bukan. Itu sekarang "
"menggunakan ``parser.compile_filter``, seperti etiket lainnya."

msgid ""
"The internals of the tag aren't part of the official stable API, but in the "
"interests of full disclosure, the ``ExtendsNode.__init__`` definition has "
"changed, which may break any custom tags that use this class."
msgstr ""
"Internal dari etiket bukan bagian dari API stabil resmi, tetapi dalam "
"kepentingan dari penyingkapan penuh, pengertian ``ExtendsNode.__init__`` "
"telah berubah, yang mungkin merusak tiap etiket penyesuaian yang menggungkan "
"kelas ini."

msgid "Loading some incomplete fixtures no longer works"
msgstr "Memuat beberapa alat bantu yang tidak lengkap yang tidak lagi bekerja"

msgid ""
"Prior to 1.4, a default value was inserted for fixture objects that were "
"missing a specific date or datetime value when auto_now or auto_now_add was "
"set for the field. This was something that should not have worked, and in "
"1.4 loading such incomplete fixtures will fail. Because fixtures are a raw "
"import, they should explicitly specify all field values, regardless of field "
"options on the model."
msgstr ""
"Sebelum 1.4, nilai awalan telah dimasukkan untuk obyek alat bantu yang telah "
"kehilangan tanggal khusus atau nilai datetime ketika auto_now_add telah "
"disetel untuk bidang. Ini adalah sesuatu yang harus tidak dikerjakan, dan di "
"1.4 memuat alat bantu seperti itu akan gagal. Karena alat bantu adalah impor "
"mentah, mereka harus secara eksplisit menentukan semua nilai bidang, tanpa "
"memperhatikan pilihan bidang pada model."

msgid "Development Server Multithreading"
msgstr "Development Server Multithreading"

msgid ""
"The development server is now is multithreaded by default. Use the :option:"
"`runserver --nothreading` option to disable the use of threading in the "
"development server:"
msgstr ""

msgid "Attributes disabled in markdown when safe mode set"
msgstr "Peniadaan atribut diturunkan ketika mode aman disetel"

msgid ""
"Prior to Django 1.4, attributes were included in any markdown output "
"regardless of safe mode setting of the filter. With version > 2.1 of the "
"Python-Markdown library, an enable_attributes option was added. When the "
"safe argument is passed to the markdown filter, both the ``safe_mode=True`` "
"and ``enable_attributes=False`` options are set. If using a version of the "
"Python-Markdown library less than 2.1, a warning is issued that the output "
"is insecure."
msgstr ""
"Sebelum Django 1.4, atribut disertakan di tiap keluaran penurunan tanpa "
"memperhatikan dari pengaturan suasana aman dari penyaring. Dengan versi > "
"2.1 dari pustaka Python-Markdown, sebuah pilihan enable_attributes telah "
"ditambahkan. Ketika argumen aman dilewatkan ke penyaring penurunan, kedua "
"pilihan ``safe_mode=True`` dan ``enable_attributes=False`` disetel. Jika "
"menggunakan versi dari pustaka Python-Markdown kurang dari 2.1, sebuah "
"peringatan diterbitkan yang keluarannya tidak aman."

msgid "FormMixin get_initial returns an instance-specific dictionary"
msgstr "get_initial FormMixin mengembalikan sebuah kamus khusus-instance"

msgid ""
"In Django 1.3, the ``get_initial`` method of the :class:`django.views."
"generic.edit.FormMixin` class was returning the class ``initial`` "
"dictionary. This has been fixed to return a copy of this dictionary, so form "
"instances can modify their initial data without messing with the class "
"variable."
msgstr ""
"Di Django 1.3, metode ``get_initial`` dari kelas :class:`django.views."
"generic.edit.FormMixin` telah mengembalikan kelas ``initial`` kamus. Ini "
"telah diperbaiki untuk mengembalikan salinan dari kamus ini, jadi formulir "
"instance dapat merubah data inisial mereka tanpa mengacaukan dengan variabel "
"kelas."

msgid "Features deprecated in 1.4"
msgstr "Fitur usang di 1.4"

msgid "Old styles of calling ``cache_page`` decorator"
msgstr "Gaya lama dari memanggil penghias ``cache_page`` "

msgid ""
"Some legacy ways of calling :func:`~django.views.decorators.cache."
"cache_page` have been deprecated. Please see the documentation for the "
"correct way to use this decorator."
msgstr ""
"Beberapa cara warisan dari memanggil :func:`~django.views.decorators.cache."
"cache_page` telah diusangkan. Harap lihat dokumentasi untuk cara benar untuk "
"menggunakan penghias ini."

msgid "Support for PostgreSQL versions older than 8.2"
msgstr "Mendukung untuk PostgreSQL versi lebih lama dari 8.2"

msgid ""
"Django 1.3 dropped support for PostgreSQL versions older than 8.0, and we "
"suggested using a more recent version because of performance improvements "
"and, more importantly, the end of upstream support periods for 8.0 and 8.1 "
"was near (November 2010)."
msgstr ""
"Django 1.3 membuang dukungan untuk versi PostgreSQL lebih lama dari 8.0, dan "
"kami menyarankan menggunakan versi paling akhir karena dari penampilan "
"perbaikan dan, lebih penting, akhir dari masa dukungan hulu untuk 8.0 dan "
"8.1 telah dekat (November 2010)."

msgid ""
"Django 1.4 takes that policy further and sets 8.2 as the minimum PostgreSQL "
"version it officially supports."
msgstr ""
"Django 1.4 mengambil kebijakan itu lebih jauh dan menyetel 8.2 sebagai versi "
"PostgreSQL minimal itu secara resmi dukung."

msgid "Request exceptions are now always logged"
msgstr "Permintaan pengecualian sekarang selalu dicatat"

msgid ""
"When we added :doc:`logging support </topics/logging/>` in Django in 1.3, "
"the admin error email support was moved into the :class:`django.utils.log."
"AdminEmailHandler`, attached to the ``'django.request'`` logger. In order to "
"maintain the established behavior of error emails, the ``'django.request'`` "
"logger was called only when :setting:`DEBUG` was ``False``."
msgstr ""
"Ketika kami menambahkan :doc:`logging support </topics/logging/>` di Django "
"di 1.3, dukungan surel kesalahan admin telah dipindahkan kedalam :class:"
"`django.utils.log.AdminEmailHandler`, dilampirkan ke pencatat ``'django."
"request'``. Untuk merawat kebiasan yang terbangun dari surel kesalahan, "
"pencatat ``'django.request'`` dipanggil hanya ketika :setting:`DEBUG` adalah "
"``False``."

msgid ""
"To increase the flexibility of error logging for requests, the ``'django."
"request'`` logger is now called regardless of the value of :setting:`DEBUG`, "
"and the default settings file for new projects now includes a separate "
"filter attached to :class:`django.utils.log.AdminEmailHandler` to prevent "
"admin error emails in ``DEBUG`` mode::"
msgstr ""
"Untuk meningkatkan fleksibilitas dari pencatatan kesalahan untuk permintaan, "
"pencatat ``'django.request'`` sekarang dipanggil tanpa memperhatikan nilai "
"dari :setting:`DEBUG`, dan berkas pengaturan awalan untuk proyek baru "
"sekarang menyertakan penyaring terpisah terlampir pada :class:`django.utils."
"log.AdminEmailHandler` untuk mencegah surel kesalahan admin di suasana "
"``DEBUG``::"

msgid ""
"If your project was created prior to this change, your :setting:`LOGGING` "
"setting will not include this new filter. In order to maintain backwards-"
"compatibility, Django will detect that your ``'mail_admins'`` handler "
"configuration includes no ``'filters'`` section and will automatically add "
"this filter for you and issue a pending-deprecation warning. This will "
"become a deprecation warning in Django 1.5, and in Django 1.6 the backwards-"
"compatibility shim will be removed entirely."
msgstr ""
"Jika proyek anda telah dibuat sebelum perubahan ini, pengaturan :setting:"
"`LOGGING` anda tidak akan menyertakan penyaring baru ini. Untuk merawat "
"kesesuaian-kebelakang, Django akan mengetahui bahwa konfigurasi penangan "
"``'mail_admins'`` anda tidak menyertakan bagian ``'filters'`` dan akan "
"secara otomatis menambah penyaring ini untuk anda dan masalah peringatan "
"pengusangan-tertunda. Ini akan menjadi peringatan pengusangan di Django 1.5, "
"dan di Django 1.6 shim kesesuaian-kebelakang akan dipindahkan sepenuhnya."

msgid ""
"The existence of any ``'filters'`` key under the ``'mail_admins'`` handler "
"will disable this backward-compatibility shim and deprecation warning."
msgstr ""
"Kehadiran dari kunci ``'filters'`` apapun dibawah penangan ``'mail_admins'`` "
"akan meniadakan shim kesesuaian-kebelakang ini dan peringatan pengusangan."

msgid "``django.conf.urls.defaults``"
msgstr "``django.conf.urls.defaults``"

msgid ""
"Until Django 1.3, the ``include()``, ``patterns()``, and ``url()`` "
"functions, plus :data:`~django.conf.urls.handler404` and :data:`~django.conf."
"urls.handler500` were located in a ``django.conf.urls.defaults`` module."
msgstr ""
"Sampai Django 1.3, fungsi-fungsi ``include()``, ``patterns()``, dan "
"``url()`` ditambah :data:`~django.conf.urls.handler404` dan :data:`~django."
"conf.urls.handler500` ditempatkan dalam modul ``django.conf.urls.defaults``."

msgid "In Django 1.4, they live in :mod:`django.conf.urls`."
msgstr "Di Django 1.4, mereka berada di :mod:`django.conf.urls`."

msgid "``django.contrib.databrowse``"
msgstr "``django.contrib.databrowse``"

msgid ""
"Databrowse has not seen active development for some time, and this does not "
"show any sign of changing. There had been a suggestion for a `GSOC project`_ "
"to integrate the functionality of databrowse into the admin, but no progress "
"was made. While Databrowse has been deprecated, an enhancement of ``django."
"contrib.admin`` providing a similar feature set is still possible."
msgstr ""
"Databrowse belum kelihatan pengembangan aktif untuk beberapa waktu, dan ini "
"tidak menampilkan tanda apapun dari perubahan. Ada sebuah saran untuk `GSOC "
"project`_ untuk memadukan kegunaan dari databrowse kedalam admin, tetapi "
"tidak ada kemajuan yang dibuat. Selagi Databrowse telah diusangkan, sebuah "
"peningkatan dari ``django.contrib.admin`` menyediakan sekumpulan fitur yang "
"mirip masih memungkinkan."

msgid ""
"The code that powers Databrowse is licensed under the same terms as Django "
"itself, so it's available to be adopted by an individual or group as a third-"
"party project."
msgstr ""
"Kode yang memberikan daya Databrowse berlisensi dibawah ketentuan sama "
"seperti Django itu sendiri, jadi itu tersedia untuk di pungut oleh "
"perorangan atau kelompok sebagai proyek pihak-ketiga."

msgid "``django.core.management.setup_environ``"
msgstr "``django.core.management.setup_environ``"

msgid ""
"This function temporarily modified ``sys.path`` in order to make the parent "
"\"project\" directory importable under the old flat :djadmin:`startproject` "
"layout. This function is now deprecated, as its path workarounds are no "
"longer needed with the new ``manage.py`` and default project layout."
msgstr ""
"Fungsi ini sementara merubah ``sys.path`` untuk membuat direktori \"proyek\" "
"induk dapat diimpor dibawah tata letak datar :djadmin:`startproject` yang "
"lama. Fungsi ini sekarang diusangkan, ketika pemecahan jalurnya tidak lagi "
"dibutuhkan dengan ``manage.py`` baru dan tata letak proyek awalan."

msgid ""
"This function was never documented or part of the public API, but it was "
"widely recommended for use in setting up a \"Django environment\" for a user "
"script. These uses should be replaced by setting the :envvar:"
"`DJANGO_SETTINGS_MODULE` environment variable or using :func:`django.conf."
"settings.configure`."
msgstr ""

msgid "``django.core.management.execute_manager``"
msgstr "``django.core.management.execute_manager``"

msgid ""
"This function was previously used by ``manage.py`` to execute a management "
"command. It is identical to ``django.core.management."
"execute_from_command_line``, except that it first calls ``setup_environ``, "
"which is now deprecated. As such, ``execute_manager`` is also deprecated; "
"``execute_from_command_line`` can be used instead. Neither of these "
"functions is documented as part of the public API, but a deprecation path is "
"needed due to use in existing ``manage.py`` files."
msgstr ""
"Fungsi ini sebelumnya digunakan oleh ``manage.py`` untuk menjalankan "
"perintah pengelolaan. Itu mirip pada ``django.core.management."
"execute_from_command_line``, kecuali bahwa itu pertama memanggil "
"``setup_environ``, yang sekarang diusangkan. Dengan demikian, "
"``execute_manager`` juga diusangkan; ``execute_from_command_line`` dapat "
"digunakan sebagai gantinya. Tidak ada dari fungsi ini didokumentasikan "
"sebagai bagian dari API umum, tetapi jalur pengusangan dibutuhkan karena "
"untuk digunakan di berkas ``manage.py`` yang ada. "

msgid "``is_safe`` and ``needs_autoescape`` attributes of template filters"
msgstr "Atribut ``is_safe`` dan ``needs_autoescape`` dari cetakan penyaring"

msgid ""
"Two flags, ``is_safe`` and ``needs_autoescape``, define how each template "
"filter interacts with Django's auto-escaping behavior. They used to be "
"attributes of the filter function::"
msgstr ""
"Dua bendera,  ``is_safe`` dan``needs_autoescape``, menentukan bagaimana "
"setiap penyaring cetakan berinteraksi dengan perilaku pelolosan-otomatis "
"Django. Mereka digunakan untuk menjadi atribut dari fungsi penyaring::"

msgid ""
"However, this technique caused some problems in combination with decorators, "
"especially :func:`@stringfilter <django.template.defaultfilters."
"stringfilter>`. Now, the flags are keyword arguments of :meth:`@register."
"filter <django.template.Library.filter>`::"
msgstr ""
"Bagaimanapun, teknik ini menyebabkan beberapa masalah di perpaduan dengan "
"penghias, khususnya :func:`@stringfilter <django.template.defaultfilters."
"stringfilter>`. Sekarang, bendera adalah argumen kata kunci dari :meth:"
"`@register.filter <django.template.Library.filter>`::"

msgid ""
"See :ref:`filters and auto-escaping <filters-auto-escaping>` for more "
"information."
msgstr ""
"Lihat :ref:`filters and auto-escaping <filters-auto-escaping>` untuk "
"informasi lebih."

msgid "Wildcard expansion of application names in ``INSTALLED_APPS``"
msgstr ""

msgid ""
"Until Django 1.3, :setting:`INSTALLED_APPS` accepted wildcards in "
"application names, like ``django.contrib.*``. The expansion was performed by "
"a filesystem-based implementation of ``from <package> import *``. "
"Unfortunately, this can't be done reliably."
msgstr ""
"Sampai DJango 1.3, :setting:`INSTALLED_APPS` menerima wildcard di nama "
"aplikasi, seperti ``django.contrib.*``. Perluasan telah dilakukan dengan "
"penerapan berdasarkan-sistem berkas dari ``from <package> import *``. "
"Sayangnya, ini tidak dapat dilakukan secara handal."

msgid ""
"This behavior was never documented. Since it is unpythonic, it was removed "
"in Django 1.4. If you relied on it, you must edit your settings file to list "
"all your applications explicitly."
msgstr ""

msgid "``HttpRequest.raw_post_data`` renamed to ``HttpRequest.body``"
msgstr ""
"``HttpRequest.raw_post_data`` dinamai kembali menjadi ``HttpRequest.body``"

msgid ""
"This attribute was confusingly named ``HttpRequest.raw_post_data``, but it "
"actually provided the body of the HTTP request. It's been renamed to "
"``HttpRequest.body``, and ``HttpRequest.raw_post_data`` has been deprecated."
msgstr ""
"Atribut ini membingungkan bernama ``HttpRequest.raw_post_data``, tetapi itu "
"sebenarnya disediakan badan dari permintaan HTTP. Itu telah dinamai menjadi "
"``HttpRequest.body``, dan ``HttpRequest.raw_post_data`` telah diusangkan."

msgid ""
"``django.contrib.sitemaps`` bug fix with potential performance implications"
msgstr ""
"Perbaikan kesalahan ``django.contrib.sitemaps``  dengan peluang keterlibatan "
"penampilan"

msgid ""
"In previous versions, ``Paginator`` objects used in sitemap classes were "
"cached, which could result in stale site maps. We've removed the caching, so "
"each request to a site map now creates a new Paginator object and calls the :"
"attr:`~django.contrib.sitemaps.Sitemap.items()` method of the :class:"
"`~django.contrib.sitemaps.Sitemap` subclass. Depending on what your "
"``items()`` method is doing, this may have a negative performance impact. To "
"mitigate the performance impact, consider using the :doc:`caching framework "
"</topics/cache>` within your ``Sitemap`` subclass."
msgstr ""
"Di versi sebelumnya, obyek ``Paginator`` digunakan di kelas-kelas peta situs "
"telah disembunyikan, yang dapat menghasilkan di peta situs basi. Kami telah "
"memindahkan penyembunyian, jadi setiap permintaan pada sebuah peta situs "
"sekarang membuat obyek Paginator baru dan memanggil metode :attr:`~django."
"contrib.sitemaps.Sitemap.items()` dari subkelas :class:`~django.contrib."
"sitemaps.Sitemap`. Tergantung pada apa metode ``items()``anda lakukan, ini "
"mungkin mempunyai dampak penampilan negatif, pertimbangkan menggunakan :doc:"
"`caching framework </topics/cache>` dalam subkelas ``Sitemap`` anda."

msgid "Versions of Python-Markdown earlier than 2.1"
msgstr "Versi dari Python-Markdown lebih awal daripada 2.1"

msgid ""
"Versions of Python-Markdown earlier than 2.1 do not support the option to "
"disable attributes. As a security issue, earlier versions of this library "
"will not be supported by the markup contrib app in 1.5 under an accelerated "
"deprecation timeline."
msgstr ""
"Versi dari Python-Markdown paling awal dari 2.1 tidak mendukung pilihan "
"untuk meniadakan atribut. Seperti masalah keamanan, versi paling awal dari "
"pustaka ini tidak akan didukung oleh aplikasi bantuan markah di 1.5 dibawah "
"linimasa pengusangan dipercepat."

msgid "Django 1.4.1 release notes"
msgstr "Catatan terbitan Django 1.4.1"

msgid ""
"This is the first security release in the Django 1.4 series, fixing several "
"security issues in Django 1.4. Django 1.4.1 is a recommended upgrade for all "
"users of Django 1.4."
msgstr ""
"Ini adalah terbitan keamanan pertama di rangkaian Django 1.4, memperbaiki "
"beberapa masalah keamanan di Django 1.4. Django 1.4.1 adalah peningkatan "
"dianjurkan untuk semua pengguna dari Django 1.4."

msgid "Django 1.4.10 release notes"
msgstr "Catatan terbitan Django 1.4.10"

msgid "*November 6, 2013*"
msgstr "*November 6, 2013*"

msgid "Django 1.4.10 fixes a Python-compatibility bug in the 1.4 series."
msgstr ""
"Django 1.4.10 memperbaiki sebuah kesalahan kesesuaian-Python di rangkaian "
"1.4."

msgid ""
"Django 1.4.9 inadvertently introduced issues with Python 2.5 compatibility. "
"Django 1.4.10 restores Python 2.5 compatibility. This was issue #21362 in "
"Django's Trac."
msgstr ""
"Django 1.4.9 secara tidak sengaja memperkenalkan masalah-masalah dengan "
"kesesuaian Python 2.5. Django 1.4.10 mengembalikan kesesuaian Python 2.5. "
"Ini adalah masalah #21362  di Trac Django."

msgid "Django 1.4.11 release notes"
msgstr "Catatan terbitan Django 1.4.11"

msgid "*April 21, 2014*"
msgstr "*April 21, 2014*"

msgid ""
"Django 1.4.11 fixes three security issues in 1.4.10. Additionally, Django's "
"vendored version of six, ``django.utils.six``, has been upgraded to the "
"latest release (1.6.1)."
msgstr ""
"Django 1.4.11 memperbaiki tiga masalah keamanan dalam 1.4.10. Tambahannya, "
"versi penjaja Django dari enam, ``django.utils.six``, telah ditingkatkan ke "
"terbitan terakhir (1.6.1)."

msgid "Unexpected code execution using ``reverse()``"
msgstr "Mengerjakan kode tidak diharapkan menggunakan ``reverse()``"

msgid ""
"Django's URL handling is based on a mapping of regex patterns (representing "
"the URLs) to callable views, and Django's own processing consists of "
"matching a requested URL against those patterns to determine the appropriate "
"view to invoke."
msgstr ""
"Penangangan URL Django berdasarkan pada pemetaan dari pola reggex (mewakili "
"URL) pada tampilan callable, dan pengolahan sendiri Django terdiri dari "
"mencocokkan URL diminta terhadap pola tersebut untuk menentukan tampilan "
"sesuai untuk diminta."

msgid ""
"Django also provides a convenience function -- ``reverse()`` -- which "
"performs this process in the opposite direction. The ``reverse()`` function "
"takes information about a view and returns a URL which would invoke that "
"view. Use of ``reverse()`` is encouraged for application developers, as the "
"output of ``reverse()`` is always based on the current URL patterns, meaning "
"developers do not need to change other code when making changes to URLs."
msgstr ""
"Django juga menyediakan fungsi nyaman -- ``reverse()`` -- yang melakukan "
"pengolahan ini di arah berlawanan. Fungsi ``reverse()`` mengambil informasi "
"tentang sebuah tampilan dan mengembalikan sebuah URL yang akan memohon "
"tampilan itu. Penggunaan ``reverse()`` adalah didorong untuk pengembang "
"aplikasi, sebagai keluaran dari ``reverse()`` selalu berdasarkan pada pola "
"URL saat ini, berarti pengembang tidak butuh merubah kode lain ketika "
"membuat perubahan pada URL."

msgid ""
"One argument signature for ``reverse()`` is to pass a dotted Python path to "
"the desired view. In this situation, Django will import the module indicated "
"by that dotted path as part of generating the resulting URL. If such a "
"module has import-time side effects, those side effects will occur."
msgstr ""
"Satu tanda tangan argumen untuk ``reverse()`` adalah melewatkan jalur Python "
"bertitik untuk tampilan yang diinginkan. Dalam keadaan ini, Django  akan "
"mengimpor modul yang diarahkan oleh jalur bertitik itu sebagai bagian dari "
"membangkitkan URL dihasilkan. Jika modul tersebut mempunyai efek samping "
"waktu-impor, efek samping tersebut akan muncul."

msgid ""
"Thus it is possible for an attacker to cause unexpected code execution, "
"given the following conditions:"
msgstr ""
"Dengan demikian itu sangat mungkin untuk seorang penyerang menyebabkan "
"pengerjaan kode tidak diharapkan, memberikan kondisi berikut:"

msgid ""
"One or more views are present which construct a URL based on user input "
"(commonly, a \"next\" parameter in a querystring indicating where to "
"redirect upon successful completion of an action)."
msgstr ""
"Satu atau lebih tampilan hadir yang membangun URL berdasarkan pada masukan "
"pengguna (umumnya, parameter \"next\" dalam querystring mengindikasikan "
"dimana untuk mengarahkan keberhasilan pelengkapan dari sebuah tindakan)."

msgid ""
"One or more modules are known to an attacker to exist on the server's Python "
"import path, which perform code execution with side effects on importing."
msgstr ""
"Satu atau lebih modul diketahui penyerang untuk ada di jalur impor Python "
"peladen, yang melakukan pengerjaan kode dengan efek samping pada pengimporan."

msgid ""
"To remedy this, ``reverse()`` will now only accept and import dotted paths "
"based on the view-containing modules listed in the project's :doc:`URL "
"pattern configuration </topics/http/urls>`, so as to ensure that only "
"modules the developer intended to be imported in this fashion can or will be "
"imported."
msgstr ""
"Untuk memperbaiki ini, ``reverse()`` sekarang akan hanya menerima dan "
"mengimpor jalur bertitik berdasarkan pada tampilan mengandung modul "
"terdaftar di :doc:`URL pattern configuration </topics/http/urls>` proyek, "
"sehingga untuk memastikan hanya modul pengembang yang diharapkan untuk "
"diimpor di gaya ini atau akan diimpor."

msgid "Caching of anonymous pages could reveal CSRF token"
msgstr "Menyimpan sementara dari halaman anonim dapat mengunggap token CSRF"

msgid ""
"Django includes both a :doc:`caching framework </topics/cache>` and a system "
"for :doc:`preventing cross-site request forgery (CSRF) attacks </ref/csrf/"
">`. The CSRF-protection system is based on a random nonce sent to the client "
"in a cookie which must be sent by the client on future requests and, in "
"forms, a hidden value which must be submitted back with the form."
msgstr ""
"Django menyertakan kedua :doc:`caching framework </topics/cache>` dan sistem "
"untuk :doc:`preventing cross-site request forgery (CSRF) attacks </ref/csrf/"
">`. Sistem perlindungan-CSRF berdasarkan pada nonce acak dikirim ke klien di "
"kue yang harus dikirim oleh klien di permintaan masa depan dan, di formulir, "
"nilai tersembunyi yang harus diajukan kembali dengan formulir."

msgid ""
"The caching framework includes an option to cache responses to anonymous (i."
"e., unauthenticated) clients."
msgstr ""
"Kerangka kerja penyimpanan sementara menyertkan sebuah pilihan untuk "
"menyimpan sementara tanggapan pada anonim (yaitu, tidak sah) klien"

msgid ""
"When the first anonymous request to a given page is by a client which did "
"not have a CSRF cookie, the cache framework will also cache the CSRF cookie "
"and serve the same nonce to other anonymous clients who do not have a CSRF "
"cookie. This can allow an attacker to obtain a valid CSRF cookie value and "
"perform attacks which bypass the check for the cookie."
msgstr ""
"Ketika permintaan anonim pertama pada halaman yang diberikan adalah oleh "
"seorang klien tidak mempunyai kue CSRF, kerangka kerja penyimpanan sementara "
"akan juga menyimpan sementara kue CSRF dan melayani nonce sama pada klien "
"anonim lain yang tidak mempunyai kue CSRF. Ini dapat mengizinkan seorang "
"penyerang untuk mendapatkan nilai kue CSRF sah dan melakukan serangan yang "
"melewatkan pemeriksaan untuk kue."

msgid ""
"To remedy this, the caching framework will no longer cache such responses. "
"The heuristic for this will be:"
msgstr ""
"Untuk memperbaiki ini, kerangka kerja penyimpanan sementara tidak akan lagi "
"menyimpan sementara tanggapan tersebut. Penyelidikan sendiri untuk ini "
"menjadi:"

msgid "If the incoming request did not submit any cookies, and"
msgstr "Jika permintaan datang tidak mengajukan setiap kue, dan"

msgid "If the response did send one or more cookies, and"
msgstr "Jika tanggapan melakukan pengiriman satu atau lebih kue, dan"

msgid ""
"If the ``Vary: Cookie`` header is set on the response, then the response "
"will not be cached."
msgstr ""
"Jika kepala ``Vary: Cookie`` disetel pada tanggapan, kemudian tanggapan "
"tidak akan disimpan sementara."

msgid "MySQL typecasting"
msgstr "Typecast MySQL"

msgid ""
"The MySQL database is known to \"typecast\" on certain queries; for example, "
"when querying a table which contains string values, but using a query which "
"filters based on an integer value, MySQL will first silently coerce the "
"strings to integers and return a result based on that."
msgstr ""
"Basisdata MySQL dikenal \"typecast\" pada permintaan tertentu; sebagai "
"contoh, ketika meminta sebuah tabel yang mengandung nilai deretan karakter, "
"tetapi menggunakan permintaan yang menyaring berdasarkan pada nilai integer, "
"MySQL akan pertama diam memaksa deretan karakter menjadi integer dan "
"mengembalikan hasil berdasarkan itu."

msgid ""
"If a query is performed without first converting values to the appropriate "
"type, this can produce unexpected results, similar to what would occur if "
"the query itself had been manipulated."
msgstr ""
"Jika sebuah permintaan dilakukan tanpa merubah nilai dahulu ke jenis yang "
"sesuai, ini dapat menghasilkan nilai yang tidak diharapkan, mirip pada apa "
"akan muncul jika permintaan itu sendiri telah dirubah."

msgid ""
"Django's model field classes are aware of their own types and most such "
"classes perform explicit conversion of query arguments to the correct "
"database-level type before querying. However, three model field classes did "
"not correctly convert their arguments:"
msgstr ""
"Kelas-kelas bidang model Django menyadari jenis mereka sendiri dan "
"kebanyakan kelas-kelas itu melakukan perubahan eksplisit dari permintaan "
"argumen untuk memperbaiki kenis tingkat-basisdata sebelum meminta. "
"Bagaimanapun, tiga kelas bidang model tidak dengan benar merubah argumen "
"mereka:"

msgid ":class:`~django.db.models.FilePathField`"
msgstr ":class:`~django.db.models.FilePathField`"

msgid ":class:`~django.db.models.GenericIPAddressField`"
msgstr ":class:`~django.db.models.GenericIPAddressField`"

msgid "``IPAddressField``"
msgstr "``IPAddressField``"

msgid ""
"These three fields have been updated to convert their arguments to the "
"correct types before querying."
msgstr ""
"Ketiga bidang ini telah diperbaharui untuk merubah argumen mereka ke jenis "
"yang benar sebelum meminta."

msgid ""
"Additionally, developers of custom model fields are now warned via "
"documentation to ensure their custom field classes will perform appropriate "
"type conversions, and users of the :meth:`raw() <django.db.models.query."
"QuerySet.raw>` and :meth:`extra() <django.db.models.query.QuerySet.extra>` "
"query methods -- which allow the developer to supply raw SQL or SQL "
"fragments -- will be advised to ensure they perform appropriate manual type "
"conversions prior to executing queries."
msgstr ""
"Selain itu, pengembang dari penyesuaian bidang model sekarang diperingati "
"melalui dokumentasi untuk memastikan kelas-kelas penyesuaian bidang mereka "
"akan melakukan perubahan jenis yang sesuai, dan pengguna dari metode "
"permintaan :meth:`raw() <django.db.models.query.QuerySet.raw>` dan :meth:"
"`extra() <django.db.models.query.QuerySet.extra>` -- yang mengizinkan "
"pengembang untuk memasok SQL mentah atau fragmen SQL -- akan disarankan "
"untuk memastikan mereka melakukan perubahan jenis manual sesuai sebelum "
"menjalankan permintaan."

msgid "Django 1.4.12 release notes"
msgstr "Catatan terbitan Django 1.4.12"

msgid "*April 28, 2014*"
msgstr "*April 28, 2014*"

msgid "Django 1.4.12 fixes a regression in the 1.4.11 security release."
msgstr ""
"Django 1.4.12 memperbaiki sebuah pemulihan di terbitan keamanan 1.4.11."

msgid ""
"Restored the ability to ``reverse()`` views created using :func:`functools."
"partial()` (:ticket:`22486`)."
msgstr ""
"Menyimpan kembali kemampuan untuk ``reverse()`` tampilan dibuat menggunakan :"
"func:`functools.partial()` (:ticket:`22486`). "

msgid "Django 1.4.13 release notes"
msgstr "Catatan terbitan Django 1.4.13"

msgid "*May 14, 2014*"
msgstr "*14 Mei 2014*"

msgid "Django 1.4.13 fixes two security issues in 1.4.12."
msgstr "Django 1.4.13  memperbaiki dua masalah keamanan di 1.4.12."

msgid "Caches may incorrectly be allowed to store and serve private data"
msgstr ""
"Tombolok mungkin tidak benar mengizinkan untuk menyimpan dan melayani data "
"pribadi"

msgid ""
"In certain situations, Django may allow caches to store private data related "
"to a particular session and then serve that data to requests with a "
"different session, or no session at all. This can lead to information "
"disclosure and can be a vector for cache poisoning."
msgstr ""
"Dalam situasi tertentu, Django mungkin mengizinkan tembolok menyimpan data "
"pribadi terkait pada sesi tertentu dan kemudian melayani data itu untuk "
"meminta dengan sesi berbeda, atau tidak ada sesi sama sekali. Ini dapat "
"membawa ke penyingkapan informasi dan dapat menjadi menunjukan untuk "
"peracunan tembolok."

msgid ""
"When using Django sessions, Django will set a ``Vary: Cookie`` header to "
"ensure caches do not serve cached data to requests from other sessions. "
"However, older versions of Internet Explorer (most likely only Internet "
"Explorer 6, and Internet Explorer 7 if run on Windows XP or Windows Server "
"2003) are unable to handle the ``Vary`` header in combination with many "
"content types. Therefore, Django would remove the header if the request was "
"made by Internet Explorer."
msgstr ""
"Ketiak menggunakan sesi Django, Django akan menyetel kepala ``Vary: Cookie`` "
"untuk memastikan tembolok tidak melayani data tembolok untuk meminta dari "
"sesi lainnya. Bagaimanapun, versi terlama dari Internet Explorer (kebanyakan "
"hanya Internet Explorer 6, dan Internet Explorer 7 jika berjalan pada "
"Windows XP atau Windows Server 2003) tidak dapat menangani kepala ``Vary`` "
"di perpaduan dengan banyak jenis isi. Karena itu, Django akan memindahkan "
"kepala jika permintaan telah dibuat oleh Internet Explorer."

msgid ""
"To remedy this, the special behavior for these older Internet Explorer "
"versions has been removed, and the ``Vary`` header is no longer stripped "
"from the response. In addition, modifications to the ``Cache-Control`` "
"header for all Internet Explorer requests with a ``Content-Disposition`` "
"header have also been removed as they were found to have similar issues."
msgstr ""
"Untuk memperbaiki ini, perilaku khusus untuk versi Internet Explorer terlama "
"ini telah dipindahkan, dan kepala ``Vary`` tidak lagi dipilah dari "
"tanggapan. Sebagai tambahan, perubahan pada kepala ``Cache-Control`` untuk "
"semua permintaan Internet Explorer dengan kepala ``Content-Disposition`` "
"telah dipindahkan ketika mereka telah menemukan untuk memiliki masalah yang "
"sama."

msgid "Malformed redirect URLs from user input not correctly validated"
msgstr "URL pengalihan yang jelek dari masukan pengguna tidak benar disahkan"

msgid ""
"The validation for redirects did not correctly validate some malformed URLs, "
"which are accepted by some browsers. This allows a user to be redirected to "
"an unsafe URL unexpectedly."
msgstr ""
"Pengesahan untuk pengalihan tidak dengan benar mengesahkan beberapa URL "
"jelek, yang diterima oleh beberapa peramban. Ini mengizinkan pengguna untuk "
"dialihkan pada UTL tidak aman tiba-tiba."

msgid ""
"Django relies on user input in some cases (e.g. ``django.contrib.auth.views."
"login()``, ``django.contrib.comments``, and :doc:`i18n </topics/i18n/"
"index>`) to redirect the user to an \"on success\" URL. The security checks "
"for these redirects (namely ``django.utils.http.is_safe_url()``) did not "
"correctly validate some malformed URLs, such as ``http:\\\\\\\\\\"
"\\djangoproject.com``, which are accepted by some browsers with more liberal "
"URL parsing."
msgstr ""

msgid ""
"To remedy this, the validation in ``is_safe_url()`` has been tightened to be "
"able to handle and correctly validate these malformed URLs."
msgstr ""
"Untuk memperbaiki ini, pengesahan di ``is_safe_url()`` telah diperketa utuk "
"dapat menangani dan mengesahkan dengan benar URL jelek ini."

msgid "Django 1.4.14 release notes"
msgstr "Catatan terbitan Django 1.4.14"

msgid "*August 20, 2014*"
msgstr "*Agustus 20, 2014*"

msgid "Django 1.4.14 fixes several security issues in 1.4.13."
msgstr "Django 1.4.14 memperbaiki beberapa masalah keamanan di 1.4.13."

msgid "``reverse()`` could generate URLs pointing to other hosts"
msgstr "``reverse()`` dapat membangkitkan URL menunjuk ke rumah lain"

msgid ""
"In certain situations, URL reversing could generate scheme-relative URLs  "
"(URLs starting with two slashes), which could unexpectedly redirect a user  "
"to a different host. An attacker could exploit this, for example, by "
"redirecting users to a phishing site designed to ask for user's passwords."
msgstr ""
"Di keadaan tertentu, membalikkan URL dapat membangkitkan URL relatif-skema "
"(URL mulai dengan dua garis miring), yang dapat tiba-tiba mengalihkan "
"pengguna ke rumah berbeda. Seorang penyerang dapat memanfaatkan ini, sebagai "
"contoh, dengan mengalihkan pengguna ke situs phishing dirancang meminta "
"untuk sandi pengguna."

msgid ""
"To remedy this, URL reversing now ensures that no URL starts with two "
"slashes (//), replacing the second slash with its URL encoded counterpart "
"(%2F). This approach ensures that semantics stay the same, while making the "
"URL relative to the domain and not to the scheme."
msgstr ""
"Untuk memperbaiki ini, membalikkan URL sekarang memastikan bahwa tidak ada "
"URL mlai dengan dua garis miring (//), mengganti garis miring kedua dengan "
"URL disandikan pasangan (%2F). Pendekatan ini memastikan bahwa arti kata "
"masih sama, selagi membuat relatif URL ke ranah dan tidak ke skema."

msgid "File upload denial-of-service"
msgstr "Unggah berkas denial-of-service"

msgid ""
"Before this release, Django's file upload handing in its default "
"configuration may degrade to producing a huge number of ``os.stat()`` system "
"calls when a duplicate filename is uploaded. Since ``stat()`` may invoke IO, "
"this may produce a huge data-dependent slowdown that slowly worsens over "
"time. The net result is that given enough time, a user with the ability to "
"upload files can cause poor performance in the upload handler, eventually "
"causing it to become very slow simply by uploading 0-byte files. At this "
"point, even a slow network connection and few HTTP requests would be all "
"that is necessary to make a site unavailable."
msgstr ""
"Sebelum terbitan ini, penanganan unggah berkas Django di konfigurasi "
"awalannya mungkin menurun untuk menghasilkan sejumlah besar dari panggilan "
"sistem ``os.stat()`` ketika nama berkas ganda diunggah. Sejak ``stat()`` "
"mungkin meminta IO, ini mungkin menghasilkan perlambatan ketergantungan-data "
"besar yang perlahan memburuk terhadap waktu. Hasil bersih adalah yang "
"diberikan waktu cukup, seorang pengguna dengan kemampuan mengunggah berkas-"
"berkas dapat menyebabkan penampilan buruk di penangan unggahan, akhirnya "
"menyebabkan itu menjadi lebih lambat hanya dengan menggunggah berkas 0-byte. "
"Pada titik ini, bahkan hubungan jaringan lambat dan sedikit permintaan HTTP "
"akan semua yang diperlukan untuk membuat situs tidak tersedia."

msgid ""
"We've remedied the issue by changing the algorithm for generating file names "
"if a file with the uploaded name already exists. :meth:`Storage."
"get_available_name() <django.core.files.storage.Storage.get_available_name>` "
"now appends an underscore plus a random 7 character alphanumeric string (e."
"g. ``\"_x3a1gho\"``), rather than iterating through an underscore followed "
"by a number (e.g. ``\"_1\"``, ``\"_2\"``, etc.)."
msgstr ""
"Kami telah memperbaiki masalah ini dengan merubah algoritma untuk "
"membangkitkan nama berkas jika sebuah berkas dengan nama terunggah sudah "
"ada. :meth:`Storage.get_available_name() <django.core.files.storage.Storage."
"get_available_name>` sekarang menambah garis bawah ditambah 7 karakter "
"alfanumerik acak (sebagai contoh ``\"_x3a1gho\"``), daripada mengulang "
"melalui garis bawah diikuti oleh angka (sebagai contoh ``\"_1\"``, "
"``\"_2\"``, etc.)."

msgid "``RemoteUserMiddleware`` session hijacking"
msgstr "Pembajakan sesi ``RemoteUserMiddleware`` "

msgid ""
"When using the :class:`~django.contrib.auth.middleware.RemoteUserMiddleware` "
"and the ``RemoteUserBackend``, a change to the ``REMOTE_USER`` header "
"between requests without an intervening logout could result in the prior "
"user's session being co-opted by the subsequent user. The middleware now "
"logs the user out on a failed login attempt."
msgstr ""
"Ketika menggunakan :class:`~django.contrib.auth.middleware."
"RemoteUserMiddleware` dan ``RemoteUserBackend``, sebuah perubahan pada "
"kepala ``REMOTE_USER`` diantara permintaan tanpa campur tangan keluar dapat "
"dihasilkan sebelum sesi pengguna sedang ditunjuk oleh pengguna kemudian. "
"Middleware sekarang mencatat pengguna keluar pada usaha masuk gagal."

msgid "Data leakage via query string manipulation in ``contrib.admin``"
msgstr ""
"Kebocoran data melalui permintaan pengubahan deretan krakter di ``contrib."
"admin``"

msgid ""
"In older versions of Django it was possible to reveal any field's data by "
"modifying the \"popup\" and \"to_field\" parameters of the query string on "
"an admin change form page. For example, requesting a URL like ``/admin/auth/"
"user/?pop=1&t=password`` and viewing the page's HTML allowed viewing the "
"password hash of each user. While the admin requires users to have "
"permissions to view the change form pages in the first place, this could "
"leak data if you rely on users having access to view only certain fields on "
"a model."
msgstr ""
"Di versi terlama dari Django dia memungkinkan untuk mengungkapkan tiap data "
"bidang dengan merubah parameter \"popup\" dan \"to_field\" dari permintaan "
"deretan karakter pada halaman formulir perubahan admin. Sebagai contoh, "
"meminta URL seperti ``/admin/auth/user/?pop=1&t=password`` dan melihat "
"halaman HTML diizinkan melihat acakan sandi dari tiap pengguna. Selagi admin "
"membutuhkan pengguna untuk memiliki perizinan untuk melihat halaman formulir "
"perubahan di tempat pertama, ini dapat menyebabkan data bocor jika anda "
"bergantung pada pengguna mempunyai akses untuk melihat hanya bidang tertentu "
"pada model."

msgid ""
"To address the issue, an exception will now be raised if a ``to_field`` "
"value that isn't a related field to a model that has been registered with "
"the admin is specified."
msgstr ""
"Untuk mengalamatkan masalah, sebuah pengecualian sekarang akan dimunculkan "
"jika sebuah nilai ``to_field`` yang tidak terkait bidang ke model yang telah "
"didaftarkan dengan admin telah ditentukan."

msgid "Django 1.4.15 release notes"
msgstr "Catatan terbitan Django 1.4.15"

msgid "*September 2, 2014*"
msgstr "*September 2, 2014*"

msgid "Django 1.4.15 fixes a regression in the 1.4.14 security release."
msgstr ""
"Django 1.4.15 memperbaiki sebuah pemulihan di terbitan keamanan 1.4.14."

msgid ""
"Allowed inherited and m2m fields to be referenced in the admin (:ticket:"
"`22486`)"
msgstr ""
"Diizinkan bidang mewarisi dan m2m untuk diacukan di admin (:ticket:`22486`)"

msgid "Django 1.4.16 release notes"
msgstr "Catatan terbitan Django 1.4.16"

msgid "*October 22, 2014*"
msgstr "*Oktober 22, 2014*"

msgid ""
"Django 1.4.16 fixes a couple regressions in the 1.4.14 security release and "
"a bug preventing the use of some GEOS versions with GeoDjango."
msgstr ""
"Django 1.4.16 memperbaiki sepasang pemulihan di terbitan keamanan 1.4.14 dan "
"sebuah kesalahan mencegah penggunaan dari beberapa versi GEOS dengan "
"GeoDjango."

msgid ""
"Allowed related many-to-many fields to be referenced in the admin (:ticket:"
"`23604`)."
msgstr ""
"Diizinkan bidang many-to-many terkait untuk diacukan di admin (:ticket:"
"`23604`)."

msgid "Allowed inline and hidden references to admin fields (:ticket:`23431`)."
msgstr ""
"Diizinkan acuan berderet dan acuan tersembunyi pada bidang admin (:ticket:"
"`23431`)."

msgid "Fixed parsing of the GEOS version string (:ticket:`20036`)."
msgstr ""
"Diperbaiki mengurai dari deretan karakter versi GEOS (:ticket:`20036`)."

msgid "Django 1.4.17 release notes"
msgstr "Catatan terbitan Django 1.4.17"

msgid "*January 2, 2015*"
msgstr "*2 Januari 2015*"

msgid "Django 1.4.17 fixes a regression in the 1.4.14 security release."
msgstr ""
"Django 1.4.17 memperbaiki sebuah pemulihan di terbitan keamanan 1.4.14."

msgid ""
"Additionally, Django's vendored version of six, ``django.utils.six``, has "
"been upgraded to the latest release (1.9.0)."
msgstr ""
"Tambahannya, versi penjaja Django dari enam, ``django.utils.six``, telah "
"ditingkatkan ke terbitan terakhir (1.9.0)."

msgid ""
"Fixed a regression with dynamically generated inlines and allowed field "
"references in the admin (:ticket:`23754`)."
msgstr ""
"Diperbaiki sebuah pemulihan dengan secara dinamis dibangkitkan berderet dan "
"bidang diizinkan mengacu di admin (:ticket:`23754`)."

msgid "Django 1.4.18 release notes"
msgstr "Catatan terbitan Django 1.4.18"

msgid "*January 13, 2015*"
msgstr "*13 Januari 2015*"

msgid ""
"Django 1.4.18 fixes several security issues in 1.4.17 as well as a "
"regression on Python 2.5 in the 1.4.17 release."
msgstr ""
"Django 1.4.18 memperbaiki beberapa masalah keamanan di 1.4.17 maupun "
"pemulihan pada Python 2.5 di terbitan 1.4.17."

msgid "WSGI header spoofing via underscore/dash conflation"
msgstr "Kepala WSGI menipu melalui garis bawah atau penggabungan tanda garis"

msgid ""
"When HTTP headers are placed into the WSGI environ, they are normalized by "
"converting to uppercase, converting all dashes to underscores, and "
"prepending ``HTTP_``. For instance, a header ``X-Auth-User`` would become "
"``HTTP_X_AUTH_USER`` in the WSGI environ (and thus also in Django's "
"``request.META`` dictionary)."
msgstr ""

msgid ""
"Unfortunately, this means that the WSGI environ cannot distinguish between "
"headers containing dashes and headers containing underscores: ``X-Auth-"
"User`` and ``X-Auth_User`` both become ``HTTP_X_AUTH_USER``. This means that "
"if a header is used in a security-sensitive way (for instance, passing "
"authentication information along from a front-end proxy), even if the proxy "
"carefully strips any incoming value for ``X-Auth-User``, an attacker may be "
"able to provide an ``X-Auth_User`` header (with underscore) and bypass this "
"protection."
msgstr ""
"Sayangnya, ini berarti bahwa kepungan WSGI tidak dapat membedakan diantara "
"kepala mengandung tanda garis dan kepala mengandung garis bawah: ``X-Auth-"
"User`` dan ``X-Auth_User`` keduanya menjadi ``HTTP_X_AUTH_USER``. Ini "
"berarti bahwa jika kepala digunakan dalam cara sensitif-keamanan (sebagai "
"contoh, melewatkan informasi otentifikasi bersama dari proxy paling-depan), "
"bahkan jika proxy secara hati-hati melucuti nilai apapun yang datang untuk "
"``X-Auth-User``, seorang penyerang mungkin dapat menyediakan kepala ``X-"
"Auth_User`` (dengan garis bawah) dan melewatkan perlindungan ini."

msgid ""
"In order to prevent such attacks, both Nginx and Apache 2.4+ strip all "
"headers containing underscores from incoming requests by default. Django's "
"built-in development server now does the same. Django's development server "
"is not recommended for production use, but matching the behavior of common "
"production servers reduces the surface area for behavior changes during "
"deployment."
msgstr ""
"Untuk mencegah serangan seperti itu, kedua Nginx dan Apache 2.4+ melucuti "
"semua kepala mengandung garis bawah dari permintaan yang datang secara "
"awalan. Peladen pengembangan siap-pakai Django sekarang melakukan hal sama. "
"Peladen pengembangan Django tidak dianjurkan untuk penggunaan produksi, "
"tetapi mencocokkan perilaku dari produksi umum peladen mengurangi kawasan "
"permukaan untuk perubahan perilaku selama penyebaran."

msgid "Mitigated possible XSS attack via user-supplied redirect URLs"
msgstr ""
"Mengurangi kemungkinan serangan XSS melalui mengalihkan URL penyediaan-"
"pengguna"

msgid ""
"Django relies on user input in some cases (e.g. ``django.contrib.auth.views."
"login()`` and :doc:`i18n </topics/i18n/index>`) to redirect the user to an "
"\"on success\" URL. The security checks for these redirects (namely ``django."
"utils.http.is_safe_url()``) didn't strip leading whitespace on the tested "
"URL and as such considered URLs like ``\\njavascript:...`` safe. If a "
"developer relied on ``is_safe_url()`` to provide safe redirect targets and "
"put such a URL into a link, they could suffer from a XSS attack. This bug "
"doesn't affect Django currently, since we only put this URL into the "
"``Location`` response header and browsers seem to ignore JavaScript there."
msgstr ""

msgid "Denial-of-service attack against ``django.views.static.serve``"
msgstr "Serangan denial-of-service terhadap ``django.views.static.serve``"

msgid ""
"In older versions of Django, the :func:`django.views.static.serve` view read "
"the files it served one line at a time. Therefore, a big file with no "
"newlines would result in memory usage equal to the size of that file. An "
"attacker could exploit this and launch a denial-of-service attack by "
"simultaneously requesting many large files. This view now reads the file in "
"chunks to prevent large memory usage."
msgstr ""
"Di versi terlama dari Django, tampilan :func:`django.views.static.serve` "
"membaca berkas-berkas itu dilayani satu baris pada satu waktu. Karena itu, "
"berkas besar dengan tidak ada baris baru akan menghasilkan penggunaan memori "
"sama pada ukuran berkas itu. Seorang penyerang dapat memanfaatkan ini dan "
"meluncurkan serangan denial-of-service dengan permintaan banyak berkas besar "
"secara bersama. Tampilan ini sekarang membaca berkas dalam potongan untuk "
"mencegah penggunaan memori besar."

msgid ""
"Note, however, that this view has always carried a warning that it is not "
"hardened for production use and should be used only as a development aid. "
"Now may be a good time to audit your project and serve your files in "
"production using a real front-end web server if you are not doing so."
msgstr ""
"Catat, bagaimanapun bahwa tampilan ini selalu membawa peringatan yang itu "
"tidak mengeras untuk penggunaan produksi dan harus digunakan hanya sebagai "
"bantuan pengembangan. Sekarang mungkin waktu bagus untuk memeriksa peoyek "
"anda dan melayani berkas anda di penggunaan produksi menggunakan peladen "
"jaringan paling-depan sebenarnya jika anda tidak melakukannya."

msgid ""
"To maintain compatibility with Python 2.5, Django's vendored version of six, "
"``django.utils.six``, has been downgraded to 1.8.0 which is the last version "
"to support Python 2.5."
msgstr ""
"Untuk merawat kesesuaian dengan Python 2.5, versi penjaja Django dari enam, "
"``django.utils.six``, telah diturunkan ke 1.8.0 yang merupakan versi "
"terakhir untuk mendukung Python 2.5."

msgid "Django 1.4.19 release notes"
msgstr "Catatan terbitan Django 1.4.19"

msgid "*January 27, 2015*"
msgstr "*27 Januari 2015*"

msgid "Django 1.4.19 fixes a regression in the 1.4.18 security release."
msgstr ""
"Django 1.4.19 memperbaiki sebuah pemulihan di terbitan keamanan 1.4.18."

msgid ""
"``GZipMiddleware`` now supports streaming responses. As part of the 1.4.18 "
"security release, the ``django.views.static.serve()`` function was altered "
"to stream the files it serves. Unfortunately, the ``GZipMiddleware`` "
"consumed the stream prematurely and prevented files from being served "
"properly (:ticket:`24158`)."
msgstr ""
"``GZipMiddleware`` sekarang mendukung aliran tanggapan. Sebagai bagian dari "
"terbitan keamanan 1.4.18, fungsi ``django.views.static.serve()`` telah "
"diubah untuk aliran berkas-berkas itu peladen. Sayangnya, ``GZipMiddleware`` "
"mengkonsumsi aliran sebelum waktunya dan mencegah berkas-berkas dari menjadi "
"dilayani secara benar (:ticket:`24158`)."

msgid "Django 1.4.2 release notes"
msgstr "Catatan terbitan Django 1.4.2"

msgid "This is the second security release in the Django 1.4 series."
msgstr "Ini adalah terbitan keamanan ke dua di rangkaian Django 1.4."

msgid ""
"The newly introduced :class:`~django.db.models.GenericIPAddressField` "
"constructor arguments have been adapted to match those of all other model "
"fields. The first two keyword arguments are now verbose_name and name."
msgstr ""
"Baru diperkenalkan argumen pembangun :class:`~django.db.models."
"GenericIPAddressField` telah dipakai untuk mencocokkan dari semua bidang "
"model lainnya. Argumen kata kunci kedua pertama sekarang verbose_name dan "
"name."

msgid "Other bugfixes and changes"
msgstr "Perbaikan kesalahan dan perubahan lain"

msgid "Subclass HTMLParser only for appropriate Python versions (#18239)."
msgstr "Subkelas HTMLParser hanya untuk versi Python yang sesuai (#18239)."

msgid "Added batch_size argument to qs.bulk_create() (#17788)."
msgstr "Ditambahkan argumen batch_size ke qs.bulk_create() (#17788)."

msgid ""
"Fixed a small regression in the admin filters where wrongly formatted dates "
"passed as url parameters caused an unhandled ValidationError (#18530)."
msgstr ""
"Diperbaiki sebuah pemulihan kecil di saringan admin dimana tanggal berbentuk "
"salah dilewatkan sebagai parameter url menyebabkan sebuah ValidationError "
"tidak tertangani (#18530)."

msgid ""
"Fixed an endless loop bug when accessing permissions in templates (#18979)"
msgstr ""
"Diperbaiki sebuah kesalahan perulangan tidak berakhir ketika mengakses "
"perizinan di cetakan (#18979)"

msgid "Fixed some Python 2.5 compatibility issues"
msgstr "Diperbaiki beberapa masalah kesesuaian Python 2.5"

msgid ""
"Fixed an issue with quoted filenames in Content-Disposition header (#19006)"
msgstr ""
"Diperbaiki sebuah masalah dengan nama berkas dikutip di kepala Content-"
"Disposition (#19006)"

msgid ""
"Made the context option in ``trans`` and ``blocktrans`` tags accept literals "
"wrapped in single quotes (#18881)."
msgstr ""
"DIbuat pilihan konteks di etiket ``trans`` dan ``blocktrans`` menerima "
"harfiah dibungkus dalam kutipan tunggal (#18881)."

msgid "Numerous documentation improvements and fixes."
msgstr "Banyak sekali dokumentasi perbaikan dan pembetulan"

msgid "Django 1.4.20 release notes"
msgstr "Catatan terbitan Django 1.4.20"

msgid "*March 18, 2015*"
msgstr "*18 Maret 2015*"

msgid "Django 1.4.20 fixes one security issue in 1.4.19."
msgstr "Django 1.4.20 memperbaiki masalah keamanan di 1.4.19."

msgid ""
"Django relies on user input in some cases (e.g. ``django.contrib.auth.views."
"login()`` and :doc:`i18n </topics/i18n/index>`) to redirect the user to an "
"\"on success\" URL. The security checks for these redirects (namely ``django."
"utils.http.is_safe_url()``) accepted URLs with leading control characters "
"and so considered URLs like ``\\x08javascript:...`` safe. This issue doesn't "
"affect Django currently, since we only put this URL into the ``Location`` "
"response header and browsers seem to ignore JavaScript there. Browsers we "
"tested also treat URLs prefixed with control characters such as ``%08//"
"example.com`` as relative paths so redirection to an unsafe target isn't a "
"problem either."
msgstr ""

msgid ""
"However, if a developer relies on ``is_safe_url()`` to provide safe redirect "
"targets and puts such a URL into a link, they could suffer from an XSS "
"attack as some browsers such as Google Chrome ignore control characters at "
"the start of a URL in an anchor ``href``."
msgstr ""
"Bagaimanapun, jika seorang pengembang bergantung pada ``is_safe_url()`` "
"untuk menyediakan ssaran pengalihan aman dan menaruh URL itu kedalam sebuah "
"tautan, mereka dapat menderita dari sebuah serangan XSS ketika beberapa "
"peramban seperti Google Chrome mengabaikan kendali karakter pada awal dari "
"URL di sebuah jangkar ``href``."

msgid "Django 1.4.21 release notes"
msgstr "Catatan terbitan Django 1.4.21"

msgid "*July 8, 2015*"
msgstr "*8 Juli 2015*"

msgid "Django 1.4.21 fixes several security issues in 1.4.20."
msgstr "Django 1.4.21 memperbaiki beberapa masalah keamanan di 1.4.20."

msgid "Denial-of-service possibility by filling session store"
msgstr "Kemungkinan denial-of-service dengan mengisi sesi toko"

msgid ""
"In previous versions of Django, the session backends created a new empty "
"record in the session storage anytime ``request.session`` was accessed and "
"there was a session key provided in the request cookies that didn't already "
"have a session record. This could allow an attacker to easily create many "
"new session records simply by sending repeated requests with unknown session "
"keys, potentially filling up the session store or causing other users' "
"session records to be evicted."
msgstr ""
"Dalam versi sebelumnya Django, backend sesi membuat rekaman kosong baru di "
"penyimpanan sesi kapanpun ``request.session`` diakses dan ada kunci sesi "
"yang disediakan di permintaan kue yang tidak mempunyai rekaman sesi. Ini "
"dapat mengizinkan seorang penyerang dengan mudah membuat banyak rekaman sesi "
"baru cukup dengan mengirim permintaan berulang dengan kunci sesi yang tidak "
"diketahui, kemungkinan mengisi penyimpanan sesi atau menyebabkan rekaman "
"sesi pengguna lain dikeluarkan."

msgid ""
"The built-in session backends now create a session record only if the "
"session is actually modified; empty session records are not created. Thus "
"this potential DoS is now only possible if the site chooses to expose a "
"session-modifying view to anonymous users."
msgstr ""
"Backend sesi siap-pakai sekarang membuat sebuah sesi hanya merekam jika sesi "
"sebenarnya dirubah; rekaman sesi kosong tidak dibuat. Demikian kemungkinan "
"DoS ini sekarang memungkinkan jika situs memilih untuk membuka tampilan "
"merubah-sesi pada pengguna anonim."

msgid ""
"As each built-in session backend was fixed separately (rather than a fix in "
"the core sessions framework), maintainers of third-party session backends "
"should check whether the same vulnerability is present in their backend and "
"correct it if so."
msgstr ""
"Ketika setiap backend sesi siap-pakai telah diperbaiki terpisah (daripada "
"memperbaiki kerangka kerja sesi inti), perawat dari backend sesi pihak-"
"ketiga harus memeriksa apakah kerentanan yang sama hadir dalam backend "
"mereka dan memperbaiki jika ada."

msgid "Header injection possibility since validators accept newlines in input"
msgstr ""
"Kemunghinan suntikan kepala sejak pengesah menerima baris baru dalam masukan"

msgid ""
"Some of Django's built-in validators (:class:`~django.core.validators."
"EmailValidator`, most seriously) didn't prohibit newline characters (due to "
"the usage of ``$`` instead of ``\\Z`` in the regular expressions). If you "
"use values with newlines in HTTP response or email headers, you can suffer "
"from header injection attacks. Django itself isn't vulnerable because :class:"
"`~django.http.HttpResponse` and the mail sending utilities in :mod:`django."
"core.mail` prohibit newlines in HTTP and SMTP headers, respectively. While "
"the validators have been fixed in Django, if you're creating HTTP responses "
"or email messages in other ways, it's a good idea to ensure that those "
"methods prohibit newlines as well. You might also want to validate that any "
"existing data in your application doesn't contain unexpected newlines."
msgstr ""
"Beberapa pengecek siap-pakai Django (:class:`~django.core.validators."
"EmailValidator`, paling serius) tidak melarang karakter baris baru (karena "
"penggunaan dari ``$`` sebagai ganti dari``\\Z`` di regular expression). Jika "
"anda menggunakan nilai-nilai dengan baris baru di tanggapan HTTP atau kepala "
"surel, anda dapat menderita dari serangan suntikan kepala. Django itu "
"sendiri tidak rentan karena :class:`~django.http.HttpResponse` dan alat "
"pengirim surat dalam :mod:`django.core.mail` melarang baris baru di kepala "
"HTTP dan SMPT, masing-masing. Selagi pengecek telah diperbaiki di Django, "
"jika anda sedang membuat tanggapan HTTP atau pesan surel di cara lain, itu "
"adalah ide bagus untuk memastikan bahwa metode tersebut melarang baris baru "
"juga. Anda mungkin juga ingin mengesahkan bahwa tiap data yang ada di "
"aplikasi anda tidak mengandung baris baru yang tidak diharapkan."

msgid ""
":func:`~django.core.validators.validate_ipv4_address`, :func:`~django.core."
"validators.validate_slug`, and :class:`~django.core.validators.URLValidator` "
"and their usage in the corresponding form fields ``GenericIPAddresseField``, "
"``IPAddressField``, ``SlugField``, and ``URLField`` are also affected."
msgstr ""
":func:`~django.core.validators.validate_ipv4_address`, :func:`~django.core."
"validators.validate_slug`, dan :class:`~django.core.validators."
"URLValidator`  dan penggunaan mereka di bidang formulir terkait "
"``GenericIPAddresseField``, ``IPAddressField``, ``SlugField``, dan "
"``URLField`` juga berpengaruh."

msgid ""
"The undocumented, internally unused ``validate_integer()`` function is now "
"stricter as it validates using a regular expression instead of simply "
"casting the value using ``int()`` and checking if an exception was raised."
msgstr ""
"Tidak terdokumentasi, secara internal tidak digunakan fungsi "
"``validate_integer()`` sekarang lebih ketat ketika itu mensahkan menggunakan "
"regular expression daripada cukup memberikan nilai menggunakan ``int()`` dan "
"memeriksa jika sebuah pengecualian telah dimunculkan."

msgid "Django 1.4.22 release notes"
msgstr "Catatan terbitan Django 1.4.22"

msgid "*August 18, 2015*"
msgstr "*Agustus 18, 2015*"

msgid "Django 1.4.22 fixes a security issue in 1.4.21."
msgstr "Django 1.4.22 memperbaiki masalah keamanan di 1.4.21."

msgid ""
"It also fixes support with pip 7+ by disabling wheel support. Older versions "
"of 1.4 would silently build a broken wheel when installed with those "
"versions of pip."
msgstr ""
"Itu juga memperbaiki dukungan dengan pip 7+ dengan meniadakan dukungan "
"wheel. Versi terlama dari 1.4 akan secara diam membangun putaran rusak "
"ketika dipasang dengan versi tersebut dari pip."

msgid ""
"Denial-of-service possibility in ``logout()`` view by filling session store"
msgstr ""
"Kemungkinan denial-of-service dalam tampilan ``logout()`` dengan mengisi "
"sesi toko"

msgid ""
"Previously, a session could be created when anonymously accessing the "
"``django.contrib.auth.views.logout()`` view (provided it wasn't decorated "
"with :func:`~django.contrib.auth.decorators.login_required` as done in the "
"admin). This could allow an attacker to easily create many new session "
"records by sending repeated requests, potentially filling up the session "
"store or causing other users' session records to be evicted."
msgstr ""

msgid ""
"The :class:`~django.contrib.sessions.middleware.SessionMiddleware` has been "
"modified to no longer create empty session records, including when :setting:"
"`SESSION_SAVE_EVERY_REQUEST` is active."
msgstr ""
":class:`~django.contrib.sessions.middleware.SessionMiddleware` telah dirubah "
"menjadi tidak lagi membuat rekaman sesi kosong, termasuk ketika :setting:"
"`SESSION_SAVE_EVERY_REQUEST` aktif."

msgid ""
"Additionally, the ``contrib.sessions.backends.base.SessionBase.flush()`` and "
"``cache_db.SessionStore.flush()`` methods have been modified to avoid "
"creating a new empty session. Maintainers of third-party session backends "
"should check if the same vulnerability is present in their backend and "
"correct it if so."
msgstr ""
"Selain itu, metode ``contrib.sessions.backends.base.SessionBase.flush()`` "
"dan ``cache_db.SessionStore.flush()`` telah dirubah untuk menghindari "
"membuat sesi kosong baru. Perawat dari backend sesi pihak-ketiga harus "
"memeriksa jika kerentanan sama hadir di backend mereka dan memperbaiki itu "
"kalai demikian."

msgid "Django 1.4.3 release notes"
msgstr "Catatan terbitan Django 1.4.3"

msgid ""
"Django 1.4.3 addresses two security issues present in previous Django "
"releases in the 1.4 series."
msgstr ""
"Django 1.4.3 mengalamatkan dua masalah keamanan yang hadir di terbitan "
"Django sebelumnya di rangkaian 1.4."

msgid "Django 1.4.4 release notes"
msgstr "Catatan terbitan Django 1.4.4"

msgid ""
"Django 1.4.4 fixes four security issues present in previous Django releases "
"in the 1.4 series, as well as several other bugs and numerous documentation "
"improvements."
msgstr ""
"Django 1.4.4 memperbaiki empat masalah keamanan hadir di terbitan Django "
"sebelumnya di rangkaian 1.4."

msgid "This is the fourth bugfix/security release in the Django 1.4 series."
msgstr ""
"Ini adalah terbitan keempat perbaikan kesalahan/keamanan di rangkaian Django "
"1.4."

msgid ""
"For this reason, Django 1.4.4 adds a new setting, ``ALLOWED_HOSTS``, "
"containing an explicit list of valid host/domain names for this site. A "
"request with a Host header not matching an entry in this list will raise "
"``SuspiciousOperation`` if ``request.get_host()`` is called. For full "
"details see the documentation for the :setting:`ALLOWED_HOSTS` setting."
msgstr ""
"Untuk alasan ini, Django 1.4.4 menambahkan pengaturan baru, "
"``ALLOWED_HOSTS``,  mengandung sebuah daftar eksplisit dari nama ranah/host "
"sah untuk situs ini. Sebuah permintaan dengan kepala Host tidak mencocokkan "
"sebuah masukan di daftar ini akan memunculkan ``SuspiciousOperation`` jika "
"``request.get_host()`` dipanggil. Untuk rincian penuh lihat dokumentasi "
"untuk pengaturan :setting:`ALLOWED_HOSTS`."

msgid ""
"The default value for this setting in Django 1.4.4 is ``['*']`` (matching "
"any host), for backwards-compatibility, but we strongly encourage all sites "
"to set a more restrictive value."
msgstr ""
"Nilai awalan untuk pengaturan ini di Django 1.4.4 adalah ``['*']`` "
"(mencocokkan tiap host), untuk kesesuaian-kebelakang, tetapi kami sangat "
"menganjurkan semua situs untuk mensetel nilai lebih terbatas."

msgid ""
"The XML parser in the Python standard library is vulnerable to a number of "
"attacks via external entities and entity expansion. Django uses this parser "
"for deserializing XML-formatted database fixtures. This deserializer is not "
"intended for use with untrusted data, but in order to err on the side of "
"safety in Django 1.4.4 the XML deserializer refuses to parse an XML document "
"with a DTD (DOCTYPE definition), which closes off these attack avenues."
msgstr ""
"Pengurai XML di pustaka standar Python rentan pada sejumlah serangan melalui "
"entitas luar dan perpanjangan entitas. Django menggunakan pengurai ini untuk "
"deserialisasi perlengkapan basisdata berbentuk-XML. Perlengkapan "
"pendeserialisasi ini tidak dimaksudkan untuk digunakan dengan data tidak "
"dipercaya, tetapi untuk kesalahan pada sisi dari keamanan di Django 1.4.4 "
"pendeserialisasi XML menolak untuk mengurai sebuah dokumen XML dengan DTD "
"(pengertian DOCTYPE), yang menutup jalan serangan ini."

msgid ""
"In Django 1.4.4, all formsets have a strictly-enforced maximum number of "
"forms (1000 by default, though it can be set higher via the ``max_num`` "
"formset factory argument)."
msgstr ""
"Di Django 1.4.4, semua formset mempunyai angka maksimal dipaksakan-ketat "
"dari formulir (1000 oleh awalan, meskipun itu dapat disetel lebih tinggi "
"melalui argumen pabrik formset ``max_num``)."

msgid ""
"In previous versions of Django, an admin user without change permission on a "
"model could still view the Unicode representation of instances via their "
"admin history log. Django 1.4.4 now limits the admin history log view for an "
"object to users with change permission for that model."
msgstr ""

msgid ""
"Prevented transaction state from leaking from one request to the next "
"(#19707)."
msgstr ""
"Dicegah keadaan transaksi dari membocorkan dari satu permintaan ke "
"selanjutnya (#19707)."

msgid "Changed an SQL command syntax to be MySQL 4 compatible (#19702)."
msgstr "Dirubah sebuah sintaksis perintah SQL menjadi sesuai MySQL 4 (#19702)."

msgid "Added backwards-compatibility with old unsalted MD5 passwords (#18144)."
msgstr ""
"Ditambahkan kesesuaian-kebelakang dengan sandi MD5 lama tidak tergarami "
"(#18144)."

msgid "Django 1.4.5 release notes"
msgstr "Catatan terbitan Django 1.4.5"

msgid ""
"Django 1.4.5 corrects a packaging problem with yesterday's :doc:`1.4.4 "
"release </releases/1.4.4>`."
msgstr ""
"Django 1.4.5 memperbaiki masalah pemaketan dengan :doc:`1.4.4 release </"
"releases/1.4.4>` kemarin."

msgid "Django 1.4.6 release notes"
msgstr "Catatan terbitan Django 1.4.6"

msgid "*August 13, 2013*"
msgstr "*Agustus 13, 2013*"

msgid ""
"Django 1.4.6 fixes one security issue present in previous Django releases in "
"the 1.4 series, as well as one other bug."
msgstr ""
"Django 1.4.6 memperbaiki satu masalah keamanan yang hadir di terbitan Django "
"sebelumnya di rangkaian 1.4, sama halnya satu kesalahan lainnya."

msgid "This is the sixth bugfix/security release in the Django 1.4 series."
msgstr ""
"Ini adalah terbitan keenam perbaikan kesalahan/keamanan di rangkaian Django "
"1.4."

msgid ""
"Django relies on user input in some cases (e.g. ``django.contrib.auth.views."
"login()``, ``django.contrib.comments``, and :doc:`i18n </topics/i18n/"
"index>`) to redirect the user to an \"on success\" URL. The security checks "
"for these redirects (namely ``django.utils.http.is_safe_url()``) didn't "
"check if the scheme is ``http(s)`` and as such allowed ``javascript:...`` "
"URLs to be entered. If a developer relied on ``is_safe_url()`` to provide "
"safe redirect targets and put such a URL into a link, they could suffer from "
"a XSS attack. This bug doesn't affect Django currently, since we only put "
"this URL into the ``Location`` response header and browsers seem to ignore "
"JavaScript there."
msgstr ""

msgid ""
"Fixed an obscure bug with the :func:`~django.test.override_settings` "
"decorator. If you hit an ``AttributeError: 'Settings' object has no "
"attribute '_original_allowed_hosts'`` exception, it's probably fixed "
"(#20636)."
msgstr ""
"Diperbaiki sebuah kesalahan mengaburkan dengan penghias :func:`~django.test."
"override_settings`. Jika anda mengenai sebuah pengecualian ``AttributeError: "
"'Settings' object has no attribute '_original_allowed_hosts'`, itu mungkin "
"diperbaiki (#20636)."

msgid "Django 1.4.7 release notes"
msgstr "Catatan terbitan Django 1.4.7"

msgid "*September 10, 2013*"
msgstr "*September 10, 2013*"

msgid ""
"Django 1.4.7 fixes one security issue present in previous Django releases in "
"the 1.4 series."
msgstr ""
"Django 1.4.7 memperbaiki dua masalah keamanan yang hadir di terbitan Django "
"sebelumnya di rangkaian 1.4."

msgid "Directory traversal vulnerability in ``ssi`` template tag"
msgstr "Kerentanan lintasan direktori dalam etiket cetakan ``ssi``"

msgid ""
"In previous versions of Django it was possible to bypass the "
"``ALLOWED_INCLUDE_ROOTS`` setting used for security with the ``ssi`` "
"template tag by specifying a relative path that starts with one of the "
"allowed roots. For example, if ``ALLOWED_INCLUDE_ROOTS = (\"/var/www\",)`` "
"the following would be possible:"
msgstr ""
"Dalam versi sebelumnya Django itu telah memungkinkan melewatkan pengaturan "
"``ALLOWED_INCLUDE_ROOTS`` digunakan untuk keamanan dengan etiket cetakan "
"``ssi`` dengan menentukan jalur relatif yang dimulai dengan satu dari akar "
"yang diizinkan. Sebagai contoh, jika ``ALLOWED_INCLUDE_ROOTS = (\"/var/"
"www\",)`` berikutnya akan mungkin: "

msgid ""
"In practice this is not a very common problem, as it would require the "
"template author to put the ``ssi`` file in a user-controlled variable, but "
"it's possible in principle."
msgstr ""
"Dalam praktiknya ini bukan sangat masalah umum, ketika itu akan membutuhkan "
"cetakan penulis untuk menaruh berkas ``ssi`` di variabel terkendali-"
"pengguna, tetapi itu memungkinkan pada dasarnya."

msgid "Django 1.4.8 release notes"
msgstr "Catatan terbitan Django 1.4.8"

msgid "*September 14, 2013*"
msgstr "*September 14, 2013*"

msgid ""
"Django 1.4.8 fixes two security issues present in previous Django releases "
"in the 1.4 series."
msgstr ""
"Django 1.4.8 memperbaiki dua masalah keamanan yang hadir di terbitan Django "
"sebelumnya di rangkaian 1.4."

msgid "Denial-of-service via password hashers"
msgstr "Denial-of-service melalui pengacak sandi"

msgid ""
"In previous versions of Django, no limit was imposed on the plaintext length "
"of a password. This allowed a denial-of-service attack through submission of "
"bogus but extremely large passwords, tying up server resources performing "
"the (expensive, and increasingly expensive with the length of the password) "
"calculation of the corresponding hash."
msgstr ""
"Di versi sebelumnya dari Django, tidak ada batasan dikenakan pada panjang "
"teks polos dari sandi. Ini mengizinkan serangan denial-of-service melalui "
"pengajuan dari tiruan tetapi sandi sangat besar, mengikat sumber daya "
"peladen melakukan (mahal, dan meningkatkan mahal dengan panjang dari sandi) "
"menghitung dari acakan berhubungan."

msgid ""
"As of 1.4.8, Django's authentication framework imposes a 4096-byte limit on "
"passwords and will fail authentication with any submitted password of "
"greater length."
msgstr ""
"Mulai 1.4.8, kerangka kerja autentifikasi Django menyebabkan sebuah batasan "
"4096 byte pada sandi dan akan gagal autentifikasi dengan apapun sandi yang "
"diajukan dari lebih panjang."

msgid ""
"Corrected usage of :func:`~django.views.decorators.debug."
"sensitive_post_parameters` in :mod:`django.contrib.auth`’s admin"
msgstr ""
"Penggunaan diperbaiki dari :func:`~django.views.decorators.debug."
"sensitive_post_parameters` di admin :mod:`django.contrib.auth`"

msgid ""
"The decoration of the ``add_view`` and ``user_change_password`` user admin "
"views with :func:`~django.views.decorators.debug.sensitive_post_parameters` "
"did not include :func:`~django.utils.decorators.method_decorator` (required "
"since the views are methods) resulting in the decorator not being properly "
"applied. This usage has been fixed and :func:`~django.views.decorators.debug."
"sensitive_post_parameters` will now throw an exception if it's improperly "
"used."
msgstr ""
"Penghias ``add_view`` dan ``user_change_password`` dari tampilan admin "
"pengguna dengan :func:`~django.views.decorators.debug."
"sensitive_post_parameters` tidak menyertakan :func:`~django.utils.decorators."
"method_decorator` (diwajibkan sejak tampilan adalah metode) menghasilkan di "
"penghias tidak secara benar diberlakukan. Penggunaan ini telah diperbaiki "
"dan :func:`~django.views.decorators.debug.sensitive_post_parameters` akan "
"melempar sebuah pengecualian jika itu tidak benar digunakan."

msgid "Django 1.4.9 release notes"
msgstr "Catatan terbitan Django 1.4.9"

msgid "*October 23, 2013*"
msgstr "*Oktober 23, 2013*"

msgid ""
"Django 1.4.9 fixes a security-related bug in the 1.4 series and one other "
"data corruption bug."
msgstr ""
"Django 1.4.9 memperbaiki kesalahan terkait-keamanan di rangkaian 1.4 dan "
"satu lainnya kesalahan kerusakan data."

msgid "Readdressed denial-of-service via password hashers"
msgstr "Alamatkan kembali denial-of-service melalui pengacak sandi"

msgid ""
"Django 1.4.8 imposes a 4096-byte limit on passwords in order to mitigate a "
"denial-of-service attack through submission of bogus but extremely large "
"passwords. In Django 1.4.9, we've reverted this change and instead improved "
"the speed of our PBKDF2 algorithm by not rehashing the key on every "
"iteration."
msgstr ""
"Django 1.4.8 menyebabkan batasan 4096-byte pada sandi agar mengurangi "
"serangan denial-of-service melalui pengajuan tiruan tetapi sandi sangat "
"besar. Di Django 1.4.9, kami telah merubah perubahan ini dan malah "
"memperbaiki kecepatan dari algoritma PBKDF2 kami dengan tidak mengacak "
"kembali kunci pada setiap putaran. "

msgid ""
"Fixed a data corruption bug with ``datetime_safe.datetime.combine`` (#21256)."
msgstr ""
"Diperbaiki sebuah kesalahan rusak data dengan ``datetime_safe.datetime."
"combine`` (#21256)."

msgid "Django 1.5 release notes"
msgstr "Catatan terbitan Django 1.5"

msgid "*February 26, 2013*"
msgstr "*Februari 26, 2013*"

msgid "Welcome to Django 1.5!"
msgstr "Selamat datang di Django 1.5!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.5>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.5>` "
"you'll want to be aware of when upgrading from Django 1.4 or older versions. "
"We've also dropped some features, which are detailed in :ref:`our "
"deprecation plan <deprecation-removed-in-1.5>`, and we've :ref:`begun the "
"deprecation process for some features <deprecated-features-1.5>`."
msgstr ""
"Catatan terbitan ini mencangkupi :ref:`new features <whats-new-1.5>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.5>` anda akan ingin menjadi waspada ketika meningkatkan dari "
"Django 1.4 atau versi terlama. Kami telah membuang beberapa fitur, yang "
"rinciannya di :ref:`our deprecation plan <deprecation-removed-in-1.5>`, dan "
"kami telah :ref:`begun the deprecation process for some features <deprecated-"
"features-1.5>`."

msgid ""
"The biggest new feature in Django 1.5 is the `configurable User model`_. "
"Before Django 1.5, applications that wanted to use Django's auth framework (:"
"mod:`django.contrib.auth`) were forced to use Django's definition of a "
"\"user\". In Django 1.5, you can now swap out the ``User`` model for one "
"that you write yourself. This could be a simple extension to the existing "
"``User`` model -- for example, you could add a Twitter or Facebook ID field "
"-- or you could completely replace the ``User`` with one totally customized "
"for your site."
msgstr ""
"Fitur baru terbesar di Django 1.5 adalah `configurable User model`_. Sebelum "
"Django 1.5, aplikasi yang menginginkan menggunakan kerangka kerja "
"otentifikasi Django (:mod:`django.contrib.auth`) dipaksa untuk menggunakan "
"pengertian Django dari \"user\". Di DJango 1.5, anda sekarang dapat menukar "
"model ``User`` untuk satu yang anda tulis sendiri. Ini dapat menjadi sebuah "
"perpanjangan sederhana pada model ``User`` yang ada -- sebagai contoh, anda "
"dapat menambah sebuah bidang ID Twitter atau Facebook -- atau anda dapat "
"secara lengkap mengganti ``User`` dengan satu seluruhnya disesuaiakan untuk "
"situs anda."

msgid ""
"Django 1.5 is also the first release with `Python 3 support`_! We're "
"labeling this support \"experimental\" because we don't yet consider it "
"production-ready, but everything's in place for you to start porting your "
"apps to Python 3. Our next release, Django 1.6, will support Python 3 "
"without reservations."
msgstr ""
"Django 1.5 juga terbitan pertama dengan `Python 3 support`_! Kami sedang "
"melabelkan dukungan ini \"experimental\" karena kami belum mempertimbangkan "
"itu siap-produksi, tetapi semuanya di tempat untuk anda memulai "
"menghubungkan aplikasi anda ke Python 3. Terbitan kami selanjutnya, Django "
"1.6, akan mendukung Python 3 tanpa pemesanan."

msgid "Other notable new features in Django 1.5 include:"
msgstr "Fitur baru penting lainnya di Django 1.5 termasuk:"

msgid ""
"`Support for saving a subset of model's fields`_ - :meth:`Model.save() "
"<django.db.models.Model.save()>` now accepts an ``update_fields`` argument, "
"letting you specify which fields are written back to the database when you "
"call ``save()``. This can help in high-concurrency operations, and can "
"improve performance."
msgstr ""
"`Support for saving a subset of model's fields`_ - :meth:`Model.save() "
"<django.db.models.Model.save()>` sekarang menerima sebuah argumen "
"``update_fields``, membiarkan anda menentukan bidang-bidang mana ditulis "
"kembali ke basisdata ketika anda memanggil ``save()``. Ini dapat membantu di "
"operasi tinggi-berbarengan, dan dapat memperbaiki penampilan."

msgid ""
"Better `support for streaming responses <#explicit-streaming-responses>`_ "
"via the new  :class:`~django.http.StreamingHttpResponse` response class."
msgstr ""
"Lebih baik `support for streaming responses <#explicit-streaming-"
"responses>`_ melalui kelas tanggapan :class:`~django.http."
"StreamingHttpResponse` baru."

msgid "`GeoDjango`_ now supports PostGIS 2.0."
msgstr "`GeoDjango`_ sekarang mendukung PostGIS 2.0."

msgid "... and more; `see below <#what-s-new-in-django-1-5>`_."
msgstr "... dan lebih; ... and more; `see below <#what-s-new-in-django-1-5>`_."

msgid ""
"Wherever possible we try to introduce new features in a backwards-compatible "
"manner per :doc:`our API stability policy </misc/api-stability>`. However, "
"as with previous releases, Django 1.5 ships with some minor :ref:`backwards "
"incompatible changes <backwards-incompatible-1.5>`; people upgrading from "
"previous versions of Django should read that list carefully."
msgstr ""
"Dimanapun memungkinkan kami mencoba memperkenalkan fitur baru di sikap "
"bertentangan kebelakang per kebijakan :doc:`our API stability policy </misc/"
"api-stability>`. Bagaimanapun, seperti dengan terbitan sebelumnya, Django "
"1.5 dibekali dengan beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.5>` kecil; orang meningkatkan dari versi sebelumnya dari "
"Django harus membaca daftar itu hati-hati."

msgid ""
"One deprecated feature worth noting is the shift to \"new-style\" :ttag:"
"`url` tag. Prior to Django 1.3, syntax like ``{% url myview %}`` was "
"interpreted incorrectly (Django considered ``\"myview\"`` to be a literal "
"name of a view, not a template variable named ``myview``). Django 1.3 and "
"above introduced the ``{% load url from future %}`` syntax to bring in the "
"corrected behavior where ``myview`` was seen as a variable."
msgstr ""
"Satu fitur diusangkan yang perlu dicatat adalah bergeser ke etiket \"new-"
"style\" :ttag:`url`. Sebelum pada Django 1.3, sintaksis seperti ``{% url "
"myview %}`` telah ditafsirkan tidak benar (Django menganggap ``\"myview\"`` "
"menjadi nama harfiah dari sebuah tampilan, bukan sebuah variabel cetakan "
"bernama ``myview``). Django 1.3 dan diatasnya memperkenalkan sintaksis ``{% "
"load url from future %}`` untuk membawa perilaku diperbaiki ``myview`` telah "
"dilihat sebagai sebuah variabel."

msgid ""
"The upshot of this is that if you are not using ``{% load url from future %}"
"`` in your templates, you'll need to change tags like ``{% url myview %}`` "
"to ``{% url \"myview\" %}``. If you *were* using ``{% load url from future %}"
"`` you can simply remove that line under Django 1.5"
msgstr ""
"Hasil dari ini adalah bahwa jika anda tidak menggunakan ``{% load url from "
"future %}`` di cetakan anda, anda akan butuh merubah etiket seperti ``{% url "
"myview %}`` menjadi ``{% url \"myview\" %}``. Jika anda *sedang* menggunakan "
"``{% load url from future %}`` anda dapat cukup memindahkan baris itu "
"dibawah Django 1.5 "

msgid ""
"Django 1.5 requires Python 2.6.5 or above, though we **highly recommend** "
"Python 2.7.3 or above. Support for Python 2.5 and below has been dropped."
msgstr ""
"Django 1.5 membutuhkan Python 2.6.5 atau diatas, meskipun kami **sangat "
"menganjurkan** Python 2.7.3 atau diatas. Dukungan untuk Python 2.5 dan "
"dibawah telah dibuang."

msgid ""
"This change should affect only a small number of Django users, as most "
"operating-system vendors today are shipping Python 2.6 or newer as their "
"default version. If you're still using Python 2.5, however, you'll need to "
"stick to Django 1.4 until you can upgrade your Python version. Per :doc:`our "
"support policy </internals/release-process>`, Django 1.4 will continue to "
"receive security support until the release of Django 1.6."
msgstr ""
"Perubahan ini seharusnya berakibat hanya angka kecil dari pengguna Django, "
"seperti kebanyakan penjaja sistem operasi hari ini yang membekali Python 2.6 "
"atau terbaru sebagai versi awal mereka. Jika anda masih menggunakan Python "
"2.5, bagaimanapun, anda akan butuh melekat ke Django 1.4 sampai anda dapat "
"meningkatkan; per :doc:`kebijakan dukungan kami </internals/release-"
"process>`, Django 1.4 akan lanjut menerima dukungan keamanan sampai terbitan "
"dari Django 1.6."

msgid ""
"Django 1.5 does not run on a Jython final release, because Jython's latest "
"release doesn't currently support Python 2.6. However, Jython currently does "
"offer an alpha release featuring 2.7 support, and Django 1.5 supports that "
"alpha release."
msgstr ""
"Django 1.5 tidak berjalan pada Jython terbitan akhir, karena terbitan "
"terakhir Jython tidak saat ini mendukung Python 2.6. Bagaimanapun, Jython "
"saat ini tidak menawarkan terbitan alpha menampilkan dukungan 2.7, dan "
"Django 1.5 mendukung terbitan alpha tersebut."

msgid "Python 3 support"
msgstr "Mendukung Python 3"

msgid ""
"Django 1.5 introduces support for Python 3 - specifically, Python 3.2 and "
"above. This comes in the form of a **single** codebase; you don't need to "
"install a different version of Django on Python 3. This means that you can "
"write applications targeted for just Python 2, just Python 3, or single "
"applications that support both platforms."
msgstr ""
"Django 1.5 memperkenalkan dukungan untuk Python 3 - secara khusus, Python "
"3.2 dan diatas. Ini datang di bentuk dasar kode **tunggal**; anda tidak "
"butuh memasang versi berbeda dari Django di Python 3. Ini berarti bahwa anda "
"dapat menulis aplikasi disasar untuk hanya Python 2, hanya Python 3, atau "
"aplikasi tunggal yang mendukung kedua serambi."

msgid ""
"However, we're labeling this support \"experimental\" for now: although it's "
"received extensive testing via our automated test suite, it's received very "
"little real-world testing. We've done our best to eliminate bugs, but we "
"can't be sure we covered all possible uses of Django."
msgstr ""
"Bagaimanapun, kami sedang melabelkan dukungan \"experimental\" ini untuk "
"sekarang: meskipun itu menerima percobaan panjang melalui deretan percobaan "
"otomatis kami, itu menerima sangat sedikit percobaan dunia-nyata. Kami telah "
"melakukan yang terbaik untuk mengurangi kesalahan, tetapi kami tidak dapat "
"memastikan kami mencangkupi semua kemungkinan penggunaan Django."

msgid ""
"Some features of Django aren't available because they depend on third-party "
"software that hasn't been ported to Python 3 yet, including:"
msgstr ""
"Beberapa fitur dari Django tidak tersedia karena mereka tergantung pada "
"perangkat lunak pihak-ketiga yang belum dihubungkan ke Pyhton 3, termasuk:"

msgid "the MySQL database backend (depends on MySQLdb)"
msgstr "Backend basisdata MySQL (tergantung pada MySQLdb)"

msgid ":class:`~django.db.models.ImageField` (depends on PIL)"
msgstr ":class:`~django.db.models.ImageField` (tergantung pada PIL)"

msgid ""
":class:`~django.test.LiveServerTestCase` (depends on Selenium WebDriver)"
msgstr ""
":class:`~django.test.LiveServerTestCase` (tergantung pada Selenium WebDriver)"

msgid ""
"Further, Django's more than a web framework; it's an ecosystem of pluggable "
"components. At this point, very few third-party applications have been "
"ported to Python 3, so it's unlikely that a real-world application will have "
"all its dependencies satisfied under Python 3."
msgstr ""
"Lebih jauh, Django lebih dari sekedar kerangka kerja jaringan; itu adalah "
"sebuah ekosistem komponen dapat ditanam. Pada titik ini, sangat sedikit "
"aplikasi pihak-ketiga telah dihubungkan ke Python 3, jadi itu tidak mungkin "
"bahwa aplikasi dunia-nyata akan mempunyai semua ketergantungannya terpuaskan "
"dibawah Python 3."

msgid ""
"Thus, we're recommending that Django 1.5 not be used in production under "
"Python 3. Instead, use this opportunity to begin porting applications to "
"Python 3. If you're an author of a pluggable component, we encourage you to "
"start porting now."
msgstr ""
"Dengan demikian, kami menganjurkan bahwa Django 1.5 tidak digunakan dalam "
"produksi dibawah Python 3. Sebagai gantinya, gunakan kesempatan ini untuk "
"memulai penghubungan aplikasi-aplikasi ke Python 3. Jika anda seorang "
"penulis dari sebuah komponen tertanam, kami mendorong anda memulai "
"penghubungan sekarang."

msgid ""
"We plan to offer first-class, production-ready support for Python 3 in our "
"next release, Django 1.6."
msgstr ""
"Kami berencana untuk menawarkan kelas-pertama, dukunagn siap-produksi untuk "
"Python 3 di terbitan kami selanjutnya, Django 1.6."

msgid "What's new in Django 1.5"
msgstr "Apa yang baru di Django 1.5"

msgid "Configurable User model"
msgstr "Model User Dikonfigurasi"

msgid ""
"In Django 1.5, you can now use your own model as the store for user-related "
"data. If your project needs a username with more than 30 characters, or if "
"you want to store user's names in a format other than first name/last name, "
"or you want to put custom profile information onto your User object, you can "
"now do so."
msgstr ""
"Dalam Django 1.5, anda sekarang dapat menggunakan model anda sendiri sebagai "
"penyimpanan untuk data terkait-pengguna. Jika proyek anda butuh nama "
"pengguna lebih dari 30 karakter, atau jika anda ingin menyimpan nama "
"pengguna dalam bentuk lainnya dari pada nama pertama/nama terakhir, atau "
"anda ingin menaruh informasi profil penyesuaian kedalam obyek User anda, "
"anda dapat sekarang melakukannya."

msgid ""
"If you have a third-party reusable application that references the User "
"model, you may need to make some changes to the way you reference User "
"instances. You should also document any specific features of the User model "
"that your application relies upon."
msgstr ""
"Jika anda mempunyai aplikasi dapat digunakan kembali pihak-ketiga yang "
"mengacu model User, anda mungkin butuh membuat beberapa perubahan ke cara "
"anda mengacu instance User. Anda harus juga mendokumentasikan fitur khusus "
"apapun dari model User yang aplikasi anda bergantung."

msgid ""
"See the :ref:`documentation on custom user models <auth-custom-user>` for "
"more details."
msgstr ""
"Lihat :ref:`documentation on custom user models <auth-custom-user>` untuk "
"lebih rinci."

msgid "Support for saving a subset of model's fields"
msgstr "Mendukung untuk menyimpan subset dari bidang model"

msgid ""
"The method :meth:`Model.save() <django.db.models.Model.save()>` has a new "
"keyword argument ``update_fields``. By using this argument it is possible to "
"save only a select list of model's fields. This can be useful for "
"performance reasons or when trying to avoid overwriting concurrent changes."
msgstr ""
"Cara :meth:`Model.save() <django.db.models.Model.save()>` mempunyai argumen "
"kata kunci baru ``update_fields``. Dengan menggunakan argumen ini itu "
"memungkinkan menyimpan hanya memilih daftar bidang model. Ini dapat berguna "
"untuk alasan penampilan atau ketika mencoba menghindari perubahan penimpaan "
"bersama-sama."

msgid ""
"Deferred instances (those loaded by ``.only()`` or ``.defer()``) will "
"automatically save just the loaded fields. If any field is set manually "
"after load, that field will also get updated on save."
msgstr ""
"Instance yang ditunda (itu dimuat oleh ``.only()`` atau ``.defer()``) akan "
"otomatis menyimpan hanya bidang yang dimuat. Jika bidang apapun disetel "
"secara manual setelah dimuat, bidang itu akan juga mendapatkan terperbaharui "
"pada penyimpanan."

msgid ""
"See the :meth:`Model.save() <django.db.models.Model.save()>` documentation "
"for more details."
msgstr ""
"Lihat dokumentasi :meth:`Model.save() <django.db.models.Model.save()>` untuk "
"lebih rinci."

msgid "Caching of related model instances"
msgstr "Menyimpan sementara dari instance model terkait"

msgid ""
"When traversing relations, the ORM will avoid re-fetching objects that were "
"previously loaded. For example, with the tutorial's models:"
msgstr ""

msgid ""
"In Django 1.5, the third line no longer triggers a new SQL query to fetch "
"``first_choice.poll``; it was set by the second line."
msgstr ""
"Di Django 1.5, baris ketiga tidak lagi membangkitkan permintaan SQL baru "
"untuk mengambil ``first_choice.poll``; itu telah disetel oleh baris kedua. "

msgid ""
"For one-to-one relationships, both sides can be cached. For many-to-one "
"relationships, only the single side of the relationship can be cached. This "
"is particularly helpful in combination with ``prefetch_related``."
msgstr ""
"Untuk hubungan one-to-one, kedua sisi dapat disimpan. Untuk hubungan many-to-"
"one, hanya sisi tunggal dari hubungan dapat disimpan. Ini terutama sangat "
"membantu di perpaduan dengan ``prefetch_related``."

msgid "Explicit support for streaming responses"
msgstr "Secara eksplisit mendukung tanggapan mengalir"

msgid ""
"Before Django 1.5, it was possible to create a streaming response by passing "
"an iterator to :class:`~django.http.HttpResponse`. But this was unreliable: "
"any middleware that accessed the :attr:`~django.http.HttpResponse.content` "
"attribute would consume the iterator prematurely."
msgstr ""
"Sebelum Django 1.5, itu memungkinkan membuat tanggapan mengalir dengan "
"melewatkan sebuah perulangan pada :class:`~django.http.HttpResponse`. Tetapi "
"ini tidak handal: middleware apapun yang mengakses atribut  :attr:`~django."
"http.HttpResponse.content` akan memakan perulangan secara dini."

msgid ""
"You can now explicitly generate a streaming response with the new :class:"
"`~django.http.StreamingHttpResponse` class. This class exposes a :class:"
"`~django.http.StreamingHttpResponse.streaming_content` attribute which is an "
"iterator."
msgstr ""
"Anda dapat secara eksplisit membangkitkan tanggapan mengalir dengan kelas :"
"class:`~django.http.StreamingHttpResponse` baru. Kelas ini membuka atribut :"
"class:`~django.http.StreamingHttpResponse.streaming_content` yang merupakan "
"sebuah perulangan."

msgid ""
"Since :class:`~django.http.StreamingHttpResponse` does not have a "
"``content`` attribute, middleware that needs access to the response content "
"must test for streaming responses and behave accordingly."
msgstr ""
"Sejak :class:`~django.http.StreamingHttpResponse` tidak mempunyai atribut "
"``content``, middleware yang butuh mengakses ke isi tanggapan harus mencoba "
"untuk tanggapan mengalir dan berperilaku sesuai."

msgid "``{% verbatim %}`` template tag"
msgstr "Etiket cetakan ``{% verbatim %}``"

msgid ""
"To make it easier to deal with JavaScript templates which collide with "
"Django's syntax, you can now use the :ttag:`verbatim` block tag to avoid "
"parsing the tag's content."
msgstr ""
"Untuk membuatnya lebih mudah berurusan dengan cetakan JavaScript yang "
"bertabrakan dengan sintaksis Django, anda dapat sekarang menggunakan etiket "
"blok :ttag:`verbatim` untuk menghindari mengurai isi etiket."

msgid "Retrieval of ``ContentType`` instances associated with proxy models"
msgstr "Pengambilan dari instance ``ContentType`` terkait dengan model proxy"

msgid ""
"The methods :meth:`ContentTypeManager.get_for_model() <django.contrib."
"contenttypes.models.ContentTypeManager.get_for_model()>` and :meth:"
"`ContentTypeManager.get_for_models() <django.contrib.contenttypes.models."
"ContentTypeManager.get_for_models()>` have a new keyword argument – "
"respectively ``for_concrete_model`` and ``for_concrete_models``. By passing "
"``False`` using this argument it is now possible to retrieve the :class:"
"`ContentType <django.contrib.contenttypes.models.ContentType>` associated "
"with proxy models."
msgstr ""
"Metode :meth:`ContentTypeManager.get_for_model() <django.contrib."
"contenttypes.models.ContentTypeManager.get_for_model()>` dan :meth:"
"`ContentTypeManager.get_for_models() <django.contrib.contenttypes.models."
"ContentTypeManager.get_for_models()>` mempunyai argumen kata kunci baru -- "
"masing-masing ``for_concrete_model`` dan ``for_concrete_models``. Dengan "
"melewatkan ``False`` menggunakan argumen ini itu sekarang memungkinkan "
"mengambil :class:`ContentType <django.contrib.contenttypes.models."
"ContentType>` terkait dengan model proxy"

msgid "New ``view`` variable in class-based views context"
msgstr "Variabel ``view`` baru di konteks tampilan berdasarkan-kelas"

msgid ""
"In all :doc:`generic class-based views </topics/class-based-views/index>` "
"(or any class-based view inheriting from ``ContextMixin``), the context "
"dictionary contains a ``view`` variable that points to the ``View`` instance."
msgstr ""
"Di semua :doc:`generic class-based views </topics/class-based-views/index>` "
"(atau tampilan berdasarkan-kelas apapun warisan dari ``ContextMixin``), "
"kamus konteks mengandung sebuah variabel ``view`` yang menunjuk ke instance "
"``View``. "

msgid ""
":class:`~django.contrib.gis.geos.LineString` and :class:`~django.contrib.gis."
"geos.MultiLineString` GEOS objects now support the :meth:`~django.contrib."
"gis.geos.GEOSGeometry.interpolate()` and :meth:`~django.contrib.gis.geos."
"GEOSGeometry.project()` methods (so-called linear referencing)."
msgstr ""
"Obyek GEOS :class:`~django.contrib.gis.geos.LineString` dan :class:`~django."
"contrib.gis.geos.MultiLineString` sekarang mendukung metode :meth:`~django."
"contrib.gis.geos.GEOSGeometry.interpolate()` dan :meth:`~django.contrib.gis."
"geos.GEOSGeometry.project()` (disebut acuan segaris)."

msgid ""
"The ``wkb`` and ``hex`` properties of :class:`~django.contrib.gis.geos."
"GEOSGeometry` objects preserve the Z dimension."
msgstr ""
"Sifat ``wkb`` dan ``hex`` dari obyek :class:`~django.contrib.gis.geos."
"GEOSGeometry` menjaga dimensi Z."

msgid ""
"Support for PostGIS 2.0 has been added and support for GDAL < 1.5 has been "
"dropped."
msgstr ""
"Dukungan untuk PostGIS 2.0 telah ditambahkan dan dukungan untuk GDAL < 1.5 "
"telah dibuang."

msgid "New tutorials"
msgstr "Tutorial baru"

msgid ""
"Additions to the docs include a revamped :doc:`Tutorial 3</intro/"
"tutorial03>` and a new :doc:`tutorial on testing</intro/tutorial05>`. A new "
"section, \"Advanced Tutorials\", offers :doc:`How to write reusable apps </"
"intro/reusable-apps>` as well as a step-by-step guide for new contributors "
"in :doc:`Writing your first patch for Django </intro/contributing>`."
msgstr ""
"Tambahan pada dokumen menyertakan :doc:`Tutorial 3</intro/tutorial03>` "
"dirubah dan :doc:`tutorial on testing</intro/tutorial05>` baru. Bagian baru, "
"\"Advanced Tutorials\", menawarkan :doc:`How to write reusable apps </intro/"
"reusable-apps>` dan juga panduan langkah-demi-langkah untuk pembantu baru "
"di :doc:`Writing your first patch for Django </intro/contributing>`."

msgid "Django 1.5 also includes several smaller improvements worth noting:"
msgstr ""
"Django 1.5 juga menyertakan beberapa perbaikan kecil yang tidak berharga:"

msgid ""
"The template engine now interprets ``True``, ``False`` and ``None`` as the "
"corresponding Python objects."
msgstr ""
"Mesin cetakan sekarang mengartikan ``True``, ``False`` dan ``None`` sebagai "
"obyek Python sesuai."

msgid ""
":mod:`django.utils.timezone` provides a helper for converting aware "
"datetimes between time zones. See :func:`~django.utils.timezone.localtime`."
msgstr ""
":mod:`django.utils.timezone` menyediakan pembantu untuk merubah datetime "
"sadar diantara zona waktu. Lihat :func:`~django.utils.timezone.localtime`."

msgid "The generic views support OPTIONS requests."
msgstr "Tampilan umum mendukung permintaan OPTION."

msgid ""
"Management commands do not raise ``SystemExit`` any more when called by code "
"from :func:`~django.core.management.call_command`. Any exception raised by "
"the command (mostly :exc:`~django.core.management.CommandError`) is "
"propagated."
msgstr ""
"Perintah pengelolaan tidak memunculkan ``SystemExit`` lagi ketika dipanggil "
"oleh kode dari :func:`~django.core.management.call_command`. Pengecualian "
"apapun dimunculkan oleh perintah (kebanyakan :exc:`~django.core.management."
"CommandError`) adalah diperbanyak."

msgid ""
"Moreover, when you output errors or messages in your custom commands, you "
"should now use ``self.stdout.write('message')`` and ``self.stderr."
"write('error')`` (see the note on :ref:`management commands output "
"<management-commands-output>`)."
msgstr ""
"Bahkan, ketika anda mengelurkan kesalahan atau pesan di perintah penyesuaian "
"anda, anda harus sekarang menggunakan ``self.stdout.write('message')`` and "
"``self.stderr.write('error')`` (lihat catatan pada :ref:`management commands "
"output <management-commands-output>`)."

msgid ""
"The :djadmin:`dumpdata` management command outputs one row at a time, "
"preventing out-of-memory errors when dumping large datasets."
msgstr ""

msgid ""
"In the localflavor for Canada, ``pq`` was added to the acceptable codes for "
"Quebec. It's an old abbreviation."
msgstr ""

msgid ""
"The :ref:`receiver <connecting-receiver-functions>` decorator is now able to "
"connect to more than one signal by supplying a list of signals."
msgstr ""
"Penghias :ref:`receiver <connecting-receiver-functions>` sekarang dapat "
"terhubung ke lebih dari satu sinyal dengan menyokong daftar sinyal."

msgid ""
"In the admin, you can now filter users by groups which they are members of."
msgstr ""
"Di admin, anda sekarang dapat menyaring pengguna berdasarkan keanggotaan "
"mereka."

msgid ""
":meth:`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>` "
"now has a batch_size argument. By default the batch_size is unlimited except "
"for SQLite where single batch is limited so that 999 parameters per query "
"isn't exceeded."
msgstr ""
":meth:`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>` "
"sekarang mempunyai sebuah argumen batch_size. Secara awalan batch_size tidak "
"terbatas kecuali untuk SQLite dimana kumpulan tunggal terpada sehingga "
"parameter 888 per permintaan tidak melebihi."

msgid ""
"The :setting:`LOGIN_URL` and :setting:`LOGIN_REDIRECT_URL` settings now also "
"accept view function names and :ref:`named URL patterns <naming-url-"
"patterns>`. This allows you to reduce configuration duplication. More "
"information can be found in the :func:`~django.contrib.auth.decorators."
"login_required` documentation."
msgstr ""
"Pengaturan :setting:`LOGIN_URL` dan :setting:`LOGIN_REDIRECT_URL` sekarang "
"juga menerima tampilan nama fungsi dan :ref:`named URL patterns <naming-url-"
"patterns>`. Ini mengizinkan anda mengurangi penggandaan konfigurasi. "
"Informasi lebih dapat ditemukan di dokumentasi :func:`~django.contrib.auth."
"decorators.login_required`."

msgid ""
"Django now provides a mod_wsgi :doc:`auth handler </howto/deployment/wsgi/"
"apache-auth>`."
msgstr ""
"Django sekarang menyediakan mod_wsgi :doc:`auth handler </howto/deployment/"
"wsgi/apache-auth>`."

msgid ""
"The :meth:`QuerySet.delete() <django.db.models.query.QuerySet.delete>` and :"
"meth:`Model.delete() <django.db.models.Model.delete()>` can now take fast-"
"path in some cases. The fast-path allows for less queries and less objects "
"fetched into memory. See :meth:`QuerySet.delete() <django.db.models.query."
"QuerySet.delete>` for details."
msgstr ""
":meth:`QuerySet.delete() <django.db.models.query.QuerySet.delete>` dan :meth:"
"`Model.delete() <django.db.models.Model.delete()>` sekarang dapat mengambil "
"jalur-cepat di beberapa kasus. Jalur-cepat mengizinkan untuk sedikit "
"permintaan dan sedikit obyek diambil kedalam memori. Lihat :meth:`QuerySet."
"delete() <django.db.models.query.QuerySet.delete>` untuk rincian."

msgid ""
"An instance of ``ResolverMatch`` is stored on the request as "
"``resolver_match``."
msgstr ""
"Sebuah instance dari ``ResolverMatch`` disimpan pada permintaan sebagai "
"``resolver_match``."

msgid ""
"By default, all logging messages reaching the ``django`` logger when :"
"setting:`DEBUG` is ``True`` are sent to the console (unless you redefine the "
"logger in your :setting:`LOGGING` setting)."
msgstr ""
"Secara awalan, semua pencatatan pesan mencapat pencatat ``django`` ketika :"
"setting:`DEBUG` adalah ``True``dikirim ke konsol (meskipun anda menentukan "
"kembali pencatat di pengaturan :setting:`LOGGING` anda)."

msgid ""
"When using :class:`~django.template.RequestContext`, it is now possible to "
"look up permissions by using ``{% if 'someapp.someperm' in perms %}`` in "
"templates."
msgstr ""
"Ketika menggunakan :class:`~django.template.RequestContext`, itu "
"memungkinkan mencari perizinan dengan menggunakan ``{% if 'someapp.someperm' "
"in perms %}`` di cetakan."

msgid ""
"It's not required any more to have ``404.html`` and ``500.html`` templates "
"in the root templates directory. Django will output some basic error "
"messages for both situations when those templates are not found. It's still "
"recommended as good practice to provide those templates in order to present "
"pretty error pages to the user."
msgstr ""

msgid ""
":mod:`django.contrib.auth` provides a new signal that is emitted whenever a "
"user fails to login successfully. See :data:`~django.contrib.auth.signals."
"user_login_failed`"
msgstr ""
":mod:`django.contrib.auth` menyediakan sinyal bau yang dikeluarkan ketika "
"pengguna gagal untuk berhasil masuk. Lihat :data:`~django.contrib.auth."
"signals.user_login_failed`"

msgid ""
"The new :option:`loaddata --ignorenonexistent` option ignore data for fields "
"that no longer exist."
msgstr ""
"Pilihan :option:`loaddata --ignorenonexistent` baru mengabaikan data untuk "
"bidang yang tidak lagi ada."

msgid ""
":meth:`~django.test.SimpleTestCase.assertXMLEqual` and :meth:`~django.test."
"SimpleTestCase.assertXMLNotEqual` new assertions allow you to test equality "
"for XML content at a semantic level, without caring for syntax differences "
"(spaces, attribute order, etc.)."
msgstr ""
"Tuntutan baru :meth:`~django.test.SimpleTestCase.assertXMLEqual` dan :meth:"
"`~django.test.SimpleTestCase.assertXMLNotEqual` mengizinkan anda untuk "
"mencoba persamaan untuk isi XML pada tingkat semantik, tanpa peduli untuk "
"perbedaan sintaksis (spasi, urutan atribut, dll.)."

msgid ""
"RemoteUserMiddleware now forces logout when the REMOTE_USER header "
"disappears during the same browser session."
msgstr ""
"RemoteUserMiddleware sekarang memaksa keluar ketika kepala REMOTE_USER "
"hilang selama sesi peramban sama."

msgid ""
"The :ref:`cache-based session backend <cached-sessions-backend>` can store "
"session data in a non-default cache."
msgstr ""
":ref:`cache-based session backend <cached-sessions-backend>` dapat menyimpan "
"data sesi di tembolok bukan-awalan."

msgid ""
"Multi-column indexes can now be created on models. Read the :attr:`~django."
"db.models.Options.index_together` documentation for more information."
msgstr ""
"Indeks banyak-kolom sekarang dapat dibuat pada model. Baca dokumentasi :attr:"
"`~django.db.models.Options.index_together` untuk informasi lebih."

msgid ""
"During Django's logging configuration verbose Deprecation warnings are "
"enabled and warnings are captured into the logging system. Logged warnings "
"are routed through the ``console`` logging handler, which by default "
"requires :setting:`DEBUG` to be True for output to be generated. The result "
"is that DeprecationWarnings should be printed to the console in development "
"environments the way they have been in Python versions < 2.7."
msgstr ""
"Selama konfigurasi pencatatan peringatan Pengusangan bertele-tele diadakan "
"dan peringatan ditangkap kedalam sistem pencatatan. Peringatan tercatat "
"dirutekan melalui penangan pencataan ``console``, yang secara awalan "
"membutuhkan :setting:`DEBUG` menjadi True untuk keluaran menjadi "
"dibangkitkan. Hasil adalah DeprecationWarning harus dicetak ke console dalam "
"lingkungan pengembangan cara mereka telah di versi Python < 2.7."

msgid ""
"The API for :meth:`django.contrib.admin.ModelAdmin.message_user` method has "
"been modified to accept additional arguments adding capabilities similar to :"
"func:`django.contrib.messages.add_message`. This is useful for generating "
"error messages from admin actions."
msgstr ""
"API untuk metode :meth:`django.contrib.admin.ModelAdmin.message_user`  tekah "
"dirubah untuk kemampuan menerima argumen tambahan mirip pada :func:`django."
"contrib.messages.add_message`. Ini sangat berguna untuk membangkitkan pesan "
"kesalahan dari tindakan admin."

msgid ""
"The admin's list filters can now be customized per-request thanks to the "
"new :meth:`django.contrib.admin.ModelAdmin.get_list_filter` method."
msgstr ""
"Daftar penyaring admin sekarang dapat disesuaiakan per-permintaan terima "
"kasih pada metode :meth:`django.contrib.admin.ModelAdmin.get_list_filter` "
"baru."

msgid "Backwards incompatible changes in 1.5"
msgstr "Perubahan bertentangan kebelakang di 1.5"

msgid ""
"In addition to the changes outlined in this section, be sure to review the :"
"ref:`deprecation plan <deprecation-removed-in-1.5>` for any features that "
"have been removed. If you haven't updated your code within the deprecation "
"timeline for a given feature, its removal may appear as a backwards "
"incompatible change."
msgstr ""
"Sebagai tambahan pada perubahan diuraikan di bagian ini, pastikan untuk "
"meninjau kembali :ref:`deprecation plan <deprecation-removed-in-1.5>` untuk "
"setiap fitur yang telah dipindahkan. Jika anda belum memperbaharui kode anda "
"dalam linimasa pengusangan untuk fitur yang diberikan, perpindahannya mugkin "
"muncul sebagai perubahan ketidaksesuaian kebelakang."

msgid "``ALLOWED_HOSTS`` required in production"
msgstr "``ALLOWED_HOSTS`` dibutuhkan dalam produksi"

msgid ""
"The new :setting:`ALLOWED_HOSTS` setting validates the request's ``Host`` "
"header and protects against host-poisoning attacks. This setting is now "
"required whenever :setting:`DEBUG` is ``False``, or else :meth:`django.http."
"HttpRequest.get_host()` will raise :exc:`~django.core.exceptions."
"SuspiciousOperation`. For more details see the :setting:`full "
"documentation<ALLOWED_HOSTS>` for the new setting."
msgstr ""
"Pengaturan :setting:`ALLOWED_HOSTS` baru mensahkan kepala ``Host`` "
"permintaan dan melindungi terhadap serangan host-poisoning. Pengaturan ini "
"sekarang wajib kapanpun :setting:`DEBUG` adalah ``False``, atau :meth:"
"`django.http.HttpRequest.get_host()` lain akan memunculkan :exc:`~django."
"core.exceptions.SuspiciousOperation`. Untuk lebih rinci lihat  :setting:"
"`full documentation<ALLOWED_HOSTS>` untuk pengaturan baru."

msgid "Managers on abstract models"
msgstr "Pengelola pada model abstrak."

msgid ""
"Abstract models are able to define a custom manager, and that manager :ref:"
"`will be inherited by any concrete models extending the abstract model "
"<custom-managers-and-inheritance>`. However, if you try to use the abstract "
"model to call a method on the manager, an exception will now be raised. "
"Previously, the call would have been permitted, but would have failed as "
"soon as any database operation was attempted (usually with a \"table does "
"not exist\" error from the database)."
msgstr ""
"Model-model abstrak dapat menentukan pengelola penyesuaian, dan pengelola "
"itu :ref:`will be inherited by any concrete models extending the abstract "
"model <custom-managers-and-inheritance>`. Bagaimanapun, jika anda mencoba "
"menggunakan model abstrak untuk memanggil sebuah metode pada pengelola, "
"sebuah pengecualian sekarang akan dimunculkan. Sebelumnya, panggilan telah "
"diizinkan, tetapi akan gagal segera setelah tindakan basisdata apapun telah "
"diusahakan (biasanya dengan sebuah kesalahan \"tabel tidak ada\" dari "
"basisdata)."

msgid ""
"If you have functionality on a manager that you have been invoking using the "
"abstract class, you should migrate that logic to a Python ``staticmethod`` "
"or ``classmethod`` on the abstract class."
msgstr ""
"Jika anda mempunyai kegunaan pada pengelola yang anda telah minta "
"menggunakan kelas abstrak, anda harus pindah logika tersebut ke "
"``staticmethod`` Python atau ``classmethod`` pada kelas abstrak."

msgid "Context in year archive class-based views"
msgstr "Konteks di arsip tahun tampilan berdasarkan-kelas"

msgid ""
"For consistency with the other date-based generic views, :class:`~django."
"views.generic.dates.YearArchiveView` now passes ``year`` in the context as "
"a :class:`datetime.date` rather than a string.  If you are using ``{{ year }}"
"`` in your templates, you must replace it with ``{{ year|date:\"Y\" }}``."
msgstr ""
"Untuk kemantapan dengan tampilan umum berdasarkan-tanggal lainnya, :class:"
"`~django.views.generic.dates.YearArchiveView` sekarang melewatkan ``year`` "
"dalam konteks sebagai :class:`datetime.date` daripada sebuah string. Jika "
"anda sedang menggunakan ``{{ year }}`` dalam cetakan anda, anda harus "
"mengganti itu dengan ``{{ year|date:\"Y\" }}``."

msgid ""
"``next_year`` and ``previous_year`` were also added in the context. They are "
"calculated according to ``allow_empty`` and ``allow_future``."
msgstr ""
"``next_year`` dan ``previous_year`` juga ditambahkan dalam konteks. Mereka "
"dihitung berdasarkan pada ``allow_empty`` dan ``allow_future``."

msgid "Context in year and month archive class-based views"
msgstr "Konteks dalam arsip tahun dan bulan tampilan berdasarkan-kelas"

msgid ""
":class:`~django.views.generic.dates.YearArchiveView` and :class:`~django."
"views.generic.dates.MonthArchiveView` were documented to provide a "
"``date_list`` sorted in ascending order in the context, like their function-"
"based predecessors, but it actually was in descending order. In 1.5, the "
"documented order was restored. You may want to add (or remove) the "
"``reversed`` keyword when you're iterating on ``date_list`` in a template:"
msgstr ""

msgid ""
":class:`~django.views.generic.dates.ArchiveIndexView` still provides a "
"``date_list`` in descending order."
msgstr ""
":class:`~django.views.generic.dates.ArchiveIndexView` maish menyediakan "
"``date_list`` di urutan menurun. "

msgid "Context in TemplateView"
msgstr "Konteks dalam TemplateView"

msgid ""
"For consistency with the design of the other generic views, :class:`~django."
"views.generic.base.TemplateView` no longer passes a ``params`` dictionary "
"into the context, instead passing the variables from the URLconf directly "
"into the context."
msgstr ""
"Untuk kemantapan dengan rancangan dari tampilan umum lain, :class:`~django."
"views.generic.base.TemplateView` tidak lagi melewatkan kamus ``params`` "
"kedalam konteks, sebagai gantinya melewati variabel dari URLconf secara "
"langsung kedalam konteks."

msgid "Non-form data in HTTP requests"
msgstr "Data bukan-formulir dalam permintaan HTTP"

msgid ""
":attr:`request.POST <django.http.HttpRequest.POST>` will no longer include "
"data posted via HTTP requests with non form-specific content-types in the "
"header. In prior versions, data posted with content-types other than :"
"mimetype:`multipart/form-data` or :mimetype:`application/x-www-form-"
"urlencoded` would still end up represented in the :attr:`request.POST "
"<django.http.HttpRequest.POST>` attribute. Developers wishing to access the "
"raw POST data for these cases, should use the :attr:`request.body <django."
"http.HttpRequest.body>` attribute instead."
msgstr ""

msgid ":data:`~django.core.signals.request_finished` signal"
msgstr "Sinyal :data:`~django.core.signals.request_finished`"

msgid ""
"Django used to send the :data:`~django.core.signals.request_finished` signal "
"as soon as the view function returned a response. This interacted badly "
"with :ref:`streaming responses <httpresponse-streaming>` that delay content "
"generation."
msgstr ""
"Django terbiasa mengirim sinyal :data:`~django.core.signals."
"request_finished` segera setelah fungsi tampilan mengembalikan sebuah "
"tanggapan. Ini berinteraksi buruk dengan :ref:`streaming responses "
"<httpresponse-streaming>` yang menunda pembangkitan isi."

msgid ""
"This signal is now sent after the content is fully consumed by the WSGI "
"gateway. This might be backwards incompatible if you rely on the signal "
"being fired before sending the response content to the client. If you do, "
"you should consider using :doc:`middleware </topics/http/middleware>` "
"instead."
msgstr ""
"Sinyal ini sekarang terkirim setelah isi sepenuhnya dikonsumsi oleh pintu "
"gerbang WSGI. Ini mungkin bertentangan kebelakang jika anda mengandalkan "
"pada sinyal sedang dinyalakan sebelum mengirim isi tanggapan ke klien. Jika "
"anda lakukan, anda harus mempertimbangkan menggunakan :doc:`middleware </"
"topics/http/middleware>` sebagai gantinya."

msgid ""
"Some WSGI servers and middleware do not always call ``close`` on the "
"response object after handling a request, most notably uWSGI prior to 1.2.6 "
"and Sentry's error reporting middleware up to 2.0.7. In those cases the "
"``request_finished`` signal isn't sent at all. This can result in idle "
"connections to database and memcache servers."
msgstr ""
"Beberapa peladen WSGI dan middleware tidak selalu memanggil ``close`` pada "
"obyek tanggapan setelah menangani sebuah permintaan, kebanyakan terutama "
"uWSGI sebelum 1.2.6 dan middleware pelaporan kesalahan Sentry sampai 2.0.7. "
"Di kasus tersebut sinyal ``request_finished`` tidak dikirim sama sekali. Ini "
"dapat menghasilkan sebuah hubungan diam ke basisdata dan peladen memcache."

msgid "OPTIONS, PUT and DELETE requests in the test client"
msgstr "Permintaan OPTIONS, PUT dan DELETE di klien percobaan"

msgid ""
"Unlike GET and POST, these HTTP methods aren't implemented by web browsers. "
"Rather, they're used in APIs, which transfer data in various formats such as "
"JSON or XML. Since such requests may contain arbitrary data, Django doesn't "
"attempt to decode their body."
msgstr ""
"Tidak seperti GET dan POST, metode HTTP ini tidak diterapkan oleh peramban "
"jaringan. Sebaliknya mereka digunakan dalam API, yang memindahkan data dalam "
"beragam bentuk seperti JSON atau XML. Sejak permintaan itu mungkin "
"mengandung data yang berubah-ubah, Django tidak berusaha menyandi badan "
"mereka."

msgid ""
"However, the test client used to build a query string for OPTIONS and DELETE "
"requests like for GET, and a request body for PUT requests like for POST. "
"This encoding was arbitrary and inconsistent with Django's behavior when it "
"receives the requests, so it was removed in Django 1.5."
msgstr ""
"Bagaimanapun, klien percobaan terbiasa membangun sebuah permintaan deretan "
"karakter untuk permintaan OPTIONS dan DELETE seperti untuk GET, dan sebuah "
"badan permintaan seperti untuk POST. Penyandian ini adalah berubah-ubah dan "
"tidak tetap dengan perilaku Django ketika itu menerima permintaan, jadi itu "
"telah dipindahkan di Django 1.5."

msgid ""
"If you were using the ``data`` parameter in an OPTIONS or a DELETE request, "
"you must convert it to a query string and append it to the ``path`` "
"parameter."
msgstr ""
"Jika anda sedang menggunakan parameter ``data`` dalam sebuah permintaan "
"OPTION atau DELETE, anda harus merubahnya menjadi permintaan deretan "
"karakter dan menambahkannya ke parameter ``path``."

msgid ""
"If you were using the ``data`` parameter in a PUT request without a "
"``content_type``, you must encode your data before passing it to the test "
"client and set the ``content_type`` argument."
msgstr ""
"Jika anda sedang menggunakan parameter ``data`` dalam sebuah permintaan PUT "
"tanpa ``content_type``, anda harus menyandi data anda sebelum melewatkannya "
"ke klien percobaan dan menyetel argumen ``content_type``."

msgid "System version of ``simplejson`` no longer used"
msgstr "Versi sistem dari ``simplejson`` tidak lagi digunakan"

msgid ""
":ref:`As explained below <simplejson-deprecation>`, Django 1.5 deprecates "
"``django.utils.simplejson`` in favor of Python 2.6's built-in :mod:`json` "
"module. In theory, this change is harmless. Unfortunately, because of "
"incompatibilities between versions of ``simplejson``, it may trigger errors "
"in some circumstances."
msgstr ""
":ref:`As explained below <simplejson-deprecation>`, Django 1.5 mengusangkan "
"``django.utils.simplejson`` dalam mendukung modul :mod:`json` siap-pakai "
"Python 2.6. Dalam teori, perubahan ini tidak berbahaya. Sayangnya, karena "
"ketidaksesuaian diantara versi dari ``simplejson``, itu mungkin "
"membangkitkan kesalahan di beberapa keadaan. "

msgid ""
"JSON-related features in Django 1.4 always used ``django.utils.simplejson``. "
"This module was actually:"
msgstr ""
"Fitur terkait-JSON di Django 1.4 selalu menggunakan ``django.utils."
"simplejson``. Modul ini adalah sebenarnya:"

msgid ""
"A system version of ``simplejson``, if one was available (i.e. ``import "
"simplejson`` works), if it was more recent than Django's built-in copy or it "
"had the C speedups, or"
msgstr ""

msgid ""
"The :mod:`json` module from the standard library, if it was available (i.e. "
"Python 2.6 or greater), or"
msgstr ""

msgid "A built-in copy of version 2.0.7 of ``simplejson``."
msgstr "Sebuah salinan siap-pakai dari versi 2.0.7 dari ``simplejson``."

msgid ""
"In Django 1.5, those features use Python's :mod:`json` module, which is "
"based on version 2.0.9 of ``simplejson``."
msgstr ""
"Di Django 1.5, fitur itu menggunakan modul :mod:`json` Python, yang "
"berdasarkan pada versi 2.0.9 dari ``simplejson``."

msgid ""
"There are no known incompatibilities between Django's copy of version 2.0.7 "
"and Python's copy of version 2.0.9. However, there are some "
"incompatibilities between other versions of ``simplejson``:"
msgstr ""
"Ada ketidakkesesuaian tidak dikenal diantara salinan Django versi 2.0.7 dan "
"salinan Python versi 2.0.9. Bagaimanapun, ada beberapa ketidak sesuaian "
"diantara versi lain dari ``simplejson``:"

msgid ""
"While the ``simplejson`` API is documented as always returning Unicode "
"strings, the optional C implementation can return a bytestring. This was "
"fixed in Python 2.7."
msgstr ""

msgid ""
"``simplejson.JSONEncoder`` gained a ``namedtuple_as_object`` keyword "
"argument in version 2.2."
msgstr ""
"``simplejson.JSONEncoder`` mendapatkan sebuah argumen kata kunci "
"``namedtuple_as_object`` di versi 2.2."

msgid ""
"More information on these incompatibilities is available in :ticket:`ticket "
"#18023 <18023#comment:10>`."
msgstr ""

msgid ""
"The net result is that, if you have installed ``simplejson`` and your code "
"uses Django's serialization internals directly -- for instance ``django.core."
"serializers.json.DjangoJSONEncoder``, the switch from ``simplejson`` to :mod:"
"`json` could break your code. (In general, changes to internals aren't "
"documented; we're making an exception here.)"
msgstr ""
"Hasil bersih adalah bahwa, jika anda telah memasang ``simplejson`` dan kode "
"anda menggunakan serialisasi Django internal secara langsung -- sebagai "
"contoh ``django.core.serializers.json.DjangoJSONEncoder``, pergantian dari "
"``simplejson`` ke :mod:`json` dapat merusak kode anda. (Pada umumnya, "
"perubahan pada internal tidak didokumentasikan; kami sedang membuat sebuah "
"pengecualian disini.)"

msgid ""
"At this point, the maintainers of Django believe that using :mod:`json` from "
"the standard library offers the strongest guarantee of backwards-"
"compatibility. They recommend to use it from now on."
msgstr ""
"Pada titik ini, perawat Django percaya bahwa menggunakan :mod:`json` dari "
"pustaka standar menawarkan jaminan paling kuat dari kesesuaian-kebelakang. "
"Mereka mengajurkan menggunakannya dari sekarang."

msgid "String types of hasher method parameters"
msgstr "Jenis deretan karakter dari parameter metode pengacak"

msgid ""
"If you have written a :ref:`custom password hasher <auth_password_storage>`, "
"your ``encode()``, ``verify()`` or ``safe_summary()`` methods should accept "
"Unicode parameters (``password``, ``salt`` or ``encoded``). If any of the "
"hashing methods need bytestrings, you can use the :func:`~django.utils."
"encoding.force_bytes` utility to encode the strings."
msgstr ""

msgid "Validation of previous_page_number and next_page_number"
msgstr "Pemeriksaan dari previous_page_number dan next_page_number"

msgid ""
"When using :doc:`object pagination </topics/pagination>`, the "
"``previous_page_number()`` and ``next_page_number()`` methods of the :class:"
"`~django.core.paginator.Page` object did not check if the returned number "
"was inside the existing page range. It does check it now and raises an :exc:"
"`~django.core.paginator.InvalidPage` exception when the number is either too "
"low or too high."
msgstr ""
"Ketika menggunakan metode :doc:`object pagination </topics/pagination>`, "
"``previous_page_number()`` dan ``next_page_number()`` dari obyek :class:"
"`~django.core.paginator.Page` tidak memeriksa jika nomor yang dikembalikan "
"didalam jangkauan halaman yang ada. Itu melakukan pemeriksaan itu sekarang "
"dan memunculkan pengecualian :exc:`~django.core.paginator.InvalidPage` "
"ketika nomornya terlalu kecil atau terlalu tinggi."

msgid "Behavior of autocommit database option on PostgreSQL changed"
msgstr "Perilaku pilihan basisdata perbaikan otomatis pada PostgreSQL berubah"

msgid ""
"PostgreSQL's autocommit option didn't work as advertised previously. It did "
"work for single transaction block, but after the first block was left the "
"autocommit behavior was never restored. This bug is now fixed in 1.5. While "
"this is only a bug fix, it is worth checking your applications behavior if "
"you are using PostgreSQL together with the autocommit option."
msgstr ""
"Pilihan perbaikan otomatis PostgreSQL tidak bekerja seperti dinyatakan "
"sebelumnya. Itu bekerja untuk blok transaksi tunggal, tetapi setelah blok "
"pertama meninggalkan perilaku perbaikan otomatis tidak pernah disimpan "
"kembali. Kesalahan ini sekarang diperbaiki di 1.5. Selagi ini hanya sebuah "
"perbaikan kesalahan, itu adalah berharga memeriksa perilaku aplikasi anda "
"jika anda sedang menggunakan PostgreSQL bersama-sama dengan pilihan "
"perbaikan otomatis."

msgid "Session not saved on 500 responses"
msgstr "Sesi tidak menyimpan pada 500 tanggapan"

msgid ""
"Django's session middleware will skip saving the session data if the "
"response's status code is 500."
msgstr ""
"Sesi middleware Django akan melewati menyimpan sesi data jika kode keadaan "
"tanggapan adalah 500."

msgid "Email checks on failed admin login"
msgstr "Pemeriksaan surel pada admin masuk gagal"

msgid ""
"Prior to Django 1.5, if you attempted to log into the admin interface and "
"mistakenly used your email address instead of your username, the admin "
"interface would provide a warning advising that your email address was not "
"your username. In Django 1.5, the introduction of :ref:`custom user models "
"<auth-custom-user>` has required the removal of this warning. This doesn't "
"change the login behavior of the admin site; it only affects the warning "
"message that is displayed under one particular mode of login failure."
msgstr ""
"Sebelum Django 1.5, jika anda berusaha masuk kedalam antarmuka admin dan "
"salah menggunakan alamat surel anda daripada nama pengguna, antarmuka admin "
"akan menyediakan sebuah peringatan menyarankan bahwa alamat surel anda bukan "
"nama pengguna anda. Dalam Django 1.5, perkenalan dari :ref:`custom user "
"models <auth-custom-user>` telah mewajibkan perpindahan peringatan ini. Ini "
"tidak merubah perilaku masuk dari situs admin; itu hanya mempengaruhi pesan "
"peringatan yang ditampilkan dibawah satu suasana tertentu dari kegagalan "
"masuk."

msgid "Changes in tests execution"
msgstr "Perubahan di pengerjaan percobaan"

msgid ""
"Some changes have been introduced in the execution of tests that might be "
"backward-incompatible for some testing setups:"
msgstr ""
"Beberapa perubahan telah diperkenalkan di pengerjaan dari percobaan yang "
"mungkin ketidaksesuaian-kebelakang untuk beberapa penyetelan percobaan:"

msgid "Database flushing in ``django.test.TransactionTestCase``"
msgstr "Basisdata mengalir di ``django.test.TransactionTestCase``"

msgid ""
"Previously, the test database was truncated *before* each test run in a :"
"class:`~django.test.TransactionTestCase`."
msgstr ""
"Sebelumnya, percobaan basisdata telah dipotong *sebelum* setiap percpbaan "
"berjalan di :class:`~django.test.TransactionTestCase`."

msgid ""
"In order to be able to run unit tests in any order and to make sure they are "
"always isolated from each other, :class:`~django.test.TransactionTestCase` "
"will now reset the database *after* each test run instead."
msgstr ""
"Untuk dapat menjalankan unit percobaan di setiap urutan dan memastikan "
"mereka selalu terpencil dari setiap lainnya. :class:`~django.test."
"TransactionTestCase` akan sekarang menyetel kembali basisdata *setelah* "
"setiap percobaan berjalan."

msgid "No more implicit DB sequences reset"
msgstr "Tidak ada lagi tersirat menyetel kembali urutan DB"

msgid ""
":class:`~django.test.TransactionTestCase` tests used to reset primary key "
"sequences automatically together with the database flushing actions "
"described above."
msgstr ""
"Percobaan :class:`~django.test.TransactionTestCase` digunakan untuk menyetel "
"kembali urutan primary key secara otomatis bersama-sama dengan tindakan "
"membilas basisdata digambarkan diatas."

msgid ""
"This has been changed so no sequences are implicitly reset. This can cause :"
"class:`~django.test.TransactionTestCase` tests that depend on hard-coded "
"primary key values to break."
msgstr ""
"Ini telah dirubah sehingga tidak ada urutan secara mutlak disetel kembali. "
"Ini dapat menyebabkan percobaan :class:`~django.test.TransactionTestCase` "
"yang tergantung pada nilai primay key kode-keras rusak."

msgid ""
"The new :attr:`~django.test.TransactionTestCase.reset_sequences` attribute "
"can be used to force the old behavior for :class:`~django.test."
"TransactionTestCase` that might need it."
msgstr ""
"Atribut :attr:`~django.test.TransactionTestCase.reset_sequences` baru dapat "
"digunakan untuk memaksa perilaku lama untuk :class:`~django.test."
"TransactionTestCase` yang mungkin membutuhkannya."

msgid "Ordering of tests"
msgstr "Urutan dari percobaan"

msgid ""
"In order to make sure all ``TestCase`` code starts with a clean database, "
"tests are now executed in the following order:"
msgstr ""
"Untuk memastikan semua kode ``TestCase`` mulai dengan basisdata bersih, "
"percobaan sekarang dijalankan di urutan berikut:"

msgid ""
"First, all unit tests (including :class:`unittest.TestCase`, :class:`~django."
"test.SimpleTestCase`, :class:`~django.test.TestCase` and :class:`~django."
"test.TransactionTestCase`) are run with no particular ordering guaranteed "
"nor enforced among them."
msgstr ""

msgid ""
"Then any other tests (e.g. doctests) that may alter the database without "
"restoring it to its original state are run."
msgstr ""
"Kemudian setiap percobaan lainnya (sebagai contoh doctests) yang mengubah "
"basisdata tanpa menyimpan kembali dia ke keadaan aslinya berjalan."

msgid ""
"This should not cause any problems unless you have existing doctests which "
"assume a :class:`~django.test.TransactionTestCase` executed earlier left "
"some database state behind or unit tests that rely on some form of state "
"being preserved after the execution of other tests. Such tests are already "
"very fragile, and must now be changed to be able to run independently."
msgstr ""
"Ini seharusnya tidak menyebabkan masalah apapun meskipun anda mempunyai "
"dokumen percobaan yang ada yang mengganggap :class:`~django.test."
"TransactionTestCase` dijalankan lebih awal meninggalkan beberapa keadaan "
"basisdata dibelakang atau unit percobaan yang bergantung pada beberapa "
"bentuk dari keadaan menjadi diawetkan setelah pengerjaan dari percobaan "
"lain. Percobaan tersebut sudah sangat rapuh, dan hrus sekarang dirubah untuk "
"dapat berjalan secara berdiri sendiri."

msgid "``cleaned_data`` dictionary kept for invalid forms"
msgstr ""

msgid ""
"The :attr:`~django.forms.Form.cleaned_data` dictionary is now always present "
"after form validation. When the form doesn't validate, it contains only the "
"fields that passed validation. You should test the success of the validation "
"with the :meth:`~django.forms.Form.is_valid()` method and not with the "
"presence or absence of the :attr:`~django.forms.Form.cleaned_data` attribute "
"on the form."
msgstr ""
"Kamus :attr:`~django.forms.Form.cleaned_data` sekarang selalu hadir setelah "
"pengesahan formulir. Ketika formulir tidak disahkan, itu hanya mengandung "
"bidang yang melewatkan pengesahan. Anda harus mencoba keberhasilan dari "
"pengesahan dengan metode :meth:`~django.forms.Form.is_valid()` dan bukan "
"dengan kehadiran atau ketidakhadiran dari atribut :attr:`~django.forms.Form."
"cleaned_data` di formulir. "

msgid "Behavior of ``syncdb`` with multiple databases"
msgstr "Perilaku dari ``syncdb`` dengan banyak basisdata"

msgid ""
"``syncdb`` now queries the database routers to determine if content types "
"(when :mod:`~django.contrib.contenttypes` is enabled) and permissions (when :"
"mod:`~django.contrib.auth` is enabled) should be created in the target "
"database. Previously, it created them in the default database, even when "
"another database was specified with the ``--database`` option."
msgstr ""
"``syncdb`` sekarang meminta perute basisdata untuk menentukan jika jenis isi "
"(ketika :mod:`~django.contrib.contenttypes` adalah diadakan) dan perizinan "
"(ketika :mod:`~django.contrib.auth` adalah diadakan) harus dibuat di "
"basisdata sasaran. Sebelumnya, itu membuat mereka di basisdata awalan, "
"bahkan ketika basisdata lain telah ditentukan dengan pilihan ``--database``."

msgid ""
"If you use ``syncdb`` on multiple databases, you should ensure that your "
"routers allow synchronizing content types and permissions to only one of "
"them. See the docs on the :ref:`behavior of contrib apps with multiple "
"databases <contrib_app_multiple_databases>` for more information."
msgstr ""
"Jika anda menggunakan ``syncdb`` pada banyak basisdata, anda harus "
"memastikan bahwa perute mengizinkan menyeimbangkan jenis isi dan perizinan "
"untuk hanya satu dari mereka. Lihat dokumentasi di :ref:`behavior of contrib "
"apps with multiple databases <contrib_app_multiple_databases>` untuk "
"informasi lebih. "

msgid "XML deserializer will not parse documents with a DTD"
msgstr "Deserial XML tidak akan mengurai dokumen dengan DTD"

msgid ""
"In order to prevent exposure to denial-of-service attacks related to "
"external entity references and entity expansion, the XML model deserializer "
"now refuses to parse XML documents containing a DTD (DOCTYPE definition). "
"Since the XML serializer does not output a DTD, this will not impact typical "
"usage, only cases where custom-created XML documents are passed to Django's "
"model deserializer."
msgstr ""
"Untuk mencegah pembukaan pada serangan denial-of-service terkait pada acuan "
"entitas eksternal dan perpanjangan entitas, deserial model XML sekarang "
"menolak mengurai XML dokumen mengandung sebuah DTD (DOCTYPE definition). "
"Sejak penserial XML tidak mengeluarkan DTD, ini tidak akan berdampak "
"penggunaan khusus, hanya kasus-kasus dimana dokumen XML dibuat-penyesuaian "
"yang dilewatkan ke deserial model Django ."

msgid "Formsets default ``max_num``"
msgstr "Awalan formset ``max_num``"

msgid ""
"A (default) value of ``None`` for the ``max_num`` argument to a formset "
"factory no longer defaults to allowing any number of forms in the formset. "
"Instead, in order to prevent memory-exhaustion attacks, it now defaults to a "
"limit of 1000 forms. This limit can be raised by explicitly setting a higher "
"value for ``max_num``."
msgstr ""
"Sebuah nilai (awalan) dari ``None`` untuk argumen ``max_num`` pada pabrik "
"formset awalan tidak lagi untuk mengizinkan angka apapun dari formulir di "
"formset. Malahan, untuk mencegah serangan kelelahan-memori, itu sekarang "
"awalan ke batasan dari 1000 formulir. Batasan ini dapat dimunculkan dengan "
"tegas mengatur nilai tertinggi untuk ``max_num``. "

msgid ""
":class:`django.forms.ModelMultipleChoiceField` now returns an empty "
"``QuerySet`` as the empty value instead of an empty list."
msgstr ""
":class:`django.forms.ModelMultipleChoiceField` sekarang mengembalikan sebuah "
"``QuerySet`` kosong sebagai nilai kosong daripada sebuah daftar kosong."

msgid ""
":func:`~django.utils.http.int_to_base36` properly raises a :exc:`TypeError` "
"instead of :exc:`ValueError` for non-integer inputs."
msgstr ""
":func:`~django.utils.http.int_to_base36` sebagaimana mestinya memunculkan :"
"exc:`TypeError` sebagai gantinya dari :exc:`ValueError` untuk masukan bukan-"
"integer"

msgid ""
"The ``slugify`` template filter is now available as a standard Python "
"function at :func:`django.utils.text.slugify`. Similarly, ``remove_tags`` is "
"available at ``django.utils.html.remove_tags()``."
msgstr ""

msgid ""
"Uploaded files are no longer created as executable by default. If you need "
"them to be executable change :setting:`FILE_UPLOAD_PERMISSIONS` to your "
"needs. The new default value is ``0o666`` (octal) and the current umask "
"value is first masked out."
msgstr ""
"Berkas-berkas terunggah tidak lagi dibuat sebagai dapat dijalankan secara "
"awalan. Jika anda butuh mereka untuk menjadi dapat dijalankan rubah :setting:"
"`FILE_UPLOAD_PERMISSIONS` ke kebutuhan anda. Nilai awalan baru adalah "
"``0o666`` (octal) dan nilai umask saat ini adalah pertama yang disembunyikan."

msgid ""
"The :class:`F expressions <django.db.models.F>` supported bitwise operators "
"by ``&`` and ``|``. These operators are now available using ``.bitand()`` "
"and ``.bitor()`` instead. The removal of ``&`` and ``|`` was done to be "
"consistent with :ref:`Q() expressions <complex-lookups-with-q>` and "
"``QuerySet`` combining where the operators are used as boolean AND and OR "
"operators."
msgstr ""
":class:`F expressions <django.db.models.F>` mendukung penghubung bitwise "
"berdasarkan ``&`` and ``|``. Penghubung ini sekarang tersedia menggunakan ``."
"bitand()`` and ``.bitor()``. Perpindahan dari ``&`` and ``|`` telah selesai "
"untuk menjadi tetap dengan :ref:`Q() expressions <complex-lookups-with-q>` "
"dan ``QuerySet`` memadukan dimana penghubung digunakan sebagai boolean "
"penghubung AND dan OR."

msgid ""
"In a ``filter()`` call, when :class:`F expressions <django.db.models.F>` "
"contained lookups spanning multi-valued relations, they didn't always reuse "
"the same relations as other lookups along the same chain. This was changed, "
"and now F() expressions will always use the same relations as other lookups "
"within the same ``filter()`` call."
msgstr ""
"Dalam panggilan ``filter()``, ketika :class:`F expressions <django.db.models."
"F>` mengandung pencarian mencangkup hubungan banyak-nilai, mereka tidak "
"selalu menggunakan kembali hubungan sama sebagai pencarian lain bersama "
"rantai sama. Ini telah berubah, dan sekarang pernyataan F() akan selalu "
"menggunakan hubungan sama sebagai pencarian lain dalam panggilan "
"``filter()`` yang sama"

msgid ""
"The :ttag:`csrf_token` template tag is no longer enclosed in a div. If you "
"need HTML validation against pre-HTML5 Strict DTDs, you should add a div "
"around it in your pages."
msgstr ""
"Etiket cetakan :ttag:`csrf_token` tidak lagi tertutup di sebuah div. Jika "
"anda butuh pengesahan HTML terhadap pra=HTML5 Strict DTD, anda harus "
"menambahkan sebuah div disekitarnya di halaman anda."

msgid ""
"The template tags library ``adminmedia``, which only contained the "
"deprecated template tag ``{% admin_media_prefix %}``, was removed. "
"Attempting to load it with ``{% load adminmedia %}`` will fail. If your "
"templates still contain that line you must remove it."
msgstr ""
"Pustaka cetakan etiket ``adminmedia``, yang hanya mengandung etiket etakan "
"diusangkan ``{% admin_media_prefix %}``, telah dipindahkan. Berusaha memuat "
"itu dengan ``{% load adminmedia %}`` akan gagal. Jika cetakan anda masih "
"mengandung baris itu anda harus memindahkannya."

msgid ""
"Because of an implementation oversight, it was possible to use :doc:`django."
"contrib.redirects </ref/contrib/redirects>` without enabling :doc:`django."
"contrib.sites </ref/contrib/sites>`. This isn't allowed any longer. If "
"you're using ``django.contrib.redirects``, make sure :setting:"
"`INSTALLED_APPS` contains ``django.contrib.sites``."
msgstr ""
"Karena kelalaian penerapan , itu memungkinkan menggunakan :doc:`django."
"contrib.redirects </ref/contrib/redirects>` tanpa mengadakan :doc:`django."
"contrib.sites </ref/contrib/sites>`. Ini tidak diizinkan lagi. Jika anda "
"sedang menggunakan ``django.contrib.redirects``, pastikan :setting:"
"`INSTALLED_APPS` mengandung ``django.contrib.sites``. "

msgid ""
":meth:`BoundField.label_tag <django.forms.BoundField.label_tag>` now escapes "
"its ``contents`` argument. To avoid the HTML escaping, use :func:`django."
"utils.safestring.mark_safe` on the argument before passing it."
msgstr ""
":meth:`BoundField.label_tag <django.forms.BoundField.label_tag>` sekarang "
"meloloskan argumen ``contents`` nya. Untuk menghindari pelolosan HTML, "
"gunakan :func:`django.utils.safestring.mark_safe` pada argumen sebelum "
"melewatkannya."

msgid ""
"Accessing reverse one-to-one relations fetched via :meth:`~django.db.models."
"query.QuerySet.select_related` now raises :exc:`~django.db.models.Model."
"DoesNotExist` instead of returning ``None``."
msgstr ""
"Mengakses pembalikan hubungan one-to-one diambil melalui :meth:`~django.db."
"models.query.QuerySet.select_related` sekarang memunculkan :exc:`~django.db."
"models.Model.DoesNotExist` dari pada mengembalikan ``None``."

msgid "Features deprecated in 1.5"
msgstr "Fitur usang di 1.5"

msgid "``django.contrib.localflavor``"
msgstr "``django.contrib.localflavor``"

msgid ""
"The localflavor contrib app has been split into separate packages. ``django."
"contrib.localflavor`` itself will be removed in Django 1.6, after an "
"accelerated deprecation."
msgstr ""
"Aplikasi bantuan localfalvor telah dipisah menjadi paket-paket berbeda. "
"``django.contrib.localflavor`` itu sendiri akan dipindahkan di Django 1.6, "
"setelah mempercepat pengusangan."

msgid ""
"The new packages are available on GitHub. The core team cannot efficiently "
"maintain these packages in the long term — it spans just a dozen countries "
"at this time; similar to translations, maintenance will be handed over to "
"interested members of the community."
msgstr ""
"Paket-paket baru tersedia di GitHub. Tim inti tidak dapat merawat paket-"
"paket ini dalam jangka panjang -- itu terbentang hanya selusin negara pada "
"saat ini; mirip pada terjemahan, perawatan akan diserahkan pada anggota yang "
"tertarik di komunitas."

msgid "``django.contrib.markup``"
msgstr "``django.contrib.markup``"

msgid ""
"The markup contrib module has been deprecated and will follow an accelerated "
"deprecation schedule. Direct use of Python markup libraries or 3rd party tag "
"libraries is preferred to Django maintaining this functionality in the "
"framework."
msgstr ""
"Modul bantuan markah telah diusangkan dan akan mengikuti jadwal pengusangan "
"dipercepat. Penggunaan langsung dari pustaka markah Python atau pustaka "
"etiket pihak ketiga dipilih untuk Django merawat kegunaan ini di kerangka "
"kerja."

msgid "``AUTH_PROFILE_MODULE``"
msgstr "``AUTH_PROFILE_MODULE``"

msgid ""
"With the introduction of :ref:`custom user models <auth-custom-user>`, there "
"is no longer any need for a built-in mechanism to store user profile data."
msgstr ""
"Dengan perkenalan dari :ref:`custom user models <auth-custom-user>`, tidak "
"lagi butuh untuk mekanisme siap-pakai untuk menyimpan data prodil pengguna."

msgid ""
"You can still define user profiles models that have a one-to-one relation "
"with the User model - in fact, for many applications needing to associate "
"data with a User account, this will be an appropriate design pattern to "
"follow. However, the ``AUTH_PROFILE_MODULE`` setting, and the ``django."
"contrib.auth.models.User.get_profile()`` method for accessing the user "
"profile model, should not be used any longer."
msgstr ""
"Anda dapat masih menentukan model profil pengguna yang mempunyai hubungan "
"one-to-one dengan model User - sebenarnya, untuk banyak aplikasi dibutuhkan "
"untuk data terhubung dengan akun User, ini akan menjadi sebuah pola "
"rancangan sesuai untuk diikuti. Bagaimanapun, pengaturan "
"``AUTH_PROFILE_MODULE``, dan metode ``django.contrib.auth.models.User."
"get_profile()`` untuk mengakses model profil pengguna, tidak boleh digunakan "
"lagi."

msgid "Streaming behavior of :class:`~django.http.HttpResponse`"
msgstr "Mengalirkan perilaku dari :class:`~django.http.HttpResponse`"

msgid ""
"Django 1.5 deprecates the ability to stream a response by passing an "
"iterator to :class:`~django.http.HttpResponse`. If you rely on this "
"behavior, switch to :class:`~django.http.StreamingHttpResponse`. See :ref:"
"`explicit-streaming-responses` above."
msgstr ""
"Django 1.5 mengusangkan kemampuan mengalirkan tanggapan dengan melewatkan "
"perulangan pada :class:`~django.http.HttpResponse`. Jika anda bergantung "
"pada perilaku ini, ganti ke :class:`~django.http.StreamingHttpResponse`. "
"Lihat :ref:`explicit-streaming-responses` diatas."

msgid ""
"In Django 1.7 and above, the iterator will be consumed immediately by :class:"
"`~django.http.HttpResponse`."
msgstr ""
"Dalam Django 1.7 dan diatas, perulangan akan memakan segera oleh :class:"
"`~django.http.HttpResponse`."

msgid "``django.utils.simplejson``"
msgstr "``django.utils.simplejson``"

msgid ""
"Since Django 1.5 drops support for Python 2.5, we can now rely on the :mod:"
"`json` module being available in Python's standard library, so we've removed "
"our own copy of ``simplejson``. You should now import :mod:`json` instead of "
"``django.utils.simplejson``."
msgstr ""
"Sejak Django 1.5 menjatuhkan dukungan untuk Python 2.5, kami sekarang dapat "
"bergantung pada modul :mod:`json` sedang tersedia di pustaka standar Python, "
"jadi kami telah memindahkan salinan kami sendiri dari ``simplejson``. Anda "
"harus sekarang mengimpor :mod:`json` dari pada ``django.utils."
"simplejson``.   "

msgid ""
"Unfortunately, this change might have unwanted side-effects, because of "
"incompatibilities between versions of ``simplejson`` -- see the :ref:"
"`backwards-incompatible changes <simplejson-incompatibilities>` section. If "
"you rely on features added to ``simplejson`` after it became Python's :mod:"
"`json`, you should import ``simplejson`` explicitly."
msgstr ""
"Sayangnya, perubahan ini mungkin mempunyai pengaruh yang tidak diinginkan, "
"karena ketidaksesuaian diantara versi dari ``simplejson`` -- lihat bagian :"
"ref:`backwards-incompatible changes <simplejson-incompatibilities>`. Jika "
"anda bergantung pada fitur-fitur yang ditambahkan pada ``simplejson`` "
"setelahnya menjadi  :mod:`json` Python, anda harus mengimpor ``simplejson`` "
"dengan tegas."

msgid "``django.utils.encoding.StrAndUnicode``"
msgstr "``django.utils.encoding.StrAndUnicode``"

msgid ""
"The ``django.utils.encoding.StrAndUnicode`` mix-in has been deprecated. "
"Define a ``__str__`` method and apply the ``django.utils.encoding."
"python_2_unicode_compatible`` decorator instead."
msgstr ""

msgid "``django.utils.itercompat.product``"
msgstr "``django.utils.itercompat.product``"

msgid ""
"The ``django.utils.itercompat.product`` function has been deprecated. Use "
"the built-in :func:`itertools.product` instead."
msgstr ""
"Fungsi ``django.utils.itercompat.product`` telah diusangkan. Gunakan :func:"
"`itertools.product` siap-pakai sebagai gantinya."

msgid "``cleanup`` management command"
msgstr "perintah pengelolaan ``pembersihan``"

msgid ""
"The ``cleanup`` management command has been deprecated and replaced by :"
"djadmin:`clearsessions`."
msgstr ""
"Perintah pengelolaan ``pembersihan`` telah usang dan diganti dengan :djadmin:"
"`clearsessions`."

msgid "``daily_cleanup.py`` script"
msgstr "Tulisan ``daily_cleanup.py``"

msgid ""
"The undocumented ``daily_cleanup.py`` script has been deprecated. Use the :"
"djadmin:`clearsessions` management command instead."
msgstr ""
"Tulisan ``daily_cleanup.py`` tidak terdokumentasi telah diusangkan. Gunakan "
"perintah pengelolaan :djadmin:`clearsessions` sebagai gantinya."

msgid "``depth`` keyword argument in ``select_related``"
msgstr "Argumen kata kunci ``depth`` di ``select_related``"

msgid ""
"The ``depth`` keyword argument in :meth:`~django.db.models.query.QuerySet."
"select_related` has been deprecated. You should use field names instead."
msgstr ""
"Argumen kata kunci ``depth`` dalam :meth:`~django.db.models.query.QuerySet."
"select_related` telah diusangkan. Anda harus menggunakannama bidang sebagai "
"gantinya."

msgid "Django 1.5.1 release notes"
msgstr "Catatan terbitan Django 1.5.1"

msgid "*March 28, 2013*"
msgstr "*28 Maret 2013*"

msgid ""
"This is Django 1.5.1, a bugfix release for Django 1.5. It's completely "
"backwards compatible with Django 1.5, but includes a handful of fixes."
msgstr ""
"Ini adalah Django 1.5.1, sebuah terbitan perbaikan kesalahan untuk Django "
"1.5. Itu sepenuhnya kesesuaian kebelakang dengan Django 1.5, tetapi termasuk "
"perbaikan berguna."

msgid ""
"The biggest fix is for a memory leak introduced in Django 1.5. Under certain "
"circumstances, repeated iteration over querysets could leak memory - "
"sometimes quite a bit of it. If you'd like more information, the details are "
"in :ticket:`our ticket tracker <19895>` (and in :bpo:`a related issue "
"<17468>` in Python itself)."
msgstr ""

msgid ""
"If you've noticed memory problems under Django 1.5, upgrading to 1.5.1 "
"should fix those issues."
msgstr ""
"Jika anda telah menyadari masalah penyimpanan sementara dibawah Django 1.5, "
"meningkatkan ke 1.5.1 harus memperbaiki masalah tersebut."

msgid "Django 1.5.1 also includes a couple smaller fixes:"
msgstr "Django 1.5.1 juga menyertakan sepasang perbaikan paling kecil:"

msgid ""
"Module-level warnings emitted during tests are no longer silently hidden (:"
"ticket:`18985`)."
msgstr ""
"Peringatan tingkatan-modul dikeluarkan selama percobaan tidak lagi secara "
"diam bersembunyi (:ticket:`18985`)."

msgid ""
"Prevented filtering on password hashes in the user admin (:ticket:`20078`)."
msgstr ""
"Dicegah menyaring pada acakan sandi di pengguna admin (:ticket:`20078`)."

msgid "Django 1.5.10 release notes"
msgstr "Catatan terbitan Django 1.5.10"

msgid "Django 1.5.10 fixes a regression in the 1.5.9 security release."
msgstr "Django 1.5.10 memperbaiki sebuah pemulihan di terbitan keamanan 1.5.9."

msgid "Django 1.5.11 release notes"
msgstr "Catatan terbitan Django 1.5.11"

msgid "Django 1.5.11 fixes a couple regressions in the 1.5.9 security release."
msgstr ""
"Django 1.5.11 memperbaiki sepasang pemulihan di terbitan keamanan 1.5.9."

msgid "Django 1.5.12 release notes"
msgstr "Catatan terbitan Django 1.5.12"

msgid "Django 1.5.12 fixes a regression in the 1.5.9 security release."
msgstr "Django 1.5.12 memperbaiki sebuah pemulihan di terbitan keamanan 1.5.9."

msgid "Django 1.5.2 release notes"
msgstr "Catatan terbitan Django 1.5.2"

msgid "This is Django 1.5.2, a bugfix and security release for Django 1.5."
msgstr ""
"Ini adalah Django 1.5.2, terbitan perbaikan kesalahan dan keamanan untuk "
"Django 1.5."

msgid "XSS vulnerability in :mod:`django.contrib.admin`"
msgstr "Kerentanan XSS di :mod:`django.contrib.admin`"

msgid ""
"If a :class:`~django.db.models.URLField` is used in Django 1.5, it displays "
"the current value of the field and a link to the target on the admin change "
"page. The display routine of this widget was flawed and allowed for XSS."
msgstr ""
"Jika sebuah :class:`~django.db.models.URLField` di Django 1.5, itu "
"menampilkan nilai saat ini dari bidang dan sebuah tautan pada sasaran di "
"halaman merubah admin. Rutin tampilan dari widget ini telah cacar dan "
"diizinkan untuk XSS."

msgid ""
"Fixed a crash with :meth:`~django.db.models.query.QuerySet.prefetch_related` "
"(#19607) as well as some ``pickle`` regressions with ``prefetch_related`` "
"(#20157 and #20257)."
msgstr ""
"Diperbaiki sebuah kegagalan dengan :meth:`~django.db.models.query.QuerySet."
"prefetch_related` (#19607) sama halnya beberapa pemulihan ``pickle`` dengan "
"``prefetch_related`` (#20157 and #20257)."

msgid ""
"Fixed a regression in :mod:`django.contrib.gis` in the Google Map output on "
"Python 3 (#20773)."
msgstr ""
"Diperbaiki sebuah pemulihan di :mod:`django.contrib.gis` di keluaran Google "
"Map pada Pyhton 3 (#20773)."

msgid ""
"Made ``DjangoTestSuiteRunner.setup_databases`` properly handle aliases for "
"the default database (#19940) and prevented ``teardown_databases`` from "
"attempting to tear down aliases (#20681)."
msgstr ""
"Dibuat `DjangoTestSuiteRunner.setup_databases`` dengan benar menangani nama "
"lain untuk basisdata awalan (#19940) dan dicegah ``teardown_databases`` "
"untuk mencoba merobohkan nama lain (#20681)."

msgid ""
"Fixed the ``django.core.cache.backends.memcached.MemcachedCache`` backend's "
"``get_many()`` method on Python 3 (#20722)."
msgstr ""
"Diperbaiki ``django.core.cache.backends.memcached.MemcachedCache`` metode "
"``get_many()`` backend pada Python 3 (#20722)."

msgid ""
"Fixed :mod:`django.contrib.humanize` translation syntax errors. Affected "
"languages: Mexican Spanish, Mongolian, Romanian, Turkish (#20695)."
msgstr ""
"Diperbaiki kesalahan sintaksis terjemahan :mod:`django.contrib.humanize`. "
"Bahasa terpengaruh: Meksiko Spanyol, Mongolia, Rumania, Turki (#20695)."

msgid "Added support for wheel packages (#19252)."
msgstr "Ditambahkan dukungan untuk paket wheel (#19252)."

msgid "The CSRF token now rotates when a user logs in."
msgstr "Token CSRF sekarang berputar ketika pengguna masuk."

msgid "Some Python 3 compatibility fixes including #20212 and #20025."
msgstr "Beberapa perbaikan kesesuaian Python 3 termasuk #20212 dan #20025."

msgid ""
"Fixed some rare cases where :meth:`~django.db.models.query.QuerySet.get` "
"exceptions recursed infinitely (#20278)."
msgstr ""
"Diperbaiki beberapa kasus jarang dimana pengecualian :meth:`~django.db."
"models.query.QuerySet.get` berulang tidak terbatas (#20278)."

msgid ""
":djadmin:`makemessages` no longer crashes with ``UnicodeDecodeError`` "
"(#20354)."
msgstr ""
":djadmin:`makemessages` tidak lagi gagal dengan ``UnicodeDecodeError`` "
"(#20354). "

msgid "Fixed ``geojson`` detection with SpatiaLite."
msgstr "Diperbaiki penemuan ``geojson`` dengan SpatiaLite."

msgid ""
":meth:`~django.test.SimpleTestCase.assertContains` once again works with "
"binary content (#20237)."
msgstr ""
":meth:`~django.test.SimpleTestCase.assertContains` sekali lagi bekerja "
"denganisi biner (#20237)."

msgid ""
"Fixed :class:`~django.db.models.ManyToManyField` if it has a Unicode "
"``name`` parameter (#20207)."
msgstr ""

msgid ""
"Ensured that the WSGI request's path is correctly based on the "
"``SCRIPT_NAME`` environment variable or the :setting:`FORCE_SCRIPT_NAME` "
"setting, regardless of whether or not either has a trailing slash (#20169)."
msgstr ""
"Pastikan bahwa jalur permintaan WSGI benar berdasarkan di variabel "
"lingkungan ``SCRIPT_NAME`` atau pengaturan :setting:`FORCE_SCRIPT_NAME`, "
"terlepas dari apapun atau tidak baik mempunyai buntutan garis miring "
"(#20169)."

msgid "Django 1.5.3 release notes"
msgstr "Catatan terbitan Django 1.5.3"

msgid ""
"This is Django 1.5.3, the third release in the Django 1.5 series. It "
"addresses one security issue and also contains an opt-in feature to enhance "
"the security of :mod:`django.contrib.sessions`."
msgstr ""
"Ini adalah Django 1.5.3, terbitan ketiga di rangkaian Django 1.5. Itu "
"mengalamatkan satu masalah keamanan dan juga mengandung sebuah fitur pilihan "
"untuk meningkatkan keamanan dari :mod:`django.contrib.sessions`."

msgid ""
"Mitigating a remote-code execution vulnerability in :mod:`django.contrib."
"sessions`"
msgstr ""
"Mengurangi kerentenan pengerjaan kode-terpencil di :mod:`django.contrib."
"sessions`"

msgid ""
":mod:`django.contrib.sessions` currently uses :mod:`pickle` to serialize "
"session data before storing it in the backend. If you're using the :ref:"
"`signed cookie session backend<cookie-session-backend>` and :setting:"
"`SECRET_KEY` is known by an attacker (there isn't an inherent vulnerability "
"in Django that would cause it to leak), the attacker could insert a string "
"into their session which, when unpickled, executes arbitrary code on the "
"server. The technique for doing so is simple and easily available on the "
"internet. Although the cookie session storage signs the cookie-stored data "
"to prevent tampering, a :setting:`SECRET_KEY` leak immediately escalates to "
"a remote code execution vulnerability."
msgstr ""

msgid ""
"This attack can be mitigated by serializing session data using JSON rather "
"than :mod:`pickle`. To facilitate this, Django 1.5.3 introduces a new "
"setting, :setting:`SESSION_SERIALIZER`, to customize the session "
"serialization format. For backwards compatibility, this setting defaults to "
"using :mod:`pickle`. While JSON serialization does not support all Python "
"objects like :mod:`pickle` does, we highly recommend switching to JSON-"
"serialized values. Also, as JSON requires string keys, you will likely run "
"into problems if you are using non-string keys in ``request.session``. See "
"the :ref:`session_serialization` documentation for more details."
msgstr ""
"Serangan ini dapat dikurangi dengan menserialisasikan sesi data menggunakan "
"JSON daripada :mod:`pickle`. Untuk memudahkan ini, Django 1.5.3 "
"memperkenalkan pengaturan baru, :setting:`SESSION_SERIALIZER`, untuk "
"menyesuaikan bentuk serialisasi sesi. Untuk kesesuaian kebelakang, awalan "
"pengaturan ini untuk menggunakan :mod:`pickle`. Selagi serialisasi JSON "
"tidak mendukung semua obyek Python seperti :mod:`pickle` lakukan, kami "
"sangat menganjurkan mengganti ke JSON-serialisasi nilai. Juga, seperti JSON "
"membutuhkan kunci deretan karakter, anda akan sepertinya berjalan kedalam "
"masalah jika anda menggunakan kuncu bukan-deretan karakter di ``request."
"session``. Lihat dokumentasi :ref:`session_serialization` untuk rincian "
"lebih."

msgid "Django 1.5.4 release notes"
msgstr "Catatan terbitan Django 1.5.4"

msgid ""
"This is Django 1.5.4, the fourth release in the Django 1.5 series. It "
"addresses two security issues and one bug."
msgstr ""
"Ini adalah Django 1.5.4, terbitan keempat di rangkaian Django 1.5. Itu "
"mengalamatkan dua masalah keamanan dan satu kesalahan."

msgid ""
"As of 1.5.4, Django's authentication framework imposes a 4096-byte limit on "
"passwords, and will fail authentication with any submitted password of "
"greater length."
msgstr ""
"Sejak kerangka kerja otentifikasi Django 1.5.4 memaksa batasan 4096-byte di "
"sandi, dan otentifikasi akan gagal dengan sandi apapun yang diajukan dari "
"panjang lebih besar."

msgid ""
"Fixed a bug that prevented a ``QuerySet`` that uses :meth:`~django.db.models."
"query.QuerySet.prefetch_related` from being pickled and unpickled more than "
"once (the second pickling attempt raised an exception) (#21102)."
msgstr ""
"Diperbaiki sebuah kesalahan yang mencegah sebuah ``QuerySet`` yang "
"menggunakan :meth:`~django.db.models.query.QuerySet.prefetch_related` dari "
"menjadi kesulitan dan tidak kesulitan lebih dari sekali (kesulitan kedua "
"berusaha memunculkan sebuah pengecualian) (#21102)."

msgid "Django 1.5.5 release notes"
msgstr "Catatan terbitan Django 1.5.5"

msgid ""
"Django 1.5.5 fixes a couple security-related bugs and several other bugs in "
"the 1.5 series."
msgstr ""
"Django 1.5.5 memperbaiki sepasang kesalahan terkait-keamanan dan beberapa "
"kesalahan lain di rangkaian 1.5."

msgid ""
"Django 1.5.4 imposes a 4096-byte limit on passwords in order to mitigate a "
"denial-of-service attack through submission of bogus but extremely large "
"passwords. In Django 1.5.5, we've reverted this change and instead improved "
"the speed of our PBKDF2 algorithm by not rehashing the key on every "
"iteration."
msgstr ""
"Django 1.5.4 menyebabkan batasan 4096-byte pada sandi agar mengurangi "
"serangan denial-of-service melalui pengajuan tiruan tetapi sandi sangat "
"besar. Di Django 1.4.9, kami telah merubah perubahan ini dan malah "
"memperbaiki kecepatan dari algoritma PBKDF2 kami dengan tidak mengacak "
"kembali kunci pada setiap putaran."

msgid "Properly rotate CSRF token on login"
msgstr "Perputaran tepat token CSRF pada masuk"

msgid ""
"This behavior introduced as a security hardening measure in Django 1.5.2 did "
"not work properly and is now fixed."
msgstr ""
"Perilaku ini diperkenalkan sebagai pengukuran pengerasan keamanan di Django "
"1.5.2 tidak bekerja dengan benar dan sekarang diperbaiki."

msgid ""
"Fixed a Python 3 incompatibility in ``django.utils.text."
"unescape_entities()`` (#21185)."
msgstr ""
"Diperbaiki ketidaksesuaian Python 3 di ``django.utils.text."
"unescape_entities()`` (#21185)."

msgid ""
"Fixed a couple data corruption issues with ``QuerySet`` edge cases under "
"Oracle and MySQL (#21203, #21126)."
msgstr ""
"Diperbaiki masalah kerusakan sepasang data dengan sisi kasus ``QuerySet`` "
"dibawah Oracle dan MySQL (#21203, #21126)."

msgid ""
"Fixed crashes when using combinations of ``annotate()``, "
"``select_related()``, and ``only()`` (#16436)."
msgstr ""
"Diperbaiki kegagalan ketika menggunakan perpaduan dari ``annotate()``, "
"``select_related()``, dan ``only()`` (#16436)."

msgid ""
"The undocumented ``django.core.servers.basehttp.WSGIServerException`` has "
"been removed. Use ``socket.error`` provided by the standard library instead."
msgstr ""
"``django.core.servers.basehttp.WSGIServerException`` tidak terdokumentasi "
"telah dipindahkan. Gunakan ``socket.error`` disediakan oleh pustaka standar "
"sebagai gantinya."

msgid "Django 1.5.6 release notes"
msgstr "Catatan terbitan Django 1.5.6"

msgid ""
"Django 1.5.6 fixes several bugs in 1.5.5, including three security issues."
msgstr ""
"Django 1.5.6 memperbaiki beberapa kesalahan di 1.5.5, termasuk tiga masalah "
"keamanan."

msgid ""
"Fixed :class:`~django.contrib.auth.backends.ModelBackend` raising "
"``UnboundLocalError`` if :func:`~django.contrib.auth.get_user_model` raised "
"an error (#21439)."
msgstr ""
"Diperbaiki :class:`~django.contrib.auth.backends.ModelBackend` memunculkan "
"``UnboundLocalError`` jika :func:`~django.contrib.auth.get_user_model` "
"memunculkan sebuah kesalahan (#21439)."

msgid ""
"Additionally, Django's vendored version of six, ``django.utils.six``, has "
"been upgraded to the latest release (1.6.1)."
msgstr ""
"Tambahannya, versi penjaja Django dari enam, ``django.utils.six``, telah "
"ditingkatkan ke terbitan terakhir (1.6.1)."

msgid "Django 1.5.7 release notes"
msgstr "Catatan terbitan Django 1.5.7"

msgid "Django 1.5.7 fixes a regression in the 1.5.6 security release."
msgstr "Django 1.5.7 memperbaiki pemulihan di terbitan keamanan 1.5.6."

msgid "Django 1.5.8 release notes"
msgstr "Catatan terbitan Django 1.5.8"

msgid "Django 1.5.8 fixes two security issues in 1.5.8."
msgstr "Django 1.5.8 memperbaiki dua masalah keamanan di 1.5.8."

msgid "Django 1.5.9 release notes"
msgstr "Catatan terbitan Django 1.5.9"

msgid "Django 1.5.9 fixes several security issues in 1.5.8."
msgstr "Django 1.5.9 memperbaiki beberapa masalah keamanan di 1.5.8."

msgid "Django 1.6 release notes"
msgstr "Catatan terbitan Django 1.6"

msgid "Dedicated to Malcolm Tredinnick"
msgstr "Dipersembahkan kepada Malcolm Tredinnick"

msgid ""
"On March 17, 2013, the Django project and the free software community lost a "
"very dear friend and developer."
msgstr ""
"Pada 17 Maret 2013, proyek Django dan komunitas perangkat lunak bebas "
"kehilangan teman dan pengembang."

msgid ""
"Malcolm was a long-time contributor to Django, a model community member, a "
"brilliant mind, and a friend. His contributions to Django — and to many "
"other open source projects — are nearly impossible to enumerate. Many on the "
"core Django team had their first patches reviewed by him; his mentorship "
"enriched us. His consideration, patience, and dedication will always be an "
"inspiration to us."
msgstr ""
"Malcom adalah pembantu lama pada Django, sebuah model anggota komunitas, "
"pikiran cemerlang, dan seorang teman. Bantuannya pada Django - dan ke banyak "
"proyek sumber terbuka lainnya - hampir tidak mungkin menghitung. Banyak pada "
"tim Django inti mempunyai tambalan pertama mereka ditinjau oleh dia; "
"bimbingannya memperkaya kami. Pertimbangan dia, kesabaran, dan pengabdian "
"akan selalu menjadi inspirasi untuk kami."

msgid "This release of Django is for Malcolm."
msgstr "Terbitan Django ini untuk Malcolm."

msgid "-- The Django Developers"
msgstr "-- Pengembang Django"

msgid "Welcome to Django 1.6!"
msgstr "Selamat datang di Django 1.6!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.6>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.6>` "
"you'll want to be aware of when upgrading from Django 1.5 or older versions. "
"We've also dropped some features, which are detailed in :ref:`our "
"deprecation plan <deprecation-removed-in-1.6>`, and we've :ref:`begun the "
"deprecation process for some features <deprecated-features-1.6>`."
msgstr ""
"Catatan terbitan ini mencangkupi :ref:`new features <whats-new-1.6>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.6>` anda akan ingin menjadi waspada ketika meningkatkan dari "
"Django 1.5 atau versi terlama. Kami telah membuang beberapa fitur, yang "
"rinciannya di :ref:`our deprecation plan <deprecation-removed-in-1.6>`, dan "
"kami telah :ref:`begun the deprecation process for some features <deprecated-"
"features-1.6>`."

msgid ""
"Django 1.6, like Django 1.5, requires Python 2.6.5 or above. Python 3 is "
"also officially supported. We **highly recommend** the latest minor release "
"for each supported Python series (2.6.X, 2.7.X, 3.2.X, and 3.3.X)."
msgstr ""
"Django 1.6, seperti Django 1.5, membutuhkan Python 2.6.5 atau diatasnya. "
"Python 3 juga secara resmi didukung. Kami **sangat menganjurkan** terbitan "
"kecil terakhir untuk setiap rangkaian Python yang didukung (2.6.X, 2.7.X, "
"3.2.X, and 3.3.X)."

msgid ""
"Django 1.6 will be the final release series to support Python 2.6; beginning "
"with Django 1.7, the minimum supported Python version will be 2.7."
msgstr ""
"Django 1.6 akan menjadi rangkaian terbitan terakhir untuk mendukung Python "
"2.6; dimulai dengan Django 1.7, minimal dukungan versi Python akan menjadi "
"2.7."

msgid "Python 3.4 is not supported, but support will be added in Django 1.7."
msgstr ""
"Python 3.4 tidak didukung, tetapi dukungan akan ditambahkan di Django 1.7."

msgid "What's new in Django 1.6"
msgstr "Apa yang baru di Django 1.6"

msgid "Simplified default project and app templates"
msgstr "Sederhanakan proyek awal dan cetakan aplikasi"

msgid ""
"The default templates used by :djadmin:`startproject` and :djadmin:"
"`startapp` have been simplified and modernized. The :doc:`admin </ref/"
"contrib/admin/index>` is now enabled by default in new projects; the :doc:"
"`sites </ref/contrib/sites>` framework no longer is. :ref:`clickjacking "
"prevention <clickjacking-prevention>` is now on and the database defaults to "
"SQLite."
msgstr ""
"Cetakan awalan digunakan oleh :djadmin:`startproject` dan :djadmin:"
"`startapp` telah disederhanakan dan dimodernisasikan. :doc:`admin </ref/"
"contrib/admin/index>` sekarng diadakan secara awalan di proyek baru; "
"kerangka kerja :doc:`sites </ref/contrib/sites>` tidak lagi. :ref:"
"`clickjacking prevention <clickjacking-prevention>` sekarang di dan awalan "
"basisdata pada SQLite."

msgid ""
"If the default templates don't suit your tastes, you can use :ref:`custom "
"project and app templates <custom-app-and-project-templates>`."
msgstr ""
"Jika awalan cetakan tidak cocok dengan rasa anda, anda dapat menggunakan :"
"ref:`custom project and app templates <custom-app-and-project-templates>`."

msgid "Improved transaction management"
msgstr "Perbaikan pengelolaan transaksi"

msgid ""
"Django's transaction management was overhauled. Database-level autocommit is "
"now turned on by default. This makes transaction handling more explicit and "
"should improve performance. The existing APIs were deprecated, and new APIs "
"were introduced, as described in the :doc:`transaction management docs </"
"topics/db/transactions>`."
msgstr ""
"Pengelolaan transaksi Django dirombak. Tingkat-basisdata pembenaran otomatis "
"sekarang nyala sebagai awalan. Ini membuat penanganan transaksi lebih jelas "
"dan harus meningkatkan penampilan. API yang ada diusangkan, dan API baru "
"telah diperkenalkan, sebagai digambarkan di :doc:`transaction management "
"docs </topics/db/transactions>`."

msgid "Persistent database connections"
msgstr "Hubungan basisdata gigih"

msgid ""
"Django now supports reusing the same database connection for several "
"requests. This avoids the overhead of reestablishing a connection at the "
"beginning of each request. For backwards compatibility, this feature is "
"disabled by default. See :ref:`persistent-database-connections` for details."
msgstr ""

msgid "Discovery of tests in any test module"
msgstr "Penemuan percobaan di tiap modul percobaan"

msgid ""
"Django 1.6 ships with a new test runner that allows more flexibility in the "
"location of tests. The previous runner (``django.test.simple."
"DjangoTestSuiteRunner``) found tests only in the ``models.py`` and ``tests."
"py`` modules of a Python package in :setting:`INSTALLED_APPS`."
msgstr ""
"Django 1.6 dibekali dengan pejalan percobaan baru yang mengizinkan lebih "
"keluwesan di tempat dari percobaan. Pejalan sebelumnya (``django.test.simple."
"DjangoTestSuiteRunner``) menemukan percobaan hanya di modul ``models.py`` "
"dan ``tests.py`` dari paket Python di :setting:`INSTALLED_APPS`."

msgid ""
"The new runner (``django.test.runner.DiscoverRunner``) uses the test "
"discovery features built into ``unittest2`` (the version of ``unittest`` in "
"the Python 2.7+ standard library, and bundled with Django). With test "
"discovery, tests can be located in any module whose name matches the pattern "
"``test*.py``."
msgstr ""
"Pejalan baru (``django.test.runner.DiscoverRunner``) menggunakan fitur "
"penemuan percobaan dibangun kedalam ``unittest2`` (versi dari ``unittest`` "
"di pustaka standar  Python 2.7+, dan digabung dengan Django). Dengan "
"penemuan percobaan, percobaan dapat ditempatkan di tiap modul yang namanya "
"cocok dengan pola ``test*.py``."

msgid ""
"In addition, the test labels provided to ``./manage.py test`` to nominate "
"specific tests to run must now be full Python dotted paths (or directory "
"paths), rather than ``applabel.TestCase.test_method_name`` pseudo-paths. "
"This allows running tests located anywhere in your codebase, rather than "
"only in :setting:`INSTALLED_APPS`. For more details, see :doc:`/topics/"
"testing/index`."
msgstr ""
"Sebagai tambahan, label percobaan disediakan pada ``./manage.py test`` untuk "
"menunjuk percobaan khusus untuk berjalan harus sekarang menjadi jalur "
"bertitik Python penuh (atau jalur direktori), daripada halur-semu ``applabel."
"TestCase.test_method_name``. Ini mengizinkan menjalankan percobaan "
"ditempatkan dimana saja di basis kode anda, daripada hanya di :setting:"
"`INSTALLED_APPS`. Untuk rincian lebih, lihat :doc:`/topics/testing/index`."

msgid ""
"This change is backwards-incompatible; see the :ref:`backwards-"
"incompatibility notes<new-test-runner>`."
msgstr ""
"Perubahan ini adalah kesesuaian-kebelakang; lihat :ref:`backwards-"
"incompatibility notes<new-test-runner>`."

msgid "Time zone aware aggregation"
msgstr "Mengetahui pengumpulan zona waktu"

msgid ""
"The support for :doc:`time zones </topics/i18n/timezones>` introduced in "
"Django 1.4 didn't work well with :meth:`QuerySet.dates() <django.db.models."
"query.QuerySet.dates>`: aggregation was always performed in UTC. This "
"limitation was lifted in Django 1.6. Use :meth:`QuerySet.datetimes() <django."
"db.models.query.QuerySet.datetimes>` to perform time zone aware aggregation "
"on a :class:`~django.db.models.DateTimeField`."
msgstr ""
"Dukungan untuk :doc:`time zones </topics/i18n/timezones>` diperkenalkan di "
"DJango 1.4 tidak bekerja baik dengan :meth:`QuerySet.dates() <django.db."
"models.query.QuerySet.dates>`: pengumpulan selalu dilakukan di UTC. Batasan "
"ini telah diangkat di Django 1.6. Gunakan :meth:`QuerySet.datetimes() "
"<django.db.models.query.QuerySet.datetimes>`untuk melakukan mengetahui "
"pengumpulan zona waktu di  :class:`~django.db.models.DateTimeField`."

msgid "Support for savepoints in SQLite"
msgstr "Dukungan untuk savepoint di SQLite"

msgid ""
"Django 1.6 adds support for savepoints in SQLite, with some :ref:"
"`limitations <savepoints-in-sqlite>`."
msgstr ""
"Django 1.6 menambahkan dukungan untuk savepoint di SQLite, dengan beberapa :"
"ref:`limitations <savepoints-in-sqlite>`."

msgid "``BinaryField`` model field"
msgstr "Bidang model ``BinaryField``"

msgid ""
"A new :class:`django.db.models.BinaryField` model field allows storage of "
"raw binary data in the database."
msgstr ""
"Bidang model :class:`django.db.models.BinaryField` baru mengizinkan "
"penyimpanan dari data biner mentah di basisdata."

msgid "GeoDjango form widgets"
msgstr "GeoDjango dari widget"

msgid ""
"GeoDjango now provides :doc:`form fields and widgets </ref/contrib/gis/forms-"
"api>` for its geo-specialized fields. They are OpenLayers-based by default, "
"but they can be customized to use any other JS framework."
msgstr ""
"GeoDjango sekarang menyediakan :doc:`form fields and widgets </ref/contrib/"
"gis/forms-api>` untuk bidang khusus-geo nya. Mereka adalah berdasarkan-"
"OpenLayer secara awalan, tetapi mereka dapat disesuaiakan untuk menggunakan "
"apapun kerangka kerja JS lain."

msgid "``check`` management command added for verifying compatibility"
msgstr "Perintah pengelolaan ``check`` ditambahkan untuk mengecek kesesuaian"

msgid ""
"A :djadmin:`check` management command was added, enabling you to verify if "
"your current configuration (currently oriented at settings) is compatible "
"with the current version of Django."
msgstr ""
"Sebuah perintah pengelolaan :djadmin:`check` telah ditambahkan, mengadakan "
"anda untuk memeriksa jika konfigurasi anda saat ini (saat ini bertujuan pada "
"pengaturan) adalah cocok dengan versi saat ini dari Django."

msgid ":meth:`Model.save() <django.db.models.Model.save()>` algorithm changed"
msgstr "Algoritma :meth:`Model.save() <django.db.models.Model.save()>` berubah"

msgid ""
"The :meth:`Model.save() <django.db.models.Model.save()>` method now tries to "
"directly ``UPDATE`` the database if the instance has a primary key value. "
"Previously ``SELECT`` was performed to determine if ``UPDATE`` or ``INSERT`` "
"were needed. The new algorithm needs only one query for updating an existing "
"row while the old algorithm needed two. See :meth:`Model.save() <django.db."
"models.Model.save()>` for more details."
msgstr ""
"Metode :meth:`Model.save() <django.db.models.Model.save()>` sekarang mencoba "
"secara langsung ``UPDATE`` basisdata jika instance mempunyai sebuah nilai "
"primary key. Sebelumnya ``SELECT`` telah dilakukan untuk menentukan jika "
"``UPDATE`` atau ``INSERT`` dibutuhkan. Algoritma baru dibutuhkan jika hanya "
"satu permintaan untuk memperbaharui baris yang ada selagi algoritma lama "
"membutuhkan dua. Lihat :meth:`Model.save() <django.db.models.Model.save()>` "
"untuk lebih rinci."

msgid ""
"In some rare cases the database doesn't report that a matching row was found "
"when doing an ``UPDATE``. An example is the PostgreSQL ``ON UPDATE`` trigger "
"which returns ``NULL``. In such cases it is possible to set :attr:`django.db."
"models.Options.select_on_save` flag to force saving to use the old algorithm."
msgstr ""
"Di beberapa kasus yang jarang basisdata tidak melaporkan bahwa sebuah baris "
"yang cocok telah ditemukan ketika melakukan sebuah ``UPDATE``. Sebuah contoh "
"adalah pemicu ``ON UPDATE`` PostgreSQL yang mengembalikan ``NULL``. Dalam "
"kasus tersebut itu memungkinkan menyetel bendera :attr:`django.db.models."
"Options.select_on_save` untuk memaksa menyimpan menggunakan algoritma lama."

msgid ""
"Authentication backends can raise ``PermissionDenied`` to immediately fail "
"the authentication chain."
msgstr ""
"Backend otentifikasi dapat memunculkan ``PermissionDenied`` untuk segera "
"menggagalkan rantai otentifikasi. "

msgid ""
"The ``HttpOnly`` flag can be set on the CSRF cookie with :setting:"
"`CSRF_COOKIE_HTTPONLY`."
msgstr ""
"Bendera ``HttpOnly`` dapat disetel di kue CSRF dengan :setting:"
"`CSRF_COOKIE_HTTPONLY`."

msgid ""
"The ``assertQuerysetEqual()`` now checks for undefined order and raises :exc:"
"`ValueError` if undefined order is spotted. The order is seen as undefined "
"if the given ``QuerySet`` isn't ordered and there is more than one ordered "
"value to compare against."
msgstr ""

msgid ""
"Added :meth:`~django.db.models.query.QuerySet.earliest` for symmetry with :"
"meth:`~django.db.models.query.QuerySet.latest`."
msgstr ""
"Ditambahkan :meth:`~django.db.models.query.QuerySet.earliest` untuk simetri "
"dengan :meth:`~django.db.models.query.QuerySet.latest`."

msgid ""
"In addition to :lookup:`year`, :lookup:`month` and :lookup:`day`, the ORM "
"now supports :lookup:`hour`, :lookup:`minute` and :lookup:`second` lookups."
msgstr ""
"Sebagai tambahan pada :lookup:`year`, :lookup:`month` dan :lookup:`day`, ORM "
"sekarang mendukung pencarian :lookup:`hour`, :lookup:`minute` dan :lookup:"
"`second`."

msgid "Django now wraps all :pep:`249` exceptions."
msgstr ""

msgid ""
"The default widgets for :class:`~django.forms.EmailField`, :class:`~django."
"forms.URLField`, :class:`~django.forms.IntegerField`, :class:`~django.forms."
"FloatField` and :class:`~django.forms.DecimalField` use the new type "
"attributes available in HTML5 (``type='email'``, ``type='url'``, "
"``type='number'``). Note that due to erratic support of the ``number`` input "
"type with localized numbers in current browsers, Django only uses it when "
"numeric fields are not localized."
msgstr ""
"Widget awalan untuk :class:`~django.forms.EmailField`, :class:`~django.forms."
"URLField`, :class:`~django.forms.IntegerField`, :class:`~django.forms."
"FloatField` dan :class:`~django.forms.DecimalField` menggunakan atribut "
"jenis baru tersedia di HTML5 (``type='email'``, ``type='url'``, "
"``type='number'``). Catat bagwa karena dukungan tak menentu dari jenis "
"masukan ``number`` dengan angka lokal di peramban saat ini, Django hanya "
"menggunakannya ketika bidang numerik tidak di lokalkan."

msgid ""
"The ``number`` argument for :ref:`lazy plural translations <lazy-plural-"
"translations>` can be provided at translation time rather than at definition "
"time."
msgstr ""
"Argumen ``number`` untuk :ref:`lazy plural translations <lazy-plural-"
"translations>` dapat disediakan pada waktu terjemahan daripada saat waktu "
"penentuan."

msgid ""
"For custom management commands: Verification of the presence of valid "
"settings in commands that ask for it by using the ``BaseCommand."
"can_import_settings`` internal option is now performed independently from "
"handling of the locale that should be active during the execution of the "
"command. The latter can now be influenced by the new ``BaseCommand."
"leave_locale_alone`` internal option. See :ref:`management-commands-and-"
"locales` for more details."
msgstr ""

msgid ""
"The :attr:`~django.views.generic.edit.DeletionMixin.success_url` of :class:"
"`~django.views.generic.edit.DeletionMixin` is now interpolated with its "
"``object``’s ``__dict__``."
msgstr ""
":attr:`~django.views.generic.edit.DeletionMixin.success_url` dari :class:"
"`~django.views.generic.edit.DeletionMixin` sekarang ditambahkan dengan "
"``__dict__`` ``object`` nya."

msgid ""
":class:`~django.http.HttpResponseRedirect` and :class:`~django.http."
"HttpResponsePermanentRedirect` now provide an ``url`` attribute (equivalent "
"to the URL the response will redirect to)."
msgstr ""
":class:`~django.http.HttpResponseRedirect` dan :class:`~django.http."
"HttpResponsePermanentRedirect` sekarang menyediakan sebuah atribut ``url`` "
"(setara dengan tanggapan URL akan dialihkan)."

msgid ""
"The ``MemcachedCache`` cache backend now uses the latest :mod:`pickle` "
"protocol available."
msgstr ""
"Backend penyimpanan sementara ``MemcachedCache`` sekarang menggunakan "
"protokol :mod:`pickle` yang terakhir tersedia."

msgid ""
"Added :class:`~django.contrib.messages.views.SuccessMessageMixin` which "
"provides a ``success_message`` attribute for :class:`~django.views.generic."
"edit.FormView` based classes."
msgstr ""
"Ditambahkan :class:`~django.contrib.messages.views.SuccessMessageMixin` yang "
"menyediakan sebuah atribut ``success_message`` untuk :class:`~django.views."
"generic.edit.FormView` berdasarkan kelas-kelas. "

msgid ""
"Added the :attr:`django.db.models.ForeignKey.db_constraint` and :attr:"
"`django.db.models.ManyToManyField.db_constraint` options."
msgstr ""
"Ditambahkan pilihan :attr:`django.db.models.ForeignKey.db_constraint` dan :"
"attr:`django.db.models.ManyToManyField.db_constraint`."

msgid ""
"The jQuery library embedded in the admin has been upgraded to version 1.9.1."
msgstr "Pustaka jQuery ditanam di admin telah ditingkatkan ke versi 1.9.1."

msgid ""
"Syndication feeds (:mod:`django.contrib.syndication`) can now pass extra "
"context through to feed templates using a new :meth:`Feed.get_context_data() "
"<django.contrib.syndication.Feed.get_context_data>` callback."
msgstr ""
"Umpan kongsi (:mod:`django.contrib.syndication`) sekarang dapat melewatkan "
"konteks tambahan melalui cetakan umpan menggunakan callback :meth:`Feed."
"get_context_data() <django.contrib.syndication.Feed.get_context_data>` baru."

msgid ""
"The admin list columns have a ``column-<field_name>`` class in the HTML so "
"the columns header can be styled with CSS, e.g. to set a column width."
msgstr ""
"Kolom daftar admin mempunyai sebuah kelas ``column-<field_name>`` di HTML "
"jadi kepalakolom dapat digaya dengan CSS, sebagai contoh untuk menyetel "
"lebar kolom."

msgid ""
"The :ref:`isolation level<database-isolation-level>` can be customized under "
"PostgreSQL."
msgstr ""
":ref:`isolation level<database-isolation-level>` dapat disesuaikan dibawah "
"PostgreSQL."

msgid ""
"The :ttag:`blocktrans` template tag now respects "
"``TEMPLATE_STRING_IF_INVALID`` for variables not present in the context, "
"just like other template constructs."
msgstr ""
"Etiket cetakan :ttag:`blocktrans` sekarang mematuhi "
"``TEMPLATE_STRING_IF_INVALID`` untuk variabel tidak hadir di konteks, sama "
"seprti penyusunan cetakan lain."

msgid ""
"``SimpleLazyObject``\\s will now present more helpful representations in "
"shell debugging situations."
msgstr ""
"``SimpleLazyObject`` sekarang akan menghadirkan gambaran lebih membantu "
"dalam keadaan mencari kesalahan shell."

msgid ""
"Generic :class:`~django.contrib.gis.db.models.GeometryField` is now editable "
"with the OpenLayers widget in the admin."
msgstr ""
" :class:`~django.contrib.gis.db.models.GeometryField` umum sekarang dapat "
"disunting dengan widget OpenLayer di admin."

msgid ""
"The documentation contains a :doc:`deployment checklist </howto/deployment/"
"checklist>`."
msgstr ""
"Dokumentasi mengandung :doc:`deployment checklist </howto/deployment/"
"checklist>`."

msgid "The :djadmin:`diffsettings` command gained a ``--all`` option."
msgstr "Perintah :djadmin:`diffsettings` mendapatkan pilihan ``--all``."

msgid ""
"``django.forms.fields.Field.__init__`` now calls ``super()``, allowing field "
"mixins to implement ``__init__()`` methods that will reliably be called."
msgstr ""
"``django.forms.fields.Field.__init__`` sekarang memanggil ``super()``, "
"mengizinkan campuran bidang untuk menerapkan metode ``__init__()`` yang akan "
"dapat dihandalkan dipanggil."

msgid ""
"The ``validate_max`` parameter was added to ``BaseFormSet`` and :func:"
"`~django.forms.formsets.formset_factory`, and ``ModelForm`` and inline "
"versions of the same.  The behavior of validation for formsets with "
"``max_num`` was clarified.  The previously undocumented behavior that "
"hardened formsets against memory exhaustion attacks was documented, and the "
"undocumented limit of the higher of 1000 or ``max_num`` forms was changed so "
"it is always 1000 more than ``max_num``."
msgstr ""
"Parameter ``validate_max`` telah ditambahkan ke ``BaseFormSet`` dan :func:"
"`~django.forms.formsets.formset_factory`, dan ``ModelForm`` dan versi "
"berderet dari yang sama. Perilaku dari pengesahan untuk formset dengan "
"``max_num`` telah dijelaskan. Sebelumnya perilaku tidak terdokumentasi yang "
"mengeraskan formset terhadap serangan kelelahan ingatan telah "
"didokumentasikan, dan tidak terdokumentasi terbatas dari lebih tinggi 1000 "
"atau ``max_num`` formulir telah dirubah jadi itu selalu 1000 lebih daripada "
"``max_num``."

msgid ""
"Added ``BCryptSHA256PasswordHasher`` to resolve the password truncation "
"issue with bcrypt."
msgstr ""
"Ditambahkan ``BCryptSHA256PasswordHasher`` untuk menyelesaikan masalah "
"pemotongan sandi dengan bcrypt."

msgid ""
":pypi:`Pillow` is now the preferred image manipulation library to use with "
"Django. :pypi:`PIL` is pending deprecation (support to be removed in Django "
"1.8). To upgrade, you should **first** uninstall PIL, **then** install "
"Pillow."
msgstr ""

msgid ":class:`~django.forms.ModelForm` accepts several new ``Meta`` options."
msgstr ""
":class:`~django.forms.ModelForm` menerima beberapa pilihan ``Meta`` baru."

msgid ""
"Fields included in the ``localized_fields`` list will be localized (by "
"setting ``localize`` on the form field)."
msgstr ""
"Bidang-bidang disertakan dalam daftar ``localized_fields`` akan dilokalkan "
"(dengan menyetel ``localize`` pada bidang formulir). "

msgid ""
"The  ``labels``, ``help_texts`` and ``error_messages`` options may be used "
"to customize the default fields, see :ref:`modelforms-overriding-default-"
"fields` for details."
msgstr ""
"Pilihan ``labels``, ``help_texts`` dan ``error_messages`` mungkin digunakan "
"untuk menyesuaikan bidang awalan, lihat :ref:`modelforms-overriding-default-"
"fields` untuk rincian. "

msgid ""
"The ``choices`` argument to model fields now accepts an iterable of "
"iterables instead of requiring an iterable of lists or tuples."
msgstr ""
"Argumen ``choices`` pada bidang model sekarang menerima sebuah perulangan "
"dari perulangan sebagai gantinya membutuhkan sebuah perulangan dari daftar "
"atau tuple."

msgid ""
"The reason phrase can be customized in HTTP responses using :attr:`~django."
"http.HttpResponse.reason_phrase`."
msgstr ""
"Alasan frase dapat disesuaikan di tanggapan HTTP menggunakan :attr:`~django."
"http.HttpResponse.reason_phrase`."

msgid ""
"When giving the URL of the next page for ``django.contrib.auth.views."
"logout()``, ``django.contrib.auth.views.password_reset()``, ``django.contrib."
"auth.views.password_reset_confirm()``, and ``django.contrib.auth.views."
"password_change()``, you can now pass URL names and they will be resolved."
msgstr ""

msgid ""
"The new :option:`dumpdata --pks` option specifies the primary keys of "
"objects to dump. This option can only be used with one model."
msgstr ""
"Pilihan :option:`dumpdata --pks` baru menentukan primary key dari obyek "
"untuk membuang. Pilihan ini dapat hanya digunakan dengan satu model."

msgid ""
"Added ``QuerySet`` methods :meth:`~django.db.models.query.QuerySet.first` "
"and :meth:`~django.db.models.query.QuerySet.last` which are convenience "
"methods returning the first or last object matching the filters. Returns "
"``None`` if there are no objects matching."
msgstr ""
"Ditambahkan metode ``QuerySet`` :meth:`~django.db.models.query.QuerySet."
"first` dan :meth:`~django.db.models.query.QuerySet.last` yang metode "
"kenyamanan mengembalikan obyek pertama atau terakhir mencocokkan saringan. "
"Mengembalikan ``None`` jika tidak ada pencocokan obyek."

msgid ""
":class:`~django.views.generic.base.View` and :class:`~django.views.generic."
"base.RedirectView` now support HTTP ``PATCH`` method."
msgstr ""
":class:`~django.views.generic.base.View` dan :class:`~django.views.generic."
"base.RedirectView` sekarang mendukung metode HTTP ``PATCH``."

msgid ""
"``GenericForeignKey`` now takes an optional ``for_concrete_model`` argument, "
"which when set to ``False`` allows the field to reference proxy models. The "
"default is ``True`` to retain the old behavior."
msgstr ""
"``GenericForeignKey`` sekarang mengambil sebuah pilihan argumen "
"``for_concrete_model``, yang ketika disetel ke ``False`` mengizinkan bidang "
"untuk mengacu model proxy. Awalan adalah ``True`` untuk memelihara perilaku "
"lama."

msgid ""
"The :class:`~django.middleware.locale.LocaleMiddleware` now stores the "
"active language in session if it is not present there. This prevents loss of "
"language settings after session flush, e.g. logout."
msgstr ""
":class:`~django.middleware.locale.LocaleMiddleware` sekarang menyimpan "
"bahasa aktif di sesi jika itu tidak hadir disana. Ini mencegah kehilangan "
"dari pengaturan bahasa setelah menyiram sesi, sebagai contoh keluar."

msgid ""
":exc:`~django.core.exceptions.SuspiciousOperation` has been differentiated "
"into a number of subclasses, and each will log to a matching named logger "
"under the ``django.security`` logging hierarchy. Along with this change, a "
"``handler400`` mechanism and default view are used whenever a "
"``SuspiciousOperation`` reaches the WSGI handler to return an "
"``HttpResponseBadRequest``."
msgstr ""
":exc:`~django.core.exceptions.SuspiciousOperation` telah dibedakan menjadi "
"sejumlah subkelas, dan setiap akan masuk untuk mencocokan pencatat bernama "
"dibawah hirarki pencatatan ``django.security``. Bersama dengan perubahan "
"ini, sebuah mekanisme ``handler400`` dan tampilan awal digunakan ketika "
"kapanpun ``SuspiciousOperation`` mencapai penangan WSGI untuk mengembalikan "
"sebuah ``HttpResponseBadRequest``."

msgid ""
"The :exc:`~django.db.models.Model.DoesNotExist` exception now includes a "
"message indicating the name of the attribute used for the lookup."
msgstr ""
"Pengecualian :exc:`~django.db.models.Model.DoesNotExist` sekarang "
"menyertakan sebuah pesan yang menunjukkan nama dari atribut digunakan untuk "
"pencarian."

msgid ""
"The :meth:`~django.db.models.query.QuerySet.get_or_create` method no longer "
"requires at least one keyword argument."
msgstr ""
"Metode :meth:`~django.db.models.query.QuerySet.get_or_create` tidak lagi "
"membutuhkan setidaknya satu argumen katakunci."

msgid ""
"The :class:`~django.test.SimpleTestCase` class includes a new assertion "
"helper for testing formset errors: ``django.test.SimpleTestCase."
"assertFormsetError()``."
msgstr ""

msgid ""
"The list of related fields added to a :class:`~django.db.models.query."
"QuerySet` by :meth:`~django.db.models.query.QuerySet.select_related` can be "
"cleared using ``select_related(None)``."
msgstr ""
"Daftar dari bidang-bidang terkait ditambahkan pada :class:`~django.db.models."
"query.QuerySet` oleh :meth:`~django.db.models.query.QuerySet.select_related` "
"dapat dibersihkan menggunakan ``select_related(None)``."

msgid ""
"The :meth:`~django.contrib.admin.InlineModelAdmin.get_extra` and :meth:"
"`~django.contrib.admin.InlineModelAdmin.get_max_num` methods on :class:"
"`~django.contrib.admin.InlineModelAdmin` may be overridden to customize the "
"extra and maximum number of inline forms."
msgstr ""
"Metode :meth:`~django.contrib.admin.InlineModelAdmin.get_extra` dan :meth:"
"`~django.contrib.admin.InlineModelAdmin.get_max_num` pada :class:`~django."
"contrib.admin.InlineModelAdmin` mungkin dikesampingkan untuk menyesuaikan "
"jumlah tambahan dan maksimal dari formulir berderet."

msgid ""
"Formsets now have a :meth:`~django.forms.formsets.BaseFormSet."
"total_error_count` method."
msgstr ""
"Formset sekarang mempunyai sebuah metode :meth:`~django.forms.formsets."
"BaseFormSet.total_error_count`."

msgid ""
":class:`~django.forms.ModelForm` fields can now override error messages "
"defined in model fields by using the :attr:`~django.forms.Field."
"error_messages` argument of a ``Field``’s constructor. To take advantage of "
"this new feature with your custom fields, :ref:`see the updated "
"recommendation <raising-validation-error>` for raising a ``ValidationError``."
msgstr ""
"Bidang-bidang :class:`~django.forms.ModelForm` sekarang dapat menimpa pesan-"
"pesan kesalahan ditentukan di bidang model dengan menggunakan argumen :attr:"
"`~django.forms.Field.error_messages` dari pembangun ``Field``. Untuk "
"mengambil kesimpulan dari fitur ini dengan bidang penyesuaian anda, :ref:"
"`see the updated recommendation <raising-validation-error>` untuk "
"memunculkan ``ValidationError``."

msgid ""
":class:`~django.contrib.admin.ModelAdmin` now preserves filters on the list "
"view after creating, editing or deleting an object. It's possible to restore "
"the previous behavior of clearing filters by setting the :attr:`~django."
"contrib.admin.ModelAdmin.preserve_filters` attribute to ``False``."
msgstr ""
":class:`~django.contrib.admin.ModelAdmin` sekarang mempertahankan penyaring "
"pada daftar tampilan setelah membuat, menyunting atau menghapus sebuah "
"obyek. Itu memungkinkan menyimpan kembali perilaku sebelumnya dari "
"membersihkan penyaring dengan mengatur atribut :attr:`~django.contrib.admin."
"ModelAdmin.preserve_filters` menjadi ``False``."

msgid ""
"Added :meth:`FormMixin.get_prefix<django.views.generic.edit.FormMixin."
"get_prefix>` (which returns :attr:`FormMixin.prefix<django.views.generic."
"edit.FormMixin.prefix>` by default) to allow customizing the :attr:`~django."
"forms.Form.prefix` of the form."
msgstr ""
"Ditambahkan :meth:`FormMixin.get_prefix<django.views.generic.edit.FormMixin."
"get_prefix>` (yang mengembalikan :attr:`FormMixin.prefix<django.views."
"generic.edit.FormMixin.prefix>` secara awalan) untuk mengizinkan "
"menyesuaikan :attr:`~django.forms.Form.prefix` dari formulir. "

msgid ""
"Raw queries (``Manager.raw()`` or ``cursor.execute()``) can now use the "
"\"pyformat\" parameter style, where placeholders in the query are given as "
"``'%(name)s'`` and the parameters are passed as a dictionary rather than a "
"list (except on SQLite). This has long been possible (but not officially "
"supported) on MySQL and PostgreSQL, and is now also available on Oracle."
msgstr ""
"Permintaan mentah (``Manager.raw()`` atau ``cursor.execute()``) sekarang "
"dapat menggunakan gaya parameter \"pyformat\", dimana placeholder dalam "
"permintaan diberikan sebagai ``'%(name)s'`` dan parameter dilewatkan sebagai "
"sebuah kamus daripada sebuah daftar (kecuali di SQLite). Ini telam lama "
"mungkin (tetapi bukan secara resmi didukung) di MySQL dan PostgreSQL, dan "
"sekarang juga tersedia di Oracle."

msgid ""
"The default iteration count for the PBKDF2 password hasher has been "
"increased by 20%. This backwards compatible change will not affect existing "
"passwords or users who have subclassed ``django.contrib.auth.hashers."
"PBKDF2PasswordHasher`` to change the default value. Passwords :ref:`will be "
"upgraded <password-upgrades>` to use the new iteration count as necessary."
msgstr ""
"Perhitungan putaran awal untuk pengacak sandi PBKDF2 telah ditingkatkan oleh "
"20%. Perubahan kesesuaian kebelakang tidak akan mempengaruhi sandi atau "
"pengguna yang mempunyai disubkelaskan ``django.contrib.auth.hashers."
"PBKDF2PasswordHasher`` untuk merubah nilai awal. Sandi :ref:`will be "
"upgraded <password-upgrades>` untuk menggunakan perhitungan putaran baru "
"sesuai kebutuhan."

msgid "Backwards incompatible changes in 1.6"
msgstr "Perubahan bertentangan kebelakang di 1.6"

msgid ""
"In addition to the changes outlined in this section, be sure to review the :"
"ref:`deprecation plan <deprecation-removed-in-1.6>` for any features that "
"have been removed. If you haven't updated your code within the deprecation "
"timeline for a given feature, its removal may appear as a backwards "
"incompatible change."
msgstr ""
"Sebagai tambahan pada perubahan diuraikan di bagian ini, pastikan untuk "
"meninjau kembali :ref:`deprecation plan <deprecation-removed-in-1.6>` untuk "
"setiap fitur yang telah dipindahkan. Jika anda belum memperbaharui kode anda "
"dalam linimasa pengusangan untuk fitur yang diberikan, perpindahannya mugkin "
"muncul sebagai perubahan ketidaksesuaian kebelakang."

msgid "New transaction management model"
msgstr "Model pengelolaan transaksi baru"

msgid "Behavior changes"
msgstr "Perubahan perilaku"

msgid ""
"Database-level autocommit is enabled by default in Django 1.6. While this "
"doesn't change the general spirit of Django's transaction management, there "
"are a few backwards-incompatibilities."
msgstr ""
"Pembenaran otomatis tingkat-basisdata diadakan secara awalan di Django 1.6. "
"Selagi ini tidak merubah jiwa umum dari pengelolaan transaksi Django, ada "
"sedikit ketidaksesuaian-kebelakang."

msgid "Savepoints and ``assertNumQueries``"
msgstr "Savepoints dan ``assertNumQueries``"

msgid ""
"The changes in transaction management may result in additional statements to "
"create, release or rollback savepoints. This is more likely to happen with "
"SQLite, since it didn't support savepoints until this release."
msgstr ""
"Perubahan di pengelolaan transaksi dapat menghasilkan di pernyataan tambahan "
"untuk membuat, menerbitkan atau menyimpan kembali titik penyimpanan sampai "
"terbitan ini."

msgid ""
"If tests using :meth:`~django.test.TransactionTestCase.assertNumQueries` "
"fail because of a higher number of queries than expected, check that the "
"extra queries are related to savepoints, and adjust the expected number of "
"queries accordingly."
msgstr ""
"Jika percobaan menggunakan :meth:`~django.test.TransactionTestCase."
"assertNumQueries` gagal karena dari angka tertinggi dari permintaan daripada "
"diharapkan, periksa bahwa permintaan tambahan dikaitkan ke titik "
"penyimpanan, dan menyesuaikan angka yang diharapkan dari permintaan sesuai "
"dengan itu."

msgid "Autocommit option for PostgreSQL"
msgstr "Pilihan perbaikan otomatis untuk PostgreSQL"

msgid ""
"In previous versions, database-level autocommit was only an option for "
"PostgreSQL, and it was disabled by default. This option is now ignored and "
"can be removed."
msgstr ""
"Di versi sebelumnya, perbaikan otomatis tingkatan-basisdata hanya sebuah "
"pilihan untuk PostgreSQL, dan itu ditiadakan secara awalan. Pilihan ini "
"sekarang diabaikan dan dapat dipindah."

msgid "New test runner"
msgstr "Pejalan percobaan baru"

msgid ""
"In order to maintain greater consistency with Python's ``unittest`` module, "
"the new test runner (``django.test.runner.DiscoverRunner``) does not "
"automatically support some types of tests that were supported by the "
"previous runner:"
msgstr ""

msgid ""
"Tests in ``models.py`` and ``tests/__init__.py`` files will no longer be "
"found and run. Move them to a file whose name begins with ``test``."
msgstr ""
"Percobaan di berkas ``models.py`` dan ``tests/__init__.py`` tidak lagi "
"ditemukan dan berjalan. Pindahkan mereka ke sebuah berkas yang namanya "
"dimulai dengan ``test``."

msgid ""
"Doctests will no longer be automatically discovered. To integrate doctests "
"in your test suite, follow the :ref:`recommendations in the Python "
"documentation <doctest-unittest-api>`."
msgstr ""
"Doctest tidak akan lagi secara otomatis ditemukan. Untuk memadukan doctest "
"ke deretan percobaan anda, ikuti :ref:`recommendations in the Python "
"documentation <doctest-unittest-api>`."

msgid ""
"Django bundles a modified version of the :mod:`doctest` module from the "
"Python standard library (in ``django.test._doctest``) and includes some "
"additional doctest utilities. These utilities are deprecated and will be "
"removed in Django 1.8; doctest suites should be updated to work with the "
"standard library's doctest module (or converted to ``unittest``-compatible "
"tests)."
msgstr ""

msgid ""
"If you wish to delay updates to your test suite, you can set your :setting:"
"`TEST_RUNNER` setting to ``django.test.simple.DjangoTestSuiteRunner`` to "
"fully restore the old test behavior. ``DjangoTestSuiteRunner`` is deprecated "
"but will not be removed from Django until version 1.8."
msgstr ""
"Jika anda berharap menunda perbaharuan ke deretan percobaan anda, anda dapat "
"menyetel pengaturan :setting:`TEST_RUNNER` anda menjadi ``django.test.simple."
"DjangoTestSuiteRunner`` untuk sepenuhnya menyimpan kembali perilaku "
"percobaan lama. ``DjangoTestSuiteRunner`` diusangkan tetapi tidak akan "
"dipindahkan dari Django sampai versi 1.8."

msgid ""
"Removal of ``django.contrib.gis.tests.GeoDjangoTestSuiteRunner`` GeoDjango "
"custom test runner"
msgstr ""
"Perpindahan dari pejalan percobaan penyesuaian GeoDjango ``django.contrib."
"gis.tests.GeoDjangoTestSuiteRunner``"

msgid ""
"This is for developers working on the GeoDjango application itself and "
"related to the item above about changes in the test runners:"
msgstr ""
"Ini adalah untuk pengembang yang bekerja pada aplikasi GeoDjango itu sendiri "
"dan terkait ke barang diatas tentang perubahan di penjalan percobaan:"

msgid ""
"The ``django.contrib.gis.tests.GeoDjangoTestSuiteRunner`` test runner has "
"been removed and the standalone GeoDjango tests execution setup it "
"implemented isn't supported anymore. To run the GeoDjango tests simply use "
"the new ``DiscoverRunner`` and specify the ``django.contrib.gis`` app."
msgstr ""
"Penjalan percobaan ``django.contrib.gis.tests.GeoDjangoTestSuiteRunner`` "
"telah dipindahkan dan setelan pengerjaan percobaan GeoDajngo berdiri "
"sendiri  itu terapkan tidak didukung lagi. Untuk menjalankan percobaan "
"GeoDjango cukup gunakan ``DiscoverRunner`` baru dan tentukan aplikasi "
"``django.contrib.gis``."

msgid "Custom user models in tests"
msgstr "Menyesuaikan model user di percobaan"

msgid ""
"The introduction of the new test runner has also slightly changed the way "
"that test models are imported. As a result, any test that overrides "
"``AUTH_USER_MODEL`` to test behavior with one of Django's test user models "
"( ``django.contrib.auth.tests.custom_user.CustomUser`` and ``django.contrib."
"auth.tests.custom_user.ExtensionUser``) must now explicitly import the User "
"model in your test module::"
msgstr ""
"Perkenalan dari pejalan percobaan baru juga sedikit merubah cara dimana "
"model percobaan diimpor. Sebagai hasilnya, percobaan apapun yang menimpa "
"``AUTH_USER_MODEL`` untuk mencoba perilaku dengan satu dari model pengguna "
"percobaan Dajngo ( ``django.contrib.auth.tests.custom_user.CustomUser`` dan "
"``django.contrib.auth.tests.custom_user.ExtensionUser``) harus sekarang "
"secara eksplisit impor model User di modul percobaan anda::"

msgid ""
"This import forces the custom user model to be registered. Without this "
"import, the test will be unable to swap in the custom user model, and you "
"will get an error reporting:"
msgstr ""

msgid "Time zone-aware ``day``, ``month``, and ``week_day`` lookups"
msgstr "Sadar-zona waktu pencarian ``day``, ``month``, dan ``week_day``"

msgid ""
"Django 1.6 introduces time zone support for :lookup:`day`, :lookup:`month`, "
"and :lookup:`week_day` lookups when :setting:`USE_TZ` is ``True``. These "
"lookups were previously performed in UTC regardless of the current time zone."
msgstr ""
"Django 1.6 memperkenalkan dukungan zona waktu untuk pencarian :lookup:"
"`day`, :lookup:`month`, dan :lookup:`week_day` ketika :setting:`USE_TZ` "
"adalah ``True``. Pencarian ini sebelumnya dilakukan di UTC tanpa "
"memperhatikan dari zona waktu sekarang."

msgid ""
"This requires :ref:`time zone definitions in the database <database-time-"
"zone-definitions>`. If you're using SQLite, you must install pytz_. If "
"you're using MySQL, you must install pytz_ and load the time zone tables "
"with `mysql_tzinfo_to_sql`_."
msgstr ""
"Ini membutuhkan :ref:`time zone definitions in the database <database-time-"
"zone-definitions>`. Jika anda sedang menggunakan SQLite, anda harus memasang "
"pytz_. Jika anda sedang menggunakan MySQL, anda harus memasang pytz_ dan "
"memuat tabel zona waktu dengan `mysql_tzinfo_to_sql`_."

msgid "Addition of ``QuerySet.datetimes()``"
msgstr "Tambahan dari ``QuerySet.datetimes()``"

msgid ""
"When the :doc:`time zone support </topics/i18n/timezones>` added in Django "
"1.4 was active, :meth:`QuerySet.dates() <django.db.models.query.QuerySet."
"dates>` lookups returned unexpected results, because the aggregation was "
"performed in UTC. To fix this, Django 1.6 introduces a new API, :meth:"
"`QuerySet.datetimes() <django.db.models.query.QuerySet.datetimes>`. This "
"requires a few changes in your code."
msgstr ""
"Ketika :doc:`time zone support </topics/i18n/timezones>` ditambahkan di "
"Django 1.4 telah aktif, pencarian :meth:`QuerySet.dates() <django.db.models."
"query.QuerySet.dates>` mengembalikan hasil tidak diharapkan, karena "
"pengumpulan telah dilakukan dalam UTC. Untuk memperbaiki ini, Django 1.6 "
"memperkenalkan API baru, :meth:`QuerySet.datetimes() <django.db.models.query."
"QuerySet.datetimes>`. Ini membutuhkan sedikit perubahan di kode anda."

msgid "``QuerySet.dates()`` returns ``date`` objects"
msgstr "``QuerySet.dates()`` mengembalikan obyek ``date``"

msgid ""
":meth:`QuerySet.dates() <django.db.models.query.QuerySet.dates>` now returns "
"a list of :class:`~datetime.date`. It used to return a list of :class:"
"`~datetime.datetime`."
msgstr ""
":meth:`QuerySet.dates() <django.db.models.query.QuerySet.dates>` sekarang "
"mengemblikan sebuah daftar dari :class:`~datetime.date`. Itu digunakan untuk "
"mengembalikan sebuah daftar :class:`~datetime.datetime`."

msgid ""
":meth:`QuerySet.datetimes() <django.db.models.query.QuerySet.datetimes>` "
"returns a list of :class:`~datetime.datetime`."
msgstr ""
":meth:`QuerySet.datetimes() <django.db.models.query.QuerySet.datetimes>` "
"mengembalikan sebuah daftar dari :class:`~datetime.datetime`."

msgid "``QuerySet.dates()`` no longer usable on ``DateTimeField``"
msgstr "``QuerySet.dates()`` tidak lagi digunakan pada ``DateTimeField``"

msgid ""
":meth:`QuerySet.dates() <django.db.models.query.QuerySet.dates>` raises an "
"error if it's used on :class:`~django.db.models.DateTimeField` when time "
"zone support is active. Use :meth:`QuerySet.datetimes() <django.db.models."
"query.QuerySet.datetimes>` instead."
msgstr ""
":meth:`QuerySet.dates() <django.db.models.query.QuerySet.dates>` memunculkan "
"sebuah kesalahan jika itu digunakan di :class:`~django.db.models."
"DateTimeField` ketika dukungan zona waktu aktif. Gunakan :meth:`QuerySet."
"datetimes() <django.db.models.query.QuerySet.datetimes>` sebagai gantinya."

msgid "``date_hierarchy`` requires time zone definitions"
msgstr "``date_hierarchy`` membutuhkan penentuan zona waktu"

msgid ""
"The :attr:`~django.contrib.admin.ModelAdmin.date_hierarchy` feature of the "
"admin now relies on :meth:`QuerySet.datetimes() <django.db.models.query."
"QuerySet.datetimes>` when it's used on a :class:`~django.db.models."
"DateTimeField`."
msgstr ""
"Fitur :attr:`~django.contrib.admin.ModelAdmin.date_hierarchy` dari admin "
"sekarang bergantung pada :meth:`QuerySet.datetimes() <django.db.models.query."
"QuerySet.datetimes>` ketika itu digunakan di :class:`~django.db.models."
"DateTimeField`. "

msgid ""
"This requires time zone definitions in the database when :setting:`USE_TZ` "
"is ``True``. :ref:`Learn more <database-time-zone-definitions>`."
msgstr ""
"Ini membutuhkan penentuan zona waktu di basisdata ketika :setting:`USE_TZ` "
"adalah ``True``. :ref:`Learn more <database-time-zone-definitions>`."

msgid "``date_list`` in generic views requires time zone definitions"
msgstr "``date_list`` dalam tampilan umum membutuhkan penentuan zona waktu"

msgid ""
"For the same reason, accessing ``date_list`` in the context of a date-based "
"generic view requires time zone definitions in the database when the view is "
"based on a :class:`~django.db.models.DateTimeField` and :setting:`USE_TZ` is "
"``True``. :ref:`Learn more <database-time-zone-definitions>`."
msgstr ""
"Untuk alasan sama, mengakses ``date_list`` di konteks dari tampilan umum "
"berdasarkan-tanggal membutuhkan penentuan zona waktu di basisdata ketika "
"tampilan berdasarkan pada :class:`~django.db.models.DateTimeField` dan :"
"setting:`USE_TZ` adalah ``True``. :ref:`Learn more <database-time-zone-"
"definitions>`."

msgid "New lookups may clash with model fields"
msgstr "Pencarian baru mungkin bertabrakan dengan bidang-bidang model"

msgid ""
"Django 1.6 introduces ``hour``, ``minute``, and ``second`` lookups on :class:"
"`~django.db.models.DateTimeField`. If you had model fields called ``hour``, "
"``minute``, or ``second``, the new lookups will clash with you field names. "
"Append an explicit :lookup:`exact` lookup if this is an issue."
msgstr ""
"Django 1.6 memperkenalkan pencarian ``hour``, ``minute``, dan ``second`` di :"
"class:`~django.db.models.DateTimeField`. Jika anda mempunyai bidang model "
"dipanggil ``hour``, ``minute``, atau ``second``, pencarian baru akan bentrok "
"dengan nama bidang anda. Tambahkan sebuah pencarian :lookup:`exact` jelas "
"jika ini adalah sebuah masalah."

msgid "``BooleanField`` no longer defaults to ``False``"
msgstr "``BooleanField`` tidak lagi disetel ke ``False``"

msgid ""
"When a :class:`~django.db.models.BooleanField` doesn't have an explicit :"
"attr:`~django.db.models.Field.default`, the implicit default value is "
"``None``. In previous version of Django, it was ``False``, but that didn't "
"represent accurately the lack of a value."
msgstr ""
"Ketika sebuah :class:`~django.db.models.BooleanField` tidak mempunyai :attr:"
"`~django.db.models.Field.default` jelas, nilai awalan tersirat adalah "
"``None``. Dalam versi sebelumnya dari Django, itu adalah ``False``, tetapi "
"itu tidak mewakili secara akurat kekurangan dari sebuah nilai."

msgid ""
"Code that relies on the default value being ``False`` may raise an exception "
"when saving new model instances to the database, because ``None`` isn't an "
"acceptable value for a :class:`~django.db.models.BooleanField`. You should "
"either specify ``default=False`` in the field definition, or ensure the "
"field is set to ``True`` or ``False`` before saving the object."
msgstr ""
"Kode yang bergantung pada nilai awalan menjadi ``False`` mungkin memunculkan "
"sebuah pengecualian ketika menyimpan instance model baru ke basisdata, "
"karena ``None`` bukan sebuah nilai yang dapat diterima untuk sebuah :class:"
"`~django.db.models.BooleanField`. Anda harus juga menentukan "
"``default=False`` di penentuan bidang, atau memastikan bidang disetel ke "
"``True`` atau ``False`` sebelum menyimpan obyek."

msgid "Translations and comments in templates"
msgstr "Terjemahan dan komentar dalam cetakan"

msgid "Extraction of translations after comments"
msgstr "Pengeluaran dari terjemahan setelah komentar"

msgid ""
"Extraction of translatable literals from templates with the :djadmin:"
"`makemessages` command now correctly detects i18n constructs when they are "
"located after a ``{#`` / ``#}``-type comment on the same line. E.g.:"
msgstr ""
"Pengeluaran dari harfiah dapat diterjemahkan dari cetakan dengan perintah :"
"djadmin:`makemessages` sekarang dengan benar mengenali gagasan i18n ketika "
"mereka ditempatkan setelah sebuah ``{#`` / ``#}``- ketik komentar di baris "
"sama. Sebagai contoh:"

msgid "Location of translator comments"
msgstr "Tempat untuk komentar penterjemah"

msgid ""
":ref:`translator-comments-in-templates` specified using ``{#`` / ``#}`` need "
"to be at the end of a line. If they are not, the comments are ignored and :"
"djadmin:`makemessages` will generate a warning. For example:"
msgstr ""
":ref:`translator-comments-in-templates` ditentukan menggunakan ``{#`` / ``#}"
"`` harus pada akhir dari sebuah baris. Jika mereka tidak, komentar diabaikan "
"dan :djadmin:`makemessages` akan membangkitkan sebuah peringatan. Sebagai "
"contoh:"

msgid "Quoting in ``reverse()``"
msgstr "Mengutip dalam ``reverse()``"

msgid ""
"When reversing URLs, Django didn't apply ``django.utils.http.urlquote`` to "
"arguments before interpolating them in URL patterns. This bug is fixed in "
"Django 1.6. If you worked around this bug by applying URL quoting before "
"passing arguments to ``reverse()``, this may result in double-quoting. If "
"this happens, simply remove the URL quoting from your code. You will also "
"have to replace special characters in URLs used in :func:`~django.test."
"SimpleTestCase.assertRedirects` with their encoded versions."
msgstr ""
"Ketika membalikkan URL, Django tidak memberlakukan ``django.utils.http."
"urlquote`` pada argumen-argumen sebelum menyisipkan mereka dalam pola URL. "
"Kesalahan ini diperbaiki di Django 1.6. Jika anda bekerja disekitar "
"kesalahan ini dengan memberlakukan kutipan URL sebelum melewatkan argumen "
"pada ``reverse()``, ini mungkin menghasilkan kutipan-ganda. Jika ini "
"terjadi, cukup pindahkan kutipan URL dari kode anda. Ini akan juga mengganti "
"karakter khusus dalam URL digunakan dalam :func:`~django.test.SimpleTestCase."
"assertRedirects` dengan versi tersandikan mereka."

msgid "Storage of IP addresses in the comments app"
msgstr "Penyimpanan dari alamat IP dalam aplikasi komentar"

msgid ""
"The comments app now uses a ``GenericIPAddressField`` for storing "
"commenters' IP addresses, to support comments submitted from IPv6 addresses. "
"Until now, it stored them in an ``IPAddressField``, which is only meant to "
"support IPv4. When saving a comment made from an IPv6 address, the address "
"would be silently truncated on MySQL databases, and raise an exception on "
"Oracle. You will need to change the column type in your database to benefit "
"from this change."
msgstr ""
"Aplikasi komentar sekarang menggunakan sebuah ``GenericIPAddressField`` "
"untuk menyimpan alamat IP komentar, untuk mendukung komentar diajukan dari "
"alamat IPv6. Sampai sekarang, itu menyimpan mereka di sebuah "
"``IPAddressField``, yang hanya berarti mendukung IPv4. Ketika menyimpan "
"sebuah komentar yang dibuat dari alamat IPv6, alamat akan secara diam "
"dipotong di basisdata MySQL, dan memunculkan sebuah pengecualian di Oracle. "
"Anda akan butuh merubah jenis kolom di basisdata anda untuk mengambil "
"keuntungan dari perubahan ini."

msgid "For MySQL, execute this query on your project's database:"
msgstr "Untuk MySQL, jalankan permintaan ini di basisdata proyek anda:"

msgid "For Oracle, execute this query:"
msgstr "Untuk Oracle, jalankan permintaan ini:"

msgid ""
"If you do not apply this change, the behavior is unchanged: on MySQL, IPv6 "
"addresses are silently truncated; on Oracle, an exception is generated. No "
"database change is needed for SQLite or PostgreSQL databases."
msgstr ""
"Jika anda tidak memberlakukan perubahan ini, perilaku tidak berubah: di "
"MySQL, alamat IPv6 secara diam dipotong; di Oracle, sebuah pengecualian "
"dibangkitkan. Tidak ada perubahan basisdata dibutuhkan untuk basisdata "
"SQLite atau PostgreSQL."

msgid "Percent literals in ``cursor.execute`` queries"
msgstr "Harfiah persen di permintaan ``cursor.execute``"

msgid ""
"When you are running raw SQL queries through the :ref:`cursor.execute "
"<executing-custom-sql>` method, the rule about doubling percent literals "
"(``%``) inside the query has been unified. Past behavior depended on the "
"database backend. Now, across all backends, you only need to double literal "
"percent characters if you are also providing replacement parameters. For "
"example::"
msgstr ""
"Ketika anda sedang menjalankan permintaan SQL mentah melalui metode :ref:"
"`cursor.execute <executing-custom-sql>`, aturan mengenai hardiah persen "
"ganda (``%``) didalam permintaan telah kompak. Perilaku lama bergantung di "
"backend basisdata. Sekarang, lintas semua backend, anda hanya butuh "
"menggandakan karakter persen harfiah jika anda sedang juga menyediakan "
"parameter pengganti. Sebagai contoh::"

msgid "``SQLite`` users need to check and update such queries."
msgstr ""
"Pengguna ``SQLite`` butuh memeriksa dan memperbaharui permintaan tersebut."

msgid "Help text of model form fields for ManyToManyField fields"
msgstr "Teks bantuan dari bidang formulir model untuk bidang ManyToManyField"

msgid ""
"HTML rendering of model form fields corresponding to :class:`~django.db."
"models.ManyToManyField` model fields used to get the hard-coded sentence:"
msgstr ""
"Membangun HTML dari bidang formulir model sesuai pada bidang model :class:"
"`~django.db.models.ManyToManyField` digunakan untuk mendapatkan kalimat kode-"
"keras:"

msgid ""
"*Hold down \"Control\", or \"Command\" on a Mac, to select more than one.*"
msgstr ""
"*Tekan \"Control\", atau \"Command\" pada Mac, untuk memilih lebih dari satu."
"*"

msgid ""
"(or its translation to the active locale) imposed as the help legend shown "
"along them if neither :attr:`model <django.db.models.Field.help_text>` nor :"
"attr:`form <django.forms.Field.help_text>` ``help_text`` attributes were "
"specified by the user (or this string was appended to any ``help_text`` that "
"was provided)."
msgstr ""
"(atau terjemahannya pada lokal aktif) dikenakan sebagai bantuan lagenda "
"ditampilkan bersama mereka jika tak ada :attr:`model <django.db.models.Field."
"help_text>` maupun :attr:`form <django.forms.Field.help_text>` atribut "
"``help_text`` telah ditentukan oleh pengguna (atau string ini telah "
"ditambahkan ke setiap ``help_text`` yang telah disediakan)."

msgid ""
"Since this happened at the model layer, there was no way to prevent the text "
"from appearing in cases where it wasn't applicable such as form fields that "
"implement user interactions that don't involve a keyboard and/or a mouse."
msgstr ""
"Sejak ini terjadi di lapisan model, tidak ada cara mencegah teks dari muncul "
"di kasus-kasus domana itu tidak berlaku seperti bidang formulir yang "
"menerapkan interaksi pengguna yang anda tidak melibatkan papan kunci dan/"
"atau sebuah tetikus."

msgid ""
"Starting with Django 1.6, as an ad-hoc temporary backward-compatibility "
"provision, the logic to add the \"Hold down...\" sentence has been moved to "
"the model form field layer and modified to add the text only when the "
"associated widget is :class:`~django.forms.SelectMultiple` or selected "
"subclasses."
msgstr ""
"Dimulai dengan Django 1.6, sebagai sebuah ketentuan kesesuaian-kebelakang "
"sementara ad-hoc, logika untuk menambahkan kalimat \"Hold down...\" telah "
"dipindahkan ke lapisan bidang formulir model dan dirubah untuk menambahkan "
"hanya teks ketika widget terkait adalah :class:`~django.forms."
"SelectMultiple` atau subkelas terpilih."

msgid ""
"The change can affect you in a backward incompatible way if you employ "
"custom model form fields and/or widgets for ``ManyToManyField`` model fields "
"whose UIs do rely on the automatic provision of the mentioned hard-coded "
"sentence. These form field implementations need to adapt to the new scenario "
"by providing their own handling of the ``help_text`` attribute."
msgstr ""
"Perubahan ini dapat mempengaruhi anda di cara ketidaksesuaian kebelakang "
"jika anda menggunakan bidang formulir model penyesuaian dan/atau widget "
"untuk bidang model ``ManyToManyField`` yang UI nya bergantung pada ketentuan "
"otomatis dari kalimat kode-kerasyang disebutkan. Penerapan bidang formulir "
"ini butuh menyesuaikan ke skenario baru dengan menyediakan penanganan milik "
"mereka dari atribut ``help_text``."

msgid ""
"Applications that use Django :doc:`model form </topics/forms/modelforms>` "
"facilities together with Django built-in form :doc:`fields </ref/forms/"
"fields>` and :doc:`widgets </ref/forms/widgets>` aren't affected but need to "
"be aware of what's described in :ref:`m2m-help_text-deprecation` below."
msgstr ""
"Apliaksi yang menggunakan fasilitas :doc:`model form </topics/forms/"
"modelforms>` Django bersama-sama dengan formulir siap-pakai Django :doc:"
"`fields </ref/forms/fields>` dan  :doc:`widgets </ref/forms/widgets>` tidak "
"terpengaruh tetapi butuh disadari dari apa digambarkan dalam :ref:`m2m-"
"help_text-deprecation` dibawah."

msgid "QuerySet iteration"
msgstr "Perulangan QuerySet"

msgid ""
"The ``QuerySet`` iteration was changed to immediately convert all fetched "
"rows to ``Model`` objects. In Django 1.5 and earlier the fetched rows were "
"converted to ``Model`` objects in chunks of 100."
msgstr ""
"Perulangan ``QuerySet`` telah berubah untuk segera merubah semua baris yang "
"diambil pada obyek ``Model``. Di Django 1.5 dan lebih awal untuk mengambil "
"baris telah dirubah ke obyek ``Model`` dalam 100 potongan."

msgid ""
"Existing code will work, but the amount of rows converted to objects might "
"change in certain use cases. Such usages include partially looping over a "
"queryset or any usage which ends up doing ``__bool__`` or ``__contains__``."
msgstr ""
"Kode yang ada akan bekerja, tetapi sejumlah baris dirubah ke obyek mungkin "
"berubah dalam kasus penggunaan tertentu. Penggunaan seperti itu termasuk "
"sebagian berulang terhadap sebuah queryset atau penggunaan apapun yang "
"mengakhiri melakukan ``__bool__`` atau ``__contains__``."

msgid ""
"Notably most database backends did fetch all the rows in one go already in "
"1.5."
msgstr ""
"Terutama kebanyakan backend basisdata melakukan pengambilan semua baris "
"dalam satu pergi sudah di 1.5."

msgid ""
"It is still possible to convert the fetched rows to ``Model`` objects lazily "
"by using the :meth:`~django.db.models.query.QuerySet.iterator()` method."
msgstr ""
"Itu masih memungkinkan merubah barisan diambil pada obyek ``Model`` lazily "
"dengan menggunakan metode :meth:`~django.db.models.query.QuerySet."
"iterator()`."

msgid ""
":meth:`BoundField.label_tag<django.forms.BoundField.label_tag>` now includes "
"the form's :attr:`~django.forms.Form.label_suffix`"
msgstr ""
":meth:`BoundField.label_tag<django.forms.BoundField.label_tag>` sekarang "
"menyertakan :attr:`~django.forms.Form.label_suffix` formulir"

msgid ""
"This is consistent with how methods like :meth:`Form.as_p<django.forms.Form."
"as_p>` and :meth:`Form.as_ul<django.forms.Form.as_ul>` render labels."
msgstr ""
"Ini adalah konsisten dengan bagaimana metode seperti :meth:`Form.as_p<django."
"forms.Form.as_p>` dan :meth:`Form.as_ul<django.forms.Form.as_ul>` membangun "
"label."

msgid "If you manually render ``label_tag`` in your templates:"
msgstr "Jika anda secara manual membangun ``label_tag`` dalam cetakan anda:"

msgid ""
"you'll want to remove the colon (or whatever other separator you may be "
"using) to avoid duplicating it when upgrading to Django 1.6. The following "
"template in Django 1.6 will render identically to the above template in "
"Django 1.5, except that the colon will appear inside the ``<label>`` element."
msgstr ""
"anda akan ingin memindahkan titik dua (atau apapun pemisah lainnya anda "
"mungkin gunakan) untuk menghindari penggandaan itu ketika meningkatkan ke "
"Django 1.6. Cetakan berikut di Django 1.6 akan membangun secara mirip ke "
"cetakan diatas di Django 1.5, kecuali bahwa titik koma akan muncul didalam "
"unsur ``<label>``."

msgid "will render something like:"
msgstr "akan membangun sesuatu seperti:"

msgid ""
"If you want to keep the current behavior of rendering ``label_tag`` without "
"the ``label_suffix``, instantiate the form ``label_suffix=''``. You can also "
"customize the ``label_suffix`` on a per-field basis using the new "
"``label_suffix`` parameter on :meth:`~django.forms.BoundField.label_tag`."
msgstr ""
"Jika anda ingin menjaga perilaku saat ini dari membangun ``label_tag`` tanpa "
"``label_suffix``, instatiate formulir ``label_suffix=''``. Anda dapat juga "
"menyesuaikan ``label_suffix`` di berdasarkan per-bidang menggunakan "
"parameter ``label_suffix`` baru di :meth:`~django.forms.BoundField."
"label_tag`."

msgid "Admin views ``_changelist_filters`` GET parameter"
msgstr "Tampilan admin parameter GET ``_changelist_filters``"

msgid ""
"To achieve preserving and restoring list view filters, admin views now pass "
"around the ``_changelist_filters`` GET parameter. It's important that you "
"account for that change if you have custom admin templates or if your tests "
"rely on the previous URLs. If you want to revert to the original behavior "
"you can set the :attr:`~django.contrib.admin.ModelAdmin.preserve_filters` "
"attribute to ``False``."
msgstr ""

msgid ""
"``django.contrib.auth`` password reset uses base 64 encoding of ``User`` PK"
msgstr ""
"Penyetelan kembali sandi ``django.contrib.auth`` menggunakan pengkodean "
"berbasis 64 dari PK ``User``"

msgid ""
"Past versions of Django used base 36 encoding of the ``User`` primary key in "
"the password reset views and URLs (``django.contrib.auth.views."
"password_reset_confirm()``). Base 36 encoding is sufficient if the user "
"primary key is an integer, however, with the introduction of custom user "
"models in Django 1.5, that assumption may no longer be true."
msgstr ""

msgid ""
"``django.contrib.auth.views.password_reset_confirm()`` has been modified to "
"take a ``uidb64`` parameter instead of ``uidb36``. If you are reversing this "
"view, for example in a custom ``password_reset_email.html`` template, be "
"sure to update your code."
msgstr ""

msgid ""
"A temporary shim for ``django.contrib.auth.views.password_reset_confirm()`` "
"that will allow password reset links generated prior to Django 1.6 to "
"continue to work has been added to provide backwards compatibility; this "
"will be removed in Django 1.7. Thus, as long as your site has been running "
"Django 1.6 for more than ``PASSWORD_RESET_TIMEOUT_DAYS``, this change will "
"have no effect. If not (for example, if you upgrade directly from Django 1.5 "
"to Django 1.7), then any password reset links generated before you upgrade "
"to Django 1.7 or later won't work after the upgrade."
msgstr ""

msgid ""
"In addition, if you have any custom password reset URLs, you will need to "
"update them by replacing ``uidb36`` with ``uidb64`` and the dash that "
"follows that pattern with a slash. Also add ``_\\-`` to the list of "
"characters that may match the ``uidb64`` pattern."
msgstr ""
"Sebagai tambahan, jika anda mempunyai apapun penyesuaian URL setel kembali "
"sandi, anda akan butuh memperbaharui mereka dengan mengganti ``uidb36`` "
"dengan ``uidb64`` dan tanda garis yang mengikuti pola dengan sebuah garis "
"miring. Juga tambah ``_\\-`` ke daftar dari karakter yang mungkin cocok "
"dengan pola ``uidb64``."

msgid "For example::"
msgstr "Sebagai contoh::"

msgid ""
"You may also want to add the shim to support the old style reset links. "
"Using the example above, you would modify the existing url by replacing "
"``django.contrib.auth.views.password_reset_confirm`` with ``django.contrib."
"auth.views.password_reset_confirm_uidb36`` and also remove the ``name`` "
"argument so it doesn't conflict with the new url::"
msgstr ""
"Anda mungkin juga ingin menambahkan shim untuk mendukung gaya lama tautan "
"setel kembali. Menggunakan contoh diatas, anda akan merubah url yang ada "
"dengan mengganti ``django.contrib.auth.views.password_reset_confirm`` dengan "
"``django.contrib.auth.views.password_reset_confirm_uidb36`` dan juga "
"memindahkan argumen ``name`` jadi itu tidak bertentangan dengan url baru::"

msgid ""
"You can remove this URL pattern after your app has been deployed with Django "
"1.6 for ``PASSWORD_RESET_TIMEOUT_DAYS``."
msgstr ""

msgid "Default session serialization switched to JSON"
msgstr "Serialisasi sesi awalan diganti ke JSON"

msgid ""
"Historically, :mod:`django.contrib.sessions` used :mod:`pickle` to serialize "
"session data before storing it in the backend. If you're using the :ref:"
"`signed cookie session backend<cookie-session-backend>` and :setting:"
"`SECRET_KEY` is known by an attacker (there isn't an inherent vulnerability "
"in Django that would cause it to leak), the attacker could insert a string "
"into their session which, when unpickled, executes arbitrary code on the "
"server. The technique for doing so is simple and easily available on the "
"internet. Although the cookie session storage signs the cookie-stored data "
"to prevent tampering, a :setting:`SECRET_KEY` leak immediately escalates to "
"a remote code execution vulnerability."
msgstr ""

msgid ""
"This attack can be mitigated by serializing session data using JSON rather "
"than :mod:`pickle`. To facilitate this, Django 1.5.3 introduced a new "
"setting, :setting:`SESSION_SERIALIZER`, to customize the session "
"serialization format. For backwards compatibility, this setting defaulted to "
"using :mod:`pickle` in Django 1.5.3, but we've changed the default to JSON "
"in 1.6. If you upgrade and switch from pickle to JSON, sessions created "
"before the upgrade will be lost. While JSON serialization does not support "
"all Python objects like :mod:`pickle` does, we highly recommend using JSON-"
"serialized sessions. Be aware of the following when checking your code to "
"determine if JSON serialization will work for your application:"
msgstr ""
"Serangan ini dapat diredakan dengan menserialkan data sesi menggunakan JSON "
"daripada :mod:`pickle`. Untuk menfasilitasi ini, Django 1.5.3 memperkenalkan "
"pengaturan baru, :setting:`SESSION_SERIALIZER`, untuk menyesuaikan bentuk "
"serialisasi sesi. Untuk kesesuaian kebelakang, awalan pengaturan ini "
"menggunakan :mod:`pickle` di Django 1.5.3, tetapi kami telah merubah awalan "
"ke JSOn di 1.6. Jika anda meningkatkan dan mengganti dari pickle ke JSON, "
"sesi dibuat sebelum peningkatan akan hilang. Selagi serialisasi JSON tidak "
"mendukung semua obyek Python seperti :mod:`pickle` lakukan, kami sangat "
"menganjurkan menggunakan sesi serialisasi-JSON. Waspada dari berikut ketika "
"memeriksa kode anda untuk menentukan jika serialisasi JSON akan bekerja "
"untuk aplikasi anda:"

msgid ""
"JSON requires string keys, so you will likely run into problems if you are "
"using non-string keys in ``request.session``."
msgstr ""
"JSON membutuhkan kunci string, jadi anda kemungkinan akan berjalan kedalam "
"masalah jika anda sedang menggunakan kunci bukan-string di ``request."
"session``."

msgid ""
"Setting session expiration by passing ``datetime`` values to :meth:`~django."
"contrib.sessions.backends.base.SessionBase.set_expiry` will not work as "
"``datetime`` values are not serializable in JSON. You can use integer values "
"instead."
msgstr ""
"Setel kadaluarsa sesi dengan melewatkan nilai ``datetime`` ke :meth:`~django."
"contrib.sessions.backends.base.SessionBase.set_expiry` akan tidak bekerja "
"seperti nilai ``datetime`` adalah tidak dapat serialisasi di JSON. Anda "
"dapat menggunakan nilai integer sebagai gantinya."

msgid "See the :ref:`session_serialization` documentation for more details."
msgstr "Lihat dokumentasi :ref:`session_serialization` untuk lebih rinci."

msgid "Object Relational Mapper changes"
msgstr "Perubahan Object Relational Mapper"

msgid ""
"Django 1.6 contains many changes to the ORM. These changes fall mostly in "
"three categories:"
msgstr ""
"Django 1.6 mengandung banyak perubahan pada ORM. Perubahan ini dibagi "
"menjadi tiga kategori:"

msgid ""
"Bug fixes (e.g. proper join clauses for generic relations, query combining, "
"join promotion, and join trimming fixes)"
msgstr ""
"Perbaikan kesalahan (sebagai contoh klausa join benar untuk hubungan umum, "
"memadukan permintaan, kenaikan join, dan perbaikan memotong join)"

msgid ""
"Preparation for new features. For example the ORM is now internally ready "
"for multicolumn foreign keys."
msgstr ""
"Perssiapan untuk fitur baru. Sebagai contoh, ORM sekarang secara internal "
"siap untuk foreign key banyak kolom."

msgid "General cleanup."
msgstr "Pembersihan umum."

msgid ""
"These changes can result in some compatibility problems. For example, some "
"queries will now generate different table aliases. This can affect :meth:"
"`QuerySet.extra() <django.db.models.query.QuerySet.extra>`. In addition some "
"queries will now produce different results. An example is :meth:"
"`exclude(condition) <django.db.models.query.QuerySet.exclude>` where the "
"condition is a complex one (referencing multijoins inside :class:`Q objects "
"<django.db.models.Q>`). In many cases the affected queries didn't produce "
"correct results in Django 1.5 but do now. Unfortunately there are also cases "
"that produce different results, but neither Django 1.5 nor 1.6 produce "
"correct results."
msgstr ""
"Perubahan ini dapat menghasilkan di beberapa masalah kesesuaian. Sebagai "
"contoh, beberapa permintaan akan sekarang membangkitkan nama lain tabel "
"berbeda. Ini dapat mempengaruhi :meth:`QuerySet.extra() <django.db.models."
"query.QuerySet.extra>`. Sebagai tambahan beberapa permintaan akan sekarang "
"membuat hasil berbeda. Sebuah contoh adalah :meth:`exclude(condition) "
"<django.db.models.query.QuerySet.exclude>` dimana kondisi adalah satu rumit "
"(mengacu banyak penyertaan didalam :class:`Q objects <django.db.models.Q>`). "
"Dalam banyak kasus permintaan yang dipengaruhi tidak membuat hasil di Django "
"1.5 tetapi melakukan sekarang. Sayangnya ada juga kasus-kasus yang membuat "
"hasil berbeda, tetapi juga tidak Django 1.5 maupun 1.6 membuat hasil benar."

msgid "Finally, there have been many changes to the ORM internal APIs."
msgstr "Akhirnya, terdapat banyak perubahan pada API internal ORM."

msgid ""
"The ``django.db.models.query.EmptyQuerySet`` can't be instantiated any more "
"- it is only usable as a marker class for checking if :meth:`~django.db."
"models.query.QuerySet.none` has been called: ``isinstance(qs.none(), "
"EmptyQuerySet)``"
msgstr ""
"``django.db.models.query.EmptyQuerySet`` tidak dapat diinstiasikan lagi - "
"itu adalah hanya berguna sebagai penanda kelas untuk memeriksa jika :meth:"
"`~django.db.models.query.QuerySet.none` telah dipanggil: ``isinstance(qs."
"none(), EmptyQuerySet)``"

msgid ""
"If your CSS/JavaScript code used to access HTML input widgets by type, you "
"should review it as ``type='text'`` widgets might be now output as "
"``type='email'``, ``type='url'`` or ``type='number'`` depending on their "
"corresponding field type."
msgstr ""
"Jika kode CSS/JavaScript anda digunakan untuk mengakses widget masukan HTML "
"berdasarkan jenis, anda harus meninjau kembali itu seperti widget "
"``type='text'`` mungkin sekarang mengeluarkan seperti ``type='email'``, "
"``type='url'`` atau ``type='number'`` tergantung pada jenis bidang yang "
"sesuai mereka."

msgid ""
"Form field's :attr:`~django.forms.Field.error_messages` that contain a "
"placeholder should now always use a named placeholder (``\"Value '%(value)s' "
"is too big\"`` instead of ``\"Value '%s' is too big\"``). See the "
"corresponding field documentation for details about the names of the "
"placeholders. The changes in 1.6 particularly affect :class:`~django.forms."
"DecimalField` and :class:`~django.forms.ModelMultipleChoiceField`."
msgstr ""
":attr:`~django.forms.Field.error_messages` bidang formulir yang mengandung "
"placeholder harus sekarang selalu menggunakan bernama placeholder(``\"ilai "
"'%(value)' terlalu besar\"`` daripada ``\"Nilai '%s' terlalu besar\"``). "
"Lihat bidang sesuai untuk rincian tentang nama-nama dari placeholder. "
"Perubahan di 1.6 terutama mempengaruhi :class:`~django.forms.DecimalField` "
"dan :class:`~django.forms.ModelMultipleChoiceField`."

msgid ""
"Some :attr:`~django.forms.Field.error_messages` for :class:`~django.forms."
"IntegerField`, :class:`~django.forms.EmailField`, ``IPAddressField``, :class:"
"`~django.forms.GenericIPAddressField`, and :class:`~django.forms.SlugField` "
"have been suppressed because they duplicated error messages already provided "
"by validators tied to the fields."
msgstr ""
"Beberapa :attr:`~django.forms.Field.error_messages` untuk :class:`~django."
"forms.IntegerField`, :class:`~django.forms.EmailField`, ``IPAddressField``, :"
"class:`~django.forms.GenericIPAddressField`, dan :class:`~django.forms."
"SlugField` telah tertindih karena mereka menggandakan pesan kesalahan yang "
"sudah disediakan oleh pengecek diikat ke bidang."

msgid ""
"Due to a change in the form validation workflow, :class:`~django.forms."
"TypedChoiceField` ``coerce`` method should always return a value present in "
"the ``choices`` field attribute. That limitation should be lift again in "
"Django 1.7."
msgstr ""
"Karena sebuah perubahan di alur kerja pengesahan formulir, metode :class:"
"`~django.forms.TypedChoiceField` ``coerce`` harus selalu mengembalikan "
"sebuah nilai hadir di atribut bidang ``choices``. Batasan tersebut harus "
"diangkat kembali di Django 1.7."

msgid ""
"There have been changes in the way timeouts are handled in cache backends. "
"Explicitly passing in ``timeout=None`` no longer results in using the "
"default timeout. It will now set a non-expiring timeout. Passing 0 into the "
"memcache backend no longer uses the default timeout, and now will set-and-"
"expire-immediately the value."
msgstr ""
"Telah ada perubahan di cara waktu habis ditangani di backend cache. Secara "
"eksplisit melewatkan di ``timeout=None`` tidak lagi mengasilkan di "
"penggunaan awalan waktu habis. itu akan sekarang menyetel waktu habis bukan-"
"kadaluarsa. Melewatkan 0 kedalam backend memcached tidak lagi menggunakan "
"awalan waktu habis, dan sekarang akan menyetel-dan-berakhir-segera nilai."

msgid ""
"The ``django.contrib.flatpages`` app used to set custom HTTP headers for "
"debugging purposes. This functionality was not documented and made caching "
"ineffective so it has been removed, along with its generic implementation, "
"previously available in ``django.core.xheaders``."
msgstr ""
"Aplikasi ``django.contrib.flatpages`` digunakan untuk menyetel kepala HTTP "
"penyesuaian untuk tujuan mencari kesalahan. Kegunaan ini tidak "
"didokumentasikan dan membuat menyembunyikan tidak efektif jadi itu telah "
"dipindahkan, bersama dengan penerapan umumnya, sebelumnya tersedia di "
"``django.core.xheaders``."

msgid ""
"The ``XViewMiddleware`` has been moved from ``django.middleware.doc`` to "
"``django.contrib.admindocs.middleware`` because it is an implementation "
"detail of admindocs, proven not to be reusable in general."
msgstr ""
"``XViewMiddleware`` telah dipindahkan dari ``django.middleware.doc`` ke "
"``django.contrib.admindocs.middleware`` karena itu adalah sebuah penerapan "
"rincian dari admindoc, terbukti tidak menjadi digunakan kembali secara umum."

msgid ""
":class:`~django.db.models.GenericIPAddressField` will now only allow "
"``blank`` values if ``null`` values are also allowed. Creating a "
"``GenericIPAddressField`` where ``blank`` is allowed but ``null`` is not "
"will trigger a model validation error because ``blank`` values are always "
"stored as ``null``. Previously, storing a ``blank`` value in a field which "
"did not allow ``null`` would cause a database exception at runtime."
msgstr ""
":class:`~django.db.models.GenericIPAddressField` sekarang akan hanya "
"mengizinkan nilai ``blank`` jika nilai ``null`` juga diizinkan. Membuat "
"sebuah ``GenericIPAddressField`` dimana ``blank`` diizinkan tetapi ``null`` "
"tidak akan memicu sebuah kesalahan pengesahan model karena nilai ``blank`` "
"selalu disimpan sebagai ``null``. Sebelumnya, menyimpan nilai ``blank`` di "
"bidang yang tidak mengizinkan ``null`` akan menyebabkan pengecualian "
"basisdata pada waktu berjalan."

msgid ""
"If a ``NoReverseMatch`` exception is raised from a method when rendering a "
"template, it is not silenced. For example, ``{{ obj.view_href }}`` will "
"cause template rendering to fail if ``view_href()`` raises "
"``NoReverseMatch``. There is no change to the :ttag:`{% url %}<url>` tag, it "
"causes template rendering to fail like always when ``NoReverseMatch`` is "
"raised."
msgstr ""
"Jika sebuah pengecualian ``NoReverseMatch`` dimunculkan dari sebuah metode "
"ketika membangun sebuah cetakan, itu adalah tidak diam. Sebagai contoh, "
"``{{ obj.view_href }}`` akan menyebabkan cetakan membangun menjadi gagal "
"jika ``view_href()`` memunculkan ``NoReverseMatch``. Tidak ada perubahan "
"pada etiket :ttag:`{% url %}<url>`, itu menyebabkan membangun cetakan "
"menjadi gagal seperti selalu ketika ``NoReverseMatch`` dimunculkan. "

msgid ""
":meth:`django.test.Client.logout` now calls :meth:`django.contrib.auth."
"logout` which will send the :func:`~django.contrib.auth.signals."
"user_logged_out` signal."
msgstr ""
":meth:`django.test.Client.logout` sekarang memanggil :meth:`django.contrib."
"auth.logout` yang akan mengirim sinyal :func:`~django.contrib.auth.signals."
"user_logged_out`."

msgid ""
":ref:`Authentication views <built-in-auth-views>` are now reversed by name, "
"not their locations in ``django.contrib.auth.views``. If you are using the "
"views without a ``name``, you should update your ``urlpatterns`` to use "
"``django.conf.urls.url()`` with the ``name`` parameter. For example::"
msgstr ""

msgid ""
":class:`~django.views.generic.base.RedirectView` now has a ``pattern_name`` "
"attribute which allows it to choose the target by reversing the URL."
msgstr ""

msgid ""
"In Django 1.4 and 1.5, a blank string was unintentionally not considered to "
"be a valid password. This meant :meth:`~django.contrib.auth.models.User."
"set_password()` would save a blank password as an unusable password like :"
"meth:`~django.contrib.auth.models.User.set_unusable_password()` does, and "
"thus :meth:`~django.contrib.auth.models.User.check_password()` always "
"returned ``False`` for blank passwords. This has been corrected in this "
"release: blank passwords are now valid."
msgstr ""
"Di Django 1.4 dan 1.5, string kosong tidak sengaja dianggap sandi yang sah. "
"Ini berarti :meth:`~django.contrib.auth.models.User.set_password()` akan "
"menyimpan sandi kosong sebagai sandi tidak berguna seperti :meth:`~django."
"contrib.auth.models.User.set_unusable_password()` lakukan, dan dengan "
"demikian :meth:`~django.contrib.auth.models.User.check_password()` selalu "
"dikembalikan ``False`` untuk sandi kosong. Ini telah diperbaiki di terbitan "
"ini: sandi kosong adalah sekarang sah."

msgid ""
"The admin :attr:`~django.contrib.admin.ModelAdmin.changelist_view` "
"previously accepted a ``pop`` GET parameter to signify it was to be "
"displayed in a popup. This parameter has been renamed to ``_popup`` to be "
"consistent with the rest of the admin views. You should update your custom "
"templates if they use the previous parameter name."
msgstr ""
"Admin :attr:`~django.contrib.admin.ModelAdmin.changelist_view` sebelumnya "
"menerima sebuah parameter GET ``pop`` untuk menandakan itu telah ditampilkan "
"di popup. Parameter ini telah dinamai menjadi ``_popup`` untuk tetap "
"konsisten dengan sisa dari tampilan admin. Anda harus memperbaharui cetakan "
"penyesuaian anda jika mereka menggunakan nama parameter sebelumnya."

msgid ""
":meth:`~django.core.validators.validate_email` now accepts email addresses "
"with ``localhost`` as the domain."
msgstr ""
":meth:`~django.core.validators.validate_email` sekarang menerima alamat "
"surel dengan ``localhost`` sebagai ranah."

msgid ""
"The new :option:`makemessages --keep-pot` option prevents deleting the "
"temporary ``.pot`` file generated before creating the ``.po`` file."
msgstr ""

msgid ""
"The undocumented ``django.core.servers.basehttp.WSGIServerException`` has "
"been removed. Use ``socket.error`` provided by the standard library instead. "
"This change was also released in Django 1.5.5."
msgstr ""
"``django.core.servers.basehttp.WSGIServerException`` yang tidak "
"didokumentasikan telah dipindahkan. Gunakan ``socket.error`` disediakan oleh "
"pustaka standar sebagai gantinya. Perubahan ini juga diterbitkan di Django "
"1.5.5."

msgid ""
"The signature of :meth:`django.views.generic.base.RedirectView."
"get_redirect_url` has changed and now accepts positional arguments as well "
"(``*args, **kwargs``). Any unnamed captured group will now be passed to "
"``get_redirect_url()`` which may result in a ``TypeError`` if you don't "
"update the signature of your custom method."
msgstr ""
"Tanda tangan dari :meth:`django.views.generic.base.RedirectView."
"get_redirect_url` telah berubah dan sekarang menerima argumen penempatan "
"juga (``*args, **kwargs``). Apapun kelompok ditangkap tidak bernama akan "
"sekarang diloloskan ke ``get_redirect_url()`` yang mungkin menghasilkan "
"sebuah ``TypeError`` jika anda tidak memperbaharui tanda tangan dari metode "
"penyesuaian anda."

msgid "Features deprecated in 1.6"
msgstr "Fitur diusangkan di 1.6"

msgid "Transaction management APIs"
msgstr "Transaksi pengelolaan API"

msgid ""
"Transaction management was completely overhauled in Django 1.6, and the "
"current APIs are deprecated:"
msgstr ""
"Pengelolaan transaksi sepenuhnya dirombak di Django 1.6, dan API saat ini "
"diusangkan:"

msgid "``django.middleware.transaction.TransactionMiddleware``"
msgstr "``django.middleware.transaction.TransactionMiddleware``"

msgid "``django.db.transaction.autocommit``"
msgstr "``django.db.transaction.autocommit``"

msgid "``django.db.transaction.commit_on_success``"
msgstr "``django.db.transaction.commit_on_success``"

msgid "``django.db.transaction.commit_manually``"
msgstr "``django.db.transaction.commit_manually``"

msgid "the ``TRANSACTIONS_MANAGED`` setting"
msgstr "Pengaturan ``TRANSACTIONS_MANAGED``"

msgid "``django.contrib.comments``"
msgstr "``django.contrib.comments``"

msgid ""
"Django's comment framework has been deprecated and is no longer supported. "
"It will be available in Django 1.6 and 1.7, and removed in Django 1.8. Most "
"users will be better served with a custom solution, or a hosted product like "
"Disqus__."
msgstr ""
"Kerangka kerja komentar Django telah diusangkan dan tidak lagi didukung. Itu "
"akan tersedia di Django 1.6 dan 1.7, dan dipindahkan di Django 1.8. "
"Kebanyakan pengguna akan menjadi lebih baik dilayani dengan pemecahan "
"penyesuaian, atau produk disimpan seperti Disqus__."

msgid ""
"The code formerly known as ``django.contrib.comments`` is `still available "
"in an external repository`__."
msgstr ""
"Kode dahulu dikenal sebagai ``django.contrib.comments``  `still available in "
"an external repository`__."

msgid "Support for PostgreSQL versions older than 8.4"
msgstr "Mendukung untuk PostgreSQL versi lebih lama dari 8.4"

msgid ""
"The end of upstream support periods was reached in December 2011 for "
"PostgreSQL 8.2 and in February 2013 for 8.3. As a consequence, Django 1.6 "
"sets 8.4 as the minimum PostgreSQL version it officially supports."
msgstr ""
"Akhir dari masa dukungan hulu telah tercapai di Desember 2011 untuk "
"PostgreSQL 8.2 dan di February 2013 untuk 8.3.  Sebagai konsekuensinya, "
"Django 1.6 menyetel 8.4 sebagai versi minimal PostgreSQL itu secara resmi "
"dukung."

msgid ""
"You're strongly encouraged to use the most recent version of PostgreSQL "
"available, because of performance improvements and to take advantage of the "
"native streaming replication available in PostgreSQL 9.x."
msgstr ""
"Anda sangat didorong menggunakan versi paling terakhir dari PostgreSQL "
"tersedia, karena dari perbaikan peningkatan dan untuk mengambil keuntungan "
"dari replikasi aliran alamiah tersedia di PostgreSQL 9.x."

msgid "Changes to :ttag:`cycle` and :ttag:`firstof`"
msgstr "Perubahan ke :ttag:`cycle` dan :ttag:`firstof`"

msgid ""
"The template system generally escapes all variables to avoid XSS attacks. "
"However, due to an accident of history, the :ttag:`cycle` and :ttag:"
"`firstof` tags render their arguments as-is."
msgstr ""
"Sistem cetakan umumnya meloloskan semua variabel untuk menghindari serangan "
"XSS. Bagaimanaoun, karena sebuah kecelakaan sejarah, etiket :ttag:`cycle` "
"dan :ttag:`firstof` membangun argumen mereka dengan adanya."

msgid ""
"Django 1.6 starts a process to correct this inconsistency. The ``future`` "
"template library provides alternate implementations of :ttag:`cycle` and :"
"ttag:`firstof` that autoescape their inputs. If you're using these tags, "
"you're encouraged to include the following line at the top of your templates "
"to enable the new behavior:"
msgstr ""

msgid "or:"
msgstr "atau:"

msgid ""
"The tags implementing the old behavior have been deprecated, and in Django "
"1.8, the old behavior will be replaced with the new behavior. To ensure "
"compatibility with future versions of Django, existing templates should be "
"modified to use the ``future`` versions."
msgstr ""
"Etiket menerapkan perilaku lama telah diusangkan, dan di Django 1.8, "
"perilaku lama akan diganti dengan perilaku baru. Untuk memastikan kesesuaian "
"dengan versi masa depan dari Django, cetakan yang ada harus dirubah untuk "
"menggunakan versi ``future``."

msgid ""
"If necessary, you can temporarily disable auto-escaping with :func:`~django."
"utils.safestring.mark_safe` or :ttag:`{% autoescape off %} <autoescape>`."
msgstr ""
"Jika diperlukan, anda dapat sementara meniadakan pelolosan-otomatis dengan :"
"func:`~django.utils.safestring.mark_safe` atau :ttag:`{% autoescape off %} "
"<autoescape>`."

msgid "``CACHE_MIDDLEWARE_ANONYMOUS_ONLY`` setting"
msgstr "Pengaturan ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY``"

msgid ""
"``CacheMiddleware`` and ``UpdateCacheMiddleware`` used to provide a way to "
"cache requests only if they weren't made by a logged-in user. This mechanism "
"was largely ineffective because the middleware correctly takes into account "
"the ``Vary: Cookie`` HTTP header, and this header is being set on a variety "
"of occasions, such as:"
msgstr ""
"``CacheMiddleware`` dan ``UpdateCacheMiddleware`` digunakan untuk "
"menyediakan cara untuk menyimpan sementara permintaan hanya jika mereka "
"tidak dibuat oleh pengguna masuk. Mekanisme ini telah sebagian besar tidak "
"efektif karena middleware dengan benar mengambil kedalam akun kepala HTTP "
"``Vary: Cookie``, dan kepala ini sedang dikirim di berbagai kesempatan, "
"seperti:"

msgid "accessing the session, or"
msgstr "mengkases sesi, atau"

msgid "using CSRF protection, which is turned on by default, or"
msgstr "menggunakan perlindungan CSRF, yang menghidupkan secara awal, atau"

msgid ""
"using a client-side library which sets cookies, like `Google Analytics`__."
msgstr ""
"menggunakan pustaka sisi klien yang menyetel kue, seperti `Google "
"Analytics`__."

msgid ""
"This makes the cache effectively work on a per-session basis regardless of "
"the ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY`` setting."
msgstr ""
"Ini membuat tembolok secara efektif bekerja pada berdasarkan per-sesi tanpa "
"memperhatikan pengaturan ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY``."

msgid "``SEND_BROKEN_LINK_EMAILS`` setting"
msgstr "Pengaturan ``SEND_BROKEN_LINK_EMAILS``"

msgid ""
":class:`~django.middleware.common.CommonMiddleware` used to provide basic "
"reporting of broken links by email when ``SEND_BROKEN_LINK_EMAILS`` is set "
"to ``True``."
msgstr ""
":class:`~django.middleware.common.CommonMiddleware` digunakan untuk "
"menyediakan pelaporan dasar dari tautan rusak oleh surel ketika "
"``SEND_BROKEN_LINK_EMAILS`` disetel menjadi ``True``."

msgid ""
"Because of intractable ordering problems between :class:`~django.middleware."
"common.CommonMiddleware` and :class:`~django.middleware.locale."
"LocaleMiddleware`, this feature was split out into a new middleware: :class:"
"`~django.middleware.common.BrokenLinkEmailsMiddleware`."
msgstr ""
"Karena masalah pengurutan yang keras kepala diantara :class:`~django."
"middleware.common.CommonMiddleware` dan :class:`~django.middleware.locale."
"LocaleMiddleware`, fitur ini telah dipisah menjadi middleware: :class:"
"`~django.middleware.common.BrokenLinkEmailsMiddleware`."

msgid ""
"If you're relying on this feature, you should add ``'django.middleware."
"common.BrokenLinkEmailsMiddleware'`` to your ``MIDDLEWARE_CLASSES`` setting "
"and remove ``SEND_BROKEN_LINK_EMAILS`` from your settings."
msgstr ""
"Jika anda bergantung pada fitur ini, anda harus menambahkan ``'django."
"middleware.common.BrokenLinkEmailsMiddleware'`` ke pengaturan "
"``MIDDLEWARE_CLASSES`` anda dan memindahkan ``SEND_BROKEN_LINK_EMAILS`` dari "
"pengaturan anda."

msgid "``_has_changed`` method on widgets"
msgstr "Metode ``_has_changed`` di widgets"

msgid ""
"If you defined your own form widgets and defined the ``_has_changed`` method "
"on a widget, you should now define this method on the form field itself."
msgstr ""
"Jika anda menentukan widget formulir anda sendiri dan menentukan metode "
"``_has_changed`` pada sebuah widget anda harus sekarang menentukan metode "
"ini di bidang formulir itu sendiri."

msgid "``module_name`` model _meta attribute"
msgstr "Model ``module_name`` atribut _meta"

msgid ""
"``Model._meta.module_name`` was renamed to ``model_name``. Despite being a "
"private API, it will go through a regular deprecation path."
msgstr ""
"``Model._meta.module_name`` telah dinamai kembali ke ``model_name``. "
"Meskipun menjadi sebuah API pribadi, itu akan melalui jalur pengusangan "
"biasa."

msgid "``get_(add|change|delete)_permission`` model _meta methods"
msgstr "Model ``get_(add|change|delete)_permission`` _meta methods"

msgid ""
"``Model._meta.get_(add|change|delete)_permission`` methods were deprecated. "
"Even if they were not part of the public API they'll also go through a "
"regular deprecation path. You can replace them with ``django.contrib.auth."
"get_permission_codename('action', Model._meta)`` where ``'action'`` is "
"``'add'``, ``'change'``, or ``'delete'``."
msgstr ""
"Metode ``Model._meta.get_(add|change|delete)_permission`` telah diusangkan. "
"Bahkan jika mereka adalah bukan bagian dari API umum mereka akan juga pergi "
"melalui jalur pengusangan biasa. Anda dapat mengganti mereka dengan ``django."
"contrib.auth.get_permission_codename('action', Model._meta)`` dimana "
"``'action'`` adalah ``'add'``, ``'change'``, atau ``'delete'``."

msgid "``get_query_set`` and similar methods renamed to ``get_queryset``"
msgstr ""
"``get_query_set`` dan metode mirip dinamai kembali menjadi ``get_queryset``"

msgid ""
"Methods that return a ``QuerySet`` such as ``Manager.get_query_set`` or "
"``ModelAdmin.queryset`` have been renamed to ``get_queryset``."
msgstr ""
"Metode yang mengembalikan sebuah ``QuerySet`` seperti ``Manager."
"get_query_set`` atau ``ModelAdmin.queryset`` telah dinamai menjadi "
"``get_queryset``."

msgid ""
"If you are writing a library that implements, for example, a ``Manager."
"get_query_set`` method, and you need to support old Django versions, you "
"should rename the method and conditionally add an alias with the old name::"
msgstr ""
"Jika anda sedang menulis pustaka yang menerapkan, sebagai contoh, sebuah "
"metode ``Manager.get_query_set``, dan anda butuh mendukung versi Django "
"lama, anda harus menamai kembali cara dan kondisional tambah sebuah nama "
"lain dengan nama lama::"

msgid ""
"If you are writing a library that needs to call the ``get_queryset`` method "
"and must support old Django versions, you should write::"
msgstr ""
"Jika anda sedang menulis pustaka yang butuh memanggil metode "
"``get_queryset`` dan harus mendukung versi Django lama, anda harus menulis::"

msgid ""
"In the general case of a custom manager that both implements its own "
"``get_queryset`` method and calls that method, and needs to work with older "
"Django versions, and libraries that have not been updated yet, it is useful "
"to define a ``get_queryset_compat`` method as below and use it internally to "
"your manager::"
msgstr ""
"Di kasus umum dari penyesuaian pengelola yang kedua menerapkan metode "
"``get_queryset`` milik nya dan memanggil metode itu, dan butuh bekerja "
"dengan versi Django terlama, dan pustaka yang belum diperbaharui, itu adalah "
"berguna untuk menentukan sebuah metode ``get_queryset_compat`` seperti "
"dibawah dan menggunakannya secara internal ke pengelola anda::"

msgid ""
"This helps to minimize the changes that are needed, but also works correctly "
"in the case of subclasses (such as ``RelatedManagers`` from Django 1.5) "
"which might override either ``get_query_set`` or ``get_queryset``."
msgstr ""
"Ini membantu mengecilkan perubahan yang dibutuhkan, tetapi juga bekerja "
"dengan benar di kasus dari subkelas (seperti ``RelatedManagers`` dari Django "
"1.5) yang mungkin menimpa salah satu ``get_query_set`` atau ``get_queryset``."

msgid "``shortcut`` view and URLconf"
msgstr "tampilan ``jalan pintas`` dan URLconf"

msgid ""
"The ``shortcut`` view was moved from ``django.views.defaults`` to ``django."
"contrib.contenttypes.views`` shortly after the 1.0 release, but the old "
"location was never deprecated. This oversight was corrected in Django 1.6 "
"and you should now use the new location."
msgstr ""
"Tampilan ``jalan pintas`` dipindahkan dari ``django.views.defaults`` ke "
"``django.contrib.contenttypes.views`` segera setelah terbitan 1.0, tetapi "
"tempat lama tidak pernah diusangkan. Kekeliruan ini diperbaiki di Django 1.6 "
"dan anda seharusnya sekarang gunakan tempat baru."

msgid ""
"The URLconf ``django.conf.urls.shortcut`` was also deprecated. If you're "
"including it in an URLconf, simply replace::"
msgstr ""
"URLconf ``django.conf.urls.shortcut`` juga telah diusangkan. Jika anda "
"sedang menyertakan itu di sebuah URLconf, cukup ganti::"

msgid "with::"
msgstr "dengan::"

msgid "``ModelForm`` without ``fields`` or ``exclude``"
msgstr "``ModelForm`` tanpa ``fields`` atau ``exclude``"

msgid ""
"Previously, if you wanted a :class:`~django.forms.ModelForm` to use all "
"fields on the model, you could simply omit the ``Meta.fields`` attribute, "
"and all fields would be used."
msgstr ""
"Sebelumnya, jika anda ingin sebuah :class:`~django.forms.ModelForm` untuk "
"memakai semua bidang pada model, anda dapat cukup menghilangkan atribut "
"``Meta.fields``, dan semua bidang akan digunakan."

msgid ""
"This can lead to security problems where fields are added to the model and, "
"unintentionally, automatically become editable by end users. In some cases, "
"particular with boolean fields, it is possible for this problem to be "
"completely invisible. This is a form of `Mass assignment vulnerability "
"<https://en.wikipedia.org/wiki/Mass_assignment_vulnerability>`_."
msgstr ""
"Ini dapat membawa pada masalah keamanan dimana bidang ditambahkan ke model "
"dan, tidak sengaja, secara otomatis menjadi dapat disunting oleh pengguna "
"akhir. Di beberapa kasus, khususnya dengan bidang boolean, itu memungkinkan "
"untuk masalah ini secara lengkap nampak. Ini adalah sebuah formulir `Mass "
"assignment vulnerability <https://en.wikipedia.org/wiki/"
"Mass_assignment_vulnerability>`_."

msgid ""
"For this reason, this behavior is deprecated, and using the ``Meta.exclude`` "
"option is strongly discouraged. Instead, all fields that are intended for "
"inclusion in the form should be listed explicitly in the ``fields`` "
"attribute."
msgstr ""
"Untuk alasan ini, perilaku ini diusangkan, dan menggunakan pilihan ``Meta."
"exclude`` sangat kecil. Meskipun semua bidang yang dimaksud untuk penyertaan "
"di formulir harus didaftarkan secara eksplisit di atribut ``field``."

msgid ""
"If this security concern really does not apply in your case, there is a "
"shortcut to explicitly indicate that all fields should be used - use the "
"special value ``\"__all__\"`` for the fields attribute::"
msgstr ""
"Jika perhatian keamanan sangat tidak berlaku di kasus anda, ada sebuah jalan "
"pintas untuk secara eksplisit mengindikasikan bahwa semua bidang harus "
"digunakan - gunakan nilai khusus ``\"__all__\"` untuk atribut bidang::"

msgid ""
"If you have custom ``ModelForms`` that only need to be used in the admin, "
"there is another option. The admin has its own methods for defining fields "
"(``fieldsets`` etc.), and so adding a list of fields to the ``ModelForm`` is "
"redundant. Instead, simply omit the ``Meta`` inner class of the "
"``ModelForm``, or omit the ``Meta.model`` attribute. Since the "
"``ModelAdmin`` subclass knows which model it is for, it can add the "
"necessary attributes to derive a functioning ``ModelForm``. This behavior "
"also works for earlier Django versions."
msgstr ""
"Jika anda mempunyai penyesuaian ``ModelForms`` yang hanya butuh digunakan di "
"admin, ada pilihan lain. Admin mempunyai metode sendiri untuk menentukan "
"bidang (``fieldsets`` dll), dan juga menambahkan daftar dari bidang ke "
"``ModelForm`` adalah berlebihan. Sebagai gantinya, cukup hilangkan kelas "
"sebelah dalam ``Meta`` dari ``ModelForm``, atau hilangkan atribut ``Meta."
"model``. Sejak subkelas ``ModelAdmin`` mengetahui model mana ini untuk, itu "
"dapat menambahkan atribut yang dibutuhkan untuk memperoleh fungsi "
"``ModelForm``. Perilaku ini juga bekerja untuk versi Django lebih awal."

msgid "``UpdateView`` and ``CreateView`` without explicit fields"
msgstr "``UpdateView`` dan ``CreateView`` tanpa bidang eksplisit"

msgid ""
"The generic views :class:`~django.views.generic.edit.CreateView` and :class:"
"`~django.views.generic.edit.UpdateView`, and anything else derived from :"
"class:`~django.views.generic.edit.ModelFormMixin`, are vulnerable to the "
"security problem described in the section above, because they can "
"automatically create a ``ModelForm`` that uses all fields for a model."
msgstr ""
"Tampilan umum :class:`~django.views.generic.edit.CreateView` dan :class:"
"`~django.views.generic.edit.UpdateView`, dan apapun diperoleh dari :class:"
"`~django.views.generic.edit.ModelFormMixin`, adalah rentan pada masalah "
"keamanan digambarkan di bagian diatas, karena mereka dapat secara otomatis "
"membuat sebuah ``ModelForm`` yang menggunakan semua bidang untuk sebuah "
"model."

msgid ""
"For this reason, if you use these views for editing models, you must also "
"supply the ``fields`` attribute (new in Django 1.6), which is a list of "
"model fields and works in the same way as the :class:`~django.forms."
"ModelForm` ``Meta.fields`` attribute. Alternatively, you can set the "
"``form_class`` attribute to a ``ModelForm`` that explicitly defines the "
"fields to be used. Defining an ``UpdateView`` or ``CreateView`` subclass to "
"be used with a model but without an explicit list of fields is deprecated."
msgstr ""
"Untuk alasan ini, jika anda menggunakan tampilan ini untuk menyunting model, "
"adna harus juga memasok atribut ``field`` (baru di Django 1.6), yaitu sebuah "
"daftar bidang model dan bekerja di cara sama seperti atribut :class:`~django."
"forms.ModelForm` ``Meta.fields``. Cara lain, anda dapat menyetel atribut "
"``form_class`` ke ``ModelForm`` yang secara jelas menentukan bidang-bidang "
"akan digunakan. Menentukan sebuah subkelas ``UpdateView`` or ``CreateView`` "
"untuk digunakan dengan sebuah model tetapi tanpa sebuah daftar jelas dari "
"bidang-bidang adalah diusangkan."

msgid ""
"Munging of help text of model form fields for ``ManyToManyField`` fields"
msgstr ""
"Mung dari teks bantuan dari bidang formulir model untuk bidang-bidang "
"``ManyToManyField``"

msgid ""
"All special handling of the ``help_text`` attribute of ``ManyToManyField`` "
"model fields performed by standard model or model form fields as described "
"in :ref:`m2m-help_text` above is deprecated and will be removed in Django "
"1.8."
msgstr ""
"Semua penanganan khusus dari atribut ``help_text`` dari bidang model "
"``ManyToManyField`` dilakukan oleh model standar atau bidang formulir model "
"seperti digambarkan di :ref:`m2m-help_text` diatas adalah diusangkan dan "
"akan dipindahkan di Django 1.8."

msgid ""
"Help text of these fields will need to be handled either by applications, "
"custom form fields or widgets, just like happens with the rest of the model "
"field types."
msgstr ""
"Teks bantuan dari bidang-bidang ini akan butuh ditangani antara oleh "
"aplikasi, penyesuaian bidang formulir atau widget, cukup seperti terjadi "
"dengan sisa dari jenis bidang model."

msgid "Django 1.6.1 release notes"
msgstr "Catatan terbitan Django 1.6.1"

msgid "*December 12, 2013*"
msgstr "*Desember 12, 2013*"

msgid ""
"This is Django 1.6.1, a bugfix release for Django 1.6. In addition to the "
"bug fixes listed below, translations submitted since the 1.6 release are "
"also included."
msgstr ""
"Ini adalah Django 1.6.1, sebuah terbitan perbaikan kesalahan untuk Django "
"1.6. Sebagai tambahan pada perbaikan kesalahan terlampir dibawah, terjemahan "
"diajukan sejak terbitan 1.6 juga disertakan."

msgid "Bug fixes"
msgstr "Perbaikan kesalahan"

msgid ""
"Fixed ``BCryptSHA256PasswordHasher`` with ``py-bcrypt`` and Python 3 "
"(#21398)."
msgstr ""

msgid ""
"Fixed a regression that prevented a ``ForeignKey`` with a hidden reverse "
"manager (``related_name`` ending with '+') from being used as a lookup for "
"``prefetch_related`` (#21410)."
msgstr ""
"Diperbaiki sebuah pemulihan yang mencegah sebuah ``ForeignKey`` dengan "
"pengelola pembalikan tersembunyi (``related_name`` berakhiran dengan '+') "
"dari menjadi digunakan sebagai pencarian untuk ``prefetch_related`` (#21410)."

msgid ""
"Fixed :meth:`Queryset.datetimes<django.db.models.query.QuerySet.datetimes>` "
"raising ``AttributeError`` in some situations (#21432)."
msgstr ""
"Diperbaiki :meth:`Queryset.datetimes<django.db.models.query.QuerySet."
"datetimes>` memunculkan ``AttributeError`` di beberapa keadaan (#21432)."

msgid ""
"Fixed a regression that prevented editable ``GenericRelation`` subclasses "
"from working in ``ModelForms`` (#21428)."
msgstr ""
"Diperbaiki sebuah pemulihan yang mencegah dapat disunting "
"``GenericRelation`` subkelas dari bekerja di ``ModelForms`` (#21428)."

msgid ""
"Added missing ``to_python`` method for ``ModelMultipleChoiceField`` which is "
"required in Django 1.6 to properly detect changes from initial values "
"(#21568)."
msgstr ""
"Ditambahkan metode ``to_python`` hilang untuk ``ModelMultipleChoiceField`` "
"yang dibutuhkan di Django 1.6 untuk dengan benar mengetahui perubahan dari "
"nilai inisial (#21568)."

msgid ""
"Fixed ``django.contrib.humanize`` translations where the Unicode sequence "
"for the non-breaking space was returned verbatim (#21415)."
msgstr ""

msgid ""
"Fixed :djadmin:`loaddata` error when fixture file name contained any dots "
"not related to file extensions (#21457) or when fixture path was relative "
"but located in a subdirectory (#21551)."
msgstr ""
"Diperbaiki kesalahan :djadmin:`loaddata` ketika nama berkas bantu mengandung "
"titik apapun tidak terkait pada perpanjangan berkas (#21457) atau ketika "
"jalur alat bantu adalah relatif tetapi bertempat dalam subdirektori (#21551)."

msgid ""
"Fixed display of inline instances in formsets when parent has 0 for primary "
"key (#21472)."
msgstr ""
"Diperbaiki tampilan dari instance berderet dalam formset ketika induk "
"mempunyai 0 untuk primary key (#21472)."

msgid ""
"Fixed a regression where custom querysets for foreign keys were overwritten "
"if ``ModelAdmin`` had ordering set (#21405)."
msgstr ""
"Diperbaiki sebuah pemulihan dimana penyesuaian queryset untuk foreign key "
"sedang ditulis kembali jika ``ModelAdmin`` mempunyai kumpulan pengurutan "
"(#21405)."

msgid ""
"Removed mention of a feature in the ``--locale``/``-l`` option of the "
"``makemessages`` and ``compilemessages`` commands that never worked as "
"promised: Support of multiple locale names separated by commas. It's still "
"possible to specify multiple locales in one run by using the option multiple "
"times (#21488, #17181)."
msgstr ""
"Dipindahkan sebutan dari sebuah fitur di pilihan ``--locale``/``-l`` dari "
"perintah ``makemessages`` dan ``compilemessages`` yang tidak pernah bekerja "
"seperti dijanjikan: Dukungan dari nama lokal banyak dipisahkan oleh koma. "
"itu adalah masih memungkinkan untuk menentukan banyak lokal di satu jalan "
"dengan menggunakan pilihan banyak kali (#21488, #17181)."

msgid ""
"Fixed a regression that unnecessarily triggered settings configuration when "
"importing ``get_wsgi_application`` (#21486)."
msgstr ""
"DIperbaiki sebuah pemulihan yang tidak perlu memicu konfigurasi pengaturan "
"ketika mengimpor ``get_wsgi_application`` (#21486)."

msgid ""
"Fixed test client ``logout()`` method when using the cookie-based session "
"backend (#21448)."
msgstr ""
"Diperbaiki klien percobaan metode ``logout()`` ketika menggunakan backend "
"sesi berdasarkan-kue (#21448)."

msgid ""
"Fixed a crash when a ``GeometryField`` uses a non-geometric widget (#21496)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika ``GeometryField`` menggunakan widget "
"bukan-geometri (#21496)."

msgid "Fixed password hash upgrade when changing the iteration count (#21535)."
msgstr ""
"Diperbaiki peningkatan acakan sandi ketika merubah perhitungan putaran "
"(#21535)."

msgid ""
"Fixed a bug in the debug view when the URLconf only contains one element "
"(#21530)."
msgstr ""
"Diperbaiki sebuah kesalahan dalam tampilan mencari kesalahan ketika URLconf "
"hanya mengandung satu unsur (#21530)."

msgid ""
"Re-added missing search result count and reset link in changelist admin view "
"(#21510)."
msgstr ""
"Ditambahkan kembali perhitungan hasil pencarian dan setel kembali tautan di "
"tampilan admin daftar rubah (#21510)."

msgid ""
"The current language is no longer saved to the session by "
"``LocaleMiddleware`` on every response, but rather only after a logout "
"(#21473)."
msgstr ""
"Bahasa saat ini tidaklagi menyimpan ke sesi berdasarkan ``LocaleMiddleware`` "
"di setiap tanggapan, tetapi bukan hanya setelah keluar (#21473)."

msgid ""
"Fixed a crash when executing ``runserver`` on non-English systems and when "
"the formatted date in its output contained non-ASCII characters (#21358)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menjalankan ``runserver`` pada sistem "
"bukan-Inggris dan ketika tanggal dibentuk di keluarannya mengandung karakter "
"bukan-ASCII (#21358)."

msgid ""
"Fixed a crash in the debug view after an exception occurred on Python ≥ 3.3 "
"(#21443)."
msgstr ""
"Diperbaiki sebuah kegagalan di tampilan mencari kesalahan setelah sebuah "
"pengecualian muncul pada Python ≥ 3.3 (#21443)."

msgid ""
"Fixed a crash in :class:`~django.db.models.ImageField` on some platforms "
"(Homebrew and RHEL6 reported) (#21355)."
msgstr ""
"Diperbaiki sebuah kegagalan :class:`~django.db.models.ImageField` pada "
"beberapa serambi (Homebrew dan RHEL6 melaporkan) (#21355)."

msgid ""
"Fixed a regression when using generic relations in ``ModelAdmin."
"list_filter`` (#21431)."
msgstr ""
"Diperbaiki sebuah pemulihan ketika menggunakan hubungan umum di ``ModelAdmin."
"list_filter`` (#21431)."

msgid "Django 1.6.10 release notes"
msgstr "Catatan terbitan Django 1.6.10"

msgid "Django 1.6.10 fixes several security issues in 1.6.9."
msgstr "Django 1.6.10 memperbaiki beberapa masalah keamanan di 1.6.9."

msgid "Database denial-of-service with ``ModelMultipleChoiceField``"
msgstr "Denial-of-service basisdata dengan ``ModelMultipleChoiceField``"

msgid ""
"Given a form that uses ``ModelMultipleChoiceField`` and "
"``show_hidden_initial=True`` (not a documented API), it was possible for a "
"user to cause an unreasonable number of SQL queries by submitting duplicate "
"values for the field's data. The validation logic in "
"``ModelMultipleChoiceField`` now deduplicates submitted values to address "
"this issue."
msgstr ""
"Diberikan sebuah formulir yang menggunakan ``ModelMultipleChoiceField`` dan "
"``show_hidden_initial=True`` (bukan sebuah dokumentasi API), itu "
"memungkinkan untuk pengguna untuk menyebabkan angka tidak beralasan dari "
"permintaan SQL dengan mengajukan penggandaan nilai untuk data bidang. Logika "
"pengesahan di ``ModelMultipleChoiceField`` sekarang menghapus penggandaan "
"nilai diajukan ke alamat masalah ini."

msgid "Django 1.6.11 release notes"
msgstr "Catatan terbitan Django 1.6.11"

msgid "Django 1.6.11 fixes two security issues in 1.6.10."
msgstr "Django 1.6.11 memperbaiki dua masalah keamanan di 1.6.10."

msgid "Denial-of-service possibility with ``strip_tags()``"
msgstr "Kemungkinan denial-of-service dengan ``strip_tags()``"

msgid ""
"Last year :func:`~django.utils.html.strip_tags`  was changed to work "
"iteratively. The problem is that the size of the input it's processing can "
"increase on each iteration which results in an infinite loop in "
"``strip_tags()``. This issue only affects versions of Python that haven't "
"received :bpo:`a bugfix in HTMLParser <20288>`; namely Python < 2.7.7 and "
"3.3.5. Some operating system vendors have also backported the fix for the "
"Python bug into their packages of earlier versions."
msgstr ""

msgid ""
"To remedy this issue, ``strip_tags()`` will now return the original input if "
"it detects the length of the string it's processing increases. Remember that "
"absolutely NO guarantee is provided about the results of ``strip_tags()`` "
"being HTML safe. So NEVER mark safe the result of a ``strip_tags()`` call "
"without escaping it first, for example with :func:`~django.utils.html."
"escape`."
msgstr ""
"Untuk memperbaiki masalah ini, ``strip_tags()`` akan sekarang mengembalikan "
"masukan asli jika itu mengetahui panjang dari string itu sedang oleh "
"meningkat. Ingat bahwa mutlak TIDAK ada jaminan disediakan tentang hasil "
"dari ``strip_tags()`` menjadi aman HTML. jadi JANGAN PERNAH menandai aman "
"hasil dari panggilan ``strip_tags()`` tanpa meloloskan itu pertama, sebagai "
"contoh dengan :func:`~django.utils.html.escape`."

msgid "Django 1.6.2 release notes"
msgstr "Catatan terbitan Django 1.6.2"

msgid "*February 6, 2014*"
msgstr "*Februari 6, 2014*"

msgid ""
"This is Django 1.6.2, a bugfix release for Django 1.6. Django 1.6.2 fixes "
"several bugs in 1.6.1:"
msgstr ""
"Ini adalah Django 1.6.2, sebuah terbitan perbaikan kesalahan untuk Django "
"1.6. Django 1.6.2 memperbaiki beberapa kesalahan dalam 1.6.1:"

msgid ""
"Prevented the base geometry object of a prepared geometry to be garbage "
"collected, which could lead to crash Django (:ticket:`21662`)."
msgstr ""
"Dicegah obyek geometri dasar dari geometri yang disiapkan pada kumpulan "
"sampah, yang dapat membawa pada kegagalan Django (:ticket:`21662`)."

msgid ""
"Fixed a crash when executing the :djadmin:`changepassword` command when the "
"user object representation contained non-ASCII characters (:ticket:`21627`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menjalankan perintah :djadmin:"
"`changepassword` ketika perwakilan obyek user mengandung karakter bukan-"
"ASCII (:ticket:`21627`)."

msgid ""
"The :djadmin:`collectstatic` command will raise an error rather than default "
"to using the current working directory if :setting:`STATIC_ROOT` is not set. "
"Combined with the ``--clear`` option, the previous behavior could wipe "
"anything below the current working directory (:ticket:`21581`)."
msgstr ""
"Perintah :djadmin:`collectstatic` akan memunculkan sebuah kesalahan daripada "
"awalan untuk menggunakan direktori yang bekerja saat ini jika :setting:"
"`STATIC_ROOT` tidak disetel. Digabung dengan pilihan ``--clear``, perilaku "
"sebelumnya dapat menghapus apapun dibawah direktori sedang bekerja saat ini "
"(:ticket:`21581`)."

msgid "Fixed mail encoding on Python 3.3.3+ (:ticket:`21093`)."
msgstr "Diperbaiki penyandian surat pada Python 3.3.3+ (:tiket:`21093`)."

msgid ""
"Fixed an issue where when ``settings.DATABASES['default']['AUTOCOMMIT'] = "
"False``, the connection wasn't in autocommit mode but Django pretended it "
"was."
msgstr ""
"Diperbaiki sebuah masalah dimana ketika ``settings.DATABASES['default']"
"['AUTOCOMMIT'] = False``, hubungan tidak dalam suasana perbaikan otomatis "
"tetapi Django berpura-pura seperti itu."

msgid ""
"Fixed a regression in multiple-table inheritance ``exclude()`` queries (:"
"ticket:`21787`)."
msgstr ""
"Diperbaiki sebuah pemulihan di warisan banyak-tabel permintaan ``exclude()`` "
"(:ticket:`21787`)."

msgid ""
"Added missing items to ``django.utils.timezone.__all__`` (:ticket:`21880`)."
msgstr ""
"Menambahkan barang hilang ke ``django.utils.timezone.__all__`` (:tiket:"
"`21880`)."

msgid ""
"Fixed a field misalignment issue with ``select_related()`` and model "
"inheritance (:ticket:`21413`)."
msgstr ""
"Diperbaiki sebuah masalah bidang tidak sejajar dengan ``select_related()`` "
"dan model warisan (:ticket:`21413`)."

msgid "Fixed join promotion for negated ``AND`` conditions (:ticket:`21748`)."
msgstr ""
"Diperbaiki dorongan join untuk meniadakan kondisi ``AND`` (:ticket:`21748`)."

msgid ""
"Oracle database introspection now works with boolean and float fields (:"
"ticket:`19884`)."
msgstr ""
"Interospeksi basisdata Oracle sekarang bekerja dengan bidang boolean dan "
"float (:ticket:`19884`)."

msgid ""
"Fixed an issue where lazy objects weren't actually marked as safe when "
"passed through :func:`~django.utils.safestring.mark_safe` and could end up "
"being double-escaped (:ticket:`21882`)."
msgstr ""
"Diperbaiki sebuah masalah dimana obyek lazy tidak sebenarnya ditandai "
"sebagai aman ketika melewatkan melalui :func:`~django.utils.safestring."
"mark_safe` dan dapat berakhir menjadi pelolosan-ganda (:ticket:`21882`)."

msgid ""
"Additionally, Django's vendored version of six, ``django.utils.six`` has "
"been upgraded to the latest release (1.5.2)."
msgstr ""
"Tambahannya, versi penjaja Django dari enam, ``django.utils.six``, telah "
"ditingkatkan ke terbitan terakhir (1.5.2)."

msgid "Django 1.6.3 release notes"
msgstr "Catatan terbitan Django 1.6.3"

msgid ""
"Django 1.6.3 fixes several bugs in 1.6.2, including three security issues, "
"and makes one backwards-incompatible change:"
msgstr ""
"Django 1.6.3. memperbaiki beberapa kesalahan di 1.6.2, termasuk tiga masalah "
"keamanan, dan membuat satu perubahan ketidaksesuaian-kebelakang."

msgid "``select_for_update()`` requires a transaction"
msgstr "``select_for_update()`` membutuhkan sebuah transaksi"

msgid ""
"Historically, queries that use :meth:`~django.db.models.query.QuerySet."
"select_for_update()` could be executed in autocommit mode, outside of a "
"transaction. Before Django 1.6, Django's automatic transactions mode allowed "
"this to be used to lock records until the next write operation. Django 1.6 "
"introduced database-level autocommit; since then, execution in such a "
"context voids the effect of ``select_for_update()``. It is, therefore, "
"assumed now to be an error and raises an exception."
msgstr ""
"Secara riwayat, permintaan yang menggunakan :meth:`~django.db.models.query."
"QuerySet.select_for_update()` dapat dijalankan dalam suasana pembetulan "
"otomatis, diluar sebuah transaksi. Sebelum DJango 1.6, suasana transaksi "
"otomatis Django mengizinkan ini digunakan untuk mengunci rekaman sampai "
"tindakan menulis selanjutnya. Django 1.6 memperkenalkan pembetulan otomatis "
"tingkat-basisdata; sejak itu, pengerjaan seperti konteks membatalkan "
"pengaruh dari  ``select_for_update()``. Itu adalah, karena itu, menganggap "
"sekarang menjadi sebuah kesalahan dan memunculkan sebuah pengecualian."

msgid ""
"This change was made because such errors can be caused by including an app "
"which expects global transactions (e.g. :setting:`ATOMIC_REQUESTS <DATABASE-"
"ATOMIC_REQUESTS>` set to ``True``), or Django's old autocommit behavior, in "
"a project which runs without them; and further, such errors may manifest as "
"data-corruption bugs."
msgstr ""
"Perubahan ini telah dibuat karena kesalatan tersebut dapat disebabkan oleh "
"menyertakan sebuah aplikasi yang mengharapkan transaksi global (sebagai "
"contoh :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` disetel menjadi "
"``True``), perilaku pembetulan otomatis lama Django, di sebuah proyek yang "
"berjalan tanpa mereka; dan lebih lanjut, kesalahan tersebut dapat nyata "
"sebagai kesalahan kerusakan-data."

msgid ""
"This change may cause test failures if you use ``select_for_update()`` in a "
"test class which is a subclass of :class:`~django.test.TransactionTestCase` "
"rather than :class:`~django.test.TestCase`."
msgstr ""
"Perubahan ini mungkin menyebabkan kegagalan percobaan jika anda menggunakan "
"``select_for_update()`` di kelas percobaan yaitu subkelas dari :class:"
"`~django.test.TransactionTestCase` daripada :class:`~django.test.TestCase`."

msgid ""
"Content retrieved from the GeoIP library is now properly decoded from its "
"default ``iso-8859-1`` encoding (:ticket:`21996`)."
msgstr ""
"Isi diambil dari pustaka GeoIP sekarang dengan benar diterjemahkan dari "
"awalan penyandiannya ``iso-8859-1`` (:ticket:`21996`)."

msgid ""
"Fixed ``AttributeError`` when using :meth:`~django.db.models.query.QuerySet."
"bulk_create` with ``ForeignObject`` (:ticket:`21566`)."
msgstr ""
"Diperbaiki ``AttributeError``  ketika menggunakan :meth:`~django.db.models."
"query.QuerySet.bulk_create` dengan ``ForeignObject`` (:ticket:`21566`)."

msgid ""
"Fixed crash of ``QuerySet``\\s that use ``F() + timedelta()`` when their "
"query was compiled more once (:ticket:`21643`)."
msgstr ""
"Diperbaiki kegagalan dari ``QuerySet`` yang menggunakan ``F() + "
"timedelta()`` ketika permintaan mereka telah disusun lebih dari sekali (:"
"ticket:`21643`)."

msgid ""
"Prevented custom ``widget`` class attribute of :class:`~django.forms."
"IntegerField` subclasses from being overwritten by the code in their "
"``__init__`` method (:ticket:`22245`)."
msgstr ""
"Dicegah penyesuaian atribut kelas ``widget`` dari subkelas :class:`~django."
"forms.IntegerField` dari menjadi ditimpa dengan kode di metode ``__init__`` "
"mereka (:ticket:`22245`)."

msgid ""
"Improved :func:`~django.utils.html.strip_tags` accuracy (but it still cannot "
"guarantee an HTML-safe result, as stated in the documentation)."
msgstr ""
"Ditingkatkan keakuratan :func:`~django.utils.html.strip_tags` (tetapi itu "
"masih tidak dapat menjamin sebuah hasil aman-HTML, seperti dinyatakan di "
"dokumentasi)."

msgid ""
"Fixed a regression in the :mod:`django.contrib.gis` SQL compiler for non-"
"concrete fields (:ticket:`22250`)."
msgstr ""
"Diperbaiki sebuah pemulihan di :mod:`django.contrib.gis` penyusun SQL untuk "
"bidang bukan-nyata (:ticket:`22250`)."

msgid ""
"Fixed :attr:`ModelAdmin.preserve_filters <django.contrib.admin.ModelAdmin."
"preserve_filters>` when running a site with a URL prefix (:ticket:`21795`)."
msgstr ""
"Diperbaiki Fixed :attr:`ModelAdmin.preserve_filters <django.contrib.admin."
"ModelAdmin.preserve_filters>` ketika menjalankan situs dengan awalan URL (:"
"ticket:`21795`)."

msgid ""
"Fixed a crash in the ``find_command`` management utility when the ``PATH`` "
"environment variable wasn't set (:ticket:`22256`)."
msgstr ""
"Diperbaiki sebuah kegagalan di ``find_command`` pengelolaan kegunaan ketika "
"variabel lingkungan ``PATH`` tidak disetel (:ticket:`22256`)."

msgid "Fixed :djadmin:`changepassword` on Windows (:ticket:`22364`)."
msgstr "Diperbaiki :djadmin:`changepassword` pada Windows (:tiket:`22364`)."

msgid "Avoided shadowing deadlock exceptions on MySQL (:ticket:`22291`)."
msgstr "Dihindari pengintaian pengecualian buntu pada MySQL (:ticket:`22291`)."

msgid "Wrapped database exceptions in ``_set_autocommit`` (:ticket:`22321`)."
msgstr ""
"Membungkus pengecualian basisdata di ``_set_autocommit`` (:ticket:`22321`)."

msgid ""
"Fixed atomicity when closing a database connection or when the database "
"server disconnects (:ticket:`21239` and :ticket:`21202`)"
msgstr ""
"Diperbaiki atomic ketika menutup hubungan basisdata atau ketika peladen "
"basisdata terputus (:ticket:`21239` dan :ticket:`21202`)"

msgid ""
"Fixed regression in ``prefetch_related`` that caused the related objects "
"query to include an unnecessary join (:ticket:`21760`)."
msgstr ""
"Diperbaiki pemulihan di ``prefetch_related`` yang menyebabkan permintaan "
"obyek terkait untuk menyertakan sebuah join yang tidak diperlukan (:ticket:"
"`21760`)."

msgid ""
"Additionally, Django's vendored version of six, ``django.utils.six`` has "
"been upgraded to the latest release (1.6.1)."
msgstr ""
"Tambahannya, versi penjaja Django dari enam, ``django.utils.six``, telah "
"ditingkatkan ke terbitan terakhir (1.6.1)."

msgid "Django 1.6.4 release notes"
msgstr "Catatan terbitan Django 1.6.4"

msgid "Django 1.6.4 fixes several bugs in 1.6.3."
msgstr "Django 1.6.4 memperbaiki beberapa kesalahan di 1.6.3."

msgid ""
"Added backwards compatibility support for the :mod:`django.contrib.messages` "
"cookie format of Django 1.4 and earlier to facilitate upgrading to 1.6 from "
"1.4 (:ticket:`22426`)."
msgstr ""
"Ditambahkan dukungan kesesuaian kebelakang untuk bentuk kue :mod:`django."
"contrib.messages` dari Django 1.4 dan lebih awal untuk memfasilitasi "
"peningkatan pada 1.6 dari 1.4 (:ticket:`22426`)."

msgid ""
"Fixed the ``object_id`` of the ``LogEntry`` that's created after a user "
"password change in the admin (:ticket:`22515`)."
msgstr ""
"Diperbaiki ``object_id`` dari ``LogEntry`` yaitu dibuat setelah sandi "
"pengguna berubah di admin (:ticket:`22515`)."

msgid "Django 1.6.5 release notes"
msgstr "Catatan terbitan Django 1.6.5"

msgid "Django 1.6.5 fixes two security issues and several bugs in 1.6.4."
msgstr "Django 1.6.5 memperbaiki beberapa masalah keamanan di 1.6.4."

msgid ""
"Issue: Caches may incorrectly be allowed to store and serve private data"
msgstr ""
"Masalah: Tembolok mungkin secara tidak benar mengizinkan untuk menyimpan dan "
"melayani data pribadi"

msgid "Issue: Malformed redirect URLs from user input not correctly validated"
msgstr ""
"Masalah: URL pengalihan yang jelek dari masukan pengguna tidak benar disahkan"

msgid ""
"Made the ``year_lookup_bounds_for_datetime_field`` Oracle backend method "
"Python 3 compatible (:ticket:`22551`)."
msgstr ""
"Dibuat metode backend Oracle ``year_lookup_bounds_for_datetime_field`` "
"kesesuaian Python 3 (:ticket:`22551`)."

msgid ""
"Fixed ``pgettext_lazy`` crash when receiving bytestring content on Python 2 "
"(:ticket:`22565`)."
msgstr ""
"Diperbaiki kegagalan ``pgettext_lazy`` ketika menerima isi bytestring pada "
"Python 2 (:ticket:`22565`)."

msgid ""
"Fixed the SQL generated when filtering by a negated ``Q`` object that "
"contains a ``F`` object. (:ticket:`22429`)."
msgstr ""
"Diperbaiki SQL dibangkitkan ketika menyaring dengan meniadakan obyek ``Q`` "
"yang mengandung sebuah obyek ``F`` (:ticket:`22429`)."

msgid ""
"Avoided overwriting data fetched by ``select_related()`` in certain cases "
"which could cause minor performance regressions (:ticket:`22508`)."
msgstr ""
"Dihindari menimpa data diambil dari ``select_related()`` di beberapa kasus "
"yang dapat menyebabkan pemulihan penampilan kecil (:ticket:`22508`)."

msgid "Django 1.6.6 release notes"
msgstr "Catatan terbitan Django 1.6.6"

msgid "Django 1.6.6 fixes several security issues and bugs in 1.6.5."
msgstr "Django 1.6.6 memperbaiki beberapa masalah keamanan di 1.6.5."

msgid ""
"In older versions of Django it was possible to reveal any field's data by "
"modifying the \"popup\" and \"to_field\" parameters of the query string on "
"an admin change form page. For example, requesting a URL like ``/admin/auth/"
"user/?_popup=1&t=password`` and viewing the page's HTML allowed viewing the "
"password hash of each user. While the admin requires users to have "
"permissions to view the change form pages in the first place, this could "
"leak data if you rely on users having access to view only certain fields on "
"a model."
msgstr ""
"Di versi terlama dari Django dia memungkinkan untuk mengungkapkan tiap data "
"bidang dengan merubah parameter \"popup\" dan \"to_field\" dari permintaan "
"deretan karakter pada halaman formulir perubahan admin. Sebagai contoh, "
"meminta URL seperti ``/admin/auth/user/?pop=1&t=password`` dan melihat "
"halaman HTML diizinkan melihat acakan sandi dari tiap pengguna. Selagi admin "
"membutuhkan pengguna untuk memiliki perizinan untuk melihat halaman formulir "
"perubahan di tempat pertama, ini dapat menyebabkan data bocor jika anda "
"bergantung pada pengguna mempunyai akses untuk melihat hanya bidang tertentu "
"pada model."

msgid ""
"Corrected email and URL validation to reject a trailing dash (:ticket:"
"`22579`)."
msgstr ""
"Diperbaiki surel dan pengecekan URL untuk menolak tanda garis (:ticket:"
"`22579`)."

msgid "Prevented indexes on PostgreSQL virtual fields (:ticket:`22514`)."
msgstr "Dicegah indeks di bidang maya PostgreSQL (:ticket:`22514`)."

msgid ""
"Prevented edge case where values of FK fields could be initialized with a "
"wrong value when an inline model formset is created for a relationship "
"defined to point to a field other than the PK (:ticket:`13794`)."
msgstr ""
"Dicegah kasus tepi dimana nilai dari bidang FK dapat diinisialisasikan "
"dengan nilai salah ketika sebuah formset model berderet dibuat untuk "
"hubungan ditentukan ke titik ke bidang selain dari PK (:ticket:`13794`)."

msgid ""
"Restored ``pre_delete``  signals for ``GenericRelation`` cascade deletion (:"
"ticket:`22998`)."
msgstr ""
"Disimpan kembali sinyal ``pre_delete`` untuk penghapusan kebawah "
"``GenericRelation`` (:ticket:`22998`)."

msgid ""
"Fixed transaction handling when specifying non-default database in "
"``createcachetable`` and ``flush`` (:ticket:`23089`)."
msgstr ""
"Diperbaiki penanganan transaksi ketika menentukan basisdata bukan-awalan di "
"``createcachetable`` dan ``flush`` (:ticket:`23089`)."

msgid ""
"Fixed the \"ORA-01843: not a valid month\" errors when using Unicode with "
"older versions of Oracle server (:ticket:`20292`)."
msgstr ""
"Diperbaiki kesalahan \"ORA-01843: not a valid month\" ketika menggunakan "
"Unicode dengan versi terlama dari peladen Oracle (:ticket:`20292`)."

msgid ""
"Restored bug fix for sending Unicode email with Python 2.6.5 and below (:"
"ticket:`19107`)."
msgstr ""

msgid ""
"Prevented ``UnicodeDecodeError`` in ``runserver`` with non-UTF-8 and non-"
"English locale (:ticket:`23265`)."
msgstr ""
"Dicegah ``UnicodeDecodeError`` di ``runserver`` dengan bukan-UTF-8 dan loakl "
"bukan-Inggris (:ticket:`23265`)."

msgid ""
"Fixed JavaScript errors while editing multi-geometry objects in the "
"OpenLayers widget (:ticket:`23137`, :ticket:`23293`)."
msgstr ""
"Diperbaiki kesalahan JavaScript selagi menyunting obyek banyak-geometri di "
"widget OpenLayers (:ticket:`23137`, :ticket:`23293`)."

msgid ""
"Prevented a crash on Python 3 with query strings containing unencoded non-"
"ASCII characters (:ticket:`22996`)."
msgstr ""
"Dicegah sebuah kegagalan pada Python 3 dengan string permintaan mengandung "
"karakter bukan-ASCII tidak tersandi (:ticket:`22996`)."

msgid "Django 1.6.7 release notes"
msgstr "Catatan terbitan Django 1.6.7"

msgid ""
"Django 1.6.7 fixes several bugs in 1.6.6, including a regression related to "
"a security fix in that release."
msgstr ""
"Django 1.6.7 memperbaiki beberapa kesalahan di 1.6.6, termasuk pemulihan "
"terkait perbaikan keamanan di terbitan tersebut."

msgid ""
"Allowed inherited and m2m fields to be referenced in the admin (:ticket:"
"`23329`)."
msgstr ""
"Diizinkan bidang mewarisi dan m2m untuk diacukan di admin (:ticket:`23329`)"

msgid ""
"Fixed a crash when using ``QuerySet.defer()`` with ``select_related()`` (:"
"ticket:`23370`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menggunakan ``QuerySet.defer()`` dengan "
"``select_related()`` (:ticket:`23370`)."

msgid "Django 1.6.8 release notes"
msgstr "Catatan terbitan Django 1.6.8"

msgid "Django 1.6.8 fixes a couple regressions in the 1.6.6 security release."
msgstr ""
"Django 1.6.8 memperbaiki sepasang pemulihan di terbitan keamanan 1.6.6."

msgid "Django 1.6.9 release notes"
msgstr "Catatan terbitan Django 1.6.9"

msgid "Django 1.6.9 fixes a regression in the 1.6.6 security release."
msgstr "Django 1.6.9 memperbaiki pemulihan di terbitan keamanan 1.6.6."

msgid "Django 1.7 release notes"
msgstr "Catatan terbitan Django 1.7"

msgid "Welcome to Django 1.7!"
msgstr "Selamat datang ke Django 1.7!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.7>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.7>` "
"you'll want to be aware of when upgrading from Django 1.6 or older versions. "
"We've :ref:`begun the deprecation process for some features <deprecated-"
"features-1.7>`, and some features have reached the end of their deprecation "
"process and :ref:`have been removed <removed-features-1.7>`."
msgstr ""
"Catatan terbitan ini melingkupi :ref:`new features <whats-new-1.7>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.7>` anda ingin sadari dari ketika meningkatkan dari Django "
"1.6 atau versi terlama. Kami telah :ref:`begun the deprecation process for "
"some features <deprecated-features-1.7>`, dan beberapa fitur telah mencapai "
"akhir dari pengolahan pengusangan mereka dan :ref:`have been removed "
"<removed-features-1.7>`."

msgid ""
"Django 1.7 requires Python 2.7, 3.2, 3.3, or 3.4. We **highly recommend** "
"and only officially support the latest release of each series."
msgstr ""
"Django 1.7 membutuhkan Python 2.7, 3.2, 3.3 atau 3.4. Kami **sangat "
"menganjurkan** dan hanya secara resmi mendukung terbitan terakhir dari "
"setiap rangkaian."

msgid ""
"The Django 1.6 series is the last to support Python 2.6. Django 1.7 is the "
"first release to support Python 3.4."
msgstr ""
"Rangkaian Django 1.6 adalah dukungan terakhir Python 2.6 Django 1.7 adalah "
"terbitan pertama untuk mendukung Python 3.4."

msgid ""
"This change should affect only a small number of Django users, as most "
"operating-system vendors today are shipping Python 2.7 or newer as their "
"default version. If you're still using Python 2.6, however, you'll need to "
"stick to Django 1.6 until you can upgrade your Python version. Per :doc:`our "
"support policy </internals/release-process>`, Django 1.6 will continue to "
"receive security support until the release of Django 1.8."
msgstr ""
"Perubahan ini seharusnya berakibat hanya angka kecil dari pengguna Django, "
"seperti kebanyakan penjaja sistem operasi hari ini yang membekali Phyton 2.7 "
"atau terbaru sebagai versi awal mereka. Jika anda masih menggunakan Python "
"2.6, bagaimanapun, anda akan butuh melekat ke Django 1.6 sampai anda dapat "
"meningkatkan; per :doc:`kebijakan dukungan kami </internals/release-"
"process>`, Django 1.6 akan lanjut menerima dukungan keamanan sampai terbitan "
"dari Django 1.8."

msgid "What's new in Django 1.7"
msgstr "Apa yang baru di Django 1.7"

msgid "Schema migrations"
msgstr "Skema perpindahan"

msgid ""
"Django now has built-in support for schema migrations. It allows models to "
"be updated, changed, and deleted by creating migration files that represent "
"the model changes and which can be run on any development, staging or "
"production database."
msgstr ""
"Django sekarang mempunyai dukungan siap-pakai untuk skema perpindahan. Itu "
"mengizinkan untuk diperbaharui, dirubah, dan dihapus dengan membuat berkas-"
"berkas perpindahan yang mewakili model perubahan dan yang dapat berjalan "
"pada pengembangan, pementasan atau basisdata produk apapun."

msgid ""
"Migrations are covered in :doc:`their own documentation</topics/"
"migrations>`, but a few of the key features are:"
msgstr ""
"Perpindahan tercakup di :doc:`their own documentation</topics/migrations>`, "
"tetapi sedikit dari fitur kunci adalah: "

msgid ""
"``syncdb`` has been deprecated and replaced by ``migrate``. Don't worry - "
"calls to ``syncdb`` will still work as before."
msgstr ""
"``syncdb`` telah diusangkan dan diganti oleh ``migrate``. Jangan khawatir - "
"panggil ``syncdb`` akan masih dapat bekerja seperti sebelumnya."

msgid ""
"A new ``makemigrations`` command provides an easy way to autodetect changes "
"to your models and make migrations for them."
msgstr ""
"Sebuah perintah ``makemigrations`` menyediakan sebuah cara mudah untuk "
"menemukan otomatis perubahan ke model anda dan membuat perpindahan untuk "
"mereka"

msgid ""
"``django.db.models.signals.pre_syncdb`` and ``django.db.models.signals."
"post_syncdb`` have been deprecated, to be replaced by :data:`~django.db."
"models.signals.pre_migrate` and :data:`~django.db.models.signals."
"post_migrate` respectively. These new signals have slightly different "
"arguments. Check the documentation for details."
msgstr ""
"``django.db.models.signals.pre_syncdb`` dan ``django.db.models.signals."
"post_syncdb`` telah diusangkan, untuk diganti oleh :data:`~django.db.models."
"signals.pre_migrate` dan :data:`~django.db.models.signals.post_migrate` "
"masing-masing. Sinyal baru ini sedikit berbeda argumen. Periksa dokumentasi "
"untuk rincian. "

msgid ""
"The ``allow_syncdb`` method on database routers is now called "
"``allow_migrate``, but still performs the same function. Routers with "
"``allow_syncdb`` methods will still work, but that method name is deprecated "
"and you should change it as soon as possible (nothing more than renaming is "
"required)."
msgstr ""
"Metode ``allow_syncdb`` di perute basisdata sekarang dipanggil "
"``allow_migrate``, tetapi masih melakukan fungsi sama. Perute dengan metode "
"``allow_syncdb`` akan masih bekerja, tetapi nama metode itu diusangkan dan "
"anda harus merubah itu secepatnya (tidak ada yang lebih dari menamai kembali "
"adalah wajib)."

msgid ""
"``initial_data`` fixtures are no longer loaded for apps with migrations; if "
"you want to load initial data for an app, we suggest you create a migration "
"for your application and define a :class:`~django.db.migrations.operations."
"RunPython` or :class:`~django.db.migrations.operations.RunSQL` operation in "
"the ``operations`` section of the migration."
msgstr ""
"Alat bantu ``initial_data`` tidak lagi dimuat untuk aplikasi dengan "
"perpindahan; jika anda ingin memuat data inisial untuk sebuah aplikasi, kami "
"menyarankan anda membuat sebuah perpindahan untuk aplikasi anda dan "
"menentukan sebuah tindakan :class:`~django.db.migrations.operations."
"RunPython` atau :class:`~django.db.migrations.operations.RunSQL` di bagian "
"``operations`` dari perpindahan."

msgid ""
"Test rollback behavior is different for apps with migrations; in particular, "
"Django will no longer emulate rollbacks on non-transactional databases or "
"inside ``TransactionTestCase`` :ref:`unless specifically requested <test-"
"case-serialized-rollback>`."
msgstr ""
"Perilaku kembali percobaan adalah berbeda untuk aplikasi dengan perpindahan; "
"khususnya, Django akan tidak lagi meniru kembali di basisdata bukan-"
"transaksi atau didalam ``TransactionTestCase`` :ref:`unless specifically "
"requested <test-case-serialized-rollback>`."

msgid ""
"It is not advised to have apps without migrations depend on (have a :class:"
"`~django.db.models.ForeignKey` or :class:`~django.db.models.ManyToManyField` "
"to) apps with migrations."
msgstr ""
"Itu tidak disarankan untuk memiliki aplikasi tanpa perpindahan bergantung di "
"(mempunyai sebuah :class:`~django.db.models.ForeignKey` atau :class:`~django."
"db.models.ManyToManyField` pada) aplikasi dengan perpindahan."

msgid "App-loading refactor"
msgstr "Refaktor memuat-aplikasi"

msgid ""
"Historically, Django applications were tightly linked to models. A singleton "
"known as the \"app cache\" dealt with both installed applications and "
"models. The models module was used as an identifier for applications in many "
"APIs."
msgstr ""
"Secara riwayat, aplikasi Django terkait erat ke model. Sebuah singleton "
"dikenal sebagai \"app cache\" ditangani dengan kedia aplikasi terpasang dan "
"model. Modul model digunakan sebagai sebuah penciri untuk aplikasi di banyak "
"API."

msgid ""
"As the concept of :doc:`Django applications </ref/applications>` matured, "
"this code showed some shortcomings. It has been refactored into an \"app "
"registry\" where models modules no longer have a central role and where it's "
"possible to attach configuration data to applications."
msgstr ""
"Ketika konsep dari :doc:`Django applications </ref/applications>` jatuh "
"tempo, kode ini menunjukkan beberapa kekurangan. Itu telah di refaktor "
"kedalam sebuah \"app registry\" dimana modul model tidak lagi mempunyai "
"peran utama dan dimana itu memungkinkan melampirkan data konfigurasi ke "
"apliaksi."

msgid "Improvements thus far include:"
msgstr "Perbaikan sejauh ini termasuk:"

msgid ""
"Applications can run code at startup, before Django does anything else, with "
"the :meth:`~django.apps.AppConfig.ready` method of their configuration."
msgstr ""
"Aplikasi dapat menjalankan kode saat mulai, sebelum Django melakukan apapun "
"lain, dengan metode :meth:`~django.apps.AppConfig.ready` dari konfigurasi "
"mereka."

msgid ""
"Application labels are assigned correctly to models even when they're "
"defined outside of ``models.py``. You don't have to set :attr:`~django.db."
"models.Options.app_label` explicitly any more."
msgstr ""
"Label aplikasi diberikan secara benar pada model bahkan ketika mereka "
"ditentukan diluar dari ``models.py``. Anda tidak harus menyetel :attr:"
"`~django.db.models.Options.app_label` dengan jelas lagi."

msgid ""
"It is possible to omit ``models.py`` entirely if an application doesn't have "
"any models."
msgstr ""
"Itu memungkinkan menghilangkan ``models.py`` sepenuhnya jika sebuah aplikasi "
"tidak mempunyai model apapun."

msgid ""
"Applications can be relabeled with the :attr:`~django.apps.AppConfig.label` "
"attribute of application configurations, to work around label conflicts."
msgstr ""
"Aplikasi dapat di label ulang dengan atribut :attr:`~django.apps.AppConfig."
"label` dari konfigurais aplikasi, untuk memecahkan bentrokan label."

msgid ""
"The name of applications can be customized in the admin with the :attr:"
"`~django.apps.AppConfig.verbose_name` of application configurations."
msgstr ""
"Nama dari aplikasi dapat disesuaikan di admin dengan :attr:`~django.apps."
"AppConfig.verbose_name` dari konfigurasi aplikasi."

msgid ""
"The admin automatically calls :func:`~django.contrib.admin.autodiscover()` "
"when Django starts. You can consequently remove this line from your URLconf."
msgstr ""
"Admin secara otomatis memanggil :func:`~django.contrib.admin.autodiscover()` "
"ketika Django mulai. Anda dapat oleh karena itu memindahkan baris ini dari "
"URLconf anda."

msgid ""
"Django imports all application configurations and models as soon as it "
"starts, through a deterministic and straightforward process. This should "
"make it easier to diagnose import issues such as import loops."
msgstr ""
"Django impor semua konfigurasi aplikasi dan model segera setelah itu mulai, "
"melalui proses deterministik dan terus terang. Ini harus membuatnya lebih "
"mudah untuk menentukan masalah import seperti perulangan impor."

msgid "New method on Field subclasses"
msgstr "Metode baru di subkelas Field"

msgid ""
"To help power both schema migrations and to enable easier addition of "
"composite keys in future releases of Django, the :class:`~django.db.models."
"Field` API now has a new required method: ``deconstruct()``."
msgstr ""
"Untuk menggerakkan kedua skema perpindahan dan mengadakan penambahan lebih "
"mudah dari kunci gabungan di fitur terbitan dari Django, API :class:`~django."
"db.models.Field`  sekarang mempunyai metode wajib baru: ``deconstruct()``."

msgid "This method takes no arguments, and returns a tuple of four items:"
msgstr ""
"Metode ini tidak mengambil argumen, dan mengembalikan sebuah tuple dari "
"empat barang:"

msgid ""
"``name``: The field's attribute name on its parent model, or ``None`` if it "
"is not part of a model"
msgstr ""

msgid ""
"``path``: A dotted, Python path to the class of this field, including the "
"class name."
msgstr ""
"``path``: Sebuah bertitik, jalur Python pada kelas dari bidang ini, termasuk "
"nama kelas."

msgid "``args``: Positional arguments, as a list"
msgstr "``args``: Argumen penempatan, seperti sebuah daftar"

msgid "``kwargs``: Keyword arguments, as a dict"
msgstr "``kwargs``: Argumen kata kuncu, seperti sebuah kamus"

msgid ""
"These four values allow any field to be serialized into a file, as well as "
"allowing the field to be copied safely, both essential parts of these new "
"features."
msgstr ""
"Empat nilai ini mengizinkan bidang apapun untuk di serialisasi kedalam "
"sebuah berkas, sama halnya mengizinkan bidang untuk disalin secara aman, "
"kedua bagian penting dari fitur baru ini."

msgid ""
"This change should not affect you unless you write custom Field subclasses; "
"if you do, you may need to reimplement the ``deconstruct()`` method if your "
"subclass changes the method signature of ``__init__`` in any way. If your "
"field just inherits from a built-in Django field and doesn't override "
"``__init__``, no changes are necessary."
msgstr ""
"Perubahan ini tidak harus mempengaruhi anda meskipun anda menulis "
"penyesuaian subkelas Bidang; jika anda melakukan, anda mungkin butuh "
"menerapkan kembali metode ``deconstruct()`` jika subkelas anda merubah "
"metode tandatangan dari ``__init__`` di cara apapun. Jika bidang anda hanya "
"warisan dari bidang Django siap-pakai dan tidak menimpa ``__init__``, tidak "
"ada perubahan diperlukan."

msgid ""
"If you do need to override ``deconstruct()``, a good place to start is the "
"built-in Django fields (``django/db/models/fields/__init__.py``) as several "
"fields, including ``DecimalField`` and ``DateField``, override it and show "
"how to call the method on the superclass and simply add or remove extra "
"arguments."
msgstr ""
"Jika anda perlu melakukan untuk menimpa ``deconstruct()``, sebuah tempat "
"bagus untuk memulai adalah bidang Django siap-pakai (``django/db/models/"
"fields/__init__.py``) sebagai beberapa bidang, termasuk ``DecimalField`` dan "
"``DateField``, kesampingkan itu dan tunjukkan bagaimana memanggil metode "
"pada superkelas dan cukup tambah atau pindahkan argumen tambahan."

msgid ""
"This also means that all arguments to fields must themselves be "
"serializable; to see what we consider serializable, and to find out how to "
"make your own classes serializable, read the :ref:`migration serialization "
"documentation <migration-serializing>`."
msgstr ""
"Ini juga berarti bahwa semua argumen pada bidang harus mereka sendiri "
"diserialisasikan; untuk melihat apa kami anggap dapat serial, dan untuk "
"menemukan bagaimana membuat kelas anda sendiri dapat serial, baca :ref:"
"`migration serialization documentation <migration-serializing>`."

msgid "Calling custom ``QuerySet`` methods from the ``Manager``"
msgstr "Memanggil metode ``QuerySet`` penyesuaian dari ``Manager``"

msgid ""
"Historically, the recommended way to make reusable model queries was to "
"create methods on a custom ``Manager`` class. The problem with this approach "
"was that after the first method call, you'd get back a ``QuerySet`` instance "
"and couldn't call additional custom manager methods."
msgstr ""
"Secara riwayat, cara yang dianjurkan untuk membuat permintaan model yang "
"digunakan kembali adalah membuat metode di kelas ``Manager`` penyesuaian. "
"Masalah dengan pendekatan ini adalah setelah panggilan metode pertama, anda "
"akan mendapatkan kembali instance ``QuerySet`` dan tidak dapat memanggil "
"tambahan metode pengelola penyesuaian."

msgid ""
"Though not documented, it was common to work around this issue by creating a "
"custom ``QuerySet`` so that custom methods could be chained; but the "
"solution had a number of drawbacks:"
msgstr ""
"Meskipun tidak didokumentasikan, itu adalah umum untuk memecahkan masalah "
"ini dengan membuat penyesuaian ``QuerySet`` sehingga metode penyesuaian "
"dapat dirantai; tetapi pemecahan mempunyai sebuah angka dari pengembalian:"

msgid ""
"The custom ``QuerySet`` and its custom methods were lost after the first "
"call to ``values()`` or ``values_list()``."
msgstr ""
"Penyesuaian ``QuerySet``  dan metode penyesuainnya telah hilang setelah "
"panggilan pertama pada ``values()`` atau ``values_list()``."

msgid ""
"Writing a custom ``Manager`` was still necessary to return the custom "
"``QuerySet`` class and all methods that were desired on the ``Manager`` had "
"to be proxied to the ``QuerySet``. The whole process went against the DRY "
"principle."
msgstr ""
"Menulis sebuah penyesuaian ``Manager`` masih dibutuhkan untuk mengembalikan "
"kelas ``QuerySet`` penyesuaian dan semua metode yang diinginkan di "
"``Manager`` harus di proxykan ke ``QuerySet``. Pengolahan seluruhnya "
"bertentangan dengan prinsip DRY."

msgid ""
"The :meth:`QuerySet.as_manager() <django.db.models.query.QuerySet."
"as_manager>` class method can now directly :ref:`create Manager with "
"QuerySet methods <create-manager-with-queryset-methods>`::"
msgstr ""
"Metode kelas :meth:`QuerySet.as_manager() <django.db.models.query.QuerySet."
"as_manager>` sekarang secara langsung :ref:`create Manager with QuerySet "
"methods <create-manager-with-queryset-methods>`::"

msgid "Using a custom manager when traversing reverse relations"
msgstr "Menggunakan penyesuaian pengelola ketika melintasi hubungan balikan"

msgid ""
"It is now possible to :ref:`specify a custom manager <using-custom-reverse-"
"manager>` when traversing a reverse relationship::"
msgstr ""
"Itu sekarang memungkinkan untuk :ref:`specify a custom manager <using-custom-"
"reverse-manager>` ketika melewati lintas hubungan:: "

msgid "New system check framework"
msgstr "Kerangka sistem pemeriksaan baru"

msgid ""
"We've added a new :doc:`System check framework </ref/checks>` for detecting "
"common problems (like invalid models) and providing hints for resolving "
"those problems. The framework is extensible so you can add your own checks "
"for your own apps and libraries."
msgstr ""
"Kami telah menambahkan :doc:`System check framework </ref/checks>` baru "
"untuk mengenali masalah-masalah umum (seperti model tidak sah) dan "
"menyediakan petunjuk untuk menyelesaikan masalah-masalah tersebut. Kerangka "
"dapat diperpanjang jadi anda dapat menambah pemeriksaan anda sendiri untuk "
"aplikasi dan pustaka anda sendiri."

msgid ""
"To perform system checks, you use the :djadmin:`check` management command. "
"This command replaces the older ``validate`` management command."
msgstr ""
"Untuk melakukan pemeriksaan sistem, anda menggunakan perintah pengelolaan :"
"djadmin:`check`. Perintah ini menggantikan perintah pengelolaan ``validate`` "
"lama."

msgid "New ``Prefetch`` object for advanced ``prefetch_related`` operations."
msgstr ""
"Obyek ``Prefetch`` baru untuk tindakan ``prefetch_related`` lebih lanjut. "

msgid ""
"The new :class:`~django.db.models.Prefetch` object allows customizing "
"prefetch operations."
msgstr ""
"Obyek :class:`~django.db.models.Prefetch` baru mengizinkan penyesuaian "
"tindakan prefetch."

msgid ""
"You can specify the ``QuerySet`` used to traverse a given relation or "
"customize the storage location of prefetch results."
msgstr ""
"Anda dapat menentukan ``QuerySet`` digunakan untuk melintasi hubungan yang "
"diberikan atau menyesuaikan tempat penyimpanan dari hasil prefetch."

msgid ""
"This enables things like filtering prefetched relations, calling :meth:"
"`~django.db.models.query.QuerySet.select_related()` from a prefetched "
"relation, or prefetching the same relation multiple times with different "
"querysets. See :meth:`~django.db.models.query.QuerySet.prefetch_related()` "
"for more details."
msgstr ""
"Ini mengadakan hal-hal seperti menyaring hubungan pengambilan, memanggil :"
"meth:`~django.db.models.query.QuerySet.select_related()` dari hubungan "
"pengambilan, atau pengambilan hubungan sama banyak kali dengan queryset "
"berbeda. Lihat :meth:`~django.db.models.query.QuerySet.prefetch_related()` "
"untuk lebih rinci."

msgid "Admin shortcuts support time zones"
msgstr "Jalan pintas admin mendukung zona waktu"

msgid ""
"The \"today\" and \"now\" shortcuts next to date and time input widgets in "
"the admin are now operating in the :ref:`current time zone <default-current-"
"time-zone>`. Previously, they used the browser time zone, which could result "
"in saving the wrong value when it didn't match the current time zone on the "
"server."
msgstr ""
"Jalan pintas \"today\" dan \"now\" dekat dengan widget masukan tanggal dan "
"waktu di admin sekarang beroperasi di :ref:`current time zone <default-"
"current-time-zone>`. Sebelumnya, mereka menggunakan zona waktu peramban, "
"yang dapat menghasilkan dalam menyimpan nilai salah ketika itu tidak cocok "
"zona waktu saat ini di peladen. "

msgid ""
"In addition, the widgets now display a help message when the browser and "
"server time zone are different, to clarify how the value inserted in the "
"field will be interpreted."
msgstr ""
"Sebagai tambahan, widget sekarang menampilkan pesna bantuan ketika peramban "
"dan zona waktu peladen berbeda, untuk menjelaskan bagaimana nilai dimasukkan "
"di bidang akan ditafsirkan."

msgid "Using database cursors as context managers"
msgstr "Menggunakan kursor basisdata sebagai pengelola konteks"

msgid ""
"Prior to Python 2.7, database cursors could be used as a context manager. "
"The specific backend's cursor defined the behavior of the context manager. "
"The behavior of magic method lookups was changed with Python 2.7 and cursors "
"were no longer usable as context managers."
msgstr ""
"Sebelum Python 2.7, kursor basisdata dapat digunakan sebagai pengelola "
"konteks. Kursor backend khusus menentukan perilaku dari pengelola konteks. "
"Perilaku ini dari pencarian metode ajaib telah berubah dengan Python 2.7 dan "
"kursor tidak lagi digunakan sebagai pengelola konteks."

msgid ""
"Django 1.7 allows a cursor to be used as a context manager. That is, the "
"following can be used::"
msgstr ""
"Django 1.7 mengizinkan sebuah kursor digunakan sebagai pengelola konteks. "
"Yaitu, berikut dapat digunakan::"

msgid "instead of::"
msgstr "dari pada::"

msgid "Custom lookups"
msgstr "Penyesuaian Pencarian"

msgid ""
"It is now possible to write custom lookups and transforms for the ORM. "
"Custom lookups work just like Django's built-in lookups (e.g. ``lte``, "
"``icontains``) while transforms are a new concept."
msgstr ""
"Itu sekarang memungkinkan menulis pencarian penyesuaian dan merubah untuk "
"ORM. Pencarian penyesuaian bekerja seperti pencarian siap-pakai Django "
"(sebagai contoh ``lte``, ``icontains``) selagi perubahan adalah konsep baru."

msgid ""
"The :class:`django.db.models.Lookup` class provides a way to add lookup "
"operators for model fields. As an example it is possible to add ``day_lte`` "
"operator for ``DateFields``."
msgstr ""
"Kelas :class:`django.db.models.Lookup` menyediakan sebuah cara untuk "
"menambah penghubung pencarian untuk bidang model. Ketika sebuah contoh itu "
"memungkinkan untuk menambah penghubung ``day_lte`` untuk ``DateFields``."

msgid ""
"The :class:`django.db.models.Transform` class allows transformations of "
"database values prior to the final lookup. For example it is possible to "
"write a ``year`` transform that extracts year from the field's value. "
"Transforms allow for chaining. After the ``year`` transform has been added "
"to ``DateField`` it is possible to filter on the transformed value, for "
"example ``qs.filter(author__birthdate__year__lte=1981)``."
msgstr ""
"Kelas :class:`django.db.models.Transform` megnizinkan perubahan dari nilai "
"basisdata sebelum pencarian akhir. Sebagai contoh itu memungkinkan menulis "
"sebuah perubahan ``year`` yang mengeluarkan tahun dari nilai bidang. "
"Perubahan mengizinkan untuk mengikat. Setelah perubahan ``year`` telah "
"ditambahkan ke ``DateField`` itu memungkinkan untuk menyaring di nilai "
"berubah, sebagai contoh ``qs.filter(author__birthdate__year__lte=1981)``."

msgid ""
"For more information about both custom lookups and transforms refer to the :"
"doc:`custom lookups </howto/custom-lookups>` documentation."
msgstr ""
"Untuk informasi lebih mengenai kedua penyesuaian pencarian dan perubahan "
"mengacu ke dokumentasi :doc:`custom lookups </howto/custom-lookups>`."

msgid "Improvements to ``Form`` error handling"
msgstr "Perbaikan pada penanganan kesalahan ``Form``"

msgid "``Form.add_error()``"
msgstr "``Form.add_error()``"

msgid "Previously there were two main patterns for handling errors in forms:"
msgstr "Sebelumnya ada dua pola utama untuk menangani kesalahan di formulir:"

msgid ""
"Raising a :exc:`~django.core.exceptions.ValidationError` from within certain "
"functions (e.g. ``Field.clean()``, ``Form.clean_<fieldname>()``, or ``Form."
"clean()`` for non-field errors.)"
msgstr ""
"Memunculkan sebuah :exc:`~django.core.exceptions.ValidationError` dari dalam "
"fungsi tertentu (sebagai contoh `Field.clean()``, ``Form."
"clean_<fieldname>()``, atau ``Form.clean()`` untuk kesalahan-kesalahan bukan-"
"bidang.)"

msgid ""
"Fiddling with ``Form._errors`` when targeting a specific field in ``Form."
"clean()`` or adding errors from outside of a \"clean\" method (e.g. directly "
"from a view)."
msgstr ""
"Meremehkan dengan ``Form._errors`` ketika menyasar sebuah bidang khusus di "
"``Form.clean()`` atau menambahkan kesalahan diluar dari metode "
"\"clean\" (sebagai contoh langsung dari sebuah tampilan)."

msgid ""
"Using the former pattern was straightforward since the form can guess from "
"the context (i.e. which method raised the exception) where the errors belong "
"and automatically process them. This remains the canonical way of adding "
"errors when possible. However the latter was fiddly and error-prone, since "
"the burden of handling edge cases fell on the user."
msgstr ""
"Menggunakan pola sebelumnya adalah mudah sejak formulir dapat menebak dari "
"konteks (yaitu metode mana memunculkan pengecualian) dimana kesalahan milik "
"dan secara otomatis mengolah mereka. Ini tetap cara resmi dari menambah "
"kesalahan ketika memungkinkan. Bagaimanapun terakhir adalah tipuan dan "
"cenderung-kesalahan, sejak tanggungan dari penanganan sisi kasus jatuh di "
"pengguna."

msgid ""
"The new :meth:`~django.forms.Form.add_error()` method allows adding errors "
"to specific form fields from anywhere without having to worry about the "
"details such as creating instances of ``django.forms.utils.ErrorList`` or "
"dealing with ``Form.cleaned_data``. This new API replaces manipulating "
"``Form._errors`` which now becomes a private API."
msgstr ""
"Metode :meth:`~django.forms.Form.add_error()` baru mengizinkan menambahkan "
"kesalahan ke bidang formulir khusus dari manapun tanpa khawatir tentang "
"rincian seperti membuat instance dari ``django.forms.utils.ErrorList`` atau "
"berurusan dengan ``Form.cleaned_data``. API baru ini mengganti merubah "
"``Form._errors`` yang sekarang menjadi API pribadi."

msgid ""
"See :ref:`validating-fields-with-clean` for an example using ``Form."
"add_error()``."
msgstr ""
"Lihat :ref:`validating-fields-with-clean` untuk sebuah contoh menggunakan "
"``Form.add_error()``."

msgid "Error metadata"
msgstr "Kesalahan metadata"

msgid ""
"The :exc:`~django.core.exceptions.ValidationError` constructor accepts "
"metadata such as error ``code`` or ``params`` which are then available for "
"interpolating into the error message (see :ref:`raising-validation-error` "
"for more details); however, before Django 1.7 those metadata were discarded "
"as soon as the errors were added to :attr:`Form.errors <django.forms.Form."
"errors>`."
msgstr ""
"Pembangun :exc:`~django.core.exceptions.ValidationError` menerima metadata "
"seperti kesalahan ``code`` atau ``params`` yang kemudian tersedia untuk "
"menambahkan kedalam pesan kesalahan (lihat :ref:`raising-validation-error` "
"untuk lebih rinci); bagaimanapun, sebelum Django 1.7 metadata tersebut "
"dibuang segera setelah kesalahan ditambahkan ke :attr:`Form.errors <django."
"forms.Form.errors>`."

msgid ""
":attr:`Form.errors <django.forms.Form.errors>` and ``django.forms.utils."
"ErrorList`` now store the ``ValidationError`` instances so these metadata "
"can be retrieved at any time through the new :meth:`Form.errors.as_data "
"<django.forms.Form.errors.as_data()>` method."
msgstr ""
":attr:`Form.errors <django.forms.Form.errors>` dan ``django.forms.utils."
"ErrorList`` sekarang menyimpan instance ``ValidationError`` sehingga "
"metadata ini dapat diambil kapanpun melalui metode :meth:`Form.errors."
"as_data <django.forms.Form.errors.as_data()>` baru."

msgid ""
"The retrieved ``ValidationError`` instances can then be identified thanks to "
"their error ``code`` which enables things like rewriting the error's message "
"or writing custom logic in a view when a given error is present. It can also "
"be used to serialize the errors in a custom format such as XML."
msgstr ""
"Instance ``ValidationError`` yang diambil dapat kemudian dicirikan terima "
"kasih ke ``code`` kesalahan mereka yang mengadakan hal-hal seperti menulis "
"kembali pesan kesalahan atau menulis penyesuaian logika di sebuah tampilan "
"ketika kesalahan yang diberikan hadir. Itu dapat juga digunakan untuk "
"menserialkan kesalahan di penyesuaian bentuk seperti XML."

msgid ""
"The new :meth:`Form.errors.as_json() <django.forms.Form.errors.as_json()>` "
"method is a convenience method which returns error messages along with error "
"codes serialized as JSON. ``as_json()`` uses ``as_data()`` and gives an idea "
"of how the new system could be extended."
msgstr ""
"Metode :meth:`Form.errors.as_json() <django.forms.Form.errors.as_json()>` "
"baru adalah sebuah metode nyaman yang mengembalikan pesan kesalahan bersama "
"dengan kode kesalahan diserialkan sebagai JSON. ``as_json()`` menggunakan "
"``as_data()`` dan memberikan sebuah ide dari bagaimana sistem baru dapat "
"diperpanjang."

msgid "Error containers and backward compatibility"
msgstr "Wadah kesalahan dan kesesuaian kebelakang"

msgid ""
"Heavy changes to the various error containers were necessary in order to "
"support the features above, specifically :attr:`Form.errors <django.forms."
"Form.errors>`, ``django.forms.utils.ErrorList``, and the internal storages "
"of :exc:`~django.core.exceptions.ValidationError`. These containers which "
"used to store error strings now store ``ValidationError`` instances and "
"public APIs have been adapted to make this as transparent as possible, but "
"if you've been using private APIs, some of the changes are backwards "
"incompatible; see :ref:`validation-error-constructor-and-internal-storage` "
"for more details."
msgstr ""
"Perubahan berat pada beragam wadah kesalahan dibutuhkan untuk mendukung "
"fitur diatas, khususnya :attr:`Form.errors <django.forms.Form.errors>`, "
"``django.forms.utils.ErrorList``, dan pengimpanan internal dari :exc:"
"`~django.core.exceptions.ValidationError`. Wadah ini yang digunakan untuk "
"menyimpan string kesalahan sekarang menyimpan instance ``ValidationError`` "
"dan API umum telah disesuaikan untuk membuat ini sejernih mungkin, tetapi "
"jika anda telah menggunakan API pribadi, beberapa dari perubahan adalah "
"ketidaksesuaian kebelakang; lihat :ref:`validation-error-constructor-and-"
"internal-storage` untuk lebih rinci."

msgid ""
"You can now implement :attr:`~django.contrib.admin.AdminSite.site_header`, :"
"attr:`~django.contrib.admin.AdminSite.site_title`, and :attr:`~django."
"contrib.admin.AdminSite.index_title` attributes on a custom :class:`~django."
"contrib.admin.AdminSite` in order to easily change the admin site's page "
"title and header text. No more needing to override templates!"
msgstr ""
"Anda sekarang dapat menerapkan atribut :attr:`~django.contrib.admin."
"AdminSite.site_header`, :attr:`~django.contrib.admin.AdminSite.site_title`, "
"dan :attr:`~django.contrib.admin.AdminSite.index_title` pada :class:`~django."
"contrib.admin.AdminSite` penyesuaian agar dengan mudah merubah judul halaman "
"situs admin dan teks kepala. Tidak perlu lagi menimpa cetakan!"

msgid ""
"Buttons in :mod:`django.contrib.admin` now use the ``border-radius`` CSS "
"property for rounded corners rather than GIF background images."
msgstr ""
"Tombol di :mod:`django.contrib.admin` sekarang menggunakan sifat CSS "
"``border-radius`` untuk sudut melingkar daripada gambar latar belakang GIF."

msgid ""
"Some admin templates now have ``app-<app_name>`` and ``model-<model_name>`` "
"classes in their ``<body>`` tag to allow customizing the CSS per app or per "
"model."
msgstr ""
"Beberapa cetakan admin sekarang mempunyai kelas-kelas ``app-<app_name>`` dan "
"``model-<model_name>`` di etiket ``<body>`` mereka untuk mengizinkan "
"menyesuaikan CSS per aplikasi atau per model. "

msgid ""
"The admin changelist cells now have a ``field-<field_name>`` class in the "
"HTML to enable style customizations."
msgstr ""
"Sel-sel daftar rubah admin sekarang mempunyai sebuah kelas ``field-"
"<field_name>`` di THML untuk mengadakan gaya penyesuaian."

msgid ""
"The admin's search fields can now be customized per-request thanks to the "
"new :meth:`django.contrib.admin.ModelAdmin.get_search_fields` method."
msgstr ""
"Bidang pencarian admin sekarang dapat disesuaikan per-permintaan terima "
"kasih ke metode :meth:`django.contrib.admin.ModelAdmin.get_search_fields` "
"baru."

msgid ""
"The :meth:`ModelAdmin.get_fields() <django.contrib.admin.ModelAdmin."
"get_fields>` method may be overridden to customize the value of :attr:"
"`ModelAdmin.fields <django.contrib.admin.ModelAdmin.fields>`."
msgstr ""
"Metode :meth:`ModelAdmin.get_fields() <django.contrib.admin.ModelAdmin."
"get_fields>` mungkin dikesampingkan untuk menyesuaikan nilai dari :attr:"
"`ModelAdmin.fields <django.contrib.admin.ModelAdmin.fields>`."

msgid ""
"In addition to the existing ``admin.site.register`` syntax, you can use the "
"new :func:`~django.contrib.admin.register` decorator to register a :class:"
"`~django.contrib.admin.ModelAdmin`."
msgstr ""
"Sebagai tambahan pada sintaksis ``admin.site.register`` yang ada, anda dapat "
"menggunakan penghias :func:`~django.contrib.admin.register` baru untuk "
"mendaftar sebuah :class:`~django.contrib.admin.ModelAdmin`."

msgid ""
"You may specify :meth:`ModelAdmin.list_display_links <django.contrib.admin."
"ModelAdmin.list_display_links>` ``= None`` to disable links on the change "
"list page grid."
msgstr ""
"Anda dapat menentukan :meth:`ModelAdmin.list_display_links <django.contrib."
"admin.ModelAdmin.list_display_links>` ``= None`` untuk meniadakan tautan "
"pada jaring halaman daftar perubahan."

msgid ""
"You may now specify :attr:`ModelAdmin.view_on_site <django.contrib.admin."
"ModelAdmin.view_on_site>` to control whether or not to display the \"View on "
"site\" link."
msgstr ""
"Anda dapat sekarang menentukan :attr:`ModelAdmin.view_on_site <django."
"contrib.admin.ModelAdmin.view_on_site>` untuk mengendalikan apakah atau "
"tidak untuk menampilkan tautan \"Lihat pada situs\"."

msgid ""
"You can specify a descending ordering for a :attr:`ModelAdmin.list_display "
"<django.contrib.admin.ModelAdmin.list_display>` value by prefixing the "
"``admin_order_field`` value with a hyphen."
msgstr ""
"Anda dapat menentukan urutan menurun untuk nilai :attr:`ModelAdmin."
"list_display <django.contrib.admin.ModelAdmin.list_display>` dengan "
"mengawali nilai ``admin_order_field`` dengan tanda penghubung"

msgid ""
"The :meth:`ModelAdmin.get_changeform_initial_data() <django.contrib.admin."
"ModelAdmin.get_changeform_initial_data>` method may be overridden to define "
"custom behavior for setting initial change form data."
msgstr ""
"Metode :meth:`ModelAdmin.get_changeform_initial_data() <django.contrib.admin."
"ModelAdmin.get_changeform_initial_data>` mungkin dikesampingkan untuk "
"menentukan penyesuaian perilaku untuk mengatur perubahan awalan data "
"formulir."

msgid ""
"Any ``**kwargs`` passed to :meth:`~django.contrib.auth.models.User."
"email_user()` are passed to the underlying :meth:`~django.core.mail."
"send_mail()` call."
msgstr ""
"Setiap ``**kwargs`` dilewatkan pada :meth:`~django.contrib.auth.models.User."
"email_user()` dilewatkan ke panggilan :meth:`~django.core.mail.send_mail()` "
"pokok. "

msgid ""
"The :func:`~django.contrib.auth.decorators.permission_required` decorator "
"can take a list of permissions as well as a single permission."
msgstr ""
"Penghias :func:`~django.contrib.auth.decorators.permission_required` dapat "
"mengambil sebuah daftar dari perizinan sama halnya perizinan tunggal."

msgid ""
"You can override the new :meth:`AuthenticationForm.confirm_login_allowed() "
"<django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed>` method "
"to more easily customize the login policy."
msgstr ""
"Anda dapat menimpa metode :meth:`AuthenticationForm.confirm_login_allowed() "
"<django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed>` baru "
"untuk lebih mudah menyesuaikan kebijakan masuk."

msgid ""
"``django.contrib.auth.views.password_reset()`` takes an optional "
"``html_email_template_name`` parameter used to send a multipart HTML email "
"for password resets."
msgstr ""

msgid ""
"The :meth:`AbstractBaseUser.get_session_auth_hash() <django.contrib.auth."
"models.AbstractBaseUser.get_session_auth_hash>` method was added and if "
"your :setting:`AUTH_USER_MODEL` inherits from :class:`~django.contrib.auth."
"models.AbstractBaseUser`, changing a user's password now invalidates old "
"sessions if the ``django.contrib.auth.middleware."
"SessionAuthenticationMiddleware`` is enabled. See :ref:`session-invalidation-"
"on-password-change` for more details."
msgstr ""
"Metode :meth:`AbstractBaseUser.get_session_auth_hash() <django.contrib.auth."
"models.AbstractBaseUser.get_session_auth_hash>` telah ditambahkan dan jika "
"warisan :setting:`AUTH_USER_MODEL` anda dari :class:`~django.contrib.auth."
"models.AbstractBaseUser`, merubah sandi pengguna sekarang membatalkan sesi "
"lama jika ``django.contrib.auth.middleware.SessionAuthenticationMiddleware`` "
"diadakan. Lihat :ref:`session-invalidation-on-password-change` untuk lebih "
"rinci."

msgid "``django.contrib.formtools``"
msgstr "``django.contrib.formtools``"

msgid ""
"Calls to ``WizardView.done()`` now include a ``form_dict`` to allow easier "
"access to forms by their step name."
msgstr ""
"Panggilan pada ``WizardView.done()`` sekarang menyertakan ``form_dict`` "
"untuk mengizinkan pengaksesan lebih mudah pda formulir berdasarkan nama "
"langkah mereka. "

msgid ""
"The default OpenLayers library version included in widgets has been updated "
"from 2.11 to 2.13."
msgstr ""
"Versi pustaka OpenLayer awalan disertakan di widget telah diperbaharui dari "
"2.11 menjadi 2.13."

msgid ""
"Prepared geometries now also support the ``crosses``, ``disjoint``, "
"``overlaps``, ``touches`` and ``within`` predicates, if GEOS 3.3 or later is "
"installed."
msgstr ""
"Gemoteri dipersiapkan sekarang juga mendukung sebutan ``crosses``, "
"``disjoint``, ``overlaps``, ``touches`` dan ``within``, jika GEOS 3.3 atau "
"terakhir terpasang."

msgid ":mod:`django.contrib.messages`"
msgstr ":mod:`django.contrib.messages`"

msgid ""
"The backends for :mod:`django.contrib.messages` that use cookies, will now "
"follow the :setting:`SESSION_COOKIE_SECURE` and :setting:"
"`SESSION_COOKIE_HTTPONLY` settings."
msgstr ""
"Backend untuk :mod:`django.contrib.messages` yang menggunakan kue, sekarang "
"akan mengikuti pengaturan :setting:`SESSION_COOKIE_SECURE` dan :setting:"
"`SESSION_COOKIE_HTTPONLY`."

msgid ""
"The :ref:`messages context processor <message-displaying>` now adds a "
"dictionary of default levels under the name ``DEFAULT_MESSAGE_LEVELS``."
msgstr ""
":ref:`messages context processor <message-displaying>` sekarang menambahkan "
"sebuah kamus dari tingkat awalan dibawah nama ``DEFAULT_MESSAGE_LEVELS``."

msgid ""
":class:`~django.contrib.messages.storage.base.Message` objects now have a "
"``level_tag`` attribute that contains the string representation of the "
"message level."
msgstr ""
"Obyek :class:`~django.contrib.messages.storage.base.Message` sekarang "
"mempunyai sebuah atribut ``level_tag`` yang mengandung string perwakilan "
"dari tingkatan pesan."

msgid ":mod:`django.contrib.redirects`"
msgstr ":mod:`django.contrib.redirects`"

msgid ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware` has "
"two new attributes (:attr:`~django.contrib.redirects.middleware."
"RedirectFallbackMiddleware.response_gone_class` and :attr:`~django.contrib."
"redirects.middleware.RedirectFallbackMiddleware.response_redirect_class`) "
"that specify the types of :class:`~django.http.HttpResponse` instances the "
"middleware returns."
msgstr ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware` "
"mempunyai dua atribut baru (:attr:`~django.contrib.redirects.middleware."
"RedirectFallbackMiddleware.response_gone_class` dan :attr:`~django.contrib."
"redirects.middleware.RedirectFallbackMiddleware.response_redirect_class`) "
"yang menentukan jenis-jenis dari instance :class:`~django.http.HttpResponse` "
"kembalian middleware."

msgid ""
"The ``\"django.contrib.sessions.backends.cached_db\"`` session backend now "
"respects :setting:`SESSION_CACHE_ALIAS`. In previous versions, it always "
"used the ``default`` cache."
msgstr ""

msgid ":mod:`django.contrib.sitemaps`"
msgstr ":mod:`django.contrib.sitemaps`"

msgid ""
"The :mod:`sitemap framework<django.contrib.sitemaps>` now makes use of :attr:"
"`~django.contrib.sitemaps.Sitemap.lastmod` to set a ``Last-Modified`` header "
"in the response. This makes it possible for the :class:`~django.middleware."
"http.ConditionalGetMiddleware` to handle conditional ``GET`` requests for "
"sitemaps which set ``lastmod``."
msgstr ""
":mod:`sitemap framework<django.contrib.sitemaps>` sekarang memanfaatkan :"
"attr:`~django.contrib.sitemaps.Sitemap.lastmod` untuk menyetel kepala ``Last-"
"Modified`` di tanggapan. Ini membuatnya memungkinkan untuk :class:`~django."
"middleware.http.ConditionalGetMiddleware` untuk menangani permintaan ``GET`` "
"bersyarat untuk peta situs yang menyetel ``lastmod``. "

msgid ""
"The new :class:`django.contrib.sites.middleware.CurrentSiteMiddleware` "
"allows setting the current site on each request."
msgstr ""
":class:`django.contrib.sites.middleware.CurrentSiteMiddleware` baru "
"mengizinkan mengatur situs saat ini di setiap permintaan"

msgid ""
"The :ref:`static files storage classes <staticfiles-storages>` may be "
"subclassed to override the permissions that collected static files and "
"directories receive by setting the :attr:`~django.core.files.storage."
"FileSystemStorage.file_permissions_mode` and :attr:`~django.core.files."
"storage.FileSystemStorage.directory_permissions_mode` parameters. See :"
"djadmin:`collectstatic` for example usage."
msgstr ""
":ref:`static files storage classes <staticfiles-storages>` mungkin di "
"subkelaskan untuk menimpa perizinan yang mengumpulkan berkas-berkas tetap "
"dan direktori menerima dengan mengatur parameter :attr:`~django.core.files."
"storage.FileSystemStorage.file_permissions_mode` dan :attr:`~django.core."
"files.storage.FileSystemStorage.directory_permissions_mode`. Lihat :djadmin:"
"`collectstatic` untuk contoh penggunaan."

msgid ""
"The ``CachedStaticFilesStorage`` backend gets a sibling class called :class:"
"`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage` that "
"doesn't use the cache system at all but instead a JSON file called "
"``staticfiles.json`` for storing the mapping between the original file name "
"(e.g. ``css/styles.css``) and the hashed file name (e.g. ``css/"
"styles.55e7cbb9ba48.css``). The ``staticfiles.json`` file is created when "
"running the :djadmin:`collectstatic` management command and should be a less "
"expensive alternative for remote storages such as Amazon S3."
msgstr ""

msgid ""
"See the :class:`~django.contrib.staticfiles.storage."
"ManifestStaticFilesStorage` docs for more information."
msgstr ""
"Lihat dokumentasi :class:`~django.contrib.staticfiles.storage."
"ManifestStaticFilesStorage` untuk informasi lebih."

msgid ""
":djadmin:`findstatic` now accepts verbosity flag level 2, meaning it will "
"show the relative paths of the directories it searched. See :djadmin:"
"`findstatic` for example output."
msgstr ""
":djadmin:`findstatic` sekarang menerima bendera terlalu banyak kata tingkat "
"2, berarti itu akan menunjukkan jalur relatif dari direktori itu cari. "
"Lihat :djadmin:`findstatic` untuk contoh keluaran."

msgid ":mod:`django.contrib.syndication`"
msgstr ":mod:`django.contrib.syndication`"

msgid ""
"The :class:`~django.utils.feedgenerator.Atom1Feed` syndication feed's "
"``updated`` element now utilizes ``updateddate`` instead of ``pubdate``, "
"allowing the ``published`` element to be included in the feed (which relies "
"on ``pubdate``)."
msgstr ""
"Unsur ``updated``umpan perkongsian :class:`~django.utils.feedgenerator."
"Atom1Feed` sekarang memanfaatkan ``updateddate`` daripada ``pubdate``, "
"mengizinkan unsur ``published`` untuk disertakan di umpan (yang bergantung "
"pada ``pubdate``)."

msgid ""
"Access to caches configured in :setting:`CACHES` is now available via :data:"
"`django.core.cache.caches`. This dict-like object provides a different "
"instance per thread. It supersedes ``django.core.cache.get_cache()`` which "
"is now deprecated."
msgstr ""
"Akses ke cache dikonfigurasikan di :setting:`CACHES` sekarang tersedia "
"melalui :data:`django.core.cache.caches`. Obyek seperti-kamus ini "
"menyediakan instance berbeda per thread. Itu menggantikan ``django.core."
"cache.get_cache()`` yang sekarang diusangkan."

msgid ""
"If you instantiate cache backends directly, be aware that they aren't thread-"
"safe any more, as :data:`django.core.cache.caches` now yields different "
"instances per thread."
msgstr ""
"Jika anda menginstasiasi backend cache secara langsung, waspada mereka tidak "
"thread-safe lagi, ketika :data:`django.core.cache.caches` sekarang "
"menghasilkan instance berbeda per thread."

msgid ""
"Defining the :setting:`TIMEOUT <CACHES-TIMEOUT>` argument of the :setting:"
"`CACHES` setting as ``None`` will set the cache keys as \"non-expiring\" by "
"default. Previously, it was only possible to pass ``timeout=None`` to the "
"cache backend's ``set()`` method."
msgstr ""
"Menentukan argumen :setting:`TIMEOUT <CACHES-TIMEOUT>` dari pengaturan :"
"setting:`CACHES` sebagai ``None`` akan menyetel kunci cache sebagai \"non-"
"expiring\" secara awalan. Sebelumnya, itu hanya memungkinkan melewatkan "
"``timeout=None`` ke metode ``set()`` backend cache."

msgid "Cross Site Request Forgery"
msgstr "Cross Site Request Forgery"

msgid ""
"The :setting:`CSRF_COOKIE_AGE` setting facilitates the use of session-based "
"CSRF cookies."
msgstr ""
"Pengaturan :setting:`CSRF_COOKIE_AGE` mempermudah penggunaan kue CSRF "
"berbasis sesi."

msgid ""
":func:`~django.core.mail.send_mail` now accepts an ``html_message`` "
"parameter for sending a multipart :mimetype:`text/plain` and :mimetype:`text/"
"html` email."
msgstr ""

msgid ""
"The SMTP :class:`~django.core.mail.backends.smtp.EmailBackend` now accepts a "
"``timeout`` parameter."
msgstr ""
":class:`~django.core.mail.backends.smtp.EmailBackend` SMTP sekarang menerima "
"parameter ``timeout``."

msgid ""
"File locking on Windows previously depended on the PyWin32 package; if it "
"wasn't installed, file locking failed silently. That dependency has been "
"removed, and file locking is now implemented natively on both Windows and "
"Unix."
msgstr ""
"Penguncian berkas di Windows sebelumnya terbantung di paket PyWin32; jika "
"itu tidak dipasang, penguncian berkas gagal secara diam. Ketergantungan itu "
"telah dipindahkan, dan penguncian berkas sekarang diterapkan asli di kedua "
"Windows dan Unix."

msgid "File Uploads"
msgstr "Unggah Berkas"

msgid ""
"The new :attr:`UploadedFile.content_type_extra <django.core.files."
"uploadedfile.UploadedFile.content_type_extra>` attribute contains extra "
"parameters passed to the ``content-type`` header on a file upload."
msgstr ""
"Atribut :attr:`UploadedFile.content_type_extra <django.core.files."
"uploadedfile.UploadedFile.content_type_extra>` baru mengandung parameter "
"tambahan dilewatkan ke kepala ``content-type`` di sebuah unggah berkas."

msgid ""
"The new :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS` setting controls the "
"file system permissions of directories created during file upload, like :"
"setting:`FILE_UPLOAD_PERMISSIONS` does for the files themselves."
msgstr ""
"Pengaturan :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS` baru mengendalikan "
"perizinan sistem berkas dari direktori dibuat selama unggah berkas, seperti :"
"setting:`FILE_UPLOAD_PERMISSIONS` lakukan untuk berkas-berkas mereka sendiri."

msgid ""
"The :attr:`FileField.upload_to <django.db.models.FileField.upload_to>` "
"attribute is now optional. If it is omitted or given ``None`` or an empty "
"string, a subdirectory won't be used for storing the uploaded files."
msgstr ""
"Atribut :attr:`FileField.upload_to <django.db.models.FileField.upload_to>` "
"sekarang pilihan. Jika itu dihilangkan atau diberikan ``None`` atau sebuah "
"string kosong, sebuah subdirektori tidak akan digunakan untuk menyimpan "
"berkas terunggah."

msgid ""
"Uploaded files are now explicitly closed before the response is delivered to "
"the client. Partially uploaded files are also closed as long as they are "
"named ``file`` in the upload handler."
msgstr ""
"Berkas-berkas terunggah sekarang secara eksplisit tertutup sebelum tanggapan "
"dikirimkan ke klien. Sebagian berkas terunggah juga ditutup selama mereka "
"bernama ``file`` di penangan unggahan."

msgid ""
":meth:`Storage.get_available_name() <django.core.files.storage.Storage."
"get_available_name>` now appends an underscore plus a random 7 character "
"alphanumeric string (e.g. ``\"_x3a1gho\"``), rather than iterating through "
"an underscore followed by a number (e.g. ``\"_1\"``, ``\"_2\"``, etc.) to "
"prevent a denial-of-service attack. This change was also made in the 1.6.6, "
"1.5.9, and 1.4.14 security releases."
msgstr ""
":meth:`Storage.get_available_name() <django.core.files.storage.Storage."
"get_available_name>` sekarang menambah sebuah garis bawah ditambah 7 "
"karakter alphanumerik string acak (sebagai contoh `\"_x3a1gho\"``), daripada "
"mengulang melalui sebuah garis bawah diikuti oleh sebuah angka (sebagai "
"contoh ``\"_1\"``, ``\"_2\"``, dll) untuk mencegah serangan denial-of-"
"service. Perubahan ini juga dibuat di terbitan keamanan  1.6.6, 1.5.9, dan "
"1.4.14. "

msgid ""
"The ``<label>`` and ``<input>`` tags rendered by :class:`~django.forms."
"RadioSelect` and :class:`~django.forms.CheckboxSelectMultiple` when looping "
"over the radio buttons or checkboxes now include ``for`` and ``id`` "
"attributes, respectively. Each radio button or checkbox includes an "
"``id_for_label`` attribute to output the element's ID."
msgstr ""
"Etiket ``<label>`` dan ``<input>`` dibangun oleh :class:`~django.forms."
"RadioSelect` dan :class:`~django.forms.CheckboxSelectMultiple` ketika "
"mengulang tombol radio atau kontak centang sekarang menyertakan atribut "
"``for`` dan ``id``, masing-masing. Setiap tombol radio atau kotak centang "
"menyertakan sebuah atribut ``id_for_label`` untuk mengeluarkan unsur ID."

msgid ""
"The ``<textarea>`` tags rendered by :class:`~django.forms.Textarea` now "
"include a ``maxlength`` attribute if the :class:`~django.db.models."
"TextField` model field has a ``max_length``."
msgstr ""
"Etiket ``<textarea>`` dibangun oleh :class:`~django.forms.Textarea` sekarang "
"menyertakan sebuah atribut ``maxlength`` jika bidang model :class:`~django."
"db.models.TextField` mempunyai ``max_length``."

msgid ""
":attr:`Field.choices<django.db.models.Field.choices>` now allows you to "
"customize the \"empty choice\" label by including a tuple with an empty "
"string or ``None`` for the key and the custom label as the value. The "
"default blank option ``\"----------\"`` will be omitted in this case."
msgstr ""
":attr:`Field.choices<django.db.models.Field.choices>` sekarang mengizinkan "
"anda untuk menyesuaikan label \"empty choice\" dengan menyertakan sebuah "
"tuple dengan string kosong atau ``None`` untuk kunci dan penyesuaian label "
"sebagai nilai. Pilihan kosong awalan ``\"----------\"`` akan dihilangkan di "
"kasus ini. "

msgid ""
":class:`~django.forms.MultiValueField` allows optional subfields by setting "
"the ``require_all_fields`` argument to ``False``. The ``required`` attribute "
"for each individual field will be respected, and a new ``incomplete`` "
"validation error will be raised when any required fields are empty."
msgstr ""
":class:`~django.forms.MultiValueField` mengizinkan pilihan subbidang dengan "
"mengatur argumen ``require_all_fields`` menjadi ``False``. Atribut "
"``required`` untuk setiap bidang tersendiri akan dihormati, dan pengesahan "
"kesalahan ``incomplete`` baru akan dimunculkan ketika setiap bidang yang "
"diwajibkan adalah kosong."

msgid ""
"The :meth:`~django.forms.Form.clean` method on a form no longer needs to "
"return ``self.cleaned_data``. If it does return a changed dictionary then "
"that will still be used."
msgstr ""
"Metode :meth:`~django.forms.Form.clean` di sebuah formulir tidak lagi butuh "
"mengembalikan ``self.cleaned_data``. Jika itu mengembalikan sebuah kamus "
"dirubah meudian itu akan masih digunakan."

msgid ""
"After a temporary regression in Django 1.6, it's now possible again to make :"
"class:`~django.forms.TypedChoiceField` ``coerce`` method return an arbitrary "
"value."
msgstr ""
"Setelah pemulihan sementara di Django 1.6, itu sekarang memungkinkan kembali "
"untuk membuat metode ``coerce``  :class:`~django.forms.TypedChoiceField` "
"mengembalikan sebuah nilai yang berubah-ubah."

msgid ""
":attr:`SelectDateWidget.months <django.forms.SelectDateWidget.months>` can "
"be used to customize the wording of the months displayed in the select "
"widget."
msgstr ""
":attr:`SelectDateWidget.months <django.forms.SelectDateWidget.months>` dapat "
"digunakan untuk menyesuaikan rumus dari bulan ditampilkan di pilihan widget."

msgid ""
"The ``min_num`` and ``validate_min`` parameters were added to :func:`~django."
"forms.formsets.formset_factory` to allow validating a minimum number of "
"submitted forms."
msgstr ""
"Parameter ``min_num`` dan ``validate_min`` telah ditambahkan pada :func:"
"`~django.forms.formsets.formset_factory` untuk mengizinkan pengecekan angka "
"minimal dari formulir yang diajukan."

msgid ""
"The metaclasses used by ``Form`` and ``ModelForm`` have been reworked to "
"support more inheritance scenarios. The previous limitation that prevented "
"inheriting from both ``Form`` and ``ModelForm`` simultaneously have been "
"removed as long as ``ModelForm`` appears first in the MRO."
msgstr ""
"Meta kelas digunakan oleh ``Form`` dan ``ModelForm`` telah dikerjakan "
"kembali untuk mendukung skenario warisan lebih. Batasan sebelumnya yang "
"mencegah pewarisan dari kedua  ``Form`` dan ``ModelForm`` terus menerus "
"telah dipindahkan asalkan ``ModelForm`` muncul pertama di MRO."

msgid ""
"It's now possible to remove a field from a ``Form`` when subclassing by "
"setting the name to ``None``."
msgstr ""
"Sekarang memungkinkan memindahkan sebuah bidang dari ``Form`` ketika "
"mensubkelaskan dengan mengatur nama ke ``None``."

msgid ""
"It's now possible to customize the error messages for ``ModelForm``’s "
"``unique``, ``unique_for_date``, and ``unique_together`` constraints. In "
"order to support ``unique_together`` or any other ``NON_FIELD_ERROR``, "
"``ModelForm`` now looks for the ``NON_FIELD_ERROR`` key in the "
"``error_messages`` dictionary of the ``ModelForm``’s inner ``Meta`` class. "
"See :ref:`considerations regarding model's error_messages <considerations-"
"regarding-model-errormessages>` for more details."
msgstr ""
"Itu sekarang memungkinkan untuk menyesuaikan pesan kesalahan untuk "
"``ModelForm`` ``unique``, ``unique_for_date``, dan batasan "
"``unique_together``. Untuk mendukung ``unique_together`` atau setiap "
"``NON_FIELD_ERROR`` lain, ``ModelForm`` sekarang mencari kunci "
"``NON_FIELD_ERROR`` di kamus ``error_messages`` dari ``ModelForm`` sebelah "
"dalam kelas ``Meta``. Lihat  :ref:`considerations regarding model's "
"error_messages <considerations-regarding-model-errormessages>` untuk lebih "
"rincian."

msgid ""
"The :attr:`django.middleware.locale.LocaleMiddleware."
"response_redirect_class` attribute allows you to customize the redirects "
"issued by the middleware."
msgstr ""
"Atribut :attr:`django.middleware.locale.LocaleMiddleware."
"response_redirect_class` mengizinkan anda menyesuaian masalah pengalihan "
"oleh middleware."

msgid ""
"The :class:`~django.middleware.locale.LocaleMiddleware` now stores the "
"user's selected language with the session key ``_language``. This should "
"only be accessed using the ``LANGUAGE_SESSION_KEY`` constant. Previously it "
"was stored with the key ``django_language`` and the ``LANGUAGE_SESSION_KEY`` "
"constant did not exist, but keys reserved for Django should start with an "
"underscore. For backwards compatibility ``django_language`` is still read "
"from in 1.7. Sessions will be migrated to the new key as they are written."
msgstr ""

msgid ""
"The :ttag:`blocktrans` tag now supports a ``trimmed`` option. This option "
"will remove newline characters from the beginning and the end of the content "
"of the ``{% blocktrans %}`` tag, replace any whitespace at the beginning and "
"end of a line and merge all lines into one using a space character to "
"separate them. This is quite useful for indenting the content of a ``{% "
"blocktrans %}`` tag without having the indentation characters end up in the "
"corresponding entry in the ``.po`` file, which makes the translation process "
"easier."
msgstr ""

msgid ""
"When you run :djadmin:`makemessages` from the root directory of your "
"project, any extracted strings will now be automatically distributed to the "
"proper app or project message file. See :ref:`how-to-create-language-files` "
"for details."
msgstr ""
"Ketika anda menjalankan :djadmin:`makemessages` dari direktori akar dari "
"proyek anda, setiap string yang diambil akan sekarang otomatis disebarkan ke "
"aplikasi sesuai atau berkas  pesan proyek. Lihat :ref:`how-to-create-"
"language-files` untuk rincian."

msgid ""
"The :djadmin:`makemessages` command now always adds the ``--previous`` "
"command line flag to the ``msgmerge`` command, keeping previously translated "
"strings in ``.po`` files for fuzzy strings."
msgstr ""

msgid ""
"The following settings to adjust the language cookie options were "
"introduced: :setting:`LANGUAGE_COOKIE_AGE`, :setting:"
"`LANGUAGE_COOKIE_DOMAIN` and :setting:`LANGUAGE_COOKIE_PATH`."
msgstr ""
"Pengaturan berikut untuk menyesuaikan pilihan kue bahasa diperkenalkan :"
"setting:`LANGUAGE_COOKIE_AGE`, :setting:`LANGUAGE_COOKIE_DOMAIN` dan :"
"setting:`LANGUAGE_COOKIE_PATH`."

msgid "Added :doc:`/topics/i18n/formatting` for Esperanto."
msgstr "Ditambahkan :doc:`/topics/i18n/formatting` untuk Esperanto"

msgid ""
"The new :option:`--no-color` option for ``django-admin`` disables the "
"colorization of management command output."
msgstr ""
"Pilihan :option:`--no-color` baru untuk ``django-admin`` meniadakan "
"pewarnaan dari keluaran perintah pengelolaan."

msgid ""
"The new :option:`dumpdata --natural-foreign` and :option:`dumpdata --natural-"
"primary` options, and the new ``use_natural_foreign_keys`` and "
"``use_natural_primary_keys`` arguments for ``serializers.serialize()``, "
"allow the use of natural primary keys when serializing."
msgstr ""
"Pilihan option:`dumpdata --natural-foreign` dan :option:`dumpdata --natural-"
"primary` baru, dan argumen ``use_natural_foreign_keys`` dan "
"``use_natural_primary_keys`` baru untuk ``serializers.serialize()``, "
"mengizinkan penggunaan primary key alami ketika serialisasi."

msgid ""
"It is no longer necessary to provide the cache table name or the ``--"
"database`` option for the :djadmin:`createcachetable` command. Django takes "
"this information from your settings file. If you have configured multiple "
"caches or multiple databases, all cache tables are created."
msgstr ""
"Itu tidak butuh lagi menyediakan nama tabel cache atau pilihan ``--"
"database`` untuk perintah :djadmin:`createcachetable`. Django mengambil "
"informasi ini dari berkas pengaturan anda. Jika anda telah "
"mengkonfigurasikan banyak cache atau banyak basisdata, semua tabel cache "
"dibuat."

msgid "The :djadmin:`runserver` command received several improvements:"
msgstr "Perintah :djadmin:`runserver` menerima beberapa perbaikan:"

msgid ""
"On Linux systems, if :pypi:`pyinotify` is installed, the development server "
"will reload immediately when a file is changed. Previously, it polled the "
"filesystem for changes every second. That caused a small delay before "
"reloads and reduced battery life on laptops."
msgstr ""

msgid ""
"In addition, the development server automatically reloads when a translation "
"file is updated, i.e. after running :djadmin:`compilemessages`."
msgstr ""
"Sebagai tambahan, peladen pengembangan secara otomatis memuat kembali "
"kketika berkas terjemahan diperbaharui, yaitu setelah menjalankan :djadmin:"
"`compilemessages`."

msgid ""
"All HTTP requests are logged to the console, including requests for static "
"files or ``favicon.ico`` that used to be filtered out."
msgstr ""
"Semua permintaan HTTP masuk ke konsol, termasuk permintaan untuk berkas-"
"berkas tetap atau ``favicon.ico`` yang biasa disaring."

msgid ""
"Management commands can now produce syntax colored output under Windows if "
"the ANSICON third-party tool is installed and active."
msgstr ""
"Perintah pengelolaan sekarang dapat menghasilkan sintaksis keluaran bewarna "
"dibawah Windows jika alat pihak-ketiga ANSICON terpasang dan aktif."

msgid ""
":djadmin:`collectstatic` command with symlink option is now supported on "
"Windows NT 6 (Windows Vista and newer)."
msgstr ""
"Perintah :djadmin:`collectstatic` dengan pilihan symlink sekarang didukung "
"di Windows NT 6 (Windows Vista dan terbaru). "

msgid ""
"Initial SQL data now works better if the :pypi:`sqlparse` Python library is "
"installed."
msgstr ""

msgid ""
"Note that it's deprecated in favor of the :class:`~django.db.migrations."
"operations.RunSQL` operation of migrations, which benefits from the improved "
"behavior."
msgstr ""
"Catat bahwa itu diusangkan dalam mendukung dari operasi :class:`~django.db."
"migrations.operations.RunSQL` dari perpindahan, yang manfaat dari perilaku "
"yang ditingkatkan."

msgid ""
"The :meth:`QuerySet.update_or_create() <django.db.models.query.QuerySet."
"update_or_create>` method was added."
msgstr ""
"Metode :meth:`QuerySet.update_or_create() <django.db.models.query.QuerySet."
"update_or_create>` telah ditambahkan."

msgid ""
"The new :attr:`~django.db.models.Options.default_permissions` model ``Meta`` "
"option allows you to customize (or disable) creation of the default add, "
"change, and delete permissions."
msgstr ""
"Model :attr:`~django.db.models.Options.default_permissions` baru pilihan "
"``Meta`` mengizinkan anda menyesuaikan (atau meniadakan) pembuatan dari "
"awalan perizinan tambah, berubah, dan hapus."

msgid ""
"Explicit :class:`~django.db.models.OneToOneField` for :ref:`multi-table-"
"inheritance` are now discovered in abstract classes."
msgstr ""
":class:`~django.db.models.OneToOneField` eksplisit untuk :ref:`multi-table-"
"inheritance` sekarang ditemukan di kelas-kelas abstrak."

msgid ""
"It is now possible to avoid creating a backward relation for :class:`~django."
"db.models.OneToOneField` by setting its :attr:`~django.db.models.ForeignKey."
"related_name` to ``'+'`` or ending it with ``'+'``."
msgstr ""
"Itu sekarang memungkinkan menghindari membuat hubungan kebelakang untuk :"
"class:`~django.db.models.OneToOneField` dengan mengatur :attr:`~django.db."
"models.ForeignKey.related_name` nya menjadi ``'+'`` atau akhiri itu dengan "
"``'+'``."

msgid ""
":class:`F expressions <django.db.models.F>` support the power operator "
"(``**``)."
msgstr ""
":class:`F expressions <django.db.models.F>` mendukung kekuatan penghubung "
"(``**``)."

msgid ""
"The ``remove()`` and ``clear()`` methods of the related managers created by "
"``ForeignKey`` and ``GenericForeignKey`` now accept the ``bulk`` keyword "
"argument to control whether or not to perform operations in bulk (i.e. using "
"``QuerySet.update()``). Defaults to ``True``."
msgstr ""
"Metode ``remove()`` dan ``clear()`` dari pengelola terkait dibuat oleh "
"``ForeignKey`` dan ``GenericForeignKey`` sekarang menerima argumen kata "
"kunci ``bulk`` untuk mengendalikan apakah atau tidak melakukan tindakan "
"dalam jumlah besar (yaitu menggunakan ``QuerySet.update()``). Awalan menjadi "
"``True``."

msgid ""
"It is now possible to use ``None`` as a query value for the :lookup:`iexact` "
"lookup."
msgstr ""
"Seakrang dimungkinkan menggunakan ``None`` sebagai sebuah nilai permintaan "
"untuk pencarian :lookup:`iexact`."

msgid ""
"It is now possible to pass a callable as value for the attribute :attr:"
"`~django.db.models.ForeignKey.limit_choices_to` when defining a "
"``ForeignKey`` or ``ManyToManyField``."
msgstr ""
"Itu sekarang memungkinkan melewatkan callable sebagai nilai untuk atribut :"
"attr:`~django.db.models.ForeignKey.limit_choices_to` ketika menentukan "
"``ForeignKey`` atau ``ManyToManyField``."

msgid ""
"Calling :meth:`only() <django.db.models.query.QuerySet.only>` and :meth:"
"`defer() <django.db.models.query.QuerySet.defer>` on the result of :meth:"
"`QuerySet.values() <django.db.models.query.QuerySet.values>` now raises an "
"error (before that, it would either result in a database error or incorrect "
"data)."
msgstr ""
"Memanggil :meth:`only() <django.db.models.query.QuerySet.only>` dan :meth:"
"`defer() <django.db.models.query.QuerySet.defer>` di hasil dari :meth:"
"`QuerySet.values() <django.db.models.query.QuerySet.values>` sekarang "
"memunculkan sebuah kesalahan (sebelum itu, itu juga antara hasil di "
"kesalahan basisdata atau data tidak benar)."

msgid ""
"You can use a single list for :attr:`~django.db.models.Options."
"index_together` (rather than a list of lists) when specifying a single set "
"of fields."
msgstr ""
"Anda dapat menggunakan daftar tunggal untuk :attr:`~django.db.models.Options."
"index_together` (daripada sebuah daftar dari daftar) ketika menentukan "
"setelan tunggal dari bidang."

msgid ""
"Custom intermediate models having more than one foreign key to any of the "
"models participating in a many-to-many relationship are now permitted, "
"provided you explicitly specify which foreign keys should be used by setting "
"the new :attr:`ManyToManyField.through_fields <django.db.models."
"ManyToManyField.through_fields>` argument."
msgstr ""
"Penyesuaian model menengah memiliki lebih dari satu foreign key pada setiap "
"dari model yang mengikuti di hubungan many-to-many adalah sekarang "
"diizinkan, disediakan anda secara eksplisit menentukan foreign key mana "
"harus digunakan dengan mengatur argumen :attr:`ManyToManyField."
"through_fields <django.db.models.ManyToManyField.through_fields>` baru."

msgid ""
"Assigning a model instance to a non-relation field will now throw an error. "
"Previously this used to work if the field accepted integers as input as it "
"took the primary key."
msgstr ""
"Menetapkan sebuah instance model pada bidang bukan-hubungan akan sekarang "
"melempar sebuah kesalahan. Sebelumnya ini digunakan untuk bekerja jika "
"bidang menerima integer sebagai masukan ketika itu mengambil primary key."

msgid ""
"Integer fields are now validated against database backend specific min and "
"max values based on their :meth:`internal_type <django.db.models.Field."
"get_internal_type>`. Previously model field validation didn't prevent values "
"out of their associated column data type range from being saved resulting in "
"an integrity error."
msgstr ""
"Bidang integer sekarang disahkan terhadap backend basisdata khusus nilai min "
"dan maks berdasarkan pada :meth:`internal_type <django.db.models.Field."
"get_internal_type>` mereka. Sebelumnya pengesahan bidang model tidak "
"mencegah nilai dari jangkauan jenis data kolom terkait mereka dari menjadi "
"disimpan menghasilkan di sebuah kesalahan keutuhan."

msgid ""
"It is now possible to explicitly :meth:`~django.db.models.query.QuerySet."
"order_by` a relation ``_id`` field by using its attribute name."
msgstr ""
"Sekarang dimungkinkan secara eksplisit :meth:`~django.db.models.query."
"QuerySet.order_by` sebuah hubungan bidang ``_id`` dengan menggunakan nama "
"atributnya."

msgid ""
"The ``enter`` argument was added to the :data:`~django.test.signals."
"setting_changed` signal."
msgstr ""
"Argumen ``enter`` telah ditambahkan ke sinyal :data:`~django.test.signals."
"setting_changed`."

msgid ""
"The model signals can be now be connected to using a ``str`` of the "
"``'app_label.ModelName'`` form – just like related fields – to lazily "
"reference their senders."
msgstr ""
"Sinyal model dapat sekarang dihubungkan untuk menggunakan ``str`` dari "
"formulir ``'app_label.ModelName'`` - seperti bidang-bidang terkait - untuk "
"bermalas-malasan mengacukan pengirim mereka."

msgid ""
"The :meth:`Context.push() <django.template.Context.push>` method now returns "
"a context manager which automatically calls :meth:`pop() <django.template."
"Context.pop>` upon exiting the ``with`` statement. Additionally, :meth:"
"`push() <django.template.Context.push>` now accepts parameters that are "
"passed to the ``dict`` constructor used to build the new context level."
msgstr ""
"Metode :meth:`Context.push() <django.template.Context.push>` sekarang "
"mengembalikan pengelola konteks yang secara otomatis memanggil :meth:`pop() "
"<django.template.Context.pop>` diatas mengeluarkan pernyataan ``with``. "
"Sebagai tambahan, :meth:`push() <django.template.Context.push>` sekarang "
"menerima parameter yang dilewatkan ke pembangun ``dict`` digunakan untuk "
"membangun tingkatak konteks baru."

msgid ""
"The new :meth:`Context.flatten() <django.template.Context.flatten>` method "
"returns a ``Context``'s stack as one flat dictionary."
msgstr ""
"Metode :meth:`Context.flatten() <django.template.Context.flatten>` baru "
"mengembalikan sebuah tumpukan ``Context`` sebagai satu kamus datar."

msgid ""
"``Context`` objects can now be compared for equality (internally, this uses :"
"meth:`Context.flatten() <django.template.Context.flatten>` so the internal "
"structure of each ``Context``'s stack doesn't matter as long as their "
"flattened version is identical)."
msgstr ""
"Obyek ``Context`` sekarang dapat dibandingkan untuk kesetaraan (secara "
"internal, ini menggunakan :meth:`Context.flatten() <django.template.Context."
"flatten>` jadi struktur internal dari setiap tumpukan ``Context`` tidak "
"masalah selama versi diluruskan mereka mirip)."

msgid ""
"The :ttag:`widthratio` template tag now accepts an ``\"as\"`` parameter to "
"capture the result in a variable."
msgstr ""
"Etiket cetakan :ttag:`widthratio` sekarang menerima sebuah parameter "
"``\"as\"`` untuk mengambil hasil di sebuah variabel."

msgid ""
"The :ttag:`include` template tag will now also accept anything with a "
"``render()`` method (such as a ``Template``) as an argument. String "
"arguments will be looked up using :func:`~django.template.loader."
"get_template` as always."
msgstr ""
"Etiket cetakan :ttag:`include` akan sekarang juga menerima apapun dengan "
"metode ``render()`` (seperti ``Template``) sebagai sebuah argumen. Argumen "
"deretan karakter akan dicari menggunakan :func:`~django.template.loader."
"get_template` seperti biasanya."

msgid "It is now possible to :ttag:`include` templates recursively."
msgstr "Sekarang memungkinkan untuk :ttag:`include` cetakan secara berulang."

msgid ""
"Template objects now have an origin attribute set when ``TEMPLATE_DEBUG`` is "
"``True``. This allows template origins to be inspected and logged outside of "
"the ``django.template`` infrastructure."
msgstr ""
"Obyek cetakan sekarang mempunyai atribut asli disetel ketika "
"``TEMPLATE_DEBUG`` adalah ``True``. Ini mengizinkan cetakan asli untuk "
"diperiksa dan masuk diluar dari infrastruktur ``django.template``."

msgid ""
"``TypeError`` exceptions are no longer silenced when raised during the "
"rendering of a template."
msgstr ""
"Pengecualian ``TypeError`` tidak lagi didiamkan ketika dimunculkan selama "
"membangun sebuah cetakan."

msgid ""
"The following functions now accept a ``dirs`` parameter which is a list or "
"tuple to override ``TEMPLATE_DIRS``:"
msgstr ""
"Fungsi berikut sekarang menerima sebuah parameter ``dirs`` yaitu sebuah "
"daftar atau tuple untuk menimpa ``TEMPLATE_DIRS``:"

msgid ":func:`django.template.loader.get_template()`"
msgstr ":func:`django.template.loader.get_template()`"

msgid ":func:`django.template.loader.select_template()`"
msgstr ":func:`django.template.loader.select_template()`"

msgid ":func:`django.shortcuts.render()`"
msgstr ":func:`django.shortcuts.render()`"

msgid ""
"The :tfilter:`time` filter now accepts timezone-related :ref:`format "
"specifiers <date-and-time-formatting-specifiers>` ``'e'``, ``'O'`` , ``'T'`` "
"and ``'Z'`` and is able to digest :ref:`time-zone-aware "
"<naive_vs_aware_datetimes>` ``datetime`` instances performing the expected "
"rendering."
msgstr ""
"Penyaring :tfilter:`time` sekarang menerima terkait-zona waktu ref:`format "
"specifiers <date-and-time-formatting-specifiers>` ``'e'``, ``'O'`` , ``'T'`` "
"dan ``'Z'`` dan dapat mencerna instance :ref:`time-zone-aware "
"<naive_vs_aware_datetimes>` ``datetime`` melakukan pembangunan yang "
"diharapkan."

msgid ""
"The :ttag:`cache` tag will now try to use the cache called "
"\"template_fragments\" if it exists and fall back to using the default cache "
"otherwise. It also now accepts an optional ``using`` keyword argument to "
"control which cache it uses."
msgstr ""
"Etiket :ttag:`cache` sekarang akan mencoba menggunakan cache dipanggil "
"\"template_fragments\" jika itu ada dan sebaliknya jatuh kembali menggunakan "
"cache awalan. Itu juga sekarang menerima sebuah pilihan argumen kata kunci "
"``using`` untuk mengendalikan cache mana yang itu gunakan."

msgid ""
"The new :tfilter:`truncatechars_html` filter truncates a string to be no "
"longer than the specified number of characters, taking HTML into account."
msgstr ""
"Penyaring :tfilter:`truncatechars_html` baru memotong sebuah deretan "
"karakter untuk jadi tidak panjang dari angka yang ditentukan dari karakter, "
"mengambil HTML kedalam akun."

msgid ""
"The new :attr:`HttpRequest.scheme <django.http.HttpRequest.scheme>` "
"attribute specifies the scheme of the request (``http`` or ``https`` "
"normally)."
msgstr ""
"Atribut :attr:`HttpRequest.scheme <django.http.HttpRequest.scheme>` baru "
"menentukan skema dari permintaan (``http`` atau ``https`` secara umum)."

msgid ""
"The shortcut :func:`redirect() <django.shortcuts.redirect>` now supports "
"relative URLs."
msgstr ""
"Jalan pintas :func:`redirect() <django.shortcuts.redirect>` sekarang "
"mendukung URL relatif."

msgid ""
"The new :class:`~django.http.JsonResponse` subclass of :class:`~django.http."
"HttpResponse` helps easily create JSON-encoded responses."
msgstr ""
"Subkelas :class:`~django.http.JsonResponse` baru dari :class:`~django.http."
"HttpResponse` membantu dengan mudah membuat tanggapan JSON-disandikan."

msgid ""
":class:`~django.test.runner.DiscoverRunner` has two new attributes, :attr:"
"`~django.test.runner.DiscoverRunner.test_suite` and :attr:`~django.test."
"runner.DiscoverRunner.test_runner`, which facilitate overriding the way "
"tests are collected and run."
msgstr ""
":class:`~django.test.runner.DiscoverRunner` mempunyai dua atribut baru, :"
"attr:`~django.test.runner.DiscoverRunner.test_suite` dan :attr:`~django.test."
"runner.DiscoverRunner.test_runner`, yang memfasilitasi menimpa cara "
"percobaan dikumpulkan dan berjalan."

msgid ""
"The ``fetch_redirect_response`` argument was added to :meth:`~django.test."
"SimpleTestCase.assertRedirects`. Since the test client can't fetch externals "
"URLs, this allows you to use ``assertRedirects`` with redirects that aren't "
"part of your Django app."
msgstr ""
"Argumen ``fetch_redirect_response`` telah ditambahkan ke :meth:`~django.test."
"SimpleTestCase.assertRedirects`. Sejak percobaan klien tidak dapat mengambil "
"URL luar, ini mengizinkan anda menggunakan ``assertRedirects`` dengan "
"mengalihkan dimana bukan bagian dari aplikasi Django anda."

msgid ""
"Correct handling of scheme when making comparisons in :meth:`~django.test."
"SimpleTestCase.assertRedirects`."
msgstr ""
"Perbaiki penanganan dari skema ketika membuat perbandingan di :meth:`~django."
"test.SimpleTestCase.assertRedirects`."

msgid ""
"The ``secure`` argument was added to all the request methods of :class:"
"`~django.test.Client`. If ``True``, the request will be made through HTTPS."
msgstr ""
"Argumen ``secure`` telah ditambahkan ke semua metode permintaan dari :class:"
"`~django.test.Client`. Jika ``True``, permintaan akan dibuat melalui HTTPS."

msgid ""
":meth:`~django.test.TransactionTestCase.assertNumQueries` now prints out the "
"list of executed queries if the assertion fails."
msgstr ""
":meth:`~django.test.TransactionTestCase.assertNumQueries` sekarang mencetak "
"daftar dari permintaan dijalankan jika tuntutan gagal."

msgid ""
"The ``WSGIRequest`` instance generated by the test handler is now attached "
"to the :attr:`django.test.Response.wsgi_request` attribute."
msgstr ""
"Instance ``WSGIRequest`` dibangkitkan oleh penangan percobaan sekarang "
"dilampirkan ke atribut :attr:`django.test.Response.wsgi_request`."

msgid ""
"The database settings for testing have been collected into a dictionary "
"named :setting:`TEST <DATABASE-TEST>`."
msgstr ""
"Pengaturan basisdata untuk percobaan telah dikumpulkan kedalam kamus "
"dinamai :setting:`TEST <DATABASE-TEST>`."

msgid "Utilities"
msgstr "Keperluan"

msgid ""
":class:`~django.core.validators.RegexValidator` now accepts the optional :"
"attr:`~django.core.validators.RegexValidator.flags` and Boolean :attr:"
"`~django.core.validators.RegexValidator.inverse_match` arguments. The :attr:"
"`~django.core.validators.RegexValidator.inverse_match` attribute determines "
"if the :exc:`~django.core.exceptions.ValidationError` should be raised when "
"the regular expression pattern matches (``True``) or does not match "
"(``False``, by default) the provided ``value``. The :attr:`~django.core."
"validators.RegexValidator.flags` attribute sets the flags used when "
"compiling a regular expression string."
msgstr ""
":class:`~django.core.validators.RegexValidator` sekarang menerima pilihan "
"argumen :attr:`~django.core.validators.RegexValidator.flags` dan Boolean :"
"attr:`~django.core.validators.RegexValidator.inverse_match`. Atribut :attr:"
"`~django.core.validators.RegexValidator.inverse_match` menentukan jika :exc:"
"`~django.core.exceptions.ValidationError` harus dimunculkan ketika pola "
"regular expression cocok (``True``) atau tidak cocok (``False``, secara "
"awalan) ``value`` disediakan. Atribut :attr:`~django.core.validators."
"RegexValidator.flags` menyetel bendera digunakan ketika menyusun deretan "
"karakter regular expression."

msgid ""
":class:`~django.core.validators.URLValidator` now accepts an optional "
"``schemes`` argument which allows customization of the accepted URI schemes "
"(instead of the defaults ``http(s)`` and ``ftp(s)``)."
msgstr ""
":class:`~django.core.validators.URLValidator` sekarang menerima sebuah "
"pilhan argumen ``schemes`` yang mengizinkan penyesuaian dari skema URL "
"diterima (sebagai gantinya ``http(s)`` dan ``ftp(s)``)."

msgid ""
":func:`~django.core.validators.validate_email` now accepts addresses with "
"IPv6 literals, like ``example@[2001:db8::1]``, as specified in RFC 5321."
msgstr ""
":func:`~django.core.validators.validate_email` sekarang menerima "
"pengalamatan dengan harfiah IPv6, seperti ``example@[2001:db8::1]``, seperti "
"ditentukan di RFC 5321."

msgid "Backwards incompatible changes in 1.7"
msgstr "Perubahan bertentangan kebelakang di 1.7"

msgid ""
"In addition to the changes outlined in this section, be sure to review the :"
"ref:`deprecation plan <deprecation-removed-in-1.7>` for any features that "
"have been removed. If you haven't updated your code within the deprecation "
"timeline for a given feature, its removal may appear as a backwards "
"incompatible change."
msgstr ""
"Sebagai tambahan pada perubahan diuraikan di bagian ini, pastikan untuk "
"meninjau kembali :ref:`deprecation plan <deprecation-removed-in-1.7>` untuk "
"setiap fitur yang telah dipindahkan. Jika anda belum memperbaharui kode anda "
"dalam linimasa pengusangan untuk fitur yang diberikan, perpindahannya mugkin "
"muncul sebagai perubahan ketidaksesuaian kebelakang."

msgid "``allow_syncdb`` / ``allow_migrate``"
msgstr "``allow_syncdb`` / ``allow_migrate``"

msgid ""
"While Django will still look at ``allow_syncdb`` methods even though they "
"should be renamed to ``allow_migrate``, there is a subtle difference in "
"which models get passed to these methods."
msgstr ""
"Selagi Django akan amsih mencari metode ``allow_syncdb`` meskipun mereka "
"harus dinamai kembali ke ``allow_migrate``, ada sebuah perbedaan halus di "
"model mana  diloloskan ke metode ini."

msgid ""
"For apps with migrations, ``allow_migrate`` will now get passed :ref:"
"`historical models <historical-models>`, which are special versioned models "
"without custom attributes, methods or managers. Make sure your "
"``allow_migrate`` methods are only referring to fields or other items in "
"``model._meta``."
msgstr ""
"Untuk aplikasi dengan perpindahan, ``allow_migrate`` akan sekarang "
"melewatkan :ref:`historical models <historical-models>`, yang model versi "
"khusus tanpa atribut penyesuaian, metode atau pengelola. Pastikan metode "
"``allow_migrate`` anda hanya mengacu ke bidang-bidang atau barang-barang "
"lainnya di ``model._meta``."

msgid "initial_data"
msgstr "initial_data"

msgid ""
"Apps with migrations will not load ``initial_data`` fixtures when they have "
"finished migrating. Apps without migrations will continue to load these "
"fixtures during the phase of ``migrate`` which emulates the old ``syncdb`` "
"behavior, but any new apps will not have this support."
msgstr ""
"Aplikasi-aplikasi dengan perpindahan tidak akan memuat perlengkapan "
"``initial_data`` ketika mereka telah menyelesaikan perpindahan. Aplikasi-"
"aplikasi tanpa perpindahan akan melanjutkan memuat perlengkapan ini selama "
"fase dari ``migrate`` yang meniru perilaku ``syncdb`` lama, tetapi setiap "
"apliaksi baru tidak mempunyai dukungan ini."

msgid ""
"Instead, you are encouraged to load initial data in migrations if you need "
"it (using the ``RunPython`` operation and your model classes); this has the "
"added advantage that your initial data will not need updating every time you "
"change the schema."
msgstr ""
"Malahan, anda didorong memuat data inisial di perpindahan jika anda butuh "
"itu (menggunakan tindakan ``RunPython`` dan kelas-kelas model anda); ini "
"mempunyai tambahan keuntungan yang data inisial anda tidak akan butuh "
"diperbaharui setiap kali anda merubah skema."

msgid ""
"Additionally, like the rest of Django's old ``syncdb`` code, "
"``initial_data`` has been started down the deprecation path and will be "
"removed in Django 1.9."
msgstr ""
"Tambahannya, seperti kode ``syncdb`` lama Django lainnya, ``initial_data`` "
"telah dimulai jalur pengusangan dan akan dipindahkan di Django 1.9."

msgid "``deconstruct()`` and serializability"
msgstr ""

msgid ""
"Django now requires all Field classes and all of their constructor arguments "
"to be serializable. If you modify the constructor signature in your custom "
"Field in any way, you'll need to implement a ``deconstruct()`` method; we've "
"expanded the custom field documentation with :ref:`instructions on "
"implementing this method <custom-field-deconstruct-method>`."
msgstr ""

msgid ""
"The requirement for all field arguments to be :ref:`serializable <migration-"
"serializing>` means that any custom class instances being passed into Field "
"constructors - things like custom Storage subclasses, for instance - need to "
"have a :ref:`deconstruct method defined on them as well <custom-deconstruct-"
"method>`, though Django provides a handy class decorator that will work for "
"most applications."
msgstr ""
"Persyaratan untuk semua bidang argumen untuk menjadi :ref:`serializable "
"<migration-serializing>` berarti bahwa setiap penyesuaian instance kelas "
"sedang dilewatkan kedalam pembangun Field - hal-hal seperti penyesuaian "
"subkelas Storage, sebagai contoh - butuh memiliki :ref:`deconstruct method "
"defined on them as well <custom-deconstruct-method>`, meskipun Django "
"menyediakan sebuah penghias kelas mudah yang akan bekerja untuk kebanyakan "
"aplikasi."

msgid "App-loading changes"
msgstr "Perubahan memuat-aplikasi"

msgid "Start-up sequence"
msgstr "Urutan memulai"

msgid ""
"Django 1.7 loads application configurations and models as soon as it starts. "
"While this behavior is more straightforward and is believed to be more "
"robust, regressions cannot be ruled out. See :ref:`applications-"
"troubleshooting` for solutions to some problems you may encounter."
msgstr ""
"Django 1.7 memuat konfigurasi aplikasi dan model ketika itu mulai. Selagi "
"perilaku ini lebih terang-terangan dan dipercaya untuk menjadi lebih kuat, "
"pemulihan tidak dapat dikesampingkan. Lihat :ref:`applications-"
"troubleshooting` untuk pemecahan pada beberapa masalah anda mungkin hadapi."

msgid "Standalone scripts"
msgstr "Tulisan berdiri sendiri"

msgid ""
"If you're using Django in a plain Python script — rather than a management "
"command — and you rely on the :envvar:`DJANGO_SETTINGS_MODULE` environment "
"variable, you must now explicitly initialize Django at the beginning of your "
"script with:"
msgstr ""

msgid "Otherwise, you will hit an ``AppRegistryNotReady`` exception."
msgstr ""
"Jika tidak, anda akan membentur sebuah pengecualian ``AppRegistryNotReady``."

msgid "WSGI scripts"
msgstr "Tulisan WSGI"

msgid ""
"Until Django 1.3, the recommended way to create a WSGI application was::"
msgstr ""
"Sampai Django 1.3, cara dianjurkan untuk membuat aplikasi WSGI adalah::"

msgid "In Django 1.4, support for WSGI was improved and the API changed to::"
msgstr ""
"Di Django 1.4, dukungan untk WSGI telah ditingkarkan dan API berubah "
"menjadi::"

msgid ""
"If you're still using the former style in your WSGI script, you need to "
"upgrade to the latter, or you will hit an ``AppRegistryNotReady`` exception."
msgstr ""
"Jika anda masih menggunakan gaya bekas di tulisan WSGI anda, anda butuh "
"meningkatkan ke terakhir, atau anda akan mengenai sebuah pengecualian "
"``AppRegistryNotReady``."

msgid "App registry consistency"
msgstr "Kemantapan registrar aplikasi"

msgid ""
"It is no longer possible to have multiple installed applications with the "
"same label. In previous versions of Django, this didn't always work "
"correctly, but didn't crash outright either."
msgstr ""
"Itu tidak lagi memungkinkan memiliki banyak aplikasi terpasang dengan label "
"sama. Dalam versi sebelum dari Django, ini tidak selalu bekerja dengan "
"benar, tetapi tidak gagal sekaligus juga."

msgid ""
"If you have two apps with the same label, you should create an :class:"
"`~django.apps.AppConfig` for one of them and override its :class:`~django."
"apps.AppConfig.label` there. You should then adjust your code wherever it "
"references this application or its models with the old label."
msgstr ""
"Jika anda mempunyai dua aplikasi dengan label sama, anad harus membuat "
"sebuah :class:`~django.apps.AppConfig` untuk satu dari mereka dan menimpa :"
"class:`~django.apps.AppConfig.label` nya disana. Anda harus kemudian "
"menyesuaikan kode anda dimanapun itu mengacu aplikasi ini atau modelnya "
"dengan label lama."

msgid ""
"It isn't possible to import the same model twice through different paths any "
"more. As of Django 1.6, this may happen only if you're manually putting a "
"directory and a subdirectory on :envvar:`PYTHONPATH`. Refer to the section "
"on the new project layout in the :doc:`1.4 release notes </releases/1.4>` "
"for migration instructions."
msgstr ""
"Itu tidak mungkin mengimpor model yang sama dua kali melalui jalur berbeda "
"lagi. Ketika Django 1.6, ini mungkin terjadi hanya jika anda sedang secara "
"manual menaruh sebuah direktori dan sebuah subdirektori pada :envvar:"
"`PYTHONPATH`. Mengacu pada bagian di tata letak proyek baru di :doc:`1.4 "
"release notes </releases/1.4>` untuk pentunjuk perpindahan."

msgid "You should make sure that:"
msgstr "Anda harus pastikan itu:"

msgid ""
"All models are defined in applications that are listed in :setting:"
"`INSTALLED_APPS` or have an explicit :attr:`~django.db.models.Options."
"app_label`."
msgstr ""
"Semua model ditentukan di aplikasi yang didaftarkan di :setting:"
"`INSTALLED_APPS` atau mempunyai sebuah :attr:`~django.db.models.Options."
"app_label` yang jelas. "

msgid ""
"Models aren't imported as a side-effect of loading their application. "
"Specifically, you shouldn't import models in the root module of an "
"application nor in the module that define its configuration class."
msgstr ""
"Model tidak diimpor sebagai pengaruh-samping dari memuat aplikasi mereka. "
"Khususnya, anda tidak harus mengimpor model di modul akar dari sebuah "
"aplikasi maupun di modul yang menentukan kelas konfigurasinya."

msgid ""
"Django will enforce these requirements as of version 1.9, after a "
"deprecation period."
msgstr ""
"Django akan memaksa persyaratan ini sebagai versi 1.9, setelah masa "
"pengusangan."

msgid "Subclassing AppCommand"
msgstr "Mensubkelaskan AppCommand"

msgid ""
"Subclasses of :class:`~django.core.management.AppCommand` must now implement "
"a :meth:`~django.core.management.AppCommand.handle_app_config` method "
"instead of ``handle_app()``. This method receives an :class:`~django.apps."
"AppConfig` instance instead of a models module."
msgstr ""
"Subkelas-subkelas dari :class:`~django.core.management.AppCommand` harus "
"sekarang menerapkan sebuah metode :meth:`~django.core.management.AppCommand."
"handle_app_config` daripada ``handle_app()``. Metode ini menerima sebuah "
"instance :class:`~django.apps.AppConfig` daripada modul model. "

msgid "Introspecting applications"
msgstr "Menginterospeksi aplikasi"

msgid ""
"Since :setting:`INSTALLED_APPS` now supports application configuration "
"classes in addition to application modules, you should review code that "
"accesses this setting directly and use the app registry (:attr:`django.apps."
"apps`) instead."
msgstr ""
"Sejak :setting:`INSTALLED_APPS` sekarang mendukung kelas-kelas konfigurasi "
"aplikasi sebagai tambahan pada modul aplikasi, anda harus meninjau kembali "
"kode yang mengakses pengaturan ini secara langsung dan menggunakan registrar "
"aplikasi (:attr:`django.apps.apps`) sebagai gantinya."

msgid ""
"The app registry has preserved some features of the old app cache. Even "
"though the app cache was a private API, obsolete methods and arguments will "
"be removed through a standard deprecation path, with the exception of the "
"following changes that take effect immediately:"
msgstr ""
"Registrar aplikasi telah melindungi beberapa fitur dari cache aplikasi lama. "
"Meskipun cache aplikasi adalah API pribadi, metode dan argumen usang akan "
"dipindahkan melalui sebuah jalur pengusangan standar, dengan pengecualian "
"dari perubahan berikut yang mengambil pengaruh segera:"

msgid ""
"``get_model`` raises :exc:`LookupError` instead of returning ``None`` when "
"no model is found."
msgstr ""
"``get_model`` memunculkan :exc:`LookupError` daripada mengembalikan ``None`` "
"ketika tidak ada model ditemukan."

msgid ""
"The ``only_installed`` argument of ``get_model`` and ``get_models`` no "
"longer exists, nor does the ``seed_cache`` argument of ``get_model``."
msgstr ""
"Argumen ``only_installed`` dari ``get_model`` dan ``get_models`` tidak lagi "
"ada, maupun argumen ``seed_cache`` dari ``get_model``."

msgid "Management commands and order of :setting:`INSTALLED_APPS`"
msgstr "Perintah pengelolaan dan urutan dari :setting:`INSTALLED_APPS`"

msgid ""
"When several applications provide management commands with the same name, "
"Django loads the command from the application that comes first in :setting:"
"`INSTALLED_APPS`. Previous versions loaded the command from the application "
"that came last."
msgstr ""
"Ketika beberapa aplikasi menyediakan perintah pengelolaan dengan nama sama, "
"Django memuat perintah dari aplikasi yang datang pertama di :setting:"
"`INSTALLED_APPS`. Versi sebelumnya memuat perintah dari aplikasi yang datang "
"terakhir."

msgid ""
"This brings discovery of management commands in line with other parts of "
"Django that rely on the order of :setting:`INSTALLED_APPS`, such as static "
"files, templates, and translations."
msgstr ""
"Ini membawa penemuan dari perintah pengelolaan di baris dengan bagian lain "
"dari Django yang bergantung di urutan dari :setting:`INSTALLED_APPS`, "
"seperti berkas-berkas tetap, cetakan, dan terjemahan."

msgid "``ValidationError`` constructor and internal storage"
msgstr "Pembangun ``ValidationError`` dan penyimpanan internal"

msgid ""
"The behavior of the ``ValidationError`` constructor has changed when it "
"receives a container of errors as an argument (e.g. a ``list`` or an "
"``ErrorList``):"
msgstr ""
"Perilaku dari pembangun ``ValidationError`` telah berubah ketika itu "
"menerima sebuah wadah kesalahan sebagai sebuah argumen (sebagai contoh "
"sebuah ``list`` atau sebuah ``ErrorList``):"

msgid ""
"It converts any strings it finds to instances of ``ValidationError`` before "
"adding them to its internal storage."
msgstr ""
"Itu merubah string apapun pada instance dari ``ValidationError`` sebelum "
"menambahkan mereka ke penyimpanan internal nya."

msgid ""
"It doesn't store the given container but rather copies its content to its "
"own internal storage; previously the container itself was added to the "
"``ValidationError`` instance and used as internal storage."
msgstr ""
"Itu tidak menyimpan wadah yang diberikan tetapi lebih baik menyalin isinya "
"ke penyimpanan interal sendiri; sebelumnya wadah itu sendiri telah "
"ditambahkan ke instance ``ValidationError`` dan digunakan sebagai "
"penyimpanan internal."

msgid ""
"This means that if you access the ``ValidationError`` internal storages, "
"such as ``error_list``; ``error_dict``; or the return value of "
"``update_error_dict()`` you may find instances of ``ValidationError`` where "
"you would have previously found strings."
msgstr ""
"Ini berarti bahwa jika anda mengakses penyimpan internal "
"``ValidationError``, seperti ``error_list``; ``error_dict``; atau "
"mengembalikan nilai dari ``update_error_dict()`` anda mungkin menemukan "
"instance dari ``ValidationError`` dimana anda akan sebelumnya menemukan "
"string."

msgid ""
"Also if you directly assigned the return value of ``update_error_dict()`` to "
"``Form._errors`` you may inadvertently add ``list`` instances where "
"``ErrorList`` instances are expected. This is a problem because unlike a "
"simple ``list``, an ``ErrorList`` knows how to handle instances of "
"``ValidationError``."
msgstr ""

msgid ""
"Most use-cases that warranted using these private APIs are now covered by "
"the newly introduced :meth:`Form.add_error() <django.forms.Form."
"add_error()>` method::"
msgstr ""
"Kebanyakan kasus-digunakan yang menjamin menggunakan API pribadi ini "
"sekarang dicakupi oleh metode :meth:`Form.add_error() <django.forms.Form."
"add_error()>` yang baru diperkenalkan::"

msgid ""
"If you need both Django <= 1.6 and 1.7 compatibility you can't use :meth:"
"`Form.add_error() <django.forms.Form.add_error()>` since it wasn't available "
"before Django 1.7, but you can use the following workaround to convert any "
"``list`` into ``ErrorList``::"
msgstr ""
"Jika anda butuh kesesuaian kedua Django <= 1.6 dan 1.7 anda tidak dapat "
"menggunakan :meth:`Form.add_error() <django.forms.Form.add_error()>` sejak "
"itu tidak tersedia sebelum Django 1.7, tetapi anda dapat menggunakan "
"pemecahan berikut untuk merubah setiap ``list`` menjadi ``ErrorList``::"

msgid "Behavior of ``LocMemCache`` regarding pickle errors"
msgstr "Perilaku `` LocMemCache`` mengenai kesalahan pickle"

msgid ""
"An inconsistency existed in previous versions of Django regarding how pickle "
"errors are handled by different cache backends. ``django.core.cache.backends."
"locmem.LocMemCache`` used to fail silently when such an error occurs, which "
"is inconsistent with other backends and leads to cache-specific errors. This "
"has been fixed in Django 1.7, see :ticket:`21200` for more details."
msgstr ""
"Sebuah ketidakkonsistentan ada di versi sebelumnya dari Django perihal "
"bagaimana kesulitan kesalahan ditangani oleh backend penyimpanan sementara "
"yang berbeda. ``django.core.cache.backends.locmem.LocMemCache`` digunakan "
"untuk gagal secara diam ketika kesalahan seperti itu muncul, yaitu "
"ketidakkonsistenan dengan backend lain dan membawa pada kesalahan "
"penyimpanan sementara-tertentu. Ini telah diperbaiki di Django 1.7, lihat :"
"ticket:`21200` untuk lebih rinci."

msgid "Cache keys are now generated from the request's absolute URL"
msgstr "Kunci cache sekarang dibangkitkan dari permintaan URL mutlak"

msgid ""
"Previous versions of Django generated cache keys using a request's path and "
"query string but not the scheme or host. If a Django application was serving "
"multiple subdomains or domains, cache keys could collide. In Django 1.7, "
"cache keys vary by the absolute URL of the request including scheme, host, "
"path, and query string. For example, the URL portion of a cache key is now "
"generated from ``https://www.example.com/path/to/?key=val`` rather than ``/"
"path/to/?key=val``. The cache keys generated by Django 1.7 will be different "
"from the keys generated by older versions of Django. After upgrading to "
"Django 1.7, the first request to any previously cached URL will be a cache "
"miss."
msgstr ""
"Versi sebelumnya dari Django membangkitkan kunci tembolok menggunakan jalur "
"permintaan dan permintaan deretan karakter tetapi bukan skema atau "
"penyimpanan.  Jika sebuah aplikasi Django telah melayani banyak subranah "
"atau ranah, kunci tembolok dapat bertabrakan. Di Django 1.7, kunci tembolok "
"beragam berdasarkan URL mutlak dari permintaan termasuk skema, penyimpanan, "
"jalur, dan permintaan deretan karakter. Sebagai contoh, bagian URL dari "
"kunci tembolok sekarang dibangkitkan dari ``https://www.example.com/path/to/?"
"key=val`` daripada ``/path/to/?key=val``.Kunci tembolok dibangkitkan oleh "
"Django 1.7 akan menjadi berbeda dari kunci dibangkitkan oleh versi terlama "
"dari Django. Setelah meningkatkan ke Django 1.7, permintaan pertama pada "
"setiap URL disembunyikan sebelumnya akan lolos menyimpan."

msgid "Passing ``None`` to ``Manager.db_manager()``"
msgstr "Melewati ``None`` ke ``Manager.db_manager()``"

msgid ""
"In previous versions of Django, it was possible to use "
"``db_manager(using=None)`` on a model manager instance to obtain a manager "
"instance using default routing behavior, overriding any manually specified "
"database routing. In Django 1.7, a value of ``None`` passed to db_manager "
"will produce a router that *retains* any manually assigned database routing "
"-- the manager will *not* be reset. This was necessary to resolve an "
"inconsistency in the way routing information cascaded over joins. See :"
"ticket:`13724` for more details."
msgstr ""
"Di versi sebelumnya dari Django, itu memungkinkan menggunakan "
"``db_manager(using=None)`` di sebuah instance pengelola model untuk "
"mengambil sebuah instance pengelola menggunakan perilaku rute awalan, "
"menimpa setiap secara manual ditentukan rute basisdata. Di Djang0 1.7, "
"sebuah nilai dari ``None`` dilewatkan ke db_manager akan menghasilkan sebuah "
"perute yang *mempertahankan* setiap secara manual diberikan rute basisdata "
"-- pengelola *tidak* akan disetel kembali. Ini diperlukan untuk "
"menyelesaikan ketidakmantapan dalam cara merute aliran informasi terhadap "
"join. Lihat :ticket:`13724` untuk lebih rinci."

msgid "``pytz`` may be required"
msgstr ""

msgid ""
"If your project handles datetimes before 1970 or after 2037 and Django "
"raises a :exc:`ValueError` when encountering them, you will have to install :"
"pypi:`pytz`. You may be affected by this problem if you use Django's time "
"zone-related date formats or :mod:`django.contrib.syndication`."
msgstr ""

msgid "``remove()`` and ``clear()`` methods of related managers"
msgstr "Metode ``remove()`` dan ``clear()`` dari pengelola terkait"

msgid ""
"The ``remove()`` and ``clear()`` methods of the related managers created by "
"``ForeignKey``, ``GenericForeignKey``, and ``ManyToManyField`` suffered from "
"a number of issues. Some operations ran multiple data modifying queries "
"without wrapping them in a transaction, and some operations didn't respect "
"default filtering when it was present (i.e. when the default manager on the "
"related model implemented a custom ``get_queryset()``)."
msgstr ""
"Metode ``remove()`` dan ``clear()`` dari pengelola terkait dibuat oleh "
"``ForeignKey``, ``GenericForeignKey``, and ``ManyToManyField`` menderita "
"dari sejumlah masalah. Beberapa tindakan berjalan banyak data merubah "
"permintaan tanpa membungkus mereka di sebuah transaksi, dan beberapa "
"tindakan tidak menanggapi penyaringan awalan ketika itu dicegah (yaitu "
"ketika pengelola awalan di model terkait menerapkan sebuah penyesuaian "
"``get_queryset()``)."

msgid "Fixing the issues introduced some backward incompatible changes:"
msgstr ""
"Memperbaiki beberapa masalah memperkenalkan beberapa perubahan tidakkesuaian "
"kebelakang:"

msgid ""
"The default implementation of ``remove()`` for ``ForeignKey`` related "
"managers changed from a series of ``Model.save()`` calls to a single "
"``QuerySet.update()`` call. The change means that ``pre_save`` and "
"``post_save`` signals aren't sent anymore. You can use the ``bulk=False`` "
"keyword argument to revert to the previous behavior."
msgstr ""
"Penerapan awalan dari ``remove()`` untuk pengelola terkait ``ForeignKey`` "
"berubah dari rangkaian panggilan ``Model.save()`` ke panggilan ``QuerySet."
"update()`` tunggal. Perubahan berarti bahwa sinyal ``pre_save`` dan "
"``post_save`` tidak dikirim lagi. Anda dapat menggunakan argumen kata kunci "
"``bulk=False`` untuk kembali ke perilaku sebelumnya."

msgid ""
"The ``remove()`` and ``clear()`` methods for ``GenericForeignKey`` related "
"managers now perform bulk delete. The ``Model.delete()`` method isn't called "
"on each instance anymore. You can use the ``bulk=False`` keyword argument to "
"revert to the previous behavior."
msgstr ""
"Metode ``remove()`` dan ``clear()`` untuk pengelola terkait "
"``GenericForeignKey`` sekarang melakukan penghapusan dalam jumlah besar. "
"Metode ``Model.delete()`` tidak dipanggil di setiap instance lagi. Anda "
"dapat menggunakan argumen kata kunci ``bulk=False`` untuk kembali ke "
"perilaku sebelumnya."

msgid ""
"The ``remove()`` and ``clear()`` methods for ``ManyToManyField`` related "
"managers perform nested queries when filtering is involved, which may or may "
"not be an issue depending on your database and your data itself. See :ref:"
"`this note <nested-queries-performance>` for more details."
msgstr ""
"Metode ``remove()`` dan ``clear()`` untuk pengelola terkait "
"``ManyToManyField`` melakukan permintaan ketika penyaringan dilibatkan, yang "
"mungkin atau tidak menjadi sebuah masalah tergantung pada basisdata anda dan "
"data anda itu sendiri. Lihat :ref:`this note <nested-queries-performance>` "
"untuk rincian lebih."

msgid "Admin login redirection strategy"
msgstr "Siasat pengalihan masuk admin"

msgid ""
"Historically, the Django admin site passed the request from an unauthorized "
"or unauthenticated user directly to the login view, without HTTP "
"redirection. In Django 1.7, this behavior changed to conform to a more "
"traditional workflow where any unauthorized request to an admin page will be "
"redirected (by HTTP status code 302) to the login page, with the ``next`` "
"parameter set to the referring path. The user will be redirected there after "
"a successful login."
msgstr ""
"Secara riwayat, situs admin Django melewatkan permintaan dari sebuah "
"pengguna tidak terotorisasi dan tidak terautentifikasi secara langsun gke "
"tampilan masuk, tanpa pengalihan HTTP. Di Django 1.7, perilaku ini berukan "
"untuk memenuhi lebih alur kerja tradisional dimana permintaan tidak "
"terotorisasi pada halaman admin akan diarahkan (dengan kode keadaan HTTP "
"302) ke halaman masuk, dengan parameter ``next`` disetel ke jalur yang "
"diacukan. Pengguna akan dialihkan disana setelah berhasil masuk."

msgid ""
"Note also that the admin login form has been updated to not contain the "
"``this_is_the_login_form`` field (now unused) and the ``ValidationError`` "
"code has been set to the more regular ``invalid_login`` key."
msgstr ""
"Catat juga bahwa formulir masuk admin telah diperbaharui untuk tidak "
"mengandung bidang ``this_is_the_login_form`` (sekarang tidak berguna) dan "
"kode ``ValidationError`` telah dikirim ke lebih biasa kunci "
"``invalid_login`` "

msgid ""
"This change was made because such errors can be caused by including an app "
"which expects global transactions (e.g. :setting:`ATOMIC_REQUESTS <DATABASE-"
"ATOMIC_REQUESTS>` set to ``True``), or Django's old autocommit behavior, in "
"a project which runs without them; and further, such errors may manifest as "
"data-corruption bugs. It was also made in Django 1.6.3."
msgstr ""
"Perubahan ini telah dibuat karena kesalahan itu dapat disebabkan oleh "
"menyertakan sebuah aplikasi yang mengharapkan transaksi global (sebagai "
"contoh :setting:`ATOMIC_REQUESTS <DATABASE-ATOMIC_REQUESTS>` disetel menjadi "
"``True``), atau perilaku perbaikan otomatis lama Django, di sebuah proyek "
"yang berjalan tanpa mereka; dan lebih lanjut, kesalahan itu mungkin wujud "
"sebagai kesalahan kerusakan-data. Itu juga telah dibuat di Django 1.6.3."

msgid "Contrib middleware removed from default ``MIDDLEWARE_CLASSES``"
msgstr "Sumbangan middleware dipindahkan dari ``MIDDLEWARE_CLASSES`` awalan"

msgid ""
"The :ref:`app-loading refactor <app-loading-refactor-17-release-note>` "
"deprecated using models from apps which are not part of the :setting:"
"`INSTALLED_APPS` setting. This exposed an incompatibility between the "
"default :setting:`INSTALLED_APPS` and ``MIDDLEWARE_CLASSES`` in the global "
"defaults (``django.conf.global_settings``). To bring these settings in sync "
"and prevent deprecation warnings when doing things like testing reusable "
"apps with minimal settings, :class:`~django.contrib.sessions.middleware."
"SessionMiddleware`, :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware`, and :class:`~django.contrib.messages.middleware."
"MessageMiddleware` were removed from the defaults. These classes will still "
"be included in the default settings generated by :djadmin:`startproject`. "
"Most projects will not be affected by this change but if you were not "
"previously declaring the ``MIDDLEWARE_CLASSES`` in your project settings and "
"relying on the global default you should ensure that the new defaults are in "
"line with your project's needs. You should also check for any code that "
"accesses ``django.conf.global_settings.MIDDLEWARE_CLASSES`` directly."
msgstr ""
":ref:`app-loading refactor ` diusangkan menggunakan model dari aplikasi yang "
"bukan bagian dari pengaturan :setting:`INSTALLED_APPS`. Ini menunjukkan "
"sebuah ketidaksesuaian diantara :setting:`INSTALLED_APPS` awalan dan "
"``MIDDLEWARE_CLASSES`` awalan keseluruhan (``django.conf.global_settings``). "
"Untuk membawa pengaturan ini dalam sinkronisasi dan mencegah peringatan "
"pengusangan ketika melakukan hal-hal seperti menguji aplikasi digunakan "
"kembali dengan pengaturan minimal, :class:`~django.contrib.sessions."
"middleware.SessionMiddleware`, :class:`~django.contrib.auth.middleware."
"AuthenticationMiddleware`, dan :class:`~django.contrib.messages.middleware."
"MessageMiddleware` dipindahkan dari awalan. Kelas-kelas ini masih disertakan "
"dalam pengaturan awalan dibangkitkan oleh :djadmin:`startproject`. "
"Kebanyakan proyek tidak akan terpegnaruh oleh perubahan ini tetapi jika anda "
"tidak sebelumnya mnyatakan ``MIDDLEWARE_CLASSES`` dalam pengaturan proyek "
"anda dan bergantung pada awalan keseluruhan anda harus memastikan bawah "
"awalan baru sejalan dengan kebutuhan proyek anda. Anda harus juga memeriksa "
"untuk setiap kode yang mengakses ``django.conf.global_settings."
"MIDDLEWARE_CLASSES`` langsung."

msgid ""
"The :meth:`django.core.files.uploadhandler.FileUploadHandler.new_file()` "
"method is now passed an additional ``content_type_extra`` parameter. If you "
"have a custom :class:`~django.core.files.uploadhandler.FileUploadHandler` "
"that implements ``new_file()``, be sure it accepts this new parameter."
msgstr ""
"Metode :meth:`django.core.files.uploadhandler.FileUploadHandler.new_file()` "
"sekarang melewatkan sebuah parameter ``content_type_extra`` tambahan. Jika "
"anda mempunyai penyesuaian :class:`~django.core.files.uploadhandler."
"FileUploadHandler` yang menerapkan ``new_file()``, pastikan itu menerima "
"parameter baru ini."

msgid ""
":class:`ModelFormSet<django.forms.models.BaseModelFormSet>`\\s no longer "
"delete instances when ``save(commit=False)`` is called. See :attr:`~django."
"forms.formsets.BaseFormSet.can_delete` for instructions on how to manually "
"delete objects from deleted forms."
msgstr ""
":class:`ModelFormSet<django.forms.models.BaseModelFormSet>` tidak lagi "
"menghapus instance ketika ``save(commit=False)`` dipanggil. Lihat :attr:"
"`~django.forms.formsets.BaseFormSet.can_delete` untuk petunjuk pada "
"bagaimana secara manual menghapus obyek dari formulir dihapus."

msgid ""
"Loading empty fixtures emits a ``RuntimeWarning`` rather than raising :exc:"
"`~django.core.management.CommandError`."
msgstr ""
"Memuat alat bantu kosong memancarkan ``RuntimeWarning`` dari pada "
"memunculkan :exc:`~django.core.management.CommandError`."

msgid ""
":func:`django.contrib.staticfiles.views.serve` will now raise an :exc:"
"`~django.http.Http404` exception instead of :exc:`~django.core.exceptions."
"ImproperlyConfigured` when :setting:`DEBUG` is ``False``. This change "
"removes the need to conditionally add the view to your root URLconf, which "
"in turn makes it safe to reverse by name. It also removes the ability for "
"visitors to generate spurious HTTP 500 errors by requesting static files "
"that don't exist or haven't been collected yet."
msgstr ""
":func:`django.contrib.staticfiles.views.serve` akan sekarang memunculkan "
"sebuah pengecualian :exc:`~django.http.Http404` daripada :exc:`~django.core."
"exceptions.ImproperlyConfigured` ketika :setting:`DEBUG` adalah ``False``. "
"Perubahan ini memindahkan kebutuhkan untuk kondisional menambah tampilan ke "
"akar URLconf anda, yang pada gilirannya membuat itu aman untuk membalikkan "
"berdasarkan nama. Itu juga memindahkan kemampuan pengunjung untuk "
"membangkitkan kesalahan HTTP 500 palsu dengan meminta berkas tetap yang "
"tidak ada atau belum dikumpulkan."

msgid ""
"The :meth:`django.db.models.Model.__eq__` method is now defined in a way "
"where instances of a proxy model and its base model are considered equal "
"when primary keys match. Previously only instances of exact same class were "
"considered equal on primary key match."
msgstr ""
"Metode :meth:`django.db.models.Model.__eq__` sekarang ditentukan dengan cara "
"dimana instance dari model proxy dan model dasarnya dianggap setara ketika "
"primary key cocok. Sebelumnya hanya instance dari kelas sama yang tepat "
"dianggap setara di primary key cocok."

msgid ""
"The :meth:`django.db.models.Model.__eq__` method has changed such that two "
"``Model`` instances without primary key values won't be considered equal "
"(unless they are the same instance)."
msgstr ""
"Metode :meth:`django.db.models.Model.__eq__` telah berubah seperti instance "
"``Model`` dua itu tanpa nilai primar key tidak akan dianggap setara "
"(meskipun mereka adalah instance sama)."

msgid ""
"The :meth:`django.db.models.Model.__hash__` method will now raise "
"``TypeError`` when called on an instance without a primary key value. This "
"is done to avoid mutable ``__hash__`` values in containers."
msgstr ""
"Metode :meth:`django.db.models.Model.__hash__` sekarang akan menampilkan "
"``TypeError`` ketika dipanggil pada sebuah instance tanpa nilai primary key. "
"Ini dilakukan untuk menghindari nilai ``__hash__`` mungkin berubah dalam "
"penampungan."

msgid ""
":class:`~django.db.models.AutoField` columns in SQLite databases will now be "
"created using the ``AUTOINCREMENT`` option, which guarantees monotonic "
"increments. This will cause primary key numbering behavior to change on "
"SQLite, becoming consistent with most other SQL databases. This will only "
"apply to newly created tables. If you have a database created with an older "
"version of Django, you will need to migrate it to take advantage of this "
"feature. For example, you could do the following:"
msgstr ""
"Kolom :class:`~django.db.models.AutoField` di basisdata SQLite akan sekarang "
"dibuat selama pilihan ``AUTOINCREMENT``, yang menjamin penaikan monoton. Ini "
"akan menyebabkan perilaku penomoran primary key berubah di SQLite, menjadi "
"mantap selaras dengan kebanykan basisdata SQL lain. Ini akan hanya berlaku "
"pada tabel yang dibuat baru. Jika anda mempunyai sebuah basisdata dibuat "
"dengan versi terlama dari Django, anda akan butuh memindahkann itu untuk "
"mengambil keuntungan dari fitur ini. Sebagai contoh, anda dapat melakukan "
"berikut:"

msgid "Use :djadmin:`dumpdata` to save your data."
msgstr "Gunakan :djadmin:`dumpdata` untuk menyimpan data anda."

msgid "Rename the existing database file (keep it as a backup)."
msgstr "Namai kembali berkas basisdata yang ada (biarkan sebagai sokongan)."

msgid "Run :djadmin:`migrate` to create the updated schema."
msgstr "Jalankan :djadmin:`migrate` untuk membuat skema terperbaharui."

msgid "Use :djadmin:`loaddata` to import the fixtures you exported in (1)."
msgstr ""
"Gunakan :djadmin:`loaddata` untuk mengimpor perlengkapan anda ekspor dalam "
"(1)."

msgid ""
"``django.contrib.auth.models.AbstractUser`` no longer defines a :meth:"
"`~django.db.models.Model.get_absolute_url()` method. The old definition "
"returned  ``\"/users/%s/\" % urlquote(self.username)`` which was arbitrary "
"since applications may or may not define such a url in ``urlpatterns``. "
"Define a ``get_absolute_url()`` method on your own custom user object or "
"use :setting:`ABSOLUTE_URL_OVERRIDES` if you want a URL for your user."
msgstr ""
"``django.contrib.auth.models.AbstractUser`` tidak lagi menentukan sebuah "
"metode :meth:`~django.db.models.Model.get_absolute_url()`. Definisi lama "
"mengembalikan ``\"/users/%s/\" % urlquote(self.username)`` yang sebelumnya "
"berubah-rubah sejak aplikasi mungkin atau mungkin tidak ditentukan seperti "
"url di ``urlpatterns``. Tentukan sebuah metode ``get_absolute_url()`` pada "
"obyek pengguna penyesuaian anda sendiri atau menggunakan :setting:"
"`ABSOLUTE_URL_OVERRIDES` jika anda ingin URL untuk pengguna anda."

msgid ""
"The static asset-serving functionality of the :class:`django.test."
"LiveServerTestCase` class has been simplified: Now it's only able to serve "
"content already present in :setting:`STATIC_ROOT` when tests are run. The "
"ability to transparently serve all the static assets (similarly to what one "
"gets with :setting:`DEBUG = True <DEBUG>` at development-time) has been "
"moved to a new class that lives in the ``staticfiles`` application (the one "
"actually in charge of such feature): :class:`django.contrib.staticfiles."
"testing.StaticLiveServerTestCase`. In other words, ``LiveServerTestCase`` "
"itself is less powerful but at the same time has less magic."
msgstr ""
"Kegunaan melayani-aset tetap dari kelas :class:`django.test."
"LiveServerTestCase` telah disederhanakan: Sekarang itu hanya dapat melayani "
"isi sudah hadir di :setting:`STATIC_ROOT` ketika percobaan berjalan. "
"Kemampuan untuk secara transparan melayani semua aset tetap (mirip pada apa "
"satu dapatkan dengan :setting:`DEBUG = True <DEBUG>` pada waktu-"
"pengembangan) telah dipindahkan ke kelas baru yang tinggal di aplikasi "
"``staticfiles`` (satu yang sebenarnya bertanggung jawab dari fitur seperti "
"itu): :class:`django.contrib.staticfiles.testing.StaticLiveServerTestCase`. "
"Dengan kata lain, ``LiveServerTestCase`` itu sendiri kurang kuat tetapi pada "
"saat bersamaan mempunyai sedikit keajaiban."

msgid ""
"Rationale behind this is removal of dependency of non-contrib code on "
"contrib applications."
msgstr ""
"Alasan dibelakang perpindahan ini adalah ketergantungan dari kdoe bukan-"
"bantuan di aplikasi bantuan."

msgid ""
"The old cache URI syntax (e.g. ``\"locmem://\"``) is no longer supported. It "
"still worked, even though it was not documented or officially supported. If "
"you're still using it, please update to the current :setting:`CACHES` syntax."
msgstr ""
"Sintaksis URL cache lama (sebagai contoh ``\"locmem://\"``) tidak lagi "
"didukung. Itu masih bekerja, meskipun itu tidak didokumentasikan atau secara "
"resmi didukung. Jika anda masih menggunakan itu, harap memperbaharui "
"sintaksis :setting:`CACHES` saat ini."

msgid ""
"The default ordering of ``Form`` fields in case of inheritance has changed "
"to follow normal Python MRO. Fields are now discovered by iterating through "
"the MRO in reverse with the topmost class coming last. This only affects you "
"if you relied on the default field ordering while having fields defined on "
"both the current class *and* on a parent ``Form``."
msgstr ""
"Urutan awalan dari bidang ``Form`` dalam kasus dari warisan telah berubah "
"untuk mengikuti MRO Python biasa. Bidang-bidang sekarang ditemukan dengan "
"memutar melalui MRO di balikan dengan kelas paling atas datang terakhir. Ini "
"hanya berpengaruh jika anda bergantung pada urutan bidang awalan selagi "
"mempunyai bidang-bidang ditentukan pada kedua keadaan kelas 8dan* pada induk "
"``Form``."

msgid ""
"The ``required`` argument of :class:`~django.forms.SelectDateWidget` has "
"been removed. This widget now respects the form field's ``is_required`` "
"attribute like other widgets."
msgstr ""
"Argumen ``required`` dari :class:`~django.forms.SelectDateWidget` telah "
"dipindahkan. Widget ini sekarang menhormati atribut ``is_required`` bidang "
"formulir seperti widget-widget lain."

msgid ""
"``Widget.is_hidden`` is now a read-only property, getting its value by "
"introspecting the presence of ``input_type == 'hidden'``."
msgstr ""
"``Widget.is_hidden`` sekarang adalah sifat hanya-baca, mendapatkan nilainya "
"dengan menginterospeksi kehadiran dari ``input_type == 'hidden'``."

msgid ""
":meth:`~django.db.models.query.QuerySet.select_related` now chains in the "
"same way as other similar calls like ``prefetch_related``. That is, "
"``select_related('foo', 'bar')`` is equivalent to ``select_related('foo')."
"select_related('bar')``. Previously the latter would have been equivalent to "
"``select_related('bar')``."
msgstr ""
":meth:`~django.db.models.query.QuerySet.select_related` sekarang menambat di "
"cara sama seperti panggilan mirip lainnya seperti ``prefetch_related``. "
"Yaitu, ``select_related('foo', 'bar')`` setara pada ``select_related('foo')."
"select_related('bar')``. Sebelumnya yang terakhir akan setara pada "
"``select_related('bar')``."

msgid "GeoDjango dropped support for GEOS < 3.1."
msgstr "GeoDjango membuang dukungan untuk GEOS < 3.1."

msgid ""
"The ``init_connection_state`` method of database backends now executes in "
"autocommit mode (unless you set :setting:`AUTOCOMMIT <DATABASE-AUTOCOMMIT>` "
"to ``False``). If you maintain a custom database backend, you should check "
"that method."
msgstr ""
"Metode ``init_connection_state`` dari backend basisdata sekarang berjalan "
"dalam suasana pembetulan otomatis (meskipun anda menyetel :setting:"
"`AUTOCOMMIT <DATABASE-AUTOCOMMIT>` menjadi ``False``). Jika anda merawat "
"penyesuaian backend backend basisdata, anda harus memeriksa metode itu."

msgid ""
"The ``django.db.backends.BaseDatabaseFeatures.allows_primary_key_0`` "
"attribute has been renamed to ``allows_auto_pk_0`` to better describe it. "
"It's ``True`` for all database backends included with Django except MySQL "
"which does allow primary keys with value 0. It only forbids *autoincrement* "
"primary keys with value 0."
msgstr ""
"Atribut ``django.db.backends.BaseDatabaseFeatures.allows_primary_key_0`` "
"telah dinamai menjadi ``allows_auto_pk_0``untuk menggambarkan itu lebih "
"baik. Itu adalah ``True`` untuk semua backend basisdata termasuk dengan "
"Django kecuali MySQL yang mengizinkan primary key dengan nilai 0. Itu hanya "
"melarang primary key *autoincrement* dengan nilai 0."

msgid ""
"Shadowing model fields defined in a parent model has been forbidden as this "
"creates ambiguity in the expected model behavior. In addition, clashing "
"fields in the model inheritance hierarchy result in a system check error. "
"For example, if you use multi-inheritance, you need to define custom primary "
"key fields on parent models, otherwise the default ``id`` fields will clash. "
"See :ref:`model-multiple-inheritance-topic` for details."
msgstr ""
"Pembayangan bidang-bidang model ditentukan di model induk telah dilarang "
"ketika ini membuat kebingungan dalam perilaku model yang diharapkan. Sebagai "
"tambahan, bidang-bidang yang bertabrakan di hasil susunan model warisan "
"dalam sistem pemeriksaan kesalahan. Sebagai contoh, jika butuh anda "
"menggunakan banyak-warisan, anda butuh menentukan penyesuaian bidang-bidang "
"primary key pada model induk, jika tidak bidang ``id`` awalan akan "
"bertabrakan. Lihat :ref:`model-multiple-inheritance-topic` untuk rincian."

msgid ""
"``django.utils.translation.parse_accept_lang_header()`` now returns "
"lowercase locales, instead of the case as it was provided. As locales should "
"be treated case-insensitive this allows us to speed up locale detection."
msgstr ""
"``django.utils.translation.parse_accept_lang_header()`` sekarang "
"mengembalikan lokal huruf kecil, sebagai ganti dari kasus ketika itu "
"disediakan. Sebagai lokal harus di perlakukan tidak sensitif-kasus ini "
"mengizinkan kamu mempercepat penemuan lokal."

msgid ""
"``django.utils.translation.get_language_from_path()`` and ``django.utils."
"translation.trans_real.get_supported_language_variant()`` now no longer have "
"a ``supported`` argument."
msgstr ""
"``django.utils.translation.get_language_from_path()`` dan ``django.utils."
"translation.trans_real.get_supported_language_variant()`` sekarang tidak "
"lagi mempunyai argumen ``supported``."

msgid ""
"The ``shortcut`` view in ``django.contrib.contenttypes.views`` now supports "
"protocol-relative URLs (e.g. ``//example.com``)."
msgstr ""
"Tampilan ``shortcut`` dalam ``django.contrib.contenttypes.views`` sekarang "
"mendukung protocol-relative URL (sebagai contoh ``//example.com``)."

msgid ""
":class:`~django.contrib.contenttypes.fields.GenericRelation` now supports an "
"optional ``related_query_name`` argument. Setting ``related_query_name`` "
"adds a relation from the related object back to the content type for "
"filtering, ordering and other query operations."
msgstr ""
":class:`~django.contrib.contenttypes.fields.GenericRelation` sekarang "
"mendukung sebuah pilihan argumen ``related_query_name``. Pengaturan "
"``related_query_name`` menambahkan sebuah hubungan dari obyek terkait "
"kebelakang pada jenis isi untuk penyaringan, pengurutan dan tindakan "
"permintaan lain."

msgid ""
"When running tests on PostgreSQL, the :setting:`USER` will need read access "
"to the built-in ``postgres`` database. This is in lieu of the previous "
"behavior of connecting to the actual non-test database."
msgstr ""
"Ketika menjalankan percobaan pada PostgreSQL, :setting:`USER` akan butuh "
"membaca akses pada basisdata ``postgres`` siap-pakai. Ini adalah daripada "
"perilaku sebelumnya dari menghubungkan ke basisdata bukan-percobaan "
"sebenarnya."

msgid ""
"As part of the :doc:`System check framework </ref/checks>`, :ref:`fields, "
"models, and model managers <field-checking>` all implement a ``check()`` "
"method that is registered with the check framework. If you have an existing "
"method called ``check()`` on one of these objects, you will need to rename "
"it."
msgstr ""
"Sebagai bagian dari :doc:`System check framework </ref/checks>`, :ref:"
"`fields, models, and model managers <field-checking>` semua menerapkan "
"sebuah metode ``check()`` yang terdaftar dengan pemeriksaan kerangka. Jika "
"anda mempunyai sebuah metode yang ada memanggil ``check()`` pada satu dari "
"obyek ini, anda akan butuh menamai kembalinya."

msgid ""
"As noted above in the \"Cache\" section of \"Minor Features\", defining the :"
"setting:`TIMEOUT <CACHES-TIMEOUT>` argument of the :setting:`CACHES` setting "
"as ``None`` will set the cache keys as \"non-expiring\". Previously, with "
"the memcache backend, a :setting:`TIMEOUT <CACHES-TIMEOUT>` of ``0`` would "
"set non-expiring keys, but this was inconsistent with the set-and-expire (i."
"e. no caching) behavior of ``set(\"key\", \"value\", timeout=0)``. If you "
"want non-expiring keys, please update your settings to use ``None`` instead "
"of ``0`` as the latter now designates set-and-expire in the settings as well."
msgstr ""
"Seperti dicatat diatas di bagian \"Cache\" dari \"Minor Features\", "
"menentukan argumen :setting:`TIMEOUT <CACHES-TIMEOUT>` dari pengaturan :"
"setting:`CACHES` sebagai ``None`` akan menyetel kunci cache sebagai \"non-"
"expiring\". Sebelumnya, dengan backend memcache, sebuah :setting:`TIMEOUT "
"<CACHES-TIMEOUT>` dari ``0`` akan menyetel kunci tidak-kadaluarsa, tetapi "
"ini tidak tetap dengan setel-dan-kadaluarsa (yaitu tidak ada penyimpanan "
"sementara) perilaku dari ``set(\"key\", \"value\", timeout=0)``. Jika anda "
"ingin kuncu tidak-kadaluarsa, harap memperbaharui pengaturan anda untuk "
"menggunakan ``None`` daripada ``0`` sebagai yang terakhir sekarang menunjuk "
"setel-dan-kadaluarsa di pengaturan juga."

msgid ""
"The ``sql*`` management commands now respect the ``allow_migrate()`` method "
"of :setting:`DATABASE_ROUTERS`. If you have models synced to non-default "
"databases, use the ``--database`` flag to get SQL for those models "
"(previously they would always be included in the output)."
msgstr ""
"Perintah pengelolaan ``sql*`` sekarang menghormati metode "
"``allow_migrate()`` dari :setting:`DATABASE_ROUTERS`. Jika anda mempunyai "
"model disamakan pada basisdata bukan-awalan, gunakan bendera ``--database`` "
"untuk mendapatkan SQL untuk model tersebut (sebelumnya mereka akan selalu "
"disertakan dalam keluaran)."

msgid ""
"Decoding the query string from URLs now falls back to the ISO-8859-1 "
"encoding when the input is not valid UTF-8."
msgstr ""
"Membaca permintaan string dari URL sekarang jatuh kembali ke penyandian "
"ISO-8859-1 ketika masukan bukan YTF-8 yang sah."

msgid ""
"With the addition of the ``django.contrib.auth.middleware."
"SessionAuthenticationMiddleware`` to the default project template (pre-1.7.2 "
"only), a database must be created before accessing a page using :djadmin:"
"`runserver`."
msgstr ""
"Dengan tambahan dari ``django.contrib.auth.middleware."
"SessionAuthenticationMiddleware`` ke cetakan proyek awalan (hanya "
"pra-1.7.2), sebuah basisdata harus dibuat sebelum mengakses sebuah halaman "
"menggunakan :djadmin:`runserver`."

msgid ""
"The addition of the ``schemes`` argument to ``URLValidator`` will appear as "
"a backwards-incompatible change if you were previously using a custom "
"regular expression to validate schemes. Any scheme not listed in ``schemes`` "
"will fail validation, even if the regular expression matches the given URL."
msgstr ""
"Tambahan dari argumen ``schemes`` pada ``URLValidator`` akan muncul sebagai "
"ketidaksesuaian-kebelakang berubah jika anda sebelumnya menggunakan "
"penyesuaian regular expression untuk mensahkan skema. Setiap skema tidak "
"terdaftar di ``schemes`` akan gagal disahkan, bahkan jika regular expression "
"cocok di URL yang diberikan."

msgid "Features deprecated in 1.7"
msgstr "Fitur usang di 1.7"

msgid "``django.core.cache.get_cache``"
msgstr "``django.core.cache.get_cache``"

msgid ""
"``django.core.cache.get_cache`` has been supplanted by :data:`django.core."
"cache.caches`."
msgstr ""
"``django.core.cache.get_cache`` telah digantikan oleh :data:`django.core."
"cache.caches`."

msgid "``django.utils.dictconfig``/``django.utils.importlib``"
msgstr "``django.utils.dictconfig``/``django.utils.importlib``"

msgid ""
"``django.utils.dictconfig`` and ``django.utils.importlib`` were copies of "
"respectively :mod:`logging.config` and :mod:`importlib` provided for Python "
"versions prior to 2.7. They have been deprecated."
msgstr ""
"``django.utils.dictconfig`` dan ``django.utils.importlib`` telah disalin "
"masing-masing :mod:`logging.config` dan :mod:`importlib` disediakan untuk "
"Python versi sebelum 2.7. Mereka telah diusangkan."

msgid "``django.utils.module_loading.import_by_path``"
msgstr "``django.utils.module_loading.import_by_path``"

msgid ""
"The current ``django.utils.module_loading.import_by_path`` function catches "
"``AttributeError``, ``ImportError``, and ``ValueError`` exceptions, and re-"
"raises :exc:`~django.core.exceptions.ImproperlyConfigured`. Such exception "
"masking makes it needlessly hard to diagnose circular import problems, "
"because it makes it look like the problem comes from inside Django. It has "
"been deprecated in favor of :meth:`~django.utils.module_loading."
"import_string`."
msgstr ""
"Fungsi ``django.utils.module_loading.import_by_path`` saat ini menangkap "
"pengecualian ``AttributeError``, ``ImportError``, dan ``ValueError``, dan "
"memunculkan kembali :exc:`~django.core.exceptions.ImproperlyConfigured`. "
"Penutupan pengecualian tersebut membuat itu sia-sia keras untuk mengenal "
"lingkaran masalah import, karena itu membuat itu seperti masalah datang dari "
"dalam Django. Itu telah diusangkan dalam mendukung :meth:`~django.utils."
"module_loading.import_string`."

msgid "``django.utils.tzinfo``"
msgstr "``django.utils.tzinfo``"

msgid ""
"``django.utils.tzinfo`` provided two :class:`~datetime.tzinfo` subclasses, "
"``LocalTimezone`` and ``FixedOffset``. They've been deprecated in favor of "
"more correct alternatives provided by :mod:`django.utils.timezone`, :func:"
"`django.utils.timezone.get_default_timezone` and :func:`django.utils."
"timezone.get_fixed_timezone`."
msgstr ""
"``django.utils.tzinfo`` menyediakan dua :class:`~datetime.tzinfo` "
"subclasses, ``LocalTimezone`` dan ``FixedOffset``. Mereka telah diusangkan "
"dalam mendukung lebih jalan lain yang benar disediakan oleh :mod:`django."
"utils.timezone`, :func:`django.utils.timezone.get_default_timezone` dan :"
"func:`django.utils.timezone.get_fixed_timezone`."

msgid "``django.utils.unittest``"
msgstr "``django.utils.unittest``"

msgid ""
"``django.utils.unittest`` provided uniform access to the ``unittest2`` "
"library on all Python versions. Since ``unittest2`` became the standard "
"library's :mod:`unittest` module in Python 2.7, and Django 1.7 drops support "
"for older Python versions, this module isn't useful anymore. It has been "
"deprecated. Use :mod:`unittest` instead."
msgstr ""
"``django.utils.unittest`` menyediakan akses seragam akses ke pustaka "
"``unittest2`` di semua versi Python. Sejak ``unittest2`` menjadi modul :mod:"
"`unittest` pustaka standar di Python 2.7, dan Django 1.7 menjatuhkan "
"dukungan untuk versi Python terlama, modul ini tidak berguna lagi. itu telah "
"diusangkan. Gunakan :mod:`unittest` sebagai gantinya."

msgid "``django.utils.datastructures.SortedDict``"
msgstr "``django.utils.datastructures.SortedDict``"

msgid ""
"As :class:`~collections.OrderedDict` was added to the standard library in "
"Python 2.7, ``SortedDict`` is no longer needed and has been deprecated."
msgstr ""
"Ketika :class:`~collections.OrderedDict` telah ditambahkan ke pustaka "
"standar di Python 2.7, ``SortedDict`` tidak lagi dibutuhkan dan telah "
"diusangkan."

msgid ""
"The two additional, deprecated methods provided by ``SortedDict`` "
"(``insert()`` and ``value_for_index()``) have been removed. If you relied on "
"these methods to alter structures like form fields, you should now treat "
"these ``OrderedDict``\\s as immutable objects and override them to change "
"their content."
msgstr ""
"Dua tambahan, metode diusangkan disediakan oleh ``SortedDict`` (``insert()`` "
"dan ``value_for_index()``) telah dipindahkan. Jika anda bergantung pada "
"metode ini untuk merubah struktur bidang formulir seperti, anda harus "
"sekarang memperlakukan ``OrderedDict`` sebagai obyek kekal dan menimpa "
"mereka untuk merubah isi mereka."

msgid ""
"For example, you might want to override ``MyFormClass.base_fields`` "
"(although this attribute isn't considered a public API) to change the "
"ordering of fields for all ``MyFormClass`` instances; or similarly, you "
"could override ``self.fields`` from inside ``MyFormClass.__init__()``, to "
"change the fields for a particular form instance. For example (from Django "
"itself)::"
msgstr ""
"Sebagai contoh, anda mungkin ingin menimpa ``MyFormClass.base_fields`` "
"(meskipun atribut ini tidak dianggap API umum) untuk merubah urutan dari "
"bidang untuk semua instance ``MyFormClass``; atau sama halnya, anda dapat "
"mengesampingkan ``self.fields`` dari dalam ``MyFormClass.__init__()``, untuk "
"merubah bidang-bidang untuk instance formulir tertentu. Sebagai contoh (dari "
"Django itu sendiri)::"

msgid "Custom SQL location for models package"
msgstr "Penyesuaian tempat SQL untuk paket model"

msgid ""
"Previously, if models were organized in a package (``myapp/models/``) rather "
"than simply ``myapp/models.py``, Django would look for initial SQL data in "
"``myapp/models/sql/``. This bug has been fixed so that Django will search "
"``myapp/sql/`` as documented. After this issue was fixed, migrations were "
"added which deprecates initial SQL data. Thus, while this change still "
"exists, the deprecation is irrelevant as the entire feature will be removed "
"in Django 1.9."
msgstr ""
"Sebelumnya, jika model diatur dalam paket (``myapp/models/``) daripada hanya "
"``myapp/models.py``, Django akan mencari inisial data SQL di ``myapp/models/"
"sql/``. Kesalahan ini telah diperbaiki sehingga Django akan mencari ``myapp/"
"sql/`` seperti yang didokumentasikan. Setelah masalah ini telah diperbaiki, "
"perpindahan ditambahkan dimana pengusangan inisial data SQL. Demikian, "
"selagi perubahan ini masih ada, pengusangan tidak bersangkut paut sebagai "
"fitur keseluruhan akan dipindahkan di Django 1.9."

msgid "Reorganization of ``django.contrib.sites``"
msgstr "Reorganisasi dari ``django.contrib.sites``"

msgid ""
"``django.contrib.sites`` provides reduced functionality when it isn't in :"
"setting:`INSTALLED_APPS`. The app-loading refactor adds some constraints in "
"that situation. As a consequence, two objects were moved, and the old "
"locations are deprecated:"
msgstr ""
"``django.contrib.sites`` menyediakan pengurangan kegunaan ketika itu tidak "
"di :setting:`INSTALLED_APPS`. Refaktor memuat-aplikasi menambahkan beberapa "
"batasan di keadaan tersebut. Sebagai akibatnya, dua obyek dipindah, dan "
"tempat lama diusangkan:"

msgid ""
":class:`~django.contrib.sites.requests.RequestSite` now lives in ``django."
"contrib.sites.requests``."
msgstr ""
":class:`~django.contrib.sites.requests.RequestSite` sekarang berada di "
"``django.contrib.sites.requests``."

msgid ""
":func:`~django.contrib.sites.shortcuts.get_current_site` now lives in "
"``django.contrib.sites.shortcuts``."
msgstr ""
":func:`~django.contrib.sites.shortcuts.get_current_site` sekarang berada di "
"``django.contrib.sites.shortcuts``."

msgid "``declared_fieldsets`` attribute on ``ModelAdmin``"
msgstr "Atribut ``declared_fieldsets`` pada ``ModelAdmin``"

msgid ""
"``ModelAdmin.declared_fieldsets`` has been deprecated. Despite being a "
"private API, it will go through a regular deprecation path. This attribute "
"was mostly used by methods that bypassed ``ModelAdmin.get_fieldsets()`` but "
"this was considered a bug and has been addressed."
msgstr ""
"``ModelAdmin.declared_fieldsets`` telah diusangkan. Meskipun menjadi sebuah "
"API pribadi, itu akan melalui jalur pengusangan biasa. Atribut ini "
"kebanyakan digunakan oleh metode yang meloloskan ``ModelAdmin."
"get_fieldsets()`` tetapi ini telah dianggap sebuah kesalahan dan telah "
"dialamatkan. "

msgid "Reorganization of ``django.contrib.contenttypes``"
msgstr "Reorganisasi dari ``django.contrib.contenttypes``"

msgid ""
"Since ``django.contrib.contenttypes.generic`` defined both admin and model "
"related objects, an import of this module could trigger unexpected side "
"effects. As a consequence, its contents were split into :mod:`~django."
"contrib.contenttypes` submodules and the ``django.contrib.contenttypes."
"generic`` module is deprecated:"
msgstr ""
"Sejak ``django.contrib.contenttypes.generic`` menentukan kedua admin dan "
"obyek terkait model, sebuah impor dari modul ini dapat memicu efek samping "
"yang tidak diharapkan. Sebagai sebuah konsekuensi, isinya dipisah menjadi "
"submodul :mod:`~django.contrib.contenttypes` dan modul ``django.contrib."
"contenttypes.generic`` diusangkan."

msgid ""
":class:`~django.contrib.contenttypes.fields.GenericForeignKey` and :class:"
"`~django.contrib.contenttypes.fields.GenericRelation` now live in :mod:"
"`~django.contrib.contenttypes.fields`."
msgstr ""
":class:`~django.contrib.contenttypes.fields.GenericForeignKey` dan :class:"
"`~django.contrib.contenttypes.fields.GenericRelation` sekarang berada di :"
"mod:`~django.contrib.contenttypes.fields`."

msgid ""
":class:`~django.contrib.contenttypes.forms.BaseGenericInlineFormSet` and :"
"func:`~django.contrib.contenttypes.forms.generic_inlineformset_factory` now "
"live in :mod:`~django.contrib.contenttypes.forms`."
msgstr ""
":class:`~django.contrib.contenttypes.forms.BaseGenericInlineFormSet` dan :"
"func:`~django.contrib.contenttypes.forms.generic_inlineformset_factory` "
"sekarang berada di :mod:`~django.contrib.contenttypes.forms`."

msgid ""
":class:`~django.contrib.contenttypes.admin.GenericInlineModelAdmin`, :class:"
"`~django.contrib.contenttypes.admin.GenericStackedInline` and :class:"
"`~django.contrib.contenttypes.admin.GenericTabularInline` now live in :mod:"
"`~django.contrib.contenttypes.admin`."
msgstr ""
":class:`~django.contrib.contenttypes.admin.GenericInlineModelAdmin`, :class:"
"`~django.contrib.contenttypes.admin.GenericStackedInline` dan :class:"
"`~django.contrib.contenttypes.admin.GenericTabularInline` sekarang berada "
"di :mod:`~django.contrib.contenttypes.admin`."

msgid "``syncdb``"
msgstr "``syncdb``"

msgid ""
"The ``syncdb`` command has been deprecated in favor of the new :djadmin:"
"`migrate` command. ``migrate`` takes the same arguments as ``syncdb`` used "
"to plus a few more, so it's safe to just change the name you're calling and "
"nothing else."
msgstr ""
"Perintah ``syncdb`` telah diusangkan dalam mendukung dari perintah :djadmin:"
"`migrate` baru. ``migrate`` mengambil argumen sama sebagai ``syncdb`` "
"digunakan untuk menambah sedikit lagi, jadi itu aman untuk hanya merubah "
"nama anda sedang panggil dan tidak ada lagi."

msgid "``util`` modules renamed to ``utils``"
msgstr "Modul ``util`` dinamai kembali menjadi ``utils``"

msgid ""
"The following instances of ``util.py`` in the Django codebase have been "
"renamed to ``utils.py`` in an effort to unify all util and utils references:"
msgstr ""
"Instance berikut dari ``util.py`` di kode dasar Django telah dinamai kembali "
"menjadi ``utils.py`` di sebuah usaha untuk menyatukan semua acuan util dan "
"utils:"

msgid "``django.contrib.admin.util``"
msgstr "``django.contrib.admin.util``"

msgid "``django.contrib.gis.db.backends.util``"
msgstr "``django.contrib.gis.db.backends.util``"

msgid "``django.db.backends.util``"
msgstr "``django.db.backends.util``"

msgid "``django.forms.util``"
msgstr "``django.forms.util``"

msgid "``get_formsets`` method on ``ModelAdmin``"
msgstr "Metode ``get_formsets`` pada ``ModelAdmin``"

msgid ""
"``ModelAdmin.get_formsets`` has been deprecated in favor of the new :meth:"
"`~django.contrib.admin.ModelAdmin.get_formsets_with_inlines`, in order to "
"better handle the case of selectively showing inlines on a ``ModelAdmin``."
msgstr ""
"``ModelAdmin.get_formsets`` telah diusangkan mendukung dari :meth:`~django."
"contrib.admin.ModelAdmin.get_formsets_with_inlines` baru, agar menjadi lebih "
"baik menangani kasus dari memilih menampilkan berderet pada ``ModelAdmin``."

msgid ""
"The ``django.db.models.IPAddressField`` and ``django.forms.IPAddressField`` "
"fields have been deprecated in favor of :class:`django.db.models."
"GenericIPAddressField` and :class:`django.forms.GenericIPAddressField`."
msgstr ""
"Bidang ``django.db.models.IPAddressField`` dan ``django.forms."
"IPAddressField`` telah diusangkan dalam mendukung :class:`django.db.models."
"GenericIPAddressField` dan :class:`django.forms.GenericIPAddressField`."

msgid "``BaseMemcachedCache._get_memcache_timeout`` method"
msgstr "Metode ``BaseMemcachedCache._get_memcache_timeout``"

msgid ""
"The ``BaseMemcachedCache._get_memcache_timeout()`` method has been renamed "
"to ``get_backend_timeout()``. Despite being a private API, it will go "
"through the normal deprecation."
msgstr ""
"Metode ``BaseMemcachedCache._get_memcache_timeout()`` telah dinamai kembali "
"menjadi ``get_backend_timeout()``. Meskipun menjadi sebuah API pribadi, itu "
"akan melalui pengusangan biasa."

msgid "Natural key serialization options"
msgstr "Pilihan serialisasi kunci alami"

msgid ""
"The ``--natural`` and ``-n`` options for :djadmin:`dumpdata` have been "
"deprecated. Use :option:`dumpdata --natural-foreign` instead."
msgstr ""
"Pilihan ``--natural`` dan ``-n`` untuk :djadmin:`dumpdata` telah diusangkan. "
"Gunakan :option:`dumpdata --natural-foreign` sebagai gantinya."

msgid ""
"Similarly, the ``use_natural_keys`` argument for ``serializers.serialize()`` "
"has been deprecated. Use ``use_natural_foreign_keys`` instead."
msgstr ""
"Demikian pula, argumen ``use_natural_keys`` untuk ``serializers."
"serialize()`` telah diusangkan. Gunakan ``use_natural_foreign_keys`` sebagai "
"gantinya."

msgid "Merging of ``POST`` and ``GET`` arguments into ``WSGIRequest.REQUEST``"
msgstr ""
"Menggabungkan argumen ``POST`` dan ``GET`` kedalam ``WSGIRequest.REQUEST``"

msgid ""
"It was already strongly suggested that you use ``GET`` and ``POST`` instead "
"of ``REQUEST``, because the former are more explicit. The property "
"``REQUEST`` is deprecated and will be removed in Django 1.9."
msgstr ""
"Itu sudah sangat dianjurkan bahwa anda menggunakan  ``GET`` dan ``POST`` "
"daripada ``REQUEST``, karena yang terlebih dahulu lebih eksplisit. Sifat "
"``REQUEST`` diusangkan dan akan dipindahkan di Django 1.9."

msgid "``django.utils.datastructures.MergeDict`` class"
msgstr "Kelas ``django.utils.datastructures.MergeDict``"

msgid ""
"``MergeDict`` exists primarily to support merging ``POST`` and ``GET`` "
"arguments into a ``REQUEST`` property on ``WSGIRequest``. To merge "
"dictionaries, use ``dict.update()`` instead. The class ``MergeDict`` is "
"deprecated and will be removed in Django 1.9."
msgstr ""
"``MergeDict`` ada utamanya untuk mendukung penggabungan argumen ``POST`` dan "
"``GET`` kedalam sebuah sifat ``REQUEST`` pada ``WSGIRequest``. Untuk "
"menggabungkan kamus, gunakan ``dict.update()`` sebagai gantinya. Kelas "
"``MergeDict`` diusangkan dan akan dipindahkan di Django 1.9."

msgid "Language codes ``zh-cn``, ``zh-tw`` and ``fy-nl``"
msgstr "Kode bahasa ``zh-cn``, ``zh-tw`` dan ``fy-nl``"

msgid ""
"The currently used language codes for Simplified Chinese ``zh-cn``, "
"Traditional Chinese ``zh-tw`` and (Western) Frysian ``fy-nl`` are deprecated "
"and should be replaced by the language codes ``zh-hans``, ``zh-hant`` and "
"``fy`` respectively. If you use these language codes, you should rename the "
"locale directories and update your settings to reflect these changes. The "
"deprecated language codes will be removed in Django 1.9."
msgstr ""
"Kode bahasa digunakan saat ini untuk China Disederhanakan ``zh-cn``, China "
"Tradisional ``zh-tw`` dan (Barat) Frysian ``fy-nl`` diusangkan dan harus "
"diganti dengan kode bahasa ``zh-hans``, ``zh-hant`` and ``fy`` masing-"
"masing. Jika anda menggunakan kode bahasa ini, anda harus menamai kembali "
"direktori lokal dan memperbaharui pengaturan anda untuk mencerminkan "
"perubahan ini. Kode bahasa pengusangan akan diindahkan di Django 1.9."

msgid "``django.utils.functional.memoize`` function"
msgstr "Fungsi ``django.utils.functional.memoize``"

msgid ""
"The function ``memoize`` is deprecated and should be replaced by the "
"``functools.lru_cache`` decorator (available from Python 3.2 onward)."
msgstr ""

msgid ""
"Django ships a backport of this decorator for older Python versions and it's "
"available at ``django.utils.lru_cache.lru_cache``. The deprecated function "
"will be removed in Django 1.9."
msgstr ""
"Django membekali sebuah backport dari penghias ini untuk versi Python lebih "
"lama dan itu tersedia di ``django.utils.lru_cache.lru_cache``. Fungsi "
"diusangkan akan dipindahkan di Django 1.9."

msgid "Geo Sitemaps"
msgstr "Peta situs Geo"

msgid ""
"Google has retired support for the Geo Sitemaps format. Hence Django support "
"for Geo Sitemaps is deprecated and will be removed in Django 1.8."
msgstr ""
"Google telah berhenti mendukung untuk bentuk Geo Sitemap. Oleh karena itu "
"Django mendukung untuk Geo Sitemap diusangkan dan akan dipindahkan di Django "
"1.8."

msgid "Passing callable arguments to queryset methods"
msgstr "Melewatkan argumen dapat dipanggul pada metode queryset"

msgid ""
"Callable arguments for querysets were an undocumented feature that was "
"unreliable. It's been deprecated and will be removed in Django 1.9."
msgstr ""
"Argumen dapat dipanggil untuk queryset adalah sebuah fitur yang tidak "
"didokumentasikan yang telah tidak handal. Itu telah diusangkan dan akan "
"dipindahkan di Django 1.9."

msgid ""
"Callable arguments were evaluated when a queryset was constructed rather "
"than when it was evaluated, thus this feature didn't offer any benefit "
"compared to evaluating arguments before passing them to queryset and created "
"confusion that the arguments may have been evaluated at query time."
msgstr ""
"Argumen dapat dipanggil telah dinilai ketika queryset telah dibangun "
"daripada ketika itu telah dinilai, dengan demikian fitur ini tidak "
"menawarkan keuntungan apapun dibandingkan pada menilai argumen sebelum "
"melewatkan mereka ke queryset dan membuat kebingungan bahwa argumen mungkin "
"telah dinilai pada waktu permintaan."

msgid "``ADMIN_FOR`` setting"
msgstr "Pengaturan ``ADMIN_FOR``"

msgid ""
"The ``ADMIN_FOR`` feature, part of the admindocs, has been removed. You can "
"remove the setting from your configuration at your convenience."
msgstr ""
"Fitur ``ADMIN_FOR``, bagian dari admindoc, telah dipindahkan. Anda dapat "
"memindahkan pengaturan untuk konfigurasi anda pada kenyamanan anda."

msgid "``SplitDateTimeWidget`` with ``DateTimeField``"
msgstr "``SplitDateTimeWidget`` dengan ``DateTimeField``"

msgid ""
"``SplitDateTimeWidget`` support in :class:`~django.forms.DateTimeField` is "
"deprecated, use ``SplitDateTimeWidget`` with :class:`~django.forms."
"SplitDateTimeField` instead."
msgstr ""
"Dukungan ``SplitDateTimeWidget`` di :class:`~django.forms.DateTimeField` "
"diusangkan, gunakan ``SplitDateTimeWidget`` dengan :class:`~django.forms."
"SplitDateTimeField` sebagai gantinya."

msgid "``validate``"
msgstr "``validate``"

msgid ""
"The ``validate`` management command is deprecated in favor of the :djadmin:"
"`check` command."
msgstr ""
"Perintah pengelolaan ``validate`` diusangkan dalam mendukung dari perintah :"
"djadmin:`check`."

msgid "``django.core.management.BaseCommand``"
msgstr "``django.core.management.BaseCommand``"

msgid ""
"``requires_model_validation`` is deprecated in favor of a new "
"``requires_system_checks`` flag. If the latter flag is missing, then the "
"value of the former flag is used. Defining both ``requires_system_checks`` "
"and ``requires_model_validation`` results in an error."
msgstr ""
"``requires_model_validation`` diusangkan dalam mendukung dari bendera "
"``requires_system_checks`` baru. Jika bendera terakhir hilang, kemudian "
"nilai dari bendera awal digunakan. Menentukan kedua hasil "
"``requires_system_checks`` dan``requires_model_validation`` di kesalahan."

msgid "The ``check()`` method has replaced the old ``validate()`` method."
msgstr "Cara ``check()`` telah mengganti cara `validate()``."

msgid "``ModelAdmin`` validators"
msgstr "Pengesah ``ModelAdmin``"

msgid ""
"The ``ModelAdmin.validator_class`` and ``default_validator_class`` "
"attributes are deprecated in favor of the new ``checks_class`` attribute."
msgstr ""
"Atribut ``ModelAdmin.validator_class`` dan ``default_validator_class`` "
"diusangkan dalam mendukung atribut ``checks_class`` baru."

msgid ""
"The ``ModelAdmin.validate()`` method is deprecated in favor of ``ModelAdmin."
"check()``."
msgstr ""
"Cara ``ModelAdmin.validate()`` diusangkan mendukung ``ModelAdmin.check()``."

msgid "The ``django.contrib.admin.validation`` module is deprecated."
msgstr "Modul ``django.contrib.admin.validation`` diusangkan."

msgid "``django.db.backends.DatabaseValidation.validate_field``"
msgstr "``django.db.backends.DatabaseValidation.validate_field``"

msgid ""
"This method is deprecated in favor of a new ``check_field`` method. The "
"functionality required by ``check_field()`` is the same as that provided by "
"``validate_field()``, but the output format is different. Third-party "
"database backends needing this functionality should provide an "
"implementation of ``check_field()``."
msgstr ""
"Metode ini diusangkan dalam mendukung dari cara ``check_field`` baru. "
"Kegunaan dibutuhkan oleh ``check_field()`` adalah sama seperti yang "
"disediakan oleh ``validate_field()``, tetapi bentuk keluaran adalah berbeda. "
"Backend basisdata pihak-ketiga membutuhkan kegunaan ini harus menyediakan "
"sebuah penerapan dari ``check_field()``."

msgid "Loading ``ssi`` and ``url`` template tags from ``future`` library"
msgstr "Memuat etiket cetakan ``ssi`` dan ``url`` dari pustaka ``future``"

msgid ""
"Django 1.3 introduced ``{% load ssi from future %}`` and ``{% load url from "
"future %}`` syntax for forward compatibility of the ``ssi`` and :ttag:`url` "
"template tags. This syntax is now deprecated and will be removed in Django "
"1.9. You can simply remove the ``{% load ... from future %}`` tags."
msgstr ""
"Django 1.3 memperkenalkan sintaksis ``{% load ssi from future %}`` and ``{% "
"load url from future %}`` untuk kesesuaian kedepan dari etiket cetakan "
"``ssi`` dan :ttag:`url`. Sintaksis ini sekarang diusangkan dan akan "
"dipindahkan di Django 1.9. Anda dapat dengan mudah memindahkan etiket ``{% "
"load ... from future %}``. "

msgid "``django.utils.text.javascript_quote``"
msgstr "``django.utils.text.javascript_quote``"

msgid ""
"``javascript_quote()`` was an undocumented function present in ``django."
"utils.text``. It was used internally in the ``javascript_catalog()`` view "
"whose implementation was changed to make use of ``json.dumps()`` instead. If "
"you were relying on this function to provide safe output from untrusted "
"strings, you should use ``django.utils.html.escapejs`` or the :tfilter:"
"`escapejs` template filter. If all you need is to generate valid JavaScript "
"strings, you can simply use ``json.dumps()``."
msgstr ""
"``javascript_quote()`` adalah fungsi tidak didokumentasikan hadir di "
"``django.utils.text``. Itu digunakan secara internal di "
"``javascript_catalog()`` yang penerapannya telah berubah untuk memastikan "
"penggunaan dari ``json.dumps()`` sebagai gantinya. Jika anda sedang "
"bergantung pada fungsi ini untuk menyediakan keluaran aman dari deretan "
"karakter tidak dipercaya, anda harus menggunakan penyaring cetakan ``django."
"utils.html.escapejs`` atau the :tfilter:`escapejs`. Jika semua anda butuhkan "
"adalah untuk membangkitkan deretan karakter JavaScript sah, anda dapat "
"dengan mudah menggunakan ``json.dumps()``."

msgid "``fix_ampersands`` utils method and template filter"
msgstr "Metode kegunaan ``fix_ampersands`` dan penyaring cetakan"

msgid ""
"The ``django.utils.html.fix_ampersands`` method and the ``fix_ampersands`` "
"template filter are deprecated, as the escaping of ampersands is already "
"taken care of by Django's standard HTML escaping features. Combining this "
"with ``fix_ampersands`` would either result in double escaping, or, if the "
"output is assumed to be safe, a risk of introducing XSS vulnerabilities. "
"Along with ``fix_ampersands``, ``django.utils.html.clean_html`` is "
"deprecated, an undocumented function that calls ``fix_ampersands``. As this "
"is an accelerated deprecation, ``fix_ampersands`` and ``clean_html`` will be "
"removed in Django 1.8."
msgstr ""
"Metode ``django.utils.html.fix_ampersands`` dan penyaring cetakan "
"``fix_ampersands`` diusangkan, pelolosan dan sudah ditangani oleh fitur "
"pelolosan HTML standar. Memadukan ini dengan ``fix_ampersands`` akan "
"menghasilkan di pelolosan ganda, atau jika keluaran dianggap aman, sebuah "
"resiko dari memperkenalkan kerentanan XSS. Bersama dengan "
"``fix_ampersands``, ``django.utils.html.clean_html`` diusangkan, sebuah "
"fungsi tidak terdokumentasikan yang memanggil ``fix_ampersands``. Karena ini "
"adalah pengusangan dipercepat, ``fix_ampersands`` dan ``clean_html`` akan "
"dipindahkan di Django 1.8."

msgid "Reorganization of database test settings"
msgstr "Reorganisasi dari pengaturan percobaan basisdata"

msgid ""
"All database settings with a ``TEST_`` prefix have been deprecated in favor "
"of entries in a :setting:`TEST <DATABASE-TEST>` dictionary in the database "
"settings. The old settings will be supported until Django 1.9. For backwards "
"compatibility with older versions of Django, you can define both versions of "
"the settings as long as they match."
msgstr ""
"Semua pengaturan basisdata dengan awalan ``TEST_`` telah diusangkan dalam "
"mendukung masukan di kamus :setting:`TEST <DATABASE-TEST>` di pengaturan "
"basisdata. Pengaturan lama akan didukung sampai Django 1.9. Untuk kesesuaian "
"kebelakang dengan versi terlama dari Django, anda dapat menentukan kedua "
"versi dari pengaturan selama mereka cocok."

msgid "FastCGI support"
msgstr "Dukungan FastCGI"

msgid ""
"FastCGI support via the ``runfcgi`` management command will be removed in "
"Django 1.9. Please deploy your project using WSGI."
msgstr ""
"Dukungan FastCGI melalui perintah pengelolaan ``runfcgi`` akan dipindahkan "
"di Django 1.9. Silahkan sebarkan proyek anda menggunakan WSGI."

msgid "Moved objects in ``contrib.sites``"
msgstr "Memindahkan obyek di ``contrib.sites``"

msgid ""
"Following the app-loading refactor, two objects in ``django.contrib.sites."
"models`` needed to be moved because they must be available without importing "
"``django.contrib.sites.models`` when ``django.contrib.sites`` isn't "
"installed. Import ``RequestSite`` from ``django.contrib.sites.requests`` and "
"``get_current_site()`` from ``django.contrib.sites.shortcuts``. The old "
"import locations will work until Django 1.9."
msgstr ""
"Refaktor memuat-aplikasi berikut, dua obyek di ``django.contrib.sites."
"models`` butuh dipindahkan karena mereka harus tersedia tanpa mengimpor "
"``django.contrib.sites.models`` ketika ``django.contrib.sites`` tidak "
"terpasang. Impor ``RequestSite`` dari ``django.contrib.sites.requests`` dan "
"``get_current_site()`` dari ``django.contrib.sites.shortcuts``. Tempat impor "
"lama akan bekerja sampai Django 1.9."

msgid "``django.forms.forms.get_declared_fields()``"
msgstr "``django.forms.forms.get_declared_fields()``"

msgid ""
"Django no longer uses this functional internally. Even though it's a private "
"API, it'll go through the normal deprecation cycle."
msgstr ""
"Django tidak lagi menggunakan fungsi ini secara internal. Meskipun itu "
"adalah API pribadi, itu akan pergi melalui siklus pengusangan biasa."

msgid "Private Query Lookup APIs"
msgstr "API Pencarian Permintaan Pribadi"

msgid ""
"Private APIs ``django.db.models.sql.where.WhereNode.make_atom()`` and "
"``django.db.models.sql.where.Constraint`` are deprecated in favor of the "
"new :doc:`custom lookups API </ref/models/lookups>`."
msgstr ""
"API pribadi ``django.db.models.sql.where.WhereNode.make_atom()`` dan "
"``django.db.models.sql.where.Constraint`` diusangkan dalam mendukung dari :"
"doc:`custom lookups API </ref/models/lookups>` baru."

msgid "Features removed in 1.7"
msgstr "Fitur-fitur dipindahkan dalam 1.7"

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 1.7. See :ref:`deprecated-features-1.5` for details, "
"including how to remove usage of these features."
msgstr ""
"Fitur-fitur ini telah mencapai akhir siklus pengusangan mereka dan "
"dipindahkan di Django 1.7. Lihat :ref:`deprecated-features-1.5` untuk "
"rincian, termasuk bagaimana memindahkan penggunaan fitur ini."

msgid "``django.utils.simplejson`` is removed."
msgstr "``django.utils.simplejson`` dipindahkan."

msgid "``django.utils.itercompat.product`` is removed."
msgstr "``django.utils.itercompat.product`` dipindahkan."

msgid ""
"INSTALLED_APPS and TEMPLATE_DIRS are no longer corrected from a plain string "
"into a tuple."
msgstr ""
"INSTALLED_APPS dan TEMPLATE_DIRS tidak lagi diperbaiki dari deretan karakter "
"polos kedalam sebuah tuple."

msgid ""
":class:`~django.http.HttpResponse`, :class:`~django.template.response."
"SimpleTemplateResponse`, :class:`~django.template.response."
"TemplateResponse`, ``render_to_response()``, :func:`~django.contrib.sitemaps."
"views.index`, and :func:`~django.contrib.sitemaps.views.sitemap` no longer "
"take a ``mimetype`` argument"
msgstr ""
":class:`~django.http.HttpResponse`, :class:`~django.template.response."
"SimpleTemplateResponse`, :class:`~django.template.response."
"TemplateResponse`, ``render_to_response()``, :func:`~django.contrib.sitemaps."
"views.index`, dan :func:`~django.contrib.sitemaps.views.sitemap` tidak lagi "
"mengambil sebuah argumen ``mimetype``"

msgid ""
":class:`~django.http.HttpResponse` immediately consumes its content if it's "
"an iterator."
msgstr ""
":class:`~django.http.HttpResponse` segera memakan isinya jika itu adalah "
"sebuah perulangan."

msgid ""
"The ``AUTH_PROFILE_MODULE`` setting, and the ``get_profile()`` method on the "
"User model are removed."
msgstr ""
"Pengaturan ``AUTH_PROFILE_MODULE``, dan metode ``get_profile()`` pada model "
"User dipindahkan."

msgid "The ``cleanup`` management command is removed."
msgstr "Perintah pengelolaan ``cleanup`` dipindahkan."

msgid "The ``daily_cleanup.py`` script is removed."
msgstr "Tulisan ``daily_cleanup.py`` dipindahkan."

msgid ""
":meth:`~django.db.models.query.QuerySet.select_related` no longer has a "
"``depth`` keyword argument."
msgstr ""
":meth:`~django.db.models.query.QuerySet.select_related` tidak lagi mempunyai "
"argumen kata kunci ``depth``."

msgid ""
"The ``get_warnings_state()``/``restore_warnings_state()`` functions from :"
"mod:`django.test.utils` and the ``save_warnings_state()``/ "
"``restore_warnings_state()`` :ref:`django.test.*TestCase <django-testcase-"
"subclasses>` are removed."
msgstr ""
"Fungsi ``get_warnings_state()``/``restore_warnings_state()`` dari :mod:"
"`django.test.utils` dan the ``save_warnings_state()``/ "
"``restore_warnings_state()`` :ref:`django.test.*TestCase <django-testcase-"
"subclasses>` dipindahkan."

msgid ""
"The ``check_for_test_cookie`` method in :class:`~django.contrib.auth.forms."
"AuthenticationForm` is removed."
msgstr ""
"Metode ``check_for_test_cookie`` di :class:`~django.contrib.auth.forms."
"AuthenticationForm` dipindahkan."

msgid ""
"The version of ``django.contrib.auth.views.password_reset_confirm()`` that "
"supports base36 encoded user IDs (``django.contrib.auth.views."
"password_reset_confirm_uidb36``) is removed."
msgstr ""

msgid "The ``django.utils.encoding.StrAndUnicode`` mix-in is removed."
msgstr "Mix-in ``django.utils.encoding.StrAndUnicode`` dipindahkan."

msgid "Django 1.7.1 release notes"
msgstr "Catatan terbitan Django 1.7.1"

msgid "Django 1.7.1 fixes several bugs in 1.7."
msgstr "Django 1.7.1 memperbaiki beberapa kesalahan di 1.7."

msgid ""
"Added a more helpful error message if you try to migrate an app without "
"first creating the ``contenttypes`` table (:ticket:`22411`)."
msgstr ""
"Ditambahkan pesan kesalahan lebih membantu jika anda mencoba memindahkan "
"sebuah aplikasi tanpa pertama membuat tabel ``contenttypes`` (:ticket:"
"`22411`)."

msgid ""
"Modified migrations dependency algorithm to avoid possible infinite "
"recursion."
msgstr ""
"Dirubah algoritma ketergantungan perpindahan untuk menghindari kemungkinan "
"perulangan tidak terbatas."

msgid ""
"Fixed a ``UnicodeDecodeError`` when the ``flush`` error message contained "
"Unicode characters (:ticket:`22882`)."
msgstr ""
"Diperbaiki ``UnicodeDecodeError`` ketika pesan kesalahan ``flush`` "
"mengandung karakter Unicode (:ticket:`22882`)."

msgid ""
"Reinstated missing ``CHECK`` SQL clauses which were omitted on some backends "
"when not using migrations (:ticket:`23416`)."
msgstr ""
"Menginstansiasi kembali klausa SQL ``CHECK`` hilang yang telah dihilangkan "
"pada beberapa backend ketika tidak menggunakan perpindahan (:ticket:`23416`)."

msgid ""
"Fixed serialization of ``type`` objects in migrations (:ticket:`22951`)."
msgstr ""
"Diperbaiki serialisasi dari obyek ``type`` di perpindahan (:ticket:`22951`)."

msgid ""
"The ``@deconstructible`` decorator now fails with a ``ValueError`` if the "
"decorated object cannot automatically be imported (:ticket:`23418`)."
msgstr ""
"Penghias ``@deconstructible`` sekarang gagal dengan ``ValueError`` jika "
"obyek penghias tidak dapat secara otomatis diimpor (:ticket:`23418`)."

msgid ""
"Fixed a typo in an ``inlineformset_factory()`` error message that caused a "
"crash (:ticket:`23451`)."
msgstr ""
"Diperbaiki kesalahan ketik di sebuah pesan kesalahan "
"``inlineformset_factory()`` yang menyebabkan kegagalan (:ticket:`23451`)."

msgid ""
"Restored the ability to use :setting:`ABSOLUTE_URL_OVERRIDES` with the "
"``'auth.User'`` model (:ticket:`11775`). As a side effect, the setting now "
"adds a ``get_absolute_url()`` method to any model that appears in "
"``ABSOLUTE_URL_OVERRIDES`` but doesn't define ``get_absolute_url()``."
msgstr ""
"Disimpan kembali kemampuan menggunakan :setting:`ABSOLUTE_URL_OVERRIDES` "
"dengan model ``'auth.User'`` (:ticket:`11775`). Sebagai efek samping, "
"pengaturan sekarang menambahkan sebuah metode ``get_absolute_url()`` ke "
"setiap model yang muncul di ``ABSOLUTE_URL_OVERRIDES`` tetapi tidak "
"menentukan ``get_absolute_url()``."

msgid ""
"Avoided masking some ``ImportError`` exceptions during application loading (:"
"ticket:`22920`)."
msgstr ""

msgid ""
"Empty ``index_together`` or ``unique_together`` model options no longer "
"results in infinite migrations (:ticket:`23452`)."
msgstr ""
"Kosongkan pilihan model ``index_together`` atau ``unique_together`` tidak "
"lagi menghasilkan di perpindahan tak terbatas (:ticket:`23452`)."

msgid ""
"Fixed crash in ``contrib.sitemaps`` if ``lastmod`` returned a ``date`` "
"rather than a ``datetime`` (:ticket:`23403`)."
msgstr ""
"Diperbaiki kegagalan di ``contrib.sitemaps`` jika ``lastmod`` mengembalikan "
"sebuah ``date`` daripada sebuah ``datetime`` (:ticket:`23403`)."

msgid ""
"Allowed migrations to work with ``app_label``\\s that have the same last "
"part (e.g. ``django.contrib.auth`` and ``vendor.auth``) (:ticket:`23483`)."
msgstr ""
"Diizinkan perpindahan untuk bekerja dengan ``app_label`` yang mempunyai "
"bagian terakhir sama (sebagai contoh ``django.contrib.auth`` dan ``vendor."
"auth``) (:ticket:`23483`)."

msgid "Restored the ability to deepcopy ``F`` objects (:ticket:`23492`)."
msgstr ""
"Disimpan kembali kemampuan untuk menyalin dalam obyek ``F`` (:ticket:"
"`23492`)."

msgid ""
"Formats for Welsh (``cy``) and several Chinese locales (``zh_CN``, "
"``zh_Hans``, ``zh_Hant`` and ``zh_TW``) have been added. Formats for "
"Macedonian have been fixed (trailing dot removed, :ticket:`23532`)."
msgstr ""
"Bentuk untuk Wales (``cy``) dan beberapa lokal China (``zh_CN``, "
"``zh_Hans``, ``zh_Hant`` dan ``zh_TW``) telah ditambahkan. Bentuk-bentuk "
"untuk Macedonia telah diperbaiki (titik mengikuti dipindahkan, :ticket:"
"`23532`)."

msgid ""
"Added quoting of constraint names in the SQL generated by migrations to "
"prevent crash with uppercase characters in the name (:ticket:`23065`)."
msgstr ""
"Ditambahkan mengutip dari batasan nama di SQL dibangkitkan oleh perpindahan "
"untuk mencegah kegagalan dengan karakter huruf besar di nama (:ticket:"
"`23065`)."

msgid ""
"Fixed renaming of models with a self-referential many-to-many field "
"(``ManyToManyField('self')``) (:ticket:`23503`)."
msgstr ""
"Diperbaiki menamai kembali dari model dengan sebuah bidang self-referential "
"many-to-many (``ManyToManyField('self')``) (:ticket:`23503`)."

msgid ""
"Added the :meth:`~django.contrib.admin.InlineModelAdmin.get_extra()`, :meth:"
"`~django.contrib.admin.InlineModelAdmin.get_max_num()`, and :meth:`~django."
"contrib.admin.InlineModelAdmin.get_min_num()` hooks to :class:`~django."
"contrib.contenttypes.admin.GenericInlineModelAdmin` (:ticket:`23539`)."
msgstr ""
"Ditambahkan :meth:`~django.contrib.admin.InlineModelAdmin.get_extra()`, :"
"meth:`~django.contrib.admin.InlineModelAdmin.get_max_num()`, dan :meth:"
"`~django.contrib.admin.InlineModelAdmin.get_min_num()` dikaitkan ke :class:"
"`~django.contrib.contenttypes.admin.GenericInlineModelAdmin` (:ticket:"
"`23539`)."

msgid ""
"Made ``migrations.RunSQL`` no longer require percent sign escaping. This is "
"now consistent with ``cursor.execute()`` (:ticket:`23426`)."
msgstr ""
"Membuat ``migrations.RunSQL`` tidak lagi membutuhkan pelolosan tanda persen. "
"Ini sekarang tetap dengan ``cursor.execute()`` (:ticket:`23426`)."

msgid ""
"Made the :setting:`SERIALIZE <TEST_SERIALIZE>` entry in the :setting:`TEST "
"<DATABASE-TEST>` dictionary usable (:ticket:`23421`)."
msgstr ""
"Membuat masukan :setting:`SERIALIZE <TEST_SERIALIZE>` di kamus :setting:"
"`TEST <DATABASE-TEST>` berguna (:ticket:`23421`)."

msgid ""
"Fixed bug in migrations that prevented foreign key constraints to unmanaged "
"models with a custom primary key (:ticket:`23415`)."
msgstr ""
"Diperbaiki kesalahan di perpindahan yang mencegah batasan primary key pada "
"model tidak dikelola dengan primary key yang disesuaian (:ticket:`23415`)."

msgid ""
"Added ``SchemaEditor`` for MySQL GIS backend so that spatial indexes will be "
"created for apps with migrations (:ticket:`23538`)."
msgstr ""
"Ditambahkan ``SchemaEditor`` untuk backend GIS MySQL sehingga indeks spasial "
"akan dibuat untuk aplikasi dengan perpindahan (:ticket:`23538`)."

msgid ""
"Added ``SchemaEditor`` for Oracle GIS backend so that spatial metadata and "
"indexes will be created for apps with migrations (:ticket:`23537`)."
msgstr ""
"Ditambahkan ``SchemaEditor`` untuk backend GIS Oracle sehingga metadata "
"spasial dan indeks akan dibuat untuk aplikasi dengan perpindahan (:ticket:"
"`23537`)."

msgid ""
"Coerced the ``related_name`` model field option to Unicode during migration "
"generation to generate migrations that work with both Python 2 and 3 (:"
"ticket:`23455`)."
msgstr ""

msgid ""
"Fixed ``MigrationWriter`` to handle builtin types without imports (:ticket:"
"`23560`)."
msgstr ""
"Diperbaiki ``MigrationWriter`` untuk menangani jenis siap-pakai tanpa impor "
"(:ticket:`23560`)."

msgid "Fixed ``deepcopy`` on ``ErrorList`` (:ticket:`23594`)."
msgstr "Diperbaiki ``deepcopy`` pada ``ErrorList`` (:tiket:`23594`)."

msgid ""
"Made the :mod:`~django.contrib.admindocs` view to browse view details check "
"if the view specified in the URL exists in the URLconf. Previously it was "
"possible to import arbitrary packages from the Python path. This was not "
"considered a security issue because ``admindocs`` is only accessible to "
"staff users (:ticket:`23601`)."
msgstr ""
"Dibuat tampilan :mod:`~django.contrib.admindocs` untuk menjelajah "
"pemeriksaan rincian tampilan jika tampilan yang ditentukan di URL yang ada "
"di URLconf. Sebelumnya itu memungkinkan untuk mengimpor paket yang berubah-"
"ubah dari jalur Python. Ini bukan dipertimbangkan sebagai masalah keamanan "
"karena ``admindocs`` hanya dapat diakses ke pengguna staf (:ticket:`23601`)."

msgid ""
"Fixed ``UnicodeDecodeError`` crash in ``AdminEmailHandler`` with non-ASCII "
"characters in the request (:ticket:`23593`)."
msgstr ""
"Diperbaiki kegagalan ``UnicodeDecodeError`` di ``AdminEmailHandler`` dengan "
"karakter bukan-ASCII di permintaan (:ticket:`23593`)."

msgid ""
"Fixed missing ``get_or_create`` and ``update_or_create`` on related managers "
"causing ``IntegrityError`` (:ticket:`23611`)."
msgstr ""
"Diperbaiki kehilangan ``get_or_create`` dan ``update_or_create`` pada "
"pengelola terkait menyebabkan ``IntegrityError`` (:ticket:`23611`)."

msgid ""
"Made :func:`~django.utils.http.urlsafe_base64_decode` return the proper type "
"(bytestring) on Python 3 (:ticket:`23333`)."
msgstr ""

msgid ""
":djadmin:`makemigrations` can now serialize timezone-aware values (:ticket:"
"`23365`)."
msgstr ""
":djadmin:`makemigrations` sekarang dapat menserialisasikan nilai sadar-zona "
"waktu (:ticket:`23365`)."

msgid ""
"Added a prompt to the migrations questioner when removing the null "
"constraint from a field to prevent an IntegrityError on existing NULL rows (:"
"ticket:`23609`)."
msgstr ""
"Ditambahkan penunjukan ke pertanyaan perpindahan ketika memindahkan batasan "
"null dari sebuah bidang untuk mencegah sebuah IntegrityError pada baris NULL "
"yang ada (:ticket:`23609`)."

msgid ""
"Fixed generic relations in ``ModelAdmin.list_filter`` (:ticket:`23616`)."
msgstr ""
"Diperbaiki hubungan umum di ``ModelAdmin.list_filter`` (:ticket:`23616`)."

msgid ""
"Restored RFC compliance for the SMTP backend on Python 3 (:ticket:`23063`)."
msgstr ""
"Disimpan kembali pemenuhan RFC untuk backend SMTP pada Python 3 (:ticket:"
"`23063`)."

msgid ""
"Fixed a crash while parsing cookies containing invalid content (:ticket:"
"`23638`)."
msgstr ""
"Diperbaiki sebuah kegagalan selagi mengurai kue-kue mengandung isi tidak sah "
"(:ticket:`23638`)."

msgid ""
"The system check framework now raises error **models.E020** when the class "
"method ``Model.check()`` is unreachable (:ticket:`23615`)."
msgstr ""
"Kerangka sistem pemeriksaan sekarang menampilkan kesalahan **models.E020** "
"ketika kelas metode ``Model.check()`` tidak dijangkau(:ticket:`23615`)."

msgid ""
"Made the Oracle test database creation drop the test user in the event of an "
"unclean exit of a previous test run (:ticket:`23649`)."
msgstr ""
"Dibuat pembuatan basisdata percobaan Oracle menajtuhkan pengguna dalam acara "
"dari sebuah keluar yang tidak bersih dari pejalan percobaan sebelumnya (:"
"ticket:`23649`)."

msgid ""
"Fixed :djadmin:`makemigrations` to detect changes to :attr:`Meta.db_table "
"<django.db.models.Options.db_table>` (:ticket:`23629`)."
msgstr ""
"Diperbaiki :djadmin:`makemigrations` untuk mengenali perubahan pada :attr:"
"`Meta.db_table <django.db.models.Options.db_table>` (:ticket:`23629`)."

msgid ""
"Fixed a regression when feeding the Django test client with an empty data "
"string (:ticket:`21740`)."
msgstr ""
"Diperbaiki sebuah pemulihan ketika mengumpan klien percobaan Django dengan "
"string data kosong (:ticket:`21740`)."

msgid ""
"Fixed a regression in :djadmin:`makemessages` where static files were "
"unexpectedly ignored (:ticket:`23583`)."
msgstr ""
"Diperbaiki sebuah pemulihan di :djadmin:`makemessages` dimana berkas-berkas "
"tetap mendadak diabaikan (:ticket:`23583`)."

msgid "Django 1.7.10 release notes"
msgstr "Catatan terbitan Django 1.7.10"

msgid "Django 1.7.10 fixes a security issue in 1.7.9."
msgstr "Django 1.7.10 memperbaiki masalah keamanan di 1.7.9."

msgid "Django 1.7.11 release notes"
msgstr "Catatan terbitan Django 1.7.11"

msgid "*November 24, 2015*"
msgstr "*November 24, 2015*"

msgid "Django 1.7.11 fixes a security issue and a data loss bug in 1.7.10."
msgstr ""
"Django 1.7.11 memperbaiki masalah kesalahan dan kesalahan kehilangan data di "
"1.7.10."

msgid "Fixed settings leak possibility in ``date`` template filter"
msgstr ""
"Diperbaiki mengatur kemungkinan kebocoran di penyaring cetakan ``date``"

msgid ""
"If an application allows users to specify an unvalidated format for dates "
"and passes this format to the :tfilter:`date` filter, e.g. ``{{ last_updated|"
"date:user_date_format }}``, then a malicious user could obtain any secret in "
"the application's settings by specifying a settings key instead of a date "
"format. e.g. ``\"SECRET_KEY\"`` instead of ``\"j/m/Y\"``."
msgstr ""
"Jika sebuah aplikasi mengizinkan pengguna menentukan bentuk tidak sah untuk "
"tanggal dan melewatkan bentuk ini ke :tfilter:`date` filter, sebagai contoh "
"``{{ last_updated|date:user_date_format }}``, kemudian seorang pengguna "
"berbahaya dapat mengambil setiap rahasia pengaturan aplikasi dengan "
"menentukan sebuah kunci pengaturan daripada bentuk tanggal sebagai contoh "
"``\"SECRET_KEY\"`` daripada ``\"j/m/Y\"``."

msgid ""
"To remedy this, the underlying function used by the ``date`` template "
"filter, ``django.utils.formats.get_format()``, now only allows accessing the "
"date/time formatting settings."
msgstr ""
"Untuk memperbaiki ini, fungsi pokok digunakan oleh penyaring cetakan "
"``date``, ``django.utils.formats.get_format()``, sekarang hanya mengizinkan "
"mengakses pengaturan berbentuk date/time."

msgid ""
"Fixed a data loss possibility with :class:`~django.db.models.Prefetch` if "
"``to_attr`` is set to a ``ManyToManyField`` (:ticket:`25693`)."
msgstr ""
"Diperbaiki kemungkinan kehilangan data dengan :class:`~django.db.models."
"Prefetch` jika ``to_attr`` disetel menjadi ``ManyToManyField`` (:ticket:"
"`25693`)."

msgid "Django 1.7.2 release notes"
msgstr "Catatan terbitan Django 1.7.2"

msgid "Django 1.7.2 fixes several bugs in 1.7.1."
msgstr "Django 1.7.2 memperbaiki beberapa kesalahan di 1.7.1."

msgid ""
"Fixed migration's renaming of auto-created many-to-many tables when "
"changing :attr:`Meta.db_table <django.db.models.Options.db_table>` (:ticket:"
"`23630`)."
msgstr ""
"Diperbaiki menamai kembali perpindahan dari dibuat-otomatis tabel many-to-"
"many ketika merubah :attr:`Meta.db_table <django.db.models.Options."
"db_table>` (:ticket:`23630`)."

msgid ""
"Fixed a migration crash when adding an explicit ``id`` field to a model on "
"SQLite (:ticket:`23702`)."
msgstr ""
"Diperbaiki sebah perpindahan kegagalan ketika menambahkan bidang ``id`` "
"gamblang pada sebuah model di SQLite (:ticket:`23702`)."

msgid ""
"Added a warning for duplicate models when a module is reloaded. Previously a "
"``RuntimeError`` was raised every time two models clashed in the app "
"registry. (:ticket:`23621`)."
msgstr ""
"Ditambahkan untuk sebuah peringatan untuk model ganda ketika sebuah modul "
"memuat kembali. Sebelumnya sebuah ``RuntimeError`` telah dimunculkan setiap "
"kali dua model bertentangan di registrar aplikasi (:ticket:`23621`)."

msgid ""
"Prevented :djadmin:`flush` from loading initial data for migrated apps (:"
"ticket:`23699`)."
msgstr ""
"Dicegah :djadmin:`flush` dari memuat data inisial untuk aplikasi berpindah (:"
"ticket:`23699`)."

msgid ""
"Fixed a :djadmin:`makemessages` regression in 1.7.1 when :setting:"
"`STATIC_ROOT` has the default ``None`` value (:ticket:`23717`)."
msgstr ""
"Diperbaiki sebuah pemulihan :djadmin:`makemessages` di 1.7.1 ketika  :"
"setting:`STATIC_ROOT` mempunyai awalan nilai ``None`` (:ticket:`23717`)."

msgid "Added GeoDjango compatibility with mysqlclient database driver."
msgstr "Menambahkan kesesuaian GeoDjango dengan driver basisdata mysqlclient."

msgid ""
"Fixed MySQL 5.6+ crash with ``GeometryField``\\s in migrations (:ticket:"
"`23719`)."
msgstr ""
"Diperbaiki kegagalan MySQL 5.6+ dengan ``GeometryField`` di perpindahan (:"
"ticket:`23719`)."

msgid ""
"Fixed a migration crash when removing a field that is referenced in "
"``AlterIndexTogether`` or ``AlterUniqueTogether`` (:ticket:`23614`)."
msgstr ""
"Diperbaiki kegagalan perpindahan ketika memindahkan sebuah bidang yang "
"mengacu di ``AlterIndexTogether`` atau ``AlterUniqueTogether`` (:ticket:"
"`23614`)."

msgid "Updated the first day of the week in the Ukrainian locale to Monday."
msgstr "Diperbaharui hari pertama dari minggu di lokal Ukraina pada Senin."

msgid ""
"Added support for transactional spatial metadata initialization on "
"SpatiaLite 4.1+ (:ticket:`23152`)."
msgstr ""
"Ditambahkan dukungan untuk inisialisasi metadata spasial transaksi pada "
"SpatiaLite 4.1+ (:ticket:`23152`)."

msgid ""
"Fixed a migration crash that prevented changing a nullable field with a "
"default to non-nullable with the same default (:ticket:`23738`)."
msgstr ""
"Diperbaiki kegagalan perpindahan yang mencegah merubah bidang null dengan "
"awalan pada bukan-null dengan awalan sama (:ticket:`23738`). "

msgid ""
"Fixed a migration crash when adding ``GeometryField``\\s with ``blank=True`` "
"on PostGIS (:ticket:`23731`)."
msgstr ""
"Diperbaiki kegagalan perpindahan ketika menambahkan ``GeometryField`` dengan "
"``blank=True`` pada PostGIS (:ticket:`23731`). "

msgid ""
"Allowed usage of ``DateTimeField()`` as ``Transform.output_field`` (:ticket:"
"`23420`)."
msgstr ""
"Diizinkan penggunaan dari ``DateTimeField()`` sebagai ``Transform."
"output_field`` (:ticket:`23420`)."

msgid ""
"Fixed a migration serializing bug involving ``float(\"nan\")`` and "
"``float(\"inf\")`` (:ticket:`23770`)."
msgstr ""
"Diperbaiki sebuah perpindahan serialisasikan kesalahan melibatkan "
"``float(\"nan\")`` dan ``float(\"inf\")`` (:ticket:`23770`)."

msgid ""
"Fixed a regression where custom form fields having a ``queryset`` attribute "
"but no ``limit_choices_to`` could not be used in a :class:`~django.forms."
"ModelForm` (:ticket:`23795`)."
msgstr ""
"Diperbaiki sebuah pemulihan dimana bidang formulir penyesuaian mempunyai "
"sebuah atribut ``queryset`` tetapi `tidak  ada ``limit_choices_to`` tidak "
"dapat digunakan di :class:`~django.forms.ModelForm` (:ticket:`23795`). "

msgid ""
"Fixed a custom field type validation error with MySQL backend when "
"``db_type`` returned ``None`` (:ticket:`23761`)."
msgstr ""
"Diperbaiki sebuah kesalahan pengesahan jenis bidang penyesuaian dengan "
"backend MySQL ketika ``db_type`` dikembalikan ``None`` (:ticket:`23761`)."

msgid ""
"Fixed a migration crash when a field is renamed that is part of an "
"``index_together`` (:ticket:`23859`)."
msgstr ""
"Diperbaiki kegagalan perpindahan ketika sebuah bidang dinamai adalah bagian "
"dari sebuah ``index_together`` (:ticket:`23859`)."

msgid ""
"Fixed :djadmin:`squashmigrations` to respect the ``--no-optimize`` parameter "
"(:ticket:`23799`)."
msgstr ""
"Diperbaiki :djadmin:`squashmigrations` untuk menghormati parameter ``--no-"
"optimize`` (:ticket:`23799`)."

msgid ""
"Made :class:`~django.db.migrations.operations.RenameModel` reversible (:"
"ticket:`22248`)"
msgstr ""
"Dibuat :class:`~django.db.migrations.operations.RenameModel` yang dapat "
"dibalikkan (:ticket:`22248`)"

msgid ""
"Avoided unnecessary rollbacks of migrations from other apps when migrating "
"backwards (:ticket:`23410`)."
msgstr ""
"Dihindari rollback tidak perlu dari perpindahan dari aplikasi lain ketika "
"perpindahan kebelakang (:ticket:`23410`)."

msgid ""
"Fixed a rare query error when using deeply nested subqueries (:ticket:"
"`23605`)."
msgstr ""
"Diperbaiki kesalahan permintaan jarang ketika menggunakan sub permintaan "
"bersarang dalam (:ticket:`23605`). "

msgid ""
"Fixed a crash in migrations when deleting a field that is part of a ``index/"
"unique_together`` constraint (:ticket:`23794`)."
msgstr ""
"Diperbaiki kegagalan di perpindahan ketika menghapus sebuah bidang yaitu "
"bagian dari batasan ``index/unique_together`` (:ticket:`23794`). "

msgid ""
"Fixed ``django.core.files.File.__repr__()`` when the file's ``name`` "
"contains Unicode characters (:ticket:`23888`)."
msgstr ""
"Diperbaiki ``django.core.files.File.__repr__()`` ketika ``name`` berkas "
"mengandung karakter Unicode (:ticket:`23888`)."

msgid ""
"Added missing context to the admin's ``delete_selected`` view that prevented "
"custom site header, etc. from appearing (:ticket:`23898`)."
msgstr ""
"Ditambahkan konteks hilang pada tampilan ``delete_selected`` admin yang "
"mencegah penyesuaian kepala situs, sebagai contoh dari kemunculan (:ticket:"
"`23898`)."

msgid ""
"Fixed an infinite loop bug for certain cyclic migration dependencies, and "
"made the error message for cyclic dependencies much more helpful."
msgstr ""
"DIperbaiki sebuah kesalahan perulangan tidak terbatas untuk ketergantungan "
"perpindahan siklus tertentu, dan membuat pesan kesalahan untuk "
"ketergantungan siklus banyak lebih membantu."

msgid "Added missing ``index_together`` handling for SQLite (:ticket:`23880`)."
msgstr ""
"Ditambahkan penanganan ``index_together`` hilang untuk SQLite (:ticket:"
"`23880`)."

msgid ""
"Fixed a crash when ``RunSQL`` SQL content was collected by the schema "
"editor, typically when using ``sqlmigrate`` (:ticket:`23909`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika ``RunSQL`` isi SQL dikumpulkan oleh "
"penyunting skema, kshususnya ketika menggunakan  ``sqlmigrate`` (:ticket:"
"`23909`)."

msgid ""
"Fixed a regression in ``contrib.admin`` add/change views which caused some "
"``ModelAdmin`` methods to receive the incorrect ``obj`` value (:ticket:"
"`23934`)."
msgstr ""
"Diperbaiki sebuah pemulihan di ``contrib.admin`` tampilan tambah/rubah yang "
"menyebabkan beberapa metode ``ModelAdmin`` untuk menerima nilai ``obj`` "
"tidak benar (:ticket:`23934`)."

msgid ""
"Fixed ``runserver`` crash when socket error message contained Unicode "
"characters (:ticket:`23946`)."
msgstr ""
"Diperbaiki kegagalan  ``runserver`` ketika soket pesan kesalahan mengandung "
"karakter Unicode (:ticket:`23946`)."

msgid ""
"Fixed serialization of ``type`` when adding a ``deconstruct()`` method (:"
"ticket:`23950`)."
msgstr ""
"Diperbaiki serialisasi dari obyek ``type`` ketika menambahkan sebuah metode "
"``deconstruct()`` (:ticket:`23950`). "

msgid ""
"Prevented the ``django.contrib.auth.middleware."
"SessionAuthenticationMiddleware`` from setting a ``\"Vary: Cookie\"`` header "
"on all responses (:ticket:`23939`)."
msgstr ""
"Dicegah ``django.contrib.auth.middleware.SessionAuthenticationMiddleware`` "
"dari mengatur sebuah kepala ``\"Vary: Cookie\"`` di semua tanggapan (:ticket:"
"`23939`)."

msgid ""
"Fixed a crash when adding ``blank=True`` to ``TextField()`` on MySQL (:"
"ticket:`23920`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menambahkan ``blank=True`` menjadi "
"``TextField()`` di MySQL (:ticket:`23920`)."

msgid ""
"Fixed index creation by the migration infrastructure, particularly when "
"dealing with PostgreSQL specific ``{text|varchar}_pattern_ops`` indexes (:"
"ticket:`23954`)."
msgstr ""
"Diperbaiki pembuatan indeks oleh infrastruktur perpindahan, khususnya ketika "
"berhubungan dengan PostgreSQL indeks ``{text|varchar}_pattern_ops`` tertentu "
"(:ticket:`23954`)."

msgid ""
"Fixed bug in ``makemigrations`` that created broken migration files when "
"dealing with multiple table inheritance and inheriting from more than one "
"model (:ticket:`23956`)."
msgstr ""
"Diperbaiki kesalahan di ``makemigrations`` yang membuat perpindahan berkas-"
"berkas rusak ketika berurusan dengan banyak tabel warisan dan mewarisi lebih "
"dari satu model (:ticket:`23956`)."

msgid ""
"Fixed a crash when a ``MultiValueField`` has invalid data (:ticket:`23674`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika ``MultiValueField`` mempunyai data tidak "
"sah (:ticket:`23674`)."

msgid ""
"Fixed a crash in the admin when using \"Save as new\" and also deleting a "
"related inline (:ticket:`23857`)."
msgstr ""
"Diperbaiki sebuah kegagalan di admin ketika menggunakan \"Save as new\" dan "
"juga menghapus berderet terkait (:ticket:`23857`)."

msgid ""
"Always converted ``related_name`` to text (Unicode), since that is required "
"on Python 3 for interpolation. Removed conversion of ``related_name`` to "
"text in migration deconstruction (:ticket:`23455` and :ticket:`23982`)."
msgstr ""

msgid ""
"Enlarged the sizes of tablespaces which are created by default for testing "
"on Oracle (the main tablespace was increased from 200M to 300M and the "
"temporary tablespace from 100M to 150M). This was required to accommodate "
"growth in Django's own test suite (:ticket:`23969`)."
msgstr ""
"Diperbesar ukuran dari tablespace yang dibuat oleh awalan untuk percobaan di "
"Oracle (tablespace utama meningkat dari 200M menjadi 300M dan dan tablespace "
"sementara dari 100 M menjadi 150M). Ini diwajibkan untuk menampung "
"pertumbuhan di deretan percobaan sendiri Django (:ticket:`23969`)."

msgid "Fixed ``timesince`` filter translations in Korean (:ticket:`23989`)."
msgstr ""
"Diperbaiki terjemahan penyaring ``timesince`` di Korea (:ticket:`23989`)."

msgid ""
"Fixed the SQLite ``SchemaEditor`` to properly add defaults in the absence of "
"a user specified ``default``. For example, a ``CharField`` with "
"``blank=True`` didn't set existing rows to an empty string which resulted in "
"a crash when adding the ``NOT NULL`` constraint (:ticket:`23987`)."
msgstr ""
"Diperbaiki ``SchemaEditor`` SQLite untuk dengan benar menambahkan awalan di "
"tidak adanya pengguna menentukan ``default``. Sebagai contoh, ``CharField`` "
"dengan ``blank=True`` tidak mensetel baris yang ada ke string kosong yang "
"menghasilkan sebuah kegagalan ketika menambahkan batasan ``NOT NULL`` (:"
"ticket:`23987`). "

msgid ""
"``makemigrations`` no longer prompts for a default value when adding "
"``TextField()`` or ``CharField()`` without a ``default`` (:ticket:`23405`)."
msgstr ""
"``makemigrations`` tidak lagi menunjuk untuk nilai awalan ketika menambahkan "
"``TextField()`` atau ``CharField()`` tanpa sebuah ``default`` (:ticket:"
"`23405`)."

msgid ""
"Fixed a migration crash when adding ``order_with_respect_to`` to a table "
"with existing rows (:ticket:`23983`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan ketika menambahkan "
"``order_with_respect_to`` ke sebuah tabel dengan baris yang ada (:ticket:"
"`23983`)."

msgid ""
"Restored the ``pre_migrate`` signal if all apps have migrations (:ticket:"
"`23975`)."
msgstr ""
"Disimpan kembali sinyal ``pre_migrate`` jika semua aplikasi memiliki "
"perpindahan (:ticket:`23975`)."

msgid ""
"Made admin system checks run for custom ``AdminSite``\\s (:ticket:`23497`)."
msgstr ""
"Membuat pemeriksaan sistem admin untuk penyesuaian ``AdminSite`` (:ticket:"
"`23497`)."

msgid ""
"Ensured the app registry is fully populated when unpickling models. When an "
"external script (like a queueing infrastructure) reloads pickled models, it "
"could crash with an ``AppRegistryNotReady`` exception (:ticket:`24007`)."
msgstr ""
"Dipastikan registrar aplikasi sepenuhnya dikumpulkan ketika membatalkan "
"model. Ketika sebuah tulisan eksternal (seperti antrian infrastruktur) "
"memuat kembali model kesulitan, itu dapat gagal dengan sebuah pengecualian "
"``AppRegistryNotReady`` (:ticket:`24007`)."

msgid ""
"Added quoting to field indexes in the SQL generated by migrations to prevent "
"a crash when the index name requires it (:ticket:`24015`)."
msgstr ""

msgid ""
"Added ``datetime.time`` support to migrations questioner (:ticket:`23998`)."
msgstr ""
"Menambahkan dukungan ``datetime.time`` untuk perpindahan pertanyaan (:ticket:"
"`23998`)."

msgid "Fixed admindocs crash on apps installed as eggs (:ticket:`23525`)."
msgstr ""
"Diperbaiki kegagalan amindoc pada aplikasi terpasang sebagai telur (:ticket:"
"`23525`)."

msgid ""
"Changed migrations autodetector to generate an ``AlterModelOptions`` "
"operation instead of ``DeleteModel`` and ``CreateModel`` operations when "
"changing ``Meta.managed``. This prevents data loss when changing ``managed`` "
"from ``False`` to ``True`` and vice versa (:ticket:`24037`)."
msgstr ""
"Berubah pengenal otomatis perppindahan untuk membangkitkan sebuah tindakan "
"``AlterModelOptions`` daripada tindakan ``DeleteModel`` dan ``CreateModel`` "
"ketika merubah ``Meta.managed``. Ini mencegah kehilangan data ketika merubah "
"``managed`` dari ``False`` menjadi ``True`` dan sebaliknya (:ticket:`24037`)."

msgid ""
"Enabled the ``sqlsequencereset`` command on apps with migrations (:ticket:"
"`24054`)."
msgstr ""
"Diadakan perintah ``sqlsequencereset`` di aplikasi dengan perpindahan (:"
"ticket:`24054`)."

msgid "Added tablespace SQL to apps with migrations (:ticket:`24051`)."
msgstr ""
"Ditambahkan SQL tablespace pada aplikasi dengan perpindahan (:ticket:"
"`24051`)."

msgid ""
"Corrected ``contrib.sites`` default site creation in a multiple database "
"setup (:ticket:`24000`)."
msgstr ""
"Diperbaiki pembuatan situs awalan ``contrib.sites`` di banyak pengaturan "
"basisdata (:ticket:`24000`)."

msgid ""
"Restored support for objects that aren't :class:`str` or :class:`bytes` in "
"``django.utils.safestring.mark_for_escaping()`` on Python 3."
msgstr ""
"Dipulihkan dukungan untuk obyek yang tidak :class:`str` or :class:`bytes` di "
"``django.utils.safestring.mark_for_escaping()`` di Python 3."

msgid ""
"Supported strings escaped by third-party libraries with the ``__html__`` "
"convention in the template engine (:ticket:`23831`)."
msgstr ""
"Didukung pelolosan string oleh pustaka pihak-ketiga dengan ketentuan "
"``__html__`` di mesin cetakan (:ticket:`23831`)."

msgid ""
"Prevented extraneous ``DROP DEFAULT`` SQL in migrations (:ticket:`23581`)."
msgstr "Dicegah SQL ``DROP DEFAULT`` asing di perpindahan (:ticket:`23581`)."

msgid ""
"Restored the ability to use more than five levels of subqueries (:ticket:"
"`23758`)."
msgstr ""
"Disimpan kembali kemampuan untuk menggunakan lebih dari 5 tingkatan dari "
"subpermintaan (:ticket:`23758`)."

msgid ""
"Fixed crash when ``ValidationError`` is initialized with a "
"``ValidationError`` that is initialized with a dictionary (:ticket:`24008`)."
msgstr ""
"Diperbaiki kegagalan ketika ``ValidationError`` diinisialisasikan dengan "
"``ValidationError`` yaitu dinisialisasikan dengan sebuah kamus (:ticket:"
"`24008`)."

msgid ""
"Prevented a crash on apps without migrations when running ``migrate --list`` "
"(:ticket:`23366`)."
msgstr ""
"Dicegah sebuah kegagalan pada aplikasi tanpa perpindahan ketika menjalankan "
"``migrate --list`` (:ticket:`23366`)."

msgid "Django 1.7.3 release notes"
msgstr "Catatan terbitan Django 1.7.3"

msgid "Django 1.7.3 fixes several security issues and bugs in 1.7.2."
msgstr ""
"Django 1.7.3 memperbaiki beberapa masalah keamanan dan kesalahan di 1.7.2."

msgid ""
"The default iteration count for the PBKDF2 password hasher has been "
"increased by 25%. This part of the normal major release process was "
"inadvertently omitted in 1.7. This backwards compatible change will not "
"affect users who have subclassed ``django.contrib.auth.hashers."
"PBKDF2PasswordHasher`` to change the default value."
msgstr ""
"Perhitungan putaran awal untuk pencampur sandi PBKDF2 telah ditingkatkan "
"oleh 25%. Bagian ini dari pengolahan terbitan utama biasa telah secara tidak "
"sengaja dihilangkan di 1.7. Perubahan kesesuaian kebelakang tidak akan "
"mempengaruhi pengguna yang telah disubkelaskan ``django.contrib.auth.hashers."
"PBKDF2PasswordHasher`` untuk merubah nilai awal."

msgid ""
"Fixed a crash in the CSRF middleware when handling non-ASCII referer header "
"(:ticket:`23815`)."
msgstr ""
"Fixed sebuah kegagalan di  middleware CSRF ketika menangani bukan-ASCII "
"megnarah kepala  (:ticket:`23815`)."

msgid ""
"Fixed a crash in the ``django.contrib.auth.redirect_to_login`` view when "
"passing a ``reverse_lazy()`` result on Python 3 (:ticket:`24097`)."
msgstr ""
"Diperbaiki sebuah kegagalan di tampilan ``django.contrib.auth."
"redirect_to_login`` ketika melewatkan hasil ``reverse_lazy()`` pada Python 3 "
"(:ticket:`24097`)."

msgid "Added correct formats for Greek (``el``) (:ticket:`23967`)."
msgstr "Ditambahkan bentuk benar untuk Yunani (``el``) (:ticket:`23967`)."

msgid ""
"Fixed a migration crash when unapplying a migration where multiple "
"operations interact with the same model (:ticket:`24110`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika tidak memberlakukan perpindahan dimana "
"banyak operasi interaksi dengan model sama (:ticket:`24110`)."

msgid "Django 1.7.4 release notes"
msgstr "Catatan terbitan Django 1.7.4"

msgid "Django 1.7.4 fixes several bugs in 1.7.3."
msgstr "Django 1.7.4 memperbaiki beberapa kesalahan di 1.7.3."

msgid ""
"Fixed a migration crash when unapplying ``contrib.contenttypes``’s or "
"``contrib.auth``’s first migration (:ticket:`24075`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan ketika tidak memberlakukan "
"perpindahan pertama ``contrib.contenttypes`` atau ``contrib.auth`` (:ticket:"
"`24075`)."

msgid ""
"Made the migration's ``RenameModel`` operation rename ``ManyToManyField`` "
"tables (:ticket:`24135`)."
msgstr ""
"Dibuat tindakan ``RenameModel`` perpindahan menamai kembali tabel-tabel "
"``ManyToManyField`` (:ticket:`24135`)."

msgid ""
"Fixed a migration crash on MySQL when migrating from a ``OneToOneField`` to "
"a ``ForeignKey`` (:ticket:`24163`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan di MySQL ketika berpindah dari "
"``OneToOneField`` ke ``ForeignKey`` (:ticket:`24163`)."

msgid ""
"Prevented the ``static.serve`` view from producing ``ResourceWarning``\\s in "
"certain circumstances (security fix regression, :ticket:`24193`)."
msgstr ""
"Dicegah tampilan ``static.serve`` dari menghasilkan ``ResourceWarning`` di "
"keadaan tertentu (pemulihan perbaikan keamanan, :ticket:`24193`)."

msgid ""
"Fixed schema check for ManyToManyField to look for internal type instead of "
"checking class instance, so you can write custom m2m-like fields with the "
"same behavior. (:ticket:`24104`)."
msgstr ""
"Diperbaiki skema pemeriksaan untuk ManyToManyField untuk mencari untuk jenis "
"internal daripada memeriksa instance kelas, jadi anda dapat menulis "
"penyesuaian bidang seperti-m2m dengan perilaku lama. (:ticket:`24104`)."

msgid "Django 1.7.5 release notes"
msgstr "Catatan terbitan Django 1.7.5"

msgid "*February 25, 2015*"
msgstr "*Februari 25, 2015*"

msgid "Django 1.7.5 fixes several bugs in 1.7.4."
msgstr "Django 1.7.5 memperbaiki beberapa kesalahan di 1.7.4."

msgid ""
"Reverted a fix that prevented a migration crash when unapplying ``contrib."
"contenttypes``’s or ``contrib.auth``’s first migration (:ticket:`24075`) due "
"to severe impact on the test performance (:ticket:`24251`) and problems in "
"multi-database setups (:ticket:`24298`)."
msgstr ""
"Dirubah sebuah perbaikan yang mencegah sebuah kegagalan perpindahan ketika "
"tidak memberlakukan perpindahan pertama ``contrib.contenttypes`` atau "
"``contrib.auth`` (:ticket:`24075`) karena dampak parah pada penampilan "
"percobaan (:ticket:`24251`) dan masalah di penyetelan banyak-basisdata (:"
"ticket:`24298`)."

msgid ""
"Fixed a regression that prevented custom fields inheriting from "
"``ManyToManyField`` from being recognized in migrations (:ticket:`24236`)."
msgstr ""
"Diperbaiki sebuah pemulihan yang mencegah penyesuaian bidang mewarisi dari "
"``ManyToManyField`` dari menjadi diakui di perpindahan (:ticket:`24236`)."

msgid ""
"Fixed crash in ``contrib.sites`` migrations when a default database isn't "
"used (:ticket:`24332`)."
msgstr ""
"Diperbaiki kegagalan di perpindahan ``contrib.sites`` ketika basisdata "
"awalan tidak digunakan (:ticket:`24332`)."

msgid ""
"Added the ability to set the isolation level on PostgreSQL with psycopg2 ≥ "
"2.4.2 (:ticket:`24318`). It was advertised as a new feature in Django 1.6 "
"but it didn't work in practice."
msgstr ""
"Ditambahkan kemampuan menyetel tingkatan pemisahan di PostgreSQL dengan "
"psycopg2 = 2.4.2 (:ticket:`24318`). Itu telah diperkenalkan sebagai fitur "
"baru di Django 1.6 tetapi itu tidak bekerja dalam praktiknya."

msgid "Formats for the Azerbaijani locale (``az``) have been added."
msgstr "Bentuk untuk lokal Azerbaijan (``az``) telah ditambahkan."

msgid "Django 1.7.6 release notes"
msgstr "Catatan terbitan Django 1.7.6"

msgid "*March 9, 2015*"
msgstr "*9 Maret 2015*"

msgid "Django 1.7.6 fixes a security issue and several bugs in 1.7.5."
msgstr ""
"Django 1.7.6 memperbaiki beberapa kesalahan dan masalah keamanan di 1.7.5."

msgid ""
"Mitigated an XSS attack via properties in ``ModelAdmin.readonly_fields``"
msgstr ""
"Mengurangi sebuah serangan XSS melalui sifat di ``ModelAdmin."
"readonly_fields``"

msgid ""
"The :attr:`ModelAdmin.readonly_fields <django.contrib.admin.ModelAdmin."
"readonly_fields>` attribute in the Django admin allows displaying model "
"fields and model attributes. While the former were correctly escaped, the "
"latter were not. Thus untrusted content could be injected into the admin, "
"presenting an exploitation vector for XSS attacks."
msgstr ""
"Atribut :attr:`ModelAdmin.readonly_fields <django.contrib.admin.ModelAdmin."
"readonly_fields>` di admin Django mengizinkan menampilkan bidang model dan "
"atribut model. Selagi pendahulunya telah degan benar diloloskan, yang "
"terakhir tidak. Dengan demikian isi yang tidak dapat dipercaya dapat "
"disuntikkan kedalam admin, menghadirkan sebuah vektor eksploitasi untuk "
"serangan XSS."

msgid ""
"In this vulnerability, every model attribute used in ``readonly_fields`` "
"that is not an actual model field (e.g. a :class:`property`) will **fail to "
"be escaped** even if that attribute is not marked as safe. In this release, "
"autoescaping is now correctly applied."
msgstr ""
"Dalam kerentanan ini, setiap atribut model digunakan di ``readonly_fields`` "
"yang bukan bidang model yang sebenarnya (sebagai contoh sebuah :class:"
"`property`) akan **gagal diloloskan** bahkan jika atribut itu tidak ditandai "
"sebagai aman. Di terbitan ini, pelolosan otomatis sekarang dengan benar "
"diberlakukan."

msgid ""
"Fixed crash when coercing ``ManyRelatedManager`` to a string (:ticket:"
"`24352`)."
msgstr ""
"Diperbaiki kegagalan ketika memaksa ``ManyRelatedManager`` menjadi string (:"
"ticket:`24352`)."

msgid ""
"Fixed a bug that prevented migrations from adding a foreign key constraint "
"when converting an existing field to a foreign key (:ticket:`24447`)."
msgstr ""
"Diperbaiki sebuah kesalahan yang mencegah perpindahan dari menambahkan "
"batasan primary key ketika merubah bidang yang ada pada sebuah foreign key (:"
"ticket:`24447`)."

msgid "Django 1.7.7 release notes"
msgstr "Catatan terbitan Django 1.7.7"

msgid "Django 1.7.7 fixes several bugs and security issues in 1.7.6."
msgstr ""
"Django 1.7.7 memperbaiki beberapa kesalahan dan masalah keamanan di 1.7.6."

msgid ""
"Fixed renaming of classes in migrations where renaming a subclass would "
"cause incorrect state to be recorded for objects that referenced the "
"superclass (:ticket:`24354`)."
msgstr ""
"Diperbaiki manamai kembali dari kelas-kelas di perpindahan ketika menamai "
"kembali sebuah subkelas akan menyebabkan keadaan tidak benar untuk direkam "
"untuk obyek yang mengacu superkelas (:ticket:`24354`)."

msgid ""
"Stopped writing migration files in dry run mode when merging migration "
"conflicts. When ``makemigrations --merge`` is called with ``verbosity=3`` "
"the migration file is written to ``stdout`` (:ticket:`24427`)."
msgstr ""
"DIhentikan menulis berkas-berkas perpindahan dalam suasana percobaan ketika "
"menggabungkan pertentangan perpindahan. Ketika ``makemigrations --merge`` "
"dipanggil dengan ``verbosity=3`` berkas perpindahan ditulis menjadi "
"``stdout`` (:ticket:`24427`)."

msgid "Django 1.7.8 release notes"
msgstr "Catatan terbitan Django 1.7.8"

msgid "*May 1, 2015*"
msgstr "*1 Mei 2015*"

msgid "Django 1.7.8 fixes:"
msgstr "Catatan terbitan Django 1.7.8"

msgid ""
"Database introspection with SQLite 3.8.9 (released April 8, 2015) (:ticket:"
"`24637`)."
msgstr ""
"Introspeksi basisdata dengan SQLite 3.8.9 (diterbitkan April 8, 2015) (:"
"ticket:`24637`)."

msgid "A database table name quoting regression in 1.7.2 (:ticket:`24605`)."
msgstr ""
"Sebuah  nama tabel basisdata mengutip pemulihan di 1.7.2 (:ticket:`24605`)."

msgid ""
"The loss of ``null``/``not null`` column properties during field alteration "
"of MySQL databases (:ticket:`24595`)."
msgstr ""
"Kehilangan dari sifat kolom ``null``/``not null`` selama perubahan bidang "
"dari basisdata MySQL (:ticket:`24595`)."

msgid "Django 1.7.9 release notes"
msgstr "Catatan terbitan Django 1.7.9"

msgid "Django 1.7.9 fixes several security issues and bugs in 1.7.8."
msgstr "Django 1.7.9 memperbaiki beberapa masalah keamanan di 1.7.8."

msgid ""
":func:`~django.core.validators.validate_ipv4_address`, :func:`~django.core."
"validators.validate_slug`, and :class:`~django.core.validators.URLValidator` "
"are also affected, however, as of Django 1.6 the ``GenericIPAddresseField``, "
"``IPAddressField``, ``SlugField``, and ``URLField`` form fields which use "
"these validators all strip the input, so the possibility of newlines "
"entering your data only exists if you are using these validators outside of "
"the form fields."
msgstr ""
":func:`~django.core.validators.validate_ipv4_address`, :func:`~django.core."
"validators.validate_slug`, dan :class:`~django.core.validators.URLValidator` "
"juga terpengaruh, bagaimanapun, pada Django 1.6 bidang formulir  "
"``GenericIPAddresseField``, ``IPAddressField``, ``SlugField``, dan "
"``URLField`` yang menggunakan pengesah ini semua memilah masukan, jadi "
"kemungkinan dari baris baru memasukkan data anda hanya ada jika anda sedang "
"menggunakan pengesah ini diluat dari bidang formulir."

msgid ""
"Prevented the loss of ``null``/``not null`` column properties during field "
"renaming of MySQL databases (:ticket:`24817`)."
msgstr ""
"Dicegah kehilangan sifat kolom ``null``/``not null`` selama penamaan bidang "
"dari basisdata MySQL (:ticket:`24817`)."

msgid ""
"Fixed ``SimpleTestCase.assertRaisesMessage()`` on Python 2.7.10 (:ticket:"
"`24903`)."
msgstr ""
"Diperbaiki ``SimpleTestCase.assertRaisesMessage()`` pada Python 2.7.10 (:"
"ticket:`24903`)."

msgid "Django 1.8 release notes"
msgstr "Catatan terbitan Django 1.8"

msgid "*April 1, 2015*"
msgstr "*April 1, 2015*"

msgid "Welcome to Django 1.8!"
msgstr "Selamat datang di Django 1.8!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.8>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.8>` "
"you'll want to be aware of when upgrading from Django 1.7 or older versions. "
"We've also :ref:`begun the deprecation process for some features <deprecated-"
"features-1.8>`, and some features have reached the end of their deprecation "
"process and :ref:`have been removed <removed-features-1.8>`."
msgstr ""
"Catatan terbitan ini mencangkup :ref:`new features <whats-new-1.8>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.8>` anda akan ingin waspadai ketika meningkatkan dari Django "
"1.7 atau versi terlama. Kami juga telah :ref:`begun the deprecation process "
"for some features <deprecated-features-1.8>`, dan beberapa telah dicapai "
"pada akhir pengolahan pengusangan mereka dan :ref:`have been removed "
"<removed-features-1.8>`."

msgid ""
"Django 1.8 has been designated as Django's second :term:`long-term support "
"release <Long-term support release>`. It will receive security updates for "
"at least three years after its release. Support for the previous LTS, Django "
"1.4, will end 6 months from the release date of Django 1.8."
msgstr ""

msgid ""
"Django 1.8 requires Python 2.7, 3.2, 3.3, 3.4, or 3.5. We **highly "
"recommend** and only officially support the latest release of each series."
msgstr ""
"Django 1.8 membutuhkan Python 2.7, 3.2, 3.3, 3.4 atau 3.5. Kami **sangat "
"menganjurkan** dan hanya secara resmi mendukung terbitan terakhir dari "
"setiap rangkaian."

msgid "Django 1.8 is the first release to support Python 3.5."
msgstr "Django 1.8 adalah terbitan pertama untuk mendukung Python 3.5."

msgid ""
"Due to the end of upstream support for Python 3.2 in February 2016, we won't "
"test Django 1.8.x on Python 3.2 after the end of 2016."
msgstr ""
"Karena akhir dari dukungan hulu untuk Python 3,2 di Februari 2016, kami "
"tidak akan mencoba Django 1.8.x di Python 3.2 setelah akhir dari 2016."

msgid "What's new in Django 1.8"
msgstr "Apa yang baru di Django 1.8"

msgid "``Model._meta`` API"
msgstr "API ``Model._meta``"

msgid ""
"Django now has a formalized API for :doc:`Model._meta </ref/models/meta>`, "
"providing an officially supported way to :ref:`retrieve fields <model-meta-"
"field-api>` and filter fields based on their :ref:`attributes <model-field-"
"attributes>`."
msgstr ""
"Django sekarang telah memerumuskan API untuk :doc:`Model._meta </ref/models/"
"meta>`, menyediakan sebuah cara dukungan resmi pada :ref:`retrieve fields "
"<model-meta-field-api>` dan bidang penyaring berdasarkan pada :ref:"
"`attributes <model-field-attributes>` mereka. "

msgid ""
"The ``Model._meta`` object has been part of Django since the days of "
"pre-0.96 \"Magic Removal\" -- it just wasn't an official, stable API. In "
"recognition of this, we've endeavored to maintain backwards-compatibility "
"with the old API endpoint where possible. However, API endpoints that aren't "
"part of the new official API have been deprecated and will eventually be "
"removed."
msgstr ""

msgid "Multiple template engines"
msgstr "Banyak cetakan mesin"

msgid ""
"Django 1.8 defines a stable API for integrating template backends. It "
"includes built-in support for the Django template language and for :class:"
"`~django.template.backends.jinja2.Jinja2`. It supports rendering templates "
"with multiple engines within the same project. Learn more about the new "
"features in the :doc:`topic guide </topics/templates>` and check the upgrade "
"instructions in older versions of the documentation."
msgstr ""
"Django 1.8 menentukan API stabil untuk menyatukan backend cetakan. Itu "
"menyertakan dukungan siap-pakai untuk bahasa cetakan Django dan untuk :class:"
"`~django.template.backends.jinja2.Jinja2`. Itu mendukung membangun cetakan "
"dengan banyak mesin dalam proyek sama. Pelajari lebih tentang fitur baru di :"
"doc:`topic guide </topics/templates>` dan tingkatkan petunjuk-petunjuk dalam "
"versi terlama dari dokumentasi."

msgid "Security enhancements"
msgstr "Peningkatan keamanan"

msgid ""
"Several features of the :pypi:`django-secure` third-party library have been "
"integrated into Django. :class:`django.middleware.security."
"SecurityMiddleware` provides several security enhancements to the request/"
"response cycle. The new :option:`check --deploy` option allows you to check "
"your production settings file for ways to increase the security of your site."
msgstr ""

msgid "New PostgreSQL specific functionality"
msgstr "Kegunaan khusus PostgreSQL baru"

msgid ""
"Django now has a module with extensions for PostgreSQL specific features, "
"such as :class:`~django.contrib.postgres.fields.ArrayField`, :class:`~django."
"contrib.postgres.fields.HStoreField`, :ref:`range-fields`, and :lookup:"
"`unaccent` lookup. A full breakdown of the features is available :doc:`in "
"the documentation </ref/contrib/postgres/index>`."
msgstr ""
"Django sekarang mempunyai sebuah modul dengan perpanjangan untuk fitur-fitur "
"khusus PostgreSQL , seperti pencarian :class:`~django.contrib.postgres."
"fields.ArrayField`, :class:`~django.contrib.postgres.fields.HStoreField`, :"
"ref:`range-fields`, dan :lookup:`unaccent`. Sebuah uraian penuh dari fitur "
"tersedia :doc:`in the documentation </ref/contrib/postgres/index>`."

msgid "New data types"
msgstr "Jenis data baru"

msgid ""
"Django now has a :class:`~django.db.models.UUIDField` for storing "
"universally unique identifiers. It is stored as the native ``uuid`` data "
"type on PostgreSQL and as a fixed length character field on other backends. "
"There is a corresponding :class:`form field <django.forms.UUIDField>`."
msgstr ""
"Django sekarang mempunyai :class:`~django.db.models.UUIDField` untuk "
"menyimpan penciri unik universal. Itu disimpan sebagai jenis dara ``uuid`` "
"asli di PostgreSQL dan sebagaibidang karakter panjang tetap di backend lain. "
"Ada sebuah :class:`form field <django.forms.UUIDField>` yang sesuai."

msgid ""
"Django now has a :class:`~django.db.models.DurationField` for storing "
"periods of time - modeled in Python by :class:`~python:datetime.timedelta`. "
"It is stored in the native ``interval`` data type on PostgreSQL, as a "
"``INTERVAL DAY(9) TO SECOND(6)`` on Oracle, and as a ``bigint`` of "
"microseconds on other backends. Date and time related arithmetic has also "
"been improved on all backends. There is a corresponding :class:`form field "
"<django.forms.DurationField>`."
msgstr ""
"Django sekarang mempunyai sebuah :class:`~django.db.models.DurationField` "
"untuk menyimpan periode waktu - model di Python oleh :class:`~python:"
"datetime.timedelta`. Itu disimpan dalam jenis data ``interval`` asli di "
"PostgreSQL, sebagai sebuah ``INTERVAL DAY(9) TO SECOND(6)`` di Oracle, dan "
"sebagai ``bigint`` dari mikrodetik di backend lain. Tanggal dan waktu "
"terkait aritmatik juga telah ditingkatkan pada semua backend. Ada sebuah :"
"class:`form field <django.forms.DurationField>` yang berhubungan."

msgid "Query Expressions, Conditional Expressions, and Database Functions"
msgstr "Query Expressions, Conditional Expressions, dan Database Function"

msgid ""
":doc:`Query Expressions </ref/models/expressions>` allow you to create, "
"customize, and compose complex SQL expressions. This has enabled annotate to "
"accept expressions other than aggregates. Aggregates are now able to "
"reference multiple fields, as well as perform arithmetic, similar to ``F()`` "
"objects. :meth:`~django.db.models.query.QuerySet.order_by` has also gained "
"the ability to accept expressions."
msgstr ""
":doc:`Query Expressions </ref/models/expressions>` mengizinkan anda membuat, "
"menyesuaikan, dan menyusun pernyataan SQL rumit. Ini mempunyai keterangan "
"diadakan untuk menerima pernyataan selaind ari pengumpulan. Pengumpulan "
"sekarang dapat mengacu banyak bidang, sama halnya aritmatika, mirip pada "
"obyek ``F()``. :meth:`~django.db.models.query.QuerySet.order_by` juga "
"mendapatkan kemampuan menerima pernyataan."

msgid ""
":doc:`Conditional Expressions </ref/models/conditional-expressions>` allow "
"you to use :keyword:`if` ... :keyword:`elif` ... :keyword:`else` logic "
"within queries."
msgstr ""
":doc:`Conditional Expressions </ref/models/conditional-expressions>` "
"mengizinkan anda menggunakan logika :keyword:`if` ... :keyword:`elif` ... :"
"keyword:`else` dalam permintaan."

msgid ""
"A collection of :doc:`database functions </ref/models/database-functions>` "
"is also included with functionality such as :class:`~django.db.models."
"functions.Coalesce`, :class:`~django.db.models.functions.Concat`, and :class:"
"`~django.db.models.functions.Substr`."
msgstr ""
"Sebuah kumpulan dari :doc:`database functions </ref/models/database-"
"functions>` juga disertakan dengan kegunaan seperti :class:`~django.db."
"models.functions.Coalesce`, :class:`~django.db.models.functions.Concat`, "
"dan :class:`~django.db.models.functions.Substr`."

msgid "``TestCase`` data setup"
msgstr "Pengaturan data ``TestCase``"

msgid ""
":class:`~django.test.TestCase` has been refactored to allow for data "
"initialization at the class level using transactions and savepoints. "
"Database backends which do not support transactions, like MySQL with the "
"MyISAM storage engine, will still be able to run these tests but won't "
"benefit from the improvements. Tests are now run within two nested :func:"
"`~django.db.transaction.atomic()` blocks: one for the whole class and one "
"for each test."
msgstr ""
":class:`~django.test.TestCase` telah direfaktor untuk mengizinkan untuk "
"inisialisasi data pada tingkatan kelas menggunakan transaksi dan titik "
"simpan. Backend basisdata yang tidak mendukung transaksi, seperti MySQL "
"dengan penyimpanan MyISAM, akan masih dapat menjalankan percobaan ini tetapi "
"tidak akan bermanfaat dari perbaikan. Percobaan sekarang berjalan dalam dua "
"blok :func:`~django.db.transaction.atomic()` bersarang: satu untuk "
"keseluruhan kelas dan untuk setiap percobaan."

msgid ""
"The class method :meth:`TestCase.setUpTestData() <django.test.TestCase."
"setUpTestData>` adds the ability to set up test data at the class level. "
"Using this technique can speed up the tests as compared to using ``setUp()``."
msgstr ""

msgid ""
"Fixture loading within ``TestCase`` is now performed once for the whole "
"``TestCase``."
msgstr ""

msgid ""
":class:`~django.contrib.admin.ModelAdmin` now has a :meth:`~django.contrib."
"admin.ModelAdmin.has_module_permission` method to allow limiting access to "
"the module on the admin index page."
msgstr ""
":class:`~django.contrib.admin.ModelAdmin` sekarang mempunyai sebuah metode :"
"meth:`~django.contrib.admin.ModelAdmin.has_module_permission` untuk "
"mengizinkan membatasi akses pada modul di halaman indeks admin."

msgid ""
":class:`~django.contrib.admin.InlineModelAdmin` now has an attribute :attr:"
"`~django.contrib.admin.InlineModelAdmin.show_change_link` that supports "
"showing a link to an inline object's change form."
msgstr ""
":class:`~django.contrib.admin.InlineModelAdmin` sekarang mempunyai sebuah "
"atribut :attr:`~django.contrib.admin.InlineModelAdmin.show_change_link` yang "
"mendukung menampilkan sebuah tautan ke berderet formulir rubah obyek."

msgid ""
"Use the new ``django.contrib.admin.RelatedOnlyFieldListFilter`` in :attr:"
"`ModelAdmin.list_filter <django.contrib.admin.ModelAdmin.list_filter>` to "
"limit the ``list_filter`` choices to foreign objects which are attached to "
"those from the ``ModelAdmin``."
msgstr ""
"Gunakan ``django.contrib.admin.RelatedOnlyFieldListFilter`` baru di :attr:"
"`ModelAdmin.list_filter <django.contrib.admin.ModelAdmin.list_filter>` untuk "
"membatasi pilihan ``list_filter`` pada obyek asing yang dilampirkan untuk "
"mereka dari ``ModelAdmin``."

msgid ""
"The :meth:`ModelAdmin.delete_view() <django.contrib.admin.ModelAdmin."
"delete_view>` displays a summary of objects to be deleted on the deletion "
"confirmation page."
msgstr ""
":meth:`ModelAdmin.delete_view() <django.contrib.admin.ModelAdmin."
"delete_view>` menampilkan ringkasan dari obyek untuk dihapus pada jalaman "
"penegasan penghapusan."

msgid ""
"The jQuery library embedded in the admin has been upgraded to version 1.11.2."
msgstr "Pustaka jQuery tertanam di admin telah ditingkatkan ke versi 1.11.2."

msgid ""
"You can now specify :attr:`AdminSite.site_url <django.contrib.admin."
"AdminSite.site_url>` in order to display a link to the front-end site."
msgstr ""
"Anda sekarang dapat menentukan :attr:`AdminSite.site_url <django.contrib."
"admin.AdminSite.site_url>` untuk menampilkan sebuah tautan ke situs front-"
"end.+"

msgid ""
"You can now specify :attr:`ModelAdmin.show_full_result_count <django.contrib."
"admin.ModelAdmin.show_full_result_count>` to control whether or not the full "
"count of objects should be displayed on a filtered admin page."
msgstr ""
"Anda sekarang dapat menentukan :attr:`ModelAdmin.show_full_result_count "
"<django.contrib.admin.ModelAdmin.show_full_result_count>` untuk "
"mengendalikan apakah atau tidak hitungan penuh obyek harus ditampilkan pada "
"halaman admin tersaring."

msgid ""
"The ``AdminSite.password_change()`` method now has an ``extra_context`` "
"parameter."
msgstr ""
"Metode ``AdminSite.password_change()`` sekarang mempunyai sebuah parameter "
"``extra_context``."

msgid ""
"You can now control who may login to the admin site by overriding only :meth:"
"`AdminSite.has_permission() <django.contrib.admin.AdminSite.has_permission>` "
"and :attr:`AdminSite.login_form <django.contrib.admin.AdminSite."
"login_form>`. The ``base.html`` template has a new block ``usertools`` which "
"contains the user-specific header. A new context variable "
"``has_permission``, which gets its value from :meth:`~django.contrib.admin."
"AdminSite.has_permission`, indicates whether the user may access the site."
msgstr ""
"Anda sekarang dapat mengendalikan siapa yang dapat masuk ke situs admin "
"dengan menimpa hanya :meth:`AdminSite.has_permission() <django.contrib.admin."
"AdminSite.has_permission>` dan :attr:`AdminSite.login_form <django.contrib."
"admin.AdminSite.login_form>`. Cetakan ``base.html`` mempunyai blok baru "
"``usertools`` yang mengandung kepala khusus-pengguna. Sebuah variabel "
"konteks baru ``has_permission``, yang mendapatkan nilainya dari :meth:"
"`~django.contrib.admin.AdminSite.has_permission`, menandakan apakah pengguna "
"dapat mengakses situs."

msgid ""
"Foreign key dropdowns now have buttons for changing or deleting related "
"objects using a popup."
msgstr ""
"Dropdown foreign key sekarang mempunyai tombol untuk merubah atau menghapus "
"obyek  terkait menggunakan sebuah popup."

msgid ":mod:`django.contrib.admindocs`"
msgstr ":mod:`django.contrib.admindocs`"

msgid "reStructuredText is now parsed in model docstrings."
msgstr "reStructuredText sekarang diuraikan di model docstring."

msgid ""
"Authorization backends can now raise :class:`~django.core.exceptions."
"PermissionDenied` in :meth:`~django.contrib.auth.models.User.has_perm` and :"
"meth:`~django.contrib.auth.models.User.has_module_perms` to short-circuit "
"permission checking."
msgstr ""
"Otorisasi backend sekarang dapat memunculkan :class:`~django.core.exceptions."
"PermissionDenied` di :meth:`~django.contrib.auth.models.User.has_perm` dan :"
"meth:`~django.contrib.auth.models.User.has_module_perms` pada pemeriksaan "
"perizinan sirkit-pendek."

msgid ""
":class:`~django.contrib.auth.forms.PasswordResetForm` now has a method :meth:"
"`~django.contrib.auth.forms.PasswordResetForm.send_mail` that can be "
"overridden to customize the mail to be sent."
msgstr ""
":class:`~django.contrib.auth.forms.PasswordResetForm` sekarang mempunyai "
"metode :meth:`~django.contrib.auth.forms.PasswordResetForm.send_mail` yang "
"dapat ditimpa untuk menyesuaikan surat untuk dikirim."

msgid ""
"The ``max_length`` of :attr:`Permission.name <django.contrib.auth.models."
"Permission.name>` has been increased from 50 to 255 characters. Please run "
"the database migration."
msgstr ""
"``max_length`` dari :attr:`Permission.name <django.contrib.auth.models."
"Permission.name>` telah ditingkatkan dari 50 menjadi 255 karakter. Harap "
"jalankan perpindahan basisdata."

msgid ""
":attr:`~django.contrib.auth.models.CustomUser.USERNAME_FIELD` and :attr:"
"`~django.contrib.auth.models.CustomUser.REQUIRED_FIELDS` now supports :class:"
"`~django.db.models.ForeignKey`\\s."
msgstr ""
":attr:`~django.contrib.auth.models.CustomUser.USERNAME_FIELD` dan :attr:"
"`~django.contrib.auth.models.CustomUser.REQUIRED_FIELDS` sekarang mendukung :"
"class:`~django.db.models.ForeignKey`"

msgid ""
"The default iteration count for the PBKDF2 password hasher has been "
"increased by 33%. This backwards compatible change will not affect users who "
"have subclassed ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` to "
"change the default value."
msgstr ""
"Perhitungan putaran awal untuk pengacak sandi PBKDF2 telah ditingkatkan oleh "
"33%. Perubahan kesesuaian kebelakang tidak akan mempengaruhi pengguna yang "
"telah disubkelaskan ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` "
"untuk merubah nilai awal."

msgid ""
"A new :doc:`GeoJSON serializer </ref/contrib/gis/serializers>` is now "
"available."
msgstr ""
":doc:`GeoJSON serializer </ref/contrib/gis/serializers>` baru sekarang "
"tersedia."

msgid ""
"It is now allowed to include a subquery as a geographic lookup argument, for "
"example ``City.objects.filter(point__within=Country.objects."
"filter(continent='Africa').values('mpoly'))``."
msgstr ""
"Itu sekarang diizinkan untuk menyertakan sebuah sub permintaan sebagai "
"argumen pencarian geografi, sebagai contoh ``City.objects."
"filter(point__within=Country.objects.filter(continent='Africa')."
"values('mpoly'))``."

msgid ""
"The SpatiaLite backend now supports ``Collect`` and ``Extent`` aggregates "
"when the database version is 3.0 or later."
msgstr ""
"Backend SpatiaLite sekarang mendukung pengumpulan ``Collect`` dan ``Extent`` "
"ketika versi basisdata adalah 3.0 atay terakhir."

msgid ""
"The PostGIS 2 ``CREATE EXTENSION postgis`` and the SpatiaLite ``SELECT "
"InitSpatialMetaData`` initialization commands are now automatically run by :"
"djadmin:`migrate`."
msgstr ""
"Perintah inisialisasi  PostGIS 2 ``CREATE EXTENSION postgis`` dan the "
"SpatiaLite ``SELECT InitSpatialMetaData`` sekarang secara otomatis "
"dijalankan oleh :djadmin:`migrate`."

msgid ""
"The GDAL interface now supports retrieving properties of :ref:`raster "
"(image) data file <raster-data-source-objects>`."
msgstr ""
"Antarmuka GDAL sekarang mendukung mengambil sifat dari :ref:`raster (image) "
"data file <raster-data-source-objects>`."

msgid ""
"Compatibility shims for ``SpatialRefSys`` and ``GeometryColumns`` changed in "
"Django 1.2 have been removed."
msgstr ""
"Shim kesesuaian untuk ``SpatialRefSys`` dan ``GeometryColumns`` berubah di "
"Django 1.2 telah dipindahkan."

msgid ""
"All GDAL-related exceptions are now raised with ``GDALException``. The "
"former ``OGRException`` has been kept for backwards compatibility but should "
"not be used any longer."
msgstr ""
"Semua pengecualian terkait-GDAL sekarang dimunculkan dengan "
"``GDALException``. Pendahulu ``OGRException`` telah disimpan untuk "
"kesesuaian kebelakang tetapi harus tidak digunakan lagi."

msgid ""
"Session cookie is now deleted after :meth:`~django.contrib.sessions.backends."
"base.SessionBase.flush()` is called."
msgstr ""
"Kue sesi sekarang dihapus setelah :meth:`~django.contrib.sessions.backends."
"base.SessionBase.flush()` dipanggil."

msgid ""
"The new :attr:`Sitemap.i18n <django.contrib.sitemaps.Sitemap.i18n>` "
"attribute allows you to generate a sitemap based on the :setting:`LANGUAGES` "
"setting."
msgstr ""
"Atribut :attr:`Sitemap.i18n <django.contrib.sitemaps.Sitemap.i18n>` baru "
"mengizinkan anda untuk membangkitkan sebuah peta situs berdasarkan pada "
"pengaturan :setting:`LANGUAGES`."

msgid ""
":func:`~django.contrib.sites.shortcuts.get_current_site` will now lookup the "
"current site based on :meth:`request.get_host() <django.http.HttpRequest."
"get_host>` if the :setting:`SITE_ID` setting is not defined."
msgstr ""
":func:`~django.contrib.sites.shortcuts.get_current_site` akan sekarang "
"mencari situs saat ini berdasarkan pada :meth:`request.get_host() <django."
"http.HttpRequest.get_host>` jika pengaturan :setting:`SITE_ID` tidak "
"ditentukan."

msgid ""
"The default :class:`~django.contrib.sites.models.Site` created when running "
"``migrate`` now respects the :setting:`SITE_ID` setting (instead of always "
"using ``pk=1``)."
msgstr ""
"Awalan :class:`~django.contrib.sites.models.Site` dibuat ketika menjalankan "
"``migrate`` sekarang menghormati pengaturan :setting:`SITE_ID` (sebagai "
"gantinya dari selalu menggunakan ``pk=1``)."

msgid ""
"The ``incr()`` method of the ``django.core.cache.backends.locmem."
"LocMemCache`` backend is now thread-safe."
msgstr ""
"Metode ``incr()`` dari backend ``django.core.cache.backends.locmem."
"LocMemCache`` sekarang thread-safe."

msgid "Cryptography"
msgstr "Kriptografi"

msgid ""
"The ``max_age`` parameter of the :meth:`django.core.signing.TimestampSigner."
"unsign` method now also accepts a :py:class:`datetime.timedelta` object."
msgstr ""
"Parameter ``max_age`` dari metode :meth:`django.core.signing.TimestampSigner."
"unsign` sekarang juga menerima sebuah obyek :py:class:`datetime.timedelta`."

msgid ""
"The MySQL backend no longer strips microseconds from ``datetime`` values as "
"MySQL 5.6.4 and up supports fractional seconds depending on the declaration "
"of the datetime field (when ``DATETIME`` includes fractional precision "
"greater than 0). New datetime database columns created with Django 1.8 and "
"MySQL 5.6.4 and up will support microseconds. See the :ref:`MySQL database "
"notes <mysql-fractional-seconds>` for more details."
msgstr ""
"Backend MySQL tidak lagi melucuti mikrodetik dari nilai-nilai ``datetime`` "
"sebagai MySQL 5.6.4 dan mendukung sampai pecahan detik tergantung pada "
"pernyataan dari bidang datetime (ketika ``DATETIME`` menyertakan ketelitian "
"pecahan lebih besar dari 0). Kolom basisdata datetime baru dibuat dengan "
"Django 1.8 dan MySQL 5.6.4 dan sampai mendukung mikrodetik. Lihat :ref:"
"`MySQL database notes <mysql-fractional-seconds>` untuk rincian lebih."

msgid ""
"The MySQL backend no longer creates explicit indexes for foreign keys when "
"using the InnoDB storage engine, as MySQL already creates them automatically."
msgstr ""
"Backend MySQL tidak lagi dibuat membuat indeks jelas untuk foreign key "
"ketika menggunakan mesin penyimpanan InnoDB. ketika MySQL sudah membuat "
"mereka secara otomatis."

msgid ""
"The Oracle backend no longer defines the ``connection_persists_old_columns`` "
"feature as ``True``. Instead, Oracle will now include a cache busting clause "
"when getting the description of a table."
msgstr ""
"Backend Oracle tidak lagi menentukan fitur "
"``connection_persists_old_columns`` sebagai ``True``. Sebagai gantinya, "
"Oracle akan sekarang menyertakan sebuah klausa penghilang cache ketika "
"mendapatkan gambaran."

msgid ""
":ref:`Email backends <topic-email-backends>` now support the context manager "
"protocol for opening and closing connections."
msgstr ""
":ref:`Email backends <topic-email-backends>` sekarang mendukung protokol "
"pengelola konteks untuk membuka dan menutup hubungan."

msgid ""
"The SMTP email backend now supports ``keyfile`` and ``certfile`` "
"authentication with the :setting:`EMAIL_SSL_CERTFILE` and :setting:"
"`EMAIL_SSL_KEYFILE` settings."
msgstr ""
"Backend surel SMTP sekarang mendukung otentifikasi ``keyfile`` dan "
"``certfile`` dengan pengaturan :setting:`EMAIL_SSL_CERTFILE` dan :setting:"
"`EMAIL_SSL_KEYFILE`."

msgid ""
"The SMTP :class:`~django.core.mail.backends.smtp.EmailBackend` now supports "
"setting the ``timeout`` parameter with the :setting:`EMAIL_TIMEOUT` setting."
msgstr ""
"SMTP :class:`~django.core.mail.backends.smtp.EmailBackend` sekarang "
"mendukung pengaturan parameter ``timeout`` dengan pengaturan :setting:"
"`EMAIL_TIMEOUT`."

msgid ""
":class:`~django.core.mail.EmailMessage` and ``EmailMultiAlternatives`` now "
"support the ``reply_to`` parameter."
msgstr ""
":class:`~django.core.mail.EmailMessage` dan ``EmailMultiAlternatives`` "
"sekarang mendukung parameter ``reply_to``."

msgid ""
":meth:`Storage.get_available_name() <django.core.files.storage.Storage."
"get_available_name>` and :meth:`Storage.save() <django.core.files.storage."
"Storage.save>` now take a ``max_length`` argument to implement storage-level "
"maximum filename length constraints. Filenames exceeding this argument will "
"get truncated. This prevents a database error when appending a unique suffix "
"to a long filename that already exists on the storage. See the :ref:"
"`deprecation note <storage-max-length-update>` about adding this argument to "
"your custom storage classes."
msgstr ""
":meth:`Storage.get_available_name() <django.core.files.storage.Storage."
"get_available_name>` dan :meth:`Storage.save() <django.core.files.storage."
"Storage.save>` sekarang mengambil argumen ``max_length`` untuk menerapkan "
"batasan panjang nama berkas maksimal tingkat-penyimpanan. Nama berkas "
"melampaui argumen ini akan dipotong. Ini mencegah kesalahan basisdata ketika "
"menambahkan sebuah akhiran unik pada sebuah nama berkas panjang yang sudah "
"ada di penyimpanan. Lihat :ref:`deprecation note <storage-max-length-"
"update>` tentang menambahkan argumen ini ke penyesuaian kelas penyimpanan "
"anda."

msgid ""
"Form widgets now render attributes with a value of ``True`` or ``False`` as "
"HTML5 boolean attributes."
msgstr ""
"Widget formulir sekarang membangun atribut dengan nilai dari ``True`` atau "
"``False`` sebagai atribut boolean HTML5."

msgid ""
"The new :meth:`~django.forms.Form.has_error()` method allows checking if a "
"specific error has happened."
msgstr ""
"Metode :meth:`~django.forms.Form.has_error()` barumengizinkan pemeriksaan "
"jika kesalahan tertentu terjadi."

msgid ""
"If :attr:`~django.forms.Form.required_css_class` is defined on a form, then "
"the ``<label>`` tags for required fields will have this class present in its "
"attributes."
msgstr ""
"Jika :attr:`~django.forms.Form.required_css_class` ditentukan di sebuah "
"formulir, kemudian etiket ``<label>`` untuk bidang wajib akan mempunyai "
"kelas ini hadir di atributnya."

msgid ""
"The rendering of non-field errors in unordered lists (``<ul>``) now includes "
"``nonfield`` in its list of classes to distinguish them from field-specific "
"errors."
msgstr ""
"Pembangunan dari kesalagan bukan-bidang dalam unordered lists (``<ul>``) "
"sekarang menyertakan ``nonfield`` dalam daftarnya dari kelas-kelas untuk "
"membedakan mereka dari kesalagan bidang-tertentu."

msgid ""
":class:`~django.forms.Field` now accepts a :attr:`~django.forms.Field."
"label_suffix` argument, which will override the form's :attr:`~django.forms."
"Form.label_suffix`. This enables customizing the suffix on a per-field basis "
"— previously it wasn't possible to override a form's :attr:`~django.forms."
"Form.label_suffix` while using  shortcuts such as ``{{ form.as_p }}`` in "
"templates."
msgstr ""
":class:`~django.forms.Field` sekarang menerima sebuah argumen :attr:`~django."
"forms.Field.label_suffix`, yang akan menimpa :attr:`~django.forms.Form."
"label_suffix` formulir. Ini mengadakan penyesuaian akhiran pada berdasarkan "
"per bidang - sebelumnya itu tidak memungkinkan untuk mengesampingkan sebuah :"
"attr:`~django.forms.Form.label_suffix` formulir selagi menggunakan jalan "
"pintas seperti ``{{ form.as_p }}`` di cetakan."

msgid ""
":class:`~django.forms.SelectDateWidget` now accepts an :attr:`~django.forms."
"SelectDateWidget.empty_label` argument, which will override the top list "
"choice label when :class:`~django.forms.DateField` is not required."
msgstr ""
":class:`~django.forms.SelectDateWidget` sekarang menerima sebuah argumen :"
"attr:`~django.forms.SelectDateWidget.empty_label`, yang akan menimpa label "
"pilihan daftar teratas ketika :class:`~django.forms.DateField` tidak wajib."

msgid ""
"After an :class:`~django.forms.ImageField` has been cleaned and validated, "
"the ``UploadedFile`` object will have an additional ``image`` attribute "
"containing the Pillow ``Image`` instance used to check if the file was a "
"valid image. It will also update ``UploadedFile.content_type`` with the "
"image's content type as determined by Pillow."
msgstr ""
"Setelah sebuah :class:`~django.forms.ImageField` telah dibersihkan dan "
"disahkan, obyek ``UploadedFile`` akan mempunyai sebuah tambahan atribut "
"``image`` mengandung instance ``Image`` Pillow digunakan untuk memeriksa "
"jika berkas adalah nama sah. Itu juga akan memperbaharui ``UploadedFile."
"content_type`` dengan jenis isi gambar seperti yang ditentukan oleh Pillow."

msgid ""
"You can now pass a callable that returns an iterable of choices when "
"instantiating a :class:`~django.forms.ChoiceField`."
msgstr ""
"Anda dapat sekarang melewatkan callable yang mengembalikan sebuah perulangan "
"dari pilihan ketika membuat obyek :class:`~django.forms.ChoiceField`."

msgid ""
"Generic views that use :class:`~django.views.generic.list."
"MultipleObjectMixin` may now specify the ordering applied to the :attr:"
"`~django.views.generic.list.MultipleObjectMixin.queryset` by setting :attr:"
"`~django.views.generic.list.MultipleObjectMixin.ordering` or overriding :"
"meth:`~django.views.generic.list.MultipleObjectMixin.get_ordering()`."
msgstr ""
"Tampilan umum yang menggunakan :class:`~django.views.generic.list."
"MultipleObjectMixin` mungkin tidak menentukan urutan berlaku pada :attr:"
"`~django.views.generic.list.MultipleObjectMixin.queryset` dengan mengatur :"
"attr:`~django.views.generic.list.MultipleObjectMixin.ordering` atau menimpa :"
"meth:`~django.views.generic.list.MultipleObjectMixin.get_ordering()`."

msgid ""
"The new :attr:`SingleObjectMixin.query_pk_and_slug <django.views.generic."
"detail.SingleObjectMixin.query_pk_and_slug>` attribute allows changing the "
"behavior of :meth:`~django.views.generic.detail.SingleObjectMixin."
"get_object()` so that it'll perform its lookup using both the primary key "
"and the slug."
msgstr ""
"Atribut :attr:`SingleObjectMixin.query_pk_and_slug <django.views.generic."
"detail.SingleObjectMixin.query_pk_and_slug>` baru mengizinkan merubah "
"perilaku dari :meth:`~django.views.generic.detail.SingleObjectMixin."
"get_object()`  sehingga itu akan menampilkan pencariannya menggunakan kedua "
"primary key dan keong."

msgid ""
"The :meth:`~django.views.generic.edit.FormMixin.get_form()` method doesn't "
"require a ``form_class`` to be provided anymore. If not provided "
"``form_class`` defaults to :meth:`~django.views.generic.edit.FormMixin."
"get_form_class()`."
msgstr ""
"Metode :meth:`~django.views.generic.edit.FormMixin.get_form()` tidak "
"membutuhkan sebuah ``form_class`` untuk disediakan lagi. Jika tidak "
"disediakan ``form_class`` awalan pada :meth:`~django.views.generic.edit."
"FormMixin.get_form_class()`."

msgid ""
"Placeholders in :attr:`ModelFormMixin.success_url <django.views.generic.edit."
"ModelFormMixin.success_url>` now support the Python :py:meth:`str.format()` "
"syntax. The legacy ``%(<foo>)s`` syntax is still supported but will be "
"removed in Django 1.10."
msgstr ""
"Placeholders di :attr:`ModelFormMixin.success_url <django.views.generic.edit."
"ModelFormMixin.success_url>` sekarang mendukung sintaksis :py:meth:`str."
"format()` syntax. The legacy ``%(<foo>)s`` Python masih didukung tetapi akan "
"dipindahkan di Django 1.10."

msgid ""
":setting:`FORMAT_MODULE_PATH` can now be a list of strings representing "
"module paths. This allows importing several format modules from different "
"reusable apps. It also allows overriding those custom formats in your main "
"Django project."
msgstr ""
":setting:`FORMAT_MODULE_PATH` sekarang dapat berupa sebuah daftar dari "
"string mewakili jalur-jalur modul. Ini mengizinkan mengimpor beberapa bentuk "
"modul dari aplikasi dapat digunakan yang berbeda. Itu juga mengizinkan "
"menimpa bentuk penyesuaian tersebut di proyek Django utama anda."

msgid ""
"The :class:`django.utils.log.AdminEmailHandler` class now has a :meth:"
"`~django.utils.log.AdminEmailHandler.send_mail` method to make it more "
"subclass friendly."
msgstr ""
"Kelas :class:`django.utils.log.AdminEmailHandler` sekarang mempunyai sebuah "
"metode :meth:`~django.utils.log.AdminEmailHandler.send_mail` untuk "
"membuatnya subkelas lebih ramah."

msgid ""
"Database connections are now always closed after a management command called "
"from the command line has finished doing its job."
msgstr ""
"Hubungan basisdata sekarang selalu ditutup setelah perintah pengelolaan "
"dipanggil dari baris perintah telah selesai melakukan pekerjaannya."

msgid ""
"Commands from alternate package formats like eggs are now also discovered."
msgstr ""
"Perintah-perintah dari bentuk paket cara lain seperti eggs sekarang juga "
"ditemukan."

msgid ""
"The new :option:`dumpdata --output` option allows specifying a file to which "
"the serialized data is written."
msgstr ""
"Pilihan :option:`dumpdata --output` baru mengizinkan menentukan sebuah "
"berkas yang data diserialisasi ditulis."

msgid ""
"The new :option:`makemessages --exclude` and :option:`compilemessages --"
"exclude` options allow excluding specific locales from processing."
msgstr ""
"Pilihan :option:`makemessages --exclude` dan :option:`compilemessages --"
"exclude` baru mengizinkan mengeluarkan lokal tertentu dari pengolahan."

msgid ""
":djadmin:`compilemessages` now has a ``--use-fuzzy`` or ``-f`` option which "
"includes fuzzy translations into compiled files."
msgstr ""
":djadmin:`compilemessages` sekarang mempunyai sebuah pilihan ``--use-fuzzy`` "
"atau ``-f`` yang menyertakan terjemahan kabur kedalam berkas-berkas tersusun."

msgid ""
"The :option:`loaddata --ignorenonexistent` option now ignores data for "
"models that no longer exist."
msgstr ""
"Pilihan :option:`loaddata --ignorenonexistent` sekarang mengabaikan data "
"untuk model yang tidak lagi ada. "

msgid ":djadmin:`runserver` now uses daemon threads for faster reloading."
msgstr ""
":djadmin:`runserver` sekarang menggunakan thread daemon untuk memuat kembali "
"lebih cepat."

msgid ""
":djadmin:`inspectdb` now outputs ``Meta.unique_together``. It is also able "
"to introspect :class:`~django.db.models.AutoField` for MySQL and PostgreSQL "
"databases."
msgstr ""
":djadmin:`inspectdb` sekarang mengeluarkan ``Meta.unique_together``. Itu "
"juga dapat menginterospeksi :class:`~django.db.models.AutoField` untuk "
"basisdata MySQL dan PostgreSQL."

msgid ""
"When calling management commands with options using :func:`~django.core."
"management.call_command`, the option name can match the command line option "
"name (without the initial dashes) or the final option destination variable "
"name, but in either case, the resulting option received by the command is "
"now always the ``dest`` name specified in the command option definition (as "
"long as the command uses the :mod:`argparse` module)."
msgstr ""
"Ketika memanggil perintah pengelolaan dengan pilihan menggunakan :func:"
"`~django.core.management.call_command`, nama pilihan dapat mencocokkan nama "
"pilihan baris perintah (tanpa awalan tanda garis) atau nama variabel tujuan "
"pilihan akhir, tetapi dalam kedua kasus, menghasilkan pilihan diterima oleh "
"perintah sekarang selalu nama ``dest`` ditentukan dalam pengertian pilihan "
"perintah (selama perintah menggunakan modul :mod:`argparse`)."

msgid ""
"The :djadmin:`dbshell` command now supports MySQL's optional SSL certificate "
"authority setting (``--ssl-ca``)."
msgstr ""
"Perintah :djadmin:`dbshell` sekarang mendukung pilihan pengaturan wewenang "
"sertifikat SSL MySQL (``--ssl-ca``)."

msgid ""
"The new :option:`makemigrations --name` allows giving the migration(s) a "
"custom name instead of a generated one."
msgstr ""
":option:`makemigrations --name` baru mengizinkan memberikan perpindahan "
"sebuah penyesuaian nama daribada satu yang dibangkitkan."

msgid ""
"The :djadmin:`loaddata` command now prevents repeated fixture loading. If :"
"setting:`FIXTURE_DIRS` contains duplicates or a default fixture directory "
"path (``app_name/fixtures``), an exception is raised."
msgstr ""
"Perintah :djadmin:`loaddata` sekarang mencegah memuat alat bantu berulang. "
"Jika :setting:`FIXTURE_DIRS` mengandung ganda atau jalur direktori alat "
"bantu awalan (``app_name/fixtures``), sebuah pengecualian dimunculkan."

msgid ""
"The new ``makemigrations --exit`` option allows exiting with an error code "
"if no migrations are created."
msgstr ""
"Pilihan baru ``makemigrations --exit`` mengizinkan keluar dengan sebuah kode "
"kesalahan jika tidak ada perpindahan dibuat."

msgid ""
"The new :djadmin:`showmigrations` command allows listing all migrations and "
"their dependencies in a project."
msgstr ""
"Perintah :djadmin:`showmigrations` baru mengizinkan mendaftarkan semua "
"perpindahan dan ketergantungan mereka dalam sebuah proyek."

msgid "Middleware"
msgstr "Middleware"

msgid ""
"The :attr:`CommonMiddleware.response_redirect_class <django.middleware."
"common.CommonMiddleware.response_redirect_class>` attribute allows you to "
"customize the redirects issued by the middleware."
msgstr ""
"Atribut :attr:`CommonMiddleware.response_redirect_class <django.middleware."
"common.CommonMiddleware.response_redirect_class>` mengizinkan anda "
"menyesuaikan pengalihan yang diterbitan oleh middleware."

msgid ""
"A debug message will be logged to the ``django.request`` logger when a "
"middleware raises a :exc:`~django.core.exceptions.MiddlewareNotUsed` "
"exception in :setting:`DEBUG` mode."
msgstr ""
"Sebuah pesan pencari kesalahan akan dicatat pada pencatat ``django.request`` "
"ketika middleware memunculkan sebuah pengecualian :exc:`~django.core."
"exceptions.MiddlewareNotUsed` di suasana :setting:`DEBUG`."

msgid ""
"The :class:`~django.db.migrations.operations.RunSQL` operation can now "
"handle parameters passed to the SQL statements."
msgstr ""
"Operasi :class:`~django.db.migrations.operations.RunSQL`  sekarang dapat "
"menangani parameter dilewatkan ke pernyataan SQL."

msgid ""
"It is now possible to have migrations (most probably :ref:`data migrations "
"<data-migrations>`) for applications without models."
msgstr ""
"Itu sekarang memungkinkan untuk berpindah (kebanyakan mungkin :ref:`data "
"migrations <data-migrations>`) untuk aplikasi tanpa model."

msgid ""
"Migrations can now :ref:`serialize model managers <using-managers-in-"
"migrations>` as part of the model state."
msgstr ""
"Perpindahan sekarang dapat :ref:`serialize model managers <using-managers-in-"
"migrations>` sebagai bagian dari keadaan model."

msgid ""
"A :ref:`generic mechanism to handle the deprecation of model fields "
"<migrations-removing-model-fields>` was added."
msgstr ""
"Sebuah :ref:`generic mechanism to handle the deprecation of model fields "
"<migrations-removing-model-fields>` telah ditambahkan."

msgid ""
"The :meth:`RunPython.noop() <django.db.migrations.operations.RunPython."
"noop>` and :attr:`RunSQL.noop <django.db.migrations.operations.RunSQL.noop>` "
"class method/attribute were added to ease in making ``RunPython`` and "
"``RunSQL`` operations reversible."
msgstr ""
"Metode/atribut kelas :meth:`RunPython.noop() <django.db.migrations."
"operations.RunPython.noop>` dan :attr:`RunSQL.noop <django.db.migrations."
"operations.RunSQL.noop>` telah ditambahkan untuk memudahkan dalam pembuatan "
"operasi ``RunPython`` dan ``RunSQL`` yang dapat dibatalkan."

msgid ""
"The migration operations :class:`~django.db.migrations.operations.RunPython` "
"and :class:`~django.db.migrations.operations.RunSQL` now call the :meth:"
"`allow_migrate` method of database routers. The router can use the newly "
"introduced ``app_label`` and ``hints`` arguments to make a routing decision. "
"To take advantage of this feature you need to update the router to the new "
"``allow_migrate`` signature, see the :ref:`deprecation section <deprecated-"
"signature-of-allow-migrate>` for more details."
msgstr ""
"Operasi perpindahan :class:`~django.db.migrations.operations.RunPython` dan :"
"class:`~django.db.migrations.operations.RunSQL` sekarang memanggil metode :"
"meth:`allow_migrate` dari perute basisdata. Perute dapat menggunakan yang "
"baru diperkenalkan argumen ``app_label`` dan ``hints`` untuk "
"membuatkeputusan perutean. Untuk mengambil keuntungan dari fitur ini anda "
"butuh memperbaharui ke tanda tangan ``allow_migrate`` baru, lihat :ref:"
"`deprecation section <deprecated-signature-of-allow-migrate>` untuk rincian "
"lebih."

msgid ""
"Django now logs at most 9000 queries in ``connections.queries``, in order to "
"prevent excessive memory usage in long-running processes in debug mode."
msgstr ""
"Django sekarang mencatat paling 9000 permintaan di ``connections.queries``, "
"untuk mencegah penggunaan memori terlalu banyak di pengolahan berjalan-lama "
"dalam suasana mencari kesalahan."

msgid ""
"There is now a model ``Meta`` option to define a :attr:`default related name "
"<django.db.models.Options.default_related_name>` for all relational fields "
"of a model."
msgstr ""
"Ada sekarang sebuah pilihan ``Meta`` model untuk menentukan sebuah :attr:"
"`default related name <django.db.models.Options.default_related_name>` untuk "
"semua bidang berhubungan dari sebuah model."

msgid ""
"Pickling models and querysets across different versions of Django isn't "
"officially supported (it may work, but there's no guarantee). An extra "
"variable that specifies the current Django version is now added to the "
"pickled state of models and querysets, and Django raises a "
"``RuntimeWarning`` when these objects are unpickled in a different version "
"than the one in which they were pickled."
msgstr ""
"Model pickling dan queryset lintas versi berbeda dari Django tidak secara "
"resmi didukung (itu mungkin bekerja, tetapi tidak ada jaminan). Sebuah "
"variabel tambahan yang menentukan versi Django saat ini sekarang ditambahkan "
"ke keadaan pickel dari model dan queryset, dan Django memunculkan sebuah "
"``RuntimeWarning`` ketika obyek-obyek ini tidak di pickle dalam versi "
"berbeda daripada satu yang mereka telah di pickle. "

msgid ""
"Added :meth:`Model.from_db() <django.db.models.Model.from_db()>` which "
"Django uses whenever objects are loaded using the ORM. The method allows "
"customizing model loading behavior."
msgstr ""
"Ditambahkan :meth:`Model.from_db() <django.db.models.Model.from_db()>` "
"dimana pengguna Django menggunakan kapanpun obyek-obyek dimuat menggunakan "
"ORM. Metode ini mengizinkan menyesuaikan perilaku memuat model."

msgid ""
"``extra(select={...})`` now allows you to escape a literal ``%s`` sequence "
"using ``%%s``."
msgstr ""
"``extra(select={...})`` sekarang mengizinkan anda untuk meloloskan urutan "
"``%s`` harfiah menggunakan ``%%s``."

msgid ""
":doc:`Custom Lookups</howto/custom-lookups>` can now be registered using a "
"decorator pattern."
msgstr ""
":doc:`Custom Lookups</howto/custom-lookups>` sekarang dapat didaftarkan "
"menggunakan pola penghias."

msgid ""
"The new :attr:`Transform.bilateral <django.db.models.Transform.bilateral>` "
"attribute allows creating bilateral transformations. These transformations "
"are applied to both ``lhs`` and ``rhs`` when used in a lookup expression, "
"providing opportunities for more sophisticated lookups."
msgstr ""
"Atribut :attr:`Transform.bilateral <django.db.models.Transform.bilateral>` "
"baru mengizinkan membuat perubahan timbal balik. Terjemahan ini diberlakukan "
"pada kedua ``lhs`` dan ``rhs`` ketika digunakan dalam pernyataan pencarian, "
"menyediakan kesempatan untuk pencarian lebih mutakhir."

msgid ""
"SQL special characters (\\, %, _) are now escaped properly when a pattern "
"lookup (e.g. ``contains``, ``startswith``, etc.) is used with an ``F()`` "
"expression as the right-hand side. In those cases, the escaping is performed "
"by the database, which can lead to somewhat complex queries involving nested "
"``REPLACE`` function calls."
msgstr ""
"Karakter khusus SQL (\\, %, _) sekarang diloloskan dengan benar ketika "
"pencarian pola (sebagai contoh ``contains``, ``startswith``, dll.) digunakan "
"dengan sebuah ungkapan ``F()`` sebagai sisi tangan-kanan. Di kasus-kasus "
"tersebut, pelolosan dilakukan oleh basisdata, yang dapat membawa ke "
"permintaan agak rumit melibatkan pemanggilan fungsi ``REPLACE`` bersarang."

msgid ""
"You can now refresh model instances by using :meth:`Model.refresh_from_db() "
"<django.db.models.Model.refresh_from_db>`."
msgstr ""
"Anda sekarang dapat menyegarkan instance model dengan menggunakan :meth:"
"`Model.refresh_from_db() <django.db.models.Model.refresh_from_db>`."

msgid ""
"You can now get the set of deferred fields for a model using :meth:`Model."
"get_deferred_fields() <django.db.models.Model.get_deferred_fields>`."
msgstr ""
"Anda sekarang dapat mendapatkan setelan dari bidang-bidang yang ditunda "
"untuk sebuah model menggunakan :meth:`Model.get_deferred_fields() <django.db."
"models.Model.get_deferred_fields>`."

msgid ""
"Model field ``default``’s are now used when primary key field's are set to "
"``None``."
msgstr ""
"Bidang model ``default`` ini sekarang digunakan ketika bidang primary key "
"disetel menjadi ``None``."

msgid ""
"Exceptions from the ``(receiver, exception)`` tuples returned by :meth:"
"`Signal.send_robust() <django.dispatch.Signal.send_robust>` now have their "
"traceback attached as a ``__traceback__`` attribute."
msgstr ""
"Pengecualian dari tuple ``(receiver, exception)`` dikembalikan oleh :meth:"
"`Signal.send_robust() <django.dispatch.Signal.send_robust>` sekarang "
"mempunyai melacak kembali dilampirkan sebagai atribut ``__traceback__``."

msgid ""
"The ``environ`` argument, which contains the WSGI environment structure from "
"the request, was added to the :data:`~django.core.signals.request_started` "
"signal."
msgstr ""
"Argumen ``environ``, yang mengandung struktur lingkungan WSGI dari "
"permintaan, telah ditambahkan ke sinyal :data:`~django.core.signals."
"request_started`."

msgid ""
"You can now import the :func:`~django.test.signals.setting_changed` signal "
"from ``django.core.signals`` to avoid loading ``django.test`` in non-test "
"situations. Django no longer does so itself."
msgstr ""
"Anda sekarang dapat mengimpor sinyal :func:`~django.test.signals."
"setting_changed` dari ``django.core.signals`` untuk menghindari memuat "
"``django.test`` di keadaan bukan-percobaan. Django tidak lagi melalukannya "
"sendiri."

msgid "System Check Framework"
msgstr "Kerangka Sistem Pemeriksaan"

msgid ":attr:`~django.core.checks.register` can now be used as a function."
msgstr ""
":attr:`~django.core.checks.register` dapat sekarang digunakan sebagai sebuah "
"fungsi."

msgid ""
":tfilter:`urlize` now supports domain-only links that include characters "
"after the top-level domain (e.g. ``djangoproject.com/`` and ``djangoproject."
"com/download/``)."
msgstr ""
":tfilter:`urlize` sekarang mendukung tautan hanya-ranah yang menyertakan "
"karakter setelah ranah tingkat-atas (sebagai contoh ``djangoproject.com/`` "
"dan ``djangoproject.com/download/``)."

msgid ""
":tfilter:`urlize` doesn't treat exclamation marks at the end of a domain or "
"its query string as part of the URL (the URL in e.g. ``'djangoproject.com!`` "
"is ``djangoproject.com``)"
msgstr ""
":tfilter:`urlize` tidak memperlakukan tanda seruan pada akhir dari sebuah "
"ranah atau string permintaannya sebagai bagian dari URL ( URL di sebagai "
"contoh ``'djangoproject.com!`` adalah ``djangoproject.com``)"

msgid ""
"Added a :class:`locmem.Loader <django.template.loaders.locmem.Loader>` class "
"that loads Django templates from a Python dictionary."
msgstr ""
"Ditambahkan sebuah kelas :class:`locmem.Loader <django.template.loaders."
"locmem.Loader>` yang memuat cetakan Django dari sebuah kamus Python. "

msgid ""
"The :ttag:`now` tag can now store its output in a context variable with the "
"usual syntax: ``{% now 'j n Y' as varname %}``."
msgstr ""
"Etiket :ttag:`now` sekarang dapat menyimpan keluarannya di variabel konteks "
"dengan sintaksis biasa: ``{% sekarang 'j n Y' sebagai varname %}``."

msgid "``WSGIRequest`` now respects paths starting with ``//``."
msgstr "``WSGIRequest`` sekarang menghormati jalur dimulai dengan ``//``."

msgid ""
"The :meth:`HttpRequest.build_absolute_uri() <django.http.HttpRequest."
"build_absolute_uri>` method now handles paths starting with ``//`` correctly."
msgstr ""
"Metode :meth:`HttpRequest.build_absolute_uri() <django.http.HttpRequest."
"build_absolute_uri>` sekarang menangani jalur dimulai dengan  tepat ``//``."

msgid ""
"If :setting:`DEBUG` is ``True`` and a request raises a :exc:`~django.core."
"exceptions.SuspiciousOperation`, the response will be rendered with a "
"detailed error page."
msgstr ""
"Jika :setting:`DEBUG` adalah ``True`` dan sebuah permintaan memunculkan "
"sebuah :exc:`~django.core.exceptions.SuspiciousOperation`, tanggapan akan "
"dibangun dengan halaman kesalahan rinci."

msgid ""
"The ``query_string`` argument of :class:`~django.http.QueryDict` is now "
"optional, defaulting to ``None``, so a blank ``QueryDict`` can now be "
"instantiated with ``QueryDict()`` instead of ``QueryDict(None)`` or "
"``QueryDict('')``."
msgstr ""
"Argumen ``query_string`` dari :class:`~django.http.QueryDict` sekarang "
"pilihan, awalan ke  ``None``, jadi ``QueryDict`` kosong sekarang dapat di "
"instansiasikan dengan ``QueryDict()`` sebagai gantinya ``QueryDict(None)`` "
"atau ``QueryDict('')``."

msgid ""
"The ``GET`` and ``POST`` attributes of an :class:`~django.http.HttpRequest` "
"object are now :class:`~django.http.QueryDict`\\s rather than dictionaries, "
"and the ``FILES`` attribute is now a ``MultiValueDict``. This brings this "
"class into line with the documentation and with ``WSGIRequest``."
msgstr ""
"Atribut ``GET`` dan ``POST`` dari sebuah obyek :class:`~django.http."
"HttpRequest` sekarang :class:`~django.http.QueryDict` daripada kamus, dan "
"atribut ``FILES`` sekarang sebuah ``MultiValueDict``. Ini membawa kelas ini "
"kedalam baris dengan dokumentasi dan dengan ``WSGIRequest``."

msgid ""
"The :attr:`HttpResponse.charset <django.http.HttpResponse.charset>` "
"attribute was added."
msgstr ""
"Atribut :attr:`HttpResponse.charset <django.http.HttpResponse.charset>` "
"telah ditambahkan"

msgid ""
"``WSGIRequestHandler`` now follows RFC in converting URI to IRI, using "
"``uri_to_iri()``."
msgstr ""
"``WSGIRequestHandler`` sekarang mengikuti RFC dalam merubah URI menjadi IRI, "
"menggunakan ``uri_to_iri()``."

msgid ""
"The :meth:`HttpRequest.get_full_path() <django.http.HttpRequest."
"get_full_path>` method now escapes unsafe characters from the path portion "
"of a Uniform Resource Identifier (URI) properly."
msgstr ""
"Metode :meth:`HttpRequest.get_full_path() <django.http.HttpRequest."
"get_full_path>` sekarang meloloskan karakter tidak aman dari bagian jalur "
"dari sebuah Uniform Resource Identifier (URI) dengan benar."

msgid ""
":class:`~django.http.HttpResponse` now implements a few additional methods "
"like :meth:`~django.http.HttpResponse.getvalue` so that instances can be "
"used as stream objects."
msgstr ""
":class:`~django.http.HttpResponse` sekarang menerapkan sedikit tambahan "
"motode seperti :meth:`~django.http.HttpResponse.getvalue` sehingga instance "
"dapat digunakan sebagai obyek aliran."

msgid ""
"The new :meth:`HttpResponse.setdefault() <django.http.HttpResponse."
"setdefault>` method allows setting a header unless it has already been set."
msgstr ""
"Metode :meth:`HttpResponse.setdefault() <django.http.HttpResponse."
"setdefault>` baru mengizinkan mengatur sebuah kepala meskipun itu sudah "
"disetel."

msgid "You can use the new :class:`~django.http.FileResponse` to stream files."
msgstr ""
"Anda dapat menggunakan :class:`~django.http.FileResponse` baru pada berkas "
"aliran."

msgid ""
"The :func:`~django.views.decorators.http.condition` decorator for "
"conditional view processing now supports the ``If-unmodified-since`` header."
msgstr ""
"Penghias :func:`~django.views.decorators.http.condition` untuk pengolahan "
"tampilan bersyarat sekarang mendukung kepala ``If-unmodified-since``."

msgid ""
"The :class:`RequestFactory.trace() <django.test.RequestFactory>` and :class:"
"`Client.trace() <django.test.Client.trace>` methods were implemented, "
"allowing you to create ``TRACE`` requests in your tests."
msgstr ""
"Metode  :class:`RequestFactory.trace() <django.test.RequestFactory>` dan :"
"class:`Client.trace() <django.test.Client.trace>` diterapkan, mengizinkan "
"anda membuat permintaan ``TRACE`` di percobaan anda."

msgid ""
"The ``count`` argument was added to :meth:`~django.test.SimpleTestCase."
"assertTemplateUsed`. This allows you to assert that a template was rendered "
"a specific number of times."
msgstr ""
"Argumen ``count`` telah ditambahkan ke :meth:`~django.test.SimpleTestCase."
"assertTemplateUsed`. Ini mengizinkan anda untuk menegaskan bahwa sebuah "
"cetakan telah membangun sejumlah kali tertentu."

msgid ""
"The new :meth:`~django.test.SimpleTestCase.assertJSONNotEqual` assertion "
"allows you to test that two JSON fragments are not equal."
msgstr ""
"Penegasan :meth:`~django.test.SimpleTestCase.assertJSONNotEqual` baru "
"mengizinkan anda mencoba yang dua fragmen JSON tidak setara."

msgid ""
"Added options to the :djadmin:`test` command to preserve the test database (:"
"option:`--keepdb <test --keepdb>`), to run the test cases in reverse order (:"
"option:`--reverse <test --reverse>`), and to enable SQL logging for failing "
"tests (:option:`--debug-sql <test --debug-sql>`)."
msgstr ""
"Ditambahkan pilihan pada perintah :djadmin:`test` untuk mempertahankan "
"basisdata percobaan (:option:`--keepdb <test --keepdb>`), untuk menjalankan "
"percobaan-percobaan kasus dalam urutan terbalik (:option:`--reverse <test --"
"reverse>`), dan untuk mengadakan pencatatan SQL untuk kegagalan percobaan (:"
"option:`--debug-sql <test --debug-sql>`)."

msgid ""
"Added the :attr:`~django.test.Response.resolver_match` attribute to test "
"client responses."
msgstr ""
"Ditambahkan atribut :attr:`~django.test.Response.resolver_match` pada "
"mencoba tanggapan klien"

msgid ""
"Added several settings that allow customization of test tablespace "
"parameters for Oracle: :setting:`DATAFILE`, :setting:`DATAFILE_TMP`, :"
"setting:`DATAFILE_MAXSIZE` and :setting:`DATAFILE_TMP_MAXSIZE`."
msgstr ""
"Ditambahkan beberapa pengaturan yang mengizinkan penyesuaian dari parameter "
"tablespace percobaan untuk Oracle: :setting:`DATAFILE`, :setting:"
"`DATAFILE_TMP`, :setting:`DATAFILE_MAXSIZE` dan :setting:"
"`DATAFILE_TMP_MAXSIZE`."

msgid ""
"The :func:`~django.test.override_settings` decorator can now affect the "
"master router in :setting:`DATABASE_ROUTERS`."
msgstr ""
"Penghias :func:`~django.test.override_settings` sekarang dapat mempengaruhi "
"rute master dalam :setting:`DATABASE_ROUTERS`."

msgid "Added test client support for file uploads with file-like objects."
msgstr ""
"Ditambahkan dukungan klien percobaan untuk unggahberkas dengan obyek seperti-"
"berkas."

msgid ""
"A shared cache is now used when testing with an SQLite in-memory database "
"when using Python 3.4+ and SQLite 3.7.13+. This allows sharing the database "
"between threads."
msgstr ""
"Sebuah cache berbagi sekarang digunakan ketika dicoba dengan sebuah "
"basisdata di-memori SQLite ketika menggunakan Python 3.4+ dan SQLite "
"3.7.13+. Ini mengizinkan berbagi basisdata diantara thread."

msgid ""
":class:`~django.core.validators.URLValidator` now supports IPv6 addresses, "
"Unicode domains, and URLs containing authentication data."
msgstr ""

msgid "Backwards incompatible changes in 1.8"
msgstr "Perubahan bertentangan kebelakang di 1.8"

msgid ""
"In addition to the changes outlined in this section, be sure to review the :"
"ref:`deprecation plan <deprecation-removed-in-1.8>` for any features that "
"have been removed. If you haven't updated your code within the deprecation "
"timeline for a given feature, its removal may appear as a backwards "
"incompatible change."
msgstr ""
"Sebagai tambahan pada perubahan diuraikan dalam bagian ini, pastikan "
"meninjau kembali :ref:`deprecation plan <deprecation-removed-in-1.8>` untuk "
"setiap fitur-fitur yang telah dipindahkan. Jika anda belum memperbaharui "
"kode anda dalam linimasa pengusangan untuk fitur yang diberikan, "
"perpindahannya mungkin muncul sebagai sebuah perubahan tidak sesuai "
"kebelakang."

msgid "Related object operations are run in a transaction"
msgstr "Tindakan obyek terkait berjalan di sebuah transaksi."

msgid ""
"Some operations on related objects such as :meth:`~django.db.models.fields."
"related.RelatedManager.add()` or direct assignment ran multiple data "
"modifying queries without wrapping them in transactions. To reduce the risk "
"of data corruption, all data modifying methods that affect multiple related "
"objects (i.e. ``add()``, ``remove()``, ``clear()``, and direct assignment) "
"now perform their data modifying queries from within a transaction, provided "
"your database supports transactions."
msgstr ""
"Beberapa tindakan pada obyek terkait seperti :meth:`~django.db.models.fields."
"related.RelatedManager.add()` atau penugasan langsung menjalankan banyak "
"data merubah permintaan tanpa membungkus mereka di transaksi. Untuk "
"mengurangi resiko dari kerusakan data, semua data merubah metode yang "
"mempengaruhi banyak obyek terkait (yaitu ``add()``, ``remove()``, "
"``clear()``, dan penugasan langsung) sekarang melakukan data mereka merubah "
"permintaan dari dalam sebuah transaksi, disediakan transaksi dukungan "
"basisdata anda."

msgid ""
"This has one backwards incompatible side effect, signal handlers triggered "
"from these methods are now executed within the method's transaction and any "
"exception in a signal handler will prevent the whole operation."
msgstr ""
"Ini mempunyai satu efek samping ketidaksesuaian kebelakang, penangan sinyal "
"dipicu dari metode ini sekarang dijalankan dalam transaksi metode dan apapun "
"pengecualian di sebuah penangan sinyal akan mencegah seluruh operasi."

msgid "Assigning unsaved objects to relations raises an error"
msgstr ""
"Menugaskan obyek tidak tersimpan pada hubungan memunculkan sebuah kesalahan"

msgid ""
"To more easily allow in-memory usage of models, this change was reverted in "
"Django 1.8.4 and replaced with a check during ``model.save()``. For example:"
msgstr ""

msgid ""
"A similar check on assignment to reverse one-to-one relations was removed in "
"Django 1.8.5."
msgstr ""
"Pemeriksaan mirip pada penugasan untuk membalikkan hubungan one-to-one telah "
"dipindahkan di Django 1.8.5."

msgid ""
"Assigning unsaved objects to a :class:`~django.db.models.ForeignKey`, :class:"
"`~django.contrib.contenttypes.fields.GenericForeignKey`, and :class:`~django."
"db.models.OneToOneField` now raises a :exc:`ValueError`."
msgstr ""
"Menugaskan obyek tidak tersimpan pada sebuah :class:`~django.db.models."
"ForeignKey`, :class:`~django.contrib.contenttypes.fields.GenericForeignKey`, "
"dan :class:`~django.db.models.OneToOneField` sekarang memunculkan :exc:"
"`ValueError`."

msgid ""
"Previously, the assignment of an unsaved object would be silently ignored. "
"For example:"
msgstr ""

msgid "Now, an error will be raised to prevent data loss:"
msgstr ""

msgid ""
"If you require allowing the assignment of unsaved instances (the old "
"behavior) and aren't concerned about the data loss possibility (e.g. you "
"never save the objects to the database), you can disable this check by using "
"the ``ForeignKey.allow_unsaved_instance_assignment`` attribute. (This "
"attribute was removed in 1.8.4 as it's no longer relevant.)"
msgstr ""
"Jika anda membutuhkan mengizinkan penugasan dari instance tidak disimpan "
"(perilaku lama) dan tidak khawatir tentang kemungkinan kehilangan data "
"(sebagai contoh anda tidak pernah menyimpan obyek-obyek ke basisdata), anda "
"dapat meniadakan pemeriksaan ini dengan menggunakan atribut ``ForeignKey."
"allow_unsaved_instance_assignment``. (Atribut ini telah dipindahkan di 1.8.4 "
"ketika itu tidak lagi bersangkut paut.)"

msgid "Management commands that only accept positional arguments"
msgstr "Perintah pengelolaan yang hanya menerima argumen penempatan"

msgid ""
"If you have written a custom management command that only accepts positional "
"arguments and you didn't specify the ``args`` command variable, you might "
"get an error like ``Error: unrecognized arguments: ...``, as variable "
"parsing is now based on :py:mod:`argparse` which doesn't implicitly accept "
"positional arguments. You can make your command backwards compatible by "
"simply setting the ``args`` class variable. However, if you don't have to "
"keep compatibility with older Django versions, it's better to implement the "
"new :meth:`~django.core.management.BaseCommand.add_arguments` method as "
"described in :doc:`/howto/custom-management-commands`."
msgstr ""
"Jika anda telah menulis sebuah penyesuaian perintah pengelolaan yang hanya "
"menerima argumen penempatan dan anda tidak menentukan variabel perintah "
"``args``, anda mungkin mendapatkan sebuah kesalahan seperti ``Error: "
"unrecognized arguments: ...``, ketika penguraian variabel sekarang "
"berdasarkan pada :py:mod:`argparse` yang tidak secara langsung menerima "
"argumen penempatan. Anda dapat membuat perintah kesesuaian kebelakang anda "
"dengan cukup mengatur variabel kelas ``args``. Bagaimanapun, jika anda tidak "
"harus menhaga kesesuaian dengan versi Django terlama, itu adalah lebih baik "
"menerapkan metode :meth:`~django.core.management.BaseCommand.add_arguments`  "
"baru seperti digambarkan di :doc:`/howto/custom-management-commands`."

msgid "Custom test management command arguments through test runner"
msgstr ""
"Penyesuaian argumen perintah pengelolaan percobaan melalui pejalan percobaan"

msgid ""
"The method to add custom arguments to the ``test`` management command "
"through the test runner has changed. Previously, you could provide an "
"``option_list`` class variable on the test runner to add more arguments (à "
"la :py:mod:`optparse`). Now to implement the same behavior, you have to "
"create an ``add_arguments(cls, parser)`` class method on the test runner and "
"call ``parser.add_argument`` to add any custom arguments, as parser is now "
"an :py:class:`argparse.ArgumentParser` instance."
msgstr ""

msgid ""
"Model check ensures auto-generated column names are within limits specified "
"by database"
msgstr ""
"Pemeriksaan model memastikan nama-nama kolom dibangkitkan-otomatis dalam "
"batasan ditentukan oleh basisdata."

msgid ""
"A field name that's longer than the column name length supported by a "
"database can create problems. For example, with MySQL you'll get an "
"exception trying to create the column, and with PostgreSQL the column name "
"is truncated by the database (you may see a warning in the PostgreSQL logs)."
msgstr ""
"Nama bidang yang tidak lebih panjang dari panjang nama kolom didukung oleh "
"sebuah basisdata dapat membuat masalah. Sebagai contoh, dengan MySQL anda "
"akan mendapatkan sebuah pengecualian mencoba membuat kolom, dan dengan "
"PostgreSQL nama kolom dipotong oleh basisdata (anda mungkin melihat sebuah "
"peringatan di catatan PostgreSQL)."

msgid ""
"A model check has been introduced to better alert users to this scenario "
"before the actual creation of database tables."
msgstr ""
"Sebuah pemeriksaan model telah diperkenalkan untuk memperingati lebih baik "
"pengguna pada skenario ini sebelum pembuatan sebenarnya dari tabel-tabel "
"basisdata."

msgid ""
"If you have an existing model where this check seems to be a false positive, "
"for example on PostgreSQL where the name was already being truncated, simply "
"use :attr:`~django.db.models.Field.db_column` to specify the name that's "
"being used."
msgstr ""
"Jika anda mempunyai sebuah model yang ada dimana pemeriksaan ini kelihatan "
"positif salah, sebagai contoh di PostgreSQL dimana nama sudah sedang "
"dipotong, cukup menggunakan :attr:`~django.db.models.Field.db_column` untuk "
"menentukan nama yang sedang digunakan."

msgid ""
"The check also applies to the columns generated in an implicit "
"``ManyToManyField.through`` model. If you run into an issue there, use :attr:"
"`~django.db.models.ManyToManyField.through` to create an explicit model and "
"then specify :attr:`~django.db.models.Field.db_column` on its column(s) as "
"needed."
msgstr ""
"Pemeriksaan juga berlaku pada kolom dibangkitkan dalam sebuah model "
"``ManyToManyField.through`` yang tersirat. Jika anda berjalan kedalam sebuah "
"masalah disana, gunakan :attr:`~django.db.models.ManyToManyField.through` "
"untuk membuat sebuah model yang jelas dan kemudian tentukan :attr:`~django."
"db.models.Field.db_column` di kolomnya sesuai kebutuhan."

msgid "Query relation lookups now check object types"
msgstr "Pencarian hubungan permintaan sekarang memeriksa jenis-jenis obyek"

msgid ""
"Querying for model lookups now checks if the object passed is of correct "
"type and raises a :exc:`ValueError` if not. Previously, Django didn't care "
"if the object was of correct type; it just used the object's related field "
"attribute (e.g. ``id``) for the lookup. Now, an error is raised to prevent "
"incorrect lookups:"
msgstr ""

msgid "``select_related()`` now checks given fields"
msgstr "``select_related()`` sekarang memeriksa bidang yang diberikan"

msgid ""
"``select_related()`` now validates that the given fields actually exist. "
"Previously, nonexistent fields were silently ignored. Now, an error is "
"raised:"
msgstr ""

msgid "The validation also makes sure that the given field is relational:"
msgstr ""

msgid "Default ``EmailField.max_length`` increased to 254"
msgstr "``EmailField.max_length`` awal ditingkatkan menjadi 254"

msgid ""
"The old default 75 character ``max_length`` was not capable of storing all "
"possible RFC3696/5321-compliant email addresses. In order to store all "
"possible valid email addresses, the ``max_length`` has been increased to 254 "
"characters. You will need to generate and apply database migrations for your "
"affected models (or add ``max_length=75`` if you wish to keep the length on "
"your current fields). A migration for :attr:`django.contrib.auth.models.User."
"email` is included."
msgstr ""
"Karakter 75 awalan lama ``max_length`` tidak dapat menyimpan semua "
"kemungkinan alamat surel RFC3696/5321-compliant. Untuk menyimpan semua "
"kemungkinan alamat surel sah, ``max_length`` telah ditingkatkan menjadi 254 "
"karakter. Anda akan butuh membangkitkan dan memberlakukan perpindahan "
"basisdata untuk model yang anda terpengaruh (atau tambah ``max_length=75`` "
"jika anda berharap menjaga panjang di bidang-bidang anda saat ini). Sebuah "
"perpindahan untuk :attr:`django.contrib.auth.models.User.email` disertakan."

msgid "Support for PostgreSQL versions older than 9.0"
msgstr "Mendukung untuk PostgreSQL versi lebih lama dari 9.0"

msgid ""
"The end of upstream support periods was reached in July 2014 for PostgreSQL "
"8.4. As a consequence, Django 1.8 sets 9.0 as the minimum PostgreSQL version "
"it officially supports."
msgstr ""
"Akhir dari masa dukungan hulu telah sampai di Juli 2014 untuk PostgreSQL "
"8.4. Sebagai konsekuensinya, Django 1.8 menyetel 9.0 sebagai versi "
"PostgreSQL minimal dia secara resmi dukung."

msgid ""
"This also includes dropping support for PostGIS 1.3 and 1.4 as these "
"versions are not supported on versions of PostgreSQL later than 8.4."
msgstr ""
"Ini juga menyertakan penjatuhan dukungan untuk PostGIS 1.3 and 1.4 ketika "
"versi ini tidak didukung pada versi PostgreSQL terakhir daripada 8.4."

msgid ""
"Django also now requires the use of Psycopg2 version 2.4.5 or higher (or "
"2.5+ if you want to use :mod:`django.contrib.postgres`)."
msgstr ""
"Django juga sekarang membutuhkan menggunakan Psycopg2 versi 2.4.5 atau lebih "
"tinggi (atau 2.5+ jika anda ingin menggunakan :mod:`django.contrib."
"postgres`)."

msgid "Support for MySQL versions older than 5.5"
msgstr "Mendukung untuk MySQL versi lebih lama dari 5.5"

msgid ""
"The end of upstream support periods was reached in January 2012 for MySQL "
"5.0 and December 2013 for MySQL 5.1. As a consequence, Django 1.8 sets 5.5 "
"as the minimum MySQL version it officially supports."
msgstr ""
"Akhir dari masa dukungan hulu telah sampai di Januari 2012 untuk MySQL 5.0 "
"dan Desember 2013 untuk MySQL 5.1. Sebagai konsekuensinya, Django 1.8 "
"menyetel 5.5 sebagai versi MySQL minimal dia secara resmi dukung."

msgid "Support for Oracle versions older than 11.1"
msgstr "Mendukung untuk Oracle versi lebih lama dari 11.1"

msgid ""
"The end of upstream support periods was reached in July 2010 for Oracle 9.2, "
"January 2012 for Oracle 10.1, and July 2013 for Oracle 10.2. As a "
"consequence, Django 1.8 sets 11.1 as the minimum Oracle version it "
"officially supports."
msgstr ""
"Akhir dari masa dukungan hulu telah sampai di Juli 2010 untuk Oracle 9.2, "
"Januari 2012 untuk Oracle 10.1, dan Juli 2013 untuk Oracle 10.2. Sebagai "
"konsekuensinya, Django 1.8 menyetel 11.1 sebagai versi Oracle minimal dia "
"secara resmi dukung."

msgid "Specific privileges used instead of roles for tests on Oracle"
msgstr "Hak khusus digunakan daripada peran untuk percobaan di Oracle"

msgid ""
"Earlier versions of Django granted the CONNECT and RESOURCE roles to the "
"test user on Oracle. These roles have been deprecated, so Django 1.8 uses "
"the specific underlying privileges instead. This changes the privileges "
"required of the main user for running tests (unless the project is "
"configured to avoid creating a test user). The exact privileges required now "
"are detailed in :ref:`Oracle notes <oracle-notes>`."
msgstr ""
"Versi awal dari Django memberikan peran CONNECT dan RESOURCE pada pengguna "
"percobaan di Oracle. Peran-peran ini telah diusangkan, jadi Django 1.8 "
"menggunakan hak pokok khusus. Perubahan dari hak memwajibkan pengguna utama "
"untuk menjalankan percobaan (meskipun proyek dikonfigurasikan untuk "
"menghindari membuat sebuah pengguna percobaan). Hak tepat mewajibkan "
"sekarang dirinci dalam :ref:`Oracle notes <oracle-notes>`."

msgid "``AbstractUser.last_login`` allows null values"
msgstr "``AbstractUser.last_login`` selalu bernilai null"

msgid ""
"The :attr:`AbstractUser.last_login <django.contrib.auth.models.User."
"last_login>` field now allows null values. Previously, it defaulted to the "
"time when the user was created which was misleading if the user never logged "
"in. If you are using the default user (:class:`django.contrib.auth.models."
"User`), run the database migration included in ``contrib.auth``."
msgstr ""
"Bidang :attr:`AbstractUser.last_login <django.contrib.auth.models.User."
"last_login>` sekarang mengizinkan nilai null. Sebelumnya, itu diawalkan pada "
"waktu ketika pengguna membuat yang menyesatkan jika pengguna tidak pernah "
"masuk. Jika anda sedang menggunakan pengguna awalan (:class:`django.contrib."
"auth.models.User`), jalankan perpindahan basisdata disertakan di ``contrib."
"auth``. "

msgid ""
"If you are using a custom user model that inherits from ``AbstractUser``, "
"you'll need to run :djadmin:`makemigrations` and generate a migration for "
"your app that contains that model. Also, if wish to set ``last_login`` to "
"``NULL`` for users who haven't logged in, you can run this query::"
msgstr ""
"Jika anda sedang menggunakan penyesuaian model pengguna yang mewarisi dari "
"``AbstractUser``, anda akan butuh menjalankan :djadmin:`makemigrations` dan "
"membangkitkan sebuah perpindahan untuk aplikasi anda yang mengandung model "
"itu. Juga, jika berharap menyetel ``last_login`` menjadi ``NULL`` untuk "
"pengguna yang belum masuk, anda dapat menjalankan permintaan ini::"

msgid "Support for GEOS 3.1 and GDAL 1.6 has been dropped."
msgstr "Dukungan untuk GEOS 3.1 dan GDAL 1.6 telah dibuang."

msgid "Support for SpatiaLite < 2.4 has been dropped."
msgstr "Dukungan untuk SpatiaLite < 2.4 telah dibuang."

msgid ""
"GIS-specific lookups have been refactored to use the :class:`django.db."
"models.Lookup` API."
msgstr ""
"Pencarian khusus-GIS telah direfaktorisasi untuk menggunakan API :class:"
"`django.db.models.Lookup`."

msgid ""
"The default ``str`` representation of :class:`~django.contrib.gis.geos."
"GEOSGeometry` objects has been changed from WKT to EWKT format (including "
"the SRID). As this representation is used in the serialization framework, "
"that means that ``dumpdata`` output will now contain the SRID value of "
"geometry objects."
msgstr ""
"Objek ``str`` representation of :class:`~django.contrib.gis.geos."
"GEOSGeometry`  awalan telah berubah dari bentuk WKT menjadi EWKT (termasuk "
"SRID). Ketika perwakilan ini digunakan dalam kerangka kerja serialisasi, itu "
"berarti bahwa keluaran ``dumpdata`` akan sekarang mengandung nilai SRID dari "
"obyek geometri."

msgid ""
"Priority of context processors for ``TemplateResponse`` brought in line with "
"``render``"
msgstr ""
"Prioritas dari pengolah konteks untuk ``TemplateResponse`` membawa sebaris "
"dengan ``render``  "

msgid ""
"The :class:`~django.template.response.TemplateResponse` constructor is "
"designed to be a drop-in replacement for the :func:`~django.shortcuts."
"render` function. However, it had a slight incompatibility, in that for "
"``TemplateResponse``, context data from the passed in context dictionary "
"could be shadowed by context data returned from context processors, whereas "
"for ``render`` it was the other way around. This was a bug, and the behavior "
"of ``render`` is more appropriate, since it allows the globally defined "
"context processors to be overridden locally in the view. If you were relying "
"on the fact context data in a ``TemplateResponse`` could be overridden using "
"a context processor, you will need to change your code."
msgstr ""
"Pembangun :class:`~django.template.response.TemplateResponse` dirancang "
"menjadi pengganti singgah untuk fungsi :func:`~django.shortcuts.render`. "
"Bagaimanapun, itu mempunyai sedikit ketidaksesuaian, bahwa untuk "
"``TemplateResponse``, data konteks dari melewatkan di kamus konteks dapat "
"dibayangi oleh data konteks dikembalikan dari pengolah konteks, sedangkan "
"untuk ``render`` itu adalah cara lain. Ini adalah sebuah kesalahan, dan "
"perilaku dari ``render`` lebih sesuai, sejak itu mengizinkan secara global "
"menentukan pengolah konteks untuk menjadi dikesampingkan secara lokal di "
"tampilan. Jika anda mengandalkan pada kenyataan data konteks di "
"``TemplateResponse`` dapat dikesampingkan menggunakan pengolah konteks, anda "
"akan butuh merubah kode anda."

msgid "Overriding ``setUpClass`` / ``tearDownClass`` in test cases"
msgstr "Menimpa ``setUpClass`` / ``tearDownClass`` di kasus-kasus percobaan"

msgid ""
"The decorators :func:`~django.test.override_settings` and :func:`~django."
"test.modify_settings` now act at the class level when used as class "
"decorators. As a consequence, when overriding ``setUpClass()`` or "
"``tearDownClass()``, the ``super`` implementation should always be called."
msgstr ""
"Penghias :func:`~django.test.override_settings` dan :func:`~django.test."
"modify_settings` sekarang bertindak pada tingkat kelas ketika digunakan "
"sebagai penghias kelas. Sebagai konsekuensi, ketika menimpa ``setUpClass()`` "
"atau ``tearDownClass()``, penerapan ``super`` harus selalu dipanggil."

msgid "Removal of ``django.contrib.formtools``"
msgstr "Pemindahan ``django.contrib.formtools``"

msgid ""
"The formtools contrib app has been moved to a separate package and the "
"relevant documentation pages have been updated or removed."
msgstr ""
"Aplikasi bantuan formtool telah dipindahkan untuk memisahkan paket dan "
"halaman dokumentasi yang bersangkut-paut telah diperbaharui atau "
"dipindahkan. "

msgid "The new package is available `on GitHub`_ and on PyPI."
msgstr "Paket baru tersedia `di GitHub`_ dan di PyPI."

msgid "Database connection reloading between tests"
msgstr "Memuat kembali hubungan basisdata diantara percobaan"

msgid ""
"Django previously closed database connections between each test within a "
"``TestCase``. This is no longer the case as Django now wraps the whole "
"``TestCase`` within a transaction. If some of your tests relied on the old "
"behavior, you should have them inherit from ``TransactionTestCase`` instead."
msgstr ""
"Django sebelumnya menutup hubungan basisdata diantara setiap percobaan dalam "
"sebuah ``TestCase``. Ini tidak lagi kasus sebagai Django sekarang membungkus "
"keseluruhan ``TestCase`` dalam sebuah transaksi. Jika beberapa percobaan "
"anda bergantung pada perilaku lama, anda harus memiliki mereka mewarisi dari "
"``TransactionTestCase`` sebagai gantinya."

msgid "Cleanup of the ``django.template`` namespace"
msgstr "Membersihkan namescpace ``django.template``"

msgid ""
"If you've been relying on private APIs exposed in the ``django.template`` "
"module, you may have to import them from ``django.template.base`` instead."
msgstr ""
"Jika anda telah mengandalkan pada API pribadi diungkap dalam modul ``django."
"template``, anda mungkin harus mengimpor mereka dari ``django.template."
"base`` sebagai gantinya."

msgid ""
"Also private APIs ``django.template.base.compile_string()``, ``django."
"template.loader.find_template()``, and ``django.template.loader."
"get_template_from_string()`` were removed."
msgstr ""
"Juga pribadi API ``django.template.base.compile_string()``, ``django."
"template.loader.find_template()``, dan ``django.template.loader."
"get_template_from_string()`` dipindahkan."

msgid "``model`` attribute on private model relations"
msgstr "Atribut ``model`` pada hubungan model pribadi"

msgid ""
"In earlier versions of Django, on a model with a reverse foreign key "
"relationship (for example), ``model._meta.get_all_related_objects()`` "
"returned the relationship as a ``django.db.models.related.RelatedObject`` "
"with the ``model`` attribute set to the source of the relationship. Now, "
"this method returns the relationship as ``django.db.models.fields.related."
"ManyToOneRel`` (private API ``RelatedObject`` has been removed), and the "
"``model`` attribute is set to the target of the relationship instead of the "
"source. The source model is accessible on the ``related_model`` attribute "
"instead."
msgstr ""
"Di versi paling awal dari Django, pada model dengan hubungan lintas foreign "
"key (sebagai contoh), ``model._meta.get_all_related_objects()`` "
"mengembalikan hubungan sebagai sebuah ``django.db.models.related."
"RelatedObject`` dengan atribut ``model`` disetel ke sumber dari hubungan. "
"Sekarang, metode ini mengembalikan hubungan sebagai ``django.db.models."
"fields.related.ManyToOneRel`` (API pribadi ``RelatedObject`` telah "
"dipindahkan), dan atribut ``model`` distel ke sasaran dari hubungan daripada "
"sumber. Sumber model adalah dapat diakses pada atribut ``related_model`` "
"sebagai gantinya."

msgid "Consider this example from the tutorial in Django 1.8:"
msgstr ""

msgid "and compare it to the behavior on older versions:"
msgstr ""

msgid ""
"To access the source model, you can use a pattern like this to write code "
"that will work with both Django 1.8 and older versions::"
msgstr ""
"Untuk mengakses model sumber, anda dapat menggunakan pola seperti ini untuk "
"menulis kode yang akan bekerja dengan kedua Django 1.8 dan versi terlama::"

msgid "Also note that ``get_all_related_objects()`` is deprecated in 1.8."
msgstr ""

msgid ""
"The following changes to the database backend API are documented to assist "
"those writing third-party backends in updating their code:"
msgstr ""
"Perubahan berikut pada API backend basisdata didokumentasikan untuk memandu "
"penulisan backend pihak-ketiga tersebut dalam memperbaharui kode mereka."

msgid ""
"``BaseDatabaseXXX`` classes have been moved to ``django.db.backends.base``. "
"Please import them from the new locations::"
msgstr ""
"Kelas-kelas ``BaseDatabaseXXX`` telah dipindahkan ke ``django.db.backends."
"base``. Harap mengimpor mereka dari tempat baru::"

msgid ""
"The ``data_types``, ``data_types_suffix``, and "
"``data_type_check_constraints`` attributes have moved from the "
"``DatabaseCreation`` class to ``DatabaseWrapper``."
msgstr ""
"Atribut ``data_types``, ``data_types_suffix``, dan "
"``data_type_check_constraints`` telah dipindahkan dari kelas "
"``DatabaseCreation`` ke ``DatabaseWrapper``."

msgid ""
"The ``SQLCompiler.as_sql()`` method now takes a ``subquery`` parameter (:"
"ticket:`24164`)."
msgstr ""
"Metode ``SQLCompiler.as_sql()`` sekarang mengambil sebuah parameter "
"``subquery`` (:ticket:`24164`)."

msgid ""
"The ``BaseDatabaseOperations.date_interval_sql()`` method now only takes a "
"``timedelta`` parameter."
msgstr ""
"Metode ``BaseDatabaseOperations.date_interval_sql()`` sekarang hanya "
"mengambil parameter ``timedelta``."

msgid ""
"``AdminSite`` no longer takes an ``app_name`` argument and its ``app_name`` "
"attribute has been removed. The application name is always ``admin`` (as "
"opposed to the instance name which you can still customize using "
"``AdminSite(name=\"...\")``."
msgstr ""
"``AdminSite`` tidak lagi mengambil sebuah argumen ``app_name`` dan atribut "
"``app_name`` nya telah dipindahkan. Nama Aplikasi selalu ``admin`` (sebagai "
"lawan pada nama instance yang anda dapat masih sesuaikan menggunakan "
"``AdminSite(name=\"...\")``."

msgid ""
"The ``ModelAdmin.get_object()`` method (private API) now takes a third "
"argument named ``from_field`` in order to specify which field should match "
"the provided ``object_id``."
msgstr ""
"Metode ``ModelAdmin.get_object()`` (API pribadi) sekarang mengambil argumen "
"ketiga bernama ``from_field`` untuk menentukan bidang mana harus cocok "
"dengan ``object_id`` yang disediakan."

msgid ""
"The :meth:`ModelAdmin.response_delete() <django.contrib.admin.ModelAdmin."
"response_delete>` method now takes a second argument named ``obj_id`` which "
"is the serialized identifier used to retrieve the object before deletion."
msgstr ""
"Metode :meth:`ModelAdmin.response_delete() <django.contrib.admin.ModelAdmin."
"response_delete>` sekarang mengambil argumen kedua bernama ``obj_id`` yang "
"merupakan penciri serialisasi digunakan untuk mengambil obyek sebelum "
"penghapusan."

msgid "Default autoescaping of functions in ``django.template.defaultfilters``"
msgstr ""
"Pelolosan otomatis awalan dari fungsi di ``django.template.defaultfilters``"

msgid ""
"In order to make built-in template filters that output HTML \"safe by "
"default\" when calling them in Python code, the following functions in "
"``django.template.defaultfilters`` have been changed to automatically escape "
"their input value:"
msgstr ""
"Untuk membuat penyaring siap-pakai yang mengeluarkan HTML \"safe by "
"default\" ketika memanggil mereka di kode Python, fungsi berikut di ``django."
"template.defaultfilters`` telah berubah menjadi pelolosan otomatis nilai "
"masukan mereka:"

msgid "``join``"
msgstr "``join``"

msgid "``linebreaksbr``"
msgstr "``linebreaksbr``"

msgid "``linebreaks_filter``"
msgstr "``linebreaks_filter``"

msgid "``linenumbers``"
msgstr "``linenumbers``"

msgid "``unordered_list``"
msgstr "``unordered_list``"

msgid "``urlize``"
msgstr "``urlize``"

msgid "``urlizetrunc``"
msgstr "``urlizetrunc``"

msgid ""
"You can revert to the old behavior by specifying ``autoescape=False`` if you "
"are passing trusted content. This change doesn't have any effect when using "
"the corresponding filters in templates."
msgstr ""
"Anda dapat kembali ke perilaku lama dengan menentukan ``autoescape=False`` "
"jika anda sedang melewatkan isi yang dipercaya. Perubahan ini tidak "
"mempunyai pengaruh apapun ketika menggunakan penyaring sesuai di cetakan."

msgid "``connections.queries`` is now a read-only attribute."
msgstr "``connections.queries`` adalah sekarang sebuah atribut hanya-baca."

msgid ""
"Database connections are considered equal only if they're the same object. "
"They aren't hashable any more."
msgstr ""
"Hubungan basisdata dipertimbangkan sama hanya jika mereka obyek yang sama. "
"Mereka tidak dapat diacak lagi."

msgid ""
":class:`~django.middleware.gzip.GZipMiddleware` used to disable compression "
"for some content types when the request is from Internet Explorer, in order "
"to work around a bug in IE6 and earlier. This behavior could affect "
"performance on IE7 and later. It was removed."
msgstr ""
":class:`~django.middleware.gzip.GZipMiddleware` digunakan untuk meniadakan "
"pemampatan untuk beberapa jenis isi ketika permintaan dari Internet "
"Explorer, agar memecahkan sebuah kesalahan di IE6 dan paling awal. Perilaku "
"ini dapat mempengaruhi penampilan pada IE7 dan terakhir. Itu telah "
"dipindahkan."

msgid ""
"``URLField.to_python`` no longer adds a trailing slash to pathless URLs."
msgstr ""
"`URLField.to_python`` tidak lagi menambah sebuah buntutuan garis miring pada "
"URL tidak berjalur."

msgid ""
"The :tfilter:`length` template filter now returns ``0`` for an undefined "
"variable, rather than an empty string."
msgstr ""
"Penyaring cetakan :tfilter:`length` sekarang mengembalikan ``0`` untuk "
"sebuah variabel tidak ditentukan, daripada sebuah string kosong."

msgid ""
"``ForeignKey.default_error_message['invalid']`` has been changed from "
"``'%(model)s instance with pk %(pk)r does not exist.'`` to ``'%(model)s "
"instance with %(field)s %(value)r does not exist.'`` If you are using this "
"message in your own code, please update the list of interpolated parameters. "
"Internally, Django will continue to provide the ``pk`` parameter in "
"``params`` for backwards compatibility."
msgstr ""
"``ForeignKey.default_error_message['invalid']`` telah berubah dari "
"``'%(model)s instance with pk %(pk)r does not exist.'`` menjadi ``'%(model)s "
"instance with %(field)s %(value)r does not exist.'`` Jika anda menggunakan "
"pesan ini di kode anda sendiri, harap memperbaharui daftar dari parameter "
"yang disisipkan. Secara internal, Django akan melanjutkan menyediakan "
"parameter ``pk`` di ``params`` untuk kesesuaian kebelakang."

msgid ""
"``UserCreationForm.error_messages['duplicate_username']`` is no longer used. "
"If you wish to customize that error message, :ref:`override it on the form "
"<modelforms-overriding-default-fields>` using the ``'unique'`` key in ``Meta."
"error_messages['username']`` or, if you have a custom form field for "
"``'username'``, using the ``'unique'`` key in its :attr:`~django.forms.Field."
"error_messages` argument."
msgstr ""

msgid ""
"The block ``usertools`` in the ``base.html`` template of :mod:`django."
"contrib.admin` now requires the ``has_permission`` context variable to be "
"set. If you have any custom admin views that use this template, update them "
"to pass :meth:`AdminSite.has_permission() <django.contrib.admin.AdminSite."
"has_permission>` as this new variable's value or simply include :meth:"
"`AdminSite.each_context(request) <django.contrib.admin.AdminSite."
"each_context>` in the context."
msgstr ""
"Blok ``usertools`` di cetakan ``base.html`` dari :mod:`django.contrib.admin` "
"sekarang membutuhkan variabel konteks ``has_permission`` untuk disetel. Jika "
"anda mempunyai tampilan admin penyesuaian apapun yang menggunakan cetakan "
"ini, perbaharui mereka untuk melewatkan :meth:`AdminSite.has_permission() "
"<django.contrib.admin.AdminSite.has_permission>` ketika nilai variabel ini "
"atau cukup menyertakan :meth:`AdminSite.each_context(request) <django."
"contrib.admin.AdminSite.each_context>` di konteks."

msgid ""
"Internal changes were made to the :class:`~django.forms.ClearableFileInput` "
"widget to allow more customization. The undocumented ``url_markup_template`` "
"attribute was removed in favor of ``template_with_initial``."
msgstr ""
"Perubahan internal dibuat pada widget :class:`~django.forms."
"ClearableFileInput` untuk mengizinkan penyesuaian lebih. Atribut "
"``url_markup_template`` tidak terdokumentasi telah dipindahkan dalam "
"mendukung ``template_with_initial``."

msgid ""
"For consistency with other major vendors, the ``en_GB`` locale now has "
"Monday as the first day of the week."
msgstr ""
"Untuk ketetapan dengan penjaja utama lain, lokal ``en_GB`` sekarang "
"mempunyai Sennin sebagai hari pertama dari minggu."

msgid ""
"Seconds have been removed from any locales that had them in ``TIME_FORMAT``, "
"``DATETIME_FORMAT``, or ``SHORT_DATETIME_FORMAT``."
msgstr ""
"Kedua telah dipindahkan dari lokal apapun yang memiliki mereka di "
"``TIME_FORMAT``, ``DATETIME_FORMAT``, atau ``SHORT_DATETIME_FORMAT``."

msgid ""
"The default max size of the Oracle test tablespace has increased from 300M "
"(or 200M, before 1.7.2) to 500M."
msgstr ""
"Ukuran maksimal awalan dari tablespace percobaan Oracle telah ditingkatkan "
"dari 300 M (atau 200M, sebelum 1.7.2) menjadi 500M."

msgid ""
"``reverse()`` and ``reverse_lazy()`` now return Unicode strings instead of "
"bytestrings."
msgstr ""

msgid ""
"The ``CacheClass`` shim has been removed from all cache backends. These "
"aliases were provided for backwards compatibility with Django 1.3. If you "
"are still using them, please update your project to use the real class name "
"found in the :setting:`BACKEND <CACHES-BACKEND>` key of the :setting:"
"`CACHES` setting."
msgstr ""
"Shim ``CacheClass`` telah dipindahkan dari semua backend cache. Nama lain "
"ini disediakan untuk kesesuaian kebelakang dengan Django 1.3. Jika anda "
"masih menggunakan mereka, harap perbaharui proyek anda untuk menggunakan "
"nama kelas sebenarnya ditemukan di kunci :setting:`BACKEND <CACHES-BACKEND>` "
"dari pengaturan :setting:`CACHES`."

msgid ""
"By default, :func:`~django.core.management.call_command` now always skips "
"the check framework (unless you pass it ``skip_checks=False``)."
msgstr ""
"Secara awalan, :func:`~django.core.management.call_command` sekarang selalu "
"melewati pemeriksaan kerangka kerja (meskipun anda melewatkan itu "
"``skip_checks=False``)."

msgid ""
"When iterating over lines, :class:`~django.core.files.File` now uses :pep:"
"`universal newlines <278>`. The following are recognized as ending a line: "
"the Unix end-of-line convention ``'\\n'``, the Windows convention "
"``'\\r\\n'``, and the old Macintosh convention ``'\\r'``."
msgstr ""

msgid ""
"The Memcached cache backends ``MemcachedCache`` and ``PyLibMCCache`` will "
"delete a key if ``set()`` fails. This is necessary to ensure the "
"``cache_db`` session store always fetches the most current session data."
msgstr ""
"Backend cache memcache ``MemcachedCache`` dan ``PyLibMCCache`` akan "
"menghapus sebuah kunci jika ``set()`` gagal. Ini diperlukan untuk memastikan "
"penyimpanan sesi ``cache_db`` selalu mengambil data sesi paling saat ini."

msgid ""
"Private APIs ``override_template_loaders`` and ``override_with_test_loader`` "
"in ``django.test.utils`` were removed. Override ``TEMPLATES`` with "
"``override_settings`` instead."
msgstr ""
"API pribadi ``override_template_loaders`` dan ``override_with_test_loader`` "
"di ``django.test.utils`` telah dipindahkan. Menimpa ``TEMPLATES`` dengan "
"``override_settings`` sebagai gantinya."

msgid ""
"Warnings from the MySQL database backend are no longer converted to "
"exceptions when :setting:`DEBUG` is ``True``."
msgstr ""
"Peringatan dari backend basisdata MySQL tidak lagi dirubah ke pengecualian "
"ketika :setting:`DEBUG` adalah ``True``."

msgid ""
":class:`~django.http.HttpRequest` now has a simplified ``repr`` (e.g. "
"``<WSGIRequest: GET '/somepath/'>``). This won't change the behavior of the :"
"class:`~django.views.debug.SafeExceptionReporterFilter` class."
msgstr ""
":class:`~django.http.HttpRequest` sekarang telah disederhanakan ``repr`` "
"(sebagai contoh ``<WSGIRequest: GET '/somepath/'>``). Ini tidak akan merubah "
"perilaku dari kelas :class:`~django.views.debug.SafeExceptionReporterFilter`."

msgid ""
"Class-based views that use :class:`~django.views.generic.edit."
"ModelFormMixin` will raise an :exc:`~django.core.exceptions."
"ImproperlyConfigured` exception when both the ``fields`` and ``form_class`` "
"attributes are specified. Previously, ``fields`` was silently ignored."
msgstr ""
"Tampilan berdasarkan-kelas yang menggunakan :class:`~django.views.generic."
"edit.ModelFormMixin` akan memunculkan sebuah pengecualian :exc:`~django.core."
"exceptions.ImproperlyConfigured` ketika kedua atribut ``fields`` dan "
"``form_class`` ditentukan. Sebelumnya, ``fields`` secara diam diabaikan."

msgid ""
"When following redirects, the test client now raises :exc:`~django.test."
"client.RedirectCycleError` if it detects a loop or hits a maximum redirect "
"limit (rather than passing silently)."
msgstr ""
"Ketika mengikuti pengalihan, klien percobaan sekarang memunculkan :exc:"
"`~django.test.client.RedirectCycleError` jika itu mengetahui perulangan atau "
"menegai batasan pengalihan maksimal (daripada kemudian melewatkan secara "
"diam)."

msgid ""
"Translatable strings set as the ``default`` parameter of the field are cast "
"to concrete strings later, so the return type of ``Field.get_default()`` is "
"different in some cases. There is no change to default values which are the "
"result of a callable."
msgstr ""
"Deretan karakter dapat diartikan sebagai parameter ``default`` dari bidang "
"adalah dimasukkan ke deretan karakter berwujud terakhir, jadi jenis "
"kembalian dari ``Field.get_default()`` berbeda di beberapa kasus. Tidak ada "
"perubahan pada nilai awalan yang merupakan hasil dari callable."

msgid ""
"``GenericIPAddressField.empty_strings_allowed`` is now ``False``. Database "
"backends that interpret empty strings as null (only Oracle among the "
"backends that Django includes) will no longer convert null values back to an "
"empty string. This is consistent with other backends."
msgstr ""
"``GenericIPAddressField.empty_strings_allowed`` sekarang ``False``. Backend "
"basisdata yang mengartikan string kosong sebagai null (hanya Oracle diantara "
"backend yang Django sertakan) akan tidak lagi merubah nilai null kembali ke "
"string kosong. Ini adalah ketetapan dengan backend lain."

msgid ""
"When the ``BaseCommand.leave_locale_alone`` attribute is ``False``, "
"translations are now deactivated instead of forcing the \"en-us\" locale. In "
"the case your models contained non-English strings and you counted on "
"English translations to be activated in management commands, this will not "
"happen any longer. It might be that new database migrations are generated "
"(once) after migrating to 1.8."
msgstr ""

msgid ""
":func:`django.utils.translation.get_language()` now returns ``None`` instead "
"of :setting:`LANGUAGE_CODE` when translations are temporarily deactivated."
msgstr ""
":func:`django.utils.translation.get_language()` sekarang mengembalikan "
"``None`` daripada :setting:`LANGUAGE_CODE` ketika terjemahan secara "
"sementara dinonaktifkan."

msgid ""
"When a translation doesn't exist for a specific literal, the fallback is now "
"taken from the :setting:`LANGUAGE_CODE` language (instead of from the "
"untranslated ``msgid`` message)."
msgstr ""
"Ketika sebuah terjemahan tidak ada untuk harfiah tertentu, fallback sekarang "
"diambil dari bahasa :setting:`LANGUAGE_CODE` (daripada dari pesan ``msid`` "
"tidak diterjemahkan)."

msgid ""
"The ``name`` field of :class:`django.contrib.contenttypes.models."
"ContentType` has been removed by a migration and replaced by a property. "
"That means it's not possible to query or filter a ``ContentType`` by this "
"field any longer."
msgstr ""
"Bidang ``name`` dari :class:`django.contrib.contenttypes.models.ContentType` "
"telah dipindahkan dengan perpindahan dan diganti oleh sebuah sifat. Itu "
"berarti itu tidak memungkinkan untuk meminta atau menyaring sebuah "
"``ContentType`` dengan bidang ini lagi."

msgid ""
"Be careful if you upgrade to Django 1.8 and skip Django 1.7. If you run "
"``manage.py migrate --fake``, this migration will be skipped and you'll see "
"a ``RuntimeError: Error creating new content types.`` exception because the "
"``name`` column won't be dropped from the database. Use ``manage.py migrate "
"--fake-initial`` to fake only the initial migration instead."
msgstr ""
"Hati-hati jika anda meningkatkan ke Django 1.8 dan melewati Django 1.7. Jika "
"anda menjalankan ``manage.py migrate --fake``, perpindahan ini akan "
"dilewatkan dan anda akan melihat sebuah pengecualian ``RuntimeError: Error "
"creating new content types.`` karena kolom ``name`` tidak akan dibuang dari "
"basisdata. Gunakan ``manage.py migrate --fake-initial`` untuk meniru hanya "
"perpindahan awalan sebagai gantinya."

msgid ""
"The new :option:`migrate --fake-initial` option allows faking initial "
"migrations. In 1.7, initial migrations were always automatically faked if "
"all tables created in an initial migration already existed."
msgstr ""
"Pilihan :option:`migrate --fake-initial` baru mengizinkan perpindahan "
"inisial tiruan, Di 1.7, inisial perpindahan selalu secara otomatis tiruan "
"jika semua tabel dibuat di inisial perpindahan sudah ada."

msgid ""
"An app *without* migrations with a ``ForeignKey`` to an app *with* "
"migrations may now result in a foreign key constraint error when migrating "
"the database or running tests. In Django 1.7, this could fail silently and "
"result in a missing constraint. To resolve the error, add migrations to the "
"app without them."
msgstr ""
"Sebuah aplikasi *tanpa* perpindahan dengan ``ForeignKey`` pada sebuah "
"aplikasi *dengan* perpindahan mungkin sekarang hasil di kesalahanbatasan "
"foreign key ketika memindahkan basisdata atau menjalankan percobaan. Di "
"Django 1.7, ini dapat gagal secara diam dan kembali di batasan hilang. Untuk "
"mengatasi kesalahan, tambah perpindahan pada aplikasi tanpa mereka."

msgid "Features deprecated in 1.8"
msgstr "Fitur diusangkan di 1.8"

msgid "Selected methods in ``django.db.models.options.Options``"
msgstr "Metode terpilih di ``django.db.models.options.Options``"

msgid ""
"As part of the formalization of the ``Model._meta`` API (from the :class:"
"`django.db.models.options.Options` class), a number of methods have been "
"deprecated and will be removed in Django 1.10:"
msgstr ""
"Sebagai bagian dari perumusan dari API ``Model._meta`` (dari kelas :class:"
"`django.db.models.options.Options`), sejumlah metode telah diusangkan dan "
"akan dipindahkan di Django 1.10:"

msgid "Loading ``cycle`` and ``firstof`` template tags from ``future`` library"
msgstr ""
"Memuat etiket cetakan ``cycle`` dan ``firstof`` dari pustaka ``future``"

msgid ""
"Django 1.6 introduced ``{% load cycle from future %}`` and ``{% load firstof "
"from future %}`` syntax for forward compatibility of the :ttag:`cycle` and :"
"ttag:`firstof` template tags. This syntax is now deprecated and will be "
"removed in Django 1.10. You can simply remove the ``{% load ... from future "
"%}`` tags."
msgstr ""
"Django 1.6 memperkenalkan sintaksis ``{% load cycle from future %}`` dan "
"``{% load firstof from future %}`` untuk kesesuaian kedepan dari etiket "
"cetakan :ttag:`cycle` dan :ttag:`firstof`. Sintaksis ini sekarang diusangkan "
"dan akan dipindahkan di Django 1.10. Anda dapat cukup memindahkan etiket "
"``{% load ... from future %}``."

msgid "``django.conf.urls.patterns()``"
msgstr "``django.conf.urls.patterns()``"

msgid ""
"In the olden days of Django, it was encouraged to reference views as strings "
"in ``urlpatterns``::"
msgstr ""
"Di haru dahulu dari Django, itu didorong untuk mengacukan tampilan sebagai "
"string di ``urlpatterns``::"

msgid ""
"and Django would magically import ``myapp.views.myview`` internally and turn "
"the string into a real function reference. In order to reduce repetition "
"when referencing many views from the same module, the ``patterns()`` "
"function takes a required initial ``prefix`` argument which is prepended to "
"all views-as-strings in that set of ``urlpatterns``::"
msgstr ""
"dan Django secara ajaib akan mengimpor ``myapp.views.myview`` secara "
"internal dan merubah string kedalam acuan fungsi sebenarnya. Untuk "
"mengurangi perulangan ketika mengacu banyak tampilan dari modul yang sama, "
"fungsi ``patterns()`` mengambil argumen ``prefix`` awal yang diwajibkan yang "
"ditambahkan ke semua tampilan-sebagai-string di kumpulan dari "
"``urlpatterns`` itu::"

msgid ""
"In the modern era, we have updated the tutorial to instead recommend "
"importing your views module and referencing your view functions (or classes) "
"directly. This has a number of advantages, all deriving from the fact that "
"we are using normal Python in place of \"Django String Magic\": the errors "
"when you mistype a view name are less obscure, IDEs can help with "
"autocompletion of view names, etc."
msgstr ""
"Di era modern, kami telah memperbaharui tutorial daripada menganjurkan modul "
"tampilan anda dan mengacu fungsi tampilan anda (atau kelas-kelas) secara "
"langsung. Ini mempunyai sejumlah keuntungan, semua berasal dari kenyataan "
"bahwa kami sedang menggunakan Python biasa dalam menempatkan \"Django String "
"Magic\": kesalahan-kesalahan ketika anda salah ketik sebuah nama tampilan "
"adalah sedikit mengaburkan, IDE dapat membantu dengan pelengkapan otomatis "
"dari nama-nama tampilan, dll."

msgid ""
"So these days, the above use of the ``prefix`` arg is much more likely to be "
"written (and is better written) as::"
msgstr ""
"Jadi hari ini, yang diatas menggunakan argumen ``prefix`` jauh lebih mungkin "
"untuk ditulis (dan lebih baik ditulis) sebagai::"

msgid ""
"Thus ``patterns()`` serves little purpose and is a burden when teaching new "
"users (answering the newbie's question \"why do I need this empty string as "
"the first argument to ``patterns()``?\"). For these reasons, we are "
"deprecating it. Updating your code is as simple as ensuring that "
"``urlpatterns`` is a list of ``django.conf.urls.url()`` instances. For "
"example::"
msgstr ""

msgid "Passing a string as ``view`` to ``django.conf.urls.url()``"
msgstr ""

msgid ""
"Related to the previous item, referencing views as strings in the ``url()`` "
"function is deprecated. Pass the callable view as described in the previous "
"section instead."
msgstr ""
"Terkait pada barang sebelumnya, mengacu tampilan sebagai sting di fungsi "
"``url()`` adalah diusangkan. Lewatkan tampilan dapat dipanggil seperti "
"digambarkan di bagian sebelumnya sebagai gantinya."

msgid "Template-related settings"
msgstr "Pengaturan terkait-cetakan"

msgid ""
"As a consequence of the multiple template engines refactor, several settings "
"are deprecated in favor of :setting:`TEMPLATES`:"
msgstr ""
"Sebagai sebuah konsekuensi dari banyak refaktor mesin cetakan, beberapa "
"pengaturan diusangkan dalam mendukung :setting:`TEMPLATES`:"

msgid "``django.core.context_processors``"
msgstr "``django.core.context_processors``"

msgid ""
"Built-in template context processors have been moved to ``django.template."
"context_processors``."
msgstr ""
"Pengolah konteks cetakan siap-pakai telah dipindahkan ke ``django.template."
"context_processors``."

msgid "``django.test.SimpleTestCase.urls``"
msgstr "``django.test.SimpleTestCase.urls``"

msgid ""
"The attribute ``SimpleTestCase.urls`` for specifying URLconf configuration "
"in tests has been deprecated and will be removed in Django 1.10. Use :func:"
"`@override_settings(ROOT_URLCONF=...) <django.test.override_settings>` "
"instead."
msgstr ""
"Atribut ``SimpleTestCase.urls`` untuk menentukan konfigurasi URLConf dalam "
"percobaan telah diusangkan dan akan dipindahkan di Django 1.10. Gunakan :"
"func:`@override_settings(ROOT_URLCONF=...) <django.test.override_settings>` "
"sebagai gantinya."

msgid "``prefix`` argument to :func:`~django.conf.urls.i18n.i18n_patterns`"
msgstr "Argumen ``prefix`` pada :func:`~django.conf.urls.i18n.i18n_patterns`"

msgid ""
"Related to the previous item, the ``prefix`` argument to :func:`django.conf."
"urls.i18n.i18n_patterns` has been deprecated. Simply pass a list of ``django."
"conf.urls.url()`` instances instead."
msgstr ""

msgid ""
"Using an incorrect count of unpacked values in the :ttag:`for` template tag"
msgstr ""
"Menggunakan hitungan tidak benar dari nilai dibongkar di etiket cetakan :"
"ttag:`for`"

msgid ""
"Using an incorrect count of unpacked values in :ttag:`for` tag will raise an "
"exception rather than fail silently in Django 1.10."
msgstr ""
"Menggunakan sebuah hitungan tidak benar dari nilai dibongkar dalam etiket :"
"ttag:`for` akan memunculkan sebuah pengecualian daripada gagal secara diam "
"di Django 1.10."

msgid "Passing a dotted path to ``reverse()`` and :ttag:`url`"
msgstr "Melewatkan jalur bertitik ke ``reverse()`` dan :ttag:`url`"

msgid ""
"Reversing URLs by Python path is an expensive operation as it causes the "
"path being reversed to be imported. This behavior has also resulted in a "
"`security issue`_. Use :ref:`named URL patterns <naming-url-patterns>` for "
"reversing instead."
msgstr ""
"Membalikkan URL dengan jalur Python adalah sebuah tindakan yang mahal karena "
"itu menyebabkan jalur menjadi berbalik untuk diimpor. Perilaku ini juga "
"dihasilkan di `security issue`_. Gunakan :ref:`named URL patterns <naming-"
"url-patterns>` untuk membalikkan sebagai gantinya."

msgid ""
"If you are using :mod:`django.contrib.sitemaps`, add the ``name`` argument "
"to the ``url`` that references :func:`django.contrib.sitemaps.views."
"sitemap`::"
msgstr ""
"Jika anda sedang menggunakan :mod:`django.contrib.sitemaps`, tambah argumen "
"``name`` ke ``url`` yang mengacu :func:`django.contrib.sitemaps.views."
"sitemap`::"

msgid ""
"to ensure compatibility when reversing by Python path is removed in Django "
"1.10."
msgstr ""
"untuk memastikan kesesuaian ketika membalikkan oleh jalur Python dipindahkan "
"di Django 1.10."

msgid ""
"Similarly for GIS sitemaps, add ``name='django.contrib.gis.sitemaps.views."
"kml'`` or ``name='django.contrib.gis.sitemaps.views.kmz'``."
msgstr ""
"Serupa untuk peta situs GIS, tambah ``name='django.contrib.gis.sitemaps."
"views.kml'`` atau ``name='django.contrib.gis.sitemaps.views.kmz'``."

msgid ""
"If you are using a Python path for the :setting:`LOGIN_URL` or :setting:"
"`LOGIN_REDIRECT_URL` setting, use the name of the ``url()`` instead."
msgstr ""
"Jika anda sedang menggunakan jalur Python untuk pengaturan :setting:"
"`LOGIN_URL` atau :setting:`LOGIN_REDIRECT_URL`, gunakan nama dari ``url()`` "
"sebagai gantinya."

msgid "Aggregate methods and modules"
msgstr "Metode dan modul pengumpulan"

msgid ""
"The ``django.db.models.sql.aggregates`` and ``django.contrib.gis.db.models."
"sql.aggregates`` modules (both private API), have been deprecated as "
"``django.db.models.aggregates`` and ``django.contrib.gis.db.models."
"aggregates`` are now also responsible for SQL generation. The old modules "
"will be removed in Django 1.10."
msgstr ""
"Modul ``django.db.models.sql.aggregates`` dan ``django.contrib.gis.db.models."
"sql.aggregates`` (kedua API pribadi), telah diusangkan sebagai ``django.db."
"models.aggregates`` dan ``django.contrib.gis.db.models.aggregates`` sekarang "
"juga bertanggungjawab untuk pembangkitan SQL. Modul lama akan dipindahkan di "
"Django 1.10."

msgid ""
"If you were using the old modules, see :doc:`Query Expressions </ref/models/"
"expressions>` for instructions on rewriting custom aggregates using the new "
"stable API."
msgstr ""
"Jika anda sedang menggunakan modul lama, lihat :doc:`Query Expressions </ref/"
"models/expressions>` untuk petunjuk pada penulisan kembali pengumpulan "
"penyesuaian menggunakan API stabil baru."

msgid ""
"The following methods and properties of ``django.db.models.sql.query.Query`` "
"have also been deprecated and the backwards compatibility shims will be "
"removed in Django 1.10:"
msgstr ""
"Metode  berikut dan sifat dari ``django.db.models.sql.query.Query`` juga "
"telah diusangkan dan shim kesesuaian kebelakang akan dipindahkan di Django "
"1.10:"

msgid "``Query.aggregates``, replaced by ``annotations``."
msgstr "``Query.aggregates``, diganti oleh ``annotations``."

msgid "``Query.aggregate_select``, replaced by ``annotation_select``."
msgstr "`Query.aggregate_select``, diganti oleh ``annotation_select``."

msgid "``Query.add_aggregate()``, replaced by ``add_annotation()``."
msgstr "``Query.add_aggregate()``, diganti oleh ``add_annotation()``."

msgid "``Query.set_aggregate_mask()``, replaced by ``set_annotation_mask()``."
msgstr ""
"``Query.set_aggregate_mask()``, diganti oleh ``set_annotation_mask()``."

msgid ""
"``Query.append_aggregate_mask()``, replaced by ``append_annotation_mask()``."
msgstr ""
"``Query.append_aggregate_mask()``, diganti oleh ``append_annotation_mask()``."

msgid "Extending management command arguments through ``Command.option_list``"
msgstr ""
"Memperpanjang argumen perintah pengelolaan melalui ``Command.option_list``"

msgid ""
"Management commands now use :py:mod:`argparse` instead of :py:mod:`optparse` "
"to parse command-line arguments passed to commands. This also means that the "
"way to add custom arguments to commands has changed: instead of extending "
"the ``option_list`` class list, you should now override the :meth:`~django."
"core.management.BaseCommand.add_arguments` method and add arguments through "
"``argparse.add_argument()``. See :ref:`this example <custom-commands-"
"options>` for more details."
msgstr ""
"Perintah pengelolaan sekarang menggunakan :py:mod:`argparse` sebagai "
"gantinya :py:mod:`optparse` untuk mengurai argumen baris-perintah dilewatkan "
"ke perintah. Ini juga berarti bahwa cara untuk menambah argumen penyesuaian "
"pada perintah telah berubah: daripada memperpanjang daftar kelas "
"``option_list``, anda sekarang harus menimpa metode :meth:`~django.core."
"management.BaseCommand.add_arguments` dan menambah argumen melalui "
"``argparse.add_argument()``. Lihat :ref:`this example <custom-commands-"
"options>` untuk lebih rinci."

msgid "``django.core.management.NoArgsCommand``"
msgstr "``django.core.management.NoArgsCommand``"

msgid ""
"The class ``NoArgsCommand`` is now deprecated and will be removed in Django "
"1.10. Use :class:`~django.core.management.BaseCommand` instead, which takes "
"no arguments by default."
msgstr ""
"Kelas ``NoArgsCommand`` sekarang diusangkan dan akan dipindahkan di Django "
"1.10. Gunakan :class:`~django.core.management.BaseCommand` sebagai gantinya, "
"yang mengambil tidak ada argumen secara awal."

msgid "Listing all migrations in a project"
msgstr "Mendaftarkan semua perpindahan di sebuah proyek"

msgid ""
"The ``--list`` option of the :djadmin:`migrate` management command is "
"deprecated and will be removed in Django 1.10. Use :djadmin:`showmigrations` "
"instead."
msgstr ""
"Pilihan ``--list`` dari perintah pengelolaan :djadmin:`migrate` telah "
"diusangkan dan akan dipindahkan di Django 1.10. Gunakan :djadmin:"
"`showmigrations` sebagai gantinya."

msgid ""
"``cache_choices`` option of ``ModelChoiceField`` and "
"``ModelMultipleChoiceField``"
msgstr ""
"Pilihan ``cache_choices`` dari ``ModelChoiceField`` dan "
"``ModelMultipleChoiceField``"

msgid ""
":class:`~django.forms.ModelChoiceField` and :class:`~django.forms."
"ModelMultipleChoiceField` took an undocumented, untested option "
"``cache_choices``. This cached querysets between multiple renderings of the "
"same ``Form`` object. This option is subject to an accelerated deprecation "
"and will be removed in Django 1.9."
msgstr ""
":class:`~django.forms.ModelChoiceField` dan :class:`~django.forms."
"ModelMultipleChoiceField` mengambil sebuah tidak terdokumentasi, "
"``cache_choices`` pilihan tidak dicoba. Ini menyimpan queryset diantara "
"pembangunan banyak dari obyek ``Form`` yang sama. Pilihan ini adalah subjek "
"pada pengusangan yang dipercepat dan akan dipindahkan di Django 1.9."

msgid "``django.template.resolve_variable()``"
msgstr "``django.template.resolve_variable()``"

msgid ""
"The function has been informally marked as \"Deprecated\" for some time. "
"Replace ``resolve_variable(path, context)`` with ``django.template."
"Variable(path).resolve(context)``."
msgstr ""
"Fungsi ini telah secara tidak resmi ditandai sebagai \"Deprecated\" untuk "
"beberapa waktu. Ganti ``resolve_variable(path, context)`` dengan ``django."
"template.Variable(path).resolve(context)``."

msgid "``django.contrib.webdesign``"
msgstr "``django.contrib.webdesign``"

msgid ""
"It provided the :ttag:`lorem` template tag which is now included in the "
"built-in tags. Simply remove ``'django.contrib.webdesign'`` from :setting:"
"`INSTALLED_APPS` and ``{% load webdesign %}`` from your templates."
msgstr ""
"Itu menyediakan etiket cetakan :ttag:`lorem` yang sekarang disertakan di "
"etiket siap-pakai. Cukup pindahkan ``'django.contrib.webdesign'`` dari :"
"setting:`INSTALLED_APPS` dan ``{% load webdesign %}`` dari cetakan anda."

msgid "``error_message`` argument to ``django.forms.RegexField``"
msgstr "``error_message`` argumen ke ``django.forms.RegexField``"

msgid ""
"It provided backwards compatibility for pre-1.0 code, but its functionality "
"is redundant. Use ``Field.error_messages['invalid']`` instead."
msgstr ""
"Itu menyediakan kesesuaian kebelakang untuk kode pra-1.0, tetapi "
"fungsionalitasnya berulang. Gunakan ``Field.error_messages['invalid']`` "
"sebagai gantinya."

msgid "Old :tfilter:`unordered_list` syntax"
msgstr "Sintaksis :tfilter:`unordered_list` lama"

msgid ""
"An older (pre-1.0), more restrictive and verbose input format for the :"
"tfilter:`unordered_list` template filter has been deprecated::"
msgstr ""
"Sebuah terlama (pra-1.0), lebih bentuk masukan terbatas dan bertele-tele "
"untuk saringan cetakan :tfilter:`unordered_list` telah diusangkan::"

msgid "Using the new syntax, this becomes::"
msgstr "Menggunakan sintaksis baru, ini menjadi::"

msgid "``django.forms.Field._has_changed()``"
msgstr "``django.forms.Field._has_changed()``"

msgid ""
"Rename this method to :meth:`~django.forms.Field.has_changed` by removing "
"the leading underscore. The old name will still work until Django 1.10."
msgstr ""
"Namai kembali metode ini ke :meth:`~django.forms.Field.has_changed` dengan "
"memindahkan garis bawah di depan. Nama lama akan masih bekerja sampai Django "
"1.10."

msgid "``django.utils.html.remove_tags()`` and ``removetags`` template filter"
msgstr ""
"Penyaring cetakan ``django.utils.html.remove_tags()`` dan ``removetags`` "

msgid ""
"``django.utils.html.remove_tags()`` as well as the template filter "
"``removetags`` have been deprecated as they cannot guarantee safe output. "
"Their existence is likely to lead to their use in security-sensitive "
"contexts where they are not actually safe."
msgstr ""
"``django.utils.html.remove_tags()`` sama halnya dengan saringan cetakan "
"``removetags`` telah diusangkan karena mereka tidak dapat menjamin keluaran "
"aman."

msgid ""
"The unused and undocumented ``django.utils.html.strip_entities()`` function "
"has also been deprecated."
msgstr ""
"Fungsi ``django.utils.html.strip_entities()`` tidak digunakan dan tidak "
"terdokumentasikan juga telah diusangkan."

msgid ""
"``is_admin_site`` argument to ``django.contrib.auth.views.password_reset()``"
msgstr ""
"``is_admin_site`` argumen ke ``django.contrib.auth.views.password_reset()``"

msgid "It's a legacy option that should no longer be necessary."
msgstr "Itu adalah pilihan warisan yang harus tidak lagi dibutuhkan."

msgid "``SubfieldBase``"
msgstr "``SubfieldBase``"

msgid ""
"``django.db.models.fields.subclassing.SubfieldBase`` has been deprecated and "
"will be removed in Django 1.10. Historically, it was used to handle fields "
"where type conversion was needed when loading from the database, but it was "
"not used in ``.values()`` calls or in aggregates. It has been replaced with :"
"meth:`~django.db.models.Field.from_db_value`."
msgstr ""
"``django.db.models.fields.subclassing.SubfieldBase`` telah diusangkan dan "
"akan dipindahkan di Django 1.10. Secara riwayat, itu telah digunakan untuk "
"menangani bidang-bidang dimana perubahan jenis dibutuhkan ketika memuat dari "
"basisdata, tetapi itu tidak digunakan di pemanggilan ``.values()`` atau di "
"pengumpulan. Itu telah diganti dengan :meth:`~django.db.models.Field."
"from_db_value`."

msgid ""
"The new approach doesn't call the :meth:`~django.db.models.Field.to_python` "
"method on assignment as was the case with ``SubfieldBase``. If you need that "
"behavior, reimplement the ``Creator`` class `from Django's source code "
"<https://github.com/django/django/blob/stable/1.8.x/django/db/models/fields/"
"subclassing.py#L31-L44>`_ in your project."
msgstr ""
"Pendekatan baru tidak memanggil metode :meth:`~django.db.models.Field."
"to_python` pada penugasan seperti dulu kasus dengan ``SubfieldBase``. Jika "
"anda butuh perilaku itu, terapkan kembali kelas ``Creator`` `from Django's "
"source code <https://github.com/django/django/blob/stable/1.8.x/django/db/"
"models/fields/subclassing.py#L31-L44>`_ di proyek anda."

msgid "``django.utils.checksums``"
msgstr "``django.utils.checksums``"

msgid ""
"The ``django.utils.checksums`` module has been deprecated and will be "
"removed in Django 1.10. The functionality it provided (validating checksum "
"using the Luhn algorithm) was undocumented and not used in Django. The "
"module has been moved to the :pypi:`django-localflavor` package (version "
"1.1+)."
msgstr ""

msgid "``InlineAdminForm.original_content_type_id``"
msgstr "``InlineAdminForm.original_content_type_id``"

msgid ""
"The ``original_content_type_id`` attribute on ``InlineAdminForm`` has been "
"deprecated and will be removed in Django 1.10. Historically, it was used to "
"construct the \"view on site\" URL. This URL is now accessible using the "
"``absolute_url`` attribute of the form."
msgstr ""
"Atribut ``original_content_type_id`` pada ``InlineAdminForm`` telah "
"diusangkan dan akan dipindahkan di Django 1.10. Secara riwayat, dia "
"digunakan untuk membangun URL ``InlineAdminForm``. URL ini sekarang dapat "
"diakses menggunakan atribut ``absolute_url`` pada formulir."

msgid ""
"``django.views.generic.edit.FormMixin.get_form()``’s ``form_class`` argument"
msgstr ""
"Argumen ``form_class`` ``django.views.generic.edit.FormMixin.get_form()``"

msgid ""
"``FormMixin`` subclasses that override the ``get_form()`` method should make "
"sure to provide a default value for the ``form_class`` argument since it's "
"now optional."
msgstr ""
"Subkelas ``FormMixin`` yang menimpa metode ``get_form()`` harus memastikan "
"menyediakan nilai awal untuk argumen ``form_class`` sejak itu sekarang "
"menjadi pilihan."

msgid ""
"Rendering templates loaded by :func:`~django.template.loader.get_template()` "
"with a :class:`~django.template.Context`"
msgstr ""
"Membangun cetakan dimuat oleh :func:`~django.template.loader.get_template()` "
"dengan :class:`~django.template.Context`"

msgid ""
"The return type of :func:`~django.template.loader.get_template()` has "
"changed in Django 1.8: instead of a :class:`django.template.Template`, it "
"returns a ``Template`` instance whose exact type depends on which backend "
"loaded it."
msgstr ""
"Jenis kembalian dari :func:`~django.template.loader.get_template()` telah "
"berubah di Django 1.8: sebagai gantinya :class:`django.template.Template`, "
"itu mengembalikan instance ``Template`` yang jenis tepatnya bergantung pada "
"backend mana itu dimuat."

msgid ""
"Both classes provide a ``render()`` method, however, the former takes a :"
"class:`django.template.Context` as an argument while the latter expects a :"
"class:`dict`. This change is enforced through a deprecation path for Django "
"templates."
msgstr ""
"Kedua kelas menyediakan metode ``render()``, bagaimanapun, yang awal "
"mengambil :class:`django.template.Context` sebagai sebuah argumen selagi "
"yang terakhir mengharapkan :class:`dict`. Perubahan ini dipaksakan melalui "
"jalur pengusangan untuk cetakan Django."

msgid ""
"All this also applies to :func:`~django.template.loader.select_template()`."
msgstr ""
"Semua ini juga berlaku ke :func:`~django.template.loader.select_template()`."

msgid ""
":class:`~django.template.Template` and :class:`~django.template.Context` "
"classes in template responses"
msgstr ""
"Kelas-kelas :class:`~django.template.Template` dan :class:`~django.template."
"Context` di cetakan tanggapan"

msgid ""
"Some methods of :class:`~django.template.response.SimpleTemplateResponse` "
"and :class:`~django.template.response.TemplateResponse` accepted :class:"
"`django.template.Context` and :class:`django.template.Template` objects as "
"arguments. They should now receive :class:`dict` and backend-dependent "
"template objects respectively."
msgstr ""
"Beberapa metode dari :class:`~django.template.response."
"SimpleTemplateResponse` dan :class:`~django.template.response."
"TemplateResponse` diterima obyek :class:`django.template.Context` dan :class:"
"`django.template.Template` sebagai argumen. Mereka seharusnya menerima :"
"class:`dict` dan tergantung-backend obyek cetakan masing-masing."

msgid ""
"This also applies to the return types if you have subclassed either template "
"response class."
msgstr ""
"Ini juga berlaku pada jenis kembalian jika anda mempunyai subkelas antara "
"cetakan kelas tanggapan."

msgid ""
"Check the :doc:`template response API documentation </ref/template-"
"response>` for details."
msgstr ""
"Periksa :doc:`template response API documentation </ref/template-response>` "
"untuk rincian."

msgid "``current_app`` argument of template-related APIs"
msgstr "Argumen ``current_app`` dari API cetakan-terkait"

msgid ""
"The following functions and classes will no longer accept a ``current_app`` "
"parameter to set an URL namespace in Django 1.10:"
msgstr ""
"Fungsi dan kelas berikut tidak akan lagi menerima parameter ``current_app`` "
"untuk menyetel namespace URL di Django 1.10:"

msgid ""
"Set ``request.current_app`` instead, where ``request`` is the first argument "
"to these functions or classes. If you're using a plain ``Context``, use a "
"``RequestContext`` instead."
msgstr ""
"Setel ``request.current_app`` sebagai gantinya, dimana ``request`` adalah "
"argumen pertama ke fungsi atau kelas ini. Jika anda sedang menggunakan "
"``Context`` polos, gunakan ``RequestContext`` sebagai gantinya."

msgid ""
"``dictionary`` and ``context_instance`` arguments of rendering functions"
msgstr "Argumen ``dictionary`` dan ``context_instance`` dari fungsi membangun"

msgid ""
"The following functions will no longer accept the ``dictionary`` and "
"``context_instance`` parameters in Django 1.10:"
msgstr ""
"Fungsi berikut tidak lagi menerima parameter ``dictionary`` dan "
"``context_instance`` di Django 1.10:"

msgid ""
"Use the ``context`` parameter instead. When ``dictionary`` is passed as a "
"positional argument, which is the most common idiom, no changes are needed."
msgstr ""
"Gunakan parameter ``context`` sebagai gantinya. Ketika ``dictionary`` "
"dilewatkan sebagai argumen penempatan, yaitu dialek paling umum, tidak ada "
"perubahan dibutuhkan."

msgid ""
"If you're passing a :class:`~django.template.Context` in "
"``context_instance``, pass a :class:`dict` in the ``context`` parameter "
"instead. If you're passing a :class:`~django.template.RequestContext`, pass "
"the request separately in the ``request`` parameter."
msgstr ""
"Jika anda sedang melewatkan :class:`~django.template.Context` di "
"``context_instance``, lewatkan :class:`dict` di parameter ``context`` "
"sebagai gantinya. Jika anda sedang melewatkan :class:`~django.template."
"RequestContext`, lewatkan permintaan secara terpisah di parameter "
"``request``."

msgid "``dirs`` argument of template-finding functions"
msgstr "Argumen ``dirs`` dari fungsi cetakan-pencarian"

msgid ""
"The following functions will no longer accept a ``dirs`` parameter to "
"override ``TEMPLATE_DIRS`` in Django 1.10:"
msgstr ""
"Fungsi berikut tidak lagi menerima parameter ``dirs`` untuk menimpa "
"``TEMPLATE_DIRS`` di Django 1.10:"

msgid ""
"The parameter didn't work consistently across different template loaders and "
"didn't work for included templates."
msgstr ""
"Parameter tidak bekerja secara tetap terhadap pemuat cetakan berbeda dan "
"tidak bekerja untuk cetakan disertakan."

msgid "``django.template.loader.BaseLoader``"
msgstr "``django.template.loader.BaseLoader``"

msgid ""
"``django.template.loader.BaseLoader`` was renamed to ``django.template."
"loaders.base.Loader``. If you've written a custom template loader that "
"inherits ``BaseLoader``, you must inherit ``Loader`` instead."
msgstr ""
"``django.template.loader.BaseLoader`` dinamai kembali menjadi ``django."
"template.loader.BaseLoader``. Jika anda sedang menulis pemuat cetakan "
"penyesuaian yang mewarisi ``BaseLoader``, anda harus mewarisi ``Loader`` "
"sebagai gantinya."

msgid "``django.test.utils.TestTemplateLoader``"
msgstr "``django.test.utils.TestTemplateLoader``"

msgid ""
"Private API ``django.test.utils.TestTemplateLoader`` is deprecated in favor "
"of ``django.template.loaders.locmem.Loader`` and will be removed in Django "
"1.9."
msgstr ""
"API pribadi ``django.test.utils.TestTemplateLoader`` diusangkan mendukung "
"``django.template.loaders.locmem.Loader`` dan akan dipindahkan di Django 1.9."

msgid "Support for the ``max_length`` argument on custom ``Storage`` classes"
msgstr ""
"Mendukung untuk argumen ``max_length`` pada kelas-kelas ``Storage`` "
"peyesuaian"

msgid ""
"``Storage`` subclasses should add ``max_length=None`` as a parameter to :"
"meth:`~django.core.files.storage.Storage.get_available_name` and/or :meth:"
"`~django.core.files.storage.Storage.save` if they override either method. "
"Support for storages that do not accept this argument will be removed in "
"Django 1.10."
msgstr ""
"Subkelas ``Storage`` harus menambahkan ``max_length=None`` sebagai sebuah "
"parameter pada :meth:`~django.core.files.storage.Storage.get_available_name` "
"dan/atau :meth:`~django.core.files.storage.Storage.save` jika mereka menimpa "
"baik metode. Dukungan untuk penyimpaan yang tidak menerima argumen ini akan "
"dipindahkan di Django 1.10."

msgid "``qn`` replaced by ``compiler``"
msgstr "``qn`` diganti oleh ``compiler``"

msgid ""
"In previous Django versions, various internal ORM methods (mostly ``as_sql`` "
"methods) accepted a ``qn`` (for \"quote name\") argument, which was a "
"reference to a function that quoted identifiers for sending to the database. "
"In Django 1.8, that argument has been renamed to ``compiler`` and is now a "
"full ``SQLCompiler`` instance. For backwards-compatibility, calling a "
"``SQLCompiler`` instance performs the same name-quoting that the ``qn`` "
"function used to. However, this backwards-compatibility shim is immediately "
"deprecated: you should rename your ``qn`` arguments to ``compiler``, and "
"call ``compiler.quote_name_unless_alias(...)`` where you previously called "
"``qn(...)``."
msgstr ""
"Di versi Django sebelumnya, beragam internal cara ORM (kebanyakan cara "
"``as_sql``) menerima sebuah argumen ``qn`` (untuk \"mengutip nama\"), yang "
"telah diacukan ke fungsi yang mengutip penciri untuk mengirimkan ke "
"basisdata. Di Django 1.8, argumen tersebut telah dinamai kembali ke "
"``compiler`` dan sekarang instance ``SQLCompiler`` penuh. Untuk kesesuaian "
"kebelakang, memanggil instance ``SQLCompiler`` melakukan pengutipan-nama "
"sama yang fungsi ``qn`` biasanya. Bagaimanapun, shim kesesuaian kebelakang "
"ini segera diusangkan: anda harus menamai kembali argumen ``qn`` anda ke "
"``compiler``, dan panggil ``compiler.quote_name_unless_alias(...)`` dimana "
"anda sebelumnya memanggil ``qn(...)``."

msgid "Default value of ``RedirectView.permanent``"
msgstr "Nilai awal dari ``RedirectView.permanent``"

msgid ""
"The default value of the :attr:`RedirectView.permanent <django.views.generic."
"base.RedirectView.permanent>` attribute will change from ``True`` to "
"``False`` in Django 1.9."
msgstr ""
"Nilai awal dari atribut :attr:`RedirectView.permanent <django.views.generic."
"base.RedirectView.permanent>` akan berubah dari ``True`` menjadi ``False`` "
"di Django 1.9."

msgid ""
"Using ``AuthenticationMiddleware`` without "
"``SessionAuthenticationMiddleware``"
msgstr ""
"Menggunakan ``AuthenticationMiddleware`` tanpa "
"``SessionAuthenticationMiddleware``"

msgid ""
"``django.contrib.auth.middleware.SessionAuthenticationMiddleware`` was added "
"in Django 1.7. In Django 1.7.2, its functionality was moved to ``auth."
"get_user()`` and, for backwards compatibility, enabled only if ``'django."
"contrib.auth.middleware.SessionAuthenticationMiddleware'`` appears in "
"``MIDDLEWARE_CLASSES``."
msgstr ""
"``django.contrib.auth.middleware.SessionAuthenticationMiddleware`` telah "
"ditambahkan di Django 1.7. Di 1.7.2, fungsionalitasnya telah dipindahkan ke "
"``auth.get_user()`` dan, untuk kesesuaian kebelakang, ada hanya jika "
"``'django.contrib.auth.middleware.SessionAuthenticationMiddleware'`` muncul "
"di ``MIDDLEWARE_CLASSES``.."

msgid ""
"In Django 1.10, session verification will be enabled regardless of whether "
"or not ``SessionAuthenticationMiddleware`` is enabled (at which point "
"``SessionAuthenticationMiddleware`` will have no significance). You can add "
"it to your ``MIDDLEWARE_CLASSES`` sometime before then to opt-in. Please "
"read the :ref:`upgrade considerations <session-invalidation-on-password-"
"change>` first."
msgstr ""
"Di Django 1.10, pengecekan sesi akan diadakan meskipun apakah atau tidak "
"``SessionAuthenticationMiddleware`` diadakan (di mana titik "
"``SessionAuthenticationMiddleware`` akan tidak mempunyai makna). Anda dapat "
"menambahkannya ke ``MIDDLEWARE_CLASSES`` anda terkadang sebelum kemudian "
"dimasukkan. Silahkan baca :ref:`upgrade considerations <session-invalidation-"
"on-password-change>` dahulu."

msgid "``django.contrib.sitemaps.FlatPageSitemap``"
msgstr "``django.contrib.sitemaps.FlatPageSitemap``"

msgid ""
"``django.contrib.sitemaps.FlatPageSitemap`` has moved to ``django.contrib."
"flatpages.sitemaps.FlatPageSitemap``. The old import location is deprecated "
"and will be removed in Django 1.9."
msgstr ""
"``django.contrib.sitemaps.FlatPageSitemap`` telah dipindahkan ke ``django."
"contrib.flatpages.sitemaps.FlatPageSitemap``. Tempat impor lama diusangkan "
"dan akan dipindahkan di Django 1.9."

msgid "Model ``Field.related``"
msgstr "Model ``Field.related``"

msgid ""
"Private attribute ``django.db.models.Field.related`` is deprecated in favor "
"of ``Field.rel``.  The latter is an instance of ``django.db.models.fields."
"related.ForeignObjectRel`` which replaces ``django.db.models.related."
"RelatedObject``. The ``django.db.models.related`` module has been removed "
"and the ``Field.related`` attribute will be removed in Django 1.10."
msgstr ""
"Atribut pribadi ``django.db.models.Field.related`` diusangkan mendukung "
"``Field.rel``. Yang terakhir adalah sebuah instance dari ``django.db.models."
"fields.related.ForeignObjectRel`` yang menggantikan ``django.db.models."
"related.RelatedObject``. Modul ``django.db.models.related`` telah "
"dipindahkan dan atribut ``Field.related`` akan dipindahkan di Django 1.10."

msgid "``ssi`` template tag"
msgstr "etiket cetakan ``ssi``"

msgid ""
"The ``ssi`` template tag allows files to be included in a template by "
"absolute path. This is of limited use in most deployment situations, and "
"the :ttag:`include` tag often makes more sense. This tag is now deprecated "
"and will be removed in Django 1.10."
msgstr ""
"Etiket cetakan ``ssi`` mengizinkan berkas untuk disertakan dalam sebuah "
"cetakan oleh jalur mutlak. Ini adalah dari keterbatasan penggunaan paling di "
"keadaan penyebaran, dan etiket :ttag:`include` sering lebih  masuk akal. "
"Etiket ini sekarang diusangkan dan akan dipindahkan di Django 1.10."

msgid "``=`` as comparison operator in ``if`` template tag"
msgstr "``=`` sebagai perbandingan penghubung di etiket cetakan ``if``"

msgid ""
"Using a single equals sign with the ``{% if %}`` template tag for equality "
"testing was undocumented and untested. It's now deprecated in favor of "
"``==``."
msgstr ""
"Menggunakan tanda persamaan tunggal dengan etiket cetakan ``{% if %}`` untuk "
"persamaan percobaan tidak didokumentasikan dan tidak dicoba. Itu sekarang "
"diusangkan mendukung ``==``."

msgid "``%(<foo>)s`` syntax in ``ModelFormMixin.success_url``"
msgstr "``%(<foo>)s`` sintaksis di ``ModelFormMixin.success_url``"

msgid ""
"The legacy ``%(<foo>)s`` syntax in :attr:`ModelFormMixin.success_url <django."
"views.generic.edit.ModelFormMixin.success_url>` is deprecated and will be "
"removed in Django 1.10."
msgstr ""
"Warisan sintaksis ``%(<foo>)s`` di :attr:`ModelFormMixin.success_url <django."
"views.generic.edit.ModelFormMixin.success_url>` diusangkan dan akan "
"dipindahkan di Django 1.10."

msgid "``GeoQuerySet`` aggregate methods"
msgstr "Metode pengumpulan ``GeoQuerySet``"

msgid ""
"The ``collect()``, ``extent()``, ``extent3d()``, ``make_line()``, and "
"``unionagg()`` aggregate methods are deprecated and should be replaced by "
"their function-based aggregate equivalents (``Collect``, ``Extent``, "
"``Extent3D``, ``MakeLine``, and ``Union``)."
msgstr ""
"Metode pengumpulan ``collect()``, ``extent()``, ``extent3d()``, "
"``make_line()``, dan ``unionagg()`` diusangkan dan harus diganti dengan "
"berdasarkan-fungsi mereka pengumpulan yang sama (``Collect``, ``Extent``, "
"``Extent3D``, ``MakeLine``, dan ``Union``)."

msgid "Signature of the ``allow_migrate`` router method"
msgstr "Tanda tangan dari metode perute ``allow_migrate``"

msgid ""
"The signature of the :meth:`allow_migrate` method of database routers has "
"changed from ``allow_migrate(db, model)`` to ``allow_migrate(db, app_label, "
"model_name=None, **hints)``."
msgstr ""
"Tanda tangan dari metode :meth:`allow_migrate` dari perute basisdata telah "
"berubah dari ``allow_migrate(db, model)`` menjadi ``allow_migrate(db, "
"app_label, model_name=None, **hints)``."

msgid ""
"When ``model_name`` is set, the value that was previously given through the "
"``model`` positional argument may now be found inside the ``hints`` "
"dictionary under the key ``'model'``."
msgstr ""
"Ketika ``model_name`` disetel, nilai yang telah sebelumnya diberikan melalui "
"penempatan argumen ``model`` mungkin tidak ditemukan didalam kamus ``hints`` "
"dibawah kunci ``'model'``."

msgid ""
"After switching to the new signature the router will also be called by the :"
"class:`~django.db.migrations.operations.RunPython` and :class:`~django.db."
"migrations.operations.RunSQL` operations."
msgstr ""
"Setelah berganti ke tanda tangan baru perute akan juga dipanggil oleh "
"tindakan :class:`~django.db.migrations.operations.RunPython` dan :class:"
"`~django.db.migrations.operations.RunSQL`."

msgid "Features removed in 1.8"
msgstr "Fitur-fitur dipindahkan di 1.8"

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 1.8. See :ref:`deprecated-features-1.6` for details, "
"including how to remove usage of these features."
msgstr ""
"Fitur-fitur ini telah mencapai akhir siklus pengusangan mereka dan "
"dipindahkan di Django 1.8. Lihat :ref:`deprecated-features-1.6` untuk "
"rincian, termasuk bagaimana memindahkan penggunaan fitur ini."

msgid "``django.contrib.comments`` is removed."
msgstr "``django.contrib.comments`` dipindahkan."

msgid "The following transaction management APIs are removed:"
msgstr "API pengelolaan transaksi berikut dipindahkan:"

msgid "``TransactionMiddleware``"
msgstr "``TransactionMiddleware``"

msgid ""
"the decorators and context managers ``autocommit``, ``commit_on_success``, "
"and ``commit_manually``, defined in ``django.db.transaction``"
msgstr ""
"penghias dan pengelola konteks ``autocommit``, ``commit_on_success``, dan "
"``commit_manually``, ditentukan di ``django.db.transaction``"

msgid ""
"the functions ``commit_unless_managed`` and ``rollback_unless_managed``, "
"also defined in ``django.db.transaction``"
msgstr ""
"Fungsi ``commit_unless_managed`` dan ``rollback_unless_managed``, juga "
"ditentukan di ``django.db.transaction``"

msgid ""
"The :ttag:`cycle` and :ttag:`firstof` template tags auto-escape their "
"arguments."
msgstr ""
"Etiket cetakan :ttag:`cycle` dan :ttag:`firstof` meloloskan otomatis argumen "
"mereka."

msgid "The ``SEND_BROKEN_LINK_EMAILS`` setting is removed."
msgstr "Pengaturan ``SEND_BROKEN_LINK_EMAILS`` dipindahkan."

msgid "``django.middleware.doc.XViewMiddleware`` is removed."
msgstr "``django.middleware.doc.XViewMiddleware`` dipindahkan."

msgid "The ``Model._meta.module_name`` alias is removed."
msgstr "Nama lain ``Model._meta.module_name`` dipindahkan. "

msgid ""
"The backward compatible shims introduced to rename ``get_query_set`` and "
"similar queryset methods are removed. This affects the following classes: "
"``BaseModelAdmin``, ``ChangeList``, ``BaseCommentNode``, "
"``GenericForeignKey``, ``Manager``, ``SingleRelatedObjectDescriptor`` and "
"``ReverseSingleRelatedObjectDescriptor``."
msgstr ""
"Shim kesesuaian kebelakang diperkenalkan untuk menamai kembali "
"``get_query_set`` dan metode queryset yang mirip dipindahkan. Ini "
"mempengaruhi kelas-kelas berikut: ``BaseModelAdmin``, ``ChangeList``, "
"``BaseCommentNode``, ``GenericForeignKey``, ``Manager``, "
"``SingleRelatedObjectDescriptor`` dan "
"``ReverseSingleRelatedObjectDescriptor``."

msgid ""
"The backward compatible shims introduced to rename the attributes "
"``ChangeList.root_query_set`` and ``ChangeList.query_set`` are removed."
msgstr ""
"Shim kesesuaian kebelakang diperkenalkan untuk menamai kembali atribut "
"``ChangeList.root_query_set`` dan ``ChangeList.query_set`` dipindahkan."

msgid ""
"``django.views.defaults.shortcut`` and ``django.conf.urls.shortcut`` are "
"removed."
msgstr ""
"``django.views.defaults.shortcut`` dan ``django.conf.urls.shortcut`` "
"dipindahkan."

msgid "Support for the Python Imaging Library (PIL) module is removed."
msgstr "Dukungan untuk modul Python Imaging Library (PIL) dipindahkan."

msgid "The following private APIs are removed:"
msgstr "API pribadi berikut dipindahkan:"

msgid "``django.db.backend``"
msgstr "``django.db.backend``"

msgid "``django.db.close_connection()``"
msgstr "``django.db.close_connection()``"

msgid "``django.db.backends.creation.BaseDatabaseCreation.set_autocommit()``"
msgstr "``django.db.backends.creation.BaseDatabaseCreation.set_autocommit()``"

msgid "``django.db.transaction.is_managed()``"
msgstr "``django.db.transaction.is_managed()``"

msgid "``django.db.transaction.managed()``"
msgstr "``django.db.transaction.managed()``"

msgid "``django.forms.widgets.RadioInput`` is removed."
msgstr "``django.forms.widgets.RadioInput`` telah dipindah."

msgid ""
"The module ``django.test.simple`` and the class ``django.test.simple."
"DjangoTestSuiteRunner`` are removed."
msgstr ""
"Modul ``django.test.simple`` dan kelas ``django.test.simple."
"DjangoTestSuiteRunner`` dipindahkan."

msgid "The module ``django.test._doctest`` is removed."
msgstr " Modul ``django.test._doctest`` telah dipindahkan."

msgid ""
"The ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY`` setting is removed. This change "
"affects both ``django.middleware.cache.CacheMiddleware`` and ``django."
"middleware.cache.UpdateCacheMiddleware`` despite the lack of a deprecation "
"warning in the latter class."
msgstr ""
"Pengaturan ``CACHE_MIDDLEWARE_ANONYMOUS_ONLY`` dipindahkan. Perubahan ini "
"mempengaruhi kedua ``django.middleware.cache.CacheMiddleware`` dan ``django."
"middleware.cache.UpdateCacheMiddleware`` meskipun kekurangan dari peringatan "
"pengusangan di kelas terakhir."

msgid ""
"Usage of the hard-coded *Hold down \"Control\", or \"Command\" on a Mac, to "
"select more than one.* string to override or append to user-provided "
"``help_text`` in forms for ``ManyToMany`` model fields is not performed by "
"Django anymore either at the model or forms layer."
msgstr ""
"Penggunaan dari kode-keras *Tahan \"Control\", atau \"Command\" pada Mac, "
"untuk memilih lebih dari satu.* deretan karakter untuk dikesampingkan atau "
"ditambahkan untuk ``help_text`` disediakan-pengguna dalam bentuk untuk "
"bidang model ``ManyToMany`` tidak dilakukan oleh Django lagi baik pada "
"lapisan model atau formulir."

msgid ""
"The ``Model._meta.get_(add|change|delete)_permission`` methods are removed."
msgstr "Metode ``Model._meta.get_(add|change|delete)_permission`` dipindahkan."

msgid ""
"The session key ``django_language`` is no longer read for backwards "
"compatibility."
msgstr ""
"Kunci sesi ``django_language`` tidak lagi membaca untuk kesesuaian "
"kebelakang."

msgid ""
"Geographic Sitemaps are removed (``django.contrib.gis.sitemaps.views.index`` "
"and ``django.contrib.gis.sitemaps.views.sitemap``)."
msgstr ""
"Peta situs geografis dipindahkan (``django.contrib.gis.sitemaps.views."
"index`` dan ``django.contrib.gis.sitemaps.views.sitemap``)."

msgid ""
"``django.utils.html.fix_ampersands``, the ``fix_ampersands`` template "
"filter, and ``django.utils.html.clean_html`` are removed."
msgstr ""
"``django.utils.html.fix_ampersands``, saringan cetakan ``fix_ampersands``, "
"dan ``django.utils.html.clean_html`` dipindahkan."

msgid "Django 1.8.1 release notes"
msgstr "Catatan terbitan Django 1.8.1"

msgid ""
"Django 1.8.1 fixes several bugs in 1.8 and includes some optimizations in "
"the migrations framework."
msgstr ""
"Django 1.8.1 memperbaiki beberapa kesalahan di 1.8 termasuk beberapa "
"optimalisasi di kerangka kerja perpindahan."

msgid ""
"Added support for serializing :class:`~datetime.timedelta` objects in "
"migrations (:ticket:`24566`)."
msgstr ""
"Ditambahkan dukungan untuk serialisasi obyek :class:`~datetime.timedelta` di "
"perpindahan (:ticket:`24566`)."

msgid ""
"Restored proper parsing of the :djadmin:`testserver` command's positional "
"arguments (fixture names) (:ticket:`24571`)."
msgstr ""
"Menyimpan kembali penguraian sesuai dari :djadmin:`testserver` argumen "
"penempatan perintah (nama perlengkapan tetap) (:ticket:`24571`)."

msgid ""
"Prevented ``TypeError`` in translation functions ``check_for_language()`` "
"and ``get_language_bidi()`` when translations are deactivated (:ticket:"
"`24569`)."
msgstr ""
"Dicegah ``TypeError`` di fungsi terjemahan ``check_for_language()`` dan "
"``get_language_bidi()`` ketika terjemahan dinonaktifkan (:ticket:`24569`)."

msgid ""
"Fixed :djadmin:`squashmigrations` command when using :class:`~django.db."
"migrations.operations.SeparateDatabaseAndState` (:ticket:`24278`)."
msgstr ""
"Diperbaiki perintah :djadmin:`squashmigrations` ketika menggunakan :class:"
"`~django.db.migrations.operations.SeparateDatabaseAndState` (:ticket:"
"`24278`)."

msgid ""
"Stripped microseconds from ``datetime`` values when using an older version "
"of the MySQLdb DB API driver as it does not support fractional seconds (:"
"ticket:`24584`)."
msgstr ""
"Dilucuti mikrodetik dari nilai ``datetime`` ketika menggunakan versi terlama "
"dari pemacu API DB MySQLdb ketika itu tidak mendukung pecahan detik (:ticket:"
"`24584`)."

msgid ""
"Fixed a migration crash when altering :class:`~django.db.models."
"ManyToManyField`\\s (:ticket:`24513`)."
msgstr ""
"Diperbaiki perpindahan kegagalan ketika mengubah :class:`~django.db.models."
"ManyToManyField` (:ticket:`24513`) ."

msgid ""
"Fixed a crash with ``QuerySet.update()`` on foreign keys to one-to-one "
"fields (:ticket:`24578`)."
msgstr ""
"Diperbaiki sebuah kegagalan dengan ``QuerySet.update()`` pada foreign key ke "
"bidang satu-ke-satu (:ticket:`24578`)."

msgid ""
"Fixed a regression in the model detail view of :mod:`~django.contrib."
"admindocs` when a model has a reverse foreign key relation (:ticket:`24624`)."
msgstr ""
"Diperbaiki pemulihan di tampilan rincian model dari :mod:`~django.contrib."
"admindocs` ketika sebuah model telah memutar hubungan foreign key (:ticket:"
"`24624`)."

msgid ""
"Prevented arbitrary file inclusions in :mod:`~django.contrib.admindocs` (:"
"ticket:`24625`)."
msgstr ""
"Dicegah pemasukan berkas sewenang-wenang di :mod:`~django.contrib.admindocs` "
"(:ticket:`24625`)."

msgid ""
"Fixed a crash with ``QuerySet.update()`` on foreign keys to instances with "
"``uuid`` primary keys (:ticket:`24611`)."
msgstr ""
"Diperbaiki sebuah kegagalan dengan ``QuerySet.update()`` pada foreign key "
"untuk dicirikan dengan primary key ``uuid`` (:ticket:`24611`)."

msgid ""
"Fixed database introspection with SQLite 3.8.9 (released April 8, 2015) (:"
"ticket:`24637`)."
msgstr ""
"Diperbaiki interospeksi basisdata dengan SQLite 3.8.9 (diterbitkan 8 April "
"2015) (:ticket:`24637`)."

msgid ""
"Updated ``urlpatterns`` examples generated by :djadmin:`startproject` to "
"remove usage of referencing views by dotted path in ``django.conf.urls."
"url()`` which is deprecated in Django 1.8 (:ticket:`24635`)."
msgstr ""

msgid ""
"Fixed queries where an expression was referenced in ``order_by()``, but "
"wasn't part of the select clause. An example query is ``qs."
"annotate(foo=F('field')).values('pk').order_by('foo'))`` (:ticket:`24615`)."
msgstr ""
"Diperbaiki permintaan dimana sebuah pernyataan telah diacukan di "
"``order_by()``, tetapi bukan bagian dari klausa select. Sebuah contoh "
"permintaan adalah ``qs.annotate(foo=F('field')).values('pk')."
"order_by('foo'))`` (:ticket:`24615`)."

msgid "Fixed a database table name quoting regression (:ticket:`24605`)."
msgstr ""
"Diperbaiki sebuah nama tabel basisdata mengutip pemulihan (:ticket:`24605`)."

msgid ""
"Prevented the loss of ``null``/``not null`` column properties during field "
"alteration of MySQL databases (:ticket:`24595`)."
msgstr ""
"Dicegah kehilangan sifat kolom ``null``/``not null`` selama perubahan bidang "
"dari basisdata MySQL (:ticket:`24595`)."

msgid ""
"Fixed JavaScript path of ``contrib.admin``’s related field widget when using "
"alternate static file storages (:ticket:`24655`)."
msgstr ""
"Diperbaiki jalur JavaScript dari widget bidang acuan ``contrib.admin`` "
"ketika bergantian menggunakan penyimpanan berkas tetap (:ticket:`24655`)."

msgid ""
"Fixed a migration crash when adding new relations to models (:ticket:"
"`24573`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan ketika menambahkan hubungan pada "
"model (:ticket:`24573`)."

msgid ""
"Fixed a migration crash when applying migrations with model managers on "
"Python 3 that were generated on Python 2 (:ticket:`24701`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan ketika memberlakukan perpindahan "
"dengan pengelola model pada Python 3 yang dibangkitkan pada Python 2 (:"
"ticket:`24701`)."

msgid ""
"Restored the ability to use iterators as queryset filter arguments (:ticket:"
"`24719`)."
msgstr ""
"Disimpan kembali kemampuan menggunakan perulangan sebagai argumen penyaring "
"queryset (:ticket:`24719`)."

msgid ""
"Fixed a migration crash when renaming the target model of a many-to-many "
"relation (:ticket:`24725`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan ketika menamai kembali sasaran model "
"dari hubungan banyak-ke-banyak (:ticket:`24725`)."

msgid ""
"Removed flushing of the test database with :option:`test --keepdb`, which "
"prevented apps with data migrations from using the option (:ticket:`24729`)."
msgstr ""
"Dipindahkan pembilasan dari basisdata percobaan dengan :option:`test --"
"keepdb`, yang mencegah aplikasi dengan perpindahan data dari menggunakan "
"pilihan (:ticket:`24729`)."

msgid "Fixed ``makemessages`` crash in some locales (:ticket:`23271`)."
msgstr ""
"Diperbaiki kegagalan ``makemessages`` di beberapa lokal (:ticket:`23271`)."

msgid ""
"Fixed help text positioning of ``contrib.admin`` fields that use the "
"``ModelAdmin.filter_horizontal`` and ``filter_vertical`` options (:ticket:"
"`24676`)."
msgstr ""
"Diperbaiki penempatan teks bantuan dari bidang ``contrib.admin`` yang "
"menggunakan ``ModelAdmin.filter_horizontal`` dan ``filter_vertical`` options "
"(:ticket:`24676`)."

msgid ""
"Fixed ``AttributeError: function 'GDALAllRegister' not found`` error when "
"initializing ``contrib.gis`` on Windows."
msgstr ""

msgid "Optimizations"
msgstr "Optimalisasi"

msgid ""
"Changed ``ModelState`` to deepcopy fields instead of deconstructing and "
"reconstructing (:ticket:`24591`). This speeds up the rendering of model "
"states and reduces memory usage when running :djadmin:`manage.py migrate "
"<migrate>` (although other changes in this release may negate any "
"performance benefits)."
msgstr ""
"Dirubah ``ModelState`` untuk bidang salin dalam daripada dekonstruksi dan "
"rekonstruksi (:ticket:`24591`). Ini mempercepat membangun keadaan model dan "
"mengurangi penggunaan memori ketika menjalankan :djadmin:`manage.py migrate "
"<migrate>` (meskipun perubahan lain di terbitan ini mungkin meniadakan "
"manfaat kinerja apapun)."

msgid "Django 1.8.10 release notes"
msgstr "Catatan terbitan Django 1.8.10"

msgid "*March 1, 2016*"
msgstr "*1 Maret 2016*"

msgid "Django 1.8.10 fixes two security issues and several bugs in 1.8.9."
msgstr ""
"Django 1.8.10 memperbaiki dua masalah keamanan dan beberapa kesalahan di "
"1.8.9."

msgid ""
"CVE-2016-2512: Malicious redirect and possible XSS attack via user-supplied "
"redirect URLs containing basic auth"
msgstr ""
"CVE-2016-2512: Pengalihan berbahaya dan kemungkinan serangan XSS melalui URL "
"pengalihan disediakan-pengguna mengandung autentifikasi dasar"

msgid ""
"Django relies on user input in some cases (e.g. ``django.contrib.auth.views."
"login()`` and :doc:`i18n </topics/i18n/index>`) to redirect the user to an "
"\"on success\" URL. The security check for these redirects (namely ``django."
"utils.http.is_safe_url()``) considered some URLs with basic authentication "
"credentials \"safe\" when they shouldn't be."
msgstr ""

msgid ""
"For example, a URL like ``http://mysite.example.com\\@attacker.com`` would "
"be considered safe if the request's host is ``http://mysite.example.com``, "
"but redirecting to this URL sends the user to ``attacker.com``."
msgstr ""
"Sebagai contoh, sebuah URL seperti ``http://mysite.example.com\\@attacker."
"com`` akan dianggap aman jika rumah permintaan adalah ``http://mysite."
"example.com``, tetapi mengalihkan ke URL ini mengirim pengguna ke ``attacker."
"com``."

msgid ""
"CVE-2016-2513: User enumeration through timing difference on password hasher "
"work factor upgrade"
msgstr ""
"CVE-2016-2513: Pendaftaran pengguna melalui perbedaan pewaktuan pada "
"peningkatan faktor pekerjaan pengacak sandi "

msgid ""
"In each major version of Django since 1.6, the default number of iterations "
"for the ``PBKDF2PasswordHasher`` and its subclasses has increased. This "
"improves the security of the password as the speed of hardware increases, "
"however, it also creates a timing difference between a login request for a "
"user with a password encoded in an older number of iterations and login "
"request for a nonexistent user (which runs the default hasher's default "
"number of iterations since Django 1.6)."
msgstr ""
"Di setiap versi utama dari Django sejak 1.6, angka awal dari perputaran "
"untuk ``PBKDF2PasswordHasher`` dan subkelasnya telah ditingkatkan. Ini "
"memperbaiki keamanan dari sandi seperti kecepatan dari perangkat keras "
"meningkat, bagaimanapun, itu juga membuat perbedaan pewaktu diantara sebuah "
"permintaan masuk untuk  pengguna dengan sandi dikodekan dalam angka terlama "
"dari putaran dan permintaan masuk untuk pengguna yang tidak ada (yang "
"menjalankan nomor default pengacak bawaan untuk putaran sejak Django 1.6)."

msgid ""
"This only affects users who haven't logged in since the iterations were "
"increased. The first time a user logs in after an iterations increase, their "
"password is updated with the new iterations and there is no longer a timing "
"difference."
msgstr ""
"Ini hanya mempengaruhi pengguna yang tidak masuk sejak perulangan "
"ditingkatkan. Pertama kali pengguna masuk setelah sebuah perputaran "
"meningkat, sandi mereka diperbaharui dengan perputaran baru dan tidak lagi "
"sebuah perbedaan pewaktuan."

msgid ""
"The new ``BasePasswordHasher.harden_runtime()`` method allows hashers to "
"bridge the runtime gap between the work factor (e.g. iterations) supplied in "
"existing encoded passwords and the default work factor of the hasher. This "
"method is implemented for ``PBKDF2PasswordHasher``  and "
"``BCryptPasswordHasher``. The number of rounds for the latter hasher hasn't "
"changed since Django 1.4, but some projects may subclass it and increase the "
"work factor as needed."
msgstr ""
"Metode ``BasePasswordHasher.harden_runtime()`` baru mengizinkan pencampur "
"menjembatani jarak waktu berjalan diantara faktor pekerjaan (sebagai contoh "
"perputaran) disokong dalam sandi dikodekan yang ada dan faktor pekerjaan "
"awal dari pencampur. Cara ini diterapkan untuk ``PBKDF2PasswordHasher`` dan "
"``BCryptPasswordHasher``. Sejumlah putaran untuk pencampur terakhir belum "
"berubah sejak Django 1.4, tetapi beberapa proyek mungkin mensubkelaskannya "
"dan meningkatkan faktor pekerjaan sesuai kebutuhan."

msgid ""
"A warning will be emitted for any :ref:`third-party password hashers that "
"don't implement <write-your-own-password-hasher>` a ``harden_runtime()`` "
"method."
msgstr ""
"Sebuah peringatan akan dikeluarkan untuk tiap :ref:`third-party password "
"hashers that don't implement <write-your-own-password-hasher>` sebuah metode "
"``harden_runtime()``."

msgid ""
"If you have different password hashes in your database (such as SHA1 hashes "
"from users who haven't logged in since the default hasher switched to PBKDF2 "
"in Django 1.4), the timing difference on a login request for these users may "
"be even greater and this fix doesn't remedy that difference (or any "
"difference when changing hashers). You may be able to :ref:`upgrade those "
"hashes <wrapping-password-hashers>` to prevent a timing attack for that case."
msgstr ""
"Jika anda mempunyai pencampur sandi berbeda di basisdata anda (seperti "
"pencampur SHA1 dari pengguna yang belum masuk sejak pengacak awal diganti ke "
"PBKDF2 in Django 1.4), perbedaan pewaktu pada permintaan masuk untuk "
"pengguna ini mungkin lebih hebat dan perbaikan ini tidak memperbaiki "
"perbedaan itu (atau tiap perbedaan ketika merubah pencampur). Anda dapat :"
"ref:`upgrade those hashes <wrapping-password-hashers>` untuk mencegah "
"serangan pewaktu untuk kasus itu."

msgid ""
"Fixed a crash on PostgreSQL that prevented using ``TIME_ZONE=None`` and "
"``USE_TZ=False`` (:ticket:`26177`)."
msgstr ""
"Diperbaiki sebuah kegagalan pada PostgreSQL yang dicegah menggunakan "
"``TIME_ZONE=None`` dan ``USE_TZ=False`` (:ticket:`26177`)."

msgid ""
"Added system checks for query name clashes of hidden relationships (:ticket:"
"`26162`)."
msgstr ""
"Ditambahkan sistem pemeriksaan untuk meminta tabrakan nama dari hubungan "
"tersembunyi (:ticket:`26162`)."

msgid ""
"Made ``forms.FileField`` and ``utils.translation.lazy_number()`` picklable (:"
"ticket:`26212`)."
msgstr ""
"Dibuat dapat di pickle ``forms.FileField`` dan ``utils.translation."
"lazy_number()`` (:ticket:`26212`)."

msgid ""
"Fixed :class:`~django.contrib.postgres.fields.RangeField` and :class:"
"`~django.contrib.postgres.fields.ArrayField` serialization with ``None`` "
"values (:ticket:`26215`)."
msgstr ""
"Diperbaiki serialisasi :class:`~django.contrib.postgres.fields.RangeField` "
"dan :class:`~django.contrib.postgres.fields.ArrayField` dengan nilai "
"``None`` (:ticket:`26215`)."

msgid ""
"Reallowed dashes in top-level domain names of URLs checked by "
"``URLValidator`` to fix a regression in Django 1.8 (:ticket:`26204`)."
msgstr ""
"Mengizinkan kembali tanda garis di nama ranah tingkat-atas dari URL "
"diperiksa oleh ``URLValidator`` untuk memperbaiki sebuah pemulihan di Django "
"1.8 (:ticket:`26204`)."

msgid "Fixed ``BoundField`` to reallow slices of subwidgets (:ticket:`26267`)."
msgstr ""
"Diperbaiki ``BoundField`` untuk diizinkan kembali potongan-potongan dari "
"subwidget (:ticket:`26267`)."

msgid ""
"Prevented ``ContentTypeManager`` instances from sharing their cache (:ticket:"
"`26286`)."
msgstr ""
"Dicegah instance ``ContentTypeManager`` dari berbagi cache mereka (:ticket:"
"`26286`)."

msgid "Django 1.8.11 release notes"
msgstr "Catatan terbitan Django 1.8.11"

msgid "*March 5, 2016*"
msgstr "*5 Maret 2016*"

msgid ""
"Django 1.8.11 fixes a regression on Python 2 in the 1.8.10 security release "
"where ``utils.http.is_safe_url()`` crashes on bytestring URLs (:ticket:"
"`26308`)."
msgstr ""
"Django 1.8.11 memperbaiki sebuah pemulihan pada Python 2 di terbitan "
"keamanan 1.8.10 dimana ``utils.http.is_safe_url()`` gagal pada URL "
"bytestring (:ticket:`26308`)."

msgid "Django 1.8.12 release notes"
msgstr "Catatan terbitan Django 1.8.12"

msgid "*April 1, 2016*"
msgstr "*1 April 2016*"

msgid "Django 1.8.12 fixes several bugs in 1.8.11."
msgstr "Django 1.8.12 memperbaiki beberapa kesalahan di 1.8.11."

msgid ""
"Made ``MultiPartParser`` ignore filenames that normalize to an empty string "
"to fix crash in ``MemoryFileUploadHandler`` on specially crafted user input "
"(:ticket:`26325`)."
msgstr ""
"Dibuat ``MultiPartParser``  mengabaikan nama berkas yang menormalkan menjadi "
"sebuah string kosong untuk memperbaiki kegagalan di "
"``MemoryFileUploadHandler`` di khusus dibuat masukan pengguna (:ticket:"
"`26325`)."

msgid ""
"Fixed data loss on SQLite where ``DurationField`` values with fractional "
"seconds could be saved as ``None`` (:ticket:`26324`)."
msgstr ""
"Diperbaiki kehilangan data di SQLite dimana nilai ``DurationField`` dengan "
"fraksional kedua dapat disimpan sebagai ``None`` (:ticket:`26324`)."

msgid ""
"Restored the functionality of the admin's ``raw_id_fields`` in "
"``list_editable`` (:ticket:`26387`)."
msgstr ""
"Menyimpan kembali kegunaan dari ``raw_id_fields`` admin di ``list_editable`` "
"(:ticket:`26387`)."

msgid "Django 1.8.13 release notes"
msgstr "Catatan terbitan Django 1.8.13"

msgid "*May 2, 2016*"
msgstr "*2 Mei 2016*"

msgid "Django 1.8.13 fixes several bugs in 1.8.12."
msgstr "Django 1.8.13 memperbaiki beberapa kesalahan di 1.8.12."

msgid ""
"Fixed ``TimeField`` microseconds round-tripping on MySQL and SQLite (:ticket:"
"`26498`)."
msgstr ""
"Diperbaiki perjalanan mikrodetik ``TimeField`` di MySQL dan SQLite (:ticket:"
"`26498`)."

msgid ""
"Restored conversion of an empty string to null when saving values of "
"``GenericIPAddressField`` on SQLite and MySQL (:ticket:`26557`)."
msgstr ""
"Dipulihkan perubahan dari sebuah string kosong menjadi null ketika menyimpan "
"nilai dari ``GenericIPAddressField`` pada SQLite dan MySQL (:ticket:`26557`)."

msgid "Django 1.8.14 release notes"
msgstr "Catatan terbitan Django 1.8.14"

msgid "*July 18, 2016*"
msgstr "*18 Juli 2016*"

msgid "Django 1.8.14 fixes a security issue and a bug in 1.8.13."
msgstr "Django 1.8.14 memperbaiki masalah keamanan dan kesalahan di 1.8.13."

msgid "XSS in admin's add/change related popup"
msgstr "XSS di tambah/rubah admin popup terkait"

msgid ""
"Unsafe usage of JavaScript's ``Element.innerHTML`` could result in XSS in "
"the admin's add/change related popup. ``Element.textContent`` is now used to "
"prevent execution of the data."
msgstr ""
"Penggunaan tidak aman dari ``Element.innerHTML`` JavaScript dapat "
"menghasilkan di XSS di tambah/rubah admin popup terkait. `Element."
"textContent`` adalah sekarang digunakan untuk mencegah pengerjaan dari data."

msgid ""
"The debug view also used ``innerHTML``. Although a security issue wasn't "
"identified there, out of an abundance of caution it's also updated to use "
"``textContent``."
msgstr ""
"Tampilan mencari kesalahan juga mengunakan ``innerHTML``. meskipu sebuah "
"masalah keamanan belum dicirikan disana, diluar dari kelimpahan dari "
"peringatan itu juga diperbaharui untuk menggunakan ``textContent``."

msgid ""
"Fixed missing ``varchar/text_pattern_ops`` index on ``CharField`` and "
"``TextField`` respectively when using ``AddField`` on PostgreSQL (:ticket:"
"`26889`)."
msgstr ""
"Diperbaiki kehilangan indeks ``varchar/text_pattern_ops`` di ``CharField`` "
"dan ``TextField`` masing-masing ketika menggunakan ``AddField`` di "
"PostgreSQL (:ticket:`26889`)."

msgid "Django 1.8.15 release notes"
msgstr "Catatan terbitan Django 1.8.15"

msgid "*September 26, 2016*"
msgstr "*26 September 2016*"

msgid "Django 1.8.15 fixes a security issue in 1.8.14."
msgstr "Django 1.8.15 memperbaiki masalah keamanan di 1.8.14."

msgid "CSRF protection bypass on a site with Google Analytics"
msgstr "Perlindungan CSRF memotong pada sebuah situs dengan Google Analytics"

msgid ""
"An interaction between Google Analytics and Django's cookie parsing could "
"allow an attacker to set arbitrary cookies leading to a bypass of CSRF "
"protection."
msgstr ""
"Sebuah interaksi diantara Google Analytics dan pengurai kue Django dapat "
"mengizinkan seorang penyerang menyetel awalan kue berubah-ubah untuk "
"memotong perlindungan CSRF."

msgid ""
"The parser for ``request.COOKIES`` is simplified to better match the "
"behavior of browsers and to mitigate this attack. ``request.COOKIES`` may "
"now contain cookies that are invalid according to :rfc:`6265` but are "
"possible to set via ``document.cookie``."
msgstr ""
"Pengurai untuk ``request.COOKIES`` disederhanakan untuk lebih baik "
"mencocokkan perilaku dari peramban dan untuk mengurangi serangan ini. "
"``request.COOKIES`` mungkin sekarang mengandung kue yang tidak sah menurut "
"pada :rfc:`6265` tetapi dimungkinkan mensetel melalui ``document.cookie``."

msgid "Django 1.8.16 release notes"
msgstr "Catatan terbitan Django 1.8.16"

msgid "Django 1.8.16 fixes two security issues in 1.8.15."
msgstr "Django 1.8.16 memperbaiki dua masalah keamanan di 1.8.15."

msgid "Django 1.8.17 release notes"
msgstr "Catatan terbitan Django 1.8.17"

msgid "Django 1.8.17 fixes a regression in 1.8.16."
msgstr "Django 1.8.17 memperbaiki sebuah pemulihan di 1.8.16."

msgid "Django 1.8.18 release notes"
msgstr "Catatan terbitan Django 1.8.18"

msgid "Django 1.8.18 fixes two security issues in 1.8.17."
msgstr "Django 1.8.18 memperbaiki dua masalah keamanan di 1.8.17."

msgid "Django 1.8.19 release notes"
msgstr ""

msgid "Django 1.8.19 fixes two security issues in 1.18.18."
msgstr ""

msgid ""
"The ``django.utils.html.urlize()`` function was extremely slow to evaluate "
"certain inputs due to a catastrophic backtracking vulnerability in a regular "
"expression. The ``urlize()`` function is used to implement the ``urlize`` "
"and ``urlizetrunc`` template filters, which were thus vulnerable."
msgstr ""

msgid ""
"The problematic regular expression is replaced with parsing logic that "
"behaves similarly."
msgstr ""

msgid "Django 1.8.2 release notes"
msgstr "Catatan terbitan Django 1.8.2"

msgid "*May 20, 2015*"
msgstr "*20 Mei 2015*"

msgid "Django 1.8.2 fixes a security issue and several bugs in 1.8.1."
msgstr ""
"Django 1.8.2 memperbaiki masalah keamanan dan beberapa kesalahan di 1.8.1."

msgid "Fixed session flushing in the ``cached_db`` backend"
msgstr "Diperbaiki pembilasan sesi di backend ``cached_db``"

msgid ""
"A change to ``session.flush()`` in the ``cached_db`` session backend in "
"Django 1.8 mistakenly sets the session key to an empty string rather than "
"``None``. An empty string is treated as a valid session key and the session "
"cookie is set accordingly. Any users with an empty string in their session "
"cookie will use the same session store. ``session.flush()`` is called by "
"``django.contrib.auth.logout()`` and, more seriously, by ``django.contrib."
"auth.login()`` when a user switches accounts. If a user is logged in and "
"logs in again to a different account (without logging out) the session is "
"flushed to avoid reuse. After the session is flushed (and its session key "
"becomes ``''``) the account details are set on the session and the session "
"is saved. Any users with an empty string in their session cookie will now be "
"logged into that account."
msgstr ""
"Sebuah perubahan pada ``session.flush()`` di backend sesi ``cached_db`` di "
"Django 1.8 salah menyetel kunci sesi ke sebuah string kosong daripada "
"``None``. Sebuah string kosong diperlakukan sebagai kunci sesi sah dan kue "
"sesi disetel sesuai dengan itu. Pengguna aapapun dengan sebuah string kosong "
"di kue sesi mereka akan menggunakan penyimpanan sesi sama. ``session."
"flush()`` dipanggil oleh ``django.contrib.auth.logout()`` dan, lebih serius, "
"dengan ``django.contrib.auth.login()`` ketika seorang pengguna mengganti "
"akun. Jika seorang pengguna masuk dan masuk kembali ke akun berbeda (tanpa "
"keluar) sesi dibilas untuk menghindari penggunaan kembali. Setela sesi "
"dibilas (dan kunci sesinya menjadi ``''``) rincian akun disetel pada sesi "
"dan sesi disimpan. Pengguna apapun dengan sebuah string kosong di kue sesi "
"mereka akan sekarang masuk ke akun itu."

msgid "Fixed check for template engine alias uniqueness (:ticket:`24685`)."
msgstr ""
"Diperbaiki pemeriksaan untuk keunikan nama lain mesin cetakan (:ticket:"
"`24685`)."

msgid ""
"Fixed crash when reusing the same ``Case`` instance in a query (:ticket:"
"`24752`)."
msgstr ""
"Diperbaiki kegagalan ketika menggunakan kembali instance ``Case`` sama di "
"sebuah permintaan (:ticket:`24752`)."

msgid ""
"Corrected join promotion for ``Case`` expressions. For example, annotating a "
"query with a  ``Case`` expression could unexpectedly filter out results (:"
"ticket:`24766`)."
msgstr ""
"Diperbaiki promosi join untuk pernyataan ``Case``. Sebagai contoh, bubuhi "
"keterangan sebuah permintaan dengan pernyataan ``Case`` dapat tidak "
"diharapkan menyaring hasil (:ticket:`24766`)."

msgid ""
"Fixed negated ``Q`` objects in expressions. Cases like "
"``Case(When(~Q(friends__age__lte=30)))`` tried to generate a subquery which "
"resulted in a crash (:ticket:`24705`)."
msgstr ""
"Diperbaiki meniadakan obyek ``Q`` dalam pernyataan. Kasus-kasus seperti "
"``Case(When(~Q(friends__age__lte=30)))`` mencoba membangkitkan sebuah sub "
"permintaan yang menghasilkan sebuah kegagalan (:ticket:`24705`)."

msgid ""
"Fixed incorrect GROUP BY clause generation on MySQL when the query's model "
"has a self-referential foreign key (:ticket:`24748`)."
msgstr ""
"Diperbaiki pembangkitan klausa GROUP BY tidak benar di MySQL ketika model "
"permintaan mempunyai pengacuan-sendiri (:ticket:`24748`)."

msgid ""
"Implemented ``ForeignKey.get_db_prep_value()`` so that ``ForeignKey``\\s "
"pointing to :class:`~django.db.models.UUIDField` and inheritance on models "
"with ``UUIDField`` primary keys work correctly (:ticket:`24698`, :ticket:"
"`24712`)."
msgstr ""
"Diterapkan ``ForeignKey.get_db_prep_value()`` sehingga ``ForeignKey`` itu "
"menunjuk ke :class:`~django.db.models.UUIDField` dan mewarisi pada model "
"dengan primary key ``UUIDField`` bekerja dengan benar (:ticket:`24698`, :"
"ticket:`24712`)."

msgid "Fixed ``isnull`` lookup for ``HStoreField`` (:ticket:`24751`)."
msgstr ""
"Diperbaiki pencarian ``isnull`` untuk ``HStoreField`` (:ticket:`24751`)."

msgid ""
"Fixed a MySQL crash when a migration removes a combined index "
"( ``unique_together`` or ``index_together``) containing a foreign key (:"
"ticket:`24757`)."
msgstr ""

msgid ""
"Fixed session cookie deletion when using :setting:`SESSION_COOKIE_DOMAIN` (:"
"ticket:`24799`)."
msgstr ""
"Diperbaiki penghapusan kue sesi ketika menggunakan :setting:"
"`SESSION_COOKIE_DOMAIN` (:ticket:`24799`)."

msgid ""
"On PostgreSQL, when no access is granted for the ``postgres`` database, "
"Django now falls back to the default database when it normally requires a "
"\"no database\" connection (:ticket:`24791`)."
msgstr ""
"Pada PostgreSQL, ketika tidak ada akses diberikan untuk basisdata "
"``postgres``, Django sekarang jatuh kebelakang ke basisdata awalan ketika "
"itu secara biasa membutuhkan hubungan \"no database\" (:ticket:`24791`)."

msgid ""
"Fixed display of ``contrib.admin``’s ``ForeignKey`` widget when it's used in "
"a row with other fields (:ticket:`24784`)."
msgstr ""
"Diperbaiki tampilan dari widget ``ForeignKey`` ``contrib.admin`` ketika itu "
"digunakan dalam sebuah baris dengan bidang lain (:ticket:`24784`)."

msgid "Django 1.8.3 release notes"
msgstr "Catatan terbitan Django 1.8.3"

msgid "Django 1.8.3 fixes several security issues and bugs in 1.8.2."
msgstr "Django 1.8.3 memperbaiki masalah keamanan dan kesalahan di 1.8.2."

msgid ""
"Also, ``django.utils.deprecation.RemovedInDjango20Warning`` was renamed to "
"``RemovedInDjango110Warning`` as the version roadmap was revised to 1.9, "
"1.10, 1.11 (LTS), 2.0 (drops Python 2 support). For backwards compatibility, "
"``RemovedInDjango20Warning`` remains as an importable alias."
msgstr ""
"Juga, ``django.utils.deprecation.RemovedInDjango20Warning`` telah dinamai "
"menjadi ``RemovedInDjango110Warning`` sebagai versi peta jalan telah "
"diperbaiki menjadi 1.9, 1.10, 1.11 (LTS), 2.0 (dijatuhkan dukungan Python "
"2). Untuk kesesuaian kebelakang, ``RemovedInDjango20Warning`` tetap sebagai "
"nama lain dapat diimpor."

msgid "Denial-of-service possibility in URL validation"
msgstr "kemungkinan denial-of-service di pengesahan URL"

msgid ""
":class:`~django.core.validators.URLValidator` included a regular expression "
"that was extremely slow to evaluate against certain invalid inputs. This "
"regular expression has been simplified and optimized."
msgstr ""
":class:`~django.core.validators.URLValidator` menyertakan sebuah regular "
"expression yang sangat lambat menilai terhadap masukan tidak sah tertentu. "
"Regular expression ini telah disederhanakan dan dioptimalkan."

msgid ""
"Fixed ``BaseRangeField.prepare_value()`` to use each ``base_field``’s "
"``prepare_value()`` method (:ticket:`24841`)."
msgstr ""
"Diperbaiki ``BaseRangeField.prepare_value()`` untuk digunakan setiap metode "
"``prepare_value()`` ``base_field`` (:ticket:`24841`)."

msgid ""
"Fixed crash during :djadmin:`makemigrations` if a migrations module either "
"is missing ``__init__.py`` or is a file (:ticket:`24848`)."
msgstr ""
"Diperbaiki kegagalan selama :djadmin:`makemigrations` jika sebuah modul "
"perpindahan antara hilang ``__init__.py`` atau adalah sebuah berkas (:ticket:"
"`24848`)."

msgid ""
"Fixed ``QuerySet.exists()`` returning incorrect results after annotation "
"with ``Count()`` (:ticket:`24835`)."
msgstr ""
"Diperbaiki ``QuerySet.exists()`` mengembalikan hasil tidak benar setelah "
"keterangan dengan ``Count()`` (:ticket:`24835`). "

msgid "Corrected ``HStoreField.has_changed()`` (:ticket:`24844`)."
msgstr "Diperbaiki ``HStoreField.has_changed()`` (:ticket:`24844`)."

msgid ""
"Reverted an optimization to the CSRF template context processor which caused "
"a regression (:ticket:`24836`)."
msgstr ""
"Dikembalikan sebuah optimalisasi pada pengolah konteks cetakan CSRF yang "
"menyebabkan sebuah pemulihan (:ticket:`24836`)."

msgid ""
"Fixed a regression which caused template context processors to overwrite "
"variables set on a ``RequestContext`` after it's created (:ticket:`24847`)."
msgstr ""
"Diperbaiki sebuah pemulihan yang menyebabkan pengolah konteks cetakan untuk "
"menulis kembali variabel disetel pada ``RequestContext`` setelah dia dibuat "
"(:ticket:`24847`)."

msgid ""
"Fixed a crash when using a reverse one-to-one relation in ``ModelAdmin."
"list_display`` (:ticket:`24851`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menggunakan balikan hubungan one-to-one "
"di ``ModelAdmin.list_display`` (:ticket:`24851`)."

msgid ""
"Fixed quoting of SQL when renaming a field to ``AutoField`` in PostgreSQL (:"
"ticket:`24892`)."
msgstr ""
"Diperbaiki mengutip dari SQL ketika menamai kembali sebuah bidang pada "
"``AutoField`` di PostgreSQL (:ticket:`24892`)."

msgid ""
"Fixed lack of unique constraint when changing a field from "
"``primary_key=True`` to ``unique=True`` (:ticket:`24893`)."
msgstr ""
"Diperbaiki kekurangan dari batasan unik ketika merubah sebuah bidang dari "
"``primary_key=True`` menjadi ``unique=True`` (:ticket:`24893`)."

msgid ""
"Fixed queryset pickling when using ``prefetch_related()`` after deleting "
"objects (:ticket:`24831`)."
msgstr ""
"Diperbaiki kesulitan queryset ketika menggunakan ``prefetch_related()`` "
"setelah menghapus obyek (:ticket:`24831`)."

msgid ""
"Allowed using ``choices`` longer than 1 day with ``DurationField`` (:ticket:"
"`24897`)."
msgstr ""
"Diizinkan menggunakan ``choices`` lebih panjang dari 1 hari dengan "
"``DurationField`` (:ticket:`24897`)."

msgid ""
"Fixed a crash when loading squashed migrations from two apps with a "
"dependency between them, where the dependent app's replaced migrations are "
"partially applied (:ticket:`24895`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika memuat perpindahan tergencet dari dua "
"aplikasi dengan ketergantungan diantara mereka, dimana tergantung "
"perpindahan diganti aplikasi sebagian diberlakukan (:ticket:`24895`)."

msgid ""
"Fixed recording of applied status for squashed (replacement) migrations (:"
"ticket:`24628`)."
msgstr ""
"Diperbaiki rekaman dari keadaan yang diberlakukan untuk penindihan "
"(penggantian) perpindahan (:ticket:`24628`)."

msgid ""
"Fixed queryset annotations when using ``Case`` expressions with "
"``exclude()`` (:ticket:`24833`)."
msgstr ""
"Diperbaiki keterangan queryset ketika menggunakan pernyataan ``Case`` dengan "
"``exclude()`` (:ticket:`24833`)."

msgid ""
"Corrected join promotion for multiple ``Case`` expressions. Annotating a "
"query with multiple  ``Case`` expressions could unexpectedly filter out "
"results (:ticket:`24924`)."
msgstr ""
"Diperbaiki promosi join untuk banyak pernyataan ``Case``. Sebagai contoh, "
"bubuhi keterangan sebuah permintaan dengan banyak pernyataan ``Case`` dapat "
"tidak diharapkan menyaring hasil (:ticket:`24924`)."

msgid "Fixed usage of transforms in subqueries (:ticket:`24744`)."
msgstr ""
"Diperbaiki penggunaan dari perubahan di sub permintaan (:ticket:`24744`)."

msgid ""
"Provided better backwards compatibility for the ``verbosity`` argument in "
"``optparse`` management commands by casting it to an integer (:ticket:"
"`24769`)."
msgstr ""
"Disediakan kesesuaian kebelakang lebih baik untuk argumen ``verbosity`` di "
"perintah pengelolaan ``optparse`` dengan menuangkan itu ke sebuah integer (:"
"ticket:`24769`)."

msgid ""
"Fixed ``prefetch_related()`` on databases other than PostgreSQL for models "
"using UUID primary keys (:ticket:`24912`)."
msgstr ""
"Diperbaiki ``prefetch_related()`` di basisdata selain dari PostgreSQL untuk "
"model menggunakan primary key UUID (:ticket:`24912`)."

msgid ""
"Fixed removing ``unique_together`` constraints on MySQL (:ticket:`24972`)."
msgstr ""
"Diperbaiki memindahkan batasan ``unique_together`` di MySQL (:ticket:"
"`24972`)."

msgid ""
"Fixed crash when uploading images with MIME types that Pillow doesn't "
"detect, such as bitmap, in ``forms.ImageField`` (:ticket:`24948`)."
msgstr ""
"Diperbaiki kegagalan ketika mengunggah gambar dengan jenis MIME yang Pillow "
"tidak mengetahui, seperti bitmap, di ``forms.ImageField`` (:ticket:`24948`)."

msgid ""
"Fixed a regression when deleting a model through the admin that has a "
"``GenericRelation`` with a ``related_query_name`` (:ticket:`24940`)."
msgstr ""
"Diperbaiki sebuah pemulihan ketika menghapus sebuah model melalui admin yang "
"mempunyai ``GenericRelation`` dengan ``related_query_name`` (:ticket:"
"`24940`)."

msgid ""
"Reallowed non-ASCII values for ``ForeignKey.related_name`` on Python 3 by "
"fixing the false positive system check (:ticket:`25016`)."
msgstr ""
"Dizinkan kembali nilai-nilai bukan-ASCII untuk ``ForeignKey.related_name`` "
"pada Python 3 dengan memperbaiki pemeriksaan sistem positif salah (:ticket:"
"`25016`)."

msgid ""
"Fixed inline forms that use a parent object that has a ``UUIDField`` primary "
"key and a child object that has an ``AutoField`` primary key (:ticket:"
"`24958`)."
msgstr ""
"Diperbaiki formulir obyek yang menggunakan obyek induk yang mempunyai "
"primary key ``UUIDField`` dan obyek anak yang mempunyai sebuah primary key "
"``AutoField`` (:ticket:`24958`)."

msgid ""
"Fixed a regression in the ``unordered_list`` template filter on certain "
"inputs (:ticket:`25031`)."
msgstr ""
"Diperbaiki sebuah pemulihan di penyaring cetakan ``unordered_list`` di "
"masukan tertentu (:ticket:`25031`)."

msgid ""
"Fixed a regression in ``URLValidator`` that invalidated Punycode TLDs (:"
"ticket:`25059`)."
msgstr ""
"Diperbaiki sebuah pemulihan di ``URLValidator`` yang mentidaksahkan Punycode "
"TLDs (:ticket:`25059`)."

msgid "Improved ``pyinotify`` ``runserver`` polling (:ticket:`23882`)."
msgstr ""

msgid "Django 1.8.4 release notes"
msgstr "Catatan terbitan Django 1.8.4"

msgid "Django 1.8.4 fixes a security issue and several bugs in 1.8.3."
msgstr ""
"Django 1.8.4 memperbaiki masalah keamanan dan beberapa kesalahan di 1.8.3."

msgid ""
"Added the ability to serialize values from the newly added :class:`~django."
"db.models.UUIDField` (:ticket:`25019`)."
msgstr ""
"Ditambahkan kemampuan untuk menserialisasikan nilai-nilai dari :class:"
"`~django.db.models.UUIDField` ditambahkan baru (:ticket:`25019`)."

msgid ""
"Added a system check warning if the old ``TEMPLATE_*`` settings are defined "
"in addition to the new ``TEMPLATES`` setting."
msgstr ""
"Ditambahkan sebuah peringatan pemeriksaan sistem jika pengaturan "
"``TEMPLATE_*`` lama ditentukan sebagai tambahan pada pengaturan "
"``TEMPLATES`` baru."

msgid ""
"Fixed ``QuerySet.raw()`` so ``InvalidQuery`` is not raised when using the "
"``db_column`` name of a ``ForeignKey`` field with ``primary_key=True`` (:"
"ticket:`12768`)."
msgstr ""
"Diperbaiki ``QuerySet.raw()`` sehingga ``InvalidQuery`` tidak dimunculkan "
"ketika menggunakan nama ``db_column`` dari bidang ``ForeignKey`` dengan "
"``primary_key=True`` (:ticket:`12768`)."

msgid ""
"Prevented an exception in ``TestCase.setUpTestData()`` from leaking the "
"transaction (:ticket:`25176`)."
msgstr ""
"Dicegah sebuah pengecualian dalam ``TestCase.setUpTestData()`` dari "
"membocorkan transaksi (:ticket:`25176`)."

msgid ""
"Fixed ``has_changed()`` method in ``contrib.postgres.forms.HStoreField`` (:"
"ticket:`25215`, :ticket:`25233`)."
msgstr ""
"Diperbaiki metode ``has_changed()`` di  ``contrib.postgres.forms."
"HStoreField`` (:ticket:`25215`, :ticket:`25233`)."

msgid ""
"Fixed the recording of squashed migrations when running the ``migrate`` "
"command (:ticket:`25231`)."
msgstr ""
"Diperbaiki perekaman dari perpindahan penindihan ketika menjalankan perintah "
"``migrate`` (:ticket:`25231`)."

msgid ""
"Moved the :ref:`unsaved model instance assignment data loss check <unsaved-"
"model-instance-check-18>` to ``Model.save()`` to allow easier usage of in-"
"memory models (:ticket:`25160`)."
msgstr ""
"Dipindahkan :ref:`unsaved model instance assignment data loss check <unsaved-"
"model-instance-check-18>` pada ``Model.save()`` mengizinkan penggunaan lebih "
"mudah dari model dalam-memori (:ticket:`25160`)."

msgid ""
"Prevented ``varchar_patterns_ops`` and ``text_patterns_ops`` indexes for "
"``ArrayField`` (:ticket:`25180`)."
msgstr ""
"Dicegah indeks ``varchar_patterns_ops`` dan ``text_patterns_ops`` untuk "
"``ArrayField`` (:ticket:`25180`)."

msgid "Django 1.8.5 release notes"
msgstr "Catatan terbitan Django 1.8.5"

msgid "*October 3, 2015*"
msgstr "*Oktober 3, 2015*"

msgid "Django 1.8.5 fixes several bugs in 1.8.4."
msgstr "Django 1.8.5 memperbaiki beberapa kesalahan di 1.8.4."

msgid "Made the development server's autoreload more robust (:ticket:`24704`)."
msgstr ""
"Dibuat pengembangan peladen otomatis dimuat kembali lebih kuat (:ticket:"
"`24704`)."

msgid ""
"Fixed ``AssertionError`` in some delete queries with a model containing a "
"field that is both a foreign and primary key (:ticket:`24951`)."
msgstr ""
"Diperbaiki ``AssertionError`` di beberapa permintaan hapus dengan sebuah "
"model mengandung sebuah bidang yang keduanya foreign dan primary key (:"
"ticket:`24951`)."

msgid "Fixed ``AssertionError`` in some complex queries (:ticket:`24525`)."
msgstr ""
"Diperbaiki ``AssertionError`` di beberapa permintaan rumit (:ticket:`24525`)."

msgid "Fixed a migrations crash with ``GenericForeignKey`` (:ticket:`25040`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan dengan ``GenericForeignKey`` (:"
"ticket:`25040`)."

msgid ""
"Made ``translation.override()`` clear the overridden language when a "
"translation isn't initially active (:ticket:`25295`)."
msgstr ""
"Dibuat ``translation.override()`` membersihkan penimpaan bahasa ketika "
"terjemahan tidak secara inisial aktif (:ticket:`25295`)."

msgid ""
"Fixed crash when using a value in ``ModelAdmin.list_display`` that clashed "
"with a reverse field on the model (:ticket:`25299`)."
msgstr ""
"Diperbaiki kegagalan ketika menggunakan sebuah nilai di ``ModelAdmin."
"list_display`` yang bertentangan dengan bidang balikan di model (:ticket:"
"`25299`)."

msgid ""
"Fixed autocompletion for options of non-``argparse`` management commands (:"
"ticket:`25372`)."
msgstr ""
"Diperbaiki pelengkapan otomatis untuk pilihan dari perintah pengelolaan "
"bukan-``argparse`` (:ticket:`25372`)."

msgid ""
"Alphabetized ordering of imports in ``from django.db import migrations, "
"models`` statement in newly created migrations (:ticket:`25384`)."
msgstr ""
"Pengurutan alphabet dari import di pernyataan ``from django.db import "
"migrations, models`` di baru saja dibuat perpindahan (:ticket:`25384`)."

msgid ""
"Fixed migrations crash on MySQL when adding a text or a blob field with an "
"unhashable default (:ticket:`25393`)."
msgstr ""
"Diperbaiki kegagalan perpindahan pada MySQL ketika menambahkan sebuah teks "
"atau bidang blob dengan awal tidak dapat diacak (:ticket:`25393`)."

msgid ""
"Changed ``Count`` queries to execute ``COUNT(*)`` instead of ``COUNT('*')`` "
"as versions of Django before 1.8 did (:ticket:`25377`). This may fix a "
"performance regression on some databases."
msgstr ""
"Dirubah permintaan ``Count`` untuk menjalankan ``COUNT(*)`` daripada "
"``COUNT('*')`` sebagai versi dari Django sebelum 1.8 lakukan (:ticket:"
"`25377`). Ini mungkin memperbaiki pemulihan penampilan pada beberapa "
"basisdata."

msgid ""
"Fixed custom queryset chaining with ``values()`` and ``values_list()`` (:"
"ticket:`20625`)."
msgstr ""
"Diperbaiki penyesuaian queryset mengikat dengan ``values()`` dan "
"``values_list()`` (:ticket:`20625`)."

msgid ""
"Moved the :ref:`unsaved model instance assignment data loss check <unsaved-"
"model-instance-check-18>` on reverse relations to ``Model.save()`` (:ticket:"
"`25160`)."
msgstr ""
"Dipindahkan :ref:`unsaved model instance assignment data loss check <unsaved-"
"model-instance-check-18>` di membalikkan hubungan pada ``Model.save()`` (:"
"ticket:`25160`)."

msgid ""
"Readded inline foreign keys to form instances when validating model formsets "
"(:ticket:`25431`)."
msgstr ""
"Ditambahkan kembali foreign key obyek ke instance formulir ketika "
"mengesahkan model formset (:ticket:`25431`)."

msgid ""
"Allowed using ORM write methods after disabling autocommit with :func:"
"`set_autocommit(False) <django.db.transaction.set_autocommit>` (:ticket:"
"`24921`)."
msgstr ""
"Diizinkan menggunakan metode penulisan ORM setelah meniadakan otomatis "
"perbaikan dengan :func:`set_autocommit(False) <django.db.transaction."
"set_autocommit>` (:ticket:`24921`)."

msgid ""
"Fixed the ``manage.py test --keepdb`` option on Oracle (:ticket:`25421`)."
msgstr ""
"Diperbaiki pilihan ``manage.py test --keepdb`` di Oracle (:ticket:`25421`)."

msgid ""
"Fixed incorrect queries with multiple many-to-many fields on a model with "
"the same 'to' model and with ``related_name`` set to '+' (:ticket:`24505`, :"
"ticket:`25486`)."
msgstr ""
"Diperbaiki permintaan tidak benar dengan banyak bidang many-to-many di "
"sebuah model dengan sama model 'to' dan dengan ``related_name`` disetel "
"menjadi '+' (:ticket:`24505`, :ticket:`25486`)."

msgid ""
"Fixed pickling a ``SimpleLazyObject`` wrapping a model (:ticket:`25389`)."
msgstr ""
"Diperbaiki kesulitan ``SimpleLazyObject`` membungkus sebuah model (:ticket:"
"`25389`)."

msgid "Django 1.8.6 release notes"
msgstr "Catatan terbitan Django 1.8.6"

msgid "*November 4, 2015*"
msgstr "*November 4, 2015*"

msgid ""
"Django 1.8.6 adds official support for Python 3.5 and fixes several bugs in "
"1.8.5."
msgstr ""
"Django 1.8.6 menambahkan dukungan resmi untuk Python 3.5 dan memperbaiki "
"beberapa kesalahan di 1.8.5."

msgid ""
"Fixed a regression causing ``ModelChoiceField`` to ignore "
"``prefetch_related()`` on its queryset (:ticket:`25496`)."
msgstr ""
"Diperbaiki sebuah pemulihan menyebabkan ``ModelChoiceField`` mengabaikan "
"``prefetch_related()`` di queryset nya (:ticket:`25496`)."

msgid ""
"Allowed \"mode=memory\" in SQLite test database name if supported (:ticket:"
"`12118`)."
msgstr ""
"Diizinkan \"mode=memory\" di nama basisdata percobaan SQlite jika didukung (:"
"ticket:`12118`)."

msgid ""
"Fixed system check crash on ``ForeignKey`` to abstract model (:ticket:"
"`25503`)."
msgstr ""
"Diperbaiki kegagalan pemeriksaan sistem di ``ForeignKey`` pada model nyata (:"
"ticket:`25503`). "

msgid ""
"Fixed incorrect queries when you have multiple ``ManyToManyField``\\s on "
"different models that have the same field name, point to the same model, and "
"have their reverse relations disabled (:ticket:`25545`)."
msgstr ""
"Diperbaiki permintaan tidak benar ketika anda mempunyai banyak "
"``ManyToManyField`` di model berbeda yang mempunyai nama bidang sama, "
"menunjuk pada model sama, dan mempunyai hubungan balikan mereka ditiadakan (:"
"ticket:`25545`)."

msgid "Allowed filtering over a ``RawSQL`` annotation (:ticket:`25506`)."
msgstr "Diizinkan menyaring terhadap keterangan ``RawSQL`` (:ticket:`25506`)."

msgid ""
"Made the ``Concat`` database function idempotent on SQLite (:ticket:`25517`)."
msgstr ""
"Dibuat fungsi basisdata ``Concat`` yang memiliki kekuatan yang sama pada "
"SQLite (:ticket:`25517`)."

msgid ""
"Avoided a confusing stack trace when starting :djadmin:`runserver` with an "
"invalid :setting:`INSTALLED_APPS` setting (:ticket:`25510`). This regression "
"appeared in 1.8.5 as a side effect of fixing :ticket:`24704`."
msgstr ""
"Dihindari jejak tumpukan membingungkan ketika memulai :djadmin:`runserver` "
"dengan pengaturan :setting:`INSTALLED_APPS` tidak sah (:ticket:`25510`). "
"Pemulihan ini muncul di 1.8.5 sebagai pengaruh saming dari memperbaiki :"
"ticket:`24704`."

msgid ""
"Made deferred models use their proxied model's ``_meta.apps`` for caching "
"and retrieval (:ticket:`25563`). This prevents any models generated in data "
"migrations using ``QuerySet.defer()`` from leaking to test and application "
"code."
msgstr ""
"Dibuat model yang ditangguhkan menggunakan ``_meta.apps`` model proxy mereka "
"untuk menyimpan sementara dan mengambil (:ticket:`25563`). Ini mencegah "
"model apapun dibangkitkan dalam perpindahan data menggunakan ``QuerySet."
"defer()`` dari bocoran pada percobaan dan kode aplikasi."

msgid ""
"Fixed a typo in the name of the ``strictly_above`` PostGIS lookup (:ticket:"
"`25592`)."
msgstr ""

msgid ""
"Fixed crash with ``contrib.postgres.forms.SplitArrayField`` and "
"``IntegerField`` on invalid value (:ticket:`25597`)."
msgstr ""
"Diperbaiki kegagalan dengan ``contrib.postgres.forms.SplitArrayField`` dan "
"``IntegerField`` pada nilai tidak sah (:ticket:`25597`)."

msgid ""
"Added a helpful error message when Django and South migrations exist in the "
"same directory (:ticket:`25618`)."
msgstr ""
"Ditambahkan pesan kesalahan membantu ketika perpindahan Django dan South ada "
"di direktori sama (:ticket:`25618`)."

msgid ""
"Fixed a regression in ``URLValidator`` that allowed URLs with consecutive "
"dots in the domain section (like ``http://example..com/``) to pass (:ticket:"
"`25620`)."
msgstr ""
"DIperbaiki sebuah pemulihan di ``URLValidator`` yang mengizinkan URL dengan "
"titik berurutan di bagian ranah (seperti ``http://example..com/``) untuk "
"dilewatkan (:ticket:`25620`)."

msgid ""
"Fixed a crash with ``GenericRelation`` and ``BaseModelAdmin."
"to_field_allowed`` (:ticket:`25622`)."
msgstr ""
"Diperbaiki sebuah kegagalan dengan ``GenericRelation`` dan ``BaseModelAdmin."
"to_field_allowed`` (:ticket:`25622`)."

msgid "Django 1.8.7 release notes"
msgstr "Catatan terbitan Django 1.8.7"

msgid "Django 1.8.7 fixes a security issue and several bugs in 1.8.6."
msgstr ""
"Django 1.8.7 memperbaiki masalah keamanan dan beberapa kesalahan di 1.8.6."

msgid ""
"Additionally, Django's vendored version of six, ``django.utils.six``, has "
"been upgraded to the latest release (1.10.0)."
msgstr ""
"Tambahannya, versi penjaja Django dari enam, ``django.utils.six``, telah "
"ditingkatkan ke terbitan terakhir (1.10.0)."

msgid ""
"Fixed a crash of the debug view during the autumn DST change when :setting:"
"`USE_TZ` is ``False`` and ``pytz`` is installed."
msgstr ""
"Diperbaiki sebuah kegagalan dari tampilan mencari kesalahan selama DST musim "
"gugur berubah ketika :setting:`USE_TZ` adalah ``False`` dan ``pytz`` "
"terpasang."

msgid ""
"Fixed a regression in 1.8.6 that caused database routers without an "
"``allow_migrate()`` method to crash (:ticket:`25686`)."
msgstr ""
"Diperbaiki sebuah pemulihan di 1.8.6 yang menyebabkan rute basisdata tanpa "
"sebuah metode ``allow_migrate()`` menjadi gagal (:ticket:`25686`)."

msgid ""
"Fixed a regression in 1.8.6 by restoring the ability to use ``Manager`` "
"objects for the ``queryset`` argument of ``ModelChoiceField`` (:ticket:"
"`25683`)."
msgstr ""
"Diperbaiki sebuah pemulihan di 1.8.6 dengan menyimpan kembali kemampuan "
"untuk menggunakan obyek ``Manager`` untuk argumen ``queryset`` dari "
"``ModelChoiceField`` (:ticket:`25683`)."

msgid ""
"Fixed a regression in 1.8.6 that caused an application with South migrations "
"in the ``migrations`` directory to fail (:ticket:`25618`)."
msgstr ""
"Diperbaiki sebuah pemulihan di 1.8.6 yang menyebabkan sebuah aplikasi dengan "
"perpindahan South di direktori ``migrations`` menjadi gagal (:ticket:"
"`25618`)."

msgid ""
"Fixed a regression in 1.8 by making ``gettext()`` once again return UTF-8 "
"bytestrings on Python 2 if the input is a bytestring (:ticket:`25720`)."
msgstr ""
"Diperbaiki sebuah pemulihan di 1.8 dengan membuat ``gettext()`` sekali lagi "
"mengembalikan bytestring UTF-8 di Python 2 jika masukan adalah sebuah "
"bytestring (:ticket:`25720`)."

msgid ""
"Fixed serialization of :class:`~django.contrib.postgres.fields."
"DateRangeField` and :class:`~django.contrib.postgres.fields."
"DateTimeRangeField` (:ticket:`24937`)."
msgstr ""
"Diperbaiki serialisasi dari :class:`~django.contrib.postgres.fields."
"DateRangeField` dan :class:`~django.contrib.postgres.fields."
"DateTimeRangeField` (:ticket:`24937`)."

msgid "Fixed the exact lookup of ``ArrayField`` (:ticket:`25666`)."
msgstr "Diperbaiki pencarian tepat dari ``ArrayField`` (:ticket:`25666`)."

msgid ""
"Fixed ``Model.refresh_from_db()`` updating of ``ForeignKey`` fields with "
"``on_delete=models.SET_NULL`` (:ticket:`25715`)."
msgstr ""
"Diperbaiki ``Model.refresh_from_db()`` memperbaharui dari bidang "
"``ForeignKey`` dengan ``on_delete=models.SET_NULL`` (:ticket:`25715`)."

msgid ""
"Fixed a duplicate query regression in 1.8 on proxied model deletion (:ticket:"
"`25685`)."
msgstr ""
"Diperbaiki pemulihan permintaan ganda di 1.8 di penghapusan model proxy (:"
"ticket:`25685`)."

msgid ""
"Fixed ``set_FOO_order()`` crash when the ``ForeignKey`` of a model with "
"``order_with_respect_to`` references a model with a ``OneToOneField`` "
"primary key (:ticket:`25786`)."
msgstr ""
"Diperbaiki kegagalan ``set_FOO_order()`` ketika ``ForeignKey`` dari sebuah "
"model dengan ``order_with_respect_to`` mengacu sebuah model dengan primary "
"key ``OneToOneField`` (:ticket:`25786`)."

msgid ""
"Fixed incorrect validation for ``PositiveIntegerField`` and "
"``PositiveSmallIntegerField`` on MySQL resulting in values greater than "
"4294967295 or 65535, respectively, passing validation and being silently "
"truncated by the database (:ticket:`25767`)."
msgstr ""
"Diperbaiki pengesahan tidak benar untuk ``PositiveIntegerField`` dan "
"``PositiveSmallIntegerField`` di MySQL menghasilkan di nilai lebih besar "
"dari 4294967295 atau 65535, masing-masing, melewatkan pengesahan dan menjadi "
"diam dipotong oleh basisdata (:ticket:`25767`)."

msgid "Django 1.8.8 release notes"
msgstr "Catatan terbitan Django 1.8.8"

msgid "*January 2, 2016*"
msgstr "*2 Januari 2016*"

msgid "Django 1.8.8 fixes several bugs in 1.8.7."
msgstr "Django 1.8.8 memperbaiki beberapa kesalahan di 1.8.7."

msgid ""
"Python 3.2 users, please be advised that we've decided to drop support for "
"Python 3.2 in Django 1.8.x at the end of 2016. We won't break things "
"intentionally after that, but we won't test subsequent releases against "
"Python 3.2 either. Upstream support for Python 3.2 ends February 2016 so we "
"don't find much value in providing security updates for a version of Python "
"that could be insecure. To read more about the decision and to let us know "
"if this will be problematic for you, please read the `django-developers "
"thread <https://groups.google.com/g/django-developers/c/eMu5UQpUdWs/"
"discussion>`_."
msgstr ""

msgid ""
"Fixed incorrect ``unique_together`` field name generation by ``inspectdb`` (:"
"ticket:`25274`)."
msgstr ""
"Diperbaiki pembangkitan nama bidang ``unique_together`` oleh ``inspectdb`` (:"
"ticket:`25274`). "

msgid ""
"Corrected ``__len`` query lookup on ``ArrayField`` for empty arrays (:ticket:"
"`25772`)."
msgstr ""
"Diperbaiki pencarian permintaan ``__len`` pada ``ArrayField`` untuk larik "
"kosong (:ticket:`25772`)."

msgid ""
"Restored the ability to use custom formats from ``formats.py`` with ``django."
"utils.formats.get_format()`` and the ``date`` template filter (:ticket:"
"`25812`)."
msgstr ""
"Disimpan kembali kemampuan untuk menggunakan penyesuaian bentuk dari "
"``formats.py`` dengan ``django.utils.formats.get_format()`` dan penyaring "
"cetakan ``date`` (:ticket:`25812`)."

msgid ""
"Fixed a state bug when migrating a ``SeparateDatabaseAndState`` operation "
"backwards (:ticket:`25896`)."
msgstr ""
"Diperbaiki sebuah keadaan kesalahan ketika memindahkan operasi "
"``SeparateDatabaseAndState`` kebelakang (:ticket:`25896`)."

msgid ""
"Fixed missing ``varchar/text_pattern_ops`` index on ``CharField`` and "
"``TextField`` respectively when using ``AlterField`` on PostgreSQL (:ticket:"
"`25412`)."
msgstr ""
"Diperbaiki kehilangan indeks ``varchar/text_pattern_ops`` di ``CharField`` "
"dan ``TextField`` masing-masing ketika menggunakan ``AlterField`` di "
"PostgreSQL (:ticket:`25412`)."

msgid ""
"Fixed a state bug when using an ``AlterModelManagers`` operation (:ticket:"
"`25852`)."
msgstr ""
"Diperbaiki sebuah keadaan kesalahan ketika menggunakan sebuah tindakan "
"``AlterModelManagers`` (:ticket:`25852`)."

msgid ""
"Fixed a regression which prevented using a language not in Django's default "
"language list (:setting:`LANGUAGES`) (:ticket:`25915`)."
msgstr ""
"Diperbaiki sebuah pemulihan yang mencegah menggunakan sebuah bahasa bukan di "
"daftar basaha awal Django (:setting:`LANGUAGES`) (:ticket:`25915`)."

msgid ""
"``django.views.decorators.cache.never_cache()`` now sends more persuasive "
"headers (added ``no-cache, no-store, must-revalidate`` to ``Cache-Control``) "
"to better prevent caching (:ticket:`13008`). This fixes a problem where a "
"page refresh in Firefox cleared the selected entries in the admin's "
"``filter_horizontal`` and ``filter_vertical`` widgets, which could result in "
"inadvertent data loss if a user didn't notice that and then submitted the "
"form (:ticket:`22955`)."
msgstr ""
"``django.views.decorators.cache.never_cache()`` sekarang mengirim kepala "
"meyakinkan (ditambahkan ``no-cache, no-store, must-revalidate`` pada ``Cache-"
"Control``) untuk lebih baik mencegah menyimpan sementara (:ticket:`13008`). "
"Ini memperbaiki sebuah masalah dimana sebuah halaman disegarkan dalam "
"Firefox membersihkan masukan yang dipilih di widget ``filter_horizontal`` "
"dan ``filter_vertical`` admin, yang dapat menghasilkan dalam kehilangan data "
"tidak sengaja jika seorang pengguna tidak menyadari itu dan kemudian "
"mengajukan formulir (:ticket:`22955`)."

msgid ""
"Fixed a regression in the admin which ignored line breaks in read-only "
"fields instead of converting them to ``<br>`` (:ticket:`25465`)."
msgstr ""
"Diperbaiki sebuah pemulihan di admin yang mengabaikan baris jeda di bidang "
"hanya-baca daripada merubah mereka menjadi ``<br>`` (:ticket:`25465`)."

msgid ""
"Made ``loaddata`` skip disabling and enabling database constraints when it "
"doesn't load any fixtures (:ticket:`23372`)."
msgstr ""
"Dibuat ``loaddata`` melewati meniadakan dan mengadakan batasan basisdata "
"ketika itu tidak memuat alat bantu apapun (:ticket:`23372`)."

msgid ""
"Fixed a crash in ``QuerySet.values()/values_list()`` after an ``annotate()`` "
"and ``order_by()`` when ``values()/values_list()`` includes a field not in "
"the ``order_by()`` (:ticket:`25316`)."
msgstr ""
"Diperbaiki sebuah kegagalan di ``QuerySet.values()/values_list()`` setelah "
"sebuah ``annotate()`` dan ``order_by()`` ketika ``values()/values_list()`` "
"menyertakan sebuah bidang bukan di ``order_by()`` (:ticket:`25316`)."

msgid "Django 1.8.9 release notes"
msgstr "Catatan terbitan Django 1.8.9"

msgid "*February 1, 2016*"
msgstr "*1 Februari 2016*"

msgid "Django 1.8.9 fixes several bugs in 1.8.8."
msgstr "Django 1.8.9 memperbaiki beberapa kesalahan di 1.8.8."

msgid ""
"Fixed a regression that caused the \"user-tools\" items to display on the "
"admin's logout page (:ticket:`26035`)."
msgstr ""
"Diperbaiki sebuah pemulihan yang disebabkan barang \"user-tools\" untuk "
"ditampilkan di halaman keluar admin (:ticket:`26035`)."

msgid ""
"Fixed a crash in the translations system when the current language has no "
"translations (:ticket:`26046`)."
msgstr ""
"Diperbaiki sebuah kegagalan di sistem terjemahan ketika bahasa saat ini "
"tidak mempunyai terjemahan (:ticket:`26046`)."

msgid ""
"Fixed a regression that caused the incorrect day to be selected when opening "
"the admin calendar widget for timezones from GMT+0100 to GMT+1200 (:ticket:"
"`24980`)."
msgstr ""
"Diperbaiki sebuah pemulihan yang menyebabkan hari tidak benar untuk dipilih "
"ketika membuka widget kalender admin untuk zonawaktu dari  GMT+0100 menjadi "
"GMT+1200 (:ticket:`24980`)."

msgid ""
"Fixed a regression in 1.8.8 causing incorrect index handling in migrations "
"on PostgreSQL when adding ``db_index=True`` or ``unique=True`` to a "
"``CharField`` or ``TextField`` that already had the other specified, or when "
"removing one of them from a field that had both, or when adding "
"``unique=True`` to a field already listed in ``unique_together`` (:ticket:"
"`26034`)."
msgstr ""
"Diperbaiki sebuah pemulihan di 1.8.8 menyebabkan penanganan indeks tidak "
"benar di perpindahan di PostgreSQL ketika menambahkan ``db_index=True`` atau "
"``unique=True`` pada ``CharField`` atau ``TextField`` yang sudah memiliki "
"lainnya yang sudah ditentukan, atau ketika memindahkan satu dari mereka dari "
"sebuah bidang yang mempunyai keduanya, atau ketika menambahkan "
"``unique=True`` pada sebuah bidang yang sudah di daftarkan di "
"``unique_together`` (:ticket:`26034`)."

msgid ""
"Fixed a crash when using an ``__in`` lookup inside a ``Case`` expression (:"
"ticket:`26071`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menggunakan sebuah pencarian ``__in`` "
"didalam pernyataan ``Case`` (:ticket:`26071`)."

msgid ""
"Fixed a crash when using a reverse ``OneToOneField`` in ``ModelAdmin."
"readonly_fields`` (:ticket:`26060`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menggunakan balikan ``OneToOneField`` di "
"``ModelAdmin.readonly_fields`` (:ticket:`26060`)."

msgid ""
"Fixed a regression in Django 1.8.5 that broke copying a ``SimpleLazyObject`` "
"with ``copy.copy()`` (:ticket:`26122`)."
msgstr ""
"Diperbaiki sebuah pemulihan di Django 1.8.5 yang merusak salinan sebuah "
"``SimpleLazyObject`` dengan ``copy.copy()`` (:ticket:`26122`)."

msgid ""
"Fixed the ``contrib.gis`` map widgets when using "
"``USE_THOUSAND_SEPARATOR=True`` (:ticket:`20415`)."
msgstr ""
"Diperbaiki widget peta ``contrib.gis`` ketika menggunakan "
"``USE_THOUSAND_SEPARATOR=True`` (:ticket:`20415`)."

msgid "Django 1.9 release notes"
msgstr "Catatan terbitan Django 1.9"

msgid "*December 1, 2015*"
msgstr "*Desember 1, 2015*"

msgid "Welcome to Django 1.9!"
msgstr "Selamat datang di Django 1.9!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-1.9>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-1.9>` "
"you'll want to be aware of when upgrading from Django 1.8 or older versions. "
"We've :ref:`dropped some features<removed-features-1.9>` that have reached "
"the end of their deprecation cycle, and we've :ref:`begun the deprecation "
"process for some features <deprecated-features-1.9>`."
msgstr ""
"Catatan terbitan ini melingkupi :ref:`new features <whats-new-1.9>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-1.9>` anda ingin sadari dari ketika meningkatkan dari Django "
"1.8 atau versi terlama. Kami telah :ref:`dropped some features <removed-"
"features-1.9>` yang telah mencapai akhir dari siklus pengusangan mereka, dan "
"kami telah :ref:`begun the deprecation process for some features <deprecated-"
"features-1.9>`."

msgid ""
"Django 1.9 requires Python 2.7, 3.4, or 3.5. We **highly recommend** and "
"only officially support the latest release of each series."
msgstr ""
"Django 1.9 membutuhkan Python 2.7, 3.4, or 3.5. Kami **sangat menganjurkan** "
"dan hanya secara resmi mendukung terbitan terakhir dari setiap rangkaian."

msgid "The Django 1.8 series is the last to support Python 3.2 and 3.3."
msgstr ""
"Rangkaian Django 1.8 adalah dukungan terakhir untuk mendukung Python 3.2 dan "
"3.3."

msgid "What's new in Django 1.9"
msgstr "Apa yang baru di Django 1.9"

msgid "Performing actions after a transaction commit"
msgstr "Melakukan tindakan setelah perbaikan transaksi"

msgid ""
"The new :func:`~django.db.transaction.on_commit` hook allows performing "
"actions after a database transaction is successfully committed. This is "
"useful for tasks such as sending notification emails, creating queued tasks, "
"or invalidating caches."
msgstr ""
"Kaitan :func:`~django.db.transaction.on_commit` baru mengizinkan melakukan "
"tindakan setelah sebuah transaksi basisdata berhasil diperbaiki. Ini berguna "
"untuk tugas seperti mengirim surel pemberitahuan, membuat antrian tugas, "
"atau membatalkan cache."

msgid ""
"This functionality from the :pypi:`django-transaction-hooks` package has "
"been integrated into Django."
msgstr ""

msgid "Password validation"
msgstr "Pengesahan sandi"

msgid ""
"Django now offers password validation to help prevent the usage of weak "
"passwords by users. The validation is integrated in the included password "
"change and reset forms and is simple to integrate in any other code. "
"Validation is performed by one or more validators, configured in the new :"
"setting:`AUTH_PASSWORD_VALIDATORS` setting."
msgstr ""
"Django sekarang menawarkan pengesahan sandi untuk membantu mencegah "
"penggunaan dari sandi lemah oleh pengguna. Pengesahan dipadaukan di "
"perubahan sandi disertakan dan menyetel formulir dan cukup memadukan di kode "
"lain apapum. Pengesahan dilakukan oleh satu atau lebih pengesah, "
"dikonfigurasikan di pengaturan :setting:`AUTH_PASSWORD_VALIDATORS` baru."

msgid ""
"Four validators are included in Django, which can enforce a minimum length, "
"compare the password to the user's attributes like their name, ensure "
"passwords aren't entirely numeric, or check against an included list of "
"common passwords. You can combine multiple validators, and some validators "
"have custom configuration options. For example, you can choose to provide a "
"custom list of common passwords. Each validator provides a help text to "
"explain its requirements to the user."
msgstr ""
"Empat pengesah disertakan di Django, yang dapat memaksa panjang minimal, "
"bandingkan sandi pada atribut pengguna seperti nama mereka, pastikan sandi "
"tidak seluruhnya numerik, atau periksa kembali sebuah daftar disertakan dari "
"sandi umum. Anda dapat memadukan banyak pengesah, dan beberapa pengesah "
"mempunyai penyesuaian pilihan konfigurasi. Sebagai contoh, anda dapat "
"memilih menyediakan sebuah daftar penyesuaian dari sandi umum. Setiap "
"pengesah menyediakan sebuah teks bantuan untuk menjelaskan persyaratannya ke "
"pengguna."

msgid ""
"By default, no validation is performed and all passwords are accepted, so if "
"you don't set :setting:`AUTH_PASSWORD_VALIDATORS`, you will not see any "
"change. In new projects created with the default :djadmin:`startproject` "
"template, a simple set of validators is enabled. To enable basic validation "
"in the included auth forms for your project, you could set, for example::"
msgstr ""
"Secara awalan, tidak ada pengesahan dilakukan dan semua sandi diterima, jadi "
"jika anda tidak menyetel :setting:`AUTH_PASSWORD_VALIDATORS`, anda tidak "
"akan melihat perubahan apapun. Di proyek baru dibuat dengan cetakan :djadmin:"
"`startproject` awalan, kumpulan sederhana dari pengesah diadakan. Untuk "
"mengadakan pengesahan dasar di formulir autentifikasi yang disertakan untuk "
"proyek anda, anda dapat menyetel, sebagai contoh::"

msgid "See :ref:`password-validation` for more details."
msgstr "Lihat :ref:`password-validation`  untuk lebih rinci."

msgid "Permission mixins for class-based views"
msgstr "Perizinan mixin untuk tampilan berdasarkan-kelas"

msgid ""
"Django now ships with the mixins :class:`~django.contrib.auth.mixins."
"AccessMixin`, :class:`~django.contrib.auth.mixins.LoginRequiredMixin`, :"
"class:`~django.contrib.auth.mixins.PermissionRequiredMixin`, and :class:"
"`~django.contrib.auth.mixins.UserPassesTestMixin` to provide the "
"functionality of the ``django.contrib.auth.decorators`` for class-based "
"views. These mixins have been taken from, or are at least inspired by, the "
"`django-braces`_ project."
msgstr ""
"Django sekarang dibekali dengan campuran :class:`~django.contrib.auth.mixins."
"AccessMixin`, :class:`~django.contrib.auth.mixins.LoginRequiredMixin`, :"
"class:`~django.contrib.auth.mixins.PermissionRequiredMixin`, dan :class:"
"`~django.contrib.auth.mixins.UserPassesTestMixin` untuk menyediakan kegunaan "
"dari ``django.contrib.auth.decorators`` untuk tampilan berdasarkan-kelas. "
"Campuran ini telah diambil dari, atau setidaknya diilhami oleh, proyek "
"`django-braces`_."

msgid ""
"There are a few differences between Django's and ``django-braces``\\' "
"implementation, though:"
msgstr ""
"Ada sedikit perbedaan diantara penerapan Django dan ``django-braces`, "
"meskipun:"

msgid ""
"The :attr:`~django.contrib.auth.mixins.AccessMixin.raise_exception` "
"attribute can only be ``True`` or ``False``. Custom exceptions or callables "
"are not supported."
msgstr ""
"Atribut :attr:`~django.contrib.auth.mixins.AccessMixin.raise_exception` "
"hanya dapat menjadi ``True`` atau ``False``. Penyesuaian pengecualian atau "
"callable tidak didukung."

msgid ""
"The :meth:`~django.contrib.auth.mixins.AccessMixin.handle_no_permission` "
"method does not take a ``request`` argument. The current request is "
"available in ``self.request``."
msgstr ""
"Metode :meth:`~django.contrib.auth.mixins.AccessMixin.handle_no_permission` "
"tidak mengambil argumen ``request``. Permintaan saat ini tersedia di ``self."
"request``."

msgid ""
"The custom ``test_func()`` of :class:`~django.contrib.auth.mixins."
"UserPassesTestMixin` does not take a ``user`` argument. The current user is "
"available in ``self.request.user``."
msgstr ""
"Penyesuaian ``test_func()`` dari :class:`~django.contrib.auth.mixins."
"UserPassesTestMixin` tidak mengambil sebuah argumen ``user``. Pengguna saat "
"ini tersedia di ``self.request.user``."

msgid ""
"The :attr:`permission_required <django.contrib.auth.mixins."
"PermissionRequiredMixin>` attribute supports a string (defining one "
"permission) or a list/tuple of strings (defining multiple permissions) that "
"need to be fulfilled to grant access."
msgstr ""
"Atribut :attr:`permission_required <django.contrib.auth.mixins."
"PermissionRequiredMixin>` mendukung  sebuah string (menentukan satu "
"perizinan) atau sebuah daftar/tuple dari string (menentukan banyak "
"perizinan) yang butuh dipenuhi untuk memberikan akses."

msgid ""
"The new :attr:`~django.contrib.auth.mixins.AccessMixin."
"permission_denied_message` attribute allows passing a message to the "
"``PermissionDenied`` exception."
msgstr ""
"Atribut :attr:`~django.contrib.auth.mixins.AccessMixin."
"permission_denied_message` baru mengizinkan melewatkan sebuah pesan ke "
"pengecualian ``PermissionDenied``."

msgid "New styling for ``contrib.admin``"
msgstr "Gaya baru untuk  ``contrib.admin``"

msgid ""
"The admin sports a modern, flat design with new SVG icons which look perfect "
"on HiDPI screens. It still provides a fully-functional experience to `YUI's "
"A-grade`_ browsers. Older browser may experience varying levels of graceful "
"degradation."
msgstr ""

msgid "Running tests in parallel"
msgstr "Menjalankan percobaan secara sejalan"

msgid ""
"The :djadmin:`test` command now supports a :option:`--parallel <test --"
"parallel>` option to run a project's tests in multiple processes in parallel."
msgstr ""
"Pilihan :djadmin:`test` command now supports a :option:`--parallel <test --"
"parallel>` untuk menjalankan percobaan proyek di banyak pengolahan secara "
"sejalan."

msgid ""
"Each process gets its own database. You must ensure that different test "
"cases don't access the same resources. For instance, test cases that touch "
"the filesystem should create a temporary directory for their own use."
msgstr ""
"Setiap pengolahan mendapatkan basisdatanya sendiri. Anda harus memastikan "
"bahwa kasus-kasus percobaan berbeda tidak mengakses sumberdaya sama. Sebagai "
"contoh, kasus-kasus percobaan yang menyentuh sistem berkas harus membuat "
"direktori sementara untuk penggunaan mereka sendiri."

msgid "This option is enabled by default for Django's own test suite provided:"
msgstr ""
"Pilihan diadakan secara awalan untuk deretan percobaan sendiri Django "
"disediakan:"

msgid "the OS supports it (all but Windows)"
msgstr "SO mengukung itu (semua kecuali Windows)"

msgid "the database backend supports it (all the built-in backends but Oracle)"
msgstr ""
"backend basisdata mendukung itu (semua backend siap-pakai kecuali Oracle)"

msgid "Admin views now have ``model_admin`` or ``admin_site`` attributes."
msgstr ""
"Tampilan admin sekarang mempunyai atribut ``model_admin`` atau "
"``admin_site`` "

msgid ""
"The URL of the admin change view has been changed (was at ``/admin/<app>/"
"<model>/<pk>/`` by default and is now at ``/admin/<app>/<model>/<pk>/change/"
"``). This should not affect your application unless you have hardcoded admin "
"URLs. In that case, replace those links by :ref:`reversing admin URLs <admin-"
"reverse-urls>` instead. Note that the old URL still redirects to the new one "
"for backwards compatibility, but it may be removed in a future version."
msgstr ""
"URL dari tampilan rubah admin telah berubah (sebelumnya di ``/admin/<app>/"
"<model>/<pk>/`` secara awalan dan sekarang di ``/admin/<app>/<model>/<pk>/"
"change/``). Ini tidak harus mempengaruhi aplikasi anda meskipun anda "
"mengkode keraskan URL admin. Dalam kasus itu, ganti tautan tersebut dengan :"
"ref:`reversing admin URLs <admin-reverse-urls>` . Catat bahwa URL lama masih "
"megnalihkan ke satu yang baru dari kesesuaian kebelakang, tetapi itu mungkin "
"dipindahkan di versi akan datang."

msgid ""
":meth:`ModelAdmin.get_list_select_related() <django.contrib.admin.ModelAdmin."
"get_list_select_related>` was added to allow changing the "
"``select_related()`` values used in the admin's changelist query based on "
"the request."
msgstr ""
":meth:`ModelAdmin.get_list_select_related() <django.contrib.admin.ModelAdmin."
"get_list_select_related>` telah ditambahkan untuk mengizinkan perubahan "
"nilai-nilai ``select_related()`` di permintaan daftar rubah admin "
"berdasarkan pada permintaan. "

msgid ""
"The ``available_apps`` context variable, which lists the available "
"applications for the current user, has been added to the :meth:`AdminSite."
"each_context() <django.contrib.admin.AdminSite.each_context>` method."
msgstr ""
"Variabel konteks ``available_apps``, yang mendaftar aplikasi tersedia untuk "
"pengguna saat ini, telah ditambahkan ke metode :meth:`AdminSite."
"each_context() <django.contrib.admin.AdminSite.each_context>`."

msgid ""
":attr:`AdminSite.empty_value_display <django.contrib.admin.AdminSite."
"empty_value_display>` and :attr:`ModelAdmin.empty_value_display <django."
"contrib.admin.ModelAdmin.empty_value_display>` were added to override the "
"display of empty values in admin change list. You can also customize the "
"value for each field."
msgstr ""
":attr:`AdminSite.empty_value_display <django.contrib.admin.AdminSite."
"empty_value_display>` dan :attr:`ModelAdmin.empty_value_display <django."
"contrib.admin.ModelAdmin.empty_value_display>` telah ditambahkan untuk "
"menimpa tampilan dari nilai-nilai kosong di daftar rubah admin. Anda dapat "
"juga menyesuaikan nilai untuk setiap bidang."

msgid ""
"Added jQuery events :ref:`when an inline form is added or removed <admin-"
"javascript-inline-form-events>` on the change form page."
msgstr ""
"Ditambahkan acara jQuery :ref:`when an inline form is added or removed "
"<admin-javascript-inline-form-events>` pada perubahan halaman formulir."

msgid ""
"The time picker widget includes a '6 p.m' option for consistency of having "
"predefined options every 6 hours."
msgstr ""
"Widget pengambil waktu menyertakan pilihan '6 p.m' untuk ketetapan dari "
"memiliki pilihan yang telah ditetapkan setiap 6 jam."

msgid "JavaScript slug generation now supports Romanian characters."
msgstr "Pembangkitan keong JavaScript sekarang mendukung karakter Rumania."

msgid ""
"The model section of the ``admindocs`` now also describes methods that take "
"arguments, rather than ignoring them."
msgstr ""
"Bagian model dari ``admindocs`` sekarang juga menggambarkan metode yang "
"mengambil argumen, daripada mengabaikan mereka."

msgid ""
"The default iteration count for the PBKDF2 password hasher has been "
"increased by 20%. This backwards compatible change will not affect users who "
"have subclassed ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` to "
"change the default value."
msgstr ""
"Perhitungan perulangan awal untuk pengacak sandi PBKDF2 telah ditingkatkan "
"oleh 20%. Perubahan kesesuaian kebelakang tidak akan mempengaruhi pengguna "
"yang mempunyai subkelas ``django.contrib.auth.hashers.PBKDF2PasswordHasher`` "
"untuk merubah nilai awal."

msgid ""
"The ``BCryptSHA256PasswordHasher`` will now update passwords if its "
"``rounds`` attribute is changed."
msgstr ""
"``BCryptSHA256PasswordHasher`` akan sekarang memperbaharui sandi jika "
"atribut ``rounds`` nya berubah."

msgid ""
"``AbstractBaseUser`` and ``BaseUserManager`` were moved to a new ``django."
"contrib.auth.base_user`` module so that they can be imported without "
"including ``django.contrib.auth`` in :setting:`INSTALLED_APPS` (doing so "
"raised a deprecation warning in older versions and is no longer supported in "
"Django 1.9)."
msgstr ""
"``AbstractBaseUser`` dan ``BaseUserManager`` dipindahkan ke modul ``django."
"contrib.auth.base_user`` baru sehingga mereka dapat diimpor tanpa "
"menyertakan ``django.contrib.auth`` di :setting:`INSTALLED_APPS` "
"(melakukannya memunculkan peringatan pengusangan di versi terlama dan tidak "
"lagi didukung di Django 1.9)."

msgid ""
"The permission argument of :func:`~django.contrib.auth.decorators."
"permission_required()` accepts all kinds of iterables, not only list and "
"tuples."
msgstr ""
"Argumen perizinan dari :func:`~django.contrib.auth.decorators."
"permission_required()` menerima semua macam dari perulangan, tidak hanya "
"daftar dan tuple."

msgid ""
"The new :class:`~django.contrib.auth.middleware."
"PersistentRemoteUserMiddleware` makes it possible to use ``REMOTE_USER`` for "
"setups where the header is only populated on login pages instead of every "
"request in the session."
msgstr ""
":class:`~django.contrib.auth.middleware.PersistentRemoteUserMiddleware` baru "
"membuat itu memungkinkan menggunakan ``REMOTE_USER`` untuk pengaturan dimana "
"kepala hanya dikumpulkan pada halaman masuk daripada setiap permintaan di "
"sesi."

msgid ""
"The ``django.contrib.auth.views.password_reset()`` view accepts an "
"``extra_email_context`` parameter."
msgstr ""

msgid ""
"It's now possible to use :attr:`~django.db.models.Options."
"order_with_respect_to` with a ``GenericForeignKey``."
msgstr ""
"Itu sekarang memungkinkan menggunakan :attr:`~django.db.models.Options."
"order_with_respect_to` dengan ``GenericForeignKey``."

msgid ""
"All ``GeoQuerySet`` methods have been deprecated and replaced by :doc:"
"`equivalent database functions </ref/contrib/gis/functions>`. As soon as the "
"legacy methods have been replaced in your code, you should even be able to "
"remove the special ``GeoManager`` from your GIS-enabled classes."
msgstr ""
"Semua metode ``GeoQuerySet`` telah diusangkan dan diganti oleh :doc:"
"`equivalent database functions </ref/contrib/gis/functions>`. Segera setelah "
"metode warisan telah diganti di kode anda, anda harus bahkan dapat "
"memindahkan ``GeoManager`` khusus dari kelas-kelas diadakan-GIS anda."

msgid ""
"The GDAL interface now supports instantiating file-based and in-memory :ref:"
"`GDALRaster objects <raster-data-source-objects>` from raw data. Setters for "
"raster properties such as projection or pixel values have been added."
msgstr ""
"Antarmuka GDAL sekarang mendukung instansiasi berdasarkan-berkas dan :ref:"
"`GDALRaster objects <raster-data-source-objects>` dalam-memori dari data "
"mentah. Penyetel untuk sifat raster seperti proyeksi atau nilai-nilai pixel "
"telah ditambahkan."

msgid ""
"For PostGIS users, the new :class:`~django.contrib.gis.db.models."
"RasterField` allows :ref:`storing GDALRaster objects <creating-and-saving-"
"raster-models>`. It supports automatic spatial index creation and "
"reprojection when saving a model. It does not yet support spatial querying."
msgstr ""
"Untuk pengguna PostGIS, :class:`~django.contrib.gis.db.models.RasterField` "
"baru mengizinkan :ref:`storing GDALRaster objects <creating-and-saving-"
"raster-models>`. Itu mendukung pembuatan indeks spasial otomatis dan "
"proyeksi ulang ketika menyimpan sebuah model. Itu belum mendukung permintaan "
"spasial."

msgid ""
"The new :meth:`GDALRaster.warp() <django.contrib.gis.gdal.GDALRaster.warp>` "
"method allows warping a raster by specifying target raster properties such "
"as origin, width, height, or pixel size (among others)."
msgstr ""

msgid ""
"The new :meth:`GDALRaster.transform() <django.contrib.gis.gdal.GDALRaster."
"transform>` method allows transforming a raster into a different spatial "
"reference system by specifying a target ``srid``."
msgstr ""
"Metode :meth:`GDALRaster.transform() <django.contrib.gis.gdal.GDALRaster."
"transform>` mengizinkan perubahan sebuah raster menjadi sebuah spasial "
"berbeda mengacu sistem dengan menentukan sebuah sasaran ``srid``."

msgid ""
"The new :class:`~django.contrib.gis.geoip2.GeoIP2` class allows using "
"MaxMind's GeoLite2 databases which includes support for IPv6 addresses."
msgstr ""
"Kelas :class:`~django.contrib.gis.geoip2.GeoIP2` baru mengizinkan "
"menggunakan basisdata GeoLite2 MaxMind yang menyertakan dukungan untuk "
"alamat IPv6."

msgid ""
"The default OpenLayers library version included in widgets has been updated "
"from 2.13 to 2.13.1."
msgstr ""
"Versi pustaka OpenLayer awalan disertakan dalam widget telah diperbaharui "
"dari 2.13 menjadi 2.13.1."

msgid ""
"Added support for the :lookup:`rangefield.contained_by` lookup for some "
"built in fields which correspond to the range fields."
msgstr ""
"Ditambahkan dukungan untuk pencarian :lookup:`rangefield.contained_by` untuk "
"beberapa bidang siap pakai yang berhubungan ke jangkauan bidang"

msgid "Added ``django.contrib.postgres.fields.JSONField``."
msgstr ""

msgid "Added :doc:`/ref/contrib/postgres/aggregates`."
msgstr "Ditambahkan :doc:`/ref/contrib/postgres/aggregates`."

msgid ""
"Added the :class:`~django.contrib.postgres.functions.TransactionNow` "
"database function."
msgstr ""
"Ditambahkan fungsi basisdata :class:`~django.contrib.postgres.functions."
"TransactionNow`."

msgid ""
"The session model and ``SessionStore`` classes for the ``db`` and "
"``cached_db`` backends are refactored to allow a custom database session "
"backend to build upon them. See :ref:`extending-database-backed-session-"
"engines` for more details."
msgstr ""
"Model sesi dan kelas-kelas ``SessionStore`` untuk backend ``db`` dan "
"``cached_db`` direfaktor untuk mengizinkan penyesuaian backend basisdata "
"untuk membangun atas mereka. Lihat :ref:`extending-database-backed-session-"
"engines` untuk rincian lebih."

msgid ""
":func:`~django.contrib.sites.shortcuts.get_current_site` now handles the "
"case where ``request.get_host()`` returns ``domain:port``, e.g. ``example."
"com:80``. If the lookup fails because the host does not match a record in "
"the database and the host has a port, the port is stripped and the lookup is "
"retried with the domain part only."
msgstr ""
":func:`~django.contrib.sites.shortcuts.get_current_site` sekarang menangani "
"kasus dimana ``request.get_host()`` mengembalikan ``domain:port``, sebagai "
"contoh ``example.com:80``. Jika pencarian gagal karena rumah tidak cocok "
"sebuah rekaman di basisdata dan rumah mempunyai sebuah port, port dilucuti "
"dan pencarian dicoba dengan hanya sebagian ranah."

msgid ""
"Support for multiple enclosures per feed item has been added. If multiple "
"enclosures are defined on a RSS feed, an exception is raised as RSS feeds, "
"unlike Atom feeds, do not support multiple enclosures per feed item."
msgstr ""
"Dukungan untuk lampiran per umpan barang telah ditambahkan. Jika banyak "
"lampiran ditentukan pada umpan RSS, sebuah pengecualian dimunculkan sebagai "
"umpan RSS, tidak seperti umpan Atom, tidak mendukung banyak lampiran per "
"umpan barang."

msgid ""
"``django.core.cache.backends.base.BaseCache`` now has a ``get_or_set()`` "
"method."
msgstr ""
"``django.core.cache.backends.base.BaseCache`` sekarang mempunyai metode "
"``get_or_set()``."

msgid ""
":func:`django.views.decorators.cache.never_cache` now sends more persuasive "
"headers (added ``no-cache, no-store, must-revalidate`` to ``Cache-Control``) "
"to better prevent caching. This was also added in Django 1.8.8."
msgstr ""
":func:`django.views.decorators.cache.never_cache` sekarang mengirim kepala "
"meyakinkan (ditambahkan ``no-cache, no-store, must-revalidate`` ke ``Cache-"
"Control``) untuk lebih baik mencegah menyimpan sementara. Ini juga "
"ditambahkan di Django 1.8.8."

msgid ""
"The request header's name used for CSRF authentication can be customized "
"with :setting:`CSRF_HEADER_NAME`."
msgstr ""
"Nama kepala permintaan digunakan untuk otentifikasi CSRF dapat disesuaikan "
"dengan :setting:`CSRF_HEADER_NAME`."

msgid ""
"The CSRF referer header is now validated against the :setting:"
"`CSRF_COOKIE_DOMAIN` setting if set. See :ref:`how-csrf-works` for details."
msgstr ""
"Kepala pengacu CSRF sekarang disahkan terhadap pengaturan :setting:"
"`CSRF_COOKIE_DOMAIN` jika disetel. Lihat :ref:`how-csrf-works` untuk rincian."

msgid ""
"The new :setting:`CSRF_TRUSTED_ORIGINS` setting provides a way to allow "
"cross-origin unsafe requests (e.g. ``POST``) over HTTPS."
msgstr ""
"Pengaturan :setting:`CSRF_TRUSTED_ORIGINS` baru menyediakan cara mengizinkan "
"permintaan tidak aman lintas-asli (sebagai contoh ``POST``) terhadap HTTPS. "

msgid ""
"The PostgreSQL backend (``django.db.backends.postgresql_psycopg2``) is also "
"available as ``django.db.backends.postgresql``. The old name will continue "
"to be available for backwards compatibility."
msgstr ""
"Backend PostgreSQL (``django.db.backends.postgresql_psycopg2``) juga "
"tersedia sebagai ``django.db.backends.postgresql``. Nama lama akan lanjut "
"menjadi tersedia untuk kesesuaian kebelakang."

msgid ""
":meth:`Storage.get_valid_name() <django.core.files.storage.Storage."
"get_valid_name>` is now called when the :attr:`~django.db.models.FileField."
"upload_to` is a callable."
msgstr ""
":meth:`Storage.get_valid_name() <django.core.files.storage.Storage."
"get_valid_name>` sekarang dipanggil ketika :attr:`~django.db.models."
"FileField.upload_to` dapat dipanggil."

msgid ""
":class:`~django.core.files.File` now has the ``seekable()`` method when "
"using Python 3."
msgstr ""
":class:`~django.core.files.File` sekarang mempunyai metode ``seekable()`` "
"ketika menggunakan Python 3."

msgid ""
":class:`~django.forms.ModelForm` accepts the new ``Meta`` option "
"``field_classes`` to customize the type of the fields. See :ref:`modelforms-"
"overriding-default-fields` for details."
msgstr ""
":class:`~django.forms.ModelForm` menerima pilhan ``Meta`` baru "
"``field_classes`` untuk menyesuaikan jenis dari bidang. Lihat :ref:"
"`modelforms-overriding-default-fields` untuk rincian."

msgid ""
"You can now specify the order in which form fields are rendered with the :"
"attr:`~django.forms.Form.field_order` attribute, the ``field_order`` "
"constructor argument , or the :meth:`~django.forms.Form.order_fields` method."
msgstr ""
"Anda sekarang dapat menentukan urutan dimana bidang-bidang formulir dengan "
"atribut :attr:`~django.forms.Form.field_order`, argumen pembangun "
"``field_order``, atau metode :meth:`~django.forms.Form.order_fields`."

msgid ""
"A form prefix can be specified inside a form class, not only when "
"instantiating a form. See :ref:`form-prefix` for details."
msgstr ""
"Sebuah awalan formulir dapat ditentukan didalam sebuah kelas formulir, bukan "
"hanya ketika menginstasiasikan sebuah formulir. Lihat :ref:`form-prefix` "
"untuk rincian."

msgid ""
"You can now :ref:`specify keyword arguments <custom-formset-form-kwargs>` "
"that you want to pass to the constructor of forms in a formset."
msgstr ""
"Anda sekarang dapat :ref:`specify keyword arguments <custom-formset-form-"
"kwargs>` yang ingin melewatkan ke pembangun dari formulir di sebuah formset."

msgid ""
":class:`~django.forms.SlugField` now accepts an :attr:`~django.forms."
"SlugField.allow_unicode` argument to allow Unicode characters in slugs."
msgstr ""
":class:`~django.forms.SlugField` sekarang menerima sebuah argumen :attr:"
"`~django.forms.SlugField.allow_unicode` untuk mengizinkan karakter Unicode "
"dalam keong."

msgid ""
":class:`~django.forms.CharField` now accepts a :attr:`~django.forms."
"CharField.strip` argument to strip input data of leading and trailing "
"whitespace.  As this defaults to ``True`` this is different behavior from "
"previous releases."
msgstr ""
":class:`~django.forms.CharField` sekarang menerima sebuah argumen :attr:"
"`~django.forms.CharField.strip` untuk melucuti masukan data dari awalan dan "
"buntutan ruang kosong. Ketika awalan ini menjadi ``True`` ini adalah "
"perilaku berbeda dari terbitan sebelumnya."

msgid ""
"Form fields now support the :attr:`~django.forms.Field.disabled` argument, "
"allowing the field widget to be displayed disabled by browsers."
msgstr ""
"Bidang-bidang formulir sekarang mendukung argumen :attr:`~django.forms.Field."
"disabled`, mengizinkan widget bidang ditampilkan ditiadakan oleh peramban."

msgid ""
"It's now possible to customize bound fields by overriding a field's :meth:"
"`~django.forms.Field.get_bound_field()` method."
msgstr ""
"Itu sekarang menimpa menyesuaikan ikatan bidang dengan menimpa metode :meth:"
"`~django.forms.Field.get_bound_field()` bidang."

msgid ""
"Class-based views generated using ``as_view()`` now have ``view_class`` and "
"``view_initkwargs`` attributes."
msgstr ""
"Tampilan berdasarkan-kelas dibangkitkan menggunakan ``as_view()`` sekarang "
"mempunyai atribut ``view_class`` dan ``view_initkwargs``."

msgid ""
":func:`~django.utils.decorators.method_decorator` can now be used with a "
"list or tuple of decorators. It can also be used to :ref:`decorate classes "
"instead of methods <decorating-class-based-views>`."
msgstr ""
":func:`~django.utils.decorators.method_decorator` sekarang dapat digunakan "
"dengan sebuah daftar atau tuple dari penghias. Itu juga dapat digunakan "
"untuk :ref:`decorate classes instead of methods <decorating-class-based-"
"views>`."

msgid ""
"The :func:`django.views.i18n.set_language` view now properly redirects to :"
"ref:`translated URLs <url-internationalization>`, when available."
msgstr ""
"Tampilan :func:`django.views.i18n.set_language` sekarang dengan benar "
"mengarahkan ke :ref:`translated URLs <url-internationalization>`, ketika "
"tersedia."

msgid ""
"The ``django.views.i18n.javascript_catalog()`` view now works correctly if "
"used multiple times with different configurations on the same page."
msgstr ""
"Tampilan ``django.views.i18n.javascript_catalog()`` sekarang bekerja dengan "
"benar jika digunakan banyak kali dengan konfigurasi berbeda pada halaman "
"sama."

msgid ""
"The :func:`django.utils.timezone.make_aware` function gained an ``is_dst`` "
"argument to help resolve ambiguous times during DST transitions."
msgstr ""
"Fungsi :func:`django.utils.timezone.make_aware` memperoleh sebuah argumen "
"``is_dst`` untuk membantu menyelesaikan waktu tidak pasti selama masa "
"peralihan DST."

msgid ""
"You can now use locale variants supported by gettext. These are usually used "
"for languages which can be written in different scripts, for example Latin "
"and Cyrillic (e.g. ``be@latin``)."
msgstr ""
"Anda sekarang dapat menggunakan beragam lokal didukung oleh gettext. Ini "
"adalah biasanya digunakan untuk bahasa yang dapat ditulis dalam tulisan "
"berbeda, sebagai contoh Latin dan Cyrillic (sebagai contoh ``be@latin``)."

msgid ""
"Added the ``django.views.i18n.json_catalog()`` view to help build a custom "
"client-side i18n library upon Django translations. It returns a JSON object "
"containing a translations catalog, formatting settings, and a plural rule."
msgstr ""
"Ditambahkan tampilan ``django.views.i18n.json_catalog()`` untuk membantu "
"membangun penyesuaian sisi-klien pustaka i18n diatas terjemahan Django. Itu "
"mengembalikan sebuah obyek JSON mengandung sebuah katalog terjemahan, "
"pengaturan bentuk, dan aturan jamak."

msgid ""
"Added the ``name_translated`` attribute to the object returned by the :ttag:"
"`get_language_info` template tag. Also added a corresponding template "
"filter: :tfilter:`language_name_translated`."
msgstr ""
"Ditambahkan atribut ``name_translated`` pada obyek dikembalikan oleh etiket "
"cetakan :ttag:`get_language_info`. Juga ditambahkan penyaring cetakan "
"berhubungan: :tfilter:`language_name_translated`."

msgid ""
"You can now run :djadmin:`compilemessages` from the root directory of your "
"project and it will find all the app message files that were created by :"
"djadmin:`makemessages`."
msgstr ""
"Anda sekarang dapat menjalankan :djadmin:`compilemessages` dari direktori "
"akar dari proyek anda dan itu akan menemukan semua berkas pesan aplikasi "
"dibuat oleh :djadmin:`makemessages`."

msgid ""
":djadmin:`makemessages` now calls ``xgettext`` once per locale directory "
"rather than once per translatable file. This speeds up localization builds."
msgstr ""

msgid ""
":ttag:`blocktrans` supports assigning its output to a variable using "
"``asvar``."
msgstr ""
":ttag:`blocktrans` mendukung memberikan keluarannya ke sebuah variabel "
"menggunakan ``asvar``."

msgid "Two new languages are available: Colombian Spanish and Scottish Gaelic."
msgstr "Dua bahasa baru tersedia: Spanyol Kolombia dan Gael Skotlandia."

msgid ""
"The new :djadmin:`sendtestemail` command lets you send a test email to "
"easily confirm that email sending through Django is working."
msgstr ""
"Perintah :djadmin:`sendtestemail` baru membiarkan anda mengirim sebuah "
"percobaan surel untuk dengan mudah menegaskan bahwa pengiriman surel melalui "
"Django bekerja."

msgid ""
"To increase the readability of the SQL code generated by :djadmin:"
"`sqlmigrate`, the SQL code generated for each migration operation is "
"preceded by the operation's description."
msgstr ""
"Untuk meningkatkan kesiapan dari pembangkitan kode SQL oleh :djadmin:"
"`sqlmigrate`, pembangkit kode SQL untuk setiap tindaan perpindahan didahului "
"oleh gambaran tindakan."

msgid ""
"The :djadmin:`dumpdata` command output is now deterministically ordered. "
"Moreover, when the ``--output`` option is specified, it also shows a "
"progress bar in the terminal."
msgstr ""
"Keluaran perintah :djadmin:`dumpdata` sekarang menentukan urutan. Bahkan, "
"ketika pilihan ``--output`` ditentukan, itu juga menampilkan batang kemajuan "
"dalam terminal."

msgid ""
"The :djadmin:`createcachetable` command now has a ``--dry-run`` flag to "
"print out the SQL rather than execute it."
msgstr ""
"Perintah :djadmin:`createcachetable` sekarang mempunyai bendera ``--dry-"
"run``untuk mencetak SQL daripada menjalankannya."

msgid ""
"The :djadmin:`startapp` command creates an ``apps.py`` file. Since it "
"doesn't use ``default_app_config`` (:ref:`a discouraged API <configuring-"
"applications-ref>`), you must specify the app config's path, e.g. ``'polls."
"apps.PollsConfig'``, in :setting:`INSTALLED_APPS` for it to be used (instead "
"of just ``'polls'``)."
msgstr ""
"Perintah :djadmin:`startapp` membuat sebuah berkas ``apps.py``. Sejak itu "
"tidak menggunakan ``default_app_config`` (:ref:`a discouraged API "
"<configuring-applications-ref>`), anda harus menentukan jalur konfigurasi "
"aplikasi, sebagai contoh ``'polls.apps.PollsConfig'``, dalam :setting:"
"`INSTALLED_APPS` untuk itu digunakan (daripada hanya ``'polls'``)."

msgid ""
"When using the PostgreSQL backend, the :djadmin:`dbshell` command can "
"connect to the database using the password from your settings file (instead "
"of requiring it to be manually entered)."
msgstr ""
"Ketika menggunakan backend PostgreSQL, perintah :djadmin:`dbshell` dapat "
"terhubung ke basisdata menggunakan sandi dari berkas pengaturan anda "
"(daripada membutuhkannya untuks ecara manual dimasukkan)."

msgid ""
"The ``django`` package may be run as a script, i.e. ``python -m django``, "
"which will behave the same as ``django-admin``."
msgstr ""
"paket ``django`` mungkin dilarikan sebagai sebuah tulisan, yaitu ``python -m "
"django``, yang akan berperilaku sama seperti ``django-admin``."

msgid ""
"Management commands that have the ``--noinput`` option now also take ``--no-"
"input`` as an alias for that option."
msgstr ""
"Perintah pengelolaan yang mempunyai pilihan ``--noinput`` sekarang juga "
"mengambil ``--noinput`` sebagai sebuah nama lain untuk pilihan itu."

msgid ""
"Initial migrations are now marked with an :attr:`initial = True <django.db."
"migrations.Migration.initial>` class attribute which allows :option:`migrate "
"--fake-initial` to more easily detect initial migrations."
msgstr ""
"Perpindahan inisial sekarang ditandai dengan sebuah atribut kelas :attr:"
"`initial = True <django.db.migrations.Migration.initial>` yang mengizinkan "
"option:`migrate --fake-initial` untuk lebih mudah mengenali perpindahan "
"inisial."

msgid ""
"Added support for serialization of ``functools.partial`` and ``LazyObject`` "
"instances."
msgstr ""
"Ditambahkan dukungan untuk serialisasi dari instance ``functools.partial`` "
"dan ``LazyObject``."

msgid ""
"When supplying ``None`` as a value in :setting:`MIGRATION_MODULES`, Django "
"will consider the app an app without migrations."
msgstr ""
"Ketika menyediakan ``None`` sebagai sebuah nilai dalam :setting:"
"`MIGRATION_MODULES`, Django akan menganggap aplikasi sebuah aplikasi tanpa "
"perpindahan."

msgid ""
"When applying migrations, the \"Rendering model states\" step that's "
"displayed when running migrate with verbosity 2 or higher now computes only "
"the states for the migrations that have already been applied. The model "
"states for migrations being applied are generated on demand, drastically "
"reducing the amount of required memory."
msgstr ""
"Ketika memberlakukan perpindahan, langkah \"Rendering model states\" yang "
"ditampilkan ketika menjalankan perpindahan dengan bertele-tele 2 atau lebih "
"tinggi sekarang menghitung hanya untuk perpindahan yang telah diberlakukan. "
"Keadaan model sedang diberlakukan dibangkitkan di permintaan, secara drastis "
"mengurangi sejumlah memori yang dibutuhkan."

msgid ""
"However, this improvement is not available when unapplying migrations and "
"therefore still requires the precomputation and storage of the intermediate "
"migration states."
msgstr ""
"Bagaimanapun, perbaikan ini tidak tersedia ketika tidak memberlakukan "
"perpindahan dan karena itu masih membutuhkan pra perhitungan dan penyimpanan "
"dari keadaan perpindahan menengah."

msgid ""
"This improvement also requires that Django no longer supports mixed "
"migration plans. Mixed plans consist of a list of migrations where some are "
"being applied and others are being unapplied. This was never officially "
"supported and never had a public API that supports this behavior."
msgstr ""
"Perbaikan ini juga membutuhkan bahwa Django tidak lagi mendukung rencana "
"perpindahan campuran. Rencana campuran terdiri dari daftar perpindahan "
"dimana beberapa sedang diberlakukan dan lainnya tidak diberlakukan. Ini "
"tidak pernah secara resmi didukung dan tidak pernah mempunyai API umum yang "
"mendukung kebiasaan ini."

msgid ""
"The :djadmin:`squashmigrations` command now supports specifying the starting "
"migration from which migrations will be squashed."
msgstr ""
"Perintah :djadmin:`squashmigrations` sekarang mendukung menentukan permulaan "
"perpindahan dari dimana perpindahan dilumatkan."

msgid ""
":meth:`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>` "
"now works on proxy models."
msgstr ""
":meth:`QuerySet.bulk_create() <django.db.models.query.QuerySet.bulk_create>` "
"sekarang bekerja pada model proxi."

msgid ""
"Database configuration gained a :setting:`TIME_ZONE <DATABASE-TIME_ZONE>` "
"option for interacting with databases that store datetimes in local time and "
"don't support time zones when :setting:`USE_TZ` is ``True``."
msgstr ""
"Konfigurasi basisdata mendapatkan sebuah pilihan :setting:`TIME_ZONE "
"<DATABASE-TIME_ZONE>` untuk interaksi dengan basisdata yang menyimpan "
"datetime di waktu lokal dan tidak mendukung zona waktu ketika :setting:"
"`USE_TZ` adalah ``True``."

msgid ""
"Added the :meth:`RelatedManager.set() <django.db.models.fields.related."
"RelatedManager.set()>` method to the related managers created by "
"``ForeignKey``, ``GenericForeignKey``, and ``ManyToManyField``."
msgstr ""
"Ditambahkan metode :meth:`RelatedManager.set() <django.db.models.fields."
"related.RelatedManager.set()>` pada pengelola terkait dibuat oleh "
"``ForeignKey``, ``GenericForeignKey``, dan ``ManyToManyField``."

msgid ""
"The :meth:`~django.db.models.fields.related.RelatedManager.add` method on a "
"reverse foreign key now has a ``bulk`` parameter to allow executing one "
"query regardless of the number of objects being added rather than one query "
"per object."
msgstr ""
"Metode :meth:`~django.db.models.fields.related.RelatedManager.add` pada "
"sebuah foreign key balikan sekarang mempunyai parameter ``bulk`` untuk "
"mengizinkan menjalankan satu permintaan tanpa memperhatikan dari sejumlah "
"obyek sedang dtambahkan daripada satu permintaan per obyek."

msgid ""
"Added the ``keep_parents`` parameter to :meth:`Model.delete() <django.db."
"models.Model.delete>` to allow deleting only a child's data in a model that "
"uses multi-table inheritance."
msgstr ""
"Ditambahkan parameter ``keep_parents`` pada :meth:`Model.delete() <django.db."
"models.Model.delete>` untuk mengizinkan haya menghapus data anak di model "
"yang menggunakan warisan banyak-tabel."

msgid ""
":meth:`Model.delete() <django.db.models.Model.delete>` and :meth:`QuerySet."
"delete() <django.db.models.query.QuerySet.delete>` return the number of "
"objects deleted."
msgstr ""
":meth:`Model.delete() <django.db.models.Model.delete>` dan :meth:`QuerySet."
"delete() <django.db.models.query.QuerySet.delete>` mengembalikan sejumlah "
"obyek dihapus."

msgid ""
"Added a system check to prevent defining both ``Meta.ordering`` and "
"``order_with_respect_to`` on the same model."
msgstr ""
"Ditambahkan sebuah pemeriksaan sistem untuk mencegah menentukan kedua ``Meta."
"ordering`` dan ``order_with_respect_to`` pada model sama."

msgid ""
":lookup:`Date and time <year>` lookups can be chained with other lookups "
"(such as :lookup:`exact`, :lookup:`gt`, :lookup:`lt`, etc.). For example: "
"``Entry.objects.filter(pub_date__month__gt=6)``."
msgstr ""
"Pencarian :lookup:`Date and time <year>` dapat ditambatkan dengan pecnarian "
"lain (seperti :lookup:`exact`, :lookup:`gt`, :lookup:`lt`, dll.). Sebagai "
"contoh: ``Entry.objects.filter(pub_date__month__gt=6)``."

msgid ""
"Time lookups (hour, minute, second) are now supported by :class:`~django.db."
"models.TimeField` for all database backends. Support for backends other than "
"SQLite was added but undocumented in Django 1.7."
msgstr ""
"Pencarian waktu (jam, menit, detik) sekarang didukung oleh :class:`~django."
"db.models.TimeField` untuk semua backend basisdata. Dukungan untuk backend "
"selain dari SQLite telah ditambahkan tetapi tidak terdokumentasikan di "
"Django 1.7."

msgid ""
"You can specify the ``output_field`` parameter of the :class:`~django.db."
"models.Avg` aggregate in order to aggregate over non-numeric columns, such "
"as ``DurationField``."
msgstr ""
"Anda dapat menentukan parameter ``output_field`` dari kumpulan :class:"
"`~django.db.models.Avg` untuk mengumpulkan terhadap kolom bukan-numerik, "
"seperti ``DurationField``."

msgid ""
"Added the :lookup:`date` lookup to :class:`~django.db.models.DateTimeField` "
"to allow querying the field by only the date portion."
msgstr ""
"Ditambahkan pencarian :lookup:`date` pada :class:`~django.db.models."
"DateTimeField` untuk mengizinkan meminta bidang dengan hanya sebagian "
"tanggal.  "

msgid ""
"Added the :class:`~django.db.models.functions.Greatest` and :class:`~django."
"db.models.functions.Least` database functions."
msgstr ""
"Ditambahkan fungsi basisdata :class:`~django.db.models.functions.Greatest` "
"dan :class:`~django.db.models.functions.Least`."

msgid ""
"Added the :class:`~django.db.models.functions.Now` database function, which "
"returns the current date and time."
msgstr ""
"Ditambahkan fungsi basisdata :class:`~django.db.models.functions.Now`, yang "
"mengembalikan tanggal dan waktu saat ini."

msgid ""
":class:`~django.db.models.Transform` is now a subclass of :ref:`Func() <func-"
"expressions>` which allows ``Transform``\\s to be used on the right hand "
"side of an expression, just like regular ``Func``\\s. This allows "
"registering some database functions like :class:`~django.db.models.functions."
"Length`, :class:`~django.db.models.functions.Lower`, and :class:`~django.db."
"models.functions.Upper` as transforms."
msgstr ""
":class:`~django.db.models.Transform` sekarang sebuah subkelas dari :ref:"
"`Func() <func-expressions>` yang mengizinkan ``Transform`` untuk digunakan "
"di sisi tangan kanan dari pernyataan, sama seperti ``Func`` biasa. Ini "
"mengizinkan mendaftarkan beberapa fungsi basisdata seperti :class:`~django."
"db.models.functions.Length`, :class:`~django.db.models.functions.Lower`, "
"dan :class:`~django.db.models.functions.Upper` sebagai perubahan bentuk."

msgid ""
":class:`~django.db.models.SlugField` now accepts an :attr:`~django.db.models."
"SlugField.allow_unicode` argument to allow Unicode characters in slugs."
msgstr ""
":class:`~django.db.models.SlugField` sekarang menerima sebuah argumen :attr:"
"`~django.db.models.SlugField.allow_unicode` untuk mengizinkan karakter "
"Unicode di keong."

msgid "Added support for referencing annotations in ``QuerySet.distinct()``."
msgstr ""
"Ditambahkan dukungan untuk mengacu keterangan di ``QuerySet.distinct()``."

msgid ""
"``connection.queries`` shows queries with substituted parameters on SQLite."
msgstr ""
"``connection.queries`` menampilkan permintaan dengan parameter pengganti "
"pada SQLite."

msgid ""
":doc:`Query expressions </ref/models/expressions>` can now be used when "
"creating new model instances using ``save()``, ``create()``, and "
"``bulk_create()``."
msgstr ""
":doc:`Query expressions </ref/models/expressions>` dapat sekarang digunakan "
"ketika membuat instance model baru menggunakan ``save()``, ``create()``, dan "
"``bulk_create()``."

msgid ""
"Unless :attr:`HttpResponse.reason_phrase <django.http.HttpResponse."
"reason_phrase>` is explicitly set, it now is determined by the current value "
"of :attr:`HttpResponse.status_code <django.http.HttpResponse.status_code>`. "
"Modifying the value of ``status_code`` outside of the constructor will also "
"modify the value of ``reason_phrase``."
msgstr ""
"Meskipun :attr:`HttpResponse.reason_phrase <django.http.HttpResponse."
"reason_phrase>` adalah jelas disetel, itu sekarang ditentukan oleh nilai "
"saat ini dari :attr:`HttpResponse.status_code <django.http.HttpResponse."
"status_code>`. Merubah nilai dari ``status_code`` diluar dari pembangun akan "
"juga merubah nilai dari ``reason_phrase``."

msgid "The debug view now shows details of chained exceptions on Python 3."
msgstr ""
"Tampilan mencari kesalahan sekarang menampilkan rincian dari tambatan "
"pengecualian pada Python 3."

msgid ""
"The default 40x error views now accept a second positional parameter, the "
"exception that triggered the view."
msgstr ""
"Awalan tampilan kesalahan 40x sekarang menerima sebuah pameter penempatan "
"kedua, pengecualian yang membangkitkan tampilan."

msgid ""
"View error handlers now support :class:`~django.template.response."
"TemplateResponse`, commonly used with class-based views."
msgstr ""
"Tampilan penangan kesalahan sekarang mendukung :class:`~django.template."
"response.TemplateResponse`, secara umum digunakan dengan tampilan "
"berdasarkan-kelas."

msgid ""
"Exceptions raised by the ``render()`` method are now passed to the "
"``process_exception()`` method of each middleware."
msgstr ""
"Pengecualian dimunculkan oleh metode ``render()`` sekarang dilewatkan ke "
"metode ``process_exception()`` untuk setiap middleware."

msgid ""
"Request middleware can now set :attr:`HttpRequest.urlconf <django.http."
"HttpRequest.urlconf>` to ``None`` to revert any changes made by previous "
"middleware and return to using the :setting:`ROOT_URLCONF`."
msgstr ""
"Permintaan middleware sekarang dapat menyetel :attr:`HttpRequest.urlconf "
"<django.http.HttpRequest.urlconf>` menjadi ``None`` untuk mengembalikan "
"perubahan apapun dibuat oleh middleware sebelumnya dan mengembalikan "
"menggunakan :setting:`ROOT_URLCONF`."

msgid ""
"The :setting:`DISALLOWED_USER_AGENTS` check in :class:`~django.middleware."
"common.CommonMiddleware` now raises a :class:`~django.core.exceptions."
"PermissionDenied` exception as opposed to returning an :class:`~django.http."
"HttpResponseForbidden` so that :data:`~django.conf.urls.handler403` is "
"invoked."
msgstr ""
"Pemeriksaan :setting:`DISALLOWED_USER_AGENTS` di :class:`~django.middleware."
"common.CommonMiddleware` sekarang memunculkan sebuah pengecualian :class:"
"`~django.core.exceptions.PermissionDenied` sebagai lawan ke mengembalikan "
"sebuah :class:`~django.http.HttpResponseForbidden` sehingga :data:`~django."
"conf.urls.handler403` dipanggil."

msgid ""
"Added :meth:`HttpRequest.get_port() <django.http.HttpRequest.get_port>` to "
"fetch the originating port of the request."
msgstr ""
"Ditambahkan :meth:`HttpRequest.get_port() <django.http.HttpRequest."
"get_port>` untuk mengambil port berasal dari permintaan."

msgid ""
"Added the ``json_dumps_params`` parameter to :class:`~django.http."
"JsonResponse` to allow passing keyword arguments to the ``json.dumps()`` "
"call used to generate the response."
msgstr ""
"Ditambahkan parameter ``json_dumps_params`` pada :class:`~django.http."
"JsonResponse` untuk mengizinkan melewatkan argumen kata kunci ke panggilan "
"``json.dumps()`` digunakan untuk membangkitkan tanggapan."

msgid ""
"The :class:`~django.middleware.common.BrokenLinkEmailsMiddleware` now "
"ignores 404s when the referer is equal to the requested URL. To circumvent "
"the empty referer check already implemented, some web bots set the referer "
"to the requested URL."
msgstr ""

msgid ""
"Template tags created with the :meth:`~django.template.Library.simple_tag` "
"helper can now store results in a template variable by using the ``as`` "
"argument."
msgstr ""
"Etiket cetakan dibuat dengan pembantu :meth:`~django.template.Library."
"simple_tag` sekarang dapat menyimpan hasil dalam sebuah variabel cetakan "
"dengan menggunakan argumen ``as``."

msgid ""
"Added a :meth:`Context.setdefault() <django.template.Context.setdefault>` "
"method."
msgstr ""
"Ditambahkan sebuah metode :meth:`Context.setdefault() <django.template."
"Context.setdefault>`."

msgid ""
"The :ref:`django.template <django-template-logger>` logger was added and "
"includes the following messages:"
msgstr ""
"Pencatat :ref:`django.template <django-template-logger> telah ditambahkan "
"dan menyertakan pesan berikut:"

msgid "A ``DEBUG`` level message for missing context variables."
msgstr "Pesan tingkatan ``DEBUG`` untuk konteks variabel hilang."

msgid ""
"A ``WARNING`` level message for uncaught exceptions raised during the "
"rendering of an ``{% include %}`` when debug mode is off (helpful since ``{% "
"include %}`` silences the exception and returns an empty string)."
msgstr ""
"Sebuah peringatan tingkat ``WARNING`` untuk pengecualian tidak tertangkap "
"dimunculkan selama membangun dari sebuah ``{% include %}`` ketika suasana "
"mencari kesalahan mati (sangat membantu sejak ``{% include %}`` mendiamkan "
"pengecualian dan mengembalikan sebuah string kosong)."

msgid ""
"The :ttag:`firstof` template tag supports storing the output in a variable "
"using 'as'."
msgstr ""
"Etiket cetakan :ttag:`firstof` mengukung menyimpan keluaran di sebuah "
"variabel menggunakan 'as'. "

msgid ""
":meth:`Context.update() <django.template.Context.update>` can now be used as "
"a context manager."
msgstr ""
":meth:`Context.update() <django.template.Context.update>` sekarang dapat "
"digunakan sebagai pengelola konteks."

msgid "Django template loaders can now extend templates recursively."
msgstr "Pemuat cetakan Django sekarang dapat memperpanjang cetakan berulang."

msgid ""
"The debug page template postmortem now include output from each engine that "
"is installed."
msgstr ""

msgid ""
":ref:`Debug page integration <template-debug-integration>` for custom "
"template engines was added."
msgstr ""
":ref:`Debug page integration <template-debug-integration>` untuk penyesuaian "
"mesin cetakan telah ditambahkan."

msgid ""
"The :class:`~django.template.backends.django.DjangoTemplates` backend gained "
"the ability to register libraries and builtins explicitly through the "
"template :setting:`OPTIONS <TEMPLATES-OPTIONS>`."
msgstr ""
"Backend :class:`~django.template.backends.django.DjangoTemplates` "
"mendapatkan kemampuan untuk mendaftarkan pustaka dan siap pakai secara "
"eksplisit melalui cetakan :setting:`OPTIONS <TEMPLATES-OPTIONS>`."

msgid ""
"The ``timesince`` and ``timeuntil`` filters were improved to deal with leap "
"years when given large time spans."
msgstr ""
"Penyaring ``timesince`` dan ``timeuntil`` telah diperbaiki untuk berurusan "
"dengan tahun kabisat ketika diberikan jangkauan waktu yang besar."

msgid ""
"The ``include`` tag now caches parsed templates objects during template "
"rendering, speeding up reuse in places such as for loops."
msgstr ""
"Etiket ``include`` sekarang menyimpan sementara objek cetakan diurai selama "
"membangun cetakan, mempercepat penggunaan kembali seperti untuk perulangan."

msgid ""
"Added the :meth:`json() <django.test.Response.json>` method to test client "
"responses to give access to the response body as JSON."
msgstr ""
"Ditambahkan metode :meth:`json() <django.test.Response.json>` pada tanggapan "
"klien percobaan untuk memberikan akses ke tanggapan badan sebagai JSON."

msgid ""
"Added the :meth:`~django.test.Client.force_login()` method to the test "
"client. Use this method to simulate the effect of a user logging into the "
"site while skipping the authentication and verification steps of :meth:"
"`~django.test.Client.login()`."
msgstr ""
"Ditambahkan metode :meth:`~django.test.Client.force_login()` ke klien "
"percobaan. Gunakan metode ini untuk merangsang pengaruh dari pengguna masuk "
"kedalam situs selagi melewati langkah-langkah otentifikasi dan pemeriksaan "
"dari :meth:`~django.test.Client.login()`."

msgid ""
"Regular expression lookaround assertions are now allowed in URL patterns."
msgstr ""
"Pernyataan melihat-lihat regular expression sekarang diizinkan di pola URL"

msgid ""
"The application namespace can now be set using an ``app_name`` attribute on "
"the included module or object. It can also be set by passing a 2-tuple of "
"(<list of patterns>, <application namespace>) as the first argument to "
"``include()``."
msgstr ""
"Namespace aplikasi sekarang dapat disetel menggunakan sebuah atribut "
"``app_name`` pada modul atau obyek disertakan. Itu juga dapat disetel dengan "
"melewatkan 2-tuple dari (<list of patterns>, <application namespace>) "
"sebagai argumen pertama pada ``include()``."

msgid "System checks have been added for common URL pattern mistakes."
msgstr "Pemeriksaan sistem telah ditambahkan untuk kesalahan corak URL umum."

msgid ""
"Added :func:`django.core.validators.int_list_validator` to generate "
"validators of strings containing integers separated with a custom character."
msgstr ""
"Ditambahkan :func:`django.core.validators.int_list_validator` untuk "
"membangkitkan pengesah dari string mengandung integer terpisah dengan "
"penyesuaian karakter."

msgid ""
":class:`~django.core.validators.EmailValidator` now limits the length of "
"domain name labels to 63 characters per :rfc:`1034`."
msgstr ""
":class:`~django.core.validators.EmailValidator` sekarang membatasi panjang "
"dari label nama ranah menjadi 63 karakter per :rfc:`1034`."

msgid ""
"Added :func:`~django.core.validators.validate_unicode_slug` to validate "
"slugs that may contain Unicode characters."
msgstr ""
"Ditambahkan :func:`~django.core.validators.validate_unicode_slug` untuk "
"mensahkan siput yang mungkin mengandung karakter Unicode."

msgid "Backwards incompatible changes in 1.9"
msgstr "Perubahan bertentangan kebelakang di 1.9"

msgid ""
"In addition to the changes outlined in this section, be sure to review the :"
"ref:`removed-features-1.9` for the features that have reached the end of "
"their deprecation cycle and therefore been removed. If you haven't updated "
"your code within the deprecation timeline for a given feature, its removal "
"may appear as a backwards incompatible change."
msgstr ""
"Sebagai tambahan pada uraian berubah di bagian ini, pastikan meninjau :ref:"
"`removed-features-1.9` untuk fitur yang telah mencapai akhir dari siklus "
"pengusangan mereka dan karena itu telah dipindahkan. Jika anda belum "
"memperbaharui kode anda dalam linimasa pengusangan untuk fitur diberikan, "
"perpindahan ini mungkin muncul sebagai perubahan ketidaksesuaian kebelakang."

msgid ""
"A couple of new tests rely on the ability of the backend to introspect "
"column defaults (returning the result as ``Field.default``). You can set the "
"``can_introspect_default`` database feature to ``False`` if your backend "
"doesn't implement this. You may want to review the implementation on the "
"backends that Django includes for reference (:ticket:`24245`)."
msgstr ""
"Sepasang percobaan baru bergantung pada kemampuan dari backend untuk "
"mengintrospeksi kolom awalan (mengembalikan hasil sebagai ``Field."
"default``). Anda dapat menyetel fitur basisdata ``can_introspect_default`` "
"menjadi ``False`` jika backend anda tidak menerapkan ini. Anda mungkin ingin "
"meninjau penerapan pada backend yang Django sertakan untuk acuan (:ticket:"
"`24245`)."

msgid ""
"Registering a global adapter or converter at the level of the DB-API module "
"to handle time zone information of :class:`~datetime.datetime` values passed "
"as query parameters or returned as query results on databases that don't "
"support time zones is discouraged. It can conflict with other libraries."
msgstr ""
"Mendaftarkan penyadur global atau perubah pada tingkat dari modul API-DB "
"untuk menangani informasi zona waktu dari nilai-nilai :class:`~datetime."
"datetime` dilewatkan sebagai parameter permintaan atau dikembalikan sebagai "
"hasil permintaan di basisdata yang tidak mendukung zona waktu adalah kecil. "
"Itu dapat bertentangan dengan pustaka-pustaka lain."

msgid ""
"The recommended way to add a time zone to :class:`~datetime.datetime` values "
"fetched from the database is to register a converter for ``DateTimeField`` "
"in ``DatabaseOperations.get_db_converters()``."
msgstr ""
"Cara yang dianjurkan untuk menambah zona waktu ke nilai-nilai :class:"
"`~datetime.datetime` diambil dari basisdata adalah mendaftarkan perubah "
"untuk ``DateTimeField`` di ``DatabaseOperations.get_db_converters()``."

msgid ""
"The ``needs_datetime_string_cast`` database feature was removed. Database "
"backends that set it must register a converter instead, as explained above."
msgstr ""
"Fitur basisdata ``needs_datetime_string_cast`` telah dipindahkan. Backend "
"basisdata yang disetel harus mebdaftarkan perubah sebagai gantinya, seperti "
"dijalankan diatas."

msgid ""
"The ``DatabaseOperations.value_to_db_<type>()`` methods were renamed to "
"``adapt_<type>field_value()`` to mirror the ``convert_<type>field_value()`` "
"methods."
msgstr ""
"Metode ``DatabaseOperations.value_to_db_<type>()`` telah dinamai menjadi "
"``adapt_<type>field_value()`` untuk mencerminkan metode "
"``convert_<type>field_value()``."

msgid ""
"To use the new ``date`` lookup, third-party database backends may need to "
"implement the ``DatabaseOperations.datetime_cast_date_sql()`` method."
msgstr ""
"Untuk menggunakan pencarian ``date` baru, backend basisdata pihak-ketiga "
"mungkin butuh menerapkan metode ``DatabaseOperations."
"datetime_cast_date_sql()``."

msgid ""
"The ``DatabaseOperations.time_extract_sql()`` method was added. It calls the "
"existing ``date_extract_sql()`` method. This method is overridden by the "
"SQLite backend to add time lookups (hour, minute, second) to :class:`~django."
"db.models.TimeField`, and may be needed by third-party database backends."
msgstr ""
"Metode ``DatabaseOperations.time_extract_sql()``telah ditambahkan. Dia "
"memanggil metode ``date_extract_sql()`` yang ada. Metode ini ditimpan oleh "
"backend SQLite untuk menambah waktu pencarian (jam, menit, detik) pada :"
"class:`~django.db.models.TimeField`, dan mungkin dibutuhkan oleh backend "
"basisdata pihak-ketiga."

msgid ""
"The ``DatabaseOperations.datetime_cast_sql()`` method (not to be confused "
"with ``DatabaseOperations.datetime_cast_date_sql()`` mentioned above) has "
"been removed. This method served to format dates on Oracle long before 1.0, "
"but hasn't been overridden by any core backend in years and hasn't been "
"called anywhere in Django's code or tests."
msgstr ""
"Metode ``DatabaseOperations.datetime_cast_sql()`` (jangan bingung dengan "
"``DatabaseOperations.datetime_cast_date_sql()`` disebutkan diatas) telah "
"dipindahkan. Metode ini melayani untuk membentuk tanggal pada Oracle jauh "
"sebelum 1.0, tetapi itu belum ditimpa oleh backend inti apapun bertahun-"
"tahun dan belum dipanggil dimanapun di kode Django atau percobaan."

msgid ""
"In order to support test parallelization, you must implement the "
"``DatabaseCreation._clone_test_db()`` method and set ``DatabaseFeatures."
"can_clone_databases = True``. You may have to adjust ``DatabaseCreation."
"get_test_db_clone_settings()``."
msgstr ""
"Untuk mendukung paralelisasi percobaan, anda harus menerapkan metode "
"``DatabaseCreation._clone_test_db()`` dan setel ``DatabaseFeatures."
"can_clone_databases = True``. Anda mungkin harus menyesuaikan "
"``DatabaseCreation.get_test_db_clone_settings()``."

msgid "Default settings that were tuples are now lists"
msgstr "Pengaturan awalan yang dimana tuple adalah sekarang daftar."

msgid ""
"The default settings in ``django.conf.global_settings`` were a combination "
"of lists and tuples. All settings that were formerly tuples are now lists."
msgstr ""
"Pengaturan awalan di ``django.conf.global_settings`` dipadukan dari daftar "
"dan tuple. Semua pengaturan yang sebelumnya tuple sekarang adalah daftar. "

msgid "``is_usable`` attribute on template loaders is removed"
msgstr "Atribut ``is_usable`` pada pemuat cetakan dipindahkan"

msgid ""
"Django template loaders previously required an ``is_usable`` attribute to be "
"defined. If a loader was configured in the template settings and this "
"attribute was ``False``, the loader would be silently ignored. In practice, "
"this was only used by the egg loader to detect if setuptools was installed. "
"The ``is_usable`` attribute is now removed and the egg loader instead fails "
"at runtime if setuptools is not installed."
msgstr ""
"Pemuat cetakan Django sebelumnya membutuhkan sebuah atribut ``is_usable`` "
"untuk ditentukan. Jika sebuah pemuat dikonfigurasikan di pengaturan cetakan "
"dan atribut ini adalah ``False``, pemuat akan secara diam mengabaikan. Dalam "
"praktiknya, ini hanya digunakan oleh pemuat telur untuk mengenali jika alat "
"pengaturan telah dipasang. Atribut ``is_usable`` sekarang dipindah dan "
"pemuat telur sebagai gantinya gagal pada waktu jalan jika alat pengaturan "
"tidak dipasang."

msgid "Related set direct assignment"
msgstr "Kumpulan terkait penetapan langsung"

msgid ""
"Direct assignment of related objects in the ORM used to perform a "
"``clear()`` followed by a call to ``add()``. This caused needlessly large "
"data changes and prevented using the :data:`~django.db.models.signals."
"m2m_changed` signal to track individual changes in many-to-many relations."
msgstr ""
"Penugasan langsung dari objek terkait di ORM digunakan untuk melakukan "
"``clear()`` diikuti oleh sebuah panggilan pada ``add()``. Ini menyebabkan "
"sia-sia perubahan data besar dan dicegah menggunakan sinyal :data:`~django."
"db.models.signals.m2m_changed` untuk melacak perubahan individu di hubungan "
"many-to-many."

msgid ""
"Direct assignment now relies on the new :meth:`~django.db.models.fields."
"related.RelatedManager.set` method on related managers which by default only "
"processes changes between the existing related set and the one that's newly "
"assigned. The previous behavior can be restored by replacing direct "
"assignment by a call to ``set()`` with the keyword argument ``clear=True``."
msgstr ""

msgid ""
"``ModelForm``, and therefore ``ModelAdmin``, internally rely on direct "
"assignment for many-to-many relations and as a consequence now use the new "
"behavior."
msgstr ""
"``ModelForm``, dan oleh karena itu ``ModelAdmin``, secara internal "
"bergantung pada penugasan langsung untuk hubungan many-to-many dan sebagai "
"sebuah konsekuensi sekarang menggunakan perilaku baru."

msgid "Filesystem-based template loaders catch more specific exceptions"
msgstr ""
"Pemuat cetakan berdasarkan sistem berkas menangkap lebih pengecualian "
"tertentu "

msgid ""
"When using the :class:`filesystem.Loader <django.template.loaders.filesystem."
"Loader>` or :class:`app_directories.Loader <django.template.loaders."
"app_directories.Loader>` template loaders, earlier versions of Django raised "
"a :exc:`~django.template.TemplateDoesNotExist` error if a template source "
"existed but was unreadable. This could happen under many circumstances, such "
"as if Django didn't have permissions to open the file, or if the template "
"source was a directory. Now, Django only silences the exception if the "
"template source does not exist. All other situations result in the original "
"``IOError`` being raised."
msgstr ""
"Ketika menggunakan pemuat cetakan :class:`filesystem.Loader <django.template."
"loaders.filesystem.Loader>` atau :class:`app_directories.Loader <django."
"template.loaders.app_directories.Loader>`, versi paling awal dari Django "
"memunculkan sebuah kesalahan :exc:`~django.template.TemplateDoesNotExist` "
"jika sebuah sumber cetakan ada tetapi tidak dapat dibaca. Ini dapat terjadi "
"dibawah banyak keadaan, seperti jika Django tidak mempunyai perizinan untuk "
"membuka berkas, atau jika sumber cetakan adalah sebuah direktori. Sekarang, "
"Django hanya mendiamkan pengecualian jika sumber cetakan tidak ada. Semua "
"keadaan lain menghasilkan ``IOError`` asli sedang dimunculkan."

msgid "HTTP redirects no longer forced to absolute URIs"
msgstr "Pengalihan HTTP tidak lagi memaksa ke URI mutlak"

msgid ""
"Relative redirects are no longer converted to absolute URIs. :rfc:`2616` "
"required the ``Location`` header in redirect responses to be an absolute "
"URI, but it has been superseded by :rfc:`7231` which allows relative URIs in "
"``Location``, recognizing the actual practice of user agents, almost all of "
"which support them."
msgstr ""
"Pengalihan relatif tidak lagi dirubah ke URI mutlak. :rfc:`2616` membutuhkan "
"kepala ``Location`` di tanggapan pengalihan menjadi URI mutlak, tetapi itu "
"telah digantikan oleh :rfc:`7231` yang mengizinkan URI relatif dalam "
"``Location``, mengenali praktik sebenarnya dari agen pengguna, kebanyakan "
"semua dari yang mendukung mereka."

msgid ""
"Consequently, the expected URLs passed to ``assertRedirects`` should "
"generally no longer include the scheme and domain part of the URLs. For "
"example, ``self.assertRedirects(response, 'http://testserver/some-url/')`` "
"should be replaced by ``self.assertRedirects(response, '/some-url/')`` "
"(unless the redirection specifically contained an absolute URL)."
msgstr ""

msgid ""
"In the rare case that you need the old behavior (discovered with an ancient "
"version of Apache with ``mod_scgi`` that interprets a relative redirect as "
"an \"internal redirect\"), you can restore it by writing a custom "
"middleware::"
msgstr ""
"Dalam kasus yang jarang bahwa anda butuh perilaku lama (ditemukan dengan "
"versi lama dari Apache dengan ``mod_wsgi`` yang menterjemahkan pengalihan "
"relatif sebagai sebuah \"internal redirect\"), anda dapat memulihkan itu "
"dengan menulis penyesuaian middleware::"

msgid "Dropped support for PostgreSQL 9.0"
msgstr "Dukungan dibuang untuk PostgreSQL 9.0"

msgid ""
"Upstream support for PostgreSQL 9.0 ended in September 2015. As a "
"consequence, Django 1.9 sets 9.1 as the minimum PostgreSQL version it "
"officially supports."
msgstr ""
"Dukungan hulu untuk PostgreSQL 9.0 berakhir di September 2015. Sebagai "
"konsekuensinya, Django 1.9 menyetel PostgreSQL 9.1 sebagai versi minimal dia "
"secara resmi dukung."

msgid "Dropped support for Oracle 11.1"
msgstr "Dukungan dibuang untuk Oracle 11.1"

msgid ""
"Upstream support for Oracle 11.1 ended in August 2015. As a consequence, "
"Django 1.9 sets 11.2 as the minimum Oracle version it officially supports."
msgstr ""
"Dukungan hulu untuk PostgreSQL 11.1 berakhir di Agustus 2015. Sebagai "
"konsekuensinya, Django 1.9 menyetel PostgreSQL 11.2 sebagai versi minimal "
"Oracle secara resmi dukung."

msgid "Bulk behavior of ``add()`` method of related managers"
msgstr ""
"Perilaku dalam jumlah besar dari metode ``add()`` dari pengelola terkait"

msgid ""
"To improve performance, the ``add()`` methods of the related managers "
"created by ``ForeignKey`` and ``GenericForeignKey`` changed from a series of "
"``Model.save()`` calls to a single ``QuerySet.update()`` call. The change "
"means that ``pre_save`` and ``post_save`` signals aren't sent anymore. You "
"can use the ``bulk=False`` keyword argument to revert to the previous "
"behavior."
msgstr ""
"Untuk memperbaiki penampilan, metode ``add()`` dari pengelola terkait dibuat "
"oleh ``ForeignKey`` dan ``GenericForeignKey`` berubah dari rangkaian dari "
"``Model.save()`` panggilan ke satu panggilan ``QuerySet.update()`` tunggal. "
"Perubahan berarti bahwa sinyal ``pre_save`` dan ``post_save`` tidak dikirm "
"lagi. Anda dapat menggunakan argumen kata kunci ``bulk=False`` untuk kembali "
"ke perilaku sebelumnya."

msgid "Template ``LoaderOrigin`` and ``StringOrigin`` are removed"
msgstr "Cetakan ``LoaderOrigin`` dan ``StringOrigin`` dipindahkan"

msgid ""
"In previous versions of Django, when a template engine was initialized with "
"debug as ``True``, an instance of ``django.template.loader.LoaderOrigin`` or "
"``django.template.base.StringOrigin`` was set as the origin attribute on the "
"template object. These classes have been combined into :class:`~django."
"template.base.Origin` and is now always set regardless of the engine debug "
"setting. For a minimal level of backwards compatibility, the old class names "
"will be kept as aliases to the new ``Origin`` class until Django 2.0."
msgstr ""
"Di versi sebelumnya dari Django, ketika mesin cetakan diinisialisasikan "
"dengan mencari kesalahan sebagai ``True``, sebuah instance dari ``django."
"template.loader.LoaderOrigin`` atau ``django.template.base.StringOrigin`` "
"disetel sebagai atribut asli di obyek cetakan. Kelas-kelas ini telah "
"dipadukan kedalam :class:`~django.template.base.Origin` dan sekarang selalu "
"disetel tanpa memperhatikan dari pengaturan mesin mencari kesalahan. Untuk "
"tingkat minimal dari kesesuaian kebelakang, nama-nama kelas lama akan "
"disimpan sebagai nama lain ke kelas ``Origin`` baru sampai Django 2.0."

msgid "Changes to the default logging configuration"
msgstr "Perubahan pada konfigurasi pencatatan awalan"

msgid ""
"To make it easier to write custom logging configurations, Django's default "
"logging configuration no longer defines ``django.request`` and ``django."
"security`` loggers. Instead, it defines a single ``django`` logger, filtered "
"at the ``INFO`` level, with two handlers:"
msgstr ""
"Untuk membuatnya lebih mudah menulis penyesuaian konfigurasi pencatatan, "
"konfigurasi pencatatan awalan Django tidak lagi menentukan pencatat ``django."
"request`` dan ``django.security``. Sebagai gantinya, itu menentukan pencatat "
"``django`` tunggal, disaring pada tingkat ``INFO``, dengan dua penangan:"

msgid ""
"``console``: filtered at the ``INFO`` level and only active if "
"``DEBUG=True``."
msgstr ""
"``console``: disaring di tingkat ``INFO`` dan hanya aktif jika "
"``DEBUG=True``."

msgid ""
"``mail_admins``: filtered at the ``ERROR`` level and only active if "
"``DEBUG=False``."
msgstr ""
"``mail_admins``: disaring di tingkat ``ERROR`` dan hanya aktif jika "
"``DEBUG=True``."

msgid ""
"If you aren't overriding Django's default logging, you should see minimal "
"changes in behavior, but you might see some new logging to the ``runserver`` "
"console, for example."
msgstr ""
"Jika anda tidak menimpa pencatat awalan Django, anda harus melihat minimal "
"perubahan di perilaku, tetapi anda mungkin melihat beberapa pencatatan baru "
"pada konsol ``runserver``, sebagai contoh."

msgid ""
"If you are overriding Django's default logging, you should check to see how "
"your configuration merges with the new defaults."
msgstr ""
"Jika anda menimpa pencatat awalan Django, anda harus memeriksa untuk melihat "
"bagaimana konfigurasi anda bergabung dengan awalan baru."

msgid "``HttpRequest`` details in error reporting"
msgstr "Rincian ``HttpRequest`` dalam pelaporan kesalahan"

msgid ""
"It was redundant to display the full details of the :class:`~django.http."
"HttpRequest` each time it appeared as a stack frame variable in the HTML "
"version of the debug page and error email. Thus, the HTTP request will now "
"display the same standard representation as other variables "
"(``repr(request)``). As a result, the ``ExceptionReporterFilter."
"get_request_repr()`` method and the undocumented ``django.http."
"build_request_repr()`` function were removed."
msgstr ""
"Itu berlebihan menampilkan rincian penuh dari :class:`~django.http."
"HttpRequest` setiap kali itu muncul sebagai variabel tumpukan bingkai dalam "
"versi HTML dari halaman mencari kesalahan dan kesalahan surel. Dengan "
"demikian, permintaan HTTP akan sekarang menampilkan perwakilan standar sama "
"seperti variabel lain, (``repr(request)``). Hasilnya, metode "
"``ExceptionReporterFilter.get_request_repr()`` dan tidak terdokumentasi "
"fungsi ``django.http.build_request_repr()`` dipindahkan."

msgid ""
"The contents of the text version of the email were modified to provide a "
"traceback of the same structure as in the case of AJAX requests. The "
"traceback details are rendered by the ``ExceptionReporter."
"get_traceback_text()`` method."
msgstr ""
"Isi dari versi teks dari surel dirubah untuk menyediakan jejak kebelakang "
"dari struktur sama seperti dalam kasus permintaan AJAX. Rincian jejak "
"kebelakang dibangun oleh metode ``ExceptionReporter.get_traceback_text()``."

msgid "Removal of time zone aware global adapters and converters for datetimes"
msgstr ""
"Pemindahan dari sadar zona waktu penyadur global dan perubah untuk datetime"

msgid ""
"Django no longer registers global adapters and converters for managing time "
"zone information on :class:`~datetime.datetime` values sent to the database "
"as query parameters or read from the database in query results. This change "
"affects projects that meet all the following conditions:"
msgstr ""
"Django tidak lagi mendaftarkan penyadur global dan perubah untuk mengelola "
"informasi zona waktu pada nilai-nilai :class:`~datetime.datetime` dikirim ke "
"basisdata sebagai permintaan parameter atau membaca dari basisdata dalam "
"hasil permintaan. Perubahan ini mempengaruhi proyek yang memenuhi semua "
"kondisi berikut:"

msgid "The :setting:`USE_TZ` setting is ``True``."
msgstr "Pengaturan :setting:`USE_TZ` adalah ``True``."

msgid ""
"The database is SQLite, MySQL, Oracle, or a third-party database that "
"doesn't support time zones. In doubt, you can check the value of "
"``connection.features.supports_timezones``."
msgstr ""
"Basisdata adalah SQLite, MySQL, Oracle, atau sebuah basisdata pihak-ketiga "
"yang tidak mendukung zona waktu. Dalam keraguan, anda dapat memeriksa nilai "
"dari ``connection.features.supports_timezones``."

msgid ""
"The code queries the database outside of the ORM, typically with ``cursor."
"execute(sql, params)``."
msgstr ""
"Kode meminta basisdata diluar dari ORM, khususnya dengan ``cursor."
"execute(sql, params)``."

msgid ""
"If you're passing aware :class:`~datetime.datetime` parameters to such "
"queries, you should turn them into naive datetimes in UTC::"
msgstr ""
"Jika anda sedang melewatkan parameter :class:`~datetime.datetime` kesadaran "
"ke permintaan tersebut, anda harus merubah mereka menjadi datetime yang "
"tidak dibuat-buat di UTC."

msgid ""
"If you fail to do so, the conversion will be performed as in earlier "
"versions (with a deprecation warning) up until Django 1.11. Django 2.0 won't "
"perform any conversion, which may result in data corruption."
msgstr ""
"Jika anda gagal untuk melakukannya, perubahan akan dilakukan seperti di "
"versi paling awal (dengan peringatan pengusangan) sampai Django 1.11. Django "
"2.0 tidak akan melakukan perubahan apapun, yang mungkin menghasilkan di "
"kerusakan data."

msgid ""
"If you're reading :class:`~datetime.datetime` values from the results, they "
"will be naive instead of aware. You can compensate as follows::"
msgstr ""
"Jika anda sedang membaca nilai-nilai :class:`~datetime.datetime` dari hasil, "
"mereka akan menjadi tidak dibuat-buat daripada sadar. Anda dapat mengimbangi "
"sebagai berikut::"

msgid ""
"You don't need any of this if you're querying the database through the ORM, "
"even if you're using :meth:`raw() <django.db.models.query.QuerySet.raw>` "
"queries. The ORM takes care of managing time zone information."
msgstr ""
"Anda tidak memerlukan semua ini jika anda sedang meminta basisdata melalui "
"ORM, bahkan jika anda sedang menggunakan permintaan :meth:`raw() <django.db."
"models.query.QuerySet.raw>`. ORM merawat pengelolaan informasi zona waktu."

msgid "Template tag modules are imported when templates are configured"
msgstr "Modul etiket cetakan diimpor ketika cetakan sedang dikonfigurasikan"

msgid ""
"The :class:`~django.template.backends.django.DjangoTemplates` backend now "
"performs discovery on installed template tag modules when instantiated. This "
"update enables libraries to be provided explicitly via the ``'libraries'`` "
"key of :setting:`OPTIONS <TEMPLATES-OPTIONS>` when defining a :class:"
"`~django.template.backends.django.DjangoTemplates` backend. Import or syntax "
"errors in template tag modules now fail early at instantiation time rather "
"than when a template with a :ttag:`{% load %}<load>` tag is first compiled."
msgstr ""
"Backend :class:`~django.template.backends.django.DjangoTemplates` sekarang "
"melakukan penemuan pada modul etiket cetakan terpasang ketika "
"diinstasiasikan. Perbaharuan ini mengadakan pustaka untuk disediakan jelas "
"melalui kuncu ``'libraries'`` dari :setting:`OPTIONS <TEMPLATES-OPTIONS>` "
"ketika menentukan sebuah backend :class:`~django.template.backends.django."
"DjangoTemplates` . Impor atau kesalahan sintaksis dalam modul etiket cetakan "
"sekarang gagal awal pada waktu instasiasi daripada ketika sebuah cetakan "
"dengan sebuah etiket :ttag:`{% load %}<load>` adalah pertama yang disusun."

msgid "``django.template.base.add_to_builtins()`` is removed"
msgstr "``django.template.base.add_to_builtins()`` dipindahkan"

msgid ""
"Although it was a private API, projects commonly used ``add_to_builtins()`` "
"to make template tags and filters available without using the :ttag:`{% load "
"%}<load>` tag. This API has been formalized. Projects should now define "
"built-in libraries via the ``'builtins'`` key of :setting:`OPTIONS "
"<TEMPLATES-OPTIONS>` when defining a :class:`~django.template.backends."
"django.DjangoTemplates` backend."
msgstr ""
"Meskipun itu adalah API pribadi, proyek umumnya menggunakan "
"``add_to_builtins()`` untuk membuat etiket cetakan dan ketersedian penyaring "
"tanpa menggunakan etiket :ttag:`{% load %}<load>`. API ini telah dirumuskan. "
"Proyek harus sekarang menentukan pustaka siap-pakai melalui kunci "
"``'builtins'`` dari :setting:`OPTIONS <TEMPLATES-OPTIONS>` ketika menentukan "
"backend :class:`~django.template.backends.django.DjangoTemplates`."

msgid "``simple_tag`` now wraps tag output in ``conditional_escape``"
msgstr ""
"``simple_tag`` sekarang membungkus etiket keluaran di ``conditional_escape``"

msgid ""
"In general, template tags do not autoescape their contents, and this "
"behavior is :ref:`documented <tags-auto-escaping>`. For tags like :class:"
"`~django.template.Library.inclusion_tag`, this is not a problem because the "
"included template will perform autoescaping. For ``assignment_tag()``, the "
"output will be escaped when it is used as a variable in the template."
msgstr ""
"Secara umum, etiket cetakan tidak meloloskan otomatis isi mereka, dan "
"perilaku ini adalah :ref:`documented <tags-auto-escaping>`. Untuk etiket-"
"etiket seperti :class:`~django.template.Library.inclusion_tag`, ini adalah "
"bukan sebuah masalah karena cetakan disertakan akan melakukan pelolosan "
"otomatis. Untuk ``assignment_tag()``, keluaran akan diloloskan ketika itu "
"adalah digunakan sebagai sebuah variabel di cetakan."

msgid ""
"For the intended use cases of :class:`~django.template.Library.simple_tag`, "
"however, it is very easy to end up with incorrect HTML and possibly an XSS "
"exploit. For example::"
msgstr ""
"Untuk kasus-kasus penggunaan yang diharapkan dari :class:`~django.template."
"Library.simple_tag`, bagaimanapun, itu adakah mudah mengakhiri dengan HTML "
"yang tidak benar dan kemungkinan sebuah serangan XSS. Sebagai contoh:: "

msgid ""
"In older versions of Django, this will be an XSS issue because ``user."
"first_name`` is not escaped."
msgstr ""
"Di versi terlama dari Django, ini akan menjadi masalah XSS karena ``user."
"first_name`` tidak diloloskan."

msgid ""
"In Django 1.9, this is fixed: if the template context has "
"``autoescape=True`` set (the default), then ``simple_tag`` will wrap the "
"output of the tag function with :func:`~django.utils.html."
"conditional_escape`."
msgstr ""
"Di Django 1.9, ini diperbaiki: jika konteks cetakan mempunyai "
"``autoescape=True`` setel (awal) kemudian ``simple_tag`` akan membungkus "
"keluaran dari fungsi etiket dengan :func:`~django.utils.html."
"conditional_escape`."

msgid ""
"To fix your ``simple_tag``\\s, it is best to apply the following practices:"
msgstr ""
"Untuk memperbaiki ``simple_tag`` anda, itu adalah terbaik untuk "
"memberlakukan praktik berikut:"

msgid ""
"Any code that generates HTML should use either the template system or :func:"
"`~django.utils.html.format_html`."
msgstr ""
"Kode apapun yang membangkitkan HTML harus menggunakan salah satu sistem "
"cetakan atau :func:`~django.utils.html.format_html`."

msgid ""
"If the output of a ``simple_tag`` needs escaping, use :func:`~django.utils."
"html.escape` or :func:`~django.utils.html.conditional_escape`."
msgstr ""
"Jika keluaran dari ``simple_tag`` butuh meloloskan, gunakan :func:`~django."
"utils.html.escape` atau :func:`~django.utils.html.conditional_escape`."

msgid ""
"If you are absolutely certain that you are outputting HTML from a trusted "
"source (e.g. a CMS field that stores HTML entered by admins), you can mark "
"it as such using :func:`~django.utils.safestring.mark_safe`."
msgstr ""
"Jika anda benar-benar yakin bahwa anda sedang mengeluarkan HTML dari sumber "
"terpercaya (sebagai contoh bidang CMS yang menyimpan HTML dimasukkan oleh "
"admin), anda dapat menandai itu saja menggunakan :func:`~django.utils."
"safestring.mark_safe`."

msgid ""
"Tags that follow these rules will be correct and safe whether they are run "
"on Django 1.9+ or earlier."
msgstr ""
"Etiket yang mengikuti aturan ini akan benar dan aman apakah mereka mereka "
"berjalan di Django 1.9+ atau paling awal."

msgid "``Paginator.page_range``"
msgstr "``Paginator.page_range``"

msgid ""
":attr:`Paginator.page_range <django.core.paginator.Paginator.page_range>` is "
"now an iterator instead of a list."
msgstr ""
":attr:`Paginator.page_range <django.core.paginator.Paginator.page_range>` "
"sekarang sebuah perulangan daripada sebuah daftar."

msgid ""
"In versions of Django previous to 1.8, ``Paginator.page_range`` returned a "
"``list`` in Python 2 and a ``range`` in Python 3. Django 1.8 consistently "
"returned a list, but an iterator is more efficient."
msgstr ""
"Di versi dari Django sebelum 1.8, ``Paginator.page_range`` mengembalikan "
"sebuah ``list`` di Python 2 dan ``range`` di Python 3. Django 1.8 terus-"
"menerus mengembalikan sebuah daftar, tetapi sebuah perulang adalah lebih "
"efesien."

msgid ""
"Existing code that depends on ``list`` specific features, such as indexing, "
"can be ported by converting the iterator into a ``list`` using ``list()``."
msgstr ""
"Kode yang ada yang bergantung pada fitus khusus ``list``, seperti "
"pengindeksan, dapat dihubungkan dengan merubah perulang kedalam sebuah "
"``list`` menggunakan ``list()``."

msgid "Implicit ``QuerySet`` ``__in`` lookup removed"
msgstr "``QuerySet`` tersirat ``__in`` pencarian dipindahkan"

msgid "In earlier versions, queries such as::"
msgstr "Di versi paling awal, permintaan seperti::"

msgid "would implicitly convert to::"
msgstr "akan tidak langsung berubah ke::"

msgid "resulting in SQL like ``\"related_id IN (SELECT id FROM ...)\"``."
msgstr ""
"mengembalikan dalam SQL seperti ``\"related_id IN (SELECT id FROM ...)\"``."

msgid ""
"This implicit ``__in`` no longer happens so the \"IN\" SQL is now \"=\", and "
"if the subquery returns multiple results, at least some databases will throw "
"an error."
msgstr ""
"Tersirat ``__in``  ini tidak lagi terjadi jadi \"IN\" SQL adalah sekarang "
"\"=\", dan jika sub permintaan mengembalikan hasil banyak, setidaknya "
"beberapa basisdata akan melempar sebuah kesalahan."

msgid "``contrib.admin`` browser support"
msgstr "Dukungan perambah ``contrib.admin``"

msgid ""
"The admin no longer supports Internet Explorer 8 and below, as these "
"browsers have reached end-of-life."
msgstr ""
"Admin tidak lagi mendukung Internet Explorer 8 dan dibawah, ketika peramban "
"ini telah mencapai akhir-dari-hidup."

msgid ""
"CSS and images to support Internet Explorer 6 and 7 have been removed. PNG "
"and GIF icons have been replaced with SVG icons, which are not supported by "
"Internet Explorer 8 and earlier."
msgstr ""
"CSS dan gambar untuk mendukung Internet Explorer 6 dan 7 telah dipindahkan. "
"Ikon PNG dan GIF telah diganti dengan ikon SVG, yang tidak didukung oleh "
"Internet Explorer 8 dan sebelumnya."

msgid ""
"The jQuery library embedded in the admin has been upgraded from version "
"1.11.2 to 2.1.4. jQuery 2.x has the same API as jQuery 1.x, but does not "
"support Internet Explorer 6, 7, or 8, allowing for better performance and a "
"smaller file size. If you need to support IE8 and must also use the latest "
"version of Django, you can override the admin's copy of jQuery with your own "
"by creating a Django application with this structure:"
msgstr ""

msgid "``SyntaxError`` when installing Django setuptools 5.5.x"
msgstr "``SyntaxError`` ketika memasang alat penyetelan Django 5.5.x"

msgid "When installing Django 1.9 or 1.9.1 with setuptools 5.5.x, you'll see:"
msgstr ""

msgid ""
"It's safe to ignore these errors (Django will still install just fine), but "
"you can avoid them by upgrading setuptools to a more recent version. If "
"you're using pip, you can upgrade pip using ``python -m pip install -U pip`` "
"which will also upgrade setuptools. This is resolved in later versions of "
"Django as described in the :doc:`/releases/1.9.2`."
msgstr ""

msgid ""
"The jQuery static files in ``contrib.admin`` have been moved into a ``vendor/"
"jquery`` subdirectory."
msgstr ""
"Berkas-berkas tetap jQuery di ``contrib.admin`` telah dipindahkan kedalam "
"subdirektori ``vendor/jquery``."

msgid ""
"The text displayed for null columns in the admin changelist ``list_display`` "
"cells has changed from ``(None)`` (or its translated equivalent) to ``-`` (a "
"dash)."
msgstr ""
"Teks ditampilkan untuk kolom null di daftar rubah admin sel-sel "
"``list_display`` telah berubah dari ``(None)`` (atau terjemahannya setara) "
"menjadi ``-`` (sebuah tanda garis)."

msgid ""
"``django.http.responses.REASON_PHRASES`` and ``django.core.handlers.wsgi."
"STATUS_CODE_TEXT`` have been removed. Use Python's Standard Library "
"instead: :data:`http.client.responses` for Python 3 and `httplib.responses`_ "
"for Python 2."
msgstr ""

msgid "``ValuesQuerySet`` and ``ValuesListQuerySet`` have been removed."
msgstr "``ValuesQuerySet`` dan ``ValuesListQuerySet`` telah dipindahkan."

msgid ""
"The ``admin/base.html`` template no longer sets ``window."
"__admin_media_prefix__`` or ``window.__admin_utc_offset__``. Image "
"references in JavaScript that used that value to construct absolute URLs "
"have been moved to CSS for easier customization. The UTC offset is stored on "
"a data attribute of the ``<body>`` tag."
msgstr ""
"Cetakan ``admin/base.html`` tidak lagi menyetel ``window."
"__admin_media_prefix__`` atau ``window.__admin_utc_offset__``. Acuan gambar "
"di JavaScript yang menggunakan nilai itu untuk membangun URL mutlak telah "
"dipindahkan ke CSS untuk penyesuaian yang lebih mudah. Perimbangan UTC "
"disimpan pada sebuah atribut data dari etiket ``<body>``."

msgid ""
"``CommaSeparatedIntegerField`` validation has been refined to forbid values "
"like ``','``, ``',1'``, and ``'1,,2'``."
msgstr ""
"Pengesahan ``CommaSeparatedIntegerField`` telah diolah untuk melarang nilai-"
"nilai seperti  ``','``, ``',1'``, dan ``'1,,2'``."

msgid ""
"Form initialization was moved from the :meth:`ProcessFormView.get() <django."
"views.generic.edit.ProcessFormView.get>` method to the new :meth:`FormMixin."
"get_context_data() <django.views.generic.edit.FormMixin.get_context_data>` "
"method. This may be backwards incompatible if you have overridden the "
"``get_context_data()`` method without calling ``super()``."
msgstr ""
"Inisialisasi formulir telah dipindahkan dari metode :meth:`ProcessFormView."
"get() <django.views.generic.edit.ProcessFormView.get>` ke metode :meth:"
"`FormMixin.get_context_data() <django.views.generic.edit.FormMixin."
"get_context_data>` baru. Ini mungkin ketidaksesuaian kebelakang jika anda "
"telah menimpa metode ``get_context_data()`` tanpa memanggil ``super()``."

msgid "Support for PostGIS 1.5 has been dropped."
msgstr "Dukungan untuk PostGIS 1.5 telah dibuang."

msgid ""
"The ``django.contrib.sites.models.Site.domain`` field was changed to be :"
"attr:`~django.db.models.Field.unique`."
msgstr ""
"Bidang ``django.contrib.sites.models.Site.domain`` telah dirubah menjadi :"
"attr:`~django.db.models.Field.unique`."

msgid ""
"In order to enforce test isolation, database queries are not allowed by "
"default in :class:`~django.test.SimpleTestCase` tests anymore. You can "
"disable this behavior by setting the ``allow_database_queries`` class "
"attribute to ``True`` on your test class."
msgstr ""

msgid ""
"``ResolverMatch.app_name`` was changed to contain the full namespace path in "
"the case of nested namespaces. For consistency with ``ResolverMatch."
"namespace``, the empty value is now an empty string instead of ``None``."
msgstr ""
"``ResolverMatch.app_name`` telah dirubah untuk mengandung jalur namespace "
"penuh dalam aksus dari namespace bersarang. Untuk kemantapan dengan "
"``ResolverMatch.namespace``, nilai kosong adalah sekarang sebuah string "
"kosong sebagai gantinya ``None``."

msgid "For security hardening, session keys must be at least 8 characters."
msgstr "Untuk memperkeras keamanan, kunci sesi harus setidaknya 8 karakter."

msgid ""
"Private function ``django.utils.functional.total_ordering()`` has been "
"removed. It contained a workaround for a ``functools.total_ordering()`` bug "
"in Python versions older than 2.7.3."
msgstr ""
"Fungsi pribadi ``django.utils.functional.total_ordering()`` telah "
"dipindahkan. Itu mengandung sebuah pemecahan untuk kesalahan ``functools."
"total_ordering()`` di Python versi lebih lama dari 2.7.3."

msgid ""
"XML serialization (either through :djadmin:`dumpdata` or the syndication "
"framework) used to output any characters it received. Now if the content to "
"be serialized contains any control characters not allowed in the XML 1.0 "
"standard, the serialization will fail with a :exc:`ValueError`."
msgstr ""
"Serialisasi XML (antara melalui :djadmin:`dumpdata` atau the syndication "
"framework) digunakan untuk mengeluarkan karakter apapun itu terima. Sekarang "
"jika isi untuk diserialisasikan mengandung karakter kendali apapun tidak "
"diizinkan di standar XML 1.0, serialisasi akan gagal dengan sebuah :exc:"
"`ValueError`."

msgid ""
":class:`~django.forms.CharField` now strips input of leading and trailing "
"whitespace by default. This can be disabled by setting the new :attr:"
"`~django.forms.CharField.strip` argument to ``False``."
msgstr ""
":class:`~django.forms.CharField` sekarang mengupas masukan dari awalan dan "
"buntutan ruang kosong secara awalan. Ini dapat ditiadakan dengan mengatur "
"argumen :attr:`~django.forms.CharField.strip` baru menjadi ``False``."

msgid ""
"Template text that is translated and uses two or more consecutive percent "
"signs, e.g. ``\"%%\"``, may have a new ``msgid`` after ``makemessages`` is "
"run (most likely the translation will be marked fuzzy). The new ``msgid`` "
"will be marked ``\"#, python-format\"``."
msgstr ""

msgid ""
"If neither :attr:`request.current_app <django.http.HttpRequest.current_app>` "
"nor :class:`Context.current_app <django.template.Context>` are set, the :"
"ttag:`url` template tag will now use the namespace of the current request. "
"Set ``request.current_app`` to ``None`` if you don't want to use a namespace "
"hint."
msgstr ""
"Jika tidak ada :attr:`request.current_app <django.http.HttpRequest."
"current_app>` maupun :class:`Context.current_app <django.template.Context>` "
"disetel, etiket cetakan :ttag:`url` akan sekarang menggunakan namespace dari "
"permintaan saat ini. Setel ``request.current_app`` menjadi ``None`` jika "
"anda tidak ingin menggunakan petunjuk namespace."

msgid ""
"The :setting:`SILENCED_SYSTEM_CHECKS` setting now silences messages of all "
"levels. Previously, messages of ``ERROR`` level or higher were printed to "
"the console."
msgstr ""
"Pengaturan :setting:`SILENCED_SYSTEM_CHECKS` sekarang pesan diam dari semua "
"tingkatan. Sebelumnya, pesan dari tingkat ``ERROR`` atau lebih tinggi "
"dicetak ke konsol."

msgid ""
"The ``FlatPage.enable_comments`` field is removed from the ``FlatPageAdmin`` "
"as it's unused by the application. If your project or a third-party app "
"makes use of it, :ref:`create a custom ModelAdmin <flatpages-admin>` to add "
"it back."
msgstr ""
"Bidang ``FlatPage.enable_comments`` dipindahkan dari ``FlatPageAdmin`` "
"ketika itu tidak digunakan oleh aplikasi. Jika proyek anda atau aplikasi "
"pihak-ketiga menggunakannya, :ref:`create a custom ModelAdmin <flatpages-"
"admin>` untuk menambahkan itu kembali."

msgid ""
"The return value of :meth:`~django.test.runner.DiscoverRunner."
"setup_databases` and the first argument of :meth:`~django.test.runner."
"DiscoverRunner.teardown_databases` changed. They used to be ``(old_names, "
"mirrors)`` tuples. Now they're just the first item, ``old_names``."
msgstr ""
"Nilai kembalian dari :meth:`~django.test.runner.DiscoverRunner."
"setup_databases` dan argumen pertama dari :meth:`~django.test.runner."
"DiscoverRunner.teardown_databases` berubah. Mereka dulu tuple ``(old_names, "
"mirrors)``. Sekarang mereka hanya barang pertama, ``old_names``."

msgid ""
"By default :class:`~django.test.LiveServerTestCase` attempts to find an "
"available port in the 8081-8179 range instead of just trying port 8081."
msgstr ""
"Secara awalan :class:`~django.test.LiveServerTestCase` berusaha menemukan "
"port tersedia di jangkauan 8081-8179 sebagai gantinya dari hanya mencoba "
"port 8081."

msgid ""
"The system checks for :class:`~django.contrib.admin.ModelAdmin` now check "
"instances rather than classes."
msgstr ""
"Sistem pemeriksaan untuk :class:`~django.contrib.admin.ModelAdmin` sekarang "
"memeriksa instance daripada kelas-kelas."

msgid ""
"The private API to apply mixed migration plans has been dropped for "
"performance reasons. Mixed plans consist of a list of migrations where some "
"are being applied and others are being unapplied."
msgstr ""
"API pribadi untuk memberlakukan rencana perpindahan campuran telah dibuang "
"untuk alasan penampilan. Perpindahan campuran terdiri dari sebuah daftar "
"perpindahan dimana beberapa sedang diberlakukan dan lainnya tidak "
"diberlakukan."

msgid ""
"The related model object descriptor classes in ``django.db.models.fields."
"related`` (private API) are moved from the ``related`` module to "
"``related_descriptors`` and renamed as follows:"
msgstr ""
"Kelas-kelas penggambar obyek yang terkait di ``django.db.models.fields."
"related`` (API pribadi) dipindahkan dari modul ``related`` ke "
"``related_descriptors`` dan dinamai sebagai berikut:"

msgid ""
"``ReverseSingleRelatedObjectDescriptor`` is ``ForwardManyToOneDescriptor``"
msgstr ""
"`ReverseSingleRelatedObjectDescriptor`` adalah ``ForwardManyToOneDescriptor``"

msgid "``SingleRelatedObjectDescriptor`` is ``ReverseOneToOneDescriptor``"
msgstr "``SingleRelatedObjectDescriptor`` adalah ``ReverseOneToOneDescriptor``"

msgid "``ForeignRelatedObjectsDescriptor`` is ``ReverseManyToOneDescriptor``"
msgstr ""
"``ForeignRelatedObjectsDescriptor`` adalah ``ReverseManyToOneDescriptor``"

msgid "``ManyRelatedObjectsDescriptor`` is ``ManyToManyDescriptor``"
msgstr "``ManyRelatedObjectsDescriptor`` adalah ``ManyToManyDescriptor``"

msgid ""
"If you implement a custom :data:`~django.conf.urls.handler404` view, it must "
"return a response with an HTTP 404 status code. Use :class:`~django.http."
"HttpResponseNotFound` or pass ``status=404`` to the :class:`~django.http."
"HttpResponse`. Otherwise, :setting:`APPEND_SLASH` won't work correctly with "
"``DEBUG=False``."
msgstr ""
"Jika anda menerapkan sebuah penyesuaian tampilan :data:`~django.conf.urls."
"handler404`, itu harus mengembalikan sebuah tanggapan dengan kode keadaan "
"HTTP 404. Gunakan :class:`~django.http.HttpResponseNotFound` atau lewatkan "
"``status=404`` ke :class:`~django.http.HttpResponse`. Jika tidak :setting:"
"`APPEND_SLASH` tidak akan bekerja dengan benar dengan ``DEBUG=False``."

msgid "Features deprecated in 1.9"
msgstr "Fitur usang di 1.9"

msgid "``assignment_tag()``"
msgstr "``assignment_tag()``"

msgid ""
"Django 1.4 added the ``assignment_tag`` helper to ease the creation of "
"template tags that store results in a template variable. The :meth:`~django."
"template.Library.simple_tag` helper has gained this same ability, making the "
"``assignment_tag`` obsolete. Tags that use ``assignment_tag`` should be "
"updated to use ``simple_tag``."
msgstr ""
"Django 1.4 menambahkan pembantu ``assignment_tag`` untuk memudahkan "
"pembuatan dari etiket cetakan tang menyimpan hasil di variabel cetakan. "
"Pembantu :meth:`~django.template.Library.simple_tag` telah mendapatkan "
"kemampuan sama ini, membuat ``assignment_tag`` usang. Etiket yang "
"menggunakan ``assignment_tag`` harus diperbaharui untuk menggunakan "
"``simple_tag``."

msgid "``{% cycle %}`` syntax with comma-separated arguments"
msgstr "Sintaksis `{% cycle %}`` dengan argumen dipisah-koma"

msgid ""
"The :ttag:`cycle` tag supports an inferior old syntax from previous Django "
"versions:"
msgstr ""
"Etiket :ttag:`cycle` mendukung sintaksis lama rendah dari versi Django "
"sebelumnya:"

msgid ""
"Its parsing caused bugs with the current syntax, so support for the old "
"syntax will be removed in Django 1.10 following an accelerated deprecation."
msgstr ""
"Penguraiannya menyebabkan kesalahan dengan sintaksis saat ini, jadi dukungan "
"untuk sintaksis lama akan dipindahkan di Django 1.10 mengikuti percepatan "
"pengusangan."

msgid "``ForeignKey`` and ``OneToOneField`` ``on_delete`` argument"
msgstr "Argumen ``ForeignKey`` dan ``OneToOneField`` ``on_delete``"

msgid ""
"In order to increase awareness about cascading model deletion, the "
"``on_delete`` argument of ``ForeignKey`` and ``OneToOneField`` will be "
"required in Django 2.0."
msgstr ""
"Untuk meningkatkan kesadaran tentang penghapusan model ke bawah, argumen "
"``on_delete`` dari ``ForeignKey`` dan ``OneToOneField`` akan diwajibkan di "
"Django 2.0."

msgid ""
"Update models and existing migrations to explicitly set the argument. Since "
"the default is ``models.CASCADE``, add ``on_delete=models.CASCADE`` to all "
"``ForeignKey`` and ``OneToOneField``\\s that don't use a different option. "
"You can also pass it as the second positional argument if you don't care "
"about compatibility with older versions of Django."
msgstr ""
"Model diperbaharui dan perpindahan yang ada untuk jelasnya menyetel argumen. "
"Sejak awalan adalah ``models.CASCADE``, tambah ``on_delete=models.CASCADE`` "
"untuk semua ``ForeignKey`` dan ``OneToOneField`` yang tidak menggunakan "
"pilihan berbeda. Anda dapat juga melewatkannya sebagai argumen penemparan "
"kedua jika anda tidak peduli tentang penyesuaian dengan versi terlama dari "
"Django"

msgid "``Field.rel`` changes"
msgstr "``Field.rel`` berubah"

msgid ""
"``Field.rel`` and its methods and attributes have changed to match the "
"related fields API. The ``Field.rel`` attribute is renamed to "
"``remote_field`` and many of its methods and attributes are either changed "
"or renamed."
msgstr ""
"``Field.rel`` dan metode dan atributnya telah berubah untuk mencocokkan API "
"bidang terkait. Atribut ``Field.rel`` dinamai kembali menjadi "
"``remote_field`` dan banyak dari metodenya dan atribut baik dirubah atau "
"dinamai kembali."

msgid ""
"The aim of these changes is to provide a documented API for relation fields."
msgstr ""
"Tujuan dari perubahan ini adalah menyediakan sebuah dokumentasi API untuk "
"hubungan bidang."

msgid "``GeoManager`` and ``GeoQuerySet`` custom methods"
msgstr "Metode penyesuaian ``GeoManager`` dan ``GeoQuerySet``"

msgid ""
"All custom ``GeoQuerySet`` methods (``area()``, ``distance()``, "
"``gml()``, ...) have been replaced by equivalent geographic expressions in "
"annotations (see in new features). Hence the need to set a custom "
"``GeoManager`` to GIS-enabled models is now obsolete. As soon as your code "
"doesn't call any of the deprecated methods, you can simply remove the "
"``objects = GeoManager()`` lines from your models."
msgstr ""
"Semua penyesuaian metode ``GeoQuerySet`` (``area()``, ``distance()``, "
"``gml()``, ...) telah diganti oleh pernyataan geografis yang setara di "
"keterangan (lihat di fitur baru). Dengan demikian kebutuhan untuk menyetel "
"sebuah penyesuaian ``GeoManager`` ke model diadakan-GIS sekarang usang. "
"Segera setelah kode anda tidak memanggil setiap dari metode digusangkan, "
"anda dapat cukup memindahkan baris ``objects = GeoManager()`` dari model "
"anda."

msgid "Template loader APIs have changed"
msgstr "Pemuat cetakan API telah berubah"

msgid ""
"Django template loaders have been updated to allow recursive template "
"extending. This change necessitated a new template loader API. The old "
"``load_template()`` and ``load_template_sources()`` methods are now "
"deprecated. Details about the new API can be found :ref:`in the template "
"loader documentation <custom-template-loaders>`."
msgstr ""
"Pemuat cetakan Django telah diperbaharui untuk mengizinkan perpanjangan "
"cetakan berulang. Perubahan ini mengharuskan sebuah API pemuat cetakan baru. "
"Metode ``load_template()`` dan ``load_template_sources()`` lama sekarang "
"diusangkan. Rincian tentang API baru dapat ditemukan :ref:`in the template "
"loader documentation <custom-template-loaders>`."

msgid "Passing a 3-tuple or an ``app_name`` to ``include()``"
msgstr "Melewatkan 3-tuple atau sebuah ``app_name`` pada ``include()`` "

msgid ""
"The instance namespace part of passing a tuple as an argument to "
"``include()`` has been replaced by passing the ``namespace`` argument to "
"``include()``. For example::"
msgstr ""
"Bagian namespace instance dari melewatkan sebuah tuple sebagai sebuah "
"argumen pada ``include()`` telah diganti dengan melewatkan argumen "
"``namespace`` pada ``include()``. Sebagai contoh::  "

msgid ""
"The ``app_name`` argument to ``include()`` has been replaced by passing a 2-"
"tuple (as above), or passing an object or module with an ``app_name`` "
"attribute (as below). If the ``app_name`` is set in this new way, the "
"``namespace`` argument is no longer required. It will default to the value "
"of ``app_name``. For example, the URL patterns in the tutorial are changed "
"from:"
msgstr ""
"Argumen ``app_name`` pada ``include()`` telah diganti dengan melewatkan 2-"
"tuple (seperti diatas), atau melewatkan sebuah obyek atau modul dengan "
"sebuah atribut ``app_name`` (seperti dibawah). Jika ``app_name`` disetel di "
"cara baru ini, argumen ``namespace`` tidak lagi dibutuhkan. Itu akan awalan "
"pada nilai dari ``app_name``. Sebagai contoh, pola URL di pengajaran "
"tambahan berubah dari:"

msgid "``mysite/urls.py``"
msgstr "``mysite/urls.py``"

msgid "to:"
msgstr "kepada:"

msgid "``polls/urls.py``"
msgstr "``polls/urls.py``"

msgid ""
"This change also means that the old way of including an ``AdminSite`` "
"instance is deprecated. Instead, pass ``admin.site.urls`` directly to "
"``django.conf.urls.url()``:"
msgstr ""

msgid "``urls.py``"
msgstr "``urls.py``"

msgid "URL application namespace required if setting an instance namespace"
msgstr ""
"Namespace aplikasi URL diwajibkan jika mengatur sebuah namespace instance"

msgid ""
"In the past, an instance namespace without an application namespace would "
"serve the same purpose as the application namespace, but it was impossible "
"to reverse the patterns if there was an application namespace with the same "
"name. Includes that specify an instance namespace require that the included "
"URLconf sets an application namespace."
msgstr ""
"Di masa lalu, namespace instance tanpa sebuah namespace aplikasi akan "
"melayani tujuan yang sama sebagai namespace aplikasi, tetapi itu tidak "
"mungkin membalikkan pola jika ada sebuah namespace aplikasi dengan nama "
"sama. Termasuk yang menentukan sebuah namespace instance mewajibkan itu "
"termasuk URLconf menyetel sebuah namespace aplikasi."

msgid "``current_app`` parameter to ``contrib.auth`` views"
msgstr "Parameter ``current_app`` pada tampilan ``contrib.auth`` "

msgid ""
"All views in ``django.contrib.auth.views`` have the following structure:"
msgstr ""

msgid ""
"As of Django 1.8, ``current_app`` is set on the ``request`` object. For "
"consistency, these views will require the caller to set ``current_app`` on "
"the ``request`` instead of passing it in a separate argument."
msgstr ""
"Pada Django 1.8, ``current_app`` disetel pada obyek ``request``. Untuk "
"kemantapan, tampilan ini akan membutuhkan pemanggil untuk menyetel "
"``current_app`` pada ``request`` sebagai gantinya dari melewatkan itu di "
"argumen terpisah."

msgid "``django.contrib.gis.geoip``"
msgstr "``django.contrib.gis.geoip``"

msgid ""
"The :mod:`django.contrib.gis.geoip2` module supersedes ``django.contrib.gis."
"geoip``. The new module provides a similar API except that it doesn't "
"provide the legacy GeoIP-Python API compatibility methods."
msgstr ""
"Modul :mod:`django.contrib.gis.geoip2` menggantikan ``django.contrib.gis."
"geoip``. Modul baru menyediakan API mirip kecuali bahwa itu tidak "
"menyediakan warisan metode kesesuaian API Python-GeoIP."

msgid ""
"The ``weak`` argument to ``django.dispatch.signals.Signal.disconnect()`` has "
"been deprecated as it has no effect."
msgstr ""
"Argumen ``weak`` pada ``django.dispatch.signals.Signal.disconnect()`` telah "
"diusangkan karena itu tidak mempunyai pengaruh."

msgid ""
"The ``check_aggregate_support()`` method of ``django.db.backends.base."
"BaseDatabaseOperations`` has been deprecated and will be removed in Django "
"2.0. The more general ``check_expression_support()`` should be used instead."
msgstr ""
"Metode ``check_aggregate_support()`` dari ``django.db.backends.base."
"BaseDatabaseOperations`` telah diusangkan dan akan dipindahkan di Django "
"2.0. ``check_expression_support()`` yang lebih umum harus digunakan sebagai "
"gantinya. "

msgid ""
"``django.forms.extras`` is deprecated. You can find :class:`~django.forms."
"SelectDateWidget` in ``django.forms.widgets`` (or simply ``django.forms``) "
"instead."
msgstr ""
"``django.forms.extras`` diusangkan. Anda dapat menemukan :class:`~django."
"forms.SelectDateWidget` di ``django.forms.widgets`` (atau cukup ``django."
"forms``) sebagai gantinya."

msgid ""
"Private API ``django.db.models.fields.add_lazy_relation()`` is deprecated."
msgstr ""
"API pribadi ``django.db.models.fields.add_lazy_relation()`` diusangkan,"

msgid ""
"The ``django.contrib.auth.tests.utils.skipIfCustomUser()`` decorator is "
"deprecated. With the test discovery changes in Django 1.6, the tests for "
"``django.contrib`` apps are no longer run as part of the user's project. "
"Therefore, the ``@skipIfCustomUser`` decorator is no longer needed to "
"decorate tests in ``django.contrib.auth``."
msgstr ""
"Penghias ``django.contrib.auth.tests.utils.skipIfCustomUser()`` diusangkan. "
"Dengan perubahan penemuan percobaan di Django 1.6, percobaan untuk aplikasi "
"``django.contrib`` tidak lagi berjaan sebagai bagian dari proyek pengguna. "
"Karena itu, penghias ``@skipIfCustomUser`` tidak lagi dibutuhkan untuk "
"menghias percobaan di ``django.contrib.auth``."

msgid ""
"If you customized some :ref:`error handlers <error-views>`, the view "
"signatures with only one request parameter are deprecated. The views should "
"now also accept a second ``exception`` positional parameter."
msgstr ""
"Jika anda menyesuaikan beberapa :ref:`error handlers <error-views>`, tanda "
"tangan tampilan dengan hanya satu parameter permintaan diusangkan. Tampilan "
"harus sekarang juga menerima parameter penempatan ``exception`` kedua."

msgid ""
"The ``django.utils.feedgenerator.Atom1Feed.mime_type`` and ``django.utils."
"feedgenerator.RssFeed.mime_type`` attributes are deprecated in favor of "
"``content_type``."
msgstr ""
"Atribut ``django.utils.feedgenerator.Atom1Feed.mime_type`` dan ``django."
"utils.feedgenerator.RssFeed.mime_type`` diusangkan dalam mendukung "
"``content_type``."

msgid ""
":class:`~django.core.signing.Signer` now issues a warning if an invalid "
"separator is used. This will become an exception in Django 1.10."
msgstr ""
":class:`~django.core.signing.Signer` sekarang menerbitkan sebuah peringatan "
"jika sebuah pemisah tidak sah digunakan. Ini akan menjadi sebuah "
"pengecualian di Django 1.10."

msgid ""
"``django.db.models.Field._get_val_from_obj()`` is deprecated in favor of "
"``Field.value_from_object()``."
msgstr ""
"``django.db.models.Field._get_val_from_obj()`` diusangkan dalam mendukung "
"``Field.value_from_object()``."

msgid ""
"``django.template.loaders.eggs.Loader`` is deprecated as distributing "
"applications as eggs is not recommended."
msgstr ""
"``django.template.loaders.eggs.Loader`` diusangkan ketika penyaluran "
"aplikasi sebagai telur adalah tidak dianjurkan."

msgid ""
"The ``callable_obj`` keyword argument to ``SimpleTestCase."
"assertRaisesMessage()`` is deprecated. Pass the callable as a positional "
"argument instead."
msgstr ""
"Arumen kata kunci ``callable_obj`` pada ``SimpleTestCase."
"assertRaisesMessage()`` diusangkan. Lewatkan dapat dipanggil sebagai argumen "
"penempatan sebagai gantinya."

msgid ""
"The ``allow_tags`` attribute on methods of ``ModelAdmin`` has been "
"deprecated. Use :func:`~django.utils.html.format_html`, :func:`~django.utils."
"html.format_html_join`, or :func:`~django.utils.safestring.mark_safe` when "
"constructing the method's return value instead."
msgstr ""
"Atribut ``allow_tags`` di metode dari ``ModelAdmin`` telah diusangkan. "
"Gunakan :func:`~django.utils.html.format_html`, :func:`~django.utils.html."
"format_html_join`, atau :func:`~django.utils.safestring.mark_safe` ketika "
"membangun nilai kembali metode sebagai gantinya."

msgid ""
"The ``enclosure`` keyword argument to ``SyndicationFeed.add_item()`` is "
"deprecated. Use the new ``enclosures`` argument which accepts a list of "
"``Enclosure`` objects instead of a single one."
msgstr ""
"Argumen kata kunci ``enclosure`` pada ``SyndicationFeed.add_item()`` "
"diusangkan. Gunakan argumen ``enclosures`` baru yang menerima sebuah daftar "
"obyek ``Enclosure`` sebagai gantinya yang satu."

msgid ""
"The ``django.template.loader.LoaderOrigin`` and ``django.template.base."
"StringOrigin`` aliases for ``django.template.base.Origin`` are deprecated."
msgstr ""
"Nama lain ``django.template.loader.LoaderOrigin`` and ``django.template.base."
"StringOrigin`` untuk ``django.template.base.Origin`` diusangkan."

msgid "Features removed in 1.9"
msgstr "Fitur-fitur dipindahkan di 1.9"

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 1.9. See :ref:`deprecated-features-1.7` for details, "
"including how to remove usage of these features."
msgstr ""
"Fitur-fitur ini telah mencapai akhir siklus pengusangan mereka dan "
"dipindahkan di Django 1.9. Lihat :ref:`deprecated-features-1.7` untuk "
"rincian, termasuk bagaimana memindahkan penggunaan fitur ini."

msgid "``django.utils.dictconfig`` is removed."
msgstr "``django.utils.dictconfig`` dipindahkan."

msgid "``django.utils.importlib`` is removed."
msgstr "``django.utils.importlib`` dipindahkan"

msgid "``django.utils.tzinfo`` is removed."
msgstr "``django.utils.tzinfo`` dipindahkan."

msgid "``django.utils.unittest`` is removed."
msgstr "``django.utils.unittest`` dipindahkan."

msgid "The ``syncdb`` command is removed."
msgstr "Perintah ``syncdb`` dipindahkan."

msgid ""
"``django.db.models.signals.pre_syncdb`` and ``django.db.models.signals."
"post_syncdb`` is removed."
msgstr ""
"``django.db.models.signals.pre_syncdb`` dan ``django.db.models.signals."
"post_syncdb`` dipindahkan."

msgid "Support for ``allow_syncdb`` on database routers is removed."
msgstr "Dukungan untuk ``allow_syncdb`` pada perute basisdata dipindahkan."

msgid ""
"Automatic syncing of apps without migrations is removed. Migrations are "
"compulsory for all apps unless you pass the :option:`migrate --run-syncdb` "
"option."
msgstr ""
"Menyeimbangkan otomatis dari aplikasi tanpa perpindahan adalah dipindahkan. "
"Perpindahan adalah wajib untuk aplikasi meskipun anda melewatkan pilihan :"
"option:`migrate --run-syncdb`."

msgid ""
"The SQL management commands for apps without migrations, ``sql``, "
"``sqlall``, ``sqlclear``, ``sqldropindexes``, and ``sqlindexes``, are "
"removed."
msgstr ""
"Perintah pengelolaan SQL untuk aplikasi tanpa perpindahan, ``sql``, "
"``sqlall``, ``sqlclear``, ``sqldropindexes``, dan ``sqlindexes``, "
"dipindahkan."

msgid ""
"Support for automatic loading of ``initial_data`` fixtures and initial SQL "
"data is removed."
msgstr ""
"Dukungan untuk memuat otomatis dari alat bantu ``initial_data`` dan data SQL "
"awal dipindahkan."

msgid ""
"All models need to be defined inside an installed application or declare an "
"explicit :attr:`~django.db.models.Options.app_label`. Furthermore, it isn't "
"possible to import them before their application is loaded. In particular, "
"it isn't possible to import models inside the root package of an application."
msgstr ""
"Semua model-model butuh ditentukan dalam sebuah aplikasi terpasang atau "
"menyatakan sebuah :attr:`~django.db.models.Options.app_label` yang jelas. "
"Lebih lanjut, itu tidak memungkinkan mengimpor mereka sebelum aplikasi "
"mereka dimuat. Khususnya, itu tidak memungkinkan mengimpor model-model "
"didalam paket akar dari sebuah aplikasi."

msgid ""
"The model and form ``IPAddressField`` is removed. A stub field remains for "
"compatibility with historical migrations."
msgstr ""
"Model dan formulir ``IPAddressField`` dipindahkan. Sebuah bidang keong tetap "
"untuk kesesuaian dengan riwayat perpindahan."

msgid "``AppCommand.handle_app()`` is no longer supported."
msgstr "``AppCommand.handle_app()`` tidak lagi didukung."

msgid ""
"``RequestSite`` and ``get_current_site()`` are no longer importable from "
"``django.contrib.sites.models``."
msgstr ""
"``RequestSite`` dan ``get_current_site()`` tidak lagi dapat diimpor dari "
"``django.contrib.sites.models``."

msgid "FastCGI support via the ``runfcgi`` management command is removed."
msgstr "Dukungan FastCGI melalui perintah pengleolaan ``runfcgi`` dipindahkan."

msgid "``django.utils.datastructures.SortedDict`` is removed."
msgstr "``django.utils.datastructures.SortedDict`` dipindahkan."

msgid "``ModelAdmin.declared_fieldsets`` is removed."
msgstr "``ModelAdmin.declared_fieldsets`` dipindahkan."

msgid "The ``util`` modules that provided backwards compatibility are removed:"
msgstr ""
"Modul-modul ``util`` yang disediakan kesesuaian kebelakang dipindahkan:"

msgid "``ModelAdmin.get_formsets`` is removed."
msgstr "``ModelAdmin.get_formsets`` dipindahkan."

msgid ""
"The backward compatible shims introduced to rename the ``BaseMemcachedCache."
"_get_memcache_timeout()`` method to ``get_backend_timeout()`` is removed."
msgstr ""
"Shim kesesuaian kebelakang diperkenalkan untuk menamai kembali metode "
"``BaseMemcachedCache._get_memcache_timeout()`` pada "
"``get_backend_timeout()`` akan dipindahkan."

msgid ""
"The ``--natural`` and ``-n`` options for :djadmin:`dumpdata` are removed."
msgstr ""
"Pilihan-pilihan ``--natural`` dan ``-n`` untuk :djadmin:`dumpdata` "
"dipindahkan. "

msgid ""
"The ``use_natural_keys`` argument for ``serializers.serialize()`` is removed."
msgstr ""
"Argumen ``use_natural_keys`` untuk ``serializers.serialize()`` dipindahkan."

msgid "Private API ``django.forms.forms.get_declared_fields()`` is removed."
msgstr "API pribadi ``django.forms.forms.get_declared_fields()`` dipindahkan."

msgid ""
"The ability to use a ``SplitDateTimeWidget`` with ``DateTimeField`` is "
"removed."
msgstr ""
"Kemampuan menggunakan ``SplitDateTimeWidget`` dengan ``DateTimeField`` "
"dipindahkan."

msgid "The ``WSGIRequest.REQUEST`` property is removed."
msgstr "Sifat ``WSGIRequest.REQUEST`` dipindahkan."

msgid "The class ``django.utils.datastructures.MergeDict`` is removed."
msgstr "Kelas ``django.utils.datastructures.MergeDict`` dipindahkan."

msgid "The ``zh-cn`` and ``zh-tw`` language codes are removed."
msgstr "Kode bahasa ``zh-cn`` and ``zh-tw`` telah dipindahkan."

msgid "The internal ``django.utils.functional.memoize()`` is removed."
msgstr "Internal ``django.utils.functional.memoize()`` dipindahkan."

msgid "``django.core.cache.get_cache`` is removed."
msgstr "``django.core.cache.get_cache`` dipindahkan."

msgid "``django.db.models.loading`` is removed."
msgstr "``django.db.models.loading`` dipindahkan."

msgid "Passing callable arguments to querysets is no longer possible."
msgstr "Melewatkan argumen callable ke queryset tidak lagi memungkinkan."

msgid ""
"``BaseCommand.requires_model_validation`` is removed in favor of "
"``requires_system_checks``. Admin validators is replaced by admin checks."
msgstr ""
"``BaseCommand.requires_model_validation`` dipindahkan dalam mendukung "
"``requires_system_checks``. Pengesah admin diganti oleh pemeriksaan admin."

msgid ""
"The ``ModelAdmin.validator_class`` and ``default_validator_class`` "
"attributes are removed."
msgstr ""
"Atribut ``ModelAdmin.validator_class`` dan ``default_validator_class`` "
"dipindahkan."

msgid "``ModelAdmin.validate()`` is removed."
msgstr "``ModelAdmin.validate()`` dipindahkan."

msgid ""
"``django.db.backends.DatabaseValidation.validate_field`` is removed in favor "
"of the ``check_field`` method."
msgstr ""
"``django.db.backends.DatabaseValidation.validate_field`` dipindahkan "
"mendukung metode ``check_field``."

msgid "The ``validate`` management command is removed."
msgstr "Perintah pengelolaan ``validate`` dipindahkan."

msgid ""
"``django.utils.module_loading.import_by_path`` is removed in favor of "
"``django.utils.module_loading.import_string``."
msgstr ""
"``django.utils.module_loading.import_by_path`` dipindahkan mendukung "
"``django.utils.module_loading.import_string``."

msgid ""
"``ssi`` and ``url`` template tags are removed from the ``future`` template "
"tag library."
msgstr ""
"Etiket cetakan ``ssi`` dan ``url`` dipindahkan dari pustaka etiket cetakan "
"``future``."

msgid "``django.utils.text.javascript_quote()`` is removed."
msgstr "``django.utils.text.javascript_quote()`` dipindahkan."

msgid ""
"Database test settings as independent entries in the database settings, "
"prefixed by ``TEST_``, are no longer supported."
msgstr ""
"Pengaturan percobaan basisdata sebagai masukan berdiri sendiri dalam "
"pengaturan basisdata, diawali oleh ``TEST_``, tidak lagi didukung."

msgid ""
"The ``cache_choices`` option to :class:`~django.forms.ModelChoiceField` and :"
"class:`~django.forms.ModelMultipleChoiceField` is removed."
msgstr ""

msgid ""
"The default value of the :attr:`RedirectView.permanent <django.views.generic."
"base.RedirectView.permanent>` attribute has changed from ``True`` to "
"``False``."
msgstr ""
"Nilai awal dari atribut :attr:`RedirectView.permanent <django.views.generic."
"base.RedirectView.permanent>` telah dirubah dari ``True`` ke ``False``."

msgid ""
"``django.contrib.sitemaps.FlatPageSitemap`` is removed in favor of ``django."
"contrib.flatpages.sitemaps.FlatPageSitemap``."
msgstr ""
"``django.contrib.sitemaps.FlatPageSitemap`` dipindahkan mendukung ``django."
"contrib.flatpages.sitemaps.FlatPageSitemap``."

msgid "Private API ``django.test.utils.TestTemplateLoader`` is removed."
msgstr "API pribadi ``django.test.utils.TestTemplateLoader`` dipindahkan."

msgid "The ``django.contrib.contenttypes.generic`` module is removed."
msgstr "Modul ``django.contrib.contenttypes.generic`` dipindahkan."

msgid "Django 1.9.1 release notes"
msgstr "Catatan terbitan Django 1.9.1"

msgid "Django 1.9.1 fixes several bugs in 1.9."
msgstr "Django 1.9.1 memperbaiki beberapa kesalahan di 1.9."

msgid ""
"Fixed ``BaseCache.get_or_set()`` with the ``DummyCache`` backend (:ticket:"
"`25840`)."
msgstr ""
"Diperbaiki ``BaseCache.get_or_set()`` dengan backend ``DummyCache`` (:ticket:"
"`25840`)."

msgid ""
"Fixed a regression in ``FormMixin`` causing forms to be validated twice (:"
"ticket:`25548`, :ticket:`26018`)."
msgstr ""
"Diperbaiki sebuah pemulihan di ``FormMixin`` menyebabkan formulir menjadi "
"disahkan dua kali (:ticket:`25548`, :ticket:`26018`). "

msgid ""
"Fixed a system check crash with nested ``ArrayField``\\s (:ticket:`25867`)."
msgstr ""
"Diperbaiki kegagalan pemeriksaan sistem dengan ``ArrayField`` bersarang (:"
"ticket:`25867`)."

msgid ""
"Fixed a regression in ``CommonMiddleware`` causing ``If-None-Match`` checks "
"to always return HTTP 200 (:ticket:`25900`)."
msgstr ""
"Diperbaiki sebuah pemulihan di ``CommonMiddleware`` menyebabkan pemeriksaan "
"``If-None-Match`` menjadi selalu mengembalikan HTTP 200 (:ticket:`25900`)."

msgid ""
"Fixed admin's delete confirmation page's summary counts of related objects (:"
"ticket:`25883`)."
msgstr ""
"Diperbaiki jumlah ringkasan halaman penegasan hapus admin dari obyek terkait "
"(:ticket:`25883`)."

msgid ""
"Added ``from __future__ import unicode_literals`` to the default ``apps.py`` "
"created by ``startapp`` on Python 2 (:ticket:`25909`). Add this line to your "
"own ``apps.py`` files created using Django 1.9 if you want your migrations "
"to work on both Python 2 and Python 3."
msgstr ""
"Ditambahkan ``from __future__ import unicode_literals`` ke awalan ``apps."
"py`` dibuat oleh ``startapp`` pada Python 2 (:ticket:`25909`). Tambah baris "
"ini ke berkas-berkas ``apps.py`` anda sendiri dibuat menggunakan Django 1.9 "
"jika anda ingin perpindahan bekerja pada kedua Python 2 dan Python 3."

msgid ""
"Prevented ``QuerySet.delete()`` from crashing on MySQL when querying across "
"relations (:ticket:`25882`)."
msgstr ""
"Dicegah ``QuerySet.delete()`` dari gagal di MySQL ketika meminta antar "
"hubungan (:ticket:`25882`)."

msgid ""
"Fixed evaluation of zero-length slices of ``QuerySet.values()`` (:ticket:"
"`25894`)."
msgstr ""
"Diperbaiki penilaian dari potongan panjang-nol dari ``QuerySet.values()`` (:"
"ticket:`25894`)."

msgid ""
"Fixed ``TypedChoiceField`` change detection with nullable fields (:ticket:"
"`25942`)."
msgstr ""
"Diperbaiki penemuan perubahan ``TypedChoiceField`` dengan bidang null (:"
"ticket:`25942`)."

msgid ""
"Fixed incorrect timezone warnings in custom admin templates that don't have "
"a ``data-admin-utc-offset`` attribute in the ``body`` tag. (:ticket:`25845`)."
msgstr ""
"Diperbaiki peringatan zonawaktu tidak benar di cetakan admin penyesuaian "
"yang tidak mempunyai atribut ``data-admin-utc-offset`` di etiket ``body``. (:"
"ticket:`25845`)."

msgid ""
"Avoided hiding some exceptions, like an invalid ``INSTALLED_APPS`` setting, "
"behind ``AppRegistryNotReady`` when starting ``runserver`` (:ticket:"
"`25510`). This regression appeared in 1.8.5 as a side effect of fixing :"
"ticket:`24704` and by mistake the fix wasn't applied to the ``stable/1.9.x`` "
"branch."
msgstr ""
"Dihindari menyembunyikan beberapa pengecualian, seperti sebuah pengaturan "
"``INSTALLED_APPS`` tidak sah, dibelakang ``AppRegistryNotReady`` ketika "
"memulai ``runserver`` (:ticket:`25510`). Pemulihan ini muncul di 1.8.5 "
"sebagai pengaruh samping dari perbaikan :ticket:`24704` dan oleh kesalahan "
"perbaikan tidak diberlakukan pada cabang ``stable/1.9.x``."

msgid ""
"Fixed ``migrate --fake-initial`` detection of many-to-many tables (:ticket:"
"`25922`)."
msgstr ""
"Diperbaiki penemuan ``migrate --fake-initial`` dari tabel many-to-many (:"
"ticket:`25922`)."

msgid ""
"Restored the functionality of the admin's ``list_editable`` add and change "
"buttons (:ticket:`25903`)."
msgstr ""
"Menyimpan kembali kegunaan dari tambah ``list_editable`` admin dan tombol "
"rubah (:ticket:`25903`)."

msgid "Fixed ``isnull`` query lookup for ``ForeignObject`` (:ticket:`25972`)."
msgstr ""
"Diperbaiki pencarian permintaan ``isnull`` untuk ``ForeignObject`` (:ticket:"
"`25972`)."

msgid ""
"Fixed incorrect object reference in ``SingleObjectMixin."
"get_context_object_name()`` (:ticket:`26006`)."
msgstr ""
"Diperbaiki acuan objek tidak benar di ``SingleObjectMixin."
"get_context_object_name()`` (:ticket:`26006`)."

msgid ""
"Restored ``contrib.auth`` hashers compatibility with ``py-bcrypt`` (:ticket:"
"`26016`)."
msgstr ""

msgid "Django 1.9.10 release notes"
msgstr "Catatan terbitan Django 1.9.10"

msgid "Django 1.9.10 fixes a security issue in 1.9.9."
msgstr "Django 1.9.10 memperbaiki sebuah masalah keamanan di 1.9.9."

msgid "Django 1.9.11 release notes"
msgstr "Catatan terbitan Django 1.9.11"

msgid "Django 1.9.11 fixes two security issues in 1.9.10."
msgstr "Django 1.9.11 memperbaiki dua masalah keamanan di 1.9.10."

msgid "Django 1.9.12 release notes"
msgstr "Catatan terbitan Django 1.9.12"

msgid "Django 1.9.12 fixes a regression in 1.9.11."
msgstr ""
"Django 1.9.12 memperbaiki sebuah pemulihan di terbitan keamanan 1.9.11."

msgid "Django 1.9.13 release notes"
msgstr "Catatan terbitan Django 1.9.13"

msgid ""
"Django 1.9.13 fixes two security issues and a bug in 1.9.12. This is the "
"final release of the 1.9.x series."
msgstr ""
"Django 1.9.13 memperbaiki dua masalah keamanan dan sebuah kesalahan dalam "
"1.9.12. Ini adalah terbitan akhir dari rangkaian 1.9.x."

msgid "Django 1.9.2 release notes"
msgstr "Catatan terbitan Django 1.9.2"

msgid ""
"Django 1.9.2 fixes a security regression in 1.9 and several bugs in 1.9.1. "
"It also makes a small backwards incompatible change that hopefully doesn't "
"affect any users."
msgstr ""
"Django 1.9.2 memperbaiki sebuah pemulihan keamanan di 1.9 dan beberapa "
"kesalahan di 1.9.1. Itu juga membuat perubahan ketidaksesuaian kebelakang "
"kecil yang semoga tidak mempengaruhi pengguna lainnya."

msgid ""
"Security issue: User with \"change\" but not \"add\" permission can create "
"objects for ``ModelAdmin``’s with ``save_as=True``"
msgstr ""
"Masalah keamanan: Pengguna dengan \"change\" tetapi tidak \"add\" perizinan "
"dapat membuat obyek untuk ``ModelAdmin`` dengan ``save_as=True`` "

msgid ""
"If a ``ModelAdmin`` uses ``save_as=True`` (not the default), the admin "
"provides an option when editing objects to \"Save as new\". A regression in "
"Django 1.9 prevented that form submission from raising a \"Permission "
"Denied\" error for users without the \"add\" permission."
msgstr ""
"Jika ``ModelAdmin`` menggunakan ``save_as=True`` (bukan awalan), admin "
"menyediakan sebuah pilihan ketika menyunting obyek ke \"Save as new\". "
"Sebuah pemulihan di Django 1.9 mencegah itu membentuk pengajuan dari "
"pemunculan sebuah kesalahan \"Permission Denied\" untuk pengguna tanpa "
"perizinan \"add\"."

msgid ""
"Backwards incompatible change: ``.py-tpl`` files rewritten in project/app "
"templates"
msgstr ""
"Perubahan ketidaksesuaian kebelakang: berkas-berkas ``.py-tpl`` ditulis "
"kembali di cetakan project/app"

msgid ""
"The addition of some Django template language syntax to the default app "
"template in Django 1.9 means those files now have some invalid Python "
"syntax. This causes difficulties for packaging systems that unconditionally "
"byte-compile ``*.py`` files."
msgstr ""
"Tambahan dari beberapa sintaksis bahasa cetakan Django pada cetakan aplikasi "
"awalan di Django 1.9 berarti berkas-berkas tersebut sekarang mempunyai "
"beberapa sintaksis Python tidak sah. Ini menyebabkan kesulitan untuk sistem "
"pemaketan yang secara tidak tanpa syarat menyusun-byte berkas-berkas ``*."
"py``."

msgid ""
"To remedy this, a ``.py-tpl`` suffix is now used for the project and app "
"template files included in Django. The ``.py-tpl`` suffix is replaced with "
"``.py`` by the ``startproject`` and ``startapp`` commands. For example, a "
"template with the filename ``manage.py-tpl`` will be created as ``manage."
"py``."
msgstr ""
"Untuk memperbaiki ini, sebuah akhiran ``.py-tpl`` sekarang digunakan untuk "
"proyek dan berkas-berkas cetakan aplikasi disertakan di Django. Akhiran ``."
"py-tpl`` diganti dengan ``.py`` oleh perintah ``startproject`` dan "
"``startapp``. Sebagai contoh, sebuah cetakan dengan nama berkas ``manage.py-"
"tpl`` akan dibuat sebagai ``manage.py``."

msgid ""
"Please file a ticket if you have a custom project template containing ``.py-"
"tpl`` files and find this behavior problematic."
msgstr ""
"Harap berkaskan sebuah tiket jika anda mempunyai sebuah penyesuaian cetakan "
"proyek mengandung berkas-berkas ``.py-tpl`` dan menemukan perilaku ini "
"bermasalah."

msgid ""
"Fixed a regression in ``ConditionalGetMiddleware`` causing ``If-None-Match`` "
"checks to always return HTTP 200 (:ticket:`26024`)."
msgstr ""
"Diperbaiki sebuah pemulihan di ``ConditionalGetMiddleware`` menyebabkan "
"pemeriksaan ``If-None-Match`` menjadi selalu mengembalikan HTTP 200 (:ticket:"
"`26024`)."

msgid ""
"Fixed a regression in the admin's edit related model popup that caused an "
"escaped value to be displayed in the select dropdown of the parent window (:"
"ticket:`25997`)."
msgstr ""
"Diperbaiki sebuah pemulihan di popup model terkait sunting admin yang "
"menyebabkan sebuah nilai diloloskan untuk menampilkan di dropdown pilihan "
"dari jendela induk (:ticket:`25997`)."

msgid ""
"Fixed a regression where defining a relation on an abstract model's field "
"using a string model name without an app_label no longer resolved that "
"reference to the abstract model's app if using that model in another "
"application (:ticket:`25858`)."
msgstr ""
"Diperbaiki sebuah pemulihan dimana menentukan sebuah hubungan pada sebuah "
"bidang model abstrak menggunakan nama model string tanpa sebuah app_label "
"tidak lagi terselesaikan acuan itu ke aplikasi model abstrak jika "
"menggunakan model itu di aplikasi lain (:ticket:`25858`)."

msgid ""
"Fixed a crash when destroying an existing test database on MySQL or "
"PostgreSQL (:ticket:`26096`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menghancurkan basisdata percobaan yang "
"ada pada MySQL atau PostgreSQL (:ticket:`26096`)."

msgid ""
"Fixed CSRF cookie check on POST requests when ``USE_X_FORWARDED_PORT=True`` "
"(:ticket:`26094`)."
msgstr ""
"Diperbaiki pemeriksaan kue CSRF pada permintaan POST ketika "
"``USE_X_FORWARDED_PORT=True`` (:ticket:`26094`)."

msgid ""
"Fixed a ``QuerySet.order_by()`` crash when ordering by a relational field of "
"a ``ManyToManyField`` ``through`` model (:ticket:`26092`)."
msgstr ""
"Diperbaiki sebuah kegagalan ``QuerySet.order_by()`` ketika diurutkan "
"berdasarkan pada bidang hubungan dari model ``through`` ``ManyToManyField`` "
"(:ticket:`26092`)."

msgid ""
"Fixed a regression that caused an exception when making database queries on "
"SQLite with more than 2000 parameters when :setting:`DEBUG` is ``True`` on "
"distributions that increase the ``SQLITE_MAX_VARIABLE_NUMBER`` compile-time "
"limit to over 2000, such as Debian (:ticket:`26063`)."
msgstr ""
"Diperbaiki sebuah pemulihan yang menyebabkan sebuah pengecualian ketika "
"membuat permintaan basisdata pada SQLite dengan lebih dari 2000 parameter "
"ketika :setting:`DEBUG` adalah ``True`` pada pembagian yang meningkatkan "
"batasan waktu-susun ``SQLITE_MAX_VARIABLE_NUMBER`` menjadi lebih 2000, "
"seperti Debian (:ticket:`26063`)."

msgid ""
"Fixed a crash when calling the ``migrate`` command in a test case with the "
"``available_apps`` attribute pointing to an application with migrations "
"disabled using the ``MIGRATION_MODULES`` setting (:ticket:`26135`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika memanggil perintah ``migrate`` di kasus "
"percobaan dengan atribut ``available_apps`` menunjuk pada sebuah aplikasi "
"dengan perpindahan ditiadakan menggunakan pengaturan ``MIGRATION_MODULES`` (:"
"ticket:`26135`)."

msgid ""
"Restored the ability for testing and debugging tools to determine the "
"template from which a node came from, even during template inheritance or "
"inclusion. Prior to Django 1.9, debugging tools could access the template "
"origin from the node via ``Node.token.source[0]``. This was an undocumented, "
"private API. The origin is now available directly on each node using the "
"``Node.origin`` attribute (:ticket:`25848`)."
msgstr ""
"Disimpan kembali kemampuan untuk peralatan mencoba dan mencari kesalahan "
"untuk menentukan cetakan dari node mana datangnya, bahkan selama pewarisan "
"cetakan atau penyertaan. Sebelumnya pada Django 1.9, alat pencari kesalahan "
"dapat mengakses cetakan asli dari node melalui ``Node.token.source[0]``. Ini "
"telah didokumentasikan, API pribadi. Aslinya sekarang tersedia secara "
"langsung pada setiap node menggunakan atribut ``Node.origin`` (:ticket:"
"`25848`)."

msgid ""
"Always included ``geometry_field`` in the GeoJSON serializer output "
"regardless of the ``fields`` parameter (:ticket:`26138`)."
msgstr ""
"Selalu disertakan ``geometry_field`` di keluaran penserial GeoJSON tanpa "
"memperhatikan dari parameter ``field`` (:ticket:`26138`)."

msgid ""
"Made invalid forms display the initial of values of their disabled fields (:"
"ticket:`26129`)."
msgstr ""
"Dibuat formulir tidak sah menampilkan inisial nilai-nilai dari bidang-bidang "
"mereka yang ditiadakan (:ticket:`26129`)."

msgid "Django 1.9.3 release notes"
msgstr "Catatan terbitan Django 1.9.3"

msgid "Django 1.9.3 fixes two security issues and several bugs in 1.9.2."
msgstr ""
"Django 1.9.3 memperbaiki dua masalah keamanan dan beberapa kesalahan dalam "
"1.9.2."

msgid ""
"Skipped URL checks (new in 1.9) if the ``ROOT_URLCONF`` setting isn't "
"defined (:ticket:`26155`)."
msgstr ""
"Dilewatkan pemeriksaan URL (baru di 1.9) jika pengaturan ``ROOT_URLCONF`` "
"tidak ditentukan (:ticket:`26155`)."

msgid ""
"Fixed a regression for cases where ``ForeignObject."
"get_extra_descriptor_filter()`` returned a ``Q`` object (:ticket:`26153`)."
msgstr ""
"Diperbaiki sebuah pemulihan untuk kasus-kasus dimana ``ForeignObject."
"get_extra_descriptor_filter()`` mengembalikan sebuah obyek ``Q`` (:ticket:"
"`26153`)."

msgid ""
"Fixed regression with an ``__in=qs`` lookup for a ``ForeignKey`` with "
"``to_field`` set (:ticket:`26196`)."
msgstr ""
"Diperbaiki pemulihan dengan sebuah permintaan ``__in=qs`` untuk sebuah "
"``ForeignKey`` dengan kumpulan ``to_field`` (:ticket:`26196`)."

msgid ""
"Fixed a crash when filtering by a ``Decimal`` in ``RawQuery`` (:ticket:"
"`26219`)."
msgstr ""
"Memperbaiki kegagalan ketika menyaring berdasarkan ``Decimal`` dalam "
"`RawQuery`` (:ticket:`26219`)."

msgid ""
"Fixed some crashing deprecation shims in ``SimpleTemplateResponse`` that "
"regressed in Django 1.9 (:ticket:`26253`)."
msgstr ""
"Diperbaiki beberapa kegagalan pengusangan shim di ``SimpleTemplateResponse`` "
"yang mundur di Django 1.9 (:ticket:`26253`)."

msgid ""
"Changed the admin's \"permission denied\" message in the login template to "
"use ``get_username`` instead of ``username`` to support custom user models (:"
"ticket:`26231`)."
msgstr ""
"Dirubah pesan \"permission denied\" admin di cetakan masuk untuk menggunakan "
"``get_username`` daripada ``username`` untuk mendukung penyesuaian model "
"user (:ticket:`26231`)."

msgid ""
"Fixed a crash when passing a nonexistent template name to the cached "
"template loader's ``load_template()`` method (:ticket:`26280`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika melewatkan nama cetakan yang tidak ada ke "
"metode ``load_template()`` pemuat cetakan penyimpanan sementara (:ticket:"
"`26280`)."

msgid ""
"Reverted a change in Django 1.9.2 (:ticket:`25858`) that prevented relative "
"lazy relationships defined on abstract models to be resolved according to "
"their concrete model's ``app_label`` (:ticket:`26186`)."
msgstr ""
"Dipulihkan sebuah perubahan di Django 1.9.2 (:ticket:`25858`) yang mencegah "
"hubungan lazy relatif ditentukan pada model abstrak untuk diselesaikan "
"menurut ``app_label`` model wujud mereka (:ticket:`26186`)."

msgid "Django 1.9.4 release notes"
msgstr "Catatan terbitan Django 1.9.4"

msgid ""
"Django 1.9.4 fixes a regression on Python 2 in the 1.9.3 security release "
"where ``utils.http.is_safe_url()`` crashes on bytestring URLs (:ticket:"
"`26308`)."
msgstr ""
"Django 1.9.4 memperbaiki sebuah pemulihan di Python 2 di terbitan keamanan "
"1.9.3 dimana ``utils.http.is_safe_url()`` gagal di URL bytestring (:ticket:"
"`26308`)."

msgid "Django 1.9.5 release notes"
msgstr "Catatan terbitan Django 1.9.5"

msgid "Django 1.9.5 fixes several bugs in 1.9.4."
msgstr "Django 1.9.5 memperbaiki beberapa kesalahan dalam 1.9.4."

msgid ""
"Fixed a race condition in ``BaseCache.get_or_set()`` (:ticket:`26332`). It "
"now returns the ``default`` value instead of ``False`` if there's an error "
"when trying to add the value to the cache."
msgstr ""
"Diperbaiki kondisi jarang di ``BaseCache.get_or_set()`` (:ticket:`26332`). "
"Itu mengembalikan nilai ``default`` daripada ``False`` jika ada sebuah "
"kesalahan ketika mencoba menambahkan nilai ke cache."

msgid ""
"The forms in ``contrib.auth`` no longer strip trailing and leading "
"whitespace from the password fields (:ticket:`26334`). The change requires "
"users who set their password to something with such whitespace after a site "
"updated to Django 1.9 to reset their password. It provides backwards-"
"compatibility for earlier versions of Django."
msgstr ""
"Formulir di ``contrib.auth`` tidak lagi melucuti ruang kosong buntutan dan "
"terkemuka dari bidang sandi (:ticket:`26334`). Perubahan membutuhkan "
"pengguna yang menyetel sandi mereka ke sesuatu dengan seperti ruang kosong "
"setelah situs diperbaharui ke Django 1.9 untuk menyetel kembali sandi "
"mereka. Itu menyediakan kesesuaian-kebelakang untuk versi paling awal dari "
"Django."

msgid "Fixed a memory leak in the cached template loader (:ticket:`26306`)."
msgstr ""
"Diperbaiki sebuah kebocoran memori di pemuat cetakan cached (:ticket:"
"`126306`)."

msgid ""
"Fixed a regression that caused ``collectstatic --clear`` to fail if the "
"storage doesn't implement ``path()`` (:ticket:`26297`)."
msgstr ""
"Diperbaiki sebuah pemulihan yang menyebabkan ``collectstatic --clear`` "
"menjadi gagal jika penyimpanan tidak menerapkan ``path()`` (:ticket:`26297`)."

msgid ""
"Fixed a crash when using a reverse lookup with a subquery when a "
"``ForeignKey`` has a ``to_field`` set to something other than the primary "
"key (:ticket:`26373`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika menggunakan pencarian kebalik dengan sub "
"permintaan ketika ``ForeignKey`` mempunyai sebuah ``to_field`` disetel "
"menjadi sesuatu selain dari primary key (:ticket:`26373`)."

msgid ""
"Fixed a regression in ``CommonMiddleware`` that caused spurious warnings in "
"logs on requests missing a trailing slash (:ticket:`26293`)."
msgstr ""
"Diperbaiki sebuah pemulihan di ``CommonMiddleware`` yang menyebabkan "
"peringatan palsu dalam catatan pada permintaan kehilangan terkemuka garis "
"miring (:ticket:`26293`)."

msgid ""
"Fixed a regression with abstract model inheritance and explicit parent links "
"(:ticket:`26413`)."
msgstr ""
"Diperbaiki sebuah pemulihan dengan abstrak model warisan dan tautan induk "
"jelas (:ticket:`26413`)."

msgid ""
"Fixed a migrations crash on SQLite when renaming the primary key of a model "
"containing a ``ForeignKey`` to ``'self'`` (:ticket:`26384`)."
msgstr ""
"Diperbaiki sebuah kegagalan perpindahan di SQLite ketika menamai kembali "
"primary key dari sebuah model mengandung ``ForeignKey`` menjadi ``'self'`` (:"
"ticket:`26384`)."

msgid ""
"Fixed ``JSONField`` inadvertently escaping its contents when displaying "
"values after failed form validation (:ticket:`25532`)."
msgstr ""
"Diperbaiki ``JSONField`` tidak sengaja meloloskan isinya ketika menampilkan "
"nilai-nilai setelah gagal pengesahan formulir (:ticket:`25532`)."

msgid "Django 1.9.6 release notes"
msgstr "Catatan terbitan Django 1.9.6"

msgid "Django 1.9.6 fixes several bugs in 1.9.5."
msgstr "Django 1.9.6 memperbaiki beberapa kesalahan di 1.9.5."

msgid ""
"Added support for relative path redirects to the test client and to "
"``SimpleTestCase.assertRedirects()`` because Django 1.9 no longer converts "
"redirects to absolute URIs (:ticket:`26428`)."
msgstr ""
"Ditambahkan dukungan untuk pengalihan jalur relatif pada klien percobaan dan "
"pada ``SimpleTestCase.assertRedirects()`` karena Django 1.9 tidak lagi "
"merubah pengalihan menjadi URI mutlak (:ticket:`26428`)."

msgid ""
"Prevented ``makemigrations`` from generating infinite migrations for a model "
"field that references a ``functools.partial`` (:ticket:`26475`)."
msgstr ""
"Dicegah ``makemigrations`` dari membangkitkan perpindahan taak terbatas "
"untuk sebuah bidang model yang mengacu sebuah ``functools.partial`` (:ticket:"
"`26475`)."

msgid ""
"Fixed a regression where ``SessionBase.pop()`` returned ``None`` rather than "
"raising a ``KeyError`` for nonexistent values (:ticket:`26520`)."
msgstr ""
"Diperbaiki sebuah pemulihan dimana ``SessionBase.pop()`` mengembalikan "
"``None`` daripada memunculkan sebuah ``KeyError`` untuk nilai yang tidak ada "
"(:ticket:`26520`)."

msgid ""
"Fixed a regression causing the cached template loader to crash when using "
"template names starting with a dash (:ticket:`26536`)."
msgstr ""
"Diperbaiki sebuah pemulihan menyebabkan pemuat cetakan pemyimpanan sementara "
"gagal ketika menggunakan nama-nama cetakan dimulai dengan tanda garis (:"
"ticket:`26536`)."

msgid ""
"Fixed a ``makemessages`` regression where temporary ``.py`` extensions were "
"leaked in source file paths (:ticket:`26341`)."
msgstr ""
"Diperbaiki sebuah pemulihan ``makemessages`` dimana tambahan ``.py`` "
"sementara bocor di jalur berkas sumber (:ticket:`26341`)."

msgid "Django 1.9.7 release notes"
msgstr "Catatan terbitan Django 1.9.7"

msgid "*June 4, 2016*"
msgstr "*4 Juni 2016*"

msgid "Django 1.9.7 fixes several bugs in 1.9.6."
msgstr "Django 1.9.7 memperbaiki beberapa kesalahan di 1.9.6."

msgid ""
"Removed the need for the ``request`` context processor on the admin login "
"page to fix a regression in 1.9 (:ticket:`26558`)."
msgstr ""
"Dipindahkan kebutuhan untuk pengolah konteks ``request`` pada halaman masuk "
"admin untuk memperbaiki sebuah pemulihan di `1.9 (:ticket:`26558`)."

msgid ""
"Fixed translation of password validators' ``help_text`` in forms (:ticket:"
"`26544`)."
msgstr ""
"Diperbaiki terjemahan dari pengesahan sandi ``help_text`` in forms (:ticket:"
"`26544`)."

msgid ""
"Fixed a regression causing the cached template loader to crash when using "
"lazy template names (:ticket:`26603`)."
msgstr ""
"Diperbaiki sebuah pemulihan menyebabkan pemuat cetakan penyimpanan sementara "
"gagal ketika menggunakan nama-nama cetakan lazy (:ticket:`26603`)."

msgid ""
"Fixed ``on_commit`` callbacks execution order when callbacks make "
"transactions (:ticket:`26627`)."
msgstr ""
"Diperbaiki urutan pengerjaan callback ``on_commit`` ketika callback membuat "
"transaksi (:ticket:`26627`)."

msgid ""
"Fixed ``HStoreField`` to raise a ``ValidationError`` instead of crashing on "
"non-dictionary JSON input (:ticket:`26672`)."
msgstr ""
"Diperbaiki ``HStoreField`` untuk memunculkan sebuah ``ValidationError`` "
"daripada gagal di masukan JSON bukan-kamus (:ticket:`26672`)."

msgid ""
"Fixed ``dbshell`` crash on PostgreSQL with an empty database name (:ticket:"
"`26698`)."
msgstr ""
"Diperbaiki kegagalan ``dbshell`` pada PostgreSQL dengan nama basis data "
"kosong (:ticket:`26698`)."

msgid ""
"Fixed a regression in queries on a ``OneToOneField`` that has ``to_field`` "
"and ``primary_key=True`` (:ticket:`26667`)."
msgstr ""
"Diperbaiki sebuah pemulihan di permintaan pada ``OneToOneField`` yang "
"mempunyai ``to_field`` dan ``primary_key=True`` (:ticket:`26667`)."

msgid "Django 1.9.8 release notes"
msgstr "Catatan terbitan Django 1.9.8"

msgid "Django 1.9.8 fixes a security issue and several bugs in 1.9.7."
msgstr ""
"Django 1.9.8 memperbaiki masalah keamanan dan beberapa kesalahan di 1.9.7."

msgid ""
"Fixed ``makemessages`` crash on Python 2 with non-ASCII file names (:ticket:"
"`26897`)."
msgstr ""
"Diperbaiki kegagalan ``makemessages`` pada Python 2 dengan nama berkas bukan-"
"ASCII (:ticket:`26897`)."

msgid "Django 1.9.9 release notes"
msgstr "Catatan terbitan Django 1.9.9"

msgid "Django 1.9.9 fixes several bugs in 1.9.8."
msgstr "Django 1.9.9 memperbaiki beberapa kesalahan di 1.9.8."

msgid ""
"Fixed invalid HTML in template postmortem on the debug page (:ticket:"
"`26938`)."
msgstr ""
"Diperbaiki HTML tidak sah di cetakan postmortem pada halaman mencari "
"kesalahan (:ticket:`26938`)."

msgid ""
"Fixed some GIS database function crashes on MySQL 5.7 (:ticket:`26657`)."
msgstr ""
"Diperbaiki beberapa fungsi tabrakan basisdata GIS pada MySQL 5.7 (:ticket:"
"`26657`)."

msgid "Django 2.0 release notes"
msgstr "Catatan terbitan Django 2.0"

msgid "Welcome to Django 2.0!"
msgstr "Selamat datang di Django 2.0!"

msgid ""
"These release notes cover the :ref:`new features <whats-new-2.0>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-2.0>` "
"you'll want to be aware of when upgrading from Django 1.11 or earlier. "
"We've :ref:`dropped some features<removed-features-2.0>` that have reached "
"the end of their deprecation cycle, and we've :ref:`begun the deprecation "
"process for some features <deprecated-features-2.0>`."
msgstr ""
"Catatan terbitan ini melingkupi :ref:`new features <whats-new-2.0>`, sama "
"halnya beberapa :ref:`backwards incompatible changes <backwards-"
"incompatible-2.0>` anda ingin sadari dari ketika meningkatkan dari Django "
"1.11 atau versi terlama. Kami telah :ref:`dropped some features <removed-"
"features-2.0>` yang telah mencapai akhir dari siklus pengusangan mereka, dan "
"kami telah :ref:`begun the deprecation process for some features <deprecated-"
"features-2.0>`."

msgid ""
"This release starts Django's use of a :ref:`loose form of semantic "
"versioning <internal-release-cadence>`, but there aren't any major backwards "
"incompatible changes that might be expected of a 2.0 release. Upgrading "
"should be a similar amount of effort as past feature releases."
msgstr ""
"Terbitan ini memulai Django menggunakan a :ref:`loose form of semantic "
"versioning <internal-release-cadence>`, tetapi tidak ada perubahan utama "
"ketidaksesuaian kebelakang yang mungkin diharapkan dari terbitan 2.0. "
"Peningkatan harus berupa jumlah usaha sama seperti terbitan-terbitan fitur "
"lampau."

msgid ""
"Django 2.0 supports Python 3.4, 3.5, 3.6, and 3.7. We **highly recommend** "
"and only officially support the latest release of each series."
msgstr ""

msgid "The Django 1.11.x series is the last to support Python 2.7."
msgstr "Urutan DJango 1.11.x adalah terakhir untuk mendukung Python 2.7."

msgid ""
"Django 2.0 will be the last release series to support Python 3.4. If you "
"plan a deployment of Python 3.4 beyond the end-of-life for Django 2.0 (April "
"2019), stick with Django 1.11 LTS (supported until April 2020) instead. "
"Note, however, that the end-of-life for Python 3.4 is March 2019."
msgstr ""
"Django 2.0 akan menjadi urutan terbitan terakhir untuk mendukung Python 3.4. "
"Jika anda berencana sebuah pengembangan daru Python 3.4 diluar akhir-hidup "
"untuk Django 2.0 (April 2019), tetap dengan Django 1.11 LTS (didukung sampai "
"April 2020) sebagai gantinya. Catat, bagaimanapun, bahwa akhir-hidup untuk "
"Python 3.4 adalah Maret 2019."

msgid "Third-party library support for older version of Django"
msgstr "Dukungan pustaka pihak-ketiga untuk versi terlama dari Django"

msgid ""
"Following the release of Django 2.0, we suggest that third-party app authors "
"drop support for all versions of Django prior to 1.11. At that time, you "
"should be able to run your package's tests using ``python -Wd`` so that "
"deprecation warnings do appear. After making the deprecation warning fixes, "
"your app should be compatible with Django 2.0."
msgstr ""
"Mengikuti terbitan dari Django 2.0, kami anjurkan bahwa penulis aplikasi "
"pihak-ketiga menjatuhkan dukungan untuk semua versi Django sebelum 1.11. "
"Pada saat itu, anda harus dapat menjalankan percobaan paket anda menggunakan "
"``python -Wd`` sehingga peringatan pengusangan akan muncul. Setelah membuat "
"perbaikan peringatan pengusangan apliaksi anda harus sesuai dengan Django "
"2.0."

msgid "What's new in Django 2.0"
msgstr "Apa yang baru di Django 2.0"

msgid "Simplified URL routing syntax"
msgstr "Sintaksis perutean URL disederhanakan"

msgid ""
"The new :func:`django.urls.path()` function allows a simpler, more readable "
"URL routing syntax. For example, this example from previous Django releases::"
msgstr ""
"Fungsi baru :func:`django.urls.path()` mengizinkan lebih mudah, sintaksis "
"perutean URL lebih dibaca. Sebagai contoh, contoh ini dari terbitan Django "
"sebelumnya::"

msgid "could be written as::"
msgstr "dapat ditulis sebagai:"

msgid ""
"The new syntax supports type coercion of URL parameters. In the example, the "
"view will receive the ``year`` keyword argument as an integer rather than as "
"a string. Also, the URLs that will match are slightly less constrained in "
"the rewritten example. For example, the year 10000 will now match since the "
"year integers aren't constrained to be exactly four digits long as they are "
"in the regular expression."
msgstr ""
"Sintaksis baru mendukung jenis paksaan parameter URL. Dalam contoh, tampilan "
"akan menerima argumen katakunci ``year`` sebagai sebuah integer daripada "
"sebuah string. Juga, URL yang akan cocok sedikit kurang dibatasi dalam "
"penulisan kembali contoh. Sebagai contoh, tahun 10000 akan sekarang cocok "
"karena tahun integer tidak dibatasi untuk menjadi tepat panjang empat angka "
"ketika mereka berada di regular expression."

msgid ""
"The ``django.conf.urls.url()`` function from previous versions is now "
"available as :func:`django.urls.re_path`. The old location remains for "
"backwards compatibility, without an imminent deprecation. The old ``django."
"conf.urls.include()`` function is now importable from ``django.urls`` so you "
"can use ``from django.urls import include, path, re_path`` in your URLconfs."
msgstr ""
"Fungsi ``django.conf.urls.url()`` dari versi sebelumnya sekarang tersedia "
"sebagai :func:`django.urls.re_path`. Tempat lama tetap untuk kesesuaian "
"kebelakang, tanpa sebuah pengusangan dekat. Fungsi lama ``django.conf.urls."
"include()`` sekarang dapat diimpor dari ``django.urls`` sehingga anda dapat "
"menggunakan ``from django.urls import include, path, re_path`` dalam URLconf "
"and. "

msgid ""
"The :doc:`/topics/http/urls` document is rewritten to feature the new syntax "
"and provide more details."
msgstr ""
"Dokumen :doc:`/topics/http/urls` ditulis kembali untuk ditampilkan sintaksis "
"baru dan menyediakan lebih rinci."

msgid "Mobile-friendly ``contrib.admin``"
msgstr "``contrib.admin`` ramah seluler"

msgid ""
"The admin is now responsive and supports all major mobile devices. Older "
"browsers may experience varying levels of graceful degradation."
msgstr ""
"Admin sekarang bergantian dan mendukung semua perangkat seluler utama. "
"Peramban lama mungkin mengalami tingkaran beragam dari pengurangan yang "
"anggun."

msgid "Window expressions"
msgstr "Pernyataan Window"

msgid ""
"The new :class:`~django.db.models.expressions.Window` expression allows "
"adding an ``OVER`` clause to querysets. You can use :ref:`window functions "
"<window-functions>` and :ref:`aggregate functions <aggregation-functions>` "
"in the expression."
msgstr ""
"Pernyataan baru :class:`~django.db.models.expressions.Window` mengizinkan "
"menambahkan sebuah klausa ``OVER`` pada queryset. Anda dapat menggunakan :"
"ref:`window functions ` dan :ref:`aggregate functions ` dalam pernyataan."

msgid ""
"The new :attr:`.ModelAdmin.autocomplete_fields` attribute and :meth:`."
"ModelAdmin.get_autocomplete_fields` method allow using a `Select2 <https://"
"select2.org/>`_ search widget for ``ForeignKey`` and ``ManyToManyField``."
msgstr ""

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased from "
"36,000 to 100,000."
msgstr ""
"Hitungan perulangan awalan untuk pencampur sandi PBKDF2 ditingkatkan dari "
"36.000 menjadi 100.000."

msgid ""
"Added MySQL support for the :class:`~django.contrib.gis.db.models.functions."
"AsGeoJSON` function, :class:`~django.contrib.gis.db.models.functions."
"GeoHash` function, :class:`~django.contrib.gis.db.models.functions.IsValid` "
"function, :lookup:`isvalid` lookup, and :ref:`distance lookups <distance-"
"lookups>`."
msgstr ""
"Ditambahkan dukungan MySQL untuk fungsi :class:`~django.contrib.gis.db."
"models.functions.AsGeoJSON`, fungsi :class:`~django.contrib.gis.db.models."
"functions.GeoHash`, fungsi :class:`~django.contrib.gis.db.models.functions."
"IsValid`, pencarian :lookup:`isvalid`, dan :ref:`distance lookups `."

msgid ""
"Added the :class:`~django.contrib.gis.db.models.functions.Azimuth` and :"
"class:`~django.contrib.gis.db.models.functions.LineLocatePoint` functions, "
"supported on PostGIS and SpatiaLite."
msgstr ""
"Ditambahkan fungsi :class:`~django.contrib.gis.db.models.functions.Azimuth` "
"dan :class:`~django.contrib.gis.db.models.functions.LineLocatePoint`, "
"didukung PostGIS dan SpatiaLite."

msgid ""
"Any :class:`~django.contrib.gis.geos.GEOSGeometry` imported from GeoJSON now "
"has its SRID set."
msgstr ""
":class:`~django.contrib.gis.geos.GEOSGeometry` apapun diimpor dari GeoJSON "
"sekarang mempunyai kumpulan SRIDnya."

msgid ""
"Added the :attr:`.OSMWidget.default_zoom` attribute to customize the map's "
"default zoom level."
msgstr ""
"Ditambahkan atribut :attr:`.OSMWidget.default_zoom` untuk menyesuaikan "
"tingkatan awalan perbesar peta."

msgid ""
"Made metadata readable and editable on rasters through the :attr:`~django."
"contrib.gis.gdal.GDALRaster.metadata`, :attr:`~django.contrib.gis.gdal."
"GDALRaster.info`, and :attr:`~django.contrib.gis.gdal.GDALBand.metadata` "
"attributes."
msgstr ""
"Dibuat metadata dapat dibaca dan dirubah pada raster melalui atribut :attr:"
"`~django.contrib.gis.gdal.GDALRaster.metadata`, :attr:`~django.contrib.gis."
"gdal.GDALRaster.info`, dan :attr:`~django.contrib.gis.gdal.GDALBand."
"metadata`."

msgid ""
"Allowed passing driver-specific creation options to :class:`~django.contrib."
"gis.gdal.GDALRaster` objects using ``papsz_options``."
msgstr ""
"Diizinkan melewatkan pilihan pembuatan kemudi-tertentu pada obyek :class:"
"`~django.contrib.gis.gdal.GDALRaster` menggunakan ``papsz_options``."

msgid ""
"Allowed creating :class:`~django.contrib.gis.gdal.GDALRaster` objects in "
"GDAL's internal virtual filesystem. Rasters can now be :ref:`created from "
"and converted to binary data <gdal-raster-vsimem>` in-memory."
msgstr ""
"Diizinkan membuat obyek :class:`~django.contrib.gis.gdal.GDALRaster` dalam "
"sistem berkas internal virtual. Raster sekarang dapat :ref:`created from and "
"converted to binary data ` dalam-memori."

msgid ""
"The new :meth:`GDALBand.color_interp() <django.contrib.gis.gdal.GDALBand."
"color_interp>` method returns the color interpretation for the band."
msgstr ""
"Metode baru :meth:`GDALBand.color_interp() <django.contrib.gis.gdal.GDALBand."
"color_interp>` mengembalikan penafsiran warna untuk pita."

msgid ""
"The new ``distinct`` argument for :class:`~django.contrib.postgres."
"aggregates.ArrayAgg` determines if concatenated values will be distinct."
msgstr ""
"Argumen baru ``distinct`` untuk :class:`~django.contrib.postgres.aggregates."
"ArrayAgg` menentukan jika nilai-nilai penggabungan akan dibedakan."

msgid ""
"The new :class:`~django.contrib.postgres.functions.RandomUUID` database "
"function returns a version 4 UUID. It requires use of PostgreSQL's "
"``pgcrypto`` extension which can be activated using the new :class:`~django."
"contrib.postgres.operations.CryptoExtension` migration operation."
msgstr ""
"Fungsi basisdata baru :class:`~django.contrib.postgres.functions.RandomUUID` "
"mengembalikan sebuah versi 4 UUID. Itu membutuhkan menggunakan tambahan "
"``pgcrypto`` PostgreSQL yang dapat diaktifkan menggunakan tindakan "
"perpindahan baru :class:`~django.contrib.postgres.operations."
"CryptoExtension`."

msgid ""
":class:`django.contrib.postgres.indexes.GinIndex` now supports the "
"``fastupdate`` and ``gin_pending_list_limit`` parameters."
msgstr ""
":class:`django.contrib.postgres.indexes.GinIndex` sekarang mendukung "
"parameter ``fastupdate`` dan ``gin_pending_list_limit``."

msgid ""
"The new :class:`~django.contrib.postgres.indexes.GistIndex` class allows "
"creating ``GiST`` indexes in the database. The new :class:`~django.contrib."
"postgres.operations.BtreeGistExtension` migration operation installs the "
"``btree_gist`` extension to add support for operator classes that aren't "
"built-in."
msgstr ""
"Kelas baru  :class:`~django.contrib.postgres.indexes.GistIndex` mengizinkan "
"pembuatan indeks-indeks ``GiST`` dalam basisdata. Tindakan perpindahan baru :"
"class:`~django.contrib.postgres.operations.BtreeGistExtension` memasang "
"tambahan ``btree_gist`` untuk menambah dukungan untuk kelas-kelas penghubung "
"yang belum dibuat."

msgid ""
":djadmin:`inspectdb` can now introspect ``JSONField`` and various "
"``RangeField``\\s (``django.contrib.postgres`` must be in "
"``INSTALLED_APPS``)."
msgstr ""

msgid ""
"Added the ``protocol`` keyword argument to the :class:`~django.contrib."
"sitemaps.GenericSitemap` constructor."
msgstr ""
"Ditambahkan argumen katakunci ``protocol`` ke pembangun :class:`~django."
"contrib.sitemaps.GenericSitemap`."

msgid ""
"``cache.set_many()`` now returns a list of keys that failed to be inserted. "
"For the built-in backends, failed inserts can only happen on memcached."
msgstr ""
"``cache.set_many()`` sekarang mengembalikan daftar dari kunci yang gagal "
"dimasukkan. Untuk backend siap-pakai, kegagalan masukan hanya dapat terjadi "
"pada memcache."

msgid ""
":meth:`File.open() <django.core.files.File.open>` can be used as a context "
"manager, e.g. ``with file.open() as f:``."
msgstr ""
":meth:`File.open() <django.core.files.File.open>` dapat digunakan sebagai "
"pengelola konteks, sebagai contoh ``with file.open() as f:``."

msgid ""
"The new ``date_attrs`` and ``time_attrs`` arguments for :class:`~django."
"forms.SplitDateTimeWidget` and :class:`~django.forms."
"SplitHiddenDateTimeWidget` allow specifying different HTML attributes for "
"the ``DateInput`` and ``TimeInput`` (or hidden) subwidgets."
msgstr ""
"Argumen baru ``date_attrs`` dan ``time_attrs`` untuk :class:`~django.forms."
"SplitDateTimeWidget` dan :class:`~django.forms.SplitHiddenDateTimeWidget` "
"mengizinkan menentukan atribut-atribut HTML berbeda untuk `subwidget "
"`DateInput`` dan ``TimeInput`` (atau tersembunyi)."

msgid ""
"The new :meth:`Form.errors.get_json_data() <django.forms.Form.errors."
"get_json_data>` method returns form errors as a dictionary suitable for "
"including in a JSON response."
msgstr ""
"Metode baru :meth:`Form.errors.get_json_data() <django.forms.Form.errors."
"get_json_data>` mengembalikan bentuk kesalahan sebagai dictionary sesuai "
"untuk termasuk dalam tanggapan JSON."

msgid ""
"The new :attr:`.ContextMixin.extra_context` attribute allows adding context "
"in ``View.as_view()``."
msgstr ""
"Atribut baru :attr:`.ContextMixin.extra_context` mengizinkan menambahkan "
"konteks dalam ``View.as_view()``."

msgid ""
":djadmin:`inspectdb` now translates MySQL's unsigned integer columns to "
"``PositiveIntegerField`` or ``PositiveSmallIntegerField``."
msgstr ""
":djadmin:`inspectdb` sekarang menterjemahkan kolom integer tidak bertanda "
"MySQL menjadi ``PositiveIntegerField`` atau ``PositiveSmallIntegerField``."

msgid ""
"The new :option:`makemessages --add-location` option controls the comment "
"format in ``.po`` files."
msgstr ""

msgid ""
":djadmin:`loaddata` can now :ref:`read from stdin <loading-fixtures-stdin>`."
msgstr ""
":djadmin:`loaddata` sekarang dapat :ref:`read from stdin <loading-fixtures-"
"stdin>`."

msgid ""
"The new :option:`diffsettings --output` option allows formatting the output "
"in a unified diff format."
msgstr ""
"Pilihan baru :option:`diffsettings --output` mengizinkan membentuk keluaran "
"dalam sebuah bentuk berbeda yang bersatu."

msgid ""
"On Oracle, :djadmin:`inspectdb` can now introspect ``AutoField`` if the "
"column is created as an identity column."
msgstr ""
"Pada Oracle, :djadmin:`inspectdb` sekarang dapat menginterospeksi "
"``AutoField`` jika kolom dibuat sebagai sebuah kolom identitas."

msgid "On MySQL, :djadmin:`dbshell` now supports client-side TLS certificates."
msgstr ""
"Pada MySQL, :djadmin:`dbshell` sekarang mendukung sertifikat TLS sisi-klien."

msgid ""
"The new :option:`squashmigrations --squashed-name` option allows naming the "
"squashed migration."
msgstr ""
"Pilihan baru :option:`squashmigrations --squashed-name` mengizinkan "
"menamakan perpindahan yang dihentikan."

msgid ""
"The new :class:`~django.db.models.functions.StrIndex` database function "
"finds the starting index of a string inside another string."
msgstr ""
"Fungsi basisdata baru :class:`~django.db.models.functions.StrIndex`  "
"menemukan permulaan indeks dari string didalam string lain."

msgid ""
"On Oracle, ``AutoField`` and ``BigAutoField`` are now created as `identity "
"columns <https://docs.oracle.com/en/database/oracle/oracle-database/21/"
"drdaa/ intro-to-tools-and-products-supporting-migraiton.html#GUID-14E4817B-"
"F3BC-4D99 -B471-A0ACDC303CC9>`__."
msgstr ""

msgid ""
"The new ``chunk_size`` parameter of :meth:`.QuerySet.iterator` controls the "
"number of rows fetched by the Python database client when streaming results "
"from the database. For databases that don't support server-side cursors, it "
"controls the number of results Django fetches from the database adapter."
msgstr ""
"Parameter baru ``chunk_size`` dari :meth:`.QuerySet.iterator` mengendalikan "
"sejumlah baris diambil oleh klien basisdata Python ketika mengalirkan hasil "
"dari basisdata. Untuk basisdata yang tidak mengukung kursos sisi-peladen, "
"itu mengendalikan sejumlah hasil Django diambil dari penyadur basisdata."

msgid ""
":meth:`.QuerySet.earliest`, :meth:`.QuerySet.latest`, and :attr:`Meta."
"get_latest_by <django.db.models.Options.get_latest_by>` now allow ordering "
"by several fields."
msgstr ""
":meth:`.QuerySet.earliest`, :meth:`.QuerySet.latest`, dan :attr:`Meta."
"get_latest_by <django.db.models.Options.get_latest_by>` sekarang mengizinkan "
"pengurutan berdasarkan beberapa bidang."

msgid ""
"Added the :class:`~django.db.models.functions.ExtractQuarter` function to "
"extract the quarter from :class:`~django.db.models.DateField` and :class:"
"`~django.db.models.DateTimeField`, and exposed it through the :lookup:"
"`quarter` lookup."
msgstr ""
"Ditambahkan fungsi :class:`~django.db.models.functions.ExtractQuarter` untuk "
"mengambil perempat dari :class:`~django.db.models.DateField` dan :class:"
"`~django.db.models.DateTimeField`, dan menampilkan itu melalui pencarian :"
"lookup:`quarter`."

msgid ""
"Added the :class:`~django.db.models.functions.TruncQuarter` function to "
"truncate :class:`~django.db.models.DateField` and :class:`~django.db.models."
"DateTimeField` to the first day of a quarter."
msgstr ""
"Ditambahkan fungsi :class:`~django.db.models.functions.TruncQuarter` untuk "
"memotong :class:`~django.db.models.DateField` dan :class:`~django.db.models."
"DateTimeField` untuk hari pertama dari perempat."

msgid ""
"Added the :attr:`~django.db.models.Index.db_tablespace` parameter to class-"
"based indexes."
msgstr ""
"Ditambahkan parameter :attr:`~django.db.models.Index.db_tablespace` pada "
"pengindeksan berdasarkan-kelas."

msgid ""
"If the database supports a native duration field (Oracle and PostgreSQL), :"
"class:`~django.db.models.functions.Extract` now works with :class:`~django."
"db.models.DurationField`."
msgstr ""
"Jika basisdata mendukung bidang lanma aslinya (Oracle dan PostgreSQL), :"
"class:`~django.db.models.functions.Extract` sekarang bekerja dengan :class:"
"`~django.db.models.DurationField`."

msgid ""
"Added the ``of`` argument to :meth:`.QuerySet.select_for_update()`, "
"supported on PostgreSQL and Oracle, to lock only rows from specific tables "
"rather than all selected tables. It may be helpful particularly when :meth:"
"`~.QuerySet.select_for_update()` is used in conjunction with :meth:`~."
"QuerySet.select_related()`."
msgstr ""
"Ditambahkan argumen ``off`` pada :meth:`.QuerySet.select_for_update()`, "
"didukung pada PostgreSQL dan Oracle, untuk mengunci hanya baris dari tabel-"
"tabel tertentu daripada semua tabel terpilih. Itu mungkin berguna khususnya "
"ketika :meth:`~.QuerySet.select_for_update()` digunakan di hubungan dengan :"
"meth:`~.QuerySet.select_related()`."

msgid ""
"The new ``field_name`` parameter of :meth:`.QuerySet.in_bulk` allows "
"fetching results based on any unique model field."
msgstr ""
"Parameter baru ``field_name`` dari :meth:`.QuerySet.in_bulk` mengizinkan "
"mengambil hasil berdasarkan pada bidang model unik."

msgid ""
":meth:`.CursorWrapper.callproc()` now takes an optional dictionary of "
"keyword parameters, if the backend supports this feature. Of Django's built-"
"in backends, only Oracle supports it."
msgstr ""
":meth:`.CursorWrapper.callproc()` sekarang mengambil sebuah pilihan dari "
"parameter katakunci, jika backend mendukung fitur ini. Dari backend siap-"
"pakai Django, hanya Oracle mendukung itu."

msgid ""
"The new :meth:`connection.execute_wrapper() <django.db.backends.base."
"DatabaseWrapper.execute_wrapper>` method allows :doc:`installing wrappers "
"around execution of database queries </topics/db/instrumentation>`."
msgstr ""
"Metode baru :meth:`connection.execute_wrapper() <django.db.backends.base."
"DatabaseWrapper.execute_wrapper>` mengizinkan  :doc:`installing wrappers "
"around execution of database queries `."

msgid ""
"The new ``filter`` argument for built-in aggregates allows :ref:`adding "
"different conditionals <conditional-aggregation>` to multiple aggregations "
"over the same fields or relations."
msgstr ""
"Argumen baru ``filter`` untuk kumpulan siap-pakai mengizinkan :ref:`adding "
"different conditionals ` untuk banyak kumpulan terhadap bidang atau hubungan "
"sama."

msgid ""
"Added support for expressions in :attr:`Meta.ordering <django.db.models."
"Options.ordering>`."
msgstr ""
"Ditambahkan dukungan untuk pernyataan dalam :attr:`Meta.ordering <django.db."
"models.Options.ordering>`."

msgid ""
"The new ``named`` parameter of :meth:`.QuerySet.values_list` allows fetching "
"results as named tuples."
msgstr ""
"Parameter baru ``named`` dari :meth:`.QuerySet.values_list` mengizinkan "
"mengambil hasil sebagai tuple-tuple bernama."

msgid ""
"The new :class:`.FilteredRelation` class allows adding an ``ON`` clause to "
"querysets."
msgstr ""
"Kelas baru :class:`.FilteredRelation` mengizinkan menambahkan sebuah klausa "
"``ON`` pada queryset."

msgid "Pagination"
msgstr "Penomoran halaman"

msgid ""
"Added :meth:`Paginator.get_page() <django.core.paginator.Paginator."
"get_page>` to provide the documented pattern of handling invalid page "
"numbers."
msgstr ""
"Ditambahkan :meth:`Paginator.get_page() <django.core.paginator.Paginator."
"get_page>` untuk menyediakan pola terdokumentasi dari penanganan nomor "
"halaman tidak sah. "

msgid "The :djadmin:`runserver` web server supports HTTP 1.1."
msgstr ""

msgid ""
"To increase the usefulness of :meth:`.Engine.get_default` in third-party "
"apps, it now returns the first engine if multiple ``DjangoTemplates`` "
"engines are configured in ``TEMPLATES`` rather than raising "
"``ImproperlyConfigured``."
msgstr ""
"Untuk meningkatkan kegunaan dari :meth:`.Engine.get_default` dalam aplikasi "
"pihak-ketiga, itu sekarang mengembalikan mesin pertama jika banyak mesin "
"``DjangoTemplates`` dikonfigurasikan dalam ``TEMPLATES`` daripada "
"memunculkan ``ImproperlyConfigured``."

msgid "Custom template tags may now accept keyword-only arguments."
msgstr ""
"Menyesuaikan etiket cetakan mungkin sekarang menerima argumen hanya-"
"katakunci."

msgid "Added threading support to :class:`~django.test.LiveServerTestCase`."
msgstr ""
"Ditambahkan rangkaian dukungan pada :class:`~django.test.LiveServerTestCase`."

msgid ""
"Added settings that allow customizing the test tablespace parameters for "
"Oracle: :setting:`DATAFILE_SIZE`, :setting:`DATAFILE_TMP_SIZE`, :setting:"
"`DATAFILE_EXTSIZE`, and :setting:`DATAFILE_TMP_EXTSIZE`."
msgstr ""
"Ditambahkan pengaturan yang mengizinkan menyesuaikan parameter tablespace "
"percobaan untuk Oracle: :setting:`DATAFILE_SIZE`, :setting:"
"`DATAFILE_TMP_SIZE`, :setting:`DATAFILE_EXTSIZE`, dan :setting:"
"`DATAFILE_TMP_EXTSIZE`."

msgid ""
"The new :class:`.ProhibitNullCharactersValidator` disallows the null "
"character in the input of the :class:`~django.forms.CharField` form field "
"and its subclasses. Null character input was observed from vulnerability "
"scanning tools. Most databases silently discard null characters, but "
"psycopg2 2.7+ raises an exception when trying to save a null character to a "
"char/text field with PostgreSQL."
msgstr ""

msgid "Backwards incompatible changes in 2.0"
msgstr "Kesesuaian kebelakang berubah di 2.0"

msgid "Removed support for bytestrings in some places"
msgstr "Memindahkan dukungan untuk bytestring di beberapa tempat"

msgid ""
"To support native Python 2 strings, older Django versions had to accept both "
"bytestrings and Unicode strings. Now that Python 2 support is dropped, "
"bytestrings should only be encountered around input/output boundaries "
"(handling of binary fields or HTTP streams, for example). You might have to "
"update your code to limit bytestring usage to a minimum, as Django no longer "
"accepts bytestrings in certain code paths. Python's :option:`-b` option may "
"help detect that mistake in your code."
msgstr ""

msgid ""
"For example, ``reverse()`` now uses ``str()`` instead of ``force_text()`` to "
"coerce the ``args`` and ``kwargs`` it receives, prior to their placement in "
"the URL. For bytestrings, this creates a string with an undesired ``b`` "
"prefix as well as additional quotes (``str(b'foo')`` is ``\"b'foo'\"``). To "
"adapt, call ``decode()`` on the bytestring before passing it to "
"``reverse()``."
msgstr ""

msgid ""
"The ``DatabaseOperations.datetime_cast_date_sql()``, "
"``datetime_cast_time_sql()``, ``datetime_trunc_sql()``, "
"``datetime_extract_sql()``, and ``date_interval_sql()`` methods now return "
"only the SQL to perform the operation instead of SQL and a list of "
"parameters."
msgstr ""
"Metode ``DatabaseOperations.datetime_cast_date_sql()``, "
"``datetime_cast_time_sql()``, ``datetime_trunc_sql()``, "
"``datetime_extract_sql()``, dan ``date_interval_sql()`` sekarang hanya "
"mengembalikan SQL untuk melakukan tindakan daripada SQL dan daftar parameter."

msgid ""
"Third-party database backends should add a ``DatabaseWrapper.display_name`` "
"attribute with the name of the database that your backend works with. Django "
"may use it in various messages, such as in system checks."
msgstr ""
"Backend basisdata pihak-ketiga harus menambahkan atribut ``DatabaseWrapper."
"display_name`` dengan nama dari basisdata dimana backend anda bekerja "
"dengannya. Django menggunakan itu dalam beragam pesan, seperti di "
"pemeriksaan sistem."

msgid ""
"The first argument of ``SchemaEditor._alter_column_type_sql()`` is now "
"``model`` rather than ``table``."
msgstr ""
"Argumen pertama ``SchemaEditor._alter_column_type_sql()`` sekarang ``model`` "
"daripada ``table``."

msgid ""
"The first argument of ``SchemaEditor._create_index_name()`` is now "
"``table_name`` rather than ``model``."
msgstr ""
"Argumen pertama dari ``SchemaEditor._create_index_name()`` sekarang "
"``table_name`` daripada ``model``."

msgid ""
"To enable ``FOR UPDATE OF`` support, set ``DatabaseFeatures."
"has_select_for_update_of = True``. If the database requires that the "
"arguments to ``OF`` be columns rather than tables, set ``DatabaseFeatures."
"select_for_update_of_column = True``."
msgstr ""
"Untuk mengadakan dukungan ``FOR UPDATE OF``, setel ``DatabaseFeatures."
"has_select_for_update_of = True``. jika basisdata membutuhkan bahwa argumen "
"menjadi kolom ``OF`` daripada tabel, setel ``DatabaseFeatures."
"select_for_update_of_column = True``."

msgid ""
"To enable support for :class:`~django.db.models.expressions.Window` "
"expressions, set ``DatabaseFeatures.supports_over_clause`` to ``True``. You "
"may need to customize the ``DatabaseOperations."
"window_start_rows_start_end()`` and/or ``window_start_range_start_end()`` "
"methods."
msgstr ""
"Untuk mengadakan dukungan untuk pernyataan :class:`~django.db.models."
"expressions.Window`, setel ``DatabaseFeatures.supports_over_clause`` menjadi "
"``True``. Anda mungkin butuh menyesuaikan metode ``DatabaseOperations."
"window_start_rows_start_end()`` dan/atau ``window_start_range_start_end()``."

msgid ""
"Third-party database backends should add a ``DatabaseOperations."
"cast_char_field_without_max_length`` attribute with the database data type "
"that will be used in the :class:`~django.db.models.functions.Cast` function "
"for a ``CharField`` if the ``max_length`` argument isn't provided."
msgstr ""
"Backend basisdata pihak-ketiga harus menambahkan sebuah atribut "
"``DatabaseOperations.cast_char_field_without_max_length`` dengan jenis data "
"basisdata yang akan digunakan dalam fungsi :class:`~django.db.models."
"functions.Cast` untuk ``CharField`` jika argumen ``max_length`` tidak "
"disediakan."

msgid ""
"The first argument of ``DatabaseCreation._clone_test_db()`` and "
"``get_test_db_clone_settings()`` is now ``suffix`` rather than ``number`` "
"(in case you want to rename the signatures in your backend for consistency). "
"``django.test`` also now passes those values as strings rather than as "
"integers."
msgstr ""

msgid ""
"Third-party database backends should add a ``DatabaseIntrospection."
"get_sequences()`` method based on the stub in ``BaseDatabaseIntrospection``."
msgstr ""

msgid "Dropped support for Oracle 11.2"
msgstr "Dijatuhkan dukungan untuk Oracle 11.2"

msgid ""
"The end of upstream support for Oracle 11.2 is Dec. 2020. Django 1.11 will "
"be supported until April 2020 which almost reaches this date. Django 2.0 "
"officially supports Oracle 12.1+."
msgstr ""

msgid "Default MySQL isolation level is read committed"
msgstr ""

msgid ""
"MySQL's default isolation level, repeatable read, may cause data loss in "
"typical Django usage. To prevent that and for consistency with other "
"databases, the default isolation level is now read committed. You can use "
"the :setting:`DATABASES` setting to :ref:`use a different isolation level "
"<mysql-isolation-level>`, if needed."
msgstr ""

msgid ""
":attr:`AbstractUser.last_name <django.contrib.auth.models.User.last_name>` "
"``max_length`` increased to 150"
msgstr ""
"``max_length``  :attr:`AbstractUser.last_name <django.contrib.auth.models."
"User.last_name>` ditingkatkan menjadi 150"

msgid ""
"A migration for :attr:`django.contrib.auth.models.User.last_name` is "
"included. If you have a custom user model inheriting from ``AbstractUser``, "
"you'll need to generate and apply a database migration for your user model."
msgstr ""

msgid ""
"If you want to preserve the 30 character limit for last names, use a custom "
"form::"
msgstr ""
"Jika anda ingin menyediakan batasan 30 karakter untuk nama terakhir, gunakan "
"formulir penyesuaian::"

msgid ""
"If you wish to keep this restriction in the admin when editing users, set "
"``UserAdmin.form`` to use this form::"
msgstr ""
"Jika anda berharap menjaga pembatasan ini dalam admin ketika mengubah "
"pengguna, setel ``UserAdmin.form`` untuk menggunakan formulir ini::"

msgid "``QuerySet.reverse()`` and ``last()`` are prohibited after slicing"
msgstr "``QuerySet.reverse()`` dan ``last()`` terlarang setelah membelah"

msgid ""
"Calling ``QuerySet.reverse()`` or ``last()`` on a sliced queryset leads to "
"unexpected results due to the slice being applied after reordering. This is "
"now prohibited, e.g.:"
msgstr ""

msgid "Form fields no longer accept optional arguments as positional arguments"
msgstr ""
"Formulir bidang tidak lagi menerima argumen pilihan sebagai argumen "
"penempatan"

msgid ""
"To help prevent runtime errors due to incorrect ordering of form field "
"arguments, optional arguments of built-in form fields are no longer accepted "
"as positional arguments. For example::"
msgstr ""

msgid "raises an exception and should be replaced with::"
msgstr "memunculkan sebuah pengecualian dan harus diganti dengan::"

msgid "``call_command()`` validates the options it receives"
msgstr "``call_command()`` mensahkan pilihan dia terima"

msgid ""
"``call_command()`` now validates that the argument parser of the command "
"being called defines all of the options passed to ``call_command()``."
msgstr ""

msgid ""
"For custom management commands that use options not created using ``parser."
"add_argument()``, add a ``stealth_options`` attribute on the command::"
msgstr ""

msgid "Indexes no longer accept positional arguments"
msgstr "Indeks-indeks tidak lagi menerima argumen penempatan"

msgid "Foreign key constraints are now enabled on SQLite"
msgstr "Batasan foreign key sekarang diadakan pada SQLite"

msgid ""
"This will appear as a backwards-incompatible change (``IntegrityError: "
"FOREIGN KEY constraint failed``) if attempting to save an existing model "
"instance that's violating a foreign key constraint."
msgstr ""

msgid ""
"Foreign keys are now created with ``DEFERRABLE INITIALLY DEFERRED`` instead "
"of ``DEFERRABLE IMMEDIATE``. Thus, tables may need to be rebuilt to recreate "
"foreign keys with the new definition, particularly if you're using a pattern "
"like this::"
msgstr ""

msgid ""
"If you don't recreate the foreign key as ``DEFERRED``, the first "
"``create()`` would fail now that foreign key constraints are enforced."
msgstr ""
"Jika anda tidak membuat kembali foreign key sebagai ``DEFERRED``, pertama-"
"tama ``create()`` akan gagal sekarang dimana batasan foreign key dipaksakan."

msgid ""
"Backup your database first! After upgrading to Django 2.0, you can then "
"rebuild tables using a script similar to this::"
msgstr ""
"Cadangkan basisdata anda dahulu! Setelah meningkatkan ke Django 2.0, anda "
"dapat kemudian membangun kembali tabel-tabel menggunakan tulisan mirip ini::"

msgid ""
"This script hasn't received extensive testing and needs adaption for various "
"cases such as multiple databases. Feel free to contribute improvements."
msgstr ""

msgid ""
"In addition, because of a table alteration limitation of SQLite, it's "
"prohibited to perform :class:`~django.db.migrations.operations.RenameModel` "
"and :class:`~django.db.migrations.operations.RenameField` operations on "
"models or fields referenced by other models in a transaction. In order to "
"allow migrations containing these operations to be applied, you must set the "
"``Migration.atomic`` attribute to ``False``."
msgstr ""

msgid ""
"The ``SessionAuthenticationMiddleware`` class is removed. It provided no "
"functionality since session authentication is unconditionally enabled in "
"Django 1.10."
msgstr ""
"Kelas ``SessionAuthenticationMiddleware`` dipindahkan. Itu tidak menyediakan "
"kegunaan sejak autentifikasi sesi tanpa syarat ada di Django 1.10."

msgid ""
"The default HTTP error handlers (``handler404``, etc.) are now callables "
"instead of dotted Python path strings. Django favors callable references "
"since they provide better performance and debugging experience."
msgstr ""

msgid ""
":class:`~django.views.generic.base.RedirectView` no longer silences "
"``NoReverseMatch`` if the ``pattern_name`` doesn't exist."
msgstr ""
":class:`~django.views.generic.base.RedirectView` tidak lagi diam "
"``NoReverseMatch`` jika ``pattern_name`` tidak ada."

msgid ""
"When ``USE_L10N`` is off, :class:`~django.forms.FloatField` and :class:"
"`~django.forms.DecimalField` now respect :setting:`DECIMAL_SEPARATOR` and :"
"setting:`THOUSAND_SEPARATOR` during validation. For example, with the "
"settings::"
msgstr ""

msgid ""
"an input of ``\"1.345\"`` is now converted to ``1345`` instead of ``1.345``."
msgstr ""
"sebuah masukan dari ``\"1.345\"`` sekarang dirubah ke ``1345`` daripada "
"``1.345``."

msgid ""
"Subclasses of :class:`~django.contrib.auth.models.AbstractBaseUser` are no "
"longer required to implement ``get_short_name()`` and ``get_full_name()``. "
"(The base implementations that raise ``NotImplementedError`` are removed.) "
"``django.contrib.admin`` uses these methods if implemented but doesn't "
"require them. Third-party apps that use these methods may want to adopt a "
"similar approach."
msgstr ""

msgid ""
"The ``FIRST_DAY_OF_WEEK`` and ``NUMBER_GROUPING`` format settings are now "
"kept as integers in JavaScript and JSON i18n view outputs."
msgstr ""
"Pengaturan bentuk ``FIRST_DAY_OF_WEEK`` dan ``NUMBER_GROUPING`` sekarang "
"dijaga sebagai integer dalam keluaran tampilan JavaScript dan JSON."

msgid ""
":meth:`~django.test.TransactionTestCase.assertNumQueries` now ignores "
"connection configuration queries. Previously, if a test opened a new "
"database connection, those queries could be included as part of the "
"``assertNumQueries()`` count."
msgstr ""

msgid ""
"The default size of the Oracle test tablespace is increased from 20M to 50M "
"and the default autoextend size is increased from 10M to 25M."
msgstr ""

msgid ""
"To improve performance when streaming large result sets from the database, :"
"meth:`.QuerySet.iterator` now fetches 2000 rows at a time instead of 100. "
"The old behavior can be restored using the ``chunk_size`` parameter. For "
"example::"
msgstr ""

msgid ""
"Providing unknown package names in the ``packages`` argument of the :class:"
"`~django.views.i18n.JavaScriptCatalog` view now raises ``ValueError`` "
"instead of passing silently."
msgstr ""

msgid ""
"A model instance's primary key now appears in the default ``Model."
"__str__()`` method, e.g. ``Question object (1)``."
msgstr ""

msgid ""
"``makemigrations`` now detects changes to the model field "
"``limit_choices_to`` option. Add this to your existing migrations or accept "
"an auto-generated migration for fields that use it."
msgstr ""

msgid ""
"Performing queries that require :ref:`automatic spatial transformations "
"<automatic-spatial-transformations>` now raises ``NotImplementedError`` on "
"MySQL instead of silently using non-transformed geometries."
msgstr ""

msgid ""
"``django.core.exceptions.DjangoRuntimeWarning`` is removed. It was only used "
"in the cache backend as an intermediate class in ``CacheKeyWarning``'s "
"inheritance of ``RuntimeWarning``."
msgstr ""
"``django.core.exceptions.DjangoRuntimeWarning`` dipindahkan. Itu hanya "
"digunakan dalam backend cache sebagai sebuah kelas pertengahan dalam warisan "
"``CacheKeyWarning`` dari ``RuntimeWarning``."

msgid ""
"Renamed ``BaseExpression._output_field`` to ``output_field``. You may need "
"to update custom expressions."
msgstr ""

msgid ""
"In older versions, forms and formsets combine their ``Media`` with widget "
"``Media`` by concatenating the two. The combining now tries to :ref:"
"`preserve the relative order of elements in each list <form-media-asset-"
"order>`. ``MediaOrderConflictWarning`` is issued if the order can't be "
"preserved."
msgstr ""

msgid ""
"``django.contrib.gis.gdal.OGRException`` is removed. It's been an alias for "
"``GDALException`` since Django 1.8."
msgstr ""

msgid "Support for GEOS 3.3.x is dropped."
msgstr "Dukungan GEOS 3.3.x dijatuhkan."

msgid ""
"The way data is selected for ``GeometryField`` is changed to improve "
"performance, and in raw SQL queries, those fields must now be wrapped in "
"``connection.ops.select``. See the :ref:`Raw queries note<gis-raw-sql>` in "
"the GIS tutorial for an example."
msgstr ""

msgid "Features deprecated in 2.0"
msgstr "Fitur-fitur diusangkan di 2.0"

msgid ""
"``context`` argument of ``Field.from_db_value()`` and ``Expression."
"convert_value()``"
msgstr ""
"Argumen ``context`` dari ``Field.from_db_value()`` dan ``Expression."
"convert_value()``"

msgid ""
"The ``context`` argument of ``Field.from_db_value()`` and ``Expression."
"convert_value()`` is unused as it's always an empty dictionary. The "
"signature of both methods is now::"
msgstr ""

msgid ""
"Support for the old signature in custom fields and expressions remains until "
"Django 3.0."
msgstr ""

msgid ""
"The ``django.db.backends.postgresql_psycopg2`` module is deprecated in favor "
"of ``django.db.backends.postgresql``. It's been an alias since Django 1.9. "
"This only affects code that imports from the module directly. The "
"``DATABASES`` setting can still use ``'django.db.backends."
"postgresql_psycopg2'``, though you can simplify that by using the ``'django."
"db.backends.postgresql'`` name added in Django 1.9."
msgstr ""

msgid ""
"``django.shortcuts.render_to_response()`` is deprecated in favor of :func:"
"`django.shortcuts.render`. ``render()`` takes the same arguments except that "
"it also requires a ``request``."
msgstr ""

msgid ""
"The ``DEFAULT_CONTENT_TYPE`` setting is deprecated. It doesn't interact well "
"with third-party apps and is obsolete since HTML5 has mostly superseded "
"XHTML."
msgstr ""

msgid ""
"``HttpRequest.xreadlines()`` is deprecated in favor of iterating over the "
"request."
msgstr ""

msgid ""
"The ``field_name`` keyword argument to :meth:`.QuerySet.earliest` and :meth:"
"`.QuerySet.latest` is deprecated in favor of passing the field names as "
"arguments. Write ``.earliest('pub_date')`` instead of ``."
"earliest(field_name='pub_date')``."
msgstr ""

msgid "Features removed in 2.0"
msgstr "Fitur-fitur dipindahkan di 2.0"

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 2.0."
msgstr ""

msgid ""
"See :ref:`deprecated-features-1.9` for details on these changes, including "
"how to remove usage of these features."
msgstr ""

msgid ""
"The ``weak`` argument to ``django.dispatch.signals.Signal.disconnect()`` is "
"removed."
msgstr ""

msgid ""
"``django.db.backends.base.BaseDatabaseOperations.check_aggregate_support()`` "
"is removed."
msgstr ""

msgid "The ``django.forms.extras`` package is removed."
msgstr ""

msgid "The ``assignment_tag`` helper is removed."
msgstr ""

msgid ""
"The ``host`` argument to ``SimpleTestCase.assertsRedirects()`` is removed. "
"The compatibility layer which allows absolute URLs to be considered equal to "
"relative ones when the path is identical is also removed."
msgstr ""

msgid "``Field.rel`` and ``Field.remote_field.to`` are removed."
msgstr "``Field.rel`` dan ``Field.remote_field.to`` dipindahkan."

msgid ""
"The ``on_delete`` argument for ``ForeignKey`` and ``OneToOneField`` is now "
"required in models and migrations. Consider squashing migrations so that you "
"have fewer of them to update."
msgstr ""

msgid "``django.db.models.fields.add_lazy_relation()`` is removed."
msgstr "``django.db.models.fields.add_lazy_relation()`` dipindahkan."

msgid ""
"When time zone support is enabled, database backends that don't support time "
"zones no longer convert aware datetimes to naive values in UTC anymore when "
"such values are passed as parameters to SQL queries executed outside of the "
"ORM, e.g. with ``cursor.execute()``."
msgstr ""

msgid "``django.contrib.auth.tests.utils.skipIfCustomUser()`` is removed."
msgstr "``django.contrib.auth.tests.utils.skipIfCustomUser()`` dipindahkan."

msgid "The ``GeoManager`` and ``GeoQuerySet`` classes are removed."
msgstr "Kelas ``GeoManager`` dan ``GeoQuerySet`` dipindahkan."

msgid "The ``django.contrib.gis.geoip`` module is removed."
msgstr ""

msgid "The ``supports_recursion`` check for template loaders is removed from:"
msgstr ""

msgid "``django.template.engine.Engine.find_template()``"
msgstr "``django.template.engine.Engine.find_template()``"

msgid "``django.template.loader_tags.ExtendsNode.find_template()``"
msgstr "``django.template.loader_tags.ExtendsNode.find_template()``"

msgid "``django.template.loaders.base.Loader.supports_recursion()``"
msgstr "``django.template.loaders.base.Loader.supports_recursion()``"

msgid "``django.template.loaders.cached.Loader.supports_recursion()``"
msgstr "``django.template.loaders.cached.Loader.supports_recursion()``"

msgid ""
"The ``load_template`` and ``load_template_sources`` template loader methods "
"are removed."
msgstr ""

msgid "The ``template_dirs`` argument for template loaders is removed:"
msgstr ""

msgid "``django.template.loaders.base.Loader.get_template()``"
msgstr "``django.template.loaders.base.Loader.get_template()``"

msgid "``django.template.loaders.cached.Loader.cache_key()``"
msgstr "``django.template.loaders.cached.Loader.cache_key()``"

msgid "``django.template.loaders.cached.Loader.get_template()``"
msgstr "``django.template.loaders.cached.Loader.get_template()``"

msgid "``django.template.loaders.cached.Loader.get_template_sources()``"
msgstr "``django.template.loaders.cached.Loader.get_template_sources()``"

msgid "``django.template.loaders.filesystem.Loader.get_template_sources()``"
msgstr "``django.template.loaders.filesystem.Loader.get_template_sources()``"

msgid "``django.template.loaders.base.Loader.__call__()`` is removed."
msgstr "``django.template.loaders.base.Loader.__call__()`` dipindahkan."

msgid ""
"Support for custom error views that don't accept an ``exception`` parameter "
"is removed."
msgstr ""

msgid ""
"The ``mime_type`` attribute of ``django.utils.feedgenerator.Atom1Feed`` and "
"``django.utils.feedgenerator.RssFeed`` is removed."
msgstr ""

msgid "The ``app_name`` argument to ``include()`` is removed."
msgstr ""

msgid ""
"Support for passing a 3-tuple (including ``admin.site.urls``) as the first "
"argument to ``include()`` is removed."
msgstr ""

msgid ""
"Support for setting a URL instance namespace without an application "
"namespace is removed."
msgstr ""

msgid "``Field._get_val_from_obj()`` is removed."
msgstr ""

msgid "``django.template.loaders.eggs.Loader`` is removed."
msgstr ""

msgid ""
"The ``current_app`` parameter to the ``contrib.auth`` function-based views "
"is removed."
msgstr ""

msgid ""
"The ``callable_obj`` keyword argument to ``SimpleTestCase."
"assertRaisesMessage()`` is removed."
msgstr ""

msgid ""
"Support for the ``allow_tags`` attribute on ``ModelAdmin`` methods is "
"removed."
msgstr ""

msgid ""
"The ``enclosure`` keyword argument to ``SyndicationFeed.add_item()`` is "
"removed."
msgstr ""

msgid ""
"The ``django.template.loader.LoaderOrigin`` and ``django.template.base."
"StringOrigin`` aliases for ``django.template.base.Origin`` are removed."
msgstr ""

msgid "See :ref:`deprecated-features-1.10` for details on these changes."
msgstr ""

msgid "The ``makemigrations --exit`` option is removed."
msgstr ""

msgid ""
"Support for direct assignment to a reverse foreign key or many-to-many "
"relation is removed."
msgstr ""

msgid ""
"The ``get_srid()`` and ``set_srid()`` methods of ``django.contrib.gis.geos."
"GEOSGeometry`` are removed."
msgstr ""

msgid ""
"The ``get_x()``, ``set_x()``, ``get_y()``, ``set_y()``, ``get_z()``, and "
"``set_z()`` methods of ``django.contrib.gis.geos.Point`` are removed."
msgstr ""

msgid ""
"The ``get_coords()`` and ``set_coords()`` methods of ``django.contrib.gis."
"geos.Point`` are removed."
msgstr ""

msgid ""
"The ``cascaded_union`` property of ``django.contrib.gis.geos.MultiPolygon`` "
"is removed."
msgstr ""

msgid "``django.utils.functional.allow_lazy()`` is removed."
msgstr ""

msgid "The ``shell --plain`` option is removed."
msgstr ""

msgid ""
"The ``django.core.urlresolvers`` module is removed in favor of its new "
"location, ``django.urls``."
msgstr ""

msgid ""
"``CommaSeparatedIntegerField`` is removed, except for support in historical "
"migrations."
msgstr ""

msgid "The template ``Context.has_key()`` method is removed."
msgstr ""

msgid ""
"Support for the ``django.core.files.storage.Storage.accessed_time()``, "
"``created_time()``, and ``modified_time()`` methods is removed."
msgstr ""

msgid ""
"Support for query lookups using the model name when ``Meta."
"default_related_name`` is set is removed."
msgstr ""
"Mendukung permintaan pencarian menggunakan nama model ketika ``Meta."
"default_related_name`` disetel dipindahkan."

msgid "The MySQL ``__search`` lookup is removed."
msgstr "Pencarian ``__search`` MySQL dipindahkan."

msgid ""
"The shim for supporting custom related manager classes without a "
"``_apply_rel_filters()`` method is removed."
msgstr ""

msgid ""
"Using ``User.is_authenticated()`` and ``User.is_anonymous()`` as methods "
"rather than properties is no longer supported."
msgstr ""

msgid "The ``Model._meta.virtual_fields`` attribute is removed."
msgstr "Atribut ``Model._meta.virtual_fields`` dipindahkan."

msgid ""
"The keyword arguments ``virtual_only`` in ``Field.contribute_to_class()`` "
"and ``virtual`` in ``Model._meta.add_field()`` are removed."
msgstr ""

msgid "The ``javascript_catalog()`` and ``json_catalog()`` views are removed."
msgstr "Tampilan ``javascript_catalog()`` dan ``json_catalog()`` dipindahkan."

msgid "``django.contrib.gis.utils.precision_wkt()`` is removed."
msgstr "``django.contrib.gis.utils.precision_wkt()`` dipindahkan."

msgid ""
"In multi-table inheritance, implicit promotion of a ``OneToOneField`` to a "
"``parent_link`` is removed."
msgstr ""

msgid "Support for ``Widget._format_value()`` is removed."
msgstr "Dukungan untuk ``Widget._format_value()`` dipindahkan."

msgid ""
"``FileField`` methods ``get_directory_name()`` and ``get_filename()`` are "
"removed."
msgstr ""
"Metode-metode ``FileField`` `get_directory_name()`` dan ``get_filename()`` "
"dipindahkan."

msgid ""
"The ``mark_for_escaping()`` function and the classes it uses: "
"``EscapeData``, ``EscapeBytes``, ``EscapeText``, ``EscapeString``, and "
"``EscapeUnicode`` are removed."
msgstr ""
"Fungsi ``mark_for_escaping()`` dan kelas-kelas yang digunakan: "
"``EscapeData``, ``EscapeBytes``, ``EscapeText``, ``EscapeString``, dan "
"``EscapeUnicode`` dipindahkan."

msgid ""
"The ``escape`` filter now uses ``django.utils.html.conditional_escape()``."
msgstr ""
"Penyaring ``escape`` sekarang menggunakan ``django.utils.html."
"conditional_escape()``."

msgid "``Manager.use_for_related_fields`` is removed."
msgstr "``Manager.use_for_related_fields`` dipindahkan."

msgid ""
"Model ``Manager`` inheritance follows MRO inheritance rules. The requirement "
"to use ``Meta.manager_inheritance_from_future`` to opt-in to the behavior is "
"removed."
msgstr ""

msgid ""
"Support for old-style middleware using ``settings.MIDDLEWARE_CLASSES`` is "
"removed."
msgstr ""

msgid "Django 2.0.1 release notes"
msgstr "Catatan terbitan Django 2.0.1"

msgid "Django 2.0.1 fixes several bugs in 2.0."
msgstr "Django 2.0.1 memperbaiki beberapa kesalahan dalam 2.0."

msgid ""
"Reallowed filtering a queryset with ``GeometryField=None`` (:ticket:`28896`)."
msgstr ""
"Mengijinkan kembali queryset dengan ``GeometryField=None`` (:ticket:`28896`)."

msgid ""
"Corrected admin check to allow a ``OneToOneField`` in ``ModelAdmin."
"autocomplete_fields`` (:ticket:`28898`)."
msgstr ""

msgid ""
"Fixed a regression on SQLite where ``DecimalField`` returned a result with "
"trailing zeros in the fractional part truncated (:ticket:`28915`)."
msgstr ""

msgid "Fixed crash in the ``testserver`` command startup (:ticket:`28941`)."
msgstr ""
"Diperbaiki kegagalan dalam memulai perintah ``testserver`` (:ticket:"
"`28941`). "

msgid ""
"Fixed crash when coercing a translatable URL pattern to ``str`` (:ticket:"
"`28947`)."
msgstr ""
"Diperbaiki kegagalan ketika memaksa pola URL terjemahan pada ``str`` (:"
"ticket:`28947`)."

msgid ""
"Fixed crash on SQLite when renaming a field in a model referenced by a "
"``ManyToManyField`` (:ticket:`28884`)."
msgstr ""
"Diperbaiki kegagalan pada SQLite ketika menamai kembali sebuah bidang dalam "
"sebuah model diacukan oleh sebuah ``ManyToManyField`` (:ticket:`28884`)."

msgid ""
"Fixed a crash when chaining ``values()`` or ``values_list()`` after "
"``QuerySet.select_for_update(of=(...))`` (:ticket:`28944`)."
msgstr ""
"Diperbaiki sebuah kegagalan ketika mengikat ``values()`` atau "
"``values_list()`` setelah ``QuerySet.select_for_update(of=(...))`` (:ticket:"
"`28944`)."

msgid ""
"Fixed admin changelist crash when using a query expression in the page's "
"ordering (:ticket:`28958`)."
msgstr ""
"Diperbaiki kegagalan daftar rubah admin ketika menggunakan sebuah pernyataan "
"permintaan dalam pengurutan halaman (:ticket:`28958`)."

msgid "Django 2.0.10 release notes"
msgstr ""

msgid "Django 2.0.10 fixes a security issue and several bugs in 2.0.9."
msgstr ""

msgid ""
"Prevented repetitive calls to ``geos_version_tuple()`` in the ``WKBWriter`` "
"class in an attempt to fix a random crash involving ``LooseVersion`` since "
"Django 2.0.6 (:ticket:`29959`)."
msgstr ""

msgid ""
"Fixed a schema corruption issue on SQLite 3.26+. You might have to drop and "
"rebuild your SQLite database if you applied a migration while using an older "
"version of Django with SQLite 3.26 or later (:ticket:`29182`)."
msgstr ""

msgid ""
"Prevented SQLite schema alterations while foreign key checks are enabled to "
"avoid the possibility of schema corruption (:ticket:`30023`)."
msgstr ""

msgid "Django 2.0.11 release notes"
msgstr ""

msgid "Django 2.0.11 fixes a security issue in 2.0.10."
msgstr ""

msgid "Django 2.0.12 release notes"
msgstr ""

msgid "Django 2.0.12 fixes a packaging error in 2.0.11."
msgstr ""

msgid "Corrected packaging error from 2.0.11 (:ticket:`30175`)."
msgstr ""

msgid "Django 2.0.13 release notes"
msgstr ""

msgid "*February 12, 2019*"
msgstr ""

msgid "Django 2.0.13 fixes a regression in 2.0.12/2.0.11."
msgstr ""

msgid ""
"Fixed crash in ``django.utils.numberformat.format_number()`` when the number "
"has over 200 digits (:ticket:`30177`)."
msgstr ""

msgid "Django 2.0.2 release notes"
msgstr ""

msgid "Django 2.0.2 fixes a security issue and several bugs in 2.0.1."
msgstr ""

msgid ""
"Fixed hidden content at the bottom of the \"The install worked successfully!"
"\" page for some languages (:ticket:`28885`)."
msgstr ""

msgid ""
"Fixed regression in the use of ``QuerySet.values_list(..., flat=True)`` "
"followed by ``annotate()`` (:ticket:`29067`)."
msgstr ""

msgid ""
"Fixed a regression where a queryset that annotates with geometry objects "
"crashes (:ticket:`29054`)."
msgstr ""

msgid ""
"Fixed a regression where ``makemigrations`` crashes if a migrations "
"directory doesn't have an ``__init__.py`` file (:ticket:`29091`)."
msgstr ""

msgid "Django 2.0.3 release notes"
msgstr ""

msgid ""
"Django 2.0.3 fixes two security issues and several bugs in 2.0.2. Also, the "
"latest string translations from Transifex are incorporated."
msgstr ""

msgid ""
"Fixed a regression that caused sliced ``QuerySet.distinct().order_by()`` "
"followed by ``count()`` to crash (:ticket:`29108`)."
msgstr ""

msgid ""
"Prioritized the datetime and time input formats without ``%f`` for the Thai "
"locale to fix the admin time picker widget displaying \"undefined\" (:ticket:"
"`29109`)."
msgstr ""

msgid "Fixed crash with ``QuerySet.order_by(Exists(...))`` (:ticket:`29118`)."
msgstr ""

msgid ""
"Made ``Q.deconstruct()`` deterministic with multiple keyword arguments (:"
"ticket:`29125`). You may need to modify ``Q``'s in existing migrations, or "
"accept an autogenerated migration."
msgstr ""

msgid ""
"Fixed a regression where a ``When()`` expression with a list argument "
"crashes (:ticket:`29166`)."
msgstr ""

msgid ""
"Fixed crash when using a ``Window()`` expression in a subquery (:ticket:"
"`29172`)."
msgstr ""

msgid ""
"Fixed ``AbstractBaseUser.normalize_username()`` crash if the ``username`` "
"argument isn't a string (:ticket:`29176`)."
msgstr ""

msgid "Django 2.0.4 release notes"
msgstr ""

msgid "Django 2.0.4 fixes several bugs in 2.0.3."
msgstr ""

msgid ""
"Fixed a crash when filtering with an ``Exists()`` annotation of a queryset "
"containing a single field (:ticket:`29195`)."
msgstr ""

msgid ""
"Fixed admin autocomplete widget's translations for ``zh-hans`` and ``zh-"
"hant`` languages (:ticket:`29213`)."
msgstr ""

msgid ""
"Corrected admin's autocomplete widget to add a space after custom classes (:"
"ticket:`29221`)."
msgstr ""

msgid ""
"Fixed ``PasswordResetConfirmView`` crash when using a user model with a "
"``UUIDField`` primary key and the reset URL contains an encoded primary key "
"value that decodes to an invalid UUID (:ticket:`29206`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0 where ``OpenLayersWidget`` deserialization "
"ignored the widget map's SRID and assumed 4326 (WGS84) (:ticket:`29116`)."
msgstr ""

msgid "Django 2.0.5 release notes"
msgstr ""

msgid "Django 2.0.5 fixes several bugs in 2.0.4."
msgstr ""

msgid ""
"Corrected the import paths that ``inspectdb`` generates for ``django.contrib."
"postgres`` fields (:ticket:`29307`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0.4 where ``QuerySet.values()`` or "
"``values_list()`` after combining an annotated and unannotated queryset with "
"``union()``, ``difference()``, or ``intersection()`` crashed due to "
"mismatching columns (:ticket:`29286`)."
msgstr ""

msgid "Django 2.0.6 release notes"
msgstr ""

msgid "*June 1, 2018*"
msgstr ""

msgid "Django 2.0.6 fixes several bugs in 2.0.5."
msgstr ""

msgid ""
"Fixed a regression that broke custom template filters that use decorators (:"
"ticket:`29400`)."
msgstr ""

msgid ""
"Fixed detection of custom URL converters in included patterns (:ticket:"
"`29415`)."
msgstr ""

msgid ""
"Fixed a regression that added an unnecessary subquery to the ``GROUP BY`` "
"clause on MySQL when using a ``RawSQL`` annotation (:ticket:`29416`)."
msgstr ""

msgid "Django 2.0.7 release notes"
msgstr ""

msgid "Django 2.0.7 fixes several bugs in 2.0.6."
msgstr ""

msgid ""
"Fixed admin changelist crash when using a query expression without ``asc()`` "
"or ``desc()`` in the page's ordering (:ticket:`29428`)."
msgstr ""

msgid ""
"Fixed admin check crash when using a query expression in ``ModelAdmin."
"ordering`` (:ticket:`29428`)."
msgstr ""

msgid ""
"Fixed ``__regex`` and ``__iregex`` lookups with MySQL 8 (:ticket:`29451`)."
msgstr ""

msgid ""
"Fixed migrations crash with namespace packages on Python 3.7 (:ticket:"
"`28814`)."
msgstr ""

msgid "Django 2.0.8 release notes"
msgstr ""

msgid "Django 2.0.8 fixes a security issue and several bugs in 2.0.7."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0.7 that broke the ``regex`` lookup on "
"MariaDB (even though MariaDB isn't officially supported) (:ticket:`29544`)."
msgstr ""

msgid ""
"Fixed a regression where ``django.template.Template`` crashed if the "
"``template_string`` argument is lazy (:ticket:`29617`)."
msgstr ""

msgid "Django 2.0.9 release notes"
msgstr ""

msgid "Django 2.0.9 fixes a data loss bug in 2.0.8."
msgstr ""

msgid "Django 2.1 release notes"
msgstr ""

msgid "Welcome to Django 2.1!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-2.1>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-2.1>` "
"you'll want to be aware of when upgrading from Django 2.0 or earlier. We've :"
"ref:`dropped some features<removed-features-2.1>` that have reached the end "
"of their deprecation cycle, and we've :ref:`begun the deprecation process "
"for some features <deprecated-features-2.1>`."
msgstr ""

msgid ""
"Django 2.1 supports Python 3.5, 3.6, and 3.7. Django 2.0 is the last version "
"to support Python 3.4.  We **highly recommend** and only officially support "
"the latest release of each series."
msgstr ""

msgid "What's new in Django 2.1"
msgstr ""

msgid "Model \"view\" permission"
msgstr ""

msgid ""
"A \"view\" permission is added to the model :attr:`Meta.default_permissions "
"<django.db.models.Options.default_permissions>`. The new permissions will be "
"created automatically when running :djadmin:`migrate`."
msgstr ""

msgid ""
"This allows giving users read-only access to models in the admin. :meth:`."
"ModelAdmin.has_view_permission` is new. The implementation is backwards "
"compatible in that there isn't a need to assign the \"view\" permission to "
"allow users who have the \"change\" permission to edit objects."
msgstr ""

msgid ""
"There are a couple of :ref:`backwards incompatible considerations "
"<view_permission_backwards_incompatible>`."
msgstr ""

msgid ""
":attr:`.ModelAdmin.search_fields` now accepts any lookup such as "
"``field__exact``."
msgstr ""

msgid "jQuery is upgraded from version 2.2.3 to 3.3.1."
msgstr ""

msgid ""
"The new :meth:`.ModelAdmin.delete_queryset` method allows customizing the "
"deletion process of the \"delete selected objects\" action."
msgstr ""

msgid ""
"You can now :ref:`override the default admin site <overriding-default-admin-"
"site>`."
msgstr ""

msgid ""
"The new :attr:`.ModelAdmin.sortable_by` attribute and :meth:`.ModelAdmin."
"get_sortable_by` method allow limiting the columns that can be sorted in the "
"change list page."
msgstr ""

msgid ""
"The ``admin_order_field`` attribute for elements in :attr:`.ModelAdmin."
"list_display` may now be a query expression."
msgstr ""

msgid ""
"The new :meth:`.ModelAdmin.get_deleted_objects()` method allows customizing "
"the deletion process of the delete view and the \"delete selected\" action."
msgstr ""

msgid ""
"The ``actions.html``, ``change_list_results.html``, ``date_hierarchy.html``, "
"``pagination.html``, ``prepopulated_fields_js.html``, ``search_form.html``, "
"and ``submit_line.html`` templates can now be :ref:`overridden per app or "
"per model <admin-templates-overridden-per-app-or-model>` (besides overridden "
"globally)."
msgstr ""

msgid ""
"The admin change list and change form object tools can now be :ref:"
"`overridden per app, per model, or globally <admin-templates-overridden-per-"
"app-or-model>` with ``change_list_object_tools.html`` and "
"``change_form_object_tools.html`` templates."
msgstr ""

msgid ""
":meth:`.InlineModelAdmin.has_add_permission` is now passed the parent object "
"as the second positional argument, ``obj``."
msgstr ""

msgid ""
"Admin actions may now :ref:`specify permissions <admin-action-permissions>` "
"to limit their availability to certain users."
msgstr ""

msgid ""
":djadmin:`createsuperuser` now gives a prompt to allow bypassing the :"
"setting:`AUTH_PASSWORD_VALIDATORS` checks."
msgstr ""

msgid ""
"The new :meth:`.GEOSGeometry.buffer_with_style` method is a version of :meth:"
"`~.GEOSGeometry.buffer` that allows customizing the style of the buffer."
msgstr ""

msgid ""
":class:`~django.contrib.gis.forms.widgets.OpenLayersWidget` is now based on "
"OpenLayers 4.6.5 (previously 3.20.1)."
msgstr ""

msgid ""
"Added the :setting:`SESSION_COOKIE_SAMESITE` setting to set the ``SameSite`` "
"cookie flag on session cookies."
msgstr ""

msgid ""
"The :ref:`local-memory cache backend <local-memory-caching>` now uses a "
"least-recently-used (LRU) culling strategy rather than a pseudo-random one."
msgstr ""

msgid ""
"The new :meth:`~django.core.cache.cache.touch` method of the :ref:`low-level "
"cache API <low-level-cache-api>` updates the timeout of cache keys."
msgstr ""

msgid ""
"Added the :setting:`CSRF_COOKIE_SAMESITE` setting to set the ``SameSite`` "
"cookie flag on CSRF cookies."
msgstr ""

msgid ""
"The widget for ``ImageField`` now renders with the HTML attribute "
"``accept=\"image/*\"``."
msgstr ""

msgid ""
"Added the :meth:`~django.utils.translation.get_supported_language_variant` "
"function."
msgstr ""

msgid ""
"Untranslated strings for territorial language variants now use the "
"translations of the generic language. For example, untranslated ``pt_BR`` "
"strings use ``pt`` translations."
msgstr ""

msgid ""
"The new :option:`inspectdb --include-views` option allows creating models "
"for database views."
msgstr ""

msgid ""
"The :class:`~django.core.management.BaseCommand` class now uses a custom "
"help formatter so that the standard options like ``--verbosity`` or ``--"
"settings`` appear last in the help output, giving a more prominent position "
"to subclassed command's options."
msgstr ""

msgid "Added support for serialization of ``functools.partialmethod`` objects."
msgstr ""

msgid ""
"To support frozen environments, migrations may be loaded from ``.pyc`` files."
msgstr ""

msgid "Models can now use ``__init_subclass__()`` from :pep:`487`."
msgstr ""

msgid ""
"A ``BinaryField`` may now be set to ``editable=True`` if you wish to include "
"it in model forms."
msgstr ""

msgid ""
"A number of new text database functions are added: :class:`~django.db.models."
"functions.Chr`, :class:`~django.db.models.functions.Left`, :class:`~django."
"db.models.functions.LPad`, :class:`~django.db.models.functions.LTrim`, :"
"class:`~django.db.models.functions.Ord`, :class:`~django.db.models.functions."
"Repeat`, :class:`~django.db.models.functions.Replace`, :class:`~django.db."
"models.functions.Right`, :class:`~django.db.models.functions.RPad`, :class:"
"`~django.db.models.functions.RTrim`, and :class:`~django.db.models.functions."
"Trim`."
msgstr ""

msgid ""
"The new :class:`~django.db.models.functions.TruncWeek` function truncates :"
"class:`~django.db.models.DateField` and :class:`~django.db.models."
"DateTimeField` to the Monday of a week."
msgstr ""

msgid "Query expressions can now be negated using a minus sign."
msgstr ""

msgid ""
":meth:`.QuerySet.order_by` and :meth:`distinct(*fields) <.QuerySet."
"distinct>` now support using field transforms."
msgstr ""

msgid ""
":class:`~django.db.models.BooleanField` can now be ``null=True``. This is "
"encouraged instead of ``NullBooleanField``, which will likely be deprecated "
"in the future."
msgstr ""

msgid ""
"The new :meth:`.QuerySet.explain` method displays the database's execution "
"plan of a queryset's query."
msgstr ""

msgid ":meth:`.QuerySet.raw` now supports :meth:`~.QuerySet.prefetch_related`."
msgstr ""

msgid "Added :meth:`.HttpRequest.get_full_path_info`."
msgstr ""

msgid ""
"Added the ``samesite`` argument to :meth:`.HttpResponse.set_cookie` to allow "
"setting the ``SameSite`` cookie flag."
msgstr ""

msgid ""
"The new ``as_attachment`` argument for :class:`~django.http.FileResponse` "
"sets the ``Content-Disposition`` header to make the browser ask if the user "
"wants to download the file. ``FileResponse`` also tries to set the ``Content-"
"Type`` and ``Content-Length`` headers where appropriate."
msgstr ""

msgid ""
"The new :tfilter:`json_script` filter safely outputs a Python object as "
"JSON, wrapped in a ``<script>`` tag, ready for use with JavaScript."
msgstr ""

msgid ""
"Added test :class:`~django.test.Client` support for 307 and 308 redirects."
msgstr ""

msgid ""
"The test :class:`~django.test.Client` now serializes a request data "
"dictionary as JSON if ``content_type='application/json'``. You can customize "
"the JSON encoder with test client's ``json_encoder`` parameter."
msgstr ""

msgid ""
"The new :meth:`.SimpleTestCase.assertWarnsMessage` method is a simpler "
"version of :meth:`~unittest.TestCase.assertWarnsRegex`."
msgstr ""

msgid "Backwards incompatible changes in 2.1"
msgstr ""

msgid ""
"To adhere to :pep:`249`, exceptions where a database doesn't support a "
"feature are changed from :exc:`NotImplementedError` to :exc:`django.db."
"NotSupportedError`."
msgstr ""

msgid ""
"Renamed the ``allow_sliced_subqueries`` database feature flag to "
"``allow_sliced_subqueries_with_in``."
msgstr ""

msgid ""
"``DatabaseOperations.distinct_sql()`` now requires an additional ``params`` "
"argument and returns a tuple of SQL and parameters instead of an SQL string."
msgstr ""

msgid ""
"``DatabaseFeatures.introspected_boolean_field_type`` is changed from a "
"method to a property."
msgstr ""

msgid "Support for SpatiaLite 4.0 is removed."
msgstr ""

msgid "Dropped support for MySQL 5.5"
msgstr ""

msgid ""
"The end of upstream support for MySQL 5.5 is December 2018. Django 2.1 "
"supports MySQL 5.6 and higher."
msgstr ""

msgid "Dropped support for PostgreSQL 9.3"
msgstr ""

msgid ""
"The end of upstream support for PostgreSQL 9.3 is September 2018. Django 2.1 "
"supports PostgreSQL 9.4 and higher."
msgstr ""

msgid ""
"Removed ``BCryptPasswordHasher`` from the default ``PASSWORD_HASHERS`` "
"setting"
msgstr ""

msgid ""
"If you used bcrypt with Django 1.4 or 1.5 (before "
"``BCryptSHA256PasswordHasher`` was added in Django 1.6), you might have some "
"passwords that use the ``BCryptPasswordHasher`` hasher."
msgstr ""

msgid "You can check if that's the case like this::"
msgstr ""

msgid ""
"If you want to continue to allow those passwords to be used, you'll have to "
"define the :setting:`PASSWORD_HASHERS` setting (if you don't already) and "
"include ``'django.contrib.auth.hashers.BCryptPasswordHasher'``."
msgstr ""

msgid "Moved ``wrap_label`` widget template context variable"
msgstr ""

msgid ""
"To fix the lack of ``<label>`` when using ``RadioSelect`` and "
"``CheckboxSelectMultiple`` with ``MultiWidget``, the ``wrap_label`` context "
"variable now appears as an attribute of each option. For example, in a "
"custom ``input_option.html`` template, change ``{% if wrap_label %}`` to "
"``{% if widget.wrap_label %}``."
msgstr ""

msgid "``SameSite`` cookies"
msgstr ""

msgid ""
"The cookies used for ``django.contrib.sessions``, ``django.contrib."
"messages``, and Django's CSRF protection now set the ``SameSite`` flag to "
"``Lax`` by default. Browsers that respect this flag won't send these cookies "
"on cross-origin requests. If you rely on the old behavior, set the :setting:"
"`SESSION_COOKIE_SAMESITE` and/or :setting:`CSRF_COOKIE_SAMESITE` setting to "
"``None``."
msgstr ""

msgid "Considerations for the new model \"view\" permission"
msgstr ""

msgid "Custom admin forms need to take the view-only case into account"
msgstr ""

msgid ""
"With the new \"view\" permission, existing custom admin forms may raise "
"errors when a user doesn't have the change permission because the form might "
"access nonexistent fields. Fix this by overriding :meth:`.ModelAdmin."
"get_form` and checking if the user has the \"change\" permissions and "
"returning the default form if not::"
msgstr ""

msgid "New default view permission could allow unwanted access to admin views"
msgstr ""

msgid ""
"If you have a custom permission with a codename of the form "
"``view_<modelname>``, the new view permission handling in the admin will "
"allow view access to the changelist and detail pages for those models. If "
"this is unwanted, you must change your custom permission codename."
msgstr ""

msgid ""
"The minimum supported version of ``mysqlclient`` is increased from 1.3.3 to "
"1.3.7."
msgstr ""

msgid "Support for SQLite < 3.7.15 is removed."
msgstr ""

msgid ""
"The date format of ``Set-Cookie``'s ``Expires`` directive is changed to "
"follow :rfc:`7231#section-7.1.1.1` instead of Netscape's cookie standard. "
"Hyphens present in dates like ``Tue, 25-Dec-2018 22:26:13 GMT`` are removed. "
"This change should be merely cosmetic except perhaps for antiquated browsers "
"that don't parse the new format."
msgstr ""

msgid ""
"``allowed_hosts`` is now a required argument of private API ``django.utils."
"http.is_safe_url()``."
msgstr ""

msgid ""
"The ``multiple`` attribute rendered by the :class:`~django.forms."
"SelectMultiple` widget now uses HTML5 boolean syntax rather than XHTML's "
"``multiple=\"multiple\"``."
msgstr ""

msgid ""
"HTML rendered by form widgets no longer includes a closing slash on void "
"elements, e.g. ``<br>``. This is incompatible within XHTML, although some "
"widgets already used aspects of HTML5 such as boolean attributes."
msgstr ""

msgid ""
"The value of :class:`~django.forms.SelectDateWidget`'s empty options is "
"changed from 0 to an empty string, which mainly may require some adjustments "
"in tests that compare HTML."
msgstr ""

msgid ""
":meth:`.User.has_usable_password` and the :func:`~django.contrib.auth."
"hashers.is_password_usable` function no longer return ``False`` if the "
"password is ``None`` or an empty string, or if the password uses a hasher "
"that's not in the :setting:`PASSWORD_HASHERS` setting. This undocumented "
"behavior was a regression in Django 1.6 and prevented users with such "
"passwords from requesting a password reset. Audit your code to confirm that "
"your usage of these APIs don't rely on the old behavior."
msgstr ""

msgid ""
"Since migrations are now loaded from ``.pyc`` files, you might need to "
"delete them if you're working in a mixed Python 2 and Python 3 environment."
msgstr ""

msgid ""
"Using ``None`` as a ``django.contrib.postgres.fields.JSONField`` lookup "
"value now matches objects that have the specified key and a null value "
"rather than objects that don't have the key."
msgstr ""

msgid ""
"The admin CSS class ``field-box`` is renamed to ``fieldBox`` to prevent "
"conflicts with the class given to model fields named \"box\"."
msgstr ""

msgid ""
"Since the admin's ``actions.html``, ``change_list_results.html``, "
"``date_hierarchy.html``, ``pagination.html``, ``prepopulated_fields_js."
"html``, ``search_form.html``, and ``submit_line.html`` templates can now be "
"overridden per app or per model, you may need to rename existing templates "
"with those names that were written for a different purpose."
msgstr ""

msgid ""
"``QuerySet.raw()`` now caches its results like regular querysets. Use "
"``iterator()`` if you don't want caching."
msgstr ""

msgid ""
"The database router :meth:`allow_relation` method is called in more cases. "
"Improperly written routers may need to be updated accordingly."
msgstr ""

msgid ""
"Translations are no longer deactivated before running management commands. "
"If your custom command requires translations to be deactivated (for example, "
"to insert untranslated content into the database), use the new :ref:"
"`@no_translations decorator <management-commands-and-locales>`."
msgstr ""

msgid ""
"Management commands no longer allow the abbreviated forms of the ``--"
"settings`` and ``--pythonpath`` arguments."
msgstr ""

msgid ""
"The private ``django.db.models.sql.constants.QUERY_TERMS`` constant is "
"removed. The :meth:`~.RegisterLookupMixin.get_lookup` and :meth:`~."
"RegisterLookupMixin.get_lookups` methods of the :ref:`Lookup Registration "
"API <lookup-registration-api>` may be suitable alternatives. Compared to the "
"``QUERY_TERMS`` constant, they allow your code to also account for any "
"custom lookups that have been registered."
msgstr ""

msgid ""
"Compatibility with ``py-bcrypt`` is removed as it's unmaintained. Use :pypi:"
"`bcrypt` instead."
msgstr ""

msgid "Features deprecated in 2.1"
msgstr ""

msgid ""
"The ``ForceRHR`` GIS function is deprecated in favor of the new :class:"
"`~django.contrib.gis.db.models.functions.ForcePolygonCW` function."
msgstr ""

msgid ""
"``django.utils.http.cookie_date()`` is deprecated in favor of :func:`~django."
"utils.http.http_date`, which follows the format of the latest RFC."
msgstr ""

msgid ""
"``{% load staticfiles %}`` and ``{% load admin_static %}`` are deprecated in "
"favor of ``{% load static %}``, which works the same."
msgstr ""

msgid ""
"``django.contrib.staticfiles.templatetags.static()`` is deprecated in favor "
"of ``django.templatetags.static.static()``."
msgstr ""

msgid ""
"Support for :meth:`.InlineModelAdmin.has_add_permission` methods that don't "
"accept ``obj`` as the second positional argument will be removed in Django "
"3.0."
msgstr ""

msgid "Features removed in 2.1"
msgstr ""

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 2.1. See :ref:`deprecated-features-1.11` for details, "
"including how to remove usage of these features."
msgstr ""

msgid ""
"``contrib.auth.views.login()``, ``logout()``, ``password_change()``, "
"``password_change_done()``, ``password_reset()``, ``password_reset_done()``, "
"``password_reset_confirm()``, and ``password_reset_complete()`` are removed."
msgstr ""

msgid ""
"The ``extra_context`` parameter of ``contrib.auth.views."
"logout_then_login()`` is removed."
msgstr ""

msgid "``django.test.runner.setup_databases()`` is removed."
msgstr ""

msgid "``django.utils.translation.string_concat()`` is removed."
msgstr ""

msgid ""
"``django.core.cache.backends.memcached.PyLibMCCache`` no longer supports "
"passing ``pylibmc`` behavior settings as top-level attributes of ``OPTIONS``."
msgstr ""

msgid ""
"The ``host`` parameter of ``django.utils.http.is_safe_url()`` is removed."
msgstr ""

msgid ""
"Silencing of exceptions raised while rendering the ``{% include %}`` "
"template tag is removed."
msgstr ""

msgid "``DatabaseIntrospection.get_indexes()`` is removed."
msgstr ""

msgid ""
"The ``authenticate()`` method of authentication backends requires "
"``request`` as the first positional argument."
msgstr ""

msgid "The ``django.db.models.permalink()`` decorator is removed."
msgstr ""

msgid ""
"The ``USE_ETAGS`` setting is removed. ``CommonMiddleware`` and ``django."
"utils.cache.patch_response_headers()`` no longer set ETags."
msgstr ""

msgid "The ``Model._meta.has_auto_field`` attribute is removed."
msgstr ""

msgid ""
"``url()``'s support for inline flags in regular expression groups (``(?i)``, "
"``(?L)``, ``(?m)``, ``(?s)``, and ``(?u)``) is removed."
msgstr ""

msgid ""
"Support for ``Widget.render()`` methods without the ``renderer`` argument is "
"removed."
msgstr ""

msgid "Django 2.1.1 release notes"
msgstr ""

msgid "*August 31, 2018*"
msgstr ""

msgid "Django 2.1.1 fixes several bugs in 2.1."
msgstr ""

msgid ""
"Fixed a regression where ``QueryDict.urlencode()`` crashed if the dictionary "
"contains a non-string value (:ticket:`29627`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0 where using ``manage.py test --keepdb`` "
"fails on PostgreSQL if the database exists and the user doesn't have "
"permission to create databases (:ticket:`29613`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0 where combining ``Q`` objects with ``__in`` "
"lookups and lists crashed (:ticket:`29643`)."
msgstr ""

msgid ""
"Fixed translation failure of ``DurationField``'s \"overflow\" error message "
"(:ticket:`29623`)."
msgstr ""

msgid ""
"Fixed a regression where the admin change form crashed if the user doesn't "
"have the 'add' permission to a model that uses ``TabularInline`` (:ticket:"
"`29637`)."
msgstr ""

msgid ""
"Fixed a regression where a ``related_query_name`` reverse accessor wasn't "
"set up when a ``GenericRelation`` is declared on an abstract base model (:"
"ticket:`29653`)."
msgstr ""

msgid ""
"Fixed the test client's JSON serialization of a request data dictionary for "
"structured content type suffixes (:ticket:`29662`)."
msgstr ""

msgid ""
"Made the admin change view redirect to the changelist view after a POST if "
"the user has the 'view' permission (:ticket:`29663`)."
msgstr ""

msgid ""
"Fixed admin change view crash for view-only users if the form has an extra "
"form field (:ticket:`29682`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0.5 where ``QuerySet.values()`` or "
"``values_list()`` after combining querysets with ``extra()`` with "
"``union()``, ``difference()``, or ``intersection()`` crashed due to "
"mismatching columns (:ticket:`29694`)."
msgstr ""

msgid ""
"Fixed crash if ``InlineModelAdmin.has_add_permission()`` doesn't accept the "
"``obj`` argument (:ticket:`29723`)."
msgstr ""

msgid "Django 2.1.10 release notes"
msgstr ""

msgid "Django 2.1.10 fixes a security issue in 2.1.9."
msgstr ""

msgid "Django 2.1.11 release notes"
msgstr ""

msgid "Django 2.1.11 fixes security issues in 2.1.10."
msgstr ""

msgid "Django 2.1.12 release notes"
msgstr ""

msgid "Django 2.1.12 fixes a regression in 2.1.11."
msgstr ""

msgid "Django 2.1.13 release notes"
msgstr ""

msgid "Django 2.1.13 fixes a regression in 2.1.11."
msgstr ""

msgid "Django 2.1.14 release notes"
msgstr ""

msgid "Django 2.1.14 fixes a regression in 2.1.13."
msgstr ""

msgid "Django 2.1.15 release notes"
msgstr ""

msgid "*December 2, 2019*"
msgstr ""

msgid "Django 2.1.15 fixes a security issue and a data loss bug in 2.1.14."
msgstr ""

msgid "CVE-2019-19118: Privilege escalation in the Django admin."
msgstr ""

msgid ""
"Since Django 2.1, a Django model admin displaying a parent model with "
"related model inlines, where the user has view-only permissions to a parent "
"model but edit permissions to the inline model, would display a read-only "
"view of the parent model but editable forms for the inline."
msgstr ""

msgid ""
"Submitting these forms would not allow direct edits to the parent model, but "
"would trigger the parent model's ``save()`` method, and cause pre and post-"
"save signal handlers to be invoked. This is a privilege escalation as a user "
"who lacks permission to edit a model should not be able to trigger its save-"
"related signals."
msgstr ""

msgid ""
"To resolve this issue, the permission handling code of the Django admin "
"interface has been changed. Now, if a user has only the \"view\" permission "
"for a parent model, the entire displayed form will not be editable, even if "
"the user has permission to edit models included in inlines."
msgstr ""

msgid ""
"This is a backwards-incompatible change, and the Django security team is "
"aware that some users of Django were depending on the ability to allow "
"editing of inlines in the admin form of an otherwise view-only parent model."
msgstr ""

msgid ""
"Given the complexity of the Django admin, and in-particular the permissions "
"related checks, it is the view of the Django security team that this change "
"was necessary: that it is not currently feasible to maintain the existing "
"behavior while escaping the potential privilege escalation in a way that "
"would avoid a recurrence of similar issues in the future, and that would be "
"compatible with Django's *safe by default* philosophy."
msgstr ""

msgid ""
"For the time being, developers whose applications are affected by this "
"change should replace the use of inlines in read-only parents with custom "
"forms and views that explicitly implement the desired functionality. In the "
"longer term, adding a documented, supported, and properly-tested mechanism "
"for partially-editable multi-model forms to the admin interface may occur in "
"Django itself."
msgstr ""

msgid ""
"Fixed a data loss possibility in the :meth:`~django.db.models.query.QuerySet."
"select_for_update()`. When using ``'self'`` in the ``of`` argument with :ref:"
"`multi-table inheritance <multi-table-inheritance>`, a parent model was "
"locked instead of the queryset's model (:ticket:`30953`)."
msgstr ""

msgid "Django 2.1.2 release notes"
msgstr ""

msgid ""
"Django 2.1.2 fixes a security issue and several bugs in 2.1.1. Also, the "
"latest string translations from Transifex are incorporated."
msgstr ""

msgid "CVE-2018-16984: Password hash disclosure to \"view only\" admin users"
msgstr ""

msgid ""
"If an admin user has the change permission to the user model, only part of "
"the password hash is displayed in the change form. Admin users with the view "
"(but not change) permission to the user model were displayed the entire "
"hash. While it's typically infeasible to reverse a strong password hash, if "
"your site uses weaker password hashing algorithms such as MD5 or SHA1, it "
"could be a problem."
msgstr ""

msgid ""
"Fixed a regression where nonexistent joins in ``F()`` no longer raised "
"``FieldError`` (:ticket:`29727`)."
msgstr ""

msgid ""
"Fixed a regression where files starting with a tilde or underscore weren't "
"ignored by the migrations loader (:ticket:`29749`)."
msgstr ""

msgid ""
"Made migrations detect changes to ``Meta.default_related_name`` (:ticket:"
"`29755`)."
msgstr ""

msgid "Added compatibility for ``cx_Oracle`` 7 (:ticket:`29759`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0 where unique index names weren't quoted (:"
"ticket:`29778`)."
msgstr ""

msgid ""
"Fixed a regression where sliced queries with multiple columns with the same "
"name crashed on Oracle 12.1 (:ticket:`29630`)."
msgstr ""

msgid ""
"Fixed a crash when a user with the view (but not change) permission made a "
"POST request to an admin user change form (:ticket:`29809`)."
msgstr ""

msgid "Django 2.1.3 release notes"
msgstr ""

msgid "*November 1, 2018*"
msgstr ""

msgid "Django 2.1.3 fixes several bugs in 2.1.2."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0 where combining ``Q`` objects with ``__in`` "
"lookups and lists crashed (:ticket:`29838`)."
msgstr ""

msgid ""
"Fixed a regression in Django 1.11 where ``django-admin shell`` may hang on "
"startup (:ticket:`29774`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0 where test databases aren't reused with "
"``manage.py test --keepdb`` on MySQL (:ticket:`29827`)."
msgstr ""

msgid ""
"Fixed a regression where cached foreign keys that use ``to_field`` were "
"incorrectly cleared in ``Model.save()`` (:ticket:`29896`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.0 where ``FileSystemStorage`` crashes with "
"``FileExistsError`` if concurrent saves try to create the same directory (:"
"ticket:`29890`)."
msgstr ""

msgid "Django 2.1.4 release notes"
msgstr ""

msgid "Django 2.1.4 fixes several bugs in 2.1.3."
msgstr ""

msgid ""
"Corrected the default password list that ``CommonPasswordValidator`` uses by "
"lowercasing all passwords to match the format expected by the validator (:"
"ticket:`29952`)."
msgstr ""

msgid ""
"Prevented repetitive calls to ``geos_version_tuple()`` in the ``WKBWriter`` "
"class in an attempt to fix a random crash involving ``LooseVersion`` (:"
"ticket:`29959`)."
msgstr ""

msgid ""
"Fixed keep-alive support in ``runserver`` after it was disabled to fix "
"another issue in Django 2.0 (:ticket:`29849`)."
msgstr ""

msgid ""
"Fixed admin view-only change form crash when using ``ModelAdmin."
"prepopulated_fields`` (:ticket:`29929`)."
msgstr ""

msgid ""
"Fixed \"Please correct the errors below\" error message when editing an "
"object in the admin if the user only has the \"view\" permission on inlines "
"(:ticket:`29930`)."
msgstr ""

msgid "Django 2.1.5 release notes"
msgstr ""

msgid "Django 2.1.5 fixes a security issue and several bugs in 2.1.4."
msgstr ""

msgid "Fixed compatibility with mysqlclient 1.3.14 (:ticket:`30013`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.1.4 (which enabled keep-alive connections) "
"where request body data isn't properly consumed for such connections (:"
"ticket:`30015`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.1.4 where ``InlineModelAdmin."
"has_change_permission()`` is incorrectly called with a non-``None`` ``obj`` "
"argument during an object add (:ticket:`30050`)."
msgstr ""

msgid "Django 2.1.6 release notes"
msgstr ""

msgid "Django 2.1.6 fixes a security issue and a bug in 2.1.5."
msgstr ""

msgid ""
"Made the ``obj`` argument of ``InlineModelAdmin.has_add_permission()`` "
"optional to restore backwards compatibility with third-party code that "
"doesn't provide it (:ticket:`30097`)."
msgstr ""

msgid "Django 2.1.7 release notes"
msgstr ""

msgid "Django 2.1.7 fixes a packaging error in 2.1.6."
msgstr ""

msgid "Corrected packaging error from 2.1.6 (:ticket:`30175`)."
msgstr ""

msgid "Django 2.1.8 release notes"
msgstr ""

msgid "*April 1, 2019*"
msgstr ""

msgid "Django 2.1.8 fixes a bug in 2.1.7."
msgstr ""

msgid ""
"Prevented admin inlines for a ``ManyToManyField``\\'s implicit through model "
"from being editable if the user only has the view permission (:ticket:"
"`30289`)."
msgstr ""

msgid "Django 2.1.9 release notes"
msgstr ""

msgid "Django 2.1.9 fixes security issues in 2.1.8."
msgstr ""

msgid "Patched bundled jQuery for CVE-2019-11358: Prototype pollution"
msgstr ""

msgid ""
"jQuery before 3.4.0, mishandles ``jQuery.extend(true, {}, ...)`` because of "
"``Object.prototype`` pollution. If an unsanitized source object contained an "
"enumerable ``__proto__`` property, it could extend the native ``Object."
"prototype``."
msgstr ""

msgid ""
"The bundled version of jQuery used by the Django admin has been patched to "
"allow for the ``select2`` library's use of ``jQuery.extend()``."
msgstr ""

msgid "Django 2.2 release notes"
msgstr ""

msgid "Welcome to Django 2.2!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-2.2>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-2.2>` "
"you'll want to be aware of when upgrading from Django 2.1 or earlier. We've :"
"ref:`begun the deprecation process for some features <deprecated-"
"features-2.2>`."
msgstr ""

msgid ""
"Django 2.2 is designated as a :term:`long-term support release <Long-term "
"support release>`. It will receive security updates for at least three years "
"after its release. Support for the previous LTS, Django 1.11, will end in "
"April 2020."
msgstr ""

msgid ""
"Django 2.2 supports Python 3.5, 3.6, 3.7, 3.8 (as of 2.2.8), and 3.9 (as of "
"2.2.17). We **highly recommend** and only officially support the latest "
"release of each series."
msgstr ""

msgid "What's new in Django 2.2"
msgstr ""

msgid "Constraints"
msgstr ""

msgid ""
"The new :class:`~django.db.models.CheckConstraint` and :class:`~django.db."
"models.UniqueConstraint` classes enable adding custom database constraints. "
"Constraints are added to models using the :attr:`Meta.constraints <django.db."
"models.Options.constraints>` option."
msgstr ""

msgid ""
"Added a CSS class to the column headers of :class:`~django.contrib.admin."
"TabularInline`."
msgstr ""

msgid ""
"The ``HttpRequest`` is now passed as the first positional argument to :meth:"
"`.RemoteUserBackend.configure_user`, if it accepts it."
msgstr ""

msgid ""
"Added Oracle support for the :class:`~django.contrib.gis.db.models.functions."
"Envelope` function."
msgstr ""

msgid ""
"Added SpatiaLite support for the :lookup:`coveredby` and :lookup:`covers` "
"lookups."
msgstr ""

msgid ""
"The new ``ordering`` argument for :class:`~django.contrib.postgres."
"aggregates.ArrayAgg` and :class:`~django.contrib.postgres.aggregates."
"StringAgg` determines the ordering of the aggregated elements."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.indexes.BTreeIndex`, :class:"
"`~django.contrib.postgres.indexes.HashIndex` and :class:`~django.contrib."
"postgres.indexes.SpGistIndex` classes allow creating ``B-Tree``, ``hash``, "
"and ``SP-GiST`` indexes in the database."
msgstr ""

msgid ""
":class:`~django.contrib.postgres.indexes.BrinIndex` now has the "
"``autosummarize`` parameter."
msgstr ""

msgid ""
"The new ``search_type`` parameter of :class:`~django.contrib.postgres.search."
"SearchQuery` allows searching for a phrase or raw expression."
msgstr ""

msgid ""
"Added path matching to the :option:`collectstatic --ignore` option so that "
"patterns like ``/vendor/*.js`` can be used."
msgstr ""

msgid "Added result streaming for :meth:`.QuerySet.iterator` on SQLite."
msgstr ""

msgid ""
"The new :meth:`View.setup <django.views.generic.base.View.setup>` hook "
"initializes view attributes before calling :meth:`~django.views.generic.base."
"View.dispatch`. It allows mixins to set up instance attributes for reuse in "
"child classes."
msgstr ""

msgid "Added support and translations for the Armenian language."
msgstr ""

msgid ""
"The new :option:`--force-color` option forces colorization of the command "
"output."
msgstr ""

msgid ""
":djadmin:`inspectdb` now creates models for foreign tables on PostgreSQL."
msgstr ""

msgid ""
":option:`inspectdb --include-views` now creates models for materialized "
"views on Oracle and PostgreSQL."
msgstr ""

msgid ""
"The new :option:`inspectdb --include-partitions` option allows creating "
"models for partition tables on PostgreSQL. In older versions, models are "
"created child tables instead the parent."
msgstr ""

msgid ""
":djadmin:`inspectdb` now introspects :class:`~django.db.models."
"DurationField` for Oracle and PostgreSQL, and :class:`~django.db.models."
"AutoField` for SQLite."
msgstr ""

msgid ""
"On Oracle, :djadmin:`dbshell` is wrapped with ``rlwrap``, if available. "
"``rlwrap`` provides a command history and editing of keyboard input."
msgstr ""

msgid ""
"The new :option:`makemigrations --no-header` option avoids writing header "
"comments in generated migration file(s). This option is also available for :"
"djadmin:`squashmigrations`."
msgstr ""

msgid ""
":djadmin:`runserver` can now use `Watchman <https://facebook.github.io/"
"watchman/>`_ to improve the performance of watching a large number of files "
"for changes."
msgstr ""

msgid ""
"The new :option:`migrate --plan` option prints the list of migration "
"operations that will be performed."
msgstr ""

msgid "``NoneType`` can now be serialized in migrations."
msgstr ""

msgid ""
"You can now :ref:`register custom serializers <custom-migration-"
"serializers>` for migrations."
msgstr ""

msgid ""
"Added support for PostgreSQL operator classes (:attr:`.Index.opclasses`)."
msgstr ""

msgid "Added support for partial indexes (:attr:`.Index.condition`)."
msgstr ""

msgid ""
"Added the :class:`~django.db.models.functions.NullIf` and :class:`~django.db."
"models.functions.Reverse` database functions, as well as many :ref:`math "
"database functions <math-functions>`."
msgstr ""

msgid ""
"Setting the new ``ignore_conflicts`` parameter of :meth:`.QuerySet."
"bulk_create` to ``True`` tells the database to ignore failure to insert rows "
"that fail uniqueness constraints or other checks."
msgstr ""

msgid ""
"The new :class:`~django.db.models.functions.ExtractIsoYear` function "
"extracts ISO-8601 week-numbering years from :class:`~django.db.models."
"DateField` and :class:`~django.db.models.DateTimeField`, and the new :lookup:"
"`iso_year` lookup allows querying by an ISO-8601 week-numbering year."
msgstr ""

msgid ""
"The new :meth:`.QuerySet.bulk_update` method allows efficiently updating "
"specific fields on multiple model instances."
msgstr ""

msgid ""
"Django no longer always starts a transaction when a single query is being "
"performed, such as ``Model.save()``, ``QuerySet.update()``, and ``Model."
"delete()``. This improves the performance of autocommit by reducing the "
"number of database round trips."
msgstr ""

msgid ""
"Added SQLite support for the :class:`~django.db.models.StdDev` and :class:"
"`~django.db.models.Variance` functions."
msgstr ""

msgid ""
"The handling of ``DISTINCT`` aggregation is added to the :class:`~django.db."
"models.Aggregate` class. Adding :attr:`allow_distinct = True <django.db."
"models.Aggregate.allow_distinct>` as a class attribute on ``Aggregate`` "
"subclasses allows a ``distinct`` keyword argument to be specified on "
"initialization to ensure that the aggregate function is only called for each "
"distinct value of ``expressions``."
msgstr ""

msgid ""
"The :meth:`.RelatedManager.add`, :meth:`~.RelatedManager.create`, :meth:`~."
"RelatedManager.remove`,  :meth:`~.RelatedManager.set`, ``get_or_create()``, "
"and ``update_or_create()`` methods are now allowed on many-to-many "
"relationships with intermediate models. The new ``through_defaults`` "
"argument is used to specify values for new intermediate model instance(s)."
msgstr ""

msgid ""
"Added :attr:`.HttpRequest.headers` to allow simple access to a request's "
"headers."
msgstr ""

msgid ""
"You can now deserialize data using natural keys containing :ref:`forward "
"references <natural-keys-and-forward-references>` by passing "
"``handle_forward_references=True`` to ``serializers.deserialize()``. "
"Additionally, :djadmin:`loaddata` handles forward references automatically."
msgstr ""

msgid ""
"The new :meth:`.SimpleTestCase.assertURLEqual` assertion checks for a given "
"URL, ignoring the ordering of the query string. :meth:`~.SimpleTestCase."
"assertRedirects` uses the new assertion."
msgstr ""

msgid ""
"The test :class:`~.django.test.Client` now supports automatic JSON "
"serialization of list and tuple ``data`` when ``content_type='application/"
"json'``."
msgstr ""

msgid ""
"The new :setting:`ORACLE_MANAGED_FILES <TEST_ORACLE_MANAGED_FILES>` test "
"database setting allows using Oracle Managed Files (OMF) tablespaces."
msgstr ""

msgid ""
"Deferrable database constraints are now checked at the end of each :class:"
"`~django.test.TestCase` test on SQLite 3.20+, just like on other backends "
"that support deferrable constraints. These checks aren't implemented for "
"older versions of SQLite because they would require expensive table "
"introspection there."
msgstr ""

msgid ""
":class:`~django.test.runner.DiscoverRunner` now skips the setup of databases "
"not :ref:`referenced by tests<testing-multi-db>`."
msgstr ""

msgid ""
"The new :attr:`.ResolverMatch.route` attribute stores the route of the "
"matching URL pattern."
msgstr ""

msgid ""
":class:`.MaxValueValidator`, :class:`.MinValueValidator`, :class:`."
"MinLengthValidator`, and :class:`.MaxLengthValidator` now accept a callable "
"``limit_value``."
msgstr ""

msgid "Backwards incompatible changes in 2.2"
msgstr ""

msgid ""
"Third-party database backends must implement support for table check "
"constraints or set ``DatabaseFeatures.supports_table_check_constraints`` to "
"``False``."
msgstr ""

msgid ""
"Third party database backends must implement support for ignoring "
"constraints or uniqueness errors while inserting or set ``DatabaseFeatures."
"supports_ignore_conflicts`` to ``False``."
msgstr ""

msgid ""
"Third party database backends must implement introspection for "
"``DurationField`` or set ``DatabaseFeatures.can_introspect_duration_field`` "
"to ``False``."
msgstr ""

msgid "``DatabaseFeatures.uses_savepoints`` now defaults to ``True``."
msgstr ""

msgid ""
"Third party database backends must implement support for partial indexes or "
"set ``DatabaseFeatures.supports_partial_indexes`` to ``False``."
msgstr ""

msgid ""
"``DatabaseIntrospection.table_name_converter()`` and "
"``column_name_converter()`` are removed. Third party database backends may "
"need to instead implement ``DatabaseIntrospection.identifier_converter()``. "
"In that case, the constraint names that ``DatabaseIntrospection."
"get_constraints()`` returns must be normalized by ``identifier_converter()``."
msgstr ""

msgid ""
"SQL generation for indexes is moved from :class:`~django.db.models.Index` to "
"``SchemaEditor`` and these ``SchemaEditor`` methods are added:"
msgstr ""

msgid "``_create_primary_key_sql()`` and ``_delete_primary_key_sql()``"
msgstr ""

msgid "``_delete_index_sql()`` (to pair with ``_create_index_sql()``)"
msgstr ""

msgid "``_delete_unique_sql`` (to pair with ``_create_unique_sql()``)"
msgstr ""

msgid "``_delete_fk_sql()`` (to pair with ``_create_fk_sql()``)"
msgstr ""

msgid "``_create_check_sql()`` and ``_delete_check_sql()``"
msgstr ""

msgid ""
"The third argument of ``DatabaseWrapper.__init__()``, "
"``allow_thread_sharing``, is removed."
msgstr ""

msgid "Admin actions are no longer collected from base ``ModelAdmin`` classes"
msgstr ""

msgid "For example, in older versions of Django::"
msgstr ""

msgid "``SubAdmin`` would have actions ``'a'`` and ``'b'``."
msgstr ""

msgid ""
"Now ``actions`` follows standard Python inheritance. To get the same result "
"as before::"
msgstr ""

msgid "Support for GDAL 1.9 and 1.10 is dropped."
msgstr ""

msgid "``TransactionTestCase`` serialized data loading"
msgstr ""

msgid ""
"Initial data migrations are now loaded in :class:`~django.test."
"TransactionTestCase` at the end of the test, after the database flush. In "
"older versions, this data was loaded at the beginning of the test, but this "
"prevents the :option:`test --keepdb` option from working properly (the "
"database was empty at the end of the whole test suite). This change "
"shouldn't have an impact on your tests unless you've customized :class:"
"`~django.test.TransactionTestCase`'s internals."
msgstr ""

msgid "``sqlparse`` is required dependency"
msgstr ""

msgid ""
"To simplify a few parts of Django's database handling, :pypi:`sqlparse "
"0.2.2+ <sqlparse>` is now a required dependency. It's automatically "
"installed along with Django."
msgstr ""

msgid "``cached_property`` aliases"
msgstr ""

msgid "In usage like::"
msgstr ""

msgid ""
"``alias`` is not cached. Where the problem can be detected (Python 3.6 and "
"later), such usage now raises ``TypeError: Cannot assign the same "
"cached_property to two different names ('base' and 'alias').``"
msgstr ""

msgid "Use this instead::"
msgstr ""

msgid "Permissions for proxy models"
msgstr ""

msgid ""
":ref:`Permissions for proxy models <proxy-models-permissions-topic>` are now "
"created using the content type of the proxy model rather than the content "
"type of the concrete model. A migration will update existing permissions "
"when you run :djadmin:`migrate`."
msgstr ""

msgid ""
"In the admin, the change is transparent for proxy models having the same "
"``app_label`` as their concrete model. However, in older versions, users "
"with permissions for a proxy model with a *different* ``app_label`` than its "
"concrete model couldn't access the model in the admin. That's now fixed, but "
"you might want to audit the permissions assignments for such proxy models "
"(``[add|view|change|delete]_myproxy``) prior to upgrading to ensure the new "
"access is appropriate."
msgstr ""

msgid ""
"Finally, proxy model permission strings must be updated to use their own "
"``app_label``. For example, for ``app.MyProxyModel`` inheriting from "
"``other_app.ConcreteModel``, update ``user.has_perm('other_app."
"add_myproxymodel')`` to ``user.has_perm('app.add_myproxymodel')``."
msgstr ""

msgid "Merging of form ``Media`` assets"
msgstr ""

msgid ""
"Form ``Media`` assets are now merged using a topological sort algorithm, as "
"the old pairwise merging algorithm is insufficient for some cases. CSS and "
"JavaScript files which don't include their dependencies may now be sorted "
"incorrectly (where the old algorithm produced results correctly by "
"coincidence)."
msgstr ""

msgid ""
"Audit all ``Media`` classes for any missing dependencies. For example, "
"widgets depending on ``django.jQuery`` must specify ``js=['admin/js/jquery."
"init.js', ...]`` when :ref:`declaring form media assets <assets-as-a-static-"
"definition>`."
msgstr ""

msgid ""
"To improve readability, the ``UUIDField`` form field now displays values "
"with dashes, e.g. ``550e8400-e29b-41d4-a716-446655440000`` instead of "
"``550e8400e29b41d4a716446655440000``."
msgstr ""

msgid ""
"On SQLite, ``PositiveIntegerField`` and ``PositiveSmallIntegerField`` now "
"include a check constraint to prevent negative values in the database. If "
"you have existing invalid data and run a migration that recreates a table, "
"you'll see ``CHECK constraint failed``."
msgstr ""

msgid ""
"For consistency with WSGI servers, the test client now sets the ``Content-"
"Length`` header to a string rather than an integer."
msgstr ""

msgid ""
"The return value of :func:`django.utils.text.slugify` is no longer marked as "
"HTML safe."
msgstr ""

msgid ""
"The default truncation character used by the :tfilter:`urlizetrunc`, :"
"tfilter:`truncatechars`, :tfilter:`truncatechars_html`, :tfilter:"
"`truncatewords`, and :tfilter:`truncatewords_html` template filters is now "
"the real ellipsis character (``…``) instead of 3 dots. You may have to adapt "
"some test output comparisons."
msgstr ""

msgid ""
"Support for bytestring paths in the template filesystem loader is removed."
msgstr ""

msgid ""
":func:`django.utils.http.urlsafe_base64_encode` now returns a string instead "
"of a bytestring, and :func:`django.utils.http.urlsafe_base64_decode` may no "
"longer be passed a bytestring."
msgstr ""

msgid "Support for ``cx_Oracle`` < 6.0 is removed."
msgstr ""

msgid ""
"The minimum supported version of ``mysqlclient`` is increased from 1.3.7 to "
"1.3.13."
msgstr ""

msgid ""
"The minimum supported version of SQLite is increased from 3.7.15 to 3.8.3."
msgstr ""

msgid ""
"In an attempt to provide more semantic query data, ``NullBooleanSelect`` now "
"renders ``<option>`` values of ``unknown``, ``true``, and ``false`` instead "
"of ``1``, ``2``, and ``3``. For backwards compatibility, the old values are "
"still accepted as data."
msgstr ""

msgid ""
":attr:`Group.name <django.contrib.auth.models.Group.name>` ``max_length`` is "
"increased from 80 to 150 characters."
msgstr ""

msgid ""
"Tests that violate deferrable database constraints now error when run on "
"SQLite 3.20+, just like on other backends that support such constraints."
msgstr ""

msgid ""
"To catch usage mistakes, the test :class:`~django.test.Client` and :func:"
"`django.utils.http.urlencode` now raise ``TypeError`` if ``None`` is passed "
"as a value to encode because ``None`` can't be encoded in GET and POST data. "
"Either pass an empty string or omit the value."
msgstr ""

msgid ""
"The :djadmin:`ping_google` management command now defaults to ``https`` "
"instead of ``http`` for the sitemap's URL. If your site uses http, use the "
"new :option:`ping_google --sitemap-uses-http` option. If you use the :func:"
"`~django.contrib.sitemaps.ping_google` function, set the new "
"``sitemap_uses_https`` argument to ``False``."
msgstr ""

msgid ""
":djadmin:`runserver` no longer supports ``pyinotify`` (replaced by Watchman)."
msgstr ""

msgid ""
"The :class:`~django.db.models.Avg`, :class:`~django.db.models.StdDev`, and :"
"class:`~django.db.models.Variance` aggregate functions now return a "
"``Decimal`` instead of a ``float`` when the input is ``Decimal``."
msgstr ""

msgid ""
"Tests will fail on SQLite if apps without migrations have relations to apps "
"with migrations. This has been a documented restriction since migrations "
"were added in Django 1.7, but it fails more reliably now. You'll see tests "
"failing with errors like ``no such table: <app_label>_<model>``. This was "
"observed with several third-party apps that had models in tests without "
"migrations. You must add migrations for such models."
msgstr ""

msgid ""
"Providing an integer in the ``key`` argument of the :meth:`.cache.delete` "
"or :meth:`.cache.get` now raises :exc:`ValueError`."
msgstr ""

msgid ""
"Plural equations for some languages are changed, because the latest versions "
"from Transifex are incorporated."
msgstr ""

msgid ""
"The ability to handle ``.po`` files containing different plural equations "
"for the same language was added in Django 2.2.12."
msgstr ""

msgid "Features deprecated in 2.2"
msgstr ""

msgid "Model ``Meta.ordering`` will no longer affect ``GROUP BY`` queries"
msgstr ""

msgid ""
"A model's ``Meta.ordering`` affecting ``GROUP BY`` queries (such as ``."
"annotate().values()``) is a common source of confusion. Such queries now "
"issue a deprecation warning with the advice to add an ``order_by()`` to "
"retain the current query. ``Meta.ordering`` will be ignored in such queries "
"starting in Django 3.1."
msgstr ""

msgid ""
"``django.utils.timezone.FixedOffset`` is deprecated in favor of :class:"
"`datetime.timezone`."
msgstr ""

msgid ""
"The undocumented ``QuerySetPaginator`` alias of ``django.core.paginator."
"Paginator`` is deprecated."
msgstr ""

msgid ""
"The ``FloatRangeField`` model and form fields in ``django.contrib.postgres`` "
"are deprecated in favor of a new name, ``DecimalRangeField``, to match the "
"underlying ``numrange`` data type used in the database."
msgstr ""

msgid ""
"The ``FILE_CHARSET`` setting is deprecated. Starting with Django 3.1, files "
"read from disk must be UTF-8 encoded."
msgstr ""

msgid ""
"``django.contrib.staticfiles.storage.CachedStaticFilesStorage`` is "
"deprecated due to the intractable problems that it has. Use :class:`."
"ManifestStaticFilesStorage` or a third-party cloud storage instead."
msgstr ""

msgid ""
":meth:`.RemoteUserBackend.configure_user` is now passed ``request`` as the "
"first positional argument, if it accepts it. Support for overrides that "
"don't accept it will be removed in Django 3.1."
msgstr ""

msgid ""
"The ``SimpleTestCase.allow_database_queries``, ``TransactionTestCase."
"multi_db``, and ``TestCase.multi_db`` attributes are deprecated in favor of :"
"attr:`.SimpleTestCase.databases`, :attr:`.TransactionTestCase.databases`, "
"and :attr:`.TestCase.databases`. These new attributes allow databases "
"dependencies to be declared in order to prevent unexpected queries against "
"non-default databases to leak state between tests. The previous behavior of "
"``allow_database_queries=True`` and ``multi_db=True`` can be achieved by "
"setting ``databases='__all__'``."
msgstr ""

msgid "Django 2.2.1 release notes"
msgstr ""

msgid "*May 1, 2019*"
msgstr ""

msgid "Django 2.2.1 fixes several bugs in 2.2."
msgstr ""

msgid ""
"Fixed a regression in Django 2.1 that caused the incorrect quoting of "
"database user password when using :djadmin:`dbshell` on Oracle (:ticket:"
"`30307`)."
msgstr ""

msgid "Added compatibility for ``psycopg2`` 2.8 (:ticket:`30331`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that caused a crash when loading the "
"template for the technical 500 debug page (:ticket:`30324`)."
msgstr ""

msgid ""
"Fixed crash of ``ordering`` argument in :class:`~django.contrib.postgres."
"aggregates.ArrayAgg` and :class:`~django.contrib.postgres.aggregates."
"StringAgg` when it contains an expression with params (:ticket:`30332`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that caused a single instance fast-delete "
"to not set the primary key to ``None`` (:ticket:`30330`)."
msgstr ""

msgid ""
"Prevented :djadmin:`makemigrations` from generating infinite migrations for "
"check constraints and partial indexes when ``condition`` contains a :class:"
"`~python:range` object (:ticket:`30350`)."
msgstr ""

msgid ""
"Reverted an optimization in Django 2.2 (:ticket:`29725`) that caused the "
"inconsistent behavior of ``count()`` and ``exists()`` on a reverse many-to-"
"many relationship with a custom manager (:ticket:`30325`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where :class:`~django.core.paginator."
"Paginator` crashes if ``object_list`` is a queryset ordered or aggregated "
"over a nested ``JSONField`` key transform (:ticket:`30335`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where ``IntegerField`` validation of "
"database limits crashes if ``limit_value`` attribute in a custom validator "
"is callable (:ticket:`30328`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where :class:`~django.contrib.postgres."
"search.SearchVector` generates SQL that is not indexable (:ticket:`30385`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that caused an exception to be raised when "
"a custom error handler could not be imported (:ticket:`30318`)."
msgstr ""

msgid ""
"Relaxed the system check added in Django 2.2 for the admin app's "
"dependencies to reallow use of :class:`~django.contrib.sessions.middleware."
"SessionMiddleware` subclasses, rather than requiring :mod:`django.contrib."
"sessions` to be in :setting:`INSTALLED_APPS` (:ticket:`30312`)."
msgstr ""

msgid ""
"Increased the default timeout when using ``Watchman`` to 5 seconds to "
"prevent falling back to ``StatReloader`` on larger projects and made it "
"customizable via the :envvar:`DJANGO_WATCHMAN_TIMEOUT` environment variable "
"(:ticket:`30361`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that caused a crash when migrating "
"permissions for proxy models if the target permissions already existed. For "
"example, when a permission had been created manually or a model had been "
"migrated from concrete to proxy (:ticket:`30351`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that caused a crash of :djadmin:`runserver` "
"when URLConf modules raised exceptions (:ticket:`30323`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where changes were not reliably detected by "
"auto-reloader when using ``StatReloader`` (:ticket:`30323`)."
msgstr ""

msgid ""
"Fixed a migration crash on Oracle and PostgreSQL when adding a check "
"constraint with a ``contains``, ``startswith``, or ``endswith`` lookup (or "
"their case-insensitive variant) (:ticket:`30408`)."
msgstr ""

msgid ""
"Fixed a migration crash on Oracle and SQLite when adding a check constraint "
"with ``condition`` contains ``|`` (``OR``) operator (:ticket:`30412`)."
msgstr ""

msgid "Django 2.2.10 release notes"
msgstr ""

msgid "Django 2.2.10 fixes a security issue in 2.2.9."
msgstr ""

msgid "Django 2.2.11 release notes"
msgstr ""

msgid "Django 2.2.11 fixes a security issue and a data loss bug in 2.2.10."
msgstr ""

msgid ""
"Fixed a data loss possibility in the :meth:`~django.db.models.query.QuerySet."
"select_for_update`. When using related fields or parent link fields with :"
"ref:`multi-table-inheritance` in the ``of`` argument, the corresponding "
"models were not locked (:ticket:`31246`)."
msgstr ""

msgid "Django 2.2.12 release notes"
msgstr ""

msgid "*April 1, 2020*"
msgstr ""

msgid "Django 2.2.12 fixes a bug in 2.2.11."
msgstr ""

msgid ""
"Added the ability to handle ``.po`` files containing different plural "
"equations for the same language (:ticket:`30439`)."
msgstr ""

msgid "Django 2.2.13 release notes"
msgstr ""

msgid "*June 3, 2020*"
msgstr ""

msgid "Django 2.2.13 fixes two security issues and a regression in 2.2.12."
msgstr ""

msgid "CVE-2020-13254: Potential data leakage via malformed memcached keys"
msgstr ""

msgid ""
"In cases where a memcached backend does not perform key validation, passing "
"malformed cache keys could result in a key collision, and potential data "
"leakage. In order to avoid this vulnerability, key validation is added to "
"the memcached cache backends."
msgstr ""

msgid "CVE-2020-13596: Possible XSS via admin ``ForeignKeyRawIdWidget``"
msgstr ""

msgid ""
"Query parameters for the admin ``ForeignKeyRawIdWidget`` were not properly "
"URL encoded, posing an XSS attack vector. ``ForeignKeyRawIdWidget`` now "
"ensures query parameters are correctly URL encoded."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.12 that affected translation loading for "
"apps providing translations for territorial language variants as well as a "
"generic language, where the project has different plural equations for the "
"language (:ticket:`31570`)."
msgstr ""

msgid ""
"Tracking a jQuery security release, upgraded the version of jQuery used by "
"the admin from 3.3.1 to 3.5.1."
msgstr ""

msgid "Django 2.2.14 release notes"
msgstr ""

msgid "*July 1, 2020*"
msgstr ""

msgid "Django 2.2.14 fixes a bug in 2.2.13."
msgstr ""

msgid ""
"Fixed messages of ``InvalidCacheKey`` exceptions and ``CacheKeyWarning`` "
"warnings raised by cache key validation (:ticket:`31654`)."
msgstr ""

msgid "Django 2.2.15 release notes"
msgstr ""

msgid "*August 3, 2020*"
msgstr ""

msgid "Django 2.2.15 fixes two bugs in 2.2.14."
msgstr ""

msgid ""
"Allowed setting the ``SameSite`` cookie flag in :meth:`.HttpResponse."
"delete_cookie` (:ticket:`31790`)."
msgstr ""

msgid ""
"Fixed crash when sending emails to addresses with display names longer than "
"75 chars on Python 3.6.11+, 3.7.8+, and 3.8.4+ (:ticket:`31784`)."
msgstr ""

msgid "Django 2.2.16 release notes"
msgstr ""

msgid "*September 1, 2020*"
msgstr ""

msgid ""
"Django 2.2.16 fixes two security issues and two data loss bugs in 2.2.15."
msgstr ""

msgid ""
"CVE-2020-24583: Incorrect permissions on intermediate-level directories on "
"Python 3.7+"
msgstr ""

msgid ""
"On Python 3.7+, :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS` mode was not "
"applied to intermediate-level directories created in the process of "
"uploading files and to intermediate-level collected static directories when "
"using the :djadmin:`collectstatic` management command."
msgstr ""

msgid ""
"You should review and manually fix permissions on existing intermediate-"
"level directories."
msgstr ""

msgid ""
"CVE-2020-24584: Permission escalation in intermediate-level directories of "
"the file system cache on Python 3.7+"
msgstr ""

msgid ""
"On Python 3.7+, the intermediate-level directories of the file system cache "
"had the system's standard umask rather than ``0o077`` (no group or others "
"permissions)."
msgstr ""

msgid ""
"Fixed a data loss possibility in the :meth:`~django.db.models.query.QuerySet."
"select_for_update()`. When using related fields pointing to a proxy model in "
"the ``of`` argument, the corresponding model was not locked (:ticket:"
"`31866`)."
msgstr ""

msgid ""
"Fixed a data loss possibility, following a regression in Django 2.0, when "
"copying model instances with a cached fields value (:ticket:`31863`)."
msgstr ""

msgid "Django 2.2.17 release notes"
msgstr ""

msgid "*November 2, 2020*"
msgstr ""

msgid "Django 2.2.17 adds compatibility with Python 3.9."
msgstr ""

msgid "Django 2.2.18 release notes"
msgstr ""

msgid "*February 1, 2021*"
msgstr ""

msgid "Django 2.2.18 fixes a security issue with severity \"low\" in 2.2.17."
msgstr ""

msgid "CVE-2021-3281: Potential directory-traversal via ``archive.extract()``"
msgstr ""

msgid ""
"The ``django.utils.archive.extract()`` function, used by :option:`startapp --"
"template` and :option:`startproject --template`, allowed directory-traversal "
"via an archive with absolute paths or relative paths with dot segments."
msgstr ""

msgid "Django 2.2.19 release notes"
msgstr ""

msgid "*February 19, 2021*"
msgstr ""

msgid "Django 2.2.19 fixes a security issue in 2.2.18."
msgstr ""

msgid ""
"CVE-2021-23336: Web cache poisoning via ``django.utils.http."
"limited_parse_qsl()``"
msgstr ""

msgid ""
"Django contains a copy of :func:`urllib.parse.parse_qsl` which was added to "
"backport some security fixes. A further security fix has been issued "
"recently such that ``parse_qsl()`` no longer allows using ``;`` as a query "
"parameter separator by default. Django now includes this fix. See :bpo:"
"`42967` for further details."
msgstr ""

msgid "Django 2.2.2 release notes"
msgstr ""

msgid "Django 2.2.2 fixes security issues and several bugs in 2.2.1."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that stopped Show/Hide toggles working on "
"dynamically added admin inlines (:ticket:`30459`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where deprecation message crashes if ``Meta."
"ordering`` contains an expression (:ticket:`30463`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.1 where :class:`~django.contrib.postgres."
"search.SearchVector` generates SQL with a redundant ``Coalesce`` call (:"
"ticket:`30488`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where auto-reloader doesn't detect changes "
"in ``manage.py`` file when using ``StatReloader`` (:ticket:`30479`)."
msgstr ""

msgid ""
"Fixed crash of :class:`~django.contrib.postgres.aggregates.ArrayAgg` and :"
"class:`~django.contrib.postgres.aggregates.StringAgg` with ``ordering`` "
"argument when used in a ``Subquery`` (:ticket:`30315`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that caused a crash of auto-reloader when "
"an exception with custom signature is raised (:ticket:`30516`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.1 where auto-reloader unnecessarily reloads "
"translation files multiple times when using ``StatReloader`` (:ticket:"
"`30523`)."
msgstr ""

msgid "Django 2.2.20 release notes"
msgstr ""

msgid "*April 6, 2021*"
msgstr ""

msgid "Django 2.2.20 fixes a security issue with severity \"low\" in 2.2.19."
msgstr ""

msgid "CVE-2021-28658: Potential directory-traversal via uploaded files"
msgstr ""

msgid ""
"``MultiPartParser`` allowed directory-traversal via uploaded files with "
"suitably crafted file names."
msgstr ""

msgid "Built-in upload handlers were not affected by this vulnerability."
msgstr ""

msgid "Django 2.2.21 release notes"
msgstr ""

msgid "*May 4, 2021*"
msgstr ""

msgid "Django 2.2.21 fixes a security issue in 2.2.20."
msgstr ""

msgid "CVE-2021-31542: Potential directory-traversal via uploaded files"
msgstr ""

msgid ""
"``MultiPartParser``, ``UploadedFile``, and ``FieldFile`` allowed directory-"
"traversal via uploaded files with suitably crafted file names."
msgstr ""

msgid ""
"In order to mitigate this risk, stricter basename and path sanitation is now "
"applied."
msgstr ""

msgid "Django 2.2.22 release notes"
msgstr ""

msgid "*May 6, 2021*"
msgstr ""

msgid "Django 2.2.22 fixes a security issue in 2.2.21."
msgstr ""

msgid ""
"CVE-2021-32052: Header injection possibility since ``URLValidator`` accepted "
"newlines in input on Python 3.9.5+"
msgstr ""

msgid ""
"On Python 3.9.5+, :class:`~django.core.validators.URLValidator` didn't "
"prohibit newlines and tabs. If you used values with newlines in HTTP "
"response, you could suffer from header injection attacks. Django itself "
"wasn't vulnerable because :class:`~django.http.HttpResponse` prohibits "
"newlines in HTTP headers."
msgstr ""

msgid ""
"Moreover, the ``URLField`` form field which uses ``URLValidator`` silently "
"removes newlines and tabs on Python 3.9.5+, so the possibility of newlines "
"entering your data only existed if you are using this validator outside of "
"the form fields."
msgstr ""

msgid "This issue was introduced by the :bpo:`43882` fix."
msgstr ""

msgid "Django 2.2.23 release notes"
msgstr ""

msgid "*May 13, 2021*"
msgstr ""

msgid "Django 2.2.23 fixes a regression in 2.2.21."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.21 where saving ``FileField`` would raise a "
"``SuspiciousFileOperation`` even when a custom :attr:`~django.db.models."
"FileField.upload_to` returns a valid file path (:ticket:`32718`)."
msgstr ""

msgid "Django 2.2.24 release notes"
msgstr ""

msgid "*June 2, 2021*"
msgstr ""

msgid "Django 2.2.24 fixes two security issues in 2.2.23."
msgstr ""

msgid "CVE-2021-33203: Potential directory traversal via ``admindocs``"
msgstr ""

msgid ""
"Staff members could use the :mod:`~django.contrib.admindocs` "
"``TemplateDetailView`` view to check the existence of arbitrary files. "
"Additionally, if (and only if) the default admindocs templates have been "
"customized by the developers to also expose the file contents, then not only "
"the existence but also the file contents would have been exposed."
msgstr ""

msgid ""
"As a mitigation, path sanitation is now applied and only files within the "
"template root directories can be loaded."
msgstr ""

msgid ""
"CVE-2021-33571: Possible indeterminate SSRF, RFI, and LFI attacks since "
"validators accepted leading zeros in IPv4 addresses"
msgstr ""

msgid ""
":class:`~django.core.validators.URLValidator`, :func:`~django.core."
"validators.validate_ipv4_address`, and :func:`~django.core.validators."
"validate_ipv46_address` didn't prohibit leading zeros in octal literals. If "
"you used such values you could suffer from indeterminate SSRF, RFI, and LFI "
"attacks."
msgstr ""

msgid ""
":func:`~django.core.validators.validate_ipv4_address` and :func:`~django."
"core.validators.validate_ipv46_address` validators were not affected on "
"Python 3.9.5+."
msgstr ""

msgid "Django 2.2.25 release notes"
msgstr ""

msgid "*December 7, 2021*"
msgstr ""

msgid "Django 2.2.25 fixes a security issue with severity \"low\" in 2.2.24."
msgstr ""

msgid ""
"CVE-2021-44420: Potential bypass of an upstream access control based on URL "
"paths"
msgstr ""

msgid ""
"HTTP requests for URLs with trailing newlines could bypass an upstream "
"access control based on URL paths."
msgstr ""

msgid "Django 2.2.26 release notes"
msgstr ""

msgid "*January 4, 2022*"
msgstr ""

msgid ""
"Django 2.2.26 fixes one security issue with severity \"medium\" and two "
"security issues with severity \"low\" in 2.2.25."
msgstr ""

msgid ""
"CVE-2021-45115: Denial-of-service possibility in "
"``UserAttributeSimilarityValidator``"
msgstr ""

msgid ""
":class:`.UserAttributeSimilarityValidator` incurred significant overhead "
"evaluating submitted password that were artificially large in relative to "
"the comparison values. On the assumption that access to user registration "
"was unrestricted this provided a potential vector for a denial-of-service "
"attack."
msgstr ""

msgid ""
"In order to mitigate this issue, relatively long values are now ignored by "
"``UserAttributeSimilarityValidator``."
msgstr ""

msgid ""
"This issue has severity \"medium\" according to the :ref:`Django security "
"policy <security-disclosure>`."
msgstr ""

msgid ""
"CVE-2021-45116: Potential information disclosure in ``dictsort`` template "
"filter"
msgstr ""

msgid ""
"Due to leveraging the Django Template Language's variable resolution logic, "
"the :tfilter:`dictsort` template filter was potentially vulnerable to "
"information disclosure or unintended method calls, if passed a suitably "
"crafted key."
msgstr ""

msgid ""
"In order to avoid this possibility, ``dictsort`` now works with a restricted "
"resolution logic, that will not call methods, nor allow indexing on "
"dictionaries."
msgstr ""

msgid "As a reminder, all untrusted user input should be validated before use."
msgstr ""

msgid ""
"This issue has severity \"low\" according to the :ref:`Django security "
"policy <security-disclosure>`."
msgstr ""

msgid "CVE-2021-45452: Potential directory-traversal via ``Storage.save()``"
msgstr ""

msgid ""
"``Storage.save()`` allowed directory-traversal if directly passed suitably "
"crafted file names."
msgstr ""

msgid "Django 2.2.27 release notes"
msgstr ""

msgid "*February 1, 2022*"
msgstr ""

msgid ""
"Django 2.2.27 fixes two security issues with severity \"medium\" in 2.2.26."
msgstr ""

msgid "CVE-2022-22818: Possible XSS via ``{% debug %}`` template tag"
msgstr ""

msgid ""
"The ``{% debug %}`` template tag didn't properly encode the current context, "
"posing an XSS attack vector."
msgstr ""

msgid ""
"In order to avoid this vulnerability, ``{% debug %}`` no longer outputs "
"information when the ``DEBUG`` setting is ``False``, and it ensures all "
"context variables are correctly escaped when the ``DEBUG`` setting is "
"``True``."
msgstr ""

msgid "CVE-2022-23833: Denial-of-service possibility in file uploads"
msgstr ""

msgid ""
"Passing certain inputs to multipart forms could result in an infinite loop "
"when parsing files."
msgstr ""

msgid "Django 2.2.28 release notes"
msgstr ""

msgid "*April 11, 2022*"
msgstr ""

msgid ""
"Django 2.2.28 fixes two security issues with severity \"high\" in 2.2.27."
msgstr ""

msgid ""
"CVE-2022-28346: Potential SQL injection in ``QuerySet.annotate()``, "
"``aggregate()``, and ``extra()``"
msgstr ""

msgid ""
":meth:`.QuerySet.annotate`, :meth:`~.QuerySet.aggregate`, and :meth:`~."
"QuerySet.extra` methods were subject to SQL injection in column aliases, "
"using a suitably crafted dictionary, with dictionary expansion, as the "
"``**kwargs`` passed to these methods."
msgstr ""

msgid ""
"CVE-2022-28347: Potential SQL injection via ``QuerySet.explain(**options)`` "
"on PostgreSQL"
msgstr ""

msgid ""
":meth:`.QuerySet.explain` method was subject to SQL injection in option "
"names, using a suitably crafted dictionary, with dictionary expansion, as "
"the ``**options`` argument."
msgstr ""

msgid "Django 2.2.3 release notes"
msgstr ""

msgid ""
"Django 2.2.3 fixes a security issue and several bugs in 2.2.2. Also, the "
"latest string translations from Transifex are incorporated."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where :class:`~django.db.models.Avg`, :"
"class:`~django.db.models.StdDev`, and :class:`~django.db.models.Variance` "
"crash with ``filter`` argument (:ticket:`30542`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.2 where auto-reloader crashes with "
"``AttributeError``, e.g. when using ``ipdb`` (:ticket:`30588`)."
msgstr ""

msgid "Django 2.2.4 release notes"
msgstr ""

msgid "Django 2.2.4 fixes security issues and several bugs in 2.2.3."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 when ordering a ``QuerySet.union()``, "
"``intersection()``, or ``difference()`` by a field type present more than "
"once results in the wrong ordering being used (:ticket:`30628`)."
msgstr ""

msgid ""
"Fixed a migration crash on PostgreSQL when adding a check constraint with a "
"``contains`` lookup on :class:`~django.contrib.postgres.fields."
"DateRangeField` or :class:`~django.contrib.postgres.fields."
"DateTimeRangeField`, if the right hand side of an expression is the same "
"type (:ticket:`30621`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where auto-reloader crashes if a file path "
"contains null characters (``'\\x00'``) (:ticket:`30506`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where auto-reloader crashes if a "
"translation directory cannot be resolved (:ticket:`30647`)."
msgstr ""

msgid "Django 2.2.5 release notes"
msgstr ""

msgid "Django 2.2.5 fixes several bugs in 2.2.4."
msgstr ""

msgid ""
"Relaxed the system check added in Django 2.2 for models to reallow use of "
"the same ``db_table`` by multiple models when database routers are installed "
"(:ticket:`30673`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 where :attr:`ModelAdmin.list_filter <django."
"contrib.admin.ModelAdmin.list_filter>` choices to foreign objects don't "
"respect a model's ``Meta.ordering`` (:ticket:`30449`)."
msgstr ""

msgid "Django 2.2.6 release notes"
msgstr ""

msgid "Django 2.2.6 fixes several bugs in 2.2.5."
msgstr ""

msgid ""
"Fixed migrations crash on SQLite when altering a model containing partial "
"indexes (:ticket:`30754`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.4 that caused a crash when filtering with a "
"``Subquery()`` annotation of a queryset containing ``django.contrib.postgres."
"fields.JSONField`` or :class:`~django.contrib.postgres.fields.HStoreField` (:"
"ticket:`30769`)."
msgstr ""

msgid "Django 2.2.7 release notes"
msgstr ""

msgid "Django 2.2.7 fixes several bugs in 2.2.6."
msgstr ""

msgid ""
"Prevented :option:`migrate --plan` from showing that ``RunPython`` "
"operations are irreversible when ``reverse_code`` callables don't have "
"docstrings or when showing a forward migration plan (:ticket:`30870`)."
msgstr ""

msgid ""
"Fixed migrations crash on PostgreSQL when adding an :class:`~django.db."
"models.Index` with fields ordering and :attr:`~.Index.opclasses` (:ticket:"
"`30903`)."
msgstr ""

msgid ""
"Restored the ability to override :meth:`~django.db.models.Model."
"get_FOO_display` (:ticket:`30931`)."
msgstr ""

msgid "Django 2.2.8 release notes"
msgstr ""

msgid ""
"Django 2.2.8 fixes a security issue, several bugs in 2.2.7, and adds "
"compatibility with Python 3.8."
msgstr ""

msgid ""
"Fixed a data loss possibility in the admin changelist view when a custom :"
"ref:`formset's prefix <formset-prefix>` contains regular expression special "
"characters, e.g. ``'$'`` (:ticket:`31031`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.1 that caused a crash when migrating "
"permissions for proxy models with a multiple database setup if the "
"``default`` entry was empty (:ticket:`31021`)."
msgstr ""

msgid "Django 2.2.9 release notes"
msgstr ""

msgid "Django 2.2.9 fixes a security issue and a data loss bug in 2.2.8."
msgstr ""

msgid "Django 3.0 release notes"
msgstr ""

msgid "Welcome to Django 3.0!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-3.0>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-3.0>` "
"you'll want to be aware of when upgrading from Django 2.2 or earlier. We've :"
"ref:`dropped some features<removed-features-3.0>` that have reached the end "
"of their deprecation cycle, and we've :ref:`begun the deprecation process "
"for some features <deprecated-features-3.0>`."
msgstr ""

msgid ""
"Django 3.0 supports Python 3.6, 3.7, 3.8, and 3.9 (as of 3.0.11). We "
"**highly recommend** and only officially support the latest release of each "
"series."
msgstr ""

msgid "The Django 2.2.x series is the last to support Python 3.5."
msgstr ""

msgid ""
"Following the release of Django 3.0, we suggest that third-party app authors "
"drop support for all versions of Django prior to 2.2. At that time, you "
"should be able to run your package's tests using ``python -Wd`` so that "
"deprecation warnings appear. After making the deprecation warning fixes, "
"your app should be compatible with Django 3.0."
msgstr ""

msgid "What's new in Django 3.0"
msgstr ""

msgid "MariaDB support"
msgstr ""

msgid ""
"Django now officially supports `MariaDB <https://mariadb.org/>`_ 10.1 and "
"higher. See :ref:`MariaDB notes <mariadb-notes>` for more details."
msgstr ""

msgid "ASGI support"
msgstr ""

msgid ""
"Django 3.0 begins our journey to making Django fully async-capable by "
"providing support for running as an `ASGI <https://asgi.readthedocs.io/>`_ "
"application."
msgstr ""

msgid ""
"This is in addition to our existing WSGI support. Django intends to support "
"both for the foreseeable future. Async features will only be available to "
"applications that run under ASGI, however."
msgstr ""

msgid ""
"At this stage async support only applies to the outer ASGI application. "
"Internally everything remains synchronous. Asynchronous middleware, views, "
"etc. are not yet supported. You can, however, use ASGI middleware around "
"Django's application, allowing you to combine Django with other ASGI "
"frameworks."
msgstr ""

msgid ""
"There is no need to switch your applications over unless you want to start "
"experimenting with asynchronous code, but we have :doc:`documentation on "
"deploying with ASGI </howto/deployment/asgi/index>` if you want to learn "
"more."
msgstr ""

msgid ""
"Note that as a side-effect of this change, Django is now aware of "
"asynchronous event loops and will block you calling code marked as \"async "
"unsafe\" - such as ORM operations - from an asynchronous context. If you "
"were using Django from async code before, this may trigger if you were doing "
"it incorrectly. If you see a ``SynchronousOnlyOperation`` error, then "
"closely examine your code and move any database operations to be in a "
"synchronous child thread."
msgstr ""

msgid "Exclusion constraints on PostgreSQL"
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.constraints.ExclusionConstraint` "
"class enable adding exclusion constraints on PostgreSQL. Constraints are "
"added to models using the :attr:`Meta.constraints <django.db.models.Options."
"constraints>` option."
msgstr ""

msgid "Filter expressions"
msgstr ""

msgid ""
"Expressions that output :class:`~django.db.models.BooleanField` may now be "
"used directly in ``QuerySet`` filters, without having to first annotate and "
"then filter against the annotation."
msgstr ""

msgid "Enumerations for model field choices"
msgstr ""

msgid ""
"Custom enumeration types ``TextChoices``, ``IntegerChoices``, and "
"``Choices`` are now available as a way to define :attr:`.Field.choices`. "
"``TextChoices`` and ``IntegerChoices`` types are provided for text and "
"integer fields. The ``Choices`` class allows defining a compatible "
"enumeration for other concrete data types. These custom enumeration types "
"support human-readable labels that can be translated and accessed via a "
"property on the enumeration or its members. See :ref:`Enumeration types "
"<field-choices-enum-types>` for more details and examples."
msgstr ""

msgid ""
"Added support for the ``admin_order_field`` attribute on properties in :attr:"
"`.ModelAdmin.list_display`."
msgstr ""

msgid ""
"The new :meth:`ModelAdmin.get_inlines() <django.contrib.admin.ModelAdmin."
"get_inlines>` method allows specifying the inlines based on the request or "
"model instance."
msgstr ""

msgid "Select2 library is upgraded from version 4.0.3 to 4.0.7."
msgstr ""

msgid "jQuery is upgraded from version 3.3.1 to 3.4.1."
msgstr ""

msgid ""
"The new ``reset_url_token`` attribute in :class:`~django.contrib.auth.views."
"PasswordResetConfirmView` allows specifying a token parameter displayed as a "
"component of password reset URLs."
msgstr ""

msgid ""
"Added :class:`~django.contrib.auth.backends.BaseBackend` class to ease "
"customization of authentication backends."
msgstr ""

msgid ""
"Added :meth:`~django.contrib.auth.models.User.get_user_permissions()` method "
"to mirror the existing :meth:`~django.contrib.auth.models.User."
"get_group_permissions()` method."
msgstr ""

msgid ""
"Added HTML ``autocomplete`` attribute to widgets of username, email, and "
"password fields in :mod:`django.contrib.auth.forms` for better interaction "
"with browser password managers."
msgstr ""

msgid ""
":djadmin:`createsuperuser` now falls back to environment variables for "
"password and required fields, when a corresponding command line argument "
"isn't provided in non-interactive mode."
msgstr ""

msgid ""
":attr:`~django.contrib.auth.models.CustomUser.REQUIRED_FIELDS` now supports :"
"class:`~django.db.models.ManyToManyField`\\s."
msgstr ""

msgid ""
"The new :meth:`.UserManager.with_perm` method returns users that have the "
"specified permission."
msgstr ""

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased from "
"150,000 to 180,000."
msgstr ""

msgid ""
"Allowed MySQL spatial lookup functions to operate on real geometries. "
"Previous support was limited to bounding boxes."
msgstr ""

msgid ""
"Added the :class:`~django.contrib.gis.db.models.functions.GeometryDistance` "
"function, supported on PostGIS."
msgstr ""

msgid ""
"Added support for the ``furlong`` unit in :class:`~django.contrib.gis."
"measure.Distance`."
msgstr ""

msgid "The :setting:`GEOIP_PATH` setting now supports :class:`pathlib.Path`."
msgstr ""

msgid ""
"The :class:`~django.contrib.gis.geoip2.GeoIP2` class now accepts :class:"
"`pathlib.Path` ``path``."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.fields.RangeOperators` helps to "
"avoid typos in SQL operators that can be used together with :class:`~django."
"contrib.postgres.fields.RangeField`."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.fields.RangeBoundary` expression "
"represents the range boundaries."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.operations.AddIndexConcurrently` "
"and :class:`~django.contrib.postgres.operations.RemoveIndexConcurrently` "
"classes allow creating and dropping indexes ``CONCURRENTLY`` on PostgreSQL."
msgstr ""

msgid ""
"The new :meth:`~django.contrib.sessions.backends.base.SessionBase."
"get_session_cookie_age()` method allows dynamically specifying the session "
"cookie age."
msgstr ""

msgid ""
"Added the ``language`` class attribute to the :class:`django.contrib."
"syndication.views.Feed` to customize a feed language. The default value is :"
"func:`~django.utils.translation.get_language()` instead of :setting:"
"`LANGUAGE_CODE`."
msgstr ""

msgid ""
":func:`~django.utils.cache.add_never_cache_headers` and :func:`~django.views."
"decorators.cache.never_cache` now add the ``private`` directive to ``Cache-"
"Control`` headers."
msgstr ""

msgid ""
"The new :meth:`.Storage.get_alternative_name` method allows customizing the "
"algorithm for generating filenames if a file with the uploaded name already "
"exists."
msgstr ""

msgid ""
"Formsets may control the widget used when ordering forms via :attr:`~django."
"forms.formsets.BaseFormSet.can_order` by setting the :attr:`~django.forms."
"formsets.BaseFormSet.ordering_widget` attribute or overriding :attr:`~django."
"forms.formsets.BaseFormSet.get_ordering_widget()`."
msgstr ""

msgid ""
"Added the :setting:`LANGUAGE_COOKIE_HTTPONLY`, :setting:"
"`LANGUAGE_COOKIE_SAMESITE`, and :setting:`LANGUAGE_COOKIE_SECURE` settings "
"to set the ``HttpOnly``, ``SameSite``, and ``Secure`` flags on language "
"cookies. The default values of these settings preserve the previous behavior."
msgstr ""

msgid "Added support and translations for the Uzbek language."
msgstr ""

msgid ""
"The new ``reporter_class`` parameter of :class:`~django.utils.log."
"AdminEmailHandler` allows providing an ``django.views.debug."
"ExceptionReporter`` subclass to customize the traceback text sent to site :"
"setting:`ADMINS` when :setting:`DEBUG` is ``False``."
msgstr ""

msgid ""
"The new :option:`compilemessages --ignore` option allows ignoring specific "
"directories when searching for ``.po`` files to compile."
msgstr ""

msgid ""
":option:`showmigrations --list` now shows the applied datetimes when ``--"
"verbosity`` is 2 and above."
msgstr ""

msgid ""
"On PostgreSQL, :djadmin:`dbshell` now supports client-side TLS certificates."
msgstr ""

msgid ""
":djadmin:`inspectdb` now introspects :class:`~django.db.models."
"OneToOneField` when a foreign key has a unique or primary key constraint."
msgstr ""

msgid ""
"The new :option:`--skip-checks` option skips running system checks prior to "
"running the command."
msgstr ""

msgid ""
"The :option:`startapp --template` and :option:`startproject --template` "
"options now support templates stored in XZ archives (``.tar.xz``, ``.txz``) "
"and LZMA archives (``.tar.lzma``, ``.tlz``)."
msgstr ""

msgid ""
"Added hash database functions :class:`~django.db.models.functions.MD5`, :"
"class:`~django.db.models.functions.SHA1`, :class:`~django.db.models."
"functions.SHA224`, :class:`~django.db.models.functions.SHA256`, :class:"
"`~django.db.models.functions.SHA384`, and :class:`~django.db.models."
"functions.SHA512`."
msgstr ""

msgid "Added the :class:`~django.db.models.functions.Sign` database function."
msgstr ""

msgid ""
"The new ``is_dst``  parameter of the :class:`~django.db.models.functions."
"Trunc` database functions determines the treatment of nonexistent and "
"ambiguous datetimes."
msgstr ""

msgid ""
"``connection.queries`` now shows ``COPY … TO`` statements on PostgreSQL."
msgstr ""

msgid ""
":class:`~django.db.models.FilePathField` now accepts a callable for ``path``."
msgstr ""

msgid ""
"Allowed symmetrical intermediate table for self-referential :class:`~django."
"db.models.ManyToManyField`."
msgstr ""

msgid ""
"The ``name`` attributes of :class:`~django.db.models.CheckConstraint`, :"
"class:`~django.db.models.UniqueConstraint`, and :class:`~django.db.models."
"Index` now support app label and class interpolation using the "
"``'%(app_label)s'`` and ``'%(class)s'`` placeholders."
msgstr ""

msgid ""
"The new :attr:`.Field.descriptor_class` attribute allows model fields to "
"customize the get and set behavior by overriding their :py:ref:`descriptors "
"<descriptors>`."
msgstr ""

msgid ""
":class:`~django.db.models.Avg` and :class:`~django.db.models.Sum` now "
"support the ``distinct`` argument."
msgstr ""

msgid ""
"Added :class:`~django.db.models.SmallAutoField` which acts much like an :"
"class:`~django.db.models.AutoField` except that it only allows values under "
"a certain (database-dependent) limit. Values from ``1`` to ``32767`` are "
"safe in all databases supported by Django."
msgstr ""

msgid ""
":class:`~django.db.models.AutoField`, :class:`~django.db.models."
"BigAutoField`, and :class:`~django.db.models.SmallAutoField` now inherit "
"from ``IntegerField``, ``BigIntegerField`` and ``SmallIntegerField`` "
"respectively. System checks and validators are now also properly inherited."
msgstr ""

msgid ":attr:`.FileField.upload_to` now supports :class:`pathlib.Path`."
msgstr ""

msgid ""
":class:`~django.db.models.CheckConstraint` is now supported on MySQL 8.0.16+."
msgstr ""

msgid ""
"The new ``allows_group_by_selected_pks_on_model()`` method of ``django.db."
"backends.base.BaseDatabaseFeatures`` allows optimization of ``GROUP BY`` "
"clauses to require only the selected models' primary keys. By default, it's "
"supported only for managed models on PostgreSQL."
msgstr ""

msgid ""
"To enable the ``GROUP BY`` primary key-only optimization for unmanaged "
"models, you have to subclass the PostgreSQL database engine, overriding the "
"features class ``allows_group_by_selected_pks_on_model()`` method as you "
"require. See :ref:`Subclassing the built-in database backends <subclassing-"
"database-backends>` for an example."
msgstr ""

msgid ""
"Allowed :class:`~django.http.HttpResponse` to be initialized with :class:"
"`memoryview` content."
msgstr ""

msgid ""
"For use in, for example, Django templates, :attr:`.HttpRequest.headers` now "
"allows lookups using underscores (e.g. ``user_agent``) in place of hyphens."
msgstr ""

msgid "Security"
msgstr "Keamanan"

msgid ""
":setting:`X_FRAME_OPTIONS` now defaults to ``'DENY'``. In older versions, "
"the :setting:`X_FRAME_OPTIONS` setting defaults to ``'SAMEORIGIN'``. If your "
"site uses frames of itself, you will need to explicitly set "
"``X_FRAME_OPTIONS = 'SAMEORIGIN'`` for them to continue working."
msgstr ""

msgid ""
":setting:`SECURE_CONTENT_TYPE_NOSNIFF` now defaults to ``True``. With this "
"enabled, :class:`~django.middleware.security.SecurityMiddleware` sets the :"
"ref:`x-content-type-options` header on all responses that do not already "
"have it."
msgstr ""

msgid ""
":class:`~django.middleware.security.SecurityMiddleware` can now send the :"
"ref:`Referrer-Policy <referrer-policy>` header."
msgstr ""

msgid ""
"The new test :class:`~django.test.Client` argument "
"``raise_request_exception`` allows controlling whether or not exceptions "
"raised during the request should also be raised in the test. The value "
"defaults to ``True`` for backwards compatibility. If it is ``False`` and an "
"exception occurs, the test client will return a 500 response with the "
"attribute :attr:`~django.test.Response.exc_info`, a tuple providing "
"information of the exception that occurred."
msgstr ""

msgid ""
"Tests and test cases to run can be selected by test name pattern using the "
"new :option:`test -k` option."
msgstr ""

msgid ""
"HTML comparison, as used by :meth:`~django.test.SimpleTestCase."
"assertHTMLEqual`, now treats text, character references, and entity "
"references that refer to the same character as equivalent."
msgstr ""

msgid ""
"Django test runner now supports headless mode for selenium tests on "
"supported browsers. Add the ``--headless`` option to enable this mode."
msgstr ""

msgid ""
"Django test runner now supports ``--start-at`` and ``--start-after`` options "
"to run tests starting from a specific top-level module."
msgstr ""

msgid ""
"Django test runner now supports a ``--pdb`` option to spawn a debugger at "
"each error or failure."
msgstr ""

msgid "Backwards incompatible changes in 3.0"
msgstr ""

msgid "``Model.save()`` when providing a default for the primary key"
msgstr ""

msgid ""
":meth:`.Model.save` no longer attempts to find a row when saving a new "
"``Model`` instance and a default value for the primary key is provided, and "
"always performs a single ``INSERT`` query. In older Django versions, ``Model."
"save()`` performed either an ``INSERT`` or an ``UPDATE`` based on whether or "
"not the row exists."
msgstr ""

msgid ""
"This makes calling ``Model.save()`` while providing a default primary key "
"value equivalent to passing :ref:`force_insert=True <ref-models-force-"
"insert>` to model's ``save()``. Attempts to use a new ``Model`` instance to "
"update an existing row will result in an ``IntegrityError``."
msgstr ""

msgid ""
"In order to update an existing model for a specific primary key value, use "
"the :meth:`~django.db.models.query.QuerySet.update_or_create` method or "
"``QuerySet.filter(pk=…).update(…)`` instead. For example:"
msgstr ""

msgid ""
"The second argument of ``DatabaseIntrospection.get_geometry_type()`` is now "
"the row description instead of the column name."
msgstr ""

msgid "``DatabaseIntrospection.get_field_type()`` may no longer return tuples."
msgstr ""

msgid ""
"If the database can create foreign keys in the same SQL statement that adds "
"a field, add ``SchemaEditor.sql_create_column_inline_fk`` with the "
"appropriate SQL; otherwise, set ``DatabaseFeatures.can_create_inline_fk = "
"False``."
msgstr ""

msgid ""
"``DatabaseFeatures.can_return_id_from_insert`` and "
"``can_return_ids_from_bulk_insert`` are renamed to "
"``can_return_columns_from_insert`` and ``can_return_rows_from_bulk_insert``."
msgstr ""

msgid ""
"Database functions now handle :class:`datetime.timezone` formats when "
"created using :class:`datetime.timedelta` instances (e.g. "
"``timezone(timedelta(hours=5))``, which would output ``'UTC+05:00'``). Third-"
"party backends should handle this format when preparing :class:`~django.db."
"models.DateTimeField` in ``datetime_cast_date_sql()``, "
"``datetime_extract_sql()``, etc."
msgstr ""

msgid ""
"Entries for ``AutoField``, ``BigAutoField``, and ``SmallAutoField`` are "
"added to  ``DatabaseOperations.integer_field_ranges`` to support the integer "
"range validators on these field types. Third-party backends may need to "
"customize the default entries."
msgstr ""

msgid ""
"``DatabaseOperations.fetch_returned_insert_id()`` is replaced by "
"``fetch_returned_insert_columns()`` which returns a list of values returned "
"by the ``INSERT … RETURNING`` statement, instead of a single value."
msgstr ""

msgid ""
"``DatabaseOperations.return_insert_id()`` is replaced by "
"``return_insert_columns()`` that accepts a ``fields`` argument, which is an "
"iterable of fields to be returned after insert. Usually this is only the "
"auto-generated primary key."
msgstr ""

msgid ""
"Admin's model history change messages now prefers more readable field labels "
"instead of field names."
msgstr ""

msgid "Support for PostGIS 2.1 is removed."
msgstr ""

msgid "Support for SpatiaLite 4.1 and 4.2 is removed."
msgstr ""

msgid "Support for GDAL 1.11 and GEOS 3.4 is removed."
msgstr ""

msgid "Dropped support for PostgreSQL 9.4"
msgstr ""

msgid ""
"Upstream support for PostgreSQL 9.4 ends in December 2019. Django 3.0 "
"supports PostgreSQL 9.5 and higher."
msgstr ""

msgid "Dropped support for Oracle 12.1"
msgstr ""

msgid ""
"Upstream support for Oracle 12.1 ends in July 2021. Django 2.2 will be "
"supported until April 2022. Django 3.0 officially supports Oracle 12.2 and "
"18c."
msgstr ""

msgid "Removed private Python 2 compatibility APIs"
msgstr ""

msgid ""
"While Python 2 support was removed in Django 2.0, some private APIs weren't "
"removed from Django so that third party apps could continue using them until "
"the Python 2 end-of-life."
msgstr ""

msgid ""
"Since we expect apps to drop Python 2 compatibility when adding support for "
"Django 3.0, we're removing these APIs at this time."
msgstr ""

msgid ""
"``django.test.utils.str_prefix()`` - Strings don't have 'u' prefixes in "
"Python 3."
msgstr ""

msgid ""
"``django.test.utils.patch_logger()`` - Use :meth:`unittest.TestCase."
"assertLogs` instead."
msgstr ""

msgid ""
"``django.utils.lru_cache.lru_cache()`` - Alias of :func:`functools."
"lru_cache`."
msgstr ""

msgid ""
"``django.utils.decorators.available_attrs()`` - This function returns "
"``functools.WRAPPER_ASSIGNMENTS``."
msgstr ""

msgid ""
"``django.utils.decorators.ContextDecorator`` - Alias of :class:`contextlib."
"ContextDecorator`."
msgstr ""

msgid "``django.utils._os.abspathu()`` - Alias of :func:`os.path.abspath`."
msgstr ""

msgid ""
"``django.utils._os.upath()`` and ``npath()`` - These functions do nothing on "
"Python 3."
msgstr ""

msgid ""
"``django.utils.six`` - Remove usage of this vendored library or switch to :"
"pypi:`six`."
msgstr ""

msgid ""
"``django.utils.encoding.python_2_unicode_compatible()`` - Alias of ``six."
"python_2_unicode_compatible()``."
msgstr ""

msgid ""
"``django.utils.functional.curry()`` - Use :func:`functools.partial` or :"
"class:`functools.partialmethod`. See :commit:"
"`5b1c389603a353625ae1603ba345147356336afb`."
msgstr ""

msgid "``django.utils.safestring.SafeBytes`` - Unused since Django 2.0."
msgstr ""

msgid "New default value for the ``FILE_UPLOAD_PERMISSIONS`` setting"
msgstr ""

msgid ""
"In older versions, the :setting:`FILE_UPLOAD_PERMISSIONS` setting defaults "
"to ``None``. With the default :setting:`FILE_UPLOAD_HANDLERS`, this results "
"in uploaded files having different permissions depending on their size and "
"which upload handler is used."
msgstr ""

msgid ""
"``FILE_UPLOAD_PERMISSIONS`` now defaults to ``0o644`` to avoid this "
"inconsistency."
msgstr ""

msgid "New default values for security settings"
msgstr ""

msgid ""
"To make Django projects more secure by default, some security settings now "
"have more secure default values:"
msgstr ""

msgid ":setting:`X_FRAME_OPTIONS` now defaults to ``'DENY'``."
msgstr ""

msgid ":setting:`SECURE_CONTENT_TYPE_NOSNIFF` now defaults to ``True``."
msgstr ""

msgid ""
"See the *What's New* :ref:`Security section <whats-new-security-3.0>` above "
"for more details on these changes."
msgstr ""

msgid ""
"``ContentType.__str__()`` now includes the model's ``app_label`` to "
"disambiguate models with the same name in different apps."
msgstr ""

msgid ""
"Because accessing the language in the session rather than in the cookie is "
"deprecated, ``LocaleMiddleware`` no longer looks for the user's language in "
"the session and :func:`django.contrib.auth.logout` no longer preserves the "
"session's language after logout."
msgstr ""

msgid ""
":func:`django.utils.html.escape` now uses :func:`html.escape` to escape "
"HTML. This converts ``'`` to ``&#x27;`` instead of the previous equivalent "
"decimal code ``&#39;``."
msgstr ""

msgid ""
"The ``django-admin test -k`` option now works as the :option:`unittest -"
"k<unittest.-k>` option rather than as a shortcut for ``--keepdb``."
msgstr ""

msgid "Support for ``pywatchman`` < 1.2.0 is removed."
msgstr ""

msgid ""
":func:`~django.utils.http.urlencode` now encodes iterable values as they are "
"when ``doseq=False``, rather than iterating them, bringing it into line with "
"the standard library :func:`urllib.parse.urlencode` function."
msgstr ""

msgid ""
"``intword`` template filter now translates ``1.0`` as a singular phrase and "
"all other numeric values as plural. This may be incorrect for some languages."
msgstr ""

msgid ""
"Assigning a value to a model's :class:`~django.db.models.ForeignKey` or :"
"class:`~django.db.models.OneToOneField` ``'_id'`` attribute now unsets the "
"corresponding field. Accessing the field afterward will result in a query."
msgstr ""

msgid ""
":func:`~django.utils.cache.patch_vary_headers` now handles an asterisk "
"``'*'`` according to :rfc:`7231#section-7.1.4`, i.e. if a list of header "
"field names contains an asterisk, then the ``Vary`` header will consist of a "
"single asterisk ``'*'``."
msgstr ""

msgid ""
"On MySQL 8.0.16+, ``PositiveIntegerField`` and ``PositiveSmallIntegerField`` "
"now include a check constraint to prevent negative values in the database."
msgstr ""

msgid ""
"``alias=None`` is added to the signature of :meth:`.Expression."
"get_group_by_cols`."
msgstr ""

msgid ""
"``RegexPattern``, used by :func:`~django.urls.re_path`, no longer returns "
"keyword arguments with ``None`` values to be passed to the view for the "
"optional named groups that are missing."
msgstr ""

msgid "Features deprecated in 3.0"
msgstr ""

msgid "``django.utils.encoding.force_text()`` and ``smart_text()``"
msgstr ""

msgid ""
"The ``smart_text()`` and ``force_text()`` aliases (since Django 2.0) of "
"``smart_str()`` and ``force_str()`` are deprecated. Ignore this deprecation "
"if your code supports Python 2 as the behavior of ``smart_str()`` and "
"``force_str()`` is different there."
msgstr ""

msgid ""
"``django.utils.http.urlquote()``, ``urlquote_plus()``, ``urlunquote()``, and "
"``urlunquote_plus()`` are deprecated in favor of the functions that they're "
"aliases for: :func:`urllib.parse.quote`, :func:`~urllib.parse.quote_plus`, :"
"func:`~urllib.parse.unquote`, and :func:`~urllib.parse.unquote_plus`."
msgstr ""

msgid ""
"``django.utils.translation.ugettext()``, ``ugettext_lazy()``, "
"``ugettext_noop()``, ``ungettext()``, and ``ungettext_lazy()`` are "
"deprecated in favor of the functions that they're aliases for: :func:`django."
"utils.translation.gettext`, :func:`~django.utils.translation.gettext_lazy`, :"
"func:`~django.utils.translation.gettext_noop`, :func:`~django.utils."
"translation.ngettext`, and :func:`~django.utils.translation.ngettext_lazy`."
msgstr ""

msgid ""
"To limit creation of sessions and hence favor some caching strategies, :func:"
"`django.views.i18n.set_language` will stop setting the user's language in "
"the session in Django 4.0. Since Django 2.1, the language is always stored "
"in the :setting:`LANGUAGE_COOKIE_NAME` cookie."
msgstr ""

msgid ""
"``django.utils.text.unescape_entities()`` is deprecated in favor of :func:"
"`html.unescape`. Note that unlike ``unescape_entities()``, ``html."
"unescape()`` evaluates lazy strings immediately."
msgstr ""

msgid ""
"To avoid possible confusion as to effective scope, the private internal "
"utility ``is_safe_url()`` is renamed to "
"``url_has_allowed_host_and_scheme()``. That a URL has an allowed host and "
"scheme doesn't in general imply that it's \"safe\". It may still be quoted "
"incorrectly, for example. Ensure to also use :func:`~django.utils.encoding."
"iri_to_uri` on the path component of untrusted URLs."
msgstr ""

msgid "Features removed in 3.0"
msgstr ""

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 3.0."
msgstr ""

msgid ""
"See :ref:`deprecated-features-2.0` for details on these changes, including "
"how to remove usage of these features."
msgstr ""

msgid "The ``django.db.backends.postgresql_psycopg2`` module is removed."
msgstr ""

msgid "``django.shortcuts.render_to_response()`` is removed."
msgstr ""

msgid "The ``DEFAULT_CONTENT_TYPE`` setting is removed."
msgstr ""

msgid "``HttpRequest.xreadlines()`` is removed."
msgstr ""

msgid ""
"Support for the ``context`` argument of ``Field.from_db_value()`` and "
"``Expression.convert_value()`` is removed."
msgstr ""

msgid ""
"The ``field_name`` keyword argument of ``QuerySet.earliest()`` and "
"``latest()`` is removed."
msgstr ""

msgid ""
"See :ref:`deprecated-features-2.1` for details on these changes, including "
"how to remove usage of these features."
msgstr ""

msgid "The ``ForceRHR`` GIS function is removed."
msgstr ""

msgid "``django.utils.http.cookie_date()`` is removed."
msgstr ""

msgid ""
"The ``staticfiles`` and ``admin_static`` template tag libraries are removed."
msgstr ""

msgid ""
"``django.contrib.staticfiles.templatetags.staticfiles.static()`` is removed."
msgstr ""

msgid "Django 3.0.1 release notes"
msgstr ""

msgid "Django 3.0.1 fixes a security issue and several bugs in 3.0."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 by restoring the ability to use Django "
"inside Jupyter and other environments that force an async context, by adding "
"an option to disable :ref:`async-safety` mechanism with :envvar:"
"`DJANGO_ALLOW_ASYNC_UNSAFE` environment variable (:ticket:`31056`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where ``RegexPattern``, used by :func:"
"`~django.urls.re_path`, returned positional arguments to be passed to the "
"view when all optional named groups were missing (:ticket:`31061`)."
msgstr ""

msgid ""
"Reallowed, following a regression in Django 3.0, :class:`~django.db.models."
"expressions.Window` expressions to be used in conditions outside of queryset "
"filters, e.g. in :class:`~django.db.models.expressions.When` conditions (:"
"ticket:`31060`)."
msgstr ""

msgid "Django 3.0.10 release notes"
msgstr ""

msgid ""
"Django 3.0.10 fixes two security issues and two data loss bugs in 3.0.9."
msgstr ""

msgid "Django 3.0.11 release notes"
msgstr ""

msgid ""
"Django 3.0.11 fixes a regression in 3.0.7 and adds compatibility with Python "
"3.9."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0.7 that didn't use ``Subquery()`` aliases in "
"the ``GROUP BY`` clause (:ticket:`32152`)."
msgstr ""

msgid "Django 3.0.12 release notes"
msgstr ""

msgid "Django 3.0.12 fixes a security issue with severity \"low\" in 3.0.11."
msgstr ""

msgid "Django 3.0.13 release notes"
msgstr ""

msgid "Django 3.0.13 fixes a security issue in 3.0.12."
msgstr ""

msgid "Django 3.0.14 release notes"
msgstr ""

msgid "Django 3.0.14 fixes a security issue with severity \"low\" in 3.0.13."
msgstr ""

msgid "Django 3.0.2 release notes"
msgstr ""

msgid "*January 2, 2020*"
msgstr ""

msgid "Django 3.0.2 fixes several bugs in 3.0.1."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that didn't include columns referenced by a "
"``Subquery()`` in the ``GROUP BY`` clause (:ticket:`31094`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where ``QuerySet.exists()`` crashed if a "
"queryset contained an aggregation over a ``Subquery()`` (:ticket:`31109`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that caused a migration crash on PostgreSQL "
"10+ when adding a foreign key and changing data in the same migration (:"
"ticket:`31106`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where loading fixtures crashed for models "
"defining a :attr:`~django.db.models.Field.default` for the primary key (:"
"ticket:`31071`)."
msgstr ""

msgid "Django 3.0.3 release notes"
msgstr ""

msgid "Django 3.0.3 fixes a security issue and several bugs in 3.0.2."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that caused a crash when subtracting "
"``DateField``, ``DateTimeField``, or ``TimeField`` from a ``Subquery()`` "
"annotation (:ticket:`31133`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where ``QuerySet.values()`` and "
"``values_list()`` crashed if a queryset contained an aggregation and "
"``Exists()`` annotation (:ticket:`31136`)."
msgstr ""

msgid ""
"Relaxed the system check added in Django 3.0 to reallow use of a sublanguage "
"in the :setting:`LANGUAGE_CODE` setting, when a base language is available "
"in Django but the sublanguage is not (:ticket:`31141`)."
msgstr ""

msgid ""
"Added support for using enumeration types ``TextChoices``, "
"``IntegerChoices``, and ``Choices`` in templates (:ticket:`31154`)."
msgstr ""

msgid ""
"Fixed a system check to ensure the ``max_length`` attribute fits the longest "
"choice, when a named group contains only non-string values (:ticket:`31155`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2 that caused a crash of :class:`~django."
"contrib.postgres.aggregates.ArrayAgg` and :class:`~django.contrib.postgres."
"aggregates.StringAgg` with ``filter`` argument when used in a ``Subquery`` (:"
"ticket:`31097`)."
msgstr ""

msgid ""
"Fixed a regression in Django 2.2.7 that caused :meth:`~django.db.models."
"Model.get_FOO_display` to work incorrectly when overriding inherited choices "
"(:ticket:`31124`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that caused a crash of ``QuerySet."
"prefetch_related()`` for ``GenericForeignKey`` with a custom ``ContentType`` "
"foreign key (:ticket:`31190`)."
msgstr ""

msgid "Django 3.0.4 release notes"
msgstr ""

msgid "Django 3.0.4 fixes a security issue and several bugs in 3.0.3."
msgstr ""

msgid ""
"Fixed a data loss possibility when using caching from async code (:ticket:"
"`31253`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that caused a file response using a "
"temporary file to be closed incorrectly (:ticket:`31240`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that caused misplacing parameters in logged "
"SQL queries on Oracle (:ticket:`31271`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0.3 that caused misplacing parameters of SQL "
"queries when subtracting ``DateField`` or ``DateTimeField`` expressions on "
"MySQL (:ticket:`31312`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that didn't include subqueries spanning "
"multivalued relations in the ``GROUP BY`` clause (:ticket:`31150`)."
msgstr ""

msgid "Django 3.0.5 release notes"
msgstr ""

msgid "Django 3.0.5 fixes several bugs in 3.0.4."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where ``QuerySet.values()`` and "
"``values_list()`` crashed if a queryset contained an aggregation and "
"``Subquery()`` annotation that collides with a field name (:ticket:`31377`)."
msgstr ""

msgid "Django 3.0.6 release notes"
msgstr ""

msgid "*May 4, 2020*"
msgstr ""

msgid "Django 3.0.6 fixes a bug in 3.0.5."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 that caused a crash when filtering a "
"``Subquery()`` annotation of a queryset containing a single related field "
"against a ``SimpleLazyObject`` (:ticket:`31420`)."
msgstr ""

msgid "Django 3.0.7 release notes"
msgstr ""

msgid "Django 3.0.7 fixes two security issues and several bugs in 3.0.6."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 by restoring the ability to use field "
"lookups in ``Meta.ordering`` (:ticket:`31538`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where ``QuerySet.values()`` and "
"``values_list()`` crashed if a queryset contained an aggregation and a "
"subquery annotation (:ticket:`31566`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where aggregates used wrong annotations "
"when a queryset has multiple subqueries annotations (:ticket:`31568`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where ``QuerySet.values()`` and "
"``values_list()`` crashed if a queryset contained an aggregation and an "
"``Exists()`` annotation on Oracle (:ticket:`31584`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0 where all resolved ``Subquery()`` "
"expressions were considered equal (:ticket:`31607`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0.5 that affected translation loading for "
"apps providing translations for territorial language variants as well as a "
"generic language, where the project has different plural equations for the "
"language (:ticket:`31570`)."
msgstr ""

msgid ""
"Tracking a jQuery security release, upgraded the version of jQuery used by "
"the admin from 3.4.1 to 3.5.1."
msgstr ""

msgid "Django 3.0.8 release notes"
msgstr ""

msgid "Django 3.0.8 fixes several bugs in 3.0.7."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0.7 that caused a queryset crash when "
"grouping by a many-to-one relationship (:ticket:`31660`)."
msgstr ""

msgid ""
"Reallowed, following a regression in Django 3.0, non-expressions having a "
"``filterable`` attribute to be used as the right-hand side in queryset "
"filters (:ticket:`31664`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.0.2 that caused a migration crash on "
"PostgreSQL when adding a foreign key to a model with a namespaced "
"``db_table`` (:ticket:`31735`)."
msgstr ""

msgid "Added compatibility for ``cx_Oracle`` 8 (:ticket:`31751`)."
msgstr ""

msgid "Django 3.0.9 release notes"
msgstr ""

msgid "Django 3.0.9 fixes several bugs in 3.0.8."
msgstr ""

msgid "Django 3.1 release notes"
msgstr ""

msgid "*August 4, 2020*"
msgstr ""

msgid "Welcome to Django 3.1!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-3.1>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-3.1>` "
"you'll want to be aware of when upgrading from Django 3.0 or earlier. We've :"
"ref:`dropped some features<removed-features-3.1>` that have reached the end "
"of their deprecation cycle, and we've :ref:`begun the deprecation process "
"for some features <deprecated-features-3.1>`."
msgstr ""

msgid ""
"Django 3.1 supports Python 3.6, 3.7, 3.8, and 3.9 (as of 3.1.3). We **highly "
"recommend** and only officially support the latest release of each series."
msgstr ""

msgid "What's new in Django 3.1"
msgstr ""

msgid "Asynchronous views and middleware support"
msgstr ""

msgid "Django now supports a fully asynchronous request path, including:"
msgstr ""

msgid ":ref:`Asynchronous views <async-views>`"
msgstr ""

msgid ":ref:`Asynchronous middleware <async-middleware>`"
msgstr ""

msgid ":ref:`Asynchronous tests and test client <async-tests>`"
msgstr ""

msgid ""
"To get started with async views, you need to declare a view using ``async "
"def``::"
msgstr ""

msgid ""
"All asynchronous features are supported whether you are running under WSGI "
"or ASGI mode. However, there will be performance penalties using async code "
"in WSGI mode. You can read more about the specifics in :doc:`/topics/async` "
"documentation."
msgstr ""

msgid ""
"You are free to mix async and sync views, middleware, and tests as much as "
"you want. Django will ensure that you always end up with the right execution "
"context. We expect most projects will keep the majority of their views "
"synchronous, and only have a select few running in async mode - but it is "
"entirely your choice."
msgstr ""

msgid ""
"Django's ORM, cache layer, and other pieces of code that do long-running "
"network calls do not yet support async access. We expect to add support for "
"them in upcoming releases. Async views are ideal, however, if you are doing "
"a lot of API or HTTP calls inside your view, you can now natively do all "
"those HTTP calls in parallel to considerably speed up your view's execution."
msgstr ""

msgid ""
"Asynchronous support should be entirely backwards-compatible and we have "
"tried to ensure that it has no speed regressions for your existing, "
"synchronous code. It should have no noticeable effect on any existing Django "
"projects."
msgstr ""

msgid "JSONField for all supported database backends"
msgstr ""

msgid ""
"Django now includes :class:`.models.JSONField` and :class:`forms.JSONField "
"<django.forms.JSONField>` that can be used on all supported database "
"backends. Both fields support the use of custom JSON encoders and decoders. "
"The model field supports the introspection, :ref:`lookups, and transforms "
"<querying-jsonfield>` that were previously PostgreSQL-only::"
msgstr ""

msgid ""
"If your project uses ``django.contrib.postgres.fields.JSONField``, plus the "
"related form field and transforms, you should adjust to use the new fields, "
"and generate and apply a database migration. For now, the old fields and "
"transforms are left as a reference to the new ones and are :ref:`deprecated "
"as of this release <deprecated-jsonfield>`."
msgstr ""

msgid "``DEFAULT_HASHING_ALGORITHM`` settings"
msgstr ""

msgid ""
"The new ``DEFAULT_HASHING_ALGORITHM`` transitional setting allows specifying "
"the default hashing algorithm to use for encoding cookies, password reset "
"tokens in the admin site, user sessions, and signatures created by :class:"
"`django.core.signing.Signer` and :meth:`django.core.signing.dumps`."
msgstr ""

msgid ""
"Support for SHA-256 was added in Django 3.1. If you are upgrading multiple "
"instances of the same project to Django 3.1, you should set "
"``DEFAULT_HASHING_ALGORITHM`` to ``'sha1'`` during the transition, in order "
"to allow compatibility with the older versions of Django. Note that this "
"requires Django 3.1.1+. Once the transition to 3.1 is complete you can stop "
"overriding ``DEFAULT_HASHING_ALGORITHM``."
msgstr ""

msgid ""
"This setting is deprecated as of this release, because support for tokens, "
"cookies, sessions, and signatures that use SHA-1 algorithm will be removed "
"in Django 4.0."
msgstr ""

msgid ""
"The new ``django.contrib.admin.EmptyFieldListFilter`` for :attr:`.ModelAdmin."
"list_filter` allows filtering on empty values (empty strings and nulls) in "
"the admin changelist view."
msgstr ""

msgid ""
"Filters in the right sidebar of the admin changelist view now contain a link "
"to clear all filters."
msgstr ""

msgid ""
"The admin now has a sidebar on larger screens for easier navigation. It is "
"enabled by default but can be disabled by using a custom ``AdminSite`` and "
"setting :attr:`.AdminSite.enable_nav_sidebar` to ``False``."
msgstr ""

msgid ""
"Rendering the sidebar requires access to the current request in order to set "
"CSS and ARIA role affordances. This requires using ``'django.template."
"context_processors.request'`` in the ``'context_processors'`` option of :"
"setting:`OPTIONS <TEMPLATES-OPTIONS>`."
msgstr ""

msgid ""
"Initially empty ``extra`` inlines can now be removed, in the same way as "
"dynamically created ones."
msgstr ""

msgid "``XRegExp`` is upgraded from version 2.0.0 to 3.2.0."
msgstr ""

msgid "jQuery is upgraded from version 3.4.1 to 3.5.1."
msgstr ""

msgid "Select2 library is upgraded from version 4.0.7 to 4.0.13."
msgstr ""

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased from "
"180,000 to 216,000."
msgstr ""

msgid ""
"The new :setting:`PASSWORD_RESET_TIMEOUT` setting allows defining the number "
"of seconds a password reset link is valid for. This is encouraged instead of "
"the deprecated ``PASSWORD_RESET_TIMEOUT_DAYS`` setting, which will be "
"removed in Django 4.0."
msgstr ""

msgid ""
"The password reset mechanism now uses the SHA-256 hashing algorithm. Support "
"for tokens that use the old hashing algorithm remains until Django 4.0."
msgstr ""

msgid ""
":meth:`.AbstractBaseUser.get_session_auth_hash` now uses the SHA-256 hashing "
"algorithm. Support for user sessions that use the old hashing algorithm "
"remains until Django 4.0."
msgstr ""

msgid ""
"The new :option:`remove_stale_contenttypes --include-stale-apps` option "
"allows removing stale content types from previously installed apps that have "
"been removed from :setting:`INSTALLED_APPS`."
msgstr ""

msgid ":lookup:`relate` lookup is now supported on MariaDB."
msgstr ""

msgid "Added the :attr:`.LinearRing.is_counterclockwise` property."
msgstr ""

msgid ""
":class:`~django.contrib.gis.db.models.functions.AsGeoJSON` is now supported "
"on Oracle."
msgstr ""

msgid ""
"Added the :class:`~django.contrib.gis.db.models.functions.AsWKB` and :class:"
"`~django.contrib.gis.db.models.functions.AsWKT` functions."
msgstr ""

msgid "Added support for PostGIS 3 and GDAL 3."
msgstr ""

msgid ":mod:`django.contrib.humanize`"
msgstr ""

msgid ":tfilter:`intword` template filter now supports negative integers."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.indexes.BloomIndex` class allows "
"creating ``bloom`` indexes in the database. The new :class:`~django.contrib."
"postgres.operations.BloomExtension` migration operation installs the "
"``bloom`` extension to add support for this index."
msgstr ""

msgid ""
":meth:`~django.db.models.Model.get_FOO_display` now supports :class:`~django."
"contrib.postgres.fields.ArrayField` and :class:`~django.contrib.postgres."
"fields.RangeField`."
msgstr ""

msgid ""
"The new :lookup:`rangefield.lower_inc`, :lookup:`rangefield.lower_inf`, :"
"lookup:`rangefield.upper_inc`, and :lookup:`rangefield.upper_inf` lookups "
"allow querying :class:`~django.contrib.postgres.fields.RangeField` by a "
"bound type."
msgstr ""

msgid ""
":lookup:`rangefield.contained_by` now supports :class:`~django.db.models."
"SmallAutoField`, :class:`~django.db.models.AutoField`, :class:`~django.db."
"models.BigAutoField`, :class:`~django.db.models.SmallIntegerField`, and :"
"class:`~django.db.models.DecimalField`."
msgstr ""

msgid ""
":class:`~django.contrib.postgres.search.SearchQuery` now supports "
"``'websearch'`` search type on PostgreSQL 11+."
msgstr ""

msgid ""
":class:`SearchQuery.value <django.contrib.postgres.search.SearchQuery>` now "
"supports query expressions."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.search.SearchHeadline` class allows "
"highlighting search results."
msgstr ""

msgid ":lookup:`search` lookup now supports query expressions."
msgstr ""

msgid ""
"The new ``cover_density`` parameter of :class:`~django.contrib.postgres."
"search.SearchRank` allows ranking by cover density."
msgstr ""

msgid ""
"The new ``normalization`` parameter of :class:`~django.contrib.postgres."
"search.SearchRank` allows rank normalization."
msgstr ""

msgid ""
"The new :attr:`.ExclusionConstraint.deferrable` attribute allows creating "
"deferrable exclusion constraints."
msgstr ""

msgid ""
"The :setting:`SESSION_COOKIE_SAMESITE` setting now allows ``'None'`` "
"(string) value to explicitly state that the cookie is sent with all same-"
"site and cross-site requests."
msgstr ""

msgid ""
"The :setting:`STATICFILES_DIRS` setting now supports :class:`pathlib.Path`."
msgstr ""

msgid ""
"The :func:`~django.views.decorators.cache.cache_control` decorator and :func:"
"`~django.utils.cache.patch_cache_control` method now support multiple field "
"names in the ``no-cache`` directive for the ``Cache-Control`` header, "
"according to :rfc:`7234#section-5.2.2.2`."
msgstr ""

msgid ""
":meth:`~django.core.cache.cache.delete` now returns ``True`` if the key was "
"successfully deleted, ``False`` otherwise."
msgstr ""

msgid ""
"The :setting:`CSRF_COOKIE_SAMESITE` setting now allows ``'None'`` (string) "
"value to explicitly state that the cookie is sent with all same-site and "
"cross-site requests."
msgstr ""

msgid ""
"The :setting:`EMAIL_FILE_PATH` setting, used by the :ref:`file email backend "
"<topic-email-file-backend>`, now supports :class:`pathlib.Path`."
msgstr ""

msgid "Error Reporting"
msgstr ""

msgid ""
":class:`django.views.debug.SafeExceptionReporterFilter` now filters "
"sensitive values from ``request.META`` in exception reports."
msgstr ""

msgid ""
"The new :attr:`.SafeExceptionReporterFilter.cleansed_substitute` and :attr:`."
"SafeExceptionReporterFilter.hidden_settings` attributes allow customization "
"of sensitive settings and ``request.META`` filtering in exception reports."
msgstr ""

msgid ""
"The technical 404 debug view now respects :setting:"
"`DEFAULT_EXCEPTION_REPORTER_FILTER` when applying settings filtering."
msgstr ""

msgid ""
"The new :setting:`DEFAULT_EXCEPTION_REPORTER` allows providing a :class:"
"`django.views.debug.ExceptionReporter` subclass to customize exception "
"report generation. See :ref:`custom-error-reports` for details."
msgstr ""

msgid "``FileSystemStorage.save()`` method now supports :class:`pathlib.Path`."
msgstr ""

msgid ""
":class:`~django.db.models.FileField` and :class:`~django.db.models."
"ImageField` now accept a callable for ``storage``. This allows you to modify "
"the used storage at runtime, selecting different storages for different "
"environments, for example."
msgstr ""

msgid ""
":class:`~django.forms.ModelChoiceIterator`, used by :class:`~django.forms."
"ModelChoiceField` and :class:`~django.forms.ModelMultipleChoiceField`, now "
"uses :class:`~django.forms.ModelChoiceIteratorValue` that can be used by "
"widgets to access model instances. See :ref:`iterating-relationship-choices` "
"for details."
msgstr ""

msgid ""
":class:`django.forms.DateTimeField` now accepts dates in a subset of ISO "
"8601 datetime formats, including optional timezone, e.g. "
"``2019-10-10T06:47``, ``2019-10-10T06:47:23+04:00``, or "
"``2019-10-10T06:47:23Z``. The timezone will always be retained if provided, "
"with timezone-aware datetimes being returned even when :setting:`USE_TZ` is "
"``False``."
msgstr ""

msgid ""
"Additionally, ``DateTimeField`` now uses ``DATE_INPUT_FORMATS`` in addition "
"to ``DATETIME_INPUT_FORMATS`` when converting a field input to a "
"``datetime`` value."
msgstr ""

msgid ""
":attr:`.MultiWidget.widgets` now accepts a dictionary which allows "
"customizing subwidget ``name`` attributes."
msgstr ""

msgid ""
"The new :attr:`.BoundField.widget_type` property can be used to dynamically "
"adjust form rendering based upon the widget type."
msgstr ""

msgid ""
"The :setting:`LANGUAGE_COOKIE_SAMESITE` setting now allows ``'None'`` "
"(string) value to explicitly state that the cookie is sent with all same-"
"site and cross-site requests."
msgstr ""

msgid ""
"Added support and translations for the Algerian Arabic, Igbo, Kyrgyz, Tajik, "
"and Turkmen languages."
msgstr ""

msgid ""
"The new :option:`check --database` option allows specifying database aliases "
"for running the ``database`` system checks. Previously these checks were "
"enabled for all configured :setting:`DATABASES` by passing the ``database`` "
"tag to the command."
msgstr ""

msgid ""
"The new :option:`migrate --check` option makes the command exit with a non-"
"zero status when unapplied migrations are detected."
msgstr ""

msgid ""
"The new ``returncode`` argument for :attr:`~django.core.management."
"CommandError` allows customizing the exit status for management commands."
msgstr ""

msgid ""
"The new :option:`dbshell -- ARGUMENTS <dbshell -->` option allows passing "
"extra arguments to the command-line client for the database."
msgstr ""

msgid ""
"The :djadmin:`flush` and :djadmin:`sqlflush` commands now include SQL to "
"reset sequences on SQLite."
msgstr ""

msgid ""
"The new :class:`~django.db.models.functions.ExtractIsoWeekDay` function "
"extracts ISO-8601 week days from :class:`~django.db.models.DateField` and :"
"class:`~django.db.models.DateTimeField`, and the new :lookup:`iso_week_day` "
"lookup allows querying by an ISO-8601 day of week."
msgstr ""

msgid ":meth:`.QuerySet.explain` now supports:"
msgstr ""

msgid "``TREE`` format on MySQL 8.0.16+,"
msgstr ""

msgid "``analyze`` option on MySQL 8.0.18+ and MariaDB."
msgstr ""

msgid ""
"Added :class:`~django.db.models.PositiveBigIntegerField` which acts much "
"like a :class:`~django.db.models.PositiveIntegerField` except that it only "
"allows values under a certain (database-dependent) limit. Values from ``0`` "
"to ``9223372036854775807`` are safe in all databases supported by Django."
msgstr ""

msgid ""
"The new :class:`~django.db.models.RESTRICT` option for :attr:`~django.db."
"models.ForeignKey.on_delete` argument of ``ForeignKey`` and "
"``OneToOneField`` emulates the behavior of the SQL constraint ``ON DELETE "
"RESTRICT``."
msgstr ""

msgid ":attr:`.CheckConstraint.check` now supports boolean expressions."
msgstr ""

msgid ""
"The :meth:`.RelatedManager.add`, :meth:`~.RelatedManager.create`, and :meth:"
"`~.RelatedManager.set` methods now accept callables as values in the "
"``through_defaults`` argument."
msgstr ""

msgid ""
"The new ``is_dst``  parameter of the :meth:`.QuerySet.datetimes` determines "
"the treatment of nonexistent and ambiguous datetimes."
msgstr ""

msgid ""
"The new :class:`~django.db.models.F` expression ``bitxor()`` method allows :"
"ref:`bitwise XOR operation <using-f-expressions-in-filters>`."
msgstr ""

msgid ""
":meth:`.QuerySet.bulk_create` now sets the primary key on objects when using "
"MariaDB 10.5+."
msgstr ""

msgid ""
"The ``DatabaseOperations.sql_flush()`` method now generates more efficient "
"SQL on MySQL by using ``DELETE`` instead of ``TRUNCATE`` statements for "
"tables which don't require resetting sequences."
msgstr ""

msgid ""
"SQLite functions are now marked as :py:meth:`deterministic <sqlite3."
"Connection.create_function>` on Python 3.8+. This allows using them in check "
"constraints and partial indexes."
msgstr ""

msgid ""
"The new :attr:`.UniqueConstraint.deferrable` attribute allows creating "
"deferrable unique constraints."
msgstr ""

msgid ""
":class:`~django.core.paginator.Paginator` can now be iterated over to yield "
"its pages."
msgstr ""

msgid ""
"If :setting:`ALLOWED_HOSTS` is empty and ``DEBUG=True``, subdomains of "
"localhost are now allowed in the ``Host`` header, e.g. ``static.localhost``."
msgstr ""

msgid ""
":meth:`.HttpResponse.set_cookie` and :meth:`.HttpResponse.set_signed_cookie` "
"now allow using ``samesite='None'`` (string) to explicitly state that the "
"cookie is sent with all same-site and cross-site requests."
msgstr ""

msgid ""
"The new :meth:`.HttpRequest.accepts` method returns whether the request "
"accepts the given MIME type according to the ``Accept`` HTTP header."
msgstr ""

msgid ""
"The :setting:`SECURE_REFERRER_POLICY` setting now defaults to ``'same-"
"origin'``. With this configured, :class:`~django.middleware.security."
"SecurityMiddleware` sets the :ref:`referrer-policy` header to ``same-"
"origin`` on all responses that do not already have it. This prevents the "
"``Referer`` header being sent to other origins. If you need the previous "
"behavior, explicitly set :setting:`SECURE_REFERRER_POLICY` to ``None``."
msgstr ""

msgid ""
"The default algorithm of :class:`django.core.signing.Signer`, :meth:`django."
"core.signing.loads`, and :meth:`django.core.signing.dumps` is changed to the "
"SHA-256. Support for signatures made with the old SHA-1 algorithm remains "
"until Django 4.0."
msgstr ""

msgid ""
"Also, the new ``algorithm`` parameter of the :class:`~django.core.signing."
"Signer` allows customizing the hashing algorithm."
msgstr ""

msgid ""
"The renamed :ttag:`translate` and :ttag:`blocktranslate` template tags are "
"introduced for internationalization in template code. The older :ttag:"
"`trans` and :ttag:`blocktrans` template tags aliases continue to work, and "
"will be retained for the foreseeable future."
msgstr ""

msgid ""
"The :ttag:`include` template tag now accepts iterables of template names."
msgstr ""

msgid ""
":class:`~django.test.SimpleTestCase` now implements the ``debug()`` method "
"to allow running a test without collecting the result and catching "
"exceptions. This can be used to support running tests under a debugger."
msgstr ""

msgid ""
"The new :setting:`MIGRATE <TEST_MIGRATE>` test database setting allows "
"disabling of migrations during a test database creation."
msgstr ""

msgid ""
"Django test runner now supports a :option:`test --buffer` option to discard "
"output for passing tests."
msgstr ""

msgid ""
":class:`~django.test.runner.DiscoverRunner` now skips running the system "
"checks on databases not :ref:`referenced by tests<testing-multi-db>`."
msgstr ""

msgid ""
":class:`~django.test.TransactionTestCase` teardown is now faster on MySQL "
"due to :djadmin:`flush` command improvements. As a side effect the latter "
"doesn't automatically reset sequences on teardown anymore. Enable :attr:`."
"TransactionTestCase.reset_sequences` if your tests require this feature."
msgstr ""

msgid ""
":ref:`Path converters <registering-custom-path-converters>` can now raise "
"``ValueError`` in ``to_url()`` to indicate no match when reversing URLs."
msgstr ""

msgid ""
":func:`~django.utils.encoding.filepath_to_uri` now supports :class:`pathlib."
"Path`."
msgstr ""

msgid ""
":func:`~django.utils.dateparse.parse_duration` now supports comma separators "
"for decimal fractions in the ISO 8601 format."
msgstr ""

msgid ""
":func:`~django.utils.dateparse.parse_datetime`, :func:`~django.utils."
"dateparse.parse_duration`, and :func:`~django.utils.dateparse.parse_time` "
"now support comma separators for milliseconds."
msgstr ""

msgid ""
"The SQLite backend now supports :class:`pathlib.Path` for the ``NAME`` "
"setting."
msgstr ""

msgid ""
"The ``settings.py`` generated by the :djadmin:`startproject` command now "
"uses :class:`pathlib.Path` instead of :mod:`os.path` for building filesystem "
"paths."
msgstr ""

msgid ""
"The :setting:`TIME_ZONE <DATABASE-TIME_ZONE>` setting is now allowed on "
"databases that support time zones."
msgstr ""

msgid "Backwards incompatible changes in 3.1"
msgstr ""

msgid ""
"``DatabaseOperations.fetch_returned_insert_columns()`` now requires an "
"additional ``returning_params`` argument."
msgstr ""

msgid ""
"``connection.timezone`` property is now ``'UTC'`` by default, or the :"
"setting:`TIME_ZONE <DATABASE-TIME_ZONE>` when :setting:`USE_TZ` is ``True`` "
"on databases that support time zones. Previously, it was ``None`` on "
"databases that support time zones."
msgstr ""

msgid ""
"``connection._nodb_connection`` property is changed to the ``connection."
"_nodb_cursor()`` method and now returns a context manager that yields a "
"cursor and automatically closes the cursor and connection upon exiting the "
"``with`` statement."
msgstr ""

msgid ""
"``DatabaseClient.runshell()`` now requires an additional ``parameters`` "
"argument as a list of extra arguments to pass on to the command-line client."
msgstr ""

msgid ""
"The ``sequences`` positional argument of ``DatabaseOperations.sql_flush()`` "
"is replaced by the boolean keyword-only argument ``reset_sequences``. If "
"``True``, the sequences of the truncated tables will be reset."
msgstr ""

msgid ""
"The ``allow_cascade`` argument of ``DatabaseOperations.sql_flush()`` is now "
"a keyword-only argument."
msgstr ""

msgid ""
"The ``using`` positional argument of ``DatabaseOperations."
"execute_sql_flush()`` is removed. The method now uses the database of the "
"called instance."
msgstr ""

msgid ""
"Third-party database backends must implement support for ``JSONField`` or "
"set ``DatabaseFeatures.supports_json_field`` to ``False``. If storing "
"primitives is not supported, set ``DatabaseFeatures."
"supports_primitives_in_json_field`` to ``False``. If there is a true "
"datatype for JSON, set ``DatabaseFeatures.has_native_json_field`` to "
"``True``. If :lookup:`jsonfield.contains` and :lookup:`jsonfield."
"contained_by` are not supported, set ``DatabaseFeatures."
"supports_json_field_contains`` to ``False``."
msgstr ""

msgid ""
"Third party database backends must implement introspection for ``JSONField`` "
"or set ``can_introspect_json_field`` to ``False``."
msgstr ""

msgid "Dropped support for MariaDB 10.1"
msgstr ""

msgid ""
"Upstream support for MariaDB 10.1 ends in October 2020. Django 3.1 supports "
"MariaDB 10.2 and higher."
msgstr ""

msgid ""
"The admin no longer supports the legacy Internet Explorer browser. See :ref:"
"`the admin FAQ <admin-browser-support>` for details on supported browsers."
msgstr ""

msgid ""
":attr:`AbstractUser.first_name <django.contrib.auth.models.User.first_name>` "
"``max_length`` increased to 150"
msgstr ""

msgid ""
"A migration for :attr:`django.contrib.auth.models.User.first_name` is "
"included. If you have a custom user model inheriting from ``AbstractUser``, "
"you'll need to generate and apply a database migration for your user model."
msgstr ""

msgid ""
"If you want to preserve the 30 character limit for first names, use a custom "
"form::"
msgstr ""

msgid ""
"The cache keys used by :ttag:`cache` and generated by :func:`~django.core."
"cache.utils.make_template_fragment_key` are different from the keys "
"generated by older versions of Django. After upgrading to Django 3.1, the "
"first request to any previously cached template fragment will be a cache "
"miss."
msgstr ""

msgid ""
"The logic behind the decision to return a redirection fallback or a 204 HTTP "
"response from the :func:`~django.views.i18n.set_language` view is now based "
"on the ``Accept`` HTTP header instead of the ``X-Requested-With`` HTTP "
"header presence."
msgstr ""

msgid ""
"The compatibility imports of ``django.core.exceptions.EmptyResultSet`` in "
"``django.db.models.query``, ``django.db.models.sql``, and ``django.db.models."
"sql.datastructures`` are removed."
msgstr ""

msgid ""
"The compatibility import of ``django.core.exceptions.FieldDoesNotExist`` in "
"``django.db.models.fields`` is removed."
msgstr ""

msgid ""
"The compatibility imports of ``django.forms.utils.pretty_name()`` and "
"``django.forms.boundfield.BoundField`` in ``django.forms.forms`` are removed."
msgstr ""

msgid ""
"The compatibility imports of ``Context``, ``ContextPopException``, and "
"``RequestContext`` in ``django.template.base`` are removed."
msgstr ""

msgid ""
"The compatibility import of ``django.contrib.admin.helpers."
"ACTION_CHECKBOX_NAME`` in ``django.contrib.admin`` is removed."
msgstr ""

msgid ""
"The :setting:`STATIC_URL` and :setting:`MEDIA_URL` settings set to relative "
"paths are now prefixed by the server-provided value of ``SCRIPT_NAME`` (or "
"``/`` if not set). This change should not affect settings set to valid URLs "
"or absolute paths."
msgstr ""

msgid ""
":class:`~django.middleware.http.ConditionalGetMiddleware` no longer adds the "
"``ETag`` header to responses with an empty :attr:`~django.http.HttpResponse."
"content`."
msgstr ""

msgid ""
"``django.utils.decorators.classproperty()`` decorator is made public and "
"moved to :class:`django.utils.functional.classproperty()`."
msgstr ""

msgid ""
":tfilter:`floatformat` template filter now outputs (positive) ``0`` for "
"negative numbers which round to zero."
msgstr ""

msgid ""
":attr:`Meta.ordering <django.db.models.Options.ordering>` and :attr:`Meta."
"unique_together <django.db.models.Options.unique_together>` options on "
"models in ``django.contrib`` modules that were formerly tuples are now lists."
msgstr ""

msgid ""
"The admin calendar widget now handles two-digit years according to the Open "
"Group Specification, i.e. values between 69 and 99 are mapped to the "
"previous century, and values between 0 and 68 are mapped to the current "
"century."
msgstr ""

msgid ""
"Date-only formats are removed from the default list for :setting:"
"`DATETIME_INPUT_FORMATS`."
msgstr ""

msgid ""
"The :class:`~django.forms.FileInput` widget no longer renders with the "
"``required`` HTML attribute when initial data exists."
msgstr ""

msgid ""
"The undocumented ``django.views.debug.ExceptionReporterFilter`` class is "
"removed. As per the :ref:`custom-error-reports` documentation, classes to be "
"used with :setting:`DEFAULT_EXCEPTION_REPORTER_FILTER` need to inherit from :"
"class:`django.views.debug.SafeExceptionReporterFilter`."
msgstr ""

msgid ""
"The cache timeout set by :func:`~django.views.decorators.cache.cache_page` "
"decorator now takes precedence over the ``max-age`` directive from the "
"``Cache-Control`` header."
msgstr ""

msgid ""
"Providing a non-local remote field in the :attr:`.ForeignKey.to_field` "
"argument now raises :class:`~django.core.exceptions.FieldError`."
msgstr ""

msgid ""
":setting:`SECURE_REFERRER_POLICY` now defaults to ``'same-origin'``. See the "
"*What's New* :ref:`Security section <whats-new-security-3.1>` above for more "
"details."
msgstr ""

msgid ""
":djadmin:`check` management command now runs the ``database`` system checks "
"only for database aliases specified using :option:`check --database` option."
msgstr ""

msgid ""
":djadmin:`migrate` management command now runs the ``database`` system "
"checks only for a database to migrate."
msgstr ""

msgid ""
"The admin CSS classes ``row1`` and ``row2`` are removed in favor of ``:nth-"
"child(odd)`` and ``:nth-child(even)`` pseudo-classes."
msgstr ""

msgid ""
"The :func:`~django.contrib.auth.hashers.make_password` function now requires "
"its argument to be a string or bytes. Other types should be explicitly cast "
"to one of these."
msgstr ""

msgid ""
"The undocumented ``version`` parameter to the :class:`~django.contrib.gis.db."
"models.functions.AsKML` function is removed."
msgstr ""

msgid ""
":ref:`JSON and YAML serializers <serialization-formats>`, used by :djadmin:"
"`dumpdata`, now dump all data with Unicode by default. If you need the "
"previous behavior, pass ``ensure_ascii=True`` to JSON serializer, or "
"``allow_unicode=False`` to YAML serializer."
msgstr ""

msgid ""
"The auto-reloader no longer monitors changes in built-in Django translation "
"files."
msgstr ""

msgid ""
"The minimum supported version of ``mysqlclient`` is increased from 1.3.13 to "
"1.4.0."
msgstr ""

msgid ""
"The undocumented ``django.contrib.postgres.forms.InvalidJSONInput`` and "
"``django.contrib.postgres.forms.JSONString`` are moved to ``django.forms."
"fields``."
msgstr ""

msgid ""
"The undocumented ``django.contrib.postgres.fields.jsonb.JsonAdapter`` class "
"is removed."
msgstr ""

msgid ""
"The :ttag:`{% localize off %} <localize>` tag and :tfilter:`unlocalize` "
"filter no longer respect :setting:`DECIMAL_SEPARATOR` setting."
msgstr ""

msgid ""
"The minimum supported version of ``asgiref`` is increased from 3.2 to 3.2.10."
msgstr ""

msgid ""
"The :doc:`Media </topics/forms/media>` class now renders ``<script>`` tags "
"without the ``type`` attribute to follow `WHATWG recommendations <https://"
"html.spec.whatwg.org/multipage/scripting.html#the-script-element>`_."
msgstr ""

msgid ""
":class:`~django.forms.ModelChoiceIterator`, used by :class:`~django.forms."
"ModelChoiceField` and :class:`~django.forms.ModelMultipleChoiceField`, now "
"yields 2-tuple choices containing :class:`~django.forms."
"ModelChoiceIteratorValue` instances as the first ``value`` element in each "
"choice. In most cases this proxies transparently, but if you need the "
"``field`` value itself, use the :attr:`.ModelChoiceIteratorValue.value` "
"attribute instead."
msgstr ""

msgid "Features deprecated in 3.1"
msgstr ""

msgid "PostgreSQL ``JSONField``"
msgstr ""

msgid ""
"``django.contrib.postgres.fields.JSONField`` and ``django.contrib.postgres."
"forms.JSONField`` are deprecated in favor of :class:`.models.JSONField` and :"
"class:`forms.JSONField <django.forms.JSONField>`."
msgstr ""

msgid ""
"The undocumented ``django.contrib.postgres.fields.jsonb.KeyTransform`` and "
"``django.contrib.postgres.fields.jsonb.KeyTextTransform`` are also "
"deprecated in favor of the transforms in ``django.db.models.fields.json``."
msgstr ""

msgid ""
"The new ``JSONField``\\s, ``KeyTransform``, and ``KeyTextTransform`` can be "
"used on all supported database backends."
msgstr ""

msgid ""
"``PASSWORD_RESET_TIMEOUT_DAYS`` setting is deprecated in favor of :setting:"
"`PASSWORD_RESET_TIMEOUT`."
msgstr ""

msgid ""
"The undocumented usage of the :lookup:`isnull` lookup with non-boolean "
"values as the right-hand side is deprecated, use ``True`` or ``False`` "
"instead."
msgstr ""

msgid ""
"The barely documented ``django.db.models.query_utils.InvalidQuery`` "
"exception class is deprecated in favor of :class:`~django.core.exceptions."
"FieldDoesNotExist` and :class:`~django.core.exceptions.FieldError`."
msgstr ""

msgid ""
"The ``django-admin.py`` entry point is deprecated in favor of ``django-"
"admin``."
msgstr ""

msgid ""
"The ``HttpRequest.is_ajax()`` method is deprecated as it relied on a jQuery-"
"specific way of signifying AJAX calls, while current usage tends to use the "
"JavaScript `Fetch API <https://developer.mozilla.org/en-US/docs/Web/API/"
"Fetch_API>`_. Depending on your use case, you can either write your own AJAX "
"detection method, or use the new :meth:`.HttpRequest.accepts` method if your "
"code depends on the client ``Accept`` HTTP header."
msgstr ""

msgid ""
"If you are writing your own AJAX detection method, ``request.is_ajax()`` can "
"be reproduced exactly as ``request.headers.get('x-requested-with') == "
"'XMLHttpRequest'``."
msgstr ""

msgid ""
"Passing ``None`` as the first argument to ``django.utils.deprecation."
"MiddlewareMixin.__init__()`` is deprecated."
msgstr ""

msgid ""
"The encoding format of cookies values used by :class:`~django.contrib."
"messages.storage.cookie.CookieStorage` is different from the format "
"generated by older versions of Django. Support for the old format remains "
"until Django 4.0."
msgstr ""

msgid ""
"The encoding format of sessions is different from the format generated by "
"older versions of Django. Support for the old format remains until Django "
"4.0."
msgstr ""

msgid ""
"The purely documentational ``providing_args`` argument for :class:`~django."
"dispatch.Signal` is deprecated. If you rely on this argument as "
"documentation, you can move the text to a code comment or docstring."
msgstr ""

msgid ""
"Calling ``django.utils.crypto.get_random_string()`` without a ``length`` "
"argument is deprecated."
msgstr ""

msgid ""
"The ``list`` message for :class:`~django.forms.ModelMultipleChoiceField` is "
"deprecated in favor of ``invalid_list``."
msgstr ""

msgid ""
"Passing raw column aliases to :meth:`.QuerySet.order_by` is deprecated. The "
"same result can be achieved by passing aliases in a :class:`~django.db."
"models.expressions.RawSQL` instead beforehand."
msgstr ""

msgid ""
"The ``NullBooleanField`` model field is deprecated in favor of "
"``BooleanField(null=True)``."
msgstr ""

msgid ""
"``django.conf.urls.url()`` alias of :func:`django.urls.re_path` is "
"deprecated."
msgstr ""

msgid ""
"The ``{% ifequal %}`` and ``{% ifnotequal %}`` template tags are deprecated "
"in favor of :ttag:`{% if %}<if>`. ``{% if %}`` covers all use cases, but if "
"you need to continue using these tags, they can be extracted from Django to "
"a module and included as a built-in tag in the :class:`'builtins' <django."
"template.backends.django.DjangoTemplates>` option in :setting:`OPTIONS "
"<TEMPLATES-OPTIONS>`."
msgstr ""

msgid "``DEFAULT_HASHING_ALGORITHM`` transitional setting is deprecated."
msgstr ""

msgid "Features removed in 3.1"
msgstr ""

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 3.1."
msgstr ""

msgid ""
"See :ref:`deprecated-features-2.2` for details on these changes, including "
"how to remove usage of these features."
msgstr ""

msgid "``django.utils.timezone.FixedOffset`` is removed."
msgstr ""

msgid "``django.core.paginator.QuerySetPaginator`` is removed."
msgstr ""

msgid "A model's ``Meta.ordering`` doesn't affect ``GROUP BY`` queries."
msgstr ""

msgid ""
"``django.contrib.postgres.fields.FloatRangeField`` and ``django.contrib."
"postgres.forms.FloatRangeField`` are removed."
msgstr ""

msgid "The ``FILE_CHARSET`` setting is removed."
msgstr ""

msgid ""
"``django.contrib.staticfiles.storage.CachedStaticFilesStorage`` is removed."
msgstr ""

msgid ""
"The ``RemoteUserBackend.configure_user()`` method requires ``request`` as "
"the first positional argument."
msgstr ""

msgid ""
"Support for ``SimpleTestCase.allow_database_queries`` and "
"``TransactionTestCase.multi_db`` is removed."
msgstr ""

msgid "Django 3.1.1 release notes"
msgstr ""

msgid "Django 3.1.1 fixes two security issues and several bugs in 3.1."
msgstr ""

msgid ""
"Fixed wrapping of translated action labels in the admin's navigation sidebar "
"for East Asian languages (:ticket:`31853`)."
msgstr ""

msgid ""
"Fixed wrapping of long model names in the admin's navigation sidebar (:"
"ticket:`31854`)."
msgstr ""

msgid ""
"Fixed encoding session data while upgrading multiple instances of the same "
"project to Django 3.1 (:ticket:`31864`)."
msgstr ""

msgid ""
"Adjusted admin's navigation sidebar template to reduce debug logging when "
"rendering (:ticket:`31865`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused a crash when decoding an "
"invalid session data (:ticket:`31895`)."
msgstr ""

msgid ""
"Reverted a deprecation in Django 3.1 that caused a crash when passing "
"deprecated keyword arguments to a queryset in ``TemplateView."
"get_context_data()`` (:ticket:`31877`)."
msgstr ""

msgid ""
"Enforced thread sensitivity of the :class:`MiddlewareMixin.process_request() "
"<django.utils.deprecation.MiddlewareMixin>` and ``process_response()`` hooks "
"when in an async context (:ticket:`31905`)."
msgstr ""

msgid ""
"Fixed ``__in`` lookup on key transforms for :class:`~django.db.models."
"JSONField` with MariaDB, MySQL, Oracle, and SQLite (:ticket:`31936`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused permission errors in "
"``CommonPasswordValidator`` and ``settings.py`` generated by the :djadmin:"
"`startproject` command, when user didn't have permissions to all "
"intermediate directories in a Django installation path (:ticket:`31912`)."
msgstr ""

msgid ""
"Fixed detecting an async ``get_response`` callable in various builtin "
"middlewares (:ticket:`31928`)."
msgstr ""

msgid ""
"Fixed a ``QuerySet.order_by()`` crash on PostgreSQL when ordering and "
"grouping by :class:`~django.db.models.JSONField` with a custom :attr:"
"`~django.db.models.JSONField.decoder` (:ticket:`31956`). As a consequence, "
"fetching a ``JSONField`` with raw SQL now returns a string instead of "
"preloaded data. You will need to explicitly call ``json.loads()`` in such "
"cases."
msgstr ""

msgid ""
"Fixed a ``QuerySet.delete()`` crash on MySQL, following a performance "
"regression in Django 3.1 on MariaDB 10.3.2+, when filtering against an "
"aggregate function (:ticket:`31965`)."
msgstr ""

msgid ""
"Fixed a ``django.contrib.admin.EmptyFieldListFilter`` crash when using on "
"reverse relations (:ticket:`31952`)."
msgstr ""

msgid ""
"Prevented content overflowing in the admin changelist view when the "
"navigation sidebar is enabled (:ticket:`31901`)."
msgstr ""

msgid "Django 3.1.10 release notes"
msgstr ""

msgid "Django 3.1.10 fixes a security issue in 3.1.9."
msgstr ""

msgid "Django 3.1.11 release notes"
msgstr ""

msgid "Django 3.1.11 fixes a regression in 3.1.9."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1.9 where saving ``FileField`` would raise a "
"``SuspiciousFileOperation`` even when a custom :attr:`~django.db.models."
"FileField.upload_to` returns a valid file path (:ticket:`32718`)."
msgstr ""

msgid "Django 3.1.12 release notes"
msgstr ""

msgid "Django 3.1.12 fixes two security issues in 3.1.11."
msgstr ""

msgid "Django 3.1.13 release notes"
msgstr ""

msgid "*July 1, 2021*"
msgstr ""

msgid "Django 3.1.13 fixes a security issue with severity \"high\" in 3.1.12."
msgstr ""

msgid ""
"CVE-2021-35042: Potential SQL injection via unsanitized ``QuerySet."
"order_by()`` input"
msgstr ""

msgid ""
"Unsanitized user input passed to ``QuerySet.order_by()`` could bypass "
"intended column reference validation in path marked for deprecation "
"resulting in a potential SQL injection even if a deprecation warning is "
"emitted."
msgstr ""

msgid ""
"As a mitigation the strict column reference validation was restored for the "
"duration of the deprecation period. This regression appeared in 3.1 as a "
"side effect of fixing :ticket:`31426`."
msgstr ""

msgid ""
"The issue is not present in the main branch as the deprecated path has been "
"removed."
msgstr ""

msgid "Django 3.1.14 release notes"
msgstr ""

msgid "Django 3.1.14 fixes a security issue with severity \"low\" in 3.1.13."
msgstr ""

msgid "Django 3.1.2 release notes"
msgstr ""

msgid "*October 1, 2020*"
msgstr ""

msgid "Django 3.1.2 fixes several bugs in 3.1.1."
msgstr ""

msgid ""
"Fixed a bug in Django 3.1 where ``FileField`` instances with a callable "
"storage were not correctly deconstructed (:ticket:`31941`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 where the :attr:`.QuerySet.ordered` "
"attribute returned incorrectly ``True`` for ``GROUP BY`` queries (e.g. ``."
"annotate().values()``) on models with ``Meta.ordering``. A model's ``Meta."
"ordering`` doesn't affect such queries (:ticket:`31990`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 where a queryset would crash if it "
"contained an aggregation and a ``Q`` object annotation (:ticket:`32007`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.1 where a test database was not synced during "
"creation when using the :setting:`MIGRATE <TEST_MIGRATE>` test database "
"setting (:ticket:`32012`)."
msgstr ""

msgid ""
"Fixed a ``django.contrib.admin.EmptyFieldListFilter`` crash when using on a "
"``GenericRelation`` (:ticket:`32038`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1.1 where the admin changelist filter sidebar "
"would not scroll for a long list of available filters (:ticket:`31986`)."
msgstr ""

msgid "Django 3.1.3 release notes"
msgstr ""

msgid ""
"Django 3.1.3 fixes several bugs in 3.1.2 and adds compatibility with Python "
"3.9."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1.2 that caused the incorrect height of the "
"admin changelist search bar (:ticket:`32072`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1.2 that caused the incorrect width of the "
"admin changelist search bar on a filtered page (:ticket:`32091`)."
msgstr ""

msgid ""
"Fixed displaying Unicode characters in :class:`forms.JSONField <django.forms."
"JSONField>` and read-only :class:`models.JSONField <django.db.models."
"JSONField>` values in the admin (:ticket:`32080`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused a crash of :class:`~django."
"contrib.postgres.aggregates.ArrayAgg` and :class:`~django.contrib.postgres."
"aggregates.StringAgg` with ``ordering`` on key transforms for :class:"
"`~django.db.models.JSONField` (:ticket:`32096`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused a crash of ``__in`` lookup when "
"using key transforms for :class:`~django.db.models.JSONField` in the lookup "
"value (:ticket:`32096`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused a crash of :class:`~django.db."
"models.ExpressionWrapper` with key transforms for :class:`~django.db.models."
"JSONField` (:ticket:`32096`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused a migrations crash on "
"PostgreSQL when adding an :class:`~django.contrib.postgres.constraints."
"ExclusionConstraint` with key transforms for :class:`~django.db.models."
"JSONField` in ``expressions`` (:ticket:`32096`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 where :exc:`ProtectedError."
"protected_objects <django.db.models.ProtectedError>` and :exc:"
"`RestrictedError.restricted_objects <django.db.models.RestrictedError>` "
"attributes returned iterators instead of :py:class:`set` of objects (:ticket:"
"`32107`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1.2 that caused incorrect form input layout "
"on small screens in the admin change form view (:ticket:`32069`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that invalidated pre-Django 3.1 password "
"reset tokens (:ticket:`32130`)."
msgstr ""

msgid "Added support for ``asgiref`` 3.3 (:ticket:`32128`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused incorrect textarea layout on "
"medium-sized screens in the admin change form view with the sidebar open (:"
"ticket:`32127`)."
msgstr ""

msgid "Django 3.1.4 release notes"
msgstr ""

msgid "*December 1, 2020*"
msgstr ""

msgid "Django 3.1.4 fixes several bugs in 3.1.3."
msgstr ""

msgid ""
"Fixed setting the ``Content-Length`` HTTP header in ``AsyncRequestFactory`` "
"(:ticket:`32162`)."
msgstr ""

msgid ""
"Fixed passing extra HTTP headers to ``AsyncRequestFactory`` request methods "
"(:ticket:`32159`)."
msgstr ""

msgid ""
"Fixed crash of key transforms for :class:`~django.db.models.JSONField` on "
"PostgreSQL when using on a ``Subquery()`` annotation (:ticket:`32182`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused a crash of auto-reloader for "
"certain invocations of ``runserver`` on Windows with Python 3.7 and below (:"
"ticket:`32202`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused the incorrect grouping by a "
"``Q`` object annotation (:ticket:`32200`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused suppressing connection errors "
"when :class:`~django.db.models.JSONField` is used on SQLite (:ticket:"
"`32224`)."
msgstr ""

msgid ""
"Fixed a crash on SQLite, when ``QuerySet.values()/values_list()`` contained "
"key transforms for :class:`~django.db.models.JSONField` returning non-string "
"primitive values (:ticket:`32203`)."
msgstr ""

msgid "Django 3.1.5 release notes"
msgstr ""

msgid "*January 4, 2021*"
msgstr ""

msgid "Django 3.1.5 fixes several bugs in 3.1.4."
msgstr ""

msgid ""
"Fixed ``__isnull=True`` lookup on key transforms for :class:`~django.db."
"models.JSONField` with Oracle and SQLite (:ticket:`32252`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.1 that caused a crash when processing middlewares in "
"an async context with a middleware that raises a ``MiddlewareNotUsed`` "
"exception (:ticket:`32299`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused the incorrect prefixing of "
"``STATIC_URL`` and ``MEDIA_URL`` settings, by the server-provided value of "
"``SCRIPT_NAME`` (or ``/`` if not set), when set to a URL specifying the "
"protocol but without a top-level domain, e.g. ``http://myhost/`` (:ticket:"
"`32304`)."
msgstr ""

msgid "Django 3.1.6 release notes"
msgstr ""

msgid ""
"Django 3.1.6 fixes a security issue with severity \"low\" and a bug in 3.1.5."
msgstr ""

msgid ""
"Fixed an admin layout issue in Django 3.1 where changelist filter controls "
"would become squashed (:ticket:`32391`)."
msgstr ""

msgid "Django 3.1.7 release notes"
msgstr ""

msgid "Django 3.1.7 fixes a security issue and a bug in 3.1.6."
msgstr ""

msgid ""
"Fixed a regression in Django 3.1 that caused ``RuntimeError`` instead of "
"connection errors when using only the ``'postgres'`` database (:ticket:"
"`32403`)."
msgstr ""

msgid "Django 3.1.8 release notes"
msgstr ""

msgid ""
"Django 3.1.8 fixes a security issue with severity \"low\" and a bug in 3.1.7."
msgstr ""

msgid ""
"Fixed a bug in Django 3.1 where the output was hidden on a test error or "
"failure when using :option:`test --pdb` with the :option:`--buffer <test --"
"buffer>` option (:ticket:`32560`)."
msgstr ""

msgid "Django 3.1.9 release notes"
msgstr ""

msgid "Django 3.1.9 fixes a security issue in 3.1.8."
msgstr ""

msgid "Django 3.2 release notes"
msgstr ""

msgid "Welcome to Django 3.2!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-3.2>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-3.2>` "
"you'll want to be aware of when upgrading from Django 3.1 or earlier. We've :"
"ref:`begun the deprecation process for some features <deprecated-"
"features-3.2>`."
msgstr ""

msgid ""
"Django 3.2 is designated as a :term:`long-term support release <Long-term "
"support release>`. It will receive security updates for at least three years "
"after its release. Support for the previous LTS, Django 2.2, will end in "
"April 2022."
msgstr ""

msgid ""
"Django 3.2 supports Python 3.6, 3.7, 3.8, 3.9, and 3.10 (as of 3.2.9). We "
"**highly recommend** and only officially support the latest release of each "
"series."
msgstr ""

msgid "What's new in Django 3.2"
msgstr ""

msgid "Automatic :class:`~django.apps.AppConfig` discovery"
msgstr ""

msgid ""
"Most pluggable applications define an :class:`~django.apps.AppConfig` "
"subclass in an ``apps.py`` submodule. Many define a ``default_app_config`` "
"variable pointing to this class in their ``__init__.py``."
msgstr ""

msgid ""
"When the ``apps.py`` submodule exists and defines a single :class:`~django."
"apps.AppConfig` subclass, Django now uses that configuration automatically, "
"so you can remove ``default_app_config``."
msgstr ""

msgid ""
"``default_app_config`` made it possible to declare only the application's "
"path in :setting:`INSTALLED_APPS` (e.g. ``'django.contrib.admin'``) rather "
"than the app config's path (e.g. ``'django.contrib.admin.apps."
"AdminConfig'``). It was introduced for backwards-compatibility with the "
"former style, with the intent to switch the ecosystem to the latter, but the "
"switch didn't happen."
msgstr ""

msgid ""
"With automatic ``AppConfig`` discovery, ``default_app_config`` is no longer "
"needed. As a consequence, it's deprecated."
msgstr ""

msgid "See :ref:`configuring-applications-ref` for full details."
msgstr ""

msgid "Customizing type of auto-created primary keys"
msgstr ""

msgid ""
"When defining a model, if no field in a model is defined with :attr:"
"`primary_key=True <django.db.models.Field.primary_key>` an implicit primary "
"key is added. The type of this implicit primary key can now be controlled "
"via the :setting:`DEFAULT_AUTO_FIELD` setting and :attr:`AppConfig."
"default_auto_field <django.apps.AppConfig.default_auto_field>` attribute. No "
"more needing to override primary keys in all models."
msgstr ""

msgid ""
"Maintaining the historical behavior, the default value for :setting:"
"`DEFAULT_AUTO_FIELD` is :class:`~django.db.models.AutoField`. Starting with "
"3.2 new projects are generated with :setting:`DEFAULT_AUTO_FIELD` set to :"
"class:`~django.db.models.BigAutoField`. Also, new apps are generated with :"
"attr:`AppConfig.default_auto_field <django.apps.AppConfig."
"default_auto_field>` set to :class:`~django.db.models.BigAutoField`. In a "
"future Django release the default value of :setting:`DEFAULT_AUTO_FIELD` "
"will be changed to :class:`~django.db.models.BigAutoField`."
msgstr ""

msgid ""
"To avoid unwanted migrations in the future, either explicitly set :setting:"
"`DEFAULT_AUTO_FIELD` to :class:`~django.db.models.AutoField`::"
msgstr ""

msgid "or configure it on a per-app basis::"
msgstr ""

msgid "or on a per-model basis::"
msgstr ""

msgid ""
"In anticipation of the changing default, a system check will provide a "
"warning if you do not have an explicit setting for :setting:"
"`DEFAULT_AUTO_FIELD`."
msgstr ""

msgid ""
"When changing the value of :setting:`DEFAULT_AUTO_FIELD`, migrations for the "
"primary key of existing auto-created through tables cannot be generated "
"currently. See the :setting:`DEFAULT_AUTO_FIELD` docs for details on "
"migrating such tables."
msgstr ""

msgid "Functional indexes"
msgstr ""

msgid ""
"The new :attr:`*expressions <django.db.models.Index.expressions>` positional "
"argument of :class:`Index() <django.db.models.Index>` enables creating "
"functional indexes on expressions and database functions. For example::"
msgstr ""

msgid ""
"Functional indexes are added to models using the :attr:`Meta.indexes <django."
"db.models.Options.indexes>` option."
msgstr ""

msgid "``pymemcache`` support"
msgstr ""

msgid ""
"The new ``django.core.cache.backends.memcached.PyMemcacheCache`` cache "
"backend allows using the :pypi:`pymemcache` library for memcached. "
"``pymemcache`` 3.4.0 or higher is required. For more details, see the :doc:"
"`documentation on caching in Django </topics/cache>`."
msgstr ""

msgid "New decorators for the admin site"
msgstr ""

msgid ""
"The new :func:`~django.contrib.admin.display` decorator allows for easily "
"adding options to custom display functions that can be used with :attr:"
"`~django.contrib.admin.ModelAdmin.list_display` or :attr:`~django.contrib."
"admin.ModelAdmin.readonly_fields`."
msgstr ""

msgid ""
"Likewise, the new :func:`~django.contrib.admin.action` decorator allows for "
"easily adding options to action functions that can be used with :attr:"
"`~django.contrib.admin.ModelAdmin.actions`."
msgstr ""

msgid ""
"Using the ``@display`` decorator has the advantage that it is now possible "
"to use the ``@property`` decorator when needing to specify attributes on the "
"custom method. Prior to this it was necessary to use the ``property()`` "
"function instead after assigning the required attributes to the method."
msgstr ""

msgid ""
"Using decorators has the advantage that these options are more discoverable "
"as they can be suggested by completion utilities in code editors. They are "
"merely a convenience and still set the same attributes on the functions "
"under the hood."
msgstr ""

msgid ""
":attr:`.ModelAdmin.search_fields` now allows searching against quoted "
"phrases with spaces."
msgstr ""

msgid ""
"Read-only related fields are now rendered as navigable links if target "
"models are registered in the admin."
msgstr ""

msgid ""
"The admin now supports theming, and includes a dark theme that is enabled "
"according to browser settings. See :ref:`admin-theming` for more details."
msgstr ""

msgid ""
":attr:`.ModelAdmin.autocomplete_fields` now respects :attr:`ForeignKey."
"to_field <django.db.models.ForeignKey.to_field>` and :attr:`ForeignKey."
"limit_choices_to <django.db.models.ForeignKey.limit_choices_to>` when "
"searching a related model."
msgstr ""

msgid ""
"The admin now installs a final catch-all view that redirects unauthenticated "
"users to the login page, regardless of whether the URL is otherwise valid. "
"This protects against a potential model enumeration privacy issue."
msgstr ""

msgid ""
"Although not recommended, you may set the new :attr:`.AdminSite."
"final_catch_all_view` to ``False`` to disable the catch-all view."
msgstr ""

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased from "
"216,000 to 260,000."
msgstr ""

msgid ""
"The default variant for the Argon2 password hasher is changed to Argon2id. "
"``memory_cost`` and ``parallelism`` are increased to 102,400 and 8 "
"respectively to match the ``argon2-cffi`` defaults."
msgstr ""

msgid ""
"Increasing the ``memory_cost`` pushes the required memory from 512 KB to 100 "
"MB. This is still rather conservative but can lead to problems in memory "
"constrained environments. If this is the case, the existing hasher can be "
"subclassed to override the defaults."
msgstr ""

msgid ""
"The default salt entropy for the Argon2, MD5, PBKDF2, SHA-1 password hashers "
"is increased from 71 to 128 bits."
msgstr ""

msgid ""
"The new ``absolute_max`` argument for :func:`~django.contrib.contenttypes."
"forms.generic_inlineformset_factory` allows customizing the maximum number "
"of forms that can be instantiated when supplying ``POST`` data. See :ref:"
"`formsets-absolute-max` for more details."
msgstr ""

msgid ""
"The new ``can_delete_extra`` argument for :func:`~django.contrib."
"contenttypes.forms.generic_inlineformset_factory` allows removal of the "
"option to delete extra forms. See :attr:`~.BaseFormSet.can_delete_extra` for "
"more information."
msgstr ""

msgid ""
"The :meth:`.GDALRaster.transform` method now supports :class:`~django."
"contrib.gis.gdal.SpatialReference`."
msgstr ""

msgid ""
"The :class:`~django.contrib.gis.gdal.DataSource` class now supports :class:"
"`pathlib.Path`."
msgstr ""

msgid ""
"The :class:`~django.contrib.gis.utils.LayerMapping` class now supports :"
"class:`pathlib.Path`."
msgstr ""

msgid ""
"The new :attr:`.ExclusionConstraint.include` attribute allows creating "
"covering exclusion constraints on PostgreSQL 12+."
msgstr ""

msgid ""
"The new :attr:`.ExclusionConstraint.opclasses` attribute allows setting "
"PostgreSQL operator classes."
msgstr ""

msgid ""
"The new :attr:`.JSONBAgg.ordering` attribute determines the ordering of the "
"aggregated elements."
msgstr ""

msgid ""
"The new :attr:`.JSONBAgg.distinct` attribute determines if aggregated values "
"will be distinct."
msgstr ""

msgid ""
"The :class:`~django.contrib.postgres.operations.CreateExtension` operation "
"now checks that the extension already exists in the database and skips the "
"migration if so."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.operations.CreateCollation` and :"
"class:`~django.contrib.postgres.operations.RemoveCollation` operations allow "
"creating and dropping collations on PostgreSQL. See :ref:`manage-postgresql-"
"collations` for more details."
msgstr ""

msgid ""
"Lookups for :class:`~django.contrib.postgres.fields.ArrayField` now allow "
"(non-nested) arrays containing expressions as right-hand sides."
msgstr ""

msgid ""
"The new :class:`OpClass() <django.contrib.postgres.indexes.OpClass>` "
"expression allows creating functional indexes on expressions with a custom "
"operator class. See :ref:`new_functional_indexes` for more details."
msgstr ""

msgid ""
"The new :class:`~django.contrib.sitemaps.Sitemap` attributes :attr:`~django."
"contrib.sitemaps.Sitemap.alternates`, :attr:`~django.contrib.sitemaps."
"Sitemap.languages` and :attr:`~django.contrib.sitemaps.Sitemap.x_default` "
"allow generating sitemap *alternates* to localized versions of your pages."
msgstr ""

msgid ""
"The new ``item_comments`` hook allows specifying a comments URL per feed "
"item."
msgstr ""

msgid ""
"Third-party database backends can now skip or mark as expected failures "
"tests in Django's test suite using the new ``DatabaseFeatures."
"django_test_skips`` and ``django_test_expected_failures`` attributes."
msgstr ""

msgid "Decorators"
msgstr ""

msgid ""
"The new :func:`~django.views.decorators.common.no_append_slash` decorator "
"allows individual views to be excluded from :setting:`APPEND_SLASH` URL "
"normalization."
msgstr ""

msgid ""
"Custom :class:`~django.views.debug.ExceptionReporter` subclasses can now "
"define the :attr:`~django.views.debug.ExceptionReporter.html_template_path` "
"and :attr:`~django.views.debug.ExceptionReporter.text_template_path` "
"properties to override the templates used to render exception reports."
msgstr ""

msgid ""
"The new :meth:`FileUploadHandler.upload_interrupted() <django.core.files."
"uploadhandler.FileUploadHandler.upload_interrupted>` callback allows "
"handling interrupted uploads."
msgstr ""

msgid ""
"The new ``absolute_max`` argument for :func:`.formset_factory`, :func:`."
"inlineformset_factory`, and :func:`.modelformset_factory` allows customizing "
"the maximum number of forms that can be instantiated when supplying ``POST`` "
"data. See :ref:`formsets-absolute-max` for more details."
msgstr ""

msgid ""
"The new ``can_delete_extra`` argument for :func:`.formset_factory`, :func:`."
"inlineformset_factory`, and :func:`.modelformset_factory` allows removal of "
"the option to delete extra forms. See :attr:`~.BaseFormSet.can_delete_extra` "
"for more information."
msgstr ""

msgid ""
":class:`~django.forms.formsets.BaseFormSet` now reports a user facing error, "
"rather than raising an exception, when the management form is missing or has "
"been tampered with. To customize this error message, pass the "
"``error_messages`` argument with the key ``'missing_management_form'`` when "
"instantiating the formset."
msgstr ""

msgid ""
"The ``week_format`` attributes of :class:`~django.views.generic.dates."
"WeekMixin` and :class:`~django.views.generic.dates.WeekArchiveView` now "
"support the ``'%V'`` ISO 8601 week format."
msgstr ""

msgid ""
":djadmin:`loaddata` now supports fixtures stored in XZ archives (``.xz``) "
"and LZMA archives (``.lzma``)."
msgstr ""

msgid ""
":djadmin:`dumpdata` now can compress data in the ``bz2``, ``gz``, ``lzma``, "
"or ``xz`` formats."
msgstr ""

msgid ""
":djadmin:`makemigrations` can now be called without an active database "
"connection. In that case, check for a consistent migration history is "
"skipped."
msgstr ""

msgid ""
":attr:`.BaseCommand.requires_system_checks` now supports specifying a list "
"of tags. System checks registered in the chosen tags will be checked for "
"errors prior to executing the command. In previous versions, either all or "
"none of the system checks were performed."
msgstr ""

msgid ""
"Support for colored terminal output on Windows is updated. Various modern "
"terminal environments are automatically detected, and the options for "
"enabling support in other cases are improved. See :ref:`syntax-coloring` for "
"more details."
msgstr ""

msgid ""
"The new ``Operation.migration_name_fragment`` property allows providing a "
"filename fragment that will be used to name a migration containing only that "
"operation."
msgstr ""

msgid ""
"Migrations now support serialization of pure and concrete path objects from :"
"mod:`pathlib`, and :class:`os.PathLike` instances."
msgstr ""

msgid ""
"The new ``no_key`` parameter for :meth:`.QuerySet.select_for_update()`, "
"supported on PostgreSQL, allows acquiring weaker locks that don't block the "
"creation of rows that reference locked rows through a foreign key."
msgstr ""

msgid ""
":class:`When() <django.db.models.expressions.When>` expression now allows "
"using the ``condition`` argument with ``lookups``."
msgstr ""

msgid ""
"The new :attr:`.Index.include` and :attr:`.UniqueConstraint.include` "
"attributes allow creating covering indexes and covering unique constraints "
"on PostgreSQL 11+."
msgstr ""

msgid ""
"The new :attr:`.UniqueConstraint.opclasses` attribute allows setting "
"PostgreSQL operator classes."
msgstr ""

msgid ""
"The :meth:`.QuerySet.update` method now respects the ``order_by()`` clause "
"on MySQL and MariaDB."
msgstr ""

msgid ""
":class:`FilteredRelation() <django.db.models.FilteredRelation>` now supports "
"nested relations."
msgstr ""

msgid ""
"The ``of`` argument of :meth:`.QuerySet.select_for_update()` is now allowed "
"on MySQL 8.0.1+."
msgstr ""

msgid ""
":class:`Value() <django.db.models.Value>` expression now automatically "
"resolves its ``output_field`` to the appropriate :class:`Field <django.db."
"models.Field>` subclass based on the type of its provided ``value`` for :py:"
"class:`bool`, :py:class:`bytes`, :py:class:`float`, :py:class:`int`, :py:"
"class:`str`, :py:class:`datetime.date`, :py:class:`datetime.datetime`, :py:"
"class:`datetime.time`, :py:class:`datetime.timedelta`, :py:class:`decimal."
"Decimal`, and :py:class:`uuid.UUID` instances. As a consequence, resolving "
"an ``output_field`` for database functions and combined expressions may now "
"crash with mixed types when using ``Value()``. You will need to explicitly "
"set the ``output_field`` in such cases."
msgstr ""

msgid ""
"The new :meth:`.QuerySet.alias` method allows creating reusable aliases for "
"expressions that don't need to be selected but are used for filtering, "
"ordering, or as a part of complex expressions."
msgstr ""

msgid ""
"The new :class:`~django.db.models.functions.Collate` function allows "
"filtering and ordering by specified database collations."
msgstr ""

msgid ""
"The ``field_name`` argument of :meth:`.QuerySet.in_bulk()` now accepts "
"distinct fields if there's only one field specified in :meth:`.QuerySet."
"distinct`."
msgstr ""

msgid ""
"The new ``tzinfo`` parameter of the :class:`~django.db.models.functions."
"TruncDate` and :class:`~django.db.models.functions.TruncTime` database "
"functions allows truncating datetimes in a specific timezone."
msgstr ""

msgid ""
"The new ``db_collation`` argument for :attr:`CharField <django.db.models."
"CharField.db_collation>` and :attr:`TextField <django.db.models.TextField."
"db_collation>` allows setting a database collation for the field."
msgstr ""

msgid ""
"Added the :class:`~django.db.models.functions.Random` database function."
msgstr ""

msgid ""
":ref:`aggregation-functions`, :class:`F() <django.db.models.F>`, :class:"
"`OuterRef() <django.db.models.OuterRef>`, and other expressions now allow "
"using transforms. See :ref:`using-transforms-in-expressions` for details."
msgstr ""

msgid ""
"The new ``durable`` argument for :func:`~django.db.transaction.atomic` "
"guarantees that changes made in the atomic block will be committed if the "
"block exits without errors. A nested atomic block marked as durable will "
"raise a ``RuntimeError``."
msgstr ""

msgid ""
"Added the :class:`~django.db.models.functions.JSONObject` database function."
msgstr ""

msgid ""
"The new :meth:`django.core.paginator.Paginator.get_elided_page_range` method "
"allows generating a page range with some of the values elided. If there are "
"a large number of pages, this can be helpful for generating a reasonable "
"number of page links in a template."
msgstr ""

msgid ""
"Response headers are now stored in :attr:`.HttpResponse.headers`. This can "
"be used instead of the original dict-like interface of ``HttpResponse`` "
"objects. Both interfaces will continue to be supported. See :ref:`setting-"
"header-fields` for details."
msgstr ""

msgid ""
"The new ``headers`` parameter of :class:`~django.http.HttpResponse`, :class:"
"`~django.template.response.SimpleTemplateResponse`, and :class:`~django."
"template.response.TemplateResponse` allows setting response :attr:`~django."
"http.HttpResponse.headers` on instantiation."
msgstr ""

msgid ""
"The :setting:`SECRET_KEY` setting is now checked for a valid value upon "
"first access, rather than when settings are first loaded. This enables "
"running management commands that do not rely on the ``SECRET_KEY`` without "
"needing to provide a value. As a consequence of this, calling :func:`~django."
"conf.settings.configure` without providing a valid ``SECRET_KEY``, and then "
"going on to access ``settings.SECRET_KEY`` will now raise an :exc:`~django."
"core.exceptions.ImproperlyConfigured` exception."
msgstr ""

msgid ""
"The new ``Signer.sign_object()`` and ``Signer.unsign_object()`` methods "
"allow signing complex data structures. See :ref:`signing-complex-data` for "
"more details."
msgstr ""

msgid ""
"Also, :func:`signing.dumps() <django.core.signing.dumps>` and :func:`~django."
"core.signing.loads` become shortcuts for :meth:`.TimestampSigner."
"sign_object` and :meth:`~.TimestampSigner.unsign_object`."
msgstr ""

msgid ""
"The new :ref:`JSONL <serialization-formats-jsonl>` serializer allows using "
"the JSON Lines format with :djadmin:`dumpdata` and :djadmin:`loaddata`. This "
"can be useful for populating large databases because data is loaded line by "
"line into memory, rather than being loaded all at once."
msgstr ""

msgid ""
":meth:`Signal.send_robust() <django.dispatch.Signal.send_robust>` now logs "
"exceptions."
msgstr ""

msgid ""
":tfilter:`floatformat` template filter now allows using the ``g`` suffix to "
"force grouping by the :setting:`THOUSAND_SEPARATOR` for the active locale."
msgstr ""

msgid ""
"Templates cached with :ref:`Cached template loaders<template-loaders>` are "
"now correctly reloaded in development."
msgstr ""

msgid ""
"Objects assigned to class attributes in :meth:`.TestCase.setUpTestData` are "
"now isolated for each test method. Such objects are now required to support "
"creating deep copies with :py:func:`copy.deepcopy`. Assigning objects which "
"don't support ``deepcopy()`` is deprecated and will be removed in Django 4.1."
msgstr ""

msgid ""
":class:`~django.test.runner.DiscoverRunner` now enables :py:mod:"
"`faulthandler` by default. This can be disabled by using the :option:`test --"
"no-faulthandler` option."
msgstr ""

msgid ""
":class:`~django.test.runner.DiscoverRunner` and the :djadmin:`test` "
"management command can now track timings, including database setup and total "
"run time. This can be enabled by using the :option:`test --timing` option."
msgstr ""

msgid ""
":class:`~django.test.Client` now preserves the request query string when "
"following 307 and 308 redirects."
msgstr ""

msgid ""
"The new :meth:`.TestCase.captureOnCommitCallbacks` method captures callback "
"functions passed to :func:`transaction.on_commit() <django.db.transaction."
"on_commit>` in a list. This allows you to test such callbacks without using "
"the slower :class:`.TransactionTestCase`."
msgstr ""

msgid ""
":meth:`TransactionTestCase.assertQuerysetEqual() <django.test."
"TransactionTestCase.assertQuerySetEqual>` now supports direct comparison "
"against another queryset rather than being restricted to comparison against "
"a list of string representations of objects when using the default value for "
"the ``transform`` argument."
msgstr ""

msgid ""
"The new ``depth`` parameter of ``django.utils.timesince.timesince()`` and "
"``django.utils.timesince.timeuntil()`` functions allows specifying the "
"number of adjacent time units to return."
msgstr ""

msgid ""
"Built-in validators now include the provided value in the ``params`` "
"argument of a raised :exc:`~django.core.exceptions.ValidationError`. This "
"allows custom error messages to use the ``%(value)s`` placeholder."
msgstr ""

msgid ""
"The :class:`.ValidationError` equality operator now ignores ``messages`` and "
"``params`` ordering."
msgstr ""

msgid "Backwards incompatible changes in 3.2"
msgstr ""

msgid ""
"The new ``DatabaseFeatures.introspected_field_types`` property replaces "
"these features:"
msgstr ""

msgid "``can_introspect_autofield``"
msgstr ""

msgid "``can_introspect_big_integer_field``"
msgstr ""

msgid "``can_introspect_binary_field``"
msgstr ""

msgid "``can_introspect_decimal_field``"
msgstr ""

msgid "``can_introspect_duration_field``"
msgstr ""

msgid "``can_introspect_ip_address_field``"
msgstr ""

msgid "``can_introspect_positive_integer_field``"
msgstr ""

msgid "``can_introspect_small_integer_field``"
msgstr ""

msgid "``can_introspect_time_field``"
msgstr ""

msgid "``introspected_big_auto_field_type``"
msgstr ""

msgid "``introspected_small_auto_field_type``"
msgstr ""

msgid "``introspected_boolean_field_type``"
msgstr ""

msgid ""
"To enable support for covering indexes (:attr:`.Index.include`) and covering "
"unique constraints (:attr:`.UniqueConstraint.include`), set "
"``DatabaseFeatures.supports_covering_indexes`` to ``True``."
msgstr ""

msgid ""
"Third-party database backends must implement support for column database "
"collations on ``CharField``\\s and ``TextField``\\s or set "
"``DatabaseFeatures.supports_collation_on_charfield`` and ``DatabaseFeatures."
"supports_collation_on_textfield`` to ``False``. If non-deterministic "
"collations are not supported, set ``supports_non_deterministic_collations`` "
"to ``False``."
msgstr ""

msgid ""
"``DatabaseOperations.random_function_sql()`` is removed in favor of the new :"
"class:`~django.db.models.functions.Random` database function."
msgstr ""

msgid ""
"``DatabaseOperations.date_trunc_sql()`` and ``DatabaseOperations."
"time_trunc_sql()`` now take the optional ``tzname`` argument in order to "
"truncate in a specific timezone."
msgstr ""

msgid ""
"``DatabaseClient.runshell()`` now gets arguments and an optional dictionary "
"with environment variables to the underlying command-line client from "
"``DatabaseClient.settings_to_cmd_args_env()`` method. Third-party database "
"backends must implement ``DatabaseClient.settings_to_cmd_args_env()`` or "
"override ``DatabaseClient.runshell()``."
msgstr ""

msgid ""
"Third-party database backends must implement support for functional indexes "
"(:attr:`.Index.expressions`) or set ``DatabaseFeatures."
"supports_expression_indexes`` to ``False``. If ``COLLATE`` is not a part of "
"the ``CREATE INDEX`` statement, set ``DatabaseFeatures."
"collate_as_index_expression`` to ``True``."
msgstr ""

msgid ""
"Pagination links in the admin are now 1-indexed instead of 0-indexed, i.e. "
"the query string for the first page is ``?p=1`` instead of ``?p=0``."
msgstr ""

msgid ""
"The new admin catch-all view will break URL patterns routed after the admin "
"URLs and matching the admin URL prefix. You can either adjust your URL "
"ordering or, if necessary, set :attr:`AdminSite.final_catch_all_view <django."
"contrib.admin.AdminSite.final_catch_all_view>` to ``False``, disabling the "
"catch-all view. See :ref:`whats-new-3.2` for more details."
msgstr ""

msgid ""
"Minified JavaScript files are no longer included with the admin. If you "
"require these files to be minified, consider using a third party app or "
"external build tool. The minified vendored JavaScript files packaged with "
"the admin (e.g. :ref:`jquery.min.js <contrib-admin-jquery>`) are still "
"included."
msgstr ""

msgid ""
":attr:`.ModelAdmin.prepopulated_fields` no longer strips English stop words, "
"such as ``'a'`` or ``'an'``."
msgstr ""

msgid "Support for PostGIS 2.2 is removed."
msgstr ""

msgid ""
"The Oracle backend now clones polygons (and geometry collections containing "
"polygons) before reorienting them and saving them to the database. They are "
"no longer mutated in place. You might notice this if you use the polygons "
"after a model is saved."
msgstr ""

msgid "Dropped support for PostgreSQL 9.5"
msgstr ""

msgid ""
"Upstream support for PostgreSQL 9.5 ends in February 2021. Django 3.2 "
"supports PostgreSQL 9.6 and higher."
msgstr ""

msgid "Dropped support for MySQL 5.6"
msgstr ""

msgid ""
"The end of upstream support for MySQL 5.6 is April 2021. Django 3.2 supports "
"MySQL 5.7 and higher."
msgstr ""

msgid ""
"Django now supports non-``pytz`` time zones, such as Python 3.9+'s :mod:"
"`zoneinfo` module and its backport."
msgstr ""

msgid ""
"The undocumented ``SpatiaLiteOperations.proj4_version()`` method is renamed "
"to ``proj_version()``."
msgstr ""

msgid ""
":func:`~django.utils.text.slugify` now removes leading and trailing dashes "
"and underscores."
msgstr ""

msgid ""
"The :tfilter:`intcomma` and :tfilter:`intword` template filters no longer "
"depend on the ``USE_L10N`` setting."
msgstr ""

msgid "Support for ``argon2-cffi`` < 19.1.0 is removed."
msgstr ""

msgid ""
"The cache keys no longer includes the language when internationalization is "
"disabled (``USE_I18N = False``) and localization is enabled (``USE_L10N = "
"True``). After upgrading to Django 3.2 in such configurations, the first "
"request to any previously cached value will be a cache miss."
msgstr ""

msgid ""
"``ForeignKey.validate()`` now uses :attr:`~django.db.models.Model."
"_base_manager` rather than :attr:`~django.db.models.Model._default_manager` "
"to check that related instances exist."
msgstr ""

msgid ""
"When an application defines an :class:`~django.apps.AppConfig` subclass in "
"an ``apps.py`` submodule, Django now uses this configuration automatically, "
"even if it isn't enabled with ``default_app_config``. Set ``default = "
"False`` in the :class:`~django.apps.AppConfig` subclass if you need to "
"prevent this behavior. See :ref:`whats-new-3.2` for more details."
msgstr ""

msgid "Instantiating an abstract model now raises ``TypeError``."
msgstr ""

msgid ""
"Keyword arguments to :func:`~django.test.utils.setup_databases` are now "
"keyword-only."
msgstr ""

msgid ""
"The undocumented ``django.utils.http.limited_parse_qsl()`` function is "
"removed. Please use :func:`urllib.parse.parse_qsl` instead."
msgstr ""

msgid ""
"``django.test.utils.TestContextDecorator`` now uses :py:meth:`~unittest."
"TestCase.addCleanup` so that cleanups registered in the :py:meth:`~unittest."
"TestCase.setUp` method are called before ``TestContextDecorator.disable()``."
msgstr ""

msgid ""
"``SessionMiddleware`` now raises a :exc:`~django.contrib.sessions.exceptions."
"SessionInterrupted` exception instead of :exc:`~django.core.exceptions."
"SuspiciousOperation` when a session is destroyed in a concurrent request."
msgstr ""

msgid ""
"The :class:`django.db.models.Field` equality operator now correctly "
"distinguishes inherited field instances across models. Additionally, the "
"ordering of such fields is now defined."
msgstr ""

msgid ""
"The undocumented ``django.core.files.locks.lock()`` function now returns "
"``False`` if the file cannot be locked, instead of raising :exc:"
"`BlockingIOError`."
msgstr ""

msgid ""
"The password reset mechanism now invalidates tokens when the user email is "
"changed."
msgstr ""

msgid ""
":djadmin:`makemessages` command no longer processes invalid locales "
"specified using :option:`makemessages --locale` option, when they contain "
"hyphens (``'-'``)."
msgstr ""

msgid ""
"The ``django.contrib.auth.forms.ReadOnlyPasswordHashField`` form field is "
"now :attr:`~django.forms.Field.disabled` by default. Therefore "
"``UserChangeForm.clean_password()`` is no longer required to return the "
"initial value."
msgstr ""

msgid ""
"The ``cache.get_many()``, ``get_or_set()``, ``has_key()``, ``incr()``, "
"``decr()``, ``incr_version()``, and ``decr_version()`` cache operations now "
"correctly handle ``None`` stored in the cache, in the same way as any other "
"value, instead of behaving as though the key didn't exist."
msgstr ""

msgid ""
"Due to a ``python-memcached`` limitation, the previous behavior is kept for "
"the deprecated ``MemcachedCache`` backend."
msgstr ""

msgid ""
"The minimum supported version of SQLite is increased from 3.8.3 to 3.9.0."
msgstr ""

msgid ""
":class:`~django.contrib.messages.storage.cookie.CookieStorage` now stores "
"messages in the :rfc:`6265` compliant format. Support for cookies that use "
"the old format remains until Django 4.1."
msgstr ""

msgid ""
"The minimum supported version of ``asgiref`` is increased from 3.2.10 to "
"3.3.2."
msgstr ""

msgid "Features deprecated in 3.2"
msgstr ""

msgid ""
"Assigning objects which don't support creating deep copies with :py:func:"
"`copy.deepcopy` to class attributes in :meth:`.TestCase.setUpTestData` is "
"deprecated."
msgstr ""

msgid ""
"Using a boolean value in :attr:`.BaseCommand.requires_system_checks` is "
"deprecated. Use ``'__all__'`` instead of ``True``, and ``[]`` (an empty "
"list) instead of ``False``."
msgstr ""

msgid ""
"The ``whitelist`` argument and ``domain_whitelist`` attribute of :class:"
"`~django.core.validators.EmailValidator` are deprecated. Use ``allowlist`` "
"instead of ``whitelist``, and ``domain_allowlist`` instead of "
"``domain_whitelist``. You may need to rename ``whitelist`` in existing "
"migrations."
msgstr ""

msgid ""
"The ``default_app_config`` application configuration variable is deprecated, "
"due to the now automatic ``AppConfig`` discovery. See :ref:`whats-new-3.2` "
"for more details."
msgstr ""

msgid ""
"Automatically calling ``repr()`` on a queryset in ``TransactionTestCase."
"assertQuerysetEqual()``, when compared to string values, is deprecated. If "
"you need the previous behavior, explicitly set ``transform`` to ``repr``."
msgstr ""

msgid ""
"The ``django.core.cache.backends.memcached.MemcachedCache`` backend is "
"deprecated as ``python-memcached`` has some problems and seems to be "
"unmaintained. Use ``django.core.cache.backends.memcached.PyMemcacheCache`` "
"or ``django.core.cache.backends.memcached.PyLibMCCache`` instead."
msgstr ""

msgid ""
"The format of messages used by ``django.contrib.messages.storage.cookie."
"CookieStorage`` is different from the format generated by older versions of "
"Django. Support for the old format remains until Django 4.1."
msgstr ""

msgid "Django 3.2.1 release notes"
msgstr ""

msgid "Django 3.2.1 fixes a security issue and several bugs in 3.2."
msgstr ""

msgid "Corrected detection of GDAL 3.2 on Windows (:ticket:`32544`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where subclasses of ``BigAutoField`` and "
"``SmallAutoField`` were not allowed for the :setting:`DEFAULT_AUTO_FIELD` "
"setting (:ticket:`32620`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash of ``QuerySet.values()/"
"values_list()`` after ``QuerySet.union()``, ``intersection()``, and "
"``difference()`` when it was ordered by an unannotated field (:ticket:"
"`32627`)."
msgstr ""

msgid ""
"Restored, following a regression in Django 3.2, displaying an exception "
"message on the technical 404 debug page (:ticket:`32637`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where a system check would crash on a reverse one-"
"to-one relationships in ``CheckConstraint.check`` or ``UniqueConstraint."
"condition`` (:ticket:`32635`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash of :attr:`.ModelAdmin."
"search_fields` when searching against phrases with unbalanced quotes (:"
"ticket:`32649`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where variable lookup errors were logged rendering "
"the sitemap template if alternates were not defined (:ticket:`32648`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash when combining ``Q()`` "
"objects which contains boolean expressions (:ticket:`32548`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash of ``QuerySet."
"update()`` on a queryset ordered by inherited or joined fields on MySQL and "
"MariaDB (:ticket:`32645`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash when decoding a cookie "
"value, used by ``django.contrib.messages.storage.cookie.CookieStorage``, in "
"the pre-Django 3.2 format (:ticket:`32643`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that stopped the shift-key modifier "
"selecting multiple rows in the admin changelist (:ticket:`32647`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where a system check would crash on the :setting:"
"`STATICFILES_DIRS` setting with a list of 2-tuples of ``(prefix, path)`` (:"
"ticket:`32665`)."
msgstr ""

msgid ""
"Fixed a long standing bug involving queryset bitwise combination when used "
"with subqueries that began manifesting in Django 3.2, due to a separate fix "
"using ``Exists`` to ``exclude()`` multi-valued relationships (:ticket:"
"`32650`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where variable lookup errors were logged when "
"rendering some admin templates (:ticket:`32681`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where an admin changelist would crash when "
"deleting objects filtered against multi-valued relationships (:ticket:"
"`32682`). The admin changelist now uses ``Exists()`` instead of ``QuerySet."
"distinct()`` because calling ``delete()`` after ``distinct()`` is not "
"allowed in Django 3.2 to address a data loss possibility."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 where the calling process environment would "
"not be passed to the ``dbshell`` command on PostgreSQL (:ticket:`32687`)."
msgstr ""

msgid ""
"Fixed a performance regression in Django 3.2 when building complex filters "
"with subqueries (:ticket:`32632`). As a side-effect the private API to check "
"``django.db.sql.query.Query`` equality is removed."
msgstr ""

msgid "Django 3.2.10 release notes"
msgstr ""

msgid ""
"Django 3.2.10 fixes a security issue with severity \"low\" and a bug in "
"3.2.9."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash of ``setUpTestData()`` "
"with ``BinaryField`` on PostgreSQL, which is ``memoryview``-backed (:ticket:"
"`33333`)."
msgstr ""

msgid "Django 3.2.11 release notes"
msgstr ""

msgid ""
"Django 3.2.11 fixes one security issue with severity \"medium\" and two "
"security issues with severity \"low\" in 3.2.10."
msgstr ""

msgid "Django 3.2.12 release notes"
msgstr ""

msgid ""
"Django 3.2.12 fixes two security issues with severity \"medium\" in 3.2.11."
msgstr ""

msgid "Django 3.2.13 release notes"
msgstr ""

msgid ""
"Django 3.2.13 fixes two security issues with severity \"high\" in 3.2.12 and "
"a regression in 3.2.4."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2.4 that caused the auto-reloader to no "
"longer detect changes when the ``DIRS`` option of the ``TEMPLATES`` setting "
"contained an empty string (:ticket:`33628`)."
msgstr ""

msgid "Django 3.2.14 release notes"
msgstr ""

msgid "*July 4, 2022*"
msgstr ""

msgid "Django 3.2.14 fixes a security issue with severity \"high\" in 3.2.13."
msgstr ""

msgid ""
"CVE-2022-34265: Potential SQL injection via ``Trunc(kind)`` and "
"``Extract(lookup_name)`` arguments"
msgstr ""

msgid ""
":class:`Trunc() <django.db.models.functions.Trunc>` and :class:`Extract() "
"<django.db.models.functions.Extract>` database functions were subject to SQL "
"injection if untrusted data was used as a ``kind``/``lookup_name`` value."
msgstr ""

msgid ""
"Applications that constrain the lookup name and kind choice to a known safe "
"list are unaffected."
msgstr ""

msgid "Django 3.2.15 release notes"
msgstr ""

msgid "*August 3, 2022*"
msgstr ""

msgid "Django 3.2.15 fixes a security issue with severity \"high\" in 3.2.14."
msgstr ""

msgid ""
"CVE-2022-36359: Potential reflected file download vulnerability in "
"``FileResponse``"
msgstr ""

msgid ""
"An application may have been vulnerable to a reflected file download (RFD) "
"attack that sets the Content-Disposition header of a :class:`~django.http."
"FileResponse` when the ``filename`` was derived from user-supplied input. "
"The ``filename`` is now escaped to avoid this possibility."
msgstr ""

msgid "Django 3.2.16 release notes"
msgstr ""

msgid "*October 4, 2022*"
msgstr ""

msgid ""
"Django 3.2.16 fixes a security issue with severity \"medium\" in 3.2.15."
msgstr ""

msgid ""
"CVE-2022-41323: Potential denial-of-service vulnerability in "
"internationalized URLs"
msgstr ""

msgid ""
"Internationalized URLs were subject to potential denial of service attack "
"via the locale parameter."
msgstr ""

msgid "Django 3.2.17 release notes"
msgstr ""

msgid "*February 1, 2023*"
msgstr ""

msgid ""
"Django 3.2.17 fixes a security issue with severity \"moderate\" in 3.2.16."
msgstr ""

msgid ""
"CVE-2023-23969: Potential denial-of-service via ``Accept-Language`` headers"
msgstr ""

msgid ""
"The parsed values of ``Accept-Language`` headers are cached in order to "
"avoid repetitive parsing. This leads to a potential denial-of-service vector "
"via excessive memory usage if large header values are sent."
msgstr ""

msgid ""
"In order to avoid this vulnerability, the ``Accept-Language`` header is now "
"parsed up to a maximum length."
msgstr ""

msgid "Django 3.2.18 release notes"
msgstr ""

msgid "*February 14, 2023*"
msgstr ""

msgid ""
"Django 3.2.18 fixes a security issue with severity \"moderate\" in 3.2.17."
msgstr ""

msgid ""
"CVE-2023-24580: Potential denial-of-service vulnerability in file uploads"
msgstr ""

msgid ""
"Passing certain inputs to multipart forms could result in too many open "
"files or memory exhaustion, and provided a potential vector for a denial-of-"
"service attack."
msgstr ""

msgid ""
"The number of files parts parsed is now limited via the new :setting:"
"`DATA_UPLOAD_MAX_NUMBER_FILES` setting."
msgstr ""

msgid "Django 3.2.19 release notes"
msgstr ""

msgid "*May 3, 2023*"
msgstr ""

msgid "Django 3.2.19 fixes a security issue with severity \"low\" in 3.2.18."
msgstr ""

msgid ""
"CVE-2023-31047: Potential bypass of validation when uploading multiple files "
"using one form field"
msgstr ""

msgid ""
"Uploading multiple files using one form field has never been supported by :"
"class:`.forms.FileField` or :class:`.forms.ImageField` as only the last "
"uploaded file was validated. Unfortunately, :ref:`uploading_multiple_files` "
"topic suggested otherwise."
msgstr ""

msgid ""
"In order to avoid the vulnerability, :class:`~django.forms."
"ClearableFileInput` and :class:`~django.forms.FileInput` form widgets now "
"raise ``ValueError`` when the ``multiple`` HTML attribute is set on them. To "
"prevent the exception and keep the old behavior, set "
"``allow_multiple_selected`` to ``True``."
msgstr ""

msgid ""
"For more details on using the new attribute and handling of multiple files "
"through a single field, see :ref:`uploading_multiple_files`."
msgstr ""

msgid "Django 3.2.2 release notes"
msgstr ""

msgid "Django 3.2.2 fixes a security issue and a bug in 3.2.1."
msgstr ""

msgid ""
"Prevented, following a regression in Django 3.2.1, :djadmin:`makemigrations` "
"from generating infinite migrations for a model with ``Meta.ordering`` "
"contained ``OrderBy`` expressions (:ticket:`32714`)."
msgstr ""

msgid "Django 3.2.20 release notes"
msgstr ""

msgid "*July 3, 2023*"
msgstr ""

msgid ""
"Django 3.2.20 fixes a security issue with severity \"moderate\" in 3.2.19."
msgstr ""

msgid ""
"CVE-2023-36053: Potential regular expression denial of service vulnerability "
"in ``EmailValidator``/``URLValidator``"
msgstr ""

msgid ""
"``EmailValidator`` and ``URLValidator`` were subject to potential regular "
"expression denial of service attack via a very large number of domain name "
"labels of emails and URLs."
msgstr ""

msgid "Django 3.2.3 release notes"
msgstr ""

msgid "Django 3.2.3 fixes several bugs in 3.2.2."
msgstr ""

msgid "Prepared for ``mysqlclient`` > 2.0.3 support (:ticket:`32732`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused the incorrect filtering of "
"querysets combined with the ``|`` operator (:ticket:`32717`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2.1 where saving ``FileField`` would raise a "
"``SuspiciousFileOperation`` even when a custom :attr:`~django.db.models."
"FileField.upload_to` returns a valid file path (:ticket:`32718`)."
msgstr ""

msgid "Django 3.2.4 release notes"
msgstr ""

msgid "Django 3.2.4 fixes two security issues and several bugs in 3.2.3."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where a final catch-all view in the admin didn't "
"respect the server-provided value of ``SCRIPT_NAME`` when redirecting "
"unauthenticated users to the login page (:ticket:`32754`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where a system check would crash on an abstract "
"model (:ticket:`32733`)."
msgstr ""

msgid ""
"Prevented unnecessary initialization of unused caches following a regression "
"in Django 3.2 (:ticket:`32747`)."
msgstr ""

msgid ""
"Fixed a crash in Django 3.2 that could occur when running ``mod_wsgi`` with "
"the recommended settings while the Windows ``colorama`` library was "
"installed (:ticket:`32740`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 that would trigger the auto-reloader for template "
"changes when directory paths were specified with strings (:ticket:`32744`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash of auto-reloader with "
"``AttributeError``, e.g. inside a ``Conda`` environment (:ticket:`32783`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a loss of precision for "
"operations with ``DecimalField`` on MySQL (:ticket:`32793`)."
msgstr ""

msgid "Django 3.2.5 release notes"
msgstr ""

msgid ""
"Django 3.2.5 fixes a security issue with severity \"high\" and several bugs "
"in 3.2.4. Also, the latest string translations from Transifex are "
"incorporated."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash of ``QuerySet."
"values_list(…, named=True)`` after ``prefetch_related()`` (:ticket:`32812`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 that caused a migration crash on MySQL 8.0.13+ "
"when altering ``BinaryField``, ``JSONField``, or ``TextField`` to non-"
"nullable (:ticket:`32503`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a migration crash on MySQL "
"8.0.13+ when adding nullable ``BinaryField``, ``JSONField``, or "
"``TextField`` with a default value (:ticket:`32832`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where a system check would crash on a model with "
"an invalid ``app_label`` (:ticket:`32863`)."
msgstr ""

msgid "Django 3.2.6 release notes"
msgstr ""

msgid "*August 2, 2021*"
msgstr ""

msgid "Django 3.2.6 fixes several bugs in 3.2.5."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused a crash validating ``\"NaN\"`` "
"input with a ``forms.DecimalField`` when additional constraints, e.g. "
"``max_value``, were specified (:ticket:`32949`)."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 where a system check would crash on a model with a "
"reverse many-to-many relation inherited from a parent class (:ticket:"
"`32947`)."
msgstr ""

msgid "Django 3.2.7 release notes"
msgstr ""

msgid "*September 1, 2021*"
msgstr ""

msgid "Django 3.2.7 fixes a bug in 3.2.6."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused the incorrect offset extraction "
"from fixed offset timezones (:ticket:`32992`)."
msgstr ""

msgid "Django 3.2.8 release notes"
msgstr ""

msgid "*October 5, 2021*"
msgstr ""

msgid "Django 3.2.8 fixes two bugs in 3.2.7."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 that caused incorrect links on read-only fields in "
"the admin (:ticket:`33077`)."
msgstr ""

msgid ""
"Fixed a regression in Django 3.2 that caused incorrect selection of items "
"across all pages when actions were placed both on the top and bottom of the "
"admin change-list view (:ticket:`33083`)."
msgstr ""

msgid "Django 3.2.9 release notes"
msgstr ""

msgid "*November 1, 2021*"
msgstr ""

msgid ""
"Django 3.2.9 fixes a bug in 3.2.8 and adds compatibility with Python 3.10."
msgstr ""

msgid ""
"Fixed a bug in Django 3.2 that caused a migration crash on SQLite when "
"altering a field with a functional index (:ticket:`33194`)."
msgstr ""

msgid "Django 4.0 release notes"
msgstr ""

msgid "Welcome to Django 4.0!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-4.0>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-4.0>` "
"you'll want to be aware of when upgrading from Django 3.2 or earlier. We've :"
"ref:`begun the deprecation process for some features <deprecated-"
"features-4.0>`."
msgstr ""

msgid ""
"Django 4.0 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and "
"only officially support the latest release of each series."
msgstr ""

msgid "The Django 3.2.x series is the last to support Python 3.6 and 3.7."
msgstr ""

msgid "What's new in Django 4.0"
msgstr ""

msgid "``zoneinfo`` default timezone implementation"
msgstr ""

msgid ""
"The Python standard library's :mod:`zoneinfo` is now the default timezone "
"implementation in Django."
msgstr ""

msgid ""
"This is the next step in the migration from using ``pytz`` to using :mod:"
"`zoneinfo`. Django 3.2 allowed the use of non-``pytz`` time zones. Django "
"4.0 makes ``zoneinfo`` the default implementation. Support for ``pytz`` is "
"now deprecated and will be removed in Django 5.0."
msgstr ""

msgid ""
":mod:`zoneinfo` is part of the Python standard library from Python 3.9. The "
"``backports.zoneinfo`` package is automatically installed alongside Django "
"if you are using Python 3.8."
msgstr ""

msgid ""
"The move to ``zoneinfo`` should be largely transparent. Selection of the "
"current timezone, conversion of datetime instances to the current timezone "
"in forms and templates, as well as operations on aware datetimes in UTC are "
"unaffected."
msgstr ""

msgid ""
"However, if you are working with non-UTC time zones, and using the ``pytz`` "
"``normalize()`` and ``localize()`` APIs, possibly with the :setting:"
"`TIME_ZONE <DATABASE-TIME_ZONE>` setting, you will need to audit your code, "
"since ``pytz`` and ``zoneinfo`` are not entirely equivalent."
msgstr ""

msgid ""
"To give time for such an audit, the transitional :setting:"
"`USE_DEPRECATED_PYTZ` setting allows continued use of ``pytz`` during the 4."
"x release cycle. This setting will be removed in Django 5.0."
msgstr ""

msgid ""
"In addition, a `pytz_deprecation_shim`_ package, created by the ``zoneinfo`` "
"author, can be used to assist with the migration from ``pytz``. This package "
"provides shims to help you safely remove ``pytz``, and has a detailed "
"`migration guide`_ showing how to move to the new ``zoneinfo`` APIs."
msgstr ""

msgid ""
"Using `pytz_deprecation_shim`_ and the :setting:`USE_DEPRECATED_PYTZ` "
"transitional setting is recommended if you need a gradual update path."
msgstr ""

msgid "Functional unique constraints"
msgstr ""

msgid ""
"The new :attr:`*expressions <django.db.models.UniqueConstraint.expressions>` "
"positional argument of :class:`UniqueConstraint() <django.db.models."
"UniqueConstraint>` enables creating functional unique constraints on "
"expressions and database functions. For example::"
msgstr ""

msgid ""
"Functional unique constraints are added to models using the :attr:`Meta."
"constraints <django.db.models.Options.constraints>` option."
msgstr ""

msgid "``scrypt`` password hasher"
msgstr ""

msgid ""
"The new :ref:`scrypt password hasher <scrypt-usage>` is more secure and "
"recommended over PBKDF2. However, it's not the default as it requires "
"OpenSSL 1.1+ and more memory."
msgstr ""

msgid "Redis cache backend"
msgstr ""

msgid ""
"The new ``django.core.cache.backends.redis.RedisCache`` cache backend "
"provides built-in support for caching with Redis. :pypi:`redis-py <redis>` "
"3.0.0 or higher is required. For more details, see the :ref:`documentation "
"on caching with Redis in Django <redis>`."
msgstr ""

msgid "Template based form rendering"
msgstr ""

msgid ""
":class:`Forms <django.forms.Form>`, :doc:`Formsets </topics/forms/"
"formsets>`, and :class:`~django.forms.ErrorList` are now rendered using the "
"template engine to enhance customization. See the new :meth:`~django.forms."
"Form.render`, :meth:`~django.forms.Form.get_context`, and :attr:`~django."
"forms.Form.template_name` for ``Form`` and :ref:`formset rendering <formset-"
"rendering>` for ``Formset``."
msgstr ""

msgid ""
"The ``admin/base.html`` template now has a new block ``header`` which "
"contains the admin site header."
msgstr ""

msgid ""
"The new :meth:`.ModelAdmin.get_formset_kwargs` method allows customizing the "
"keyword arguments passed to the constructor of a formset."
msgstr ""

msgid "The navigation sidebar now has a quick filter toolbar."
msgstr ""

msgid ""
"The new context variable ``model`` which contains the model class for each "
"model is added to the :meth:`.AdminSite.each_context` method."
msgstr ""

msgid ""
"The new :attr:`.ModelAdmin.search_help_text` attribute allows specifying a "
"descriptive text for the search box."
msgstr ""

msgid ""
"The :attr:`.InlineModelAdmin.verbose_name_plural` attribute now fallbacks to "
"the :attr:`.InlineModelAdmin.verbose_name` + ``'s'``."
msgstr ""

msgid "jQuery is upgraded from version 3.5.1 to 3.6.0."
msgstr ""

msgid ""
"The admindocs now allows esoteric setups where :setting:`ROOT_URLCONF` is "
"not a string."
msgstr ""

msgid "The model section of the ``admindocs`` now shows cached properties."
msgstr ""

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased from "
"260,000 to 320,000."
msgstr ""

msgid ""
"The new :attr:`LoginView.next_page <django.contrib.auth.views.LoginView."
"next_page>` attribute and :meth:`~django.contrib.auth.views.LoginView."
"get_default_redirect_url` method allow customizing the redirect after login."
msgstr ""

msgid "Added support for SpatiaLite 5."
msgstr ""

msgid ""
":class:`~django.contrib.gis.gdal.GDALRaster` now allows creating rasters in "
"any GDAL virtual filesystem."
msgstr ""

msgid ""
"The new :class:`~django.contrib.gis.admin.GISModelAdmin` class allows "
"customizing the widget used for ``GeometryField``. This is encouraged "
"instead of deprecated ``GeoModelAdmin`` and ``OSMGeoAdmin``."
msgstr ""

msgid ""
"The PostgreSQL backend now supports connecting by a service name. See :ref:"
"`postgresql-connection-settings` for more details."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.operations.AddConstraintNotValid` "
"operation allows creating check constraints on PostgreSQL without verifying "
"that all existing rows satisfy the new constraint."
msgstr ""

msgid ""
"The new :class:`~django.contrib.postgres.operations.ValidateConstraint` "
"operation allows validating check constraints which were created using :"
"class:`~django.contrib.postgres.operations.AddConstraintNotValid` on "
"PostgreSQL."
msgstr ""

msgid ""
"The new :class:`ArraySubquery() <django.contrib.postgres.expressions."
"ArraySubquery>` expression allows using subqueries to construct lists of "
"values on PostgreSQL."
msgstr ""

msgid ""
"The new :lookup:`trigram_word_similar` lookup, and the :class:"
"`TrigramWordDistance() <django.contrib.postgres.search.TrigramWordDistance>` "
"and :class:`TrigramWordSimilarity() <django.contrib.postgres.search."
"TrigramWordSimilarity>` expressions allow using trigram word similarity."
msgstr ""

msgid ""
":class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage` now "
"replaces paths to JavaScript source map references with their hashed "
"counterparts."
msgstr ""

msgid ""
"The new ``manifest_storage`` argument of :class:`~django.contrib.staticfiles."
"storage.ManifestFilesMixin` and :class:`~django.contrib.staticfiles.storage."
"ManifestStaticFilesStorage` allows customizing the manifest file storage."
msgstr ""

msgid ""
"The new async API for ``django.core.cache.backends.base.BaseCache`` begins "
"the process of making cache backends async-compatible. The new async methods "
"all have ``a`` prefixed names, e.g. ``aadd()``, ``aget()``, ``aset()``, "
"``aget_or_set()``, or ``adelete_many()``."
msgstr ""

msgid ""
"Going forward, the ``a`` prefix will be used for async variants of methods "
"generally."
msgstr ""

msgid ""
"CSRF protection now consults the ``Origin`` header, if present. To "
"facilitate this, :ref:`some changes <csrf-trusted-origins-changes-4.0>` to "
"the :setting:`CSRF_TRUSTED_ORIGINS` setting are required."
msgstr ""

msgid ""
":class:`~django.forms.ModelChoiceField` now includes the provided value in "
"the ``params`` argument of a raised :exc:`~django.core.exceptions."
"ValidationError` for the ``invalid_choice`` error message. This allows "
"custom error messages to use the ``%(value)s`` placeholder."
msgstr ""

msgid ""
":class:`~django.forms.formsets.BaseFormSet` now renders non-form errors with "
"an additional class of ``nonform`` to help distinguish them from form-"
"specific errors."
msgstr ""

msgid ""
":class:`~django.forms.formsets.BaseFormSet` now allows customizing the "
"widget used when deleting forms via :attr:`~django.forms.formsets."
"BaseFormSet.can_delete` by setting the :attr:`~django.forms.formsets."
"BaseFormSet.deletion_widget` attribute or overriding :meth:`~django.forms."
"formsets.BaseFormSet.get_deletion_widget` method."
msgstr ""

msgid "Added support and translations for the Malay language."
msgstr ""

msgid ""
":class:`~django.views.generic.edit.DeleteView` now uses :class:`~django."
"views.generic.edit.FormMixin`, allowing you to provide a :class:`~django."
"forms.Form` subclass, with a checkbox for example, to confirm deletion. In "
"addition, this allows ``DeleteView`` to function with :class:`django.contrib."
"messages.views.SuccessMessageMixin`."
msgstr ""

msgid ""
"In accordance with ``FormMixin``, object deletion for POST requests is "
"handled in ``form_valid()``. Custom delete logic in ``delete()`` handlers "
"should be moved to ``form_valid()``, or a shared helper method, as needed."
msgstr ""

msgid ""
"The alias of the database used in an SQL call is now passed as extra context "
"along with each message to the :ref:`django-db-logger` logger."
msgstr ""

msgid ""
"The :djadmin:`runserver` management command now supports the :option:`--skip-"
"checks` option."
msgstr ""

msgid ""
"On PostgreSQL, :djadmin:`dbshell` now supports specifying a password file."
msgstr ""

msgid ""
"The :djadmin:`shell` command now respects :py:data:`sys.__interactivehook__` "
"at startup. This allows loading shell history between interactive sessions. "
"As a consequence, ``readline`` is no longer loaded if running in *isolated* "
"mode."
msgstr ""

msgid ""
"The new :attr:`BaseCommand.suppressed_base_arguments <django.core.management."
"BaseCommand.suppressed_base_arguments>` attribute allows suppressing "
"unsupported default command options in the help output."
msgstr ""

msgid ""
"The new :option:`startapp --exclude` and :option:`startproject --exclude` "
"options allow excluding directories from the template."
msgstr ""

msgid ""
"New :meth:`QuerySet.contains(obj) <.QuerySet.contains>` method returns "
"whether the queryset contains the given object. This tries to perform the "
"query in the simplest and fastest way possible."
msgstr ""

msgid ""
"The new ``precision`` argument of the :class:`Round() <django.db.models."
"functions.Round>` database function allows specifying the number of decimal "
"places after rounding."
msgstr ""

msgid ""
":meth:`.QuerySet.bulk_create` now sets the primary key on objects when using "
"SQLite 3.35+."
msgstr ""

msgid ""
":class:`~django.db.models.DurationField` now supports multiplying and "
"dividing by scalar values on SQLite."
msgstr ""

msgid ""
":meth:`.QuerySet.bulk_update` now returns the number of objects updated."
msgstr ""

msgid ""
"The new :attr:`.Expression.empty_result_set_value` attribute allows "
"specifying a value to return when the function is used over an empty result "
"set."
msgstr ""

msgid ""
"The ``skip_locked`` argument of :meth:`.QuerySet.select_for_update()` is now "
"allowed on MariaDB 10.6+."
msgstr ""

msgid ""
":class:`~django.db.models.Lookup` expressions may now be used in "
"``QuerySet`` annotations, aggregations, and directly in filters."
msgstr ""

msgid ""
"The new :ref:`default <aggregate-default>` argument for built-in aggregates "
"allows specifying a value to be returned when the queryset (or grouping) "
"contains no entries, rather than ``None``."
msgstr ""

msgid ""
"The :class:`~django.middleware.security.SecurityMiddleware` now adds the :"
"ref:`Cross-Origin Opener Policy <cross-origin-opener-policy>` header with a "
"value of ``'same-origin'`` to prevent cross-origin popups from sharing the "
"same browsing context. You can prevent this header from being added by "
"setting the :setting:`SECURE_CROSS_ORIGIN_OPENER_POLICY` setting to ``None``."
msgstr ""

msgid ""
"The new ``stdout`` argument for :func:`~django.db.models.signals."
"pre_migrate` and :func:`~django.db.models.signals.post_migrate` signals "
"allows redirecting output to a stream-like object. It should be preferred "
"over :py:data:`sys.stdout` and :py:func:`print` when emitting verbose output "
"in order to allow proper capture when testing."
msgstr ""

msgid ""
":tfilter:`floatformat` template filter now allows using the ``u`` suffix to "
"force disabling localization."
msgstr ""

msgid ""
"The new ``serialized_aliases`` argument of :func:`django.test.utils."
"setup_databases` determines which :setting:`DATABASES` aliases test "
"databases should have their state serialized to allow usage of the :ref:"
"`serialized_rollback <test-case-serialized-rollback>` feature."
msgstr ""

msgid ""
"Django test runner now supports a :option:`--buffer <test --buffer>` option "
"with parallel tests."
msgstr ""

msgid ""
"The new ``logger`` argument to :class:`~django.test.runner.DiscoverRunner` "
"allows a Python :py:ref:`logger <logger>` to be used for logging."
msgstr ""

msgid ""
"The new :meth:`.DiscoverRunner.log` method provides a way to log messages "
"that uses the ``DiscoverRunner.logger``, or prints to the console if not set."
msgstr ""

msgid ""
"Django test runner now supports a :option:`--shuffle <test --shuffle>` "
"option to execute tests in a random order."
msgstr ""

msgid ""
"The :option:`test --parallel` option now supports the value ``auto`` to run "
"one test process for each processor core."
msgstr ""

msgid ""
":meth:`.TestCase.captureOnCommitCallbacks` now captures new callbacks added "
"while executing :func:`.transaction.on_commit` callbacks."
msgstr ""

msgid "Backwards incompatible changes in 4.0"
msgstr ""

msgid ""
"``DatabaseOperations.year_lookup_bounds_for_date_field()`` and "
"``year_lookup_bounds_for_datetime_field()`` methods now take the optional "
"``iso_year`` argument in order to support bounds for ISO-8601 week-numbering "
"years."
msgstr ""

msgid ""
"The second argument of ``DatabaseSchemaEditor._unique_sql()`` and "
"``_create_unique_sql()`` methods is now ``fields`` instead of ``columns``."
msgstr ""

msgid "Support for PostGIS 2.3 is removed."
msgstr ""

msgid "Support for GDAL 2.0 and GEOS 3.5 is removed."
msgstr ""

msgid "Dropped support for PostgreSQL 9.6"
msgstr ""

msgid ""
"Upstream support for PostgreSQL 9.6 ends in November 2021. Django 4.0 "
"supports PostgreSQL 10 and higher."
msgstr ""

msgid ""
"Also, the minimum supported version of ``psycopg2`` is increased from 2.5.4 "
"to 2.8.4, as ``psycopg2`` 2.8.4 is the first release to support Python 3.8."
msgstr ""

msgid "Dropped support for Oracle 12.2 and 18c"
msgstr ""

msgid ""
"Upstream support for Oracle 12.2 ends in March 2022 and for Oracle 18c it "
"ends in June 2021. Django 3.2 will be supported until April 2024. Django 4.0 "
"officially supports Oracle 19c."
msgstr ""

msgid "``CSRF_TRUSTED_ORIGINS`` changes"
msgstr ""

msgid "Format change"
msgstr ""

msgid ""
"Values in the :setting:`CSRF_TRUSTED_ORIGINS` setting must include the "
"scheme (e.g. ``'http://'`` or ``'https://'``) instead of only the hostname."
msgstr ""

msgid ""
"Also, values that started with a dot, must now also include an asterisk "
"before the dot. For example, change ``'.example.com'`` to ``'https://*."
"example.com'``."
msgstr ""

msgid "A system check detects any required changes."
msgstr ""

msgid "Configuring it may now be required"
msgstr ""

msgid ""
"As CSRF protection now consults the ``Origin`` header, you may need to set :"
"setting:`CSRF_TRUSTED_ORIGINS`, particularly if you allow requests from "
"subdomains by setting :setting:`CSRF_COOKIE_DOMAIN` (or :setting:"
"`SESSION_COOKIE_DOMAIN` if :setting:`CSRF_USE_SESSIONS` is enabled) to a "
"value starting with a dot."
msgstr ""

msgid "``SecurityMiddleware`` no longer sets the ``X-XSS-Protection`` header"
msgstr ""

msgid ""
"The :class:`~django.middleware.security.SecurityMiddleware` no longer sets "
"the ``X-XSS-Protection`` header if the ``SECURE_BROWSER_XSS_FILTER`` setting "
"is ``True``. The setting is removed."
msgstr ""

msgid ""
"Most modern browsers don't honor the ``X-XSS-Protection`` HTTP header. You "
"can use Content-Security-Policy_ without allowing ``'unsafe-inline'`` "
"scripts instead."
msgstr ""

msgid ""
"If you want to support legacy browsers and set the header, use this line in "
"a custom middleware::"
msgstr ""

msgid "Migrations autodetector changes"
msgstr ""

msgid ""
"The migrations autodetector now uses model states instead of model classes. "
"Also, migration operations for ``ForeignKey`` and ``ManyToManyField`` fields "
"no longer specify attributes which were not passed to the fields during "
"initialization."
msgstr ""

msgid ""
"As a side-effect, running ``makemigrations`` might generate no-op "
"``AlterField`` operations for ``ManyToManyField`` and ``ForeignKey`` fields "
"in some cases."
msgstr ""

msgid "``DeleteView`` changes"
msgstr ""

msgid ""
":class:`~django.views.generic.edit.DeleteView` now uses :class:`~django."
"views.generic.edit.FormMixin` to handle POST requests. As a consequence, any "
"custom deletion logic in ``delete()`` handlers should be moved to "
"``form_valid()``, or a shared helper method, if required."
msgstr ""

msgid "Table and column naming scheme changes on Oracle"
msgstr ""

msgid ""
"Django 4.0 inadvertently changed the table and column naming scheme on "
"Oracle. This causes errors for models and fields with names longer than 30 "
"characters. Unfortunately, renaming some Oracle tables and columns is "
"required. Use the upgrade script in :ticket:`33789 <33789#comment:15>` to "
"generate ``RENAME`` statements to change naming scheme."
msgstr ""

msgid "Support for ``cx_Oracle`` < 7.0 is removed."
msgstr ""

msgid ""
"To allow serving a Django site on a subpath without changing the value of :"
"setting:`STATIC_URL`, the leading slash is removed from that setting (now "
"``'static/'``) in the default :djadmin:`startproject` template."
msgstr ""

msgid ""
"The :class:`~django.contrib.admin.AdminSite` method for the admin ``index`` "
"view is no longer decorated with ``never_cache`` when accessed directly, "
"rather than via the recommended ``AdminSite.urls`` property, or ``AdminSite."
"get_urls()`` method."
msgstr ""

msgid ""
"Unsupported operations on a sliced queryset now raise ``TypeError`` instead "
"of ``AssertionError``."
msgstr ""

msgid ""
"The undocumented ``django.test.runner.reorder_suite()`` function is renamed "
"to ``reorder_tests()``. It now accepts an iterable of tests rather than a "
"test suite, and returns an iterator of tests."
msgstr ""

msgid ""
"Calling ``FileSystemStorage.delete()`` with an empty ``name`` now raises "
"``ValueError`` instead of ``AssertionError``."
msgstr ""

msgid ""
"Calling ``EmailMultiAlternatives.attach_alternative()`` or ``EmailMessage."
"attach()`` with an invalid ``content`` or ``mimetype`` arguments now raise "
"``ValueError`` instead of ``AssertionError``."
msgstr ""

msgid ""
":meth:`~django.test.SimpleTestCase.assertHTMLEqual` no longer considers a "
"non-boolean attribute without a value equal to an attribute with the same "
"name and value."
msgstr ""

msgid ""
"Tests that fail to load, for example due to syntax errors, now always match "
"when using :option:`test --tag`."
msgstr ""

msgid ""
"The undocumented ``django.contrib.admin.utils.lookup_needs_distinct()`` "
"function is renamed to ``lookup_spawns_duplicates()``."
msgstr ""

msgid ""
"The undocumented ``HttpRequest.get_raw_uri()`` method is removed. The :meth:"
"`.HttpRequest.build_absolute_uri` method may be a suitable alternative."
msgstr ""

msgid ""
"The ``object`` argument of undocumented ``ModelAdmin.log_addition()``, "
"``log_change()``, and ``log_deletion()`` methods is renamed to ``obj``."
msgstr ""

msgid ""
":class:`~django.utils.feedgenerator.RssFeed`, :class:`~django.utils."
"feedgenerator.Atom1Feed`, and their subclasses now emit elements with no "
"content as self-closing tags."
msgstr ""

msgid ""
"``NodeList.render()`` no longer casts the output of ``render()`` method for "
"individual nodes to a string. ``Node.render()`` should always return a "
"string as documented."
msgstr ""

msgid ""
"The ``where_class`` property of ``django.db.models.sql.query.Query`` and the "
"``where_class`` argument to the private ``get_extra_restriction()`` method "
"of ``ForeignObject`` and ``ForeignObjectRel`` are removed. If needed, "
"initialize ``django.db.models.sql.where.WhereNode`` instead."
msgstr ""

msgid ""
"The ``filter_clause`` argument of the undocumented ``Query.add_filter()`` "
"method is replaced by two positional arguments ``filter_lhs`` and "
"``filter_rhs``."
msgstr ""

msgid ""
":class:`~django.middleware.csrf.CsrfViewMiddleware` now uses ``request."
"META['CSRF_COOKIE_NEEDS_UPDATE']`` in place of ``request."
"META['CSRF_COOKIE_USED']``, ``request.csrf_cookie_needs_reset``, and "
"``response.csrf_cookie_set`` to track whether the CSRF cookie should be "
"sent. This is an undocumented, private API."
msgstr ""

msgid ""
"The undocumented ``TRANSLATOR_COMMENT_MARK`` constant is moved from ``django."
"template.base`` to ``django.utils.translation.template``."
msgstr ""

msgid ""
"The ``real_apps`` argument of the undocumented ``django.db.migrations.state."
"ProjectState.__init__()`` method must now be a set if provided."
msgstr ""

msgid ""
":class:`~django.forms.RadioSelect` and :class:`~django.forms."
"CheckboxSelectMultiple` widgets are now rendered in ``<div>`` tags so they "
"are announced more concisely by screen readers. If you need the previous "
"behavior, :ref:`override the widget template <overriding-built-in-widget-"
"templates>` with the appropriate template from Django 3.2."
msgstr ""

msgid ""
"The :tfilter:`floatformat` template filter no longer depends on the "
"``USE_L10N`` setting and always returns localized output. Use the ``u`` "
"suffix to disable localization."
msgstr ""

msgid ""
"The default value of the ``USE_L10N`` setting is changed to ``True``. See "
"the :ref:`Localization section <use_l10n_deprecation>` above for more "
"details."
msgstr ""

msgid ""
"As part of the :ref:`move to zoneinfo <whats-new-4.0>`, :attr:`django.utils."
"timezone.utc` is changed to alias :attr:`datetime.timezone.utc`."
msgstr ""

msgid ""
"The minimum supported version of ``asgiref`` is increased from 3.3.2 to "
"3.4.1."
msgstr ""

msgid "Features deprecated in 4.0"
msgstr ""

msgid "Use of ``pytz`` time zones"
msgstr ""

msgid ""
"As part of the :ref:`move to zoneinfo <whats-new-4.0>`, use of ``pytz`` time "
"zones is deprecated."
msgstr ""

msgid ""
"Accordingly, the ``is_dst`` arguments to the following are also deprecated:"
msgstr ""

msgid ":meth:`django.db.models.query.QuerySet.datetimes`"
msgstr ""

msgid ":func:`django.db.models.functions.Trunc`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncSecond`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncMinute`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncHour`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncDay`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncWeek`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncMonth`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncQuarter`"
msgstr ""

msgid ":func:`django.db.models.functions.TruncYear`"
msgstr ""

msgid ":func:`django.utils.timezone.make_aware`"
msgstr ""

msgid "Support for use of ``pytz`` will be removed in Django 5.0."
msgstr ""

msgid "Time zone support"
msgstr ""

msgid ""
"In order to follow good practice, the default value of the :setting:`USE_TZ` "
"setting will change from ``False`` to ``True``, and time zone support will "
"be enabled by default, in Django 5.0."
msgstr ""

msgid ""
"Note that the default :file:`settings.py` file created by :djadmin:`django-"
"admin startproject <startproject>` includes :setting:`USE_TZ = True "
"<USE_TZ>` since Django 1.4."
msgstr ""

msgid ""
"You can set ``USE_TZ`` to ``False`` in your project settings before then to "
"opt-out."
msgstr ""

msgid "Localization"
msgstr ""

msgid ""
"In order to follow good practice, the default value of the ``USE_L10N`` "
"setting is changed from ``False`` to ``True``."
msgstr ""

msgid ""
"Moreover ``USE_L10N`` is deprecated as of this release. Starting with Django "
"5.0, by default, any date or number displayed by Django will be localized."
msgstr ""

msgid ""
"The :ttag:`{% localize %} <localize>` tag and the :tfilter:`localize`/ :"
"tfilter:`unlocalize` filters will still be honored by Django."
msgstr ""

msgid ""
"``SERIALIZE`` test setting is deprecated as it can be inferred from the :"
"attr:`~django.test.TestCase.databases` with the :ref:`serialized_rollback "
"<test-case-serialized-rollback>` option enabled."
msgstr ""

msgid "The undocumented ``django.utils.baseconv`` module is deprecated."
msgstr ""

msgid "The undocumented ``django.utils.datetime_safe`` module is deprecated."
msgstr ""

msgid ""
"The default sitemap protocol for sitemaps built outside the context of a "
"request will change from ``'http'`` to ``'https'`` in Django 5.0."
msgstr ""

msgid ""
"The ``extra_tests`` argument for :meth:`.DiscoverRunner.build_suite` and :"
"meth:`.DiscoverRunner.run_tests` is deprecated."
msgstr ""

msgid ""
"The :class:`~django.contrib.postgres.aggregates.ArrayAgg`, :class:`~django."
"contrib.postgres.aggregates.JSONBAgg`, and :class:`~django.contrib.postgres."
"aggregates.StringAgg` aggregates will return ``None`` when there are no rows "
"instead of ``[]``, ``[]``, and ``''`` respectively in Django 5.0. If you "
"need the previous behavior, explicitly set ``default`` to ``Value([])``, "
"``Value('[]')``, or ``Value('')``."
msgstr ""

msgid ""
"The ``django.contrib.gis.admin.GeoModelAdmin`` and ``OSMGeoAdmin`` classes "
"are deprecated. Use :class:`~django.contrib.admin.ModelAdmin` and :class:"
"`~django.contrib.gis.admin.GISModelAdmin` instead."
msgstr ""

msgid ""
"Since form rendering now uses the template engine, the undocumented "
"``BaseForm._html_output()`` helper method is deprecated."
msgstr ""

msgid ""
"The ability to return a ``str`` from ``ErrorList`` and ``ErrorDict`` is "
"deprecated. It is expected these methods return a ``SafeString``."
msgstr ""

msgid "Features removed in 4.0"
msgstr ""

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 4.0."
msgstr ""

msgid ""
"See :ref:`deprecated-features-3.0` for details on these changes, including "
"how to remove usage of these features."
msgstr ""

msgid ""
"``django.utils.http.urlquote()``, ``urlquote_plus()``, ``urlunquote()``, and "
"``urlunquote_plus()`` are removed."
msgstr ""

msgid ""
"``django.utils.encoding.force_text()`` and ``smart_text()`` are removed."
msgstr ""

msgid ""
"``django.utils.translation.ugettext()``, ``ugettext_lazy()``, "
"``ugettext_noop()``, ``ungettext()``, and ``ungettext_lazy()`` are removed."
msgstr ""

msgid ""
"``django.views.i18n.set_language()`` doesn't set the user language in "
"``request.session`` (key ``_language``)."
msgstr ""

msgid ""
"``alias=None`` is required in the signature of ``django.db.models.Expression."
"get_group_by_cols()`` subclasses."
msgstr ""

msgid "``django.utils.text.unescape_entities()`` is removed."
msgstr ""

msgid "``django.utils.http.is_safe_url()`` is removed."
msgstr ""

msgid ""
"See :ref:`deprecated-features-3.1` for details on these changes, including "
"how to remove usage of these features."
msgstr ""

msgid "The ``PASSWORD_RESET_TIMEOUT_DAYS`` setting is removed."
msgstr ""

msgid ""
"The :lookup:`isnull` lookup no longer allows using non-boolean values as the "
"right-hand side."
msgstr ""

msgid ""
"The ``django.db.models.query_utils.InvalidQuery`` exception class is removed."
msgstr ""

msgid "The ``django-admin.py`` entry point is removed."
msgstr ""

msgid "The ``HttpRequest.is_ajax()`` method is removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 encoding format of cookies values used by "
"``django.contrib.messages.storage.cookie.CookieStorage`` is removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 password reset tokens in the admin site (that "
"use the SHA-1 hashing algorithm) is removed."
msgstr ""

msgid "Support for the pre-Django 3.1 encoding format of sessions is removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 ``django.core.signing.Signer`` signatures "
"(encoded with the SHA-1 algorithm) is removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 ``django.core.signing.dumps()`` signatures "
"(encoded with the SHA-1 algorithm) in ``django.core.signing.loads()`` is "
"removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.1 user sessions (that use the SHA-1 algorithm) "
"is removed."
msgstr ""

msgid ""
"The ``get_response`` argument for ``django.utils.deprecation.MiddlewareMixin."
"__init__()`` is required and doesn't accept ``None``."
msgstr ""

msgid ""
"The ``providing_args`` argument for ``django.dispatch.Signal`` is removed."
msgstr ""

msgid ""
"The ``length`` argument for ``django.utils.crypto.get_random_string()`` is "
"required."
msgstr ""

msgid "The ``list`` message for ``ModelMultipleChoiceField`` is removed."
msgstr ""

msgid ""
"Support for passing raw column aliases to ``QuerySet.order_by()`` is removed."
msgstr ""

msgid ""
"The ``NullBooleanField`` model field is removed, except for support in "
"historical migrations."
msgstr ""

msgid "``django.conf.urls.url()`` is removed."
msgstr ""

msgid ""
"The ``django.contrib.postgres.fields.JSONField`` model field is removed, "
"except for support in historical migrations."
msgstr ""

msgid ""
"``django.contrib.postgres.fields.jsonb.KeyTransform`` and ``django.contrib."
"postgres.fields.jsonb.KeyTextTransform`` are removed."
msgstr ""

msgid "``django.contrib.postgres.forms.JSONField`` is removed."
msgstr ""

msgid ""
"The ``{% ifequal %}`` and ``{% ifnotequal %}`` template tags are removed."
msgstr ""

msgid "The ``DEFAULT_HASHING_ALGORITHM`` transitional setting is removed."
msgstr ""

msgid "Django 4.0.1 release notes"
msgstr ""

msgid ""
"Django 4.0.1 fixes one security issue with severity \"medium\", two security "
"issues with severity \"low\", and several bugs in 4.0."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused a crash of "
"``assertFormsetError()`` on a formset named ``form`` (:ticket:`33346`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.0 that caused a crash on booleans with the "
"``RedisCache`` backend (:ticket:`33361`)."
msgstr ""

msgid ""
"Relaxed the check added in Django 4.0 to reallow use of a duck-typed "
"``HttpRequest`` in ``django.views.decorators.cache.cache_control()`` and "
"``never_cache()`` decorators (:ticket:`33350`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused creating bogus migrations for "
"models that reference swappable models such as ``auth.User`` (:ticket:"
"`33366`)."
msgstr ""

msgid ""
"Fixed a long standing bug in :ref:`geos-geometry-collections` and :class:"
"`~django.contrib.gis.geos.Polygon` that caused a crash on some platforms "
"(reported on macOS based on the ``ARM64`` architecture) (:ticket:`32600`)."
msgstr ""

msgid "Django 4.0.10 release notes"
msgstr ""

msgid ""
"Django 4.0.10 fixes a security issue with severity \"moderate\" in 4.0.9."
msgstr ""

msgid "Django 4.0.2 release notes"
msgstr ""

msgid ""
"Django 4.0.2 fixes two security issues with severity \"medium\" and several "
"bugs in 4.0.1. Also, the latest string translations from Transifex are "
"incorporated, with a special mention for Bulgarian (fully translated)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.0 where ``TestCase.captureOnCommitCallbacks()`` "
"could execute callbacks multiple times (:ticket:`33410`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 where ``help_text`` was HTML-escaped in "
"automatically-generated forms (:ticket:`33419`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused displaying an incorrect name "
"for class-based views on the technical 404 debug page (:ticket:`33425`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused an incorrect ``repr`` of "
"``ResolverMatch`` for class-based views (:ticket:`33426`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused a crash of ``makemigrations`` "
"on models without ``Meta.order_with_respect_to`` but with a field named "
"``_order`` (:ticket:`33449`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused incorrect :attr:`.ModelAdmin."
"radio_fields` layout in the admin (:ticket:`33407`)."
msgstr ""

msgid ""
"Fixed a duplicate operation regression in Django 4.0 that caused a migration "
"crash when altering a primary key type for a concrete parent model "
"referenced by a foreign key (:ticket:`33462`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.0 that caused a crash of ``QuerySet.aggregate()`` "
"after ``annotate()`` on an aggregate function with a :ref:`default "
"<aggregate-default>` (:ticket:`33468`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused a crash of ``makemigrations`` "
"when renaming a field of a renamed model (:ticket:`33480`)."
msgstr ""

msgid "Django 4.0.3 release notes"
msgstr ""

msgid "*March 1, 2022*"
msgstr ""

msgid ""
"Django 4.0.3 fixes several bugs in 4.0.2. Also, all Python code in Django is "
"reformatted with :pypi:`black`."
msgstr ""

msgid ""
"Prevented, following a regression in Django 4.0.1, :djadmin:`makemigrations` "
"from generating infinite migrations for a model with ``ManyToManyField`` to "
"a lowercased swappable model such as ``'auth.user'`` (:ticket:`33515`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused a crash when rendering invalid "
"inlines with :attr:`~django.contrib.admin.ModelAdmin.readonly_fields` in the "
"admin (:ticket:`33547`)."
msgstr ""

msgid "Django 4.0.4 release notes"
msgstr ""

msgid ""
"Django 4.0.4 fixes two security issues with severity \"high\" and two bugs "
"in 4.0.3."
msgstr ""

msgid ""
"Fixed a regression in Django 4.0 that caused ignoring multiple "
"``FilteredRelation()`` relationships to the same field (:ticket:`33598`)."
msgstr ""

msgid "Django 4.0.5 release notes"
msgstr ""

msgid "*June 1, 2022*"
msgstr ""

msgid "Django 4.0.5 fixes several bugs in 4.0.4."
msgstr ""

msgid ""
"Fixed a bug in Django 4.0 where not all :setting:`OPTIONS <CACHES-OPTIONS>` "
"were passed to a Redis client (:ticket:`33681`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.0 that caused a crash of ``QuerySet.filter()`` on "
"``IsNull()`` expressions (:ticket:`33705`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.0 where a hidden quick filter toolbar in the admin's "
"navigation sidebar was focusable (:ticket:`33725`)."
msgstr ""

msgid "Django 4.0.6 release notes"
msgstr ""

msgid "Django 4.0.6 fixes a security issue with severity \"high\" in 4.0.5."
msgstr ""

msgid "Django 4.0.7 release notes"
msgstr ""

msgid "Django 4.0.7 fixes a security issue with severity \"high\" in 4.0.6."
msgstr ""

msgid "Django 4.0.8 release notes"
msgstr ""

msgid "Django 4.0.8 fixes a security issue with severity \"medium\" in 4.0.7."
msgstr ""

msgid "Django 4.0.9 release notes"
msgstr ""

msgid ""
"Django 4.0.9 fixes a security issue with severity \"moderate\" in 4.0.8."
msgstr ""

msgid "Django 4.1 release notes"
msgstr ""

msgid "Welcome to Django 4.1!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-4.1>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-4.1>` "
"you'll want to be aware of when upgrading from Django 4.0 or earlier. We've :"
"ref:`begun the deprecation process for some features <deprecated-"
"features-4.1>`."
msgstr ""

msgid ""
"Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We "
"**highly recommend** and only officially support the latest release of each "
"series."
msgstr ""

msgid "What's new in Django 4.1"
msgstr ""

msgid "Asynchronous handlers for class-based views"
msgstr ""

msgid "View subclasses may now define async HTTP method handlers::"
msgstr ""

msgid "See :ref:`async-class-based-views` for more details."
msgstr ""

msgid "Asynchronous ORM interface"
msgstr ""

msgid ""
"``QuerySet`` now provides an asynchronous interface for all data access "
"operations. These are named as-per the existing synchronous operations but "
"with an ``a`` prefix, for example ``acreate()``, ``aget()``, and so on."
msgstr ""

msgid ""
"The new interface allows you to write asynchronous code without needing to "
"wrap ORM operations in ``sync_to_async()``::"
msgstr ""

msgid ""
"Note that, at this stage, the underlying database operations remain "
"synchronous, with contributions ongoing to push asynchronous support down "
"into the SQL compiler, and integrate asynchronous database drivers. The new "
"asynchronous queryset interface currently encapsulates the necessary "
"``sync_to_async()`` operations for you, and will allow your code to take "
"advantage of developments in the ORM's asynchronous support as it evolves."
msgstr ""

msgid "See :ref:`async-queries` for details and limitations."
msgstr ""

msgid "Validation of Constraints"
msgstr ""

msgid ""
":class:`Check <django.db.models.CheckConstraint>`, :class:`unique <django.db."
"models.UniqueConstraint>`, and :class:`exclusion <django.contrib.postgres."
"constraints.ExclusionConstraint>` constraints defined in the :attr:`Meta."
"constraints <django.db.models.Options.constraints>` option are now checked "
"during :ref:`model validation <validating-objects>`."
msgstr ""

msgid "Form rendering accessibility"
msgstr ""

msgid ""
"In order to aid users with screen readers, and other assistive technology, "
"new ``<div>`` based form templates are available from this release. These "
"provide more accessible navigation than the older templates, and are able to "
"correctly group related controls, such as radio-lists, into fieldsets."
msgstr ""

msgid ""
"The new templates are recommended, and will become the default form "
"rendering style when outputting a form, like ``{{ form }}`` in a template, "
"from Django 5.0."
msgstr ""

msgid ""
"In order to ease adopting the new output style, the default form and formset "
"templates are now configurable at the project level via the :setting:"
"`FORM_RENDERER` setting."
msgstr ""

msgid "See :ref:`the Forms section (below)<forms-4.1>` for full details."
msgstr ""

msgid "``CSRF_COOKIE_MASKED`` setting"
msgstr ""

msgid ""
"The new :setting:`CSRF_COOKIE_MASKED` transitional setting allows specifying "
"whether to mask the CSRF cookie."
msgstr ""

msgid ""
":class:`~django.middleware.csrf.CsrfViewMiddleware` no longer masks the CSRF "
"cookie like it does the CSRF token in the DOM. If you are upgrading multiple "
"instances of the same project to Django 4.1, you should set :setting:"
"`CSRF_COOKIE_MASKED` to ``True`` during the transition, in order to allow "
"compatibility with the older versions of Django. Once the transition to 4.1 "
"is complete you can stop overriding :setting:`CSRF_COOKIE_MASKED`."
msgstr ""

msgid ""
"This setting is deprecated as of this release and will be removed in Django "
"5.0."
msgstr ""

msgid ""
"The admin :ref:`dark mode CSS variables <admin-theming>` are now applied in "
"a separate stylesheet and template block."
msgstr ""

msgid ""
":ref:`modeladmin-list-filters` providing custom ``FieldListFilter`` "
"subclasses can now control the query string value separator when filtering "
"for multiple values using the ``__in`` lookup."
msgstr ""

msgid ""
"The admin :meth:`history view <django.contrib.admin.ModelAdmin."
"history_view>` is now paginated."
msgstr ""

msgid "Related widget wrappers now have a link to object's change form."
msgstr ""

msgid ""
"The :meth:`.AdminSite.get_app_list` method now allows changing the order of "
"apps and models on the admin index page."
msgstr ""

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased from "
"320,000 to 390,000."
msgstr ""

msgid ""
"The :meth:`.RemoteUserBackend.configure_user` method now allows "
"synchronizing user attributes with attributes in a remote system such as an "
"LDAP directory."
msgstr ""

msgid ""
"The new :meth:`.GEOSGeometry.make_valid()` method allows converting invalid "
"geometries to valid ones."
msgstr ""

msgid ""
"The new ``clone`` argument for :meth:`.GEOSGeometry.normalize` allows "
"creating a normalized clone of the geometry."
msgstr ""

msgid ""
"The new :class:`BitXor() <django.contrib.postgres.aggregates.BitXor>` "
"aggregate function returns an ``int`` of the bitwise ``XOR`` of all non-null "
"input values."
msgstr ""

msgid ""
":class:`~django.contrib.postgres.indexes.SpGistIndex` now supports covering "
"indexes on PostgreSQL 14+."
msgstr ""

msgid ""
":class:`~django.contrib.postgres.constraints.ExclusionConstraint` now "
"supports covering exclusion constraints using SP-GiST indexes on PostgreSQL "
"14+."
msgstr ""

msgid ""
"The new ``default_bounds`` attribute of :attr:`DateTimeRangeField <django."
"contrib.postgres.fields.DateTimeRangeField.default_bounds>` and :attr:"
"`DecimalRangeField <django.contrib.postgres.fields.DecimalRangeField."
"default_bounds>` allows specifying bounds for list and tuple inputs."
msgstr ""

msgid ""
":class:`~django.contrib.postgres.constraints.ExclusionConstraint` now allows "
"specifying operator classes with the :class:`OpClass() <django.contrib."
"postgres.indexes.OpClass>` expression."
msgstr ""

msgid ""
"The default sitemap index template ``<sitemapindex>`` now includes the "
"``<lastmod>`` timestamp where available, through the new :meth:`~django."
"contrib.sitemaps.Sitemap.get_latest_lastmod` method. Custom sitemap index "
"templates should be updated for the adjusted :ref:`context variables "
"<sitemap-index-context-variables>`."
msgstr ""

msgid ""
":class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage` now "
"replaces paths to CSS source map references with their hashed counterparts."
msgstr ""

msgid ""
"Third-party database backends can now specify the minimum required version "
"of the database using the ``DatabaseFeatures.minimum_database_version`` "
"attribute which is a tuple (e.g. ``(10, 0)`` means \"10.0\"). If a minimum "
"version is specified, backends must also implement ``DatabaseWrapper."
"get_database_version()``, which returns a tuple of the current database "
"version. The backend's ``DatabaseWrapper.init_connection_state()`` method "
"must call ``super()`` in order for the check to run."
msgstr ""

msgid ""
"The default template used to render forms when cast to a string, e.g. in "
"templates as ``{{ form }}``, is now configurable at the project-level by "
"setting :attr:`~django.forms.renderers.BaseRenderer.form_template_name` on "
"the class provided for :setting:`FORM_RENDERER`."
msgstr ""

msgid ""
":attr:`.Form.template_name` is now a property deferring to the renderer, but "
"may be overridden with a string value to specify the template name per-form "
"class."
msgstr ""

msgid ""
"Similarly, the default template used to render formsets can be specified via "
"the matching :attr:`~django.forms.renderers.BaseRenderer."
"formset_template_name` renderer attribute."
msgstr ""

msgid ""
"The new ``div.html`` form template, referencing :attr:`.Form."
"template_name_div` attribute, and matching :meth:`.Form.as_div` method, "
"render forms using HTML ``<div>`` elements."
msgstr ""

msgid ""
"This new output style is recommended over the existing :meth:`~.Form."
"as_table`, :meth:`~.Form.as_p` and :meth:`~.Form.as_ul` styles, as the "
"template implements ``<fieldset>`` and ``<legend>`` to group related inputs "
"and is easier for screen reader users to navigate."
msgstr ""

msgid ""
"The div-based output will become the default rendering style from Django 5.0."
msgstr ""

msgid ""
"In order to smooth adoption of the new ``<div>`` output style, two "
"transitional form renderer classes are available: :class:`django.forms."
"renderers.DjangoDivFormRenderer` and :class:`django.forms.renderers."
"Jinja2DivFormRenderer`, for the Django and Jinja2 template backends "
"respectively."
msgstr ""

msgid ""
"You can apply one of these via the :setting:`FORM_RENDERER` setting. For "
"example::"
msgstr ""

msgid ""
"Once the ``<div>`` output style is the default, from Django 5.0, these "
"transitional renderers will be deprecated, for removal in Django 6.0. The "
"``FORM_RENDERER`` declaration can be removed at that time."
msgstr ""

msgid ""
"If the new ``<div>`` output style is not appropriate for your project, you "
"should define a renderer subclass specifying :attr:`~django.forms.renderers."
"BaseRenderer.form_template_name` and :attr:`~django.forms.renderers."
"BaseRenderer.formset_template_name` for your required style, and set :"
"setting:`FORM_RENDERER` accordingly."
msgstr ""

msgid ""
"For example, for the ``<p>`` output style used by :meth:`~.Form.as_p`, you "
"would define a form renderer setting ``form_template_name`` to ``\"django/"
"forms/p.html\"`` and ``formset_template_name`` to ``\"django/forms/formsets/"
"p.html\"``."
msgstr ""

msgid ""
"The new :meth:`~django.forms.BoundField.legend_tag` allows rendering field "
"labels in ``<legend>`` tags via the new ``tag`` argument of :meth:`~django."
"forms.BoundField.label_tag`."
msgstr ""

msgid ""
"The new ``edit_only`` argument for :func:`.modelformset_factory` and :func:`."
"inlineformset_factory` allows preventing new objects creation."
msgstr ""

msgid ""
"The ``js`` and ``css`` class attributes of :doc:`Media </topics/forms/"
"media>` now allow using hashable objects, not only path strings, as long as "
"those objects implement the ``__html__()`` method (typically when decorated "
"with the :func:`~django.utils.html.html_safe` decorator)."
msgstr ""

msgid ""
"The new :attr:`.BoundField.use_fieldset` and :attr:`.Widget.use_fieldset` "
"attributes help to identify widgets where its inputs should be grouped in a "
"``<fieldset>`` with a ``<legend>``."
msgstr ""

msgid ""
"The :ref:`formsets-error-messages` argument for :class:`~django.forms."
"formsets.BaseFormSet` now allows customizing error messages for invalid "
"number of forms by passing ``'too_few_forms'`` and ``'too_many_forms'`` keys."
msgstr ""

msgid ""
":class:`~django.forms.IntegerField`, :class:`~django.forms.FloatField`, and :"
"class:`~django.forms.DecimalField` now optionally accept a ``step_size`` "
"argument. This is used to set the ``step`` HTML attribute, and is validated "
"on form submission."
msgstr ""

msgid ""
"The :func:`~django.conf.urls.i18n.i18n_patterns` function now supports "
"languages with both scripts and regions."
msgstr ""

msgid ""
":option:`makemigrations --no-input` now logs default answers and reasons why "
"migrations cannot be created."
msgstr ""

msgid ""
"The new :option:`makemigrations --scriptable` option diverts log output and "
"input prompts to ``stderr``, writing only paths of generated migration files "
"to ``stdout``."
msgstr ""

msgid ""
"The new :option:`migrate --prune` option allows deleting nonexistent "
"migrations from the ``django_migrations`` table."
msgstr ""

msgid ""
"Python files created by :djadmin:`startproject`, :djadmin:`startapp`, :"
"djadmin:`optimizemigration`, :djadmin:`makemigrations`, and :djadmin:"
"`squashmigrations` are now formatted using the ``black`` command if it is "
"present on your ``PATH``."
msgstr ""

msgid ""
"The new :djadmin:`optimizemigration` command allows optimizing operations "
"for a migration."
msgstr ""

msgid ""
"The new :class:`~django.db.migrations.operations.RenameIndex` operation "
"allows renaming indexes defined in the :attr:`Meta.indexes <django.db.models."
"Options.indexes>` or :attr:`~django.db.models.Options.index_together` "
"options."
msgstr ""

msgid ""
"The migrations autodetector now generates :class:`~django.db.migrations."
"operations.RenameIndex` operations instead of ``RemoveIndex`` and "
"``AddIndex``, when renaming indexes defined in the :attr:`Meta.indexes "
"<django.db.models.Options.indexes>`."
msgstr ""

msgid ""
"The migrations autodetector now generates :class:`~django.db.migrations."
"operations.RenameIndex` operations instead of ``AlterIndexTogether`` and "
"``AddIndex``, when moving indexes defined in the :attr:`Meta.index_together "
"<django.db.models.Options.index_together>` to the :attr:`Meta.indexes "
"<django.db.models.Options.indexes>`."
msgstr ""

msgid ""
"The ``order_by`` argument of the :class:`~django.db.models.expressions."
"Window` expression now accepts string references to fields and transforms."
msgstr ""

msgid ""
"The new :setting:`CONN_HEALTH_CHECKS` setting allows enabling health checks "
"for :ref:`persistent database connections <persistent-database-connections>` "
"in order to reduce the number of failed requests, e.g. after database server "
"restart."
msgstr ""

msgid ""
":meth:`.QuerySet.bulk_create` now supports updating fields when a row "
"insertion fails uniqueness constraints. This is supported on MariaDB, MySQL, "
"PostgreSQL, and SQLite 3.24+."
msgstr ""

msgid ""
":meth:`.QuerySet.iterator` now supports prefetching related objects as long "
"as the ``chunk_size`` argument is provided. In older versions, no "
"prefetching was done."
msgstr ""

msgid ""
":class:`~django.db.models.Q` objects and querysets can now be combined using "
"``^`` as the exclusive or (``XOR``) operator. ``XOR`` is natively supported "
"on MariaDB and MySQL. For databases that do not support ``XOR``, the query "
"will be converted to an equivalent using ``AND``, ``OR``, and ``NOT``."
msgstr ""

msgid ""
"The new :ref:`Field.non_db_attrs <custom-field-non_db_attrs>` attribute "
"allows customizing attributes of fields that don't affect a column "
"definition."
msgstr ""

msgid ""
"On PostgreSQL, ``AutoField``, ``BigAutoField``, and ``SmallAutoField`` are "
"now created as identity columns rather than serial columns with sequences."
msgstr ""

msgid ""
":meth:`.HttpResponse.set_cookie` now supports :class:`~datetime.timedelta` "
"objects for the ``max_age`` argument."
msgstr ""

msgid ""
"The new :setting:`SECRET_KEY_FALLBACKS` setting allows providing a list of "
"values for secret key rotation."
msgstr ""

msgid ""
"The :setting:`SECURE_PROXY_SSL_HEADER` setting now supports a comma-"
"separated list of protocols in the header value."
msgstr ""

msgid ""
"The :data:`~django.db.models.signals.pre_delete` and :data:`~django.db."
"models.signals.post_delete` signals now dispatch the ``origin`` of the "
"deletion."
msgstr ""

msgid ""
"The HTML ``<script>`` element ``id`` attribute is no longer required when "
"wrapping the :tfilter:`json_script` template filter."
msgstr ""

msgid ""
"The :class:`cached template loader <django.template.loaders.cached.Loader>` "
"is now enabled in development, when :setting:`DEBUG` is ``True``, and :"
"setting:`OPTIONS['loaders'] <TEMPLATES-OPTIONS>` isn't specified. You may "
"specify ``OPTIONS['loaders']`` to override this, if necessary."
msgstr ""

msgid ""
"The :class:`.DiscoverRunner` now supports running tests in parallel on "
"macOS, Windows, and any other systems where the default :mod:"
"`multiprocessing` start method is ``spawn``."
msgstr ""

msgid ""
"A nested atomic block marked as durable in :class:`django.test.TestCase` now "
"raises a ``RuntimeError``, the same as outside of tests."
msgstr ""

msgid ""
":meth:`.SimpleTestCase.assertFormError` and :meth:`assertFormsetError() "
"<django.test.SimpleTestCase.assertFormSetError>` now support passing a form/"
"formset object directly."
msgstr ""

msgid ""
"The new :attr:`.ResolverMatch.captured_kwargs` attribute stores the captured "
"keyword arguments, as parsed from the URL."
msgstr ""

msgid ""
"The new :attr:`.ResolverMatch.extra_kwargs` attribute stores the additional "
"keyword arguments passed to the view function."
msgstr ""

msgid "``SimpleLazyObject`` now supports addition operations."
msgstr ""

msgid ":func:`~django.utils.safestring.mark_safe` now preserves lazy objects."
msgstr ""

msgid ""
"The new :class:`~django.core.validators.StepValueValidator` checks if a "
"value is an integral multiple of a given step size. This new validator is "
"used for the new ``step_size`` argument added to form fields representing "
"numeric values."
msgstr ""

msgid "Backwards incompatible changes in 4.1"
msgstr ""

msgid ""
"``BaseDatabaseFeatures.has_case_insensitive_like`` is changed from ``True`` "
"to ``False`` to reflect the behavior of most databases."
msgstr ""

msgid ""
"``DatabaseIntrospection.get_key_columns()`` is removed. Use "
"``DatabaseIntrospection.get_relations()`` instead."
msgstr ""

msgid ""
"``DatabaseOperations.ignore_conflicts_suffix_sql()`` method is replaced by "
"``DatabaseOperations.on_conflict_suffix_sql()`` that accepts the ``fields``, "
"``on_conflict``, ``update_fields``, and ``unique_fields`` arguments."
msgstr ""

msgid ""
"The ``ignore_conflicts`` argument of the ``DatabaseOperations."
"insert_statement()`` method is replaced by ``on_conflict`` that accepts "
"``django.db.models.constants.OnConflict``."
msgstr ""

msgid ""
"``DatabaseOperations._convert_field_to_tz()`` is replaced by "
"``DatabaseOperations._convert_sql_to_tz()`` that accepts the ``sql``, "
"``params``, and ``tzname`` arguments."
msgstr ""

msgid ""
"Several date and time methods on ``DatabaseOperations`` now take ``sql`` and "
"``params`` arguments instead of ``field_name`` and return 2-tuple containing "
"some SQL and the parameters to be interpolated into that SQL. The changed "
"methods have these new signatures:"
msgstr ""

msgid "``DatabaseOperations.date_extract_sql(lookup_type, sql, params)``"
msgstr ""

msgid ""
"``DatabaseOperations.datetime_extract_sql(lookup_type, sql, params, tzname)``"
msgstr ""

msgid "``DatabaseOperations.time_extract_sql(lookup_type, sql, params)``"
msgstr ""

msgid ""
"``DatabaseOperations.date_trunc_sql(lookup_type, sql, params, tzname=None)``"
msgstr ""

msgid ""
"``DatabaseOperations.datetime_trunc_sql(self, lookup_type, sql, params, "
"tzname)``"
msgstr ""

msgid ""
"``DatabaseOperations.time_trunc_sql(lookup_type, sql, params, tzname=None)``"
msgstr ""

msgid "``DatabaseOperations.datetime_cast_date_sql(sql, params, tzname)``"
msgstr ""

msgid "``DatabaseOperations.datetime_cast_time_sql(sql, params, tzname)``"
msgstr ""

msgid "Support for GDAL 2.1 is removed."
msgstr ""

msgid "Support for PostGIS 2.4 is removed."
msgstr ""

msgid "Dropped support for PostgreSQL 10"
msgstr ""

msgid ""
"Upstream support for PostgreSQL 10 ends in November 2022. Django 4.1 "
"supports PostgreSQL 11 and higher."
msgstr ""

msgid "Dropped support for MariaDB 10.2"
msgstr ""

msgid ""
"Upstream support for MariaDB 10.2 ends in May 2022. Django 4.1 supports "
"MariaDB 10.3 and higher."
msgstr ""

msgid "Admin changelist searches spanning multi-valued relationships changes"
msgstr ""

msgid ""
"Admin changelist searches using multiple search terms are now applied in a "
"single call to ``filter()``, rather than in sequential ``filter()`` calls."
msgstr ""

msgid ""
"For multi-valued relationships, this means that rows from the related model "
"must match all terms rather than any term. For example, if ``search_fields`` "
"is set to ``['child__name', 'child__age']``, and a user searches for "
"``'Jamal 17'``, parent rows will be returned only if there is a relationship "
"to some 17-year-old child named Jamal, rather than also returning parents "
"who merely have a younger or older child named Jamal in addition to some "
"other 17-year-old."
msgstr ""

msgid ""
"See the :ref:`spanning-multi-valued-relationships` topic for more discussion "
"of this difference. In Django 4.0 and earlier, :meth:`~django.contrib.admin."
"ModelAdmin.get_search_results` followed the second example query, but this "
"undocumented behavior led to queries with excessive joins."
msgstr ""

msgid "Reverse foreign key changes for unsaved model instances"
msgstr ""

msgid ""
"In order to unify the behavior with many-to-many relations for unsaved model "
"instances, a reverse foreign key now raises ``ValueError`` when calling :"
"class:`related managers <django.db.models.fields.related.RelatedManager>` "
"for unsaved objects."
msgstr ""

msgid ""
"Related managers for :class:`~django.db.models.ForeignKey`, :class:`~django."
"db.models.ManyToManyField`, and :class:`~django.contrib.contenttypes.fields."
"GenericRelation` are now cached on the :class:`~django.db.models.Model` "
"instance to which they belong. *This change was reverted in Django 4.1.2.*"
msgstr ""

msgid ""
"The Django test runner now returns a non-zero error code for unexpected "
"successes from tests marked with :py:func:`unittest.expectedFailure`."
msgstr ""

msgid ""
":class:`~django.middleware.csrf.CsrfViewMiddleware` no longer masks the CSRF "
"cookie like it does the CSRF token in the DOM."
msgstr ""

msgid ""
":class:`~django.middleware.csrf.CsrfViewMiddleware` now uses ``request."
"META['CSRF_COOKIE']`` for storing the unmasked CSRF secret rather than a "
"masked version. This is an undocumented, private API."
msgstr ""

msgid ""
"The :attr:`.ModelAdmin.actions` and :attr:`~django.contrib.admin.ModelAdmin."
"inlines` attributes now default to an empty tuple rather than an empty list "
"to discourage unintended mutation."
msgstr ""

msgid ""
"The ``type=\"text/css\"`` attribute is no longer included in ``<link>`` tags "
"for CSS :doc:`form media </topics/forms/media>`."
msgstr ""

msgid ""
"``formset:added`` and ``formset:removed`` JavaScript events are now pure "
"JavaScript events and don't depend on jQuery. See :ref:`admin-javascript-"
"inline-form-events` for more details on the change."
msgstr ""

msgid ""
"The ``exc_info`` argument of the undocumented ``django.utils.log."
"log_response()`` function is replaced by ``exception``."
msgstr ""

msgid ""
"The ``size`` argument of the undocumented ``django.views.static."
"was_modified_since()`` function is removed."
msgstr ""

msgid "The admin log out UI now uses ``POST`` requests."
msgstr ""

msgid ""
"The undocumented ``InlineAdminFormSet.non_form_errors`` property is replaced "
"by the ``non_form_errors()`` method. This is consistent with ``BaseFormSet``."
msgstr ""

msgid ""
"As per :ref:`above<templates-4.1>`, the cached template loader is now "
"enabled in development. You may specify ``OPTIONS['loaders']`` to override "
"this, if necessary."
msgstr ""

msgid ""
"The undocumented ``django.contrib.auth.views.SuccessURLAllowedHostsMixin`` "
"mixin is replaced by ``RedirectURLMixin``."
msgstr ""

msgid ""
":class:`~django.db.models.BaseConstraint` subclasses must implement :meth:"
"`~django.db.models.BaseConstraint.validate` method to allow those "
"constraints to be used for validation."
msgstr ""

msgid ""
"The undocumented ``URLResolver._is_callback()``, ``URLResolver."
"_callback_strs``, and ``URLPattern.lookup_str()`` are moved to ``django."
"contrib.admindocs.utils``."
msgstr ""

msgid ""
"The :meth:`.Model.full_clean` method now converts an ``exclude`` value to a "
"``set``. It’s also preferable to pass an ``exclude`` value as a ``set`` to "
"the :meth:`.Model.clean_fields`, :meth:`.Model.full_clean`, :meth:`.Model."
"validate_unique`, and :meth:`.Model.validate_constraints` methods."
msgstr ""

msgid ""
"The minimum supported version of ``asgiref`` is increased from 3.4.1 to "
"3.5.2."
msgstr ""

msgid ""
"Combined expressions no longer use the error-prone behavior of guessing "
"``output_field`` when argument types match. As a consequence, resolving an "
"``output_field`` for database functions and combined expressions may now "
"crash with mixed types. You will need to explicitly set the ``output_field`` "
"in such cases."
msgstr ""

msgid ""
"The :djadmin:`makemessages` command no longer changes ``.po`` files when up "
"to date. In older versions, ``POT-Creation-Date`` was always updated."
msgstr ""

msgid "Features deprecated in 4.1"
msgstr ""

msgid "Log out via GET"
msgstr ""

msgid ""
"Logging out via ``GET`` requests to the :py:class:`built-in logout view "
"<django.contrib.auth.views.LogoutView>` is deprecated. Use ``POST`` requests "
"instead."
msgstr ""

msgid ""
"If you want to retain the user experience of an HTML link, you can use a "
"form that is styled to appear as a link:"
msgstr ""

msgid ""
"The context for sitemap index templates of a flat list of URLs is "
"deprecated. Custom sitemap index templates should be updated for the "
"adjusted :ref:`context variables <sitemap-index-context-variables>`, "
"expecting a list of objects with ``location`` and optional ``lastmod`` "
"attributes."
msgstr ""

msgid "``CSRF_COOKIE_MASKED`` transitional setting is deprecated."
msgstr ""

msgid ""
"The ``name`` argument of :func:`django.utils.functional.cached_property` is "
"deprecated as it's unnecessary as of Python 3.6."
msgstr ""

msgid ""
"The ``opclasses`` argument of ``django.contrib.postgres.constraints."
"ExclusionConstraint`` is deprecated in favor of using :class:`OpClass() "
"<django.contrib.postgres.indexes.OpClass>` in :attr:`.ExclusionConstraint."
"expressions`. To use it, you need to add ``'django.contrib.postgres'`` in "
"your :setting:`INSTALLED_APPS`."
msgstr ""

msgid ""
"After making this change, :djadmin:`makemigrations` will generate a new "
"migration with two operations: ``RemoveConstraint`` and ``AddConstraint``. "
"Since this change has no effect on the database schema, the :class:`~django."
"db.migrations.operations.SeparateDatabaseAndState` operation can be used to "
"only update the migration state without running any SQL. Move the generated "
"operations into the ``state_operations`` argument of :class:`~django.db."
"migrations.operations.SeparateDatabaseAndState`. For example::"
msgstr ""

msgid ""
"The undocumented ability to pass ``errors=None`` to :meth:`.SimpleTestCase."
"assertFormError` and :meth:`assertFormsetError() <django.test.SimpleTestCase."
"assertFormSetError>` is deprecated. Use ``errors=[]`` instead."
msgstr ""

msgid ""
"``django.contrib.sessions.serializers.PickleSerializer`` is deprecated due "
"to the risk of remote code execution."
msgstr ""

msgid ""
"The usage of ``QuerySet.iterator()`` on a queryset that prefetches related "
"objects without providing the ``chunk_size`` argument is deprecated. In "
"older versions, no prefetching was done. Providing a value for "
"``chunk_size`` signifies that the additional query per chunk needed to "
"prefetch is desired."
msgstr ""

msgid ""
"Passing unsaved model instances to related filters is deprecated. In Django "
"5.0, the exception will be raised."
msgstr ""

msgid ""
"``created=True`` is added to the signature of :meth:`.RemoteUserBackend."
"configure_user`. Support  for ``RemoteUserBackend`` subclasses that do not "
"accept this argument is deprecated."
msgstr ""

msgid ""
"The :data:`django.utils.timezone.utc` alias to :attr:`datetime.timezone.utc` "
"is deprecated. Use :attr:`datetime.timezone.utc` directly."
msgstr ""

msgid ""
"Passing a response object and a form/formset name to ``SimpleTestCase."
"assertFormError()`` and ``assertFormsetError()`` is deprecated. Use::"
msgstr ""

msgid "or pass the form/formset object directly instead."
msgstr ""

msgid ""
"The undocumented ``django.contrib.gis.admin.OpenLayersWidget`` is deprecated."
msgstr ""

msgid "``django.contrib.auth.hashers.CryptPasswordHasher`` is deprecated."
msgstr ""

msgid ""
"The ability to pass ``nulls_first=False`` or ``nulls_last=False`` to "
"``Expression.asc()`` and ``Expression.desc()`` methods, and the ``OrderBy`` "
"expression is deprecated. Use ``None`` instead."
msgstr ""

msgid ""
"The ``\"django/forms/default.html\"`` and ``\"django/forms/formsets/default."
"html\"`` templates which are a proxy to the table-based templates are "
"deprecated. Use the specific template instead."
msgstr ""

msgid ""
"The undocumented ``LogoutView.get_next_page()`` method is renamed to "
"``get_success_url()``."
msgstr ""

msgid "Features removed in 4.1"
msgstr ""

msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 4.1."
msgstr ""

msgid ""
"See :ref:`deprecated-features-3.2` for details on these changes, including "
"how to remove usage of these features."
msgstr ""

msgid ""
"Support for assigning objects which don't support creating deep copies with "
"``copy.deepcopy()`` to class attributes in ``TestCase.setUpTestData()`` is "
"removed."
msgstr ""

msgid ""
"Support for using a boolean value in :attr:`.BaseCommand."
"requires_system_checks` is removed."
msgstr ""

msgid ""
"The ``whitelist`` argument and ``domain_whitelist`` attribute of ``django."
"core.validators.EmailValidator`` are removed."
msgstr ""

msgid ""
"The ``default_app_config`` application configuration variable is removed."
msgstr ""

msgid ""
"``TransactionTestCase.assertQuerysetEqual()`` no longer calls ``repr()`` on "
"a queryset when compared to string values."
msgstr ""

msgid ""
"The ``django.core.cache.backends.memcached.MemcachedCache`` backend is "
"removed."
msgstr ""

msgid ""
"Support for the pre-Django 3.2 format of messages used by ``django.contrib."
"messages.storage.cookie.CookieStorage`` is removed."
msgstr ""

msgid "Django 4.1.1 release notes"
msgstr ""

msgid "*September 5, 2022*"
msgstr ""

msgid "Django 4.1.1 fixes several bugs in 4.1."
msgstr ""

msgid ""
"Reallowed, following a regression in Django 4.1, using ``GeoIP2()`` when "
"GEOS is not installed (:ticket:`33886`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a crash of admin's autocomplete "
"widgets when translations are deactivated (:ticket:`33888`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a crash of the ``test`` "
"management command when running in parallel and ``multiprocessing`` start "
"method is ``spawn`` (:ticket:`33891`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused an incorrect redirection to the "
"admin changelist view when using *\"Save and continue editing\"* and *\"Save "
"and add another\"* options (:ticket:`33893`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a crash of :class:`~django.db."
"models.expressions.Window` expressions with :class:`~django.contrib.postgres."
"aggregates.ArrayAgg` (:ticket:`33898`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a migration crash on SQLite "
"3.35.5+ when removing an indexed field (:ticket:`33899`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused a crash of model validation on "
"``UniqueConstraint()`` with field names in ``expressions`` (:ticket:`33902`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused an incorrect validation of "
"``CheckConstraint()`` with range fields on PostgreSQL (:ticket:`33905`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused an incorrect migration when "
"adding ``AutoField``, ``BigAutoField``, or ``SmallAutoField`` on PostgreSQL "
"(:ticket:`33919`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a migration crash on PostgreSQL "
"when altering ``AutoField``, ``BigAutoField``, or ``SmallAutoField`` to "
"``OneToOneField`` (:ticket:`33932`)."
msgstr ""

msgid ""
"Fixed a migration crash on ``ManyToManyField`` fields with ``through`` "
"referencing models in different apps (:ticket:`33938`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused an incorrect migration when "
"renaming a model with ``ManyToManyField`` and ``db_table`` (:ticket:`33953`)."
msgstr ""

msgid ""
"Reallowed, following a regression in Django 4.1, creating reverse foreign "
"key managers on unsaved instances (:ticket:`33952`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a migration crash on SQLite < "
"3.20 (:ticket:`33960`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused an admin crash when the :mod:"
"`~django.contrib.admindocs` app was used (:ticket:`33955`, :ticket:`33971`)."
msgstr ""

msgid "Django 4.1.10 release notes"
msgstr ""

msgid ""
"Django 4.1.10 fixes a security issue with severity \"moderate\" in 4.1.9."
msgstr ""

msgid "Django 4.1.2 release notes"
msgstr ""

msgid ""
"Django 4.1.2 fixes a security issue with severity \"medium\" and several "
"bugs in 4.1.1."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a migration crash on PostgreSQL "
"when adding a model with ``ExclusionConstraint`` (:ticket:`33982`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused aggregation over a queryset "
"that contained an ``Exists`` annotation to crash due to too many selected "
"columns (:ticket:`33992`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused an incorrect validation of "
"``CheckConstraint`` on ``NULL`` values (:ticket:`33996`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a ``QuerySet.values()/"
"values_list()`` crash on ``ArrayAgg()`` and ``JSONBAgg()`` (:ticket:`34016`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused :attr:`.ModelAdmin."
"autocomplete_fields` to be incorrectly selected after adding/changing "
"related instances via popups (:ticket:`34025`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 where the app registry was not populated "
"when running parallel tests with the ``multiprocessing`` start method "
"``spawn`` (:ticket:`34010`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 where the ``--debug-mode`` argument to "
"``test`` did not work when running parallel tests with the "
"``multiprocessing`` start method ``spawn`` (:ticket:`34010`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that didn't alter a sequence type when "
"altering type of pre-Django 4.1 serial columns on PostgreSQL (:ticket:"
"`34058`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused a crash for :class:`View` "
"subclasses with asynchronous handlers when handling non-allowed HTTP methods "
"(:ticket:`34062`)."
msgstr ""

msgid ""
"Reverted caching related managers for ``ForeignKey``, ``ManyToManyField``, "
"and ``GenericRelation`` that caused the incorrect refreshing of related "
"objects (:ticket:`33984`)."
msgstr ""

msgid ""
"Relaxed the system check added in Django 4.1 for the same name used for "
"multiple template tag modules to a warning (:ticket:`32987`)."
msgstr ""

msgid "Django 4.1.3 release notes"
msgstr ""

msgid "*November 1, 2022*"
msgstr ""

msgid ""
"Django 4.1.3 fixes a bug in 4.1.2 and adds compatibility with Python 3.11."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused non-Python files created by "
"``startproject`` and ``startapp`` management commands from custom templates "
"to be incorrectly formatted using the ``black`` command (:ticket:`34085`)."
msgstr ""

msgid "Django 4.1.4 release notes"
msgstr ""

msgid "*December 6, 2022*"
msgstr ""

msgid "Django 4.1.4 fixes several bugs in 4.1.3."
msgstr ""

msgid ""
"Fixed a regression in Django 4.1 that caused an unnecessary table rebuild "
"when adding a ``ManyToManyField`` on SQLite (:ticket:`34138`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused a crash of the sitemap index view with "
"an empty :meth:`Sitemap.items() <django.contrib.sitemaps.Sitemap.items>` and "
"a callable :attr:`~django.contrib.sitemaps.Sitemap.lastmod` (:ticket:"
"`34088`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused a crash using ``acreate()``, "
"``aget_or_create()``, and ``aupdate_or_create()`` asynchronous methods of "
"related managers (:ticket:`34139`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused a crash of ``QuerySet.bulk_create()`` "
"with ``\"pk\"`` in ``unique_fields`` (:ticket:`34177`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused a crash of ``QuerySet.bulk_create()`` "
"on fields with ``db_column`` (:ticket:`34171`)."
msgstr ""

msgid "Django 4.1.5 release notes"
msgstr ""

msgid "*January 2, 2023*"
msgstr ""

msgid ""
"Django 4.1.5 fixes a bug in 4.1.4. Also, the latest string translations from "
"Transifex are incorporated."
msgstr ""

msgid ""
"Fixed a long standing bug in the ``__len`` lookup for ``ArrayField`` that "
"caused a crash of model validation on :attr:`Meta.constraints <django.db."
"models.Options.constraints>` (:ticket:`34205`)."
msgstr ""

msgid "Django 4.1.6 release notes"
msgstr ""

msgid ""
"Django 4.1.6 fixes a security issue with severity \"moderate\" and a bug in "
"4.1.5."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused a crash of model validation on "
"``UniqueConstraint`` with ordered expressions (:ticket:`34291`)."
msgstr ""

msgid "Django 4.1.7 release notes"
msgstr ""

msgid ""
"Django 4.1.7 fixes a security issue with severity \"moderate\" and a bug in "
"4.1.6."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused a crash of model validation on "
"``ValidationError`` with no ``code`` (:ticket:`34319`)."
msgstr ""

msgid "Django 4.1.8 release notes"
msgstr ""

msgid "*April 5, 2023*"
msgstr ""

msgid "Django 4.1.8 fixes a bug in 4.1.7."
msgstr ""

msgid ""
"Fixed a bug in Django 4.1 that caused invalidation of sessions when rotating "
"secret keys with ``SECRET_KEY_FALLBACKS`` (:ticket:`34384`)."
msgstr ""

msgid "Django 4.1.9 release notes"
msgstr ""

msgid "Django 4.1.9 fixes a security issue with severity \"low\" in 4.1.8."
msgstr ""

msgid "Django 4.2 release notes"
msgstr ""

msgid "*April 3, 2023*"
msgstr ""

msgid "Welcome to Django 4.2!"
msgstr ""

msgid ""
"These release notes cover the :ref:`new features <whats-new-4.2>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-4.2>` "
"you'll want to be aware of when upgrading from Django 4.1 or earlier. We've :"
"ref:`begun the deprecation process for some features <deprecated-"
"features-4.2>`."
msgstr ""

msgid ""
"Django 4.2 is designated as a :term:`long-term support release <Long-term "
"support release>`. It will receive security updates for at least three years "
"after its release. Support for the previous LTS, Django 3.2, will end in "
"April 2024."
msgstr ""

msgid ""
"Django 4.2 supports Python 3.8, 3.9, 3.10, and 3.11. We **highly recommend** "
"and only officially support the latest release of each series."
msgstr ""

msgid "What's new in Django 4.2"
msgstr ""

msgid "Psycopg 3 support"
msgstr ""

msgid ""
"Django now supports `psycopg`_ version 3.1.8 or higher. To update your code, "
"install the :pypi:`psycopg library <psycopg>`, you don't need to change the :"
"setting:`ENGINE <DATABASE-ENGINE>` as ``django.db.backends.postgresql`` "
"supports both libraries."
msgstr ""

msgid ""
"Support for ``psycopg2`` is likely to be deprecated and removed at some "
"point in the future."
msgstr ""

msgid ""
"Be aware that ``psycopg`` 3 introduces some breaking changes over "
"``psycopg2``. As a consequence, you may need to make some changes to account "
"for `differences from psycopg2`_."
msgstr ""

msgid "Comments on columns and tables"
msgstr ""

msgid ""
"The new :attr:`Field.db_comment <django.db.models.Field.db_comment>` and :"
"attr:`Meta.db_table_comment <django.db.models.Options.db_table_comment>` "
"options allow creating comments on columns and tables, respectively. For "
"example::"
msgstr ""

msgid ""
"Also, the new :class:`~django.db.migrations.operations."
"AlterModelTableComment` operation allows changing table comments defined in "
"the :attr:`Meta.db_table_comment <django.db.models.Options."
"db_table_comment>`."
msgstr ""

msgid "Mitigation for the BREACH attack"
msgstr ""

msgid ""
":class:`~django.middleware.gzip.GZipMiddleware` now includes a mitigation "
"for the BREACH attack. It will add up to 100 random bytes to gzip responses "
"to make BREACH attacks harder. Read more about the mitigation technique in "
"the `Heal The Breach (HTB) paper`_."
msgstr ""

msgid "In-memory file storage"
msgstr ""

msgid ""
"The new :class:`django.core.files.storage.InMemoryStorage` class provides a "
"non-persistent storage useful for speeding up tests by avoiding disk access."
msgstr ""

msgid "Custom file storages"
msgstr ""

msgid ""
"The new :setting:`STORAGES` setting allows configuring multiple custom file "
"storage backends. It also controls storage engines for managing :doc:`files "
"</topics/files>` (the ``\"default\"`` key) and :doc:`static files </ref/"
"contrib/staticfiles>` (the ``\"staticfiles\"`` key)."
msgstr ""

msgid ""
"The old ``DEFAULT_FILE_STORAGE`` and ``STATICFILES_STORAGE`` settings are "
"deprecated as of this release."
msgstr ""

msgid ""
"The light or dark color theme of the admin can now be toggled in the UI, as "
"well as being set to follow the system setting."
msgstr ""

msgid ""
"The admin's font stack now prefers system UI fonts and no longer requires "
"downloading fonts. Additionally, CSS variables are available to more easily "
"override the default font families."
msgstr ""

msgid ""
"The :source:`admin/delete_confirmation.html <django/contrib/admin/templates/"
"admin/delete_confirmation.html>` template now has some additional blocks and "
"scripting hooks to ease customization."
msgstr ""

msgid ""
"The chosen options of :attr:`~django.contrib.admin.ModelAdmin."
"filter_horizontal` and :attr:`~django.contrib.admin.ModelAdmin."
"filter_vertical` widgets are now filterable."
msgstr ""

msgid ""
"The ``admin/base.html`` template now has a new block ``nav-breadcrumbs`` "
"which contains the navigation landmark and the ``breadcrumbs`` block."
msgstr ""

msgid ""
":attr:`.ModelAdmin.list_editable` now uses atomic transactions when making "
"edits."
msgstr ""

msgid "jQuery is upgraded from version 3.6.0 to 3.6.4."
msgstr ""

msgid ""
"The default iteration count for the PBKDF2 password hasher is increased from "
"390,000 to 600,000."
msgstr ""

msgid ""
":class:`~django.contrib.auth.forms.UserCreationForm` now saves many-to-many "
"form fields for a custom user model."
msgstr ""

msgid ""
"The new :class:`~django.contrib.auth.forms.BaseUserCreationForm` is now the "
"recommended base class for customizing the user creation form."
msgstr ""

msgid ""
"The :doc:`GeoJSON serializer </ref/contrib/gis/serializers>` now outputs the "
"``id`` key for serialized features, which defaults to the primary key of "
"objects."
msgstr ""

msgid ""
"The :class:`~django.contrib.gis.gdal.GDALRaster` class now supports :class:"
"`pathlib.Path`."
msgstr ""

msgid ""
"The :class:`~django.contrib.gis.geoip2.GeoIP2` class now supports  ``.mmdb`` "
"files downloaded from DB-IP."
msgstr ""

msgid ""
"The OpenLayers template widget no longer includes inline CSS (which also "
"removes the former ``map_css`` block) to better comply with a strict Content "
"Security Policy."
msgstr ""

msgid ""
":class:`~django.contrib.gis.forms.widgets.OpenLayersWidget` is now based on "
"OpenLayers 7.2.2 (previously 4.6.5)."
msgstr ""

msgid ""
"The new :lookup:`isempty` lookup and :class:`IsEmpty() <django.contrib.gis."
"db.models.functions.IsEmpty>` expression allow filtering empty geometries on "
"PostGIS."
msgstr ""

msgid ""
"The new :class:`FromWKB() <django.contrib.gis.db.models.functions.FromWKB>` "
"and :class:`FromWKT() <django.contrib.gis.db.models.functions.FromWKT>` "
"functions allow creating geometries from Well-known binary (WKB) and Well-"
"known text (WKT) representations."
msgstr ""

msgid ""
"The new :lookup:`trigram_strict_word_similar` lookup, and the :class:"
"`TrigramStrictWordSimilarity() <django.contrib.postgres.search."
"TrigramStrictWordSimilarity>` and :class:`TrigramStrictWordDistance() "
"<django.contrib.postgres.search.TrigramStrictWordDistance>` expressions "
"allow using trigram strict word similarity."
msgstr ""

msgid ""
"The :lookup:`arrayfield.overlap` lookup now supports ``QuerySet.values()`` "
"and ``values_list()`` as a right-hand side."
msgstr ""

msgid ""
"The new :meth:`.Sitemap.get_languages_for_item` method allows customizing "
"the list of languages for which the item is displayed."
msgstr ""

msgid ""
":class:`~django.contrib.staticfiles.storage.ManifestStaticFilesStorage` now "
"has experimental support for replacing paths to JavaScript modules in "
"``import`` and ``export`` statements with their hashed counterparts. If you "
"want to try it, subclass ``ManifestStaticFilesStorage`` and set the "
"``support_js_module_import_aggregation`` attribute to ``True``."
msgstr ""

msgid ""
"The new :attr:`.ManifestStaticFilesStorage.manifest_hash` attribute provides "
"a hash over all files in the manifest and changes whenever one of the files "
"changes."
msgstr ""

msgid ""
"The new ``\"assume_role\"`` option is now supported in :setting:`OPTIONS` on "
"PostgreSQL to allow specifying the :ref:`session role <database-role>`."
msgstr ""

msgid ""
"The new ``\"server_side_binding\"`` option is now supported in :setting:"
"`OPTIONS` on PostgreSQL with ``psycopg`` 3.1.8+ to allow using :ref:`server-"
"side binding cursors <database-server-side-parameters-binding>`."
msgstr ""

msgid ""
"The debug page now shows :pep:`exception notes <678>` and :pep:`fine-grained "
"error locations <657>` on Python 3.11+."
msgstr ""

msgid ""
"Session cookies are now treated as credentials and therefore hidden and "
"replaced with stars (``**********``) in error reports."
msgstr ""

msgid ""
":class:`~django.forms.ModelForm` now accepts the new ``Meta`` option "
"``formfield_callback`` to customize form fields."
msgstr ""

msgid ""
":func:`~django.forms.models.modelform_factory` now respects the "
"``formfield_callback`` attribute of the ``form``’s ``Meta``."
msgstr ""

msgid ""
"Added support and translations for the Central Kurdish (Sorani) language."
msgstr ""

msgid ""
"The :ref:`django-db-logger` logger now logs transaction management queries "
"(``BEGIN``, ``COMMIT``, and ``ROLLBACK``) at the ``DEBUG`` level."
msgstr ""

msgid ""
":djadmin:`makemessages` command now supports locales with private sub-tags "
"such as ``nl_NL-x-informal``."
msgstr ""

msgid ""
"The new :option:`makemigrations --update` option merges model changes into "
"the latest migration and optimizes the resulting operations."
msgstr ""

msgid "Migrations now support serialization of ``enum.Flag`` objects."
msgstr ""

msgid ""
"``QuerySet`` now extensively supports filtering against :ref:`window-"
"functions` with the exception of disjunctive filter lookups against window "
"functions when performing aggregation."
msgstr ""

msgid ""
":meth:`~.QuerySet.prefetch_related` now supports :class:`~django.db.models."
"Prefetch` objects with sliced querysets."
msgstr ""

msgid ""
":ref:`Registering lookups <lookup-registration-api>` on :class:`~django.db."
"models.Field` instances is now supported."
msgstr ""

msgid ""
"The new ``robust`` argument for :func:`~django.db.transaction.on_commit` "
"allows performing actions that can fail after a database transaction is "
"successfully committed."
msgstr ""

msgid ""
"The new :class:`KT() <django.db.models.fields.json.KT>` expression "
"represents the text value of a key, index, or path transform of :class:"
"`~django.db.models.JSONField`."
msgstr ""

msgid ""
":class:`~django.db.models.functions.Now` now supports microsecond precision "
"on MySQL and millisecond precision on SQLite."
msgstr ""

msgid ""
":class:`F() <django.db.models.F>` expressions that output ``BooleanField`` "
"can now be negated using ``~F()`` (inversion operator)."
msgstr ""

msgid ""
"``Model`` now provides asynchronous versions of some methods that use the "
"database, using an ``a`` prefix: :meth:`~.Model.adelete`, :meth:`~.Model."
"arefresh_from_db`, and :meth:`~.Model.asave`."
msgstr ""

msgid ""
"Related managers now provide asynchronous versions of methods that change a "
"set of related objects, using an ``a`` prefix: :meth:`~.RelatedManager."
"aadd`, :meth:`~.RelatedManager.aclear`, :meth:`~.RelatedManager.aremove`, "
"and :meth:`~.RelatedManager.aset`."
msgstr ""

msgid ""
":attr:`CharField.max_length <django.db.models.CharField.max_length>` is no "
"longer required to be set on PostgreSQL, which supports unlimited "
"``VARCHAR`` columns."
msgstr ""

msgid ""
":class:`~django.http.StreamingHttpResponse` now supports async iterators "
"when Django is served via ASGI."
msgstr ""

msgid ""
"The :option:`test --debug-sql` option now formats SQL queries with "
"``sqlparse``."
msgstr ""

msgid ""
"The :class:`~django.test.RequestFactory`, :class:`~django.test."
"AsyncRequestFactory`, :class:`~django.test.Client`, and :class:`~django.test."
"AsyncClient` classes now support the ``headers`` parameter, which accepts a "
"dictionary of header names and values. This allows a more natural syntax for "
"declaring headers."
msgstr ""

msgid ""
"The new ``encoder`` parameter for :meth:`django.utils.html.json_script` "
"function allows customizing a JSON encoder class."
msgstr ""

msgid ""
"The private internal vendored copy of ``urllib.parse.urlsplit()`` now strips "
"``'\\r'``, ``'\\n'``, and ``'\\t'`` (see :cve:`2022-0391` and :bpo:`43882`). "
"This is to protect projects that may be incorrectly using the internal "
"``url_has_allowed_host_and_scheme()`` function, instead of using one of the "
"documented functions for handling URL redirects. The Django functions were "
"not affected."
msgstr ""

msgid ""
"The new :func:`django.utils.http.content_disposition_header` function "
"returns a ``Content-Disposition`` HTTP header value as specified by :rfc:"
"`6266`."
msgstr ""

msgid ""
"The list of common passwords used by ``CommonPasswordValidator`` is updated "
"to the most recent version."
msgstr ""

msgid "Backwards incompatible changes in 4.2"
msgstr ""

msgid ""
"``DatabaseFeatures.allows_group_by_pk`` is removed as it only remained to "
"accommodate a MySQL extension that has been supplanted by proper functional "
"dependency detection in MySQL 5.7.15. Note that ``DatabaseFeatures."
"allows_group_by_selected_pks`` is still supported and should be enabled if "
"your backend supports functional dependency detection in ``GROUP BY`` "
"clauses as specified by the ``SQL:1999`` standard."
msgstr ""

msgid ""
":djadmin:`inspectdb` now uses ``display_size`` from ``DatabaseIntrospection."
"get_table_description()`` rather than ``internal_size`` for ``CharField``."
msgstr ""

msgid "Dropped support for MariaDB 10.3"
msgstr ""

msgid ""
"Upstream support for MariaDB 10.3 ends in May 2023. Django 4.2 supports "
"MariaDB 10.4 and higher."
msgstr ""

msgid "Dropped support for MySQL 5.7"
msgstr ""

msgid ""
"Upstream support for MySQL 5.7 ends in October 2023. Django 4.2 supports "
"MySQL 8 and higher."
msgstr ""

msgid "Dropped support for PostgreSQL 11"
msgstr ""

msgid ""
"Upstream support for PostgreSQL 11 ends in November 2023. Django 4.2 "
"supports PostgreSQL 12 and higher."
msgstr ""

msgid "Setting ``update_fields`` in ``Model.save()`` may now be required"
msgstr ""

msgid ""
"In order to avoid updating unnecessary columns, :meth:`.QuerySet."
"update_or_create` now passes ``update_fields`` to the :meth:`Model.save() "
"<django.db.models.Model.save>` calls. As a consequence, any fields modified "
"in the custom ``save()`` methods should be added to the ``update_fields`` "
"keyword argument before calling ``super()``. See :ref:`overriding-model-"
"methods` for more details."
msgstr ""

msgid ""
"The undocumented ``django.http.multipartparser.parse_header()`` function is "
"removed. Use ``django.utils.http.parse_header_parameters()`` instead."
msgstr ""

msgid ""
":ttag:`{% blocktranslate asvar … %}<blocktranslate>` result is now marked as "
"safe for (HTML) output purposes."
msgstr ""

msgid ""
"The ``autofocus`` HTML attribute in the admin search box is removed as it "
"can be confusing for screen readers."
msgstr ""

msgid ""
"The :option:`makemigrations --check` option no longer creates missing "
"migration files."
msgstr ""

msgid ""
"The ``alias`` argument for :meth:`.Expression.get_group_by_cols` is removed."
msgstr ""

msgid ""
"The minimum supported version of ``sqlparse`` is increased from 0.2.2 to "
"0.3.1."
msgstr ""

msgid ""
"The undocumented ``negated`` parameter of the :class:`~django.db.models."
"Exists` expression is removed."
msgstr ""

msgid ""
"The ``is_summary`` argument of the undocumented ``Query.add_annotation()`` "
"method is removed."
msgstr ""

msgid ""
"The minimum supported version of SQLite is increased from 3.9.0 to 3.21.0."
msgstr ""

msgid ""
"The minimum supported version of ``asgiref`` is increased from 3.5.2 to "
"3.6.0."
msgstr ""

msgid ""
":class:`~django.contrib.auth.forms.UserCreationForm` now rejects usernames "
"that differ only in case. If you need the previous behavior, use :class:"
"`~django.contrib.auth.forms.BaseUserCreationForm` instead."
msgstr ""

msgid ""
"The minimum supported version of ``mysqlclient`` is increased from 1.4.0 to "
"1.4.3."
msgstr ""

msgid ""
"The minimum supported version of ``argon2-cffi`` is increased  from 19.1.0 "
"to 19.2.0."
msgstr ""

msgid ""
"The minimum supported version of ``Pillow`` is increased from 6.2.0 to 6.2.1."
msgstr ""

msgid ""
"The minimum supported version of ``jinja2`` is increased from 2.9.2 to "
"2.11.0."
msgstr ""

msgid ""
"The minimum supported version of :pypi:`redis-py <redis>` is increased from "
"3.0.0 to 3.4.0."
msgstr ""

msgid ""
"Manually instantiated ``WSGIRequest`` objects must be provided a file-like "
"object for ``wsgi.input``. Previously, Django was more lax than the expected "
"behavior as specified by the WSGI specification."
msgstr ""

msgid "Support for ``PROJ`` < 5 is removed."
msgstr ""

msgid ""
":class:`~django.core.mail.backends.smtp.EmailBackend` now verifies a :py:"
"attr:`hostname <ssl.SSLContext.check_hostname>` and :py:attr:`certificates "
"<ssl.SSLContext.verify_mode>`. If you need the previous behavior that is "
"less restrictive and not recommended, subclass ``EmailBackend`` and override "
"the ``ssl_context`` property."
msgstr ""

msgid "Features deprecated in 4.2"
msgstr ""

msgid "``index_together`` option is deprecated in favor of ``indexes``"
msgstr ""

msgid ""
"The :attr:`Meta.index_together <django.db.models.Options.index_together>` "
"option is deprecated in favor of the :attr:`~django.db.models.Options."
"indexes` option."
msgstr ""

msgid ""
"Migrating existing ``index_together`` should be handled as a migration. For "
"example::"
msgstr ""

msgid "Should become::"
msgstr ""

msgid ""
"Running the :djadmin:`makemigrations` command will generate a migration "
"containing a :class:`~django.db.migrations.operations.RenameIndex` operation "
"which will rename the existing index. Next, consider squashing migrations to "
"remove ``index_together`` from historical migrations."
msgstr ""

msgid ""
"The ``AlterIndexTogether`` migration operation is now officially supported "
"only for pre-Django 4.2 migration files. For backward compatibility reasons, "
"it's still part of the public API, and there's no plan to deprecate or "
"remove it, but it should not be used for new migrations. Use :class:`~django."
"db.migrations.operations.AddIndex` and :class:`~django.db.migrations."
"operations.RemoveIndex` operations instead."
msgstr ""

msgid "Passing encoded JSON string literals to ``JSONField`` is deprecated"
msgstr ""

msgid ""
"``JSONField`` and its associated lookups and aggregates used to allow "
"passing JSON encoded string literals which caused ambiguity on whether "
"string literals were already encoded from database backend's perspective."
msgstr ""

msgid ""
"During the deprecation period string literals will be attempted to be JSON "
"decoded and a warning will be emitted on success that points at passing non-"
"encoded forms instead."
msgstr ""

msgid "Code that use to pass JSON encoded string literals::"
msgstr ""

msgid ""
"From Django 5.1+ string literals will be implicitly interpreted as JSON "
"string literals."
msgstr ""

msgid ""
"The ``BaseUserManager.make_random_password()`` method is deprecated. See "
"`recipes and best practices <https://docs.python.org/3/library/secrets."
"html#recipes-and-best-practices>`_ for using Python's :py:mod:`secrets` "
"module to generate passwords."
msgstr ""

msgid ""
"The ``length_is`` template filter is deprecated in favor of :tfilter:"
"`length` and the ``==`` operator within an :ttag:`{% if %}<if>` tag. For "
"example"
msgstr ""

msgid "instead of:"
msgstr ""

msgid ""
"``django.contrib.auth.hashers.SHA1PasswordHasher``, ``django.contrib.auth."
"hashers.UnsaltedSHA1PasswordHasher``, and ``django.contrib.auth.hashers."
"UnsaltedMD5PasswordHasher`` are deprecated."
msgstr ""

msgid ""
"``django.contrib.postgres.fields.CICharField`` is deprecated in favor of "
"``CharField(db_collation=\"…\")`` with a case-insensitive non-deterministic "
"collation."
msgstr ""

msgid ""
"``django.contrib.postgres.fields.CIEmailField`` is deprecated in favor of "
"``EmailField(db_collation=\"…\")`` with a case-insensitive non-deterministic "
"collation."
msgstr ""

msgid ""
"``django.contrib.postgres.fields.CITextField`` is deprecated in favor of "
"``TextField(db_collation=\"…\")`` with a case-insensitive non-deterministic "
"collation."
msgstr ""

msgid "``django.contrib.postgres.fields.CIText`` mixin is deprecated."
msgstr ""

msgid ""
"The ``map_height`` and ``map_width`` attributes of ``BaseGeometryWidget`` "
"are deprecated, use CSS to size map widgets instead."
msgstr ""

msgid ""
"``SimpleTestCase.assertFormsetError()`` is deprecated in favor of "
"``assertFormSetError()``."
msgstr ""

msgid ""
"``TransactionTestCase.assertQuerysetEqual()`` is deprecated in favor of "
"``assertQuerySetEqual()``."
msgstr ""

msgid ""
"Passing positional arguments to ``Signer`` and ``TimestampSigner`` is "
"deprecated in favor of keyword-only arguments."
msgstr ""

msgid ""
"The ``DEFAULT_FILE_STORAGE`` setting is deprecated in favor of "
"``STORAGES[\"default\"]``."
msgstr ""

msgid ""
"The ``STATICFILES_STORAGE`` setting is deprecated in favor of "
"``STORAGES[\"staticfiles\"]``."
msgstr ""

msgid ""
"The ``django.core.files.storage.get_storage_class()`` function is deprecated."
msgstr ""

msgid "Django 4.2.1 release notes"
msgstr ""

msgid ""
"Django 4.2.1 fixes a security issue with severity \"low\" and several bugs "
"in 4.2."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of ``QuerySet.defer()`` "
"when deferring fields by attribute names (:ticket:`34458`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of :class:`~django."
"contrib.postgres.search.SearchVector` function with ``%`` characters (:"
"ticket:`34459`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused aggregation over query that "
"uses explicit grouping to group against the wrong columns (:ticket:`34464`)."
msgstr ""

msgid ""
"Reallowed, following a regression in Django 4.2, setting the "
"``\"cursor_factory\"`` option in :setting:`OPTIONS` on PostgreSQL (:ticket:"
"`34466`)."
msgstr ""

msgid ""
"Enforced UTF-8 client encoding on PostgreSQL, following a regression in "
"Django 4.2 (:ticket:`34470`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 where ``i18n_patterns()`` didn't respect "
"the ``prefix_default_language`` argument when a fallback language of the "
"default language was used (:ticket:`34455`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 where translated URLs of the default "
"language from ``i18n_patterns()`` with ``prefix_default_language`` set to "
"``False`` raised 404 errors for a request with a different language (:ticket:"
"`34515`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 where creating copies and deep copies of "
"``HttpRequest``, ``HttpResponse``, and their subclasses didn't always work "
"correctly (:ticket:`34482`, :ticket:`34484`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 where ``timesince`` and ``timeuntil`` "
"template filters returned incorrect results for a datetime with a non-UTC "
"timezone when a time difference is less than 1 day (:ticket:`34483`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of :class:`~django."
"contrib.postgres.search.SearchHeadline` function with ``psycopg`` 3 (:ticket:"
"`34486`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused incorrect "
"``ClearableFileInput`` margins in the admin (:ticket:`34506`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 where breadcrumbs didn't appear on admin "
"site app index views (:ticket:`34512`)."
msgstr ""

msgid ""
"Made squashing migrations reduce ``AddIndex``, ``RemoveIndex``, "
"``RenameIndex``, and ``CreateModel`` operations which allows removing a "
"deprecated ``Meta.index_together`` option from historical migrations and use "
"``Meta.indexes`` instead (:ticket:`34525`)."
msgstr ""

msgid "Django 4.2.2 release notes"
msgstr ""

msgid "*June 5, 2023*"
msgstr ""

msgid "Django 4.2.2 fixes several bugs in 4.2.1."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused an unnecessary ``DBMS_LOB."
"SUBSTR()`` wrapping in the ``__isnull`` and ``__exact=None`` lookups for "
"``TextField()``/``BinaryField()`` on Oracle (:ticket:`34544`)."
msgstr ""

msgid ""
"Restored, following a regression in Django 4.2, ``get_prep_value()`` call in "
"``JSONField`` subclasses (:ticket:`34539`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of ``QuerySet.defer()`` "
"when passing a ``ManyToManyField`` or ``GenericForeignKey`` reference. While "
"doing so is a no-op, it was allowed in older version (:ticket:`34570`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of ``QuerySet.only()`` "
"when passing a reverse ``OneToOneField`` reference (:ticket:`34612`)."
msgstr ""

msgid ""
"Fixed a bug in Django 4.2 where :option:`makemigrations --update` didn't "
"respect the ``--name`` option (:ticket:`34568`)."
msgstr ""

msgid ""
"Fixed a performance regression in Django 4.2 when compiling queries without "
"ordering (:ticket:`34580`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 where nonexistent stylesheet was linked on "
"a “Congratulations!” page (:ticket:`34588`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of ``QuerySet."
"aggregate()`` with expressions referencing other aggregates (:ticket:"
"`34551`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of ``QuerySet."
"aggregate()`` with aggregates referencing subqueries (:ticket:`34551`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of querysets on SQLite "
"when filtering on ``DecimalField`` against values outside of the defined "
"range (:ticket:`34590`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a serialization crash on a "
"``ManyToManyField`` without a natural key when its ``Manager``’s base "
"``QuerySet`` used ``select_related()`` (:ticket:`34620`)."
msgstr ""

msgid "Django 4.2.3 release notes"
msgstr ""

msgid ""
"Django 4.2.3 fixes a security issue with severity \"moderate\" and several "
"bugs in 4.2.2."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused incorrect alignment of timezone "
"warnings for ``DateField`` and ``TimeField`` in the admin (:ticket:`34645`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused incorrect highlighting of rows "
"in the admin changelist view when ``ModelAdmin.list_editable`` contained a "
"``BooleanField`` (:ticket:`34638`)."
msgstr ""

msgid "Django 4.2.4 release notes"
msgstr ""

msgid "*August 1, 2023*"
msgstr ""

msgid "Django 4.2.4 fixes several bugs in 4.2.3."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash of ``QuerySet."
"aggregate()`` with aggregates referencing window functions (:ticket:`34717`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused a crash when grouping by a "
"reference in a subquery (:ticket:`34748`)."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused aggregation over query that "
"uses explicit grouping by multi-valued annotations to group against the "
"wrong columns (:ticket:`34750`)."
msgstr ""

msgid "Django 4.2.5 release notes"
msgstr ""

msgid "*Expected September 4, 2023*"
msgstr ""

msgid "Django 4.2.5 fixes several bugs in 4.2.4."
msgstr ""

msgid ""
"Fixed a regression in Django 4.2 that caused an incorrect validation of "
"``CheckConstraints`` on ``__isnull`` lookups against ``JSONField`` (:ticket:"
"`34754`)."
msgstr ""

msgid "Release notes"
msgstr "Catatan terbitan"

msgid ""
"Release notes for the official Django releases. Each release note will tell "
"you what's new in each version, and will also describe any backwards-"
"incompatible changes made in that version."
msgstr ""
"Terbitan keamanan untuk terbitan Django secara resmi. Setiap terbitan "
"catatan akan memberitahu anda apa yang baru di setiap versi, dan akan juga "
"menggambarkan perubahan ketidaksesuaian-kebelakang apapun dibuat di versi "
"tersebut."

msgid ""
"For those :doc:`upgrading to a new version of Django</howto/upgrade-"
"version>`, you will need to check all the backwards-incompatible changes "
"and :doc:`deprecated features</internals/deprecation>` for each 'final' "
"release from the one after your current Django version, up to and including "
"the new version."
msgstr ""
"Untuk :doc:`upgrading to a new version of Django</howto/upgrade-version>` "
"tersebut, anda akan butuh memeriksa semua perubahan ketidaksesuaian-"
"kebelakang dan :doc:`deprecated features</internals/deprecation>` untuk "
"setiap terbitan 'akhir' dari satu setelah versi Django anda saat ini, sampai "
"dan menyertakan versi baru. "

msgid "Final releases"
msgstr "Terbitan akhir"

msgid ""
"Below are release notes through Django |version| and its patch releases. "
"Newer versions of the documentation contain the release notes for any later "
"releases."
msgstr ""
"Dibawah adalah terbitan catatan melalui Django |version| dan terbitan "
"tambalannya. Versi terbaru dari dokumentasi mengandung terbitan catatan "
"untuk setiap terbitan terakhir."

msgid "4.2 release"
msgstr ""

msgid "4.1 release"
msgstr ""

msgid "4.0 release"
msgstr ""

msgid "3.2 release"
msgstr ""

msgid "3.1 release"
msgstr ""

msgid "3.0 release"
msgstr ""

msgid "2.2 release"
msgstr ""

msgid "2.1 release"
msgstr ""

msgid "2.0 release"
msgstr "Terbitan 2.0"

msgid "1.11 release"
msgstr "Terbitan 1.11"

msgid "1.10 release"
msgstr "Terbitan 1.10"

msgid "1.9 release"
msgstr "Terbitan 1.9"

msgid "1.8 release"
msgstr "Terbitan 1.8"

msgid "1.7 release"
msgstr "Terbitan 1.7"

msgid "1.6 release"
msgstr "Terbitan 1.6"

msgid "1.5 release"
msgstr "Terbitan 1.5"

msgid "1.4 release"
msgstr "Terbitan 1.4"

msgid "1.3 release"
msgstr "Terbitan 1.3"

msgid "1.2 release"
msgstr "Terbitan 1.2"

msgid "1.1 release"
msgstr "Terbitan 1.1"

msgid "1.0 release"
msgstr "Terbitan 1.0"

msgid "Pre-1.0 releases"
msgstr "Terbitan pra-1.0"

msgid "Security releases"
msgstr "Terbitan keamanan"

msgid ""
"Whenever a security issue is disclosed via :doc:`Django's security policies "
"</internals/security>`, appropriate release notes are now added to all "
"affected release series."
msgstr ""
"Kapanpun sebuah masalah keamanan adalah terbongkar melalui :doc:`Django's "
"security policies </internals/security>`, terbitan catatan sesuai sekarang "
"ditambahkan ke semua rangkaian terbitan terpengaruh."

msgid ""
"Additionally, :doc:`an archive of disclosed security issues </releases/"
"security>` is maintained."
msgstr ""
"Tambahannya, :doc:`an archive of disclosed security issues </releases/"
"security>` dirawat."

msgid "Archive of security issues"
msgstr "Arsip dari masalah keamanan"

msgid ""
"Django's development team is strongly committed to responsible reporting and "
"disclosure of security-related issues, as outlined in :doc:`Django's "
"security policies </internals/security>`."
msgstr ""
"Tim pengembangan Django memiliki komitmen yang kuat untuk bertanggung jawab "
"melaorkan dan menyingkap dari masalah terkait-keamanan, sebagai diuraikan "
"di :doc:`Django's security policies </internals/security>`."

msgid ""
"As part of that commitment, we maintain the following historical list of "
"issues which have been fixed and disclosed. For each issue, the list below "
"includes the date, a brief description, the `CVE identifier <https://en."
"wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures>`_ if applicable, a "
"list of affected versions, a link to the full disclosure and links to the "
"appropriate patch(es)."
msgstr ""
"Sebagai bagian dari komitmen itu, kami merawat daftar riwayat berikut dari "
"masalah yang telah diperbaiki dan diungkapkan. Untuk setiap masalah, daftar "
"dibawah termasuk tanggal, gambaran singkat `CVE identifier <https://en."
"wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures>`_ jika "
"diberlakukan, sebuah daftar dari versi terpengaruh, sebuah tautan pada "
"pengungkapan penuh dan tautan ke tambalan-tambalan yang sesuai."

msgid "Some important caveats apply to this information:"
msgstr "Beberapa peringatan penting berlaku pada informasi ini:"

msgid ""
"Lists of affected versions include only those versions of Django which had "
"stable, security-supported releases at the time of disclosure. This means "
"older versions (whose security support had expired) and versions which were "
"in pre-release (alpha/beta/RC) states at the time of disclosure may have "
"been affected, but are not listed."
msgstr ""
"Daftar dari versi terpengaruh termasuk hanya versi itu dari Django yang "
"stabil, terbitan dukungan-keamanan pada saat dari penyingkapan. Ini berarti "
"versi terlama (yang dukungan keamanan telah berakhir) dan versi yang berada "
"di pra-terbitan keadaan  (alpha/beta/RC) pada saat dari penyingkapan mungkin "
"telah terpengaruh, tetapi tidak terdaftar."

msgid ""
"The Django project has on occasion issued security advisories, pointing out "
"potential security problems which can arise from improper configuration or "
"from other issues outside of Django itself. Some of these advisories have "
"received CVEs; when that is the case, they are listed here, but as they have "
"no accompanying patches or releases, only the description, disclosure and "
"CVE will be listed."
msgstr ""
"Proyek Django terkadang menerbitkan saran keamanan, menunjuk kemungkinan "
"masalah keamanan yang dapat muncul dari konfigurasi tidak sesuai atau dari "
"masalah-masalah lain diluar Django itu sendiri. Beberapa dari saran-saran "
"ini telah menerima CVE; ketika itu adalah kasus, mereka didaftarkan disini, "
"tetapi karena mereka tidak mempunyai tambalan atau terbitan yang "
"mendampingi, hanya gambaran, penyingkapan dan CVE akan didaftarkan."

msgid "Issues under Django's security process"
msgstr "Masalah dibawah pengolahan keamanan Django"

msgid ""
"All security issues have been handled under versions of Django's security "
"process. These are listed below."
msgstr ""

msgid "July 3, 2023 - :cve:`2023-36053`"
msgstr ""

msgid ""
"Potential regular expression denial of service vulnerability in "
"``EmailValidator``/``URLValidator``. `Full description <https://www."
"djangoproject.com/weblog/2023/jul/03/security-releases/>`__"
msgstr ""

msgid "Django 4.2 :commit:`(patch) <b7c5feb35a31799de6e582ad6a5a91a9de74e0f9>`"
msgstr ""

msgid "Django 4.1 :commit:`(patch) <beb3f3d55940d9aa7198bf9d424ab74e873aec3d>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <454f2fb93437f98917283336201b4048293f7582>`"
msgstr ""

msgid "May 3, 2023 - :cve:`2023-31047`"
msgstr ""

msgid ""
"Potential bypass of validation when uploading multiple files using one form "
"field. `Full description <https://www.djangoproject.com/weblog/2023/may/03/"
"security-releases/>`__"
msgstr ""

msgid "Django 4.2 :commit:`(patch) <21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd>`"
msgstr ""

msgid "Django 4.1 :commit:`(patch) <e7c3a2ccc3a562328600be05068ed9149e12ce64>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <eed53d0011622e70b936e203005f0e6f4ac48965>`"
msgstr ""

msgid "February 14, 2023 - :cve:`2023-24580`"
msgstr ""

msgid ""
"Potential denial-of-service vulnerability in file uploads. `Full description "
"<https://www.djangoproject.com/weblog/2023/feb/14/security-releases/>`__"
msgstr ""

msgid "Django 4.1 :commit:`(patch) <628b33a854a9c68ec8a0c51f382f304a0044ec92>`"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <83f1ea83e4553e211c1c5a0dfc197b66d4e50432>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <a665ed5179f5bbd3db95ce67286d0192eff041d8>`"
msgstr ""

msgid "February 1, 2023 - :cve:`2023-23969`"
msgstr ""

msgid ""
"Potential denial-of-service via ``Accept-Language`` headers. `Full "
"description <https://www.djangoproject.com/weblog/2023/feb/01/security-"
"releases/>`__"
msgstr ""

msgid "Django 4.1 :commit:`(patch) <9d7bd5a56b1ce0576e8e07a8001373576d277942>`"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <4452642f193533e288a52c02efb5bbc766a68f95>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <c7e0151fdf33e1b11d488b6f67b94fdf3a30614a>`"
msgstr ""

msgid "October 4, 2022 - :cve:`2022-41323`"
msgstr ""

msgid ""
"Potential denial-of-service vulnerability in internationalized URLs. `Full "
"description <https://www.djangoproject.com/weblog/2022/oct/04/security-"
"releases/>`__"
msgstr ""

msgid "Django 4.1 :commit:`(patch) <9d656ea51d9ea7105c0c0785783ac29d426a7d25>`"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <5b6b257fa7ec37ff27965358800c67e2dd11c924>`"
msgstr ""

msgid "August 3, 2022 - :cve:`2022-36359`"
msgstr ""

msgid ""
"Potential reflected file download vulnerability in FileResponse. `Full "
"description <https://www.djangoproject.com/weblog/2022/aug/03/security-"
"releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <b3e4494d759202a3b6bf247fd34455bf13be5b80>`"
msgstr ""

msgid "July 4, 2022 - :cve:`2022-34265`"
msgstr ""

msgid ""
"Potential SQL injection via ``Trunc(kind)`` and ``Extract(lookup_name)`` "
"arguments. `Full description <https://www.djangoproject.com/weblog/2022/"
"jul/04/security-releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <0dc9c016fadb71a067e5a42be30164e3f96c0492>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <a9010fe5555e6086a9d9ae50069579400ef0685e>`"
msgstr ""

msgid "April 11, 2022 - :cve:`2022-28346`"
msgstr ""

msgid ""
"Potential SQL injection in ``QuerySet.annotate()``, ``aggregate()``, and "
"``extra()``. `Full description <https://www.djangoproject.com/weblog/2022/"
"apr/11/security-releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <800828887a0509ad1162d6d407e94d8de7eafc60>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <2044dac5c6968441be6f534c4139bcf48c5c7e48>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <2c09e68ec911919360d5f8502cefc312f9e03c5d>`"
msgstr ""

msgid "April 11, 2022 - :cve:`2022-28347`"
msgstr ""

msgid ""
"Potential SQL injection via ``QuerySet.explain(**options)`` on PostgreSQL. "
"`Full description <https://www.djangoproject.com/weblog/2022/apr/11/security-"
"releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <00b0fc50e1738c7174c495464a5ef069408a4402>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <9e19accb6e0a00ba77d5a95a91675bf18877c72d>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <29a6c98b4c13af82064f993f0acc6e8fafa4d3f5>`"
msgstr ""

msgid "February 1, 2022 - :cve:`2022-22818`"
msgstr ""

msgid ""
"Possible XSS via ``{% debug %}`` template tag. `Full description <https://"
"www.djangoproject.com/weblog/2022/feb/01/security-releases/>`__"
msgstr ""

msgid "Versions affected"
msgstr "Versi terpengaruh"

msgid "Django 4.0 :commit:`(patch) <01422046065d2b51f8f613409cad2c81b39487e5>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <1a1e8278c46418bde24c86a65443b0674bae65e2>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <c27a7eb9f40b64990398978152e62b6ff839c2e6>`"
msgstr ""

msgid "February 1, 2022 - :cve:`2022-23833`"
msgstr ""

msgid ""
"Denial-of-service possibility in file uploads. `Full description <https://"
"www.djangoproject.com/weblog/2022/feb/01/security-releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <f9c7d48fdd6f198a6494a9202f90242f176e4fc9>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <d16133568ef9c9b42cb7a08bdf9ff3feec2e5468>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <c477b761804984c932704554ad35f78a2e230c6a>`"
msgstr ""

msgid "January 4, 2022 - :cve:`2021-45452`"
msgstr ""

msgid ""
"Potential directory-traversal via ``Storage.save()``. `Full description "
"<https://www.djangoproject.com/weblog/2022/jan/04/security-releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <e1592e0f26302e79856cc7f2218ae848ae19b0f6>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <8d2f7cff76200cbd2337b2cf1707e383eb1fb54b>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <4cb35b384ceef52123fc66411a73c36a706825e1>`"
msgstr ""

msgid "January 4, 2022 - :cve:`2021-45116`"
msgstr ""

msgid ""
"Potential information disclosure in ``dictsort`` template filter. `Full "
"description <https://www.djangoproject.com/weblog/2022/jan/04/security-"
"releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <2a8ec7f546d6d5806e221ec948c5146b55bd7489>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <c7fe895bca06daf12cc1670b56eaf72a1ef27a16>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <c9f648ccfac5ab90fb2829a66da4f77e68c7f93a>`"
msgstr ""

msgid "January 4, 2022 - :cve:`2021-45115`"
msgstr ""

msgid ""
"Denial-of-service possibility in ``UserAttributeSimilarityValidator``. `Full "
"description <https://www.djangoproject.com/weblog/2022/jan/04/security-"
"releases/>`__"
msgstr ""

msgid "Django 4.0 :commit:`(patch) <df79ef03ac867c93caaa6be56bc69e66abfeef8f>`"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <a8b32fe13bcaed1c0b772fdc53de84abc224fb20>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <2135637fdd5ce994de110affef9e67dffdf77277>`"
msgstr ""

msgid "December 7, 2021 - :cve:`2021-44420`"
msgstr ""

msgid ""
"Potential bypass of an upstream access control based on URL paths. `Full "
"description <https://www.djangoproject.com/weblog/2021/dec/07/security-"
"releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <333c65603032c377e682cdbd7388657a5463a05a>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <22bd17488159601bf0741b70ae7932bffea8eced>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <7cf7d74e8a754446eeb85cacf2fef1247e0cb6d7>`"
msgstr ""

msgid "July 1, 2021 - :cve:`2021-35042`"
msgstr ""

msgid ""
"Potential SQL injection via unsanitized ``QuerySet.order_by()`` input. `Full "
"description <https://www.djangoproject.com/weblog/2021/jul/01/security-"
"releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <a34a5f724c5d5adb2109374ba3989ebb7b11f81f>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <0bd57a879a0d54920bb9038a732645fb917040e9>`"
msgstr ""

msgid "June 2, 2021 - :cve:`2021-33203`"
msgstr ""

msgid ""
"Potential directory traversal via ``admindocs``. `Full description <https://"
"www.djangoproject.com/weblog/2021/jun/02/security-releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <dfaba12cda060b8b292ae1d271b44bf810b1c5b9>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <20c67a0693c4ede2b09af02574823485e82e4c8f>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <053cc9534d174dc89daba36724ed2dcb36755b90>`"
msgstr ""

msgid "June 2, 2021 - :cve:`2021-33571`"
msgstr ""

msgid ""
"Possible indeterminate SSRF, RFI, and LFI attacks since validators accepted "
"leading zeros in IPv4 addresses. `Full description <https://www."
"djangoproject.com/weblog/2021/jun/02/security-releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <f27c38ab5d90f68c9dd60cabef248a570c0be8fc>`"
msgstr ""

msgid "May 6, 2021 - :cve:`2021-32052`"
msgstr ""

msgid ""
"Header injection possibility since ``URLValidator`` accepted newlines in "
"input on Python 3.9.5+. `Full description <https://www.djangoproject.com/"
"weblog/2021/may/06/security-releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <2d2c1d0c97832860fbd6597977e2aae17dd7e5b2>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <afb23f5929944a407e4990edef1c7806a94c9879>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <d9594c4ea57b6309d93879805302cec9ae9f23ff>`"
msgstr ""

msgid "May 4, 2021 - :cve:`2021-31542`"
msgstr ""

msgid ""
"Potential directory-traversal via uploaded files. `Full description <https://"
"www.djangoproject.com/weblog/2021/may/04/security-releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <c98f446c188596d4ba6de71d1b77b4a6c5c2a007>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <25d84d64122c15050a0ee739e859f22ddab5ac48>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <04ac1624bdc2fa737188401757cf95ced122d26d>`"
msgstr ""

msgid "April 6, 2021 - :cve:`2021-28658`"
msgstr ""

msgid ""
"Potential directory-traversal via uploaded files. `Full description <https://"
"www.djangoproject.com/weblog/2021/apr/06/security-releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <2820fd1be5dfccbf1216c3845fad8580502473e1>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <cca0d98118cccf9ae0c6dcf2d6c57fc50469fbf0>`"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <e7fba62248f604c76da4f23dcf1db4a57b0808ea>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <4036d62bda0e9e9f6172943794b744a454ca49c2>`"
msgstr ""

msgid "February 19, 2021 - :cve:`2021-23336`"
msgstr ""

msgid ""
"Web cache poisoning via ``django.utils.http.limited_parse_qsl()``. `Full "
"description <https://www.djangoproject.com/weblog/2021/feb/19/security-"
"releases/>`__"
msgstr ""

msgid "Django 3.2 :commit:`(patch) <be8237c7cce24b06aabde0b97afce98ddabbe3b6>`"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <8f6d431b08cbb418d9144b976e7b972546607851>`"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <326a926beef869d3341bc9ef737887f0449b6b71>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <fd6b6afd5959b638c62dbf4839ccff97e7f7dfda>`"
msgstr ""

msgid "February 1, 2021 - :cve:`2021-3281`"
msgstr ""

msgid ""
"Potential directory-traversal via ``archive.extract()``. `Full description "
"<https://www.djangoproject.com/weblog/2021/feb/01/security-releases/>`__"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <02e6592835b4559909aa3aaaf67988fef435f624>`"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <52e409ed17287e9aabda847b6afe58be2fa9f86a>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <21e7622dec1f8612c85c2fc37fe8efbfd3311e37>`"
msgstr ""

msgid "September 1, 2020 - :cve:`2020-24584`"
msgstr ""

msgid ""
"Permission escalation in intermediate-level directories of the file system "
"cache on Python 3.7+. `Full description <https://www.djangoproject.com/"
"weblog/2020/sep/01/security-releases/>`__"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b>`"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <cdb367c92a0ba72ddc0cbd13ff42b0e6df709554>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f>`"
msgstr ""

msgid "September 1, 2020 - :cve:`2020-24583`"
msgstr ""

msgid ""
"Incorrect permissions on intermediate-level directories on Python 3.7+. "
"`Full description <https://www.djangoproject.com/weblog/2020/sep/01/security-"
"releases/>`__"
msgstr ""

msgid "Django 3.1 :commit:`(patch) <934430d22aa5d90c2ba33495ff69a6a1d997d584>`"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <08892bffd275c79ee1f8f67639eb170aaaf1181e>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <375657a71c889c588f723469bd868bd1d40c369f>`"
msgstr ""

msgid "June 3, 2020 - :cve:`2020-13596`"
msgstr ""

msgid ""
"Possible XSS via admin ``ForeignKeyRawIdWidget``. `Full description <https://"
"www.djangoproject.com/weblog/2020/jun/03/security-releases/>`__"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <1f2dd37f6fcefdd10ed44cb233b2e62b520afb38>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <6d61860b22875f358fac83d903dc629897934815>`"
msgstr ""

msgid "June 3, 2020 - :cve:`2020-13254`"
msgstr ""

msgid ""
"Potential data leakage via malformed memcached keys. `Full description "
"<https://www.djangoproject.com/weblog/2020/jun/03/security-releases/>`__"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <84b2da5552e100ae3294f564f6c862fef8d0e693>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <07e59caa02831c4569bbebb9eb773bdd9cb4b206>`"
msgstr ""

msgid "March 4, 2020 - :cve:`2020-9402`"
msgstr ""

msgid ""
"Potential SQL injection via ``tolerance`` parameter in GIS functions and "
"aggregates on Oracle. `Full description <https://www.djangoproject.com/"
"weblog/2020/mar/04/security-releases/>`__"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <26a5cf834526e291db00385dd33d319b8271fc4c>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <fe886a3b58a93cfbe8864b485f93cb6d426cd1f2>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <02d97f3c9a88adc890047996e5606180bd1c6166>`"
msgstr ""

msgid "February 3, 2020 - :cve:`2020-7471`"
msgstr ""

msgid ""
"Potential SQL injection via ``StringAgg(delimiter)``. `Full description "
"<https://www.djangoproject.com/weblog/2020/feb/03/security-releases/>`__"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <505826b469b16ab36693360da9e11fd13213421b>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <c67a368c16e4680b324b4f385398d638db4d8147>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <001b0634cd309e372edb6d7d95d083d02b8e37bd>`"
msgstr ""

msgid "December 18, 2019 - :cve:`2019-19844`"
msgstr ""

msgid ""
"Potential account hijack via password reset form. `Full description <https://"
"www.djangoproject.com/weblog/2019/dec/18/security-releases/>`__"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <302a4ff1e8b1c798aab97673909c7a3dfda42c26>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <4d334bea06cac63dc1272abcec545b85136cca0e>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <f4cff43bf921fcea6a29b726eb66767f67753fa2>`"
msgstr ""

msgid "December 2, 2019 - :cve:`2019-19118`"
msgstr ""

msgid ""
"Privilege escalation in the Django admin. `Full description <https://www."
"djangoproject.com/weblog/2019/dec/02/security-releases/>`__"
msgstr ""

msgid "Django 3.0 :commit:`(patch) <092cd66cf3c3e175acce698d6ca2012068d878fa>`"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <36f580a17f0b3cb087deadf3b65eea024f479c21>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <103ebe2b5ff1b2614b85a52c239f471904d26244>`"
msgstr ""

msgid "August 1, 2019 - :cve:`2019-14235`"
msgstr ""

msgid ""
"Potential memory exhaustion in ``django.utils.encoding.uri_to_iri()``. `Full "
"description <https://www.djangoproject.com/weblog/2019/aug/01/security-"
"releases/>`__"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <cf694e6852b0da7799f8b53f1fb2f7d20cf17534>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <5d50a2e5fa36ad23ab532fc54cf4073de84b3306>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <869b34e9b3be3a4cfcb3a145f218ffd3f5e3fd79>`"
msgstr ""

msgid "August 1, 2019 - :cve:`2019-14234`"
msgstr ""

msgid ""
"SQL injection possibility in key and index lookups for ``JSONField``/"
"``HStoreField``. `Full description <https://www.djangoproject.com/"
"weblog/2019/aug/01/security-releases/>`__"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <4f5b58f5cd3c57fee9972ab074f8dc6895d8f387>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <f74b3ae3628c26e1b4f8db3d13a91d52a833a975>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <ed682a24fca774818542757651bfba576c3fc3ef>`"
msgstr ""

msgid "August 1, 2019 - :cve:`2019-14233`"
msgstr ""

msgid ""
"Denial-of-service possibility in ``strip_tags()``. `Full description "
"<https://www.djangoproject.com/weblog/2019/aug/01/security-releases/>`__"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <e34f3c0e9ee5fc9022428fe91640638bafd4cda7>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <5ff8e791148bd451180124d76a55cb2b2b9556eb>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <52479acce792ad80bb0f915f20b835f919993c72>`"
msgstr ""

msgid "August 1, 2019 - :cve:`2019-14232`"
msgstr ""

msgid ""
"Denial-of-service possibility in ``django.utils.text.Truncator``. `Full "
"description <https://www.djangoproject.com/weblog/2019/aug/01/security-"
"releases/>`__"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <c3289717c6f21a8cf23daff1c78c0c014b94041f>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <c23723a1551340cc7d3126f04fcfd178fa224193>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <42a66e969023c00536256469f0e8b8a099ef109d>`"
msgstr ""

msgid "July 1, 2019 - :cve:`2019-12781`"
msgstr ""

msgid ""
"Incorrect HTTP detection with reverse-proxy connecting via HTTPS. `Full "
"description <https://www.djangoproject.com/weblog/2019/jul/01/security-"
"releases/>`__"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <77706a3e4766da5d5fb75c4db22a0a59a28e6cd6>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <1e40f427bb8d0fb37cc9f830096a97c36c97af6f>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <32124fc41e75074141b05f10fc55a4f01ff7f050>`"
msgstr ""

msgid "June 3, 2019 - :cve:`2019-12308`"
msgstr ""

msgid ""
"XSS via \"Current URL\" link generated by ``AdminURLFieldWidget``. `Full "
"description <https://www.djangoproject.com/weblog/2019/jun/03/security-"
"releases/>`__"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <afddabf8428ddc89a332f7a78d0d21eaf2b5a673>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <09186a13d975de6d049f8b3e05484f66b01ece62>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <c238701859a52d584f349cce15d56c8e8137c52b>`"
msgstr ""

msgid "June 3, 2019 - :cve:`2019-11358`"
msgstr ""

msgid ""
"Prototype pollution in bundled jQuery. `Full description <https://www."
"djangoproject.com/weblog/2019/jun/03/security-releases/>`__"
msgstr ""

msgid "Django 2.2 :commit:`(patch) <baaf187a4e354bf3976c51e2c83a0d2f8ee6e6ad>`"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <95649bc08547a878cebfa1d019edec8cb1b80829>`"
msgstr ""

msgid "February 11, 2019 - :cve:`2019-6975`"
msgstr ""

msgid ""
"Memory exhaustion in ``django.utils.numberformat.format()``. `Full "
"description <https://www.djangoproject.com/weblog/2019/feb/11/security-"
"releases/>`__"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <40cd19055773705301c3428ed5e08a036d2091f3>`"
msgstr ""

msgid ""
"Django 2.0 :commit:`(patch <1f42f82566c9d2d73aff1c42790d6b1b243f7676>` and :"
"commit:`correction) <392e040647403fc8007708d52ce01d915b014849>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <0bbb560183fabf0533289700845dafa94951f227>`"
msgstr ""

msgid "January 4, 2019 - :cve:`2019-3498`"
msgstr ""

msgid ""
"Content spoofing possibility in the default 404 page. `Full description "
"<https://www.djangoproject.com/weblog/2019/jan/04/security-releases/>`__"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <64d2396e83aedba3fcc84ca40f23fbd22f0b9b5b>`"
msgstr ""

msgid "Django 2.0 :commit:`(patch) <9f4ed7c94c62e21644ef5115e393ac426b886f2e>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <1cd00fcf52d089ef0fe03beabd05d59df8ea052a>`"
msgstr ""

msgid "October 1, 2018 - :cve:`2018-16984`"
msgstr ""

msgid ""
"Password hash disclosure to \"view only\" admin users. `Full description "
"<https://www.djangoproject.com/weblog/2018/oct/01/security-release/>`__"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <c4bd5b597e0aa2432e4c867b86650f18af117851>`"
msgstr ""

msgid "August 1, 2018 - :cve:`2018-14574`"
msgstr ""

msgid ""
"Open redirect possibility in ``CommonMiddleware``. `Full description "
"<https://www.djangoproject.com/weblog/2018/aug/01/security-releases/>`__"
msgstr ""

msgid "Django 2.1 :commit:`(patch) <c4e5ff7fdb5fce447675e90291fd33fddd052b3c>`"
msgstr ""

msgid "Django 2.0 :commit:`(patch) <6fffc3c6d420e44f4029d5643f38d00a39b08525>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <d6eaee092709aad477a9894598496c6deec532ff>`"
msgstr ""

msgid "March 6, 2018 - :cve:`2018-7537`"
msgstr ""

msgid ""
"Denial-of-service possibility in ``truncatechars_html`` and "
"``truncatewords_html`` template filters. `Full description <https://www."
"djangoproject.com/weblog/2018/mar/06/security-releases/>`__"
msgstr ""

msgid "Django 2.0 :commit:`(patch) <94c5da1d17a6b0d378866c66b605102c19f7988c>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <a91436360b79a6ff995c3e5018bcc666dfaf1539>`"
msgstr ""

msgid ""
"Django 1.8  :commit:`(patch) <d17974a287a6ea2e361daff88fcc004cbd6835fa>`"
msgstr ""

msgid "March 6, 2018 - :cve:`2018-7536`"
msgstr ""

msgid ""
"Denial-of-service possibility in ``urlize`` and ``urlizetrunc`` template "
"filters. `Full description <https://www.djangoproject.com/weblog/2018/mar/06/"
"security-releases/>`__"
msgstr ""

msgid "Django 2.0 :commit:`(patch) <e157315da3ae7005fa0683ffc9751dbeca7306c8>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <abf89d729f210c692a50e0ad3f75fb6bec6fae16>`"
msgstr ""

msgid ""
"Django 1.8  :commit:`(patch) <1ca63a66ef3163149ad822701273e8a1844192c2>`"
msgstr ""

msgid "February 1, 2018 - :cve:`2018-6188`"
msgstr ""

msgid ""
"Information leakage in ``AuthenticationForm``. `Full description <https://"
"www.djangoproject.com/weblog/2018/feb/01/security-releases/>`__"
msgstr ""

msgid "Django 2.0 :commit:`(patch) <c37bb28677295f6edda61d8ac461014ef0d3aeb2>`"
msgstr ""

msgid ""
"Django 1.11 :commit:`(patch) <57b95fedad5e0b83fc9c81466b7d1751c6427aae>`"
msgstr ""

msgid "September 5, 2017 - :cve:`2017-12794`"
msgstr "5 September 2017 - :cve:`2017-12794`"

msgid ""
"Possible XSS in traceback section of technical 500 debug page. `Full "
"description <https://www.djangoproject.com/weblog/2017/sep/05/security-"
"releases/>`__"
msgstr ""
"Kemungkinan XSS di melacak kembali bagian dari halaman teknis mencari "
"kesalahan 500. `Full description <https://www.djangoproject.com/weblog/2017/"
"sep/05/security-releases/>`__"

msgid ""
"Django 1.11 :commit:`(patch) <e35a0c56086924f331e9422daa266e907a4784cc>`"
msgstr ""

msgid ""
"Django 1.10 :commit:`(patch) <58e08e80e362db79eb0fd775dc81faad90dca47a>`"
msgstr ""

msgid "April 4, 2017 - :cve:`2017-7234`"
msgstr "4 April 2017 -  :cve:`2017-7234`"

msgid ""
"Open redirect vulnerability in ``django.views.static.serve()``. `Full "
"description <https://www.djangoproject.com/weblog/2017/apr/04/security-"
"releases/>`__"
msgstr ""
"Membuka kerentanan pangalihan dalam ``django.views.static.serve()``. `Full "
"description <https://www.djangoproject.com/weblog/2017/apr/04/security-"
"releases/>`__  "

msgid ""
"Django 1.10 :commit:`(patch) <2a9f6ef71b8e23fd267ee2be1be26dde8ab67037>`"
msgstr ""

msgid "Django 1.9 :commit:`(patch) <5f1ffb07afc1e59729ce2b283124116d6c0659e4>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <4a6b945dffe8d10e7cec107d93e6efaebfbded29>`"
msgstr ""

msgid "April 4, 2017 - :cve:`2017-7233`"
msgstr "4 April 2017 -  :cve:`2017-7233`"

msgid ""
"Open redirect and possible XSS attack via user-supplied numeric redirect "
"URLs. `Full description <https://www.djangoproject.com/weblog/2017/apr/04/"
"security-releases/>`__"
msgstr ""
"Dibuka pengalihan dan kemungkinan serangan XSS melalui URL pengalihan "
"numerik disokong-pengguna. `Full description <https://www.djangoproject.com/"
"weblog/2017/apr/04/security-releases/>`__"

msgid ""
"Django 1.10 :commit:`(patch) <f824655bc2c50b19d2f202d7640785caabc82787>`"
msgstr ""

msgid "Django 1.9 :commit:`(patch) <254326cb3682389f55f886804d2c43f7b9f23e4f>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <8339277518c7d8ec280070a780915304654e3b66>`"
msgstr ""

msgid "November 1, 2016 - :cve:`2016-9014`"
msgstr "1 November 2016 - :cve:`2016-9014`"

msgid ""
"DNS rebinding vulnerability when ``DEBUG=True``. `Full description <https://"
"www.djangoproject.com/weblog/2016/nov/01/security-releases/>`__"
msgstr ""
"Kerentanan mengikat kembali ketika ``DEBUG=True``. `Full description "
"<https://www.djangoproject.com/weblog/2016/nov/01/security-releases/>`__"

msgid ""
"Django 1.10 :commit:`(patch) <884e113838e5a72b4b0ec9e5e87aa480f6aa4472>`"
msgstr ""

msgid "Django 1.9 :commit:`(patch) <45acd6d836895a4c36575f48b3fb36a3dae98d19>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <c401ae9a7dfb1a94a8a61927ed541d6f93089587>`"
msgstr ""

msgid "November 1, 2016 - :cve:`2016-9013`"
msgstr "1 November 2016 - :cve:`2016-9013`"

msgid ""
"User with hardcoded password created when running tests on Oracle. `Full "
"description <https://www.djangoproject.com/weblog/2016/nov/01/security-"
"releases/>`__"
msgstr ""
"Pengguna dengan sandi kode keras sandi dibuat ketika menjalankan percobaan "
"pada Oracle. `Full description <https://www.djangoproject.com/weblog/2016/"
"nov/01/security-releases/>`__"

msgid ""
"Django 1.10 :commit:`(patch) <34e10720d81b8d407aa14d763b6a7fe8f13b4f2e>`"
msgstr ""

msgid "Django 1.9 :commit:`(patch) <4844d86c7728c1a5a3bbce4ad336a8d32304072b>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <70f99952965a430daf69eeb9947079aae535d2d0>`"
msgstr ""

msgid "September 26, 2016 - :cve:`2016-7401`"
msgstr "26 September 2016 - :cve:`2016-7401`"

msgid ""
"CSRF protection bypass on a site with Google Analytics. `Full description "
"<https://www.djangoproject.com/weblog/2016/sep/26/security-releases/>`__"
msgstr ""
"Pemotongan perlindungan CSRF pada situs dengan Google Analytics. `Full "
"description <https://www.djangoproject.com/weblog/2016/sep/26/security-"
"releases/>`__"

msgid "Django 1.9 :commit:`(patch) <d1bc980db1c0fffd6d60677e62f70beadb9fe64a>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <6118ab7d0676f0d622278e5be215f14fb5410b6a>`"
msgstr ""

msgid "July 18, 2016 - :cve:`2016-6186`"
msgstr "18 Juli 2016 - :cve:`2016-6186`"

msgid ""
"XSS in admin's add/change related popup. `Full description <https://www."
"djangoproject.com/weblog/2016/jul/18/security-releases/>`__"
msgstr ""
"XSS dalam popup terkait tambah/rubah admin. `Full description <https://www."
"djangoproject.com/weblog/2016/jul/18/security-releases/>`__"

msgid "Django 1.9 :commit:`(patch) <d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <f68e5a99164867ab0e071a936470958ed867479d>`"
msgstr ""

msgid "March 1, 2016 - :cve:`2016-2513`"
msgstr "1 Maret 2016 - :cve:`2016-2513`"

msgid ""
"User enumeration through timing difference on password hasher work factor "
"upgrade. `Full description <https://www.djangoproject.com/weblog/2016/mar/01/"
"security-releases/>`__"
msgstr ""
"Pendaftaran pengguna melalui perbedaan pewaktu pada peningkatan faktor "
"pekerjaan pengacak sandi. `Full description <https://www.djangoproject.com/"
"weblog/2016/mar/01/security-releases/>`__"

msgid "Django 1.9 :commit:`(patch) <af7d09b0c5c6ab68e629fd9baf736f9dd203b18e>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <f4e6e02f7713a6924d16540be279909ff4091eb6>`"
msgstr ""

msgid "March 1, 2016 - :cve:`2016-2512`"
msgstr "1 Maret 2016 - :cve:`2016-2512`"

msgid ""
"Malicious redirect and possible XSS attack via user-supplied redirect URLs "
"containing basic auth. `Full description <https://www.djangoproject.com/"
"weblog/2016/mar/01/security-releases/>`__"
msgstr ""
"Pengalihan dan kemungkinsn serangan XSS jelek melalui URL pengalihan "
"diberikan-pengguna mengandung autentifikasi dasar. `Full description "
"<https://www.djangoproject.com/weblog/2016/mar/01/security-releases/>`__"

msgid "Django 1.9 :commit:`(patch) <fc6d147a63f89795dbcdecb0559256470fff4380>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <382ab137312961ad62feb8109d70a5a581fe8350>`"
msgstr ""

msgid "February 1, 2016 - :cve:`2016-2048`"
msgstr "1 Februari 2016 - :cve:`2016-2048`"

msgid ""
"User with \"change\" but not \"add\" permission can create objects for "
"``ModelAdmin``’s with ``save_as=True``. `Full description <https://www."
"djangoproject.com/weblog/2016/feb/01/releases-192-and-189/>`__"
msgstr ""
"Pengguna dengan \"change\" tetapi tidak \"add\" perizinan dapat membuat "
"obyek untuk ``ModelAdmin`` dengan ``save_as=True``. `Full description "
"<https://www.djangoproject.com/weblog/2016/feb/01/releases-192-and-189/>`__"

msgid "Django 1.9 :commit:`(patch) <adbca5e4db42542575734b8e5d26961c8ada7265>`"
msgstr ""

msgid "November 24, 2015 - :cve:`2015-8213`"
msgstr "24 November 2015 - :cve:`2015-8213`"

msgid ""
"Settings leak possibility in ``date`` template filter. `Full description "
"<https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued/"
">`__"
msgstr ""
"Menyetel kemungkinan bocor di penyaring cetakan ``date``. `Full description "
"<https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued/"
">`__"

msgid "Django 1.8 :commit:`(patch) <9f83fc2f66f5a0bac7c291aec55df66050bb6991>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <8a01c6b53169ee079cb21ac5919fdafcc8c5e172>`"
msgstr ""

msgid "August 18, 2015 - :cve:`2015-5963` / :cve:`2015-5964`"
msgstr "18 Agustus 2015 - :cve:`2015-5963` / :cve:`2015-5964`"

msgid ""
"Denial-of-service possibility in ``logout()`` view by filling session store. "
"`Full description <https://www.djangoproject.com/weblog/2015/aug/18/security-"
"releases/>`__"
msgstr ""
"Kemungkinan denial-of-service di tampilan ``logout()`` dengan mengisi toko "
"sesi. `Full description <https://www.djangoproject.com/weblog/2015/aug/18/"
"security-releases/>`__"

msgid "Django 1.8 :commit:`(patch) <2eb86b01d7b59be06076f6179a454d0fd0afaff6>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <2f5485346ee6f84b4e52068c04e043092daf55f7>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <575f59f9bc7c59a5e41a081d1f5f55fc859c5012>`"
msgstr ""

msgid "July 8, 2015 - :cve:`2015-5145`"
msgstr "8 Juli 2015 - :cve:`2015-5145`"

msgid ""
"Denial-of-service possibility in URL validation. `Full description <https://"
"www.djangoproject.com/weblog/2015/jul/08/security-releases/>`__"
msgstr ""
"Kemungkinan denial-of-service di pengesahan URL. `Full description <https://"
"www.djangoproject.com/weblog/2015/jul/08/security-releases/>`__"

msgid "Django 1.8 :commit:`(patch) <8f9a4d3a2bc42f14bb437defd30c7315adbff22c>`"
msgstr ""

msgid "July 8, 2015 - :cve:`2015-5144`"
msgstr "8 Juli 2015 - :cve:`2015-5144`"

msgid ""
"Header injection possibility since validators accept newlines in input. "
"`Full description <https://www.djangoproject.com/weblog/2015/jul/08/security-"
"releases/>`__"
msgstr ""
"Kemungkinan suntikan kepala sejak pengesah menerima baris baru di masukan. "
"`Full description <https://www.djangoproject.com/weblog/2015/jul/08/security-"
"releases/>`__"

msgid "Django 1.8 :commit:`(patch) <574dd5e0b0fbb877ae5827b1603d298edc9bb2a0>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <ae49b4d994656bc037513dcd064cb9ce5bb85649>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <1ba1cdce7d58e6740fe51955d945b56ae51d072a>`"
msgstr ""

msgid "July 8, 2015 - :cve:`2015-5143`"
msgstr "8 Juli 2015 - :cve:`2015-5143`"

msgid ""
"Denial-of-service possibility by filling session store. `Full description "
"<https://www.djangoproject.com/weblog/2015/jul/08/security-releases/>`__"
msgstr ""
"Kemungkinan denial-of-service dengan mengisi toko sesi. `Full description "
"<https://www.djangoproject.com/weblog/2015/jul/08/security-releases/>`__"

msgid "Django 1.8 :commit:`(patch) <66d12d1ababa8f062857ee5eb43276493720bf16>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <1828f4341ec53a8684112d24031b767eba557663>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <2e47f3e401c29bc2ba5ab794d483cb0820855fb9>`"
msgstr ""

msgid "May 20, 2015 - :cve:`2015-3982`"
msgstr "20 Mei 2015 - :cve:`2015-3982`"

msgid ""
"Fixed session flushing in the cached_db backend. `Full description <https://"
"www.djangoproject.com/weblog/2015/may/20/security-release/>`__"
msgstr ""
"Diperbaiki pembilasan sesi di backend cached_db. `Full description <https://"
"www.djangoproject.com/weblog/2015/may/20/security-release/>`__"

msgid "Django 1.8 :commit:`(patch) <31cb25adecba930bdeee4556709f5a1c42d88fd6>`"
msgstr ""

msgid "March 18, 2015 - :cve:`2015-2317`"
msgstr "18 Maret 2015 - :cve:`2015-2317`"

msgid ""
"Mitigated possible XSS attack via user-supplied redirect URLs. `Full "
"description <https://www.djangoproject.com/weblog/2015/mar/18/security-"
"releases/>`__"
msgstr ""
"Dikurangi kemungkinan serangan XSS melalui URL pengalihan diberikan-"
"pengguna. `Full description <https://www.djangoproject.com/weblog/2015/"
"mar/18/security-releases/>`__"

msgid "Django 1.4 :commit:`(patch) <2342693b31f740a422abf7267c53b4e7bc487c1b>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <5510f070711540aaa8d3707776cd77494e688ef9>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <2a4113dbd532ce952308992633d802dc169a75f1>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <770427c2896a078925abfca2317486b284d22f04>`"
msgstr ""

msgid "March 18, 2015 - :cve:`2015-2316`"
msgstr "18 Maret 2015 - :cve:`2015-2316`"

msgid ""
"Denial-of-service possibility with ``strip_tags()``. `Full description "
"<https://www.djangoproject.com/weblog/2015/mar/18/security-releases/>`__"
msgstr ""
"Kemungkinan denial-of-service dengan ``strip_tags()``. `Full description "
"<https://www.djangoproject.com/weblog/2015/mar/18/security-releases/>`__"

msgid "Django 1.6 :commit:`(patch) <b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <e63363f8e075fa8d66326ad6a1cc3391cc95cd97>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <5447709a571cd5d95971f1d5d21d4a7edcf85bbd>`"
msgstr ""

msgid "March 9, 2015 - :cve:`2015-2241`"
msgstr "9 Maret 2015 - :cve:`2015-2241`"

msgid ""
"XSS attack via properties in ``ModelAdmin.readonly_fields``. `Full "
"description <https://www.djangoproject.com/weblog/2015/mar/09/security-"
"releases/>`__"
msgstr ""
"Serangan XSS melalui sifat di ``ModelAdmin.readonly_fields``. `Full "
"description <https://www.djangoproject.com/weblog/2015/mar/09/security-"
"releases/>`__"

msgid "Django 1.7 :commit:`(patch) <d16e4e1d6f95e6f46bff53cc4fd0ab398b8e5059>`"
msgstr ""

msgid "Django 1.8 :commit:`(patch) <2654e1b93923bac55f12b4e66c5e39b16695ace5>`"
msgstr ""

msgid "January 13, 2015 - :cve:`2015-0222`"
msgstr "13 januari 2015 - :cve:`2015-0222`"

msgid ""
"Database denial-of-service with ``ModelMultipleChoiceField``. `Full "
"description <https://www.djangoproject.com/weblog/2015/jan/13/security/>`__"
msgstr ""
"Denial-of-service basisdata dengan ``ModelMultipleChoiceField``. `Full "
"description <https://www.djangoproject.com/weblog/2015/jan/13/security/>`__"

msgid "Django 1.6 :commit:`(patch) <d7a06ee7e571b6dad07c0f5b519b1db02e2a476c>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <bcfb47780ce7caecb409a9e9c1c314266e41d392>`"
msgstr ""

msgid "January 13, 2015 - :cve:`2015-0221`"
msgstr "13 Januari 2015 - :cve:`2015-0221`"

msgid ""
"Denial-of-service attack against ``django.views.static.serve()``. `Full "
"description <https://www.djangoproject.com/weblog/2015/jan/13/security/>`__"
msgstr ""
"Serangan denial-of-service terhadap ``django.views.static.serve()``. `Full "
"description <https://www.djangoproject.com/weblog/2015/jan/13/security/>`__"

msgid "Django 1.4 :commit:`(patch) <d020da6646c5142bc092247d218a3d1ce3e993f7>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <553779c4055e8742cc832ed525b9ee34b174934f>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <818e59a3f0fbadf6c447754d202d88df025f8f2a>`"
msgstr ""

msgid "January 13, 2015 - :cve:`2015-0220`"
msgstr "13 Januari 2015 - :cve:`2015-0220`"

msgid ""
"Mitigated possible XSS attack via user-supplied redirect URLs. `Full "
"description <https://www.djangoproject.com/weblog/2015/jan/13/security/>`__"
msgstr ""
"Dikurangi kemungkinan serangan XSS melalui URL pengalihan diberikan-"
"pengguna. `Full description <https://www.djangoproject.com/weblog/2015/"
"jan/13/security/>`__"

msgid "Django 1.4 :commit:`(patch) <4c241f1b710da6419d9dca160e80b23b82db7758>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <72e0b033662faa11bb7f516f18a132728aa0ae28>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <de67dedc771ad2edec15c1d00c083a1a084e1e89>`"
msgstr ""

msgid "January 13, 2015 - :cve:`2015-0219`"
msgstr "13 Januari 2015 - :cve:`2015-0219`"

msgid ""
"WSGI header spoofing via underscore/dash conflation. `Full description "
"<https://www.djangoproject.com/weblog/2015/jan/13/security/>`__"
msgstr ""
"Menipu kepala WSGI melalui garis bawah/penggabungan tanda garis. `Full "
"description <https://www.djangoproject.com/weblog/2015/jan/13/security/>`__"

msgid "Django 1.4 :commit:`(patch) <4f6fffc1dc429f1ad428ecf8e6620739e8837450>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <d7597b31d5c03106eeba4be14a33b32a5e25f4ee>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <41b4bc73ee0da7b2e09f4af47fc1fd21144c710f>`"
msgstr ""

msgid "August 20, 2014 - :cve:`2014-0483`"
msgstr "20 Agustus 2014 - :cve:`2014-0483`"

msgid ""
"Data leakage via querystring manipulation in admin. `Full description "
"<https://www.djangoproject.com/weblog/2014/aug/20/security/>`__"
msgstr ""
"Kebocoran data melalui memanipulasi querystring di admin. `Full description "
"<https://www.djangoproject.com/weblog/2014/aug/20/security/>`__"

msgid "Django 1.4 :commit:`(patch) <027bd348642007617518379f8b02546abacaa6e0>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <2a446c896e7c814661fb9c4f212b071b2a7fa446>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <f7c494f2506250b8cb5923714360a3642ed63e0f>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <2b31342cdf14fc20e07c43d258f1e7334ad664a6>`"
msgstr ""

msgid "August 20, 2014 - :cve:`2014-0482`"
msgstr "20 Agustus 2014 - :cve:`2014-0482`"

msgid ""
"``RemoteUserMiddleware`` session hijacking. `Full description <https://www."
"djangoproject.com/weblog/2014/aug/20/security/>`__"
msgstr ""
"Pembajakan sesi ``RemoteUserMiddleware``. `Full description <https://www."
"djangoproject.com/weblog/2014/aug/20/security/>`__"

msgid "Django 1.4 :commit:`(patch) <c9e3b9949cd55f090591fbdc4a114fcb8368b6d9>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <dd68f319b365f6cb38c5a6c106faf4f6142d7d88>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <0268b855f9eab3377f2821164ef3e66037789e09>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <1a45d059c70385fcd6f4a3955f3b4e4cc96d0150>`"
msgstr ""

msgid "August 20, 2014 - :cve:`2014-0481`"
msgstr "20 Agustus 2014 - :cve:`2014-0481`"

msgid ""
"File upload denial of service. `Full description <https://www.djangoproject."
"com/weblog/2014/aug/20/security/>`__"
msgstr ""
"Unggah berkas denial of service. `Full description <https://www."
"djangoproject.com/weblog/2014/aug/20/security/>`__"

msgid "Django 1.4 :commit:`(patch) <30042d475bf084c6723c6217a21598d9247a9c41>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <26cd48e166ac4d84317c8ee6d63ac52a87e8da99>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <3123f8452cf49071be9110e277eea60ba0032216>`"
msgstr ""

msgid "August 20, 2014 - :cve:`2014-0480`"
msgstr "20 Agustus 2014 - :cve:`2014-0480`"

msgid ""
"``reverse()`` can generate URLs pointing to other hosts. `Full description "
"<https://www.djangoproject.com/weblog/2014/aug/20/security/>`__"
msgstr ""
"`reverse()`` dapat membangkitkan URL menunjuk ke rumah lain. `Full "
"description <https://www.djangoproject.com/weblog/2014/aug/20/security/>`__"

msgid "Django 1.4 :commit:`(patch) <c2fe73133b62a1d9e8f7a6b43966570b14618d7e>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <45ac9d4fb087d21902469fc22643f5201d41a0cd>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <da051da8df5e69944745072611351d4cfc6435d5>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <bf650a2ee78c6d1f4544a875dcc777cf27fe93e9>`"
msgstr ""

msgid "May 18, 2014 - :cve:`2014-3730`"
msgstr "18 Mei 2014 - :cve:`2014-3730`"

msgid ""
"Malformed URLs from user input incorrectly validated. `Full description "
"<https://www.djangoproject.com/weblog/2014/may/14/security-releases-issued/"
">`__"
msgstr ""
"URL jelek dari masukan pengguna tidak benar disahkan. `Full description "
"<https://www.djangoproject.com/weblog/2014/may/14/security-releases-issued/"
">`__"

msgid "Django 1.4 :commit:`(patch) <7feb54bbae3f637ab3c4dd4831d4385964f574df>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <ad32c218850ad40972dcef57beb460f8c979dd6d>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <601107524523bca02376a0ddc1a06c6fdb8f22f3>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <e7b0cace455c2da24492660636bfd48c45a19cdf>`"
msgstr ""

msgid "May 18, 2014 - :cve:`2014-1418`"
msgstr "18 Mei 2014 - :cve:`2014-1418`"

msgid ""
"Caches may be allowed to store and serve private data. `Full description "
"<https://www.djangoproject.com/weblog/2014/may/14/security-releases-issued/"
">`__"
msgstr ""
"Tembolok mungkin diizinkan untuk menyimpan dan melayani data pribadi. `Full "
"description <https://www.djangoproject.com/weblog/2014/may/14/security-"
"releases-issued/>`__"

msgid "Django 1.4 :commit:`(patch) <28e23306aa53bbbb8fb87db85f99d970b051026c>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <4001ec8698f577b973c5a540801d8a0bbea1205b>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <1abcf3a808b35abae5d425ed4d44cb6e886dc769>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <7fef18ba9e5a8b47bc24b5bb259c8bf3d3879f2a>`"
msgstr ""

msgid "April 21, 2014 - :cve:`2014-0474`"
msgstr "21 April 2014 - :cve:`2014-0474`"

msgid ""
"MySQL typecasting causes unexpected query results. `Full description "
"<https://www.djangoproject.com/weblog/2014/apr/21/security/>`__"
msgstr ""
"Typecast MySQL menyebabkan hasil permintaan yang tidak diharapkan. `Full "
"description <https://www.djangoproject.com/weblog/2014/apr/21/security/>`__"

msgid "Django 1.4 :commit:`(patch) <aa80f498de6d687e613860933ac58433ab71ea4b>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <985434fb1d6bf2335bf96c6ebf91c3674f1f399f>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <34526c2f56b863c2103655a0893ac801667e86ea>`"
msgstr ""

msgid "April 21, 2014 - :cve:`2014-0473`"
msgstr "21 April 2014 - :cve:`2014-0473`"

msgid ""
"Caching of anonymous pages could reveal CSRF token. `Full description "
"<https://www.djangoproject.com/weblog/2014/apr/21/security/>`__"
msgstr ""
"Cache dari halaman anonim dapat mengungkap token CSRF. `Full description "
"<https://www.djangoproject.com/weblog/2014/apr/21/security/>`__"

msgid "Django 1.4 :commit:`(patch) <1170f285ddd6a94a65f911a27788ba49ca08c0b0>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <6872f42757d7ef6a97e0b6ec5db4d2615d8a2bd8>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <d63e20942f3024f24cb8cd85a49461ba8a9b6736>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <380545bf85cbf17fc698d136815b7691f8d023ca>`"
msgstr ""

msgid "April 21, 2014 - :cve:`2014-0472`"
msgstr "21 April 2014 - :cve:`2014-0472`"

msgid ""
"Unexpected code execution using ``reverse()``. `Full description <https://"
"www.djangoproject.com/weblog/2014/apr/21/security/>`__"
msgstr ""
"Pengerjaan kode tidak diharapkan menggunakan ``reverse()``. `Full "
"description <https://www.djangoproject.com/weblog/2014/apr/21/security/>`__"

msgid "Django 1.4 :commit:`(patch) <c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <2a5bcb69f42b84464b24b5c835dca6467b6aa7f1>`"
msgstr ""

msgid "Django 1.6 :commit:`(patch) <4352a50871e239ebcdf64eee6f0b88e714015c1b>`"
msgstr ""

msgid "Django 1.7 :commit:`(patch) <546740544d7f69254a67b06a3fc7fa0c43512958>`"
msgstr ""

msgid "September 14, 2013 - :cve:`2013-1443`"
msgstr "14 September 2013 - :cve:`2013-1443`"

msgid ""
"Denial-of-service via large passwords. `Full description <https://www."
"djangoproject.com/weblog/2013/sep/15/security/>`__"
msgstr ""
"Denial-of-service melalui sandi besar. `Full description <https://www."
"djangoproject.com/weblog/2013/sep/15/security/>`__"

msgid ""
"Django 1.4 :commit:`(patch <3f3d887a6844ec2db743fee64c9e53e04d39a368>` and :"
"commit:`Python compatibility fix) <6903d1690a92aa040adfb0c8eb37cf62e4206714>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc>`"
msgstr ""

msgid "September 10, 2013 - :cve:`2013-4315`"
msgstr "10 September 2013 - :cve:`2013-4315`"

msgid ""
"Directory-traversal via ``ssi`` template tag. `Full description <https://www."
"djangoproject.com/weblog/2013/sep/10/security-releases-issued/>`__"
msgstr ""
"Lintasan-direktori melalui etiket cetakan ``ssi``. `Full description "
"<https://www.djangoproject.com/weblog/2013/sep/10/security-releases-issued/"
">`__"

msgid "Django 1.4 :commit:`(patch) <87d2750b39f6f2d54b7047225521a44dcd37e896>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <988b61c550d798f9a66d17ee0511fb7a9a7f33ca>`"
msgstr ""

msgid "August 13, 2013 - :cve:`2013-6044`"
msgstr "13 Agustus 2013 - :cve:`2013-6044`"

msgid ""
"Possible XSS via unvalidated URL redirect schemes. `Full description "
"<https://www.djangoproject.com/weblog/2013/aug/13/security-releases-issued/"
">`__"
msgstr ""
"Kemungkinan XSS melalui skema pengalihan URL tidak disahkan. `Full "
"description <https://www.djangoproject.com/weblog/2013/aug/13/security-"
"releases-issued/>`__"

msgid "Django 1.4 :commit:`(patch) <ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a>`"
msgstr ""

msgid "Django 1.5 :commit:`(patch) <1a274ccd6bc1afbdac80344c9b6e5810c1162b5f>`"
msgstr ""

msgid "August 13, 2013 - :cve:`2013-4249`"
msgstr "13 Agustus 2013 - :cve:`2013-4249`"

msgid ""
"XSS via admin trusting ``URLField`` values. `Full description <https://www."
"djangoproject.com/weblog/2013/aug/13/security-releases-issued/>`__"
msgstr ""
"XSS melalui nilai-nilai ``URLField`` dipercaya admin. `Full description "
"<https://www.djangoproject.com/weblog/2013/aug/13/security-releases-issued/"
">`__"

msgid "Django 1.5 :commit:`(patch) <90363e388c61874add3f3557ee654a996ec75d78>`"
msgstr ""

msgid "February 19, 2013 - :cve:`2013-0306`"
msgstr "19 Februari 2013 - :cve:`2013-0306`"

msgid ""
"Denial-of-service via formset ``max_num`` bypass. `Full description <https://"
"www.djangoproject.com/weblog/2013/feb/19/security/>`__"
msgstr ""
"Denial-of-service melalui memotong ``max_num`` formset. `Full description "
"<https://www.djangoproject.com/weblog/2013/feb/19/security/>`__"

msgid "Django 1.3 :commit:`(patch) <d7094bbce8cb838f3b40f504f198c098ff1cf727>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <0cc350a896f70ace18280410eb616a9197d862b0>`"
msgstr ""

msgid "February 19, 2013 - :cve:`2013-0305`"
msgstr "19 Februari 2013 - :cve:`2013-0305`"

msgid ""
"Information leakage via admin history log. `Full description <https://www."
"djangoproject.com/weblog/2013/feb/19/security/>`__"
msgstr ""
"Kebocoran informasi melalui catatan riwayat admin. `Full description "
"<https://www.djangoproject.com/weblog/2013/feb/19/security/>`__"

msgid "Django 1.3 :commit:`(patch) <d3a45e10c8ac8268899999129daa27652ec0da35>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <0e7861aec73702f7933ce2a93056f7983939f0d6>`"
msgstr ""

msgid "February 19, 2013 - :cve:`2013-1664` / :cve:`2013-1665`"
msgstr "19 Februari 2013 - :cve:`2013-1664` / :cve:`2013-1665`"

msgid ""
"Entity-based attacks against Python XML libraries. `Full description "
"<https://www.djangoproject.com/weblog/2013/feb/19/security/>`__"
msgstr ""
"Serangan berdasarkan-masukan terhadap pustaka XML Python. `Full description "
"<https://www.djangoproject.com/weblog/2013/feb/19/security/>`__"

msgid "Django 1.3 :commit:`(patch) <d19a27066b2247102e65412aa66917aff0091112>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <1c60d07ba23e0350351c278ad28d0bd5aa410b40>`"
msgstr ""

msgid "February 19, 2013 - No CVE"
msgstr "Februari 19, 2013 - No CVE"

msgid ""
"Additional hardening of ``Host`` header handling. `Full description <https://"
"www.djangoproject.com/weblog/2013/feb/19/security/>`__"
msgstr ""
"Tambahan pengerasan dari penanganan kepala ``Host``. `Full description "
"<https://www.djangoproject.com/weblog/2013/feb/19/security/>`__"

msgid "Django 1.3 :commit:`(patch) <27cd872e6e36a81d0bb6f5b8765a1705fecfc253>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <9936fdb11d0bbf0bd242f259bfb97bbf849d16f8>`"
msgstr ""

msgid "December 10, 2012 - No CVE 2"
msgstr "Desember 10, 2012 - No CVE 2"

msgid ""
"Additional hardening of redirect validation. `Full description <https://www."
"djangoproject.com/weblog/2012/dec/10/security/>`__"
msgstr ""
"Tambahan pengerasan dari pengalihan pengesahan. `Full description <https://"
"www.djangoproject.com/weblog/2012/dec/10/security/>`__"

msgid ""
"Django 1.3: :commit:`(patch) <1515eb46daa0897ba5ad5f0a2db8969255f1b343>`"
msgstr ""

msgid ""
"Django 1.4: :commit:`(patch) <b2ae0a63aeec741f1e51bac9a95a27fd635f9652>`"
msgstr ""

msgid "December 10, 2012 - No CVE 1"
msgstr "Desember 10, 2012 - No CVE 1"

msgid ""
"Additional hardening of ``Host`` header handling. `Full description <https://"
"www.djangoproject.com/weblog/2012/dec/10/security/>`__"
msgstr ""
"Tambahan pengerasan dari penanganan kepala ``Host``. `Full description "
"<https://www.djangoproject.com/weblog/2012/dec/10/security/>`__"

msgid "Django 1.3 :commit:`(patch) <2da4ace0bc1bc1d79bf43b368cb857f6f0cd6b1b>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <319627c184e71ae267d6b7f000e293168c7b6e09>`"
msgstr ""

msgid "October 17, 2012 - :cve:`2012-4520`"
msgstr "17 Oktober 2012 - :cve:`2012-4520`"

msgid ""
"``Host`` header poisoning. `Full description <https://www.djangoproject.com/"
"weblog/2012/oct/17/security/>`__"
msgstr ""
"Peracunan kepala ``Host``. `Full description <https://www.djangoproject.com/"
"weblog/2012/oct/17/security/>`__"

msgid "Django 1.3 :commit:`(patch) <b45c377f8f488955e0c7069cad3f3dd21910b071>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <92d3430f12171f16f566c9050c40feefb830a4a3>`"
msgstr ""

msgid "July 30, 2012 - :cve:`2012-3444`"
msgstr "30 Juli 2012 - :cve:`2012-3444`"

msgid ""
"Denial-of-service via large image files. `Full description <https://www."
"djangoproject.com/weblog/2012/jul/30/security-releases-issued/>`__"
msgstr ""
"Denial-of-service melalui berkas-berkas gambar. `Full description <https://"
"www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/>`__"

msgid "Django 1.3 :commit:`(patch) <9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155>`"
msgstr ""

msgid "Django 1.4 :commit:`(patch) <da33d67181b53fe6cc737ac1220153814a1509f6>`"
msgstr ""

msgid "July 30, 2012 - :cve:`2012-3443`"
msgstr "30 Juli 2012 - :cve:`2012-3443`"

msgid ""
"Denial-of-service via compressed image files. `Full description <https://www."
"djangoproject.com/weblog/2012/jul/30/security-releases-issued/>`__"
msgstr ""
"Denial-of-service melalui berkas-berkas gambar termampatkan. `Full "
"description <https://www.djangoproject.com/weblog/2012/jul/30/security-"
"releases-issued/>`__"

msgid ""
"Django 1.3: :commit:`(patch) <b2eb4787a0fff9c9993b78be5c698e85108f3446>`"
msgstr ""

msgid ""
"Django 1.4: :commit:`(patch) <c14f325c4eef628bc7bfd8873c3a72aeb0219141>`"
msgstr ""

msgid "July 30, 2012 - :cve:`2012-3442`"
msgstr "30 Juli 2012 - :cve:`2012-3442`"

msgid ""
"XSS via failure to validate redirect scheme. `Full description <https://www."
"djangoproject.com/weblog/2012/jul/30/security-releases-issued/>`__"
msgstr ""
"XSS melalui kegagalan untuk mensahkan skema pengalihan. `Full description "
"<https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/"
">`__"

msgid ""
"Django 1.3: :commit:`(patch) <4dea4883e6c50d75f215a6b9bcbd95273f57c72d>`"
msgstr ""

msgid ""
"Django 1.4: :commit:`(patch) <e34685034b60be1112160e76091e5aee60149fa1>`"
msgstr ""

msgid "September 9, 2011 - :cve:`2011-4140`"
msgstr "9 September 2011 - :cve:`2011-4140`"

msgid ""
"Potential CSRF via ``Host`` header. `Full description <https://www."
"djangoproject.com/weblog/2011/sep/09/security-releases-issued/>`__"
msgstr ""
"Kemungkinan CSRF melalui kepala ``Host``. `Full description <https://www."
"djangoproject.com/weblog/2011/sep/09/security-releases-issued/>`__"

msgid "This notification was an advisory only, so no patches were issued."
msgstr "Pemberitahuan ini hanya saran, jadi tidak ada tambalan diterbitkan."

msgid "Django 1.2"
msgstr "Django 1.2"

msgid "Django 1.3"
msgstr "Django 1.3"

msgid "September 9, 2011 - :cve:`2011-4139`"
msgstr "9 September 2011 - :cve:`2011-4139`"

msgid ""
"``Host`` header cache poisoning. `Full description <https://www."
"djangoproject.com/weblog/2011/sep/09/security-releases-issued/>`__"
msgstr ""
"Peracunan cache kepala ``Host``. `Full description <https://www."
"djangoproject.com/weblog/2011/sep/09/security-releases-issued/>`__"

msgid "Django 1.2 :commit:`(patch) <c613af4d6485586c79d692b70a9acac429f3ca9d>`"
msgstr ""

msgid "Django 1.3 :commit:`(patch) <2f7fadc38efa58ac0a8f93f936b82332a199f396>`"
msgstr ""

msgid "September 9, 2011 - :cve:`2011-4138`"
msgstr "9 September 2011 - :cve:`2011-4138`"

msgid ""
"Information leakage/arbitrary request issuance via ``URLField."
"verify_exists``. `Full description <https://www.djangoproject.com/"
"weblog/2011/sep/09/security-releases-issued/>`__"
msgstr ""
"Pengeluaran permintaan kebocoran/berubah-ubah informasi melalui ``URLField."
"verify_exists``. `Full description <https://www.djangoproject.com/"
"weblog/2011/sep/09/security-releases-issued/>`__"

msgid ""
"Django 1.2: :commit:`(patch) <7268f8af86186518821d775c530d5558fd726930>`"
msgstr ""

msgid ""
"Django 1.3: :commit:`(patch) <1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0>`"
msgstr ""

msgid "September 9, 2011 - :cve:`2011-4137`"
msgstr "9 September 2011 - :cve:`2011-4137`"

msgid ""
"Denial-of-service via ``URLField.verify_exists``. `Full description <https://"
"www.djangoproject.com/weblog/2011/sep/09/security-releases-issued/>`__"
msgstr ""
"Denial-of-service melalui ``URLField.verify_exists``. `Full description "
"<https://www.djangoproject.com/weblog/2011/sep/09/security-releases-issued/"
">`__"

msgid "Django 1.2 :commit:`(patch) <7268f8af86186518821d775c530d5558fd726930>`"
msgstr ""

msgid "Django 1.3 :commit:`(patch) <1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0>`"
msgstr ""

msgid "September 9, 2011 - :cve:`2011-4136`"
msgstr "9 September 2011 - :cve:`2011-4136`"

msgid ""
"Session manipulation when using memory-cache-backed session. `Full "
"description <https://www.djangoproject.com/weblog/2011/sep/09/security-"
"releases-issued/>`__"
msgstr ""
"Manipulasi sesi ketika menggunakan sesi backend-cache-memori. `Full "
"description <https://www.djangoproject.com/weblog/2011/sep/09/security-"
"releases-issued/>`__"

msgid "Django 1.2 :commit:`(patch) <ac7c3a110f906e4dfed3a17451bf7fd9fcb81296>`"
msgstr ""

msgid "Django 1.3 :commit:`(patch) <fbe2eead2fa9d808658ca582241bcacb02618840>`"
msgstr ""

msgid "February 8, 2011 - :cve:`2011-0698`"
msgstr "8 Februari 2011 - :cve:`2011-0698`"

msgid ""
"Directory-traversal on Windows via incorrect path-separator handling. `Full "
"description <https://www.djangoproject.com/weblog/2011/feb/08/security/>`__"
msgstr ""
"Lintasan-direktori pada Windows melalui penanganan pemisah-jalur tidak "
"benar. `Full description <https://www.djangoproject.com/weblog/2011/feb/08/"
"security/>`__"

msgid "Django 1.1 :commit:`(patch) <570a32a047ea56265646217264b0d3dab1a14dbd>`"
msgstr ""

msgid "Django 1.2 :commit:`(patch) <194566480b15cf4e294d3f03ff587019b74044b2>`"
msgstr ""

msgid "February 8, 2011 - :cve:`2011-0697`"
msgstr "8 Februari 2011 - :cve:`2011-0697`"

msgid ""
"XSS via unsanitized names of uploaded files. `Full description <https://www."
"djangoproject.com/weblog/2011/feb/08/security/>`__"
msgstr ""
"XSS melalui nama-nama tidak dibersihkan dari berkas-berkas terunggah. `Full "
"description <https://www.djangoproject.com/weblog/2011/feb/08/security/>`__"

msgid "Django 1.1 :commit:`(patch) <1966786d2dde73e17f39cf340eb33fcb5d73904e>`"
msgstr ""

msgid "Django 1.2 :commit:`(patch) <1f814a9547842dcfabdae09573055984af9d3fab>`"
msgstr ""

msgid "February 8, 2011 - :cve:`2011-0696`"
msgstr "8 Februari 2011 - :cve:`2011-0696`"

msgid ""
"CSRF via forged HTTP headers. `Full description <https://www.djangoproject."
"com/weblog/2011/feb/08/security/>`__"
msgstr ""
"CSRF melalui kepala HTTP yang ditempa. `Full description <https://www."
"djangoproject.com/weblog/2011/feb/08/security/>`__"

msgid "Django 1.1 :commit:`(patch) <408c5c873ce1437c7eee9544ff279ecbad7e150a>`"
msgstr ""

msgid "Django 1.2 :commit:`(patch) <818e70344e7193f6ebc73c82ed574e6ce3c91afc>`"
msgstr ""

msgid "December 22, 2010 - :cve:`2010-4535`"
msgstr "22 Desember 2010 - :cve:`2010-4535`"

msgid ""
"Denial-of-service in password-reset mechanism. `Full description <https://"
"www.djangoproject.com/weblog/2010/dec/22/security/>`__"
msgstr ""
"Denial-of-service di mekanisme setel kembali-sandi. `Full description "
"<https://www.djangoproject.com/weblog/2010/dec/22/security/>`__"

msgid "Django 1.1 :commit:`(patch) <7f8dd9cbac074389af8d8fd235bf2cb657227b9a>`"
msgstr ""

msgid "Django 1.2 :commit:`(patch) <d5d8942a160685c403d381a279e72e09de5489a9>`"
msgstr ""

msgid "December 22, 2010 - :cve:`2010-4534`"
msgstr "22 Desember 2010 - :cve:`2010-4534`"

msgid ""
"Information leakage in administrative interface. `Full description <https://"
"www.djangoproject.com/weblog/2010/dec/22/security/>`__"
msgstr ""
"Kebocoran informasi di antarmuka administratif. `Full description <https://"
"www.djangoproject.com/weblog/2010/dec/22/security/>`__"

msgid "Django 1.1 :commit:`(patch) <17084839fd7e267da5729f2a27753322b9d415a0>`"
msgstr ""

msgid "Django 1.2 :commit:`(patch) <85207a245bf09fdebe486b4c7bbcb65300f2a693>`"
msgstr ""

msgid "September 8, 2010 - :cve:`2010-3082`"
msgstr "8 September 2010 - :cve:`2010-3082`"

msgid ""
"XSS via trusting unsafe cookie value. `Full description <https://www."
"djangoproject.com/weblog/2010/sep/08/security-release/>`__"
msgstr ""
"XSS melalui nilai kue tidak aman dipercaya. `Full description <https://www."
"djangoproject.com/weblog/2010/sep/08/security-release/>`__"

msgid "Django 1.2 :commit:`(patch) <7f84657b6b2243cc787bdb9f296710c8d13ad0bd>`"
msgstr ""

msgid "October 9, 2009 - :cve:`2009-3965`"
msgstr "9 Oktober 2009 - :cve:`2009-3965`"

msgid ""
"Denial-of-service via pathological regular expression performance. `Full "
"description <https://www.djangoproject.com/weblog/2009/oct/09/security/>`__"
msgstr ""
"Denial-of-service melalui penampilan pernyataan regular patologi. `Full "
"description <https://www.djangoproject.com/weblog/2009/oct/09/security/>`__"

msgid "Django 1.0 :commit:`(patch) <594a28a9044120bed58671dde8a805c9e0f6c79a>`"
msgstr ""

msgid "Django 1.1 :commit:`(patch) <e3e992e18b368fcd56aabafc1b5bf80a6e11b495>`"
msgstr ""

msgid "July 28, 2009 - :cve:`2009-2659`"
msgstr "28 Juli 2009 - :cve:`2009-2659`"

msgid ""
"Directory-traversal in development server media handler. `Full description "
"<https://www.djangoproject.com/weblog/2009/jul/28/security/>`__"
msgstr ""
"Lintasan-direktori dalam penangan media peladen pengembangan. `Full "
"description <https://www.djangoproject.com/weblog/2009/jul/28/security/>`__"

msgid ""
"Django 0.96 :commit:`(patch) <da85d76fd6ca846f3b0ff414e042ddb5e62e2e69>`"
msgstr ""

msgid "Django 1.0 :commit:`(patch) <df7f917b7f51ba969faa49d000ffc79572c5dcb4>`"
msgstr ""

msgid "September 2, 2008 - :cve:`2008-3909`"
msgstr "2 September 2008 - :cve:`2008-3909`"

msgid ""
"CSRF via preservation of POST data during admin login. `Full description "
"<https://www.djangoproject.com/weblog/2008/sep/02/security/>`__"
msgstr ""
"CSRF melalui pemeliharaan dari data POST selama masuk admin. `Full "
"description <https://www.djangoproject.com/weblog/2008/sep/02/security/>`__"

msgid ""
"Django 0.91 :commit:`(patch) <44debfeaa4473bd28872c735dd3d9afde6886752>`"
msgstr ""

msgid ""
"Django 0.95 :commit:`(patch) <aee48854a164382c655acb9f18b3c06c3d238e81>`"
msgstr ""

msgid ""
"Django 0.96 :commit:`(patch) <7e0972bded362bc4b851c109df2c8a6548481a8e>`"
msgstr ""

msgid "May 14, 2008 - :cve:`2008-2302`"
msgstr "14 mei 2008 - :cve:`2008-2302`"

msgid ""
"XSS via admin login redirect. `Full description <https://www.djangoproject."
"com/weblog/2008/may/14/security/>`__"
msgstr ""
"XSS melalui pengalihan masuk admin. `Full description <https://www."
"djangoproject.com/weblog/2008/may/14/security/>`__"

msgid ""
"Django 0.91 :commit:`(patch) <6e657e2c404a96e744748209e896d8a69c15fdf2>`"
msgstr ""

msgid ""
"Django 0.95 :commit:`(patch) <50ce7fb57d79e8940ccf6e2781f2f01df029b5c5>`"
msgstr ""

msgid ""
"Django 0.96 :commit:`(patch) <7791e5c050cebf86d868c5dab7092185b125fdc9>`"
msgstr ""

msgid "October 26, 2007 - :cve:`2007-5712`"
msgstr "26 Oktober 2007 - :cve:`2007-5712`"

msgid ""
"Denial-of-service via arbitrarily-large ``Accept-Language`` header. `Full "
"description <https://www.djangoproject.com/weblog/2007/oct/26/security-fix/"
">`__"
msgstr ""
"Denial-of-service melalui kepala ``Accept-Language`` besar-berubah-ubah. "
"`Full description <https://www.djangoproject.com/weblog/2007/oct/26/security-"
"fix/>`__ "

msgid ""
"Django 0.91 :commit:`(patch) <8bc36e726c9e8c75c681d3ad232df8e882aaac81>`"
msgstr ""

msgid ""
"Django 0.95 :commit:`(patch) <412ed22502e11c50dbfee854627594f0e7e2c234>`"
msgstr ""

msgid ""
"Django 0.96 :commit:`(patch) <7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f>`"
msgstr ""

msgid "Issues prior to Django's security process"
msgstr "Masalah-masalah pada sebelum pengolahan keamanan Django"

msgid ""
"Some security issues were handled before Django had a formalized security "
"process in use. For these, new releases may not have been issued at the time "
"and CVEs may not have been assigned."
msgstr ""
"Beberapa masalah keamanan ditangani sebelum Django telah menyusun pengolahan "
"keamanan yang digunakan. Untuk ini, terbitan baru mungkin tidak telah "
"dikeluarkan pada saat itu dan CVE mungkin tidak telah ditentukan."

msgid "January 21, 2007 - :cve:`2007-0405`"
msgstr "21 Januari 2007 - :cve:`2007-0405`"

msgid ""
"Apparent \"caching\" of authenticated user. `Full description <https://www."
"djangoproject.com/weblog/2007/jan/21/0951/>`__"
msgstr ""
"Kejelasan \"caching\" dari pengguna terautentifikasi. `Full description "
"<https://www.djangoproject.com/weblog/2007/jan/21/0951/>`__"

msgid ""
"Django 0.95 :commit:`(patch) <e89f0a65581f82a5740bfe989136cea75d09cd67>`"
msgstr ""

msgid "August 16, 2006 - :cve:`2007-0404`"
msgstr "16 Agustus 2006 - :cve:`2007-0404`"

msgid ""
"Filename validation issue in translation framework. `Full description "
"<https://www.djangoproject.com/weblog/2006/aug/16/compilemessages/>`__"
msgstr ""
"Masalah pengesahan nama berkas di terjemahan kerangka kerja. `Full "
"description <https://www.djangoproject.com/weblog/2006/aug/16/"
"compilemessages/>`__"

msgid ""
"Django 0.90 :commit:`(patch) <6eefa521be3c658dc0b38f8d62d52e9801e198ab>`"
msgstr ""

msgid ""
"Django 0.91 :commit:`(patch) <d31e39173c29537e6a1613278c93634c18a3206e>`"
msgstr ""

msgid ""
"Django 0.95 :commit:`(patch) <a132d411c6986418ee6c0edc331080aa792fee6e>` "
"(released January 21 2007)"
msgstr ""
